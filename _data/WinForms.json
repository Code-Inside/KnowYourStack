{"Data":{"GitHub":{"Issues":[{"Id":"667456302","IsPullRequest":true,"CreatedAt":"2020-07-29T00:06:33","Actor":"JeremyKuhne","Number":"3657","RawContent":null,"Title":"Fix rendering text with a transparent background","State":"open","Body":"`(Color)default` is not the same as `Color.Empty`. `Color.Empty` is used to determine that we should not be writing opaque. Adds regression test.\r\n\r\nThis change starts introducing another layer on the metafile parsing to allow accumulating state. It also adds additional records.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3657)","Url":"https://github.com/dotnet/winforms/pull/3657","RelatedDescription":"Open PR \"Fix rendering text with a transparent background\" (#3657)"},{"Id":"666947791","IsPullRequest":false,"CreatedAt":"2020-07-28T10:05:32","Actor":"John-Qiao","Number":"3656","RawContent":null,"Title":"Control text does not depend on the UI Language of the OS when changed form's Language property to the local language","State":"open","Body":"* .NET Core Version: \r\n5.0.100-rc.1.20377.13\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**More info:**\r\nIt's not a regression issue in .NET Core.\r\n\r\n**Problem description:**\r\n\r\nButton control shows the **Korean** text in the English language of the OS.\r\n![Actual](https://user-images.githubusercontent.com/45864985/88645578-d73f3f00-d0f6-11ea-8ac5-32339be80ef4.png)\r\n\r\n**Expected behavior:**\r\nButton control should shows the **English** text in the English language of the OS.\r\n![Expected](https://user-images.githubusercontent.com/45864985/88645582-da3a2f80-d0f6-11ea-8994-9cf2f946ab0c.png)\r\n\r\n**Minimal repro:**\r\n\r\n1. Launch the attached project in VS.\r\n2. Rebuild and run it.\r\n3. Observe the text in button control.\r\n[TestApp.zip](https://github.com/dotnet/winforms/files/4987221/TestApp.zip)\r\n![ReproSteps](https://user-images.githubusercontent.com/45864985/88652007-d90c0100-d0fc-11ea-82da-e074f669cc7a.gif)\r\n","Url":"https://github.com/dotnet/winforms/issues/3656","RelatedDescription":"Open issue \"Control text does not depend on the UI Language of the OS when changed form's Language property to the local language\" (#3656)"},{"Id":"665901586","IsPullRequest":true,"CreatedAt":"2020-07-28T07:58:48","Actor":"JeremyKuhne","Number":"3645","RawContent":null,"Title":"Add test code for parsing EMF","State":"closed","Body":"Adding infrastructure to allow dumping controls to emf and investigating the results. This will allow looking at how drawing actually occurs and potentially adding tests to validate that we draw the way we expect (right colors, lines, etc).\r\n\r\n- Add new relevant Interop defines.\r\n- Move existing dialog COLOR to Comdlg32.\r\n- Change a few enums to match normal pattern\r\n\r\nDelete POINT as it is equivalent to Point.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3645)","Url":"https://github.com/dotnet/winforms/pull/3645","RelatedDescription":"Closed or merged PR \"Add test code for parsing EMF\" (#3645)"},{"Id":"666134260","IsPullRequest":false,"CreatedAt":"2020-07-28T07:53:08","Actor":"Jessie-Zhang01","Number":"3649","RawContent":null,"Title":"The information in the warning dialog is different from the .Net Framework when the EnableRaisingEvents property of FileSystemWatcher is changed to true","State":"closed","Body":"* .NET Core Version: \r\n.Net 5.0.100-rc.1.20376.1 from 5.0 master branch\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Minimal repro:**\r\n\r\n1. Open the attached ‘[WindowsFormsApp5.zip](https://github.com/dotnet/winforms/files/4980950/WindowsFormsApp5.zip)’ application in VS, then build and run it.\r\n2. Change the EnableRaisingEvents property to true.\r\n3. A warning dialog will pop-up, then click the \"Details\" button.\r\n4. Observe the information in the details.\r\n5. Click the \"OK\" button and observe whether the EnableRaisingEvents property is changed to true.\r\n\r\n**Expected behavior:**\r\nIn step4, the information in the warning dialog should be the same as .Net Framework.\r\nIn step5, the EnableRaisingEvents property should be changed to true.\r\n\r\n**Actual behavior:**\r\nIn step4, the information in the warning dialog is different from the .Net Framework.\r\n![image](https://user-images.githubusercontent.com/45864649/88522240-abee1e80-d028-11ea-8641-a50e8824cb28.png)\r\nIn step5, the EnableRaisingEvents property has not been changed to true.\r\n![Issue1](https://user-images.githubusercontent.com/45864649/88523335-5c105700-d02a-11ea-872f-abcd379a77df.gif)\r\n\r\nFramework project: [WindowsFormsApp6.zip](https://github.com/dotnet/winforms/files/4980954/WindowsFormsApp6.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/3649","RelatedDescription":"Closed issue \"The information in the warning dialog is different from the .Net Framework when the EnableRaisingEvents property of FileSystemWatcher is changed to true\" (#3649)"},{"Id":"664188256","IsPullRequest":true,"CreatedAt":"2020-07-28T04:41:10","Actor":"RussKie","Number":"3631","RawContent":null,"Title":"Add template for WinForms Control Library","State":"closed","Body":"Resolves #3608\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- local / manually\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3631)","Url":"https://github.com/dotnet/winforms/pull/3631","RelatedDescription":"Closed or merged PR \"Add template for WinForms Control Library\" (#3631)"},{"Id":"665901460","IsPullRequest":true,"CreatedAt":"2020-07-28T04:35:21","Actor":"JeremyKuhne","Number":"3644","RawContent":null,"Title":"Add caching for Pen/SoldBrush","State":"closed","Body":"Adds base classes and caches for System.Drawing pens and brushes. Signficantly reduces allocations for Graphics drawing.\r\n\r\n- Remove other instances of Brush/Pen caching\r\n- Write helpers to retain the orginal Color when finding nearest color (allowing existing caches to be used)\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3644)","Url":"https://github.com/dotnet/winforms/pull/3644","RelatedDescription":"Closed or merged PR \"Add caching for Pen/SoldBrush\" (#3644)"},{"Id":"666726705","IsPullRequest":false,"CreatedAt":"2020-07-28T03:35:38","Actor":"Amy-Li03","Number":"3655","RawContent":null,"Title":"Accessibility: The BoundingRectangle is incorrect when clicking the list & list item in inspect tree","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n.NET SDK 5.0.100-rc.1.20377.3\r\n\r\n* More Info: \r\nThis is not a regression issue, it also reproduce on .NET Core 3.1.\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**Problem description:**\r\nThe BoundingRectangle is incorrect, the yellow rectangle has gone out the boundary of form when clicking the \"Standard\" list below \"FlatStyle\" tree item in inspect tree.\r\n![Core](https://user-images.githubusercontent.com/62929087/88616361-90d1ec00-d0c6-11ea-86fe-5be7fc2427e8.png)\r\n\r\n**Expected behavior:**\r\n The yellow rectangle should surround the FlatStyle property.\r\n\r\n**Minimal repro:**\r\n1. Launch Inspect tool.\r\n2. Create WinForms app with PropertyGrid and Button control.\r\n3. Associate the Button with PropertyGrid as a selected object.\r\n4. Run the app.\r\n5. Click the \"Flat\" list item of FlatStyle property in inspect tree, then observe the BoundingRectangle.","Url":"https://github.com/dotnet/winforms/issues/3655","RelatedDescription":"Open issue \"Accessibility: The BoundingRectangle is incorrect when clicking the list & list item in inspect tree\" (#3655)"},{"Id":"666716459","IsPullRequest":false,"CreatedAt":"2020-07-28T03:05:42","Actor":"Amy-Li03","Number":"3654","RawContent":null,"Title":"Accessibility: The list item of comboBox incorrectly displayed in inspect tree when setting its DropDownStyle as DropDown or DropDownList.","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n.NET SDK 5.0.100-rc.1.20377.3\r\n\r\n* More Info:\r\nThis is not a regression issue, it also reproduce on .NET Core 3.1.\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\nWhen setting ComboBox's DropDownStyle as DropDown or DropDownList, the list item of comboBox doesn't display below Form1 window node, it incorrectly displayed below Desktop1 panel node.\r\n![Core](https://user-images.githubusercontent.com/62929087/88614276-fe2f4e00-d0c1-11ea-8f62-07c6a7702dcf.png)\r\n\r\n**Expected behavior:**\r\nThe list items of comboBox's UIA hierarchy should display below Form1 window node.\r\n![Framework](https://user-images.githubusercontent.com/62929087/88614281-012a3e80-d0c2-11ea-917b-cfaceaa212be.png)\r\n\r\n**Minimal repro:**\r\n1. Launch Inspect tool.\r\n2. Create WinForms core project with a comboBox control.\r\n3. Set the DropDownStyle property of comboBox as DropDown or DropDownList.\r\n4. Run the project.\r\n5. Focus on the list items of comboBox, then observe the UIA hierarchy in inspect tree.","Url":"https://github.com/dotnet/winforms/issues/3654","RelatedDescription":"Open issue \"Accessibility: The list item of comboBox incorrectly displayed in inspect tree when setting its DropDownStyle as DropDown or DropDownList.\" (#3654)"},{"Id":"666673497","IsPullRequest":true,"CreatedAt":"2020-07-28T02:12:12","Actor":"JeremyKuhne","Number":"3653","RawContent":null,"Title":"Add scope tracking","State":"closed","Body":"In debug builds makes scopes classes instead of ref structs so we can track when we fail to close scopes.\r\n\r\nFound a few places we were leaking and fixed them. Finally got annoyed enough to make CreateHBitmap16Bit not use native memory (as I had to change the HDC usage).\r\n\r\nSimplified some usings (for easier review when finding all references). Fixed a few comments as I walked through the callers. Also added a few more screen dc cache validation steps.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3653)","Url":"https://github.com/dotnet/winforms/pull/3653","RelatedDescription":"Closed or merged PR \"Add scope tracking\" (#3653)"},{"Id":"666642995","IsPullRequest":false,"CreatedAt":"2020-07-27T23:18:59","Actor":"elachlan","Number":"3652","RawContent":null,"Title":"Lexicographical order designer code","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nHistorically winforms designer code has been a bit of a pain when merging code changes. The ordering often seems random, although there is basic ordering to make sure dependencies work.\r\n\r\nThe current fix to avoid merge conflicts is to make sure developers don't make changes to designer files unnecessarily, and to make sure no body is working on forms/controls at the same time. This is obviously really unproductive.\r\n\r\n**Describe the solution you'd like and alternatives you've considered**\r\nMy suggestion is to add more smarts to the designer to make sure the ordering is consistent, lexicographical order seems the most appropriate. Obviously this will need to take into account dependencies as it currently does, but hopefully the random changes are reduce. Especially when opening the designer to \"view\" the form and making no changes.\r\n\r\nOther changes to reduce variability in generated code would also be welcome.\r\n\r\n**Will this feature affect UI controls?**\r\nYes.\r\n","Url":"https://github.com/dotnet/winforms/issues/3652","RelatedDescription":"Open issue \"Lexicographical order designer code\" (#3652)"},{"Id":"666462879","IsPullRequest":false,"CreatedAt":"2020-07-27T17:31:23","Actor":"JeremyKuhne","Number":"3651","RawContent":null,"Title":"API Proposal: Add span overloads to `TextRenderer`","State":"open","Body":"## Proposal\r\n\r\nWe should add span overloads to `TextRenderer` to allow for efficient text rendering. Fortunately the Win32 APIs in play here take a length so we can use span data directly- we've already refactored internally to use `ReadOnlySpan<char>`.\r\n\r\n``` C#\r\nnamespace System.Windows.Forms\r\n{\r\n    public sealed class TextRenderer\r\n    {\r\n        // Existing:\r\n        public static void DrawText(IDeviceContext dc, string text, Font font, Point pt, Color foreColor);\r\n        public static void DrawText(IDeviceContext dc, string text, Font font, Point pt, Color foreColor, Color backColor);\r\n        public static void DrawText(IDeviceContext dc, string text, Font font, Point pt, Color foreColor, Color backColor, TextFormatFlags flags);\r\n        public static void DrawText(IDeviceContext dc, string text, Font font, Point pt, Color foreColor, TextFormatFlags flags);\r\n        public static void DrawText(IDeviceContext dc, string text, Font font, Rectangle bounds, Color foreColor);\r\n        public static void DrawText(IDeviceContext dc, string text, Font font, Rectangle bounds, Color foreColor, Color backColor);\r\n        public static void DrawText(IDeviceContext dc, string text, Font font, Rectangle bounds, Color foreColor, Color backColor, TextFormatFlags flags);\r\n        public static void DrawText(IDeviceContext dc, string text, Font font, Rectangle bounds, Color foreColor, TextFormatFlags flags);\r\n        public static Size MeasureText(IDeviceContext dc, string text, Font font);\r\n        public static Size MeasureText(IDeviceContext dc, string text, Font font, Size proposedSize);\r\n        public static Size MeasureText(IDeviceContext dc, string text, Font font, Size proposedSize, TextFormatFlags flags);\r\n        public static Size MeasureText(string text, Font font);\r\n        public static Size MeasureText(string text, Font font, Size proposedSize);\r\n        public static Size MeasureText(string text, Font font, Size proposedSize, TextFormatFlags flags);\r\n\r\n        // 1-1 Proposal\r\n        // Note that backColor and proposedSize can't be defaulted as they are Color.Empty and Size(int.MaxValue, intMaxValue).\r\n        public static void DrawText(IDeviceContext dc, ReadOnlySpan<char> text, Font font, Point pt, Color foreColor);\r\n        public static void DrawText(IDeviceContext dc, ReadOnlySpan<char> text, Font font, Point pt, Color foreColor, Color backColor);\r\n        public static void DrawText(IDeviceContext dc, ReadOnlySpan<char> text, Font font, Point pt, Color foreColor, Color backColor, TextFormatFlags flags);\r\n        public static void DrawText(IDeviceContext dc, ReadOnlySpan<char> text, Font font, Point pt, Color foreColor, TextFormatFlags flags);\r\n        public static void DrawText(IDeviceContext dc, ReadOnlySpan<char> text, Font font, Rectangle bounds, Color foreColor);\r\n        public static void DrawText(IDeviceContext dc, ReadOnlySpan<char> text, Font font, Rectangle bounds, Color foreColor, Color backColor);\r\n        public static void DrawText(IDeviceContext dc, ReadOnlySpan<char> text, Font font, Rectangle bounds, Color foreColor, Color backColor, TextFormatFlags flags);\r\n        public static void DrawText(IDeviceContext dc, ReadOnlySpan<char> text, Font font, Rectangle bounds, Color foreColor, TextFormatFlags flags);\r\n        public static Size MeasureText(IDeviceContext dc, ReadOnlySpan<char> text, Font font);\r\n        public static Size MeasureText(IDeviceContext dc, ReadOnlySpan<char> text, Font font, Size proposedSize);\r\n        public static Size MeasureText(IDeviceContext dc, ReadOnlySpan<char> text, Font font, Size proposedSize, TextFormatFlags flags);\r\n        public static Size MeasureText(ReadOnlySpan<char> text, Font font);\r\n        public static Size MeasureText(ReadOnlySpan<char> text, Font font, Size proposedSize);\r\n        public static Size MeasureText(ReadOnlySpan<char> text, Font font, Size proposedSize, TextFormatFlags flags);\r\n    }\r\n}\r\n```\r\n\r\n## Justification\r\n\r\nDrawing and measuring text is a pretty common activity. This will allow significantly more efficient text rendering when new string allocations can be avoided (slicing other input, building off of a stack based character array, etc.). In conjunction with `IDeviceContext` on `PaintEventArgs` and other internal performance improvements, painting a string on a blank form can be done with < 15% of the allocations it used to take.\r\n\r\n## Implementation Details\r\n\r\nWe'll match throwing behavior of the original APIs. The original APIs did not throw for null or empty strings, they just no-op.","Url":"https://github.com/dotnet/winforms/issues/3651","RelatedDescription":"Open issue \"API Proposal: Add span overloads to `TextRenderer`\" (#3651)"},{"Id":"666134309","IsPullRequest":false,"CreatedAt":"2020-07-27T09:29:06","Actor":"Jessie-Zhang01","Number":"3650","RawContent":null,"Title":"No warning dialog pops up when changing the value of the NotifyFilter property of FileSystemWatcher","State":"open","Body":"* .NET Core Version: \r\n.Net 5.0.100-rc.1.20376.1 from 5.0 master branch\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**More Info:**\r\nIn the framework project, change the value of the NotifyFilter property from the Property browser, no warning box pops up.\r\nFramework project: [WindowsFormsApp6.zip](https://github.com/dotnet/winforms/files/4981019/WindowsFormsApp6.zip)\r\n\r\n\r\n**Minimal repro:**\r\n\r\n1. Open the attached ‘[WindowsFormsApp5.zip](https://github.com/dotnet/winforms/files/4981020/WindowsFormsApp5.zip)’ application in VS, then build and run it.\r\n2. Change the NotifyFilter property to FileName.\r\n\r\n\r\n**Expected behavior:**\r\nA warning dialog should pop up when changing the value of the NotifyFilter property.\r\nThe following screenshot is from the .Net framework PropertyGrid:\r\n![image](https://user-images.githubusercontent.com/45864649/88524187-99291900-d02b-11ea-89bb-9e00cbcdc42c.png)\r\n\r\n**Actual behavior:**\r\nNo warning dialog pop up when changing the value of the NotifyFilter property.\r\n![Issue2](https://user-images.githubusercontent.com/45864649/88524093-80b8fe80-d02b-11ea-9482-ccd10967df57.gif)\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/3650","RelatedDescription":"Open issue \"No warning dialog pops up when changing the value of the NotifyFilter property of FileSystemWatcher\" (#3650)"},{"Id":"666067267","IsPullRequest":true,"CreatedAt":"2020-07-27T09:06:16","Actor":"RussKie","Number":"3648","RawContent":null,"Title":"Disable flaky tests","State":"closed","Body":"Relates to #3647\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3648)","Url":"https://github.com/dotnet/winforms/pull/3648","RelatedDescription":"Closed or merged PR \"Disable flaky tests\" (#3648)"},{"Id":"666057873","IsPullRequest":false,"CreatedAt":"2020-07-27T07:29:10","Actor":"RussKie","Number":"3647","RawContent":null,"Title":"Flaky tests: `TextRenderer`-related tests randomly fail","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\nThe current master @ 5.0RC1\r\n\r\n\r\n**Problem description:**\r\n\r\nMultiple observed intermittent (yet persistent) failures that appear to be related to `TextRenderer` and device context (?):\r\n\r\n```\r\n    System.Windows.Forms.Tests.ButtonTests.Button_Text_SetCachedPreferredSize_Invalidates [FAIL]\r\n      Assert.Equal() Failure\r\n      Expected: {Width=66, Height=24}\r\n      Actual:   {Width=79, Height=24}\r\n      Stack Trace:\r\n        /_/src/System.Windows.Forms/tests/UnitTests/System/Windows/Forms/ButtonTests.cs(954,0): at System.Windows.Forms.Tests.ButtonTests.Button_Text_SetCachedPreferredSize_Invalidates()\r\n```\r\n```\r\n    System.Windows.Forms.Tests.TextRendererTests.TextRenderer_MeasureText_InvokeStringFontSizeTextFormatFlags_ReturnsExpected(text: \"string\", font: [Font: Name=Segoe UI, Size=9, Units=3, GdiCharSet=1, GdiVerticalFont=False], proposedSize: {Width=100, Height=200}, flags: RightToLeft) [FAIL]\r\n      Assert.Equal() Failure\r\n      Expected: {Width=44, Height=16}\r\n      Actual:   {Width=37, Height=15}\r\n      Stack Trace:\r\n        /_/src/System.Windows.Forms/tests/UnitTests/System/Windows/Forms/TextRendererTests.cs(487,0): at System.Windows.Forms.Tests.TextRendererTests.TextRenderer_MeasureText_InvokeStringFontSizeTextFormatFlags_ReturnsExpected(String text, Font font, Size proposedSize, TextFormatFlags flags)\r\n```\r\n```\r\n    System.Windows.Forms.Tests.TextRendererTests.TextRenderer_MeasureText_InvokeIDeviceContextStringFontSize_ReturnsExpected(text: \"string\", font: null, proposedSize: {Width=100, Height=200}) [FAIL]\r\n      Assert.Equal() Failure\r\n      Expected: {Width=44, Height=16}\r\n      Actual:   {Width=37, Height=16}\r\n      Stack Trace:\r\n        /_/src/System.Windows.Forms/tests/UnitTests/System/Windows/Forms/TextRendererTests.cs(515,0): at System.Windows.Forms.Tests.TextRendererTests.TextRenderer_MeasureText_InvokeIDeviceContextStringFontSize_ReturnsExpected(String text, Font font, Size proposedSize)\r\n```\r\n```\r\n    System.Windows.Forms.Tests.ButtonTests.Button_GetPreferredSize_InvokeSystemGrowOnlyWithText_ReturnsExpected(proposedSize: {Width=1, Height=1}) [FAIL]\r\n      Assert.Equal() Failure\r\n      Expected: {Width=75, Height=30}\r\n      Actual:   {Width=75, Height=31}\r\n      Stack Trace:\r\n        /_/src/System.Windows.Forms/tests/UnitTests/System/Windows/Forms/ButtonTests.cs(1247,0): at System.Windows.Forms.Tests.ButtonTests.Button_GetPreferredSize_InvokeSystemGrowOnlyWithText_ReturnsExpected(Size proposedSize)\r\n```\r\n\r\n\r\nThe current hypothesis is that DC may somehow be dirtied that causes tests to fail.\r\nFor example, builds for https://github.com/dotnet/winforms/pull/3417 have [failed multiple times](https://dev.azure.com/dnceng/public/_build/results?buildId=746070&view=results) (all in Release), but once I have disabled `ScreenDcCache` in https://github.com/dotnet/winforms/commit/e1539274efdc8c16b90093e322ce81d2709acc02 builds succeeded.\r\n","Url":"https://github.com/dotnet/winforms/issues/3647","RelatedDescription":"Open issue \"Flaky tests: `TextRenderer`-related tests randomly fail\" (#3647)"},{"Id":"665944862","IsPullRequest":false,"CreatedAt":"2020-07-27T03:19:54","Actor":"Vino-Wang","Number":"3646","RawContent":null,"Title":"[Accessibility] Screenreader does not read the GroupBox text with the radio button, label and edit fields(Orientation and Margins)","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n* Original [Bug 1159122](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1159122?src=WorkItemMention&src-action=artifact_link)\r\n\r\n* .NET Core Version: \r\n5.0.100-preview.8.20373.19\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n<!-- Yes / No -->\r\n\r\n**More info:**\r\nThis issue cannot reproduce with the standalone GroupBox with radio button, label and textbox controls added into it. \r\n[Standalone_NotRepro.zip](https://github.com/dotnet/winforms/files/4979752/Standalone_NotRepro.zip)\r\n\r\n**Problem description:**\r\nScreenreader user unable to get the radio button and edit field related to which group.\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n![PageSetup](https://user-images.githubusercontent.com/18568603/88499992-26537a00-cffa-11ea-8a40-072d0aa29955.png)\r\n\r\n**Expected behavior:**\r\nScreenreader should read the groupBox text with the Portrait, Landscape, Left, Right.\r\n![Standalone_Core](https://user-images.githubusercontent.com/18568603/88500008-30757880-cffa-11ea-9f58-fdd90c2dc063.png)\r\n\r\n**Minimal repro:**\r\n1.\tRun the attached project. [PageSetup.zip](https://github.com/dotnet/winforms/files/4979750/PageSetup.zip)\r\n2.\tClick the Setting button.\r\n3.\tLaunch the Screenreader/Narrator tool.\r\n4.\tNavigate to the Orientation and Margins groupbox.\r\n","Url":"https://github.com/dotnet/winforms/issues/3646","RelatedDescription":"Open issue \"[Accessibility] Screenreader does not read the GroupBox text with the radio button, label and edit fields(Orientation and Margins)\" (#3646)"},{"Id":"665540521","IsPullRequest":true,"CreatedAt":"2020-07-25T08:06:08","Actor":"gpetrou","Number":"3643","RawContent":null,"Title":"Use generic lists in DataObject","State":"open","Body":"## Proposed changes\r\n\r\n- Use generic lists in DataObject.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3643)","Url":"https://github.com/dotnet/winforms/pull/3643","RelatedDescription":"Open PR \"Use generic lists in DataObject\" (#3643)"},{"Id":"664831045","IsPullRequest":true,"CreatedAt":"2020-07-25T01:32:59","Actor":"JeremyKuhne","Number":"3635","RawContent":null,"Title":"Don't double apply Graphics transform","State":"closed","Body":"Grid entry text was being shifted out of the control window as we were applying the Graphics transform manually when the centralized code now does this for us.\r\n\r\nThis change no longer double applies and changes the code to use TextRenderer, removing the local HFONT caching.\r\n\r\nAlso fix GroupBox to use FillRect instead of Rectangle. Remove an uncalled overload for Rectangle.\r\n\r\nFixes #3580\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3635)","Url":"https://github.com/dotnet/winforms/pull/3635","RelatedDescription":"Closed or merged PR \"Don't double apply Graphics transform\" (#3635)"},{"Id":"665483844","IsPullRequest":false,"CreatedAt":"2020-07-25T00:51:21","Actor":"DragoonAethis","Number":"3642","RawContent":null,"Title":"TextBox.PlaceholderText uses BackColor even when TextBox.Enabled = false","State":"open","Body":"* .NET Core Version: 3.1.6\r\n* Have you experienced this same bug with .NET Framework?: No (PlaceholderText not available)\r\n* Visual Studio version: 2019 16.7 Preview 5\r\n\r\n**Problem description:**\r\n\r\nWhen PlaceholderText is set and displayed, it's always drawn with the BackColor as the background, regardless of the Enabled value. This causes minor graphical issues as presented below.\r\n\r\n![image](https://user-images.githubusercontent.com/1546665/88445020-56472580-ce20-11ea-8c81-ef1983395eff.png)\r\n\r\nThe issue is most likely [here](https://github.com/dotnet/winforms/blob/b12ba3357e6f2246b5af3c506b8b6e05b8ce1cae/src/System.Windows.Forms/src/System/Windows/Forms/TextBox.cs#L900) - renderer for the Text itself [draws the appropriate background color first, then the text without any background](https://github.com/dotnet/winforms/blob/b12ba3357e6f2246b5af3c506b8b6e05b8ce1cae/src/System.Windows.Forms/src/System/Windows/Forms/TextBoxRenderer.cs#L91).\r\n\r\n**Expected behavior:**\r\n\r\nWhen PlaceholderText is set and TextBox is disabled, the background color is rendered properly across the entire control.\r\n\r\n**Minimal repro:**\r\n\r\n```csharp\r\nusing System;\r\nusing System.Drawing;\r\nusing System.Windows.Forms;\r\n\r\nnamespace BrokenPlaceholder {\r\n    class PlaceholderForm : Form {\r\n        private TextBox textBox1;\r\n        private TextBox textBox2;\r\n        private TextBox textBox3;\r\n\r\n        public PlaceholderForm() {\r\n            SuspendLayout();\r\n\r\n            textBox1 = new TextBox {\r\n                Name = \"textBox1\",\r\n                Size = new Size(226, 23),\r\n                Location = new Point(33, 25),\r\n                Text = \"Some perfectly fine Text\"\r\n            };\r\n\r\n            textBox2 = new TextBox {\r\n                Name = \"textBox2\",\r\n                Size = new Size(226, 23),\r\n                Location = new Point(33, 54),\r\n                PlaceholderText = \"PlaceholderText\"\r\n            };\r\n\r\n            textBox3 = new TextBox {\r\n                Name = \"textBox3\",\r\n                Size = new Size(226, 23),\r\n                Location = new Point(33, 83),\r\n                PlaceholderText = \"Disabled PlaceholderText\",\r\n                Enabled = false\r\n            };\r\n\r\n            ClientSize = new Size(293, 138);\r\n            Controls.Add(this.textBox1);\r\n            Controls.Add(this.textBox2);\r\n            Controls.Add(this.textBox3);\r\n            Name = \"PlaceholderForm\";\r\n            Text = \"PlaceholderForm\";\r\n            ResumeLayout(false);\r\n\r\n            PerformLayout();\r\n        }\r\n    }\r\n\r\n    static class Program {\r\n        [STAThread]\r\n        static void Main() {\r\n            Application.SetHighDpiMode(HighDpiMode.SystemAware);\r\n            Application.EnableVisualStyles();\r\n            Application.SetCompatibleTextRenderingDefault(false);\r\n            Application.Run(new PlaceholderForm());\r\n        }\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/winforms/issues/3642","RelatedDescription":"Open issue \"TextBox.PlaceholderText uses BackColor even when TextBox.Enabled = false\" (#3642)"},{"Id":"665124881","IsPullRequest":true,"CreatedAt":"2020-07-24T12:37:36","Actor":"dotnet-maestro[bot]","Number":"3641","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200721.13\r\n- **Date Produced**: 7/22/2020 6:41 AM\r\n- **Commit**: d8cf13e0ba9b369a15a83472b6b97463c6d07fe2\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **System.Diagnostics.EventLog**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **System.Diagnostics.PerformanceCounter**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **System.DirectoryServices**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **System.Drawing.Common**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **System.IO.FileSystem.AccessControl**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **System.IO.Packaging**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **System.CodeDom**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **Microsoft.NETCore.App**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **Microsoft.NETCore.ILDAsm**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **Microsoft.NETCore.Targets**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **Microsoft.NETCore.App.Internal**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **Microsoft.NETCore.App.Ref**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **System.IO.Pipes.AccessControl**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **System.Windows.Extensions**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **System.Reflection.MetadataLoadContext**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **System.Resources.Extensions**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **System.Security.AccessControl**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **System.Security.Cryptography.Pkcs**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **System.Security.Cryptography.ProtectedData**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **System.Security.Cryptography.Xml**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **System.Security.Permissions**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **System.Security.Principal.Windows**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **System.Text.Encodings.Web**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **System.Text.Json**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n  - **System.Threading.AccessControl**: from 5.0.0-rc.1.20370.4 to 5.0.0-rc.1.20371.13\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3641)","Url":"https://github.com/dotnet/winforms/pull/3641","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3641)"},{"Id":"665011065","IsPullRequest":false,"CreatedAt":"2020-07-24T08:37:15","Actor":"Marie-Shi","Number":"3640","RawContent":null,"Title":"[Accessibility]Narrator's blue cursor cannot move when entering characters into the RichTextBox/ComboBox in RTL environment","State":"open","Body":"* .NET Core Version: \r\n.Net 5.0.100-rc.1.20373.1 from master branch + latest master VS2019 with latest core designer\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**More info:**\r\n1.\tThis issue cannot repro in LTR environment.\r\n2.\tWhen using left/right arrows, it also cannot focus on every letter.\r\n\r\n**Steps to reproduce:**\r\n1.\tExtract “Private_1588_RTL.zip” and open in in VS, then build and run this application.\r\n[Private_1588_RTL.zip](https://github.com/dotnet/winforms/files/4970937/Private_1588_RTL.zip)\r\n2.\tStart Narrator and focus on RichTextBox/ComboBox, input characters into them and observe Narrator blue cursor.\r\n\r\n**Actual behavior:**\r\nNarrator's blue cursor cannot move when entering characters into the RichTextBox/ComboBox in RTL environment.\r\n![New_issue1](https://user-images.githubusercontent.com/45864017/88374022-87493b00-cdcb-11ea-963d-e2c80be107a1.gif)\r\n\r\n**Expected behavior:**\r\nNarrator's blue cursor can move when entering characters into the RichTextBox/ComboBox in RTL environment. The behavior should be like in LTR.\r\n![Untitled](https://user-images.githubusercontent.com/45864017/88374091-b6f84300-cdcb-11ea-98b8-2b3a6b57f543.png)","Url":"https://github.com/dotnet/winforms/issues/3640","RelatedDescription":"Open issue \"[Accessibility]Narrator's blue cursor cannot move when entering characters into the RichTextBox/ComboBox in RTL environment\" (#3640)"},{"Id":"665002671","IsPullRequest":false,"CreatedAt":"2020-07-24T08:25:50","Actor":"Olina-Zhang","Number":"3639","RawContent":null,"Title":"Some properties are grey with black rectangle in Properties window after choosing more controls","State":"open","Body":"* .NET Core Version: \r\n5.0.100-rc.1.20373.1\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n No\r\n\r\n**Problem description:**\r\nSome properties are grey with black rectangle in Properties window after choosing more controls. Please see following screenshot:\r\n**This is a regression issue.** It cannot repro .Net 5.0 SDK build: 5.0.100-rc.1.20371.1\r\n![image](https://user-images.githubusercontent.com/26474449/88373072-bc548e00-cdc9-11ea-8df2-6b462c448218.png)\r\n\r\n**Expected behavior:**\r\nThey are enabled properties after choosing more controls. Please see following screenshot:\r\n![image](https://user-images.githubusercontent.com/26474449/88373191-f887ee80-cdc9-11ea-8299-9eb365155e21.png)\r\n\r\n**Minimal repro:**\r\n1. Create a WinForms .Net Core application\r\n2. Add a button and a checkedListBox to form designer\r\n3. Choose these 2 controls, then go to VS properties window to observe all properties\r\nIf properties window is blank, close it and re-open","Url":"https://github.com/dotnet/winforms/issues/3639","RelatedDescription":"Open issue \"Some properties are grey with black rectangle in Properties window after choosing more controls\" (#3639)"},{"Id":"664976191","IsPullRequest":false,"CreatedAt":"2020-07-24T07:34:38","Actor":"Vino-Wang","Number":"3638","RawContent":null,"Title":"VS crash and restart after clicking the smart tag of ImageList/ContextMenuStrip controls in Component Tray ","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n5.0.100-rc1.20373.1\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n<!-- Yes / No -->\r\n\r\n**More info:**\r\n1.\tThis is a regression issue of .NET5.0 5.0.100-rc1.20373.1, it cannot reproducing with 5.0.100-rc.1.20371.1 build and .NET Core 3.1 version.\r\n2.\tThis issue cannot reproduce with NotifyIcon control.\r\n\r\n**Problem description:**\r\nUser try to show the Tasks dialog to modify some properties using smart tag, but VS crash and restart after clicking the smart tag button.\r\n![Crash](https://user-images.githubusercontent.com/18568603/88369600-f8d0bb80-cdc2-11ea-8a36-271c47aba2a7.gif)\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n**Expected behavior:**\r\nThe Tasks dialog should be shown normally and VS shouldn’t crash.\r\n![Expected](https://user-images.githubusercontent.com/18568603/88369429-97105180-cdc2-11ea-92a1-be3128a8265c.png)\r\n\r\n**Minimal repro:**\r\n1.\tCreate a winforms core project.\r\n2.\tDrag and drop a ImageList control\r\n3.\tClick the smart tag of it in Component tray.","Url":"https://github.com/dotnet/winforms/issues/3638","RelatedDescription":"Open issue \"VS crash and restart after clicking the smart tag of ImageList/ContextMenuStrip controls in Component Tray \" (#3638)"},{"Id":"664963936","IsPullRequest":false,"CreatedAt":"2020-07-24T07:06:56","Actor":"Vino-Wang","Number":"3637","RawContent":null,"Title":"An error pops up after clicking the smart tag of ToolStrip/MenuStrip/StatusStrip/TreeView/PictureBox controls","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n5.0.100-rc1.20373.1\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n<!-- Yes / No -->\r\n**More info:**\r\nThis is a regression issue of .NET5.0 5.0.100-rc1.20373.1, it cannot reproducing with 5.0.100-rc.1.20371.1 build and .NET Core 3.1 version.\r\n\r\n**Problem description:**\r\nUser try to show the Tasks dialog to modify some properties using smart tag, but an error pops up after clicking the smart tag button.\r\n\r\n![Actual](https://user-images.githubusercontent.com/18568603/88367764-2451a700-cdbf-11ea-8a24-3f6614bc169b.png)\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n**Expected behavior:**\r\nThe Controls' Tasks dialog should be shown normally.\r\n![Expected](https://user-images.githubusercontent.com/18568603/88367780-2ddb0f00-cdbf-11ea-92ca-0b96b8fb50bc.png)\r\n\r\n**Minimal repro:**\r\n1.\tCreate a winforms core project.\r\n2.\tDrag and drop a ToolStrip control to form designer.\r\n3.\tClick the smart tag in the top right corner of the ToolStrip control.\r\n","Url":"https://github.com/dotnet/winforms/issues/3637","RelatedDescription":"Open issue \"An error pops up after clicking the smart tag of ToolStrip/MenuStrip/StatusStrip/TreeView/PictureBox controls\" (#3637)"},{"Id":"664948088","IsPullRequest":false,"CreatedAt":"2020-07-24T06:29:21","Actor":"Olina-Zhang","Number":"3636","RawContent":null,"Title":"Properties window is blank","State":"open","Body":"* .NET Core Version: \r\n5.0.100-rc.1.20373.1\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\nProperties window is blank, we cannot see any properties for form or added controls, and no properties and events toolbar in Properties window.\r\n**This is a regression issue**. It cannot repro .Net 5.0 SDK build: 5.0.100-rc.1.20371.1\r\n![image](https://user-images.githubusercontent.com/26474449/88374127-cd060380-cdcb-11ea-92a4-3030a4fb1db2.png)\r\n\r\n**Expected behavior:**\r\nAll properties and events are in Properties window\r\n![image](https://user-images.githubusercontent.com/26474449/88374167-de4f1000-cdcb-11ea-8eba-427f9de52512.png)\r\n\r\n**Minimal repro:**\r\nThe repro step is very simple, just create an empty app \r\n1.\tCreate a WinForms .Net Core application\r\n2.\tFocus on Form designer, and go to Properties window or press F4\r\n3.\tObserve Properties window\r\n","Url":"https://github.com/dotnet/winforms/issues/3636","RelatedDescription":"Open issue \"Properties window is blank\" (#3636)"},{"Id":"664695144","IsPullRequest":false,"CreatedAt":"2020-07-23T18:53:10","Actor":"vladimir-krestov","Number":"3634","RawContent":null,"Title":"Periodic NRE in GdiCache.GetHFONT method","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: 5.0\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**Problem description:**\r\n- We can get `NullReferenceException` sometimes (about 10-15% chance) in `GdiCache.GetHFONT` method. (**`s_fontCache`** is null)\r\n![image](https://user-images.githubusercontent.com/49272759/88325491-de003780-cd2d-11ea-876f-a9937edd0539.png)\r\n\r\n- It seems this method is called before **`s_fontCache`** initializing in `ScreenDcCache`.\r\n![image](https://user-images.githubusercontent.com/49272759/88325715-05ef9b00-cd2e-11ea-946b-92aacad2de0a.png)\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n\r\n**Expected behavior:**\r\n- There are no NREs\r\n\r\n**Minimal repro:**\r\n- Run Inspect (The issue reproduces only if inspect is already running)\r\n- Run the internal WindowsControlsTest project\r\n- Get NRE sometimes before loading the main test form","Url":"https://github.com/dotnet/winforms/issues/3634","RelatedDescription":"Open issue \"Periodic NRE in GdiCache.GetHFONT method\" (#3634)"},{"Id":"664434680","IsPullRequest":true,"CreatedAt":"2020-07-23T12:32:15","Actor":"RussKie","Number":"3633","RawContent":null,"Title":"Enable RemoteExecutor tests","State":"open","Body":"Resolves https://github.com/dotnet/arcade/issues/5325\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3633)","Url":"https://github.com/dotnet/winforms/pull/3633","RelatedDescription":"Open PR \"Enable RemoteExecutor tests\" (#3633)"},{"Id":"664417569","IsPullRequest":false,"CreatedAt":"2020-07-23T12:02:34","Actor":"RussKie","Number":"3632","RawContent":null,"Title":"RichTextBox no longer renders links","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n\r\n* .NET Core Version: \r\n   - .NET Core 3.1 - doesn't\r\n   - .NET 5.0 RC1 - doesn't\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n    - .NET 4.6.1 - **works**\r\n    - .NET 4.7.2+ - doesn't\r\n\r\nThis is blocking a [migration of Git Extensions to .NET Core / .NET 5.0](https://github.com/gitextensions/gitextensions/pull/7162).\r\n\r\n**Problem description:**\r\n\r\n`RichTextBox` control doesn't respond to `EM_SETCHARFORMAT` with `lParam: SCF_SELECTION, wParam: CHARFORMAT2W(dwMask: CFM.LINK, dwEffects: CFE.LINK)`.\r\n\r\nThe text put in the RTB is as follows:\r\n```\r\n\"Related links: <a href='https://github.com/gitextensions/gitextensions/commit/2c0698453e29dc243bfbc817ef74581c0cbfc830'>View on GitHub</a>, <a href='https://github.com/gitextensions/gitextensions/issues/8333'>Issue 8333</a>\"\r\n```\r\n\r\n* .NET 4.6.1:\r\n    ![image](https://user-images.githubusercontent.com/4403806/88283735-5e736800-cd2f-11ea-9ab4-6453970293a5.png)\r\n* .NET 4.7.2:\r\n    ![image](https://user-images.githubusercontent.com/4403806/88283770-6f23de00-cd2f-11ea-8f2c-4e88eda6a76a.png)\r\n* .NET 5.0:\r\n    ![image](https://user-images.githubusercontent.com/4403806/88283831-911d6080-cd2f-11ea-88f8-c586d3422438.png)\r\n\r\nAs pointed in https://github.com/dotnet/winforms/issues/3399#issuecomment-661024452 in .NET 4.7.2 there was a change of version of the underlying native control (i.e. RichEdit 4.1 from Msftedit.dll), which is probably the underlying reason of the problem.\r\n\r\n**Minimal repro:**\r\n\r\n[ge-rtb-links.zip](https://github.com/dotnet/winforms/files/4965681/ge-rtb-links.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/3632","RelatedDescription":"Open issue \"RichTextBox no longer renders links\" (#3632)"},{"Id":"664048461","IsPullRequest":false,"CreatedAt":"2020-07-22T21:02:55","Actor":"RussKie","Number":"3630","RawContent":null,"Title":"`DeviceContextExtensions.CreateGraphics` results in `System.OutOfMemoryException`","State":"open","Body":"Observed in https://dev.azure.com/dnceng/public/_build/results?buildId=741547&view=results\r\n\r\n**Problem description:**\r\n\r\n```\r\n    System.Windows.Forms.Tests.RadioButtonTests.RadioButton_OnMouseUp_InvokeMouseDown_CallsMouseUp(flatStyle: Flat, eventArgs: HandledMouseEventArgs { Button = Left, Clicks = 1, Delta = 4, Handled = False, Location = {X=2,Y=3}, ... }, expectedIsHandleCreated: True) [FAIL]\r\n      System.OutOfMemoryException : Out of memory.\r\n      Stack Trace:\r\n           at System.Drawing.SafeNativeMethods.Gdip.CheckStatus(Int32 status)\r\n           at System.Drawing.Graphics.FromHdcInternal(IntPtr hdc)\r\n        /_/src/System.Windows.Forms.Primitives/src/System/Windows/Forms/DeviceContextExtensions.cs(110,0): at System.Windows.Forms.DeviceContextExtensions.CreateGraphics(HDC hdc)\r\n        /_/src/System.Windows.Forms/src/System/Windows/Forms/Internal/GdiCache.ScreenGraphicsScope.cs(23,0): at System.Windows.Forms.GdiCache.ScreenGraphicsScope..ctor(ScreenDcScope& scope)\r\n        /_/src/System.Windows.Forms/src/System/Windows/Forms/Internal/GdiCache.cs(45,0): at System.Windows.Forms.GdiCache.GetScreenDCGraphics()\r\n        /_/src/System.Windows.Forms/src/System/Windows/Forms/ButtonInternal/ButtonBaseAdapter.cs(1364,0): at System.Windows.Forms.ButtonInternal.ButtonBaseAdapter.LayoutOptions.GetTextSize(Size proposedSize)\r\n        /_/src/System.Windows.Forms/src/System/Windows/Forms/ButtonInternal/ButtonBaseAdapter.cs(1217,0): at System.Windows.Forms.ButtonInternal.ButtonBaseAdapter.LayoutOptions.LayoutTextAndImage(LayoutData layout)\r\n        /_/src/System.Windows.Forms/src/System/Windows/Forms/ButtonInternal/ButtonBaseAdapter.cs(990,0): at System.Windows.Forms.ButtonInternal.ButtonBaseAdapter.LayoutOptions.Layout()\r\n        /_/src/System.Windows.Forms/src/System/Windows/Forms/RadioButton.cs(342,0): at System.Windows.Forms.RadioButton.get_DownChangeRectangle()\r\n        /_/src/System.Windows.Forms/src/System/Windows/Forms/ButtonBase.cs(913,0): at System.Windows.Forms.ButtonBase.OnMouseDown(MouseEventArgs mevent)\r\n        /_/src/System.Windows.Forms/tests/UnitTests/System/Windows/Forms/RadioButtonTests.cs(1474,0): at System.Windows.Forms.Tests.RadioButtonTests.SubRadioButton.OnMouseDown(MouseEventArgs eventargs)\r\n        /_/src/System.Windows.Forms/tests/UnitTests/System/Windows/Forms/RadioButtonTests.cs(984,0): at System.Windows.Forms.Tests.RadioButtonTests.RadioButton_OnMouseUp_InvokeMouseDown_CallsMouseUp(FlatStyle flatStyle, MouseEventArgs eventArgs, Boolean expectedIsHandleCreated)\r\n```\r\n","Url":"https://github.com/dotnet/winforms/issues/3630","RelatedDescription":"Open issue \"`DeviceContextExtensions.CreateGraphics` results in `System.OutOfMemoryException`\" (#3630)"},{"Id":"663926483","IsPullRequest":true,"CreatedAt":"2020-07-22T17:48:31","Actor":"JeremyKuhne","Number":"3629","RawContent":null,"Title":"Set the color when drawing text in CheckedListBox.","State":"closed","Body":"Didn't actually set a color for the GDI case. Add an assert to FillRectangle to try and flush out this sort of mistake earlier.\r\n\r\nFixes #3628\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3629)","Url":"https://github.com/dotnet/winforms/pull/3629","RelatedDescription":"Closed or merged PR \"Set the color when drawing text in CheckedListBox.\" (#3629)"},{"Id":"663727882","IsPullRequest":false,"CreatedAt":"2020-07-22T17:48:31","Actor":"vladimir-krestov","Number":"3628","RawContent":null,"Title":"[Regression] CheckedListBox selected item has an incorrect color","State":"closed","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n* Regression from a6a308fa452770caafca55ee4d8ac54d1ee1015d\r\n* .NET Core Version: 5.0\r\n* Have you experienced this same bug with .NET Framework?: No\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\n- If to select some CheckedListBox item it will have an incorrect background color.\r\n![image](https://user-images.githubusercontent.com/49272759/88175999-5207e600-cc2f-11ea-92de-6ec9e61e3c35.png)\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n\r\n**Expected behavior:**\r\n- CheckedListBox selected item has a color as before\r\n![image](https://user-images.githubusercontent.com/49272759/88176472-00139000-cc30-11ea-978f-bf3e2f8fe926.png)\r\n\r\n**Minimal repro:**\r\n- Create a .Net 5.0 app using the latest master branch dlls (Or just run WinformsControlsTest project - MultipleControls form)\r\n- Add a CheckedListBox with items to the form\r\n- Run the app and select some item\r\n","Url":"https://github.com/dotnet/winforms/issues/3628","RelatedDescription":"Closed issue \"[Regression] CheckedListBox selected item has an incorrect color\" (#3628)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-07-29T05:30:53.1967219Z","RunDurationInMilliseconds":756}