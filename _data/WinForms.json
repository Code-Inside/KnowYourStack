{"Data":{"GitHub":{"Issues":[{"Id":"1566676614","IsPullRequest":true,"CreatedAt":"2023-02-01T23:52:06","Actor":"dotnet-maestro[bot]","Number":"8552","RawContent":null,"Title":"[release/8.0-preview1] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4df5b787-1726-4081-4cf7-08dafe3cf288)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 4df5b787-1726-4081-4cf7-08dafe3cf288\r\n- **Build**: 20230131.6\r\n- **Date Produced**: February 1, 2023 6:41:06 PM UTC\r\n- **Commit**: 1b2c4a998d0a03fa99b0bf341cb40fc188e0b3f0\r\n- **Branch**: refs/heads/release/8.0-preview1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.1.23081.6][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.1.23081.6][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.1.23081.6][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.1.23081.6][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.1.23081.6][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.1.23081.6][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.1.23081.6][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.1.23081.6][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.1.23081.6][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.1.23081.6][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.1.23081.6][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.1.23081.6][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.1.23081.6][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.1.23081.6][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.1.23081.6][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.1.23081.6][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.1.23081.6][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.1.23081.6][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.1.23081.6][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.1.23081.6][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.1.23081.6][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.1.23081.6][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.1.23081.6][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.1.23081.6][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.1.23081.6][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.1.23081.6][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.1.23081.6][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.1.23081.6][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.1.23081.6][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.1.23081.6][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/a342915...1b2c4a9\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4df5b787-1726-4081-4cf7-08dafe3cf288)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8552)","Url":"https://github.com/dotnet/winforms/pull/8552","RelatedDescription":"Closed or merged PR \"[release/8.0-preview1] Update dependencies from dotnet/runtime\" (#8552)"},{"Id":"1566754766","IsPullRequest":true,"CreatedAt":"2023-02-01T21:24:07","Actor":"mmitche","Number":"8553","RawContent":null,"Title":"[release/8.0-preview1] Enable in-build signing based on branch","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8553)","Url":"https://github.com/dotnet/winforms/pull/8553","RelatedDescription":"Closed or merged PR \"[release/8.0-preview1] Enable in-build signing based on branch\" (#8553)"},{"Id":"1566618874","IsPullRequest":true,"CreatedAt":"2023-02-01T20:59:20","Actor":"mmitche","Number":"8551","RawContent":null,"Title":"Enable in-build signing based on branch","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8551)","Url":"https://github.com/dotnet/winforms/pull/8551","RelatedDescription":"Closed or merged PR \"Enable in-build signing based on branch\" (#8551)"},{"Id":"1564272605","IsPullRequest":true,"CreatedAt":"2023-02-01T19:55:15","Actor":"dotnet-maestro[bot]","Number":"8545","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230131.5\r\n- **Date Produced**: February 1, 2023 5:46:37 AM UTC\r\n- **Commit**: 00c60e41ac459b005338329cd9b5fd5d6652777c\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.2.23081.5][2]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.2.23081.5][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.2.23081.5][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.2.23081.5][2]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.2.23081.5][2]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.2.23081.5][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.2.23081.5][2]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.2.23081.5][2]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.2.23081.5][2]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.2.23081.5][2]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.2.23081.5][2]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.2.23081.5][2]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.2.23081.5][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.2.23081.5][2]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.2.23081.5][2]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.2.23081.5][2]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.2.23081.5][2]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.2.23081.5][2]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.2.23081.5][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.2.23081.5][2]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.2.23081.5][2]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.2.23081.5][2]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.2.23081.5][2]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.2.23081.5][2]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.2.23081.5][2]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.2.23081.5][2]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.2.23081.5][2]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.2.23081.5][2]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.2.23081.5][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.23079.4 to 8.0.0-preview.2.23081.5][2]\r\n\r\n[2]: https://github.com/dotnet/runtime/compare/a342915...00c60e4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8545)\r\n","Url":"https://github.com/dotnet/winforms/pull/8545","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8545)"},{"Id":"1566604874","IsPullRequest":false,"CreatedAt":"2023-02-01T18:32:50","Actor":"runfoapp[bot]","Number":"8550","RawContent":null,"Title":"[flaky test] componentmodel.com2interop.com2fontconvertertests.com2fontconverter_convertmanagedtonative","State":"open","Body":"<!-- runfo report start -->\r\nRunfo Tracking Issue: [componentmodel.com2interop.com2fontconvertertests.com2fontconverter_convertmanagedtonative](https://runfo.azurewebsites.net/tracking/issue/454)\r\n|Build|Definition|Kind|Run Name|\r\n|---|---|---|---|\r\n|[155626](https://dev.azure.com/dnceng-public/public/_build/results?buildId=155626)|[dotnet-winforms CI](https://dnceng-public.visualstudio.com/public/_build?definitionId=76)|[PR 8545](https://github.com/dotnet/winforms/pull/8545)|Windows_x86-xunit|\r\n|[154880](https://dev.azure.com/dnceng-public/public/_build/results?buildId=154880)|[dotnet-winforms CI](https://dnceng-public.visualstudio.com/public/_build?definitionId=76)|[PR 8528](https://github.com/dotnet/winforms/pull/8528)|Windows_arm64-xunit|\r\n\r\n\r\n\r\nBuild Result Summary\r\n|Day Hit Count|Week Hit Count|Month Hit Count|\r\n|---|---|---|\r\n|1|2|2|\r\n\r\n<!-- runfo report end -->\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/8550","RelatedDescription":"Open issue \"[flaky test] componentmodel.com2interop.com2fontconvertertests.com2fontconverter_convertmanagedtonative\" (#8550)"},{"Id":"1566252399","IsPullRequest":true,"CreatedAt":"2023-02-01T14:50:22","Actor":"dmitrii-drobotov","Number":"8549","RawContent":null,"Title":"Port DateTimePickerDesigner to runtime","State":"open","Body":"Related to #8501, #8508, #2411\r\n\r\n\r\n## Proposed changes\r\n\r\n- Port DateTimePickerDesigner to runtime\r\n\r\n## Customer Impact\r\n\r\n- DateTimePicker can be designed in runtime\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before<!-- TODO -->\r\n![Screenshot 2023-02-01 133438](https://user-images.githubusercontent.com/102954094/216074806-9d027654-285f-4e2f-bee9-0d7a8c828d37.png)\r\n\r\nDateTimePicker is not available in runtime designer scenario\r\n\r\n### After\r\n\r\n![datetimepickerdesigner](https://user-images.githubusercontent.com/102954094/216074839-e6cc5584-7c3a-4c7a-b9b3-ded613aaedc0.gif)\r\n\r\nDateTimePicker can be designed in runtime\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manually (added DateTimePicker to DemoConsole test app)\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .NET 8.0.0-alpha.1.23067.11\r\n- Windows 10.0.22621\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8549)","Url":"https://github.com/dotnet/winforms/pull/8549","RelatedDescription":"Open PR \"Port DateTimePickerDesigner to runtime\" (#8549)"},{"Id":"1566189631","IsPullRequest":false,"CreatedAt":"2023-02-01T13:15:05","Actor":"v-elnovikova","Number":"8548","RawContent":null,"Title":"[API Proposal]: add ToolStripItem.SelectedChanged event","State":"open","Body":"### Background and motivation\n\nThis is a follow-up to dotnet/runtime#3572\r\n\r\n.NET Core 3.1 introduced a [breaking change](https://learn.microsoft.com/en-us/dotnet/core/compatibility/winforms#removed-controls) in using Menus. MenuItem control was removed and ToolStripMenuItem is recommended as a replacement.\r\n\r\nHowever, the new ToolStripMenuItem class is missing the equivalent to MenuItem's [Select](https://learn.microsoft.com/en-us/dotnet/api/system.windows.forms.menuitem.select?view=netframework-4.8) event, that fires when menu item is highlighted by mouse or keyboard.\r\n\r\nThis event is most commonly used to display hints/descriptions/feedback to user when they navigate through menu items.\r\n\r\nSome workarounds are the following ToolStripMenuItem's events: `MouseEnter`, `MouseLeave`, `MouseHover`, etc. But this does not cover the selection of a ToolStripMenuItem via keyboard (e.g. arrow keys).\r\n\r\nAdding a new `SelectedChanged` event to the ToolStripItem class could be a solution to the problem. The event fires every time the [Selected](https://learn.microsoft.com/en-us/dotnet/api/system.windows.forms.toolstripitem.selected?view=windowsdesktop-7.0) property value changes, similar to [AvailableChanged](https://learn.microsoft.com/en-us/dotnet/api/system.windows.forms.toolstripitem.availablechanged?view=windowsdesktop-7.0) or [EnabledChanged](https://learn.microsoft.com/en-us/dotnet/api/system.windows.forms.toolstripitem.enabledchanged?view=windowsdesktop-7.0) events.\n\n### API Proposal\n\n```csharp\r\nnamespace System.Windows.Forms\r\n{\r\n    public class ToolStripItem\r\n    {\r\n        ...\r\n        public event EventHandler? SelectedChanged;\r\n        protected virtual void OnSelectedChanged(EventArgs e);\r\n    }\r\n}\r\n```\r\n\n\n### API Usage\n\nHere the SelectedChanged event is used to show a hint whenever user selects menu item with mouse or keyboard:\r\n```csharp\r\nToolStripMenuItem menuItem = new();\r\nLabel hintLabel = new();\r\n\r\nmenuItem.SelectedChanged += (object sender, EventArgs e) => \r\n{\r\n    hintLabel.Text = menuItem.Selected ? \"Menu item selected!\" : string.Empty;\r\n};\r\n```\r\n\n\n### Alternative Designs\n\n_No response_\n\n### Risks\n\n_No response_","Url":"https://github.com/dotnet/winforms/issues/8548","RelatedDescription":"Open issue \"[API Proposal]: add ToolStripItem.SelectedChanged event\" (#8548)"},{"Id":"1565972732","IsPullRequest":true,"CreatedAt":"2023-02-01T11:52:09","Actor":"zeh-almeida","Number":"8547","RawContent":null,"Title":"Fix: Allow for Control.Invoke execution on Binding updates","State":"open","Body":"adding option to use `Control.Invoke` on Binding updates because of UI Thread concurrency exceptions.\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #8532\r\n\r\n\r\n## Proposed changes\r\n\r\n- Add a constructor parameter to allow `Control.Invoke` execution\r\n- Adjust the `void SetPropValue(object value)` to call `Control.Invoke` when possible\r\n- Adjust the API definition with the new constructor option\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Will allow multi-thread bindings, which can happen using asynchronous operations.\r\n- \r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Enables a new execution path for bindings\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- All previous tests must not be changed\r\n- Added test case for new constructor (TODO)\r\n- Added test case to check for `Control.Invoke` execution (TODO)\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n.NET SDK:\r\n Version:   8.0.100-alpha.1.23061.8\r\n Commit:    c8d103ed3c\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19045\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n\r\nHost:\r\n  Version:      8.0.0-alpha.1.23079.4\r\n  Architecture: x64\r\n  Commit:       a34291586e\r\n\r\n.NET SDKs installed:\r\n  8.0.100-alpha.1.23061.8\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 8.0.0-alpha.1.23058.7 [G:\\projects\\zeh-winforms\\.dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 8.0.0-alpha.1.23057.5 [G:\\projects\\zeh-winforms\\.dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 8.0.0-alpha.1.23058.2 [G:\\projects\\zeh-winforms\\.dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 8.0.0-alpha.1.23079.4 [G:\\projects\\zeh-winforms\\.dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 8.0.0-alpha.1.23057.1 [G:\\projects\\zeh-winforms\\.dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nOther architectures found:\r\n  x86   [C:\\Program Files (x86)\\dotnet]\r\n    registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]\r\n\r\nEnvironment variables:\r\n  Not set\r\n\r\nglobal.json file:\r\n  .\\global.json\r\n\r\nLearn more:\r\n  https://aka.ms/dotnet/info\r\n\r\nDownload .NET:\r\n  https://aka.ms/dotnet/download\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8547)","Url":"https://github.com/dotnet/winforms/pull/8547","RelatedDescription":"Open PR \"Fix: Allow for Control.Invoke execution on Binding updates\" (#8547)"},{"Id":"1565243092","IsPullRequest":true,"CreatedAt":"2023-02-01T01:12:49","Actor":"elachlan","Number":"8546","RawContent":null,"Title":"Fix `KeyUp` event on `Listview` control","State":"open","Body":"Fixes #8537\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8546)","Url":"https://github.com/dotnet/winforms/pull/8546","RelatedDescription":"Open PR \"Fix `KeyUp` event on `Listview` control\" (#8546)"},{"Id":"1564271961","IsPullRequest":true,"CreatedAt":"2023-01-31T13:34:40","Actor":"dotnet-maestro[bot]","Number":"8544","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20230130.3\r\n- **Date Produced**: January 30, 2023 6:41:49 PM UTC\r\n- **Commit**: 608f3c7aed68dec1314d75601c6f143747e78cc6\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23077.1 to 8.0.0-beta.23080.3][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.23077.1 to 8.0.0-beta.23080.3][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.23077.1 to 8.0.0-beta.23080.3][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23077.1 to 8.0.0-beta.23080.3][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.23077.1 to 8.0.0-beta.23080.3][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23077.1 to 8.0.0-beta.23080.3][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/691fd54...608f3c7\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8544)","Url":"https://github.com/dotnet/winforms/pull/8544","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#8544)"},{"Id":"1563085907","IsPullRequest":false,"CreatedAt":"2023-01-31T03:01:22","Actor":"vsfeedback","Number":"8539","RawContent":null,"Title":"There are no usable controls in the WinForms toolbox (.NET 7.0)","State":"closed","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/There-are-no-usable-controls-in-the-WinF/10263925)._\n\n---\n[severity:It's more difficult to complete my work]\r\nI am working on a WinForms Application using .NET 7.0 in VS2022.\nWhen I open the toolbox, all the controls are greyed out. \n\nI have tried:\n- Resetting the toolbox from right-click\n- Choose Items -> Reset\n- Adding the .NET 7.0.2 System.Windows.Forms.dll to the Choose Toolbox Items dialog using the browse button.\n\nThe last of those items always gives the following error:\n![error.jpg](https://aka.ms/dc/image?name=B80f765b0f9fa4de0abe173f8313d640f638106145901326232_error.jpg&tid=80f765b0f9fa4de0abe173f8313d640f638106145901326232)\n\nIt appears that the toolbox is referencing whatever version is in the global assembly cache (4.0.0.0 in this case)\n![toolbox.jpg](https://aka.ms/dc/image?name=Ba36cd326f900473eadc5b2a09119f253638106147621704293_toolbox.jpg&tid=a36cd326f900473eadc5b2a09119f253638106147621704293)\n\nI have discovered a workaround, which is to create a wrapper for the control like so:\n![wrapper.jpg](https://aka.ms/dc/image?name=B89f1a1c48a7b4444a0c9cd979077cd4f638106148938439451_wrapper.jpg&tid=89f1a1c48a7b4444a0c9cd979077cd4f638106148938439451)\nAnd here's the toolbox after building the solution:\n![toolbox_new.jpg](https://aka.ms/dc/image?name=Beeedc952c67c4db9a48c731198db4077638106149800850887_toolbox_new.jpg&tid=eeedc952c67c4db9a48c731198db4077638106149800850887)\n\nDoing this for every control I may decide to use is extremely annoying, and it seems like there is either something I'm missing, or an issue with the toolbox.\n\n---\n### Original Comments\n\n#### Feedback Bot on 1/30/2023, 09:58 AM: \n\n(private comment, text removed)\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/winforms/issues/8539","RelatedDescription":"Closed issue \"There are no usable controls in the WinForms toolbox (.NET 7.0)\" (#8539)"},{"Id":"1563357689","IsPullRequest":true,"CreatedAt":"2023-01-30T23:17:56","Actor":"dreddy-work","Number":"8543","RawContent":null,"Title":"Branding to Preview 2 on main","State":"closed","Body":"NA\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8543)","Url":"https://github.com/dotnet/winforms/pull/8543","RelatedDescription":"Closed or merged PR \"Branding to Preview 2 on main\" (#8543)"},{"Id":"1563352324","IsPullRequest":true,"CreatedAt":"2023-01-30T23:13:06","Actor":"dreddy-work","Number":"8542","RawContent":null,"Title":"Branding to Preview 1 in Release branch","State":"closed","Body":"Branding to preview1\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8542)","Url":"https://github.com/dotnet/winforms/pull/8542","RelatedDescription":"Closed or merged PR \"Branding to Preview 1 in Release branch\" (#8542)"},{"Id":"1563310523","IsPullRequest":true,"CreatedAt":"2023-01-30T22:27:41","Actor":"dreddy-work","Number":"8541","RawContent":null,"Title":"Fix LOC dynamically.","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8541)","Url":"https://github.com/dotnet/winforms/pull/8541","RelatedDescription":"Closed or merged PR \"Fix LOC dynamically.\" (#8541)"},{"Id":"1563197579","IsPullRequest":true,"CreatedAt":"2023-01-30T21:04:40","Actor":"dreddy-work","Number":"8540","RawContent":null,"Title":"Update LOC flag dynamically.","State":"closed","Body":"Updating Loc flag by reading branch name.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8540)","Url":"https://github.com/dotnet/winforms/pull/8540","RelatedDescription":"Closed or merged PR \"Update LOC flag dynamically.\" (#8540)"},{"Id":"1559798272","IsPullRequest":true,"CreatedAt":"2023-01-30T19:33:17","Actor":"elachlan","Number":"8531","RawContent":null,"Title":"Refactored `DropSourceBehavior` to partial and split `BehaviorDataObject` into its own file","State":"closed","Body":"Refactored `DropSourceBehavior` to partial file and split `BehaviorDataObject` into its own file.\r\n\r\nEnabled nullability in `BehaviorDataObject`.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8531)","Url":"https://github.com/dotnet/winforms/pull/8531","RelatedDescription":"Closed or merged PR \"Refactored `DropSourceBehavior` to partial and split `BehaviorDataObject` into its own file\" (#8531)"},{"Id":"1562412587","IsPullRequest":true,"CreatedAt":"2023-01-30T18:48:44","Actor":"dotnet-maestro[bot]","Number":"8538","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20230127.1\r\n- **Date Produced**: January 27, 2023 1:44:30 PM UTC\r\n- **Commit**: 691fd54681d10eef3c2681fceb8b09b9f9ba9bb0\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23076.1 to 8.0.0-beta.23077.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.23076.1 to 8.0.0-beta.23077.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.23076.1 to 8.0.0-beta.23077.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23076.1 to 8.0.0-beta.23077.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.23076.1 to 8.0.0-beta.23077.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23076.1 to 8.0.0-beta.23077.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/3900335...691fd54\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8538)","Url":"https://github.com/dotnet/winforms/pull/8538","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#8538)"},{"Id":"1560850793","IsPullRequest":true,"CreatedAt":"2023-01-30T17:44:13","Actor":"dotnet-maestro[bot]","Number":"8533","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230129.4\r\n- **Date Produced**: January 30, 2023 9:56:32 AM UTC\r\n- **Commit**: a34291586e5f82a98f6b5a2e9134cee96f7fc306\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.23076.9 to 8.0.0-alpha.1.23079.4][3]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.23076.9 to 8.0.0-alpha.1.23079.4][3]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.23076.9 to 8.0.0-alpha.1.23079.4][3]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.23076.9 to 8.0.0-alpha.1.23079.4][3]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.23076.9 to 8.0.0-alpha.1.23079.4][3]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.23076.9 to 8.0.0-alpha.1.23079.4][3]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.23076.9 to 8.0.0-alpha.1.23079.4][3]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.23076.9 to 8.0.0-alpha.1.23079.4][3]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.23076.9 to 8.0.0-alpha.1.23079.4][3]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.23076.9 to 8.0.0-alpha.1.23079.4][3]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.23076.9 to 8.0.0-alpha.1.23079.4][3]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.23076.9 to 8.0.0-alpha.1.23079.4][3]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.23076.9 to 8.0.0-alpha.1.23079.4][3]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.23076.9 to 8.0.0-alpha.1.23079.4][3]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.23076.9 to 8.0.0-alpha.1.23079.4][3]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.23076.9 to 8.0.0-alpha.1.23079.4][3]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.23076.9 to 8.0.0-alpha.1.23079.4][3]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.23076.9 to 8.0.0-alpha.1.23079.4][3]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.23076.9 to 8.0.0-alpha.1.23079.4][3]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.23076.9 to 8.0.0-alpha.1.23079.4][3]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.23076.9 to 8.0.0-alpha.1.23079.4][3]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.23076.9 to 8.0.0-alpha.1.23079.4][3]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.23076.9 to 8.0.0-alpha.1.23079.4][3]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.23076.9 to 8.0.0-alpha.1.23079.4][3]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.23076.9 to 8.0.0-alpha.1.23079.4][3]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.23076.9 to 8.0.0-alpha.1.23079.4][3]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.23076.9 to 8.0.0-alpha.1.23079.4][3]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.23076.9 to 8.0.0-alpha.1.23079.4][3]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.23076.9 to 8.0.0-alpha.1.23079.4][3]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.23076.9 to 8.0.0-alpha.1.23079.4][3]\r\n\r\n[3]: https://github.com/dotnet/runtime/compare/007df05...a342915\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8533)\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/8533","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8533)"},{"Id":"1562197397","IsPullRequest":false,"CreatedAt":"2023-01-30T10:51:48","Actor":"vsfeedback","Number":"8537","RawContent":null,"Title":"No call to KeyUp event handler on ListView control after upgrading from .NET6 to .NET7","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/No-call-to-KeyUp-event-handler-on-ListVi/10263887)._\n\n---\n[severity:I'm unable to use this version] [regression] [worked-in:.NET 6]\r\n**Steps to reproduce**\n- Visual Studio 17.4.4.\n- Out-of-the-box Windows Forms app using .NET 7 for Windows.\n- ListView control on the main form (which is given focus in Form1.Activated event handler).\n- Empty KeyUp event handler on the ListView control.\n- Start the app and press a key. (The ListView control has focus.)\n\n**Expected**\nA call to the ListView1.KeyUp event handler.\n\n**Actual**\nNo call\n\n---\n### Original Comments\n\n#### Feedback Bot on 1/30/2023, 08:55 AM: \n\n(private comment, text removed)\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/winforms/issues/8537","RelatedDescription":"Open issue \"No call to KeyUp event handler on ListView control after upgrading from .NET6 to .NET7\" (#8537)"},{"Id":"1561280895","IsPullRequest":false,"CreatedAt":"2023-01-29T13:06:52","Actor":"roland5572","Number":"8536","RawContent":null,"Title":"ListView ListViewGroupCollection.Insert not working properly (incorrect location)","State":"open","Body":"### .NET version\r\n\r\n.net 7.0\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNo\r\n\r\n### Issue description\r\n\r\nListViewGroupCollection.Insert not working properly.\r\n\r\nUsers can use ListViewGroupCollection.Insert to insert new data. But currently it doesn't work properly (**incorrect location**).\r\nhttps://learn.microsoft.com/en-us/dotnet/api/system.windows.forms.listviewgroupcollection.insert\r\n\r\nHow to test:\r\n1.  Copy the full test code to Visual Studio (see Steps to reproduce).\r\n2. Add a breakpoint to this line.\r\n```(sender as Button).Enabled = false;```\r\n\r\nPicture 1.\r\nRun the test code, click this button to start test.\r\n\r\n![000](https://user-images.githubusercontent.com/88176616/215327609-77d76064-8d6d-422d-910f-4ef7506178aa.png)\r\n\r\nPicture 2.\r\nIf you have set breakpoint, the \"Watch 1\" dialog shows the position of the inserted object in relation to other elements.\r\nIf you haven't set a breakpoint, Add a breakpoint to this line, and then add \"view.Groups\" to \"Watch 1\" dialog.\r\n```(sender as Button).Enabled = false;```\r\n\r\n![001](https://user-images.githubusercontent.com/88176616/215327623-8fe5b13c-7a96-4765-a1c1-6536d0e36ffd.png)\r\n\r\nPicture 3.\r\nIn the actual running UI, the display effect of ListView is not consistent with the relationship in the previous \"Watch 1\" dialog box.\r\n\r\n![0021](https://user-images.githubusercontent.com/88176616/215327646-0eda3e86-3d76-46e2-80da-e67c1ac7543c.png)\r\n\r\n\r\n### Steps to reproduce\r\n\r\nFull C# Test code with Visual Studio 2022 and .net 7.0\r\n\r\n```\r\nusing System;\r\nusing System.Drawing;\r\nusing System.Windows.Forms;\r\n\r\nnamespace ListViewGroupInsertTest\r\n{\r\n    internal static class Program\r\n    {\r\n        [STAThread]\r\n        static void Main()\r\n        {\r\n            ApplicationConfiguration.Initialize();\r\n            Application.Run(CreateForm());\r\n        }\r\n\r\n        private static Form CreateForm()\r\n        {\r\n            var form = new Form()\r\n            {\r\n                Width = 600,\r\n                Height = 480,\r\n\r\n                StartPosition = FormStartPosition.CenterScreen,\r\n            };\r\n\r\n            var control = _listView = CreateListView();\r\n            form.Controls.Add(control);\r\n\r\n            var button = new Button()\r\n            {\r\n                Text = \"Click to insert Group and Item\",\r\n                AutoSize = true,\r\n\r\n                MaximumSize = new Size(0, 45),\r\n                Dock = DockStyle.Right\r\n            };\r\n\r\n            button.Click += Button_Click;\r\n\r\n            form.Controls.Add(button);\r\n            return form;\r\n        }\r\n\r\n        private static ListView CreateListView()\r\n        {\r\n            var control = new ListView()\r\n            {\r\n                Dock = DockStyle.Fill,\r\n                View = View.Details,\r\n\r\n                FullRowSelect = true,\r\n            };\r\n\r\n            CreteListViewContent(control);\r\n            return control;\r\n        }\r\n\r\n        private static ListView _listView;\r\n\r\n        private static ListViewGroup _group_new;\r\n        private static ListViewItem _item_new;\r\n\r\n        private static void CreteListViewContent(ListView view)\r\n        {\r\n            ListViewGroup group_1;\r\n            ListViewGroup group_2;\r\n            ListViewGroup group_3;\r\n            ListViewGroup group_4;\r\n\r\n            view.Groups.Add(group_1 = new ListViewGroup() { Header = \"Group 1\" });\r\n            view.Groups.Add(group_2 = new ListViewGroup() { Header = \"Group 2\" });\r\n            view.Groups.Add(group_3 = new ListViewGroup() { Header = \"Group 3\" });\r\n            view.Groups.Add(group_4 = new ListViewGroup() { Header = \"Group 4\" });\r\n\r\n            view.Columns.Add(new ColumnHeader() { Text = \"Column 1\", Width = 300 });\r\n            view.Columns.Add(new ColumnHeader() { Text = \"Column 2\", Width = -2 });\r\n\r\n            view.Items.Add(new ListViewItem(\"ListView Item 1\") { Group = group_1 });\r\n            view.Items.Add(new ListViewItem(\"ListView Item 2\") { Group = group_2 });\r\n            view.Items.Add(new ListViewItem(\"ListView Item 3\") { Group = group_3 });\r\n            view.Items.Add(new ListViewItem(\"ListView Item 4\") { Group = group_4 });\r\n\r\n            _group_new = new ListViewGroup() { Header = \"Group (New)\" };\r\n            _item_new = new ListViewItem(\"ListView Item (New)\") { Group = _group_new };\r\n        }\r\n\r\n        private static void Button_Click(object sender, EventArgs e)\r\n        {\r\n            var view = _listView;\r\n\r\n            view.Groups.Insert(3, _group_new);\r\n            view.Items.Add(_item_new);\r\n\r\n            (sender as Button).Enabled = false;\r\n        }\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/winforms/issues/8536","RelatedDescription":"Open issue \"ListView ListViewGroupCollection.Insert not working properly (incorrect location)\" (#8536)"},{"Id":"1561275377","IsPullRequest":false,"CreatedAt":"2023-01-29T12:51:31","Actor":"kirsan31","Number":"8535","RawContent":null,"Title":"DataGridView TopLeftHeaderCell visibility related problems","State":"open","Body":"### .NET version\r\n\r\nAll\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNo\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nNo\r\n\r\n### Issue description\r\n\r\nComes from https://github.com/dotnet/winforms/issues/6926#issuecomment-1236143035 and related discussion. _Sorry had no time to raised it in time and then completely forgot about it_ 😔\r\n\r\n- As far as I can tell, **all** `DataGridView` [Flaky tests](https://github.com/dotnet/winforms/issues/7799) have the same root. The `TopLeftHeaderCell` is not visible if we have no columns at all, but `DataGridView` still treat it as visible (still trying to Invalidate it) :(\r\n- Also we have another non consistent behavior here -`DataGridView` without columns (left) look different from `DataGridView` with all invisible columns (right):\r\n![image](https://user-images.githubusercontent.com/17767561/188275713-67683082-9c15-4050-a8b8-892c16004f83.png)\r\n  If we have no columns at all `TopLeftHeaderCell` not visible and if we have columns but they all set as not visible, `TopLeftHeaderCell` is visible 🤔 Also we have third variant [bound `DataGridView` with all invisible columns](https://github.com/dotnet/winforms/issues/4807) 😫\r\n\r\n- Another bunch of bugs related to visibility of `TopLeftHeaderCell`. In many places it's checked like `DataGridView.LayoutInfo.TopLeftHeader != Rectangle.Empty`. And `DataGridView.LayoutInfo.TopLeftHeader` updated only in `PerformLayoutPrivate`.  Which is not always called when necessary. For example if we have `DataGridView` with `AutoSize == true` and call `ColumnHeadersVisible = false` then we will get `TopLeftHeaderCell.Visible == false` and `TopLeftHeaderCell.Displayed == true` because `PerformLayoutPrivate` will not be called if `AutoSize == true` 😕\r\n\r\nIt seems that the option of the absence of columns was not considered in the context of `TopLeftHeaderCell`. I see 2 ways here:\r\n1. Treat `TopLeftHeaderCell` invisible if we have no columns. This will be some how a [breaking change](https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.datagridviewheadercell.visible?f1url=%3FappId%3DDev16IDEF1%26l%3DEN-US%26k%3Dk(System.Windows.Forms.DataGridViewHeaderCell.Visible)%3Bk(SolutionItemsProject)%3Bk(DevLang-csharp)%26rd%3Dtrue&view=windowsdesktop-6.0#:~:text=If%20the%20cell%20is%20the%20top%20left%20header%20cell%2C%20it%20is%20visible%20if%20both%20RowHeadersVisible%20and%20ColumnHeadersVisible%20are%20true.)... And after that it will be necessary to redo about 60 tests that consider that `TopLeftHeaderCell` is always visible when `ColumnHeadersVisible` && `RowHeadersVisible`.\r\n  By the way, to fix all (I think) Flaky tests  we no need to change `DataGridViewHeaderCell.Visible`, just add the conditions for invalidate in two places. Because all invalidated test are using empty (no columns) `DataGridView`. But if some one will add \r\ntests with columns - we will get all this mouse problems again :(\r\n2. Paint `TopLeftHeaderCell` in any cases if `ColumnHeadersVisible` && `RowHeadersVisible`. Will it be a _visual_ breaking change? This approach will not fix any of our flaky tests, but at least it will be clear what needs to be changed in them and why...\r\n\r\n\r\nIf we go with this I think we need to add tests which will put the mouse above `TopLeftHeaderCell`... So moving all _invalidated_ tests to UIIntegrationTests is something need to be done any way...\r\n\r\n@RussKie [response](https://github.com/dotnet/winforms/issues/6926#issuecomment-1244876947) on this:\r\n\r\n> Just to reiterate my understanding - we have a number of issues that we believe are all caused by the incorrect visibility handling of `TopLeftHeaderCell`. These issues are as follows (in no specific order):\r\n> \r\n> * multiple intermittent DGV-related test failures,\r\n> * inconsistent behaviour depending on whether a DGV has any columns or not,\r\n> * inconsistent behaviour depending on whether a DGV has any bound columns,\r\n> * [DataGridView.TopLeftHeaderCell throws ArgumentOutOfRangeException on Handle creation #3378](https://github.com/dotnet/winforms/issues/3378)\r\n> * [bound DataGridView with all invisible columns will display first column anyway #4807](https://github.com/dotnet/winforms/issues/4807)\r\n> \r\n> Did I get this correctly? 💭 What may be helpful here is a simple sample app - a form with a DGV and buttons - that show case different behaviours and deficiencies, so that we could observe different scenarios all in one place (like we did in [#3029 (comment)](https://github.com/dotnet/winforms/issues/3029#issuecomment-749295542)).\r\n> \r\n> All but the first issue (i.e., the test related) will require a hollistic review of the handling, and the fix will likely be breaking change; not to mention an extensive testing will be required. This path is not completely off the table, in fact with the [re-introduced support for feature switches](https://github.com/dotnet/winforms/blob/main/docs/WinformsRuntimeConfiguration.md) in .NET 7, we can consider fixing the behaviour putting it behind an opt-out switch (i.e., allow to return to the old behaviour). I don't think the team would be able to champion this work due to current and the already assigned priorities for the .NET 8 release. And we'd look up to the community to champion this (with the team's support, though limited). ","Url":"https://github.com/dotnet/winforms/issues/8535","RelatedDescription":"Open issue \"DataGridView TopLeftHeaderCell visibility related problems\" (#8535)"},{"Id":"1560935186","IsPullRequest":false,"CreatedAt":"2023-01-28T17:13:22","Actor":"reader-man","Number":"8534","RawContent":null,"Title":"Dataset is using System.Data.SqlClient.SqlDataAdapter not Microsoft.Data.SqlClient","State":"open","Body":"### Environment\n\nVisualStudio.17.Release/17.4.4+33213.308\r\nMicrosoft .NET Framework\r\nVersion 4.8.04084\r\n\n\n### .NET version\n\n4.8\n\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\n\nno\n\n### Issue description\n\ni am trying to move from \"System.Data.SqlClient\" to \"Microsoft.Data.SqlClient\",\r\nand all my code is working,\r\nbut when i change the dataset autogenerated code to use the new \"Microsoft.Data.SqlClient.SqlDataAdapter\"\r\nit works, but when adding any new tables or changing the fields in the dataset designer, it returns the \"SqlDataAdapter\" to use:\r\n\"System.Data.SqlClient.SqlDataAdapter\"\r\nso how to make the designer stay using the new \"Microsoft.Data.SqlClient.SqlDataAdapter\".\r\nand this is also happening to:\r\n    private global::System.Data.SqlClient.SqlDataAdapter _adapter;\r\n        private global::System.Data.SqlClient.SqlConnection _connection;\r\n        private global::System.Data.SqlClient.SqlTransaction _transaction;\r\n        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;\r\n\r\n\r\ne.g.:\r\nnamespace MetaObjectDAL.DS_FormsTableAdapters {\r\n    \r\n    \r\n    /// <summary>\r\n    ///Represents the connection and commands used to retrieve and save data.\r\n    ///</summary>\r\n    [global::System.ComponentModel.DesignerCategoryAttribute(\"code\")]\r\n    [global::System.ComponentModel.ToolboxItem(true)]\r\n    [global::System.ComponentModel.DataObjectAttribute(true)]\r\n    [global::System.ComponentModel.DesignerAttribute(\"Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner\" +\r\n        \", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\")]\r\n    [global::System.ComponentModel.Design.HelpKeywordAttribute(\"vs.data.TableAdapter\")]\r\n    public partial class MetaObjectTableAdapter : global::System.ComponentModel.Component {\r\n        \r\n        private global::System.Data.SqlClient.SqlDataAdapter _adapter;\r\n        \r\n        private global::System.Data.SqlClient.SqlConnection _connection;\r\n        \r\n        private global::System.Data.SqlClient.SqlTransaction _transaction;\r\n        \r\n        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;\r\n\n\n### Steps to reproduce\n\ncreate a new winforms solution\r\nadd a dataset from sql server tables.\r\nthe compile it.\r\nthen add nuget \"Microsoft.Data.SqlClient\"\r\nand replace all references of \"Microsoft.Data.SqlClient\" to \"System.Data.SqlClient\"\r\nsave and re-compile.\r\n\r\nthen open the dataset in designer mode, and add to it a new table from sql server.\r\nsave it.\r\ngo to the Dataset code, and u will see that it returned to the old: \"System.Data.SqlClient\"\r\n\n\n### Diagnostics\n\n_No response_","Url":"https://github.com/dotnet/winforms/issues/8534","RelatedDescription":"Open issue \"Dataset is using System.Data.SqlClient.SqlDataAdapter not Microsoft.Data.SqlClient\" (#8534)"},{"Id":"1558964268","IsPullRequest":false,"CreatedAt":"2023-01-28T01:06:29","Actor":"riverar","Number":"8527","RawContent":null,"Title":"[LOC] KeysConverter returns \"None\" for Windows.Forms.Keys::None in all languages","State":"closed","Body":"### Which files are affected?\r\n\r\nPreviously reported at https://github.com/File-New-Project/EarTrumpet/issues/548.\r\nRelated area https://github.com/dotnet/winforms/issues/8440.\r\n\r\nSteps to reproduce:\r\n1. Log into a non-English machine\r\n2. Run the following PowerShell snippet:\r\n\r\n  ```powershell\r\n  [Reflection.Assembly]::LoadFile(\"C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\6.0.10\\System.Windows.Forms.dll\") | Out-Null\r\n  $Converter = New-Object Windows.Forms.KeysConverter\r\n  $Converter.ConvertToString($Null, [System.Globalization.CultureInfo]::CurrentUICulture, [Windows.Forms.Keys]::None)\r\n  ```\r\n3. Observe `None` output\r\n\r\n### Which languages are affected?\r\n\r\nAll non-English","Url":"https://github.com/dotnet/winforms/issues/8527","RelatedDescription":"Closed issue \"[LOC] KeysConverter returns \"None\" for Windows.Forms.Keys::None in all languages\" (#8527)"},{"Id":"1559739737","IsPullRequest":true,"CreatedAt":"2023-01-27T22:02:48","Actor":"dotnet-maestro[bot]","Number":"8530","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230126.9\r\n- **Date Produced**: January 27, 2023 11:13:33 AM UTC\r\n- **Commit**: 007df054a526ed9e3dc70b43bfa330943bd4816a\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.23075.6 to 8.0.0-alpha.1.23076.9][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.23075.6 to 8.0.0-alpha.1.23076.9][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.23075.6 to 8.0.0-alpha.1.23076.9][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.23075.6 to 8.0.0-alpha.1.23076.9][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.23075.6 to 8.0.0-alpha.1.23076.9][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.23075.6 to 8.0.0-alpha.1.23076.9][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.23075.6 to 8.0.0-alpha.1.23076.9][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.23075.6 to 8.0.0-alpha.1.23076.9][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.23075.6 to 8.0.0-alpha.1.23076.9][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.23075.6 to 8.0.0-alpha.1.23076.9][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.23075.6 to 8.0.0-alpha.1.23076.9][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.23075.6 to 8.0.0-alpha.1.23076.9][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.23075.6 to 8.0.0-alpha.1.23076.9][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.23075.6 to 8.0.0-alpha.1.23076.9][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.23075.6 to 8.0.0-alpha.1.23076.9][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.23075.6 to 8.0.0-alpha.1.23076.9][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.23075.6 to 8.0.0-alpha.1.23076.9][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.23075.6 to 8.0.0-alpha.1.23076.9][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.23075.6 to 8.0.0-alpha.1.23076.9][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.23075.6 to 8.0.0-alpha.1.23076.9][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.23075.6 to 8.0.0-alpha.1.23076.9][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.23075.6 to 8.0.0-alpha.1.23076.9][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.23075.6 to 8.0.0-alpha.1.23076.9][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.23075.6 to 8.0.0-alpha.1.23076.9][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.23075.6 to 8.0.0-alpha.1.23076.9][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.23075.6 to 8.0.0-alpha.1.23076.9][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.23075.6 to 8.0.0-alpha.1.23076.9][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.23075.6 to 8.0.0-alpha.1.23076.9][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.23075.6 to 8.0.0-alpha.1.23076.9][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.23075.6 to 8.0.0-alpha.1.23076.9][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/d92e70f...007df05\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8530)","Url":"https://github.com/dotnet/winforms/pull/8530","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8530)"},{"Id":"1560216377","IsPullRequest":false,"CreatedAt":"2023-01-27T18:27:58","Actor":"zeh-almeida","Number":"8532","RawContent":null,"Title":"Control Binding should use Invoke","State":"open","Body":"### Is your feature request related to a problem? Please describe\n\nI have a WinForms application which uses CommunityToolkit.Mvvm for bindings.\r\nI am also using the same MVVM library to build a MAUI application for study purposes.\r\n\r\nMVVM allows me to have asynchronous commands and messages, which I use to propagate changes across models.\r\nHowever, because my form binds some controls to those models, I have started to receive UI Thread exceptions when updating values.\r\n\r\nAfter a lot of debugging, I saw that the `SetPropValue` method in the Bindings class does not use the `Invoke` method when updating values:\r\nhttps://github.com/dotnet/winforms/blob/77d01dd234bc6fb2dac3b86d6c2a0b7cd61f1507/src/System.Windows.Forms/src/System/Windows/Forms/Binding.cs#L956\n\n### Describe the solution you'd like and alternatives you've considered\n\nIt is my understanding that the `Control` property is available for the `Binding` object:\r\nhttps://github.com/dotnet/winforms/blob/77d01dd234bc6fb2dac3b86d6c2a0b7cd61f1507/src/System.Windows.Forms/src/System/Windows/Forms/Binding.cs#L110\r\n\r\nIn this case, I propose that the `SetPropValue` method checks if the `Control` property is not null and tries to update it's value through an execution of the `Control.Invoke` method, to ensure the value change occurs in the UI Thread.\n\n### Will this feature affect UI controls?\n\nI do not think so because the underlining flow is kept as is.","Url":"https://github.com/dotnet/winforms/issues/8532","RelatedDescription":"Open issue \"Control Binding should use Invoke\" (#8532)"},{"Id":"1559739388","IsPullRequest":true,"CreatedAt":"2023-01-27T17:32:30","Actor":"dotnet-maestro[bot]","Number":"8529","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20230126.1\r\n- **Date Produced**: January 26, 2023 7:54:45 PM UTC\r\n- **Commit**: 3900335a25247d931fc62a62a1ebc30acbb5403d\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23075.2 to 8.0.0-beta.23076.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.23075.2 to 8.0.0-beta.23076.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.23075.2 to 8.0.0-beta.23076.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23075.2 to 8.0.0-beta.23076.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.23075.2 to 8.0.0-beta.23076.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23075.2 to 8.0.0-beta.23076.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/74a74c4...3900335\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8529)","Url":"https://github.com/dotnet/winforms/pull/8529","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#8529)"},{"Id":"1559104526","IsPullRequest":true,"CreatedAt":"2023-01-27T03:21:05","Actor":"elachlan","Number":"8528","RawContent":null,"Title":"Refactor `SelectionService` to replace `ArrayList` and enable Nullability","State":"open","Body":"Refactored `ISelectionService` to replace `ArrayList` and enable Nullability.\r\n\r\nI had to submit a PR to Runtime to fix the nullability on `ISelectionService.PrimarySelection`, this PR will need to be rebased to main once that change has been made available. Until then this will have build errors.\r\nhttps://github.com/dotnet/runtime/pull/81254\r\n\r\nRelated: #8140\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8528)","Url":"https://github.com/dotnet/winforms/pull/8528","RelatedDescription":"Open PR \"Refactor `SelectionService` to replace `ArrayList` and enable Nullability\" (#8528)"},{"Id":"1558111191","IsPullRequest":true,"CreatedAt":"2023-01-26T18:18:59","Actor":"dotnet-maestro[bot]","Number":"8526","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230125.6\r\n- **Date Produced**: January 26, 2023 9:18:02 AM UTC\r\n- **Commit**: d92e70f05b8de72758f3a990844e53c76b44d713\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.23074.4 to 8.0.0-alpha.1.23075.6][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.23074.4 to 8.0.0-alpha.1.23075.6][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.23074.4 to 8.0.0-alpha.1.23075.6][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.23074.4 to 8.0.0-alpha.1.23075.6][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.23074.4 to 8.0.0-alpha.1.23075.6][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.23074.4 to 8.0.0-alpha.1.23075.6][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.23074.4 to 8.0.0-alpha.1.23075.6][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.23074.4 to 8.0.0-alpha.1.23075.6][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.23074.4 to 8.0.0-alpha.1.23075.6][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.23074.4 to 8.0.0-alpha.1.23075.6][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.23074.4 to 8.0.0-alpha.1.23075.6][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.23074.4 to 8.0.0-alpha.1.23075.6][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.23074.4 to 8.0.0-alpha.1.23075.6][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.23074.4 to 8.0.0-alpha.1.23075.6][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.23074.4 to 8.0.0-alpha.1.23075.6][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.23074.4 to 8.0.0-alpha.1.23075.6][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.23074.4 to 8.0.0-alpha.1.23075.6][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.23074.4 to 8.0.0-alpha.1.23075.6][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.23074.4 to 8.0.0-alpha.1.23075.6][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.23074.4 to 8.0.0-alpha.1.23075.6][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.23074.4 to 8.0.0-alpha.1.23075.6][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.23074.4 to 8.0.0-alpha.1.23075.6][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.23074.4 to 8.0.0-alpha.1.23075.6][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.23074.4 to 8.0.0-alpha.1.23075.6][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.23074.4 to 8.0.0-alpha.1.23075.6][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.23074.4 to 8.0.0-alpha.1.23075.6][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.23074.4 to 8.0.0-alpha.1.23075.6][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.23074.4 to 8.0.0-alpha.1.23075.6][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.23074.4 to 8.0.0-alpha.1.23075.6][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.23074.4 to 8.0.0-alpha.1.23075.6][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/98ca349...d92e70f\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8526)","Url":"https://github.com/dotnet/winforms/pull/8526","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8526)"},{"Id":"1557178190","IsPullRequest":true,"CreatedAt":"2023-01-25T22:36:42","Actor":"dotnet-bot","Number":"8525","RawContent":null,"Title":"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 2096917","State":"closed","Body":"This is the pull request automatically created by the OneLocBuild task in the build process to check-in localized files generated based upon translation source files (.lcl files) handed-back from the downstream localization pipeline. If there are issues in translations, visit https://aka.ms/ceLocBug and log bugs for fixes. The OneLocBuild wiki is https://aka.ms/onelocbuild and the localization process in general is documented at https://aka.ms/AllAboutLoc.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8525)","Url":"https://github.com/dotnet/winforms/pull/8525","RelatedDescription":"Closed or merged PR \"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 2096917\" (#8525)"},{"Id":"1557177887","IsPullRequest":true,"CreatedAt":"2023-01-25T20:56:25","Actor":"dotnet-bot","Number":"8524","RawContent":null,"Title":"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 2095145","State":"closed","Body":"This is the pull request automatically created by the OneLocBuild task in the build process to check-in localized files generated based upon translation source files (.lcl files) handed-back from the downstream localization pipeline. If there are issues in translations, visit https://aka.ms/ceLocBug and log bugs for fixes. The OneLocBuild wiki is https://aka.ms/onelocbuild and the localization process in general is documented at https://aka.ms/AllAboutLoc.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8524)","Url":"https://github.com/dotnet/winforms/pull/8524","RelatedDescription":"Closed or merged PR \"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 2095145\" (#8524)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-02-02T03:30:33.7029883Z","RunDurationInMilliseconds":605}