{"Data":{"GitHub":{"Issues":[{"Id":"657030929","IsPullRequest":false,"CreatedAt":"2020-07-15T03:24:29","Actor":"Lydia-Shi","Number":"3579","RawContent":null,"Title":"There is no detailed description for some properties of ToolTip control","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n5.0.100-preview.8.20363.2\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\nThere is no detailed description for some properties of ToolTip control.\r\n![image](https://user-images.githubusercontent.com/54019172/87495262-830e7680-c683-11ea-8810-7687689bec65.png)\r\n\r\n\r\n**Expected behavior:**\r\nThe description of the property should describe the function of the property in detail.\r\n![image](https://user-images.githubusercontent.com/54019172/87495269-89045780-c683-11ea-9096-84aef787ccb7.png)\r\n\r\n**More info:**\r\n\r\n1. Affected Properties of ToolTip control: InitialDelay, OwnerDraw, ReshowDelay, ShowAlways, Tag, ToolTipIcon, ToolTipTitle.\r\n2. This issue also occurs in the \"ToolTip on tooltip\" property of other control.\r\n3. This issue also can reproduce with .Net Core 3.1.\r\n\r\n**Minimal repro:**\r\n\r\n1. Create a Winforms core app\r\n2. Drag and drop a ToolTip control to the form\r\n3. Observer the property description of the ToolTip control in Property Browser window\r\n\r\nOr\r\n\r\n1. Run the attached project.\r\n[ToolTipPropertyDescription.zip](https://github.com/dotnet/winforms/files/4922648/ToolTipPropertyDescription.zip)\r\n2. Run it, and do the above step3.\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/3579","RelatedDescription":"Open issue \"There is no detailed description for some properties of ToolTip control\" (#3579)"},{"Id":"656908430","IsPullRequest":false,"CreatedAt":"2020-07-14T21:24:59","Actor":"osamakawish","Number":"3578","RawContent":null,"Title":"TableLayoutPanel.RowCount doesn't seem to add new rows (similarly for TableLayoutPanel.ColumnCount","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n3.1.301\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes, this was made in .Net Framework 4.7.2 (according to project information).\r\n\r\n**Problem description:**\r\nThe following is my class. It's straightforward and just contains a table. The table is 6x6 in the Designer (for testing). \r\n\r\n`Table` here is a `TableLayoutPanel`. \r\n\r\n```c#\r\npublic partial class Board : UserControl\r\n    {\r\n        public int BoardSize { get; private set; }\r\n\r\n        public Board(int size)\r\n        {\r\n            InitializeComponent();\r\n            BoardSize = size;\r\n            Table.RowCount = size;\r\n            Table.ColumnCount = size;\r\n\r\n            float val = 100 / size;\r\n            for (int i = 0; i < size; i++)\r\n            {\r\n                Table.RowStyles[i].Height = val; // exception raised here\r\n                Table.ColumnStyles[i].Width = val;\r\n                for (int j = 0; j < size; j++)\r\n                {\r\n                    Table.SetCellPosition(new Button(), new TableLayoutPanelCellPosition(i, j));\r\n                }\r\n            }\r\n\r\n            // Table.CellPaint += Table_CellPaint;\r\n        }\r\n```\r\n\r\nError:\r\n> System.ArgumentOutOfRangeException: 'Index was out of range. Must be non-negative and less than the size of the collection.\r\nParameter name: index'\r\n\r\nIt turns out, the error occurs when it tries to reach index 6 (which is basically the RowCount in the Designer).\r\n\r\nI'm not sure why this is occurring, as I just set new values for the RowCount and ColumnCount a few lines before.\r\n\r\n**Expected behavior:**\r\nIndex should not be out of range for Table.RowStyles[i] when it's less than Table.RowCount.\r\n\r\n**Minimal repro:**\r\nNot sure what \"repro\" means...","Url":"https://github.com/dotnet/winforms/issues/3578","RelatedDescription":"Open issue \"TableLayoutPanel.RowCount doesn't seem to add new rows (similarly for TableLayoutPanel.ColumnCount\" (#3578)"},{"Id":"656745967","IsPullRequest":true,"CreatedAt":"2020-07-14T17:16:35","Actor":"mmitche","Number":"3577","RawContent":null,"Title":"Add dependencies required for CPD strict","State":"closed","Body":"Also run a general update\r\nCPD strict means the following:\r\n```\r\n<Dependency Name=\"Microsoft.Win32.Registry.AccessControl\" Version=\"5.0.0-preview.8.20361.2\" CoherentParentDependency=\"Microsoft.Private.Winforms\">\r\n    <Uri>https://github.com/dotnet/runtime</Uri>\r\n    <Sha>f37dd6fc8595e130909dcb3085a56342d04aa20c</Sha>\r\n</Dependency>\r\n```\r\nThis is from windowdesktop. In this case, Maestro will look up to find a direct dependency on Microsoft.Win32.Registry.AccessControl in runtime@f37dd6fc8595e130909dcb3085a56342d04aa20c.\r\nIf none exists, it fails. This contrasts to the current CPD algorithm which will attempt to find the newest Microsoft.Win32.Registry.AccessControl in any build within the graph below runtime@f37dd6fc8595e130909dcb3085a56342d04aa20c.\r\nThis is prone to error in some servicing cases, is slow, and requires the use of external data sources.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3577)","Url":"https://github.com/dotnet/winforms/pull/3577","RelatedDescription":"Closed or merged PR \"Add dependencies required for CPD strict\" (#3577)"},{"Id":"656515803","IsPullRequest":true,"CreatedAt":"2020-07-14T10:44:02","Actor":"echalone","Number":"3575","RawContent":null,"Title":"Removed duplicate ReadResources call","State":"open","Body":"The ReadResources method is already called in the ResourceSet constructor (see https://github.com/dotnet/runtime/blob/master/src/libraries/System.Private.CoreLib/src/System/Resources/ResourceSet.cs ) and would be called a second time in the ResXResourceSet constructor.\r\nThis leads to a System.ArgumentException \"Item has already been added. Key in dictionary: '<keyname>'  Key being added: '<keyname>'\" because the code would try to add every data element of a resx file a second time (first time in the ResourceSet constructor, second time in the ResXResourceSet constructor).\r\nTherefore, this second call needs to be removed from all ResXResourceSet constructors that already call the base constructor (which are both).\r\nYou can recreate this issue just by calling\r\n```\r\nnew System.Resources.ResXResourceSet(\"<PathToResx>\")\r\n```\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3575)","Url":"https://github.com/dotnet/winforms/pull/3575","RelatedDescription":"Open PR \"Removed duplicate ReadResources call\" (#3575)"},{"Id":"655354088","IsPullRequest":true,"CreatedAt":"2020-07-14T05:44:12","Actor":"gpetrou","Number":"3564","RawContent":null,"Title":"Use generic lists in FileDialog","State":"closed","Body":"## Proposed changes\r\n\r\n- Use generic lists in FileDialog.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3564)","Url":"https://github.com/dotnet/winforms/pull/3564","RelatedDescription":"Closed or merged PR \"Use generic lists in FileDialog\" (#3564)"},{"Id":"656043249","IsPullRequest":true,"CreatedAt":"2020-07-14T05:41:38","Actor":"gpetrou","Number":"3569","RawContent":null,"Title":"Enable and fix CA1802 warnings","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable and fix CA1802 warnings.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3569)","Url":"https://github.com/dotnet/winforms/pull/3569","RelatedDescription":"Closed or merged PR \"Enable and fix CA1802 warnings\" (#3569)"},{"Id":"656309248","IsPullRequest":true,"CreatedAt":"2020-07-14T04:12:27","Actor":"RussKie","Number":"3574","RawContent":null,"Title":"ListBox nested classes cleanup","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n## Proposed changes\r\n\r\n- Automated changes, nothing functional\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3574)","Url":"https://github.com/dotnet/winforms/pull/3574","RelatedDescription":"Open PR \"ListBox nested classes cleanup\" (#3574)"},{"Id":"656276548","IsPullRequest":false,"CreatedAt":"2020-07-14T02:32:15","Actor":"Zheng-Li01","Number":"3573","RawContent":null,"Title":"Missing the description for the ‘AutoUpgradeEnabled’ property of FolderBrowserDialog/SaveFileDialog/OpenFileDialog controls in the description pane ","State":"open","Body":"## Version info:\r\nDev16 16.8.0 Preview 1.0 [30307.178.master] + .NET 5.0 Preview8.20363.2\r\n\r\n## Have you experienced this same bug with .NET Framework?\r\nNo\r\n\r\n## More info:\r\n1.This is not a regression issue that can repro in Dev16 16.6.3.\r\n2.The '‘UserDescriptionForTitle’ & ‘AutoUpgradeEnabled’ properties are new added for core project, not appear in the property browser window in the Framework project.\r\n\r\n## Minimal Reproduction Scenario\r\n1. Create a winforms .NET Core project with a FolderBrowserDialog control.\r\n2. Select the ‘AutoUpgradeEnabled’ property of folderBrowserDialog1 in the property browser window.\r\n3. Observe the description for ‘AutoUpgradeEnabled’ property in the description pane.\r\n\r\n## Expected Behavior\r\nHave the description for ‘AutoUpgradeEnabled’ property in the description pane.\r\n\r\n## Current Behavior\r\n1. Missing the description for ‘AutoUpgradeEnabled’ property in the description pane.\r\n2. For the ‘UserDescriptionForTitle’ of FolderBrowserDialog control, the description is inaccurate.(SaveFileDialog/OpenFileDialog are not having the property).\r\n\r\n![Core](https://user-images.githubusercontent.com/38325459/87373785-ebdeeb80-c5bc-11ea-8a45-97e3627d01c2.PNG)","Url":"https://github.com/dotnet/winforms/issues/3573","RelatedDescription":"Open issue \"Missing the description for the ‘AutoUpgradeEnabled’ property of FolderBrowserDialog/SaveFileDialog/OpenFileDialog controls in the description pane \" (#3573)"},{"Id":"655345341","IsPullRequest":true,"CreatedAt":"2020-07-14T00:27:50","Actor":"gpetrou","Number":"3563","RawContent":null,"Title":"Add tests for ToolStripItemCollection Find method","State":"closed","Body":"## Proposed changes\r\n\r\n- Add tests for ToolStripItemCollection Find method.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3563)","Url":"https://github.com/dotnet/winforms/pull/3563","RelatedDescription":"Closed or merged PR \"Add tests for ToolStripItemCollection Find method\" (#3563)"},{"Id":"656116832","IsPullRequest":true,"CreatedAt":"2020-07-13T20:26:35","Actor":"gpetrou","Number":"3571","RawContent":null,"Title":"Add tests for ListViewItemCollection Find method","State":"open","Body":"## Proposed changes\r\n\r\n- Add tests for ListViewItemCollection Find method.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3571)","Url":"https://github.com/dotnet/winforms/pull/3571","RelatedDescription":"Open PR \"Add tests for ListViewItemCollection Find method\" (#3571)"},{"Id":"656069668","IsPullRequest":false,"CreatedAt":"2020-07-13T19:00:24","Actor":"JeremyKuhne","Number":"3570","RawContent":null,"Title":"API Proposal: Add `IDeviceContext` to events that hold `Graphics`","State":"open","Body":"## Proposal\r\n\r\nAdd `IDeviceContext` to all Windows Forms `EventArgs` that wrap a `System.Drawing.Graphics`.\r\n\r\n- `PaintEventArgs`\r\n- `DrawItemEventArgs`\r\n- `DataGridViewRowPostPaintEventArgs`\r\n- `DrawListViewItemEventArgs`\r\n- `DrawToolTipEventArgs`\r\n- `DrawTreeNodeEventArgs`\r\n- `ToolStripArrowRenderEventArgs`\r\n- `ToolStripContentPanelRenderEventArgs`\r\n- `ToolStripItemRenderEventArgs`\r\n- `ToolStripPanelRenderEventArgs`\r\n- `ToolStripRenderEventArgs`\r\n\r\n``` C#\r\nnamespace System.Windows.Forms\r\n{\r\n    public class PaintEventArgs : EventArgs, IDisposable, IDeviceContext\r\n    {\r\n        IntPtr IDeviceContext.GetHdc() => Graphics?.GetHdc() ?? IntPtr.Zero;\r\n        void IDeviceContext.ReleaseHdc() => Graphics?.ReleaseHdc();\r\n    }\r\n\r\n    public class DrawItemEventArgs: EventArgs, IDeviceContext\r\n    {\r\n        IntPtr IDeviceContext.GetHdc() => Graphics?.GetHdc() ?? IntPtr.Zero;\r\n        void IDeviceContext.ReleaseHdc() => Graphics?.ReleaseHdc();\r\n\r\n        void IDisposable.Dispose()\r\n        {\r\n            // IDeviceContext derives from IDisposable. We will not dispose of the contained Graphics\r\n            // as we historically did not take ownership of it.\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n## Justification\r\n\r\nWindows Forms was designed around GDI+, which `System.Drawing` is a wrapper around. `Graphics` was the primary abstraction. Performance of GDI+ wasn't sufficient and internally a number of code paths were changed to utilize the GDI `HDC`. `Graphics` exposes the `HDC` via the `IDeviceContext` interface, which WinForms uses internally and also exposes on public APIs (see [`VisualStyleRenderer`](https://apisof.net/catalog/System.Windows.Forms.VisualStyles.VisualStyleRenderer) and [`TextRenderer`](https://apisof.net/catalog/System.Windows.Forms.TextRenderer)).\r\n\r\nExposing `IDeviceContext` allows us to stop unwrapping event args and allows us to extract the `HDC` with internal optimizations:\r\n\r\n- Internal state info on the event args allows us to know that we don't need to apply state or create a `Graphics` object if we haven't already.\r\n- It also allows end users to pass event args back into `IDeviceContext` APIs without retrieving `Graphics`, which can create `Graphics` or force us to apply it's (likely unchanged) state.\r\n\r\n## Implementation Details\r\n\r\nWe'll explicitly implement `IDeviceContext` to avoid having the methods directly visible on the event args. The only real benefit is treating the event args as an `IDeviceContext` object.\r\n\r\nOn event args where we don't already have `IDisposable` we'll explicitly define `IDisposable.Dispose()` and we will **not** dispose passed in arguments (notably `Graphics`).","Url":"https://github.com/dotnet/winforms/issues/3570","RelatedDescription":"Open issue \"API Proposal: Add `IDeviceContext` to events that hold `Graphics`\" (#3570)"},{"Id":"655970618","IsPullRequest":false,"CreatedAt":"2020-07-13T16:09:43","Actor":"zwergenaufstand","Number":"3568","RawContent":null,"Title":"Setting SplitContainer.Panel2MinSize incorrectly changes SplitterDistance","State":"open","Body":"* .NET Core Version: \r\n3.1.301\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**Problem description:**\r\nChanging Panel2MinSize in a horizontally oriented SplitContainer (Panel2 below Panel1) changes the SplitterDistance if Panel2MinSize > Panel2.Width.\r\n\r\n**Expected behavior:**\r\nSplitContainer should respect its Orientation when changing Panel2MinSize. Changing Panel2MinSize in a horizontally oriented SplitContainer (Panel2 below Panel1) should only change the SplitterDistance if Panel2MinSize > Panel2.Height.\r\n\r\n**Minimal repro:**\r\n```cs\r\nvar form = new Form() { Size = new Size(200, 500) };\r\nvar splitContainer = new SplitContainer() { Orientation = Orientation.Horizontal };\r\nsplitContainer.Dock = DockStyle.Fill;\r\nform.Controls.Add(splitContainer);\r\nform.Show();\r\n\r\nDebug.WriteLine(splitContainer.Panel2MinSize); // 25\r\nDebug.WriteLine(splitContainer.Panel2.Height); // 227\r\nDebug.WriteLine(splitContainer.SplitterDistance); // 230\r\n\r\nsplitContainer.Panel2MinSize = 205;\r\n\r\nDebug.WriteLine(splitContainer.Panel2MinSize); // 205\r\nDebug.WriteLine(splitContainer.Panel2.Height); // 269 (should be 227)\r\nDebug.WriteLine(splitContainer.SplitterDistance); // 188 (should be 230)\r\n```","Url":"https://github.com/dotnet/winforms/issues/3568","RelatedDescription":"Open issue \"Setting SplitContainer.Panel2MinSize incorrectly changes SplitterDistance\" (#3568)"},{"Id":"654532394","IsPullRequest":true,"CreatedAt":"2020-07-13T12:40:15","Actor":"gpetrou","Number":"3554","RawContent":null,"Title":"Enable and fix CA1507 warnings","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable and fix CA1507 warnings in non-test projects.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3554)","Url":"https://github.com/dotnet/winforms/pull/3554","RelatedDescription":"Closed or merged PR \"Enable and fix CA1507 warnings\" (#3554)"},{"Id":"654536403","IsPullRequest":true,"CreatedAt":"2020-07-13T12:27:00","Actor":"gpetrou","Number":"3557","RawContent":null,"Title":"Enable and fix CA1835 warnings","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable and fix CA1835 warnings.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3557)","Url":"https://github.com/dotnet/winforms/pull/3557","RelatedDescription":"Closed or merged PR \"Enable and fix CA1835 warnings\" (#3557)"},{"Id":"655516928","IsPullRequest":false,"CreatedAt":"2020-07-13T01:10:21","Actor":"JeremyKuhne","Number":"3567","RawContent":null,"Title":"Leak of NativeImageList","State":"open","Body":"The finalizer asserted when I was fiddling around in WinFormsControlTest. Here is the dumped originating stack:\r\n\r\n```\r\n   at System.Windows.Forms.ImageList.NativeImageList..ctor(IStream pstm)\r\n   at System.Windows.Forms.ImageListStreamer..ctor(SerializationInfo info, StreamingContext context)\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)\r\n   at System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)\r\n   at System.Runtime.Serialization.ObjectManager.CompleteISerializableObject(Object obj, SerializationInfo info, StreamingContext context)\r\n   at System.Runtime.Serialization.ObjectManager.FixupSpecialObject(ObjectHolder holder)\r\n   at System.Runtime.Serialization.ObjectManager.DoFixups()\r\n   at System.Runtime.Serialization.Formatters.Binary.ObjectReader.Deserialize(BinaryParser serParser, Boolean fCheck)\r\n   at System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(Stream serializationStream, Boolean check)\r\n   at System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(Stream serializationStream)\r\n   at System.Resources.Extensions.DeserializingResourceReader.ReadBinaryFormattedObject()\r\n   at System.Resources.Extensions.DeserializingResourceReader.DeserializeObject(Int32 typeIndex)\r\n   at System.Resources.Extensions.DeserializingResourceReader.LoadObjectV2(Int32 pos, ResourceTypeCode& typeCode)\r\n   at System.Resources.Extensions.DeserializingResourceReader.ResourceEnumerator.get_Entry()\r\n   at System.Resources.Extensions.DeserializingResourceReader.ResourceEnumerator.get_Current()\r\n   at System.ComponentModel.ComponentResourceManager.FillResources(CultureInfo culture, ResourceSet& resourceSet)\r\n   at System.ComponentModel.ComponentResourceManager.ApplyResources(Object value, String objectName, CultureInfo culture)\r\n   at System.ComponentModel.ComponentResourceManager.ApplyResources(Object value, String objectName)\r\n   at WinformsControlsTest.TreeViewTest.InitializeComponent()\r\n   at WinformsControlsTest.TreeViewTest..ctor()\r\n   at WinformsControlsTest.MainForm.<>c.<GetButtonsInitInfo>b__1_9(Object obj, EventArgs e)\r\n   at System.Windows.Forms.Control.OnClick(EventArgs e)\r\n   at System.Windows.Forms.Button.OnClick(EventArgs e)\r\n   at System.Windows.Forms.Button.OnMouseUp(MouseEventArgs mevent)\r\n   at System.Windows.Forms.Control.WmMouseUp(Message& m, MouseButtons button, Int32 clicks)\r\n   at System.Windows.Forms.Control.WndProc(Message& m)\r\n   at System.Windows.Forms.ButtonBase.WndProc(Message& m)\r\n   at System.Windows.Forms.Button.WndProc(Message& m)\r\n   at System.Windows.Forms.Control.ControlNativeWindow.OnMessage(Message& m)\r\n   at System.Windows.Forms.Control.ControlNativeWindow.WndProc(Message& m)\r\n   at System.Windows.Forms.NativeWindow.Callback(IntPtr hWnd, WM msg, IntPtr wparam, IntPtr lparam)\r\n   at Interop.User32.DispatchMessageW(MSG& msg)\r\n   at Interop.User32.DispatchMessageW(MSG& msg)\r\n   at System.Windows.Forms.Application.ComponentManager.Interop.Mso.IMsoComponentManager.FPushMessageLoop(UIntPtr dwComponentID, msoloop uReason, Void* pvLoopData)\r\n   at System.Windows.Forms.Application.ThreadContext.RunMessageLoopInner(msoloop reason, ApplicationContext context)\r\n   at System.Windows.Forms.Application.ThreadContext.RunMessageLoop(msoloop reason, ApplicationContext context)\r\n   at System.Windows.Forms.Application.Run(Form mainForm)\r\n   at WinformsControlsTest.Program.Main()\r\n```","Url":"https://github.com/dotnet/winforms/issues/3567","RelatedDescription":"Open issue \"Leak of NativeImageList\" (#3567)"},{"Id":"654505269","IsPullRequest":true,"CreatedAt":"2020-07-12T13:45:16","Actor":"RussKie","Number":"3552","RawContent":null,"Title":"Collect memory dumps for hung tests","State":"closed","Body":"Resolves #3298\r\n\r\n\r\n## Proposed changes\r\n\r\n- Spin up a background thread that signals at 15 minute mark, and looks for a dotnet.exe process that runs our tests. \r\n- If one is or more processes are found, collect their heap dumps and kill those processes.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3552)","Url":"https://github.com/dotnet/winforms/pull/3552","RelatedDescription":"Closed or merged PR \"Collect memory dumps for hung tests\" (#3552)"},{"Id":"655387762","IsPullRequest":true,"CreatedAt":"2020-07-12T12:48:40","Actor":"dotnet-maestro[bot]","Number":"3566","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200711.2\r\n- **Date Produced**: 7/11/2020 9:09 PM\r\n- **Commit**: f37dd6fc8595e130909dcb3085a56342d04aa20c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.8.20358.9 to 5.0.0-preview.8.20361.2\r\n  - **System.Diagnostics.EventLog**: from 5.0.0-preview.8.20358.9 to 5.0.0-preview.8.20361.2\r\n  - **System.DirectoryServices**: from 5.0.0-preview.8.20358.9 to 5.0.0-preview.8.20361.2\r\n  - **System.Drawing.Common**: from 5.0.0-preview.8.20358.9 to 5.0.0-preview.8.20361.2\r\n  - **System.IO.Packaging**: from 5.0.0-preview.8.20358.9 to 5.0.0-preview.8.20361.2\r\n  - **System.CodeDom**: from 5.0.0-preview.8.20358.9 to 5.0.0-preview.8.20361.2\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.8.20358.9 to 5.0.0-preview.8.20361.2\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.8.20358.9 to 5.0.0-preview.8.20361.2\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.8.20358.9 to 5.0.0-preview.8.20361.2\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.8.20358.9 to 5.0.0-preview.8.20361.2\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.8.20358.9 to 5.0.0-preview.8.20361.2\r\n  - **Microsoft.NETCore.ILDAsm**: from 5.0.0-preview.8.20358.9 to 5.0.0-preview.8.20361.2\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.8.20358.9 to 5.0.0-preview.8.20361.2\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.8.20358.9 to 5.0.0-preview.8.20361.2\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.8.20358.9 to 5.0.0-preview.8.20361.2\r\n  - **Microsoft.NETCore.App.Internal**: from 5.0.0-preview.8.20358.9 to 5.0.0-preview.8.20361.2\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.8.20358.9 to 5.0.0-preview.8.20361.2\r\n  - **System.Reflection.MetadataLoadContext**: from 5.0.0-preview.8.20358.9 to 5.0.0-preview.8.20361.2\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.8.20358.9 to 5.0.0-preview.8.20361.2\r\n  - **System.Security.AccessControl**: from 5.0.0-preview.8.20358.9 to 5.0.0-preview.8.20361.2\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.8.20358.9 to 5.0.0-preview.8.20361.2\r\n  - **System.Security.Cryptography.Xml**: from 5.0.0-preview.8.20358.9 to 5.0.0-preview.8.20361.2\r\n  - **System.Security.Permissions**: from 5.0.0-preview.8.20358.9 to 5.0.0-preview.8.20361.2\r\n  - **System.Security.Principal.Windows**: from 5.0.0-preview.8.20358.9 to 5.0.0-preview.8.20361.2\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3566)","Url":"https://github.com/dotnet/winforms/pull/3566","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3566)"},{"Id":"655356889","IsPullRequest":true,"CreatedAt":"2020-07-12T08:33:08","Actor":"gpetrou","Number":"3565","RawContent":null,"Title":"Replace Dev10 with .NET Framework 4.0 in comments","State":"open","Body":"Contributes to #3546\r\n\r\n\r\n## Proposed changes\r\n\r\n- Replace Dev10 with .NET Framework 4.0 in comments.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3565)","Url":"https://github.com/dotnet/winforms/pull/3565","RelatedDescription":"Open PR \"Replace Dev10 with .NET Framework 4.0 in comments\" (#3565)"},{"Id":"654534649","IsPullRequest":true,"CreatedAt":"2020-07-11T23:14:33","Actor":"gpetrou","Number":"3556","RawContent":null,"Title":"Enable and fix CA1830 warnings","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable and fix CA1830 warnings.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3556)","Url":"https://github.com/dotnet/winforms/pull/3556","RelatedDescription":"Closed or merged PR \"Enable and fix CA1830 warnings\" (#3556)"},{"Id":"655253939","IsPullRequest":true,"CreatedAt":"2020-07-11T23:00:29","Actor":"gpetrou","Number":"3562","RawContent":null,"Title":"Enable and fix CA1200 warnings","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable and fix CA1200 warnings.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3562)","Url":"https://github.com/dotnet/winforms/pull/3562","RelatedDescription":"Closed or merged PR \"Enable and fix CA1200 warnings\" (#3562)"},{"Id":"655250236","IsPullRequest":true,"CreatedAt":"2020-07-11T17:46:06","Actor":"gpetrou","Number":"3561","RawContent":null,"Title":"Enable and fix CA1810 warnings","State":"open","Body":"## Proposed changes\r\n\r\n- Enable and fix CA1810 warnings.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3561)","Url":"https://github.com/dotnet/winforms/pull/3561","RelatedDescription":"Open PR \"Enable and fix CA1810 warnings\" (#3561)"},{"Id":"654862154","IsPullRequest":true,"CreatedAt":"2020-07-10T23:33:17","Actor":"mmitche","Number":"3559","RawContent":null,"Title":"Disable per-build SDL + other validations","State":"closed","Body":"Reduces overall build time. These validations are being run nightly and on every build candidate\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3559)","Url":"https://github.com/dotnet/winforms/pull/3559","RelatedDescription":"Closed or merged PR \"Disable per-build SDL + other validations\" (#3559)"},{"Id":"654988234","IsPullRequest":false,"CreatedAt":"2020-07-10T19:22:38","Actor":"vladimir-krestov","Number":"3560","RawContent":null,"Title":"[Accessibility] There is no ability to set custom Accessible Name, Role, Description to some AccessibleObjects","State":"open","Body":"* Original [Bug 1108206](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1108206)\r\n\r\n* .NET Core Version: **5.0**\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\n- A customer can't set a custom Name for the following AccessibleObjects:       \r\n  \r\n1. ToolStrip\r\n2. ToolStripItems\r\n3. StatusStrip\r\n4. StatusStripItems\r\n5. MenuStrip\r\n6. MenuItems\r\n\r\n**Expected behavior:**\r\n- A customer can set the custom values of AccessibleName/Role/Description for any AccessibleObjects\r\n\r\n**Minimal repro:**\r\n- Create a Core 5.0 app\r\n- Add a control from the list above to the form\r\n- Set AccessibleName/Role/Description for it\r\n- Run the app and check the control's AccessibleObject using Inspect\r\n","Url":"https://github.com/dotnet/winforms/issues/3560","RelatedDescription":"Open issue \"[Accessibility] There is no ability to set custom Accessible Name, Role, Description to some AccessibleObjects\" (#3560)"},{"Id":"654340660","IsPullRequest":true,"CreatedAt":"2020-07-10T15:24:28","Actor":"mmitche","Number":"3551","RawContent":null,"Title":"Add sdl config","State":"closed","Body":"This enables nightly SDL validation to run, rather than running during the build\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3551)","Url":"https://github.com/dotnet/winforms/pull/3551","RelatedDescription":"Closed or merged PR \"Add sdl config\" (#3551)"},{"Id":"654595751","IsPullRequest":false,"CreatedAt":"2020-07-10T08:08:22","Actor":"MagicAndre1981","Number":"3558","RawContent":null,"Title":"InvokeRequired sometimes not working correctly","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version:  3.1.5\r\n\r\n```\r\n.NET Core SDK (gemäß \"global.json\"):\r\n Version:   3.1.301\r\n Commit:    7feb845744\r\n\r\nLaufzeitumgebung:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.301\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.5\r\n  Commit:  65cd789777\r\n\r\n.NET Core SDKs installed:\r\n  2.1.807 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.204 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.207 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.300 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.301 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n<!-- Yes / No -->\r\n\r\nNo, the code works for years without any issues\r\n\r\n**Problem description:**\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\nI have the issue that [InvokeRequired](https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.control.invokerequired?view=netcore-3.1) returns false where it should return true. This causes that directly updating of text fails with System.InvalidOperationException: The calling thread cannot access this object because a different thread owns it.\r\n\r\n![image](https://user-images.githubusercontent.com/8274816/87131101-34806700-c294-11ea-867b-f9276fa68f7d.png)\r\n\r\n**Expected behavior:**\r\n\r\nInvokeRequired works fine\r\n\r\n**Minimal repro:**\r\n\r\nI tried to create a repro and here it always works and I have no idea why. For the problematic application, this is a .net framework 4.8 WinForms application. I followed the [guide for migration](https://docs.microsoft.com/en-us/dotnet/core/porting/winforms), converted the csproj to SDK style, set target to netcoreapp3.1, added UseWindowsForms.\r\n\r\n**Workaround**\r\n\r\nwhen I set breakpoint at first line and wait a bit before I hit F5 to continue, the call works fine.","Url":"https://github.com/dotnet/winforms/issues/3558","RelatedDescription":"Open issue \"InvokeRequired sometimes not working correctly\" (#3558)"},{"Id":"654533537","IsPullRequest":true,"CreatedAt":"2020-07-10T06:00:40","Actor":"RussKie","Number":"3555","RawContent":null,"Title":"Test traits","State":"open","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3555)","Url":"https://github.com/dotnet/winforms/pull/3555","RelatedDescription":"Open PR \"Test traits\" (#3555)"},{"Id":"654510153","IsPullRequest":true,"CreatedAt":"2020-07-10T04:58:13","Actor":"JeremyKuhne","Number":"3553","RawContent":null,"Title":"Remove WindowsGraphics and DeviceContext","State":"open","Body":"This change removes all of the misc\\GDI classes and replaces them with new scopes and isolated caches for Font-to-HFONT and \"measurement\" screen DCs.\r\n\r\nThis reduces significant allocations and complexity and improves performance with the related code paths. It also facilitates continued unravelling of HDC Graphics wrapping.\r\n\r\nThis is the first draft PR. It works and passes tests, with the exception of Maui for some reason which isn't clear. I'm going to be doing more scrubbing, writing tests, and measuring performance. In the meantime I welcome feedback.\r\n\r\nCode that lived in `WindowsFont` moved mostly to `TextExtensions` and works directly on native GDI handles. The only known difference is that I currently don't cache the font height, but I'm planning to reintroduce that after I walk through the call chains.\r\n\r\ncc: @Tanya-Solyanik, @KlausLoeffelmann, @RussKie \n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3553)","Url":"https://github.com/dotnet/winforms/pull/3553","RelatedDescription":"Open PR \"Remove WindowsGraphics and DeviceContext\" (#3553)"},{"Id":"654240456","IsPullRequest":true,"CreatedAt":"2020-07-09T17:48:56","Actor":"Tanya-Solyanik","Number":"3550","RawContent":null,"Title":"Fixes #3549","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3549 \r\n\r\n\r\n## Proposed changes\r\n\r\nuse method that accesses DisplayMember property instead of ToString\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\nsee the issue\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\nmanual\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3550)","Url":"https://github.com/dotnet/winforms/pull/3550","RelatedDescription":"Open PR \"Fixes #3549\" (#3550)"},{"Id":"654228677","IsPullRequest":false,"CreatedAt":"2020-07-09T17:28:20","Actor":"Tanya-Solyanik","Number":"3549","RawContent":null,"Title":"ComboBox.DisplayMember property should be used as an accessible name for combobox items","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n.NET 5.0\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nworks correctly in 4.7.2, does not work in 4.8\r\n\r\n**Problem description:**\r\nAT user does not know what items are available for selection \r\n\r\n**Expected behavior:**\r\nDisplayMember property is used to access name\r\n\r\n**Minimal repro:**\r\n\t1. Create a new winforms application targeting Core\r\n\t2. Add a class with at least one string property (Name in this case)\r\n\r\n```\r\n\t    public class Person\r\n\t    {\r\n\t        public Person(int id, string name)\r\n\t        {\r\n\t            Id = id;\r\n\t            Name = name;\r\n\t        }\r\n\t\r\n\t        public int Id { get; set; }\r\n\t        public string Name { get; set; }\r\n\t    }\r\n```\r\n\t\r\n3. Add a combobox to the form\r\n4. Create a collection of \"Persons\"( type created in step 2) \r\n5. Set combobox's DataSource property to collection created in step3 and DisplayMember property to the name of the string property in the class from step 2 \r\n\r\n```\r\n\t        private void Form1_Load(object sender, EventArgs e)\r\n\t        {\r\n\t            List<Person> persons = new List<Person>();\r\n\t\r\n\t            persons.Add(new Person(1, \"Name 1\"));\r\n\t            persons.Add(new Person(2, \"Name 2\"));\r\n\t            persons.Add(new Person(3, \"Name 3\"));\r\n\t            persons.Add(new Person(4, \"Name 4\"));\r\n\t            persons.Add(new Person(5, \"Name 5\"));\r\n\t\r\n\t            comboBox1.DataSource = persons;\r\n\t            comboBox1.DisplayMember = \"Name\";\r\n\t       }\r\n```\r\n6. Run this application under the inspect tool\r\n**Result**: type name is used as accessible name for the combobox list items, because a object.ToString is called:\r\n![image](https://user-images.githubusercontent.com/15823268/87098832-1582c600-c1fd-11ea-93e1-df9b5980ebcf.png)\r\n\r\n\r\nExpected:\r\nAccessible tree should show the same strings as the drop down shows\r\n\r\n![image](https://user-images.githubusercontent.com/15823268/87098581-7d84dc80-c1fc-11ea-9c63-6a1652576143.png)\r\n","Url":"https://github.com/dotnet/winforms/issues/3549","RelatedDescription":"Open issue \"ComboBox.DisplayMember property should be used as an accessible name for combobox items\" (#3549)"},{"Id":"656268241","IsPullRequest":false,"CreatedAt":"2020-07-06T14:19:41","Actor":"rLindorfer","Number":"3572","RawContent":null,"Title":"Where is the Select event for the ToolStripMenuItem?","State":"open","Body":"# The MenuItem.Select event of the MenuItem is missing in the ToolStripMenuItem\r\n\r\nThis event should be typically raised when the user places the mouse pointer over the menu item. The event can also be raised when the user highlights a menu item using the keyboard by scrolling to the menu item with the arrow keys. \r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.menuitem.select?view=netframework-4.8\r\n\r\n# General\r\n\r\nWhen .NET Core 3.1 was introduced, there was a breaking change in using ContextMenus. MenuItem should be replaced by the ToolStripMenuItem. https://docs.microsoft.com/en-us/dotnet/core/compatibility/winforms\r\n\r\nHowever, when I try to replace MenuItem with the ToolStripMenuItem, it is not possible for me to get feedback when the user selects an item using the keyboard.\r\n\r\nSome workarounds are the following events: MouseEnter, MouseLeave, MouseHover, etc.\r\nBut this does not cover the selection of a ToolStripMenuItem via keyboard (e.g. arrow keys)!\r\n\r\nhttps://social.msdn.microsoft.com/Forums/en-US/39d5376c-a4c7-4136-b0d1-9193dc215ff8/where-is-select-event-of-toolstripmenuitem\r\nhttps://stackoverflow.com/questions/464493/net1-menuitem-vs-net2-toolstripmenuitem-select-event\r\n","Url":"https://github.com/dotnet/winforms/issues/3572","RelatedDescription":"Open issue \"Where is the Select event for the ToolStripMenuItem?\" (#3572)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-07-15T05:30:53.6898121Z","RunDurationInMilliseconds":637}