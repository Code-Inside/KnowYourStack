{"Data":{"GitHub":{"Issues":[{"Id":"1909619882","IsPullRequest":true,"CreatedAt":"2023-09-22T23:57:50","Actor":"dotnet-maestro[bot]","Number":"9981","RawContent":null,"Title":"[release/8.0] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:5f9d099d-0d05-4b82-cc41-08db9e4039c1)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 5f9d099d-0d05-4b82-cc41-08db9e4039c1\r\n- **Build**: 20230922.12\r\n- **Date Produced**: September 22, 2023 11:09:14 PM UTC\r\n- **Commit**: e95228dbcf7a69f87b00da969b0cabf2e62ab207\r\n- **Branch**: refs/heads/release/8.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **System.CodeDom**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **System.Data.Odbc**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **System.Data.OleDb**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **System.IO.Ports**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **System.Management**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **System.Reflection.Context**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **System.Runtime.Caching**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **System.Speech**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **System.Text.Json**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-rc.2.23470.7 to 8.0.0-rtm.23472.12][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/49bf70a429...e95228dbcf\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:5f9d099d-0d05-4b82-cc41-08db9e4039c1)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9981)","Url":"https://github.com/dotnet/winforms/pull/9981","RelatedDescription":"Closed or merged PR \"[release/8.0] Update dependencies from dotnet/runtime\" (#9981)"},{"Id":"1909486912","IsPullRequest":true,"CreatedAt":"2023-09-22T20:32:03","Actor":"halgab","Number":"9980","RawContent":null,"Title":"Showcase problem with missing TypeDescriptorHelper.TryGetAttribute overload","State":"open","Body":"This is just to showcase why we need a new overload for `TypeDescriptorHelper.TryGetAttribute` as seen in #9643\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9980)","Url":"https://github.com/dotnet/winforms/pull/9980","RelatedDescription":"Open PR \"Showcase problem with missing TypeDescriptorHelper.TryGetAttribute overload\" (#9980)"},{"Id":"1908100206","IsPullRequest":true,"CreatedAt":"2023-09-22T17:45:42","Actor":"github-actions[bot]","Number":"9977","RawContent":null,"Title":"[release/8.0-rc2] Fix Narrator cannot announce correctly and getting incorrect rectanges","State":"closed","Body":"Porting a regression fix from main - #9970 to release/8.0-rc2\r\n\r\n### Customer Impact\r\nAccessibility tools user will be getting incorrect text selection information and will not know when a full document is selected.\r\n\r\n### Regression\r\nYes, in .NET8.0,  caused by a refactoring of how shortcuts and keyboard commands are handled in TextBox and other text controls. \r\n\r\n### Testing\r\nManual testing under UIA accessibility tools – Narrator, Inspect and Accessibility Insights\r\n\r\n### Risk\r\nLow – only accessibility scenarios are affected.\r\n\r\n### Details\r\nBase on https://github.com/dotnet/winforms/pull/9960, we need update the ITextRangeProvider.GetBoundingRectangles() method to make sure the rectangeles for the selection text in TextBox can be correctly drawn.\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9977)","Url":"https://github.com/dotnet/winforms/pull/9977","RelatedDescription":"Closed or merged PR \"[release/8.0-rc2] Fix Narrator cannot announce correctly and getting incorrect rectanges\" (#9977)"},{"Id":"1908090762","IsPullRequest":true,"CreatedAt":"2023-09-22T17:24:21","Actor":"github-actions[bot]","Number":"9976","RawContent":null,"Title":"[release/8.0] Fix Accessibility: Can't select TreeView items using UIAutomation SelectionItem.Select","State":"closed","Body":"Backport of #9955 to release/8.0\n\n/cc @Epica3055\n\n## Customer Impact\n\n## Testing\n\n## Risk\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9976)","Url":"https://github.com/dotnet/winforms/pull/9976","RelatedDescription":"Closed or merged PR \"[release/8.0] Fix Accessibility: Can't select TreeView items using UIAutomation SelectionItem.Select\" (#9976)"},{"Id":"1908089482","IsPullRequest":true,"CreatedAt":"2023-09-22T17:24:10","Actor":"github-actions[bot]","Number":"9975","RawContent":null,"Title":"[main] Fix Accessibility: Can't select TreeView items using UIAutomation SelectionItem.Select","State":"closed","Body":"Backport of #9955 to main\n\n/cc @Epica3055\n\n## Customer Impact\n\n## Testing\n\n## Risk\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9975)","Url":"https://github.com/dotnet/winforms/pull/9975","RelatedDescription":"Closed or merged PR \"[main] Fix Accessibility: Can't select TreeView items using UIAutomation SelectionItem.Select\" (#9975)"},{"Id":"1908101104","IsPullRequest":true,"CreatedAt":"2023-09-22T17:22:34","Actor":"github-actions[bot]","Number":"9978","RawContent":null,"Title":"[release/8.0] Fix Narrator cannot announce correctly and getting incorrect rectanges","State":"closed","Body":"Porting a regression fix from main - https://github.com/dotnet/winforms/pull/9970 to release/8.0\r\n\r\n### Customer Impact\r\nAccessibility tools user will be getting incorrect text selection information and will not know when a full document is selected.\r\n\r\n### Regression\r\nYes, in .NET8.0, caused by a refactoring of how shortcuts and keyboard commands are handled in TextBox and other text controls.\r\n\r\n### Testing\r\nManual testing under UIA accessibility tools – Narrator, Inspect and Accessibility Insights\r\n\r\n### Risk\r\nLow – only accessibility scenarios are affected.\r\n\r\n### Details\r\nBase on https://github.com/dotnet/winforms/pull/9960, we need update the ITextRangeProvider.GetBoundingRectangles() method to make sure the rectangeles for the selection text in TextBox can be correctly drawn.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9978)","Url":"https://github.com/dotnet/winforms/pull/9978","RelatedDescription":"Closed or merged PR \"[release/8.0] Fix Narrator cannot announce correctly and getting incorrect rectanges\" (#9978)"},{"Id":"1907972485","IsPullRequest":true,"CreatedAt":"2023-09-22T16:13:44","Actor":"Tanya-Solyanik","Number":"9974","RawContent":null,"Title":"[RC2] Can't select TreeView items using UIAutomation SelectionItem.Select ","State":"closed","Body":"[This PR is a correction on incorrectly merged PR - #9955 ]\r\n\r\nFix #9822\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n\r\n\r\n## Proposed changes\r\n\r\n- \r\n- TreeViewItem add `SelectItem` method.\r\n- \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n\r\n## Regression? \r\n\r\n- Yes \r\n\r\n\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n\r\n### Before\r\n\r\n![9955_before](https://github.com/dotnet/winforms/assets/135201996/5b540a54-d3bc-4f6b-9f4b-2e36bca47d9d)\r\n\r\n### After\r\n\r\n![9955_after](https://github.com/dotnet/winforms/assets/135201996/403409a3-c30f-4fa9-b07b-95718a8f28a4)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- unit test\r\n- \r\n\r\n\r\n\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n8.0.0-preview.7.23375.6\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9955)\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9974)","Url":"https://github.com/dotnet/winforms/pull/9974","RelatedDescription":"Closed or merged PR \"[RC2] Can't select TreeView items using UIAutomation SelectionItem.Select \" (#9974)"},{"Id":"1908358090","IsPullRequest":true,"CreatedAt":"2023-09-22T07:38:08","Actor":"SimonZhao888","Number":"9979","RawContent":null,"Title":"Fix TabPage cannot add to TablControl in DemoConsole","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #9968 \r\n\r\nWhen we click the control of 'Add Tab', an exception message will be thrown in the CreateName method:\r\n![image](https://github.com/dotnet/winforms/assets/133954995/e16811f8-19e8-4919-8f7d-75d3650cec26)\r\nDataGridViewComboBoxColumn cannot be converted to component, \r\n![image](https://github.com/dotnet/winforms/assets/133954995/ab4056b7-d966-4b87-a169-d028e5e18fda)\r\n![image](https://github.com/dotnet/winforms/assets/133954995/dce94a63-6e84-4b08-a86d-e2a09784b92a)\r\n\r\nSo we need to modify the creation method of the DataGridViewComboBoxColumn object.\r\n\r\n\r\n## Proposed changes\r\n\r\n- Modify the creation way of DataGridViewComboBoxColumn object.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- TabPage can add to TabControl in DemoConsole.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n-Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![image](https://github.com/dotnet/winforms/assets/133954995/6dbb188b-e34a-420d-b0f5-13386f3a4d91)\r\n\r\n### After\r\n\r\n![TabControl_Image](https://github.com/dotnet/winforms/assets/133954995/68acd370-2ea9-4567-bd82-2a56a7d04bc7)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual(DemoConsole)\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- 8.0.100-preview.7.23376.3\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9979)","Url":"https://github.com/dotnet/winforms/pull/9979","RelatedDescription":"Open PR \"Fix TabPage cannot add to TablControl in DemoConsole\" (#9979)"},{"Id":"1906514948","IsPullRequest":true,"CreatedAt":"2023-09-22T04:02:36","Actor":"SimonZhao888","Number":"9970","RawContent":null,"Title":"Fix Narrator cannot announce correctly and getting incorrect rectanges","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #9828\r\n\r\n\r\n## Proposed changes\r\n\r\n- Base on [PR 9960](https://github.com/dotnet/winforms/pull/9960), we need update the ITextRangeProvider.GetBoundingRectangles() method to make sure the rectangeles for the selection text in TextBox can be correctly drawn.\r\n- Update the method of ProcessCmdKey(ref Message m, Keys keyData) in TextBox class.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- When using keyboard: Ctrl+A or mouse to choose all texts in TextBox/ComboBox/DomainUpDown/NumericUpDown, Narrator cannot focus entire texts and announce \"Document selected\" to user\r\n\r\n## Regression? \r\n\r\n- Yes \r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![image](https://github.com/dotnet/winforms/assets/133954995/7b1e7b37-49e8-4d62-b155-99d8c5e14cdd)\r\n\r\n### After\r\n\r\nKeep the same behavior with .Net 7.0, narrator can focus entire texts and announce \"Document selected\" to user.\r\n![image](https://github.com/dotnet/winforms/assets/133954995/b2ad15c4-5781-4b2b-a30f-bd8c7a3d45e2)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual (Narrator)\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- 8.0.100-preview.7.23376.3\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9970)","Url":"https://github.com/dotnet/winforms/pull/9970","RelatedDescription":"Closed or merged PR \"Fix Narrator cannot announce correctly and getting incorrect rectanges\" (#9970)"},{"Id":"1907843556","IsPullRequest":true,"CreatedAt":"2023-09-21T22:31:03","Actor":"Tanya-Solyanik","Number":"9973","RawContent":null,"Title":"Revert \"Fix Accessibility: Can't select TreeView items using UIAutomation SelectionItem.Select\"","State":"closed","Body":"Reverts dotnet/winforms#9955\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9973)","Url":"https://github.com/dotnet/winforms/pull/9973","RelatedDescription":"Closed or merged PR \"Revert \"Fix Accessibility: Can't select TreeView items using UIAutomation SelectionItem.Select\"\" (#9973)"},{"Id":"1903967496","IsPullRequest":true,"CreatedAt":"2023-09-21T22:13:28","Actor":"Epica3055","Number":"9955","RawContent":null,"Title":"Fix Accessibility: Can't select TreeView items using UIAutomation SelectionItem.Select","State":"closed","Body":"Fix #9822\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n\r\n\r\n## Proposed changes\r\n\r\n- \r\n- TreeViewItem add `SelectItem` method.\r\n- \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n\r\n## Regression? \r\n\r\n- Yes \r\n\r\n\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n\r\n### Before\r\n\r\n![9955_before](https://github.com/dotnet/winforms/assets/135201996/5b540a54-d3bc-4f6b-9f4b-2e36bca47d9d)\r\n\r\n### After\r\n\r\n![9955_after](https://github.com/dotnet/winforms/assets/135201996/403409a3-c30f-4fa9-b07b-95718a8f28a4)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- unit test\r\n- \r\n\r\n\r\n\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n8.0.0-preview.7.23375.6\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9955)","Url":"https://github.com/dotnet/winforms/pull/9955","RelatedDescription":"Closed or merged PR \"Fix Accessibility: Can't select TreeView items using UIAutomation SelectionItem.Select\" (#9955)"},{"Id":"1907769324","IsPullRequest":true,"CreatedAt":"2023-09-21T21:11:02","Actor":"lonitra","Number":"9972","RawContent":null,"Title":"Convert Mshtml COM interfaces to Cswin32","State":"open","Body":"Related: #9824 \r\nThis PR moves a chunk of our Mshtml COM interfaces over to utilizing Cswin32 definition. This PR also:\r\n- Adds implicit conversations to/from `VARIANT_BOOL` and `bool`\r\n- Adds helper methods for getting `FDEX_PROP_FLAGS` for properties/methods/fields into `IDispatch`. These were determined using the same value that runtime uses\r\n-  Add `SafeArrayScope` + tests to ensure that `SAFEARRAY`s get destroyed correctly\r\n- Remove `IReflect` off of `HtmlToClrEventProxy` and implement `StandardDispatch` manually give responses for the properties/methods there + add tests for it\r\n- Update tests which include utilizing pointers instead of interfaces as a workaround due to bug involving late binding-only interfaces\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9972)","Url":"https://github.com/dotnet/winforms/pull/9972","RelatedDescription":"Open PR \"Convert Mshtml COM interfaces to Cswin32\" (#9972)"},{"Id":"1906003134","IsPullRequest":true,"CreatedAt":"2023-09-21T17:04:17","Actor":"Tanya-Solyanik","Number":"9963","RawContent":null,"Title":"[RTM] Convert structs to primitive types when passing them to the interop methods that expect VARIANTs","State":"closed","Body":"Porting a regression fix from main - https://github.com/dotnet/winforms/pull/9960\r\n\r\n## Customer Impact\r\nAccessibility model data will be incorrect for Accessibility tools \r\n\r\n## Regression\r\nYes, related to the interop/CS-Win32 work \r\n \r\n## Testing\r\nManual testing under UIA accessibility tools – Narrator, Inspect and Accessibility Insights\r\n \r\n## Risk\r\nLow – only accessibility scenarios are affected.\r\n\r\n## Details\r\n\r\nI noticed this as  NotSupportedException at System.StubHelpers.ObjectMarshaler.ConvertToNative(Object objSrc, IntPtr pDstVariant)\r\n```\r\nSystem.NotSupportedException\r\n  HResult=0x80131515\r\n  Message=Type 'Windows.Win32.Foundation.COLORREF' cannot be marshalled to a Variant. Type library is not registered.\r\n  Source=<Cannot evaluate the exception source>\r\n  StackTrace:\r\n<Cannot evaluate the exception stack trace>\r\n```\r\nAs a result of this exception UIA Accessibility tools will not get correct values for Bounding rectangles or colors.\r\n \r\nThis exception is thrown when the user is selecting text in a text box (or any text control that has a UIA text provider) under a Narrator. UIA is querying the foreground and background text colors and the bounding rectangle of the control. Colors and bounding rectangle are C# structs, and our UIA implementations cast these structs to an object. However, the interop layer can't convert such objects to VARIANT types expected by the UIA.\r\n\r\n## Fix\r\n\r\nThe fix is a copy of #9732, i.e. explicitly convert struct to a primitive type that has a conversion to a VARIANT. Specific types are documented with the UIA property or attribute definitions - https://learn.microsoft.com/en-us/windows/win32/winauto/uiauto-textattribute-ids and https://learn.microsoft.com/windows/win32/api/uiautomationcore/nf-uiautomationcore-irawelementproviderfragment-get_boundingrectangle.\r\n\r\nI had reviewed all overrides of GetPropertyValue and GetAttributeValue methods, and did not find any other non-primitive values that require additional conversion.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9963)","Url":"https://github.com/dotnet/winforms/pull/9963","RelatedDescription":"Closed or merged PR \"[RTM] Convert structs to primitive types when passing them to the interop methods that expect VARIANTs\" (#9963)"},{"Id":"1905998412","IsPullRequest":true,"CreatedAt":"2023-09-21T17:04:05","Actor":"Tanya-Solyanik","Number":"9962","RawContent":null,"Title":"[RC2] Convert structs to primitive types when passing them to the interop methods that expect VARIANTs","State":"closed","Body":"Porting a regression fix from main - https://github.com/dotnet/winforms/pull/9960\r\n\r\n## Customer Impact\r\nAccessibility model data will be incorrect for Accessibility tools \r\n\r\n## Regression\r\nYes, related to the interop/CS-Win32 work \r\n \r\n## Testing\r\nManual testing under UIA accessibility tools – Narrator, Inspect and Accessibility Insights\r\n \r\n## Risk\r\nLow – only accessibility scenarios are affected.\r\n\r\n## Details\r\n\r\nI noticed this as  NotSupportedException at System.StubHelpers.ObjectMarshaler.ConvertToNative(Object objSrc, IntPtr pDstVariant)\r\n```\r\nSystem.NotSupportedException\r\n  HResult=0x80131515\r\n  Message=Type 'Windows.Win32.Foundation.COLORREF' cannot be marshalled to a Variant. Type library is not registered.\r\n  Source=<Cannot evaluate the exception source>\r\n  StackTrace:\r\n<Cannot evaluate the exception stack trace>\r\n```\r\nAs a result of this exception UIA Accessibility tools will not get correct values for Bounding rectangles or colors.\r\n \r\nThis exception is thrown when the user is selecting text in a text box (or any text control that has a UIA text provider) under a Narrator. UIA is querying the foreground and background text colors and the bounding rectangle of the control. Colors and bounding rectangle are C# structs, and our UIA implementations cast these structs to an object. However, the interop layer can't convert such objects to VARIANT types expected by the UIA.\r\n\r\n## Fix\r\n\r\nThe fix is a copy of #9732, i.e. explicitly convert struct to a primitive type that has a conversion to a VARIANT. Specific types are documented with the UIA property or attribute definitions - https://learn.microsoft.com/en-us/windows/win32/winauto/uiauto-textattribute-ids and https://learn.microsoft.com/windows/win32/api/uiautomationcore/nf-uiautomationcore-irawelementproviderfragment-get_boundingrectangle.\r\n\r\nI had reviewed all overrides of GetPropertyValue and GetAttributeValue methods, and did not find any other non-primitive values that require additional conversion.\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9962)","Url":"https://github.com/dotnet/winforms/pull/9962","RelatedDescription":"Closed or merged PR \"[RC2] Convert structs to primitive types when passing them to the interop methods that expect VARIANTs\" (#9962)"},{"Id":"1906816844","IsPullRequest":true,"CreatedAt":"2023-09-21T12:26:50","Actor":"dotnet-maestro[bot]","Number":"9971","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230920.17\r\n- **Date Produced**: September 21, 2023 4:45:24 AM UTC\r\n- **Commit**: 736dabeca728ccf8b911d96d1b4c575b4d0db7d2\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **System.CodeDom**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **System.IO.Ports**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **System.Management**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **System.Speech**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **System.Text.Json**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-alpha.1.23469.20 to 9.0.0-alpha.1.23470.17][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/fcf7b116e6...736dabeca7\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9971)","Url":"https://github.com/dotnet/winforms/pull/9971","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#9971)"},{"Id":"1906419336","IsPullRequest":false,"CreatedAt":"2023-09-21T08:33:30","Actor":"KoenVanExem","Number":"9969","RawContent":null,"Title":"Advanced Databinding Editor doesn't show SelectedIndex property for TabControl","State":"open","Body":"### Environment\n\nVersion 17.8.0 Preview 2.0\n\n### .NET version\n\nnet8.0-windows\n\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\n\n_No response_\n\n### Issue description\n\n![advanced-databinding-editor](https://github.com/dotnet/winforms/assets/3371452/3912a6b6-6dc2-446e-8502-183b5a9ceb31)\r\n\r\nThe advanced databinding editor doesn't show the SelectedIndex property for a TabControl.\n\n### Steps to reproduce\n\nIf I create another binding and then change it to SelectedIndex, then it still doesn't show up in the advanced databinding editor, but It does show up in the properties grid\r\n\r\n![properties](https://github.com/dotnet/winforms/assets/3371452/1bcf2b18-c1e2-4319-8a3c-c7239ac911e4)\r\n\r\nThis is the line of generated code in my InitializeComponent() method\r\n\r\n> this.searchTabControl.DataBindings.Add(new Binding(\"SelectedIndex\", this.viewModelBindingSource, \"TabIndex\", true, DataSourceUpdateMode.OnPropertyChanged));\r\n\n\n### Diagnostics\n\n_No response_","Url":"https://github.com/dotnet/winforms/issues/9969","RelatedDescription":"Open issue \"Advanced Databinding Editor doesn't show SelectedIndex property for TabControl\" (#9969)"},{"Id":"1906390104","IsPullRequest":false,"CreatedAt":"2023-09-21T08:19:25","Actor":"Olina-Zhang","Number":"9968","RawContent":null,"Title":"Failed to \"Add Tab\" for TabControl in DemoConsole application","State":"open","Body":"### .NET version\n\n.Net 9.0: Main branch of Winforms repo\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, it works well in .Net 8.0 from Release/8.0 branch of Winforms repo\n\n### Issue description\n\nIn [DemoConsole](https://github.com/dotnet/winforms/tree/main/src/System.Windows.Forms/tests/IntegrationTests/DesignSurface/DemoConsole) test app of Winforms repo, failed to \"Add Tab\" for TabControl with popping up an error dialog. And \"Remove Tab\" works well.\r\n\r\nActual result in DemoConsole application when **testing main branch**:\r\n![image](https://github.com/dotnet/winforms/assets/26474449/232361d2-c506-4928-ac61-6663725e31a1)\r\n![AddTab_Failed](https://github.com/dotnet/winforms/assets/26474449/ec914f41-85cf-452c-b4d7-5a83dd5dd6b3)\r\n\r\nExpected result in DemoConsole application when **testing release/8.0 branch**:\r\n![AddTab_success](https://github.com/dotnet/winforms/assets/26474449/5c089f86-a6d8-4fe1-9723-70a59ff419b4)\r\n\n\n### Steps to reproduce\n\nTest sample: [DemoConsole](https://github.com/dotnet/winforms/tree/main/src/System.Windows.Forms/tests/IntegrationTests/DesignSurface/DemoConsole) in Winforms repo","Url":"https://github.com/dotnet/winforms/issues/9968","RelatedDescription":"Open issue \"Failed to \"Add Tab\" for TabControl in DemoConsole application\" (#9968)"},{"Id":"1906389100","IsPullRequest":true,"CreatedAt":"2023-09-21T08:19:01","Actor":"tbolon","Number":"9967","RawContent":null,"Title":"add shortcut on Control.Invoke when the delegate is SendOrPostCallback","State":"open","Body":"Fixes #9965\r\n\r\n## Proposed changes\r\n\r\n- add a specific test in Control.InvokeMarshaledCallbackDo to detect when the delegate is of type SendOrPostCallback\r\n\r\n## Customer Impact\r\n\r\n- better performances when using WindowsFormSynchronizationContext.Post or Send and TaskScheduler when derived from WindowsFormSynchronizationContext\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n### Before\r\n\r\n```csharp\r\n   at System.Environment.get_StackTrace()\r\n   at System.Windows.Forms.Tests.WindowsFormsSynchronizationContextTests.<>c__DisplayClass9_0.<WindowsFormsSynchronizationContext_Send_NoDynamicInvoke>g__Callback|0(Object _) in C:\\code\\external\\dotnet\\winforms\\src\\System.Windows.Forms\\tests\\UnitTests\\System\\Windows\\Forms\\WindowsFormsSynchronizationContextTests.cs:line 164\r\n   at InvokeStub_SendOrPostCallback.Invoke(Object, Span`1)\r\n   at System.Reflection.MethodBaseInvoker.InvokeWithOneArg(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at System.Delegate.DynamicInvokeImpl(Object[] args)\r\n   at System.Windows.Forms.Control.InvokeMarshaledCallbackDo(ThreadMethodEntry tme) in C:\\code\\external\\dotnet\\winforms\\src\\System.Windows.Forms\\src\\System\\Windows\\Forms\\Control.cs:line 6521\r\n   at System.Windows.Forms.Control.InvokeMarshaledCallbackHelper(Object obj) in C:\\code\\external\\dotnet\\winforms\\src\\System.Windows.Forms\\src\\System\\Windows\\Forms\\Control.cs:line 6472\r\n   at System.Windows.Forms.Control.InvokeMarshaledCallback(ThreadMethodEntry tme) in C:\\code\\external\\dotnet\\winforms\\src\\System.Windows.Forms\\src\\System\\Windows\\Forms\\Control.cs:line 6444\r\n   at System.Windows.Forms.Control.InvokeMarshaledCallbacks() in C:\\code\\external\\dotnet\\winforms\\src\\System.Windows.Forms\\src\\System\\Windows\\Forms\\Control.cs:line 6562\r\n   at System.Windows.Forms.Control.MarshaledInvoke(Control caller, Delegate method, Object[] args, Boolean synchronous) in C:\\code\\external\\dotnet\\winforms\\src\\System.Windows.Forms\\src\\System\\Windows\\Forms\\Control.cs:line 6930\r\n   at System.Windows.Forms.Control.Invoke(Delegate method, Object[] args) in C:\\code\\external\\dotnet\\winforms\\src\\System.Windows.Forms\\src\\System\\Windows\\Forms\\Control.cs:line 6401\r\n   at System.Windows.Forms.WindowsFormsSynchronizationContext.Send(SendOrPostCallback d, Object state) in C:\\code\\external\\dotnet\\winforms\\src\\System.Windows.Forms\\src\\System\\Windows\\Forms\\WindowsFormsSynchronizationContext.cs:line 87\r\n```\r\n\r\n### After\r\n\r\n```csharp\r\n   at System.Environment.get_StackTrace()\r\n   at System.Windows.Forms.Tests.WindowsFormsSynchronizationContextTests.<>c__DisplayClass9_0.<WindowsFormsSynchronizationContext_Send_NoDynamicInvoke>g__Callback|0(Object _) in C:\\code\\external\\dotnet\\winforms\\src\\System.Windows.Forms\\tests\\UnitTests\\System\\Windows\\Forms\\WindowsFormsSynchronizationContextTests.cs:line 164\r\n   at System.Windows.Forms.Control.InvokeMarshaledCallbackDo(ThreadMethodEntry tme) in C:\\code\\external\\dotnet\\winforms\\src\\System.Windows.Forms\\src\\System\\Windows\\Forms\\Control.cs:line 6517\r\n   at System.Windows.Forms.Control.InvokeMarshaledCallbackHelper(Object obj) in C:\\code\\external\\dotnet\\winforms\\src\\System.Windows.Forms\\src\\System\\Windows\\Forms\\Control.cs:line 6472\r\n   at System.Windows.Forms.Control.InvokeMarshaledCallback(ThreadMethodEntry tme) in C:\\code\\external\\dotnet\\winforms\\src\\System.Windows.Forms\\src\\System\\Windows\\Forms\\Control.cs:line 6444\r\n   at System.Windows.Forms.Control.InvokeMarshaledCallbacks() in C:\\code\\external\\dotnet\\winforms\\src\\System.Windows.Forms\\src\\System\\Windows\\Forms\\Control.cs:line 6562\r\n   at System.Windows.Forms.Control.MarshaledInvoke(Control caller, Delegate method, Object[] args, Boolean synchronous) in C:\\code\\external\\dotnet\\winforms\\src\\System.Windows.Forms\\src\\System\\Windows\\Forms\\Control.cs:line 6930\r\n   at System.Windows.Forms.Control.Invoke(Delegate method, Object[] args) in C:\\code\\external\\dotnet\\winforms\\src\\System.Windows.Forms\\src\\System\\Windows\\Forms\\Control.cs:line 6401\r\n   at System.Windows.Forms.WindowsFormsSynchronizationContext.Send(SendOrPostCallback d, Object state) in C:\\code\\external\\dotnet\\winforms\\src\\System.Windows.Forms\\src\\System\\Windows\\Forms\\WindowsFormsSynchronizationContext.cs:line 87\r\n```\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9967)","Url":"https://github.com/dotnet/winforms/pull/9967","RelatedDescription":"Open PR \"add shortcut on Control.Invoke when the delegate is SendOrPostCallback\" (#9967)"},{"Id":"1906368664","IsPullRequest":true,"CreatedAt":"2023-09-21T08:07:37","Actor":"halgab","Number":"9966","RawContent":null,"Title":"Enable nullability in DesignerFrame and clean it up","State":"open","Body":"## Proposed changes\r\n\r\n- Replace `ArrayList`s with `List<T>`s in `DesignerFrame` (contributes to #8140)\r\n- Enable nullability in `DesignerFrame`\r\n- Clean up `DesignerFrame` and one call site\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9966)","Url":"https://github.com/dotnet/winforms/pull/9966","RelatedDescription":"Open PR \"Enable nullability in DesignerFrame and clean it up\" (#9966)"},{"Id":"1906358080","IsPullRequest":false,"CreatedAt":"2023-09-21T08:01:22","Actor":"tbolon","Number":"9965","RawContent":null,"Title":"Add shortcut for Control.Invoke delegate when delegate is SendOrPostCallback (from WindowsFormsSynchronizationContext)","State":"open","Body":"### .NET version\n\n.NET 8 RC1\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\n`Control.InvokeMarshaledCallbackDo()` method has already some shortcuts to prevent using `Delegate.DynamicInvoke` for most-used cases.\r\n\r\nIt is documented in [Control.Invoke](https://learn.microsoft.com/en-us/dotnet/api/system.windows.forms.control.invoke?view=windowsdesktop-7.0&redirectedfrom=MSDN#system-windows-forms-control-invoke(system-delegate-system-object())) remarks section:\r\n\r\n> A call to an [EventHandler](https://learn.microsoft.com/en-us/dotnet/api/system.eventhandler?view=windowsdesktop-7.0) or [MethodInvoker](https://learn.microsoft.com/en-us/dotnet/api/system.windows.forms.methodinvoker?view=windowsdesktop-7.0) delegate will be faster than a call to another type of delegate.\r\n\r\nSadly, it does not have a shortcut for the `SendOrPostCallback` delegate which is used by `WindowsFormsSynchronizationContext.Post` and `WindowsFormsSynchronizationContext.Send` methods, which is used when using the `TaskScheduler.FromCurrentSynchronizationContext()`.\r\n\r\nBecause it's a recommended way to execute delegates when you don't have a specific control, it should perhaps detect this delegate then directly cast it.\r\n\r\nThis issue could be disregarded if:\r\n- The cost added to try casting the delegate as a SendOrPostCallback is too high\r\n- There is no enough use of WindowsFormsSynchronizationContext or TaskScheduler.FromCurrentSynchronizationContext in user codebases\r\n- The cost of using Delegate.DynamicInvoke is not high enough\r\n\r\nThis issue could be easily resolved by adding a specific case in `Control.InvokeMarshaledCallbackDo()`.\r\n\r\nThe documentation should also be updated to state that there are more than just `MethodInvoker` and `EventHandler` delegates which are more performant. `WaitCallback` and `SendOrPostCallback` and also optimized.\n\n### Steps to reproduce\n\n- Use `WindowsFormsSynchronizationContext.Send` with a callback that dump the stacktrace.\r\n- Observe that the method was called using Delegate.DynamicInvokeImpl","Url":"https://github.com/dotnet/winforms/issues/9965","RelatedDescription":"Open issue \"Add shortcut for Control.Invoke delegate when delegate is SendOrPostCallback (from WindowsFormsSynchronizationContext)\" (#9965)"},{"Id":"1906337014","IsPullRequest":false,"CreatedAt":"2023-09-21T07:48:55","Actor":"Olina-Zhang","Number":"9964","RawContent":null,"Title":"\"Select Resource\" dialog should be opened for PictureBox in DemoConsole application","State":"open","Body":"### .NET version\n\n.Net 9.0:  Main branch of Winforms repo\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo, it also repro in .Net 8.0 from Release/8.0 branch of Winforms repo\n\n### Issue description\n\nIn [DemoConsole](https://github.com/dotnet/winforms/tree/main/src/System.Windows.Forms/tests/IntegrationTests/DesignSurface/DemoConsole) test app of Winforms repo, \"Select Resource\" dialog doesn't pop up when clicking \"Choose Image...\" in PictureBox's smart tag window or its properties window\r\n\r\nActual result in DemoConsole application:\r\n![NoSelectResourceDialog](https://github.com/dotnet/winforms/assets/26474449/fe247780-f984-428b-abb0-65afa131d8bf)\r\n\r\nExpected result in Winforms designer:\r\n![Expected_SelectResourceDialog](https://github.com/dotnet/winforms/assets/26474449/0b8c57d5-fce8-4c1b-912a-731ce1c77318)\r\n\n\n### Steps to reproduce\n\nTest sample: [DemoConsole](https://github.com/dotnet/winforms/tree/main/src/System.Windows.Forms/tests/IntegrationTests/DesignSurface/DemoConsole) in Winforms repo","Url":"https://github.com/dotnet/winforms/issues/9964","RelatedDescription":"Open issue \"\"Select Resource\" dialog should be opened for PictureBox in DemoConsole application\" (#9964)"},{"Id":"1905709632","IsPullRequest":true,"CreatedAt":"2023-09-21T01:18:17","Actor":"Tanya-Solyanik","Number":"9960","RawContent":null,"Title":"Convert structs to primitive types when passing them to the interop methods that expect VARIANTs","State":"closed","Body":"This problem manifests as a first chance NotSupportedException    at System.StubHelpers.ObjectMarshaler.ConvertToNative(Object objSrc, IntPtr pDstVariant)\r\n```\r\nSystem.NotSupportedException\r\n  HResult=0x80131515\r\n  Message=Type 'Windows.Win32.Foundation.COLORREF' cannot be marshalled to a Variant. Type library is not registered.\r\n  Source=<Cannot evaluate the exception source>\r\n  StackTrace:\r\n<Cannot evaluate the exception stack trace>\r\n```\r\nThis exception is thrown when the user is selecting text in a text box (or any text control that has a UIA text provider) under a Narrator. UIA is querying the foreground and background text colors and the bounding rectangle of the control. Colors and bounding rectangle are c# structs, and our UIA implementations cast these structs to an object. However, the interop layer can't convert such objects to VARIANT types expected by the UIA.   \r\n\r\nThe fix is a copy of #9732, i.e. explicitly convert struct to a primitive type that has a conversion to a VARIANT. Specific types are documented with the UIA property or attribute definitions - https://learn.microsoft.com/en-us/windows/win32/winauto/uiauto-textattribute-ids and https://learn.microsoft.com/windows/win32/api/uiautomationcore/nf-uiautomationcore-irawelementproviderfragment-get_boundingrectangle.\r\n\r\nI had reviewed all overrides of GetPropertyValue and GetAttributeValue methods, and did not find any other non-primitive values that require additional conversion.\r\n \r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9960)","Url":"https://github.com/dotnet/winforms/pull/9960","RelatedDescription":"Closed or merged PR \"Convert structs to primitive types when passing them to the interop methods that expect VARIANTs\" (#9960)"},{"Id":"1905747956","IsPullRequest":true,"CreatedAt":"2023-09-20T22:52:55","Actor":"dotnet-maestro[bot]","Number":"9961","RawContent":null,"Title":"[release/8.0] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:5f9d099d-0d05-4b82-cc41-08db9e4039c1)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 5f9d099d-0d05-4b82-cc41-08db9e4039c1\r\n- **Build**: 20230920.7\r\n- **Date Produced**: September 20, 2023 9:04:31 PM UTC\r\n- **Commit**: 49bf70a429a6122217f2c88e778ce8115ceac3bd\r\n- **Branch**: refs/heads/release/8.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **System.CodeDom**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **System.Data.Odbc**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **System.Data.OleDb**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **System.IO.Ports**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **System.Management**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **System.Reflection.Context**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **System.Runtime.Caching**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **System.Speech**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **System.Text.Json**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-rc.2.23469.9 to 8.0.0-rc.2.23470.7][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/575843df1a...49bf70a429\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:5f9d099d-0d05-4b82-cc41-08db9e4039c1)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9961)","Url":"https://github.com/dotnet/winforms/pull/9961","RelatedDescription":"Closed or merged PR \"[release/8.0] Update dependencies from dotnet/runtime\" (#9961)"},{"Id":"1905659239","IsPullRequest":true,"CreatedAt":"2023-09-20T22:52:38","Actor":"Tanya-Solyanik","Number":"9959","RawContent":null,"Title":"2 nullability PRs had collided resulting in a bad merge, fixing that.","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9959)","Url":"https://github.com/dotnet/winforms/pull/9959","RelatedDescription":"Closed or merged PR \"2 nullability PRs had collided resulting in a bad merge, fixing that.\" (#9959)"},{"Id":"1905563234","IsPullRequest":false,"CreatedAt":"2023-09-20T19:03:08","Actor":"KlausLoeffelmann","Number":"9958","RawContent":null,"Title":"GroupBox doesn't apply ForeColor in ambient condition","State":"open","Body":"### .NET version\r\n\r\nAll. Unfortunately.\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNo. Unfortunately.\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nNo.\r\n\r\n### Issue description\r\n\r\nWhen the GroupBox is inheriting its ForeColor by its Parent control, the color is not correctly applied.\r\n\r\n### Steps to reproduce\r\n\r\n* Create a new WinForms Form.\r\n* Insert a TableLayoutPanel\r\n* Insert a GroupBox\r\n* Change the Backcolor of the Form to 32,32,32\r\n* Change the ForeColor of the Form to 240,240,240\r\n\r\nThe GroupBox should render the Text in light on dark background, but only the Frame is light. The text gets rendered in the original color:\r\n\r\n![image](https://github.com/dotnet/winforms/assets/9663150/d3aafcca-082d-47b0-a245-3ca9ce01d46e)\r\n\r\n@Olina, can you test, if this is a Framework regression? Thanks!\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/9958","RelatedDescription":"Open issue \"GroupBox doesn't apply ForeColor in ambient condition\" (#9958)"},{"Id":"1904838924","IsPullRequest":true,"CreatedAt":"2023-09-20T12:26:50","Actor":"dotnet-maestro[bot]","Number":"9957","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230919.20\r\n- **Date Produced**: September 20, 2023 4:54:59 AM UTC\r\n- **Commit**: fcf7b116e6faa046397dda0b75219b570965be7e\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **System.CodeDom**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **System.IO.Ports**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **System.Management**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **System.Speech**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **System.Text.Json**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-alpha.1.23468.26 to 9.0.0-alpha.1.23469.20][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/19445f05aa...fcf7b116e6\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9957)","Url":"https://github.com/dotnet/winforms/pull/9957","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#9957)"},{"Id":"1904219508","IsPullRequest":false,"CreatedAt":"2023-09-20T06:04:41","Actor":"MelonWang1","Number":"9956","RawContent":null,"Title":"Label edit in TreeView has incorrect position in accessibility tree","State":"open","Body":"### .NET version\n\n.NET 8.0.100-rc.2.23469.4\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo, this issue also repro's in .NET3.1/5.0/6.0/7.0.\n\n### Issue description\n\nThis issue is similar with [7263](https://github.com/dotnet/winforms/issues/7263). Edit control of TreeViewNode will be placed as a first child of the TreeView in accessibility tree.\r\n\r\n![before](https://github.com/dotnet/winforms/assets/94418985/4af43965-e1b5-4f05-b8fb-3761104158a0)\r\n![before2](https://github.com/dotnet/winforms/assets/94418985/27c2e478-5444-4950-8f1c-cff0c3d2a878)\r\n\n\n### Steps to reproduce\n\n1. Create a Winforms .NET Core application\r\n2. Add a TreeView control\r\n3. Add some root node and child node\r\n4. Set TreeView control LabelEdit property is true\r\n5. Build and run\r\n6. Open Inspect or Accessibility Insights tool \r\n7. Click twice on any tree node to start editing it and find Edit control place in tools\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/9956","RelatedDescription":"Open issue \"Label edit in TreeView has incorrect position in accessibility tree\" (#9956)"},{"Id":"1903822069","IsPullRequest":true,"CreatedAt":"2023-09-19T23:43:11","Actor":"dotnet-maestro[bot]","Number":"9954","RawContent":null,"Title":"[release/8.0] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:5f9d099d-0d05-4b82-cc41-08db9e4039c1)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 5f9d099d-0d05-4b82-cc41-08db9e4039c1\r\n- **Build**: 20230919.9\r\n- **Date Produced**: September 19, 2023 10:18:46 PM UTC\r\n- **Commit**: 575843df1aeb430a3071e2e494d29b59080751ad\r\n- **Branch**: refs/heads/release/8.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **System.CodeDom**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **System.Data.Odbc**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **System.Data.OleDb**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **System.IO.Ports**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **System.Management**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **System.Reflection.Context**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **System.Runtime.Caching**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **System.Speech**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **System.Text.Json**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-rc.2.23466.4 to 8.0.0-rc.2.23469.9][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/287c10d253...575843df1a\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:5f9d099d-0d05-4b82-cc41-08db9e4039c1)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9954)","Url":"https://github.com/dotnet/winforms/pull/9954","RelatedDescription":"Closed or merged PR \"[release/8.0] Update dependencies from dotnet/runtime\" (#9954)"},{"Id":"1903552397","IsPullRequest":true,"CreatedAt":"2023-09-19T18:49:45","Actor":"gpetrou","Number":"9953","RawContent":null,"Title":"Enable nullability in DataGridViewRowCollection","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in DataGridViewRowCollection.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9953)","Url":"https://github.com/dotnet/winforms/pull/9953","RelatedDescription":"Open PR \"Enable nullability in DataGridViewRowCollection\" (#9953)"},{"Id":"1903529920","IsPullRequest":true,"CreatedAt":"2023-09-19T18:36:37","Actor":"gpetrou","Number":"9952","RawContent":null,"Title":"Enable nullability in DataGridViewLinkCell","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in DataGridViewLinkCell.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9952)","Url":"https://github.com/dotnet/winforms/pull/9952","RelatedDescription":"Open PR \"Enable nullability in DataGridViewLinkCell\" (#9952)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-09-23T03:30:30.3899705Z","RunDurationInMilliseconds":537}