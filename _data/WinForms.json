{"Data":{"GitHub":{"Issues":[{"Id":"1089515664","IsPullRequest":true,"CreatedAt":"2021-12-27T23:12:41","Actor":"DmitryGorokhov","Number":"6432","RawContent":null,"Title":"Implementing support UIA Provider for TreeView control","State":"open","Body":"Implemented accessible objects for TreeView and TreeNode. Added needed automation events and unit tests.\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3421\r\n\r\n\r\n## Proposed changes\r\n\r\n- Switched on `SupportsUiaProviders` property of `TreeView` class.\r\n- Implemented accessible objects for `TreeView` and `TreeNode` classes.\r\n- Added needed automation events and unit tests.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Improving development experience for `TreeView` control accessibility.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Inspect\r\n\r\n#### `TreeView` before and after\r\n\r\n![treeInspect](https://user-images.githubusercontent.com/58004471/147510526-ea1fd609-cb83-48c0-9a62-343d669e8d0b.png)\r\n\r\n#### Default `TreeNode` before and after\r\n\r\n![nodeInspect](https://user-images.githubusercontent.com/58004471/147510598-3d6c6aa4-d689-4096-8b42-76aaeadf2d60.png)\r\n\r\n#### Expanded `TreeNode` before and after\r\n\r\n![nodeExpandedInspect](https://user-images.githubusercontent.com/58004471/147510641-ed1a6b4e-2f89-49c4-a1b0-d4328163d19a.png)\r\n\r\n#### Leaf `TreeNode` before and after\r\n\r\n![nodeLeafInspect](https://user-images.githubusercontent.com/58004471/147510740-5338f9df-acaf-4a61-92c8-639661f2b5ba.png)\r\n\r\n#### CheckBox `TreeNode` before and after\r\n\r\n![NodeIsCheckBox](https://user-images.githubusercontent.com/58004471/147510784-e73d3152-cadc-404c-a436-1ab137356a67.png)\r\n\r\n#### Invisible `TreeNode` before and after\r\n\r\n![invisibleNode](https://user-images.githubusercontent.com/58004471/147510820-2732e09f-fec2-402e-8e5d-5c8f99c6a2ee.png)\r\n\r\n#### Editable `TreeNode` before and after\r\n\r\n![nodeEditable](https://user-images.githubusercontent.com/58004471/147510856-16c4a0eb-291d-4bfb-a2ae-c3b8650543a3.png)\r\n\r\n### Accessibility Insights\r\n\r\nThere is no specific errors. You can see errors on next image, but they are not about accessibility changes were created in this PR.\r\n\r\n![AI](https://user-images.githubusercontent.com/58004471/147511075-7519afab-29c3-4714-9b03-3533fe8da74c.png)\r\n\r\n### Narrator\r\n\r\n#### Expand and collapse default node before and after\r\n\r\n![NBExpandCollapse](https://user-images.githubusercontent.com/58004471/147511138-ec17d1dd-9f19-42a3-b44e-900dd1a8e038.png)\r\n\r\n#### Check and uncheck node before and after\r\n\r\n![NBCheckedBox](https://user-images.githubusercontent.com/58004471/147511169-b1ca4ecd-545f-443c-8dff-129982fea28f.png)\r\n\r\n#### Edit default node before and after\r\n\r\n![NBEdit](https://user-images.githubusercontent.com/58004471/147511183-ac62934d-29cb-4ab5-b32c-6f91e78e3f05.png)\r\n\r\n### `ScrollIntoView` method comparison\r\n\r\n#### `ScrollIntoView` method before\r\n\r\n![ScrollIntoViewBefore](https://user-images.githubusercontent.com/58004471/147511275-2caad097-acb4-46f0-8aa2-4b115a934890.gif)\r\n\r\n#### `ScrollIntoView` method after\r\n\r\n![ScrollIntoViewAfter](https://user-images.githubusercontent.com/58004471/147511279-557713bb-3539-4801-b81a-dc80e1215ed3.gif)\r\n\r\nThis realization sets calling node as `TopNode`  of `TreeView` if the node is invisible. Looks like it works the same. \r\n\r\n### Focus on `TreeView` issue\r\n\r\nBy default, when we focus on a `TreeView` control, Inspect and Narrator highlight the `SelectedNode` of\r\n this control. As I know it takes raise an events for a selected node accessible object to notify it was focused. But calling AccessibilityObject forces creation the object. It takes accessible object of the tree, so forces creating the object if it doesn't exist yet.\r\n To avoid force creation if this is not needed should use check `IsAccessibilityObjectCreated`. But I found next problem when I try to add this check. Highlight after focus doesn't work for the first time if the control has first `TabIndex` on form.  You can see this issue behavior below.\r\n \r\n #### Focus on the control with check `IsAccessibilityObjectCreated`\r\n \r\nIt works incorrect.\r\n \r\n\r\n![BrokenFocusOnTreeView](https://user-images.githubusercontent.com/58004471/147512386-b429de63-9bda-4498-bc64-5bd25076beaa.gif)\r\n\r\n #### Focus on the control without check `IsAccessibilityObjectCreated`\r\n\r\nIt works great, but not safety due to forcing the object creating.\r\n\r\n![FocusOnTreeView](https://user-images.githubusercontent.com/58004471/147512415-1f71ba67-4201-43e7-b7db-1c6381e94b05.gif)\r\n\r\nIt was not so easy for me to resolve it in the fix. So I skipped this problem and took implementation without the check. I guess this problem needs to be investigated and resolved in out of scope issue. \r\n \r\n ### Additional note\r\n\r\nI take it if node is check box it has `DefaultAction` equals `Check` or `Uncheck` but before the fix `DoDefaultAction` does nothing in this case. I configured this method, so it performs `Toggle` method of `TreeNodeAccessibleObject` in this case.\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manually\r\n- Unit testing\r\n- CTI\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n- Inspect\r\n- Accessibility Insights\r\n- Narrator\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .Net version: 6.0.100\r\n- OS version: 10.0.19044\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6432)","Url":"https://github.com/dotnet/winforms/pull/6432","RelatedDescription":"Open PR \"Implementing support UIA Provider for TreeView control\" (#6432)"},{"Id":"1089444642","IsPullRequest":true,"CreatedAt":"2021-12-27T22:18:57","Actor":"gpetrou","Number":"6431","RawContent":null,"Title":"Enable nullability in DisplayInformation","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in DisplayInformation.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6431)","Url":"https://github.com/dotnet/winforms/pull/6431","RelatedDescription":"Closed or merged PR \"Enable nullability in DisplayInformation\" (#6431)"},{"Id":"1087702559","IsPullRequest":true,"CreatedAt":"2021-12-27T19:07:29","Actor":"dotnet-maestro[bot]","Number":"6417","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20211223.2\r\n- **Date Produced**: December 23, 2021 5:03:50 PM UTC\r\n- **Commit**: 1a66526b0c1eb068cab89909b7d52fe6f57d64df\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.21621.3 to 7.0.0-beta.21623.2][5]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21621.3 to 7.0.0-beta.21623.2][5]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.21621.3 to 7.0.0-beta.21623.2][5]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.21621.3 to 7.0.0-beta.21623.2][5]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.21621.3 to 7.0.0-beta.21623.2][5]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21621.3 to 7.0.0-beta.21623.2][5]\r\n\r\n[5]: https://github.com/dotnet/arcade/compare/0cd94b1...1a66526\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6417)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/6417","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6417)"},{"Id":"1088823553","IsPullRequest":true,"CreatedAt":"2021-12-27T18:35:37","Actor":"gpetrou","Number":"6427","RawContent":null,"Title":"Uncomment IsHandleCreated asserts","State":"closed","Body":"## Proposed changes\r\n\r\n- Looks like the corresponding issue has been resolved.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6427)","Url":"https://github.com/dotnet/winforms/pull/6427","RelatedDescription":"Closed or merged PR \"Uncomment IsHandleCreated asserts\" (#6427)"},{"Id":"1088820922","IsPullRequest":true,"CreatedAt":"2021-12-27T18:27:13","Actor":"gpetrou","Number":"6424","RawContent":null,"Title":"Enable nullability in FormatEnumerator","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in FormatEnumerator.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6424)","Url":"https://github.com/dotnet/winforms/pull/6424","RelatedDescription":"Closed or merged PR \"Enable nullability in FormatEnumerator\" (#6424)"},{"Id":"1088820276","IsPullRequest":true,"CreatedAt":"2021-12-27T18:25:39","Actor":"gpetrou","Number":"6423","RawContent":null,"Title":"Enable nullability in SelectedIndexEnumerator","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in SelectedIndexEnumerator.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6423)","Url":"https://github.com/dotnet/winforms/pull/6423","RelatedDescription":"Closed or merged PR \"Enable nullability in SelectedIndexEnumerator\" (#6423)"},{"Id":"1087525864","IsPullRequest":true,"CreatedAt":"2021-12-27T18:05:11","Actor":"gpetrou","Number":"6414","RawContent":null,"Title":"Enable nullability in Com2ShouldRefreshTypes","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in Com2ShouldRefreshTypes.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6414)","Url":"https://github.com/dotnet/winforms/pull/6414","RelatedDescription":"Closed or merged PR \"Enable nullability in Com2ShouldRefreshTypes\" (#6414)"},{"Id":"1087510878","IsPullRequest":true,"CreatedAt":"2021-12-27T18:04:34","Actor":"gpetrou","Number":"6413","RawContent":null,"Title":"Enable nullability in IKeyboardToolTip","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in IKeyboardToolTip.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6413)","Url":"https://github.com/dotnet/winforms/pull/6413","RelatedDescription":"Closed or merged PR \"Enable nullability in IKeyboardToolTip\" (#6413)"},{"Id":"1087454244","IsPullRequest":true,"CreatedAt":"2021-12-27T18:00:59","Actor":"gpetrou","Number":"6411","RawContent":null,"Title":"Enable nullability in ImageListConverter","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ImageListConverter.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6411)","Url":"https://github.com/dotnet/winforms/pull/6411","RelatedDescription":"Closed or merged PR \"Enable nullability in ImageListConverter\" (#6411)"},{"Id":"1087422029","IsPullRequest":true,"CreatedAt":"2021-12-27T17:59:31","Actor":"gpetrou","Number":"6409","RawContent":null,"Title":"Enable nullability in EnumChildren","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in EnumChildren.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6409)","Url":"https://github.com/dotnet/winforms/pull/6409","RelatedDescription":"Closed or merged PR \"Enable nullability in EnumChildren\" (#6409)"},{"Id":"1087421218","IsPullRequest":true,"CreatedAt":"2021-12-27T17:58:31","Actor":"gpetrou","Number":"6408","RawContent":null,"Title":"Enable nullability in RestoreFocusMessageFilter","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in RestoreFocusMessageFilter.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6408)","Url":"https://github.com/dotnet/winforms/pull/6408","RelatedDescription":"Closed or merged PR \"Enable nullability in RestoreFocusMessageFilter\" (#6408)"},{"Id":"1087067332","IsPullRequest":true,"CreatedAt":"2021-12-27T17:40:19","Actor":"jbhensley","Number":"6406","RawContent":null,"Title":"ComboBox: fix SelectedItem/SelectedIndex when SelectedItem removed from Items","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #6304.\r\n\r\n\r\n## Proposed changes\r\n\r\nFixes `ArgumentOutOfRangeException` when `SelectedItem` removed from `ComboBox.Items` and then `SelectedItem` property is subsequently accessed.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\nNo more `ArgumentOutOfRangeException`\r\n\r\n## Regression? \r\n\r\n- Fixes bug in .NET Core 7 alpha\r\n\r\n## Risk\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\nUnit test added. Fails on unpatched code. Passes on patched.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6406)","Url":"https://github.com/dotnet/winforms/pull/6406","RelatedDescription":"Closed or merged PR \"ComboBox: fix SelectedItem/SelectedIndex when SelectedItem removed from Items\" (#6406)"},{"Id":"1089102217","IsPullRequest":false,"CreatedAt":"2021-12-27T09:26:11","Actor":"ArtemTatarinov","Number":"6430","RawContent":null,"Title":"Extract test controls from resources to code","State":"open","Body":"Some items at some forms (`ListViewTest`, `TreeViewTest`) of our internal test application (`WinformsControlsTest`) are created from the resources:\r\n![image](https://user-images.githubusercontent.com/87859299/147456432-7b180c49-2108-4ab1-a48b-bdcf6e9192a6.png)\r\n![image](https://user-images.githubusercontent.com/87859299/147456481-43c45c68-d152-4bb7-8133-1dc14c5ddfab.png)\r\n\r\nThese items are not visible at the Managed Resources Editor:\r\n![image](https://user-images.githubusercontent.com/87859299/147457029-afc2b4b6-cfbb-465d-b9f3-27dde6417798.png)\r\n\r\nWe should extract the creation of such items from the `resx`-files to the direct code initialization to make their properties readable, simplify their modification if needed, etc.","Url":"https://github.com/dotnet/winforms/issues/6430","RelatedDescription":"Open issue \"Extract test controls from resources to code\" (#6430)"},{"Id":"1089029633","IsPullRequest":true,"CreatedAt":"2021-12-27T07:23:38","Actor":"ArtemTatarinov","Number":"6429","RawContent":null,"Title":"Moving GetPropertyValue duplicate logic to the base class","State":"open","Body":"Fixes #6324\r\nContinues PR #5745\r\n\r\n## Proposed changes\r\n- Moved the duplicate logic at the `GetPropertyValue` method to the base `AccessibleObject` class from its descendants\r\n- Added unit tests for all cases of refactoring\r\n- The base `AccessibleObject` class doesn't call the virtual `IsPatternSupported` method for the `IsInvokePatternAvailablePropertyId` case, but uses the large switch at the `IsInvokePatternAvailable` property instead, so we need to expand the cases of that switch for the new roles.\r\n\r\nAlso, I found out some questionable properties that I'd like to discuss:\r\n1. The `false` value is always returned for all the `IsPasswordPropertyId` cases. Maybe we should move this property to the base class too?\r\n2. There are 4 entries of the `FrameworkIdPropertyId` property, the value of `NativeMethods.WinFormFrameworkId` is returned in all the cases. Could it be moved to the base class too?\r\n3. The `TopRowAccessibleObject` and `DataGridViewEditingPanelAccessibleObject` classes have the `HelpTextPropertyId` property case which returns `string.Empty`. Maybe we could delete it there, so the base class will return `Help ?? string.Empty`? By default `Help` is an empty string for both of these children classes.\r\n4. The `AccessKeyPropertyId` property returns the `string.Empty` value for many cases at the `AccessibleObject` descendants. There was a PR #5705 where returning of the `KeyboardShortcut` was added to the `ControlAccessibleObject` class. What if we add the returning of the `KeyboardShortcut ?? string.Empty` to the base `AccessibleObject`? If its descendant has the KeyboardShortcut set, then it will be returned, that seems logical.\r\n5. This one maybe is a bit tricky. For the `AutomationIdPropertyId` property 7 descendants of the `ControlAccessibleObject` class return the `Owner.Name` value, and 4 descendants of the `AccessibleObject` class return `AutomationId`. Maybe we should refactor them like that: base class will return `AutomationId` and `ControlAccessibleObject` will return `Owner.Name` at the overridden `GetPropertyValue` method?\r\n\r\n## Customer Impact\r\n- No\r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- Manual (tested selected properties of some controls with the Inspect tool)\r\n- Unit tests for all cases of refactoring\r\n- CTI team\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n.NET SDK 7.0.0-alpha.1.21606.7\r\nMicrosoft Windows [Version 10.0.19043.1415]\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6429)","Url":"https://github.com/dotnet/winforms/pull/6429","RelatedDescription":"Open PR \"Moving GetPropertyValue duplicate logic to the base class\" (#6429)"},{"Id":"1088827834","IsPullRequest":true,"CreatedAt":"2021-12-26T19:07:24","Actor":"gpetrou","Number":"6428","RawContent":null,"Title":"Enable nullability in SendKeys","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in SendKeys.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6428)","Url":"https://github.com/dotnet/winforms/pull/6428","RelatedDescription":"Open PR \"Enable nullability in SendKeys\" (#6428)"},{"Id":"1088822456","IsPullRequest":true,"CreatedAt":"2021-12-26T18:28:50","Actor":"gpetrou","Number":"6426","RawContent":null,"Title":"Enable nullability in ProgressBarAccessibleObject","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in ProgressBarAccessibleObject.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6426)","Url":"https://github.com/dotnet/winforms/pull/6426","RelatedDescription":"Open PR \"Enable nullability in ProgressBarAccessibleObject\" (#6426)"},{"Id":"1088821844","IsPullRequest":true,"CreatedAt":"2021-12-26T18:24:09","Actor":"gpetrou","Number":"6425","RawContent":null,"Title":"Enable nullability in DockingAttribute","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in DockingAttribute.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6425)","Url":"https://github.com/dotnet/winforms/pull/6425","RelatedDescription":"Open PR \"Enable nullability in DockingAttribute\" (#6425)"},{"Id":"1088819621","IsPullRequest":true,"CreatedAt":"2021-12-26T18:08:35","Actor":"gpetrou","Number":"6422","RawContent":null,"Title":"Enable nullability in ToolStripPanelRenderEventArgs","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripPanelRenderEventArgs.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6422)","Url":"https://github.com/dotnet/winforms/pull/6422","RelatedDescription":"Open PR \"Enable nullability in ToolStripPanelRenderEventArgs\" (#6422)"},{"Id":"1088744821","IsPullRequest":false,"CreatedAt":"2021-12-26T10:41:32","Actor":"roland5572","Number":"6421","RawContent":null,"Title":"Setting ShowInTaskbar to false causes the form to close automatically (Abnormal exit).","State":"open","Body":"Setting ShowInTaskbar to false causes the form to close automatically (**Abnormal exit**).\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.form\r\n\r\nTest Code:\r\n.NET 6.0 (This problem also appears in .net framework 4.8)\r\n\r\n```\r\nusing System;\r\nusing System.Windows.Forms;\r\n\r\nnamespace FormShowInTaskbarTest\r\n{\r\n    internal static class Program\r\n    {\r\n        private static Form form1;\r\n        private static Form form2;\r\n\r\n        [STAThread]\r\n        static void Main()\r\n        {\r\n            ApplicationConfiguration.Initialize();\r\n\r\n            form1 = new Form()\r\n            {\r\n                Width = 800,\r\n                Height = 600,\r\n                StartPosition = FormStartPosition.CenterScreen,\r\n            };\r\n\r\n            var button1 = new Button()\r\n            {\r\n                Text = \"Click here to open new Form.\",\r\n\r\n                Width = 200,\r\n                Height = 100,\r\n            };\r\n\r\n            button1.Click += Button1_Click;\r\n            form1.Controls.Add(button1);\r\n\r\n            Application.Run(form1);\r\n        }\r\n\r\n        private static void Button1_Click(object sender, EventArgs e)\r\n        {\r\n            form2 = new Form()\r\n            {\r\n                Width = 600,\r\n                Height = 400,\r\n\r\n                StartPosition = FormStartPosition.CenterScreen,\r\n            };\r\n\r\n            var button2 = new Button()\r\n            {\r\n                Text = \"Click here to test ShowInTaskbar.\",\r\n\r\n                Width = 200,\r\n                Height = 100,\r\n            };\r\n\r\n            button2.Click += Button2_Click;\r\n            form2.Controls.Add(button2);\r\n\r\n            form2.ShowDialog(form1);\r\n        }\r\n\r\n        private static void Button2_Click(object sender, EventArgs e)\r\n        {\r\n            form2.ShowInTaskbar = false;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nSteps to reproduce:\r\n1. Run the appliction.\r\n2. Click the first button, the application will open a new Form.\r\n3. Click the first button in new form.\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6421","RelatedDescription":"Open issue \"Setting ShowInTaskbar to false causes the form to close automatically (Abnormal exit).\" (#6421)"},{"Id":"1088647763","IsPullRequest":false,"CreatedAt":"2021-12-25T19:43:01","Actor":"nathan130200","Number":"6420","RawContent":null,"Title":"Timed out while connecting to named pipe: DesignToolsServer","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n* .NET Core Version:\r\n.NET 6.0.100\r\n\r\n* .NET Info Command\r\n```cs\r\nSDK do .NET (refletindo qualquer global.json):\r\n Version:   6.0.100\r\n Commit:    9e8b04bbff\r\n\r\nAmbiente de runtime:\r\n OS Name:     Windows\r\n OS Version:  10.0.19042\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   c:\\program files\\dotnet\\sdk\\6.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 6.0.0\r\n  Commit:  4822e3c3aa\r\n\r\n.NET SDKs installed:\r\n  5.0.207 [c:\\program files\\dotnet\\sdk]\r\n  6.0.100 [c:\\program files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 5.0.10 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.0 [c:\\program files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 5.0.10 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.0 [c:\\program files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 5.0.10 [c:\\program files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.0 [c:\\program files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\nAttemt to open winforms designer on NET6 fail everytime.\r\n\r\nIf i both add `<TargetPlatforms>net472;net6.0-windows</TargetPlatforms>` for both net6.0-windows and net472, the designer open, but open old .NET Framework designet (that works too for .net 6), but i must be forced to reference net framework in csproj.\r\n\r\nSince .net core/net 6 desktop support, the designer NEVER WORKED.\r\n\r\nStuck on this:\r\n![image](https://user-images.githubusercontent.com/14365254/147392370-b18afc01-2afd-48a3-b43a-48932f9e3c91.png)\r\n\r\n\r\n**Expected behavior:**\r\nOpen winform designer.\r\n\r\n**Minimal repro:**\r\nCreate empty winform project on VS2022 and try open `Form1` designer.\r\n\r\n**Output from VS2022:**\r\n```cs\r\n[16:30:43.1921519] Creating VSCodeDomDesignerLoader\r\n[16:30:45.1771483] Processed 'System.Design' in 00:00:04.1270162\r\n[16:30:45.2051489] Added 'System.Design'\r\n[16:30:45.2051489] Loaded System.Drawing.Design in 00:00:00.0000212 [thread 10]\r\n[16:30:45.2091460] Processed 'System.Drawing.Design' in 00:00:00.0042542\r\n[16:30:45.2101469] Added 'System.Drawing.Design'\r\n[16:30:45.3011495] Start processing enqueued assemblies\r\n[16:30:45.3021480] Loaded Microsoft.WinForms.DesignTools.Protocol in 00:00:00.0000206 [thread 10]\r\n[16:30:45.4881486] Processed 'Microsoft.WinForms.DesignTools.Protocol' in 00:00:00.1868933\r\n[16:30:45.4941472] Added 'Microsoft.WinForms.DesignTools.Protocol'\r\n[16:30:45.4951483] Loaded Microsoft.WinForms.DesignTools.Client in 00:00:00.0000363 [thread 87]\r\n[16:30:45.7031461] Processed 'Microsoft.WinForms.DesignTools.Client' in 00:00:00.2081947\r\n[16:30:45.7081489] Added 'Microsoft.WinForms.DesignTools.Client'\r\n[16:30:54.2412176] [CraftMonitor]: Preparing shadow cache folder\r\n[16:30:54.2442114] [CraftMonitor]: Copying design tools server common files from: 'c:\\program files\\microsoft visual studio\\2022\\preview\\common7\\ide\\commonextensions\\microsoft\\windows.forms\\DesignToolsServer\\Common'\r\n[16:31:03.1555740] [CraftMonitor]: Copying design tool server platform-specific files from: 'c:\\program files\\microsoft visual studio\\2022\\preview\\common7\\ide\\commonextensions\\microsoft\\windows.forms\\DesignToolsServer\\x64'\r\n[16:31:03.3375745] [CraftMonitor]: Copying 'C:\\Users\\natha\\source\\repos\\CraftMonitor\\CraftMonitor\\obj\\Debug\\net6.0-windows\\CraftMonitor.designer.deps.json' to 'DesignToolsServer.deps.json'\r\n[16:31:03.3495751] [CraftMonitor]: Copying 'C:\\Users\\natha\\source\\repos\\CraftMonitor\\CraftMonitor\\obj\\Debug\\net6.0-windows\\CraftMonitor.designer.runtimeconfig.json' to 'DesignToolsServer.runtimeconfig.json'\r\n[16:31:03.6065745] [CraftMonitor]: Launching design tools server process...\r\n[16:31:14.6486408] [CraftMonitor]: Timed out while connecting to named pipe: DesignToolsServer.f02e0df7-a9d3-43a5-952b-8d79b383c9b1\r\n[16:31:14.9206458] Microsoft.DotNet.DesignTools.Client.ServerException: Timed out while connecting to named pipe.\r\n                      at Microsoft.DotNet.DesignTools.Client.Host.ServerProcess.<ConnectToStreamAsync>d__30.MoveNext()\r\n                   --- End of stack trace from previous location where exception was thrown ---\r\n                      at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n                      at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n                      at Microsoft.DotNet.DesignTools.Client.Host.ServerProcess.<LaunchAsync>d__25.MoveNext()\r\n                   --- End of stack trace from previous location where exception was thrown ---\r\n                      at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n                      at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n                      at Microsoft.DotNet.DesignTools.Client.Host.ServerHostFactory.<CreateHostAsync>d__7.MoveNext()\r\n                   --- End of stack trace from previous location where exception was thrown ---\r\n                      at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n                      at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n                      at Microsoft.DotNet.DesignTools.Client.DesignToolsClientLoader.<CreateClientAsync>d__35.MoveNext()\r\n                   --- End of stack trace from previous location where exception was thrown ---\r\n                      at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n                      at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n```\r\n\r\nSometimes in Output window only display first line:\r\n\r\n`[16:30:43.1921519] Creating VSCodeDomDesignerLoader`\r\n\r\n* CSProj file created by `dotnet new` command targeting windows desktop:\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>WinExe</OutputType>\r\n    <TargetFramework>net6.0-windows</TargetFramework>\r\n    <Nullable>enable</Nullable>\r\n    <UseWindowsForms>true</UseWindowsForms>\r\n    <ImplicitUsings>enable</ImplicitUsings>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\n### Steps i tried:\r\n- Reinstall VS and .NET SDK\r\n- Open both regular version or preview from VS2022\r\n- Reopen file\r\n\r\nNone of these worked.\r\n\r\n\r\nhttps://user-images.githubusercontent.com/14365254/147392615-cd09e099-d44e-48f6-b807-8a4855b5901b.mp4\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6420","RelatedDescription":"Open issue \"Timed out while connecting to named pipe: DesignToolsServer\" (#6420)"},{"Id":"1087825494","IsPullRequest":true,"CreatedAt":"2021-12-23T15:50:58","Actor":"gpetrou","Number":"6419","RawContent":null,"Title":"Enable nullability in DisplayedBandsData","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in DisplayedBandsData.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6419)","Url":"https://github.com/dotnet/winforms/pull/6419","RelatedDescription":"Open PR \"Enable nullability in DisplayedBandsData\" (#6419)"},{"Id":"1087765037","IsPullRequest":true,"CreatedAt":"2021-12-23T14:30:43","Actor":"Danil-Andrianov","Number":"6418","RawContent":null,"Title":"Rewrite MAUIScrollBarTests","State":"open","Body":"Fixes #3617\r\n\r\n## Proposed changes\r\n\r\n- Replaced ScrollBarMAUI tests into unit tests project\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6418)","Url":"https://github.com/dotnet/winforms/pull/6418","RelatedDescription":"Open PR \"Rewrite MAUIScrollBarTests\" (#6418)"},{"Id":"1087596012","IsPullRequest":true,"CreatedAt":"2021-12-23T10:45:19","Actor":"gpetrou","Number":"6416","RawContent":null,"Title":"Move uuid_IAccessible to Interop Oleacc","State":"open","Body":"## Proposed changes\r\n\r\n- Move uuid_IAccessible to Interop Oleacc.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6416)","Url":"https://github.com/dotnet/winforms/pull/6416","RelatedDescription":"Open PR \"Move uuid_IAccessible to Interop Oleacc\" (#6416)"},{"Id":"1087594864","IsPullRequest":false,"CreatedAt":"2021-12-23T10:43:48","Actor":"vijayarasan","Number":"6415","RawContent":null,"Title":"Wrong Icon Displayed windows 2003 OS and Windows 2008 server","State":"open","Body":"**Problem description:**\r\n\r\nWe create the simple sample and set font style as “Regular”, the issue raises whereas when the font style is set to “Bold”, the icon font is drawn properly. Here I have attached the sample for your reference.\r\n\r\n**Sample Link :**  [IconFont.zip](https://github.com/dotnet/winforms/files/7768722/IconFont.zip)\r\n\r\nImage for your reference,\r\n\r\n**Regular FontStyle :**\r\n\r\n ![RegularFont](https://user-images.githubusercontent.com/58214164/147228764-3842378c-e5f5-4528-bd45-7a238ce4cb1f.PNG)\r\n\r\n**Bold FontStyle :**\r\n\r\n ![BoldFont](https://user-images.githubusercontent.com/58214164/147228854-cf5ea46c-b507-49b8-82b8-95c692c0a781.PNG)\r\n\r\n**Minimal repro:**\r\n\r\nStep 1: Set the Font Style as Regular\r\nStep 2: Run the Sample in Windows 2003 OS (or Windows Server 2008)\r\nStep 3: Note the Icons are displayed wrongly in Button\r\n\r\n**Expected behavior:**\r\nIcons are properly displayed in Button\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6415","RelatedDescription":"Open issue \"Wrong Icon Displayed windows 2003 OS and Windows 2008 server\" (#6415)"},{"Id":"1087487268","IsPullRequest":true,"CreatedAt":"2021-12-23T08:24:48","Actor":"gpetrou","Number":"6412","RawContent":null,"Title":"Enable nullability in ActiveXImpl","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in ActiveXImpl.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6412)","Url":"https://github.com/dotnet/winforms/pull/6412","RelatedDescription":"Open PR \"Enable nullability in ActiveXImpl\" (#6412)"},{"Id":"1087440736","IsPullRequest":true,"CreatedAt":"2021-12-23T07:09:58","Actor":"gpetrou","Number":"6410","RawContent":null,"Title":"Enable nullability in NativeWindow","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in NativeWindow.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6410)","Url":"https://github.com/dotnet/winforms/pull/6410","RelatedDescription":"Open PR \"Enable nullability in NativeWindow\" (#6410)"},{"Id":"1087414688","IsPullRequest":true,"CreatedAt":"2021-12-23T06:19:31","Actor":"gpetrou","Number":"6407","RawContent":null,"Title":"Enable nullability in EnumUnknown","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in EnumUnknown.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6407)","Url":"https://github.com/dotnet/winforms/pull/6407","RelatedDescription":"Open PR \"Enable nullability in EnumUnknown\" (#6407)"},{"Id":"1086806294","IsPullRequest":true,"CreatedAt":"2021-12-22T19:57:37","Actor":"dotnet-maestro[bot]","Number":"6403","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20211221.3\r\n- **Date Produced**: December 21, 2021 2:28:07 PM UTC\r\n- **Commit**: 0cd94b1d02c03377d99f3739beb191591f6abee5\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.21620.2 to 7.0.0-beta.21621.3][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21620.2 to 7.0.0-beta.21621.3][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.21620.2 to 7.0.0-beta.21621.3][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.21620.2 to 7.0.0-beta.21621.3][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.21620.2 to 7.0.0-beta.21621.3][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21620.2 to 7.0.0-beta.21621.3][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/2af5dda...0cd94b1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6403)","Url":"https://github.com/dotnet/winforms/pull/6403","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6403)"},{"Id":"1086889862","IsPullRequest":true,"CreatedAt":"2021-12-22T14:45:18","Actor":"Danil-Andrianov","Number":"6405","RawContent":null,"Title":"Rewrite MAUI PropertyGridView, MDI and ImageList tests","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3617\r\n\r\n\r\n## Proposed changes\r\n\r\n- Replaced PropertyGridViewMAUI tests into unit tests project\r\n- Replaced MdiMAUI tests into unit tests project\r\n- Replaced ImageListMAUI tests into unit tests project\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6405)","Url":"https://github.com/dotnet/winforms/pull/6405","RelatedDescription":"Open PR \"Rewrite MAUI PropertyGridView, MDI and ImageList tests\" (#6405)"},{"Id":"1086829134","IsPullRequest":true,"CreatedAt":"2021-12-22T13:35:25","Actor":"gpetrou","Number":"6404","RawContent":null,"Title":"Enable nullability in DataStreamFromComStream","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in DataStreamFromComStream.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6404)","Url":"https://github.com/dotnet/winforms/pull/6404","RelatedDescription":"Open PR \"Enable nullability in DataStreamFromComStream\" (#6404)"}],"ResultType":"GitHubIssue"}},"RunOn":"2021-12-28T05:30:35.1909901Z","RunDurationInMilliseconds":485}