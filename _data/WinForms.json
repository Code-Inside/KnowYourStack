{"Data":{"GitHub":{"Issues":[{"Id":"1195322898","IsPullRequest":true,"CreatedAt":"2022-04-07T00:04:42","Actor":"kant2002","Number":"6981","RawContent":null,"Title":"Pass proper COM interfaces to the drag functions","State":"open","Body":"Fixes #6952\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6981)","Url":"https://github.com/dotnet/winforms/pull/6981","RelatedDescription":"Open PR \"Pass proper COM interfaces to the drag functions\" (#6981)"},{"Id":"1194981952","IsPullRequest":true,"CreatedAt":"2022-04-06T19:51:55","Actor":"gpetrou","Number":"6979","RawContent":null,"Title":"Enable nullability in ObjectCollection","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ObjectCollection.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6979)","Url":"https://github.com/dotnet/winforms/pull/6979","RelatedDescription":"Closed or merged PR \"Enable nullability in ObjectCollection\" (#6979)"},{"Id":"1195000242","IsPullRequest":true,"CreatedAt":"2022-04-06T19:45:57","Actor":"gpetrou","Number":"6980","RawContent":null,"Title":"Enable nullability in CheckedItemCollection","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in CheckedItemCollection.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6980)","Url":"https://github.com/dotnet/winforms/pull/6980","RelatedDescription":"Closed or merged PR \"Enable nullability in CheckedItemCollection\" (#6980)"},{"Id":"1194408038","IsPullRequest":true,"CreatedAt":"2022-04-06T10:28:18","Actor":"kirsan31","Number":"6978","RawContent":null,"Title":"Workaround for empty finalizers in DataGridView.","State":"open","Body":"Contribute to #6858.\r\nThis is continuation of https://github.com/dotnet/winforms/pull/6878 based on discussion.\r\nDocumentation for calling `GC.SuppressFinalize` on users subclasses also need to be updated some how...\r\n\r\n## Test methodology\r\n\r\n- Existing UT.\r\n- New UT for all subclasses coverage.\r\n- Manual.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6978)","Url":"https://github.com/dotnet/winforms/pull/6978","RelatedDescription":"Open PR \"Workaround for empty finalizers in DataGridView.\" (#6978)"},{"Id":"1194399652","IsPullRequest":false,"CreatedAt":"2022-04-06T10:20:41","Actor":"TheLeftExit","Number":"6977","RawContent":null,"Title":"Localized strings containing only whitespace characters are loaded as blank strings","State":"open","Body":"### .NET version\n\nReplicated on .NET Core 3 and all later versions.\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nI did not try this with versions prior to .NET Core 3.\n\n### Issue description\n\nIf a localized property's value is set to a string that only contains whitespace characters, **ComponentResourceManager** methods such as **ApplyResources** or **GetString** retrieve it as a blank string. This is a breaking change for .NET Framework applications where this is not the case.\r\n\r\nI could not find this change documented anywhere, or any issues related to it.\r\n\r\nThe XML generated for the property is the same in both .NET FX and .NET Core/5+:\r\n```xml\r\n<data name=\"label1.Text\" xml:space=\"preserve\">\r\n  <value>  </value>\r\n</data>\r\n```\n\n### Steps to reproduce\n\nI attached a solution containing two identical forms in .NET Framework 4.8 and .NET 6.\r\n[T1080450.zip](https://github.com/dotnet/winforms/files/8425886/T1080450.zip)\r\n\r\nTo replicate:\r\n - Create a new project using the Windows Forms App template.\r\n - Set the main form's **Localizable** property to **true**.\r\n - Add a label and set its **Text** property to ` ` (a string with a single whitespace character).\r\n - Debug the project and check the value of this property after it is set in the **InitializeComponent** method.","Url":"https://github.com/dotnet/winforms/issues/6977","RelatedDescription":"Open issue \"Localized strings containing only whitespace characters are loaded as blank strings\" (#6977)"},{"Id":"1194354328","IsPullRequest":true,"CreatedAt":"2022-04-06T09:44:25","Actor":"kant2002","Number":"6976","RawContent":null,"Title":"Properly use QI for all ComWrapper created instances","State":"open","Body":"Unfortunately this is not kind of fix which I willing to bring, but this seems to be only way without undoing other work too.\r\n\r\nFixes #6952\r\n\r\n## Proposed changes\r\n\r\n- Move forward with ComWrappers work, so all drag/drop functionality would be covered.\r\n- Inside WinForms right now all Drag/Drop working using ComWrappers, methods which are user-facing still rely on built-in COM (See #6745 for potential solution)\r\n- Additional testing needed on the corner cases like drag/drop from external application, etc.\r\n\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Moderate\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Verified using attached to the issue test case\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6976)","Url":"https://github.com/dotnet/winforms/pull/6976","RelatedDescription":"Open PR \"Properly use QI for all ComWrapper created instances\" (#6976)"},{"Id":"1194203761","IsPullRequest":false,"CreatedAt":"2022-04-06T07:49:15","Actor":"roland5572","Number":"6975","RawContent":null,"Title":"Wrong ListViewItemStates value in OnDrawSubItem method from ListView Control.","State":"open","Body":"### .NET version\r\n\r\n6.0, 4.8\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNo\r\n\r\n### Issue description\r\n\r\nIn the **ListView** control, set OwnerDraw = true, then you can overload the OnDrawSubItem function. \r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.listview.ondrawsubitem\r\n\r\nWhen you select an Item, then click on an empty/blank space in the ListView. This operation will result in no items being selected (ListView.SelectedItems.Count==0). But the wrong value may appear in the **OnDrawSubItem** method (DrawListViewSubItemEventArgs e).\r\n\r\ne.ItemState still equals ListViewItemStates.Selected | ListViewItemStates.Focused\r\n\r\nTest Code: .net 6.0 / Visual Studio 2022\r\n\r\n```\r\nnamespace ListViewItemStatesTest\r\n{\r\n    internal static class Program\r\n    {\r\n        [STAThread]\r\n        static void Main()\r\n        {\r\n            ApplicationConfiguration.Initialize();\r\n            Application.Run(CreateForm());\r\n        }\r\n\r\n        private class NewListView : ListView\r\n        {\r\n            private static readonly SolidBrush Brush = new SolidBrush(Color.Black);\r\n\r\n            protected override void OnDrawSubItem(DrawListViewSubItemEventArgs e)\r\n            {\r\n                if (e.ItemState == (ListViewItemStates.Selected | ListViewItemStates.Focused))\r\n                {\r\n                    e.SubItem.BackColor = Color.Orange;\r\n                }\r\n                else\r\n                {\r\n                    e.SubItem.BackColor = Color.LightBlue;\r\n                }\r\n\r\n                e.DrawDefault = true;\r\n                base.OnDrawSubItem(e);\r\n            }\r\n        }\r\n\r\n        private static Form CreateForm()\r\n        {\r\n            var frm = new Form()\r\n            {\r\n                Width = 800,\r\n                Height = 600,\r\n\r\n                StartPosition = FormStartPosition.CenterScreen\r\n            };\r\n\r\n            var control = new NewListView()\r\n            {\r\n                Dock = DockStyle.Fill,\r\n                View = View.Details,\r\n\r\n                OwnerDraw = true,\r\n                GridLines = true,\r\n                FullRowSelect = true,\r\n            };\r\n\r\n            control.Columns.Add(\"Column 1\", 100);\r\n            control.Columns.Add(\"Column 2\", 600);\r\n\r\n            var item1 = control.Items.Add(\"1\");\r\n            item1.SubItems.Add(\"Sub Item 1\");\r\n\r\n            var item2 = control.Items.Add(\"2\");\r\n            item2.SubItems.Add(\"Sub Item 2\");\r\n\r\n            frm.Controls.Add(control);\r\n\r\n            var button1= new Button() { Text = \"Button 1\", Height = 50, Dock = DockStyle.Top };\r\n            frm.Controls.Add(button1);\r\n\r\n            return frm;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n### Steps to reproduce\r\n\r\nnormal control behavior:\r\n1. Run the above code.\r\n2. Click ListView's item 1. The item's background turns blue.\r\n3. Click Button 1,  The item's background turns gray.\r\n\r\nIncorrect control behavior:\r\n1. **Restart program** (you need to restart the program, because the focus of the control may have changed).\r\n2. Click ListView's item 1. The item's background turns blue.\r\n4. Click on other blank area (white color) of ListView (don't click on Item area or column area, but blank area). The item's background turns orange.\r\n\r\nBecause the value of the parameter of DrawListViewSubItemEventArgs e (e.ItemState) is wrong, the item background behaves as Orange.\r\n\r\nIf you can't reproduce the process, or need a video, please let me know.","Url":"https://github.com/dotnet/winforms/issues/6975","RelatedDescription":"Open issue \"Wrong ListViewItemStates value in OnDrawSubItem method from ListView Control.\" (#6975)"},{"Id":"1194060667","IsPullRequest":true,"CreatedAt":"2022-04-06T05:35:19","Actor":"vladimir-krestov","Number":"6974","RawContent":null,"Title":"Fixed Narrator announcement of an empty form or its inner controls when opening","State":"open","Body":"Fixes #6896\r\nThis is a regression from .NET 3.1 after #2096. (.NET Core 3.0 and .NET Framewrok work well)\r\n\r\n## Proposed changes\r\n\r\n- Raise the focus event for a form or its active control, when the form is opening. Thereby a screen reader will focus on the form and announce its title.\r\n\r\n## Customer Impact\r\n\r\n- Now a user can know from Narrator that a form has been opened\r\n\r\n## Regression? \r\n\r\n- Yes (from #2096)\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before - todo\r\n\r\n<!-- TODO -->\r\n\r\n### After - todo\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing\r\n- CTI\r\n\r\n## Accessibility testing \r\n- Using Narrator, AI, and Inspect.\r\n   Tested the following cases:\r\n     - Open an empty form - Narrator should focus on the form and announce its title\r\n     - Open a form with one control - Narrator should focus on this control and announce the form title and then the control info. Also checked, if a control, that overrides `OnGotFocus`, doesn't conflict with this fix raising focus event:\r\n        - ListBox\r\n        - DateTimePicker\r\n        - ListView\r\n        - MonthCalendar\r\n        - TabControl\r\n     - Open a form with several controls - Narrator should focus on an active control (usually, that has a minimal TabIndex) and announce the form title and then the active control info.\r\n    \r\n\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- Windows 11\r\n- .NET 7.0.0-preview.4.22179.1\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6974)","Url":"https://github.com/dotnet/winforms/pull/6974","RelatedDescription":"Open PR \"Fixed Narrator announcement of an empty form or its inner controls when opening\" (#6974)"},{"Id":"1194049947","IsPullRequest":true,"CreatedAt":"2022-04-06T05:24:17","Actor":"RussKie","Number":"6973","RawContent":null,"Title":"Update the intellisense version","State":"open","Body":"* Update the intellisense version\r\n* Avoid additional copy step\r\n* Avoid race conditions\r\n\r\nCloses #6928\r\n\r\n## Test\r\n\r\nManually verified the content against a previously published microsoft.private.winforms NuGet package.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6973)","Url":"https://github.com/dotnet/winforms/pull/6973","RelatedDescription":"Open PR \"Update the intellisense version\" (#6973)"},{"Id":"1190933873","IsPullRequest":true,"CreatedAt":"2022-04-06T02:12:48","Actor":"kant2002","Number":"6958","RawContent":null,"Title":"Create unique instance for each AutoComplete object","State":"closed","Body":"That way we do not re-use released RCW\r\n\r\nFixes #6953\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6958)","Url":"https://github.com/dotnet/winforms/pull/6958","RelatedDescription":"Closed or merged PR \"Create unique instance for each AutoComplete object\" (#6958)"},{"Id":"1190597677","IsPullRequest":false,"CreatedAt":"2022-04-06T02:12:48","Actor":"Olina-Zhang","Number":"6953","RawContent":null,"Title":"Automation case about comboBox met an error \"Object reference not set to an instance of an object\"","State":"closed","Body":"### .NET version\n\n.Net 7.0.100-preview.4.22201.11\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, cannot repro in .Net SDK 7.0 Preview3 build\n\n### Issue description\n\nAutomation case about comboBox met an error \"Object reference not set to an instance of an object\":\r\n![image](https://user-images.githubusercontent.com/26474449/161380079-92c333db-b522-4732-9876-9d1dae1f09f8.png)\r\n\n\n### Steps to reproduce\n\nWe cannot get a manual repro, just met it when running our internal automation case about ComboBox, get following calll stack:\r\n\r\n_System.NullReferenceException\r\nHResult=0x80004003\r\nMessage=Object reference not set to an instance of an object.\r\nSource=System.Windows.Forms.Primitives\r\nStackTrace:\r\nat Interop.WinFormsComWrappers.AutoCompleteWrapper.SetOptions(AUTOCOMPLETEOPTIONS dwFlag)\r\nat System.Windows.Forms.StringSource.Bind(HandleRef edit, AUTOCOMPLETEOPTIONS options)\r\nat System.Windows.Forms.ComboBox.SetAutoComplete(Boolean reset, Boolean recreate)\r\nat MMFComboBox.CustomSource(TParams p) in C:\\Users\\v-olzhan\\Desktop\\Automation\\MMFComboBox_P1\\MMFComboBox_P1\\MMFComboBox\\MMFComboBox.cs:line 624_","Url":"https://github.com/dotnet/winforms/issues/6953","RelatedDescription":"Closed issue \"Automation case about comboBox met an error \"Object reference not set to an instance of an object\"\" (#6953)"},{"Id":"1193870861","IsPullRequest":true,"CreatedAt":"2022-04-06T00:37:06","Actor":"dreddy-work","Number":"6972","RawContent":null,"Title":"Deprecate Permonitor mode intended only for Windows 8.1","State":"open","Body":"WinForms never fully supported this mode. Windows 10 and above versions use 'PermonitorV2' mode.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6972)","Url":"https://github.com/dotnet/winforms/pull/6972","RelatedDescription":"Open PR \"Deprecate Permonitor mode intended only for Windows 8.1\" (#6972)"},{"Id":"1193863433","IsPullRequest":true,"CreatedAt":"2022-04-06T00:21:58","Actor":"dreddy-work","Number":"6971","RawContent":null,"Title":"Fix nested/User control scaling.","State":"open","Body":"Fixes #6381.\r\n\r\nNested controls are disabled for scaling once their parent layout is finished.\r\nHowever, Parent might be reparented and could go through a new layout based on\r\n its parent's scale dimensions.\r\n\r\nWe are maintaining multiple flags around scaling here and can be cleaned but require full testing. Making a scoped fix here to limit the risk.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6971)","Url":"https://github.com/dotnet/winforms/pull/6971","RelatedDescription":"Open PR \"Fix nested/User control scaling.\" (#6971)"},{"Id":"1193685544","IsPullRequest":true,"CreatedAt":"2022-04-05T21:29:42","Actor":"dotnet-maestro[bot]","Number":"6970","RawContent":null,"Title":"[release/6.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:84f431dc-3375-4a46-af87-08d961c59698)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 84f431dc-3375-4a46-af87-08d961c59698\r\n- **Build**: 20220328.5\r\n- **Date Produced**: March 28, 2022 7:04:19 PM UTC\r\n- **Commit**: f8c0d51185208227e582f76ac3c5003db237b689\r\n- **Branch**: refs/heads/release/6.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 6.0.0-beta.22161.1 to 6.0.0-beta.22178.5][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.22161.1 to 6.0.0-beta.22178.5][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.22161.1 to 6.0.0-beta.22178.5][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.22161.1 to 6.0.0-beta.22178.5][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.22161.1 to 6.0.0-beta.22178.5][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.22161.1 to 6.0.0-beta.22178.5][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/879df78...f8c0d51\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:84f431dc-3375-4a46-af87-08d961c59698)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6970)","Url":"https://github.com/dotnet/winforms/pull/6970","RelatedDescription":"Closed or merged PR \"[release/6.0] Update dependencies from dotnet/arcade\" (#6970)"},{"Id":"1193675716","IsPullRequest":true,"CreatedAt":"2022-04-05T21:03:12","Actor":"dotnet-maestro[bot]","Number":"6968","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:7ad8a074-d804-46e2-eafe-08d86aff023e)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 7ad8a074-d804-46e2-eafe-08d86aff023e\r\n- **Build**: 20220309.5\r\n- **Date Produced**: March 9, 2022 9:39:48 PM UTC\r\n- **Commit**: ee744068a4fcccc5b8b56e0025f9c95aa19ff318\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: [from 5.0.0-beta.22055.3 to 5.0.0-beta.22159.5][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 5.0.0-beta.22055.3 to 5.0.0-beta.22159.5][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 5.0.0-beta.22055.3 to 5.0.0-beta.22159.5][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 5.0.0-beta.22055.3 to 5.0.0-beta.22159.5][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 5.0.0-beta.22055.3 to 5.0.0-beta.22159.5][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/e5953f2...ee74406\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:7ad8a074-d804-46e2-eafe-08d86aff023e)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6968)","Url":"https://github.com/dotnet/winforms/pull/6968","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/arcade\" (#6968)"},{"Id":"1193658395","IsPullRequest":true,"CreatedAt":"2022-04-05T20:59:15","Actor":"vseanreesermsft","Number":"6966","RawContent":null,"Title":"Update branding to 5.0.17","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6966)","Url":"https://github.com/dotnet/winforms/pull/6966","RelatedDescription":"Closed or merged PR \"Update branding to 5.0.17\" (#6966)"},{"Id":"1193658492","IsPullRequest":true,"CreatedAt":"2022-04-05T20:58:42","Actor":"vseanreesermsft","Number":"6967","RawContent":null,"Title":"Update branding to 6.0.5","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6967)","Url":"https://github.com/dotnet/winforms/pull/6967","RelatedDescription":"Closed or merged PR \"Update branding to 6.0.5\" (#6967)"},{"Id":"1193676433","IsPullRequest":true,"CreatedAt":"2022-04-05T20:53:56","Actor":"dotnet-maestro[bot]","Number":"6969","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a2a5ea62-d9bf-419c-0c86-08d7315b512a)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: a2a5ea62-d9bf-419c-0c86-08d7315b512a\r\n- **Build**: 20220309.6\r\n- **Date Produced**: March 9, 2022 9:51:37 PM UTC\r\n- **Commit**: aebcd10d76469b2e84cffd39d043574bc5357d22\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 2.4.1-beta.22077.9 to 2.4.1-beta.22159.6][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.22077.9 to 1.0.0-beta.22159.6][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 2.0.0-beta.22077.9 to 2.0.0-beta.22159.6][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 1.0.0-beta.22077.9 to 1.0.0-beta.22159.6][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/31e3d88...aebcd10\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:a2a5ea62-d9bf-419c-0c86-08d7315b512a)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6969)","Url":"https://github.com/dotnet/winforms/pull/6969","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#6969)"},{"Id":"1192765918","IsPullRequest":false,"CreatedAt":"2022-04-05T07:53:32","Actor":"gc-maximloverov","Number":"6965","RawContent":null,"Title":"Windows Automation RaiseAutomationPropertyChangedEvent throws System.NotSupportedException","State":"open","Body":"### .NET version\r\n\r\n6.0\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNo\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\n_No response_\r\n\r\n### Issue description\r\n\r\nWindows Automation RaiseAutomationPropertyChangedEvent method for BoundingRectangleProperty throws System.NotSupportedException 'Type 'System.Windows.Rect' cannot be marshalled to a Variant. Type library is not registered.'.\r\nNo exception is thrown if the AutomationPropertyChangedEvent values are null.\r\n\r\n### Steps to reproduce\r\n\r\n1. Run attached app:\r\n[UiaNotSupportedException6.zip](https://github.com/dotnet/winforms/files/8416069/UiaNotSupportedException6.zip)\r\n2. Press button \"button1\"\r\n3. Observe thrown System.NotSupportedException","Url":"https://github.com/dotnet/winforms/issues/6965","RelatedDescription":"Open issue \"Windows Automation RaiseAutomationPropertyChangedEvent throws System.NotSupportedException\" (#6965)"},{"Id":"1192480923","IsPullRequest":false,"CreatedAt":"2022-04-05T01:02:32","Actor":"RussKie","Number":"6964","RawContent":null,"Title":"Mark `WebBrowser` and all related (e.g., HTML* types) as obsolete","State":"open","Body":"### Is your feature request related to a problem? Please describe\n\n `WebBrowser` control is based on IE engine, which is almost universally unusable for general web browsing these days. [WebView2](https://docs.microsoft.com/microsoft-edge/webview2/) is a modern replacement for the web browser control.\r\n\n\n### Describe the solution you'd like and alternatives you've considered\n\nFor .NET 7 and .NET 8 decorate all web- and html-related types as obsolete (`error: false`) with a link to directing developers use  [WebView2](https://docs.microsoft.com/microsoft-edge/webview2/) control instead.\r\nIn .NET 9 update the decorations to `error: true`, remove all implementations and leave only the public API that throw NIE.\n\n### Will this feature affect UI controls?\n\nThe affected controls will need to be made hidden from the designer.","Url":"https://github.com/dotnet/winforms/issues/6964","RelatedDescription":"Open issue \"Mark `WebBrowser` and all related (e.g., HTML* types) as obsolete\" (#6964)"},{"Id":"1191394532","IsPullRequest":false,"CreatedAt":"2022-04-04T07:50:27","Actor":"kant2002","Number":"6963","RawContent":null,"Title":"Potential memory leak in HtmlElementShim","State":"open","Body":"### .NET version\n\n7.0 and earlier\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\nLook at the code\r\nhttps://github.com/dotnet/winforms/blob/8bbc3f2f4f2270f62ddf1cca36a0870b36017fa8/src/System.Windows.Forms/src/System/Windows/Forms/HtmlElement.HtmlElementShim.cs#L101-L111\r\n\r\nFrom what I see some cookies abandoned after they are attached. Does this indicate memory leak? Shouldn't this class has list of cookies instead of just single ConnectionPointCookie?\n\n### Steps to reproduce\n\nStare at the code until question arise in your heart.","Url":"https://github.com/dotnet/winforms/issues/6963","RelatedDescription":"Open issue \"Potential memory leak in HtmlElementShim\" (#6963)"},{"Id":"1191331892","IsPullRequest":true,"CreatedAt":"2022-04-04T06:45:37","Actor":"kant2002","Number":"6962","RawContent":null,"Title":"Remove Message.GetLParam since it is linker unfriendly","State":"open","Body":"That remove one warning from linker.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6962)","Url":"https://github.com/dotnet/winforms/pull/6962","RelatedDescription":"Open PR \"Remove Message.GetLParam since it is linker unfriendly\" (#6962)"},{"Id":"1190950797","IsPullRequest":true,"CreatedAt":"2022-04-04T04:59:57","Actor":"kant2002","Number":"6961","RawContent":null,"Title":"Create CCW for IDropTarget","State":"closed","Body":"Inspired by https://github.com/dotnet/winforms/issues/6959\r\n\r\nThis is just kick can down the road, since I use `Marshal.GetObjectForIUnknown` instead of ComWrapper. Anyway, that's reduce amount of code which use built-in COM and drive towards #5163\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6961)","Url":"https://github.com/dotnet/winforms/pull/6961","RelatedDescription":"Closed or merged PR \"Create CCW for IDropTarget\" (#6961)"},{"Id":"1190613960","IsPullRequest":true,"CreatedAt":"2022-04-04T04:37:04","Actor":"dotnet-maestro[bot]","Number":"6954","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20220401.3\r\n- **Date Produced**: April 1, 2022 6:43:57 PM UTC\r\n- **Commit**: c3e44952bb75d054517f2a24943502d3a14a47f5\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **System.Text.Json**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **System.CodeDom**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.4.22201.1 to 7.0.0-preview.4.22201.3][2]\r\n\r\n[2]: https://github.com/dotnet/runtime/compare/c3843c5...c3e4495\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6954)\r\n","Url":"https://github.com/dotnet/winforms/pull/6954","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6954)"},{"Id":"1190950570","IsPullRequest":true,"CreatedAt":"2022-04-04T04:04:52","Actor":"gpetrou","Number":"6960","RawContent":null,"Title":"Enable nullability in ThreadExceptionDialog","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ThreadExceptionDialog.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6960)","Url":"https://github.com/dotnet/winforms/pull/6960","RelatedDescription":"Closed or merged PR \"Enable nullability in ThreadExceptionDialog\" (#6960)"},{"Id":"1190943484","IsPullRequest":false,"CreatedAt":"2022-04-03T14:14:18","Actor":"kant2002","Number":"6959","RawContent":null,"Title":"DragDrop registration did not succeed in Designer","State":"open","Body":"### Environment\n\nVersion 17.2.0 Preview 2.1\n\n### .NET version\n\n7.0 Preview 4\n\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\n\nActually have no idea, I know that designer is flacky.\n\n### Issue description\n\nDesigner seems to be running with disabled COM interop and some love from Winforms needed.\r\n\r\nOn the opening form with project [WinFormsApp6953.zip](https://github.com/dotnet/winforms/files/8404533/WinFormsApp6953.zip)\r\n\r\nfollowing screen for designer displayed\r\n![image](https://user-images.githubusercontent.com/4257079/161432160-68a725ab-1bf5-434c-b229-d31cbcad941a.png)\n\n### Steps to reproduce\n\n1. Create new WinForms project \r\n2. Set `<TargetFramework>net7.0-windows</TargetFramework>`\r\n\r\n\n\n### Diagnostics\n\n_No response_","Url":"https://github.com/dotnet/winforms/issues/6959","RelatedDescription":"Open issue \"DragDrop registration did not succeed in Designer\" (#6959)"},{"Id":"1190930608","IsPullRequest":true,"CreatedAt":"2022-04-03T13:24:35","Actor":"kirsan31","Number":"6957","RawContent":null,"Title":"Fixed unsharing of last shared row in DataGridViewRowCollection.","State":"open","Body":"## Proposed changes\r\n\r\nWith current implementation if currently unsharing row is the last one instance (of this shared row) in DataGridViewRowCollection we will clone it and therefore current instance will be lost. The only exception is if it is the very last row in the collection. It's more correct in this situation to always just update the index and return the current row.\r\n\r\n## Customer Impact\r\n\r\n- In some situation old behavior can mislead ppl (see corrected tests) and theoretically lead to bugs... \r\n- We will not lost any rows and they will not end in Freachable queue + we will not create new row in this case. Performance improvement.\r\n- With new implementation we will gain some performance penalty when unsharing rows (see comments in code).\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Low in current implementation (see comments in code).\r\n\r\n## Test methodology \r\n\r\nExisting tests (with corrections) and manual testing.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6957)","Url":"https://github.com/dotnet/winforms/pull/6957","RelatedDescription":"Open PR \"Fixed unsharing of last shared row in DataGridViewRowCollection.\" (#6957)"},{"Id":"1190872636","IsPullRequest":true,"CreatedAt":"2022-04-03T09:15:53","Actor":"kirsan31","Number":"6956","RawContent":null,"Title":"System.Windows.Forms.DataGridView.RefreshColumns() improvements","State":"open","Body":"## Proposed changes\r\n- Not generate bound columns if `AutoGenerateColumns == false`.\r\n- Removed double memory allocation in `GetCollectionOfBoundDataGridViewColumns`.\r\n\r\n## Customer Impact\r\n\r\n- Performance improvements in `AutoGenerateColumns == false`  - no need to generate bound columns in this mode.\r\n- Performance improvements in `AutoGenerateColumns == true`  - no more double memory allocation and coping.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal.\r\n\r\n## Test methodology\r\n\r\nExisting tests and manual testing.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6956)","Url":"https://github.com/dotnet/winforms/pull/6956","RelatedDescription":"Open PR \"System.Windows.Forms.DataGridView.RefreshColumns() improvements\" (#6956)"},{"Id":"1190688421","IsPullRequest":false,"CreatedAt":"2022-04-02T17:14:28","Actor":"carlreinke","Number":"6955","RawContent":null,"Title":"NotifyIcon does not use the appropriate icon size","State":"open","Body":"### .NET version\r\n\r\n6.0\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNo\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\n_No response_\r\n\r\n### Issue description\r\n\r\nThere is a [long-known issue](https://www.hhhh.org/cloister/csharp/icons/) that `NotifyIcon` does not use the proper icon size.  Rather than using the small icon size, it takes whatever size the `System.Drawing.Icon` has been constructed for (usually the default icon size), which Windows then scales down to the small icon size.\r\n\r\nThere is a work-around:\r\n```\r\n_notifyIcon.Icon = new Icon(_notifyIcon.Icon, SystemInformation.SmallIconSize);\r\n```\r\n\r\n`NotifyIcon` should do this itself.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a new WinForms project, name it \"NotifyIconBug\".\r\n2. Add a resource file and name it `Resource1.resx`.\r\n3. Add an icon with sizes of 16x16 and 32x32 to the `Resource1.resx` and name it `application_icon`.  Use images for the two sizes of the icon that are distinguishable from one another.\r\n3. Add a `NotifyIcon` to `Form1` and name it `notifyIcon1`.\r\n4. Set the `Icon` property of the `NotifyIcon` to the icon: `notifyIcon1.Icon = Resource1.application_icon;`\r\n5. Run the project, having the notification area on a low-DPI display.  The 32x32 size of the icon is displayed scaled down to 16x16 rather than displaying the 16x16 size.\r\n\r\nI'd guess you could also recreate this on a high-DPI display as well if you scale up the above sizes accordingly.","Url":"https://github.com/dotnet/winforms/issues/6955","RelatedDescription":"Open issue \"NotifyIcon does not use the appropriate icon size\" (#6955)"},{"Id":"1190548678","IsPullRequest":false,"CreatedAt":"2022-04-02T08:00:24","Actor":"Olina-Zhang","Number":"6952","RawContent":null,"Title":"Winforms runtime has stopped working when calling control's dragdrop event","State":"open","Body":"### .NET version\n\n.Net 7.0.100-preview.4.22201.11\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, it works well with previous .Net 7.0 SDK build: 7.0.100-**preview.3**.22153.22, 7.0.100-**preview.4**.22173.7\n\n### Issue description\n\nWinforms runtime has stopped working when calling control's dragdrop event, see following gif:\r\n\r\n![7 0_Issue](https://user-images.githubusercontent.com/26474449/161372761-c5c7eb4a-0ba9-44eb-9942-9b8e97f03030.gif)\r\n\r\n\n\n### Steps to reproduce\n\n1. Use attached sample application:\r\n[WinFormsApp30.zip](https://github.com/dotnet/winforms/files/8402059/WinFormsApp30.zip)\r\n2. Build and run application\r\n3. Drag and drop item from the left listBox to the right listBox\r\n","Url":"https://github.com/dotnet/winforms/issues/6952","RelatedDescription":"Open issue \"Winforms runtime has stopped working when calling control's dragdrop event\" (#6952)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-04-07T03:30:29.8775721Z","RunDurationInMilliseconds":487}