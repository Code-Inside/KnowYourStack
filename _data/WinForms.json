{"Data":{"GitHub":{"Issues":[{"Id":"2700591188","IsPullRequest":true,"CreatedAt":"2024-11-28T03:10:58","Actor":"Olina-Zhang","Number":"12559","RawContent":null,"Title":"[release/8.0] Fix issue 12495: Infinite loop in ToolStripItemCollection.AddRange","State":"open","Body":"BackPort of https://github.com/dotnet/winforms/pull/12513 to release/8.0\r\n/cc @Tanya-Solyanik @Olina-Zhang\r\n\r\n## Regression? \r\n\r\n- Yes, from .NET 6.0\r\n\r\n\r\n## Customer Impact\r\n\r\n- There is an infinite loop to call ToolStripItemCollection.AddRange(ToolStripItemCollection toolStripItems) with items when they have same owner.\r\nNow converts the ToolStripItemCollection into a temporary array (using ToArray()) to avoid modifying the original collection during iteration. This ensures that items can be safely added to the new collection without causing exceptions or unintended behavior, especially when items are removed from the original collection if they have a different owner control.\r\n\r\n\r\n## Risk\r\n\r\n- Low\r\n\r\n## Testing\r\n- Manual scenario testing and unit test\r\n- Regression tests\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12559)","Url":"https://github.com/dotnet/winforms/pull/12559","RelatedDescription":"Open PR \"[release/8.0] Fix issue 12495: Infinite loop in ToolStripItemCollection.AddRange\" (#12559)"},{"Id":"2700455538","IsPullRequest":true,"CreatedAt":"2024-11-28T02:08:04","Actor":"Olina-Zhang","Number":"12558","RawContent":null,"Title":"[release/9.0] Fix issue 12495: Infinite loop in ToolStripItemCollection.AddRange","State":"open","Body":"BackPort of https://github.com/dotnet/winforms/pull/12513 to release/9.0\r\n/cc @Tanya-Solyanik @Olina-Zhang\r\n\r\n## Regression? \r\n\r\nFrom NET6.0\r\n\r\n## Customer Impact\r\n\r\nThere is an infinite loop to call ToolStripItemCollection.AddRange(ToolStripItemCollection toolStripItems) with items when they have same owner.\r\nNow converts the ToolStripItemCollection into a temporary array (using ToArray()) to avoid modifying the original collection during iteration. This ensures that items can be safely added to the new collection without causing exceptions or unintended behavior, especially when items are removed from the original collection if they have a different owner control.\r\n\r\n## Risk\r\n\r\nLow\r\n\r\n## Testing\r\n\r\nManual scenario testing and unit test\r\nRegression tests\r\n\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12558)","Url":"https://github.com/dotnet/winforms/pull/12558","RelatedDescription":"Open PR \"[release/9.0] Fix issue 12495: Infinite loop in ToolStripItemCollection.AddRange\" (#12558)"},{"Id":"2700015612","IsPullRequest":true,"CreatedAt":"2024-11-27T22:22:41","Actor":"ricardobossan","Number":"12557","RawContent":null,"Title":"ToolTip Appears Partially Off-Screen on Left Border","State":"open","Body":" Fixes #12556\r\n\r\n## Proposed changes\r\n\r\n- Updates the `Reposition()` method in the `ToolTip` class to correctly handle cases where the tooltip extends beyond the left boundary of the screen, ensuring it is fully visible and not truncated.\r\n\r\n## Customer Impact\r\n\r\nThe tooltip will be fully visible regardless of how close it is to the left border of the screen.\r\n\r\n## Regression?\r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Screenshots\r\n\r\n### Before\r\n\r\n![image](https://github.com/user-attachments/assets/a1fce753-6bd6-499f-a3cc-6956205f13ec)\r\n\r\n### After\r\n\r\n![after](https://github.com/user-attachments/assets/541e26db-f2f3-4f40-bf2f-da754e153109)\r\n\r\n## Test methodology\r\n\r\n- Manual\r\n\r\n## Test environment(s)\r\n\r\nSDK: 9.0.100\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12557)","Url":"https://github.com/dotnet/winforms/pull/12557","RelatedDescription":"Open PR \"ToolTip Appears Partially Off-Screen on Left Border\" (#12557)"},{"Id":"2699922332","IsPullRequest":false,"CreatedAt":"2024-11-27T21:33:38","Actor":"ricardobossan","Number":"12556","RawContent":null,"Title":"`ToolTip` Appears Partially Off-Screen on Left Border","State":"open","Body":"### .NET version\n\nsdk: 9.0.100\nMicrosoft.NET.Sdk.IL: 10.0.0-alpha.1.24577.1\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\n## Current Behavior\nRelated to [6151](https://github.com/microsoft/winforms-designer/issues/6151#event-15209033892)\n\nThe `ToolTip` width that extends beyond the left border of the screen is cut off.\n\n![Image](https://github.com/user-attachments/assets/c2227b6d-886a-4db9-bd91-8b1910d9499e)\n\n## Expected Behavior\n\nThe `ToolTip` should be displayed in full, regardless of its proximity to the left edge of the screen.\n\n### Steps to reproduce\n\n1. Create a .NET 5+ WinForms project\n2. Add a `ToolStrip` control\n3. Add some buttons to it\n4. Set the `ToolStrip`'s `TabStop` property to `true`\n5. Run the project\n6. Move the form so it aligns with the left edge of the screen, or maximize it.\n7. Navigate between the buttons using the arrow keys.","Url":"https://github.com/dotnet/winforms/issues/12556","RelatedDescription":"Open issue \"`ToolTip` Appears Partially Off-Screen on Left Border\" (#12556)"},{"Id":"2696544859","IsPullRequest":true,"CreatedAt":"2024-11-27T20:38:58","Actor":"github-actions[bot]","Number":"12550","RawContent":null,"Title":"[release/9.0] Fix issue 12538: Infinite loop in System.Drawing.Graphics between IsVisible(Point) and IsVisible(int, int)","State":"closed","Body":"Backport of #12540 to release/9.0\r\n\r\n/cc @Tanya-Solyanik @Olina-Zhang\r\n\r\n## Regression\r\nFrom NET8.0, due to a typo\r\n\r\n## Customer Impact\r\nApplications that use Graphics.IsVisible(Point) and Graphics.IsVisible(int, int) are hanging are these two overloads call each other instead of calling the overload that does the actual work, Graphics.IsVisible(float, float)\r\n\r\n## Testing\r\nmanual scenario testing and unit test\r\n\r\n## Risk\r\nlow\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12550)","Url":"https://github.com/dotnet/winforms/pull/12550","RelatedDescription":"Closed or merged PR \"[release/9.0] Fix issue 12538: Infinite loop in System.Drawing.Graphics between IsVisible(Point) and IsVisible(int, int)\" (#12550)"},{"Id":"2698460444","IsPullRequest":true,"CreatedAt":"2024-11-27T13:37:26","Actor":"dotnet-maestro[bot]","Number":"12555","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20241127.1\r\n- **Date Produced**: November 27, 2024 10:48:35 AM UTC\r\n- **Commit**: fe3d5b5f7039e9f38f022dac77aeb6f01025b19d\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.IO.Hashing**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Text.Encodings.Web**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Text.Json**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24576.1 to 10.0.0-alpha.1.24577.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/354ec46a63...fe3d5b5f70\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12555)","Url":"https://github.com/dotnet/winforms/pull/12555","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#12555)"},{"Id":"2698459540","IsPullRequest":true,"CreatedAt":"2024-11-27T13:36:58","Actor":"dotnet-maestro[bot]","Number":"12554","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20241126.1\r\n- **Date Produced**: November 26, 2024 10:27:05 PM UTC\r\n- **Commit**: 9ad0880a9f8450f4ac4e097cfe830e401ea3e22c\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24575.1 to 10.0.0-beta.24576.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.24575.1 to 10.0.0-beta.24576.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.24575.1 to 10.0.0-beta.24576.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24575.1 to 10.0.0-beta.24576.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.24575.1 to 10.0.0-beta.24576.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.24575.1 to 10.0.0-beta.24576.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/2a3bf4e3a4...9ad0880a9f\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12554)","Url":"https://github.com/dotnet/winforms/pull/12554","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#12554)"},{"Id":"2693347418","IsPullRequest":false,"CreatedAt":"2024-11-27T12:38:34","Actor":"ravipoddar10mca","Number":"12546","RawContent":null,"Title":".NET 9 WinForms application does not run with the x64 architecture on Windows 10 (version 22H2, OS build 19045.2486).","State":"closed","Body":"Hi,\nI created a WinForms application and build it using .NET 9 for the x64 architecture on Windows 10 (version 22H2, OS build 19045.2486).\n\nThe application does not run, but when I convert it to x86, it works. Why does a .NET 9 x64 Windows application not run on Windows 10?\n\nI also checked that the x64 .NET 9 application works on Windows 11.","Url":"https://github.com/dotnet/winforms/issues/12546","RelatedDescription":"Closed issue \".NET 9 WinForms application does not run with the x64 architecture on Windows 10 (version 22H2, OS build 19045.2486).\" (#12546)"},{"Id":"2697792427","IsPullRequest":true,"CreatedAt":"2024-11-27T09:23:06","Actor":"Zheng-Li01","Number":"12553","RawContent":null,"Title":"Add code coverage for DataGridViewColumnDesignTimeVisibleAttribute","State":"open","Body":"related https://github.com/dotnet/winforms/issues/10453\r\n\r\n## Proposed changes\r\nAdd unit tests for DataGridViewColumnDesignTimeVisibleAttribute.cs to test its properties & methods\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12553)","Url":"https://github.com/dotnet/winforms/pull/12553","RelatedDescription":"Open PR \"Add code coverage for DataGridViewColumnDesignTimeVisibleAttribute\" (#12553)"},{"Id":"2697645738","IsPullRequest":false,"CreatedAt":"2024-11-27T08:41:01","Actor":"at86","Number":"12552","RawContent":null,"Title":"A parent control has WS_EX_COMPOSITED style and with a child TextBox set PlaceholderText attribut cpu stay 3~5%","State":"open","Body":"### .NET version\n\n.net8-windows \n\n\n### Did it work in .NET Framework?\n\nNot tested/verified\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\n## used in .net8-windows \n\n- when TextBox set PlaceHolder attribut cpu stay 3~5%\n- remove PlaceHolder attribute, cpu stay 0%\n\n### Steps to reproduce\n\nTextBox add or remove PlaceHolder attribut.","Url":"https://github.com/dotnet/winforms/issues/12552","RelatedDescription":"Open issue \"A parent control has WS_EX_COMPOSITED style and with a child TextBox set PlaceholderText attribut cpu stay 3~5%\" (#12552)"},{"Id":"2696994526","IsPullRequest":false,"CreatedAt":"2024-11-27T04:29:32","Actor":"Sachin-NI","Number":"12551","RawContent":null,"Title":".Net 8 upgrade is not able send WM_DESTROY message to ActiveXControl from interop assembly","State":"open","Body":"### .NET version\n\nnet8.0-windows\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n> \n\n### Issue description\n\nParent container control is not sending WM_DESTROY message to the child control while disposing the ActiveX child controls and thus our custom onDestroy method never get called.\n\nFrom my call stack, I could pin point the cause of this issue to be [this change](https://github.com/dotnet/winforms/commit/834d0a0d364c82bf70803706886ff9a40bd3e090#diff-dc17cf8f6ef4b80a13b2386597a72cd7ae36cab7375583a0a1e76a62f7f9238fL3556) by @JeremyKuhne in `DetachAndForward` Method in `AxHost.cs`.\nThe issue is that isHandleCreated need to be stored before calling `DetachWindow()` method in the `DetachAndForward` method as we were doing earlier, because `isHandleCreated` value will always get set to false after calling `DetachWindow` method so the code inside the if block will never be executed in any case.\n\nNew Code after the changes done in [this PR](https://github.com/dotnet/winforms/pull/5791):\n```C#\n// New Code\nprivate unsafe void DetachAndForward(ref Message m)\n{\n    DetachWindow();\n    if (IsHandleCreated)\n    {\n        void* wndProc = (void*)PInvoke.GetWindowLong(this, WINDOW_LONG_PTR_INDEX.GWL_WNDPROC);\n        m.ResultInternal = PInvoke.CallWindowProc(\n            (delegate* unmanaged[Stdcall]<HWND, uint, WPARAM, LPARAM, LRESULT>)wndProc,\n            HWND,\n            (uint)m.Msg,\n            m.WParamInternal,\n            m.LParamInternal);\n\n        GC.KeepAlive(this);\n    }\n}\n```\nOld Code before [this PR](https://github.com/dotnet/winforms/pull/5791):\n```c#\n// Old Code\nprivate HWND GetHandleNoCreate() => IsHandleCreated ? (HWND)Handle : default;\nprivate void DetachAndForward(ref Message m)\n{\n    IntPtr handle = GetHandleNoCreate();\n    DetachWindow();\n    if (handle != IntPtr.Zero)\n    {\n        IntPtr wndProc = User32.GetWindowLong(new HandleRef(this, handle), User32.GWL.WNDPROC);\n        m.Result = User32.CallWindowProcW(wndProc, handle, (User32.WM)m.Msg, m.WParam, m.LParam);\n    }\n}\n```\n\nAs we are going to release our product with .net 8, We need the fix to be also present in .net 8.\n\n\n### Steps to reproduce\n\n1. **Create a Parent Container Control:**\n   - Implement a parent container control that hosts ActiveX child controls.\n   - Ensure the parent control has the necessary logic to create and manage the lifecycle of the child controls.\n\n2. **Add ActiveX Child Controls:**\n   - Add one or more ActiveX child controls to the parent container.\n   - Ensure these child controls have custom `OnDestroy` methods that should be called when they are destroyed.\n\n3. **Implement Custom `OnDestroy` Method:**\n   - In the ActiveX child controls, implement a custom `OnDestroy` method that performs specific cleanup tasks.\n   - Ensure this method is mapped to the `WM_DESTROY` message using the `MESSAGE_HANDLER` macro.\n\n4. **Trigger Disposal of Child Controls:**\n   - Implement a mechanism in the parent container to dispose of the child controls. This could be triggered by a user action or a specific event in the application.\n\n5. **Observe Message Handling:**\n   - Use debugging tools or logging to observe the messages sent to the child controls during the disposal process.\n   - Specifically, check if the `WM_DESTROY` message is being sent to the child controls.\n\n6. **Verify `OnDestroy` Method Execution:**\n   - Verify whether the custom `OnDestroy` method in the child controls is being called.","Url":"https://github.com/dotnet/winforms/issues/12551","RelatedDescription":"Open issue \".Net 8 upgrade is not able send WM_DESTROY message to ActiveXControl from interop assembly\" (#12551)"},{"Id":"2688295969","IsPullRequest":false,"CreatedAt":"2024-11-27T00:20:27","Actor":"Brisingr-DE","Number":"12538","RawContent":null,"Title":"Infinite loop in System.Drawing.Graphics between IsVisible(Point) and IsVisible(int, int)","State":"closed","Body":"### .NET version\n\n.net9.0\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n.net8.0\n\n### Issue description\n\nhttps://github.com/dotnet/winforms/blob/e91e3bc158717736dc2c5d3ebfa8b6463ef88487/src/System.Drawing.Common/src/System/Drawing/Graphics.cs#L583-L585\n\n### Steps to reproduce\n\n1. Create a new WinForms-Project targetting .net9.0\n2. add the following lines in the contructor of Form1\n```c#\n        var graphis = CreateGraphics();\n        graphis.IsVisible(Point.Empty);\n``` \n3. Run the application","Url":"https://github.com/dotnet/winforms/issues/12538","RelatedDescription":"Closed issue \"Infinite loop in System.Drawing.Graphics between IsVisible(Point) and IsVisible(int, int)\" (#12538)"},{"Id":"2689783811","IsPullRequest":true,"CreatedAt":"2024-11-27T00:20:26","Actor":"Olina-Zhang","Number":"12540","RawContent":null,"Title":"Fix issue 12538: Infinite loop in System.Drawing.Graphics between IsVisible(Point) and IsVisible(int, int)","State":"closed","Body":"Fixes https://github.com/dotnet/winforms/issues/12538\r\n\r\n## Proposed changes\r\n\r\n- Remove the recursive call between` IsVisible(int, int)` and `IsVisible(Point)`. Directly convert `int `to `float` in `IsVisible(int x, int y)` and call `IsVisible(float x, float y)` API.\r\n\r\n- Add unit test to verify that all overloads of the `IsVisible` method return the same result for both points and rectangles.\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Screenshots\r\n**Before:** cannot run app with exception\r\n![image](https://github.com/user-attachments/assets/45d00bd6-53f8-48a1-b6db-1872d293f939)\r\n**After:** run app successfully\r\n![image](https://github.com/user-attachments/assets/aa45fc0b-6c06-4bdf-b0a9-4f5f47b56202)\r\n\r\n## Test methodology\r\n- Test fixing for GH issue: https://github.com/dotnet/winforms/issues/12538 manually\r\n- Unit test\r\n\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12540)","Url":"https://github.com/dotnet/winforms/pull/12540","RelatedDescription":"Closed or merged PR \"Fix issue 12538: Infinite loop in System.Drawing.Graphics between IsVisible(Point) and IsVisible(int, int)\" (#12540)"},{"Id":"2694586182","IsPullRequest":true,"CreatedAt":"2024-11-26T13:37:26","Actor":"dotnet-maestro[bot]","Number":"12549","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20241126.1\r\n- **Date Produced**: November 26, 2024 10:20:40 AM UTC\r\n- **Commit**: 354ec46a63440608bda18e2203bb5538e2f8eae6\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.IO.Hashing**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.Text.Encodings.Web**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.Text.Json**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24575.1 to 10.0.0-alpha.1.24576.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/53cc1ddeec...354ec46a63\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12549)","Url":"https://github.com/dotnet/winforms/pull/12549","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#12549)"},{"Id":"2694585363","IsPullRequest":true,"CreatedAt":"2024-11-26T13:36:57","Actor":"dotnet-maestro[bot]","Number":"12548","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20241125.1\r\n- **Date Produced**: November 25, 2024 7:23:57 PM UTC\r\n- **Commit**: 2a3bf4e3a4c473135d058adcd7193a5a4bcd38a7\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24572.3 to 10.0.0-beta.24575.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.24572.3 to 10.0.0-beta.24575.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.24572.3 to 10.0.0-beta.24575.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24572.3 to 10.0.0-beta.24575.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.24572.3 to 10.0.0-beta.24575.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.24572.3 to 10.0.0-beta.24575.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/7d955f9f47...2a3bf4e3a4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12548)","Url":"https://github.com/dotnet/winforms/pull/12548","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#12548)"},{"Id":"2693819632","IsPullRequest":false,"CreatedAt":"2024-11-26T09:08:24","Actor":"Nora-Zhou01","Number":"12547","RawContent":null,"Title":"The compiler does not flag the code as an error when missing parentheses for extension methods that embed string interpolation","State":"open","Body":"### .NET version\n\n.NET SDK 10.0.100-alpha.1.24573.1\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, it's a regression issue, it works in .NET 5.0, but does not work in .NET 6.0 and latest 10.0.\n\n### Issue description\n\nWhen miss the parentheses for an extension method that embeds string interpolation, the compiler does not flag the code as an error and the code compiles without errors\n\n**.NET 10.0 (.NET 8.0 and .NET 9.0 with the same results)**\n\n![Image](https://github.com/user-attachments/assets/22185fde-43e4-4dd7-9f72-3c7be64be8e3)\n\n**.NET 7.0 （.NET 6.0 results are the same)**\n\n![Image](https://github.com/user-attachments/assets/34c9ce72-520f-4425-bdb8-7df36929a617)\n\n**.NET 5.0**\n\n![Image](https://github.com/user-attachments/assets/9fb5eb57-94f9-4c12-8b18-190aa3c18743)\n\n\n### Steps to reproduce\n\n1. Launch the [StringInterpolationFeature.zip](https://github.com/user-attachments/files/17916664/StringInterpolationFeature.zip) project\n2. View Test.cs code\n\n**More info:**\nThe initial feedback ticket is: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/2307287","Url":"https://github.com/dotnet/winforms/issues/12547","RelatedDescription":"Open issue \"The compiler does not flag the code as an error when missing parentheses for extension methods that embed string interpolation\" (#12547)"},{"Id":"2692984940","IsPullRequest":false,"CreatedAt":"2024-11-26T03:43:00","Actor":"svg2003","Number":"12545","RawContent":null,"Title":"AssemblyLoadedContext for custom winforms designer serializer","State":"open","Body":"### Environment\n\nMSVS 17.11.6\n\n### .NET version\n\nnet8\n\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\n\nno\n\n### Issue description\n\nI'm trying to port netframework's custom designer serializer into net8. \nI've created separate project, using Microsoft.WinForms.Designer.SDK, and put serializer there, so it's instantiated by WinFormsDesigner code, but assembly is loaded into UserAssemblyLoadContext, whereas types, returned by IDesignerSerializerManager - are from Default context. \nAs the result, it's impossible to mix them together, due to even type cast would give an exception:\n\n\n[18:10:21.375488] fail: [WinFormsCustomSerializer]: Ex: System.InvalidCastException: [A]System.CodeDom.CodeStatementCollection cannot be cast to [B]System.CodeDom.CodeStatementCollection. Type A originates from 'System.CodeDom, Version=8.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' in the context 'Default' at location 'C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.11\\System.CodeDom.dll'. Type B originates from 'System.CodeDom, Version=4.0.2.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' in the context '\"UserAssemblyLoadContext\" Microsoft.DotNet.DesignTools.Services.TypeResolutionService+UserAssemblyLoadContext #0' at location 'c:\\views\\!nuget\\PackagesCache\\system.codedom\\4.6.0\\lib\\netstandard2.0\\System.CodeDom.dll'.\n\n\n[winforms-designerServerContext.zip](https://github.com/user-attachments/files/17912342/winforms-designerServerContext.zip)\n\n\n### Steps to reproduce\n\n\n\n**1. Create separate project for custom serializer, using Microsoft.WinForms.Designer.SDK:**\n\n![Image](https://github.com/user-attachments/assets/6a7e15cd-4e8d-41e5-9a13-519e55956873)\n\n**2. Add some dummy serializer there:**\n\n![Image](https://github.com/user-attachments/assets/43317e24-2cb0-46b3-a76c-3e910dbdff9e)\n\n**3. Create winforms project and add some user control there, with customer serializer:**\n\n![Image](https://github.com/user-attachments/assets/089786ae-11fe-4b71-a885-2bf10cf249f1)\n\n![Image](https://github.com/user-attachments/assets/42648194-5d0c-4a68-be2d-66ea400d4546)\n\n**4. Use that control on winforms:**\n\n![Image](https://github.com/user-attachments/assets/a05c1212-d337-4bc8-8eba-a659601af0ad)\n\n**5. Try to change control (say, size), and save it.** \nIt will give an exception in log (due to mismatched types)\n\n\n![Image](https://github.com/user-attachments/assets/2b2b1cff-bc81-41bf-ae68-8961b55e5096)\n\n![Image](https://github.com/user-attachments/assets/63c3b1cd-24b0-4d01-a4eb-e597c661c78c)\n\n\n\n**Here is how serializer is created (by WinFormsServer):**\n\n![Image](https://github.com/user-attachments/assets/3670a56e-53be-457b-a545-666e73c9c18b)\n\n\n[18:10:21.363486] fail: [WinFormsCustomSerializer]: Creating from    at System.Environment.get_StackTrace()\n[18:10:21.364486] fail: [WinFormsCustomSerializer]:    at MyDesignServer.MySerializer..ctor()\n[18:10:21.364486] fail: [WinFormsCustomSerializer]:    at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)\n[18:10:21.364486] fail: [WinFormsCustomSerializer]:    at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture)\n[18:10:21.365486] fail: [WinFormsCustomSerializer]:    at System.Activator.CreateInstance(Type type, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture)\n[18:10:21.365486] fail: [WinFormsCustomSerializer]:    at Microsoft.DotNet.DesignTools.Serialization.DesignerSerializationManager.GetSerializer(Type objectType, Type serializerType)\n[18:10:21.365486] fail: [WinFormsCustomSerializer]:    at Microsoft.DotNet.DesignTools.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type objectType, Type serializerType)\n[18:10:21.365486] fail: [WinFormsCustomSerializer]:    at Microsoft.DotNet.DesignTools.Serialization.CodeDomSerializationStore.ComponentListCodeDomSerializer.Serialize(IDesignerSerializationManager manager, IDictionary objectData, IDictionary objectState, IList shimObjectNames)\n[18:10:21.366487] fail: [WinFormsCustomSerializer]:    at Microsoft.DotNet.DesignTools.Serialization.CodeDomSerializationStore.Close()\n[18:10:21.366487] fail: [WinFormsCustomSerializer]:    at Microsoft.DotNet.DesignTools.Undo.UndoEngine.UndoUnit.ChangeUndoEvent.Serialize(UndoEngine engine, Object component, MemberDescriptor member)\n[18:10:21.366487] fail: [WinFormsCustomSerializer]:    at Microsoft.DotNet.DesignTools.Undo.UndoEngine.UndoUnit.ChangeUndoEvent..ctor(UndoEngine engine, ComponentChangingEventArgs e, Boolean serializeBeforeState)\n[18:10:21.367487] fail: [WinFormsCustomSerializer]:    at Microsoft.DotNet.DesignTools.Undo.UndoEngine.UndoUnit.ComponentChanging(ComponentChangingEventArgs e)\n[18:10:21.367487] fail: [WinFormsCustomSerializer]:    at Microsoft.DotNet.DesignTools.Undo.UndoEngine.OnComponentChanging(Object sender, ComponentChangingEventArgs e)\n[18:10:21.367487] fail: [WinFormsCustomSerializer]:    at Microsoft.DotNet.DesignTools.Host.RemoteDesignerHost.System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(Object component, MemberDescriptor member)\n[18:10:21.367487] fail: [WinFormsCustomSerializer]:    at System.ComponentModel.ReflectPropertyDescriptor.SetValue(Object component, Object value)\n[18:10:21.368487] fail: [WinFormsCustomSerializer]:    at Microsoft.DotNet.DesignTools.Designers.Behaviors.ResizeBehavior.OnMouseMove(Glyph glyph, MouseButtons button, Point adornerCoordinates)\n[18:10:21.368487] fail: [WinFormsCustomSerializer]:    at Microsoft.DotNet.DesignTools.Designers.Behaviors.BehaviorService.OnMouseMove(InputDispatchEventArgs e)\n[18:10:21.368487] fail: [WinFormsCustomSerializer]:    at Microsoft.DotNet.DesignTools.Designers.Behaviors.BehaviorService.Dispatcher.OnMouseMove(InputDispatchEventArgs e)\n[18:10:21.368487] fail: [WinFormsCustomSerializer]:    at Microsoft.DotNet.DesignTools.Protocol.Endpoints.Input.InputMessageHandler.HandleRequest(InputMessageRequest request)\n[18:10:21.369486] fail: [WinFormsCustomSerializer]:    at Microsoft.DotNet.DesignTools.Protocol.Endpoints.RequestHandler`2.Microsoft.DotNet.DesignTools.Protocol.Endpoints.IRequestHandler.HandleRequest(Request request)\n[18:10:21.369486] fail: [WinFormsCustomSerializer]:    at Microsoft.DotNet.DesignTools.Protocol.Endpoints.RequestManager.HandleRequestAsync(String name, Request request)\n[18:10:21.369486] fail: [WinFormsCustomSerializer]:    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.ExecutionContextCallback(Object s)\n[18:10:21.369486] fail: [WinFormsCustomSerializer]:    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\n[18:10:21.370487] fail: [WinFormsCustomSerializer]:    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)\n[18:10:21.370487] fail: [WinFormsCustomSerializer]:    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext()\n[18:10:21.370487] fail: [WinFormsCustomSerializer]:    at System.Windows.Forms.Control.InvokeMarshaledCallbackHelper(Object obj)\n[18:10:21.370487] fail: [WinFormsCustomSerializer]:    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\n[18:10:21.371488] fail: [WinFormsCustomSerializer]:    at System.Windows.Forms.Control.InvokeMarshaledCallbacks()\n[18:10:21.371488] fail: [WinFormsCustomSerializer]:    at System.Windows.Forms.Control.WndProc(Message& m)\n[18:10:21.371488] fail: [WinFormsCustomSerializer]:    at System.Windows.Forms.ScrollableControl.WndProc(Message& m)\n[18:10:21.372488] fail: [WinFormsCustomSerializer]:    at Microsoft.DotNet.DesignTools.Server.Window.ServerWindow.WndProc(Message& m)\n[18:10:21.372488] fail: [WinFormsCustomSerializer]:    at System.Windows.Forms.Control.ControlNativeWindow.WndProc(Message& m)\n[18:10:21.372488] fail: [WinFormsCustomSerializer]:    at System.Windows.Forms.NativeWindow.Callback(HWND hWnd, MessageId msg, WPARAM wparam, LPARAM lparam)\n[18:10:21.372488] fail: [WinFormsCustomSerializer]:    at Windows.Win32.PInvoke.DispatchMessage(MSG* lpMsg)\n[18:10:21.373488] fail: [WinFormsCustomSerializer]:    at System.Windows.Forms.Application.ComponentManager.Microsoft.Office.IMsoComponentManager.FPushMessageLoop(UIntPtr dwComponentID, msoloop uReason, Void* pvLoopData)\n[18:10:21.373488] fail: [WinFormsCustomSerializer]:    at System.Windows.Forms.Application.ThreadContext.RunMessageLoopInner(msoloop reason, ApplicationContext context)\n[18:10:21.373488] fail: [WinFormsCustomSerializer]:    at System.Windows.Forms.Application.ThreadContext.RunMessageLoop(msoloop reason, ApplicationContext context)\n[18:10:21.373488] fail: [WinFormsCustomSerializer]:    at Microsoft.DotNet.DesignTools.Server.DesignToolsServer.<>c__DisplayClass55_0.<StartUIThreadAsync>b__1()\n[18:10:21.374487] fail: [WinFormsCustomSerializer]:    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\n[18:10:21.374487] fail: [WinFormsCustomSerializer]: Serializer constructor: c:\\views\\!nuget\\PackagesCache\\system.codedom\\4.6.0\\lib\\netstandard2.0\\System.CodeDom.dll.\n[18:10:21.374487] fail: [WinFormsCustomSerializer]: Context: \"UserAssemblyLoadContext\" Microsoft.DotNet.DesignTools.Services.TypeResolutionService+UserAssemblyLoadContext #0\n\n\n\n\n\n### Diagnostics\n\n```text\n[19:42:14.170246] info: [WinFormsCustomSerializer]: TypeResolution: type = MyDesignServer.MySerializer, TimeTaken = 0 ms.\n[19:42:14.171247] fail: [WinFormsCustomSerializer]: Creating from    at System.Environment.get_StackTrace()\n[19:42:14.171247] fail: [WinFormsCustomSerializer]:    at MyDesignServer.MySerializer..ctor()\n[19:42:14.171247] fail: [WinFormsCustomSerializer]:    at System.RuntimeType.CreateInstanceDefaultCtor(Boolean publicOnly, Boolean wrapExceptions)\n[19:42:14.171247] fail: [WinFormsCustomSerializer]:    at System.RuntimeType.CreateInstanceImpl(BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture)\n[19:42:14.172250] fail: [WinFormsCustomSerializer]:    at Microsoft.DotNet.DesignTools.Serialization.DesignerSerializationManager.GetSerializer(Type objectType, Type serializerType)\n[19:42:14.172250] fail: [WinFormsCustomSerializer]:    at Microsoft.DotNet.DesignTools.Serialization.CodeDomSerializationStore.ComponentListCodeDomSerializer.Serialize(IDesignerSerializationManager manager, IDictionary objectData, IDictionary objectState, IList shimObjectNames)\n[19:42:14.172250] fail: [WinFormsCustomSerializer]:    at Microsoft.DotNet.DesignTools.Serialization.CodeDomSerializationStore.Close()\n[19:42:14.172250] fail: [WinFormsCustomSerializer]:    at Microsoft.DotNet.DesignTools.Undo.UndoEngine.UndoUnit.ChangeUndoEvent.Serialize(UndoEngine engine, Object component, MemberDescriptor member)\n[19:42:14.173249] fail: [WinFormsCustomSerializer]:    at Microsoft.DotNet.DesignTools.Undo.UndoEngine.UndoUnit.ChangeUndoEvent..ctor(UndoEngine engine, ComponentChangingEventArgs e, Boolean serializeBeforeState)\n[19:42:14.173249] fail: [WinFormsCustomSerializer]:    at Microsoft.DotNet.DesignTools.Undo.UndoEngine.UndoUnit.ComponentChanging(ComponentChangingEventArgs e)\n[19:42:14.173249] fail: [WinFormsCustomSerializer]:    at Microsoft.DotNet.DesignTools.Undo.UndoEngine.OnComponentChanging(Object sender, ComponentChangingEventArgs e)\n[19:42:14.173249] fail: [WinFormsCustomSerializer]:    at Microsoft.DotNet.DesignTools.Host.RemoteDesignerHost.System.ComponentModel.Design.IComponentChangeService.OnComponentChanging(Object component, MemberDescriptor member)\n[19:42:14.174251] fail: [WinFormsCustomSerializer]:    at System.ComponentModel.ReflectPropertyDescriptor.SetValue(Object component, Object value)\n[19:42:14.174251] fail: [WinFormsCustomSerializer]:    at Microsoft.DotNet.DesignTools.Designers.Behaviors.ResizeBehavior.OnMouseMove(Glyph glyph, MouseButtons button, Point adornerCoordinates)\n[19:42:14.174251] fail: [WinFormsCustomSerializer]:    at Microsoft.DotNet.DesignTools.Designers.Behaviors.BehaviorService.OnMouseMove(InputDispatchEventArgs e)\n[19:42:14.174251] fail: [WinFormsCustomSerializer]:    at Microsoft.DotNet.DesignTools.Protocol.Endpoints.Input.InputMessageHandler.HandleRequest(InputMessageRequest request)\n[19:42:14.175250] fail: [WinFormsCustomSerializer]:    at Microsoft.DotNet.DesignTools.Protocol.Endpoints.RequestHandler`2.Microsoft.DotNet.DesignTools.Protocol.Endpoints.IRequestHandler.HandleRequest(Request request)\n[19:42:14.175250] fail: [WinFormsCustomSerializer]:    at Microsoft.DotNet.DesignTools.Protocol.Endpoints.RequestManager.HandleRequestAsync(String name, Request request)\n[19:42:14.175250] fail: [WinFormsCustomSerializer]:    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\n[19:42:14.175250] fail: [WinFormsCustomSerializer]:    at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1.AsyncStateMachineBox`1.MoveNext(Thread threadPoolThread)\n[19:42:14.176251] fail: [WinFormsCustomSerializer]:    at System.Windows.Forms.Control.InvokeMarshaledCallbackHelper(Object obj)\n[19:42:14.176251] fail: [WinFormsCustomSerializer]:    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\n[19:42:14.176251] fail: [WinFormsCustomSerializer]:    at System.Windows.Forms.Control.InvokeMarshaledCallbacks()\n[19:42:14.176251] fail: Request failures: Input/InputMessage.\n                        Microsoft.DotNet.DesignTools.Client.DesignToolsServerException: [A]System.CodeDom.CodeStatementCollection cannot be cast to [B]System.CodeDom.CodeStatementCollection. Type A originates from 'System.CodeDom, Version=8.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' in the context 'Default' at location 'C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.11\\System.CodeDom.dll'. Type B originates from 'System.CodeDom, Version=4.0.2.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' in the context '\"UserAssemblyLoadContext\" Microsoft.DotNet.DesignTools.Services.TypeResolutionService+UserAssemblyLoadContext #0' at location 'c:\\views\\!nuget\\PackagesCache\\system.codedom\\4.6.0\\lib\\netstandard2.0\\System.CodeDom.dll'.\n\n                        For information on how to troubleshoot the designer refer to the guide at https://aka.ms/winforms/designer/troubleshooting.\n[19:42:14.176251] fail: [WinFormsCustomSerializer]:    at System.Windows.Forms.Control.WndProc(Message& m)\n[19:42:14.177251] fail: [WinFormsCustomSerializer]:    at System.Windows.Forms.Form.WndProc(Message& m)\n[19:42:14.177251] fail: [WinFormsCustomSerializer]:    at Microsoft.DotNet.DesignTools.Server.Window.ServerWindow.WndProc(Message& m)\n[19:42:14.177251] fail: [WinFormsCustomSerializer]:    at System.Windows.Forms.NativeWindow.Callback(HWND hWnd, MessageId msg, WPARAM wparam, LPARAM lparam)\n[19:42:14.178250] fail: [WinFormsCustomSerializer]:    at Windows.Win32.PInvoke.DispatchMessage(MSG* lpMsg)\n[19:42:14.178250] fail: [WinFormsCustomSerializer]:    at System.Windows.Forms.Application.ComponentManager.Microsoft.Office.IMsoComponentManager.FPushMessageLoop(UIntPtr dwComponentID, msoloop uReason, Void* pvLoopData)\n[19:42:14.178250] fail: [WinFormsCustomSerializer]:    at System.Windows.Forms.Application.ThreadContext.RunMessageLoopInner(msoloop reason, ApplicationContext context)\n[19:42:14.178250] fail: [WinFormsCustomSerializer]:    at System.Windows.Forms.Application.ThreadContext.RunMessageLoop(msoloop reason, ApplicationContext context)\n[19:42:14.179250] fail: [WinFormsCustomSerializer]:    at Microsoft.DotNet.DesignTools.Server.DesignToolsServer.<>c__DisplayClass55_0.<StartUIThreadAsync>b__1()\n[19:42:14.179250] fail: [WinFormsCustomSerializer]:    at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\n[19:42:14.179250] fail: [WinFormsCustomSerializer]: Serializer constructor: c:\\views\\!nuget\\PackagesCache\\system.codedom\\4.6.0\\lib\\netstandard2.0\\System.CodeDom.dll.\n[19:42:14.179250] fail: [WinFormsCustomSerializer]: Context: \"UserAssemblyLoadContext\" Microsoft.DotNet.DesignTools.Services.TypeResolutionService+UserAssemblyLoadContext #0\n[19:42:14.179250] info: [WinFormsCustomSerializer]: TypeResolution: type = Microsoft.DotNet.DesignTools.Serialization.CodeDomSerializationProvider, TimeTaken = 0 ms.\n[19:42:14.179250] info: [WinFormsCustomSerializer]: TypeResolution: type = Microsoft.DotNet.DesignTools.Serialization.CodeDomSerializer, TimeTaken = 0 ms.\n[19:42:14.180251] info: [WinFormsCustomSerializer]: TypeResolution: type = Microsoft.DotNet.DesignTools.Designers.ControlDesigner+DesignerControlCollectionCodeDomSerializer, TimeTaken = 0 ms.\n[19:42:14.180251] fail: [WinFormsCustomSerializer]: obj type: System.CodeDom.CodeStatementCollection (C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.11\\System.CodeDom.dll). Context: \"Default\" System.Runtime.Loader.DefaultAssemblyLoadContext #1\n[19:42:14.180251] fail: [WinFormsCustomSerializer]: serializer type: System.CodeDom.CodeStatementCollection (c:\\views\\!nuget\\PackagesCache\\system.codedom\\4.6.0\\lib\\netstandard2.0\\System.CodeDom.dll). Context: \"UserAssemblyLoadContext\" Microsoft.DotNet.DesignTools.Services.TypeResolutionService+UserAssemblyLoadContext #0\n[19:42:14.180251] fail: [WinFormsCustomSerializer]: Ex: System.InvalidCastException: [A]System.CodeDom.CodeStatementCollection cannot be cast to [B]System.CodeDom.CodeStatementCollection. Type A originates from 'System.CodeDom, Version=8.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' in the context 'Default' at location 'C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\8.0.11\\System.CodeDom.dll'. Type B originates from 'System.CodeDom, Version=4.0.2.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' in the context '\"UserAssemblyLoadContext\" Microsoft.DotNet.DesignTools.Services.TypeResolutionService+UserAssemblyLoadContext #0' at location 'c:\\views\\!nuget\\PackagesCache\\system.codedom\\4.6.0\\lib\\netstandard2.0\\System.CodeDom.dll'.\n[19:42:14.181252] fail: [WinFormsCustomSerializer]:    at MyDesignServer.MySerializer.Serialize(IDesignerSerializationManager manager, Object value)\n```","Url":"https://github.com/dotnet/winforms/issues/12545","RelatedDescription":"Open issue \"AssemblyLoadedContext for custom winforms designer serializer\" (#12545)"},{"Id":"2692046578","IsPullRequest":true,"CreatedAt":"2024-11-25T22:23:37","Actor":"Tanya-Solyanik","Number":"12544","RawContent":null,"Title":"Replaced string[] with Array as the T in TheoryData ","State":"closed","Body":"Declared string[] as an Array in order to avoid confusion as to what  the `object` is  - a single string or an array of strings in IEnumerable<object[]>\r\n\r\nVS tests fail intermittently with \"The test method expected 1 parameter, but received 2\"\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12544)","Url":"https://github.com/dotnet/winforms/pull/12544","RelatedDescription":"Closed or merged PR \"Replaced string[] with Array as the T in TheoryData \" (#12544)"},{"Id":"2685078875","IsPullRequest":true,"CreatedAt":"2024-11-25T18:19:57","Actor":"Tanya-Solyanik","Number":"12535","RawContent":null,"Title":"removed casts to interfaces by changing methods visibility to public","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12535)","Url":"https://github.com/dotnet/winforms/pull/12535","RelatedDescription":"Closed or merged PR \"removed casts to interfaces by changing methods visibility to public\" (#12535)"},{"Id":"2691710219","IsPullRequest":false,"CreatedAt":"2024-11-25T17:58:21","Actor":"KlausLoeffelmann","Number":"12543","RawContent":null,"Title":"Introduce `ControlExtensions` to simplify frequently needed iterating tasks","State":"open","Body":"### Background and motivation\n\nThere are a lot of cases, where we need to recursively traverse through the controls collection (up or down), to either process a collection of certain controls or find a specific control in the tree. This is, where the typical WinForms developer invents the wheel for their apps for the gazilion-th time.\n\nTo that end, we suggest introducing the following extension class to make those tasks super-convenient, and make sure, that we do not allocate anything during operation.\n\nNote:\nPR would be a side-product of one of the .NET Conf Demos and ready to go immediately.\n@merriemcgaw, @lonitra\n\n@JeremyKuhne: If we want to further discuss the concept of a more granular base-layout type, this API would be super-easy to adapt to that and also the perfect icing on that cake.\n\n\n### API Proposal\n\n```csharp\npublic static IEnumerable<Control> ChildControls(this Control control)\npublic static IEnumerable<T> ChildControls<T>(this Control control) where T : Control\npublic static Control FirstChild(this Control control, Func<Control, bool>? predicate = default)\npublic static T FirstChild<T>(this Control control, Func<T, bool>? predicate = default) where T : Control\npublic static T? FirstChildOrDefault<T>(this Control control, Func<T, bool>? predicate = default) where T : Control\npublic static IEnumerable<Control> AscendantControls(this Control control)\npublic static IEnumerable<T> AscendantControls<T>(this Control control, Func<Control, bool>? predicate = default) where T : Control\npublic static Control FirstAscendant(this Control control, Func<Control, bool>? predicate = default)\npublic static Control? FirstAscendantOrDefault(this Control control, Func<Control, bool>? predicate = default)\npublic static T FirstAscendant<T>(this Control control, Func<T, bool>? predicate = default) where T : Control\npublic static T? FirstAscendantOrDefault<T>(this Control control, Func<T, bool>? predicate = default) where T : Control\npublic static IEnumerable<Control> DescendantControls(this Control control)\npublic static IEnumerable<T> DescendantControls<T>(this Control control, Func<Control, bool>? predicate = default) where T : Control\npublic static Control FirstDescendant(this Control control, Func<Control, bool>? predicate = default)\npublic static T FirstDescendant<T>(this Control control, Func<T, bool>? predicate = default) where T : Control\npublic static Control? FirstDescendantOrDefault(this Control control, Func<Control, bool>? predicate = default)\npublic static T? FirstDescendantOrDefault<T>(this Control control, Func<T, bool>? predicate\npublic static Control Root(this Control control)\n```\n\n### API Usage\n\nSelf-Explaining.\n\n### Alternative Designs\n\n_No response_\n\n### Risks\n\nNone.\n\n### Will this feature affect UI controls?\n\nOnly easier usage and help with discoverability.","Url":"https://github.com/dotnet/winforms/issues/12543","RelatedDescription":"Open issue \"Introduce `ControlExtensions` to simplify frequently needed iterating tasks\" (#12543)"},{"Id":"2691525871","IsPullRequest":false,"CreatedAt":"2024-11-25T17:17:50","Actor":"kuskitkd","Number":"12542","RawContent":null,"Title":".NET Designer and NuGet packages for UI: Problems when runtime is in ExcludeAssets","State":"open","Body":"### Environment\n\nVS 17.12.0\n\n### .NET version\n\nnet8.0-windows\n\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\n\nWorked in multitarget net472;net8.0-windows\n\n### Issue description\n\nI am switching the support of our UI libraries/apps from using NETFramework 4.7.2 + NET 8 Windows to using only NET 8 Windows as part of the migration process to the latest .NET.\n\nThe UI uses third party libraries (DevExpress WinForms). To prevent copying of the DevExpress dlls to the output folder, those packages were originally configured as ExcludeAssets=runtime. This was done because the dlls end up being pulled into a different folder in the output tree through another project and this library is enhancing that one. The whole application is published later on via ClickOnce, so there cannot be duplicates anywhere on the folder published.\n\nWhen having both frameworks, the designer run as for Framework and everything was OK. When having only NET 8 Windows, the designer seems to need to consume the content of the lib folder for all DevExpress packages or the in-place designer in VisualStudio does not work. So ExcludeAssets=runtime does not work anymore. After removing that, the designer works but dlls start appearing in folders where they should not be (and causing ClickOnce issues).\n\nI tested several combinations of asset configurations, just in case the issue was with the assets, but there does not seem to be a way to have the contents in the lib folder used for the designer but not copy them out to the output folder.\n\nCombinations tested:\nIncludeAssets: (default); PrivateAssets: (default), ExcludeAssets: (default) -> Dlls copied, Designer works\nIncludeAssets: (default); PrivateAssets: (default), ExcludeAssets: runtime -> Dlls not copied, Designer does not works\nIncludeAssets: (default); PrivateAssets: runtime, ExcludeAssets: (default) -> Dlls copied, Designer works\nIncludeAssets: (default); PrivateAssets: all, ExcludeAssets: (default) -> Dlls copied, Designer works\nIncludeAssets: compile; PrivateAssets: all, ExcludeAssets: (default) -> Dlls not copied, Designer doesn't work\nIncludeAssets: compile;runtime; PrivateAssets: all, ExcludeAssets: (default) -> Dlls copied, Designer works\nIncludeAssets: compile;runtime; PrivateAssets: all, ExcludeAssets: runtime -> Dlls not copied, Designer doesn't work\n\nI asked in the NuGet repo but it was mentioned that how the packages are consumed is of no relevance to NuGet and that ExcludeAssets=runtime would prevent getting those copied to the output folder. The issue seems to be that the designer can only work with those files in the output folder. \n\nFor reference, the nupkg for the NuGet packages referenced looks as follows:\n![Image](https://github.com/user-attachments/assets/007b7adf-8cb2-44fe-835e-09dca96881a6)\n\nAnd the DesignToolsServer error:\n![Image](https://github.com/user-attachments/assets/7e4d9303-d5f1-4aff-8e80-4fd6c730d6c1)\n\n\n\n### Steps to reproduce\n\nSteps mentioned in the description.\n\n### Diagnostics\n\n```text\n\n```","Url":"https://github.com/dotnet/winforms/issues/12542","RelatedDescription":"Open issue \".NET Designer and NuGet packages for UI: Problems when runtime is in ExcludeAssets\" (#12542)"},{"Id":"2690650368","IsPullRequest":true,"CreatedAt":"2024-11-25T13:36:11","Actor":"dotnet-maestro[bot]","Number":"12541","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20241125.1\r\n- **Date Produced**: November 25, 2024 12:15:22 PM UTC\r\n- **Commit**: 53cc1ddeec661d03d65d0e2949f3486e2162d80f\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.IO.Hashing**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.Text.Encodings.Web**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.Text.Json**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24572.8 to 10.0.0-alpha.1.24575.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/f1332ab0d8...53cc1ddeec\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12541)","Url":"https://github.com/dotnet/winforms/pull/12541","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#12541)"},{"Id":"2688951919","IsPullRequest":false,"CreatedAt":"2024-11-25T03:37:59","Actor":"svg2003","Number":"12539","RawContent":null,"Title":"WinFormsDesigner does not copy PDB files into cache folder","State":"open","Body":"### Environment\n\nmsvs 17.11.6\n\n### .NET version\n\nnet8\n\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\n\nno\n\n### Issue description\n\nWhen designer copies references into cache folder, it does not copy pdb files. As the result, in case of exception in custom designer related code, there is no debug information (like line, where exception happens).\nI know the option when I can embed PDB into DLL, but this is sometimes not the option, say, when DLL is modified by obfuscator (and change PDB as well), or PDB in modified to reroute source into external source server.\n\n### Steps to reproduce\n\ncheck cache folder and there is no PDB files for copied dlls\n\n### Diagnostics\n\n```text\n\n```","Url":"https://github.com/dotnet/winforms/issues/12539","RelatedDescription":"Open issue \"WinFormsDesigner does not copy PDB files into cache folder\" (#12539)"},{"Id":"2687682896","IsPullRequest":true,"CreatedAt":"2024-11-24T13:36:36","Actor":"dotnet-maestro[bot]","Number":"12537","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20241122.3\r\n- **Date Produced**: November 22, 2024 7:08:26 PM UTC\r\n- **Commit**: 7d955f9f470465e144c76d47fd2596a0e4c02a21\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24570.4 to 10.0.0-beta.24572.3][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.24570.4 to 10.0.0-beta.24572.3][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.24570.4 to 10.0.0-beta.24572.3][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24570.4 to 10.0.0-beta.24572.3][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.24570.4 to 10.0.0-beta.24572.3][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.24570.4 to 10.0.0-beta.24572.3][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/0c8f4989db...7d955f9f47\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12537)","Url":"https://github.com/dotnet/winforms/pull/12537","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#12537)"},{"Id":"2685948191","IsPullRequest":true,"CreatedAt":"2024-11-23T13:36:07","Actor":"dotnet-maestro[bot]","Number":"12536","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20241122.8\r\n- **Date Produced**: November 23, 2024 4:02:19 AM UTC\r\n- **Commit**: f1332ab0d82ee0e21ca387cbd1c8a87c5dfa4906\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.IO.Hashing**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.Text.Encodings.Web**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.Text.Json**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24572.1 to 10.0.0-alpha.1.24572.8][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/4389f9c54d...f1332ab0d8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12536)","Url":"https://github.com/dotnet/winforms/pull/12536","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#12536)"},{"Id":"2684412885","IsPullRequest":true,"CreatedAt":"2024-11-23T01:01:59","Actor":"JeremyKuhne","Number":"12534","RawContent":null,"Title":"Finish enabling unnecessary assignment analyzer","State":"closed","Body":"Now is enabled as a warning again and will fail the command line build.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12534)","Url":"https://github.com/dotnet/winforms/pull/12534","RelatedDescription":"Closed or merged PR \"Finish enabling unnecessary assignment analyzer\" (#12534)"},{"Id":"2684301420","IsPullRequest":true,"CreatedAt":"2024-11-22T19:20:48","Actor":"dotnet-bot","Number":"12533","RawContent":null,"Title":"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 2590256","State":"open","Body":"This is the pull request automatically created by the OneLocBuild task in the build process to check-in localized files generated based upon translation source files (.lcl files) handed-back from the downstream localization pipeline. If there are issues in translations, visit https://aka.ms/icxLocBug and log bugs for fixes. The OneLocBuild wiki is https://aka.ms/onelocbuild and the localization process in general is documented at https://aka.ms/AllAboutLoc.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12533)","Url":"https://github.com/dotnet/winforms/pull/12533","RelatedDescription":"Open PR \"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 2590256\" (#12533)"},{"Id":"2684088502","IsPullRequest":true,"CreatedAt":"2024-11-22T19:05:39","Actor":"lonitra","Number":"12532","RawContent":null,"Title":"Update Templates","State":"closed","Body":"Add 10.0 templates and initial loc changes. Also removes out of support 7.0 templates\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12532)","Url":"https://github.com/dotnet/winforms/pull/12532","RelatedDescription":"Closed or merged PR \"Update Templates\" (#12532)"},{"Id":"2683119797","IsPullRequest":true,"CreatedAt":"2024-11-22T13:36:12","Actor":"dotnet-maestro[bot]","Number":"12531","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20241122.1\r\n- **Date Produced**: November 22, 2024 10:16:35 AM UTC\r\n- **Commit**: 4389f9c54d070ca5e0cf7c4931aff56fe36d667f\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.IO.Hashing**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.Text.Encodings.Web**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.Text.Json**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24570.9 to 10.0.0-alpha.1.24572.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/b66200e544...4389f9c54d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12531)","Url":"https://github.com/dotnet/winforms/pull/12531","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#12531)"},{"Id":"2682462914","IsPullRequest":false,"CreatedAt":"2024-11-22T08:56:10","Actor":"John-Qiao","Number":"12530","RawContent":null,"Title":"Non-Public members node does not show for ImageCodecInfo.GetImageEncoders() returned item in debugger","State":"open","Body":"### .NET version\n\n.NET SDK 10.0.100-alpha.1.24571.22\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, it's a regression issue, it works in .NET 8.0, but does not work in .NET 9.0 and latest 10.0.\n\n### Issue description\n\nThe **Non-Public members** node does not show in each ImageCodecInfo.GetImageEncoders() returned item.\n\n**.NET 10.0**\n![Image](https://github.com/user-attachments/assets/d8c74508-5820-447d-998e-7fac4a5c8d9d)\n\n**.NET 8.0**\n![Image](https://github.com/user-attachments/assets/b92a00d3-caf5-4e1d-90ba-179a4f8eb1a5)\n\nhttps://github.com/user-attachments/assets/a8fcabcd-c703-4557-9c12-ffddacbbb3e4\n\n\n### Steps to reproduce\n\n1. Launch the [TestApp.zip](https://github.com/user-attachments/files/17867502/TestApp.zip) project in VS and run it.\n2. Press **F10**.\n3. In debugger window, expand the ImageCodecInfo.GetImageEncoders returned item node.\n4. Observe the **Non-Public members** node in it.\n\n### More info\nThis issue occurs in **ImageCodecInfo.GetImageDecoders()** returned items too.","Url":"https://github.com/dotnet/winforms/issues/12530","RelatedDescription":"Open issue \"Non-Public members node does not show for ImageCodecInfo.GetImageEncoders() returned item in debugger\" (#12530)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-11-28T03:30:30.2776124Z","RunDurationInMilliseconds":486}