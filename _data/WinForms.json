{"Data":{"GitHub":{"Issues":[{"Id":"752993531","IsPullRequest":false,"CreatedAt":"2020-12-02T02:29:38","Actor":"ghost","Number":"4296","RawContent":null,"Title":"bug: windows form designer ContextMenuStrip can't be edited","State":"closed","Body":"* .NET Core Version: \r\n\r\n    .NET SDK (reflecting any global.json):\r\n    Version: 5.0.100\r\n    Commit: 5044b93829\r\n\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.19041\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\5.0.100\\\r\n\r\nHost (useful for support):\r\nVersion: 5.0.0\r\nCommit: cf258a14b7\r\n\r\n.NET SDKs installed:\r\n2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n5.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\nMicrosoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\nMicrosoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\nMicrosoft.AspNetCore.All 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\nMicrosoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.WindowsDesktop.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\nMicrosoft.WindowsDesktop.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n\r\nNo\r\n\r\n**Problem description:**\r\n\r\nIn windows form designer the ContextMenuStrip can't be edited.\r\n\r\n\r\n**Expected behavior:**\r\n\r\nAn editable ContextMenuStrip.\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/4296","RelatedDescription":"Closed issue \"bug: windows form designer ContextMenuStrip can't be edited\" (#4296)"},{"Id":"754846132","IsPullRequest":false,"CreatedAt":"2020-12-02T01:08:54","Actor":"RussKie","Number":"4310","RawContent":null,"Title":"The value of ListViewGroup’s TitleImageIndex cannot be saved successfully","State":"open","Body":"Duplicate of https://github.com/dotnet/winforms-designer/issues/2057\r\n\r\n## Minimal Reproduction Scenario\r\n1.\tCreate a winforms .NET 5.0 project.\r\n2.\tDrag and drop a ListView & a ImageList to Form.\r\n3.\tChoose one image to ImageList, then add this code line into Form1.designer.cs file: this.listView1.GroupImageList = this.imageList1;\r\n4.\tOpen form designer, add a ListViewGroup(Header = Group1) and a ListViewItem(Text = TextStr).\r\n5.\tSet the Group property of ListViewItem to ‘Group1’.\r\n6.\tSet the TitleImageIndex property of ListViewGroup to ‘0’.\r\n7.\tSave the project, close form designer and reopen again.\r\n\r\n<!--\r\n    How can this issue be reproduced? \r\n-->\r\n\r\n## Expected Behavior\r\nThe image that set previously should not disappear.\r\n<!--\r\n    Please indicate the behavior you expect to see.\r\n-->\r\n\r\n## Current Behavior\r\nThe image that set previously disappeared.\r\n![CodeLine](https://user-images.githubusercontent.com/18568603/86090448-af9b8d80-badc-11ea-832f-e170241e2ac9.PNG)\r\n![NotSaved](https://user-images.githubusercontent.com/18568603/86090426-a6122580-badc-11ea-85d0-46cb5082a332.gif)\r\n\r\n<!--\r\n    Please provide a description of the current buggy behavior\r\n-->\r\n\r\n<!--\r\n    If this issue related to any other issues, please indicate that relationship.\r\n-->\r\n","Url":"https://github.com/dotnet/winforms/issues/4310","RelatedDescription":"Open issue \"The value of ListViewGroup’s TitleImageIndex cannot be saved successfully\" (#4310)"},{"Id":"754706428","IsPullRequest":false,"CreatedAt":"2020-12-01T20:33:49","Actor":"weltkante","Number":"4309","RawContent":null,"Title":"Cursor static accessors not threadsafe / test flaky","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n**.NET Core Version:**\r\nmaster branch\r\n\r\n**Have you experienced this same bug with .NET Framework?:**\r\ndid not check\r\n\r\n**Problem description:**\r\nThe static accessors of the `Cursor` class are not threadsafe, if two threads attempt to access the same cursor at roughly the same time then two distinct instances of the cursor will be created.\r\n\r\nThis causes `CursorConverter_GetStandardValues_Invoke_ReturnsExpected` test to be flaky.\r\n\r\n**Expected behavior:**\r\nEither adjust the `Cursor` class to be threadsafe (using a `lock` statement or `Interlocked.CompareExchange` instead of unprotected `??=` syntax) or adjust the test in some way to not be flaky.\r\n\r\n**Minimal repro:**\r\nNot reproducable deterministcally, test is flaky and may fail.\r\n","Url":"https://github.com/dotnet/winforms/issues/4309","RelatedDescription":"Open issue \"Cursor static accessors not threadsafe / test flaky\" (#4309)"},{"Id":"754587360","IsPullRequest":false,"CreatedAt":"2020-12-01T17:29:22","Actor":"manfromarce","Number":"4308","RawContent":null,"Title":"Error when trying to create Settings file (VB.Net)","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: 3.1 or 5.0\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: No\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\nWhen I create a new .NET Core Windows Forms project in VB.NET and go to Project > Properties > Settings, Visual Studio says that the project doesn't have a default Settings file. However when I click the message to create a new Settings file I get HRESULT_EXCEPTION 0x80070002 (Unable to find specified file). This issue doesn't occur in .NET Core C# projects, nor in .NET Framework.\r\n![Screenshot (103)](https://user-images.githubusercontent.com/45036600/100774322-3e9d3080-3402-11eb-8a52-1a61224aabc4.png)\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n**Expected behavior:**\r\nWhen I click the message, I expect a new empty settings file to be created, like in .NET Framework.\r\n\r\n**Minimal repro:**\r\nI just created a blank solution and project and the error immediately displays when I go to Project > Properties > Settings and click on the link to create a new settings file. I'm using Visual Studio 16.8.2, I tried to repair my installation and change .NET Core target version but nothing changed.\r\n","Url":"https://github.com/dotnet/winforms/issues/4308","RelatedDescription":"Open issue \"Error when trying to create Settings file (VB.Net)\" (#4308)"},{"Id":"754571949","IsPullRequest":false,"CreatedAt":"2020-12-01T17:07:54","Actor":"manfromarce","Number":"4307","RawContent":null,"Title":"Edit Assembly Info button is missing","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: 3.1 / 5.0\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: No\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\nIn .NET Framework Windows Forms projects there is a button to edit application assembly information in project Properties page. This button is missing in C# .NET Core projects, while in Vb.Net .NET Core Projects is visible but disabled. I'm using Visual Studio 16.8.2 and this happens in both .NET Core 3.1 and .NET 5.0.\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n**Expected behavior:**\r\nI'd like to edit assembly information like in .NET Framework.\r\n![Immagine 2020-12-01 175534](https://user-images.githubusercontent.com/45036600/100772381-c6ce0680-33ff-11eb-87f9-2e0d4451c2bc.png)\r\n\r\n**Minimal repro:**\r\nJust create a new .NET Core project and go to Project > Properties...\r\n","Url":"https://github.com/dotnet/winforms/issues/4307","RelatedDescription":"Open issue \"Edit Assembly Info button is missing\" (#4307)"},{"Id":"754527179","IsPullRequest":false,"CreatedAt":"2020-12-01T16:09:23","Actor":"the-namelessone","Number":"4306","RawContent":null,"Title":"bug: listview column click exception","State":"open","Body":"* .NET Core Version: \r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.100\r\n Commit:    5044b93829\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19041\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0\r\n  Commit:  cf258a14b7\r\n\r\n.NET SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\n[listviewbug.zip](https://github.com/dotnet/winforms/files/5623842/listviewbug.zip)\r\n\r\n\r\nIn .NET 5.0 version see above and Visual Studio 16.8.2 the attached example program crashes and gives exception when clicking a column header. Find all source code in the zip file.\r\n\r\nThe exceptions that are thrown (randomly the one or the other):\r\n\r\nSystem.NullReferenceException: 'Object reference not set to an instance of an object.'\r\n\r\nSystem.ExecutionEngineException\r\n\r\nThose exceptions are .NET 5.0 exceptions and don't occur in  .NET Framework 4.8!\r\n\r\n\r\n**Expected behavior:**\r\n\r\nThis code works without exception in .NET Framework 4.8\r\n\r\ngreetings\r\nThe c0demast3r\r\n","Url":"https://github.com/dotnet/winforms/issues/4306","RelatedDescription":"Open issue \"bug: listview column click exception\" (#4306)"},{"Id":"754422836","IsPullRequest":false,"CreatedAt":"2020-12-01T14:05:00","Actor":"SergeySmirnov-Akvelon","Number":"4305","RawContent":null,"Title":"Some controls do not support ToolTips when the user uses the keyboard to navigate","State":"open","Body":"**Controls that have no tooltip properties:**\r\n- [X] ColorDialog\r\n- [X] FolderBrowserDialog\r\n- [X] FontDialog\r\n- [X] NotifyIcon\r\n- [X] OpenFileDialog\r\n- [X] PageSetupDialog\r\n- [X] PrintDocument\r\n- [X] PrintDialog\r\n- [X] SaeFileDialog\r\n- [X] TolStripSeparator\r\n\r\n**Controls that have a property for a tooltip, but it is not displayed when the user uses the mouse or keyboard to navigate:**\r\n- [ ] ContextMenu\r\n- [ ]  DataGridView (it is only displayed when the user hovers over a cell (for example: DataGridViewButtonCell))\r\n- [ ]  PrintPreviewDialog\r\n- [ ]  PropertyGrid\r\n\r\n**Controls that cannot be focused using the keyboard (but the tooltip is displayed when the user uses the mouse):**\r\n- [X] DataGridViewButtonColumn\r\n- [X] DataGridViewCheckBoxColumn\r\n- [X] DataGridViewComboBoxColumn\r\n- [X] DataGridViewImageColumn\r\n- [X] DataGridViewLinkColumn\r\n- [X] DataGridViewTextBoxColumn\r\n- [X] FlowLayoutPanel\r\n- [X] GroupBox\t\r\n- [X] Label\r\n- [X] MenuStrip\r\n- [X] Panel\r\n- [X] PictureBox\t\r\n- [X] ProgressBar\r\n- [X] SplitterPanel\r\n- [X] StatusStrip\r\n- [X] ToolStrip\r\n- [X] ToolStripLabel\r\n- [X] ToolStripProgressBar\r\n- [X] ToolStripStatusLabel\r\n\r\n**Controls that support tooltips when the user uses the keyboard or mouse to navigate:**\r\n- [X] BindingNavigator - buttons\r\n- [X] DataGridViewButtonCell\r\n- [X] DataGridViewCheckBoxCell\r\n- [X] DataGridViewComboBoxCell\r\n- [X] DataGridViewImageCell\r\n- [X] DataGridViewLinkCell\r\n- [X] DataGridViewTextBoxCell\r\n- [X] DateTimePicker\r\n- [X] DomainUpDown\r\n- [X] ListBox\r\n- [X] ListView\r\n- [X] MaskedTextBox\r\n- [X] MonthCalendar\r\n- [X] NumericUpDown\r\n- [X] PrintPreviewControl\r\n- [X] PrintPreviewDialog - buttons\r\n- [X] PropertyGrid - buttons\r\n- [X] RadioButton\r\n- [X] RichTextBox\r\n- [X] SplitterContainer\r\n- [X] TabControl\r\n- [X] TextBox\r\n- [X] ToolStripButton\r\n- [X] ToolStripComboBox\r\n- [X] ToolStripDropDownButton\r\n- [X] ToolStripMenuItem\r\n- [X] ToolStripSplitButton\r\n- [X] ToolStripTextBox\r\n- [X] TreeViewLinkLabel\r\n\r\n**Controls that don't support tooltips when the user uses the mouse to navigate:**\r\n- [ ]  ListViewItem\r\n- [ ]  TabPage\r\n- [ ]  TreeNode","Url":"https://github.com/dotnet/winforms/issues/4305","RelatedDescription":"Open issue \"Some controls do not support ToolTips when the user uses the keyboard to navigate\" (#4305)"},{"Id":"754106319","IsPullRequest":false,"CreatedAt":"2020-12-01T07:22:10","Actor":"Pilzinsel64","Number":"4304","RawContent":null,"Title":"Windows Forms Designer don't use given designerType in DesignerAttribute","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n5.0\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\nThe Windows Forms Designer seems to not be able to load the designer type that's given in a DesignerAttribute of any cuarom Control.\r\n\r\nThis does load the default designer:\r\n![image](https://user-images.githubusercontent.com/23138465/100709153-e2a8bc80-33ad-11eb-8ef5-e9340bb5f38a.png)\r\n\r\nThis doesn't load any designer (control acts like a component):\r\n![image](https://user-images.githubusercontent.com/23138465/100709176-eccabb00-33ad-11eb-9e91-e729298e7b9a.png)\r\n\r\nThis does load only the given baseDesignerType:\r\n![image](https://user-images.githubusercontent.com/23138465/100709211-fb18d700-33ad-11eb-9f79-ee030b59f06e.png)\r\n\r\n**Expected behavior:**\r\nThe given designerType should be used and not the baseDesignerType (like in .NET Framework) to use the extended Designer for this control.\r\n\r\n**Minimal repro:**\r\n1. Create a new project solution.\r\n2. Create two new Windows Forms projects (targeting .NET 5).\r\n3. In the second project create a custom control (or UserControl, that doesn't matter).\r\n4. Create a designer, put in some custom codes, and reference it like in the screenshots above.\r\n5. Compile the project.\r\n6. Reference the project to the first project.\r\n7. Create a new Windows Form and add your custom control from the Toolbox.\r\n8. You can now see the behavior ...\r\n\r\n**Notes**\r\n\r\nI am porting all my custom control libraries with hundreds of custom user controls and components to .Net 5 and all of them did work in .Net framework 4.8. And of all controls the designer attribute gets ignored or behaves like described above.\r\n\r\nPlease give me a feedback if this is a bug and if there is a workaround or what I can do to get my custom designer working again. Thanks!","Url":"https://github.com/dotnet/winforms/issues/4304","RelatedDescription":"Open issue \"Windows Forms Designer don't use given designerType in DesignerAttribute\" (#4304)"},{"Id":"754072076","IsPullRequest":true,"CreatedAt":"2020-12-01T06:49:16","Actor":"willibrandon","Number":"4303","RawContent":null,"Title":"Granular NumericUpDownTests (#4211)","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #4211 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Split `NumericUpDown_VisualStyles_off_BasicRendering` into 2 smaller tests that assert a single case, enabled and disabled.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- None\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Low\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Ran the rendering tests.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4303)","Url":"https://github.com/dotnet/winforms/pull/4303","RelatedDescription":"Open PR \"Granular NumericUpDownTests (#4211)\" (#4303)"},{"Id":"752011154","IsPullRequest":true,"CreatedAt":"2020-11-30T23:04:10","Actor":"gpetrou","Number":"4287","RawContent":null,"Title":"Enable nullability in LayoutUtils","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in LayoutUtils.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4287)","Url":"https://github.com/dotnet/winforms/pull/4287","RelatedDescription":"Closed or merged PR \"Enable nullability in LayoutUtils\" (#4287)"},{"Id":"751855844","IsPullRequest":true,"CreatedAt":"2020-11-30T22:59:53","Actor":"gpetrou","Number":"4285","RawContent":null,"Title":"Enable nullability in WinFormsUtils","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in WinFormsUtils.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4285)","Url":"https://github.com/dotnet/winforms/pull/4285","RelatedDescription":"Closed or merged PR \"Enable nullability in WinFormsUtils\" (#4285)"},{"Id":"752014364","IsPullRequest":true,"CreatedAt":"2020-11-30T22:55:35","Actor":"gpetrou","Number":"4288","RawContent":null,"Title":"Use 'is not null' in System.Windows.Forms Resources, ButtonInternal a…","State":"closed","Body":"…nd ComponentModel\r\n\r\nContributes to https://github.com/dotnet/winforms/issues/3459\r\n\r\n## Proposed changes\r\n\r\n- Use 'is not null' in System.Windows.Forms Resources, ButtonInternal and ComponentModel.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4288)","Url":"https://github.com/dotnet/winforms/pull/4288","RelatedDescription":"Closed or merged PR \"Use 'is not null' in System.Windows.Forms Resources, ButtonInternal a…\" (#4288)"},{"Id":"753287344","IsPullRequest":true,"CreatedAt":"2020-11-30T22:00:43","Actor":"SergeySmirnov-Akvelon","Number":"4300","RawContent":null,"Title":"Removing ignore for the \"VScrollBarAccessibleObject_Ctor_Default\" test","State":"closed","Body":"Closes #3856 \r\n\r\n## Proposed changes\r\n- Removed ignore for the \"VScrollBarAccessibleObject_Ctor_Default\" test\r\n\r\n## Customer Impact\r\n- No \r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- Unit tests \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .Net SDK 5.0.100-rc.2.20479.15\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4300)","Url":"https://github.com/dotnet/winforms/pull/4300","RelatedDescription":"Closed or merged PR \"Removing ignore for the \"VScrollBarAccessibleObject_Ctor_Default\" test\" (#4300)"},{"Id":"752680533","IsPullRequest":false,"CreatedAt":"2020-11-30T21:53:45","Actor":"ghost","Number":"4292","RawContent":null,"Title":"bug: exception when using ListViewItemSorter","State":"closed","Body":"Hi\r\n\r\nFollowing code throws an exception, while it works fine in .NET 4.8\r\nI use .NET 5.0 latest SDK and latest VS 2019 community. I'm using a WinForms application .NET 5.0\r\n\r\nWHEN: \r\nThe exception is thrown when you click the same column header the THIRD time (first and second time it works and no exception thrown).\r\n\r\nWHAT:\r\nException thrown: 'System.NullReferenceException' in System.Windows.Forms.dll\r\nObject reference not set to an instance of an object.\r\n\r\nWHERE:\r\nException thrown on code line:\r\nlistViewCardSets.ListViewItemSorter = new ListViewItemStringComparer(e.Column, listViewCardSets.Sorting);\r\n\r\n```cs\r\nclass ListViewItemStringComparer : IComparer\r\n    {\r\n        private int col;\r\n        private SortOrder order;\r\n        public ListViewItemStringComparer()\r\n        {\r\n            col = 0;\r\n            order = SortOrder.Ascending;\r\n        }\r\n\r\n        public ListViewItemStringComparer(int column, SortOrder order)\r\n        {\r\n            col = column;\r\n            this.order = order;\r\n        }\r\n\r\n        public int Compare(object x, object y)\r\n        {\r\n            int returnVal = -1;\r\n            returnVal = String.Compare(((ListViewItem)x).SubItems[col].Text,\r\n                                       ((ListViewItem)y).SubItems[col].Text);\r\n\r\n            // Determine whether the sort order is descending.\r\n            if (order == SortOrder.Descending)\r\n                // Invert the value returned by String.Compare.\r\n                returnVal *= -1;\r\n\r\n            return returnVal;\r\n        }\r\n    }\r\n```\r\n\r\n```cs\r\n        private int _sortColumnIndex = -1;\r\n        private void listViewCardSets_ColumnClick(object sender, ColumnClickEventArgs e)\r\n        {\r\n            // Determine whether the column is the same as the last column clicked.\r\n            if (e.Column != _sortColumnIndex)\r\n            {\r\n                // Set the sort column to the new column.\r\n                _sortColumnIndex = e.Column;\r\n                // Set the sort order to ascending by default.\r\n                listViewCardSets.Sorting = SortOrder.Ascending;\r\n            }\r\n            else\r\n            {\r\n                // Determine what the last sort order was and change it.\r\n                if (listViewCardSets.Sorting == SortOrder.Ascending)\r\n                    listViewCardSets.Sorting = SortOrder.Descending;\r\n                else\r\n                    listViewCardSets.Sorting = SortOrder.Ascending;\r\n            }\r\n\r\n            // Call the sort method to manually sort.\r\n            listViewCardSets.Sort();\r\n\r\n            // Set the ListViewItemSorter property to a new ListViewItemComparer object.\r\n            listViewCardSets.ListViewItemSorter = new ListViewItemStringComparer(e.Column, listViewCardSets.Sorting);\r\n        }\r\n```","Url":"https://github.com/dotnet/winforms/issues/4292","RelatedDescription":"Closed issue \"bug: exception when using ListViewItemSorter\" (#4292)"},{"Id":"753658458","IsPullRequest":false,"CreatedAt":"2020-11-30T17:19:18","Actor":"athieman","Number":"4301","RawContent":null,"Title":"ListView Sort Throws NullReferenceException or EngineExecutionException Intermittently","State":"open","Body":"* .NET Core Version:\r\n    <details>\r\n        <summary>5.0.100</summary>\r\n\r\n         OS Name:     Windows\r\n         OS Version:  10.0.17763\r\n         OS Platform: Windows\r\n         RID:         win10-x64\r\n         Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100\\\r\n\r\n         Host (useful for support):\r\n         Version: 5.0.0\r\n         Commit:  cf258a14b7\r\n\r\n         .NET SDKs installed:\r\n         5.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n         .NET runtimes installed:\r\n         Microsoft.AspNetCore.All 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n         Microsoft.AspNetCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n         Microsoft.AspNetCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n         Microsoft.AspNetCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n         Microsoft.NETCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n         Microsoft.NETCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n         Microsoft.NETCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n         Microsoft.WindowsDesktop.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n         Microsoft.WindowsDesktop.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n   </details>\r\n\r\n* Have you experienced this same bug with .NET Framework?: No\r\n \r\n* Problem Description:\r\n\r\n    When sorting a ListView by a column, a NullReferenceException or EngineExecutionException is sometimes thrown.  On my computer a ListView with 2 columns and 1,000 rows will throw an exception after being sorted about 12 times.  When the number of rows is increased to 10,000, it will throw an exception on either the first or second time the ListView is sorted.  The same problem does not occur in .NET Core 3.1.\r\n\r\n**Expected behavior:**\r\nNo exceptions should be thrown when sorting a ListView by a column when none of the subitems in the the ListView are null.\r\n\r\n**Minimal repro:**\r\nI have uploaded the small demo application to the following repository: [GitHub](https://github.com/athieman/ListView-Sorting-Bug/tree/main)\r\n\r\nIncreasing the size variable in the LoadData method makes it easier to reproduce, but with the default 1,000 items it usually throws either a NullReferenceException or EngineExecutionException after sorting one of the columns 12 times on my machine.\r\n\r\nThe issue does appear to be similar to #4264 ListView.Items.Add throws ExecutionEngineException with custom ListViewItemSorter, but because I am seeing a NullReferenceException much more often than the ExecutionEngineException I made a new Issue.","Url":"https://github.com/dotnet/winforms/issues/4301","RelatedDescription":"Open issue \"ListView Sort Throws NullReferenceException or EngineExecutionException Intermittently\" (#4301)"},{"Id":"753232919","IsPullRequest":false,"CreatedAt":"2020-11-30T07:37:00","Actor":"Zheng-Li01","Number":"4299","RawContent":null,"Title":"An error pops up when the CheckedListBox control contains duplicate items in Accessibility Insights tool","State":"open","Body":"* More info:\r\n1. This is not a regression issue, which can reproduce on .NET 6.0, 5.0, 3.1 and Framework project.\r\n2. The issue can' t reproduce on ListBox control.\r\n\r\n* .NET Core Version: \r\n.NET SDK 6.0.100-alpha.1.20574.5\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n Yes \r\n\r\n**Minimal repro:**\r\n1. Opened the attached core project.[CoreProjectTesting1.zip](https://github.com/dotnet/winforms/files/5614381/CoreProjectTesting1.zip)\r\n2. Build and run it.\r\n3. Open the Accessibility Insights tool, then focus on the list of the checkedListBox control.\r\n\r\n**Expected behavior:**\r\nNo errors pops ip.\r\n\r\n**Actual behavior:**\r\nAn error pops up in the Accessibility Insights tool that \"Focusable sibling elements must not have the same Name and LocalizedControlType\".\r\n![CoreNewIssue](https://user-images.githubusercontent.com/38325459/100580934-c95a2e80-3321-11eb-86b6-b02d722ad909.gif)","Url":"https://github.com/dotnet/winforms/issues/4299","RelatedDescription":"Open issue \"An error pops up when the CheckedListBox control contains duplicate items in Accessibility Insights tool\" (#4299)"},{"Id":"751996375","IsPullRequest":true,"CreatedAt":"2020-11-30T05:34:00","Actor":"vladimir-krestov","Number":"4286","RawContent":null,"Title":"Fixing ErrorProvider error text announcing by a screen reader","State":"closed","Body":"Fixes #2390\r\nOriginal bug: [987891](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/987891)\r\nBased on PR #2391\r\n\r\n\r\n## Proposed changes\r\n\r\n- Raise an automation notification when setting an error for a control\r\n- Don't add a tooltip announcing as in PR #2391 because it leads to Issue #2538\r\n- Add a UI test app to check an `ErrorProvider`\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- A screen reader can announce an `ErrorProvider` error text\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n- Narrator doesn't announce an error text:\r\n![image](https://user-images.githubusercontent.com/49272759/100414854-ce9e4b80-308b-11eb-97ec-316e4b8aa91e.png)\r\n\r\n\r\n### After\r\n- Narrator announces an error text when a red icon of an `ErrorProvider` appears:\r\n![Expected](https://user-images.githubusercontent.com/49272759/100414911-f392be80-308b-11eb-9c4a-28b37e00c6dc.gif)\r\n\r\n### Test app\r\n- Added `ErrorProviderTest` app to `WinformsControlsTest` project\r\n![image](https://user-images.githubusercontent.com/49272759/100415640-b5969a00-308d-11eb-99c7-9cc8444b3c5d.png)\r\n\r\n\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- UI testing\r\n- CTI\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n- Using Narrator and NVDA\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- Microsoft Windows [Version 10.0.19042.630]\r\n- .NET Version:   6.0.100-alpha.1.20554.10\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4286)","Url":"https://github.com/dotnet/winforms/pull/4286","RelatedDescription":"Closed or merged PR \"Fixing ErrorProvider error text announcing by a screen reader\" (#4286)"},{"Id":"753070501","IsPullRequest":true,"CreatedAt":"2020-11-30T01:18:45","Actor":"manuelvalenzuela","Number":"4297","RawContent":null,"Title":"TreeNodeCollection does not allow adding a TreeNode that already exists in TreeView using this[int index] setter","State":"open","Body":"Fixes #4293\r\n\r\n## Proposed changes\r\n- Setter of method this[int index] of class TreeNodeCollection should not allow adding a TreeNode that already exists in the TreeView\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4297)","Url":"https://github.com/dotnet/winforms/pull/4297","RelatedDescription":"Open PR \"TreeNodeCollection does not allow adding a TreeNode that already exists in TreeView using this[int index] setter\" (#4297)"},{"Id":"752957841","IsPullRequest":false,"CreatedAt":"2020-11-29T16:50:56","Actor":"ghost","Number":"4295","RawContent":null,"Title":"SplitContainer bar can't be moved in win forms designer","State":"open","Body":"* .NET Core Version: \r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.100\r\n Commit:    5044b93829\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19041\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0\r\n  Commit:  cf258a14b7\r\n\r\n.NET SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\nA SplitContainer has a movable bar, but in win forms designer it can't be moved.\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.splitcontainer?view=net-5.0\r\n\r\n\r\n**Expected behavior:**\r\n\r\nA movable bar\r\n","Url":"https://github.com/dotnet/winforms/issues/4295","RelatedDescription":"Open issue \"SplitContainer bar can't be moved in win forms designer\" (#4295)"},{"Id":"752947386","IsPullRequest":false,"CreatedAt":"2020-11-29T16:01:02","Actor":"ghost","Number":"4294","RawContent":null,"Title":"ToolStripStatusLabel not displaying '&' chars","State":"open","Body":"* .NET Core Version: \r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.100\r\n Commit:    5044b93829\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19041\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0\r\n  Commit:  cf258a14b7\r\n\r\n.NET SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\nIf you assign a string that contains one or more '&' chars to a ToolStripStatusLabel, the string is displayed WITHOUT any '&' chars.\r\n\r\n\r\n**Expected behavior:**\r\n\r\nFor example: \r\n\r\ntoolStripStatusLabel.Text = \"test&\";\r\n\r\nIt should display \"test&\" but instead it's displaying \"test\"\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/4294","RelatedDescription":"Open issue \"ToolStripStatusLabel not displaying '&' chars\" (#4294)"},{"Id":"752800626","IsPullRequest":false,"CreatedAt":"2020-11-29T00:40:50","Actor":"manuelvalenzuela","Number":"4293","RawContent":null,"Title":"Setter of method this[int index] of class TreeNodeCollection should not allow adding a TreeNode that already exists in the TreeView","State":"open","Body":"* .NET Core Version: \r\n.Net 5 (net5.0-windows)\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**Problem description:**\r\nSetter of method `public virtual TreeNode this[int index]` of class `TreeNodeCollection` should not allow adding a `TreeNode` that already exists in the `TreeView`, in order to be consistent with the methods: `Insert(int index, TreeNode node)` and `Add(TreeNode node)`.\r\n\r\n**Expected behavior:**\r\nIt should throw a `System.ArgumentException` with message `Cannot add or insert the item '{0}' in more than one place. You must first remove it from its current location or clone it.`\r\n\r\n**Minimal repro:**\r\n- Create a new WinForms App\r\n- Insert a TreeView on the Form.\r\n- Insert the folloing code in the Form_Load event handler.\r\n\r\n``` C#\r\nprivate void Form1_Load(object sender, EventArgs e)\r\n{\r\n    TreeNode node = new TreeNode(\"Node 1\");\r\n    treeView1.Nodes.Add(node);\r\n    treeView1.Nodes[0] = node;\r\n}\r\n```\r\nYou can see the expected behavior changing the following:\r\n``` C#\r\n// treeView1.Nodes[0] = node;\r\ntreeView1.Nodes.Insert(0, node);\r\n```\r\nor\r\n``` C#\r\n// treeView1.Nodes[0] = node;\r\ntreeView1.Nodes.Add(node);\r\n```","Url":"https://github.com/dotnet/winforms/issues/4293","RelatedDescription":"Open issue \"Setter of method this[int index] of class TreeNodeCollection should not allow adding a TreeNode that already exists in the TreeView\" (#4293)"},{"Id":"752113513","IsPullRequest":true,"CreatedAt":"2020-11-27T09:35:35","Actor":"SergeySmirnov-Akvelon","Number":"4290","RawContent":null,"Title":"Adding virtual mode validation for a double click","State":"open","Body":"Fixes #4156\r\n\r\n\r\n## Proposed changes\r\n- Added virtual mode validation for a double click\r\n\r\n## Customer Impact\r\nThe checkbox will not change its value on a double click when ListView is in virtual mode.\r\nBefore fix:\r\n![Issue-4290-beforefix](https://user-images.githubusercontent.com/23376742/100435207-af64e580-30ae-11eb-8a9c-79e17759544f.gif)\r\n\r\nAfter fix:\r\n![Issue-4290-afterfix](https://user-images.githubusercontent.com/23376742/100435241-ba1f7a80-30ae-11eb-9c4f-f1c788f0a876.gif)\r\n\r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- Manually\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .Net SDK 5.0.100-rc.2.20479.15\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4290)","Url":"https://github.com/dotnet/winforms/pull/4290","RelatedDescription":"Open PR \"Adding virtual mode validation for a double click\" (#4290)"},{"Id":"752041696","IsPullRequest":true,"CreatedAt":"2020-11-27T07:26:01","Actor":"RussKie","Number":"4289","RawContent":null,"Title":"Allow loading custom comctl32.dll","State":"open","Body":"\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n\r\n\r\n## Proposed changes\r\n\r\nProvide functionality to load a custom comctl32.dll from the application startup folder, if comctl32.dll is present in that location.\r\n\r\nThis allows loading debug and custom builds of the library.\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n![image](https://user-images.githubusercontent.com/4403806/100421914-68daaf80-30dd-11eb-9dbd-1b16299f6aa2.png)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Adding a debug version comctl32.dll to /src/System.Windows.Forms/src\r\n- Build and run WinformsControlsTest project\r\n- Observe the comctl32.dll is copied to the output folder\r\n- Run \"ListView\" example and observe debug asserts being hit in the comctl32 source\r\n- Check loaded modules in \"Modules\" window\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4289)","Url":"https://github.com/dotnet/winforms/pull/4289","RelatedDescription":"Open PR \"Allow loading custom comctl32.dll\" (#4289)"},{"Id":"750763710","IsPullRequest":true,"CreatedAt":"2020-11-26T07:47:27","Actor":"SergeySmirnov-Akvelon","Number":"4282","RawContent":null,"Title":"Adding border for focused ToolStripButton in PropertyGrid","State":"closed","Body":"Fixes #4268\r\n\r\n## Proposed changes\r\n- Added a special method for high contrast mode that draws a black and white dashed border\r\n- Added a special method for normal mode that draws a dashed border\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n**Before fix:**\r\n![100072081-c5886100-2e76-11eb-92f5-390882b13f65](https://user-images.githubusercontent.com/23376742/100229792-d51aaf00-2f35-11eb-8625-d9fd9c79bbea.png)\r\n\r\n**After fix:**\r\nNormal mode:\r\n![Issue-4282-NormalMode](https://user-images.githubusercontent.com/23376742/100229857-ecf23300-2f35-11eb-8b77-93d02c3ac487.gif)\r\nHigh Contrast 1:\r\n![Issue-4282-HC1](https://user-images.githubusercontent.com/23376742/100229952-0dba8880-2f36-11eb-9a85-3eb83b8087c7.gif)\r\n\r\nHigh Contrast 2:\r\n![Issue-4282-HC2](https://user-images.githubusercontent.com/23376742/100230189-70ac1f80-2f36-11eb-9463-28dfe1a1a5dc.gif)\r\n\r\nHigh Contrast Black:\r\n![Issue-4282-HCB](https://user-images.githubusercontent.com/23376742/100230209-786bc400-2f36-11eb-9b24-2770ccd1abb1.gif)\r\n\r\nHigh Contrast White:\r\n![Issue-4282-HCW](https://user-images.githubusercontent.com/23376742/100230230-7e61a500-2f36-11eb-88b7-81bbd8788eba.gif)\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- Manually \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .NET Core 5.0.100-rc.1.20420.14\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4282)","Url":"https://github.com/dotnet/winforms/pull/4282","RelatedDescription":"Closed or merged PR \"Adding border for focused ToolStripButton in PropertyGrid\" (#4282)"},{"Id":"751231475","IsPullRequest":false,"CreatedAt":"2020-11-26T02:25:56","Actor":"vsfeedback","Number":"4284","RawContent":null,"Title":"VS crashes by resizing DataGridview scrollbars in inheritance when making them permanently visible","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/VS-crashes-by-resizing-DataGridview-scro/1263854?preview=true)._\n\n---\n[severity:It's more difficult to complete my work]\nHello,\nas described and confirmed by an other community member (Timon Yang) VS 2019 crashes when you try to make the vertical and horizontal scrollbar permanently visible independant from the rows and column count. \n\n**Report by Timon Yang:**\nIf I make any changes to it and then run the project, Visual Studio will definitely crash, but after opening Visual Studio again, it won’t crash anymore.\n\nIt is always impossible to operate it in the designer, whether it is moving or deleting, but as long as the relevant code of the horizontal scroll bar is commented, it can be operated normally.\nThis is not a solution to this problem, but a solution for the current situation where this control cannot be operated in the designer.\n\n\n**Link and Code:**\n[https://social.msdn.microsoft.com/Forums/windows/en-US/f91fe749-72d6-4ccc-a41c-0208faddac61/show-always-horizontal-and-vertical-scrollbar-in-a-datagridview?forum=csharpgeneral&prof=required]()\n\n```\n class MyDatagridview : DataGridView\n    {\n        public MyDatagridview()\n        {\n            VerticalScrollBar.Visible = true;\n            HorizontalScrollBar.Visible = true;\n\n            HorizontalScrollBar.VisibleChanged += HorizontalScrollBar_VisibleChanged;\n            VerticalScrollBar.VisibleChanged += VerticalScrollBar_VisibleChanged;\n\n        }\n\n        private void VerticalScrollBar_VisibleChanged(object sender, EventArgs e)\n        {\n            if (!VerticalScrollBar.Visible)\n            {\n                int width = VerticalScrollBar.Width;\n                VerticalScrollBar.Location = new Point(ClientRectangle.Width - width - 1, 1);\n                VerticalScrollBar.Size = new Size(width, ClientRectangle.Height-2);\n                VerticalScrollBar.Show();\n            }\n        }\n\n        private void HorizontalScrollBar_VisibleChanged(object sender, EventArgs e)\n        {\n            if (!HorizontalScrollBar.Visible)\n            {\n                int height = HorizontalScrollBar.Height;\n                HorizontalScrollBar.Location = new Point(1, ClientRectangle.Height - height );\n                HorizontalScrollBar.Size = new Size(ClientRectangle.Width - 2-17,height);\n                HorizontalScrollBar.Show();\n            }\n        }\n    }\n```\n\n---\n### Original Comments\n\n#### Feedback Bot on 11/23/2020, 11:14 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Zheng Li [MSFT] on 11/24/2020, 05:20 PM: \n\n<p>Dear customer, thanks for your feedback.</p>\n<p>The issue can reproduce on side based on your description, want to confirm with you, did you have the same experience than before?</p>\n<p>In addition, the Visual Studio crashed when re-size the DGV or try to delete/Cut it, if these matched your points? and the  issue also can reproduce on .NET Core project.<br>\n<img src=\"https://aka.ms/dc/image?name=B870741ade6d24d0fa413786f5c2d7929637418077160801744_FeedBackRepro1.gif&amp;tid=870741ade6d24d0fa413786f5c2d7929637418077160801744\" alt=\"FeedBackRepro1.gif\"><br>\n<img src=\"https://aka.ms/dc/image?name=B78fffb2bdd59470b949951bb290d0fcd637418077340278881_FeedBackRepro2.gif&amp;tid=78fffb2bdd59470b949951bb290d0fcd637418077340278881\" alt=\"FeedBackRepro2.gif\"></p>\n<p><img src=\"https://aka.ms/dc/image?name=B283e85fb87eb48c7a9a0a3c09b23aacc637418077458786075_FeedBackRepro3.gif&amp;tid=283e85fb87eb48c7a9a0a3c09b23aacc637418077458786075\" alt=\"FeedBackRepro3.gif\"></p>\n<p><a target='_blank' href=\"https://aka.ms/dc/file?name=Ba3984f57450e4ccea36a7461685f99cb637418077646832590_FeedBack1.zip&amp;tid=a3984f57450e4ccea36a7461685f99cb637418077646832590\">FeedBack1.zip</a></p>\n<p>Thanks<br>\nZheng</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/winforms/issues/4284","RelatedDescription":"Open issue \"VS crashes by resizing DataGridview scrollbars in inheritance when making them permanently visible\" (#4284)"},{"Id":"750684367","IsPullRequest":true,"CreatedAt":"2020-11-25T23:17:52","Actor":"RussKie","Number":"4281","RawContent":null,"Title":"fix: Prevent GC'on of native callback","State":"closed","Body":"\r\nFixes #4264\r\n\r\n(cherry picked from commit 9b140c0952647840d8f1b6984a812c548b002738)\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n## Proposed changes\r\n\r\nThe native callback can be garbage collected even in a simple app, which leads to an app crash with ExecutionEngineException.\r\nThe issue can be observed even in an app as simple as:\r\n```cs\r\nnamespace repro_listview\r\n{\r\n    static class Program\r\n    {\r\n        [STAThread]\r\n        static void Main()\r\n        {\r\n            Application.SetHighDpiMode(HighDpiMode.SystemAware);\r\n            Application.EnableVisualStyles();\r\n            Application.SetCompatibleTextRenderingDefault(false);\r\n\r\n            var f = new Form();\r\n            var listView = new ListView();\r\n\r\n            f.Controls.Add(listView);\r\n\r\n            listView.Items.Add(\"A\");\r\n            listView.Items.Add(\"Z\");\r\n            listView.Items.Add(\"X\");\r\n            listView.ListViewItemSorter = new TestComparer();\r\n\r\n            Application.Run(f);\r\n        }\r\n\r\n        class TestComparer : Comparer<ListViewItem>\r\n        {\r\n            public override int Compare(ListViewItem x, ListViewItem y)\r\n            {\r\n                GC.Collect();\r\n                Thread.Sleep(10);\r\n                return 0;\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Interacting with a `ListView` with sort enabled won't be crashing an app due to a GC'ed native callback.\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- manual, by replacing binaries in C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\6.0.0-alpha.1.20570.2\r\n- no automation test could be devised as the problem couldn't be reproduced from the Windows Forms codebase, either 5.0 or 6.0 branches\r\n\r\n\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4280)\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4281)","Url":"https://github.com/dotnet/winforms/pull/4281","RelatedDescription":"Closed or merged PR \"fix: Prevent GC'on of native callback\" (#4281)"},{"Id":"750790908","IsPullRequest":false,"CreatedAt":"2020-11-25T12:50:59","Actor":"kirsan31","Number":"4283","RawContent":null,"Title":"MonthCalendar: UpdateBoldedDates flickers and resets DisplayRange","State":"open","Body":"* .NET Core Version: **all**\r\n\r\n* Have you experienced this same bug with .NET Framework?: **yes**\r\n\r\n**Problem description:**\r\nAfter you changed BoldedDates in MonthCalendar you need to call `UpdateBoldedDates` method to see visual changes. The problem is that [UpdateBoldedDates](https://github.com/dotnet/winforms/blob/6391b524dd64e7530eba986c6607bf129b3ec8ae/src/System.Windows.Forms/src/System/Windows/Forms/MonthCalendar.cs#L1967) simple calling `RecreateHandle`. That's leads to 2 problems:\r\n1. Control fully redrawing with heavy flickering.\r\n2. If `MonthCalendar` displaying more than one months, you are not on the first page and selected date not in the last month, than  control will scroll one page back - reset current DisplayRange.\r\n![MonthCalendar](https://user-images.githubusercontent.com/17767561/100223926-2f634200-2f2d-11eb-8d06-062265b5c5a7.gif)\r\n\r\nI think that the **1** problem appear due to not using `MCM_SETDAYSTATE`. Only `MCN_GETDAYSTATE` is using, so you need full redraw to process all dates. \r\n**2** problem appear due to that [OnHandleCreated](https://github.com/dotnet/winforms/blob/6391b524dd64e7530eba986c6607bf129b3ec8ae/src/System.Windows.Forms/src/System/Windows/Forms/MonthCalendar.cs#L1386)  not care at all of  DisplayRange (only `SelectionRange` is taken into account).\r\nIt can be workaround in user code with something like this:\r\n```cs\r\nmonthCalendar1.SuspendLayout();\r\nvar v = monthCalendar1.GetDisplayRange(true);\r\nvar MinDate = monthCalendar1.MinDate;\r\nvar MaxDate = monthCalendar1.MaxDate;\r\nmonthCalendar1.MinDate = v.Start;\r\nmonthCalendar1.MaxDate = v.End;\r\nmonthCalendar1.UpdateBoldedDates();\r\nmonthCalendar1.MinDate = MinDate;\r\nmonthCalendar1.MaxDate = MaxDate;\r\nmonthCalendar1.ResumeLayout();\r\n```\r\nSomething similar can be added to `OnHandleCreated`. But I think that most efficient way is to solve **1** issue  - use `MCM_SETDAYSTATE`  with all changes to `BoldedDates` (`AnnuallyBoldedDates`, `BoldedDates`, `MonthlyBoldedDates`, `UpdateBoldedDates`). Then **2** will be solve _automatically_.\r\n\r\n**Expected behavior:**\r\nNo flickering and no DisplayRange reset.\r\n\r\n\r\n**Minimal repro:**\r\n[MonthCalendar.zip](https://github.com/dotnet/winforms/files/5596679/MonthCalendar.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/4283","RelatedDescription":"Open issue \"MonthCalendar: UpdateBoldedDates flickers and resets DisplayRange\" (#4283)"},{"Id":"750551986","IsPullRequest":true,"CreatedAt":"2020-11-25T09:52:03","Actor":"RussKie","Number":"4280","RawContent":null,"Title":"fix: Prevent GC'on of native callback","State":"closed","Body":"\r\n\r\nFixes #4264\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n## Proposed changes\r\n\r\nThe native callback can be garbage collected even in a simple app, which leads to an app crash with ExecutionEngineException.\r\nThe issue can be observed even in an app as simple as:\r\n```cs\r\nnamespace repro_listview\r\n{\r\n    static class Program\r\n    {\r\n        [STAThread]\r\n        static void Main()\r\n        {\r\n            Application.SetHighDpiMode(HighDpiMode.SystemAware);\r\n            Application.EnableVisualStyles();\r\n            Application.SetCompatibleTextRenderingDefault(false);\r\n\r\n            var f = new Form();\r\n            var listView = new ListView();\r\n\r\n            f.Controls.Add(listView);\r\n\r\n            listView.Items.Add(\"A\");\r\n            listView.Items.Add(\"Z\");\r\n            listView.Items.Add(\"X\");\r\n            listView.ListViewItemSorter = new TestComparer();\r\n\r\n            Application.Run(f);\r\n        }\r\n\r\n        class TestComparer : Comparer<ListViewItem>\r\n        {\r\n            public override int Compare(ListViewItem x, ListViewItem y)\r\n            {\r\n                GC.Collect();\r\n                Thread.Sleep(10);\r\n                return 0;\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Interacting with a `ListView` with sort enabled won't be crashing an app due to a GC'ed native callback.\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- manual, by replacing binaries in C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\6.0.0-alpha.1.20570.2\r\n- no automation test could be devised as the problem couldn't be reproduced from the Windows Forms codebase, either 5.0 or 6.0 branches\r\n\r\n\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4280)","Url":"https://github.com/dotnet/winforms/pull/4280","RelatedDescription":"Closed or merged PR \"fix: Prevent GC'on of native callback\" (#4280)"},{"Id":"750460362","IsPullRequest":false,"CreatedAt":"2020-11-25T05:24:40","Actor":"paul1956","Number":"4279","RawContent":null,"Title":"SplashScreen form not shown unless Startup Form set to Sub Main","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\nMicrosoft.WindowsDesktop.App 5.0.0\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\nIn Framework SplashScreen is shown if one is defined in project file and Project Startup object is set to Form1. In Core the splash screen is only shown if Startup object is set to Sub Main\r\n\r\n**Expected behavior:**\r\nSplashScreen is shown if Startup object is set to Form1\r\n\r\n**Minimal repro:**\r\nhttps://github.com/paul1956/WinForms5VBSample\r\n","Url":"https://github.com/dotnet/winforms/issues/4279","RelatedDescription":"Open issue \"SplashScreen form not shown unless Startup Form set to Sub Main\" (#4279)"},{"Id":"753178147","IsPullRequest":false,"CreatedAt":"2020-11-23T20:11:53","Actor":"Possibility454","Number":"4298","RawContent":null,"Title":"error BC30456: 'Form1' is not a member of 'WinFormsApp'","State":"open","Body":"# Issue Title\r\n\r\nWhen changing the projects startup object to a form that isnt Form1, you get this error:\r\nerror BC30456: 'Form1' is not a member of 'WinFormsApp'\r\n\r\n# General\r\n\r\nCreate a project, such as VB WinForms Application with .Net 5. Rename the default Form1 to something else such as FormMain. Change the startup object to FormMain. Try running the application, you get the error. The auto-generated code keeps trying to use Form1 even though it no longer exists in the application.\r\n![Net 5 0 error](https://user-images.githubusercontent.com/16438153/100010362-c5fcfb00-2d95-11eb-8d6a-90ade9deec2a.png)\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/4298","RelatedDescription":"Open issue \"error BC30456: 'Form1' is not a member of 'WinFormsApp'\" (#4298)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-12-02T05:30:49.6233505Z","RunDurationInMilliseconds":800}