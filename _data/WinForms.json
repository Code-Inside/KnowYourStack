{"Data":{"GitHub":{"Issues":[{"Id":"3268261063","IsPullRequest":true,"CreatedAt":"2025-08-01T21:46:49","Actor":"Zheng-Li01","Number":"13745","RawContent":null,"Title":"Add code coverage for ButtonRenderer","State":"closed","Body":"Related https://github.com/dotnet/winforms/issues/13442\r\n\r\n## Proposed changes\r\nAdd unit test file:ButtonRendererTests.cs for public/protected methods/properties of the ButtonRenderer.cs\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13745)","Url":"https://github.com/dotnet/winforms/pull/13745","RelatedDescription":"Closed or merged PR \"Add code coverage for ButtonRenderer\" (#13745)"},{"Id":"3272277749","IsPullRequest":true,"CreatedAt":"2025-08-01T21:45:34","Actor":"Zheng-Li01","Number":"13751","RawContent":null,"Title":"Add code coverage for CheckBoxFlatAdapter","State":"closed","Body":"Related https://github.com/dotnet/winforms/issues/13442\r\n\r\n## Proposed changes\r\nAdd unit test file:CheckBoxFlatAdapterTests.cs for public/protected methods/properties of the CheckBoxFlatAdapter.cs\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13751)","Url":"https://github.com/dotnet/winforms/pull/13751","RelatedDescription":"Closed or merged PR \"Add code coverage for CheckBoxFlatAdapter\" (#13751)"},{"Id":"3272287463","IsPullRequest":true,"CreatedAt":"2025-08-01T21:44:36","Actor":"Zheng-Li01","Number":"13752","RawContent":null,"Title":"Add code coverage for CheckBoxBaseAdapter","State":"closed","Body":"Related https://github.com/dotnet/winforms/issues/13442\r\n\r\n## Proposed changes\r\nAdd unit test file:CheckBoxBaseAdapterTests.cs for public/protected methods/properties of the CheckBoxBaseAdapter.cs\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13752)","Url":"https://github.com/dotnet/winforms/pull/13752","RelatedDescription":"Closed or merged PR \"Add code coverage for CheckBoxBaseAdapter\" (#13752)"},{"Id":"3285038771","IsPullRequest":true,"CreatedAt":"2025-08-01T20:21:20","Actor":"dotnet-maestro[bot]","Number":"13772","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"open","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250801.3](https://dev.azure.com/dnceng/internal/_build/results?buildId=2762746)\n- **Date Produced**: August 1, 2025 7:18:38 PM UTC\n- **Commit**: [8b29a1682219da555ee27e4fdda55dc3884b316f](https://github.com/dotnet/dotnet/commit/8b29a1682219da555ee27e4fdda55dc3884b316f)\n- **Commit Diff**: [6a953e7...8b29a16](https://github.com/dotnet/dotnet/compare/6a953e76162f3f079405f80e28664fa51b136740...8b29a1682219da555ee27e4fdda55dc3884b316f)\n- **Branch**: [main](https://github.com/dotnet/dotnet/tree/main)\n\n**Updated Dependencies**\n- From [10.0.0-beta.25377.103 to 10.0.0-beta.25401.103][1]\n  - Microsoft.DotNet.Arcade.Sdk\n  - Microsoft.DotNet.CMake.Sdk\n  - Microsoft.DotNet.GenFacades\n  - Microsoft.DotNet.Helix.Sdk\n  - Microsoft.DotNet.RemoteExecutor\n  - Microsoft.DotNet.XUnitV3Extensions\n- From [10.0.0-preview.7.25377.103 to 10.0.0-rc.1.25401.103][1]\n  - Microsoft.NET.Sdk.IL\n  - Microsoft.NETCore.App.Ref\n  - Microsoft.NETCore.ILAsm\n  - Microsoft.NETCore.ILDAsm\n  - Microsoft.NETCore.Platforms\n  - Microsoft.Win32.SystemEvents\n  - runtime.win-x64.Microsoft.NETCore.ILAsm\n  - runtime.win-x86.Microsoft.NETCore.ILAsm\n  - System.CodeDom\n  - System.Configuration.ConfigurationManager\n  - System.Formats.Nrbf\n  - System.IO.Hashing\n  - System.Reflection.MetadataLoadContext\n  - System.Resources.Extensions\n  - System.Runtime.Serialization.Formatters\n  - System.Text.Encodings.Web\n  - System.Text.Json\n  - System.Windows.Extensions\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/6a953e7616...8b29a16822\n[marker]: <> (Start:Footer:CodeFlow PR)\n\n## Associated changes in source repos\n- https://github.com/dotnet/arcade/compare/0fbc9e8711fa91e68c2bf3db376fb83b46f4ac35...8df06d38fb9183c3fdff5077b670eb35f0cb3f31\n- https://github.com/dotnet/aspnetcore/compare/c40d32ed99f3fae965ac81a257e3cf3889601754...52ae1ca5f49b48a34b16c4b68e8e11c117e57cba\n- https://github.com/dotnet/command-line-api/compare/3a3e014313d2c1bddc01b4333886783a7492c652...1f2adb879324452ff2403b6b9d3f49825eb2bebc\n- https://github.com/dotnet/deployment-tools/compare/0fe2f4d151b9412a87be13caac8ba1bfaba0d148...e14aee339ef2bdf7dd1fe7f7aeead32a534f4746\n- https://github.com/dotnet/diagnostics/compare/24de8bfbfd5795acd1dde863ed8172d538a9f585...058c2fef083bc427b23e74752acaf3b436fcddda\n- https://github.com/dotnet/efcore/compare/cb3e343b2ca25dbf34f9b6d9f2544cdae73f7481...d48457ecc786e7d8b7b00cc8b62c77650624348d\n- https://github.com/dotnet/emsdk/compare/d65eb5b36511b6422cbad6e2e140a86831a004d2...b7028483caf8304909c9f3ee17a8f5b3c685f5bc\n- https://github.com/dotnet/fsharp/compare/53929f2e01281a614a15033dfaae6fb6d00bb543...82e4f15ad25987f3cdeb46f03a94f47a34d48ce0\n- https://github.com/dotnet/msbuild/compare/1f60126fb517e342dd563e50bb3cb52f8109f837...3427ef4b39861b0e0129713e731e9440a8426ea3\n- https://github.com/dotnet/razor/compare/2c9fd5dcffadd0271ffe9e6f14caa09c8a2f2d6a...1c424f932c378581d4e8664faeff71a3557e11e5\n- https://github.com/dotnet/roslyn/compare/fadd60c39d63743cdaeacd2c3f8aa003f5bb7f58...0be066d0e9ebcd01598f0c6c3d2328d07ed0822c\n- https://github.com/dotnet/runtime/compare/69eea4da555abc7ba68cb1f6ae86bfdf888dcc6e...e58b3453014366d3a9bf36db3c8a8a53faad2026\n- https://github.com/dotnet/sdk/compare/049672a7df90f87cfead427665edc37c37c22ed1...d4e9bbcbe1f5ab6e4f53246d7a7bc892624453dc\n- https://github.com/dotnet/source-build-reference-packages/compare/858616f3ac5075ff97c49b7f3e676c886f160652...9983f7e81995ad689b7f31969c7dbbde6d824e86\n- https://github.com/dotnet/sourcelink/compare/cf5eeea97946757af8514d40448630d0a420c17b...34093320251efce9d7e74ee87903e8c72b6b303f\n- https://github.com/microsoft/vstest/compare/dbcd471883202088496ab81d3ec2d3f3be0981b5...5b4ee0358000536dd4fb878394a61e01080984ea\n- https://github.com/dotnet/windowsdesktop/compare/41346681fafc7b7ab31239a77aba00d7c3e71be5...bca9d0332260245ae5a67c2d4c39b6fcc0ba45ec\n- https://github.com/dotnet/wpf/compare/390c57065309a5b4ec1075894f5fcecab472aa62...4bd646467b69e97898fd126772d9dcdb8b1ed314\n\n[marker]: <> (End:Footer:CodeFlow PR)\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13772)","Url":"https://github.com/dotnet/winforms/pull/13772","RelatedDescription":"Open PR \"[main] Source code updates from dotnet/dotnet\" (#13772)"},{"Id":"3283217979","IsPullRequest":true,"CreatedAt":"2025-08-01T09:30:10","Actor":"LeafShi1","Number":"13771","RawContent":null,"Title":"Add judgement \"IsDarkModeEnabled\" for FocusForeColor of the CheckedListBox and PropertyGrid","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #13767\r\n\r\n\r\n## Proposed changes\r\n\r\n- Add judgement `IsDarkModeEnabled` for ` FocusForeColor` of the **CheckedListBox** and **PropertyGrid**\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n-  The selected item of the control **CheckedListBox** and **PropertyGrid** can be show clearly under DarkMode\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nWhen the application is in Dark Mode, the contrast of focusing items in CheckedListBox/PropertyGrid is insufficient.\r\n\r\n<img width=\"1752\" height=\"1214\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e840cba0-58d4-4738-9d40-dd9405f516fd\" />\r\n\r\n### After\r\n\r\nThe contrast of focusing items in CheckedListBox/PropertyGrid is sufficient\r\n\r\n<img width=\"1739\" height=\"1288\" alt=\"image\" src=\"https://github.com/user-attachments/assets/92450a56-c4d6-4998-b803-360a6d28dd2e\" />\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manually\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .net 10.0.0-preview.7.25373.104\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13771)","Url":"https://github.com/dotnet/winforms/pull/13771","RelatedDescription":"Open PR \"Add judgement \"IsDarkModeEnabled\" for FocusForeColor of the CheckedListBox and PropertyGrid\" (#13771)"},{"Id":"3283039541","IsPullRequest":true,"CreatedAt":"2025-08-01T08:25:56","Actor":"Epica3055","Number":"13770","RawContent":null,"Title":"Add DesignerAPI Analyzer","State":"open","Body":"\r\nRelated #13763\r\n\r\n## Background\r\n\r\nSome developers may still use .net framework winform api to do designer work. But we have changed it into a new model. They may not aware of if. So they usually couldn't get what they want because they don't use new API.\r\n\r\nSo I think it might be a good idea to add an Analyzer to give it a prompt to recommend the user to use new API.\r\n\r\n<img width=\"952\" height=\"236\" alt=\"image\" src=\"https://github.com/user-attachments/assets/a8df497e-aa61-4f19-be70-1753ac504ad3\" />\r\n\r\n## Note\r\n\r\nThis is not a refined PR.  So please see if it is a good idea. If so, you can give me some advice and I will continue to work on it. If not,I will consider to close it. 🫤\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13770)","Url":"https://github.com/dotnet/winforms/pull/13770","RelatedDescription":"Open PR \"Add DesignerAPI Analyzer\" (#13770)"},{"Id":"3268504025","IsPullRequest":true,"CreatedAt":"2025-08-01T07:20:45","Actor":"Olina-Zhang","Number":"13746","RawContent":null,"Title":"Add unit test for NumericUpDownAccelerationCollection file","State":"closed","Body":"Add unit test file: NumericUpDownAccelerationCollectionTests.cs for NumericUpDownAccelerationCollection.cs file\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/13746","RelatedDescription":"Closed or merged PR \"Add unit test for NumericUpDownAccelerationCollection file\" (#13746)"},{"Id":"3267711278","IsPullRequest":true,"CreatedAt":"2025-08-01T05:45:38","Actor":"Zheng-Li01","Number":"13743","RawContent":null,"Title":"Add code coverage for ButtonFlatAdapter","State":"closed","Body":"Related https://github.com/dotnet/winforms/issues/13442\r\n\r\n## Proposed changes\r\nAdd unit test file:ButtonFlatAdapterTests.cs for public/protected methods/properties of theButtonFlatAdapter.cs\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13743)","Url":"https://github.com/dotnet/winforms/pull/13743","RelatedDescription":"Closed or merged PR \"Add code coverage for ButtonFlatAdapter\" (#13743)"},{"Id":"3282094169","IsPullRequest":false,"CreatedAt":"2025-08-01T00:38:21","Actor":"phuongdoan13","Number":"13769","RawContent":null,"Title":"System.Windows.Forms.WebBrowser memory leak issue","State":"open","Body":"### .NET version\n\nWe are migrating our software from .NET framework 4.8 to .NET core 8.0\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, it works in .NET 7\n\n### Issue description\n\nI suspect that the `System.Windows.Forms.WebBrowser` has a memory leak issue in .NET 8.0 and 9.0.\n\nPlease see the repro code in `Step to reproduce` section.\n\n### Context\nOur team is trying to migrate our software from .NET framework 4.8.1 into .NET core 8.0.\nWe have a class called `ZWebBrowser : WebBrowser`. Any test that deals with this class, even just create this object alone, will fail. `ZWebBrowser` only add extra keys handlers, so I don't think it causes the un-GC issue above. \n\nWe know that `WebBrowser` is advised against, however, due to resources issue, we cannot abandon it.\n\nHere is the memory profiler result on .NET core 8, showing that the inner class `WebBrowserSite` and `WebBrowserEvent` have (strong) [RefCounted handle](https://www.jetbrains.com/help/dotmemory/Analyzing_GC_Roots.html#refcounted-handle) root, which does not let them get garbage collected. In .NET framework 4.8, these roots are [Weak, RefCounted handle](https://www.jetbrains.com/help/dotmemory/Analyzing_GC_Roots.html#weak-handle)\n\n<img width=\"1510\" height=\"1419\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/dc32d398-b18f-4dcb-bdf5-9acfcb994da0\" />\n\n\n### Steps to reproduce\n\n\nBased on the test below, the wrapped `WebBrowser` object is garbage collected:\n- NOT successfully in .NET Core 8.0 and 9.0\n- successfully in .NET Core 7.0 + .NET Framework 4.8.1\n\n```csharp\n\nusing System.Runtime.CompilerServices;\n\n\nnamespace WinFormsTest\n{\n    public static class WebBrowserTests\n    {\n        public static void TestRunLeak()\n        {\n            var browserWeakRef = CreateWebBrowser();\n\n            GC.Collect();\n            GC.WaitForPendingFinalizers();\n            GC.Collect();\n           \n            var isBrowserGC = !browserWeakRef.IsAlive;\n\n            // NET CORE 8.0+: isBrowserGC is false;\n            // NET CORE 7.0: isBrowserGC is true;\n            // NET Framework 4.8: isBrowserGC is true;\n        }\n\n        [MethodImpl(MethodImplOptions.NoInlining)]\n        static WeakReference CreateWebBrowser()\n        {\n            using (var browser = new System.Windows.Forms.WebBrowser())\n            {\n                browser.Navigate(\"about:blank\");\n                return new WeakReference(browser);\n            }\n        }\n    }\n}\n```\n### Extra\nWhen diffing the .NET 7.0 and 8.0 source code, this code looks suspicious\nhttps://github.com/dotnet/winforms/blob/e9badd948720225f73defcafa0bccac3011b3256/src/System.Windows.Forms/src/System/Windows/Forms/WebBrowserBase.cs#L690C43-L690C54\n","Url":"https://github.com/dotnet/winforms/issues/13769","RelatedDescription":"Open issue \"System.Windows.Forms.WebBrowser memory leak issue\" (#13769)"},{"Id":"3279859310","IsPullRequest":true,"CreatedAt":"2025-07-31T10:05:34","Actor":"LeafShi1","Number":"13768","RawContent":null,"Title":"Skip unstable test ListView_Click_On_Second_Column_Does_Not_Alter_CheckBoxesAsync","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #13291 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Disable unstable case `ListView_Click_On_Second_Column_Does_Not_Alter_CheckBoxesAsync`\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13768)","Url":"https://github.com/dotnet/winforms/pull/13768","RelatedDescription":"Open PR \"Skip unstable test ListView_Click_On_Second_Column_Does_Not_Alter_CheckBoxesAsync\" (#13768)"},{"Id":"3279666299","IsPullRequest":false,"CreatedAt":"2025-07-31T08:58:38","Actor":"Olina-Zhang","Number":"13767","RawContent":null,"Title":"Dark Mode: Insufficient contrast for focusing items in CheckedListBox/PropertyGrid","State":"open","Body":"### .NET version\n\n.NET 10 SDK build: 10.0.100-preview.7.25380.105\n\n### Did it work in .NET Framework?\n\nNot tested/verified\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nOccurs when DarkMode feature involved\n\n### Issue description\n\nWhen the application is in Dark Mode, the contrast of focusing items in CheckedListBox/PropertyGrid is insufficient. \nThis issue does not occur in Classic Mode.\n\n**Dark Mode:**\n\n<img width=\"452\" height=\"202\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/15cb8ee3-c58b-4af6-b75d-50fe5bcae355\" />\n\n<img width=\"1752\" height=\"1214\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e840cba0-58d4-4738-9d40-dd9405f516fd\" />\n\n**Classic Mode:**\n\n<img width=\"1045\" height=\"480\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/af8558e2-a15a-4278-a580-a0b55680f80e\" />\n\n### Steps to reproduce\n\n1. Create Winforms .NET application with targeting .NET 10\n2. Add CheckedListBox and PropertyGrid controls in form designer\n3. Set the SelectedObject property to Form in propertyGrid1's properties\n4. Set app under Dark mode in program.cs file:\n```\n#pragma warning disable WFO5001\n      Application.SetColorMode(SystemColorMode.Dark);\n#pragma warning restore WFO5001\n```\n5. Build and run project\n6. Click any items to focus in CheckedListBox/PropertyGrid to observe","Url":"https://github.com/dotnet/winforms/issues/13767","RelatedDescription":"Open issue \"Dark Mode: Insufficient contrast for focusing items in CheckedListBox/PropertyGrid\" (#13767)"},{"Id":"3279585420","IsPullRequest":false,"CreatedAt":"2025-07-31T08:28:58","Actor":"Olina-Zhang","Number":"13766","RawContent":null,"Title":"Dark Mode: Dropdown arrow in PropertyGrid appears larger","State":"open","Body":"### .NET version\n\n.NET 10 SDK build: 10.0.100-preview.7.25380.105\n\n### Did it work in .NET Framework?\n\nNot tested/verified\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, occurs after the PR change: https://github.com/dotnet/winforms/pull/13747\n\n### Issue description\n\nThe dropdown arrow in the PropertyGrid control appears abnormally large when Dark Mode is enabled and the system is set to 100% DPI scaling. The issue does not occur in Classic Mode\n\n**Dark Mode on 100%DPI:**\n\n<img width=\"360\" height=\"30\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/c29a8b48-6c55-44ab-a280-eae5a8157118\" />\n\n**Dark Mode on 250%DPI:**\n\n<img width=\"877\" height=\"57\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/33d3048e-0ee8-42de-a568-6cd7b3cf10af\" />\n\n**Classic Mode on 100%DPI:**\n\n<img width=\"356\" height=\"24\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/b15731f2-d3c4-4035-8c5d-948ccfaa628e\" />\n\n**Classic Mode on 250%DPI:**\n\n<img width=\"862\" height=\"50\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/d183a191-7654-463b-89b1-de592c707ebd\" />\n\n### Steps to reproduce\n\n1. Create Winforms .NET application with targeting .NET 10\n2. Add a PropertyGrid control in form designer\n3. Set the SelectedObject property to Form in propertyGrid1's properties\n4. Set app under Dark mode in program.cs file:\n```\n#pragma warning disable WFO5001\n      Application.SetColorMode(SystemColorMode.Dark);\n#pragma warning restore WFO5001\n```\n5. Build and run project\n6. Observe any property with DropDownButton in PropertyGrid ","Url":"https://github.com/dotnet/winforms/issues/13766","RelatedDescription":"Open issue \"Dark Mode: Dropdown arrow in PropertyGrid appears larger\" (#13766)"},{"Id":"3279407243","IsPullRequest":false,"CreatedAt":"2025-07-31T07:23:22","Actor":"Olina-Zhang","Number":"13765","RawContent":null,"Title":"[Accessibility] Missing Focus Outline in Dark Mode for DropDownButton/Ellipse Button in PropertyGrid","State":"open","Body":"### .NET version\n\n .NET 10 SDK build: 10.0.100-preview.7.25380.105\n\n### Did it work in .NET Framework?\n\nNot tested/verified\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, occurs after the PR change: https://github.com/dotnet/winforms/pull/13747\n\n### Issue description\n\nIn WinForms, when the application is running in **Dark Mode**, the focus indicator (e.g., dotted line or outline) is not visible when navigating to the `DropDownButton` or` Ellipse Button` controls by keyboard within the `PropertyGrid`. \nThis issue does **not occur** in **Classic Mode**, where the focus outline is clearly visible when using the Tab key.\n\nDark Mode:\n\nhttps://github.com/user-attachments/assets/27a966f7-14db-4c9a-ad9a-8a16be4846d7\n\nClassic Mode:\n\n<img width=\"658\" height=\"52\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/726ebacf-cca7-4e5e-8003-0c8ed318cd89\" />\n\n<img width=\"660\" height=\"52\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/a4363d8f-447d-4667-9ac3-d19d06d44327\" />\n\n### Steps to reproduce\n\n1. Create Winforms .NET application with targeting .NET 10\n2. Add a  PropertyGrid control in form designer\n3. Set the SelectedObject property to Form in propertyGrid1's properties\n4. Set app under Dark mode in program.cs file:\n```\n#pragma warning disable WFO5001\n      Application.SetColorMode(SystemColorMode.Dark);\n#pragma warning restore WFO5001\n```\n5. Build and run project\n6. Tab to any property with DropDownButton/Ellipse Button in PropertyGrid to observe\n\n","Url":"https://github.com/dotnet/winforms/issues/13765","RelatedDescription":"Open issue \"[Accessibility] Missing Focus Outline in Dark Mode for DropDownButton/Ellipse Button in PropertyGrid\" (#13765)"},{"Id":"3278890764","IsPullRequest":true,"CreatedAt":"2025-07-31T02:02:52","Actor":"dotnet-maestro[bot]","Number":"13764","RawContent":null,"Title":"[release/9.0] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:92989bf7-cdf9-483d-64c5-08dcbc356d11)\n## From https://github.com/dotnet/arcade\n- **Subscription**: [92989bf7-cdf9-483d-64c5-08dcbc356d11](https://maestro.dot.net/subscriptions?search=92989bf7-cdf9-483d-64c5-08dcbc356d11)\n- **Build**: [20250730.1](https://dev.azure.com/dnceng/internal/_build/results?buildId=2761554)\n- **Date Produced**: July 30, 2025 10:41:09 PM UTC\n- **Commit**: [7e67a7b4b62513a475afe46c4cd74d54b68f65c9](https://github.com/dotnet/arcade/commit/7e67a7b4b62513a475afe46c4cd74d54b68f65c9)\n- **Branch**: refs/heads/release/9.0\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - From [9.0.0-beta.25366.1 to 9.0.0-beta.25380.1][1]\n    - Microsoft.DotNet.Arcade.Sdk\n    - Microsoft.DotNet.CMake.Sdk\n    - Microsoft.DotNet.GenFacades\n    - Microsoft.DotNet.Helix.Sdk\n    - Microsoft.DotNet.RemoteExecutor\n    - Microsoft.DotNet.XUnitExtensions\n\n[1]: https://github.com/dotnet/arcade/compare/1a2e280a03...7e67a7b4b6\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:92989bf7-cdf9-483d-64c5-08dcbc356d11)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13764)","Url":"https://github.com/dotnet/winforms/pull/13764","RelatedDescription":"Open PR \"[release/9.0] Update dependencies from dotnet/arcade\" (#13764)"},{"Id":"3272687626","IsPullRequest":true,"CreatedAt":"2025-07-31T01:24:23","Actor":"Amy-Li03","Number":"13755","RawContent":null,"Title":"Add unit test for CheckBoxPopupAdapter","State":"closed","Body":"Related https://github.com/dotnet/winforms/issues/13442\r\n\r\n## Proposed changes\r\nAdd unit test file CheckBoxPopupAdapterTests.cs for protected methods/properties of the CheckBoxPopupAdapter.cs\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13755)","Url":"https://github.com/dotnet/winforms/pull/13755","RelatedDescription":"Closed or merged PR \"Add unit test for CheckBoxPopupAdapter\" (#13755)"},{"Id":"3278672501","IsPullRequest":false,"CreatedAt":"2025-07-30T23:13:53","Actor":"Overdrive77","Number":"13763","RawContent":null,"Title":"WinForms Designer Regression: Cannot Select EnableDesignMode-Exposed Panel by Click in .NET 9","State":"open","Body":"### Environment\n\n### Summary\n\n**In WinForms .NET 9:**  (Version 17.14.10)\nWhen building a custom UserControl that exposes an internal panel with 'EnableDesignMode', it is not possible to select this internal panel by clicking in the designer. All drag-and-drop operations add controls to the root UserControl, not the design-surface-exposed panel, unless the Document Outline is used.\n\n**This worked as expected in .NET Framework 4.8.1,** where clicking the internal panel selected it for control drops.  \n**In .NET 9, this is broken** and makes composite control design much harder.\n\n---\n\n### Minimal Repro\n\n### Steps to Reproduce\n\n1. Add the following minimal UserControl and designer to a .NET WinForms project:\n\n    ```csharp\n    using System.ComponentModel;\n    using System.Windows.Forms;\n    using System.Windows.Forms.Design;\n\n    [Designer(typeof(DemoPanelDesigner))]\n    public class DemoPanel : UserControl\n    {\n        private readonly Panel _contentPanel = new Panel();\n\n        public DemoPanel()\n        {\n            _contentPanel.Dock = DockStyle.Fill;\n            this.Controls.Add(_contentPanel);\n        }\n\n        [Browsable(true)]\n        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]\n        public Panel ContentPanel => _contentPanel;\n    }\n\n    public class DemoPanelDesigner : ParentControlDesigner\n    {\n        public override void Initialize(IComponent component)\n        {\n            base.Initialize(component);\n\n            if (component is DemoPanel panel)\n                EnableDesignMode(panel.ContentPanel, nameof(DemoPanel.ContentPanel));\n        }\n    }\n    ```\n\n2. Build the project, open a Form in the designer, and add 'DemoPanel' to it.\n3. Try to drag a Button (or any control) and drop it inside the 'DemoPanel' surface.\n4. Observe the generated code:\n\n    ```csharp\n    // Result:\n    demoPanel1.Controls.Add(this.button1); // added to UserControl.Controls, not ContentPanel.Controls\n    ```\n\n5. Open **Document Outline** (View > Other Windows > Document Outline), select 'ContentPanel', and add a Button again.\n6. Observe that it is now correctly added to the internal panel.\n\n### Expected Behaviour\n\nClicking inside a design-surface-exposed internal panel should select it, and controls dragged in should be added to that panel, **not the root UserControl**.\n\n### Actual Behaviour\n\n- Clicking in the designer surface always selects the UserControl itself.\n- Controls are always added to the root `Controls` collection, even when clicking inside the exposed sub-panel.\n- Only by selecting the sub-panel in Document Outline can controls be added correctly.\n\n### Why this Matters\n\n- Breaks the designer experience for any composite/custom controls.\n- Causes confusion, misplaced controls, and wasted developer time.\n- No obvious fix/workaround except using Document Outline, which is not discoverable or intuitive for most developers.\n\n### Environment\n\n- .NET 9 (also occurs in .NET 6/7/8, .NET Framework 4.8.1)\n- Visual Studio 2022 v17.10.x\n\n### Workarounds Tried\n\n- Using Document Outline: works but is not intuitive.\n- Custom designers/overrides: no effect.\n- Runtime logic: not relevant for design-time code.\n\n### Suggested Solution\n\n- Support hit-testing/selecting 'EnableDesignMode' sub-controls by mouse click in the designer.\n- At least provide an option or shortcut to route drop/selection to the correct design surface.\n\n---\n\n**Thank you for considering!**\n\n### .NET version\n\n.NET 9\n\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\n\n.NET Framework 4.8.1\n\n### Issue description\n\nWhen building a custom UserControl that exposes an internal panel with `EnableDesignMode`, it is not possible to select this internal panel by clicking in the designer. All drag-and-drop operations add controls to the root UserControl, not the design-surface-exposed panel, unless the Document Outline is used.\n\n### Steps to reproduce\n\n1. Add the following minimal UserControl and designer to a .NET WinForms project:\n\n    ```\nusing System.ComponentModel;\n    using System.Windows.Forms;\n    using System.Windows.Forms.Design;\n\n    [Designer(typeof(DemoPanelDesigner))]\n    public class DemoPanel : UserControl\n    {\n        private readonly Panel _contentPanel = new Panel();\n\n        public DemoPanel()\n        {\n            _contentPanel.Dock = DockStyle.Fill;\n            this.Controls.Add(_contentPanel);\n        }\n\n        [Browsable(true)]\n        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]\n        public Panel ContentPanel => _contentPanel;\n    }\n\n    public class DemoPanelDesigner : ParentControlDesigner\n    {\n        public override void Initialize(IComponent component)\n        {\n            base.Initialize(component);\n\n            if (component is DemoPanel panel)\n                EnableDesignMode(panel.ContentPanel, nameof(DemoPanel.ContentPanel));\n        }\n    }\n```\n\n2. Build the project, open a Form in the designer, and add `DemoPanel` to it.\n3. Try to drag a Button (or any control) and drop it inside the `DemoPanel` surface.\n4. Observe the generated code:\n\n### Diagnostics\n\n```text\n\n```","Url":"https://github.com/dotnet/winforms/issues/13763","RelatedDescription":"Open issue \"WinForms Designer Regression: Cannot Select EnableDesignMode-Exposed Panel by Click in .NET 9\" (#13763)"},{"Id":"3275957576","IsPullRequest":true,"CreatedAt":"2025-07-30T07:17:20","Actor":"Zheng-Li01","Number":"13762","RawContent":null,"Title":"Add code coverage for ToolStripManagerModalMenuFilterHostedWindowsFor…","State":"open","Body":"Related https://github.com/dotnet/winforms/issues/13442\r\n\r\n## Proposed changes\r\nAdd unit test file:ToolStripManagerModalMenuFilterHostedWindowsFormsMessageHookTests.cs for public/protected methods/properties of the ToolStripManagerModalMenuFilterHostedWindowsFormsMessageHook.cs\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13762)","Url":"https://github.com/dotnet/winforms/pull/13762","RelatedDescription":"Open PR \"Add code coverage for ToolStripManagerModalMenuFilterHostedWindowsFor…\" (#13762)"},{"Id":"3271404433","IsPullRequest":true,"CreatedAt":"2025-07-29T18:51:42","Actor":"KlausLoeffelmann","Number":"13749","RawContent":null,"Title":"[Preview7/Release] Backport 13721 DarkMode: White background in disabled TextBox-composite controls","State":"closed","Body":"Fixes the `ComboBox` and `RichTextBox` BackColor issue in dark mode, where the background color was the same as in Classic mode (LightMode).\r\n\r\nBoth controls either use `TextBox(Base)` as/in a constituent control approach or inherit from `TextBoxBase` (true for the `RichTextBox`).\r\n\r\nWhile `ReadOnly` and normal edit mode work fine for both with regards to correct coloring in dark mode, if they are disabled, they used the wrong colors for the background.\r\n\r\nThis was pointed out by customers, and is a particular blocker for GitHub Extensions, which discussed this effect here:\r\n\r\nhttps://github.com/gitextensions/gitextensions/wiki/Dark-Mode#bright-disabled-textboxes\r\n\r\n(Note that other issues which they pointed out we already addressed in earlier .NET Preview versions, as soon as then priorities and circumstances allowed us.)\r\n\r\nWe want to accommodate them and other customers who had similar issues in this area as fast as possible to unblock them, so GitExtensions in particular can provide their aspired .NET 10 based DarkMode-enabled GitExtensions version as soon as .NET 10 becomes available.\r\n\r\nNote, that `ComboBox` internally uses depending on the `ComboBox` control's `DropDownStyle` different nested control types for different modes. So, practically there are inner `ListBox` and `TextBox` controls which had to be addressed:\r\n\r\n<img width=\"553\" height=\"456\" alt=\"image\" src=\"https://github.com/user-attachments/assets/61821717-b509-4ecf-b703-89f7a0970c60\" />\r\n\r\nThe fixed version has been tested by CTI and they also reassured that the Classic mode code paths (LightMode rendering) remain unchanged to further minimize any risks. \r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13749)","Url":"https://github.com/dotnet/winforms/pull/13749","RelatedDescription":"Closed or merged PR \"[Preview7/Release] Backport 13721 DarkMode: White background in disabled TextBox-composite controls\" (#13749)"},{"Id":"3271389007","IsPullRequest":true,"CreatedAt":"2025-07-29T18:07:23","Actor":"KlausLoeffelmann","Number":"13748","RawContent":null,"Title":"[Preview7/Release] Backport 13747 DarkMode: SystemControlButton rendering","State":"closed","Body":"Fixes System Control Button rendering issues in dark mode, where a control button is either rendering not in dark mode, or has rendering artefacts when rendering in the context of the property grid.\r\n\r\nThese issues have been pointed out by customers, and are, among others, one of the blockers for GitHub Extensions, which are emotionally discussed on their GitHub issues\r\n\r\nhttps://github.com/gitextensions/gitextensions/issues/9191#issuecomment-2293935942\r\n\r\n(and also might even save lives https://github.com/gitextensions/gitextensions/issues/11904)\r\n\r\nNote while the latter is certainly an ironic-funny remark, those discussions around dark mode for WinForms app shows the high participation of the community and the desire to make this work, and note also that other issues which have been pointed out in other projects show us clearly, why we should accomodate rendering issues as early as possible to unblock them: GitExtension in particular but also other projects can provide their aspired .NET 10 based DarkMode-enabled versions as soon as .NET 10 becomes available.\r\n\r\nFixes rendering issues in dark mode rendering, where a button is used in the context of another control:\r\n\r\n* DropDownArrow\r\n* UpDown based controls\r\n* Ellipse-Control in Property browsers\r\n\r\nThese buttons have not been rendered correctly in dark mode, and a new system control button renderer (tested by CTI) fixes these issues.\r\n\r\nNote that this PR does not change the Classic (Light Mode) code paths in any way.\r\n\r\nExamples:\r\n\r\n<img width=\"230\" height=\"60\" alt=\"image\" src=\"https://github.com/user-attachments/assets/9bd4750b-076d-45cd-9160-997b50ff98ad\" />\r\n\r\n---\r\n\r\n<img width=\"565\" height=\"72\" alt=\"image\" src=\"https://github.com/user-attachments/assets/26c4eba5-11cd-44ad-8964-bb3d586fee41\" />\r\n\r\n---\r\n\r\n<img width=\"763\" height=\"151\" alt=\"image\" src=\"https://github.com/user-attachments/assets/ce4f409f-051b-422a-aa1f-26c5a8470e0f\" />\r\n\r\n---\r\n\r\nCurrent versions have been tested by CTI and they also reassured  that the Classic mode CodePaths (LightMode rendering) remain unchanged to minimize any risks.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13748)","Url":"https://github.com/dotnet/winforms/pull/13748","RelatedDescription":"Closed or merged PR \"[Preview7/Release] Backport 13747 DarkMode: SystemControlButton rendering\" (#13748)"},{"Id":"3272967145","IsPullRequest":false,"CreatedAt":"2025-07-29T09:52:56","Actor":"shindepra","Number":"13761","RawContent":null,"Title":"Luminosity ratio of the focus indicator for the table rows with background is less than required ratio 3:1: A11y_WinForm.NETRuntime_Non-TextContrast","State":"open","Body":"\"Please do not close this bug. This bug should only be closed by TCS, C+AI Accessibility or the Divisional Driver.\"\n\n### GitHub Tags:\n#A11ySev2; #A11yTCS; #WCAG2.1.1; #Win32; #DesktopApp; #Win11; #WinForms .NET Runtime; #BM_WinForms.NETRuntime_Win32_June2025; #Keyboard; #A11yMAS\n\n### Environment Details:\nMicrosoft Windows 11 Enterprise (24H2) Build on 26100.4061  \n\n### Repro Steps:\n\n1. Open SQL Server Migration Assistant for oracle.  \n2. Splash screen appears and SSMA is launched \n3. Navigate to the 'Tools' menu and select it. \n4. Navigate to 'Project settings menu item and select it. \n5. Navigate to \"Type Mapping\" button select it. \n6. Navigate all controls under \"Type Mapping\" button. \n7. Verify whether luminosity ratio for the focus indicator with background is less than required ratio or not. \n\n### Actual Result:\nLuminosity ratio of the focus indicator for the table rows with background is less than required ratio 3:1.\n\n### Expected Result:\nLuminosity ratio of the focus indicator for the table rows with background should satisfy the required ratio 3:1.\n\n### User Empact:\nLow vision users will be impacted. Luminosity contrast ratio for focus indicator is less than minimum required ratio i.e. 3:1. Due to this issue user will be unable to track the keyboard focus easily. \n\nSample App used:-\n\n[[[[RadioButtonFocusDemo.zip](https://github.com/user-attachments/files/21483118/RadioButtonFocusDemo.zip)](https://microsoftapc-my.sharepoint.com/:u:/g/personal/v-kkumar2_microsoft_com/ETnjjCF0jsZFiF_P9fDDmyIBlb80rXpmeIDu2or6768kVg?e=M4uY2O)](https://microsoftapc-my.sharepoint.com/:u:/g/personal/v-kkumar2_microsoft_com/ETnjjCF0jsZFiF_P9fDDmyIBlb80rXpmeIDu2or6768kVg?e=cCZLff)](https://microsoftapc-my.sharepoint.com/:u:/g/personal/v-kkumar2_microsoft_com/ETnjjCF0jsZFiF_P9fDDmyIBlb80rXpmeIDu2or6768kVg?e=wBZc6R)\n\n### Attachment:\n\n<img width=\"882\" height=\"481\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/caed7afc-412d-4277-9fb7-a4ef682f977d\" />","Url":"https://github.com/dotnet/winforms/issues/13761","RelatedDescription":"Open issue \"Luminosity ratio of the focus indicator for the table rows with background is less than required ratio 3:1: A11y_WinForm.NETRuntime_Non-TextContrast\" (#13761)"},{"Id":"3272948055","IsPullRequest":false,"CreatedAt":"2025-07-29T09:48:09","Actor":"shindepra","Number":"13760","RawContent":null,"Title":"Sorting type column headers 'Source type, target type' are not accessible using keyboard: A11y_WinForm.NETRuntime_Keyboard.","State":"open","Body":"\"Please do not close this bug. This bug should only be closed by TCS, C+AI Accessibility or the Divisional Driver.\"\n\n### GitHub Tags:\n#A11ySev2; #A11yTCS; #WCAG2.1.1; #Win32; #DesktopApp; #Win11; #WinForms .NET Runtime; #BM_WinForms.NETRuntime_Win32_June2025; #Keyboard; #A11yMAS\n\n### Environment Details:\nMicrosoft Windows 11 Enterprise (24H2) Build on 26100.4061  \n\n### Repro Steps:\n\n1. Open SQL Server Migration Assistant for oracle.  \n2. Splash screen appears and SSMA is launched \n3. Navigate to the 'Tools' menu and select it. \n4. Navigate to 'Project settings menu item and select it. \n5.  Navigate to \"Type Mapping\" button select it. \n6. Navigate all controls under \"Type Mapping\" button. \n7. Verify whether sort functionality column headers are accessible using keyboard or not. \n\n### Actual Result:\nSorting type column headers 'Source type, target type' are not accessible using keyboard. \n\n### Expected Result:\nSorting type column headers 'Source type, target type' should be accessible using keyboard. \n\n### User Empact:\nKeyboard users will be affected as they miss using the feature and the functionality of the controls if the keyboard focus doesn't land on the interactive elements on the page. Keyboard users cannot interact and miss accessing the content. \n\nSample App used:-\n\n[[[[RadioButtonFocusDemo.zip](https://github.com/user-attachments/files/21483118/RadioButtonFocusDemo.zip)](https://microsoftapc-my.sharepoint.com/:u:/g/personal/v-kkumar2_microsoft_com/ETnjjCF0jsZFiF_P9fDDmyIBlb80rXpmeIDu2or6768kVg?e=M4uY2O)](https://microsoftapc-my.sharepoint.com/:u:/g/personal/v-kkumar2_microsoft_com/ETnjjCF0jsZFiF_P9fDDmyIBlb80rXpmeIDu2or6768kVg?e=cCZLff)](https://microsoftapc-my.sharepoint.com/:u:/g/personal/v-kkumar2_microsoft_com/ETnjjCF0jsZFiF_P9fDDmyIBlb80rXpmeIDu2or6768kVg?e=wBZc6R)\n\n### Attachment:\n\n<img width=\"843\" height=\"503\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/2cd76d13-25c4-4e36-8aac-9b2a610a3e1e\" />\n\nhttps://microsoftapc-my.sharepoint.com/:v:/g/personal/v-kkumar2_microsoft_com/EQScqHS_FkhFmP-HT-YhcbcBMlvzKR4Hn_FM5I5f6IOoAw?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&e=16rVi1","Url":"https://github.com/dotnet/winforms/issues/13760","RelatedDescription":"Open issue \"Sorting type column headers 'Source type, target type' are not accessible using keyboard: A11y_WinForm.NETRuntime_Keyboard.\" (#13760)"},{"Id":"3272927973","IsPullRequest":false,"CreatedAt":"2025-07-29T09:42:46","Actor":"shindepra","Number":"13759","RawContent":null,"Title":"The Luminosity ratio of Table data text to its background color is less than required ratio i.e; 4.267:1: A11y_WinForm.NETRuntime_Contrast(Minimum).","State":"open","Body":"\"Please do not close this bug. This bug should only be closed by TCS, C+AI Accessibility or the Divisional Driver.\"\n\n### GitHub Tags:\n#A11ySev2; #A11yTCS; #WCAG1.4.3; #Win32; #DesktopApp; #Win11; #WinForms .NET Runtime; #BM_WinForms.NETRuntime_Win32_June2025; #Contrast(Minimum); #A11yMAS\n\n### Environment Details:\nMicrosoft Windows 11 Enterprise (24H2) Build on 26100.4061  \n\n### Repro Steps:\n\n1. Open SQL Server Migration Assistant for oracle.  \n2. Splash screen appears and SSMA is launched  \n3. Navigate to connect to oracle and connect to target button and connect it.  \n4. Navigate to 'Tools' menu and select it.  \n5. Navigate to 'Convert schema' menu item and select it.  \n6. Navigate all controls after selecting 'Convert schema'.  \n7. Verify whether luminosity ratio is sufficient or not for table data text with its background colour.  \n\n### Actual Result:\nThe Luminosity ratio of Table data text to its background color is less than required ratio ie; 4.267:1  \n\n### Expected Result:\nThe Luminosity ratio of table data text to its background color should be at least 4.5:1 or more .\n\n### User Empact:\nA luminosity ratio of 4.267:1 for table data text falls below the required minimum contrast ratio of 4.5:1 for normal text, making it difficult for users with low vision or color blindness to read the content. This can hinder information access and fails to meet WCAG 2.1 AA contrast requirements.\n\nSample App used:-\n\n[[[[RadioButtonFocusDemo.zip](https://github.com/user-attachments/files/21483118/RadioButtonFocusDemo.zip)](https://microsoftapc-my.sharepoint.com/:u:/g/personal/v-kkumar2_microsoft_com/ETnjjCF0jsZFiF_P9fDDmyIBlb80rXpmeIDu2or6768kVg?e=M4uY2O)](https://microsoftapc-my.sharepoint.com/:u:/g/personal/v-kkumar2_microsoft_com/ETnjjCF0jsZFiF_P9fDDmyIBlb80rXpmeIDu2or6768kVg?e=cCZLff)](https://microsoftapc-my.sharepoint.com/:u:/g/personal/v-kkumar2_microsoft_com/ETnjjCF0jsZFiF_P9fDDmyIBlb80rXpmeIDu2or6768kVg?e=wBZc6R)\n\n### Attachment:\n\n![Image](https://github.com/user-attachments/assets/2f9e5580-d31a-48ab-a129-215c0f7eaf3d)","Url":"https://github.com/dotnet/winforms/issues/13759","RelatedDescription":"Open issue \"The Luminosity ratio of Table data text to its background color is less than required ratio i.e; 4.267:1: A11y_WinForm.NETRuntime_Contrast(Minimum).\" (#13759)"},{"Id":"3272920356","IsPullRequest":true,"CreatedAt":"2025-07-29T09:40:49","Actor":"Olina-Zhang","Number":"13758","RawContent":null,"Title":"Add unit test for PropertyGrid.PropertyTabCollection file","State":"open","Body":"Add more test for uncovered public methods in PropertyGrid.PropertyTabCollectionTests.cs file\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13758)","Url":"https://github.com/dotnet/winforms/pull/13758","RelatedDescription":"Open PR \"Add unit test for PropertyGrid.PropertyTabCollection file\" (#13758)"},{"Id":"3272897963","IsPullRequest":false,"CreatedAt":"2025-07-29T09:34:45","Actor":"shindepra","Number":"13757","RawContent":null,"Title":"Keyboard focus order is not logical under SSMA Feedback window: A11y_WinForm.NETRuntime_FocusOrder.","State":"open","Body":"\"Please do not close this bug. This bug should only be closed by TCS, C+AI Accessibility or the Divisional Driver.\"\n\n### GitHub Tags:\n#A11ySev2; #A11yTCS; #WCAG2.4.3; #Win32; #DesktopApp; #Win11; #WinForms .NET Runtime; #BM_WinForms.NETRuntime_Win32_June2025; #FocusOrder; #A11yMAS\n\n### Environment Details:\nMicrosoft Windows 11 Enterprise (24H2) Build on 26100.4061  \n\n### Repro Steps:\n\n1. Open SQL Server Migration Assistant for oracle.  \n2. Splash screen appears and SSMA is launched \n3. Navigate to connect to oracle and connect to target button and connect it.  \n4. Navigate to the 'Tools' menu and select it.  \n5. Navigate to 'Convert schema' menu item and select it.  \n6. Navigate to the SSMA Feedback window \n7. Verify whether focus order is logical or not\n\n### Actual Result:\nKeyboard focus order is not logical under SSMA Feedback window. \n\n### Expected Result:\nKeyboard focus order should be logical under SSMA Feedback window. \n\n### User Empact:\nUsers who rely on the keyboard will be affected if the focus order is not in the visual sequential order. Keyboard users will be affected as they get confused if the focus order is not as expected. \n\nSample App used:-\n\n[RadioButtonFocusDemo.zip](https://github.com/user-attachments/files/21483118/RadioButtonFocusDemo.zip)\n\n### Attachment:\n\n<img width=\"896\" height=\"488\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/085d6ce7-873f-4ef4-8cb5-fade0cfd7ab2\" />\n\nhttps://microsoftapc-my.sharepoint.com/:v:/g/personal/v-kkumar2_microsoft_com/EdG6SWTqMBBNnNMZSHHgupkB1EElv3wCOiOsxfmGGj1XFg?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&e=SZ6gYK\n","Url":"https://github.com/dotnet/winforms/issues/13757","RelatedDescription":"Open issue \"Keyboard focus order is not logical under SSMA Feedback window: A11y_WinForm.NETRuntime_FocusOrder.\" (#13757)"},{"Id":"3272875734","IsPullRequest":false,"CreatedAt":"2025-07-29T09:29:06","Actor":"shindepra","Number":"13756","RawContent":null,"Title":"'How easy or difficult and how valuable was the code radio group sections are not accessible using keyboard present under 'Feedback' dialog: A11y_WinForm.NETRuntime_Keyboard.","State":"open","Body":"\"Please do not close this bug. This bug should only be closed by TCS, C+AI Accessibility or the Divisional Driver.\"\n\n### GitHub Tags:\n#A11ySev2; #A11yTCS; #WCAG2.1.1; #Win32; #DesktopApp; #Win11; #WinForms .NET Runtime; #BM_WinForms.NETRuntime_Win32_June2025; #Keybaord; #A11yMAS\n\n### Environment Details:\nMicrosoft Windows 11 Enterprise (24H2) Build on 26100.4061  \n\n### Repro Steps:\n\n1. Open SQL Server Migration Assistant for oracle.  \n2. Splash screen appears and SSMA is launched  \n3. Navigate to connect to oracle and connect to target button and connect it.  \n4. Navigate to the 'Tools' menu and select it.  \n5. Navigate to 'Convert schema' menu item and select it.  \n6. Navigate all controls under \"Operation prerequisites not met\" window and select \"Continue\" button.  \n7. Navigate all the controls under the \"Target exists\" and select \"overwrite\" button.  \n8. Navigate to fix with copilot button and select.  \n9. Navigate all the controls under the \"Copilot configuration\" window and select \"review suggestions\" button.  \n10. Navigate all the controls in the page like \"Errors to note\" and \"Explanation of fixes\" etc... and select the \"view in full screen\" link.  \n11. Navigate all the controls in full screen.  \n12. Navigate to 'Provide feedback on the experience' link and select it. \n13. Navigate all controls under feedback dialog. \n14. Verify whether 'How easy or difficult and how valuable was the code radio group sections are accessible using keyboard or not. \n\n### Actual Result:\n'How easy or difficult and how valuable was the code radio group sections are not accessible using keyboard present under 'Feedback' dialog. \n\n### Expected Result:\n'How easy or difficult and how valuable was the code radio group sections should be accessible using keyboard present under 'Feedback' dialog.\n\n### User Empact:\nKeyboard users will be affected as they miss using the feature and the functionality of the controls if the keyboard focus doesn't land on the interactive elements on the page. Keyboard users cannot interact and miss accessing the controls.\n\nSample App used:-\n\n[RadioButtonFocusDemo.zip](https://github.com/user-attachments/files/21483118/RadioButtonFocusDemo.zip)\n\n### Attachment:\n\n<img width=\"809\" height=\"529\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/2c64a980-0fd3-49a2-b997-08d2d6b87ced\" />\n\nhttps://microsoftapc-my.sharepoint.com/:v:/g/personal/v-kkumar2_microsoft_com/ES3n-UwHa8hMpF5vtd1KW2AB9tue_wUZEb2S8a8v-upFVA?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&e=bQ2WKQ","Url":"https://github.com/dotnet/winforms/issues/13756","RelatedDescription":"Open issue \"'How easy or difficult and how valuable was the code radio group sections are not accessible using keyboard present under 'Feedback' dialog: A11y_WinForm.NETRuntime_Keyboard.\" (#13756)"},{"Id":"3272511902","IsPullRequest":false,"CreatedAt":"2025-07-29T07:38:38","Actor":"shindepra","Number":"13754","RawContent":null,"Title":"'How likely are you recommend....' radio group sections is not accessible using keyboard present under SSMA Feedback window: A11y_WinForm.NETRuntime_Keyboard.","State":"open","Body":"\"Please do not close this bug. This bug should only be closed by TCS, C+AI Accessibility or the Divisional Driver.\"\n\n### GitHub Tags:\n#A11ySev2; #A11yTCS; #WCAG2.1.1; #Win32; #DesktopApp; #Win11; #WinForms .NET Runtime; #BM_WinForms.NETRuntime_Win32_June2025; #Keybaord; #A11yMAS\n\n### Environment Details:\nMicrosoft Windows 11 Enterprise (24H2) Build on 26100.4061  \n\n### Repro Steps:\n\n1. Open SQL Server Migration Assistant for oracle.  \n2. Splash screen appears and SSMA is launched  \n3. Navigate to connect to oracle and connect to target button and connect it.  \n4. Navigate to the 'Tools' menu and select it.  \n5. Navigate to 'Convert schema' menu item and select it.  \n6. Navigate to the SSMA Feedback window \n7. Verify whether 'How easy or difficult and how valuable was the code radio group sections are accessible using keyboard or not. \n\n### Actual Result:\n'How likely are you recommend....' radio group sections is not accessible using keyboard present under SSMA Feedback window.\n\n### Expected Result:\n'How likely are you recommend....' radio group sections should be accessible using keyboard present under SSMA Feedback window.\n\n### User Empact:\nKeyboard users will be impacted if the keyboard focus doesn't land on interactive controls. Keyboard users will be blocked as they cannot access the controls. They cannot invoke and access the content and controls of it.\n\nSample App used:-\n\n[RadioButtonFocusDemo.zip](https://github.com/user-attachments/files/21483118/RadioButtonFocusDemo.zip)\n\n### Attachment:\n\n<img width=\"896\" height=\"488\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/da1c5a5f-b718-4e09-9114-cf09d11b2989\" />\n\nhttps://microsoftapc-my.sharepoint.com/:v:/g/personal/v-kkumar2_microsoft_com/EZ0H-YKcdNNOk8_8w2bp5BQBlJLS3TgOc9LeGWsuEAME7g?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&e=lXjxlK","Url":"https://github.com/dotnet/winforms/issues/13754","RelatedDescription":"Open issue \"'How likely are you recommend....' radio group sections is not accessible using keyboard present under SSMA Feedback window: A11y_WinForm.NETRuntime_Keyboard.\" (#13754)"},{"Id":"3272485523","IsPullRequest":false,"CreatedAt":"2025-07-29T07:30:15","Actor":"shindepra","Number":"13753","RawContent":null,"Title":"Maximize, close controls are not accessible using keyboard present under 'Save meta data' screen: A11y_WinForm.NETRuntime_Keyboard","State":"open","Body":"\"Please do not close this bug. This bug should only be closed by TCS, C+AI Accessibility or the Divisional Driver.\"\n\n### GitHub Tags:\n#A11ySev2; #A11yTCS; #WCAG2.1.1; #Win32; #DesktopApp; #Win11; #WinForms .NET Runtime; #BM_WinForms.NETRuntime_Win32_June2025; #Keybaord; #A11yMAS\n\n### Environment Details:\nMicrosoft Windows 11 Enterprise (24H2) Build on 26100.4061  \n\n### Repro Steps:\n\n1. Open SQL Server Migration Assistant for oracle.  \n2. Splash screen appears and SSMA is launched \n3. Navigate to the 'File' menu and select it. \n4. Navigate to 'save project', 'close' menu item and select it. \n5. Navigate all controls on 'Save metadata' dialog. \n6. Verify whether maximize, close controls are accessible using keyboard or not.\n\n### Actual Result:\nMaximize, close controls are not accessible using keyboard present under 'Save meta data' screen. \n\n### Expected Result:\nMaximize, close controls should be accessible using keyboard present under 'Save meta data' screen. \n\n### User Empact:\nKeyboard users will be affected as they miss using the feature and the functionality of the controls if the keyboard focus doesn't land on the interactive elements on the page. Keyboard users cannot interact and miss accessing the controls.\n\nSample App used:-\n\n[RadioButtonFocusDemo.zip](https://github.com/user-attachments/files/21483118/RadioButtonFocusDemo.zip)\n\n### Attachment:\n\n<img width=\"843\" height=\"503\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/8a312192-29b2-4fb8-aee8-b5c59f840679\" />\n\nhttps://microsoftapc-my.sharepoint.com/:v:/g/personal/v-kkumar2_microsoft_com/Ea-djD821KlOkygZnpfWD9EBx8vKbxETN9_aqqVq0Mu7dg?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0NvcHkifX0&e=GjqZrf","Url":"https://github.com/dotnet/winforms/issues/13753","RelatedDescription":"Open issue \"Maximize, close controls are not accessible using keyboard present under 'Save meta data' screen: A11y_WinForm.NETRuntime_Keyboard\" (#13753)"},{"Id":"3271705693","IsPullRequest":true,"CreatedAt":"2025-07-29T02:53:20","Actor":"dotnet-maestro[bot]","Number":"13750","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250727.3](https://dev.azure.com/dnceng/internal/_build/results?buildId=2759482)\n- **Date Produced**: July 28, 2025 5:33:53 PM UTC\n- **Commit**: [6a953e76162f3f079405f80e28664fa51b136740](https://github.com/dotnet/dotnet/commit/6a953e76162f3f079405f80e28664fa51b136740)\n- **Commit Diff**: [03fb785...6a953e7](https://github.com/dotnet/dotnet/compare/03fb78540de4e5b3c8874da30e60b58321956993...6a953e76162f3f079405f80e28664fa51b136740)\n- **Branch**: main\n\n**Updated Dependencies**\n- From [10.0.0-beta.25376.102 to 10.0.0-beta.25377.103][1]\n  - Microsoft.DotNet.Arcade.Sdk\n  - Microsoft.DotNet.CMake.Sdk\n  - Microsoft.DotNet.GenFacades\n  - Microsoft.DotNet.Helix.Sdk\n  - Microsoft.DotNet.RemoteExecutor\n  - Microsoft.DotNet.XUnitV3Extensions\n- From [10.0.0-preview.7.25376.102 to 10.0.0-preview.7.25377.103][1]\n  - Microsoft.NET.Sdk.IL\n  - Microsoft.NETCore.App.Ref\n  - Microsoft.NETCore.ILAsm\n  - Microsoft.NETCore.ILDAsm\n  - Microsoft.NETCore.Platforms\n  - Microsoft.Win32.SystemEvents\n  - runtime.win-x64.Microsoft.NETCore.ILAsm\n  - runtime.win-x86.Microsoft.NETCore.ILAsm\n  - System.CodeDom\n  - System.Configuration.ConfigurationManager\n  - System.Formats.Nrbf\n  - System.IO.Hashing\n  - System.Reflection.MetadataLoadContext\n  - System.Resources.Extensions\n  - System.Runtime.Serialization.Formatters\n  - System.Text.Encodings.Web\n  - System.Text.Json\n  - System.Windows.Extensions\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/03fb78540d...6a953e7616\n[marker]: <> (Start:Footer:CodeFlow PR)\n\n## Associated changes in source repos\n- https://github.com/dotnet/aspnetcore/compare/bf1f642be9fe230fed38e10561d4aa9ed5859b8f...c40d32ed99f3fae965ac81a257e3cf3889601754\n- https://github.com/dotnet/diagnostics/compare/d7d850097b755b343851f9c5b93325aacb8323aa...24de8bfbfd5795acd1dde863ed8172d538a9f585\n- https://github.com/dotnet/fsharp/compare/7dd51e626b3787b69d3933a33cf2ce23fc36c576...53929f2e01281a614a15033dfaae6fb6d00bb543\n- https://github.com/dotnet/roslyn-analyzers/compare/06f47ea69c931a5111d32b1c443d4546db5888f2...5261191c4ec2e273dc4400328a6e81ba7f677b82\n\n[marker]: <> (End:Footer:CodeFlow PR)\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13750)","Url":"https://github.com/dotnet/winforms/pull/13750","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13750)"},{"Id":"3271228008","IsPullRequest":true,"CreatedAt":"2025-07-28T21:12:12","Actor":"KlausLoeffelmann","Number":"13747","RawContent":null,"Title":"DarkMode (a) Fix up System Control Button (UpDown, ComboBox, Ellipse-Button)","State":"closed","Body":"Fixes rendering issues in dark mode rendering, where a button is used in the context of another control:\r\n\r\n* DropDownArrow\r\n* UpDown based controls\r\n* Ellipse-Control in Property browsers\r\n\r\nThese buttons have not been rendered correctly in dark mode, and a new system control button renderer (tested by CTI) fixes these issues.\r\n\r\nNote that this PR does not change the Classic (Light Mode) code paths in any way.\r\n\r\nExamples:\r\n\r\n<img width=\"230\" height=\"60\" alt=\"image\" src=\"https://github.com/user-attachments/assets/9bd4750b-076d-45cd-9160-997b50ff98ad\" />\r\n\r\n<img width=\"565\" height=\"72\" alt=\"image\" src=\"https://github.com/user-attachments/assets/26c4eba5-11cd-44ad-8964-bb3d586fee41\" />\r\n\r\n<img width=\"763\" height=\"151\" alt=\"image\" src=\"https://github.com/user-attachments/assets/ce4f409f-051b-422a-aa1f-26c5a8470e0f\" />\r\n\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13747)","Url":"https://github.com/dotnet/winforms/pull/13747","RelatedDescription":"Closed or merged PR \"DarkMode (a) Fix up System Control Button (UpDown, ComboBox, Ellipse-Button)\" (#13747)"},{"Id":"3267745323","IsPullRequest":true,"CreatedAt":"2025-07-28T02:46:11","Actor":"dotnet-maestro[bot]","Number":"13744","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250726.2](https://dev.azure.com/dnceng/internal/_build/results?buildId=2758666)\n- **Date Produced**: July 27, 2025 8:33:22 PM UTC\n- **Commit**: [03fb78540de4e5b3c8874da30e60b58321956993](https://github.com/dotnet/dotnet/commit/03fb78540de4e5b3c8874da30e60b58321956993)\n- **Commit Diff**: [03fb785...03fb785](https://github.com/dotnet/dotnet/compare/03fb78540de4e5b3c8874da30e60b58321956993...03fb78540de4e5b3c8874da30e60b58321956993)\n- **Branch**: main\n\n**Updated Dependencies**\n- From [10.0.0-beta.25375.119 to 10.0.0-beta.25376.102][1]\n  - Microsoft.DotNet.Arcade.Sdk\n  - Microsoft.DotNet.CMake.Sdk\n  - Microsoft.DotNet.GenFacades\n  - Microsoft.DotNet.Helix.Sdk\n  - Microsoft.DotNet.RemoteExecutor\n  - Microsoft.DotNet.XUnitV3Extensions\n- From [10.0.0-preview.7.25375.119 to 10.0.0-preview.7.25376.102][1]\n  - Microsoft.NET.Sdk.IL\n  - Microsoft.NETCore.App.Ref\n  - Microsoft.NETCore.ILAsm\n  - Microsoft.NETCore.ILDAsm\n  - Microsoft.NETCore.Platforms\n  - Microsoft.Win32.SystemEvents\n  - runtime.win-x64.Microsoft.NETCore.ILAsm\n  - runtime.win-x86.Microsoft.NETCore.ILAsm\n  - System.CodeDom\n  - System.Configuration.ConfigurationManager\n  - System.Formats.Nrbf\n  - System.IO.Hashing\n  - System.Reflection.MetadataLoadContext\n  - System.Resources.Extensions\n  - System.Runtime.Serialization.Formatters\n  - System.Text.Encodings.Web\n  - System.Text.Json\n  - System.Windows.Extensions\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/03fb78540d...03fb78540d\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13744)","Url":"https://github.com/dotnet/winforms/pull/13744","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13744)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-08-03T03:30:27.4689584Z","RunDurationInMilliseconds":552}