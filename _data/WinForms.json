{"Data":{"GitHub":{"Issues":[{"Id":"1080949795","IsPullRequest":true,"CreatedAt":"2021-12-16T03:11:46","Actor":"ArtemTatarinov","Number":"6350","RawContent":null,"Title":"Adding MDI test cases to internal test app","State":"closed","Body":"Added test cases from the PR #6239 as discussed in this comment https://github.com/dotnet/winforms/pull/6239#pullrequestreview-822243910.\r\n\r\n![image](https://user-images.githubusercontent.com/87859299/146180549-76e681b1-c2f0-4231-97a5-4ed662b7b39d.png)\r\n![image](https://user-images.githubusercontent.com/87859299/146180629-df6f9ef8-ae97-4452-9bee-ee4a24034d7e.png)\r\n![image](https://user-images.githubusercontent.com/87859299/146180665-1fd6caf8-9204-4e53-bcff-afdbcbdb87b9.png)\r\n![image](https://user-images.githubusercontent.com/87859299/146180820-1c7e740e-8e8a-4eee-a0aa-e96c363830ef.png)\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6350)","Url":"https://github.com/dotnet/winforms/pull/6350","RelatedDescription":"Closed or merged PR \"Adding MDI test cases to internal test app\" (#6350)"},{"Id":"1081021148","IsPullRequest":true,"CreatedAt":"2021-12-15T13:49:02","Actor":"dotnet-maestro[bot]","Number":"6351","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20211214.1\r\n- **Date Produced**: December 14, 2021 2:58:51 PM UTC\r\n- **Commit**: cc0fa942bf43c2814af778868d4e7ddf21146b96\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.21613.2 to 7.0.0-beta.21614.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.21613.2 to 7.0.0-beta.21614.1][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21613.2 to 7.0.0-beta.21614.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.21613.2 to 7.0.0-beta.21614.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.21613.2 to 7.0.0-beta.21614.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21613.2 to 7.0.0-beta.21614.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/bcd6e00...cc0fa94\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6351)","Url":"https://github.com/dotnet/winforms/pull/6351","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6351)"},{"Id":"1080699132","IsPullRequest":false,"CreatedAt":"2021-12-15T07:56:55","Actor":"roland5572","Number":"6349","RawContent":null,"Title":"ElementHost class causes black areas when maximized","State":"open","Body":"If use class **System.Windows.Forms.Integration.ElementHost** in Winforms, and then maximize the interface, it will cause a large area of black on the interface background.\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.integration.elementhost\r\n\r\nTest Code:\r\n.net 6.0\r\n\r\n```\r\nusing System.Windows.Forms.Integration;\r\n\r\nnamespace FormBorderTest\r\n{\r\n    internal static class Program\r\n    {\r\n        [STAThread]\r\n        static void Main()\r\n        {\r\n            ApplicationConfiguration.Initialize();\r\n\r\n            var form = new Form()\r\n            {\r\n                Width = 600,\r\n                Height = 400,\r\n\r\n                StartPosition = FormStartPosition.CenterScreen,\r\n            };\r\n\r\n            var host = new ElementHost()\r\n            {\r\n                Dock= DockStyle.Fill,\r\n            };\r\n\r\n            form.Controls.Add(host);\r\n\r\n            Application.Run(form);\r\n        }\r\n    }\r\n}\r\n```\r\nTest Steps:\r\n\r\nStep 1: Double-click the title bar to start maximizing.\r\n\r\n![000](https://user-images.githubusercontent.com/88176616/146145942-43043673-8a47-44b6-8dce-04614b0892f1.png)\r\n\r\nStep 2: In the process of maximization, a large black area appeared on the entire interface.\r\n\r\n![002](https://user-images.githubusercontent.com/88176616/146144681-15da8498-db0b-4766-afbe-5937ad11daf1.png)\r\n\r\nStep 3: After being maximized, the interface returns to normal.\r\n\r\n![003](https://user-images.githubusercontent.com/88176616/146144689-6cc35132-1d75-47c7-8893-0d6773ee621b.png)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6349","RelatedDescription":"Open issue \"ElementHost class causes black areas when maximized\" (#6349)"},{"Id":"1077496939","IsPullRequest":true,"CreatedAt":"2021-12-15T01:34:48","Actor":"gpetrou","Number":"6330","RawContent":null,"Title":"Enable nullability in Com2ExtendedTypeConverter","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in Com2ExtendedTypeConverter.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6330)","Url":"https://github.com/dotnet/winforms/pull/6330","RelatedDescription":"Closed or merged PR \"Enable nullability in Com2ExtendedTypeConverter\" (#6330)"},{"Id":"1077499679","IsPullRequest":true,"CreatedAt":"2021-12-15T01:33:11","Actor":"gpetrou","Number":"6332","RawContent":null,"Title":"Enable nullability in AxSourcingSite","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in AxSourcingSite\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6332)","Url":"https://github.com/dotnet/winforms/pull/6332","RelatedDescription":"Closed or merged PR \"Enable nullability in AxSourcingSite\" (#6332)"},{"Id":"1077478512","IsPullRequest":true,"CreatedAt":"2021-12-15T01:32:01","Actor":"gpetrou","Number":"6329","RawContent":null,"Title":"Enable nullability in ArrangedElement and IArrangedElement","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ArrangedElement and IArrangedElement\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6329)","Url":"https://github.com/dotnet/winforms/pull/6329","RelatedDescription":"Closed or merged PR \"Enable nullability in ArrangedElement and IArrangedElement\" (#6329)"},{"Id":"1080054813","IsPullRequest":true,"CreatedAt":"2021-12-14T23:12:09","Actor":"vseanreesermsft","Number":"6343","RawContent":null,"Title":"Merging internal commits for release/5.0","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6343)","Url":"https://github.com/dotnet/winforms/pull/6343","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/5.0\" (#6343)"},{"Id":"1080191233","IsPullRequest":true,"CreatedAt":"2021-12-14T21:47:23","Actor":"dotnet-bot","Number":"6348","RawContent":null,"Title":"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 1512846","State":"closed","Body":"This is the pull request automatically created by the OneLocBuild task in the build process to check-in localized files generated based upon translation source files (.lcl files) handed-back from the downstream localization pipeline. If there are issues in translations, visit https://aka.ms/ceLocBug and log bugs for fixes. The OneLocBuild wiki is https://aka.ms/onelocbuild and the localization process in general is documented at https://aka.ms/AllAboutLoc.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6348)","Url":"https://github.com/dotnet/winforms/pull/6348","RelatedDescription":"Closed or merged PR \"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 1512846\" (#6348)"},{"Id":"1080048512","IsPullRequest":true,"CreatedAt":"2021-12-14T20:55:13","Actor":"vseanreesermsft","Number":"6342","RawContent":null,"Title":"Merging internal commits for release/6.0","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6342)","Url":"https://github.com/dotnet/winforms/pull/6342","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/6.0\" (#6342)"},{"Id":"1080100771","IsPullRequest":true,"CreatedAt":"2021-12-14T20:20:52","Actor":"dotnet-maestro[bot]","Number":"6346","RawContent":null,"Title":"[release/6.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:84f431dc-3375-4a46-af87-08d961c59698)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 84f431dc-3375-4a46-af87-08d961c59698\r\n- **Build**: 20211209.4\r\n- **Date Produced**: December 10, 2021 12:51:53 AM UTC\r\n- **Commit**: 7421b55f46aff8373764016d942b23cbf87c75cb\r\n- **Branch**: refs/heads/release/6.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.21560.2 to 6.0.0-beta.21609.4][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 6.0.0-beta.21560.2 to 6.0.0-beta.21609.4][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.21560.2 to 6.0.0-beta.21609.4][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.21560.2 to 6.0.0-beta.21609.4][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.21560.2 to 6.0.0-beta.21609.4][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.21560.2 to 6.0.0-beta.21609.4][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/ee9b7f1...7421b55\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:84f431dc-3375-4a46-af87-08d961c59698)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6346)","Url":"https://github.com/dotnet/winforms/pull/6346","RelatedDescription":"Closed or merged PR \"[release/6.0] Update dependencies from dotnet/arcade\" (#6346)"},{"Id":"1080147257","IsPullRequest":true,"CreatedAt":"2021-12-14T19:44:05","Actor":"dreddy-work","Number":"6347","RawContent":null,"Title":"Enable loc on main.","State":"closed","Body":"enable loc\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6347)","Url":"https://github.com/dotnet/winforms/pull/6347","RelatedDescription":"Closed or merged PR \"Enable loc on main.\" (#6347)"},{"Id":"1080097310","IsPullRequest":true,"CreatedAt":"2021-12-14T19:31:15","Actor":"dotnet-maestro[bot]","Number":"6345","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:7ad8a074-d804-46e2-eafe-08d86aff023e)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 7ad8a074-d804-46e2-eafe-08d86aff023e\r\n- **Build**: 20211115.1\r\n- **Date Produced**: November 15, 2021 10:06:02 PM UTC\r\n- **Commit**: 2f5d6d594674c80c57048dd9ba8b4f6ee9297171\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: [from 5.0.0-beta.21552.7 to 5.0.0-beta.21565.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 5.0.0-beta.21552.7 to 5.0.0-beta.21565.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 5.0.0-beta.21552.7 to 5.0.0-beta.21565.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 5.0.0-beta.21552.7 to 5.0.0-beta.21565.1][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 5.0.0-beta.21552.7 to 5.0.0-beta.21565.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/03adead...2f5d6d5\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:7ad8a074-d804-46e2-eafe-08d86aff023e)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6345)","Url":"https://github.com/dotnet/winforms/pull/6345","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/arcade\" (#6345)"},{"Id":"1080096206","IsPullRequest":true,"CreatedAt":"2021-12-14T19:24:47","Actor":"dotnet-maestro[bot]","Number":"6344","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a2a5ea62-d9bf-419c-0c86-08d7315b512a)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: a2a5ea62-d9bf-419c-0c86-08d7315b512a\r\n- **Build**: 20211111.2\r\n- **Date Produced**: November 11, 2021 7:34:26 PM UTC\r\n- **Commit**: 3df4410511ad9900804da00ec680bd1c7d6f21e1\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 2.4.1-beta.21552.6 to 2.4.1-beta.21561.2][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.21552.6 to 1.0.0-beta.21561.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 2.0.0-beta.21552.6 to 2.0.0-beta.21561.2][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 1.0.0-beta.21552.6 to 1.0.0-beta.21561.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/afb7961...3df4410\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:a2a5ea62-d9bf-419c-0c86-08d7315b512a)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6344)","Url":"https://github.com/dotnet/winforms/pull/6344","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#6344)"},{"Id":"1079933349","IsPullRequest":true,"CreatedAt":"2021-12-14T15:59:48","Actor":"WPMGPRoSToTeMa","Number":"6341","RawContent":null,"Title":"Fixing PGV accessibility tree for property descriptors and dropdown holders","State":"open","Body":"Fixes #2848, #4876\r\n\r\n\r\n## Proposed changes\r\n\r\n- Fix sibling relationship between child property descriptors and selected entry controls\r\n- Fix parent-child relationship between dropdown holder and listbox\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- No\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- CTI (planned)\r\n- Manual testing\r\n- Unit-tests\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- Microsoft Windows [Version 10.0.19044.1348]\r\n- .NET 7.0.0-alpha.1.21602.1\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6341)","Url":"https://github.com/dotnet/winforms/pull/6341","RelatedDescription":"Open PR \"Fixing PGV accessibility tree for property descriptors and dropdown holders\" (#6341)"},{"Id":"1079737931","IsPullRequest":true,"CreatedAt":"2021-12-14T13:48:45","Actor":"dotnet-maestro[bot]","Number":"6340","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20211213.2\r\n- **Date Produced**: December 13, 2021 2:45:43 PM UTC\r\n- **Commit**: bcd6e007b9f53be0a7aff804d5c17ea7e179317b\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.21610.4 to 7.0.0-beta.21613.2][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.21610.4 to 7.0.0-beta.21613.2][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21610.4 to 7.0.0-beta.21613.2][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.21610.4 to 7.0.0-beta.21613.2][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.21610.4 to 7.0.0-beta.21613.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21610.4 to 7.0.0-beta.21613.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/18adc5b...bcd6e00\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6340)","Url":"https://github.com/dotnet/winforms/pull/6340","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6340)"},{"Id":"1079382274","IsPullRequest":false,"CreatedAt":"2021-12-14T06:58:40","Actor":"ArtemTatarinov","Number":"6339","RawContent":null,"Title":"Setting `MainMenuStrip` at the MDI child form several times leads to multiplying `ControlBox` buttons","State":"open","Body":"* .NET Core Version: \r\n7.0\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes, at 4.8\r\n\r\n**Problem description:**\r\nIf the `MainMenuStrip` property of the child MDI `Form` class is set to some `MenuStrip` instance, then set to null, and then is set again to the `MenuStrip` instance, then the `ControlBox` buttons (`System`, `Minimize`, `Restore`, `Close`) are cloned:\r\n\r\n![mdiMultipleButtons](https://user-images.githubusercontent.com/87859299/145946963-0927f397-3db9-4500-a91c-cfb8f91e786a.gif)\r\n\r\nThe handler for this checkbox does the following:\r\n\r\n![image](https://user-images.githubusercontent.com/87859299/145947627-e5e40594-36bd-42cf-97db-04dfb4e55c0e.png)\r\n\r\n**Expected behavior:**\r\nThe set of the `ControlBox` buttons should always be single per window.\r\n\r\n**Minimal repro:**\r\n\r\n1. Run the internal `WinformsControlsTest` test app\r\n2. Click the `MDI Parent` button\r\n3. Check and uncheck the `Set parent menustrip` checkbox several times.","Url":"https://github.com/dotnet/winforms/issues/6339","RelatedDescription":"Open issue \"Setting `MainMenuStrip` at the MDI child form several times leads to multiplying `ControlBox` buttons\" (#6339)"},{"Id":"1079175166","IsPullRequest":true,"CreatedAt":"2021-12-14T00:34:54","Actor":"dreddy-work","Number":"6338","RawContent":null,"Title":"Disable loc on release","State":"closed","Body":"Disable loc in release. Wait on https://ceapex.visualstudio.com/CEINTL/_workitems/edit/531949 to enable in main.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6338)","Url":"https://github.com/dotnet/winforms/pull/6338","RelatedDescription":"Closed or merged PR \"Disable loc on release\" (#6338)"},{"Id":"1079174630","IsPullRequest":true,"CreatedAt":"2021-12-14T00:33:53","Actor":"dreddy-work","Number":"6337","RawContent":null,"Title":"Dev/dreddy/disbalelocon6.0","State":"closed","Body":"Disable loc on release so we can enable it on main.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6337)","Url":"https://github.com/dotnet/winforms/pull/6337","RelatedDescription":"Closed or merged PR \"Dev/dreddy/disbalelocon6.0\" (#6337)"},{"Id":"1079116219","IsPullRequest":true,"CreatedAt":"2021-12-13T23:27:56","Actor":"dreddy-work","Number":"6336","RawContent":null,"Title":"Missing build time changes for 7.0 template","State":"closed","Body":"Template 7.0 addition change in https://github.com/dotnet/winforms/pull/6206\r\n\r\nrequire these build time changes.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6336)","Url":"https://github.com/dotnet/winforms/pull/6336","RelatedDescription":"Closed or merged PR \"Missing build time changes for 7.0 template\" (#6336)"},{"Id":"1076776372","IsPullRequest":false,"CreatedAt":"2021-12-13T23:08:30","Actor":"ArtemTatarinov","Number":"6326","RawContent":null,"Title":"Selected dropdown button in `PropertyGrid` entry has visual artifacts on Windows 11","State":"closed","Body":"* .NET Core Version:\r\n3.0, 3.1, 5.0, 6.0, 7.0\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes, at 4.7.2 and 4.8, but in a bit different manner (see the screenshot below)\r\n\r\n* OS Version:\r\nWindows 11 21H2 22000.318\r\n\r\n**Problem description:**\r\nWhen the drop down button is selected with the mouse cursor, there're some visual artifacts on this button:\r\n![image](https://user-images.githubusercontent.com/87859299/145568114-c12b791c-63f6-43cd-9ca0-5bb52408a55b.png)\r\n\r\nThis button at .NET Framework 4.7.2/4.8 at Windows 11 also have some kinds of disruption:\r\n![image](https://user-images.githubusercontent.com/87859299/145568339-13555736-7ca2-4225-b393-d134617572ce.png)\r\n\r\nGeneral `ComboBox` control and `ComboBox` in the `DataGridViewComboBoxColumn` look fine at Windows 11 though:\r\n![image](https://user-images.githubusercontent.com/87859299/145567247-ff4053d4-131c-4c07-8e44-649d6fe515b9.png)\r\n![image](https://user-images.githubusercontent.com/87859299/145567416-59fc8c7a-1f73-47a8-971e-5b415ad3a427.png)\r\n\r\n**Expected behavior:**\r\nThe button should look the same way it looks at Windows 10:\r\n![image](https://user-images.githubusercontent.com/87859299/145568713-dec53d71-1c85-41d5-b348-4846e69d82da.png)\r\n\r\n**Minimal repro:**\r\n- Build and run the project from the attached zip file at Windows 11\r\n- Click on PropertyGrid entry named `Flag` to make the ComboBox button visible\r\n- Point the mouse cursor at the DropDown opening button (with down arrow)\r\n![button](https://user-images.githubusercontent.com/87859299/145570544-e9ec47ed-cd8f-431c-84d2-833f6d514c7b.gif)\r\n\r\n[TestPgCore.zip](https://github.com/dotnet/winforms/files/7692500/TestPgCore.zip)","Url":"https://github.com/dotnet/winforms/issues/6326","RelatedDescription":"Closed issue \"Selected dropdown button in `PropertyGrid` entry has visual artifacts on Windows 11\" (#6326)"},{"Id":"1079075653","IsPullRequest":true,"CreatedAt":"2021-12-13T22:04:12","Actor":"jbhensley","Number":"6335","RawContent":null,"Title":"Fix Form snap layout when in maximized state","State":"open","Body":"Fixes #6153. \r\n\r\n## Proposed changes\r\n\r\n`System.Windows.Forms.Form` caches size and location upon becoming maximized and restores it when exiting maximized state. This creates a problem when using Windows snap layout since the form will be brought out of a maximized state and \"docked\" to a specific location by Windows only have its size and location subsequently changed to the internally cached values when the form processes `WM_WINDOWPOSCHANGED`.\r\n\r\nIf it were possible to not use internally cached values when coming out of a maximized state due to a snap layout command, this problem should be resolved. It does not appear that Windows provides any way to detect that. Instead, this PR assumes that any position change not initiated by the user or by a programmatic change of `Form.WindowState` is instead initiated by a window manager and cached positional values are not used.\r\n\r\nNote: for determining if the change was initiated by the user, it was observed that a window message of `WM_SYSCOMMAND` containing a `wParam` of `SC_RESTORE` was sent regardless of whether the max/min button was clicked, the title bar was double-clicked, or if the restore command was used from the window's context menu. I was not able to find any way for the user to exit maximized state without triggering the `WM_SYSCOMMAND`. If that were possible, this fix would not work.\r\n\r\n## Customer Impact\r\n\r\nCustomers should observe that `Form` objects respond properly when using snap layout while in a maximized state.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\nRisk is that manner of determining whether `Form` position change is due to Windows snap layout versus user/programmatic change is deficient and does not cover all scenarios.\r\n\r\n## Test methodology\r\n\r\n- Added unit tests to verify expected behavior, including a test that fails under unmodified code but passes with change in place (`Form_Restore_DoesNotRestorePosition_WindowManager`)\r\n- Manually manipulated a `Form` object with the mouse and keyboard to verify behavior\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6335)","Url":"https://github.com/dotnet/winforms/pull/6335","RelatedDescription":"Open PR \"Fix Form snap layout when in maximized state\" (#6335)"},{"Id":"1076830735","IsPullRequest":true,"CreatedAt":"2021-12-13T19:00:08","Actor":"dotnet-maestro[bot]","Number":"6327","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20211210.4\r\n- **Date Produced**: December 10, 2021 11:07:13 PM UTC\r\n- **Commit**: 18adc5b47acce8bb03948baf578fca442d1029d4\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.21608.1 to 7.0.0-beta.21610.4][4]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.21608.1 to 7.0.0-beta.21610.4][4]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21608.1 to 7.0.0-beta.21610.4][4]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.21608.1 to 7.0.0-beta.21610.4][4]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.21608.1 to 7.0.0-beta.21610.4][4]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21608.1 to 7.0.0-beta.21610.4][4]\r\n\r\n[4]: https://github.com/dotnet/arcade/compare/200adbc...18adc5b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6327)\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/6327","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6327)"},{"Id":"1078405026","IsPullRequest":true,"CreatedAt":"2021-12-13T11:19:31","Actor":"Danil-Andrianov","Number":"6334","RawContent":null,"Title":"Fixed unstable Integration tests","State":"open","Body":"Fixes #6333 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Removed unnecessary MonthCalendarDoubleClick test\r\n- Adjusted `CurrentCulture` to \"US\"\r\n- Let occur small inaccuracies in the coordinates in the `MoveMouseToControlAsync`\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- Microsoft Windows [Version 10.0.22000.318]\r\n- .NET Core SDK: 7.0.0-alpha.1.21562.1\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6334)","Url":"https://github.com/dotnet/winforms/pull/6334","RelatedDescription":"Open PR \"Fixed unstable Integration tests\" (#6334)"},{"Id":"1078387572","IsPullRequest":false,"CreatedAt":"2021-12-13T11:03:54","Actor":"Danil-Andrianov","Number":"6333","RawContent":null,"Title":"Some rewritten MAUI tests fails","State":"open","Body":"* .NET Core Version: \r\n7.0.0-alpha.1.21576.4\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\nSome Integration tests occasionally fails.\r\n![image](https://user-images.githubusercontent.com/74228865/145800747-29800083-d024-42d4-b6dc-64e42d29b553.png)\r\n","Url":"https://github.com/dotnet/winforms/issues/6333","RelatedDescription":"Open issue \"Some rewritten MAUI tests fails\" (#6333)"},{"Id":"1077498694","IsPullRequest":true,"CreatedAt":"2021-12-11T10:38:58","Actor":"gpetrou","Number":"6331","RawContent":null,"Title":"Enable nullability in WebBrowserHelper","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in WebBrowserHelper\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6331)","Url":"https://github.com/dotnet/winforms/pull/6331","RelatedDescription":"Open PR \"Enable nullability in WebBrowserHelper\" (#6331)"},{"Id":"1077476691","IsPullRequest":true,"CreatedAt":"2021-12-11T09:05:15","Actor":"gpetrou","Number":"6328","RawContent":null,"Title":"Enable nullability in ArraySubsetEnumerator","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in ArraySubsetEnumerator.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6328)","Url":"https://github.com/dotnet/winforms/pull/6328","RelatedDescription":"Open PR \"Enable nullability in ArraySubsetEnumerator\" (#6328)"},{"Id":"1075553890","IsPullRequest":true,"CreatedAt":"2021-12-09T13:48:21","Actor":"dotnet-maestro[bot]","Number":"6325","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20211208.1\r\n- **Date Produced**: December 8, 2021 7:04:09 PM UTC\r\n- **Commit**: 200adbc809c4451973d1929a53a75502b7cada01\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.21606.6 to 7.0.0-beta.21608.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.21606.6 to 7.0.0-beta.21608.1][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21606.6 to 7.0.0-beta.21608.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.21606.6 to 7.0.0-beta.21608.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.21606.6 to 7.0.0-beta.21608.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21606.6 to 7.0.0-beta.21608.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/5d96978...200adbc\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6325)","Url":"https://github.com/dotnet/winforms/pull/6325","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6325)"},{"Id":"1075170092","IsPullRequest":false,"CreatedAt":"2021-12-09T05:39:12","Actor":"ArtemTatarinov","Number":"6324","RawContent":null,"Title":"Move the rest of duplicate logic of `GetPropertyValue` to base class","State":"open","Body":"We should investigate and refactor the following cases by moving them to the `GetPropertyValue` method of the base class from the children classes:\r\n- `IsInvokePatternAvailablePropertyId` (needs special attention because the `AccessibleObject` class uses a large switch inside the `IsInvokePatternAvailable` property for checking `IsInvokePatternAvailablePropertyId` property, we need to be sure that logic will be still consistent with the children classes)\r\n- `LegacyIAccessibleStatePropertyId`\r\n- `LegacyIAccessibleValuePropertyId`\r\n- `LegacyIAccessibleRolePropertyId`\r\n- `IsSelectionItemPatternAvailablePropertyId` at the `ComboBoxItemAccessibleObject` class and similar scenarios (check consistency with the `IsPatternSupported` method of the child class)\r\n- `IsLegacyIAccessiblePatternAvailablePropertyId` at the `DropDownButtonAccessibleObject` class and similar scenarios\r\n- `IsTablePatternAvailablePropertyId` at the `PropertyGridViewAccessibleObject` class and similar scenarios\r\n- `IsGridPatternAvailablePropertyId` at the `PropertyGridViewAccessibleObject` class and similar scenarios\r\n- `IsExpandCollapsePatternAvailablePropertyId` at the `ToolStripItemAccessibleObject` class and similar scenarios\r\n\r\nOriginal issue:\r\n- #5494\r\n\r\nOriginal PR: \r\n- #5745\r\n\r\nRelated issues:\r\n- #6103\r\n- #6236","Url":"https://github.com/dotnet/winforms/issues/6324","RelatedDescription":"Open issue \"Move the rest of duplicate logic of `GetPropertyValue` to base class\" (#6324)"},{"Id":"1075067382","IsPullRequest":false,"CreatedAt":"2021-12-09T02:22:18","Actor":"RussKie","Number":"6323","RawContent":null,"Title":"Switch to net7.0 tfm","State":"open","Body":"* dotnet/runtime and dotnet/aspnetcore have already switched over, e.g. https://github.com/dotnet/aspnetcore/blob/main/eng/Versions.props#L46. See https://github.com/dotnet/aspnetcore/pull/36328/commits/5c4e769b076a37b65b310d8f792a9d4a40d06bad for more details.\r\n* remove all non dotnet7 NuGet feeds","Url":"https://github.com/dotnet/winforms/issues/6323","RelatedDescription":"Open issue \"Switch to net7.0 tfm\" (#6323)"},{"Id":"1075049258","IsPullRequest":false,"CreatedAt":"2021-12-09T01:50:25","Actor":"Amy-Li03","Number":"6322","RawContent":null,"Title":"The ToolStripButton borders have low color contrast ratio in high contrast mode on win11 OS","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n* OS Version: Win11\r\n* .NET Core Version: \r\n.NET Core SDK: 7.0.0-alpha.1.21568.2\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n* More info: \r\n1. There is a known issue: [6220](https://github.com/dotnet/winforms/issues/6220) about this on Win10 OS\r\n2. This issue is reproducing when high contrast is Aquatic/Dusk/Night sky\r\n3. This issue doesn't repro when high contrast is Desert\r\n\r\n**Minimal repro:**\r\n1. Create a Winforms application with ToolStrip added\r\n2. Set ToolStrip.RenderMode as **System**\r\n3. Add a toolStripbutton for ToolStrip and set its Enabled=True, Checked=True\r\n4. Enable high contrast mode\r\n4. Run the app and launch Accessibility Insights for Windows tool\r\n\r\n**Actual behavior:**\r\nHigh contrast: Aquatic\r\n![image](https://user-images.githubusercontent.com/62929087/145318964-e54e5b2e-cf7e-44dd-bcaa-caf1084fd844.png)\r\n\r\nHigh contrast: Dusk\r\n![image](https://user-images.githubusercontent.com/62929087/145318978-415dabee-2a01-49ca-84f3-a73b67198daa.png)\r\n\r\nHigh contrast: Night sky\r\n![image](https://user-images.githubusercontent.com/62929087/145318992-b3ad18b4-c65e-4757-a431-2a2d045b7aa3.png)\r\n\r\n**Expected behavior:**\r\nThe color contrast ratio should greater than 3:1","Url":"https://github.com/dotnet/winforms/issues/6322","RelatedDescription":"Open issue \"The ToolStripButton borders have low color contrast ratio in high contrast mode on win11 OS\" (#6322)"}],"ResultType":"GitHubIssue"}},"RunOn":"2021-12-16T05:31:03.5630406Z","RunDurationInMilliseconds":593}