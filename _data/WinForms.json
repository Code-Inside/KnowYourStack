{"Data":{"GitHub":{"Issues":[{"Id":"1487780802","IsPullRequest":true,"CreatedAt":"2022-12-10T01:50:33","Actor":"elachlan","Number":"8358","RawContent":null,"Title":"Cleanup explicit `EmbeddedResource` items in `System.Windows.Forms.Design.csproj`","State":"open","Body":"For `System.Windows.Forms.Design` this uses globbing to add the Embedded Resources instead of explicit items.\r\n\r\nIf this goes okay, I will look into the rest of the projects in the solution.\r\n\r\nRelated: #49\r\n\r\nReference:\r\nhttps://stackoverflow.com/questions/46584499/how-to-add-a-glob-for-resx-files-for-new-sdk-csproj-file\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8358)","Url":"https://github.com/dotnet/winforms/pull/8358","RelatedDescription":"Open PR \"Cleanup explicit `EmbeddedResource` items in `System.Windows.Forms.Design.csproj`\" (#8358)"},{"Id":"1487469906","IsPullRequest":false,"CreatedAt":"2022-12-09T21:22:33","Actor":"dreddy-work","Number":"8357","RawContent":null,"Title":"[Tracking] HashTable/ArrayList replacement in Winforms","State":"open","Body":"While replacing HashSet and ArrayList we found scenarios where replacements from Generics are not functionally equivalent with non-generics. ex: [HashTable/ArrayLaist replacement in Winforms](https://github.com/dotnet/winforms/pull/8235/files#r1044787174). \r\n\r\nWe are going to do a quick review around [here](https://github.com/dotnet/winforms/issues/8140) and [here](https://github.com/dotnet/winforms/issues/8143) and provide further guidance/helpers to make sure replacements are smooth.\r\n\r\nrelated #8143 , #8140  \r\n\r\nCommunity and primarily @elachlan , @Jericho , @hughbe @gpetrou that are helping in this space, can you help us on [these](https://github.com/dotnet/winforms/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22) meanwhile?","Url":"https://github.com/dotnet/winforms/issues/8357","RelatedDescription":"Open issue \"[Tracking] HashTable/ArrayList replacement in Winforms\" (#8357)"},{"Id":"1486727757","IsPullRequest":true,"CreatedAt":"2022-12-09T13:35:12","Actor":"dotnet-maestro[bot]","Number":"8356","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20221209.1\r\n- **Date Produced**: December 9, 2022 12:06:07 PM UTC\r\n- **Commit**: d76ddf37da0a6e3dbcb66d571725299633f741a0\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/5316939...d76ddf3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8356)","Url":"https://github.com/dotnet/winforms/pull/8356","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8356)"},{"Id":"1486726382","IsPullRequest":true,"CreatedAt":"2022-12-09T13:03:53","Actor":"dotnet-maestro[bot]","Number":"8355","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20221208.2\r\n- **Date Produced**: December 8, 2022 5:27:27 PM UTC\r\n- **Commit**: 2473ebd41195d623c82e351242d8cdc64bb3fd34\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.22606.1 to 8.0.0-beta.22608.2][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.22606.1 to 8.0.0-beta.22608.2][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.22606.1 to 8.0.0-beta.22608.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.22606.1 to 8.0.0-beta.22608.2][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.22606.1 to 8.0.0-beta.22608.2][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.22606.1 to 8.0.0-beta.22608.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/513428e...2473ebd\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8355)","Url":"https://github.com/dotnet/winforms/pull/8355","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#8355)"},{"Id":"1486311566","IsPullRequest":false,"CreatedAt":"2022-12-09T08:26:27","Actor":"kirsan31","Number":"8354","RawContent":null,"Title":"local variables in WinForms projects are not captured by debugger","State":"open","Body":"Created based on [this](https://github.com/dotnet/winforms/issues/8348#issuecomment-1343424116) discussion.\r\n\r\n### .NET version\r\n\r\n`net6.0-windows; net7.0-windows; net472`\r\n\r\n### V.S.\r\n\r\n```\r\nMicrosoft Visual Studio Community 2022\r\nVersion 17.4.2\r\nVisualStudio.17.Release/17.4.2+33122.133\r\nMicrosoft .NET Framework\r\nVersion 4.8.09032\r\n```\r\n\r\n17.4.1 and 17.5.p1 - same behavior.\r\n\r\n### Windows.\r\n\r\n```\r\nOS Name\tMicrosoft Windows 11 Home\r\nVersion\t10.0.22621 Build 22621\r\n```\r\n\r\n### Issue description\r\n\r\nV.S. Debugger not capturing local variables in any WinForms .Net / .net framework projects. In console projects all are ok: \r\n![Snipaste_2022-12-08_08-40-36](https://user-images.githubusercontent.com/17767561/206388114-1ad2e844-a614-4a1d-863f-c59a4af11542.png)\r\nReset settings and repair installation - nothing helps.\r\n\r\ndevelopercommunity issue: https://developercommunity.visualstudio.com/t/Net-local-variables-not-captured-by-deb/10216016\r\n\r\n\r\n### Steps to reproduce\r\n\r\nAny WinForms project.","Url":"https://github.com/dotnet/winforms/issues/8354","RelatedDescription":"Open issue \"local variables in WinForms projects are not captured by debugger\" (#8354)"},{"Id":"1485922171","IsPullRequest":true,"CreatedAt":"2022-12-09T04:00:26","Actor":"elachlan","Number":"8353","RawContent":null,"Title":"Refactor `DesignerSerializationManager` to replace `HashTable` and enable Nullability","State":"open","Body":"Refactored to replace HashTable\r\nRefactored for null-ability annotations\r\nGeneral code cleanup\r\n\r\nDependent on runtime changes in: https://github.com/dotnet/runtime/pull/79429\r\n\r\nRelated: #8342, #8143\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8353)","Url":"https://github.com/dotnet/winforms/pull/8353","RelatedDescription":"Open PR \"Refactor `DesignerSerializationManager` to replace `HashTable` and enable Nullability\" (#8353)"},{"Id":"1477911209","IsPullRequest":true,"CreatedAt":"2022-12-08T18:03:35","Actor":"elachlan","Number":"8332","RawContent":null,"Title":"Refactor `SerializationResourceManager` to use `Dictionary` instead of `HashTable`","State":"closed","Body":"- Refactored `ResourceCodeDomSerializer.SerializationResourceManager` to replace usages of `Hashtable`. \r\n- Refactored `ResXResourceReader` to use `Dictionary` instead of `ListDictionary`\r\n\r\nRelated: #8143\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8332)","Url":"https://github.com/dotnet/winforms/pull/8332","RelatedDescription":"Closed or merged PR \"Refactor `SerializationResourceManager` to use `Dictionary` instead of `HashTable`\" (#8332)"},{"Id":"1478084067","IsPullRequest":true,"CreatedAt":"2022-12-08T16:44:33","Actor":"elachlan","Number":"8337","RawContent":null,"Title":"Refactor `CodeDomDesignerLoader` to replace `HashTable` and `ArrayList` usages","State":"closed","Body":"Related: #8143, #8140\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8337)","Url":"https://github.com/dotnet/winforms/pull/8337","RelatedDescription":"Closed or merged PR \"Refactor `CodeDomDesignerLoader` to replace `HashTable` and `ArrayList` usages\" (#8337)"},{"Id":"1484598496","IsPullRequest":true,"CreatedAt":"2022-12-08T13:34:22","Actor":"dotnet-maestro[bot]","Number":"8352","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20221207.6\r\n- **Date Produced**: December 8, 2022 4:54:14 AM UTC\r\n- **Commit**: 531693977729e675bd330b2929f1a516727ed94e\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/ffffc4b...5316939\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8352)","Url":"https://github.com/dotnet/winforms/pull/8352","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8352)"},{"Id":"1483895214","IsPullRequest":true,"CreatedAt":"2022-12-08T07:06:31","Actor":"NikitaSemenovAkvelon","Number":"8351","RawContent":null,"Title":"Changed type of the `handle` parameter from `IntPtr` to  `HWND` in the `Control.ReleaseUiaProvider` method","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #8217\r\n\r\n\r\n## Proposed changes\r\n\r\n- Changed type to `HWND`.\r\n- Refactored `Control.HWNDInternal` property to remove extra convert.\r\n- Used `HWND` value instead of `Handle`.\r\n- Used `HWND.Null` value instead of `IntPtr.Zero`.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Method becomes more clear and an argument type is unified.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual\r\n- Unit tests\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n- Inspect \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n.NET SDK:\r\n Version:   8.0.100-alpha.1.22512.5\r\n Commit:    1b80461e45\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.22621\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8351)","Url":"https://github.com/dotnet/winforms/pull/8351","RelatedDescription":"Open PR \"Changed type of the `handle` parameter from `IntPtr` to  `HWND` in the `Control.ReleaseUiaProvider` method\" (#8351)"},{"Id":"1483381548","IsPullRequest":false,"CreatedAt":"2022-12-08T02:07:40","Actor":"Olina-Zhang","Number":"8350","RawContent":null,"Title":"Update Winforms C#/VB templates designer code in InitializeComponent() for modernized CodeDom Serialization","State":"open","Body":"### .NET version\r\n\r\n8.0.100-alpha.1.22607.6\r\n\r\n### Did it work in .NET Framework?\r\n\r\nN/A\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nN/A\r\n\r\n### Issue description\r\nWinForms Designer GH https://github.com/microsoft/winforms-designer/pull/4425  for OutOf-Proc Designer had modernized CodeDom serialization,  code for `InitializeComponent()`, is generated taking into account .editorconfig preferences and  `<ImplicitUsings>enable</ImplicitUsings>` project property. However, Winforms C#/VB templates do not respect these settings.\r\n\r\n**Template Winforms C# designer code:** --- need to update\r\n![image](https://user-images.githubusercontent.com/26474449/206338199-235a20df-c947-45df-9441-81c75e1c5694.png)\r\nAfter added a button with modernized CodeDom serialized code\r\n![image](https://user-images.githubusercontent.com/26474449/206338402-7770a982-d9b4-490b-807f-996e8a0429c3.png)\r\n\r\n**Template Winforms VB designer code:** --- need to update\r\n![image](https://user-images.githubusercontent.com/26474449/206338507-f8983ffe-3021-4ca1-9af3-684ba8c21eb5.png)\r\nAfter added a button with modernized CodeDom serialized code\r\n![image](https://user-images.githubusercontent.com/26474449/206338545-4db2622b-87e8-4850-b25d-d6b414006990.png)\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Just create a Winforms .Net C#/VB application\r\n2. Go to Form designer file, check the code in `InitializeComponent()`","Url":"https://github.com/dotnet/winforms/issues/8350","RelatedDescription":"Open issue \"Update Winforms C#/VB templates designer code in InitializeComponent() for modernized CodeDom Serialization\" (#8350)"},{"Id":"1481308276","IsPullRequest":false,"CreatedAt":"2022-12-08T00:58:03","Actor":"vsfeedback","Number":"8344","RawContent":null,"Title":"A display problem when use Gdiplus","State":"closed","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/A-display-proplem-when-use-Gdiplus/10220512)._\r\n\r\n---\r\n![form1.png](https://aka.ms/dc/image?name=Bddea386e036f4bc08adc9ae9722ef792638056713659906243_form1.png&tid=ddea386e036f4bc08adc9ae9722ef792638056713659906243)\r\n\r\nA simple C# project (6 files)\r\n[Form1.cs](https://aka.ms/dc/file?name=Be908c55247e244edaef1b2c0806885b3638056716931924672_Form1.cs&tid=e908c55247e244edaef1b2c0806885b3638056716931924672)\r\n[Form1.Designer.cs](https://aka.ms/dc/file?name=B547bdb9bb216427193ebafc624104e18638056717117862986_Form1.Designer.cs&tid=547bdb9bb216427193ebafc624104e18638056717117862986)\r\n[Form1.resx](https://aka.ms/dc/file?name=B7ebe38ef29ea4d798bb1c78163d46eab638056717227058430_Form1.resx&tid=7ebe38ef29ea4d798bb1c78163d46eab638056717227058430)\r\n[Program.cs](https://aka.ms/dc/file?name=B71a3e80a28c44e28834c77603a0fca7c638056717360528177_Program.cs&tid=71a3e80a28c44e28834c77603a0fca7c638056717360528177)\r\n[WinFormsApp1.csproj](https://aka.ms/dc/file?name=B0c86b5af9096436ebf2beb978021d1a2638056717496266632_WinFormsApp1.csproj&tid=0c86b5af9096436ebf2beb978021d1a2638056717496266632)\r\n[WinFormsApp1.sln](https://aka.ms/dc/file?name=B8e8897fd16534774bdb402d599c4164f638056717816317595_WinFormsApp1.sln&tid=8e8897fd16534774bdb402d599c4164f638056717816317595)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/8344","RelatedDescription":"Closed issue \"A display problem when use Gdiplus\" (#8344)"},{"Id":"1483150780","IsPullRequest":true,"CreatedAt":"2022-12-07T23:55:41","Actor":"dreddy-work","Number":"8349","RawContent":null,"Title":"Fix scaling anchors in PMv2 applications.","State":"open","Body":"Fixes #8266.\r\n\r\nIn PermonV2 mode applications, when moved from one monitor to the other, Form/Container is scaled with scale factor computed with respect to new DPI on the monitor. However, scaling ratio between non-client and client area is not linear. This is causing few pixels variance when anchors are also scaled with same scale factor.\r\nAnchors are relative to display rectangle. Hence, making change to computing anchor scale factor with respect to change in DisplayRect instead of change in the bounds (a.k.a: scale factor computed with respect to new DPI).\r\n\r\nThis PR follows #8201.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8349)","Url":"https://github.com/dotnet/winforms/pull/8349","RelatedDescription":"Open PR \"Fix scaling anchors in PMv2 applications.\" (#8349)"},{"Id":"1480887121","IsPullRequest":true,"CreatedAt":"2022-12-07T23:02:47","Actor":"elachlan","Number":"8343","RawContent":null,"Title":"Enable nullable reference types for `System.Windows.Forms.Design`","State":"closed","Body":"PR enables nullability at the project level and sets the nullable annotation context to disabled where the code does not compile without warnings.\r\n\r\n- Files were manually changed to add the `#nullable disable` annotation.\r\n- Some files were changed to remove `#nullable enable` annotation.\r\n- No other changes were made.\r\n\r\n\r\nRelated: #8342, #1107\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8343)","Url":"https://github.com/dotnet/winforms/pull/8343","RelatedDescription":"Closed or merged PR \"Enable nullable reference types for `System.Windows.Forms.Design`\" (#8343)"},{"Id":"1483012626","IsPullRequest":false,"CreatedAt":"2022-12-07T22:40:27","Actor":"kirsan31","Number":"8348","RawContent":null,"Title":"Designer can't resolve client/server nuget library in some cases depend on assembly name","State":"open","Body":"### Environment\r\n\r\nMicrosoft Visual Studio Community 2022\r\nVersion 17.4.2\r\nVisualStudio.17.Release/17.4.2+33122.133\r\nMicrosoft .NET Framework\r\nVersion 4.8.09032\r\n\r\n### .NET version\r\n\r\n.Net6 .Net7\r\n\r\n### Issue description\r\n\r\nWe had a long [investigation and discussion](https://github.com/KlausLoeffelmann/NetControlDesigners/pull/6) with @KlausLoeffelmann  why in chart control I can't use client/server technique of the new designer. When all in one assembly all +- working.\r\nWhen I separate one of the custom editor to client side assembly - this editor stopped working.\r\nSame with server when I separate designer and serializer to server side assembly - both stopped working.\r\n\r\nFor simplicity, we will only check the client side.\r\nThe editor is simple:\r\n```cs\r\ninternal class ImageValueEditor : FileNameEditor\r\n{\r\n    public override bool GetPaintValueSupported(ITypeDescriptorContext context)\r\n    {\r\n        return true;\r\n    }\r\n}\r\n```\r\nError:\r\n![image](https://user-images.githubusercontent.com/17767561/206309144-099e1c18-d315-4597-86b9-7b4d203cd147.png)\r\n\r\nMust be:\r\n![image](https://user-images.githubusercontent.com/17767561/206309055-c1d702a5-5ab8-4186-9a90-d6ddab49a78d.png)\r\n\r\n\r\n### Steps to reproduce\r\n\r\nPull, build, open `Form1` from `DesignerTest` project in designer, drag chart control to it.\r\nThe easiest property to test  our `ImageValueEditor` is `BackImage` property as on screenshots above.\r\n\r\nNot working: https://github.com/kirsan31/winforms-datavisualization/tree/DesignerNotWork\r\nWorking: https://github.com/kirsan31/winforms-datavisualization/tree/0c357fca784c62703918d2bb6e9484a3b72cd817\r\n\r\nThe only [change](https://github.com/kirsan31/winforms-datavisualization/compare/kirsan31:winforms-datavisualization:DesignerTest...DesignerNotWork) is rename of main assembly from `System.Windows.Forms.DataVisualization` to `WinForms.DataVisualization`.\r\n\r\nAfter this change we have two chart controls on the toolbox:\r\n![image](https://user-images.githubusercontent.com/17767561/203862352-4a0f36ad-87ba-47c1-a929-ba33b1bbee4a.png)\r\n_By the way, this is not always the case, sometimes you have to restart the studio several times in order for the nuget variant to appear. I will create a separate issue on this topic..._\r\n\r\nBut with `System.Windows.Forms.DataVisualization` assembly name we always had only one control on the toolbox:\r\n![image](https://user-images.githubusercontent.com/17767561/203863403-f3687942-a62b-432a-b83c-b0da3c0d3724.png)\r\nSo with `System.Windows.Forms.DataVisualization` main assembly name designer simply can't resolve our package :(\r\n\r\n-----------------------------------------------------------------\r\nP.s. Can some one from WinForms team some how ping some one from VS team? I have very specific bug with VS on my laptop: https://developercommunity.visualstudio.com/t/Net-local-variables-not-captured-by-deb/10216016 - local variables not captured by debugger at any projects any more :( I tried everything I could find on the Internet and what came up with it myself - nothing helps. It's a real problem and I don't know what to do :(","Url":"https://github.com/dotnet/winforms/issues/8348","RelatedDescription":"Open issue \"Designer can't resolve client/server nuget library in some cases depend on assembly name\" (#8348)"},{"Id":"1480319888","IsPullRequest":false,"CreatedAt":"2022-12-07T22:21:54","Actor":"dreddy-work","Number":"8341","RawContent":null,"Title":"PMv2 mode application shrink in Size when moved between monitors","State":"closed","Body":"### .NET version\r\n\r\nAll .NET versions including .NET framework\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNo\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nNo\r\n\r\n### Issue description\r\n\r\nIn a PermonitorV2 mode applications, Windows Form when moved between monitors of different DPI settings repetitively, shrinks the Form size and eventually reaches to Zero after few iterations. Please see below gif on how Form's size is impacted when moved between monitors.\r\n\r\n### Steps to reproduce\r\n\r\nClean simple Winforms application running in PermonitorV2 mode. \r\nMultimonitor setup where monitors have different DPI scale settings on them ( i.e 100% and 200%)\r\nRun the app and move between monitors couple of times as shown in gif.\r\n\r\n![FormSizeCache](https://user-images.githubusercontent.com/36968667/206037110-1b9914b5-809f-4b65-bfb5-da0bd477a2ab.gif)\r\n","Url":"https://github.com/dotnet/winforms/issues/8341","RelatedDescription":"Closed issue \"PMv2 mode application shrink in Size when moved between monitors\" (#8341)"},{"Id":"1477964928","IsPullRequest":true,"CreatedAt":"2022-12-07T22:21:53","Actor":"dreddy-work","Number":"8333","RawContent":null,"Title":"Cache Top-level Window Form's size in PMV2 mode applications","State":"closed","Body":"fixes #8341 \r\nWhen `AutoScaleMode` is `Font`, for PMV2 mode applications, and top-level `Form` is moved from one monitor to the other with different DPI settings, we compute the new size based on the scale factor we compute for the `Font` on the new monitor. This sometimes, especially when the DPI setting on those monitors is not multiple of 100s, causes rounding issues in the size computations. Rounding issue gets worse when user move top-level `Form` between monitors multiple times. Caching size for the Form, prevents rounding issues in this scenario.\r\n\r\nAlso, moved high DPI tests into integration tests to run them synchronously and be able to set DpiAwareness on the thread. \r\n\r\nBefore: \r\n![FormSizeCache](https://user-images.githubusercontent.com/36968667/206037091-6448a382-0142-4541-998c-4e5356fbde8e.gif)\r\n\r\nAfter: \r\n![FormSizeCache_2](https://user-images.githubusercontent.com/36968667/206037555-9528b5c5-0e57-43f4-8d12-62e7332a3368.gif)\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8333)","Url":"https://github.com/dotnet/winforms/pull/8333","RelatedDescription":"Closed or merged PR \"Cache Top-level Window Form's size in PMV2 mode applications\" (#8333)"},{"Id":"1482413009","IsPullRequest":true,"CreatedAt":"2022-12-07T21:22:57","Actor":"gpetrou","Number":"8347","RawContent":null,"Title":"Enable nullability in IComPropertyBrowser and ICom2PropertyPageDisplayService","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in IComPropertyBrowser and ICom2PropertyPageDisplayService.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8347)","Url":"https://github.com/dotnet/winforms/pull/8347","RelatedDescription":"Closed or merged PR \"Enable nullability in IComPropertyBrowser and ICom2PropertyPageDisplayService\" (#8347)"},{"Id":"1481881353","IsPullRequest":true,"CreatedAt":"2022-12-07T18:17:28","Actor":"dotnet-maestro[bot]","Number":"8346","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20221206.7\r\n- **Date Produced**: December 7, 2022 5:43:29 AM UTC\r\n- **Commit**: ffffc4ba3c8943588dbb2a776e110ab5a96faf3f\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.22605.5 to 8.0.0-alpha.1.22606.7][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.22605.5 to 8.0.0-alpha.1.22606.7][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22605.5 to 8.0.0-alpha.1.22606.7][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22605.5 to 8.0.0-alpha.1.22606.7][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22605.5 to 8.0.0-alpha.1.22606.7][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.22605.5 to 8.0.0-alpha.1.22606.7][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22605.5 to 8.0.0-alpha.1.22606.7][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.22605.5 to 8.0.0-alpha.1.22606.7][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.22605.5 to 8.0.0-alpha.1.22606.7][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.22605.5 to 8.0.0-alpha.1.22606.7][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22605.5 to 8.0.0-alpha.1.22606.7][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22605.5 to 8.0.0-alpha.1.22606.7][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22605.5 to 8.0.0-alpha.1.22606.7][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22605.5 to 8.0.0-alpha.1.22606.7][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22605.5 to 8.0.0-alpha.1.22606.7][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.22605.5 to 8.0.0-alpha.1.22606.7][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22605.5 to 8.0.0-alpha.1.22606.7][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22605.5 to 8.0.0-alpha.1.22606.7][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22605.5 to 8.0.0-alpha.1.22606.7][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22605.5 to 8.0.0-alpha.1.22606.7][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22605.5 to 8.0.0-alpha.1.22606.7][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22605.5 to 8.0.0-alpha.1.22606.7][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.22605.5 to 8.0.0-alpha.1.22606.7][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22605.5 to 8.0.0-alpha.1.22606.7][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22605.5 to 8.0.0-alpha.1.22606.7][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22605.5 to 8.0.0-alpha.1.22606.7][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22605.5 to 8.0.0-alpha.1.22606.7][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22605.5 to 8.0.0-alpha.1.22606.7][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22605.5 to 8.0.0-alpha.1.22606.7][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22605.5 to 8.0.0-alpha.1.22606.7][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/21a3647...ffffc4b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8346)","Url":"https://github.com/dotnet/winforms/pull/8346","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8346)"},{"Id":"1481879452","IsPullRequest":true,"CreatedAt":"2022-12-07T13:30:09","Actor":"dotnet-maestro[bot]","Number":"8345","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20221206.1\r\n- **Date Produced**: December 6, 2022 8:03:07 PM UTC\r\n- **Commit**: 513428e6a7a61bc5f4efd82afee219e90df51bfe\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.22605.1 to 8.0.0-beta.22606.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.22605.1 to 8.0.0-beta.22606.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.22605.1 to 8.0.0-beta.22606.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.22605.1 to 8.0.0-beta.22606.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.22605.1 to 8.0.0-beta.22606.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.22605.1 to 8.0.0-beta.22606.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/c96d782...513428e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8345)","Url":"https://github.com/dotnet/winforms/pull/8345","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#8345)"},{"Id":"1480790706","IsPullRequest":false,"CreatedAt":"2022-12-07T03:05:01","Actor":"elachlan","Number":"8342","RawContent":null,"Title":"Enable nullable reference types for `System.Windows.Forms.Design`","State":"open","Body":"### Is your feature request related to a problem? Please describe\n\n`System.Windows.Forms.Design` does not have `<Nullable>enable</Nullable>` in its project file and the individual files aren't marked to enable/disable NRTs.\r\n\r\nI am creating this issue to help track the progress\r\n\r\nI suggest the following plan which has been implemented previously with other projects:\r\n1. Enable Nullable in the project file and marking each file with `#nullable disable` where needed.\r\n2. Community/team PRs to slowly enable nullability in the code base.\r\n\r\nRelated: #1107\n\n### Describe the solution you'd like and alternatives you've considered\n\nN/A\n\n### Will this feature affect UI controls?\n\nN/A","Url":"https://github.com/dotnet/winforms/issues/8342","RelatedDescription":"Open issue \"Enable nullable reference types for `System.Windows.Forms.Design`\" (#8342)"},{"Id":"1478029577","IsPullRequest":true,"CreatedAt":"2022-12-06T22:42:04","Actor":"elachlan","Number":"8335","RawContent":null,"Title":"Refactor `SelectionUIService` to replace `HashTable` usages","State":"closed","Body":"- Refactor `SelectionUIService` to replace usages of `HashTable`\r\n- Refactor classes based on feedback in #8321\r\n\r\nRelated: #8143\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8335)","Url":"https://github.com/dotnet/winforms/pull/8335","RelatedDescription":"Closed or merged PR \"Refactor `SelectionUIService` to replace `HashTable` usages\" (#8335)"},{"Id":"1478025580","IsPullRequest":false,"CreatedAt":"2022-12-06T22:35:06","Actor":"elachlan","Number":"8334","RawContent":null,"Title":"Enable SA1131 - Constant values should appear on the right-hand side of comparisons","State":"closed","Body":"### Is your feature request related to a problem? Please describe\n\nUpdate the global config to enable `SA1131` to help enforce the code style of \"constant values should appear on the right-hand side of comparisons\".\r\n\r\nCode change suggested here:\r\nhttps://github.com/dotnet/winforms/pull/8321/files#r1040067815\n\n### Describe the solution you'd like and alternatives you've considered\n\nN/A\n\n### Will this feature affect UI controls?\n\nN/A","Url":"https://github.com/dotnet/winforms/issues/8334","RelatedDescription":"Closed issue \"Enable SA1131 - Constant values should appear on the right-hand side of comparisons\" (#8334)"},{"Id":"1478045426","IsPullRequest":true,"CreatedAt":"2022-12-06T22:35:05","Actor":"elachlan","Number":"8336","RawContent":null,"Title":"Enable `SA1131` and use analyzer refactor","State":"closed","Body":"Enable [SA1131](https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1131.md) Constant values should appear on the right-hand side of comparisons. Use solution wide analyzer refactor to fix code base.\r\n\r\nFixes #8334\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8336)","Url":"https://github.com/dotnet/winforms/pull/8336","RelatedDescription":"Closed or merged PR \"Enable `SA1131` and use analyzer refactor\" (#8336)"},{"Id":"1477032884","IsPullRequest":true,"CreatedAt":"2022-12-06T22:15:43","Actor":"v-elnovikova","Number":"8329","RawContent":null,"Title":"Adding the ToolStripMenuItem checked state announcement","State":"closed","Body":"Fixes #8307\r\n\r\n## Proposed changes\r\n\r\n- Added Toggle pattern support for menu items with CheckOnClick set to true and pre-checked menu items\r\n- Added unit tests for ToolStripMenuItemAccessibleObject to verify pattern implementation\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Narrator announces checked state of checkable menu item\r\n- Checkable menu item can be checked or unchecked using UI Automation API\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nNo checked state announcement:\r\n![before](https://user-images.githubusercontent.com/113603457/205697530-113681dc-a84d-4ba3-a40d-52c36c665866.png)\r\n\r\nNo toggle pattern support:\r\n![before - no toggle pattern](https://user-images.githubusercontent.com/113603457/205700251-9431495a-667b-4fa0-b3ec-acbbe055a553.png)\r\n\r\n### After\r\n\r\nChecked state announcement:\r\n![after](https://user-images.githubusercontent.com/113603457/205697563-fd558998-6dd3-460c-945c-e3037ae6a1a6.png)\r\n\r\nToggle pattern support: \r\n![after - toggle pattern](https://user-images.githubusercontent.com/113603457/205700318-5e630dfc-6fb4-473c-9180-4fae387e9ac7.png)\r\n\r\n\r\n## Accessibility testing\r\n\r\n- Accessibility Insights for Windows\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- 7.0.0\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8329)","Url":"https://github.com/dotnet/winforms/pull/8329","RelatedDescription":"Closed or merged PR \"Adding the ToolStripMenuItem checked state announcement\" (#8329)"},{"Id":"1480221630","IsPullRequest":true,"CreatedAt":"2022-12-06T21:29:23","Actor":"lonitra","Number":"8340","RawContent":null,"Title":"Add Documentation For Registering Custom Type Converter","State":"open","Body":"Related: #8296\r\n\r\nGetting this process documented in our repo for now. Eventually we may want these docs to be pushed up to the [TypeConverter docs](https://learn.microsoft.com/en-us/dotnet/api/system.componentmodel.typeconverter?view=net-7.0). \n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8340)","Url":"https://github.com/dotnet/winforms/pull/8340","RelatedDescription":"Open PR \"Add Documentation For Registering Custom Type Converter\" (#8340)"},{"Id":"1477342562","IsPullRequest":true,"CreatedAt":"2022-12-06T20:56:06","Actor":"lonitra","Number":"8331","RawContent":null,"Title":"Enable nullability for TestUtilities Project","State":"closed","Body":"Follow up to https://github.com/dotnet/winforms/pull/8251#discussion_r1030797441\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8331)","Url":"https://github.com/dotnet/winforms/pull/8331","RelatedDescription":"Closed or merged PR \"Enable nullability for TestUtilities Project\" (#8331)"},{"Id":"1477287229","IsPullRequest":true,"CreatedAt":"2022-12-06T20:55:45","Actor":"lonitra","Number":"8330","RawContent":null,"Title":"Convert Rest of Com Vtbls to New Pattern","State":"closed","Body":"Follow up from #8311\r\n\r\n- Convert `IDataSource`,`IDataSourceNotify`,`IDataObject`,`IEnumFORMATETC` to our new CCW pattern\r\n- Add explicit conversion for `ComTypes.STGMEDIUM` and Cswin32 `STGMEDIUM`\r\n- Implement the respective Cswin32 interfaces for our managed objects. \r\n   Note: \r\n    - `ComTypes.IDataObject` interface cannot be removed from `DataObject` due to it being a public class\r\n    - `ComTypes.IEnumFORMATETC` interface cannot be removed from `FormatEnumerator` since it is used by `DataObject`\r\n- Remove `EnumFORMATETCWrapper` \n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8330)","Url":"https://github.com/dotnet/winforms/pull/8330","RelatedDescription":"Closed or merged PR \"Convert Rest of Com Vtbls to New Pattern\" (#8330)"},{"Id":"1479064535","IsPullRequest":true,"CreatedAt":"2022-12-06T18:42:52","Actor":"dotnet-maestro[bot]","Number":"8338","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20221205.1\r\n- **Date Produced**: December 5, 2022 2:38:26 PM UTC\r\n- **Commit**: c96d78299a4fe5557bd564e44b63725cdbabd960\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.22579.2 to 8.0.0-beta.22605.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.22579.2 to 8.0.0-beta.22605.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.22579.2 to 8.0.0-beta.22605.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.22579.2 to 8.0.0-beta.22605.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.22579.2 to 8.0.0-beta.22605.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.22579.2 to 8.0.0-beta.22605.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/6b3bad6...c96d782\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8338)","Url":"https://github.com/dotnet/winforms/pull/8338","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#8338)"},{"Id":"1479066437","IsPullRequest":true,"CreatedAt":"2022-12-06T13:35:42","Actor":"dotnet-maestro[bot]","Number":"8339","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20221205.5\r\n- **Date Produced**: December 6, 2022 2:30:43 AM UTC\r\n- **Commit**: 21a3647f09ca92cbf890129d4e917cbd01a1b374\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.22605.1 to 8.0.0-alpha.1.22605.5][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.22605.1 to 8.0.0-alpha.1.22605.5][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22605.1 to 8.0.0-alpha.1.22605.5][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22605.1 to 8.0.0-alpha.1.22605.5][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22605.1 to 8.0.0-alpha.1.22605.5][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.22605.1 to 8.0.0-alpha.1.22605.5][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22605.1 to 8.0.0-alpha.1.22605.5][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.22605.1 to 8.0.0-alpha.1.22605.5][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.22605.1 to 8.0.0-alpha.1.22605.5][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.22605.1 to 8.0.0-alpha.1.22605.5][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22605.1 to 8.0.0-alpha.1.22605.5][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22605.1 to 8.0.0-alpha.1.22605.5][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22605.1 to 8.0.0-alpha.1.22605.5][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22605.1 to 8.0.0-alpha.1.22605.5][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22605.1 to 8.0.0-alpha.1.22605.5][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.22605.1 to 8.0.0-alpha.1.22605.5][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22605.1 to 8.0.0-alpha.1.22605.5][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22605.1 to 8.0.0-alpha.1.22605.5][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22605.1 to 8.0.0-alpha.1.22605.5][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22605.1 to 8.0.0-alpha.1.22605.5][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22605.1 to 8.0.0-alpha.1.22605.5][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22605.1 to 8.0.0-alpha.1.22605.5][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.22605.1 to 8.0.0-alpha.1.22605.5][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22605.1 to 8.0.0-alpha.1.22605.5][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22605.1 to 8.0.0-alpha.1.22605.5][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22605.1 to 8.0.0-alpha.1.22605.5][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22605.1 to 8.0.0-alpha.1.22605.5][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22605.1 to 8.0.0-alpha.1.22605.5][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22605.1 to 8.0.0-alpha.1.22605.5][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22605.1 to 8.0.0-alpha.1.22605.5][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/1a37caf...21a3647\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8339)","Url":"https://github.com/dotnet/winforms/pull/8339","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8339)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-12-10T03:32:03.9680671Z","RunDurationInMilliseconds":526}