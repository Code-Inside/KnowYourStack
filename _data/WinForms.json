{"Data":{"GitHub":{"Issues":[{"Id":"3061607183","IsPullRequest":true,"CreatedAt":"2025-05-14T02:51:22","Actor":"dotnet-maestro[bot]","Number":"13454","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/arcade/blob/main/Documentation/UnifiedBuild/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250513.4](https://dev.azure.com/dnceng/internal/_build/results?buildId=2708379)\n- **Date Produced**: May 13, 2025 11:18:52 PM UTC\n- **Commit Diff**: [8577847...5d437e9](https://github.com/dotnet/dotnet/compare/85778473549347b3e4bad3ea009e9438df7b11bb...5d437e96e412b189af05abb84753996de9aa698f)\n- **Commit**: [5d437e96e412b189af05abb84753996de9aa698f](https://github.com/dotnet/dotnet/commit/5d437e96e412b189af05abb84753996de9aa698f)\n- **Branch**: main\n\n**Updated Dependencies**\n- **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.5.25260.104 to 10.0.0-preview.5.25263.104][1]\n- **System.Resources.Extensions**: [from 10.0.0-preview.5.25260.104 to 10.0.0-preview.5.25263.104][1]\n- **System.Windows.Extensions**: [from 10.0.0-preview.5.25260.104 to 10.0.0-preview.5.25263.104][1]\n- **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.5.25260.104 to 10.0.0-preview.5.25263.104][1]\n- **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.5.25260.104 to 10.0.0-preview.5.25263.104][1]\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.5.25260.104 to 10.0.0-preview.5.25263.104][1]\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.5.25260.104 to 10.0.0-preview.5.25263.104][1]\n- **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.5.25260.104 to 10.0.0-preview.5.25263.104][1]\n- **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.5.25260.104 to 10.0.0-preview.5.25263.104][1]\n- **System.Text.Encodings.Web**: [from 10.0.0-preview.5.25260.104 to 10.0.0-preview.5.25263.104][1]\n- **System.Text.Json**: [from 10.0.0-preview.5.25260.104 to 10.0.0-preview.5.25263.104][1]\n- **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.5.25260.104 to 10.0.0-preview.5.25263.104][1]\n- **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.5.25260.104 to 10.0.0-preview.5.25263.104][1]\n- **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.5.25260.104 to 10.0.0-preview.5.25263.104][1]\n- **System.CodeDom**: [from 10.0.0-preview.5.25260.104 to 10.0.0-preview.5.25263.104][1]\n- **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.5.25260.104 to 10.0.0-preview.5.25263.104][1]\n- **System.Formats.Nrbf**: [from 10.0.0-preview.5.25260.104 to 10.0.0-preview.5.25263.104][1]\n- **System.IO.Hashing**: [from 10.0.0-preview.5.25260.104 to 10.0.0-preview.5.25263.104][1]\n- **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25260.104 to 10.0.0-beta.25263.104][1]\n- **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25260.104 to 10.0.0-beta.25263.104][1]\n- **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25260.104 to 10.0.0-beta.25263.104][1]\n- **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25260.104 to 10.0.0-beta.25263.104][1]\n- **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25260.104 to 10.0.0-beta.25263.104][1]\n- **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25260.104 to 10.0.0-beta.25263.104][1]\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/8577847354...5d437e96e4\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13454)","Url":"https://github.com/dotnet/winforms/pull/13454","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13454)"},{"Id":"3061644938","IsPullRequest":true,"CreatedAt":"2025-05-14T02:37:45","Actor":"Zheng-Li01","Number":"13455","RawContent":null,"Title":"Add code coverage for CheckBox","State":"open","Body":"Related https://github.com/dotnet/winforms/issues/13442\r\n## Proposed changes\r\nAdd unit test file: CheckBoxTests.cs for Internal methods of the CheckBox.cs\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13455)","Url":"https://github.com/dotnet/winforms/pull/13455","RelatedDescription":"Open PR \"Add code coverage for CheckBox\" (#13455)"},{"Id":"3061603004","IsPullRequest":true,"CreatedAt":"2025-05-14T02:02:32","Actor":"dotnet-maestro[bot]","Number":"13453","RawContent":null,"Title":"[release/9.0] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:92989bf7-cdf9-483d-64c5-08dcbc356d11)\n## From https://github.com/dotnet/arcade\n- **Subscription**: [92989bf7-cdf9-483d-64c5-08dcbc356d11](https://maestro.dot.net/subscriptions?search=92989bf7-cdf9-483d-64c5-08dcbc356d11)\n- **Build**: [20250513.2](https://dev.azure.com/dnceng/internal/_build/results?buildId=2708360)\n- **Date Produced**: May 13, 2025 6:46:00 PM UTC\n- **Commit**: [ac63dcf2791c32bf2102fd2b5ebb46479bd48a83](https://github.com/dotnet/arcade/commit/ac63dcf2791c32bf2102fd2b5ebb46479bd48a83)\n- **Branch**: refs/heads/release/9.0\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.25255.5 to 9.0.0-beta.25263.2][1]\n  - **Microsoft.DotNet.CMake.Sdk**: [from 9.0.0-beta.25255.5 to 9.0.0-beta.25263.2][1]\n  - **Microsoft.DotNet.GenFacades**: [from 9.0.0-beta.25255.5 to 9.0.0-beta.25263.2][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.25255.5 to 9.0.0-beta.25263.2][1]\n  - **Microsoft.DotNet.RemoteExecutor**: [from 9.0.0-beta.25255.5 to 9.0.0-beta.25263.2][1]\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.25255.5 to 9.0.0-beta.25263.2][1]\n\n[1]: https://github.com/dotnet/arcade/compare/1cfa39f82d...ac63dcf279\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:92989bf7-cdf9-483d-64c5-08dcbc356d11)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13453)","Url":"https://github.com/dotnet/winforms/pull/13453","RelatedDescription":"Open PR \"[release/9.0] Update dependencies from dotnet/arcade\" (#13453)"},{"Id":"3061334347","IsPullRequest":true,"CreatedAt":"2025-05-14T01:03:24","Actor":"vseanreesermsft","Number":"13452","RawContent":null,"Title":"Merging internal commits for release/9.0","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13452)","Url":"https://github.com/dotnet/winforms/pull/13452","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/9.0\" (#13452)"},{"Id":"3061321034","IsPullRequest":true,"CreatedAt":"2025-05-14T01:02:05","Actor":"vseanreesermsft","Number":"13451","RawContent":null,"Title":"Merging internal commits for release/8.0","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13451)","Url":"https://github.com/dotnet/winforms/pull/13451","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/8.0\" (#13451)"},{"Id":"3060689895","IsPullRequest":false,"CreatedAt":"2025-05-13T16:57:58","Actor":"KlausLoeffelmann","Number":"13450","RawContent":null,"Title":"Let's consider to rename `ScreenCaptureMode` into `FormScreenCaptureMode`","State":"open","Body":"This is related to #13258.\n\nWhile implementing this property, which by the way works amazingly well for Form, see GIF below, I was wondering:\n\n![Image](https://github.com/user-attachments/assets/4cf06edf-59d1-4ae7-b488-4685031040f4)\n\nSince, as I predicted, this is working only on Top-Level Windows, which equals \"Form\" in WinForms, and we also already have the properties `FormCornerPreference`, `FormBorderColor`, `FormCaptionBackColor`, `FormCaptionTextColor` if we should rename:\n\n`ScreenCaptionMode` -> `FormScreenCaptureMode`\n\nBut I _would_ actually rather leave the enum like this:\n\n```\nnamespace System.Windows.Forms;\n\n/// <summary>\n///  Enumeration defining the behavior when a form or control is captured in a screenshot.\n/// </summary>\npublic enum ScreenCaptureMode\n{\n    /// <summary>\n    ///  The form or control can be captured normally in screenshots. Default.\n    /// </summary>\n    Allow = 0,\n\n    /// <summary>\n    ///  The form or control appears blacked out in screenshots.\n    /// </summary>\n    HideContent = 1,\n\n    /// <summary>\n    ///  The form or control appears blurred in screenshots.\n    /// Requires Windows 10 version 2004 or higher.\n    /// </summary>\n    HideWindow = 2\n}\n```\n\n","Url":"https://github.com/dotnet/winforms/issues/13450","RelatedDescription":"Open issue \"Let's consider to rename `ScreenCaptureMode` into `FormScreenCaptureMode`\" (#13450)"},{"Id":"3059314158","IsPullRequest":true,"CreatedAt":"2025-05-13T09:07:55","Actor":"DJm00n","Number":"13449","RawContent":null,"Title":"Optimize icon rendering: simplify logic and eliminate redundant calculations","State":"open","Body":"- Replaced HDC with Graphics in DrawIcon() for smoother GDI+ integration\r\n- Optimized Rectangle management – removed unnecessary variables, directly adjusting sizes\r\n- Simplified stretch logic (Inflate) – replaced complex calculations with a concise method call\r\n- Unified Draw() and DrawUnstretched() – now both directly call DrawIcon() without intermediate processing\r\n- Eliminated duplicate Matrix.Offset calculations, ensuring targetRect is adjusted directly\r\n- No functional changes, just cleaner, more maintainable code 🚀\r\n\r\n## Regression? \r\n\r\n- No\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13449)","Url":"https://github.com/dotnet/winforms/pull/13449","RelatedDescription":"Open PR \"Optimize icon rendering: simplify logic and eliminate redundant calculations\" (#13449)"},{"Id":"3059243170","IsPullRequest":true,"CreatedAt":"2025-05-13T08:42:06","Actor":"DJm00n","Number":"13448","RawContent":null,"Title":"Refactor icon initialization and make use of CreateIconResourceDirectory() for improved efficiency","State":"open","Body":"- Refactored Icon.Initialize() method, replacing manual icon selection logic with LookupIconIdFromDirectoryEx() for better accuracy.\r\n- Introduced CreateIconResourceDirectory(), simplifying RT_GROUP_ICON data creation from ICO file data.\r\n- Removed redundant s_bitDepth field, relying on direct calculations when needed.\r\n- Eliminated unnecessary width/height calculations, replacing them with direct system metric retrieval.\r\n- Optimized memory handling, avoiding unnecessary spans and copies while ensuring correct alignment.\r\n- Functionality remains unchanged, but initialization is now more efficient and maintainable\r\n- Three test cases where changed due to LookupIconIdFromDirectoryEx() icon selection logic (used in Windows)\r\n\r\n## Customer Impact\r\n\r\n- LookupIconIdFromDirectoryEx() should fit icon selection logic used in LoadImage APIs in current and possible future Windows versions.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13448)","Url":"https://github.com/dotnet/winforms/pull/13448","RelatedDescription":"Open PR \"Refactor icon initialization and make use of CreateIconResourceDirectory() for improved efficiency\" (#13448)"},{"Id":"3059152316","IsPullRequest":true,"CreatedAt":"2025-05-13T08:08:20","Actor":"Zheng-Li01","Number":"13447","RawContent":null,"Title":"Add code coverage for RadioButtonRenderer","State":"open","Body":"Related https://github.com/dotnet/winforms/issues/13442\r\nProposed changes\r\nAdd unit test file: RadioButtonRendererTests.cs for public/Internal methods & properties of the RadioButtonRenderer.cs\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13447)","Url":"https://github.com/dotnet/winforms/pull/13447","RelatedDescription":"Open PR \"Add code coverage for RadioButtonRenderer\" (#13447)"},{"Id":"3058565001","IsPullRequest":true,"CreatedAt":"2025-05-13T02:07:13","Actor":"memoarfaa","Number":"13446","RawContent":null,"Title":"Fix DarkMode Button Render","State":"open","Body":"Fix Dark Mode Button Render \r\n\r\nFixes #11949 \r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13446)","Url":"https://github.com/dotnet/winforms/pull/13446","RelatedDescription":"Open PR \"Fix DarkMode Button Render\" (#13446)"},{"Id":"3058457804","IsPullRequest":true,"CreatedAt":"2025-05-13T00:28:12","Actor":"ricardobossan","Number":"13445","RawContent":null,"Title":"Issue 10773 Adds code coverage for public members of `ChangeToolStripParentVerb`.","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nRelated #10773\r\n\r\n## Proposed changes\r\n\r\n- Adds code coverage for public members of `ChangeToolStripParentVerb`.\r\n\r\n## Customer Impact\r\n\r\n- None\r\n\r\n## Regression?\r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Test methodology\r\n\r\n- Unit tests\r\n\r\n## Test environment(s)\r\n\r\n- 10.0.100-preview.3.25201.16\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13445)","Url":"https://github.com/dotnet/winforms/pull/13445","RelatedDescription":"Open PR \"Issue 10773 Adds code coverage for public members of `ChangeToolStripParentVerb`.\" (#13445)"},{"Id":"3049810936","IsPullRequest":false,"CreatedAt":"2025-05-12T21:02:24","Actor":"Wazi2025","Number":"13430","RawContent":null,"Title":"Introduce InvalidImageFormatException in .NET","State":"closed","Body":"### Description\n\nWhen attempting to load a non-image file (e.g., a PDF) using Image.FromFile(), .NET throws an OutOfMemoryException. This is misleading, as the error isn't due to memory exhaustion but rather an invalid file format. \n\n**Proposed Solution:**\n\nIntroduce a new exception type, InvalidImageFormatException, to be thrown when Image.FromFile() encounters a file that isn't a valid image. This would provide clearer, more accurate error handling for developers.\n\n**Benefits:**\n\nImproved Clarity: Developers can more easily identify and handle errors related to invalid image formats.\n\nEnhanced Debugging: Reduces confusion during debugging by providing a specific exception for this scenario.\n\nBetter Practices: Encourages more precise exception handling and promotes best practices in error management.\n\n### Reproduction Steps\n\nusing var image = Image.FromFile(filePath);\n\nIf the file in question is not an image file it throws an : 'System.OutOfMemoryException' in System.Private.Windows.Core.dll\n\n### Expected behavior\n\nIt should throw a new type of Exception instead of OutOfMemoryException.\n\n### Actual behavior\n\nException thrown: 'System.OutOfMemoryException' in System.Private.Windows.Core.dll\n\n### Regression?\n\nNot sure. I only started with C# in February this year.\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n- .NET 9.0.203\n- Windows 10 Home (22H2)\n- x64\n- Don't think so\n- No Blazor \n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/winforms/issues/13430","RelatedDescription":"Closed issue \"Introduce InvalidImageFormatException in .NET\" (#13430)"},{"Id":"3057795688","IsPullRequest":true,"CreatedAt":"2025-05-12T19:23:39","Actor":"mmitche","Number":"13444","RawContent":null,"Title":"Replace arch-specific package properties with arch neutral ones","State":"closed","Body":"This avoids need for a workaround in VMR builds and reduces friction for stable builds. When building non-win-x64 verticals, we end up having to set the x64 runtime pack and x64 VS redist pack properties (stable and non-stable properties) based on other values in the VMR orchestrator. Instead, use MicrosoftNEtCoreAppRef as the stable version property, and MicrosoftNETCorePlatforms as the non-stable one.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13444)","Url":"https://github.com/dotnet/winforms/pull/13444","RelatedDescription":"Closed or merged PR \"Replace arch-specific package properties with arch neutral ones\" (#13444)"},{"Id":"3056931748","IsPullRequest":false,"CreatedAt":"2025-05-12T13:11:30","Actor":"mnvfs","Number":"13443","RawContent":null,"Title":"NullReferenceException in out-of-process designer if resource contains data of type System.Resources.ResXNullRef","State":"open","Body":"### Environment\n\nMicrosoft Visual Studio Professional 2022\nVersion 17.13.6\nVisualStudio.17.Release/17.13.6+35931.197\nMicrosoft .NET Framework\nVersion 4.8.09032\n\n### .NET version\n\n.NET 9.0\n\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\n\n_No response_\n\n### Issue description\n\nIf a resource file within a project contains data of type System.Resources.ResXNullRef the desginer just shows this message:\n\n![Image](https://github.com/user-attachments/assets/f79ce8ca-d43a-432d-8e85-830fe6ee615f)\n\n### Steps to reproduce\n\nOpen and build the sample project, then open Form1.\n\n[project.zip](https://github.com/user-attachments/files/20161884/project.zip)\n\n### Diagnostics\n\n```text\n[15:01:38.274771] fail: StreamJsonRpc.RemoteInvocationException: Object reference not set to an instance of an object.\n                           at StreamJsonRpc.JsonRpc.<InvokeCoreAsync>d__156`1.MoveNext()\n                        --- End of stack trace from previous location where exception was thrown ---\n                           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n                           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n                           at Microsoft.DotNet.DesignTools.Client.Host.ServerHost.<InitializeAsync>d__16.MoveNext()\n                        --- End of stack trace from previous location where exception was thrown ---\n                           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\n                           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\n                           at Microsoft.DotNet.DesignTools.Client.DesignToolsClientLoader.<CreateClientAsync>d__29.MoveNext()\n                        RPC server exception:\n                        System.NullReferenceException: Object reference not set to an instance of an object.\n                              at Microsoft.DotNet.DesignTools.Server.GlobalObjects.CodeDomBuilder.StronglyTypedResourceBuilder.Create(Dictionary`2 resourceList, String baseName, String generatedCodeNamespace, String resourcesNamespace, CodeDomProvider codeProvider, Boolean internalClass, String[]& unmatchable)\n                              at Microsoft.DotNet.DesignTools.Server.GlobalObjects.CodeDomBuilder.StronglyTypedResourceBuilder.Create(Dictionary`2 resourceList, String baseName, String generatedCodeNamespace, CodeDomProvider codeProvider, Boolean internalClass, String[]& unmatchable)\n                              at Microsoft.DotNet.DesignTools.Server.GlobalObjects.ResXGlobalObject.BuildType()\n                              at Microsoft.DotNet.DesignTools.Server.GlobalObjects.ResXGlobalObject.GetObjectType()\n                              at Microsoft.DotNet.DesignTools.Server.GlobalObjects.GlobalObject.get_ObjectType()\n                              at Microsoft.DotNet.DesignTools.Server.GlobalObjects.ResXGlobalObject.get_Children()\n                              at Microsoft.DotNet.DesignTools.Server.GlobalObjects.ProjectResXGlobalObjectProvider.AddResourcesToGlobalCollection(String identifier, GlobalResourceFileData globalResource)\n                              at Microsoft.DotNet.DesignTools.Server.GlobalObjects.ProjectResXGlobalObjectProvider.UpdateGlobalObjectCollectionStoreForSource(String identifier)\n                              at Microsoft.DotNet.DesignTools.Server.GlobalObjects.GlobalObjectProvider.InitializeOrUpdateProjectResources(GlobalResourceFileData[] resources)\n                              at Microsoft.DotNet.DesignTools.Server.GlobalObjects.GlobalObjectService.InitializeOrUpdateGlobalResources(GlobalResourceFileData[] globalResources)\n                              at Microsoft.DotNet.DesignTools.Server.DesignToolsServer.InitializeAsync(ServerInitializationOptions options)\n                              at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\n                              at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)\n```","Url":"https://github.com/dotnet/winforms/issues/13443","RelatedDescription":"Open issue \"NullReferenceException in out-of-process designer if resource contains data of type System.Resources.ResXNullRef\" (#13443)"},{"Id":"3056244563","IsPullRequest":false,"CreatedAt":"2025-05-12T09:09:23","Actor":"LeafShi1","Number":"13442","RawContent":null,"Title":"Ensure that Button-related classes under the namespace \"System.Windows.Forms\" have at least 80% unit test coverage","State":"open","Body":"The codecoverage information cannot found in the [codecov.io](https://app.codecov.io/gh/dotnet/winforms/tree/main/src%2FSystem.Windows.Forms%2FSystem%2FWindows%2FForms%2FControls%2FButtons)\n- [ ] ButtonBaseAdapter.ColorOptions.cs  \n- [ ] ButtonBaseAdapter.LayoutOptions.cs  \n- [ ] ButtonBaseAdapter.cs  \n- [ ] ButtonFlatAdapter.cs  \n- [ ] ButtonPopupAdapter.cs  \n- [ ] ButtonStandardAdapter.cs  \n- [ ] CheckBoxBaseAdapter.cs  \n- [ ] CheckBoxFlatAdapter.cs  \n- [ ] CheckBoxPopupAdapter.cs  \n- [ ] CheckBoxStandardAdapter.cs  \n- [ ] CheckableControlBaseAdapter.cs  \n- [ ] RadioButtonBaseAdapter.cs  \n- [ ] RadioButtonFlatAdapter.cs  \n- [ ] RadioButtonPopupAdapter.cs  \n- [ ] RadioButtonStandardAdapter.cs  \n- [ ] ApplicableToButtonAttribute.cs  \n- [ ] ButtonRenderer.cs  \n- [ ] CheckBox.cs  \n- [ ] CheckBoxRenderer.cs  \n- [ ] FlatButtonAppearance.cs  \n- [ ] FlatButtonAppearanceConverter.cs  \n- [ ] RadioButtonRenderer.cs","Url":"https://github.com/dotnet/winforms/issues/13442","RelatedDescription":"Open issue \"Ensure that Button-related classes under the namespace \"System.Windows.Forms\" have at least 80% unit test coverage\" (#13442)"},{"Id":"3055728895","IsPullRequest":false,"CreatedAt":"2025-05-12T06:00:28","Actor":"KlausLoeffelmann","Number":"13441","RawContent":null,"Title":"[Umbrella] Collect optimization Suggestions/Ideas and phrase out CoPilot Instructions for actually doing the optimization work","State":"open","Body":"Let's collect as list of optimization Issues, where we start phrasing out CoPilot instructions, so that the actual refactoring work can be done by CoPilot, which leaves us more time to concentrate on important domain-specific optimization or feature work.\n\n- [ ] `ColorMatrix` refactoring optimization, as suggested by @JeremyKuhne in https://github.com/dotnet/winforms/pull/13360#discussion_r2082489003\n\n","Url":"https://github.com/dotnet/winforms/issues/13441","RelatedDescription":"Open issue \"[Umbrella] Collect optimization Suggestions/Ideas and phrase out CoPilot Instructions for actually doing the optimization work\" (#13441)"},{"Id":"3055082405","IsPullRequest":true,"CreatedAt":"2025-05-11T16:28:18","Actor":"memoarfaa","Number":"13440","RawContent":null,"Title":"Improve Message Box in WinForms","State":"open","Body":"Fixes #12044\r\n\r\n\r\n## Proposed changes\r\n\r\n- Style, localize Message Box and add some public API to use custom icon.\r\n\r\n\r\n\r\n## Screenshots \r\n\r\n### Before\r\n\r\n![لقطة شاشة 2025-05-11 190703](https://github.com/user-attachments/assets/a857f171-bba9-49b8-b3bd-4f7af9cf1506)\r\n\r\n\r\n### After\r\n\r\n![لقطة شاشة 2025-05-11 190944](https://github.com/user-attachments/assets/0490d29d-40ae-48a1-93b7-8bf996a743ce)\r\n           \r\n  ![Untitledlast](https://github.com/user-attachments/assets/4c90aa9e-b31d-4910-84f0-6ac7c9a7ca1e)\r\n\r\n## Test methodology \r\n\r\nManually tested via scratch project.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13440)","Url":"https://github.com/dotnet/winforms/pull/13440","RelatedDescription":"Open PR \"Improve Message Box in WinForms\" (#13440)"},{"Id":"3054644332","IsPullRequest":true,"CreatedAt":"2025-05-11T02:47:54","Actor":"dotnet-maestro[bot]","Number":"13439","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/arcade/blob/main/Documentation/UnifiedBuild/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250510.4](https://dev.azure.com/dnceng/internal/_build/results?buildId=2706390)\n- **Date Produced**: May 10, 2025 4:43:39 PM UTC\n- **Commit Diff**: [9a0f13b...8577847](https://github.com/dotnet/dotnet/compare/9a0f13b9e9f8d4ac10ad119d90dfc387cb120e9f...85778473549347b3e4bad3ea009e9438df7b11bb)\n- **Commit**: [85778473549347b3e4bad3ea009e9438df7b11bb](https://github.com/dotnet/dotnet/commit/85778473549347b3e4bad3ea009e9438df7b11bb)\n- **Branch**: main\n\n**Updated Dependencies**\n- **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-preview.5.25259.104 to 10.0.0-preview.5.25260.104][1]\n- **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.5.25259.104 to 10.0.0-preview.5.25260.104][1]\n- **System.Resources.Extensions**: [from 10.0.0-preview.5.25259.104 to 10.0.0-preview.5.25260.104][1]\n- **System.Windows.Extensions**: [from 10.0.0-preview.5.25259.104 to 10.0.0-preview.5.25260.104][1]\n- **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.5.25259.104 to 10.0.0-preview.5.25260.104][1]\n- **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.5.25259.104 to 10.0.0-preview.5.25260.104][1]\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.5.25259.104 to 10.0.0-preview.5.25260.104][1]\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.5.25259.104 to 10.0.0-preview.5.25260.104][1]\n- **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.5.25259.104 to 10.0.0-preview.5.25260.104][1]\n- **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.5.25259.104 to 10.0.0-preview.5.25260.104][1]\n- **System.Text.Encodings.Web**: [from 10.0.0-preview.5.25259.104 to 10.0.0-preview.5.25260.104][1]\n- **System.Text.Json**: [from 10.0.0-preview.5.25259.104 to 10.0.0-preview.5.25260.104][1]\n- **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.5.25259.104 to 10.0.0-preview.5.25260.104][1]\n- **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-preview.5.25259.104 to 10.0.0-preview.5.25260.104][1]\n- **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.5.25259.104 to 10.0.0-preview.5.25260.104][1]\n- **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.5.25259.104 to 10.0.0-preview.5.25260.104][1]\n- **System.CodeDom**: [from 10.0.0-preview.5.25259.104 to 10.0.0-preview.5.25260.104][1]\n- **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.5.25259.104 to 10.0.0-preview.5.25260.104][1]\n- **System.Formats.Nrbf**: [from 10.0.0-preview.5.25259.104 to 10.0.0-preview.5.25260.104][1]\n- **System.IO.Hashing**: [from 10.0.0-preview.5.25259.104 to 10.0.0-preview.5.25260.104][1]\n- **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25259.104 to 10.0.0-beta.25260.104][1]\n- **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25259.104 to 10.0.0-beta.25260.104][1]\n- **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25259.104 to 10.0.0-beta.25260.104][1]\n- **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25259.104 to 10.0.0-beta.25260.104][1]\n- **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25259.104 to 10.0.0-beta.25260.104][1]\n- **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25259.104 to 10.0.0-beta.25260.104][1]\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/9a0f13b9e9...8577847354\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13439)","Url":"https://github.com/dotnet/winforms/pull/13439","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13439)"},{"Id":"3053547748","IsPullRequest":true,"CreatedAt":"2025-05-10T02:50:46","Actor":"dotnet-maestro[bot]","Number":"13438","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/arcade/blob/main/Documentation/UnifiedBuild/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250509.4](https://dev.azure.com/dnceng/internal/_build/results?buildId=2705899)\n- **Date Produced**: May 10, 2025 12:34:17 AM UTC\n- **Commit Diff**: [954d615...9a0f13b](https://github.com/dotnet/dotnet/compare/954d6157c9c22c8d8b4faddef70b2b703c65e77e...9a0f13b9e9f8d4ac10ad119d90dfc387cb120e9f)\n- **Commit**: [9a0f13b9e9f8d4ac10ad119d90dfc387cb120e9f](https://github.com/dotnet/dotnet/commit/9a0f13b9e9f8d4ac10ad119d90dfc387cb120e9f)\n- **Branch**: main\n\n**Updated Dependencies**\n- **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-preview.5.25257.112 to 10.0.0-preview.5.25259.104][1]\n- **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.5.25257.112 to 10.0.0-preview.5.25259.104][1]\n- **System.Resources.Extensions**: [from 10.0.0-preview.5.25257.112 to 10.0.0-preview.5.25259.104][1]\n- **System.Windows.Extensions**: [from 10.0.0-preview.5.25257.112 to 10.0.0-preview.5.25259.104][1]\n- **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.5.25257.112 to 10.0.0-preview.5.25259.104][1]\n- **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.5.25257.112 to 10.0.0-preview.5.25259.104][1]\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.5.25257.112 to 10.0.0-preview.5.25259.104][1]\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.5.25257.112 to 10.0.0-preview.5.25259.104][1]\n- **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.5.25257.112 to 10.0.0-preview.5.25259.104][1]\n- **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.5.25257.112 to 10.0.0-preview.5.25259.104][1]\n- **System.Text.Encodings.Web**: [from 10.0.0-preview.5.25257.112 to 10.0.0-preview.5.25259.104][1]\n- **System.Text.Json**: [from 10.0.0-preview.5.25257.112 to 10.0.0-preview.5.25259.104][1]\n- **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.5.25257.112 to 10.0.0-preview.5.25259.104][1]\n- **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-preview.5.25257.112 to 10.0.0-preview.5.25259.104][1]\n- **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.5.25257.112 to 10.0.0-preview.5.25259.104][1]\n- **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.5.25257.112 to 10.0.0-preview.5.25259.104][1]\n- **System.CodeDom**: [from 10.0.0-preview.5.25257.112 to 10.0.0-preview.5.25259.104][1]\n- **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.5.25257.112 to 10.0.0-preview.5.25259.104][1]\n- **System.Formats.Nrbf**: [from 10.0.0-preview.5.25257.112 to 10.0.0-preview.5.25259.104][1]\n- **System.IO.Hashing**: [from 10.0.0-preview.5.25257.112 to 10.0.0-preview.5.25259.104][1]\n- **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25257.112 to 10.0.0-beta.25259.104][1]\n- **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25257.112 to 10.0.0-beta.25259.104][1]\n- **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25257.112 to 10.0.0-beta.25259.104][1]\n- **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25257.112 to 10.0.0-beta.25259.104][1]\n- **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25257.112 to 10.0.0-beta.25259.104][1]\n- **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25257.112 to 10.0.0-beta.25259.104][1]\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/954d6157c9...9a0f13b9e9\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13438)","Url":"https://github.com/dotnet/winforms/pull/13438","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13438)"},{"Id":"3053213959","IsPullRequest":true,"CreatedAt":"2025-05-09T21:19:24","Actor":"ricardobossan","Number":"13437","RawContent":null,"Title":"Unify DesignSurface and TestConsole into DemoConsole","State":"open","Body":"Fixes #13388\r\n\r\n## Proposed changes\r\n\r\n- Renamed files in `DesignSurfaceExt` to match the updated class names from PR #13433\r\n- Moved all code files from `DesignSurfaceExt` into the `DemoConsole` project directory\r\n- Integrated all relevant configuration from `DesignSurfaceExt.csproj` into `DemoConsole.csproj`\r\n- Deleted `DesignSurfaceExt.csproj`\r\n- Merged the contents of `Directory.Build.props` into `DemoConsole.csproj` to consolidate all settings in one place\r\n- Removed the now redundant `Directory.Build.props` file\r\n- Relocated the `DemoConsole` folder up one level to align with other integration test projects\r\n- Deleted the now empty `DesignSurfaceExt` folder\r\n\r\n## Customer Impact\r\n\r\n- None\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Test methodology\r\n\r\n- Manual\r\n\r\n## Test environment(s)\r\n\r\n- 10.0.100-preview.3.25201.16\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13437)","Url":"https://github.com/dotnet/winforms/pull/13437","RelatedDescription":"Open PR \"Unify DesignSurface and TestConsole into DemoConsole\" (#13437)"},{"Id":"3052904590","IsPullRequest":false,"CreatedAt":"2025-05-09T18:29:12","Actor":"WolfgangHG","Number":"13436","RawContent":null,"Title":"AutoScaleMode = \"Font\" and increased text size in windows results in clipped texts","State":"open","Body":"### .NET version\n\n.NET 8.0\n\n### Did it work in .NET Framework?\n\nNot tested/verified\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\nAttached sample is a .NET8 application whose only form is set to `AutoScaleMode = AutoScaleMode.Font`. In the constructor of the form (before doing anything else), I set `this.Font = SystemFonts.MessageBoxFont;`\" (which should be the same as `Application.SetDefaultFont(SystemFonts.MessageBoxFont);`).\n\nThen I change the text size in windows. I have only a screenshot of the german version, but I hope you see which setting is meant (an english screenshot is found e.g. in #3583 - but this issue seems to target a different use case):\n![Image](https://github.com/user-attachments/assets/2f076de4-5dec-4197-8dda-f75eabc6b8a1)\nAnd I restart the app.\n\nThis results in clipped texts for some scalings, for others it seems to work better.\n\nThe method `Form.ScaleControl` is invoked if I change the text scale, and my sample prints the result (and the font size) in a textbox.\n\n\nIt seems the horizontal scaling factor is calculated in a way that might cause clipped texts. I would prefer a \"larger than necessary scale factor\", so that all texts are visible.\n\n\n### Steps to reproduce\n\nThis is the sample: [AutoScaleModeFontTest.zip](https://github.com/user-attachments/files/20127220/AutoScaleModeFontTest.zip)\n\nChange the scaling factor, then start the app.\n\n\nThis is the layout at default **\"100%\"**:\n\n![Image](https://github.com/user-attachments/assets/9dc84958-c502-4db5-bb63-767103ca0760)\n\n\nAt **125%**, the label text is clipped, and the textbox content is not completely visible:\n\n![Image](https://github.com/user-attachments/assets/05870910-b429-4b1b-95f9-47f90c777be0)\n\nFrom here on, Github scales the screenshots again, so click them to see the original size!\n\nAt **150%**, the texts are completely shown, but the gap between the label text and the following textbox is smaller. Same for the textbox content and the right edge:\n\n![Image](https://github.com/user-attachments/assets/fdd9a433-31c7-4ecb-8149-df0fd958c48d)\n\nSame for **175%**:\n\n![Image](https://github.com/user-attachments/assets/84b14a6a-d295-4e76-b6a7-1408af8a174f)\n\n**200%** results in clipped texts again:\n\n![Image](https://github.com/user-attachments/assets/0aef029d-47ca-4280-9f49-25d58fd84cf4)","Url":"https://github.com/dotnet/winforms/issues/13436","RelatedDescription":"Open issue \"AutoScaleMode = \"Font\" and increased text size in windows results in clipped texts\" (#13436)"},{"Id":"3048292055","IsPullRequest":true,"CreatedAt":"2025-05-09T08:11:19","Actor":"LeafShi1","Number":"13426","RawContent":null,"Title":"Update the method GetParentAutoScaleFactor to use container.AutoScaleFactor to get the latest value","State":"closed","Body":"\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #12851\r\n\r\n## Proposed changes\r\n\r\n- Update the method `GetParentAutoScaleFactor` to use `container.AutoScaleFactor` instead of `container._currentAutoScaleFactor `to get the latest value\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- ContainerControl can be scaled correctly when moved from one ControlCollection to another ControlCollection\r\n\r\n## Regression? \r\n\r\n- Yes \r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n![Image](https://github.com/user-attachments/assets/515b40bc-e392-4ce8-9d0f-170ba2088306)\r\n\r\n\r\n### After\r\n\r\n![AfterChanges](https://github.com/user-attachments/assets/54a86f51-9628-4ec7-9d26-ca2709e9fb41)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manually\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .net 10.0.0-preview.5.25252.107\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13426)","Url":"https://github.com/dotnet/winforms/pull/13426","RelatedDescription":"Closed or merged PR \"Update the method GetParentAutoScaleFactor to use container.AutoScaleFactor to get the latest value\" (#13426)"},{"Id":"3051019549","IsPullRequest":true,"CreatedAt":"2025-05-09T06:07:35","Actor":"Zheng-Li01","Number":"13435","RawContent":null,"Title":"Add code coverage for DesignerUtils","State":"open","Body":"Related https://github.com/dotnet/winforms/issues/10773\r\n##\r\nProposed changes\r\nAdd unit test file: DesignerUtilsTests.cs for public methods & properties of the DesignerUtils.cs\r\n\r\n**Note: working on another PR for the remaining test case**\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13435)","Url":"https://github.com/dotnet/winforms/pull/13435","RelatedDescription":"Open PR \"Add code coverage for DesignerUtils\" (#13435)"},{"Id":"3050529554","IsPullRequest":true,"CreatedAt":"2025-05-09T02:49:18","Actor":"dotnet-maestro[bot]","Number":"13434","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/arcade/blob/main/Documentation/UnifiedBuild/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250507.12](https://dev.azure.com/dnceng/internal/_build/results?buildId=2704509)\n- **Date Produced**: May 8, 2025 5:06:54 PM UTC\n- **Commit Diff**: [5e6dacd...954d615](https://github.com/dotnet/dotnet/compare/5e6dacd4d3debda3266224b2a434811c6fa94987...954d6157c9c22c8d8b4faddef70b2b703c65e77e)\n- **Commit**: [954d6157c9c22c8d8b4faddef70b2b703c65e77e](https://github.com/dotnet/dotnet/commit/954d6157c9c22c8d8b4faddef70b2b703c65e77e)\n- **Branch**: main\n\n**Updated Dependencies**\n- **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-preview.5.25257.101 to 10.0.0-preview.5.25257.112][1]\n- **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.5.25257.101 to 10.0.0-preview.5.25257.112][1]\n- **System.Resources.Extensions**: [from 10.0.0-preview.5.25257.101 to 10.0.0-preview.5.25257.112][1]\n- **System.Windows.Extensions**: [from 10.0.0-preview.5.25257.101 to 10.0.0-preview.5.25257.112][1]\n- **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.5.25257.101 to 10.0.0-preview.5.25257.112][1]\n- **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.5.25257.101 to 10.0.0-preview.5.25257.112][1]\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.5.25257.101 to 10.0.0-preview.5.25257.112][1]\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.5.25257.101 to 10.0.0-preview.5.25257.112][1]\n- **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.5.25257.101 to 10.0.0-preview.5.25257.112][1]\n- **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.5.25257.101 to 10.0.0-preview.5.25257.112][1]\n- **System.Text.Encodings.Web**: [from 10.0.0-preview.5.25257.101 to 10.0.0-preview.5.25257.112][1]\n- **System.Text.Json**: [from 10.0.0-preview.5.25257.101 to 10.0.0-preview.5.25257.112][1]\n- **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.5.25257.101 to 10.0.0-preview.5.25257.112][1]\n- **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-preview.5.25257.101 to 10.0.0-preview.5.25257.112][1]\n- **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.5.25257.101 to 10.0.0-preview.5.25257.112][1]\n- **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.5.25257.101 to 10.0.0-preview.5.25257.112][1]\n- **System.CodeDom**: [from 10.0.0-preview.5.25257.101 to 10.0.0-preview.5.25257.112][1]\n- **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.5.25257.101 to 10.0.0-preview.5.25257.112][1]\n- **System.Formats.Nrbf**: [from 10.0.0-preview.5.25257.101 to 10.0.0-preview.5.25257.112][1]\n- **System.IO.Hashing**: [from 10.0.0-preview.5.25257.101 to 10.0.0-preview.5.25257.112][1]\n- **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25257.101 to 10.0.0-beta.25257.112][1]\n- **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25257.101 to 10.0.0-beta.25257.112][1]\n- **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25257.101 to 10.0.0-beta.25257.112][1]\n- **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25257.101 to 10.0.0-beta.25257.112][1]\n- **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25257.101 to 10.0.0-beta.25257.112][1]\n- **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25257.101 to 10.0.0-beta.25257.112][1]\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/5e6dacd4d3...954d6157c9\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13434)","Url":"https://github.com/dotnet/winforms/pull/13434","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13434)"},{"Id":"3050197643","IsPullRequest":true,"CreatedAt":"2025-05-08T23:11:42","Actor":"ricardobossan","Number":"13433","RawContent":null,"Title":"Unify namespaces and class names under DemoConsole","State":"closed","Body":"Related #13388\r\n\r\n## Proposed changes\r\n\r\n- Unifies `DesignSurfaceExt` and `DemoConsole` namespaces under the latter.\r\n- Renames class names where appropriate to reflect the shared project identity, in preparation for relocating all files into the `DemoConsole` folder in a follow-up PR.\r\n\r\n## Customer Impact\r\n\r\n- None\r\n\r\n## Regression?\r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Test environment(s)\r\n\r\n- 10.0.100-preview.3.25201.16\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13433)","Url":"https://github.com/dotnet/winforms/pull/13433","RelatedDescription":"Closed or merged PR \"Unify namespaces and class names under DemoConsole\" (#13433)"},{"Id":"3049962812","IsPullRequest":true,"CreatedAt":"2025-05-08T19:58:41","Actor":"JeremyKuhne","Number":"13432","RawContent":null,"Title":"Throw ExternalException instead of OutOfMemory","State":"open","Body":"GDI+ isn't particularly good at returning errors when it is unable to create internal objects. There are many cases where object creation will fail due to invalid input and higher-level code will get a null and turn it into `Status.OutOfMemory`.\r\n\r\nAs this is a frequent cause of confusion, we're changing this to `ExternalException`, which is already thrown in other code paths. We had already changed the exception message.\r\n\r\nFixes #12627\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13432)","Url":"https://github.com/dotnet/winforms/pull/13432","RelatedDescription":"Open PR \"Throw ExternalException instead of OutOfMemory\" (#13432)"},{"Id":"3049860928","IsPullRequest":true,"CreatedAt":"2025-05-08T19:08:26","Actor":"JeremyKuhne","Number":"13431","RawContent":null,"Title":"Allow IDataObjectAsyncCapability","State":"open","Body":"Chromium based apps don't support file drop without using `IDataObjectAsyncCapability`. This includes the new Outlook.\r\n\r\nTo support this, we'll look for this interface in our current code paths and utilize it. This makes the async operation sync, which works, but isn't ideal. Chromium will pop a dialog that will leave WinForms modal as well until it is responded to.\r\n\r\nIf this behavior creates an issue, it can be disabled with the AppContext switch: \"Windows.DragDrop.DisableSyncOverAsync\"\r\n\r\nIn order to truly support async we're also introducing a new interface to allow calling back off of the UI thread. This will be shipped as experimental for .NET 10 as there is a small risk we'll want to change the API based on real-world feedback. See #13422.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13431)","Url":"https://github.com/dotnet/winforms/pull/13431","RelatedDescription":"Open PR \"Allow IDataObjectAsyncCapability\" (#13431)"},{"Id":"3049777505","IsPullRequest":false,"CreatedAt":"2025-05-08T18:29:07","Actor":"merriemcgaw","Number":"13429","RawContent":null,"Title":"Create new analyzer to check for the correct usage of modal dialogs","State":"open","Body":"This is one place where it is common to see application memory leak.","Url":"https://github.com/dotnet/winforms/issues/13429","RelatedDescription":"Open issue \"Create new analyzer to check for the correct usage of modal dialogs\" (#13429)"},{"Id":"3049771671","IsPullRequest":false,"CreatedAt":"2025-05-08T18:27:07","Actor":"merriemcgaw","Number":"13428","RawContent":null,"Title":"Update Analyzer Test Infrastructure","State":"open","Body":"### .NET version\n\nNew Clipboard analyzers have additional requirements of the test infrastructure.\n\n### Did it work in .NET Framework?\n\nNot tested/verified\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\nA little bit more testing is needed.\n\n### Steps to reproduce\n\nN/A","Url":"https://github.com/dotnet/winforms/issues/13428","RelatedDescription":"Open issue \"Update Analyzer Test Infrastructure\" (#13428)"},{"Id":"3048912740","IsPullRequest":false,"CreatedAt":"2025-05-08T12:51:22","Actor":"SreemonPremkumarMuthukrishnan","Number":"13427","RawContent":null,"Title":"Queries with Nested UITypeEditor and IDesignerHost Access in .NET Core Out-of-Process Designer","State":"open","Body":"### Environment\n\nMicrosoft Visual Studio Professional 2022 (64-bit) - Current\nVersion 17.13.6\n\n### .NET version\n\nBoth .NET 80 and .NET90\n\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\n\n_No response_\n\n### Issue description\n\nI have some queries regarding the usage of UITypeEditor in .NET Core using the out-of-process designer model.\n\n### Case 1: Nested UITypeEditor Usage Without Client Implementation ###\nIn our scenario, we are displaying a property (let’s say PropertyB) with a UITypeEditor inside a PropertyGrid hosted within a custom form — this form is shown from another UITypeEditor property (PropertyA) that is implemented by the client approach.\n\nHere, the UITypeEditor for PropertyB works fine without the client implementation.\n\n**Question:**\nCan we safely use a UITypeEditor for a property inside another UITypeEditor without requiring the client-server approach?\n\n### Case 2: Nested Editor with Client Approach Fails ###\nWhen using the client-server approach for the UITypeEditor of PropertyB, which exists inside another UITypeEditor, the editor for PropertyB does not work correctly.\n\nThis means the nested UITypeEditor for PropertyB fails to function properly when used within the client approach.\n\n**Question:**\nIs there a separate way to implement the client approach for a UITypeEditor for nested property?\n\n### Case 3: Unable to Retrieve IDesignerHost in .NET Core ###\nDue to the issue described in Case 2, I have placed the UITypeEditor for PropertyB in .NET Core control library, where the EditValue method is triggered correctly. However, attempting to retrieve the IDesignerHost using:\n\n```\nIDesignerHost designerHost = provider.GetService(typeof(IDesignerHost)) as IDesignerHost;\n```\n\nalways returns null.\n\n**Note:** \n1. The same logic works as expected in the .NET Framework, where the IDesignerHost is successfully retrieved from the provider.\n\n**Question:**\nCould you please provide any suggestion or solution to get the DesignerHost inside the UITypeEditor?\n\n**Demo Sample:**\n\n[CustomControlLibrary_WithSample&NuGet.zip](https://github.com/user-attachments/files/20102444/CustomControlLibrary_WithSample.NuGet.zip)\n\n**Replication video:**\n\nhttps://github.com/user-attachments/assets/07ee99cd-dfe8-44c4-8e11-f99a87c5efbf\n\n\n### Steps to reproduce\n\n#### Replication: UITypeEditor with Client Approach Not Working ####\n\n1. Open the Designer.\n2. Click on the CustomControl and go to the Properties window.\n3. Open the custom form of the \"PropertyA\" property.\n4. Click the Add button.\n5. Try to edit the \"PropertyBWithClient\" property inside the custom form's property grid.\n\n**Observed Behavior:**\nThe UITypeEditor implemented in the client project does not work.\n\n#### Replication: UITypeEditor in .NET Core Control Library Unable to Get IDesignerHost ####\n\n1. Open the Designer.\n2. Click on the CustomControl and go to the Properties window.\n3. Open the custom form of the \"PropertyA\" property.\n4. Click the Add button.\n5. Try to edit the \"PropertyBWithoutClient\" property inside the custom form's property grid.\n\n**Observed Behavior:**\nIDesignerHost is null when using the UITypeEditor from a .NET Core control library.\n\n### Diagnostics\n\n```text\n\n```","Url":"https://github.com/dotnet/winforms/issues/13427","RelatedDescription":"Open issue \"Queries with Nested UITypeEditor and IDesignerHost Access in .NET Core Out-of-Process Designer\" (#13427)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-05-14T03:30:29.0814779Z","RunDurationInMilliseconds":563}