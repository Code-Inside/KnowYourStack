{"Data":{"GitHub":{"Issues":[{"Id":"1417597783","IsPullRequest":false,"CreatedAt":"2022-10-21T02:19:49","Actor":"Olina-Zhang","Number":"7980","RawContent":null,"Title":"[Accessibility]On Windows high contrast themes, disabled toolStripMenuItem should have disabled checkmark when enabled 'Checked' property ","State":"open","Body":"### .NET version\n\n8.0.100-alpha.1.22514.14 \n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo, it also repro in previous .Net versions\n\n### Issue description\n\nOn Windows high contrast themes, disabled toolStripMenuItem doesn't have disabled checkmark when enabled 'Checked' property \r\n\r\n**Windows default theme**, it is correct:\r\n![image](https://user-images.githubusercontent.com/26474449/197093467-709cf744-9fb0-41d4-85e7-ce19c0898a68.png)\r\n\r\n**Windows 10 high contrast themes:** checkmark icon is not disabled when its toolStripItem \"Options\" is disabled, it has same icon as toolStripItem is not disabled, see comparison in https://github.com/dotnet/winforms/pull/7971#issuecomment-1285723449\r\n![image](https://user-images.githubusercontent.com/26474449/197093595-0200bb5f-ee4f-4969-9f1d-406fe57d5389.png)\r\n\n\n### Steps to reproduce\n\n1. Use attached application: \r\n[WinFormsApp75.zip](https://github.com/dotnet/winforms/files/9835150/WinFormsApp75.zip)\r\n2. Set windows to different HC themes\r\n3. build and run application\r\n4. Observe the checkmark icon for disabled toolStripMenuItem \"Options_Disabled\"","Url":"https://github.com/dotnet/winforms/issues/7980","RelatedDescription":"Open issue \"[Accessibility]On Windows high contrast themes, disabled toolStripMenuItem should have disabled checkmark when enabled 'Checked' property \" (#7980)"},{"Id":"1417513193","IsPullRequest":true,"CreatedAt":"2022-10-21T02:04:56","Actor":"JeremyKuhne","Number":"7979","RawContent":null,"Title":"Update to latest CsWin32","State":"closed","Body":"Fixes #7945.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7979)","Url":"https://github.com/dotnet/winforms/pull/7979","RelatedDescription":"Closed or merged PR \"Update to latest CsWin32\" (#7979)"},{"Id":"1415679097","IsPullRequest":true,"CreatedAt":"2022-10-21T00:34:54","Actor":"dreddy-work","Number":"7973","RawContent":null,"Title":"Fix top-level window size for non-linear dimensions based on AutoScaleMode","State":"closed","Body":"In PermonV2 mode applications, We have been using linear sizes for top-level windows that are provided by the Windows irrespective of the AutoScaleMode.  This has been problematic for AutoScaleMode.Font, where Form scaling should be non-linear given its child controls are scaled non-linearly and depend on the Font that was assigned to Form/child controls.\r\n\r\nWe are making changes to utilize [GetDpiScaledSize](https://learn.microsoft.com/en-us/windows/win32/hidpi/wm-getdpiscaledsize) message and let Windows know that Form may need non-linear sizes depending on AutoScaleMode.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7973)","Url":"https://github.com/dotnet/winforms/pull/7973","RelatedDescription":"Closed or merged PR \"Fix top-level window size for non-linear dimensions based on AutoScaleMode\" (#7973)"},{"Id":"1416265569","IsPullRequest":false,"CreatedAt":"2022-10-21T00:13:13","Actor":"John-Qiao","Number":"7975","RawContent":null,"Title":"SaveFileDialog cannot be opened","State":"closed","Body":"### .NET version\n\n8.0.100-alpha.1.22514.14 + PR: [7933](https://github.com/dotnet/winforms/pull/7933) private dlls\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, this is a regression issue, it occurs in latest main branch 8.0 sdk + PR: [7933](https://github.com/dotnet/winforms/pull/7933) private dlls.\n\n### Issue description\n\nThe save file dialog cannot be opened successfully.\r\n\r\n.NET 8.0 + PR: [7933](https://github.com/dotnet/winforms/pull/7933) private dlls.\r\n![Actual](https://user-images.githubusercontent.com/45864985/196906726-ad52bf12-e62a-4062-b993-fbae81be3036.png)\r\n\r\nDetails log: \r\n```\r\nSystem.Runtime.InteropServices.MarshalDirectiveException\r\n  HResult=0x80131535\r\n  Message=Method's type signature is not PInvoke compatible.\r\n  Source=System.Windows.Forms.Primitives\r\n  StackTrace:\r\n   at Windows.Win32.PInvoke.GetSaveFileName(OPENFILENAME* param0)\r\n   at System.Windows.Forms.SaveFileDialog.RunFileDialog(OPENFILENAME* ofn)\r\n   at System.Windows.Forms.FileDialog.RunDialogOld(HWND owner)\r\n   at System.Windows.Forms.FileDialog.RunDialog(IntPtr hWndOwner)\r\n   at System.Windows.Forms.CommonDialog.ShowDialog(IWin32Window owner)\r\n   at System.Windows.Forms.CommonDialog.ShowDialog()\r\n   at TestApp.Form1.button1_Click(Object sender, EventArgs e) in C:\\Users\\v-peqiao\\Desktop\\TestApp\\TestApp\\Form1.cs:line 13\r\n   at System.Windows.Forms.Control.OnClick(EventArgs e)\r\n   at System.Windows.Forms.ButtonBase.OnClick(EventArgs e)\r\n   at System.Windows.Forms.Button.OnClick(EventArgs e)\r\n   at System.Windows.Forms.Button.OnMouseUp(MouseEventArgs mevent)\r\n   at System.Windows.Forms.Control.WmMouseUp(Message& m, MouseButtons button, Int32 clicks)\r\n   at System.Windows.Forms.Control.WndProc(Message& m)\r\n   at System.Windows.Forms.ButtonBase.WndProc(Message& m)\r\n   at System.Windows.Forms.Control.ControlNativeWindow.WndProc(Message& m)\r\n   at System.Windows.Forms.NativeWindow.Callback(HWND hWnd, WM msg, WPARAM wparam, LPARAM lparam)\r\n```\r\n\r\n\r\n.NET 8.0 \r\n![Expected](https://user-images.githubusercontent.com/45864985/196908028-afc3768b-4a33-4e41-bdbb-e54214cb722e.png)\r\n\r\n\n\n### Steps to reproduce\n\n1. Open the [TestApp.zip](https://github.com/dotnet/winforms/files/9828199/TestApp.zip) project in VS.\r\n2. Build and run it.\r\n3. Click the 'Open' button in form and observe the result.","Url":"https://github.com/dotnet/winforms/issues/7975","RelatedDescription":"Closed issue \"SaveFileDialog cannot be opened\" (#7975)"},{"Id":"1417475853","IsPullRequest":true,"CreatedAt":"2022-10-21T00:13:12","Actor":"JeremyKuhne","Number":"7978","RawContent":null,"Title":"Fix the original save dialog","State":"closed","Body":"I copied from the Win32 metadata directly and it had `PreserveSig = false`, which is only valid with HRESULT returns.\r\n\r\nFixes #7975\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7978)","Url":"https://github.com/dotnet/winforms/pull/7978","RelatedDescription":"Closed or merged PR \"Fix the original save dialog\" (#7978)"},{"Id":"1417125256","IsPullRequest":true,"CreatedAt":"2022-10-20T23:15:18","Actor":"JeremyKuhne","Number":"7977","RawContent":null,"Title":"Convert to CsWin32 VARIANT","State":"closed","Body":"Converts VARIANT to CsWin32. I've left the files in the original location for now to keep the diff clear, will move them later.\r\n\r\nIt didn't become clear to me until I was fixing up tests that I could leverage using the newer C# feature of returning struct fields by ref to mitigate the nasty syntactical mess of replication of unions in C#. It's a nice pattern and one that might make sense moving into CsWin32.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7977)","Url":"https://github.com/dotnet/winforms/pull/7977","RelatedDescription":"Closed or merged PR \"Convert to CsWin32 VARIANT\" (#7977)"},{"Id":"1415270166","IsPullRequest":true,"CreatedAt":"2022-10-20T20:15:36","Actor":"v-elnovikova","Number":"7971","RawContent":null,"Title":"Replacing Checked.ico","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #7725\r\n\r\n\r\n## Proposed changes\r\n\r\n- Replace green icon with gray one\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Better visual contrast on HC themes\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n### Before\r\n\r\n![7725 - before](https://user-images.githubusercontent.com/113603457/196748961-0b8f4568-3654-4133-874f-e125cc48aa25.png)\r\n\r\n\r\n### After\r\n\r\nHC themes on Windows 11:\r\n- Aquatic\r\n![Windows11 HC, aquatic](https://user-images.githubusercontent.com/113603457/196749142-ec526fe8-d5da-4a54-bfbf-0494543962e6.png)\r\n\r\n- Desert\r\n![Windows11 HC, desert](https://user-images.githubusercontent.com/113603457/196749333-6a9644cf-2a55-4e97-9111-da1e02056ce8.png)\r\n\r\n- Dusk\r\n![Windows11 HC, dusk](https://user-images.githubusercontent.com/113603457/196749420-926c3af8-22a0-4938-acc2-42381b711f8f.png)\r\n\r\n- Night Sky \r\n![Windows11 HC, night sky](https://user-images.githubusercontent.com/113603457/196749460-e8de71a2-f26d-4318-8188-4630d398236c.png)\r\n\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n- Accessibility Insights for Windows\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .NET SDK 7.0.100-rc.2.22477.23\r\n- Windows 11\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7971)","Url":"https://github.com/dotnet/winforms/pull/7971","RelatedDescription":"Closed or merged PR \"Replacing Checked.ico\" (#7971)"},{"Id":"1415544467","IsPullRequest":true,"CreatedAt":"2022-10-20T18:02:23","Actor":"lonitra","Number":"7972","RawContent":null,"Title":"Include Notice for Media Used in Test","State":"closed","Body":"Follow up from #7959 , add copyright and third-party notice for media used in newly added COM test\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7972)","Url":"https://github.com/dotnet/winforms/pull/7972","RelatedDescription":"Closed or merged PR \"Include Notice for Media Used in Test\" (#7972)"},{"Id":"1416497633","IsPullRequest":true,"CreatedAt":"2022-10-20T12:32:47","Actor":"dotnet-maestro[bot]","Number":"7976","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20221019.7\r\n- **Date Produced**: October 20, 2022 2:17:24 AM UTC\r\n- **Commit**: 6eb3ccb9507b74798c4bd3241587c4cf3b18866e\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.22518.11 to 8.0.0-alpha.1.22519.7][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.22518.11 to 8.0.0-alpha.1.22519.7][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22518.11 to 8.0.0-alpha.1.22519.7][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22518.11 to 8.0.0-alpha.1.22519.7][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22518.11 to 8.0.0-alpha.1.22519.7][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.22518.11 to 8.0.0-alpha.1.22519.7][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22518.11 to 8.0.0-alpha.1.22519.7][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.22518.11 to 8.0.0-alpha.1.22519.7][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.22518.11 to 8.0.0-alpha.1.22519.7][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.22518.11 to 8.0.0-alpha.1.22519.7][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22518.11 to 8.0.0-alpha.1.22519.7][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22518.11 to 8.0.0-alpha.1.22519.7][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22518.11 to 8.0.0-alpha.1.22519.7][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22518.11 to 8.0.0-alpha.1.22519.7][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22518.11 to 8.0.0-alpha.1.22519.7][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.22518.11 to 8.0.0-alpha.1.22519.7][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22518.11 to 8.0.0-alpha.1.22519.7][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22518.11 to 8.0.0-alpha.1.22519.7][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22518.11 to 8.0.0-alpha.1.22519.7][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22518.11 to 8.0.0-alpha.1.22519.7][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22518.11 to 8.0.0-alpha.1.22519.7][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22518.11 to 8.0.0-alpha.1.22519.7][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.22518.11 to 8.0.0-alpha.1.22519.7][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22518.11 to 8.0.0-alpha.1.22519.7][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22518.11 to 8.0.0-alpha.1.22519.7][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22518.11 to 8.0.0-alpha.1.22519.7][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22518.11 to 8.0.0-alpha.1.22519.7][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22518.11 to 8.0.0-alpha.1.22519.7][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22518.11 to 8.0.0-alpha.1.22519.7][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22518.11 to 8.0.0-alpha.1.22519.7][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/bd7e1cb...6eb3ccb\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7976)","Url":"https://github.com/dotnet/winforms/pull/7976","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#7976)"},{"Id":"1416202102","IsPullRequest":false,"CreatedAt":"2022-10-20T08:35:44","Actor":"dmitrii-drobotov","Number":"7974","RawContent":null,"Title":"Use covariant returns for `Owner` property in accessible objects","State":"open","Body":"Since C# 9 we can use [covariant returns](https://learn.microsoft.com/dotnet/csharp/language-reference/proposals/csharp-9.0/covariant-returns), though we never got around enhancing the code. Updating the code will allow us to remove the duplicate fields and use `Owner` property throughout.\r\n\r\n_Originally posted by @RussKie in https://github.com/dotnet/winforms/pull/7954#discussion_r998992435_\r\n      ","Url":"https://github.com/dotnet/winforms/issues/7974","RelatedDescription":"Open issue \"Use covariant returns for `Owner` property in accessible objects\" (#7974)"},{"Id":"1414847638","IsPullRequest":true,"CreatedAt":"2022-10-19T23:50:28","Actor":"dotnet-maestro[bot]","Number":"7969","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20221018.11\r\n- **Date Produced**: October 19, 2022 10:41:50 AM UTC\r\n- **Commit**: bd7e1cb81d763589b95f7bfbaa2a96dd364e9103\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.22517.2 to 8.0.0-alpha.1.22518.11][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.22517.2 to 8.0.0-alpha.1.22518.11][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22517.2 to 8.0.0-alpha.1.22518.11][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22517.2 to 8.0.0-alpha.1.22518.11][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22517.2 to 8.0.0-alpha.1.22518.11][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.22517.2 to 8.0.0-alpha.1.22518.11][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22517.2 to 8.0.0-alpha.1.22518.11][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.22517.2 to 8.0.0-alpha.1.22518.11][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.22517.2 to 8.0.0-alpha.1.22518.11][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.22517.2 to 8.0.0-alpha.1.22518.11][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22517.2 to 8.0.0-alpha.1.22518.11][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22517.2 to 8.0.0-alpha.1.22518.11][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22517.2 to 8.0.0-alpha.1.22518.11][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22517.2 to 8.0.0-alpha.1.22518.11][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22517.2 to 8.0.0-alpha.1.22518.11][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.22517.2 to 8.0.0-alpha.1.22518.11][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22517.2 to 8.0.0-alpha.1.22518.11][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22517.2 to 8.0.0-alpha.1.22518.11][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22517.2 to 8.0.0-alpha.1.22518.11][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22517.2 to 8.0.0-alpha.1.22518.11][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22517.2 to 8.0.0-alpha.1.22518.11][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22517.2 to 8.0.0-alpha.1.22518.11][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.22517.2 to 8.0.0-alpha.1.22518.11][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22517.2 to 8.0.0-alpha.1.22518.11][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22517.2 to 8.0.0-alpha.1.22518.11][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22517.2 to 8.0.0-alpha.1.22518.11][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22517.2 to 8.0.0-alpha.1.22518.11][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22517.2 to 8.0.0-alpha.1.22518.11][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22517.2 to 8.0.0-alpha.1.22518.11][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22517.2 to 8.0.0-alpha.1.22518.11][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/4574ccb...bd7e1cb\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7969)","Url":"https://github.com/dotnet/winforms/pull/7969","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#7969)"},{"Id":"1414473353","IsPullRequest":true,"CreatedAt":"2022-10-19T23:36:49","Actor":"elachlan","Number":"7967","RawContent":null,"Title":"CA2019 Improper 'ThreadStatic' field initialization","State":"closed","Body":"Enable CA2019 Analyzer.\r\n\r\nManually fixed based on message: `'ThreadStatic' fields should not use inline initialization`. All values were `default`, so the initializations were removed.\r\n\r\nRelated: #7887\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7967)","Url":"https://github.com/dotnet/winforms/pull/7967","RelatedDescription":"Closed or merged PR \"CA2019 Improper 'ThreadStatic' field initialization\" (#7967)"},{"Id":"1411737280","IsPullRequest":true,"CreatedAt":"2022-10-19T22:44:16","Actor":"v-elnovikova","Number":"7954","RawContent":null,"Title":"Issue 7815 Fixing HelpText property for AccessibleObject of TextBox","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #7815\r\n\r\n\r\n## Proposed changes\r\n\r\n- Created TextBoxAccessibleObject class with overridden GetPropertyValue method.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- The HelpText property will be filled.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![before](https://user-images.githubusercontent.com/113603457/196211270-bb603573-0934-41a8-89de-ecd161f94921.png)\r\n\r\n\r\n### After\r\n\r\n![after](https://user-images.githubusercontent.com/113603457/196211308-fd5c5b9e-d86d-4684-978d-0a42bbb24672.png)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Added unit test for HelpTextPropertyId case.\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n- Inspect\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .NET SDK 7.0.100-rc.2.22477.23\r\n- Windows 11\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7954)","Url":"https://github.com/dotnet/winforms/pull/7954","RelatedDescription":"Closed or merged PR \"Issue 7815 Fixing HelpText property for AccessibleObject of TextBox\" (#7954)"},{"Id":"1414969643","IsPullRequest":false,"CreatedAt":"2022-10-19T13:24:13","Actor":"deinok","Number":"7970","RawContent":null,"Title":"Form.TopMost - Not Working when moving to .NET 6","State":"open","Body":"### .NET version\n\nChecked with VB.NET 6 and VB.NET 7\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nWorking on VB.NET Framework 4.8\n\n### Issue description\n\nMoving an application from the TargetFramework `net48` to `net6.0`. (Written in VB.NET)\r\n\r\nWe have a small WinForms application that has the main Form with `TopMost` at `True`. \r\nA SCADA program starts the WinForms application. (The SCADA program looks like calls `SetWindowPos(HWND_TOPMOST)` or an equivalent).\r\n\r\nWhen using .NET 4.8, the WinForms app is properly on the foreground. But just changing the target framework to `net6.0-windows` and the WinForms is no more in the Foreground as a TopMost Form.\r\n\r\nWe use `Microsoft.Extensions.Hosting` to handle the LifeCycle, just like this, nothing more special:\r\n![image](https://user-images.githubusercontent.com/6586053/196703140-dd8a5177-90d9-477f-9ff8-51895ee82818.png)\r\n\r\n`Principal` is the Form with the TopMost enabled in the Designer\n\n### Steps to reproduce\n\nI'm unable to give a proper reproduction step, as it only happens when the SCADA software is enabled. ","Url":"https://github.com/dotnet/winforms/issues/7970","RelatedDescription":"Open issue \"Form.TopMost - Not Working when moving to .NET 6\" (#7970)"},{"Id":"1414414023","IsPullRequest":true,"CreatedAt":"2022-10-19T10:59:16","Actor":"elachlan","Number":"7964","RawContent":null,"Title":"SA1212 A get accessor appears after a set accessor within a property …","State":"closed","Body":"Enable SA1212 anaylzer.\r\nhttps://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1212.md\r\n\r\nUsed solution wide code fix.\r\n\r\nRelated: #7887\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7964)","Url":"https://github.com/dotnet/winforms/pull/7964","RelatedDescription":"Closed or merged PR \"SA1212 A get accessor appears after a set accessor within a property …\" (#7964)"},{"Id":"1414436356","IsPullRequest":true,"CreatedAt":"2022-10-19T10:39:21","Actor":"elachlan","Number":"7965","RawContent":null,"Title":"SA1028 Code should not contain trailing whitespace","State":"closed","Body":"Enable SA1028 analyzer\r\nhttps://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1028.md\r\n\r\nUsed solution wide code fix.\r\n\r\nRelated: #7887\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7965)","Url":"https://github.com/dotnet/winforms/pull/7965","RelatedDescription":"Closed or merged PR \"SA1028 Code should not contain trailing whitespace\" (#7965)"},{"Id":"1414453370","IsPullRequest":true,"CreatedAt":"2022-10-19T10:38:28","Actor":"elachlan","Number":"7966","RawContent":null,"Title":"SA1001 Commas should not be preceded by whitespace","State":"closed","Body":"Enable SA1001 analyzer.\r\nhttps://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1001.md\r\n\r\nUsed solution wide code fix.\r\n\r\nRelated: #7887\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7966)","Url":"https://github.com/dotnet/winforms/pull/7966","RelatedDescription":"Closed or merged PR \"SA1001 Commas should not be preceded by whitespace\" (#7966)"},{"Id":"1414490999","IsPullRequest":false,"CreatedAt":"2022-10-19T07:57:36","Actor":"Perpete","Number":"7968","RawContent":null,"Title":"Wrong display of selected folder in FolderBrowserDialog in vb.","State":"open","Body":"### .NET version\r\n\r\nVersion .NET 6\r\n\r\n### Did it work in .NET Framework?\r\n\r\nYes\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nI dont know.\r\n\r\n### Issue description\r\n\r\nHello,\r\n\r\nWith version 17.6.3 of visual studio with .Net 6 with a WinForm project in VB language, I use the FolderBrowserDialog dialog.\r\nI initialize the SelectedPath property with the value: \"P:\\Gestion_REDWOOD\".\r\nWhen displaying the dialog, I notice that the folder name displayed in the text box is truncated.\r\nThe displayed and selected text is “estion_REDWOOD”.\r\nIf I move the cursor to the beginning of the text or if I press the \"Home\" key, I can see all the text.\r\nThe problem is the same with a WPF project.\r\n\r\nHere is my test code:\r\n\r\n`Private Sub Button1_Click(sender As Object, e As EventArgs) Handles Button1.Click\r\n\r\n\tDim selectPath As String\r\n\r\n\tDim openFolderDialog As New FolderBrowserDialog()\r\n\topenFolderDialog.SelectedPath = \"P:\\Gestion_REDWOOD\"\r\n\topenFolderDialog.Description = \"Dossier de destination sur le cloud\"\r\n\tIf openFolderDialog.ShowDialog = DialogResult.OK Then\r\n\t\tselectPath = openFolderDialog.SelectedPath\r\n\tEnd If\r\n\r\nEnd Sub`\r\n\r\nHere is a screenshot:\r\n\r\n![FolderBrowserDialog1](https://user-images.githubusercontent.com/66659162/196631116-38ed1fb6-15dd-4dc5-8029-43176ee1be23.gif)\r\n\r\n\r\n### Steps to reproduce\r\n\r\nSee description","Url":"https://github.com/dotnet/winforms/issues/7968","RelatedDescription":"Open issue \"Wrong display of selected folder in FolderBrowserDialog in vb.\" (#7968)"},{"Id":"1414400899","IsPullRequest":true,"CreatedAt":"2022-10-19T07:15:41","Actor":"elachlan","Number":"7963","RawContent":null,"Title":"SA1411 Attribute constructor shouldn't use unnecessary parenthesis","State":"closed","Body":"Enable SA1411 analyzer.\r\nhttps://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1411.md\r\n\r\nUsed solution wide code fix in visual studio.\r\n\r\nRelated: #7887\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7963)","Url":"https://github.com/dotnet/winforms/pull/7963","RelatedDescription":"Closed or merged PR \"SA1411 Attribute constructor shouldn't use unnecessary parenthesis\" (#7963)"},{"Id":"1414392109","IsPullRequest":true,"CreatedAt":"2022-10-19T07:09:15","Actor":"elachlan","Number":"7962","RawContent":null,"Title":"SA1518: File is required to end with a single newline character","State":"closed","Body":"Enable SA1518 Analyzer\r\nhttps://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1518.md\r\n\r\nUsed autofix in visual studio.\r\n\r\nRelated: #7887\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7962)","Url":"https://github.com/dotnet/winforms/pull/7962","RelatedDescription":"Closed or merged PR \"SA1518: File is required to end with a single newline character\" (#7962)"},{"Id":"1414383948","IsPullRequest":true,"CreatedAt":"2022-10-19T07:00:41","Actor":"elachlan","Number":"7961","RawContent":null,"Title":"IDE0036 Order modifiers","State":"closed","Body":"Enable IDE0036 Analyzer\r\nhttps://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0036\r\n\r\nUsed the automated code fix.\r\n\r\nRelated: #7887\r\n\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7961)","Url":"https://github.com/dotnet/winforms/pull/7961","RelatedDescription":"Closed or merged PR \"IDE0036 Order modifiers\" (#7961)"},{"Id":"1413804151","IsPullRequest":true,"CreatedAt":"2022-10-18T21:22:18","Actor":"JeremyKuhne","Number":"7960","RawContent":null,"Title":"Update to latest CsWin32 drop","State":"closed","Body":"Update to latest\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7960)","Url":"https://github.com/dotnet/winforms/pull/7960","RelatedDescription":"Closed or merged PR \"Update to latest CsWin32 drop\" (#7960)"},{"Id":"1413553805","IsPullRequest":true,"CreatedAt":"2022-10-18T20:59:21","Actor":"lonitra","Number":"7959","RawContent":null,"Title":"Add COM Control Test to WinformsControlsTest","State":"closed","Body":"- Adds a simple test to WinFormsControlTest project as a way to manually test COM controls working. Specifically, this test opens a Window Media Player that plays a video.\r\n- Adding COM reference to project is currently broken, so manually added .dll to the project to resources to refer to the media player. The .dll files were generated by adding COM reference in Framework project\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7959)","Url":"https://github.com/dotnet/winforms/pull/7959","RelatedDescription":"Closed or merged PR \"Add COM Control Test to WinformsControlsTest\" (#7959)"},{"Id":"1412194169","IsPullRequest":true,"CreatedAt":"2022-10-18T20:03:18","Actor":"lonitra","Number":"7955","RawContent":null,"Title":"Convert IEnumString COM Usage to Cswin32","State":"closed","Body":"- Rewrite `IEnumString` to use cswin32 generated interface and move it into cswin32 `IEnumString` partial struct\r\n- Use COM pointer for `IAutoComplete2` instead of wrapping \r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7955)","Url":"https://github.com/dotnet/winforms/pull/7955","RelatedDescription":"Closed or merged PR \"Convert IEnumString COM Usage to Cswin32\" (#7955)"},{"Id":"1413096950","IsPullRequest":true,"CreatedAt":"2022-10-18T12:37:41","Actor":"dotnet-maestro[bot]","Number":"7958","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20221017.2\r\n- **Date Produced**: October 17, 2022 10:03:49 PM UTC\r\n- **Commit**: 4574ccb53981aaecfbf5e514a5114da2321e0843\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.22516.1 to 8.0.0-alpha.1.22517.2][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.22516.1 to 8.0.0-alpha.1.22517.2][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22516.1 to 8.0.0-alpha.1.22517.2][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22516.1 to 8.0.0-alpha.1.22517.2][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22516.1 to 8.0.0-alpha.1.22517.2][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.22516.1 to 8.0.0-alpha.1.22517.2][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22516.1 to 8.0.0-alpha.1.22517.2][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.22516.1 to 8.0.0-alpha.1.22517.2][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.22516.1 to 8.0.0-alpha.1.22517.2][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.22516.1 to 8.0.0-alpha.1.22517.2][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22516.1 to 8.0.0-alpha.1.22517.2][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22516.1 to 8.0.0-alpha.1.22517.2][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22516.1 to 8.0.0-alpha.1.22517.2][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22516.1 to 8.0.0-alpha.1.22517.2][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22516.1 to 8.0.0-alpha.1.22517.2][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.22516.1 to 8.0.0-alpha.1.22517.2][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22516.1 to 8.0.0-alpha.1.22517.2][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22516.1 to 8.0.0-alpha.1.22517.2][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22516.1 to 8.0.0-alpha.1.22517.2][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22516.1 to 8.0.0-alpha.1.22517.2][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22516.1 to 8.0.0-alpha.1.22517.2][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22516.1 to 8.0.0-alpha.1.22517.2][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.22516.1 to 8.0.0-alpha.1.22517.2][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22516.1 to 8.0.0-alpha.1.22517.2][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22516.1 to 8.0.0-alpha.1.22517.2][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22516.1 to 8.0.0-alpha.1.22517.2][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22516.1 to 8.0.0-alpha.1.22517.2][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22516.1 to 8.0.0-alpha.1.22517.2][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22516.1 to 8.0.0-alpha.1.22517.2][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22516.1 to 8.0.0-alpha.1.22517.2][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/960e4d7...4574ccb\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7958)","Url":"https://github.com/dotnet/winforms/pull/7958","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#7958)"},{"Id":"1412215595","IsPullRequest":true,"CreatedAt":"2022-10-17T20:57:12","Actor":"jonaskohl","Number":"7957","RawContent":null,"Title":"Don't throw in DropDownClosed when item is hidden","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #7884\r\n\r\n\r\n## Proposed changes\r\n\r\n- Fixed a bug described in #7884\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- ?\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- ?\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Didn't go up in smoke!\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n<details>\r\n<summary><code>dotnet --info</code> output</summary>\r\n<pre><code>.NET SDK:\r\n Version:   7.0.100-rc.2.22477.23\r\n Commit:    0a5360315a\r\n\r\nLaufzeitumgebung:\r\n OS Name:     Windows\r\n OS Version:  10.0.22621\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\7.0.100-rc.2.22477.23\\\r\n\r\nHost:\r\n  Version:      7.0.0-rc.2.22472.3\r\n  Architecture: x64\r\n  Commit:       550605cc93\r\n\r\n.NET SDKs installed:\r\n  5.0.408 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.300 [C:\\Program Files\\dotnet\\sdk]\r\n  7.0.100-rc.2.22477.23 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.25 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 7.0.0-rc.2.22476.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.25 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.28 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 6.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 7.0.0-rc.2.22472.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.25 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 6.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 7.0.0-rc.2.22472.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nOther architectures found:\r\n  x86   [C:\\Program Files (x86)\\dotnet]\r\n\r\nEnvironment variables:\r\n  Not set\r\n\r\nglobal.json file:\r\n  Not found\r\n\r\nLearn more:\r\n  https://aka.ms/dotnet/info\r\n\r\nDownload .NET:\r\n  https://aka.ms/dotnet/download\r\n</code></pre>\r\n</details>\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7957)","Url":"https://github.com/dotnet/winforms/pull/7957","RelatedDescription":"Open PR \"Don't throw in DropDownClosed when item is hidden\" (#7957)"},{"Id":"1412196466","IsPullRequest":true,"CreatedAt":"2022-10-17T20:38:52","Actor":"dreddy-work","Number":"7956","RawContent":null,"Title":"Update Anchor Layout to support high Dpi machines.","State":"open","Body":"We have multiple [issues](https://github.com/dotnet/winforms/issues?q=is%3Aissue+is%3Aopen+anchor+-label%3Atest-bug+-label%3A%22%3Aconstruction%3A+work+in+progress%22+-label%3Aapi-suggestion+-label%3Aapi-approved+-label%3Atenet-localization) reported in WinForms around the anchor layout being problematic on higher DPI scale monitors, irrespective of application DPI mode. This document outlines the changes being made in .NET 8.0 to address these issues along with setting the goal to support all supported application DPI modes in WinForms.\r\n\r\n**Problem in Scope:**\r\n\tAnchored control’s position with respect to its parent should be able to determine at the design time and would only need to be changed if there were explicit changes in the control’s Bounds or when the control is scaled in response to a DPI changed event. Bounds changes as result of Parent’s bounds change shouldn’t alter control’s relative position in the parent’s rectangle. However, layout in WinForms computes the anchored control’s position every time there are changes to control’s bounds or control’s property change that may impact its position. This is leading to the [issues](https://github.com/dotnet/winforms/issues?q=is%3Aissue+is%3Aopen+anchor+-label%3Atest-bug+-label%3A%22%3Aconstruction%3A+work+in+progress%22+-label%3Aapi-suggestion+-label%3Aapi-approved+-label%3Atenet-localization) we have been seeing. The following is a source snippet that is being serialized in WinForms designer and added comments show the various events that trigger anchor computations and why they could be wrong or unnecessary.\r\n\r\n```CS\r\nthis.button14.Anchor = (System.Windows.Forms.AnchorStyles.Bottom | System.Windows.Forms.AnchorStyles.Left) // Layout tries to compute anchors with default button14 size and without parent. \r\nthis.button14.Location = new System.Drawing.Point(431, 110); // Layout updates computed anchors for this new bounds, still with default size and no parent.\r\nthis.button14.Name = \"button14\";\r\nthis.button14.Size = new System.Drawing.Size(111, 23); // Layout updates computed anchors for this new bounds, still with no parent.\r\nthis.Controls.Add(this.button14); // Layout updates computed anchors with parents default size. Which may still be wrong.\r\nthis.Size = new System.Drawing.Size(828, 146); // Layout updates computed anchors with parents new size but this size could change based on the Dpi when parent Handle is created.\r\nthis.ResumeLayout(false) // Layout updates computed anchors with parents size. Dpi of the screen is still not considered (Handle creations or delayed until control is visible)\r\n\r\n```\r\n\r\nThe above snippet does not represent the complete set of instances where anchor computations are unnecessary and may hold invalid anchor values. It gets even more complicated when nested UserControls are involved.\r\n\r\n**Known issues:**\r\nWe have multiple issues reported [here](https://github.com/dotnet/winforms/issues?q=is%3Aissue+is%3Aopen+anchor+-label%3Atest-bug+-label%3A%22%3Aconstruction%3A+work+in+progress%22+-label%3Aapi-suggestion+-label%3Aapi-approved+-label%3Atenet-localization) from customers and some of them are direct result of anchor miscalculations. The following are snippets of the category of issues we currently see.\r\n\r\n**Expected:** \r\n![image](https://user-images.githubusercontent.com/36968667/196277747-0cbf1820-f42d-4279-9e61-ba67a2a43a6a.png)\r\n\r\n![image](https://user-images.githubusercontent.com/36968667/196277893-6325ff9e-0c37-4c89-862d-69b7d00e3473.png)\r\n\r\n**Current Behavior:** \r\n![image](https://user-images.githubusercontent.com/36968667/196277793-26f67908-0f63-4104-8edf-1c3abacad129.png)\r\n\r\n![image](https://user-images.githubusercontent.com/36968667/196277917-8784b2e1-514e-460d-9b5c-904ac9d9eee5.png)\r\n\r\n**Proposed solution:** \r\n\r\nUnnecessary control’s anchors computation is the root cause for many [issues](https://github.com/dotnet/winforms/issues?q=is%3Aissue+is%3Aopen+anchor+-label%3Atest-bug+-label%3A%22%3Aconstruction%3A+work+in+progress%22+-label%3Aapi-suggestion+-label%3Aapi-approved+-label%3Atenet-localization) reported so far. In this proposal, we are delaying the anchors computation to the specific time in the layout flow - which is when the control’s and its parent’s handles are created. By that time, in the majority of scenarios, the control’s and its parent’s bounds are finalized and the display monitor’s DPI has been applied to them.  We also have issues with how we are calculating anchors but, in this proposal, we are simplifying anchor calculations as mentioned in the above pic to help diagnose any future issues.\r\nWe may still have cases where developers are forced to create handle explicitly, out of order, but those cases can be handled separately by the application developer for any anchor miscalculations. The following are the events we would be using to compute anchors and replacing the current set of events mentioned in Figure 1 above.\r\n\r\n- OnCreateControl\r\n- OnParentChanged\r\n- SetBounds\r\n\r\n**Source snippet:**\r\n\r\n```CS\r\nprotected virtual void OnCreateControl()\r\n{\r\nDefaultLayout.UpdateAnchorInfoV2(this);\r\n}\r\n\r\ninternal static void UpdateAnchorInfoV2(IArrangedElement element)\r\n {\r\n     if (!LocalAppContextSwitches.EnableAnchorLayoutV2 || !CommonProperties.GetNeedsAnchorLayout(element))\r\n      {\r\n          return;\r\n      }\r\n\r\n      Control control = element as Control;\r\n      Debug.Assert(control != null, \"AnchorLayoutV2 and beyond are expected to be used only on Control type\");\r\n\r\n      if (control is null || control.Parent is null)\r\n       {\r\n          return;\r\n       }\r\n\r\n      if (!control.IsHandleCreated || !control.Parent.IsHandleCreated)\r\n       {\r\n          return;\r\n       }\r\n\r\n      ComputeAnchorInfo(IArrangedElement element)\r\n  }\r\n\r\n```\r\n**Simplifying Anchor calculations:**\r\nThe current anchor calculation implementation is complicated and appears to have been a result of unnecessary attempts to calculate anchors with invalid bounds. Replacing the current implementation with the one described in Figure 1 above. Following is the source snippet that computes the anchors.\r\n```CS\r\nprivate static void ComputeAnchorInfo(IArrangedElement element)\r\n {\r\n   AnchorInfo? anchorInfo = GetAnchorInfo(element);\r\n   if (anchorInfo is null)\r\n    {\r\n       anchorInfo = new();\r\n       SetAnchorInfo(element, anchorInfo);\r\n    }\r\n\r\n    Rectangle displayRect = element.Container.DisplayRectangle;\r\n    Rectangle elementBounds = element.Bounds;\r\n\r\n    int x = elementBounds.X;\r\n    int y = elementBounds.Y;\r\n\r\n    anchorInfo.Left = x;\r\n    anchorInfo.Top = y;\r\n\r\n    anchorInfo.Right = displayRect.Width - (x + elementBounds.Width);\r\n    anchorInfo.Bottom = displayRect.Height - (y + elementBounds.Height);\r\n }\r\n\r\n```\r\n**Risk mitigation:**\r\nLayout in general is complex and could impact every component in the WinForms. In order to reduce the potential risk and provide backward compatibility, This changes are `quirked` under switch `System.Windows.Forms.EnableAnchorLayoutV2`. These changes are by default on for new/migrating applications targeting .NET 8.0 but the developers can control this by setting the above mentioned flag to `false` in the runtimeconfig.template.json for the application.\r\nSnippet for runtimeconfig.template.json:\r\n```XML\r\n{\r\n  \"configProperties\": {\r\n    \"System.Windows.Forms.EnableAnchorLayoutV2\": true\r\n  }\r\n}\r\n```\r\n\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7956)","Url":"https://github.com/dotnet/winforms/pull/7956","RelatedDescription":"Open PR \"Update Anchor Layout to support high Dpi machines.\" (#7956)"},{"Id":"1411591285","IsPullRequest":true,"CreatedAt":"2022-10-17T14:33:47","Actor":"v-elnovikova","Number":"7953","RawContent":null,"Title":"Issue 7815 Fixing HelpText property for AccessibleObject of TextBox","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #7815\r\n\r\n\r\n## Proposed changes\r\n\r\n- Created dedicated TextBoxAccessibleObject class with overridden GetPropertyValue method.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- The HelpText property will be filled.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![before](https://user-images.githubusercontent.com/113603457/196189092-b3e36e3c-9e8f-4060-adb8-71600b2e1dcf.png)\r\n\r\n### After\r\n\r\n![after](https://user-images.githubusercontent.com/113603457/196189116-461ccde3-fa73-4b83-b85d-013bdcd5c45e.png)\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Added unit test for HelpTextPropertyId case.\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n- Inspect\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .NET SDK 7.0.100-rc.2.22477.23\r\n- Windows 11\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7953)","Url":"https://github.com/dotnet/winforms/pull/7953","RelatedDescription":"Closed or merged PR \"Issue 7815 Fixing HelpText property for AccessibleObject of TextBox\" (#7953)"},{"Id":"1411452087","IsPullRequest":true,"CreatedAt":"2022-10-17T12:38:46","Actor":"dotnet-maestro[bot]","Number":"7952","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20221016.1\r\n- **Date Produced**: October 16, 2022 4:51:55 PM UTC\r\n- **Commit**: 960e4d723c27a5407dc691d06e546bc455a9c4a5\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.22515.3 to 8.0.0-alpha.1.22516.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.22515.3 to 8.0.0-alpha.1.22516.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22515.3 to 8.0.0-alpha.1.22516.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22515.3 to 8.0.0-alpha.1.22516.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22515.3 to 8.0.0-alpha.1.22516.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.22515.3 to 8.0.0-alpha.1.22516.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22515.3 to 8.0.0-alpha.1.22516.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.22515.3 to 8.0.0-alpha.1.22516.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.22515.3 to 8.0.0-alpha.1.22516.1][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.22515.3 to 8.0.0-alpha.1.22516.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22515.3 to 8.0.0-alpha.1.22516.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22515.3 to 8.0.0-alpha.1.22516.1][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22515.3 to 8.0.0-alpha.1.22516.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22515.3 to 8.0.0-alpha.1.22516.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22515.3 to 8.0.0-alpha.1.22516.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.22515.3 to 8.0.0-alpha.1.22516.1][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22515.3 to 8.0.0-alpha.1.22516.1][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22515.3 to 8.0.0-alpha.1.22516.1][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22515.3 to 8.0.0-alpha.1.22516.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22515.3 to 8.0.0-alpha.1.22516.1][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22515.3 to 8.0.0-alpha.1.22516.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22515.3 to 8.0.0-alpha.1.22516.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.22515.3 to 8.0.0-alpha.1.22516.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22515.3 to 8.0.0-alpha.1.22516.1][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22515.3 to 8.0.0-alpha.1.22516.1][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22515.3 to 8.0.0-alpha.1.22516.1][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22515.3 to 8.0.0-alpha.1.22516.1][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22515.3 to 8.0.0-alpha.1.22516.1][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22515.3 to 8.0.0-alpha.1.22516.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22515.3 to 8.0.0-alpha.1.22516.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/8ed6b13...960e4d7\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7952)","Url":"https://github.com/dotnet/winforms/pull/7952","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#7952)"},{"Id":"1410467056","IsPullRequest":true,"CreatedAt":"2022-10-16T12:28:14","Actor":"dotnet-maestro[bot]","Number":"7951","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20221015.3\r\n- **Date Produced**: October 16, 2022 10:19:49 AM UTC\r\n- **Commit**: 8ed6b13a103de3a1b529dea23fb0e2dfac94fc1b\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.22514.9 to 8.0.0-alpha.1.22515.3][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.22514.9 to 8.0.0-alpha.1.22515.3][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22514.9 to 8.0.0-alpha.1.22515.3][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22514.9 to 8.0.0-alpha.1.22515.3][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22514.9 to 8.0.0-alpha.1.22515.3][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.22514.9 to 8.0.0-alpha.1.22515.3][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22514.9 to 8.0.0-alpha.1.22515.3][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.22514.9 to 8.0.0-alpha.1.22515.3][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.22514.9 to 8.0.0-alpha.1.22515.3][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.22514.9 to 8.0.0-alpha.1.22515.3][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22514.9 to 8.0.0-alpha.1.22515.3][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22514.9 to 8.0.0-alpha.1.22515.3][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22514.9 to 8.0.0-alpha.1.22515.3][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22514.9 to 8.0.0-alpha.1.22515.3][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22514.9 to 8.0.0-alpha.1.22515.3][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.22514.9 to 8.0.0-alpha.1.22515.3][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22514.9 to 8.0.0-alpha.1.22515.3][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22514.9 to 8.0.0-alpha.1.22515.3][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22514.9 to 8.0.0-alpha.1.22515.3][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22514.9 to 8.0.0-alpha.1.22515.3][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22514.9 to 8.0.0-alpha.1.22515.3][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22514.9 to 8.0.0-alpha.1.22515.3][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.22514.9 to 8.0.0-alpha.1.22515.3][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22514.9 to 8.0.0-alpha.1.22515.3][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22514.9 to 8.0.0-alpha.1.22515.3][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22514.9 to 8.0.0-alpha.1.22515.3][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22514.9 to 8.0.0-alpha.1.22515.3][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22514.9 to 8.0.0-alpha.1.22515.3][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22514.9 to 8.0.0-alpha.1.22515.3][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22514.9 to 8.0.0-alpha.1.22515.3][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/9bcbf50...8ed6b13\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7951)","Url":"https://github.com/dotnet/winforms/pull/7951","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#7951)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-10-21T03:30:35.1339441Z","RunDurationInMilliseconds":589}