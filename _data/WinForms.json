{"Data":{"GitHub":{"Issues":[{"Id":"1765921897","IsPullRequest":true,"CreatedAt":"2023-06-21T03:16:48","Actor":"dreddy-work","Number":"9320","RawContent":null,"Title":"Porting SplitContainerDesigner/SplitterPanelDesigner/SplitterDesigner.","State":"closed","Body":"Port missing designers. Ported from Framework. Comments and descriptions were directly taken from Framework.\r\n\r\n`SplitContainerDesigner`\r\n`SplitterPanelDesigner\r\n`\r\n`SplitterDesigner`.\r\n\r\nRelated to https://github.com/dotnet/winforms/issues/4908\r\nFixes #https://github.com/dotnet/winforms/issues/8749\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9320)","Url":"https://github.com/dotnet/winforms/pull/9320","RelatedDescription":"Closed or merged PR \"Porting SplitContainerDesigner/SplitterPanelDesigner/SplitterDesigner.\" (#9320)"},{"Id":"1766580615","IsPullRequest":false,"CreatedAt":"2023-06-21T02:53:10","Actor":"MelonWang1","Number":"9322","RawContent":null,"Title":"The WinformsControlTest app under the Winforms repo will stop running when opening TreeView/ListView form","State":"open","Body":"### .NET version\n\n.NET 8.0.100-preview.6.23320.4\n\n### Did it work in .NET Framework?\n\nNot tested/verified\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, it cannot repro in .NET 8.0.100-preview.5.23261.16.\n\n### Issue description\n\nIn E2E testing, the WinformsControlTest app under the Winforms repo will stop running when opening TreeView/ListView form. After investigation, we found an exception: BinaryFormatter serialization and deserialization are disabled within this application was catched.\r\nStop running:\r\n\r\nhttps://github.com/dotnet/winforms/assets/94418985/9b9a9156-757c-4573-b958-f3b020c8217b\r\n\r\nException:\r\n![image](https://github.com/dotnet/winforms/assets/94418985/44b0c8cc-ee78-4264-8d8b-86f6b8708a89)\r\n\r\n**Call stack:**\r\n>\tSystem.Windows.Forms.dll!System.Windows.Forms.NativeWindow.Callback(Windows.Win32.Foundation.HWND hWnd, Interop.User32.WM msg, Windows.Win32.Foundation.WPARAM wparam, Windows.Win32.Foundation.LPARAM lparam) Line 381\tC#\r\n \t[External Code]\t\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.Application.ComponentManager.Interop.Mso.IMsoComponentManager.FPushMessageLoop(nuint dwComponentID, Interop.Mso.msoloop uReason, void* pvLoopData) Line 293\tC#\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.Application.ThreadContext.RunMessageLoopInner(Interop.Mso.msoloop reason, System.Windows.Forms.ApplicationContext context) Line 1090\tC#\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.Application.ThreadContext.RunMessageLoop(Interop.Mso.msoloop reason, System.Windows.Forms.ApplicationContext context) Line 956\tC#\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.Application.Run(System.Windows.Forms.Form mainForm) Line 1160\tC#\r\n \tWinformsControlsTest.dll!Program.<Main>$(string[] args) Line 23\tC#\r\n\n\n### Steps to reproduce\n\n1. Git clone [https://github.com/dotnet/winforms](https://github.com/dotnet/winforms )\r\n2. Open CMD from clone folder and run \"start-vs.cmd\" command open project\r\n3. Select WinformsControlTest app, right click it to set as startup project\r\n4. Build and run, click \"TreeView,ImageList\"/\"ListView\" button","Url":"https://github.com/dotnet/winforms/issues/9322","RelatedDescription":"Open issue \"The WinformsControlTest app under the Winforms repo will stop running when opening TreeView/ListView form\" (#9322)"},{"Id":"1766356281","IsPullRequest":true,"CreatedAt":"2023-06-20T23:42:52","Actor":"JeremyKuhne","Number":"9321","RawContent":null,"Title":"Convert the rest of User32 to CsWin32","State":"open","Body":"This converts the rest of the User32 PInvokes. I still need to move the WM enum and DC scope, and will follow up with that.\r\n\r\nAlso removes most of NativeMethods.cs. In doing this I also tweaked the thread exception dialog to deal with the fact that CodeBase is depreciated. As assemblies don't have to be coming from disk, the file version doesn't help much either (and is much less useful than it was on Framework). Had to tweak the string to make this work.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9321)","Url":"https://github.com/dotnet/winforms/pull/9321","RelatedDescription":"Open PR \"Convert the rest of User32 to CsWin32\" (#9321)"},{"Id":"1765777243","IsPullRequest":true,"CreatedAt":"2023-06-20T18:22:42","Actor":"dreddy-work","Number":"9319","RawContent":null,"Title":"Disable UI tests.","State":"closed","Body":"Please see linked issue for more details. We are disabling UI tests until we figure out on how to make them reliable.\r\nRelated to https://github.com/dotnet/winforms/issues/9318\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9319)","Url":"https://github.com/dotnet/winforms/pull/9319","RelatedDescription":"Closed or merged PR \"Disable UI tests.\" (#9319)"},{"Id":"1763923779","IsPullRequest":true,"CreatedAt":"2023-06-20T17:44:33","Actor":"JeremyKuhne","Number":"9309","RawContent":null,"Title":"Convert more User32 code to CSWin32","State":"closed","Body":"The converts another block of User32 interop to CSWin32.\r\n\r\nWe had created enums for messages and style flags that were specific to controls. I've decide to not recreate them as it has started to obfuscate that the values overlap with other values.\r\n\r\nI'm still giving thought to what we do with WM_. It was convenient for debugging to have an enum, but I think we can solve that in other ways.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9309)","Url":"https://github.com/dotnet/winforms/pull/9309","RelatedDescription":"Closed or merged PR \"Convert more User32 code to CSWin32\" (#9309)"},{"Id":"1765258609","IsPullRequest":true,"CreatedAt":"2023-06-20T17:10:17","Actor":"dotnet-maestro[bot]","Number":"9314","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20230619.3\r\n- **Date Produced**: June 19, 2023 3:15:23 PM UTC\r\n- **Commit**: a7352a700a522e0d1c3e65ec4cbe5df238d60f92\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23316.6 to 8.0.0-beta.23319.3][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.23316.6 to 8.0.0-beta.23319.3][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.23316.6 to 8.0.0-beta.23319.3][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23316.6 to 8.0.0-beta.23319.3][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.23316.6 to 8.0.0-beta.23319.3][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23316.6 to 8.0.0-beta.23319.3][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/e2334b2be3...a7352a700a\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9314)","Url":"https://github.com/dotnet/winforms/pull/9314","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#9314)"},{"Id":"1765261187","IsPullRequest":true,"CreatedAt":"2023-06-20T16:56:35","Actor":"dotnet-maestro[bot]","Number":"9315","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230619.9\r\n- **Date Produced**: June 20, 2023 9:01:46 AM UTC\r\n- **Commit**: 6352c39f666676b87246f650fe5163068c9c7de6\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **System.CodeDom**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **System.Data.Odbc**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **System.Data.OleDb**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **System.IO.Ports**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **System.Management**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **System.Reflection.Context**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **System.Runtime.Caching**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **System.Speech**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **System.Text.Json**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.6.23318.9 to 8.0.0-preview.6.23319.9][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/815953a12c...6352c39f66\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9315)","Url":"https://github.com/dotnet/winforms/pull/9315","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#9315)"},{"Id":"1765183254","IsPullRequest":true,"CreatedAt":"2023-06-20T16:51:44","Actor":"Olina-Zhang","Number":"9313","RawContent":null,"Title":"Update Accessibility app for GH issues: 9229, 9273, 9260","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes https://github.com/dotnet/winforms/issues/9273, https://github.com/dotnet/winforms/issues/9260, https://github.com/dotnet/winforms/issues/9229 by updating Accessibility app in this repo\r\n\r\nhttps://github.com/dotnet/winforms/issues/9273: Update toolStripButton1 and toolStripSplitButton1 Text property\r\nhttps://github.com/dotnet/winforms/issues/9260: Re-adjust the controls' TabOrder, and change Container's backColor in order to Button's focus visible\r\nhttps://github.com/dotnet/winforms/issues/9229: Remove FontDialog as it's CommonDialog\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9313)","Url":"https://github.com/dotnet/winforms/pull/9313","RelatedDescription":"Closed or merged PR \"Update Accessibility app for GH issues: 9229, 9273, 9260\" (#9313)"},{"Id":"1765768709","IsPullRequest":false,"CreatedAt":"2023-06-20T16:41:05","Actor":"dreddy-work","Number":"9318","RawContent":null,"Title":"[Tracking] Update UI tests infra to make them reliable.","State":"open","Body":"This is to track work required to enable UI tests again in the repo. Current strategy to send input via `SendInput `API seems unreliable and flaky. Tried to fix it with following experiments but didn't help.\r\n\r\n- [x] Tried with increasing delays.\r\n- [x] Made sure Application is idle before proceeding further.\r\n- [x] Removed any other windows interfering with tests on build agents.\r\n- [x] Moved to Sequential execution\r\n- [x] Increased retries both at tests level and build level.\r\n- [x] Ensured everything is being sent on UI thread.\r\n- [x] Paused execution on ARM64 and also on Release branches\r\n- [x] Paused execution of UI tests in internal CI builds.\r\n- [x] Blocked UI tests from execution from everything as all steps above failed to achieve reliability.\r\n\r\n- [ ]  Further investigation to make tests reliable. \r\n\r\n\r\nPausing the UI tests execution until we fix these and achieve reliability either by replacing `SendInput` API or find a way to make it work reliably. This issue is to track the work needed.\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/9318","RelatedDescription":"Open issue \"[Tracking] Update UI tests infra to make them reliable.\" (#9318)"},{"Id":"1764530390","IsPullRequest":true,"CreatedAt":"2023-06-20T16:28:12","Actor":"maikebing","Number":"9312","RawContent":null,"Title":"fixed a typo and a broken link  for  docs/designer/readme.md . ","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n## Proposed changes\r\n\r\n-   modernization-of-code-behind-in-OOP-designer  path not modernization-of-code-behind-in-oop-designer\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9312)","Url":"https://github.com/dotnet/winforms/pull/9312","RelatedDescription":"Closed or merged PR \"fixed a typo and a broken link  for  docs/designer/readme.md . \" (#9312)"},{"Id":"1765533481","IsPullRequest":false,"CreatedAt":"2023-06-20T14:30:18","Actor":"alexdess","Number":"9317","RawContent":null,"Title":"Infinite designer loading since migration from .net 4.8 to .NET7","State":"open","Body":"### Environment\r\n\r\nMicrosoft Visual Studio Professional 2022\r\nVersion 17.6.3\r\nVisualStudio.17.Release/17.6.3+33801.468\r\n\r\n### .NET version\r\n\r\nnet7.0-windows\r\n\r\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\r\n\r\nYes, .NET48.\r\n\r\n### Issue description\r\n\r\nI've had this window and warning since my migration to .NET7.\r\n![image](https://github.com/dotnet/winforms/assets/8177780/599c0e36-3bdf-4f6b-8bc4-3b173974327a)\r\n\r\nThe project builds and runs, the windows also work at runtime. The VBproj concerned:\r\n\r\n```\r\n  <PropertyGroup>\r\n\t  <TargetFramework>net7.0-windows</TargetFramework>\r\n    <AssemblyVersion>2023.5.31.1448</AssemblyVersion>\r\n    <FileVersion>2023.5.31.1448</FileVersion>\r\n    <Version>2023.5.31.1448</Version>\r\n    <LangVersion>latest</LangVersion>\r\n    <UseWindowsForms>true</UseWindowsForms>\r\n\t<MyType>WindowsForms</MyType>\r\n  </PropertyGroup>\r\n```\r\n\r\nI've already spent more than 2 days trying to correct my problem and in particular tried all the steps in the guide https://github.com/dotnet/winforms/blob/main/docs/designer/troubleshooting.md\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\n- Rebuild\r\n- Open a simple Designer\r\n\r\n\r\n### Diagnostics\r\n\r\n```text\r\nwarn: Cannot update selection in server process as Session is not connected.\r\n```\r\n","Url":"https://github.com/dotnet/winforms/issues/9317","RelatedDescription":"Open issue \"Infinite designer loading since migration from .net 4.8 to .NET7\" (#9317)"},{"Id":"1765446251","IsPullRequest":false,"CreatedAt":"2023-06-20T13:45:43","Actor":"stivoberlin","Number":"9316","RawContent":null,"Title":"contextmenu disappears when a WPF usercontrol is displayed in a WinForm Form (using an element host)","State":"open","Body":"### .NET version\n\n.NET 6.0 \r\n.NET 7.0 \r\nTested on both\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n.net 4.8\n\n### Issue description\n\nThere is a bug when a WPF usercontrol is displayed in a Winform Form (using an element host).\r\nIf this WPF usercontrol has a context menu, and the scaling in Windows Display Settings are different than 100% (125% for exemple). Then if we try to pass the mouse over the menu items, they disappear… It makes impossible for the user to select an item in the menu (making this a blocking issue for one of our project).\r\n\r\nThis issue is only appearing if the WPF usercontrol is used in a WinForms application. If the same control is copied in a full WPF app, there is no problem. I guess there is some mechanism with the scaling and WinForms that has a small thing to fix.\r\n\r\n![image](https://github.com/dotnet/winforms/assets/1432610/8447c550-0f14-4790-a97a-8afb9080e077)\r\n\n\n### Steps to reproduce\n\nI have created a small demo project under : \r\n[https://github.com/stivoberlin/WinFormsAppSetHighDpiModeBug2](https://github.com/stivoberlin/WinFormsAppSetHighDpiModeBug2)\r\n\r\nIf you want to create a new project from scratch : \r\nCreate a WinForm Application, with a winforms form\r\nCreate a WPF Usercontrol with a context menu and some menu items\r\nPut the WPF Usercontrol in the WinForms Form\r\nSet your windows scaling to 125% (in the Windows Display Settings for the screen)\r\nStart the app, and try to select the last item of the context menu. They disappear.","Url":"https://github.com/dotnet/winforms/issues/9316","RelatedDescription":"Open issue \"contextmenu disappears when a WPF usercontrol is displayed in a WinForm Form (using an element host)\" (#9316)"},{"Id":"1763927127","IsPullRequest":true,"CreatedAt":"2023-06-19T18:43:32","Actor":"vseanreesermsft","Number":"9311","RawContent":null,"Title":"Update branding to 7.0.9","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9311)","Url":"https://github.com/dotnet/winforms/pull/9311","RelatedDescription":"Closed or merged PR \"Update branding to 7.0.9\" (#9311)"},{"Id":"1763926920","IsPullRequest":true,"CreatedAt":"2023-06-19T18:26:57","Actor":"vseanreesermsft","Number":"9310","RawContent":null,"Title":"Update branding to 6.0.20","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9310)","Url":"https://github.com/dotnet/winforms/pull/9310","RelatedDescription":"Closed or merged PR \"Update branding to 6.0.20\" (#9310)"},{"Id":"1761795413","IsPullRequest":true,"CreatedAt":"2023-06-19T17:20:30","Actor":"dotnet-maestro[bot]","Number":"9305","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20230616.6\r\n- **Date Produced**: June 16, 2023 5:38:51 PM UTC\r\n- **Commit**: e2334b2be36919347923d0ec872a46acddb1e385\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23314.1 to 8.0.0-beta.23316.6][3]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.23314.1 to 8.0.0-beta.23316.6][3]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.23314.1 to 8.0.0-beta.23316.6][3]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23314.1 to 8.0.0-beta.23316.6][3]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.23314.1 to 8.0.0-beta.23316.6][3]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23314.1 to 8.0.0-beta.23316.6][3]\r\n\r\n[3]: https://github.com/dotnet/arcade/compare/c279376800...e2334b2be3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9305)\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/9305","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#9305)"},{"Id":"1761796082","IsPullRequest":true,"CreatedAt":"2023-06-19T17:16:21","Actor":"dotnet-maestro[bot]","Number":"9306","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230618.9\r\n- **Date Produced**: June 19, 2023 7:31:23 AM UTC\r\n- **Commit**: 815953a12c822847095a843d69c610a9f895ae3f\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **System.CodeDom**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **System.Data.Odbc**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **System.Data.OleDb**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **System.IO.Ports**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **System.Management**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **System.Reflection.Context**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **System.Runtime.Caching**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **System.Speech**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **System.Text.Json**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23318.9][3]\r\n\r\n[3]: https://github.com/dotnet/runtime/compare/be6a1389c8...815953a12c\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9306)\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/9306","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#9306)"},{"Id":"1760496814","IsPullRequest":true,"CreatedAt":"2023-06-16T23:29:39","Actor":"dotnet-maestro[bot]","Number":"9302","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230616.1\r\n- **Date Produced**: June 16, 2023 10:05:12 AM UTC\r\n- **Commit**: be6a1389c852fdc96a919769867fb3f3ddb0fbde\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.CodeDom**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Data.Odbc**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Data.OleDb**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.IO.Ports**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Management**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Reflection.Context**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Runtime.Caching**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Speech**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Text.Json**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/171a525880...be6a1389c8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9302)","Url":"https://github.com/dotnet/winforms/pull/9302","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#9302)"},{"Id":"1760887377","IsPullRequest":false,"CreatedAt":"2023-06-16T15:48:59","Actor":"sharwell","Number":"9304","RawContent":null,"Title":"Unit tests crash due to failure to resolve Arg_NullReferenceException","State":"open","Body":"```\r\nProcess terminated. Encountered infinite recursion while looking up resource 'Arg_NullReferenceException' in System.Private.CoreLib. Verify the installation of .NET is complete and does not need repairing, and that the state of the process has not become corrupted.\r\n   at System.Environment.FailFast(System.String)\r\n   at System.SR.InternalGetResourceString(System.String)\r\n   at System.SR.GetResourceString(System.String)\r\n   at System.NullReferenceException..ctor()\r\n   at System.Resources.ResourceManager.GetString(System.String, System.Globalization.CultureInfo)\r\n   at System.SR.InternalGetResourceString(System.String)\r\n   at System.SR.GetResourceString(System.String)\r\n   at System.NullReferenceException..ctor()\r\n   at System.Resources.ResourceManager.GetString(System.String, System.Globalization.CultureInfo)\r\n   at System.SR.InternalGetResourceString(System.String)\r\n   at System.SR.GetResourceString(System.String)\r\n   at System.Diagnostics.StackTrace.ToString(TraceFormat, System.Text.StringBuilder)\r\n   at System.Diagnostics.StackTrace.ToString()\r\n   at System.DisposalTracking+Tracker..ctor(Boolean)\r\n   at System.Windows.Forms.DeviceContextHdcScope..ctor(System.Drawing.IDeviceContext, System.Windows.Forms.ApplyGraphicsProperties, Boolean)\r\n   at System.Windows.Forms.DeviceContextHdcScope..ctor(System.Drawing.IDeviceContext, Boolean, Boolean)\r\n   at System.Windows.Forms.Control.PaintBackColor(System.Windows.Forms.PaintEventArgs, System.Drawing.Rectangle, System.Drawing.Color)\r\n   at System.Windows.Forms.Control.PaintBackground(System.Windows.Forms.PaintEventArgs, System.Drawing.Rectangle, System.Drawing.Color, System.Drawing.Point)\r\n   at System.Windows.Forms.Control.PaintBackground(System.Windows.Forms.PaintEventArgs, System.Drawing.Rectangle)\r\n   at System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)\r\n   at System.Windows.Forms.ScrollableControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)\r\n   at System.Windows.Forms.Control.PaintWithErrorHandling(System.Windows.Forms.PaintEventArgs, Int16)\r\n   at System.Windows.Forms.Control.WmEraseBkgnd(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.ScrollableControl.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.ContainerControl.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Form.WmEraseBkgnd(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.OnMessage(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.NativeWindow.Callback(Windows.Win32.Foundation.HWND, WM, Windows.Win32.Foundation.WPARAM, Windows.Win32.Foundation.LPARAM)\r\n   at Windows.Win32.PInvoke.CallWindowProc(Windows.Win32.Foundation.LRESULT (Windows.Win32.Foundation.HWND, UInt32, Windows.Win32.Foundation.WPARAM, Windows.Win32.Foundation.LPARAM), Windows.Win32.Foundation.HWND, UInt32, Windows.Win32.Foundation.WPARAM, Windows.Win32.Foundation.LPARAM)\r\n   at Windows.Win32.PInvoke.CallWindowProc(Windows.Win32.Foundation.LRESULT (Windows.Win32.Foundation.HWND, UInt32, Windows.Win32.Foundation.WPARAM, Windows.Win32.Foundation.LPARAM), Windows.Win32.Foundation.HWND, UInt32, Windows.Win32.Foundation.WPARAM, Windows.Win32.Foundation.LPARAM)\r\n   at Windows.Win32.PInvoke.CallWindowProc[[Windows.Win32.Foundation.HWND, System.Windows.Forms.Primitives, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](Void*, Windows.Win32.Foundation.HWND, UInt32, Windows.Win32.Foundation.WPARAM, Windows.Win32.Foundation.LPARAM)\r\n   at System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Form.DefWndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.ScrollableControl.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.ContainerControl.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.OnMessage(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.NativeWindow.Callback(Windows.Win32.Foundation.HWND, WM, Windows.Win32.Foundation.WPARAM, Windows.Win32.Foundation.LPARAM)\r\n```\r\n\r\nhttps://dev.azure.com/dnceng-public/public/_build/results?buildId=307289&view=results\r\nhttps://dev.azure.com/dnceng-public/public/_build/results?buildId=309994&view=results\r\nhttps://dev.azure.com/dnceng-public/public/_build/results?buildId=310192&view=results","Url":"https://github.com/dotnet/winforms/issues/9304","RelatedDescription":"Open issue \"Unit tests crash due to failure to resolve Arg_NullReferenceException\" (#9304)"},{"Id":"1760314728","IsPullRequest":false,"CreatedAt":"2023-06-16T08:37:45","Actor":"JPasterkampRotec","Number":"9301","RawContent":null,"Title":"Graphics.Clear not working with alpha 0 values","State":"open","Body":"### Description\n\nThe `Clear(System.Drawing.Color color)` method of `System.Drawing.Graphics` does not set the RGB values correctly when a color with alpha 0 is used.\n\n### Reproduction Steps\n\nThis unit test will fail:\r\n``` csharp\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing System.Drawing;\r\nusing System.Drawing.Imaging;\r\n\r\n[TestMethod]\r\npublic void ClearlyNotWorking()\r\n{\r\n    var image = new Bitmap(3, 3, PixelFormat.Format32bppArgb);\r\n    \r\n    Color initialColor = image.GetPixel(0, 0);\r\n    Assert.AreEqual(0, initialColor.A);\r\n    Assert.AreEqual(0, initialColor.R);\r\n    Assert.AreEqual(0, initialColor.G);\r\n    Assert.AreEqual(0, initialColor.B);\r\n    \r\n    using (var graphics = Graphics.FromImage(image))\r\n    {\r\n        // Color.Transparent is A=0, R=255, G=255, B=255\r\n        graphics.Clear(Color.Transparent);\r\n    }\r\n    \r\n    Color newColor = image.GetPixel(0, 0);\r\n    Assert.AreEqual(Color.Transparent.A, newColor.A);\r\n    // Expecting 255 on the RGB values, but actually they remain 0.\r\n    Assert.AreEqual(Color.Transparent.R, newColor.R);\r\n    Assert.AreEqual(Color.Transparent.G, newColor.G);\r\n    Assert.AreEqual(Color.Transparent.B, newColor.B);\r\n}\r\n```\n\n### Expected behavior\n\nI expect all pixels in the bitmap to have exactly the color specified in the `System.Drawing.Graphics.Clear(System.Drawing.Color color)` method.\n\n### Actual behavior\n\nRGB values remain 0 when a color with alpha 0 is provided to the `System.Drawing.Graphics.Clear(System.Drawing.Color color)` method.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\nYou can work around this by:\r\n- Locking the bitmap and getting the `BitmapData`.\r\n- Manually changing all values in the data\r\n- Unlocking the bitmap\n\n### Configuration\n\nTested and found the issue in:\r\n- .NET 7 console application \r\n- .NET Framework WPF application.\r\n\r\nI'm on Windows 10 Pro 21H2 19044.2251 (x64), although I don't think that matters for this issue.\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/winforms/issues/9301","RelatedDescription":"Open issue \"Graphics.Clear not working with alpha 0 values\" (#9301)"},{"Id":"1760658224","IsPullRequest":false,"CreatedAt":"2023-06-16T03:43:21","Actor":"idmansourid","Number":"9303","RawContent":null,"Title":"How to disable row shifting when column is sorting in datatable","State":"open","Body":"When it is sorted, when I give a value to the cell, the row moves. I don't want this to happen. I work with DataGridView and DataTable . (vb.net-vs2019)\r\nThis is a weakness in 'DataTable' or 'DataGridView'?\r\nthe biggest problem. Will this problem be solved in the future? In other versions of DataTable or DataGridView.\r\nIt would be great if it had an option named (orderFix).\r\nHow can this feedback be reported?\r\n![20230609_155121 (1)](https://github.com/dotnet/dotnet-api-docs/assets/77550842/2808c114-ff4e-4512-aab7-d1eba83a41d4)\r\n\r\n`    Dim MyDataTable As New DataTable\r\n    Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load\r\n     MyDataTable.Columns.Add(\"id\")\r\n        MyDataTable.Columns.Add(\"f1\")\r\n        MyDataTable.Columns.Add(\"f2\")\r\n        MyDataTable.Columns.Add(\"f3\")\r\n    MyDataTable.Rows.Add({\"1\", \"a1\", \"b1\", \"c1\"})\r\n    MyDataTable.Rows.Add({\"2\", \"a2\", \"b2\", \"c2\"})\r\n    MyDataTable.Rows.Add({\"3\", \"a3\", \"b3\", \"c3\"})\r\n    dgv.DataSource = MyDataTable\r\n    dgv.Columns(0).SortMode = DataGridViewColumnSortMode.Programmatic\r\n    dgv.Columns(1).SortMode = DataGridViewColumnSortMode.Programmatic\r\n    dgv.Columns(2).SortMode = DataGridViewColumnSortMode.Programmatic\r\n    dgv.Columns(3).SortMode = DataGridViewColumnSortMode.Programmatic\r\nEnd Sub\r\n\r\n Private Sub Button3_Click(sender As Object, e As EventArgs) Handles Button3.Click\r\n    MyDataTable.DefaultView.Sort = \"[f2] asc\"\r\nEnd Sub`","Url":"https://github.com/dotnet/winforms/issues/9303","RelatedDescription":"Open issue \"How to disable row shifting when column is sorting in datatable\" (#9303)"},{"Id":"1758677333","IsPullRequest":true,"CreatedAt":"2023-06-15T23:58:55","Actor":"dotnet-maestro[bot]","Number":"9294","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20230614.1\r\n- **Date Produced**: June 14, 2023 5:18:10 PM UTC\r\n- **Commit**: c27937680063bcf06804c9fd0466d26a0f9ea4e6\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23313.6 to 8.0.0-beta.23314.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.23313.6 to 8.0.0-beta.23314.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.23313.6 to 8.0.0-beta.23314.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23313.6 to 8.0.0-beta.23314.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.23313.6 to 8.0.0-beta.23314.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23313.6 to 8.0.0-beta.23314.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/74bd8c5340...c279376800\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9294)","Url":"https://github.com/dotnet/winforms/pull/9294","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#9294)"},{"Id":"1759622959","IsPullRequest":true,"CreatedAt":"2023-06-15T23:54:07","Actor":"JeremyKuhne","Number":"9300","RawContent":null,"Title":"Update to the latest CSWin32","State":"closed","Body":"Take the latest drop of CSWin32.\r\n\r\nThere were a number of changes, but the key ones were:\r\n\r\n- VARIANT moved to another namespace\r\n- CsWin32 wrapper methods that take strings no longer have unusued/reserved parameters\r\n- HGLOBAL is now used in signatures\r\n- Some parameters moved from enums to uint\r\n\r\nA few other things in this change:\r\n\r\n- Added start-vs.cmd to the solution folder\r\n- Pinned created Arrays in VARIANT to avoid a potential memory corruption\r\n- Removed VARIANT IRecord related code that was ultimately going to throw\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9300)","Url":"https://github.com/dotnet/winforms/pull/9300","RelatedDescription":"Closed or merged PR \"Update to the latest CSWin32\" (#9300)"},{"Id":"1759546793","IsPullRequest":true,"CreatedAt":"2023-06-15T23:52:15","Actor":"dotnet-maestro[bot]","Number":"9298","RawContent":null,"Title":"[release/7.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1bb79c46-2599-4c95-8164-08da7ef6284d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1bb79c46-2599-4c95-8164-08da7ef6284d\r\n- **Build**: 20230613.4\r\n- **Date Produced**: June 13, 2023 9:38:29 PM UTC\r\n- **Commit**: 59ac824080b9807fd91dbc8a6d2b4447e74874ab\r\n- **Branch**: refs/heads/release/7.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.23211.2 to 7.0.0-beta.23313.4][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.23211.2 to 7.0.0-beta.23313.4][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.23211.2 to 7.0.0-beta.23313.4][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.23211.2 to 7.0.0-beta.23313.4][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.23211.2 to 7.0.0-beta.23313.4][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.23211.2 to 7.0.0-beta.23313.4][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/7c5e5a782c...59ac824080\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates sdk.version to 7.0.107\r\n  - Updates tools.dotnet to 7.0.107\r\n\r\n[marker]: <> (End:1bb79c46-2599-4c95-8164-08da7ef6284d)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9298)","Url":"https://github.com/dotnet/winforms/pull/9298","RelatedDescription":"Closed or merged PR \"[release/7.0] Update dependencies from dotnet/arcade\" (#9298)"},{"Id":"1759561579","IsPullRequest":true,"CreatedAt":"2023-06-15T21:37:09","Actor":"dotnet-maestro[bot]","Number":"9299","RawContent":null,"Title":"[release/6.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:84f431dc-3375-4a46-af87-08d961c59698)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 84f431dc-3375-4a46-af87-08d961c59698\r\n- **Build**: 20230613.5\r\n- **Date Produced**: June 13, 2023 9:38:40 PM UTC\r\n- **Commit**: 91616785a1a6578c83f7e93d98c34a1eb83d6223\r\n- **Branch**: refs/heads/release/6.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.23211.7 to 6.0.0-beta.23313.5][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 6.0.0-beta.23211.7 to 6.0.0-beta.23313.5][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.23211.7 to 6.0.0-beta.23313.5][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.23211.7 to 6.0.0-beta.23313.5][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.23211.7 to 6.0.0-beta.23313.5][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.23211.7 to 6.0.0-beta.23313.5][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/7bca7a24df...91616785a1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates sdk.version to 6.0.118\r\n  - Updates tools.dotnet to 6.0.118\r\n\r\n[marker]: <> (End:84f431dc-3375-4a46-af87-08d961c59698)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9299)","Url":"https://github.com/dotnet/winforms/pull/9299","RelatedDescription":"Closed or merged PR \"[release/6.0] Update dependencies from dotnet/arcade\" (#9299)"},{"Id":"1759312444","IsPullRequest":true,"CreatedAt":"2023-06-15T18:05:30","Actor":"sharwell","Number":"9297","RawContent":null,"Title":"Set foreground","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n## Proposed changes\r\n\r\n- \r\n- \r\n- \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9297)","Url":"https://github.com/dotnet/winforms/pull/9297","RelatedDescription":"Open PR \"Set foreground\" (#9297)"},{"Id":"1759169729","IsPullRequest":false,"CreatedAt":"2023-06-15T16:18:36","Actor":"dmitrii-drobotov","Number":"9296","RawContent":null,"Title":"Accessible properties AccessKey and KeyboardShortcut ignore UseMnemonic = false","State":"open","Body":"### .NET version\r\n\r\n.NET 8.0.0-preview.6.23307.4\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNo\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nNo\r\n\r\n### Issue description\r\n\r\nButton, Label and derived controls have [mnemonics](https://learn.microsoft.com/en-us/dotnet/api/system.windows.forms.label.usemnemonic) feature, which allows making a shortcut with one of characters in control's Text. For example, a button with `UseMnemonic = true` and `Text = \"&Button\"` will be displayed as \"<ins>B</ins>utton\" and can be activated by pressing Alt+B. If `UseMnemonic` is set to `false`, ampersand will be treated as a regular character, and Alt+B shortcut won't work.\r\n\r\nAccessible objects set mnemonic shortcut in `AccessKey` and `KeyboardShortcut` properties, which makes screen readers read the shortcut when control is focused. However, when mnemonic is disabled by setting `UseMnemonic = false`, accessible properties ignore it and still set the shortcut. Screen readers will read the shortcut, even though it doesn't work.\r\n\r\n#### Actual behavior\r\n\r\nhttps://github.com/dotnet/winforms/assets/102954094/2a100682-d544-4d6a-848e-e25f4ab7a2b7\r\n\r\nNarrator reads the form as follows:\r\n\r\n> Mnemonic, edit, Alt+ m, \r\n> No mnemonic, edit, Alt+ n, \r\n> Mnemonic, button, Alt+ e, \r\n> No mnemonic, button, Alt+ o, \r\n> Mnemonic, radio button, selected, Alt+ i, \r\n> Mnemonic, radio button, non-selected, Alt+ i, \r\n> No mnemonic, radio button, selected, Alt+ c, \r\n\r\nFor controls with \"No mnemonic\" text, pressing announced shortcut will not do anything\r\n\r\n#### Expected behavior\r\n\r\n* `AccessKey` and `KeyboardShortcut` should be empty when mnemonics are disabled\r\n* Narrator should not read shortcut when mnemonics are disabled\r\n* Narrator should read ampersand as part of the text when mnemonics are disabled, exactly as displayed\r\n\r\n### Steps to reproduce\r\n\r\nRun sample app: \r\n[MnemonicRepro.zip](https://github.com/dotnet/winforms/files/11759886/MnemonicRepro.zip)\r\n\r\nMost likely it also reproduces with all controls derived from Button and Label.","Url":"https://github.com/dotnet/winforms/issues/9296","RelatedDescription":"Open issue \"Accessible properties AccessKey and KeyboardShortcut ignore UseMnemonic = false\" (#9296)"},{"Id":"1758677940","IsPullRequest":true,"CreatedAt":"2023-06-15T12:27:12","Actor":"dotnet-maestro[bot]","Number":"9295","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230614.15\r\n- **Date Produced**: June 15, 2023 9:13:52 AM UTC\r\n- **Commit**: 171a525880315369e48c6adf6c181f98357352a5\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.CodeDom**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Data.Odbc**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Data.OleDb**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.IO.Ports**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Management**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Reflection.Context**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Runtime.Caching**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Speech**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Text.Json**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/48e1fb8185...171a525880\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9295)","Url":"https://github.com/dotnet/winforms/pull/9295","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#9295)"},{"Id":"1758170580","IsPullRequest":false,"CreatedAt":"2023-06-15T06:59:50","Actor":"hmisaki","Number":"9293","RawContent":null,"Title":"The Form display incorrectly in the high DPI.","State":"open","Body":"### .NET version\n\n.Net 6\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo\n\n### Issue description\n\nThe WinForm dialog display incorrectly in the high DPI(>100%) see the screenshot:\r\n![displayError](https://github.com/dotnet/winforms/assets/23306796/07298380-2a21-40e1-ab02-6394d8965b52)\r\nThis is the correct display:\r\n![displayCorrectly](https://github.com/dotnet/winforms/assets/23306796/ca736be4-6ef7-4594-9276-5e84aed4daf3)\r\nBut if I add a `Font = Font` or `Scale(new SizeF(1.0F,1.0F))` to the end of `InitializeComponent`, we can get  the right display again:\r\n![DisplayCorrectlyAfterFix](https://github.com/dotnet/winforms/assets/23306796/afa5d8b2-7073-45fc-888b-64087fd38c65)\r\n\r\nSo why do I need the extra code to make it display correctly? We just migrated our code to .net 6 from .net 4.8. There are no these situations on the .net framework 4.8. Did we have any solution to handle this on the high DPI?\n\n### Steps to reproduce\n\nCreate a new WinForm project (.net 6)\r\nUse a groupbox, and fill in some checkboxes.\r\nSet the dialog's AutoScaleMode to Dpi.\r\nBuilding.\r\nSet the system Scale to 200% (system settings ->Display -> Scale and layout).\r\nOpen the new exe.","Url":"https://github.com/dotnet/winforms/issues/9293","RelatedDescription":"Open issue \"The Form display incorrectly in the high DPI.\" (#9293)"},{"Id":"1757351903","IsPullRequest":true,"CreatedAt":"2023-06-14T17:59:57","Actor":"dreddy-work","Number":"9292","RawContent":null,"Title":"Update intellisense version","State":"closed","Body":"Update version.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9292)","Url":"https://github.com/dotnet/winforms/pull/9292","RelatedDescription":"Closed or merged PR \"Update intellisense version\" (#9292)"},{"Id":"1757331871","IsPullRequest":false,"CreatedAt":"2023-06-14T17:11:08","Actor":"JeremyKuhne","Number":"9291","RawContent":null,"Title":"ComNativeDescriptor is dependent on Windows","State":"open","Body":"We've recently enabled using `ComWrappers` with the `ComNativeDescriptor`- this `TypeDescriptionProvider` is what is used by the .NET runtime `TypeDescriptor` for COM objects.\r\n\r\n`ComWrappers` supports other platforms (Unix/Mac), but our current implementation is dependent on Windows PInvokes. These are used both in the `ComNativeDescriptor` code directly and in support code, such as our `VARIANT` implementation.\r\n\r\nWe could remove some of these dependencies, but not everything. As a starting point it would probably be good to target COM types that have no complicated types (that is \"primitives\") exposed as properties (as described in the `ITypeInfo` for the type).\r\n\r\nConverters that have dependencies on Windows APIs (directly, or indirectly through System.Drawing) would need to be conditionalized. It is unclear what would be the right answer for these. Do we skip a property when it has an IPicture or IFont, for example?\r\n\r\nIdeally, we would get cross-plat primitive VARIANT handling from the .NET runtime (that would work with AOT/Trimming enabled). The notable Win32 dependency we have is with SafeArray handling. I haven't looked closely at those APIs, so I'm not sure how difficult it would be to manually implement.\r\n\r\nCapturing this for the future. This is unlikely to get scheduled in the near term.","Url":"https://github.com/dotnet/winforms/issues/9291","RelatedDescription":"Open issue \"ComNativeDescriptor is dependent on Windows\" (#9291)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-06-21T03:30:31.2689032Z","RunDurationInMilliseconds":532}