{"Data":{"GitHub":{"Issues":[{"Id":"2456976391","IsPullRequest":false,"CreatedAt":"2024-08-09T02:34:00","Actor":"LeafShi1","Number":"11846","RawContent":null,"Title":"Enable nullable reference types for System.Windows.Forms.Tests","State":"open","Body":"Add `#nullable enable` for all unit tests files under `System.Windows.Forms.Tests`\r\n","Url":"https://github.com/dotnet/winforms/issues/11846","RelatedDescription":"Open issue \"Enable nullable reference types for System.Windows.Forms.Tests\" (#11846)"},{"Id":"2456865126","IsPullRequest":false,"CreatedAt":"2024-08-09T00:09:52","Actor":"merriemcgaw","Number":"11845","RawContent":null,"Title":"Documenting .NET 9 APIs","State":"open","Body":"### Issue description\r\n\r\n*This task needs to be finished the day before the RC2 snap (September 15th).*\r\n\r\nThe dotnet-api-docs repo is currently our source of truth for documentation for two reasons:\r\n\r\nWe ensure the docs go through language review there via a PR (it happens in dotnet-api-docs)\r\nWe use that language-reviewed content to generate the official intellisense xmls that we then ship to customers (this is fed back to dotnet/runtime via an internal package)\r\nThe documentation in triple slash comments in source code needs to be manually ported to dotnet-api-docs to ensure the above process is done. \r\n\r\n### Instructions\r\n\r\nPlease follow the detailed instructions in the [runtime issue](https://github.com/dotnet/runtime/issues/105974) that is tracking their efforts. The runtime issue already details the System.Drawing APIs that have been added. This is the currently known list of APIs that we need to make sure have /// comments and then ensure we've ported:\r\n\r\n- [ ] [System.Drawing](https://github.com/dotnet/runtime/issues/105975)\r\n- [ ] ToolStripItem.SelectedChanged\r\n- [ ] ToolStripItem.OnSelectedChanged\r\n- [ ] FolderBrowserDialog.Multiselect\r\n- [ ] FolderBrowserDialog.SelectedPaths\r\n- [ ] ToolStrip.AllowClickThrough","Url":"https://github.com/dotnet/winforms/issues/11845","RelatedDescription":"Open issue \"Documenting .NET 9 APIs\" (#11845)"},{"Id":"2456613448","IsPullRequest":true,"CreatedAt":"2024-08-08T22:34:48","Actor":"JeremyKuhne","Number":"11843","RawContent":null,"Title":"Use modern event hooking syntax","State":"closed","Body":"Use the simplified event hooking syntax in System.Windows.Forms. We have a lot of these, so I've only done the main assembly in this commit to keep this manageable.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11843)","Url":"https://github.com/dotnet/winforms/pull/11843","RelatedDescription":"Closed or merged PR \"Use modern event hooking syntax\" (#11843)"},{"Id":"2456513028","IsPullRequest":true,"CreatedAt":"2024-08-08T20:54:49","Actor":"JeremyKuhne","Number":"11842","RawContent":null,"Title":"Stop locking internal objects with `this`","State":"closed","Body":"Better to have explicit lock objects from a maintenance perspective.\r\n\r\nIdeally we can whittle down some of the other locks on non Lock objects, but we need to be very careful about where we might be inadvertently exposing the ability to lock externally. Even if you can technically do so, we might want to take the breaking change for some of these in 10.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11842)","Url":"https://github.com/dotnet/winforms/pull/11842","RelatedDescription":"Closed or merged PR \"Stop locking internal objects with `this`\" (#11842)"},{"Id":"2456364134","IsPullRequest":true,"CreatedAt":"2024-08-08T18:48:29","Actor":"JeremyKuhne","Number":"11841","RawContent":null,"Title":"Change locks to System.Threading.Lock","State":"closed","Body":"Change internal lock objects to System.Threading.Lock\r\n\r\nFixes #11672\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11841)","Url":"https://github.com/dotnet/winforms/pull/11841","RelatedDescription":"Closed or merged PR \"Change locks to System.Threading.Lock\" (#11841)"},{"Id":"2456248781","IsPullRequest":true,"CreatedAt":"2024-08-08T17:32:43","Actor":"JeremyKuhne","Number":"11840","RawContent":null,"Title":"Merge main into 10.0","State":"closed","Body":"Merge main into 10.0\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11840)","Url":"https://github.com/dotnet/winforms/pull/11840","RelatedDescription":"Closed or merged PR \"Merge main into 10.0\" (#11840)"},{"Id":"2455620325","IsPullRequest":true,"CreatedAt":"2024-08-08T15:58:53","Actor":"dotnet-maestro[bot]","Number":"11838","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20240808.1\r\n- **Date Produced**: August 8, 2024 8:54:09 AM UTC\r\n- **Commit**: 610e251fc34686333b98188320ca1eecd7e6af6c\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.24405.1 to 9.0.0-beta.24408.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 9.0.0-beta.24405.1 to 9.0.0-beta.24408.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 9.0.0-beta.24405.1 to 9.0.0-beta.24408.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.24405.1 to 9.0.0-beta.24408.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 9.0.0-beta.24405.1 to 9.0.0-beta.24408.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.24405.1 to 9.0.0-beta.24408.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/2c829550b9...610e251fc3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11838)","Url":"https://github.com/dotnet/winforms/pull/11838","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#11838)"},{"Id":"2455620967","IsPullRequest":true,"CreatedAt":"2024-08-08T12:42:26","Actor":"dotnet-maestro[bot]","Number":"11839","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20240807.9\r\n- **Date Produced**: August 8, 2024 4:45:30 AM UTC\r\n- **Commit**: a562a9fe5582dabf601884392d5ce987484ea706\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.CodeDom**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.Formats.Nrbf**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.IO.Hashing**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.IO.Ports**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.Management**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.Runtime.Serialization.Formatters**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.Speech**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.Text.Json**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-rc.1.24406.14 to 9.0.0-rc.1.24407.9][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/4985021ebf...a562a9fe55\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11839)","Url":"https://github.com/dotnet/winforms/pull/11839","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#11839)"},{"Id":"2455277285","IsPullRequest":false,"CreatedAt":"2024-08-08T09:09:14","Actor":"AndrewDavidLees1974","Number":"11837","RawContent":null,"Title":"KeyboardToolTip created for a DataGridView with ShowCellTooltips enabled can crash in HideAllToolTips","State":"open","Body":"### .NET version\n\n.NET 8\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n.NET 6 had other cell tooltip issues which resulted in us disabling cell tooltips.  We found the behaviour had improved in .NET8 so we enabled them again.\r\n\r\n.NET Framework did not have this issue, but .NET 8 has added these lines to OnCurrentCellChanged:\r\n\r\n  if (CurrentCell is not null && (ShowCellToolTips || (ShowCellErrors && !string.IsNullOrEmpty(CurrentCell?.ErrorText))))\r\n        {\r\n            ActivateToolTip(false /*activate*/, string.Empty, CurrentCell.ColumnIndex, CurrentCell.RowIndex);\r\n            KeyboardToolTipStateMachine.Instance.NotifyAboutGotFocus(CurrentCell);\r\n        }\r\n\r\nWhich always shows a cell tooltip now when navigating the grid using arrow keys (not really sure why that is necessary though as cell tool tips before were only shown for truncated content?)\n\n### Issue description\n\nWhen ShowCellToopTips is true for a DataGridView and the user navigates with arrow keys, the grid creates a KeyboardToolTip in the base Control PropertiesStore.  This Tooltip is never disposed which leads to it remaining attached to the TopLevelForm.  If the data grid is disposed while the cell tooltip is showing (e.g. removing a tab page that contains a data grid) and the top level form receives a WmActivate at the same time then the call to BaseFormDeactivate will crash in HideAllTooltips because it can't get the handle of the disposed grid.\r\n\r\nThe following in Tooltip Dispose code is also slightly odd:\r\n\r\n                // Unhook the DeactivateEvent. Find the Form for associated Control and hook\r\n                // up to the Deactivated event to Hide the Shown tooltip\r\n                if (TopLevelControl is Form baseFrom)\r\n                {\r\n                    baseFrom.Deactivate -= BaseFormDeactivate;\r\n                }\r\n\r\nSince RemoveAll called further up will set _topLevelControl to null and clear _tools so the call to TopLevelControl will always return null at this point.  TopLevelControl is correct before the call to RemoveAll so perhaps its value should be cached or Tooltip detached from Deactivate earlier in the Dispose method?\n\n### Steps to reproduce\n\nDispose a data grid view that has an active keyboard cell tooltip in such a way as to force a WmActivate while the tooltip is still showing.\r\n\r\nDisposing of the KeyboardToolTip in the data grid dispose method fixes this issue.  I achieve this by calling the following code in my (sub classed) data grid before calling the base Dispose method:\r\n\r\nprivate static readonly PropertyInfo KeyboardToolTipPropertyInfo = typeof(DataGridView).GetProperty(\"KeyboardToolTip\", BindingFlags.Instance | BindingFlags.NonPublic);\r\n\r\n        if (KeyboardToolTipPropertyInfo.GetValue(dataGridView) is ToolTip keyboardToolTip)\r\n        {\r\n            keyboardToolTip.Dispose();\r\n        }","Url":"https://github.com/dotnet/winforms/issues/11837","RelatedDescription":"Open issue \"KeyboardToolTip created for a DataGridView with ShowCellTooltips enabled can crash in HideAllToolTips\" (#11837)"},{"Id":"2454989362","IsPullRequest":false,"CreatedAt":"2024-08-08T06:37:55","Actor":"KlausLoeffelmann","Number":"11836","RawContent":null,"Title":"Check correct usage of the VisualStylesRenderer","State":"open","Body":"We do not use the VisualStyleRenderers, especially the TextRenderer consistently. Or at all.\nWe should spend some time to investigate and see, how we can streamline usage.\n\nSee `GroupBox.OnPaint` as an example.\n","Url":"https://github.com/dotnet/winforms/issues/11836","RelatedDescription":"Open issue \"Check correct usage of the VisualStylesRenderer\" (#11836)"},{"Id":"2450301273","IsPullRequest":true,"CreatedAt":"2024-08-08T02:28:41","Actor":"Epica3055","Number":"11822","RawContent":null,"Title":"fix The RichTextBox control is not support the SmartTag under ToolStripContainer tab","State":"closed","Body":"\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #11792\r\n\r\n\r\n## Proposed changes\r\n\r\n- \r\n- `surface.CreateControl` will add the Control to the designer form, so we don't have to add these controls to `tabPage6`\r\n- \r\n\r\n<!-- \r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n -->\r\n\r\n\r\n\r\n\r\n## Screenshots \r\n\r\n### Before\r\n\r\n![image](https://github.com/user-attachments/assets/ffa669d9-f81e-4156-886b-487b8067fd44)\r\n\r\n### After\r\n\r\n![image](https://github.com/user-attachments/assets/a285ecd4-5cf2-4b7f-b940-b5c1fad9d7e7)\r\n![image](https://github.com/user-attachments/assets/7be37a43-084b-459d-a69c-d8aef8eec574)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11822)","Url":"https://github.com/dotnet/winforms/pull/11822","RelatedDescription":"Closed or merged PR \"fix The RichTextBox control is not support the SmartTag under ToolStripContainer tab\" (#11822)"},{"Id":"2454550118","IsPullRequest":true,"CreatedAt":"2024-08-08T01:07:17","Actor":"JeremyKuhne","Number":"11835","RawContent":null,"Title":"Ensure source paths leave 40 characters for root","State":"closed","Body":"The default path for VS is in the user directory, which ends up being something like `C:\\Users\\jkuhne\\source\\repos\\winforms`.\r\n\r\nRecent paths make the repo impossible to sync. I've added a test that reserves 40 characters for the repro root path and moved files out of subdirectories that violated that.\r\n\r\nA longer follow up is to see if we can pick some type names that aren't so long. Additionally we should try to up this check to 50 characters- which would require more renaming.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11835)","Url":"https://github.com/dotnet/winforms/pull/11835","RelatedDescription":"Closed or merged PR \"Ensure source paths leave 40 characters for root\" (#11835)"},{"Id":"2452879203","IsPullRequest":false,"CreatedAt":"2024-08-07T20:27:13","Actor":"tbambuch","Number":"11831","RawContent":null,"Title":"MSAA: overriding CreateAccessibilityInstance() with custom AccessibleObject implementation does not work and causes InvalidOperationException ","State":"closed","Body":"### .NET version\n\n8.0\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\nIf I understand the docs correctly (and it used to work in the Framework, so I believe I do), the correct way to implement custom MSAA / UI Automation provider is to override CreateAccessibilityInstance() and pass the AccessibleObject.\r\nHowever when I return an AccessibleObject which is just derived from ControlAccessibleObject without overriding anything, the MSAA is not reported correctly and uses the default values for generic Control. Overriding anything like Role or Status properties has no effect on MSAA at all, but is correctly reported in UIA.\r\nAlso, when overriding CreateAccessibilityInstance(), the InvalidOperationException is raised sometimes.\n\n### Steps to reproduce\n\nSample is attached\r\n\r\n- Create a custom control. In my case I derived MyCheckBox from CheckBox.\r\n- Set Accessible role to anything than default CheckBox´s role - in my case `AccessibleRole = AccessibleRole.Slider`\r\n- If you run the app now and inspect the accessiblity with Inspect.exe, everything works as expected both for MSAA and UIA\r\n- Now override CreateAccessibilityInstance() and return a new ControlCheckBoxAccessibleObject() which just derives from Winforms CheckBoxAccessibleObject, without overriding anything.\r\n- If you run the app now, MSAA reports the role as \"Window\", however UIA reports the correct type - \"Slider\"\r\n\r\nAlso, if you click on the checkbox, InvalidOperationException is raised:\r\n\r\n`Type 'AccessibilityTest.ControlCheckBoxAccessibleObject' has a ComVisible(false) parent 'System.Windows.Forms.CheckBox+CheckBoxAccessibleObject' in its hierarchy, therefore QueryInterface calls for IDispatch or class interfaces are disallowed.`'\r\n\r\n\r\n[AccessibilityTest.zip](https://github.com/user-attachments/files/16520429/AccessibilityTest.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/11831","RelatedDescription":"Closed issue \"MSAA: overriding CreateAccessibilityInstance() with custom AccessibleObject implementation does not work and causes InvalidOperationException \" (#11831)"},{"Id":"2452053414","IsPullRequest":true,"CreatedAt":"2024-08-07T18:21:02","Actor":"JeremyKuhne","Number":"11829","RawContent":null,"Title":"Don't dispose FontFamily objects from installed fonts","State":"closed","Body":"There is no need to track or dispose of FontFamily objects from the installed font collection. This collection is a static in GDI+. Ref counting needs to be done only when coming from a private collection.\r\n\r\n- Should fix ref count issues with private font collections\r\n- Static FontFamily objects are now safe to use after \"disposal\"\r\n- Removes an unnecessary creation of an empty private font collection in FontConverter\r\n- Reuses FontFamily instances if from installed fonts\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11829)","Url":"https://github.com/dotnet/winforms/pull/11829","RelatedDescription":"Closed or merged PR \"Don't dispose FontFamily objects from installed fonts\" (#11829)"},{"Id":"2453311100","IsPullRequest":true,"CreatedAt":"2024-08-07T16:17:26","Actor":"dotnet-maestro[bot]","Number":"11833","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20240805.1\r\n- **Date Produced**: August 5, 2024 4:53:59 PM UTC\r\n- **Commit**: 2c829550b968e29389ce8392244da2b006d71301\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.24401.1 to 9.0.0-beta.24405.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 9.0.0-beta.24401.1 to 9.0.0-beta.24405.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 9.0.0-beta.24401.1 to 9.0.0-beta.24405.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.24401.1 to 9.0.0-beta.24405.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 9.0.0-beta.24401.1 to 9.0.0-beta.24405.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.24401.1 to 9.0.0-beta.24405.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/a3dae8d4fd...2c829550b9\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11833)","Url":"https://github.com/dotnet/winforms/pull/11833","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#11833)"},{"Id":"2453311732","IsPullRequest":true,"CreatedAt":"2024-08-07T16:17:03","Actor":"dotnet-maestro[bot]","Number":"11834","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20240806.14\r\n- **Date Produced**: August 7, 2024 6:51:32 AM UTC\r\n- **Commit**: 4985021ebfff545de02caa3386e3dd4b21784b95\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.CodeDom**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.Formats.Nrbf**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.IO.Hashing**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.IO.Ports**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.Management**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.Runtime.Serialization.Formatters**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.Speech**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.Text.Json**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-rc.1.24405.9 to 9.0.0-rc.1.24406.14][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/af5a23cea6...4985021ebf\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11834)","Url":"https://github.com/dotnet/winforms/pull/11834","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#11834)"},{"Id":"2452884586","IsPullRequest":true,"CreatedAt":"2024-08-07T08:26:06","Actor":"MichalPavlik","Number":"11832","RawContent":null,"Title":"*DO NOT MERGE* Test install-script.sh","State":"open","Body":"Testing updated install-script before publishing.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11832)","Url":"https://github.com/dotnet/winforms/pull/11832","RelatedDescription":"Open PR \"*DO NOT MERGE* Test install-script.sh\" (#11832)"},{"Id":"2452865614","IsPullRequest":true,"CreatedAt":"2024-08-07T08:16:32","Actor":"Epica3055","Number":"11830","RawContent":null,"Title":"Fix:The SplitContainer control cannot be deleted successfully under ToolStripContainer tab #11793","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #11793\r\n\r\n\r\n## Proposed changes\r\n\r\nWhen `SplitContainer` is deleted, two things will happen\r\n1.`SplitContainerDesigner.Dispose(bool)` will be invoked,and eventually `ComponentDesigner.Dispose(bool)` will be invoked.\r\nSo in the end, `SplitContainerDesigner.Component` will be null\r\n\r\nhttps://github.com/dotnet/winforms/blob/ab9eb71f903d7771849887a15ab5ff3f37ba4c00/src/System.Windows.Forms.Design/src/System/ComponentModel/Design/ComponentDesigner.cs#L452-L464\r\n\r\n2. `SplitContainerDesigner.ActionList` will be accessed.\r\n\r\nhttps://github.com/dotnet/winforms/blob/ab9eb71f903d7771849887a15ab5ff3f37ba4c00/src/System.Windows.Forms.Design/src/System/Windows/Forms/Design/SplitContainerDesigner.cs#L39-L42\r\n\r\nhttps://github.com/dotnet/winforms/blob/ab9eb71f903d7771849887a15ab5ff3f37ba4c00/src/System.Windows.Forms.Design/src/System/Windows/Forms/Design/SplitContainerDesigner.OrientationActionList.cs#L20-L35\r\n\r\nplease see line 21,`SplitContainerDesigner.Component` is accessed.\r\n\r\nhttps://github.com/dotnet/winforms/blob/ab9eb71f903d7771849887a15ab5ff3f37ba4c00/src/System.Windows.Forms.Design/src/System/ComponentModel/Design/ComponentDesigner.cs#L172\r\n\r\nwhen `Component` is accessed and it is null, exception will be thrown.\r\n\r\n\r\n<hr>\r\nInProcDesigner works fine because:\r\n\r\n\r\n```c#\r\nclass ComponentDesigner\r\n        protected virtual void Dispose(bool disposing) {\r\n            if (disposing) {\r\n                IComponentChangeService cs = (IComponentChangeService)GetService(typeof(IComponentChangeService));\r\n                if (cs != null)\r\n                {\r\n                    cs.ComponentRename -= new ComponentRenameEventHandler(this.OnComponentRename);\r\n                }\r\n            \r\n                component = null;\r\n                inheritedProps = null;\r\n            }\r\n        }\r\n\r\n\r\n        public IComponent Component {\r\n            get {\r\n                return component;\r\n            }\r\n        }\r\n```\r\n\r\nOOP Designer works fine because:\r\n\r\n\r\n```c#\r\nclass ComponentDesigner\r\n    protected override void Dispose(bool disposing)\r\n    {\r\n        if (disposing)\r\n        {\r\n            ComponentChangeService.ComponentRename -= OnComponentRename;\r\n        }\r\n\r\n        base.Dispose(disposing);\r\n    }\r\n\r\n\r\n    public IComponent Component\r\n    {\r\n        get => _component ?? throw new InvalidOperationException(SR.DesignerUninitialized);\r\n        private set => _component = value.OrThrowIfArgumentIsNull();\r\n    }\r\n```\r\n\r\n\r\n\r\n\r\n<!-- \r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n-\r\n -->\r\n\r\n\r\n## Screenshots\r\n\r\n### Before\r\n\r\n![image](https://github.com/user-attachments/assets/233b725b-9c5c-4ef6-8e15-b1477e110c0a)\r\n![GHIssue4](https://github.com/user-attachments/assets/34f61fbf-1302-4904-8ccd-b16363096f11)\r\n\r\n### After\r\n\r\n![issue_11793](https://github.com/user-attachments/assets/ed8c7f15-9789-484a-b96d-1916b650abc9)\r\n\r\n<!-- \r\n## Test methodology \r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  \r\n\r\n\r\n\r\n\r\n \r\n\r\n## Test environment(s) \r\n -->\r\n\r\n\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11830)","Url":"https://github.com/dotnet/winforms/pull/11830","RelatedDescription":"Open PR \"Fix:The SplitContainer control cannot be deleted successfully under ToolStripContainer tab #11793\" (#11830)"},{"Id":"2451446149","IsPullRequest":true,"CreatedAt":"2024-08-07T01:04:33","Actor":"vseanreesermsft","Number":"11824","RawContent":null,"Title":"Update branding to 6.0.34","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11824)","Url":"https://github.com/dotnet/winforms/pull/11824","RelatedDescription":"Closed or merged PR \"Update branding to 6.0.34\" (#11824)"},{"Id":"2451446393","IsPullRequest":true,"CreatedAt":"2024-08-07T01:04:07","Actor":"vseanreesermsft","Number":"11825","RawContent":null,"Title":"Update branding to 8.0.9","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11825)","Url":"https://github.com/dotnet/winforms/pull/11825","RelatedDescription":"Closed or merged PR \"Update branding to 8.0.9\" (#11825)"},{"Id":"2451819967","IsPullRequest":true,"CreatedAt":"2024-08-06T23:42:46","Actor":"JeremyKuhne","Number":"11827","RawContent":null,"Title":"Some GDI+ Font cleanup","State":"closed","Body":"GDI+ installed FontCollection is a static. We reference that indirectly in a few places, but are not consistent about it. This comes into play with both the FontCollection and FontFamily, as FontFamily instances from the installed FontCollectionare also \"effectively\" static.\r\n\r\nThis does some cleanup, with additional changes to follow. Notably:\r\n\r\n- Minor tweaking of GdiCache for naming and to move a TextRenderer specific helper to TextRenderer\r\n- Move a define down to Core\r\n- Clean up FontCollection to encapsulate setting the pointer\r\n- Suppress finalization on InstalledFontCollection as it does nothing\r\n- Make an internal instace of InstalledFontCollection\r\n- Don't allocate a string for FontFamily.GetHashCode\r\n- Don't allocate a string to strip off the @ on the Font name when constructing a FontFamily\r\n- Remove debug instance count on FontFamily\r\n\r\nThe key follow up change here will be to properly ref count FontFamily. It isn't being done right, which has an impact on PrivateFontCollection's ref counting. (Ref counting a FontFamily only impacts the FontCollection it came from. FontFamily objects aren't deleted directly. They are indirectly deleted when the FontCollection has reached 0 ref count.)\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11827)","Url":"https://github.com/dotnet/winforms/pull/11827","RelatedDescription":"Closed or merged PR \"Some GDI+ Font cleanup\" (#11827)"},{"Id":"2451853185","IsPullRequest":true,"CreatedAt":"2024-08-06T23:39:16","Actor":"KlausLoeffelmann","Number":"11828","RawContent":null,"Title":"Add first WinForms Async experimental APIs","State":"open","Body":"Note: This PR is based on https://github.com/dotnet/winforms/pull/10985.\r\nThat's why this PR has been based against feature/darkmode which holds the exact copy of the DarkMode feature.\r\n\r\nIntroduces new experimental APIs for .NET 9:\r\n\r\n`Control.InvokeAsync`.\r\n`TaskDialog.ShowDialogAsync`.\r\n`Form.ShowAsync`.\r\n`Form.ShowDialogAsync`\r\n\r\nFixes https://github.com/dotnet/winforms/issues/10739.\r\nReplaces https://github.com/dotnet/winforms/pull/9827.\r\n","Url":"https://github.com/dotnet/winforms/pull/11828","RelatedDescription":"Open PR \"Add first WinForms Async experimental APIs\" (#11828)"},{"Id":"2451585074","IsPullRequest":false,"CreatedAt":"2024-08-06T20:22:48","Actor":"jwilo","Number":"11826","RawContent":null,"Title":"Repeat occurrence of #11473, failure to publish single file","State":"closed","Body":"### Environment\r\n\r\n```\r\nMicrosoft Visual Studio Community 2022\r\nVersion 17.10.2\r\nVisualStudio.17.Release/17.10.2+35004.147\r\nMicrosoft .NET Framework\r\nVersion 4.8.09037\r\n\r\nInstalled Version: Community\r\n\r\nASP.NET and Web Tools   17.10.341.11210\r\nASP.NET and Web Tools\r\n\r\nAzure App Service Tools v3.0.0   17.10.341.11210\r\nAzure App Service Tools v3.0.0\r\n\r\nAzure Functions and Web Jobs Tools   17.10.341.11210\r\nAzure Functions and Web Jobs Tools\r\n\r\nC# Tools   4.10.0-3.24303.7+bef690dda43733707d7dccea9868fe51f34eb8a0\r\nC# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nGitHub Copilot   0.2.889.30432\r\nGitHub Copilot is an AI pair programmer that helps you write code faster and with less work.\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nNuGet Package Manager   6.10.1\r\nNuGet Package Manager in Visual Studio. For more information about NuGet, visit https://docs.nuget.org/\r\n\r\nOffice Developer Tools for Visual Studio   17.10.34627.00\r\nMicrosoft Office Developer Tools for Visual Studio\r\n\r\nRazor (ASP.NET Core)   17.10.3.2427201+4f57d1de251e654812adde201c0265a8ca7ca31d\r\nProvides languages services for ASP.NET Core Razor.\r\n\r\nSQL Server Data Tools   17.10.172.0\r\nMicrosoft SQL Server Data Tools\r\n\r\nTypeScript Tools   17.0.30327.2001\r\nTypeScript Tools for Microsoft Visual Studio\r\n\r\nVisual Basic Tools   4.10.0-3.24303.7+bef690dda43733707d7dccea9868fe51f34eb8a0\r\nVisual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.\r\n\r\nVisual F# Tools   17.10.0-beta.24228.1+dd749058c91585e9b5dae62b0f8df892429ee28f\r\nMicrosoft Visual F# Tools\r\n\r\nVisual Studio IntelliCode   2.2\r\nAI-assisted development for Visual Studio.\r\n\r\nWorkflow Manager Tools 1.0   1.0\r\nThis package contains the necessary Visual Studio integration components for Workflow Manager.\r\n```\r\n\r\n### .NET version\r\n\r\n.NET 8.0.3\r\n\r\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\r\n\r\nSame .NET version, but a slightly older version of VS, unfortunately I do not know which version, though I updated around March, and again only a few weeks ago when the problem arose\r\n\r\n### Issue description\r\n\r\nAn exact reoccurence of closed issue #11473 raised by @gen-angry\r\n\r\n### Steps to reproduce\r\n\r\nAs per #11473\r\n\r\n### Diagnostics\r\n\r\n_No response_","Url":"https://github.com/dotnet/winforms/issues/11826","RelatedDescription":"Closed issue \"Repeat occurrence of #11473, failure to publish single file\" (#11826)"},{"Id":"2450708660","IsPullRequest":true,"CreatedAt":"2024-08-06T12:36:20","Actor":"dotnet-maestro[bot]","Number":"11823","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20240805.9\r\n- **Date Produced**: August 6, 2024 8:15:39 AM UTC\r\n- **Commit**: af5a23cea6cf99842187d028946d2be2f62b7001\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.CodeDom**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.Formats.Nrbf**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.IO.Hashing**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.IO.Ports**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.Management**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.Runtime.Serialization.Formatters**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.Speech**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.Text.Json**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-rc.1.24403.1 to 9.0.0-rc.1.24405.9][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/1cc0186c3e...af5a23cea6\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11823)","Url":"https://github.com/dotnet/winforms/pull/11823","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#11823)"},{"Id":"2449975789","IsPullRequest":false,"CreatedAt":"2024-08-06T05:28:42","Actor":"Sekar47","Number":"11821","RawContent":null,"Title":"Can't be able to use the custom CollectionEditors in NetCore projects.","State":"open","Body":"### Environment\n\nEdition - Windows 11 Enterprise\r\nVersion - 23H2\r\nOS build - 22631.3737\r\nVisual Studio version - 17.10.4\n\n### .NET version\n\n.Net 6,7,8\n\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\n\nNo, it's not working in previous versions of netcore\n\n### Issue description\n\nI am developing a .NET 6.0 WinForms application where I need to use a custom CustomCollectionEditor for a Bars property in my custom control. I have implemented the CustomCollectionEditor class inheriting from UITypeEditor. The custom editor is intended to display a modal dialog for editing the Bars collection when the Bars property is clicked in the designer.\r\n\r\nThe custom editor works correctly in a .NET Framework application. However, in the .NET 6.0 application, the custom editor is not invoked, and the standard CollectionEditor is shown instead.  Here I've attached both Framework and NetCore samples for your reference.\r\n\r\n[CustomCollectionEditor-NetCoreSample.zip](https://github.com/user-attachments/files/16505640/CustomCollectionEditor-NetCoreSample.zip)\r\n[CustomCollectionEditor-FramworkSample.zip](https://github.com/user-attachments/files/16505641/CustomCollectionEditor-FramworkSample.zip)\r\n\n\n### Steps to reproduce\n\nBuild the project and open the form designer.\r\nDrag and drop the custom control onto the form.\r\nIn the properties window, click the ellipsis (...) button next to the Bars property.\r\n\r\nExpected Behavior\r\nThe CustomCollectionEditor should be invoked, displaying a modal dialog for editing the Bars collection.\r\n\r\nActual Behavior\r\nThe standard CollectionEditor is displayed instead of the custom CustomCollectionEditor.\n\n### Diagnostics\n\n_No response_","Url":"https://github.com/dotnet/winforms/issues/11821","RelatedDescription":"Open issue \"Can't be able to use the custom CollectionEditors in NetCore projects.\" (#11821)"},{"Id":"2449873082","IsPullRequest":true,"CreatedAt":"2024-08-06T04:20:43","Actor":"dotnet-maestro[bot]","Number":"11820","RawContent":null,"Title":"[release/9.0-preview7] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:3f4e6201-1f0a-4cdf-8c03-08dca722d3ad)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 3f4e6201-1f0a-4cdf-8c03-08dca722d3ad\r\n- **Build**: 20240805.7\r\n- **Date Produced**: August 6, 2024 3:16:45 AM UTC\r\n- **Commit**: 0d79e6de8dbc26a44dde336a9a680940e92e9904\r\n- **Branch**: refs/heads/release/9.0-preview7\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.CodeDom**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.Formats.Nrbf**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.IO.Hashing**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.IO.Ports**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.Management**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.Runtime.Serialization.Formatters**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.Speech**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.Text.Json**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-preview.7.24401.8 to 9.0.0-preview.7.24405.7][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/61126f5d95...0d79e6de8d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:3f4e6201-1f0a-4cdf-8c03-08dca722d3ad)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11820)","Url":"https://github.com/dotnet/winforms/pull/11820","RelatedDescription":"Closed or merged PR \"[release/9.0-preview7] Update dependencies from dotnet/runtime\" (#11820)"},{"Id":"2449666336","IsPullRequest":true,"CreatedAt":"2024-08-05T23:56:56","Actor":"paul1956","Number":"11819","RawContent":null,"Title":"Vb runtime tests only review first","State":"open","Body":"Partially Fixes #11655 \r\n\r\n\r\n## Proposed changes\r\nAdd tests to VB Runtime that require no changes to existing code and change 1 existing to use FluentAssertions\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\nImproves code coverage\r\n\r\n## Regression? \r\n\r\n-No\r\n\r\n## Risk\r\nNone, only adds test\r\n\r\n\r\n## Test methodology\r\nOnly adds and improves tests and improves test coverage\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11819)","Url":"https://github.com/dotnet/winforms/pull/11819","RelatedDescription":"Open PR \"Vb runtime tests only review first\" (#11819)"},{"Id":"2449166595","IsPullRequest":false,"CreatedAt":"2024-08-05T18:03:19","Actor":"KlausLoeffelmann","Number":"11818","RawContent":null,"Title":"Investigate Rendering Performance differences based on hardware/VMs/RDP","State":"open","Body":"From personal contacts to the German IT Industry (Desktop UI Development, huge LOB apps), I am getting mixed messages about certain aspects of GDI and GDI+ rendering on different machines.\n\nThere is a (very carefully assumed) pattern emerging, that Highend Graphic cards seem to have issues with rendering performance, while the performance on RPD or VMs is better to MUCH better.\n\nThis is a experience report item, and a reminder, to get this investigated and then planned to be addressed in the .NET 10-time-frame.\n\n@JeremyKuhne FYI.\n","Url":"https://github.com/dotnet/winforms/issues/11818","RelatedDescription":"Open issue \"Investigate Rendering Performance differences based on hardware/VMs/RDP\" (#11818)"},{"Id":"2449163230","IsPullRequest":false,"CreatedAt":"2024-08-05T18:01:26","Actor":"calledude","Number":"11817","RawContent":null,"Title":"Non-SDK NETFX4.8 project referencing .netstandard2.0 - PlatformNotSupportedException","State":"open","Body":"### .NET version\n\n.NET Framework 4.8 / netstandard2.0\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\nUpon calling code in a .netstandard2.0 project which in turn calls into `System.Drawing.Common` from a .net48 project, things like `PrinterSettings.InstalledPrinters` throws a `PlatformNotSupportedException` exception\r\n\r\nAfter installing `System.Drawing.Common` to the non-SDK project, the issue goes away. This should not be needed\n\n### Steps to reproduce\n\n1. Create a non-SDK net48 console app\r\n2. Create a class library\r\n3. Add a reference to `System.Drawing.Common` to the class library\r\n4. Create a method which does something, e.g. `Console.WriteLine(PrintSettings.InstalledPrinters)`\r\n5. Reference the class library from the non-sdk project\r\n6. Call the method created in step 4 from `Main()`\r\n7. Start the console app","Url":"https://github.com/dotnet/winforms/issues/11817","RelatedDescription":"Open issue \"Non-SDK NETFX4.8 project referencing .netstandard2.0 - PlatformNotSupportedException\" (#11817)"},{"Id":"2448888666","IsPullRequest":false,"CreatedAt":"2024-08-05T15:46:02","Actor":"Camel-RD","Number":"11816","RawContent":null,"Title":"In some specific nesting situations, controls aren't properly scaled.","State":"open","Body":"### .NET version\n\n.net 8\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\nWhen a control is placed in a SplitContainer inside a TabControl on its second page, this control isn't included in the auto-scaling until after the second page has been created (selected).\r\n\r\nThe behavior at design time is also affected. To prevent issues during design time, the font size can't be altered from its default.\r\n\r\n[TestAutoScaleOnFontChange.zip](https://github.com/user-attachments/files/16499800/TestAutoScaleOnFontChange.zip)\r\n\n\n### Steps to reproduce\n\n1. Make a form with a TabControl having two tabs. Put some controls inside the SplitContainer in the second tab.\r\n2. When the form is shown, change its font size (OnShown event).\r\n3. Switch to the second tab, the controls are not scaling correctly when they're put inside a SplitContainer.","Url":"https://github.com/dotnet/winforms/issues/11816","RelatedDescription":"Open issue \"In some specific nesting situations, controls aren't properly scaled.\" (#11816)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-08-09T03:30:29.5779459Z","RunDurationInMilliseconds":423}