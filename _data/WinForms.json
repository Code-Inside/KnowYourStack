{"Data":{"GitHub":{"Issues":[{"Id":"702463412","IsPullRequest":true,"CreatedAt":"2020-09-16T05:27:17","Actor":"JeremyKuhne","Number":"3916","RawContent":null,"Title":"Fix PaintEventArgs Graphics property (#3913)","State":"open","Body":"#### Port #3913 to RC2 branch\r\n\r\nMove the shared logic to a class from a struct to avoid working on a copy of the nested data.\r\n\r\nFixes #3910\r\n\r\n\r\n## Proposed changes\r\n\r\n- Change shared logic container from struct to class\r\n\r\n## Customer Impact\r\n\r\n- Without this, the Graphics object is always recreated when the args are created from an HDC\r\n- Modifcations to the Graphics object are never retained\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Low, changing to a class avoids copies\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Add specific test to make sure we're retaining the right instance on an args created from an HDC\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3913)\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3916)","Url":"https://github.com/dotnet/winforms/pull/3916","RelatedDescription":"Open PR \"Fix PaintEventArgs Graphics property (#3913)\" (#3916)"},{"Id":"702424941","IsPullRequest":true,"CreatedAt":"2020-09-16T04:34:38","Actor":"dotnet-maestro[bot]","Number":"3915","RawContent":null,"Title":"[release/5.0-rc2] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c5389e69-a40e-47fd-afe1-08d849eee71f)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: c5389e69-a40e-47fd-afe1-08d849eee71f\r\n- **Build**: 20200915.7\r\n- **Date Produced**: 9/16/2020 3:24 AM\r\n- **Commit**: e24e67a8dd52a20e5aa07b934ce7790c96808b1b\r\n- **Branch**: refs/heads/release/5.0-rc2\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.CodeDom**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Diagnostics.EventLog**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.DirectoryServices**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **Microsoft.NETCore.App**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **Microsoft.NETCore.Targets**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **Microsoft.Win32.Registry**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Drawing.Common**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Threading.AccessControl**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Windows.Extensions**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Text.Json**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Text.Encodings.Web**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.IO.Packaging**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Security.AccessControl**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Security.Cryptography.Cng**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Security.Cryptography.Xml**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Security.Permissions**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Security.Principal.Windows**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Resources.Extensions**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/acdf37b...e24e67a\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c5389e69-a40e-47fd-afe1-08d849eee71f)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3915)","Url":"https://github.com/dotnet/winforms/pull/3915","RelatedDescription":"Closed or merged PR \"[release/5.0-rc2] Update dependencies from dotnet/runtime\" (#3915)"},{"Id":"702346931","IsPullRequest":true,"CreatedAt":"2020-09-16T03:25:10","Actor":"JeremyKuhne","Number":"3913","RawContent":null,"Title":"Fix PaintEventArgs Graphics property","State":"closed","Body":"Move the shared logic to a class from a struct to avoid working on a copy of the nested data.\r\n\r\nFixes #3910\r\n\r\n\r\n## Proposed changes\r\n\r\n- Change shared logic container from struct to class\r\n\r\n## Customer Impact\r\n\r\n- Without this, the Graphics object is always recreated when the args are created from an HDC\r\n- Modifcations to the Graphics object are never retained\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Low, changing to a class avoids copies\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Add specific test to make sure we're retaining the right instance on an args created from an HDC\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3913)","Url":"https://github.com/dotnet/winforms/pull/3913","RelatedDescription":"Closed or merged PR \"Fix PaintEventArgs Graphics property\" (#3913)"},{"Id":"702398887","IsPullRequest":true,"CreatedAt":"2020-09-16T02:31:06","Actor":"JeremyKuhne","Number":"3914","RawContent":null,"Title":"Add ServiceProvider overloads","State":"open","Body":"Add generic helpers to make callsite code easier to follow. Fixed some naming along the way and a few comments.\r\n\r\nNote that there is some weird code paths- there is some logic that didn't make it through to Core which makes some of the code seem odd. I'm reviewing the methods with the original sources when I'm adding tests (next up).\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3914)","Url":"https://github.com/dotnet/winforms/pull/3914","RelatedDescription":"Open PR \"Add ServiceProvider overloads\" (#3914)"},{"Id":"702323368","IsPullRequest":true,"CreatedAt":"2020-09-16T00:03:22","Actor":"dotnet-maestro[bot]","Number":"3912","RawContent":null,"Title":"[release/5.0-rc2] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c5389e69-a40e-47fd-afe1-08d849eee71f)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: c5389e69-a40e-47fd-afe1-08d849eee71f\r\n- **Build**: 20200915.4\r\n- **Date Produced**: 9/15/2020 10:12 PM\r\n- **Commit**: acdf37b56119bd11a52a9b8e4ea1f310d0ef7b82\r\n- **Branch**: refs/heads/release/5.0-rc2\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.CodeDom**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Diagnostics.EventLog**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.DirectoryServices**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **Microsoft.NETCore.App**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **Microsoft.NETCore.Targets**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **Microsoft.Win32.Registry**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Drawing.Common**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Threading.AccessControl**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Windows.Extensions**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Text.Json**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Text.Encodings.Web**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.IO.Packaging**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Security.AccessControl**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Security.Cryptography.Cng**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Security.Cryptography.Xml**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Security.Permissions**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Security.Principal.Windows**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Resources.Extensions**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/80df3e0...acdf37b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c5389e69-a40e-47fd-afe1-08d849eee71f)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3912)","Url":"https://github.com/dotnet/winforms/pull/3912","RelatedDescription":"Closed or merged PR \"[release/5.0-rc2] Update dependencies from dotnet/runtime\" (#3912)"},{"Id":"700594096","IsPullRequest":true,"CreatedAt":"2020-09-15T23:21:23","Actor":"KlausLoeffelmann","Number":"3894","RawContent":null,"Title":"Modify Visual Basic templates for the Visual Basic Application Framework","State":"closed","Body":"This fixes #3893.\r\n\r\n## Proposed changes\r\n\r\nEnables the following experiences for Visual Basic WinForms templates:\r\n[to be supplied.]\r\n\r\n## Customer Impact\r\n\r\nWill enable the Customer to use the Visual Basic Application Framework for Windows Forms Apps for >=net 5.0.\r\n\r\n## Regression? \r\n\r\nNo.\r\n\r\n## Risk\r\n\r\nLow. Only affecting VB templates.\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\nManual testing of the new templates.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3894)","Url":"https://github.com/dotnet/winforms/pull/3894","RelatedDescription":"Closed or merged PR \"Modify Visual Basic templates for the Visual Basic Application Framework\" (#3894)"},{"Id":"702292523","IsPullRequest":true,"CreatedAt":"2020-09-15T22:39:27","Actor":"JeremyKuhne","Number":"3911","RawContent":null,"Title":"More BehaviorService related code cleanup","State":"closed","Body":"- Use null coalescing operators\r\n- Use conditional operators\r\n- Few more if block simplifications\r\n- Minor comment and spacing cleanup\r\n- Simplify usings\r\n\r\nNot exhaustive, just grabbing low-hanging fruit\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3911)","Url":"https://github.com/dotnet/winforms/pull/3911","RelatedDescription":"Closed or merged PR \"More BehaviorService related code cleanup\" (#3911)"},{"Id":"702191401","IsPullRequest":false,"CreatedAt":"2020-09-15T19:17:16","Actor":"DmitryGaravsky","Number":"3910","RawContent":null,"Title":"Regression in .Net 5 RC1 - the PaintEventArgs.Graphics is recreated when requested and this break all the GDI-interop scenarios due to System.ArgumentException","State":"open","Body":"**Description**\r\nFor now, the GDI interop code fails with the ArgumentException:\r\n```\r\nSystem.ArgumentException: 'Parameter is not valid.'\r\n```\r\nOur unit tests detected this issue immediately after upgrade (we maintain unit tests for all the released and preview environments like .net core 5 in our codebase).\r\nThus it is an important breaking change for us because **most of our UI controls are broken now**.\r\n\r\n**Configuration**\r\nOS Version: Microsoft Windows [Version 10.0.18362.535]\r\n.Net Framework Version: Microsoft (R) .NET CLR Version Tool Version 4.8.3928.0\r\n.Net Core Version: SDK Version: 5.0.100-rc.1.20452.10\r\n\r\n\r\n**Regression?**\r\nYes, this works correctly until .Net Core 5 RC1\r\n\r\n**Other information**\r\nHere is the code snippet which fails under .Net Core 5 RC1:\r\n\r\n```cs\r\nusing System.Windows.Forms;\r\n\r\nnamespace WindowsFormsApp1 {\r\n    public class Form1 : Form {\r\n        protected override void OnPaint(PaintEventArgs e) {\r\n            var hdc = e.Graphics.GetHdc();\r\n            // do something with hdc\r\n            e.Graphics.ReleaseHdc(hdc); // crash here (because of the e.Graphics not related to previously created hdc)\r\n        }\r\n    }\r\n}\r\n```\r\nWe have also detected **multiple clipping issues** related to the PaintEventArgs.Graphics recreation.\r\n","Url":"https://github.com/dotnet/winforms/issues/3910","RelatedDescription":"Open issue \"Regression in .Net 5 RC1 - the PaintEventArgs.Graphics is recreated when requested and this break all the GDI-interop scenarios due to System.ArgumentException\" (#3910)"},{"Id":"702125900","IsPullRequest":false,"CreatedAt":"2020-09-15T17:40:10","Actor":"vladimir-krestov","Number":"3909","RawContent":null,"Title":"[Accessibility] DataGridViewTextBoxCell in non-edit mode doesn't support Text pattern","State":"open","Body":"Text pattern area. Related PR: #3866 \r\n\r\n* .NET Core Version: 5.0.0-rc.1.20431.5\r\n\r\n* Have you experienced this same bug with .NET Framework?: Yes (Text pattern is not implemented there)\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\n- DataGridViewTextBoxCell in non-edit mode (just focused) has \"UIA_EditControlTypeId\" as a control type. And Accessibility Insights requires the cell should support Text pattern. But the cell doesn't support the pattern in non-edit mode.\r\n\r\n![image](https://user-images.githubusercontent.com/49272759/93244802-fa02e100-f792-11ea-8854-2adb6b1b2dca.png)\r\n\r\n\r\n\r\n**Expected behavior:**\r\n- DataGridViewTextBoxCell should meet the MAS requirements.\r\n   Possible ways: \r\n   1) try to implement Text pattern for DataGridViewTextBoxCell in non-edit mode. But needs to decide how it should work. We can orientate to Excel\r\n   2) change ControlType value to another, eg. [DataItem control type](https://docs.microsoft.com/en-us/windows/win32/winauto/uiauto-supportdataitemcontroltype). But needs to rework other cells\r\n\r\n\r\n**Minimal repro:**\r\n- Create a .Net 5.0 app and add DataGridVew with DGVTextBoxCell to the app\r\n- Run the app and check the cell using AccessibilityInsights or Inspect\r\n","Url":"https://github.com/dotnet/winforms/issues/3909","RelatedDescription":"Open issue \"[Accessibility] DataGridViewTextBoxCell in non-edit mode doesn't support Text pattern\" (#3909)"},{"Id":"702083280","IsPullRequest":false,"CreatedAt":"2020-09-15T16:34:57","Actor":"wjk","Number":"3908","RawContent":null,"Title":"High-DPI scaling is now totally broken","State":"open","Body":"## Version\r\n\r\n```\r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.100-rc.1.20452.10\r\n Commit:    473d1b592e\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.20211\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100-rc.1.20452.10\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0-rc.1.20451.14\r\n  Commit:  38017c3935\r\n\r\n.NET SDKs installed:\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100-preview.7.20366.6 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100-rc.1.20452.10 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.21 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.21 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.0-preview.7.20365.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.0-rc.1.20451.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.21 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.0-preview.7.20364.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.0-rc.1.20451.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0-preview.7.20366.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0-rc.1.20452.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nHave you experienced this same bug with .NET Framework?: N/A, relevant API does not exist there\r\n\r\n## Problem description\r\n\r\nImmediately after updating to VS 16.8 beta 3 and .NET 5 RC 1, now suddenly all of my Windows Forms applications do not DPI scale correctly. This did not happen before I updated. Please see the below screenshot, and zipped repro project. The form displays perfectly OK in the Visual Studio designer, without relaunching VS at 100% DPI. I have called `Application.SetHighDpiMode(HighDpiMode.PerMonitorV2)` in my Main method. I have also tried `HighDpiMode.SystemAware` (the template default), to no avail. I am running Windows 10 build 20211 at (I believe) 200% DPI scaling, over a Remote Desktop connection.\r\n\r\n<img width=\"1680\" alt=\"screenshot of broken program\" src=\"https://user-images.githubusercontent.com/1915951/93238376-56441180-f74f-11ea-81d8-386233256ecf.png\">\r\n\r\n[Zipped minimal repro](https://github.com/dotnet/winforms/files/5226397/MenuDpiRepro.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/3908","RelatedDescription":"Open issue \"High-DPI scaling is now totally broken\" (#3908)"},{"Id":"701996068","IsPullRequest":true,"CreatedAt":"2020-09-15T14:56:46","Actor":"dotnet-maestro[bot]","Number":"3907","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **Microsoft.NETCore.App.Internal**: from 3.1.3-servicing.20120.1 to 3.1.9-servicing.20459.3 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n  - **Microsoft.NETCore.Platforms**: from 3.1.0 to 3.1.3 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n  - **System.Resources.Extensions**: from 4.7.0 to 4.7.1 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n  - **Microsoft.NET.Sdk.IL**: from 3.1.3-servicing.20118.3 to 3.1.9-servicing.20458.2 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n  - **Microsoft.NETCore.ILAsm**: from 3.1.3-servicing.20118.3 to 3.1.9-servicing.20458.2 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:4fa59404-cc5b-4313-dd47-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: 4fa59404-cc5b-4313-dd47-08d72a4caef5\r\n- **Build**: 20200909.3\r\n- **Date Produced**: 9/10/2020 1:08 AM\r\n- **Commit**: 1a04dd08e56bf52e88668c1ef2bd3f630ad442a5\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 3.1.3 to 3.1.9][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 3.1.3-servicing.20120.1 to 3.1.9-servicing.20459.3][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 3.1.0 to 3.1.3][2]\r\n  - **System.Resources.Extensions**: [from 4.7.0 to 4.7.1][3]\r\n  - **Microsoft.NET.Sdk.IL**: [from 3.1.3-servicing.20118.3 to 3.1.9-servicing.20458.2][4]\r\n  - **Microsoft.NETCore.ILAsm**: [from 3.1.3-servicing.20118.3 to 3.1.9-servicing.20458.2][4]\r\n\r\n[1]: https://github.com/dotnet/core-setup/compare/2d163b8...1a04dd0\r\n[2]: https://github.com/dotnet/corefx/compare/0f7f38c...d6302a7\r\n[3]: https://dev.azure.com/dnceng/internal/_git/dotnet-corefx/branches?baseVersion=GC0f7f38c&targetVersion=GC059a4a1&_a=files\r\n[4]: https://github.com/dotnet/coreclr/compare/c5d3d75...c2e8c9f\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4fa59404-cc5b-4313-dd47-08d72a4caef5)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3907)","Url":"https://github.com/dotnet/winforms/pull/3907","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/core-setup\" (#3907)"},{"Id":"701870062","IsPullRequest":true,"CreatedAt":"2020-09-15T12:27:17","Actor":"dotnet-maestro[bot]","Number":"3906","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200911.7\r\n- **Date Produced**: 9/11/2020 9:37 PM\r\n- **Commit**: a81e6e87cf21837abfde2da6eb9b057bea9f49fc\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: [from 5.0.0-beta.20459.8 to 5.0.0-beta.20461.7][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 5.0.0-beta.20459.8 to 5.0.0-beta.20461.7][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 5.0.0-beta.20459.8 to 5.0.0-beta.20461.7][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 5.0.0-beta.20459.8 to 5.0.0-beta.20461.7][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 5.0.0-beta.20459.8 to 5.0.0-beta.20461.7][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/91470b0...a81e6e8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3906)","Url":"https://github.com/dotnet/winforms/pull/3906","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3906)"},{"Id":"701651037","IsPullRequest":false,"CreatedAt":"2020-09-15T06:29:16","Actor":"Olina-Zhang","Number":"3905","RawContent":null,"Title":"A syntax error in description of .Net Core VB and C# Windows Forms Control Library templates","State":"open","Body":"* .NET Core Version: 5.0.100-rc.2.20464.10\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**Minimal repro:**\r\n1.\tCheck the preview feature \"Show all .Net Core templates in the New project dialog(required restart)\" in Tools->Options->Environment->Preview Features\r\n2.\tLaunch VS and click 'New Project'\r\n3.\tIn 'Create a new project' dialog, search 'Winforms control library' \r\n4.\tLook at the description for .Net Core VB and C# Windows Forms Control Library templates\r\n\r\n**Actual behavior:**\r\nA syntax error in description about 'A controls'\r\n![image](https://user-images.githubusercontent.com/26474449/93173893-c5296680-f75f-11ea-8d20-8010e3186f11.png)\r\n\r\n**Expected behavior:**\r\nIt should be 'Controls'\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/3905","RelatedDescription":"Open issue \"A syntax error in description of .Net Core VB and C# Windows Forms Control Library templates\" (#3905)"},{"Id":"701648748","IsPullRequest":false,"CreatedAt":"2020-09-15T06:25:28","Actor":"Olina-Zhang","Number":"3904","RawContent":null,"Title":"The Icons for .Net Core VB and C# Windows Forms Control Library are not correct in 'Create a New Project' dialog","State":"open","Body":"* .NET Core Version: 5.0.100-rc.2.20464.10\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**Minimal repro:**\r\n1.\tCheck the preview feature \"Show all .Net Core templates in the New project dialog(required restart)\" in VS: Tools->Options->Environment->Preview Features\r\n2.\tLaunch VS and click 'New Project'\r\n3.\tIn 'Create a new project' dialog, search 'Winforms control library' \r\n4.\tObserve the icons for .Net Core VB and C# Windows Forms Control Library\r\n\r\n**Actual behavior:**\r\nThe Icons for .Net Core VB and C# Windows Forms Control Library are not correct.\r\n![image](https://user-images.githubusercontent.com/26474449/93173398-08370a00-f75f-11ea-82f5-acba2559457e.png)\r\n\r\n**Expected behavior:**\r\nThe icons for them should be same as .Net frameworks'","Url":"https://github.com/dotnet/winforms/issues/3904","RelatedDescription":"Open issue \"The Icons for .Net Core VB and C# Windows Forms Control Library are not correct in 'Create a New Project' dialog\" (#3904)"},{"Id":"701626446","IsPullRequest":true,"CreatedAt":"2020-09-15T06:11:19","Actor":"JeremyKuhne","Number":"3902","RawContent":null,"Title":"More non-functional behavior service related cleanup","State":"closed","Body":"Using tools to:\r\n\r\n- Implement autoproperties\r\n- Invert and combine if blocks to reduce nesting\r\n- Use expression bodies\r\n- Convert to conditional expressions\r\n\r\nAnd some manual spacing and comment cleanup\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3902)","Url":"https://github.com/dotnet/winforms/pull/3902","RelatedDescription":"Closed or merged PR \"More non-functional behavior service related cleanup\" (#3902)"},{"Id":"701636935","IsPullRequest":false,"CreatedAt":"2020-09-15T06:03:45","Actor":"vsfeedback","Number":"3903","RawContent":null,"Title":".NET Framework - The Capture property is not taken into account when a control handle is recreated and the cursor is positioned outside the form boundaries","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/1149197/net-framework-the-capture-property-is-not-taken-in.html)._\n\n---\n<p>Hello,</p><p>My name is Vladislav Yurgens. I'm a software engineer in the WinForms team at DevExpress. </p><p>Recently, one of our customers reported a problem related to our DockPanels. Having investigated the issue, we noticed that it relates to common mechanisms of the Mouse Events and the <strong>Control.Capture</strong> property. In particular, the <strong>Capture </strong>property value is not taken into account if a control handle was recreated during mouse operation (resizing or dragging) and the cursor is positioned outside the form boundaries. </p><p>Thus, we were able to reproduce the issue using only standard components. In the attachment, you will find a sample project and a video demonstrating the problematic behavior.</p><p>To reproduce the issue, do the following:  </p><p>1) Open the solution, build it, and run the application; </p><p>2) Drag any border of a panel using the Left Mouse Button to resize the panel; </p><p>3) Release the Mouse Button within form boundaries -&gt; everything works as expected; </p><p>4) Drag any border of a panel using the Left Mouse Button to resize the panel again; </p><p>5) Keeping the Mouse Button pressed, move the cursor outside the form boundaries; </p><p>6) Release the Mouse Button and try to move the cursor to the form boundaries -&gt; the issue occurs.</p><p>In the <strong>OnMouseMove </strong>method, we restore the <strong>Control.Capture</strong> property value when the control handle is recreated. However, the restored value is not taken into account; that is why, Mouse Events do not work properly. Thus, we expect that the property value would be correctly applied to allow processing the Mouse Events accordingly.</p><p><em>Impact:</em> This issue affects our Docking mechanism in RightToLeft mode. It can be easily reproduced with our DockPanels. Since a large part of our Customers use the Docking Library, it's important to resolve this issue.</p><p>Should you require additional information in this regard, please let us know. We will be happy to follow up.</p><p><a href=\"https://developercommunity.visualstudio.com/storage/attachments/151357-video.mp4\">video.mp4</a> <a href=\"https://developercommunity.visualstudio.com/storage/attachments/151358-sample.zip\">sample.zip</a></p>\n\n---\n### Original Comments\n\n#### Feedback Bot on 8/14/2020, 11:23 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Lydia Shi [MSFT] on 8/17/2020, 10:53 AM: \n\n<p>Hi, winformsteam,<br>\nThanks for your feedback. We already know your question. But for us to investigate this further, we want to know why you want to recreate handle when the mouse moved outside of the Form? We look forward to hearing from you.<br>\nThanks,<br>\nLydia</p>\n\n#### Feedback Bot on 8/27/2020, 09:11 AM: \n\nWe will close this report in 14 days because we don’t have enough information to investigate further. To keep the problem open, please provide the requested details.\n#### winformsteam on 9/2/2020, 08:39 PM: \n\n<p>Hello, </p><p>Please accept my apologies for the delayed reply. </p><p>Let me describe our scenario in greater detail. </p><p>In our components set, we have a panel that mimics the UI of the standard ToolWindow form in the Visual Studio. This panel can be used as a container for other panels. In this case, these panels are displayed as tab headers at the bottom of the parent panel. </p><p>\nIn turn, end users can drag the tab headers to place the dragged panel into a standalone form. The described issue with the Capture property relates to the following situation. </p><p>There is a parent container panel with two child panels. An end user drags one of the child panels. When one of the child panels is removed from its parent, the container panel must be disposed of to display only the last panel. The disposal causes the \"Capture\" issue on the dragged panel (the Capture property is applied to the panel, but it does not work as expected). That is why, the end user cannot drag this panel without releasing the Left mouse button. </p><p>Please let me know if I can be of more help.</p>\n\n#### igveliko [MSFT] on 9/3/2020, 00:35 PM: \n\n(private comment, text removed)\n#### Lydia Shi [MSFT] on 9/3/2020, 01:48 PM: \n\n<p>Thanks a lot to @<a target='_blank' href=\"https://developercommunity.visualstudio.com/users/163503/igvelikoMSFT.html\">igveliko [MSFT]</a>'s workaround, which is very useful. The following GIF is the result of using workaround:</p><p><img src=\"https://developercommunity.visualstudio.com/storage/attachments/154566-workaround.gif\"></p><p>Also, @Vladislav Yurgens,  we hope this workground can help you.</p>\n\n#### winformsteam on 9/7/2020, 10:06 PM: \n\n<p>Hi,</p><p>Thank you for the update.</p><p>Unfortunately, the workaround does not resolve the issue with the <strong>Capture </strong>property. Let me clarify this.</p><p>In the sample project, we added the <strong>RecreateHandle </strong>method call to emulate the effect of disposing of the panel container when an end-user drags some of the child panels. This step is required to demonstrate the issue with the <strong>Capture </strong>property. In particular, the property value is not taken into account for the dragged panel when the parent container is disposed of in our product. Also, we cannot reset the \"resizeInfo\" value as it breaks the current drag operation of the child panel.</p><p>As for resetting the <strong>Capture </strong>property value in the <strong>OnHandleDestroyed </strong>method, this does not affect incorrect processing of the child panel's <strong>Capture </strong>property. I have also recorded a video to demonstrate that the issue is still reproducible with the code snippet.</p><p>Please note that you need to do the following to reproduce the problem:</p><p>1) Drag any panel border with the Left Mouse Button pressed to resize the panel;</p><p>2) Keeping the Mouse Button pressed, move the cursor outside the form boundaries;</p><p>3) <strong>Release </strong>the Mouse Button and try to move the cursor to the form boundaries -&gt; the issue occurs.</p><p><a target='_blank' href=\"https://developercommunity.visualstudio.com/storage/attachments/155205-video.mp4\">video.mp4</a></p>\n\n#### igveliko [MSFT] on 9/8/2020, 11:42 AM: \n\n(private comment, text removed)\n#### winformsteam on 9/11/2020, 09:28 PM: \n\n(private comment, text removed)\n#### igveliko [MSFT] on 9/15/2020, 07:39 AM: \n\n(private comment, text removed)\n\n---\n### Original Solutions\n\n#### Feedback Bot solved on 9/1/2020, 05:36 PM, 0 votes: \n\n<p>We are unable to investigate this issue further without the additional information requested. If you are able to provide more information, you can request the issue being reactivate below. See our <a target='_blank' href=\"https://aka.ms/vsfeedbackguidelines\">guidelines</a> for further information about our process.</p>\n","Url":"https://github.com/dotnet/winforms/issues/3903","RelatedDescription":"Open issue \".NET Framework - The Capture property is not taken into account when a control handle is recreated and the cursor is positioned outside the form boundaries\" (#3903)"},{"Id":"701503734","IsPullRequest":true,"CreatedAt":"2020-09-15T03:24:08","Actor":"JeremyKuhne","Number":"3899","RawContent":null,"Title":"Code style cleanup for BehaviorService related classes","State":"closed","Body":"Two quick cleanup commits without functional changes. First gets most of the lines under 120 characters and the second breaks out the nested classes into their own files.\r\n\r\nThe line cleanup isn't exhaustive- just a quick pass. Do not squash this PR.\r\n\r\nI'm cleaning up this code and will be writing tests. Doing automatic and non-functional cleanup to make the tests easier to write (as the code will be easier to read).\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3899)","Url":"https://github.com/dotnet/winforms/pull/3899","RelatedDescription":"Closed or merged PR \"Code style cleanup for BehaviorService related classes\" (#3899)"},{"Id":"701548415","IsPullRequest":true,"CreatedAt":"2020-09-15T02:42:22","Actor":"dotnet-maestro[bot]","Number":"3901","RawContent":null,"Title":"[release/5.0-rc2] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c5389e69-a40e-47fd-afe1-08d849eee71f)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: c5389e69-a40e-47fd-afe1-08d849eee71f\r\n- **Build**: 20200914.8\r\n- **Date Produced**: 9/15/2020 1:42 AM\r\n- **Commit**: 80df3e06b9d9ffe90427a19e706f7165700d7d4e\r\n- **Branch**: refs/heads/release/5.0-rc2\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **System.CodeDom**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **System.Diagnostics.EventLog**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **System.DirectoryServices**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **Microsoft.NETCore.App**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **Microsoft.NETCore.Targets**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **Microsoft.Win32.Registry**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **System.Drawing.Common**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **System.Threading.AccessControl**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **System.Windows.Extensions**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **System.Text.Json**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **System.Text.Encodings.Web**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **System.IO.Packaging**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **System.Security.AccessControl**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **System.Security.Cryptography.Cng**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **System.Security.Cryptography.Xml**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **System.Security.Permissions**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **System.Security.Principal.Windows**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n  - **System.Resources.Extensions**: [from 5.0.0-rc.2.20462.5 to 5.0.0-rc.2.20464.8][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/54dfce7...80df3e0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c5389e69-a40e-47fd-afe1-08d849eee71f)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3901)","Url":"https://github.com/dotnet/winforms/pull/3901","RelatedDescription":"Closed or merged PR \"[release/5.0-rc2] Update dependencies from dotnet/runtime\" (#3901)"},{"Id":"701525733","IsPullRequest":true,"CreatedAt":"2020-09-15T02:33:40","Actor":"cristianosuzuki77","Number":"3900","RawContent":null,"Title":"locheckin 20200914","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n\r\n\r\nNew translations.\r\n\r\n- \r\n- \r\n- \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3900)","Url":"https://github.com/dotnet/winforms/pull/3900","RelatedDescription":"Closed or merged PR \"locheckin 20200914\" (#3900)"},{"Id":"700383179","IsPullRequest":true,"CreatedAt":"2020-09-14T23:44:55","Actor":"JeremyKuhne","Number":"3890","RawContent":null,"Title":"Extend EMF validation","State":"closed","Body":"- Add support for save/restore DC\r\n- Add support for world transforms\r\n- Refactor to avoid duplication for DC state validation\r\n- Add Poly16 validators\r\n- Add context to XUnit exceptions to identify faulting validator\r\n- Fix SkipAllValidator\r\n- Start adding another string dump to look at applied transforms\r\n- Add regression validation for DataGridView GridColor rendering\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3890)","Url":"https://github.com/dotnet/winforms/pull/3890","RelatedDescription":"Closed or merged PR \"Extend EMF validation\" (#3890)"},{"Id":"701477873","IsPullRequest":false,"CreatedAt":"2020-09-14T22:37:31","Actor":"JeremyKuhne","Number":"3898","RawContent":null,"Title":"Flaky test: `ImageCollection_Item_Get32bppColorDepth_Success`","State":"open","Body":"System.Windows.Forms.Tests.ImageCollectionTests.ImageCollection_Item_Get32bppColorDepth_Success is failing intermittently in the CI. It has failed several times over the last month with the exact same error:\r\n\r\n```\r\nError message\r\nAssert.Equal() Failure\\r\\nExpected: Color [A=255, R=255, G=0, B=0]\\r\\nActual:   Color [A=255, R=0, G=0, B=0]\r\n\r\nStack trace\r\n   at System.Windows.Forms.Tests.ImageCollectionTests.ImageCollection_Item_Get32bppColorDepth_Success() in F:\\workspace\\_work\\1\\s\\src\\System.Windows.Forms\\tests\\UnitTests\\System\\Windows\\Forms\\ImageList.ImageCollectionTests.cs:line 215\r\n```\r\n\r\n``` C#\r\n            using Bitmap resultImage24bppRgbCustom = Assert.IsType<Bitmap>(collection[5]);\r\n            Assert.NotSame(image24bppRgbCustom, resultImage24bppRgbCustom);\r\n            Assert.Equal(new Size(16, 16), resultImage24bppRgbCustom.Size);\r\n            Assert.Equal(PixelFormat.Format32bppArgb, resultImage24bppRgbCustom.PixelFormat);\r\n            Assert.Equal(Color.FromArgb(0xFF, 0xFF, 0x00, 0x00), resultImage24bppRgbCustom.GetPixel(0, 0));   // <-- Failing line\r\n            Assert.Equal(Color.FromArgb(0xFF, 50, 75, 100), resultImage24bppRgbCustom.GetPixel(1, 0));\r\n```","Url":"https://github.com/dotnet/winforms/issues/3898","RelatedDescription":"Open issue \"Flaky test: `ImageCollection_Item_Get32bppColorDepth_Success`\" (#3898)"},{"Id":"701414051","IsPullRequest":false,"CreatedAt":"2020-09-14T20:45:48","Actor":"vladimir-krestov","Number":"3897","RawContent":null,"Title":"[Accessibility] Incorrect ScreenReader blue rectangle for a new character in TextCompoments","State":"open","Body":"Related issues: \r\n- #1588 \r\n- #3683\r\n- #2786 \r\n- #3860 \r\n\r\nThe issue reproduces only in a context of Text pattern implementation\r\n\r\n-----\r\n\r\n* .NET Core Version: 5.0.0-rc.1.20431.5\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: No (Text pattern is not implemented)\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\n- ScreenReader doesn't show the blue rectangle around an added character when typing a text in `ToolStripTextBox`, `DataGridViewTextBoxCell`, `PropertyGridView.GridViewEdit`\r\n\r\n   ![TT bug](https://user-images.githubusercontent.com/49272759/93136223-3aefec80-f6e4-11ea-9395-2324ac13630b.gif)\r\n\r\n\r\n**Expected behavior:**\r\n- ScreenReader should show the blue rectangle for a new character like in `TextBox`\r\n![T](https://user-images.githubusercontent.com/49272759/93136212-37f4fc00-f6e4-11ea-8825-df0b94136210.gif)\r\n\r\n**Minimal repro:**\r\n- Create .Net 5.0 app\r\n- Add `ToolStripTextBox`, `DataGridViewTextBoxCell`, `PropertyGridView.GridViewEdit` to the app\r\n- Run the app and Narrator\r\n- Try to type a text in a text field\r\n","Url":"https://github.com/dotnet/winforms/issues/3897","RelatedDescription":"Open issue \"[Accessibility] Incorrect ScreenReader blue rectangle for a new character in TextCompoments\" (#3897)"},{"Id":"700971943","IsPullRequest":false,"CreatedAt":"2020-09-14T10:34:13","Actor":"pikadun","Number":"3896","RawContent":null,"Title":"The TargetFramework value 'net5.0-windows' was not recognized.","State":"closed","Body":"* .NET Core Version: 5.0.100-preview.8.20417.9\r\n\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**Problem description:**\r\nI added a new project `Windows Forms App (.NET Core)`, then rebuild solution, and I got the error :\r\n``` text\r\nSeverity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tNETSDK1013\tThe TargetFramework value 'net5.0-windows' was not recognized. It may be misspelled. If not, then the TargetFrameworkIdentifier and/or TargetFrameworkVersion properties must be specified explicitly.\tUI\tC:\\Program Files\\dotnet\\sdk\\3.1.402\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.TargetFrameworkInference.targets\t93\t\r\n\r\n```\r\n\r\n\r\n**Expected behavior:**\r\nNo error\r\n\r\n**Minimal repro:**\r\nhttps://github.com/pikadun/7\r\n","Url":"https://github.com/dotnet/winforms/issues/3896","RelatedDescription":"Closed issue \"The TargetFramework value 'net5.0-windows' was not recognized.\" (#3896)"},{"Id":"700891758","IsPullRequest":false,"CreatedAt":"2020-09-14T08:30:12","Actor":"Zheng-Li01","Number":"3895","RawContent":null,"Title":"An error pops up that 'Focusable sibling elements must not have the same Name and LocalizedContorlType' for sub-item 'combobox' of MenuStrip control","State":"open","Body":"* .NET Core Version: \r\n.NET 6.0.100-alpha.1.20463.4 \r\n\r\n* More info\r\n1. The issue also can reproduce on .NET SDK 3.1 & .NET 5.0.\r\n2. The issue can't reproduce on sub-items 'combbBox Edit' of MenuStrip & ToolStrip controls & standalone ComboBox control.\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\nAn error pops up when focus on sub-item combobox's edits part in Accessibility Insight tool.\r\n\r\n**Expected behavior:**\r\nNo error pops up.\r\n\r\n**Minimal repro:**\r\n1. Open attached app, build & run it.([PrivateCoreProject.zip](https://github.com/dotnet/winforms/files/5217078/PrivateCoreProject.zip))\r\n2. Right click the button1 to call the contextmenustrip.\r\n3. Run the Accessibility Insight tool.\r\n4. Only focus on the sub-item 'ComboBox Edit' part using Accessibility Insight tool.\r\n5. Observe the results.\r\n![CoreNewIssue](https://user-images.githubusercontent.com/38325459/93061955-d8c4c680-f6a6-11ea-9acc-e92ed63b79cd.gif)\r\n![CoreIssue](https://user-images.githubusercontent.com/38325459/93061966-dc584d80-f6a6-11ea-9820-284811b4d806.png)","Url":"https://github.com/dotnet/winforms/issues/3895","RelatedDescription":"Open issue \"An error pops up that 'Focusable sibling elements must not have the same Name and LocalizedContorlType' for sub-item 'combobox' of MenuStrip control\" (#3895)"},{"Id":"700482936","IsPullRequest":false,"CreatedAt":"2020-09-14T02:21:11","Actor":"Shadowblitz16","Number":"3891","RawContent":null,"Title":"MDI children look different than the main forms","State":"closed","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\nI am using .net framework 4.6.1 but it also seem to happen with 4.7.2\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes I am not using .net core\r\n\r\n**Problem description:**\r\nMDI children do not obey the theme of the parent window\r\n![image](https://user-images.githubusercontent.com/2453707/93009849-8c5c7800-f53a-11ea-8872-e4d2b2897ebc.png)\r\n\r\n\r\n**Expected behavior:**\r\nI would expect that the titlebar and border would look the same even if its a mdi child\r\n\r\n\r\n**Minimal repro:**\r\n- make a mdi form\r\n- make a mdi child \r\n- add the mdi child to the mdi form\r\n- run it\r\n- see that it looks like windows 7 still\r\n","Url":"https://github.com/dotnet/winforms/issues/3891","RelatedDescription":"Closed issue \"MDI children look different than the main forms\" (#3891)"},{"Id":"700592180","IsPullRequest":false,"CreatedAt":"2020-09-13T15:34:36","Actor":"KlausLoeffelmann","Number":"3893","RawContent":null,"Title":"Modify Visual Basic CLI templates for the Visual Basic Application Framework","State":"open","Body":"From Visual Studio 16.8 Preview 4 on, we will have the Application Framework for Visual Basic WinForms App available. The AppDesigner for the Visual Basic Project properties will look about this and will have (almost) parity to NetFx:\r\n\r\n![image](https://user-images.githubusercontent.com/9663150/93021840-fa845780-f599-11ea-8e57-b3be8a499191.png)\r\n\r\nTo make sure that Visual Basic WinForms App will be starting in the `SystemAware` HighDpiMode, we will be introducing a new Application Event named `ApplyHighDpiMode`. For the time being (net5 to net6), this event will be introduced over the Visual Basic Application Framework templates, in net6.0 it will become part of `WindowsFormsApplicationBase` (and the Application Framework template will be changed to accommodate net6.0 accordingly - also see #3861)\r\n\r\n![image](https://user-images.githubusercontent.com/9663150/93022051-8e0a5800-f59b-11ea-8125-8865ca826b4d.png)\r\n\r\nNOTE: The Visual Basic Application Framework will not be available for .NET Core 3.1, ONLY for >= net5.0. Note also, that the Settings feature will not be available in the 16.8 time frame.\r\n","Url":"https://github.com/dotnet/winforms/issues/3893","RelatedDescription":"Open issue \"Modify Visual Basic CLI templates for the Visual Basic Application Framework\" (#3893)"},{"Id":"700512573","IsPullRequest":false,"CreatedAt":"2020-09-13T06:58:06","Actor":"why5684784","Number":"3892","RawContent":null,"Title":"CheckListBox has Bugs","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\nThis is a problem with the. Net framework and does not test the. Net core\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\nThis is a bug from CheckListBox.\r\nWhen I derive a new CheckListBox from CheckListBox, using my derived MyCheckListBox, it will be very slow to change the itemcheckstate when the item is not selected. It will be very fast to change the itemcheckstate after selecting the item. \r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n\r\n**Expected behavior:**\r\nThe rate at which itemcheckstate changes is independent of the itemselect state\r\n\r\n**Minimal repro:**\r\nevery time\r\n\r\nCode:\r\n`\r\n```\r\nusing System;\r\nusing System.Windows.Forms;\r\nnamespace Test.Frm.Control\r\n{\r\n    internal class MyCheckListBox : CheckedListBox\r\n    {\r\n        public delegate void ItemBoxCheckedEventHanlder(object sender, Models.CheckListBoxItemCheckBoxEventArgs mouseEventArgs);\r\n        public event ItemBoxCheckedEventHanlder ItemBoxChecked;\r\n        private bool isUserCheck = false;\r\n        public MyCheckListBox()\r\n        {\r\n            this.DoubleBuffered = false;\r\n        }\r\n        protected override void OnItemCheck(ItemCheckEventArgs ice)\r\n        {\r\n            if (this.isUserCheck)\r\n            {\r\n                this.isUserCheck = false;\r\n                ice.NewValue = ice.CurrentValue;\r\n            }\r\n            base.OnItemCheck(ice);\r\n        }\r\n        protected override void WndProc(ref Message m)\r\n        {\r\n            if (m.Msg == 0x0201)///LeftMouseButtonDown\r\n            {\r\n                uint lPararm = (uint)m.LParam;\r\n                int xPoint = Convert.ToInt32(lPararm & 0xFFFF);///Convert mouse X coordinates\r\n                int yPoint = Convert.ToInt32(lPararm >> 16);///Convert mouse Y coordinates\r\n                int index = this.IndexFromPoint(xPoint, yPoint);\r\n                if (xPoint < 15)\r\n                {\r\n                    Models.CheckListBoxItemCheckBoxEventArgs model = new Models.CheckListBoxItemCheckBoxEventArgs(MouseButtons.Left, xPoint, yPoint, index);\r\n                    base.SetItemCheckState(index, base.GetItemCheckState(index) == CheckState.Unchecked ? CheckState.Checked : CheckState.Unchecked);\r\n                    this.ItemBoxChecked?.Invoke(this, model);\r\n                }\r\n                else\r\n                {\r\n                    this.isUserCheck = true;\r\n                    base.SelectedIndex = index;\r\n                }\r\n            }\r\n            else\r\n            {\r\n                base.WndProc(ref m);\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n`","Url":"https://github.com/dotnet/winforms/issues/3892","RelatedDescription":"Open issue \"CheckListBox has Bugs\" (#3892)"},{"Id":"700263673","IsPullRequest":false,"CreatedAt":"2020-09-12T16:04:47","Actor":"toolgood","Number":"3889","RawContent":null,"Title":"  Dotnet core 3.1 windows forms cannot run on win7 virtual machine after being packaged into a single file","State":"closed","Body":".NET Core Version:  3.1.402\r\n  \r\n\r\n**Problem description:**   Dotnet core 3.1 windows forms cannot run on win7 virtual machine after being packaged into a single file\r\n \r\n**Expected behavior:**\r\n\r\n![QQ截图20200912224438.png](https://i.loli.net/2020/09/12/L7CIqkvml8DHYNR.png)","Url":"https://github.com/dotnet/winforms/issues/3889","RelatedDescription":"Closed issue \"  Dotnet core 3.1 windows forms cannot run on win7 virtual machine after being packaged into a single file\" (#3889)"},{"Id":"699688408","IsPullRequest":true,"CreatedAt":"2020-09-11T22:09:06","Actor":"JeremyKuhne","Number":"3888","RawContent":null,"Title":"Reset all DpiHelper statics when setting the DPI mode (#3881)","State":"closed","Body":"#### Port of #3881\r\n\r\nReset all DpiHelper statics when setting the DPI mode.\r\n\r\nFixes #3832\r\n\r\n## Proposed changes\r\n\r\n- Reset all DpiHelper state when setting DPI mode\r\n\r\n## Customer Impact\r\n\r\n- DeviceDpi doesn't dynamically update when not using a manifest\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Low\r\n\r\n## Test methodology\r\n\r\n- Manually ran repro project\r\n- Walked through message handling and statics\r\n\r\ncc: @Pilchie for RC2\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3888)","Url":"https://github.com/dotnet/winforms/pull/3888","RelatedDescription":"Closed or merged PR \"Reset all DpiHelper statics when setting the DPI mode (#3881)\" (#3888)"},{"Id":"699230710","IsPullRequest":true,"CreatedAt":"2020-09-11T12:27:20","Actor":"dotnet-maestro[bot]","Number":"3887","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200909.8\r\n- **Date Produced**: 9/10/2020 1:18 AM\r\n- **Commit**: 91470b0b14ba016c1fb78211b12775287c17b34e\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: [from 5.0.0-beta.20453.7 to 5.0.0-beta.20459.8][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 5.0.0-beta.20453.7 to 5.0.0-beta.20459.8][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 5.0.0-beta.20453.7 to 5.0.0-beta.20459.8][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 5.0.0-beta.20453.7 to 5.0.0-beta.20459.8][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 5.0.0-beta.20453.7 to 5.0.0-beta.20459.8][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/16b71a2...91470b0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3887)","Url":"https://github.com/dotnet/winforms/pull/3887","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3887)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-09-16T05:30:50.2753918Z","RunDurationInMilliseconds":638}