{"Data":{"GitHub":{"Issues":[{"Id":"1712742988","IsPullRequest":true,"CreatedAt":"2023-05-16T21:49:38","Actor":"JeremyKuhne","Number":"9133","RawContent":null,"Title":"Optimize and simplify WritePrimitive","State":"closed","Body":"Clean up WritePrimitive to be more efficient for expected cases and easier to read.\r\n\r\nAlso add static array for primitive member name. (Other non-static ones are expected to be rare.)\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9133)","Url":"https://github.com/dotnet/winforms/pull/9133","RelatedDescription":"Closed or merged PR \"Optimize and simplify WritePrimitive\" (#9133)"},{"Id":"1712712210","IsPullRequest":true,"CreatedAt":"2023-05-16T20:59:29","Actor":"JeremyKuhne","Number":"9132","RawContent":null,"Title":"Add a scope for binary format writing","State":"closed","Body":"Simplifies the code a little and ensures consistency.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9132)","Url":"https://github.com/dotnet/winforms/pull/9132","RelatedDescription":"Closed or merged PR \"Add a scope for binary format writing\" (#9132)"},{"Id":"1705990994","IsPullRequest":false,"CreatedAt":"2023-05-16T20:44:45","Actor":"dmitrii-drobotov","Number":"9108","RawContent":null,"Title":"ToolStripButton should not support both Invoke and Toggle patterns","State":"closed","Body":"### .NET version\n\n.NET 8\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, the regression was introduced in #8961 and affects only .NET 8 \n\n### Issue description\n\nAccessibility Insights report following error for checked/checkable ToolStripButton:\r\n![A screenshot of test result in Accessibility Insights reporting error on ToolStripButton and showing that it should not support both Invoke and Toggle patterns](https://github.com/dotnet/winforms/assets/102954094/c9ff5ed1-8e24-4eda-aed4-05740a32b9e0)\r\n\r\nToolStripMenuItem also supports both Invoke and Toggle patterns, but AI doesn't have this error because it applies only to \"button\" control type.\n\n### Steps to reproduce\n\n1. Run WinformsControlTest app from this repo and open \"ToolStrips\" form, or run sample app: [ToolStripButtonsTest.zip](https://github.com/dotnet/winforms/files/11190660/ToolStripButtonsTest.zip).\r\n2. Open Accessibility Insights and test the form with it ","Url":"https://github.com/dotnet/winforms/issues/9108","RelatedDescription":"Closed issue \"ToolStripButton should not support both Invoke and Toggle patterns\" (#9108)"},{"Id":"1707994917","IsPullRequest":true,"CreatedAt":"2023-05-16T20:44:43","Actor":"dmitrii-drobotov","Number":"9115","RawContent":null,"Title":"Fix ToolStripButton errors in Accessibility Insights","State":"closed","Body":"Fixes #9108\r\n\r\n## Proposed changes\r\n\r\n* Changed ControlType for checkable/checked `ToolStripButton` from `Button` to `CheckBox` to allow having both Toggle and Invoke patterns. We cannot remove Invoke pattern for compatibility reasons, and Toggle pattern is needed to announce checked state. This is done by removing hardcoded `Button` type.\r\n* Extend condition on which accessible object will get `CheckButton` role to include buttons with only `Checked = true` (without `CheckOnClick = true`), so that screen readers can also announce it as \"checked\";\r\n* Allow setting custom role even if button is checkable/checked. For instance, this enables setting `RadioButton` role for `PropertyGridToolStripButton`, which can have `Checked = true` but shouldn't have `CheckBox` type because it doesn't behave like one.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- No errors in Accessibility Insights for ToolStripButton\r\n- Screen readers announce checked/checkable ToolStripButton as \"check box\" instead of \"button\". \r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Low. Change in screen reader announcement from \"button\" to \"check box\" may be somewhat confusing for users.\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![A screenshot of Accessibility Insights app showing test pass with 5 errors for a form with different ToolStripButtons](https://github.com/dotnet/winforms/assets/102954094/809cc911-5a21-4366-b402-a0cda41a3fd2)\r\n\r\n### After\r\n\r\n![A screenshot of Accessibility Insights app showing test pass without errors for a form with different ToolStripButtons](https://github.com/dotnet/winforms/assets/102954094/22fe9bd8-2056-40af-9382-9409ee8340b2)\r\n![A screenshot of Accessibility Insights app showing that both Invoke and Toggle patterns are supported](https://github.com/dotnet/winforms/assets/102954094/5ca21aab-358c-43c3-8d6b-f583a778d956)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Unit tests\r\n- Manual\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\nNarrator announcements for ToolStripButtons from StripControls form in Accessibility Core test app:\r\n\r\n#### Before\r\n\r\n> New, button, Alt+ n, \r\n> Unchecked_CheckOnClick(F), button, \r\n> Unchecked_CheckOnClick(T), button, off, \r\n> Checked_CheckOnClick(T), button, on, \r\n> Checked_CheckOnClick(F), button, on, \r\n> Indeterminate_CheckOnClick(T), button, indeterminate, \r\n> Indeterminate_CheckOnClick(F), button, indeterminate, \r\n\r\n#### After\r\n\r\n> New, button, Alt+ n, \r\n> Unchecked_CheckOnClick(F), button, \r\n> Unchecked_CheckOnClick(T) check box unchecked, \r\n> Checked_CheckOnClick(T) check box checked, \r\n> Checked_CheckOnClick(F) check box checked, \r\n> Indeterminate_CheckOnClick(T) check box indeterminate, \r\n> Indeterminate_CheckOnClick(F) check box indeterminate, \r\n\r\n Tooltip announcements are removed for brevity. Similar result in JAWS and NVDA.\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .NET 8.0.0-preview.5.23260.3\r\n- Win 11\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9115)","Url":"https://github.com/dotnet/winforms/pull/9115","RelatedDescription":"Closed or merged PR \"Fix ToolStripButton errors in Accessibility Insights\" (#9115)"},{"Id":"1711067372","IsPullRequest":false,"CreatedAt":"2023-05-16T18:48:51","Actor":"elachlan","Number":"9124","RawContent":null,"Title":"Add `BeforeMaximize` and `AfterMaximize` events to Form","State":"closed","Body":"### Background and motivation\n\nWe manually implemented Before/After Maximize events to pause the layout calculations on the certain control heavy forms until it has been fully resized.\r\n\r\nThis reduced the time the operation took from 2.2sec to 0.37 seconds.\r\n\n\n### API Proposal\n\n```csharp\r\nnamespace System.Windows.Forms\r\n\r\npublic partial class Form : ContainerControl\r\n{\r\n    public event EventHandler? BeforeMaximize\r\n    public event EventHandler? AfterMaximize\r\n\r\n    private void WmSysCommand(ref Message m)\r\n    {\r\n        ...\r\n        case User32.SC.MAXIMIZE\r\n            OnBeforeMaximize();\r\n            base.WndProc(ref m);\r\n            OnAfterMaximize();\r\n    }\r\n}\r\n```\r\n\n\n### API Usage\n\n```csharp\r\n private void MyForm_BeforeMaximize(object sender, EventArgs e)\r\n    {\r\n        this.SuspendLayout();\r\n    }\r\n    private void MyForm_AfterMaximize(object sender, EventArgs e)\r\n    {\r\n        this.ResumeLayout();\r\n    }\r\n```\r\n\n\n### Alternative Designs\n\nTeam might know a better way.\n\n### Risks\n\nUnknown\n\n### Will this feature affect UI controls?\n\nN/A","Url":"https://github.com/dotnet/winforms/issues/9124","RelatedDescription":"Closed issue \"Add `BeforeMaximize` and `AfterMaximize` events to Form\" (#9124)"},{"Id":"1712432978","IsPullRequest":true,"CreatedAt":"2023-05-16T17:26:23","Actor":"gpetrou","Number":"9131","RawContent":null,"Title":"Remove unused controlToPushAside variable","State":"open","Body":"## Proposed changes\r\n\r\n- Add test from https://github.com/dotnet/winforms/issues/9126\r\n- Remove unused controlToPushAside variable\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9131)","Url":"https://github.com/dotnet/winforms/pull/9131","RelatedDescription":"Open PR \"Remove unused controlToPushAside variable\" (#9131)"},{"Id":"1712399258","IsPullRequest":true,"CreatedAt":"2023-05-16T17:02:31","Actor":"gpetrou","Number":"9130","RawContent":null,"Title":"Enable nullability in remaining ToolTip members","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in remaining ToolTip members.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9130)","Url":"https://github.com/dotnet/winforms/pull/9130","RelatedDescription":"Open PR \"Enable nullability in remaining ToolTip members\" (#9130)"},{"Id":"1711891849","IsPullRequest":true,"CreatedAt":"2023-05-16T12:31:56","Actor":"dotnet-maestro[bot]","Number":"9129","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230515.26\r\n- **Date Produced**: May 16, 2023 7:43:10 AM UTC\r\n- **Commit**: ff92d4e8d24d3927bd4937a663f67b769da3848b\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.CodeDom**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Data.Odbc**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Data.OleDb**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.IO.Ports**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Management**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Reflection.Context**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Runtime.Caching**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Speech**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Text.Json**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.5.23264.1 to 8.0.0-preview.5.23265.26][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/9dd59af3ae...ff92d4e8d2\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9129)","Url":"https://github.com/dotnet/winforms/pull/9129","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#9129)"},{"Id":"1711889062","IsPullRequest":true,"CreatedAt":"2023-05-16T12:30:20","Actor":"dotnet-maestro[bot]","Number":"9128","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20230515.1\r\n- **Date Produced**: May 15, 2023 1:54:05 PM UTC\r\n- **Commit**: 2d8d59065b5e090584a8e90c4371fc06ed60bdc5\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23262.5 to 8.0.0-beta.23265.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.23262.5 to 8.0.0-beta.23265.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.23262.5 to 8.0.0-beta.23265.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23262.5 to 8.0.0-beta.23265.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.23262.5 to 8.0.0-beta.23265.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23262.5 to 8.0.0-beta.23265.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/1aff4eb33a...2d8d59065b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9128)","Url":"https://github.com/dotnet/winforms/pull/9128","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#9128)"},{"Id":"1711162184","IsPullRequest":false,"CreatedAt":"2023-05-16T03:36:09","Actor":"John-Qiao","Number":"9127","RawContent":null,"Title":"AccessibilityInsight: A button must not support both the Invoke and Toggle patterns in sub button items in ToolStrip control","State":"closed","Body":"### .NET version\n\n.NET 8.0.100-preview.5.23261.16\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, it works in previous .Net 7.0 and 6.0.\n\n### Issue description\n\nAccessibilityInsight detects an error about \"A button must not support both the Invoke and Toggle patterns\" for sub button items in ToolStrip control.\r\n\r\n.Net 8.0 in AccessibilityInsight:\r\n![Issue1-actual](https://github.com/dotnet/winforms/assets/45864985/7d225d7b-0268-4963-a9ac-21f81cc78efd)\r\n\r\n.Net 8.0 in Inspect:\r\n![Issue1-actual-2](https://github.com/dotnet/winforms/assets/45864985/81a9e396-f1ce-4fce-9e69-0c70e346f382)\r\n\r\n.Net 7.0 in AccessibilityInsight:\r\n![Issue1-expected](https://github.com/dotnet/winforms/assets/45864985/4a541d4d-9ead-4b76-8ca7-b0e2b7a3cda6)\r\n\r\n.Net 7.0 in Inspect:\r\n![Issue1-expected-2](https://github.com/dotnet/winforms/assets/45864985/25865fb6-d86f-4f97-926d-d23409b5d54c)\r\n\n\n### Steps to reproduce\n\n1. Open this attached app: [TestApp.zip](https://github.com/dotnet/winforms/files/11483712/TestApp.zip) in VS.\r\n2. Build and run application.\r\n3. Use AccessibilityInsight to detect that StripControls form.","Url":"https://github.com/dotnet/winforms/issues/9127","RelatedDescription":"Closed issue \"AccessibilityInsight: A button must not support both the Invoke and Toggle patterns in sub button items in ToolStrip control\" (#9127)"},{"Id":"1711080237","IsPullRequest":false,"CreatedAt":"2023-05-16T01:50:55","Actor":"Junjun-zhao","Number":"9126","RawContent":null,"Title":"[8.0.100-preview.5.23264.1] System.IndexOutOfRangeException thrown when ToolStrips Location is not using default Location in ToolStripContainer","State":"open","Body":"### .NET version\n\n8.0.100-preview.5.23264.1\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes\r\n\r\n**Verify Scenarios:**\r\n1. Windows10 21h2 x64 + dotnet-sdk-8.0.100-preview.5.23264.1: Fail\r\n2. Windows10 21h2 x64 + dotnet-sdk-8.0.100-preview.4.23259.1: Pass\r\n3. Windows10 21h2 x64 + dotnet-sdk-6.0.409: Pass\n\n### Issue description\n\nIn dotnet-sdk-8.0.100-preview.5.23264.1, when drag the ToolStrip control to change its default location, it will throw System.IndexOutOfRangeException.\r\n\r\n**Application Name**: mRemoteNG\r\n**OS:** Windows 10 21H2\r\n**CPU**: X64\r\n**.NET Build Number:** dotnet-sdk-8.0.100-preview.5.23264.1\r\n**Github link**: **https://github.com/mRemoteNG/mRemoteNG**\r\n**App or App Source checking at**:  https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1819231\r\n \n\n### Steps to reproduce\n\n**Repro Steps:**\r\n1. Launch mRemoteNG.exe\r\n\r\n**Expected Result:**\r\nApp launches successful.\r\n\r\n**Actual Result:**\r\nApp launches failed with following error in Windows EvntView log:\r\n```\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: System.TypeInitializationException: The type initializer for 'mRemoteNG.UI.Forms.FrmMain' threw an exception.\r\n ---> System.IndexOutOfRangeException: Index was outside the bounds of the array.\r\n   at System.Windows.Forms.ToolStripPanelRow.ToolStripPanelRowControlCollection.GetControl(Int32 index)\r\n   at System.Windows.Forms.ToolStripPanelRow.HorizontalRowManager.JoinRow(ToolStrip toolStripToDrag, Point locationToDrag)\r\n   at System.Windows.Forms.ToolStripPanel.MoveInsideContainer(ToolStrip toolStripToDrag, Point clientLocation)\r\n   at System.Windows.Forms.ToolStripPanel.Join(ToolStrip toolStripToDrag, Point location)\r\n   at System.Windows.Forms.ToolStripPanel.JoinControls(Boolean forceLayout)\r\n   at System.Windows.Forms.ToolStripPanel.EndInit()\r\n   at System.Windows.Forms.Control.ResumeLayout(Boolean performLayout)\r\n   at mRemoteNG.UI.Forms.FrmMain.InitializeComponent() in C:\\upgrade\\mRemoteNG\\mRemoteNG\\UI\\Forms\\frmMain.Designer.cs:line 229\r\n   at mRemoteNG.UI.Forms.FrmMain..ctor() in C:\\upgrade\\mRemoteNG\\mRemoteNG\\UI\\Forms\\frmMain.cs:line 67\r\n   at mRemoteNG.UI.Forms.FrmMain..cctor() in C:\\upgrade\\mRemoteNG\\mRemoteNG\\UI\\Forms\\frmMain.cs:line 43\r\n   --- End of inner exception stack trace ---\r\n   at mRemoteNG.UI.Forms.FrmMain.get_Default() in C:\\upgrade\\mRemoteNG\\mRemoteNG\\UI\\Forms\\frmMain.cs:line 43\r\n   at mRemoteNG.App.ProgramRoot.CurrentDomainOnUnhandledException(Object sender, UnhandledExceptionEventArgs e) in C:\\upgrade\\mRemoteNG\\mRemoteNG\\App\\ProgramRoot.cs:line 119\r\n```\r\n\r\n**Minimal Repro steps**:\r\n**Demo attached**:[TopToolStripPanelDemo.zip](https://github.com/dotnet/winforms/files/11483199/TopToolStripPanelDemo.zip)\r\n\r\n\r\n1.Create a default WinForm project.\r\n2. Drag a ToolStripContainer control to Form1\r\n3. Drag two ToolStrip controls (toolStrip1 and toolStrip2) into top panel of ToolStripContainer.\r\n4. Drag the toolStrip2 behind to the toolStrip1 (by default, the toolStrip2 is under toolStrip1).\r\n5. Build the project.\r\n6. Change the runtime.config file to let the app run against with dotnet sdk 8.0.100-preview.5.23264.1:\r\n```\r\n\"frameworks\": [\r\n\r\n      {\r\n        \"name\": \"Microsoft.NETCore.App\",\r\n        \"version\": \"8.0.0-preview.5.23260.3\"\r\n      },\r\n      {\r\n        \"name\": \"Microsoft.WindowsDesktop.App\",\r\n        \"version\": \"8.0.0-preview.5.23261.7\"\r\n      }\r\n    ]\r\n```\r\n8. Launch the demo app.\r\n  \r\n\r\n**Expected Result:**\r\nApp will launch successful.\r\n\r\n**Actual Result:**\r\nLaunch failed with exception \"Index was outside the bounds of the array.\".\r\n```\r\n\r\nStacktrace:\r\n\r\n   at System.Windows.Forms.ToolStripPanelRow.ToolStripPanelRowControlCollection.GetControl(Int32 index) in /_/src/System.Windows.Forms/src/System/Windows/Forms/ToolStripPanelRow.ToolStripPanelRowControlCollection.cs:line 156\r\n   at System.Windows.Forms.ToolStripPanelRow.HorizontalRowManager.JoinRow(ToolStrip toolStripToDrag, Point locationToDrag) in /_/src/System.Windows.Forms/src/System/Windows/Forms/ToolStripPanelRow.HorizontalRowManager.cs:line 448\r\n   at System.Windows.Forms.ToolStripPanel.MoveInsideContainer(ToolStrip toolStripToDrag, Point clientLocation) in /_/src/System.Windows.Forms/src/System/Windows/Forms/ToolStripPanel.cs:line 1009\r\n   at System.Windows.Forms.ToolStripPanel.Join(ToolStrip toolStripToDrag, Point location) in /_/src/System.Windows.Forms/src/System/Windows/Forms/ToolStripPanel.cs:line 807\r\n   at System.Windows.Forms.ToolStripPanel.JoinControls(Boolean forceLayout) in /_/src/System.Windows.Forms/src/System/Windows/Forms/ToolStripPanel.cs:line 673\r\n   at System.Windows.Forms.ToolStripPanel.EndInit() in /_/src/System.Windows.Forms/src/System/Windows/Forms/ToolStripPanel.cs:line 388\r\n   at System.Windows.Forms.Control.ResumeLayout(Boolean performLayout) in /_/src/System.Windows.Forms/src/System/Windows/Forms/Control.cs:line 10018\r\n   at TopToolStripPanelDemo.Form1.InitializeComponent() in E:\\Demos\\TopToolStripPanelDemo\\TopToolStripPanelDemo\\Form1.Designer.cs:line 80\r\n   at TopToolStripPanelDemo.Form1..ctor() in E:\\Demos\\TopToolStripPanelDemo\\TopToolStripPanelDemo\\Form1.cs:line 7\r\n   at TopToolStripPanelDemo.Program.Main() in E:\\Demos\\TopToolStripPanelDemo\\TopToolStripPanelDemo\\Program.cs:line 14\r\n```\r\n\r\n**Findings**\r\n\r\n1. If we keep the ToolStrip controls in default vertical location relationship, it works fine. Once we drag any of them to change the location, the app will get above exception.\r\n2. When adding 2 MenuStrip controls in ToolStripContainer doesn't have this issue.\r\n\r\n@dotnet-actwx-bot @dotnet/compat","Url":"https://github.com/dotnet/winforms/issues/9126","RelatedDescription":"Open issue \"[8.0.100-preview.5.23264.1] System.IndexOutOfRangeException thrown when ToolStrips Location is not using default Location in ToolStripContainer\" (#9126)"},{"Id":"1711076570","IsPullRequest":false,"CreatedAt":"2023-05-16T01:45:10","Actor":"Olina-Zhang","Number":"9125","RawContent":null,"Title":"AccessibilityInsight: An on-screen element must not have a null BoundingRectangle property when ListView has DataBinding","State":"open","Body":"### .NET version\r\n\r\n.NET 8.0.100-preview.5.23261.16\r\n\r\n### Did it work in .NET Framework?\r\n\r\nYes\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nYes, it works in previous .Net 7.0 and 6.0.\r\n\r\n### Issue description\r\n\r\nAccessibilityInsight detects an error about \"An on-screen elememt must not have a null BoundingRectangle property\" for ListView with DataBinding, and in Inspect, ListView has extra Image for every ListItem in UIA hierarchy\r\nThis issue doesn't repro ListView without DataBinding.\r\n\r\n**.Net 8.0 in AccessibilityInsight:**\r\n![image](https://github.com/dotnet/winforms/assets/26474449/b108df72-6629-44d8-be3f-200264c1fb4a)\r\n\r\n**.Net 8.0 in Inspect:**\r\n![image](https://github.com/dotnet/winforms/assets/26474449/302ced9e-6bc9-4fc6-899c-f7fe7d40910b)\r\n\r\n**.Net 7.0 in AccessibilityInsight:**\r\n![image](https://github.com/dotnet/winforms/assets/26474449/46431950-244d-4f9f-a727-323d7f2fe402)\r\n\r\n**.Net 7.0 in Inspect:**\r\n![image](https://github.com/dotnet/winforms/assets/26474449/db5ceb48-44a2-4192-8361-31285528704f)\r\n\r\n\r\n### Steps to reproduce\r\n\r\n**Repro steps:**\r\n1.\tCreate a Winforms .Net Core application with ListView added\r\n2.\tCreate a DataSet with TableData by code\r\n3.\tBind this DataSet table data to ListView\r\n4.\tBuild and run application \r\n5.\tUse AccessibilityInsight to detect this ListView\r\n\r\nor use attached sample application:\r\n[WinFormsApp1.zip](https://github.com/dotnet/winforms/files/11483200/WinFormsApp1.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/9125","RelatedDescription":"Open issue \"AccessibilityInsight: An on-screen element must not have a null BoundingRectangle property when ListView has DataBinding\" (#9125)"},{"Id":"1710624680","IsPullRequest":true,"CreatedAt":"2023-05-15T19:43:15","Actor":"JeremyKuhne","Number":"9123","RawContent":null,"Title":"Use array[] and params array[]","State":"closed","Body":"List<T> isn't necessary here. Using params and arrays directly saves some memory and makes writing in the binary format more succinct.\r\n\r\nMade a few arrays lazy to save a little memory bloat.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9123)","Url":"https://github.com/dotnet/winforms/pull/9123","RelatedDescription":"Closed or merged PR \"Use array[] and params array[]\" (#9123)"},{"Id":"1710609651","IsPullRequest":true,"CreatedAt":"2023-05-15T18:33:27","Actor":"v-elnovikova","Number":"9122","RawContent":null,"Title":"Fixed IAccessible.get_accRole method for non-client AccessibleObject.…","State":"open","Body":"Fixes #9096\r\n\r\n## Proposed changes\r\n\r\n- Fixed `AccessibleObject.get_accRole(object childID)` for the case of non-client objects\r\n- Added a unit test for that case\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n![before](https://github.com/dotnet/winforms/assets/113603457/739a667a-fdc6-4c21-9a43-405bb1d24284)\r\n\r\n\r\n### After\r\n![after](https://github.com/dotnet/winforms/assets/113603457/5b44aecb-ca27-4b2a-bb59-1a4a8b2cbdee)\r\n\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .NET 8.0.0-alpha.1.23057.5\r\n- Inspect Object 7.2\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9122)","Url":"https://github.com/dotnet/winforms/pull/9122","RelatedDescription":"Open PR \"Fixed IAccessible.get_accRole method for non-client AccessibleObject.…\" (#9122)"},{"Id":"1706383762","IsPullRequest":true,"CreatedAt":"2023-05-15T16:40:46","Actor":"dreddy-work","Number":"9112","RawContent":null,"Title":"Update/Scale Font on each DPICHNAGED message","State":"closed","Body":"fixes #8946 \r\nfixes #9004\r\n\r\nBy default, control handles are created with the DPI (dots per inch) of the primary monitor. If we assign an owner or parent to a control that is not on the primary monitor and has a different DPI than the primary monitor, it may trigger a DPICHANGED event. This situation leads to issues linked above.\r\n\r\nWhen the DPICHANGED event occurs, we adjust the font and scale the control according to the new DPI. However, if the child control is a top-level window and explicitly or by default placed on the primary monitor, it generates another DPICHANGED message within the first one, causing the scaling process to repeat. This behavior is expected. The problem arises from the current order in which we attempt to scale the font and the control itself. We encounter the second DPICHANGED message before scaling the font, resulting in incorrect font information.\r\n\r\nThis pull request addresses the issue by fixing the order of operations and also disposing of fonts that are no longer needed.\r\n\r\nCreated a new issue to further investigate DefaultFont and DPI combination in WInForms. https://github.com/dotnet/winforms/issues/9111\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9112)","Url":"https://github.com/dotnet/winforms/pull/9112","RelatedDescription":"Closed or merged PR \"Update/Scale Font on each DPICHNAGED message\" (#9112)"},{"Id":"1709959913","IsPullRequest":true,"CreatedAt":"2023-05-15T12:25:09","Actor":"dotnet-maestro[bot]","Number":"9121","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230514.1\r\n- **Date Produced**: May 14, 2023 9:53:34 PM UTC\r\n- **Commit**: 9dd59af3aee2f403e63887afef50d98022a2e575\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **System.CodeDom**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **System.Data.Odbc**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **System.Data.OleDb**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **System.IO.Ports**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **System.Management**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **System.Reflection.Context**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **System.Runtime.Caching**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **System.Speech**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **System.Text.Json**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.5.23263.4 to 8.0.0-preview.5.23264.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/f107b63fca...9dd59af3ae\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9121)","Url":"https://github.com/dotnet/winforms/pull/9121","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#9121)"},{"Id":"1709770723","IsPullRequest":true,"CreatedAt":"2023-05-15T10:12:40","Actor":"halgab","Number":"9120","RawContent":null,"Title":"Enable nullability in CodeDomComponentSerializationService","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in `CodeDomComponentSerializationService`\r\n- Change `ArrayList` with `List<T>` (contributes to #8140)\r\n- Change all not serialized `Hashtable`s to `Dictionary<K, V>` and `HashSet<T>` (contributes to #8143)\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9120)","Url":"https://github.com/dotnet/winforms/pull/9120","RelatedDescription":"Open PR \"Enable nullability in CodeDomComponentSerializationService\" (#9120)"},{"Id":"1708920568","IsPullRequest":true,"CreatedAt":"2023-05-14T12:30:20","Actor":"dotnet-maestro[bot]","Number":"9119","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230513.4\r\n- **Date Produced**: May 14, 2023 8:20:39 AM UTC\r\n- **Commit**: f107b63fca1bd617a106e3cc7e86b337151bff79\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **System.CodeDom**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **System.Data.Odbc**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **System.Data.OleDb**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **System.IO.Ports**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **System.Management**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **System.Reflection.Context**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **System.Runtime.Caching**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **System.Speech**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **System.Text.Json**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.5.23262.13 to 8.0.0-preview.5.23263.4][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/d08c807ba6...f107b63fca\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9119)","Url":"https://github.com/dotnet/winforms/pull/9119","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#9119)"},{"Id":"1708578564","IsPullRequest":true,"CreatedAt":"2023-05-13T12:31:20","Actor":"dotnet-maestro[bot]","Number":"9118","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230512.13\r\n- **Date Produced**: May 13, 2023 7:25:53 AM UTC\r\n- **Commit**: d08c807ba6c148164041bb8f0d0156687ab3898f\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **System.CodeDom**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **System.Data.Odbc**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **System.Data.OleDb**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **System.IO.Ports**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **System.Management**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **System.Reflection.Context**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **System.Runtime.Caching**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **System.Speech**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **System.Text.Json**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.5.23260.3 to 8.0.0-preview.5.23262.13][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/888bac3044...d08c807ba6\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9118)","Url":"https://github.com/dotnet/winforms/pull/9118","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#9118)"},{"Id":"1708578065","IsPullRequest":true,"CreatedAt":"2023-05-13T12:29:47","Actor":"dotnet-maestro[bot]","Number":"9117","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20230512.5\r\n- **Date Produced**: May 12, 2023 3:29:30 PM UTC\r\n- **Commit**: 1aff4eb33aa7cbf26ccd9fc43c17cb609a14dad4\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23261.4 to 8.0.0-beta.23262.5][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.23261.4 to 8.0.0-beta.23262.5][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.23261.4 to 8.0.0-beta.23262.5][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23261.4 to 8.0.0-beta.23262.5][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.23261.4 to 8.0.0-beta.23262.5][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23261.4 to 8.0.0-beta.23262.5][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/06faa97f3e...1aff4eb33a\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9117)","Url":"https://github.com/dotnet/winforms/pull/9117","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#9117)"},{"Id":"1708347796","IsPullRequest":true,"CreatedAt":"2023-05-12T23:53:47","Actor":"dreddy-work","Number":"9116","RawContent":null,"Title":"Handle WM_DPICHANGED_BEFOREPARENT message for the Form in design scenarios","State":"open","Body":"During runtime scenarios in a WinForms application, the main Form is considered a top-level window. Consequently, it will only receive the WM_DPICHANGED message in PermonitorV2 applications. On the other hand, child controls within the Form will receive both WM_DPICHANGED_BEFOREPARENT and WM_DPICHANGED_AFTERPARENT messages.\r\n\r\nHowever, in WinForms designer scenarios, the Form behaves differently. It functions as a child window hosted within Visual Studio. As a result, during design-time, the Form will receive WM_DPICHANGED_BEFOREPARENT and WM_DPICHANGED_AFTERPARENT messages instead of WM_DPICHANGED, just like any other child controls would.\r\n\r\nThis is applicable only to the WinForms designer scenarios.\r\n\r\nFixes #https://github.com/microsoft/winforms-designer/issues/5192\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9116)","Url":"https://github.com/dotnet/winforms/pull/9116","RelatedDescription":"Open PR \"Handle WM_DPICHANGED_BEFOREPARENT message for the Form in design scenarios\" (#9116)"},{"Id":"1706885035","IsPullRequest":true,"CreatedAt":"2023-05-12T21:42:10","Actor":"JeremyKuhne","Number":"9113","RawContent":null,"Title":"Add BinaryArrayType","State":"closed","Body":"Sometimes single dimensional arrays get serialized as BinaryArrayType instead of ArraySingleObject. This change implements reading of BinaryArrayType for this case (writing is still not supported).\r\n\r\nThis also moves some helper methods up to ClassRecord.\r\n\r\nIt is also possible for Ids to be negative. They are effectively treated as positive numbers by the BinaryFormatter so Id was changed to do the same (but retain the original value).\r\n\r\nAdds a batch of additional tests and moves the BinaryFormat test extensions to the test utilities assembly.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9113)","Url":"https://github.com/dotnet/winforms/pull/9113","RelatedDescription":"Closed or merged PR \"Add BinaryArrayType\" (#9113)"},{"Id":"1707303800","IsPullRequest":false,"CreatedAt":"2023-05-12T17:52:38","Actor":"Philip-Wang01","Number":"9114","RawContent":null,"Title":"The error message for add a toolstrip button through IList has changed","State":"closed","Body":"### .NET version\r\n\r\n.NET 8.0.100-preview.5.23261.16\r\n\r\n### Did it work in .NET Framework?\r\n\r\nYes\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nYes, it works in .NET 6.0/7.0/8.0(without latest winforms dlls)\r\n\r\n### Minimal Reproduction Scenario: \r\n1. Create a WinForms .NET Core project.\r\n2. Add \r\n```\r\nToolStrip wb = new ToolStrip();\r\nButton btn = new Button();\r\n((IList)wb.Items).Add(btn);\r\n```\r\n   in Form1.cs.\r\n3. Build and run the project.\r\n\r\nOr\r\n1. Extract and open [testilist.zip](https://github.com/dotnet/winforms/files/11463404/testilist.zip)\r\n2. Build and run the project.\r\n\r\n### Current Behavior:\r\nShow error message: System.InvalidCastException: 'Unable to cast object of type 'System.Windows.Forms.Button' to type 'System.Windows.Forms.ToolStripItem'.'\r\n\r\n![image](https://github.com/dotnet/winforms/assets/86937911/e0f466af-5a7b-4edb-a202-8a41f2b0cc94)\r\n\r\n### Expected Behavior:\r\nShow error message: System.ArgumentNullException: Message=Value cannot be null. Parameter name: value\r\n![image](https://github.com/dotnet/winforms/assets/86937911/518ef38b-e008-44b4-a01d-80e41236f699)\r\n\r\n### More Info:\r\nThis issue may be caused by https://github.com/dotnet/winforms/pull/9072","Url":"https://github.com/dotnet/winforms/issues/9114","RelatedDescription":"Closed issue \"The error message for add a toolstrip button through IList has changed\" (#9114)"},{"Id":"1705693818","IsPullRequest":true,"CreatedAt":"2023-05-12T16:49:06","Actor":"dotnet-maestro[bot]","Number":"9105","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20230511.4\r\n- **Date Produced**: May 11, 2023 10:31:15 PM UTC\r\n- **Commit**: 06faa97f3e5232df0ddad42caaf28eea39d4ad1a\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23259.5 to 8.0.0-beta.23261.4][2]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.23259.5 to 8.0.0-beta.23261.4][2]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.23259.5 to 8.0.0-beta.23261.4][2]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23259.5 to 8.0.0-beta.23261.4][2]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.23259.5 to 8.0.0-beta.23261.4][2]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23259.5 to 8.0.0-beta.23261.4][2]\r\n\r\n[2]: https://github.com/dotnet/arcade/compare/08f0d9daf5...06faa97f3e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9105)\r\n","Url":"https://github.com/dotnet/winforms/pull/9105","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#9105)"},{"Id":"1706381352","IsPullRequest":false,"CreatedAt":"2023-05-11T18:59:52","Actor":"dreddy-work","Number":"9111","RawContent":null,"Title":"[Tracking] DefaultFont is static and could cause issues in PermonitorV2 applications.","State":"open","Body":"### .NET version\n\n.NET 8.0\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNO\n\n### Issue description\n\n`DefaultFont `in WinForms is static and currently does not consider the DPI of the monitor into consideration. This need to be investigated for all scenarios in PermonitorV2 mode applications.\r\n\r\nCurrently, `DeviceContext `and Font are defaulting to primary monitor and seems working as expected but would need deeper investigation/understanding\n\n### Steps to reproduce\n\nAny PerMonitor V2 mode WinForms application with dual monitor with different DPI.","Url":"https://github.com/dotnet/winforms/issues/9111","RelatedDescription":"Open issue \"[Tracking] DefaultFont is static and could cause issues in PermonitorV2 applications.\" (#9111)"},{"Id":"1706272207","IsPullRequest":false,"CreatedAt":"2023-05-11T17:45:34","Actor":"JeremyKuhne","Number":"9110","RawContent":null,"Title":"Public WinForms / .NET types require the BinaryFormatter when serializing public properties.","State":"open","Body":"When serializing public types (for ActiveX purposes, Resx, etc.) they will try to use a registered `TypeConverter` if one exists that can round-trip to/from `string` or to/from `byte[]`. If they don't have a type converter that can do so they will serialize with `[Serializable]` or `ISerializable` and the `BinaryFormatter`.\r\n\r\nThis issue is to track the known types in the WinForms stack that fall into the `BinaryFormatter` category.\r\n\r\n### System.Windows.Forms\r\n\r\nSystem.Resources.ResXDataNode\r\nSystem.Windows.Forms.ImageListStreamer\r\nSystem.Windows.Forms.ListViewGroup\r\nSystem.Windows.Forms.ListViewItem\r\nSystem.Windows.Forms.OwnerDrawPropertyBag\r\nSystem.Windows.Forms.TreeNode\r\nSystem.Windows.Forms.AxHost+InvalidActiveXStateException\r\nSystem.Windows.Forms.AxHost+State\r\nSystem.Windows.Forms.ListViewItem+ListViewSubItem\r\n\r\n### System.Drawing.Primitives\r\n\r\nSystem.Drawing.PointF\r\nSystem.Drawing.RectangleF\r\n\r\n### System.Drawing.Common\r\n\r\nSystem.Drawing.Printing.InvalidPrinterException\r\n\r\n### System.Private.CoreLib\r\n\r\n(Some reflection and other types are not listed here as they are extremely unlikely to be exposed as public properties.)\r\n\r\nSystem.Array\r\nSystem.Attribute\r\nSystem.ValueType\r\nSystem.DBNull\r\nSystem.EventArgs\r\nSystem.IntPtr\r\nSystem.OperatingSystem\r\nSystem.StringComparer\r\nSystem.CultureAwareComparer\r\nSystem.OrdinalComparer\r\nSystem.TimeZoneInfo\r\nSystem.TimeZoneInfo+AdjustmentRule\r\nSystem.TimeZoneInfo+TransitionTime\r\nSystem.UIntPtr\r\nSystem.ValueTuple\r\nSystem.Globalization.CompareInfo\r\nSystem.Globalization.SortVersion\r\nSystem.Text.StringBuilder\r\nSystem.IO.DirectoryInfo\r\nSystem.IO.FileInfo\r\nSystem.IO.FileSystemInfo\r\nSystem.Collections.ArrayList\r\nSystem.Collections.Comparer\r\nSystem.Collections.DictionaryEntry\r\nSystem.Collections.Hashtable\r\nSystem.Collections.ListDictionaryInternal\r\nSystem.Collections.Generic.ByteEqualityComparer\r\nSystem.Collections.Generic.NonRandomizedStringEqualityComparer\r\n\r\n\r\n\r\n\r\n(Still under investigation)","Url":"https://github.com/dotnet/winforms/issues/9110","RelatedDescription":"Open issue \"Public WinForms / .NET types require the BinaryFormatter when serializing public properties.\" (#9110)"},{"Id":"1704857273","IsPullRequest":true,"CreatedAt":"2023-05-11T17:09:23","Actor":"JeremyKuhne","Number":"9104","RawContent":null,"Title":"Move away from BinaryFormatter for ActiveX purposes","State":"closed","Body":"The PropertyBags now serialize without it where possible. This allows a standard Control to completely serialize without the BinaryFormatter enabled.\r\n\r\nFor the AxHost case, I've left the BinaryFormatter as a fall-back.\r\n\r\nI've also extended the Hashtable serialization to handle all primitive types. Note the two line change to make this happen. :)\r\n\r\nThis change also moves the \"Reader\" methods to \"BinaryFormattedObjectExtensions\". Due to our layering and the need to check multiple states I realized that we need to have all of the reading of objects directly using an existing BinaryFormattedObject instance.\r\n\r\nFixes a few bugs and adds more tests. Some random cleanup related to VARIANT (as I was exploring the scope of things).\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9104)","Url":"https://github.com/dotnet/winforms/pull/9104","RelatedDescription":"Closed or merged PR \"Move away from BinaryFormatter for ActiveX purposes\" (#9104)"},{"Id":"1706149233","IsPullRequest":true,"CreatedAt":"2023-05-11T16:19:39","Actor":"gpetrou","Number":"9109","RawContent":null,"Title":"Enable nullability in remaining ListViewItem members","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in remaining ListViewItem members.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9109)","Url":"https://github.com/dotnet/winforms/pull/9109","RelatedDescription":"Open PR \"Enable nullability in remaining ListViewItem members\" (#9109)"},{"Id":"1705696317","IsPullRequest":true,"CreatedAt":"2023-05-11T12:32:24","Actor":"dotnet-maestro[bot]","Number":"9106","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230510.3\r\n- **Date Produced**: May 10, 2023 7:21:41 PM UTC\r\n- **Commit**: 888bac304442e1a6883cfb922d21a74df910112d\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **System.CodeDom**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **System.Data.Odbc**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **System.Data.OleDb**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **System.IO.Ports**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **System.Management**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **System.Reflection.Context**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **System.Runtime.Caching**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **System.Speech**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **System.Text.Json**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.5.23259.10 to 8.0.0-preview.5.23260.3][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/eead6a328c...888bac3044\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9106)","Url":"https://github.com/dotnet/winforms/pull/9106","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#9106)"},{"Id":"1705698509","IsPullRequest":false,"CreatedAt":"2023-05-11T08:36:25","Actor":"nfplee","Number":"9107","RawContent":null,"Title":"Image.FromStream throws \"Parameter is not valid\" for WebP images","State":"open","Body":"According to https://learn.microsoft.com/en-us/windows/win32/gdiplus/-gdiplus-constant-image-file-format-constants GDI+ has support for WebP Images. Support was apparently added in the .NET framework [here](https://github.com/dotnet/runtime/issues/70422).\r\n\r\nHowever whenever I say the following:\r\n\r\n```\r\nusing var stream = file.OpenReadStream();\r\nusing var image = Image.FromStream(stream);\r\n```\r\n\r\nI get the error:\r\n\r\n> ArgumentException: Parameter is not valid.\r\n> System.Drawing.SafeNativeMethods+Gdip.CheckStatus(int status)\r\n\r\nThis works fine for most of the other image formats (jpg, gif, png etc).","Url":"https://github.com/dotnet/winforms/issues/9107","RelatedDescription":"Open issue \"Image.FromStream throws \"Parameter is not valid\" for WebP images\" (#9107)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-05-17T03:30:33.1361644Z","RunDurationInMilliseconds":573}