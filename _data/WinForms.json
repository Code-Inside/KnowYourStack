{"Data":{"GitHub":{"Issues":[{"Id":"3128917481","IsPullRequest":true,"CreatedAt":"2025-06-09T01:58:32","Actor":"dotnet-bot","Number":"13568","RawContent":null,"Title":"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 2725906","State":"open","Body":"This is the pull request automatically created by the OneLocBuild task in the build process to check-in localized files generated based upon translation source files (.lcl files) handed-back from the downstream localization pipeline. If there are issues in translations, visit https://aka.ms/icxLocBug and log bugs for fixes. The OneLocBuild wiki is https://aka.ms/onelocbuild and the localization process in general is documented at https://aka.ms/AllAboutLoc.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13568)","Url":"https://github.com/dotnet/winforms/pull/13568","RelatedDescription":"Open PR \"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 2725906\" (#13568)"},{"Id":"3126642359","IsPullRequest":true,"CreatedAt":"2025-06-07T07:29:45","Actor":"Youssef1313","Number":"13567","RawContent":null,"Title":"Cleanup MissingPropertySerializationConfigurationAnalyzer","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n## Proposed changes\r\n\r\n- \r\n- \r\n- \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13567)","Url":"https://github.com/dotnet/winforms/pull/13567","RelatedDescription":"Open PR \"Cleanup MissingPropertySerializationConfigurationAnalyzer\" (#13567)"},{"Id":"3126349242","IsPullRequest":true,"CreatedAt":"2025-06-07T03:07:37","Actor":"Youssef1313","Number":"13566","RawContent":null,"Title":"Cleanup AvoidPassingTaskWithoutCancellationTokenAnalyzer","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n## Proposed changes\r\n\r\n- Implement analyzer using `IOperation` instead of syntax.\r\n- Moving the implementation to language agnostic layer now that we don't need language syntax.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13566)","Url":"https://github.com/dotnet/winforms/pull/13566","RelatedDescription":"Open PR \"Cleanup AvoidPassingTaskWithoutCancellationTokenAnalyzer\" (#13566)"},{"Id":"3126288514","IsPullRequest":false,"CreatedAt":"2025-06-07T02:09:38","Actor":"Youssef1313","Number":"13565","RawContent":null,"Title":"Verify cancellation behavior of `EnumValidationGenerator`","State":"open","Body":"https://github.com/dotnet/winforms/blob/f2060dfa61556829461a5175b05120ae34a584ed/src/System.Windows.Forms.PrivateSourceGenerators/src/System/Windows/Forms/SourceGenerators/EnumValidationGenerator.cs#L211-L214\n\nThis feels suspicious. I think it may happen that the compiler caches this step, causing incomplete result to be cached and re-used. This should use `ThrowIfCancellationRequested`.\n\n(Putting aside that the generator is likely to have severe perf issues)","Url":"https://github.com/dotnet/winforms/issues/13565","RelatedDescription":"Open issue \"Verify cancellation behavior of `EnumValidationGenerator`\" (#13565)"},{"Id":"3126152826","IsPullRequest":true,"CreatedAt":"2025-06-07T00:15:39","Actor":"KlausLoeffelmann","Number":"13564","RawContent":null,"Title":"Refactor/Improve InvokeAsync to address potential disposing issues ","State":"open","Body":"Addresses #12696, #12697 \r\n(Mentioning the latter just for same topic. I do not think, this is an issue really.)\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13564)","Url":"https://github.com/dotnet/winforms/pull/13564","RelatedDescription":"Open PR \"Refactor/Improve InvokeAsync to address potential disposing issues \" (#13564)"},{"Id":"3121972163","IsPullRequest":true,"CreatedAt":"2025-06-06T19:23:29","Actor":"KlausLoeffelmann","Number":"13561","RawContent":null,"Title":"Introduce FormScreenCaptureMode property on Form","State":"closed","Body":"Fixes #13258.\r\nFixes #13450.\r\n\r\nLooks like this, when _recorded_:\r\n\r\n![ScreenCapture](https://github.com/user-attachments/assets/f97c768f-93cd-407b-a90c-b26d481c5559)\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13561)","Url":"https://github.com/dotnet/winforms/pull/13561","RelatedDescription":"Closed or merged PR \"Introduce FormScreenCaptureMode property on Form\" (#13561)"},{"Id":"3123503418","IsPullRequest":true,"CreatedAt":"2025-06-06T03:19:42","Actor":"LeafShi1","Number":"13563","RawContent":null,"Title":"[10.0-Preview4] Fix #13557 Removing flag OperationInReleasingDataSource from DataGridView.cs","State":"open","Body":"Backport of #13362 to release/10.0-Preview4\r\nFixes https://github.com/dotnet/winforms/issues/13557 \r\n\r\n### Customer Impact\r\nIn DataGridView.CellValueChanged event handler, DataSource=null throws exception\r\n\r\n### Fix\r\nSet `CurrentCell = null;` in DataSource set method, and add judgment `IsHandleCreated` before invoking `EndEdit` to avoid the exception\r\n\r\n### Testing\r\nManual with the customer repro case.\r\n\r\n## Risk\r\nLow - This change has been included in .net8, .net9, and works fine.\r\n","Url":"https://github.com/dotnet/winforms/pull/13563","RelatedDescription":"Open PR \"[10.0-Preview4] Fix #13557 Removing flag OperationInReleasingDataSource from DataGridView.cs\" (#13563)"},{"Id":"3123402570","IsPullRequest":true,"CreatedAt":"2025-06-06T02:49:51","Actor":"dotnet-maestro[bot]","Number":"13562","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250604.6](https://dev.azure.com/dnceng/internal/_build/results?buildId=2723441)\n- **Date Produced**: June 5, 2025 6:19:29 AM UTC\n- **Commit Diff**: [62e9d32...7e27ec4](https://github.com/dotnet/dotnet/compare/62e9d324a3c6678a0415b12af92354b6b03677c8...7e27ec4c314eb774eae2c54ce4682c98973c7c60)\n- **Commit**: [7e27ec4c314eb774eae2c54ce4682c98973c7c60](https://github.com/dotnet/dotnet/commit/7e27ec4c314eb774eae2c54ce4682c98973c7c60)\n- **Branch**: main\n\n**Updated Dependencies**\n- **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **System.Resources.Extensions**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **System.Windows.Extensions**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **System.Text.Encodings.Web**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **System.Text.Json**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **System.CodeDom**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **System.Formats.Nrbf**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **System.IO.Hashing**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25304.104 to 10.0.0-beta.25304.106][1]\n- **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25304.104 to 10.0.0-beta.25304.106][1]\n- **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25304.104 to 10.0.0-beta.25304.106][1]\n- **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25304.104 to 10.0.0-beta.25304.106][1]\n- **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25304.104 to 10.0.0-beta.25304.106][1]\n- **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25304.104 to 10.0.0-beta.25304.106][1]\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/62e9d324a3...7e27ec4c31\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13562)","Url":"https://github.com/dotnet/winforms/pull/13562","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13562)"},{"Id":"3121918410","IsPullRequest":true,"CreatedAt":"2025-06-06T01:56:51","Actor":"KlausLoeffelmann","Number":"13560","RawContent":null,"Title":"Address additional TitleBar corner case issues","State":"closed","Body":"We introduced a few new APIs around TitleBar control (independent of dark mode).\r\n\r\n* They have been put behind the DarkMode experimental flag, although they weren't really dark-mode related, but \"just\" controlling some TitleBar properties equally in Light- and in DarkMode.\r\n* When a Form needs to recreate a handle, they \"lost\" their settings, since we only applied the TitleBar settings initially.\r\n\r\nFixes #12991.\r\nFixes #12992.\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13560)","Url":"https://github.com/dotnet/winforms/pull/13560","RelatedDescription":"Closed or merged PR \"Address additional TitleBar corner case issues\" (#13560)"},{"Id":"3120542149","IsPullRequest":true,"CreatedAt":"2025-06-05T09:43:50","Actor":"LeafShi1","Number":"13558","RawContent":null,"Title":"Fix 13227: Update SetName of DesignerExtenders.NameExtenderProvider to virtual method","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #13227\r\n\r\n\r\n## Proposed changes\r\n\r\n- Change `SetName` of `DesignerExtenders.NameExtenderProvider` from `static` to `virtual` method\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Enable Name property for all controls in DemoConsole\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nIn [DemoConsole](https://github.com/dotnet/winforms/tree/main/src/System.Windows.Forms/tests/IntegrationTests/DesignSurface/DemoConsole) test app of WinForms repo, `Name` property for all controls is disabled\r\n.NET 10:\r\n\r\n![Image](https://github.com/user-attachments/assets/9299cfc1-6390-4609-be1f-0b53066a18de)\r\n\r\n### After\r\n\r\n `Name` property for all controls is enabled\r\n\r\n![image](https://github.com/user-attachments/assets/8ca9e888-18bf-4256-b6c6-4689580cd187)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manually\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .net 10.0.0-preview.6.25303.102\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13558)","Url":"https://github.com/dotnet/winforms/pull/13558","RelatedDescription":"Open PR \"Fix 13227: Update SetName of DesignerExtenders.NameExtenderProvider to virtual method\" (#13558)"},{"Id":"3121311164","IsPullRequest":false,"CreatedAt":"2025-06-05T09:20:36","Actor":"smToDo","Number":"13559","RawContent":null,"Title":"Incorrect rendering of hot prefixes for some fonts after the KB5058499 update for Windows 11","State":"open","Body":"### Description\n\nHello.\nWe have an application with custom string rendering using the <a href='https://learn.microsoft.com/en-us/dotnet/api/system.drawing.graphics.drawstring?view=windowsdesktop-9.0&viewFallbackFrom=net-8.0'>DrawString</a> method and the Segoe UI font. \nAfter installing the <a href ='https://support.microsoft.com/en-us/topic/may-28-2025-kb5058499-os-build-26100-4202-preview-d4c2f1ee-8138-4038-b705-546945076f92'>KB5058499</a> update for Windows 11, our application began to render the string with hot prefixes incorrectly.\nThe <a href='https://learn.microsoft.com/en-us/dotnet/api/system.windows.forms.textrenderer.drawtext?view=windowsdesktop-8.0'>DrawText</a> method works correctly.\nThis issue does not exist for all fonts.\nOriginal string: \"ファイル(&F)\"\n![Image](https://github.com/user-attachments/assets/9629d62e-6fa1-4360-9030-29a0f163d678)\n\n\n### Reproduction Steps\n\n1. Create a WinForms application for .Net Framework or .Net\n2. Override the OnPaint method of the main form:\n```\n        protected override void OnPaint(PaintEventArgs e)\n        {\n            base.OnPaint(e);\n\n            var text = \"ファイル(&F)\";\n            var stringFormat = new StringFormat\n            {\n                HotkeyPrefix = System.Drawing.Text.HotkeyPrefix.Show\n            };\n            using (var font = new Font(\"Segoe UI\", 10))\n            {\n                e.Graphics.DrawString($\"DrawString {text}\", font, SystemBrushes.ControlText, new Point(Bounds.Width / 2, Bounds.Height / 2), stringFormat);\n                TextRenderer.DrawText(e.Graphics, $\"DrawText {text}\", font, new Point(Bounds.Width / 2, Bounds.Height / 2 + 30), SystemColors.ControlText);\n            }\n        }\n```\n3. Run application.\n\n### Expected behavior\n\nThe DrawString method ​​renders a hot prefix as the DrawText method.\n\n### Actual behavior\n\nThe DrawString method does not display hot prefix correctly.\n\n### Regression?\n\nYes, the DrawStrings works correctly with Windows 10 and Windows 11 before KB5058499.\n\n### Known Workarounds\n\nNot all fonts are drawn with an issue, you can select a new application font.\n\n### Configuration\n\n.Net Framework 4.8\n.Net 8\nWindows 11 Pro 24H2 26100.4202\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/winforms/issues/13559","RelatedDescription":"Open issue \"Incorrect rendering of hot prefixes for some fonts after the KB5058499 update for Windows 11\" (#13559)"},{"Id":"3120285392","IsPullRequest":false,"CreatedAt":"2025-06-05T08:17:23","Actor":"panxn","Number":"13557","RawContent":null,"Title":"In DataGridView.CellValueChanged event handler, DataSource=null throws exception","State":"open","Body":"### .NET version\n\n.NET 10 preview 4 (latest version downloaded from https://dotnet.microsoft.com/en-us/download/dotnet/10.0)\n>Microsoft.WindowsDesktop.App 10.0.0-preview.4.25258.110\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n.NET8\n\n### Issue description\n\nAdd event handler for `DataGridView.CellValueChanged`, and set `DataSource` property to null in the handler.\nSee comment in my sample code.\n\n### Steps to reproduce\n\n```\nusing System;\nusing System.Data;\nusing System.Data.SqlClient;\nusing System.Windows.Forms;\nusing System.Drawing;\n\npublic class Form1 : System.Windows.Forms.Form\n{\n    private DataGridView dataGridView1 = new DataGridView();\n    private BindingSource bindingSource1 = new BindingSource();\n\n    public Form1()\n    {\n        dataGridView1.Dock = DockStyle.Fill;\n        this.Controls.Add(dataGridView1);\n        InitializeDataGridView();\n    }\n\n    private void InitializeDataGridView()\n    {\n        dataGridView1.Dock = DockStyle.Fill;\n\n        dataGridView1.AutoGenerateColumns = true;\n\n        bindingSource1.DataSource = GetData();\n        dataGridView1.DataSource = bindingSource1;\n\n        dataGridView1.AutoSizeRowsMode =\n            DataGridViewAutoSizeRowsMode.DisplayedCellsExceptHeaders;\n\n        dataGridView1.BorderStyle = BorderStyle.Fixed3D;\n        dataGridView1.EditMode = DataGridViewEditMode.EditOnEnter;\n\n        dataGridView1.CellValueChanged += DataGridView1_CellValueChanged;\n    }\n\n    private void DataGridView1_CellValueChanged(object? sender, DataGridViewCellEventArgs e)\n    {\n        // it throws exception with .net10, but works with .net8\n        dataGridView1.DataSource = null;\n    }\n\n    private static DataTable GetData()\n    {\n        DataTable table = new DataTable(\"ExampleTable\");\n\n        table.Columns.Add(\"ID\", typeof(int));\n        table.Columns.Add(\"Name\", typeof(string));\n\n        table.Rows.Add(1, \"Alice\");\n        table.Rows.Add(2, \"Bob\");\n\n        return table;\n    }\n\n    [STAThreadAttribute()]\n    public static void Main()\n    {\n        Application.Run(new Form1());\n    }\n}\n```","Url":"https://github.com/dotnet/winforms/issues/13557","RelatedDescription":"Open issue \"In DataGridView.CellValueChanged event handler, DataSource=null throws exception\" (#13557)"},{"Id":"3119609388","IsPullRequest":true,"CreatedAt":"2025-06-05T02:52:24","Actor":"dotnet-maestro[bot]","Number":"13556","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250604.4](https://dev.azure.com/dnceng/internal/_build/results?buildId=2723141)\n- **Date Produced**: June 5, 2025 12:01:28 AM UTC\n- **Commit Diff**: [ac2aaf2...62e9d32](https://github.com/dotnet/dotnet/compare/ac2aaf24d127067df385f2aa5ab35bb9b96d5f74...62e9d324a3c6678a0415b12af92354b6b03677c8)\n- **Commit**: [62e9d324a3c6678a0415b12af92354b6b03677c8](https://github.com/dotnet/dotnet/commit/62e9d324a3c6678a0415b12af92354b6b03677c8)\n- **Branch**: main\n\n**Updated Dependencies**\n- **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.6.25303.102 to 10.0.0-preview.6.25304.104][1]\n- **System.Resources.Extensions**: [from 10.0.0-preview.6.25303.102 to 10.0.0-preview.6.25304.104][1]\n- **System.Windows.Extensions**: [from 10.0.0-preview.6.25303.102 to 10.0.0-preview.6.25304.104][1]\n- **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.6.25303.102 to 10.0.0-preview.6.25304.104][1]\n- **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25303.102 to 10.0.0-preview.6.25304.104][1]\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25303.102 to 10.0.0-preview.6.25304.104][1]\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25303.102 to 10.0.0-preview.6.25304.104][1]\n- **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.6.25303.102 to 10.0.0-preview.6.25304.104][1]\n- **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.6.25303.102 to 10.0.0-preview.6.25304.104][1]\n- **System.Text.Encodings.Web**: [from 10.0.0-preview.6.25303.102 to 10.0.0-preview.6.25304.104][1]\n- **System.Text.Json**: [from 10.0.0-preview.6.25303.102 to 10.0.0-preview.6.25304.104][1]\n- **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.6.25303.102 to 10.0.0-preview.6.25304.104][1]\n- **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.6.25303.102 to 10.0.0-preview.6.25304.104][1]\n- **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.6.25303.102 to 10.0.0-preview.6.25304.104][1]\n- **System.CodeDom**: [from 10.0.0-preview.6.25303.102 to 10.0.0-preview.6.25304.104][1]\n- **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.6.25303.102 to 10.0.0-preview.6.25304.104][1]\n- **System.Formats.Nrbf**: [from 10.0.0-preview.6.25303.102 to 10.0.0-preview.6.25304.104][1]\n- **System.IO.Hashing**: [from 10.0.0-preview.6.25303.102 to 10.0.0-preview.6.25304.104][1]\n- **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25303.102 to 10.0.0-beta.25304.104][1]\n- **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25303.102 to 10.0.0-beta.25304.104][1]\n- **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25303.102 to 10.0.0-beta.25304.104][1]\n- **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25303.102 to 10.0.0-beta.25304.104][1]\n- **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25303.102 to 10.0.0-beta.25304.104][1]\n- **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25303.102 to 10.0.0-beta.25304.104][1]\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/ac2aaf24d1...62e9d324a3\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13556)","Url":"https://github.com/dotnet/winforms/pull/13556","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13556)"},{"Id":"3118380300","IsPullRequest":true,"CreatedAt":"2025-06-05T00:47:14","Actor":"vseanreesermsft","Number":"13554","RawContent":null,"Title":"Update branding to 8.0.18","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13554)","Url":"https://github.com/dotnet/winforms/pull/13554","RelatedDescription":"Closed or merged PR \"Update branding to 8.0.18\" (#13554)"},{"Id":"3118380807","IsPullRequest":true,"CreatedAt":"2025-06-05T00:46:56","Actor":"vseanreesermsft","Number":"13555","RawContent":null,"Title":"Update branding to 9.0.7","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13555)","Url":"https://github.com/dotnet/winforms/pull/13555","RelatedDescription":"Closed or merged PR \"Update branding to 9.0.7\" (#13555)"},{"Id":"3116025510","IsPullRequest":true,"CreatedAt":"2025-06-04T02:54:41","Actor":"dotnet-maestro[bot]","Number":"13553","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250603.2](https://dev.azure.com/dnceng/internal/_build/results?buildId=2722319)\n- **Date Produced**: June 3, 2025 8:15:09 PM UTC\n- **Commit Diff**: [d2434b1...ac2aaf2](https://github.com/dotnet/dotnet/compare/d2434b1b5ed778f9869b1e51ba1df4bc3a64eda7...ac2aaf24d127067df385f2aa5ab35bb9b96d5f74)\n- **Commit**: [ac2aaf24d127067df385f2aa5ab35bb9b96d5f74](https://github.com/dotnet/dotnet/commit/ac2aaf24d127067df385f2aa5ab35bb9b96d5f74)\n- **Branch**: main\n\n**Updated Dependencies**\n- **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **System.Resources.Extensions**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **System.Windows.Extensions**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **System.Text.Encodings.Web**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **System.Text.Json**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **System.CodeDom**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **System.Formats.Nrbf**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **System.IO.Hashing**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25302.103 to 10.0.0-beta.25303.102][1]\n- **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25302.103 to 10.0.0-beta.25303.102][1]\n- **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25302.103 to 10.0.0-beta.25303.102][1]\n- **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25302.103 to 10.0.0-beta.25303.102][1]\n- **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25302.103 to 10.0.0-beta.25303.102][1]\n- **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25302.103 to 10.0.0-beta.25303.102][1]\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/d2434b1b5e...ac2aaf24d1\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13553)","Url":"https://github.com/dotnet/winforms/pull/13553","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13553)"},{"Id":"3115766641","IsPullRequest":true,"CreatedAt":"2025-06-03T23:57:35","Actor":"ricardobossan","Number":"13552","RawContent":null,"Title":"Restore \"Use Data Bound Items\" support in ListBox/ComboBox Smart Tags","State":"open","Body":"Fixes #13228\r\n\r\n## Root Cause\r\n\r\nThe `ListBox` and `ComboBox` Smart Tag panels no longer displayed the \"Use Data Bound Items\" checkbox in .NET 5+ because the logic responsible for detecting and handling data binding (previously in `ListControlBoundActionList`) was removed and replaced with a simplified `ListControlUnboundActionList`. This stripped out support for toggling between bound and unbound modes, as well as the associated UI elements and property editing.\r\n\r\n## Proposed changes\r\n\r\n- Reintroduce `BoundMode`, `DataSource`, `DisplayMember`, `ValueMember`, and `BoundSelectedValue` properties.\r\n- Conditionally show data-bound or unbound actions in the Smart Tag panel based on the control's current binding state.\r\n- Preserve existing \"Edit Items...\" dialog behavior for unbound scenarios.\r\n\r\n## Customer Impact\r\n\r\nDevelopers using the WinForms Designer in .NET 5+ will be able to configure data binding for `ListBox` and `ComboBox` controls through the Smart Tag UI.\r\n\r\n## Regression?\r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Screenshots\r\n\r\n### Before\r\n\r\n### After\r\n\r\n## Test methodology\r\n\r\n- Manual\r\n\r\n## Test environment(s)\r\n\r\n- 10.0.100-preview.6.25272.112\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13552)","Url":"https://github.com/dotnet/winforms/pull/13552","RelatedDescription":"Open PR \"Restore \"Use Data Bound Items\" support in ListBox/ComboBox Smart Tags\" (#13552)"},{"Id":"3115348075","IsPullRequest":true,"CreatedAt":"2025-06-03T20:27:13","Actor":"KlausLoeffelmann","Number":"13551","RawContent":null,"Title":"Introduce the new API InitializeControl on Control","State":"open","Body":"This PR \r\n* fixes #13550.\r\n* fixes #13460.\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13551)","Url":"https://github.com/dotnet/winforms/pull/13551","RelatedDescription":"Open PR \"Introduce the new API InitializeControl on Control\" (#13551)"},{"Id":"3115253845","IsPullRequest":false,"CreatedAt":"2025-06-03T19:53:06","Actor":"KlausLoeffelmann","Number":"13550","RawContent":null,"Title":"Add InitializeControl(int deviceDpi) to Control for Early Initialization","State":"open","Body":"## TL;DR\n\nWinForms controls frequently require setup before base classes access virtuals like `CreateParams`, which happens in base constructors. Since derived class constructors execute _after_ that point, it’s currently hard to configure control styles, flags, or scaling-related values in time for certain scenarios.\n\nTo address this, we propose introducing:\n\n```csharp\nprotected virtual void InitializeControl(int deviceDpi) { }\n```\n\nThis method is invoked directly in the Control constructor and allows derived controls to perform critical early setup — superseding the internal `InitializeConstantsForInitialDpi(int)`.\n\n\n## API Definition\n\n```csharp\n/// <summary>\n///  Provides inheriting controls a dedicated early-initialization hook that is guaranteed to run\n///  <i>before</i> <see cref=\"CreateParams\"/> is called by any base class constructor.\n/// </summary>\n/// <param name=\"deviceDpi\">The DPI value for the control's device context.</param>\nprotected virtual void InitializeControl(int deviceDpi)\n{\n}\n```\n\nThis method is to be called at the beginning of the Control constructor.\n\n## Motivation\n\n- Derived controls need deterministic access to DPI and layout-sensitive configuration before base constructors run logic dependent on those settings.\n- Prevents fragile workarounds involving deferred initialization or brittle assumptions about constructor chaining.\n- Makes discoverable what was previously internal: `InitializeConstantsForInitialDpi(int)`.\n- Offers clarity and intent for derived class authors.\n\n## Tooling & Compatibility\n\n**Windows Dependency:** None. Purely runtime logic.\n\n**Design Tools:** No impact. No special designer/codegen/serialization handling needed.\n\n**Backwards Compatibility:** Safe by default; does not affect existing controls unless overridden.\n\n## Design Discussion\n\nWhy is a virtual call from constructor acceptable?\n\nOrdinarily in C#, calling a virtual method from a constructor is discouraged. The derived type’s fields may not yet be initialized, leading to unexpected behavior.\n\nHowever, this is not an ordinary .NET design:\n\n✅ Java Origins of WinForms\n\nWinForms originated in Visual J++, a Java-based platform. In Java: \n- All non-final instance methods are virtual by default.\n- Virtual dispatch works in constructors, even if the derived class fields aren't initialized yet.\n- Tooling (e.g., IntelliJ, Eclipse) issues warnings, not errors, for constructor-dispatched virtuals.\n\n✅ Precedent in WinForms\n\nMethods like `CreateParams`, `DefaultSize`, and `GetScaledBounds` are already virtual and called in constructors. This pattern is foundational in WinForms.\n\n✅ Scoped Risk with `InitializeControl`\n\n- The method is intentionally isolated and narrowly scoped.\n- Encourages developers to use this instead of constructor hacks.\n\n✅ Improves Current Practices\n\nControl authors today often use `OnCreateControl` or other late-stage workarounds. This method gives a clean, predictable, and well-documented hook.\n\n### Replacement of Existing Internal API\n\nThis proposal replaces:\n\n```csharp\nprivate protected virtual void InitializeConstantsForInitialDpi(int initialDpi) { }\n```\n\nWith the more expressive and public accessible:\n\n```csharp\nprotected virtual void InitializeControl(int deviceDpi) { }\n```\n\nand also paves the path for us internally, to use the new API to control, if a WinForms Control wants to participate in or opt out of DarkMode or the handling of certain OwnerDrawing scenarios.\n(See [`ButtonBase` as an example](https://github.com/dotnet/winforms/blob/2f29f9abf016a0adab3700ac6823b2b5d58d8004/src/System.Windows.Forms/System/Windows/Forms/Controls/Buttons/ButtonBase.cs#L79), where the decision to OwnerDraw managers, if a Button is completely represented by the Win32 pendant, and only wrapped by .NET or if .NET actually represents the implementation logic.\n### Risks\n\n* Minimal. This change will not change existing behavior. It will, however, allow developers of Third-party-control to control early initialization of their own controls with the potential for regressions of their own controls. But this is already today possible by \"messing up\" initialization of `CreateParams` or not calling base-class methods like `CreateHandle` or `CreateControl`.\n\n\n## Summary\n\nThis small but significant addition addresses a long-standing pain point in WinForms. It adheres to existing architectural patterns, respects .NET best practices where applicable, and delivers better control to developers building derived components.\n","Url":"https://github.com/dotnet/winforms/issues/13550","RelatedDescription":"Open issue \"Add InitializeControl(int deviceDpi) to Control for Early Initialization\" (#13550)"},{"Id":"3101149843","IsPullRequest":true,"CreatedAt":"2025-06-03T19:05:21","Actor":"Youssef1313","Number":"13541","RawContent":null,"Title":"Delete eng/helixpublish.proj","State":"closed","Body":"It feels like this repo runs tests normally and not using Helix, and this file is dead?\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13541)","Url":"https://github.com/dotnet/winforms/pull/13541","RelatedDescription":"Closed or merged PR \"Delete eng/helixpublish.proj\" (#13541)"},{"Id":"3102719115","IsPullRequest":true,"CreatedAt":"2025-06-03T17:21:06","Actor":"LeafShi1","Number":"13542","RawContent":null,"Title":"Fix 13538: Update method Drop of DropTarget.cs","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #13538\r\n\r\n\r\n## Proposed changes\r\n\r\n- Update method `Drop` to delete `*pdwEffect = DROPEFFECT.DROPEFFECT_NONE` before `CreateDragEventArgs` \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- The component controls can be moved in design time\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\nUnable move component controls in DemoConsole application.\r\n\r\nhttps://github.com/user-attachments/assets/fb3397cc-15c7-4565-b42a-09866a6bd404\r\n\r\n### After\r\nComponent controls can be moved normally\r\n![AfterChange](https://github.com/user-attachments/assets/1eb7c844-df53-4819-b710-321fb2380a74)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manually\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .net 10.0.0-preview.6.25278.103\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13542)","Url":"https://github.com/dotnet/winforms/pull/13542","RelatedDescription":"Closed or merged PR \"Fix 13538: Update method Drop of DropTarget.cs\" (#13542)"},{"Id":"3114804676","IsPullRequest":false,"CreatedAt":"2025-06-03T17:16:52","Actor":"dotnet-maestro-bot","Number":"13549","RawContent":null,"Title":"[dnceng-bot] Branch `winforms/release/9.0` can't be merged to Azdo internal branch","State":"open","Body":"Branch [release/9.0](https://github.com/dotnet/winforms/commits/release/9.0/) in `dotnet/winforms` repo can't be mirrored from GitHub to Azure [internal/release/9.0](https://dev.azure.com/dnceng/internal/_git/dotnet-winforms?version=GBinternal%2Frelease%2F9.0&_a=history) via internal merge. \n\nThere are conflicting commits in the target branch.\nThe branch is configured to be mirrored via automated merge. \nThe situation is rare but normal. The target branch is expected to receive manual commits in the Azure DevOps clone, which could cause conflict.\n\nConflicts need to be **resolved to unblock the code flow**.\n\n- you can resolve the issue by resolving the conflict in the **target branch only**. \n    - Please make sure that the changes sensitive from security perspective are not published ahead of time to GitHub!\n- reverting the extra commits in the Azdo target branch.\n- checking the logs of the mirroring process in the [mirroring pipeline](https://dev.azure.com/dnceng/internal/_build?definitionId=1387).\n- you can disable the mirroring of the branch in the [configuration file](https://dev.azure.com/dnceng/internal/_git/dotnet-mirroring?path=/dnceng-subscriptions.jsonc).\n- you can ask @dotnet/dnceng for help or read the [documentation](https://dev.azure.com/dnceng/internal/_git/dotnet-mirroring?path=/README.md).\n\nPlease close this issue once the conflict is resolved.","Url":"https://github.com/dotnet/winforms/issues/13549","RelatedDescription":"Open issue \"[dnceng-bot] Branch `winforms/release/9.0` can't be merged to Azdo internal branch\" (#13549)"},{"Id":"3106399714","IsPullRequest":true,"CreatedAt":"2025-06-03T17:14:00","Actor":"dotnet-maestro[bot]","Number":"13544","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250602.3](https://dev.azure.com/dnceng/internal/_build/results?buildId=2721725)\n- **Date Produced**: June 2, 2025 11:19:03 PM UTC\n- **Commit Diff**: [1b58197...d2434b1](https://github.com/dotnet/dotnet/compare/1b5819797c01e0898087a34d8a2a7d9b9f55f1ac...d2434b1b5ed778f9869b1e51ba1df4bc3a64eda7)\n- **Commit**: [d2434b1b5ed778f9869b1e51ba1df4bc3a64eda7](https://github.com/dotnet/dotnet/commit/d2434b1b5ed778f9869b1e51ba1df4bc3a64eda7)\n- **Branch**: main\n\n**Updated Dependencies**\n- **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **System.Resources.Extensions**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **System.Windows.Extensions**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **System.Text.Encodings.Web**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **System.Text.Json**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **System.CodeDom**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **System.Formats.Nrbf**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **System.IO.Hashing**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25281.103 to 10.0.0-beta.25302.103][1]\n- **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25281.103 to 10.0.0-beta.25302.103][1]\n- **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25281.103 to 10.0.0-beta.25302.103][1]\n- **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25281.103 to 10.0.0-beta.25302.103][1]\n- **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25281.103 to 10.0.0-beta.25302.103][1]\n- **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25281.103 to 10.0.0-beta.25302.103][1]\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n\n\n[1]: https://github.com/dotnet/dotnet/compare/1b5819797c...804112038c\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13544)\n[1]: https://github.com/dotnet/dotnet/compare/804112038c...7de287dade\n\n[1]: https://github.com/dotnet/dotnet/compare/7de287dade...d2434b1b5e\n","Url":"https://github.com/dotnet/winforms/pull/13544","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13544)"},{"Id":"3112114888","IsPullRequest":true,"CreatedAt":"2025-06-03T17:12:22","Actor":"dotnet-maestro[bot]","Number":"13545","RawContent":null,"Title":"[release/9.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:92989bf7-cdf9-483d-64c5-08dcbc356d11)\n## From https://github.com/dotnet/arcade\n- **Subscription**: [92989bf7-cdf9-483d-64c5-08dcbc356d11](https://maestro.dot.net/subscriptions?search=92989bf7-cdf9-483d-64c5-08dcbc356d11)\n- **Build**: [20250602.2](https://dev.azure.com/dnceng/internal/_build/results?buildId=2721828)\n- **Date Produced**: June 2, 2025 9:40:50 PM UTC\n- **Commit**: [0d52a8b262d35fa2fde84e398cb2e791b8454bd2](https://github.com/dotnet/arcade/commit/0d52a8b262d35fa2fde84e398cb2e791b8454bd2)\n- **Branch**: refs/heads/release/9.0\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.25271.1 to 9.0.0-beta.25302.2][1]\n  - **Microsoft.DotNet.CMake.Sdk**: [from 9.0.0-beta.25271.1 to 9.0.0-beta.25302.2][1]\n  - **Microsoft.DotNet.GenFacades**: [from 9.0.0-beta.25271.1 to 9.0.0-beta.25302.2][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.25271.1 to 9.0.0-beta.25302.2][1]\n  - **Microsoft.DotNet.RemoteExecutor**: [from 9.0.0-beta.25271.1 to 9.0.0-beta.25302.2][1]\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.25271.1 to 9.0.0-beta.25302.2][1]\n\n[1]: https://github.com/dotnet/arcade/compare/086a177187...0d52a8b262\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:92989bf7-cdf9-483d-64c5-08dcbc356d11)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13545)","Url":"https://github.com/dotnet/winforms/pull/13545","RelatedDescription":"Closed or merged PR \"[release/9.0] Update dependencies from dotnet/arcade\" (#13545)"},{"Id":"3113709018","IsPullRequest":false,"CreatedAt":"2025-06-03T12:11:30","Actor":"Tudsday","Number":"13548","RawContent":null,"Title":"The current screen size is wrong?","State":"open","Body":"powershell.ps1\n\nAdd-Type -AssemblyName System.Windows.Forms\n$bounds = [System.Windows.Forms.SystemInformation]::VirtualScreen   \n\nWrite-Host \"W=$($bounds.Width) H=$($bounds.Height) X=$($bounds.X) Y=$($bounds.Y)\"\n\noutput: W=2560 H=1440 X=0 Y=0\n\n![Image](https://github.com/user-attachments/assets/691b2de5-f8fe-4b45-b6c4-f1156d77451b)\nBut my monitor is 4K. Why is the reading error?","Url":"https://github.com/dotnet/winforms/issues/13548","RelatedDescription":"Open issue \"The current screen size is wrong?\" (#13548)"},{"Id":"3112823324","IsPullRequest":true,"CreatedAt":"2025-06-03T07:38:35","Actor":"Zheng-Li01","Number":"13547","RawContent":null,"Title":"Add code coverage for DataGridViewImageColumn","State":"open","Body":"Related https://github.com/dotnet/winforms/issues/13442\r\n\r\n## Proposed changes\r\nAdd unit test file:DataGridViewImageColumnTests.cs for public methods of the DataGridViewImageColumn.cs\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13547)","Url":"https://github.com/dotnet/winforms/pull/13547","RelatedDescription":"Open PR \"Add code coverage for DataGridViewImageColumn\" (#13547)"},{"Id":"3112580575","IsPullRequest":true,"CreatedAt":"2025-06-03T06:21:38","Actor":"Epica3055","Number":"13546","RawContent":null,"Title":"fix #13539 Unable select ToolStripMenuItem and TooStripTextBox of MenuStrip2 in DemoConsole application","State":"open","Body":"Fixes #13539\r\n\r\n## Root cause\r\n\r\nThere is a UserControl in the designer, which is big enough to cover the MenuStrip.\r\n\r\n![Issue_13539_2](https://github.com/user-attachments/assets/ac558add-b29f-495c-8894-054e941790cf)\r\n\r\n## Proposed changes\r\n\r\n- \r\n- Make enough room for MenuStrip\r\n- \r\n\r\n\r\n## Customer Impact\r\n\r\n- \r\n- low\r\n-\r\n\r\n\r\n\r\n\r\n\r\n## Screenshots \r\n\r\n### Before\r\n\r\nhttps://github.com/user-attachments/assets/af05626f-e340-48d1-ab4b-3ffeb2c4f475\r\n\r\n### After\r\n\r\n![Issue_13539_1](https://github.com/user-attachments/assets/fcfe6488-3211-4ad1-91c3-5c5d5c383126)\r\n\r\n\r\n\r\n## Test methodology\r\n\r\n- \r\n- manual \r\n- \r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13546)","Url":"https://github.com/dotnet/winforms/pull/13546","RelatedDescription":"Open PR \"fix #13539 Unable select ToolStripMenuItem and TooStripTextBox of MenuStrip2 in DemoConsole application\" (#13546)"},{"Id":"3104670630","IsPullRequest":true,"CreatedAt":"2025-05-31T02:50:54","Actor":"dotnet-maestro[bot]","Number":"13543","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250530.2](https://dev.azure.com/dnceng/internal/_build/results?buildId=2719956)\n- **Date Produced**: May 30, 2025 7:05:33 PM UTC\n- **Commit Diff**: [0a01b39...1b58197](https://github.com/dotnet/dotnet/compare/0a01b394b186e190a80cb55740c13f6293cf5446...1b5819797c01e0898087a34d8a2a7d9b9f55f1ac)\n- **Commit**: [1b5819797c01e0898087a34d8a2a7d9b9f55f1ac](https://github.com/dotnet/dotnet/commit/1b5819797c01e0898087a34d8a2a7d9b9f55f1ac)\n- **Branch**: main\n\n**Updated Dependencies**\n- **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **System.Resources.Extensions**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **System.Windows.Extensions**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **System.Text.Encodings.Web**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **System.Text.Json**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **System.CodeDom**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **System.Formats.Nrbf**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **System.IO.Hashing**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25278.103 to 10.0.0-beta.25280.102][1]\n- **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25278.103 to 10.0.0-beta.25280.102][1]\n- **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25278.103 to 10.0.0-beta.25280.102][1]\n- **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25278.103 to 10.0.0-beta.25280.102][1]\n- **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25278.103 to 10.0.0-beta.25280.102][1]\n- **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25278.103 to 10.0.0-beta.25280.102][1]\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/0a01b394b1...1b5819797c\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13543)","Url":"https://github.com/dotnet/winforms/pull/13543","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13543)"},{"Id":"3100252397","IsPullRequest":true,"CreatedAt":"2025-05-29T12:52:10","Actor":"Youssef1313","Number":"13540","RawContent":null,"Title":"Move to xunit.v3","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n## Proposed changes\r\n\r\n- Migrates from xunit to xunit.v3\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- None. This is test-only changes\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Very low.\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13540)","Url":"https://github.com/dotnet/winforms/pull/13540","RelatedDescription":"Open PR \"Move to xunit.v3\" (#13540)"},{"Id":"3099727085","IsPullRequest":false,"CreatedAt":"2025-05-29T09:24:10","Actor":"MelonWang1","Number":"13539","RawContent":null,"Title":"Unable select ToolStripMenuItem and TooStripTextBox of MenuStrip2 in DemoConsole application","State":"open","Body":"### .NET version\n\nmain branch of WinForms repo\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo, also repro on Release/10.0-preview4 branch of WinForms repo.\n\n### Issue description\n\nUnable select ToolStripMenuItem and TooStripTextBox of MenuStrip2 in DemoConsole application.\n\nhttps://github.com/user-attachments/assets/af05626f-e340-48d1-ab4b-3ffeb2c4f475\n\n### Steps to reproduce\n\nTest sample: [DemoConsole](https://github.com/dotnet/winforms/tree/main/src/System.Windows.Forms/tests/IntegrationTests/DesignSurface/DemoConsole) bases on main branch in Winforms repo.\n\n**More info:**\n\n1. This issue cannot repro in SubToolStripMenuItem and SubTooStripTextBox of MenuStrip2 in DemoConsole application.\n2. This issue cannot repro in MenuStrip1 in DemoConsole application.","Url":"https://github.com/dotnet/winforms/issues/13539","RelatedDescription":"Open issue \"Unable select ToolStripMenuItem and TooStripTextBox of MenuStrip2 in DemoConsole application\" (#13539)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-06-09T03:30:26.8461465Z","RunDurationInMilliseconds":507}