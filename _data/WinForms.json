{"Data":{"GitHub":{"Issues":[{"Id":"2060741820","IsPullRequest":true,"CreatedAt":"2023-12-30T13:24:08","Actor":"dotnet-maestro[bot]","Number":"10557","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20231229.3\r\n- **Date Produced**: December 30, 2023 5:02:47 AM UTC\r\n- **Commit**: 2de9facc8668bac0d8b9d53f9e2bd654a1f49e9b\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **System.CodeDom**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **System.IO.Ports**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **System.Management**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **System.Speech**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **System.Text.Json**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-alpha.1.23628.3 to 9.0.0-alpha.1.23629.3][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/b4ba5da5a0...2de9facc86\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10557)","Url":"https://github.com/dotnet/winforms/pull/10557","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#10557)"},{"Id":"2060444502","IsPullRequest":true,"CreatedAt":"2023-12-29T22:41:09","Actor":"sharwell","Number":"10556","RawContent":null,"Title":"Fix dynamic invocation of InitializeStatics","State":"open","Body":"The `Initialize` method was renamed while integration tests were disabled, so this error was not caught by CI.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10556)","Url":"https://github.com/dotnet/winforms/pull/10556","RelatedDescription":"Open PR \"Fix dynamic invocation of InitializeStatics\" (#10556)"},{"Id":"2060362691","IsPullRequest":true,"CreatedAt":"2023-12-29T22:37:53","Actor":"sharwell","Number":"10555","RawContent":null,"Title":"Stabilize ImageList_FinalizerReleasesNativeHandle_ReturnsExpected","State":"closed","Body":"Closes #6635\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10555)","Url":"https://github.com/dotnet/winforms/pull/10555","RelatedDescription":"Closed or merged PR \"Stabilize ImageList_FinalizerReleasesNativeHandle_ReturnsExpected\" (#10555)"},{"Id":"2060340893","IsPullRequest":true,"CreatedAt":"2023-12-29T22:37:39","Actor":"sharwell","Number":"10553","RawContent":null,"Title":"Only upload test results when tests run","State":"closed","Body":"Avoids a warning in CI that occurs when attempting to upload test results and none exist.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10553)","Url":"https://github.com/dotnet/winforms/pull/10553","RelatedDescription":"Closed or merged PR \"Only upload test results when tests run\" (#10553)"},{"Id":"2060341833","IsPullRequest":true,"CreatedAt":"2023-12-29T19:15:34","Actor":"sharwell","Number":"10554","RawContent":null,"Title":"Enable the xUnit1004 refactoring","State":"open","Body":"xUnit1004 comes with a code fix that allows users to remove the `Skip` attribute from a test method using the light bulb. This code fix only works when the diagnostic is enabled. This pull request enables the diagnostic at `silent` severity, which means it applies to the IDE experience but still does not report any diagnostics during a build.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10554)","Url":"https://github.com/dotnet/winforms/pull/10554","RelatedDescription":"Open PR \"Enable the xUnit1004 refactoring\" (#10554)"},{"Id":"2060205100","IsPullRequest":true,"CreatedAt":"2023-12-29T15:41:15","Actor":"sharwell","Number":"10552","RawContent":null,"Title":"Implement screen recording for integration tests","State":"open","Body":"Record the screen during integration tests, and save an animated PNG (*.apng) if the test fails. Derived from a similar implementation in dotnet/roslyn.\r\n\r\nIntegration tests will be re-enabled for CI as a follow-up to this.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10552)","Url":"https://github.com/dotnet/winforms/pull/10552","RelatedDescription":"Open PR \"Implement screen recording for integration tests\" (#10552)"},{"Id":"2059880297","IsPullRequest":true,"CreatedAt":"2023-12-29T13:25:29","Actor":"dotnet-maestro[bot]","Number":"10551","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20231228.3\r\n- **Date Produced**: December 29, 2023 12:21:29 AM UTC\r\n- **Commit**: b4ba5da5a0b8e0c7e3027a695f2acb2d9d19137b\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **System.CodeDom**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **System.IO.Ports**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **System.Management**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **System.Speech**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **System.Text.Json**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-alpha.1.23627.5 to 9.0.0-alpha.1.23628.3][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/8121f82d7d...b4ba5da5a0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10551)","Url":"https://github.com/dotnet/winforms/pull/10551","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#10551)"},{"Id":"2059866469","IsPullRequest":true,"CreatedAt":"2023-12-29T13:23:55","Actor":"dotnet-maestro[bot]","Number":"10550","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20231228.1\r\n- **Date Produced**: December 28, 2023 10:38:38 AM UTC\r\n- **Commit**: 9e5fd26c0d1a187dfa08242d83e341634d4b1b07\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.23621.2 to 9.0.0-beta.23628.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 9.0.0-beta.23621.2 to 9.0.0-beta.23628.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 9.0.0-beta.23621.2 to 9.0.0-beta.23628.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.23621.2 to 9.0.0-beta.23628.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 9.0.0-beta.23621.2 to 9.0.0-beta.23628.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.23621.2 to 9.0.0-beta.23628.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/a1e4795fcb...9e5fd26c0d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10550)","Url":"https://github.com/dotnet/winforms/pull/10550","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10550)"},{"Id":"2059100597","IsPullRequest":false,"CreatedAt":"2023-12-29T06:08:38","Actor":"BagavathiPerumalA","Number":"10549","RawContent":null,"Title":"'Constructor on type 'System.Drawing.Image' not found' crash occurs when trying to add Items in ImageCollection Editor in .NET Core project","State":"open","Body":"### Environment\n\nMicrosoft Visual Studio Professional 2022 (64-bit) - Current\r\nVersion 17.6.2\n\n### .NET version\n\nNet 7.0\n\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\n\nNo\n\n### Issue description\n\nWhen attempting to add an item as an image in the ImageCollection Editor through the Properties window in the .NET Core project, a 'Constructor on type 'System.Drawing.Image' not found' crash occurs. However, this issue is not present in the .NET Framework project. Is there any way to resolve this.\r\n\r\n\r\n![ImageCollectionEdit](https://github.com/dotnet/winforms/assets/155132856/044cc360-ad09-4520-bf18-642d0bef240f)\r\n\n\n### Steps to reproduce\n\n1. Run the sample.\r\n2. Add the ImageListExt Control (UserControl) from the Toolbox to the Form.\r\n3. On the Form designer page, right-click on the control to open the properties window.\r\n4. Click on the MyItems ImageCollection property to edit the ImageCollection.\r\n5. Then, click on the \"Add\" button to add an item to the \"Image Collection Editor.\"\r\n6. Note that the \"Constructor on type 'System.Drawing.Image' not found\" crash will occur when attempting to add the item in the \"Image Collection Editor.\"\r\n\r\n\r\n[ImageListExt-NetCoreIssue](https://github.com/dotnet/winforms/files/13791240/ImageListExt-NetCoreIssue.zip)\r\n\n\n### Diagnostics\n\n_No response_","Url":"https://github.com/dotnet/winforms/issues/10549","RelatedDescription":"Open issue \"'Constructor on type 'System.Drawing.Image' not found' crash occurs when trying to add Items in ImageCollection Editor in .NET Core project\" (#10549)"},{"Id":"2058833897","IsPullRequest":true,"CreatedAt":"2023-12-28T23:11:05","Actor":"dotnet-bot","Number":"10548","RawContent":null,"Title":"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 2342281","State":"closed","Body":"This is the pull request automatically created by the OneLocBuild task in the build process to check-in localized files generated based upon translation source files (.lcl files) handed-back from the downstream localization pipeline. If there are issues in translations, visit https://aka.ms/icxLocBug and log bugs for fixes. The OneLocBuild wiki is https://aka.ms/onelocbuild and the localization process in general is documented at https://aka.ms/AllAboutLoc.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10548)","Url":"https://github.com/dotnet/winforms/pull/10548","RelatedDescription":"Closed or merged PR \"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 2342281\" (#10548)"},{"Id":"2058150011","IsPullRequest":true,"CreatedAt":"2023-12-28T20:46:50","Actor":"Epica3055","Number":"10544","RawContent":null,"Title":"Apply target-typed new","State":"closed","Body":"Apply target-typed new\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10544)","Url":"https://github.com/dotnet/winforms/pull/10544","RelatedDescription":"Closed or merged PR \"Apply target-typed new\" (#10544)"},{"Id":"2058016572","IsPullRequest":true,"CreatedAt":"2023-12-28T20:04:19","Actor":"dotnet-bot","Number":"10542","RawContent":null,"Title":"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 2342163","State":"closed","Body":"This is the pull request automatically created by the OneLocBuild task in the build process to check-in localized files generated based upon translation source files (.lcl files) handed-back from the downstream localization pipeline. If there are issues in translations, visit https://aka.ms/icxLocBug and log bugs for fixes. The OneLocBuild wiki is https://aka.ms/onelocbuild and the localization process in general is documented at https://aka.ms/AllAboutLoc.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10542)","Url":"https://github.com/dotnet/winforms/pull/10542","RelatedDescription":"Closed or merged PR \"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 2342163\" (#10542)"},{"Id":"2058013826","IsPullRequest":true,"CreatedAt":"2023-12-28T20:02:42","Actor":"dotnet-bot","Number":"10541","RawContent":null,"Title":"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 2342047","State":"closed","Body":"This is the pull request automatically created by the OneLocBuild task in the build process to check-in localized files generated based upon translation source files (.lcl files) handed-back from the downstream localization pipeline. If there are issues in translations, visit https://aka.ms/icxLocBug and log bugs for fixes. The OneLocBuild wiki is https://aka.ms/onelocbuild and the localization process in general is documented at https://aka.ms/AllAboutLoc.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10541)","Url":"https://github.com/dotnet/winforms/pull/10541","RelatedDescription":"Closed or merged PR \"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 2342047\" (#10541)"},{"Id":"2058418118","IsPullRequest":true,"CreatedAt":"2023-12-28T13:24:13","Actor":"dotnet-maestro[bot]","Number":"10547","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20231227.5\r\n- **Date Produced**: December 28, 2023 12:29:22 AM UTC\r\n- **Commit**: 8121f82d7d46118eef03a99eecbde64d8021cec7\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **System.CodeDom**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **System.IO.Ports**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **System.Management**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **System.Speech**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **System.Text.Json**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-alpha.1.23626.2 to 9.0.0-alpha.1.23627.5][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/94f411c6ce...8121f82d7d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10547)","Url":"https://github.com/dotnet/winforms/pull/10547","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#10547)"},{"Id":"2058235280","IsPullRequest":false,"CreatedAt":"2023-12-28T09:56:23","Actor":"Zheng-Li01","Number":"10546","RawContent":null,"Title":"The \"Input Mask\" dialog for MaskedTextBox have wrong Control in the DemoConsole application","State":"open","Body":"### .NET version\r\n\r\n9.0.0-alpha.1.23621.3\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNot tested/verified\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nNo, the MaskedTextBox start support from 9.0\r\n\r\n### Issue description\r\n\r\nThe \"Input Mask\" dialog for MaskedTextBox have incorrect ControlType - LIst instead of Table\r\n\r\n### Steps to reproduce\r\n\r\n1. Test sample: [DemoConsole](https://github.com/dotnet/winforms/tree/main/src/System.Windows.Forms/tests/IntegrationTests/DesignSurface/DemoConsole) in Winforms repo\r\n2. Open the inspect tool to observe the ControlType of the \"Input Mask\" dialog for MaskedTextBox \r\n\r\n**Actually Results:**\r\nThe \"Input Mask\" dialog for MaskedTextBox have incorrect ControlType\r\n![image](https://github.com/dotnet/winforms/assets/38325459/71e382aa-51f2-45a3-a9b7-9e82e6fbf74e)\r\n\r\n**Expected Results:**\r\nThe \"Input Mask\" dialog for MaskedTextBox have correct ControlType\r\n![image](https://github.com/dotnet/winforms/assets/38325459/ba735897-4f64-4257-9858-665bca9bb482)","Url":"https://github.com/dotnet/winforms/issues/10546","RelatedDescription":"Open issue \"The \"Input Mask\" dialog for MaskedTextBox have wrong Control in the DemoConsole application\" (#10546)"},{"Id":"2058214992","IsPullRequest":false,"CreatedAt":"2023-12-28T09:39:43","Actor":"Zheng-Li01","Number":"10545","RawContent":null,"Title":"No text for new tabpage item that added by TabPages property in the properties window in the DemoConsole application","State":"open","Body":"### .NET version\n\n9.0.0-alpha.1.23621.3\n\n### Did it work in .NET Framework?\n\nNot tested/verified\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nThe issue also can reproduce .NET 8.0, which start support the TabControl.\n\n### Issue description\n\nNo text for new tabpage item added by TabPages property in the properties window in the DemoConsole application\n\n### Steps to reproduce\n\n1. Test sample: [DemoConsole](https://github.com/dotnet/winforms/tree/main/src/System.Windows.Forms/tests/IntegrationTests/DesignSurface/DemoConsole) in Winforms repo\r\n2. Add new tabpage item by TabPages property in the properties window \r\n\r\n**Actually Results:**\r\nNo text for new tabpage item added by TabPages property in the properties window\r\n![image](https://github.com/dotnet/winforms/assets/38325459/fff07432-f8f3-4b82-a2a4-6ea5f77b8a77)\r\n![TabControl](https://github.com/dotnet/winforms/assets/38325459/e1788125-2832-45b1-8148-1640a410b094)\r\n\r\n**Expected Results:**\r\nHave text for new tabpage item added by TabPages property in the properties window\r\n\r\n**More info:**\r\nThe issue can't reproduce when added new tabpage item by using Command/SmartTag","Url":"https://github.com/dotnet/winforms/issues/10545","RelatedDescription":"Open issue \"No text for new tabpage item that added by TabPages property in the properties window in the DemoConsole application\" (#10545)"},{"Id":"2058076787","IsPullRequest":true,"CreatedAt":"2023-12-28T07:08:37","Actor":"gpetrou","Number":"10543","RawContent":null,"Title":"Enable nullability in some DataGridView.Methods members","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in some DataGridView.Methods members.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10543)","Url":"https://github.com/dotnet/winforms/pull/10543","RelatedDescription":"Open PR \"Enable nullability in some DataGridView.Methods members\" (#10543)"},{"Id":"2056076041","IsPullRequest":true,"CreatedAt":"2023-12-28T04:57:36","Actor":"Epica3055","Number":"10532","RawContent":null,"Title":"fix bug [Accessibility]Inspect or AccessibilityInsights tool's rectangle can't focus on the entire Treeview with scrollBar","State":"closed","Body":"Fixes #10485\r\n\r\n\r\n## Proposed changes\r\n\r\nThere is something wrong with the base method `BoundingRectangle`.\r\nSo override this method in the same manner that `ListBox` did\r\nhttps://github.com/dotnet/winforms/blob/9e2fc95fca4e6d18444c819b35bb1338ac6ca63d/src/System.Windows.Forms/src/System/Windows/Forms/Controls/ListBoxes/ListBox.AccessibleObject.cs#L31-L32C10\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n<!-- \r\n## Customer Impact\r\n\r\n- \r\n- \r\n -->\r\n## Regression? \r\n\r\n- Yes.  It repro on .NET 8.0 & 7.0\r\n\r\n## Risk\r\n\r\n- minimal \r\n\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![image](https://github.com/dotnet/winforms/assets/130345015/659d0f27-1b6b-43cc-88dd-4976e63e9887)\r\n\r\n### After\r\n\r\n![image](https://github.com/dotnet/winforms/assets/135201996/b13347ee-1075-4a5d-91c2-508c135b3106)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- manual \r\n- \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- 9.0.0-alpha.1.23623.1\r\n\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10532)","Url":"https://github.com/dotnet/winforms/pull/10532","RelatedDescription":"Closed or merged PR \"fix bug [Accessibility]Inspect or AccessibilityInsights tool's rectangle can't focus on the entire Treeview with scrollBar\" (#10532)"},{"Id":"2057912181","IsPullRequest":false,"CreatedAt":"2023-12-28T02:16:16","Actor":"Zheng-Li01","Number":"10540","RawContent":null,"Title":"[Accessibility]Inspect or AccessibilityInsights tool's rectangle can't focus on the entire FlowLayoutPanel/Panel/SplitContainer/TableLayoutPanel/TabControl/TextBox with scrollBar","State":"open","Body":"### .NET version\n\n9.0.0-alpha.1.23621.3\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n1. Controls repro on .NET 9.0/8.0/7.0, not repro on 6.0 and previous version: FlowLayoutPanel, Panel, SplitContainer, TableLayoutPanel\r\n2. Controls repro on .NET 9.0/8.0/7.0/6.0, not repro on 5.0 and previous version: TabControl\r\n3. Controls repro on .NET 9.0/8.0, not repro on .NET 7.0 and previous version: TextBox\n\n### Issue description\n\n[Accessibility]Inspect or AccessibilityInsights tool's rectangle can't focus on the entire FlowLayoutPanel/Panel/SplitContainer/TableLayoutPanel/TabControl/TextBox with scrollBar\n\n### Steps to reproduce\n\n1. Open and run the attached reproduce application\r\n[ScrollBarTest.zip](https://github.com/dotnet/winforms/files/13782718/ScrollBarTest.zip)\r\n2. Launch Inspect or Accessibility Insight tool\r\n3. Focus on the entire cotnrol\r\n\r\n**Actual result:**\r\n1. Controls repro on .NET 9.0/8.0/7.0, not repro on 6.0 and previous version: FlowLayoutPanel, Panel, SplitContainer, TableLayoutPanel\r\n![image](https://github.com/dotnet/winforms/assets/38325459/5a6b8c79-ce62-418c-a953-718e156e5e4d)\r\n2. Controls repro on .NET 9.0/8.0/7.0/6.0, not repro on 5.0 and previous version: TabControl\r\n![image](https://github.com/dotnet/winforms/assets/38325459/80b9973c-21a2-4ab5-bdd4-aafe5adf448b)\r\n3. Controls repro on .NET 9.0/8.0, not repro on .NET 7.0 and previous version: TextBox\r\n![image](https://github.com/dotnet/winforms/assets/38325459/2f10ef12-224a-4613-bd46-3345bd379d95)\r\n\r\n**Expected result:**\r\n1. Controls repro on .NET 9.0/8.0/7.0, not repro on 6.0 and previous version: FlowLayoutPanel, Panel, SplitContainer, TableLayoutPanel\r\n![image](https://github.com/dotnet/winforms/assets/38325459/3db13ec7-ee3c-44bf-9f4d-0e71d896116b)\r\n2. Controls repro on .NET 9.0/8.0/7.0/6.0, not repro on 5.0 and previous version: TabControl\r\n![image](https://github.com/dotnet/winforms/assets/38325459/2d0c015a-60ec-4ae7-a0bc-86160f85f191)\r\n3. Controls repro on .NET 9.0/8.0, not repro on .NET 7.0 and previous version: TextBox\r\n![image](https://github.com/dotnet/winforms/assets/38325459/24c15fa2-d2f9-45d1-ac18-442b5380c3d4)","Url":"https://github.com/dotnet/winforms/issues/10540","RelatedDescription":"Open issue \"[Accessibility]Inspect or AccessibilityInsights tool's rectangle can't focus on the entire FlowLayoutPanel/Panel/SplitContainer/TableLayoutPanel/TabControl/TextBox with scrollBar\" (#10540)"},{"Id":"2057750425","IsPullRequest":false,"CreatedAt":"2023-12-27T20:27:32","Actor":"jgilbert2017","Number":"10539","RawContent":null,"Title":"Cursor class does unnecessary finalization in some cases","State":"open","Body":"### .NET version\n\n8\n\n### Did it work in .NET Framework?\n\nNot tested/verified\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nunknown\n\n### Issue description\n\nConstructors for `Cursor` for the common case of system cursors should call `GC.SuppressFinalize(this)` so that the objects don't get unnecessarily queued for finalization.  This is currently what happens when a call is made to `Cursor.Current`.\r\n\r\npull request at\r\nhttps://github.com/dotnet/winforms/pull/10538\n\n### Steps to reproduce\n\nn/a","Url":"https://github.com/dotnet/winforms/issues/10539","RelatedDescription":"Open issue \"Cursor class does unnecessary finalization in some cases\" (#10539)"},{"Id":"2057748352","IsPullRequest":true,"CreatedAt":"2023-12-27T20:24:12","Actor":"jgilbert2017","Number":"10538","RawContent":null,"Title":"Update Cursor.cs avoid finalization if we don't need to free the unma…","State":"open","Body":"call GC.SuppressFinalize(this) for constructors where we don't own the cursor handle so we can avoid being queued for finalization.\r\n\r\nFixes https://github.com/dotnet/winforms/issues/10539\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10538)","Url":"https://github.com/dotnet/winforms/pull/10538","RelatedDescription":"Open PR \"Update Cursor.cs avoid finalization if we don't need to free the unma…\" (#10538)"},{"Id":"2057350569","IsPullRequest":true,"CreatedAt":"2023-12-27T13:24:08","Actor":"dotnet-maestro[bot]","Number":"10537","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20231226.2\r\n- **Date Produced**: December 27, 2023 1:11:25 AM UTC\r\n- **Commit**: 94f411c6ce7354a49525d0cd2cadefffcbc66f37\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **System.CodeDom**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **System.IO.Ports**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **System.Management**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **System.Speech**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **System.Text.Json**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-alpha.1.23624.2 to 9.0.0-alpha.1.23626.2][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/9cc490e89f...94f411c6ce\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10537)","Url":"https://github.com/dotnet/winforms/pull/10537","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#10537)"},{"Id":"2057195967","IsPullRequest":true,"CreatedAt":"2023-12-27T10:27:01","Actor":"jgilbert2017","Number":"10536","RawContent":null,"Title":"dispose graphics in TabControl.WmReflectDrawItem()","State":"open","Body":"fixes #10534\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10536)","Url":"https://github.com/dotnet/winforms/pull/10536","RelatedDescription":"Open PR \"dispose graphics in TabControl.WmReflectDrawItem()\" (#10536)"},{"Id":"2056895393","IsPullRequest":false,"CreatedAt":"2023-12-27T04:42:35","Actor":"OwnageIsMagic","Number":"10535","RawContent":null,"Title":"Add Multiselect to FolderBrowserDialog","State":"closed","Body":"### Background and motivation\n\nAllow selection of multiple folders.\r\nIn NET 7 I used code like this https://stackoverflow.com/a/48824688/5647513 (adapted) running [`OpenFileDialog`](https://github.com/dotnet/winforms/blob/9e2fc95fca4e6d18444c819b35bb1338ac6ca63d/src/System.Windows.Forms/src/System/Windows/Forms/Dialogs/CommonDialogs/FileDialog.Vista.cs#L23) with `FOS_PICKFOLDERS`. Some NET 8 preview introduced reflection unfriendly unsafe, so now I need official workaround.\n\n### API Proposal\n\n```diff\r\n class FolderBrowserDialog : CommonDialog\r\n {\r\n+    public bool Multiselect { get; set; }\r\n+    public string[] SelectedPaths { get; set; }\r\n }\r\n```\r\n\n\n### API Usage\n\n<!---->\n\n### Alternative Designs\n\nWPF added `OpenFolderDialog` with [`Multiselect`](https://learn.microsoft.com/en-us/dotnet/api/microsoft.win32.openfolderdialog.multiselect?view=windowsdesktop-8.0) implemented in https://github.com/dotnet/wpf/issues/7689 via some nice hierarchy refactoring. I think WinForms may also benefit from `CommonItemDialog` base class. Introducing new base is not an issue, since they are sealed.\n\n### Risks\n\n_No response_\n\n### Will this feature affect UI controls?\n\nYes.","Url":"https://github.com/dotnet/winforms/issues/10535","RelatedDescription":"Closed issue \"Add Multiselect to FolderBrowserDialog\" (#10535)"},{"Id":"2056604386","IsPullRequest":false,"CreatedAt":"2023-12-26T18:04:16","Actor":"jgilbert2017","Number":"10534","RawContent":null,"Title":"Resource leak in TabControlWmReflectDrawItem(), dispose not called on graphics","State":"open","Body":"### .NET version\n\n8.0\n\n### Did it work in .NET Framework?\n\nNot tested/verified\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nunknown\n\n### Issue description\n\nSee code below.  The `Graphics` object created by `dis->hDC.CreateGraphics()` is not disposed (neither via `DrawItemEventArgs.Dispose()` nor `WmReflectDrawItem()`).  This results in the object having its finalizer run.\r\n\r\nhttps://github.com/dotnet/winforms/blob/9e2fc95fca4e6d18444c819b35bb1338ac6ca63d/src/System.Windows.Forms/src/System/Windows/Forms/Controls/TabControl/TabControl.cs#L1935\r\n\r\n```\r\n    private unsafe void WmReflectDrawItem(ref Message m)\r\n    {\r\n        DRAWITEMSTRUCT* dis = (DRAWITEMSTRUCT*)(nint)m.LParamInternal;\r\n\r\n        using DrawItemEventArgs e = new(\r\n            dis->hDC.CreateGraphics(),\r\n            Font,\r\n            dis->rcItem,\r\n            (int)dis->itemID,\r\n            (DrawItemState)(int)dis->itemState);\r\n\r\n        OnDrawItem(e);\r\n\r\n        m.ResultInternal = (LRESULT)1;\r\n    }\r\n```\n\n### Steps to reproduce\n\nn/a","Url":"https://github.com/dotnet/winforms/issues/10534","RelatedDescription":"Open issue \"Resource leak in TabControlWmReflectDrawItem(), dispose not called on graphics\" (#10534)"},{"Id":"2056269442","IsPullRequest":true,"CreatedAt":"2023-12-26T10:20:53","Actor":"Epica3055","Number":"10533","RawContent":null,"Title":"fix isssue 10516 [Accessibility] CheckBox control should support ValuePattern property","State":"open","Body":"\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #10516 \r\n\r\n\r\n## Proposed changes\r\n\r\n- \r\n- add ValuePattern to CheckBox\r\n- \r\n\r\n<!-- We are in TELL-MODE the following section must be completed\r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n -->\r\n## Regression? \r\n\r\n-  No\r\n\r\n## Risk\r\n\r\n- minimal \r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![image](https://github.com/dotnet/winforms/assets/26474449/764fc5d4-7ce3-4048-b670-951dd565651b)\r\n\r\n### After\r\n\r\n![image](https://github.com/dotnet/winforms/assets/135201996/2b328e85-174d-42a3-9ac4-198af0d48863)\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- manual \r\n- \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- 9.0.0-alpha.1.23623.1","Url":"https://github.com/dotnet/winforms/pull/10533","RelatedDescription":"Open PR \"fix isssue 10516 [Accessibility] CheckBox control should support ValuePattern property\" (#10533)"},{"Id":"2055734905","IsPullRequest":false,"CreatedAt":"2023-12-25T15:02:52","Actor":"PredatH0r","Number":"10531","RawContent":null,"Title":"Controls anchored Left+Right and/or Top+Bottom scale incorrectly when window is moved from high to low DPI screen in .NET 8","State":"open","Body":"### .NET version\r\n\r\n.NET 8.0.0\r\n\r\n### Did it work in .NET Framework?\r\n\r\nYes\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nyes, works fine with 7.0.0\r\n\r\n### Issue description\r\n\r\nSee attached sample application. \r\nIn the .csproj file you can select the desired runtime. \"net48\" and \"net7.0-windows\" work fine, \"net8.0-windows\" doesn't.\r\n\r\nInitial layout:\r\n![grafik](https://github.com/dotnet/winforms/assets/6238104/fdc35664-1edd-4e9a-874a-aeb7a325a2aa)\r\n\r\nLayout after moving from low to high and then high to low DPI screen:\r\n![grafik](https://github.com/dotnet/winforms/assets/6238104/f946afaa-37d3-4241-92d0-8a0f7cec50b5)\r\n\r\n\r\nNote: Setting \"System.Windows.Forms.AnchorLayoutV2\" in runtimeconfig.json to false or true doesn't make any difference.\r\n(see https://github.com/dotnet/winforms/blob/main/docs/design/anchor-layout-changes-in-net80.md)\r\n\r\n### Steps to reproduce\r\n\r\nStart the application built for target framework \"net8.0-windows\" on a screen with 96dpi.\r\nMove the window to the screen with higher DPI. So far so good.\r\nMove the window back to the screen with 96 DPI and the Label control with yellow background has the wrong size.\r\n\r\n[WinFormsScalingWithAnchor.zip](https://github.com/dotnet/winforms/files/13766551/WinFormsScalingWithAnchor.zip)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/10531","RelatedDescription":"Open issue \"Controls anchored Left+Right and/or Top+Bottom scale incorrectly when window is moved from high to low DPI screen in .NET 8\" (#10531)"},{"Id":"2055675989","IsPullRequest":true,"CreatedAt":"2023-12-25T13:24:11","Actor":"dotnet-maestro[bot]","Number":"10530","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20231224.2\r\n- **Date Produced**: December 25, 2023 5:26:42 AM UTC\r\n- **Commit**: 9cc490e89f635db3712d8e955e85b232a4c3f560\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **System.CodeDom**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **System.IO.Ports**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **System.Management**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **System.Speech**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **System.Text.Json**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-alpha.1.23623.1 to 9.0.0-alpha.1.23624.2][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/955604c662...9cc490e89f\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10530)","Url":"https://github.com/dotnet/winforms/pull/10530","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#10530)"},{"Id":"2055451533","IsPullRequest":true,"CreatedAt":"2023-12-25T07:05:02","Actor":"LeafShi1","Number":"10529","RawContent":null,"Title":"Scale icon to Dpi when initializing icon in ThreadExceptionDialog","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #10512 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Scale IconSize to System Dpi when initializing icon in ThreadExceptionDialog and InheritanceUI\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- The down arrow icon align with Details in Thread exception dialog can be show normally\r\n\r\n## Regression? \r\n\r\n- Yes \r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nIn 200% screen:\r\n![image](https://github.com/dotnet/winforms/assets/132890443/a754fa12-264a-405f-ae71-d6abb4dca9c9)\r\n\r\n\r\n### After\r\n![image](https://github.com/dotnet/winforms/assets/132890443/fcce8b3e-0285-443a-87e5-8129c1deb71a)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manually\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .net 9.0.0-alpha.1.23623.1\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10529)","Url":"https://github.com/dotnet/winforms/pull/10529","RelatedDescription":"Open PR \"Scale icon to Dpi when initializing icon in ThreadExceptionDialog\" (#10529)"},{"Id":"2055431647","IsPullRequest":false,"CreatedAt":"2023-12-25T06:35:20","Actor":"Zheng-Li01","Number":"10528","RawContent":null,"Title":"Cannot get the expected result when set \"\\r\\r\\n\" to RichTextBox.Text property","State":"open","Body":"### .NET version\r\n\r\n9.0.0-alpha.1.23621.3\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNo\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nThis issue can reproduce from .NET Core 3.1 ~ .NET 9.0\r\n\r\n### Issue description\r\n\r\nCannot get the expected result when set \"\\r\\r\\n\" to RichTextBox.Text property, **but set \"\\r\\n\" to RichTextBox.Text property which can get expected results,**\r\n\r\n### Steps to reproduce\r\n\r\n1. Launch the attached project in VS.\r\n2. Run it and observe the value for richTextBox1.Text in debugging.\r\n[Repo_Application.zip](https://github.com/dotnet/winforms/files/13764392/Repo_Application.zip)\r\n\r\n**Actual Results:**\r\nThere is “\\ r \\ n” in the string that the RichTextBox control can display line breaks normally.\r\nThere is “\\ r\\r \\ n” in the string that the RichTextBox control cannot display line breaks.\r\n![image](https://github.com/dotnet/winforms/assets/38325459/626f7eca-1520-4ee3-85ea-bd32b679340a)\r\n\r\n**Expected Results:**\r\nThere is “\\ r\\r \\ n” in the string that the RichTextBox control can display line breaks normally.\r\n\r\n**More info:**\r\n1. There is “\\ r\\r \\ n” in the string that the TextBox control cannot display line breaks.\r\n2.  This issue can reproduce from  .NET Framework 4.5 to 4.8.1.","Url":"https://github.com/dotnet/winforms/issues/10528","RelatedDescription":"Open issue \"Cannot get the expected result when set \"\\r\\r\\n\" to RichTextBox.Text property\" (#10528)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-12-31T03:30:26.4079053Z","RunDurationInMilliseconds":433}