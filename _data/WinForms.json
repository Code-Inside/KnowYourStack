{"Data":{"GitHub":{"Issues":[{"Id":"754004352","IsPullRequest":false,"CreatedAt":"2020-12-01T02:51:35","Actor":"xiaoyuvax","Number":"4302","RawContent":null,"Title":"[NET5] Winform application cannot be published to single file!","State":"open","Body":"#NET5 Winform application cannot be published to single file! \r\n\r\nSimply can't publish to single file, while removing the Single File option is OK.\r\n\r\n# General\r\n\r\nError message:\r\n\r\n13>“GenerateBundle”任务意外失败。\r\n13>System.ArgumentException: Invalid input specification: Found multiple entries with the same BundleRelativePath\r\n13>   在 Microsoft.NET.HostModel.Bundle.Bundler.GenerateBundle(IReadOnlyList`1 fileSpecs)\r\n13>   在 Microsoft.NET.Build.Tasks.GenerateBundle.ExecuteCore()\r\n13>   在 Microsoft.NET.Build.Tasks.TaskBase.Execute()\r\n13>   在 Microsoft.Build.BackEnd.TaskExecutionHost.Microsoft.Build.BackEnd.ITaskExecutionHost.Execute()\r\n13>   在 Microsoft.Build.BackEnd.TaskBuilder.<ExecuteInstantiatedTask>d__26.MoveNext()\r\n","Url":"https://github.com/dotnet/winforms/issues/4302","RelatedDescription":"Open issue \"[NET5] Winform application cannot be published to single file!\" (#4302)"},{"Id":"752011154","IsPullRequest":true,"CreatedAt":"2020-11-30T23:04:10","Actor":"gpetrou","Number":"4287","RawContent":null,"Title":"Enable nullability in LayoutUtils","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in LayoutUtils.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4287)","Url":"https://github.com/dotnet/winforms/pull/4287","RelatedDescription":"Closed or merged PR \"Enable nullability in LayoutUtils\" (#4287)"},{"Id":"751855844","IsPullRequest":true,"CreatedAt":"2020-11-30T22:59:53","Actor":"gpetrou","Number":"4285","RawContent":null,"Title":"Enable nullability in WinFormsUtils","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in WinFormsUtils.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4285)","Url":"https://github.com/dotnet/winforms/pull/4285","RelatedDescription":"Closed or merged PR \"Enable nullability in WinFormsUtils\" (#4285)"},{"Id":"752014364","IsPullRequest":true,"CreatedAt":"2020-11-30T22:55:35","Actor":"gpetrou","Number":"4288","RawContent":null,"Title":"Use 'is not null' in System.Windows.Forms Resources, ButtonInternal a…","State":"closed","Body":"…nd ComponentModel\r\n\r\nContributes to https://github.com/dotnet/winforms/issues/3459\r\n\r\n## Proposed changes\r\n\r\n- Use 'is not null' in System.Windows.Forms Resources, ButtonInternal and ComponentModel.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4288)","Url":"https://github.com/dotnet/winforms/pull/4288","RelatedDescription":"Closed or merged PR \"Use 'is not null' in System.Windows.Forms Resources, ButtonInternal a…\" (#4288)"},{"Id":"753287344","IsPullRequest":true,"CreatedAt":"2020-11-30T22:00:43","Actor":"SergeySmirnov-Akvelon","Number":"4300","RawContent":null,"Title":"Removing ignore for the \"VScrollBarAccessibleObject_Ctor_Default\" test","State":"closed","Body":"Closes #3856 \r\n\r\n## Proposed changes\r\n- Removed ignore for the \"VScrollBarAccessibleObject_Ctor_Default\" test\r\n\r\n## Customer Impact\r\n- No \r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- Unit tests \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .Net SDK 5.0.100-rc.2.20479.15\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4300)","Url":"https://github.com/dotnet/winforms/pull/4300","RelatedDescription":"Closed or merged PR \"Removing ignore for the \"VScrollBarAccessibleObject_Ctor_Default\" test\" (#4300)"},{"Id":"752680533","IsPullRequest":false,"CreatedAt":"2020-11-30T21:53:45","Actor":"ghost","Number":"4292","RawContent":null,"Title":"bug: exception when using ListViewItemSorter","State":"closed","Body":"Hi\r\n\r\nFollowing code throws an exception, while it works fine in .NET 4.8\r\nI use .NET 5.0 latest SDK and latest VS 2019 community. I'm using a WinForms application .NET 5.0\r\n\r\nWHEN: \r\nThe exception is thrown when you click the same column header the THIRD time (first and second time it works and no exception thrown).\r\n\r\nWHAT:\r\nException thrown: 'System.NullReferenceException' in System.Windows.Forms.dll\r\nObject reference not set to an instance of an object.\r\n\r\nWHERE:\r\nException thrown on code line:\r\nlistViewCardSets.ListViewItemSorter = new ListViewItemStringComparer(e.Column, listViewCardSets.Sorting);\r\n\r\n```cs\r\nclass ListViewItemStringComparer : IComparer\r\n    {\r\n        private int col;\r\n        private SortOrder order;\r\n        public ListViewItemStringComparer()\r\n        {\r\n            col = 0;\r\n            order = SortOrder.Ascending;\r\n        }\r\n\r\n        public ListViewItemStringComparer(int column, SortOrder order)\r\n        {\r\n            col = column;\r\n            this.order = order;\r\n        }\r\n\r\n        public int Compare(object x, object y)\r\n        {\r\n            int returnVal = -1;\r\n            returnVal = String.Compare(((ListViewItem)x).SubItems[col].Text,\r\n                                       ((ListViewItem)y).SubItems[col].Text);\r\n\r\n            // Determine whether the sort order is descending.\r\n            if (order == SortOrder.Descending)\r\n                // Invert the value returned by String.Compare.\r\n                returnVal *= -1;\r\n\r\n            return returnVal;\r\n        }\r\n    }\r\n```\r\n\r\n```cs\r\n        private int _sortColumnIndex = -1;\r\n        private void listViewCardSets_ColumnClick(object sender, ColumnClickEventArgs e)\r\n        {\r\n            // Determine whether the column is the same as the last column clicked.\r\n            if (e.Column != _sortColumnIndex)\r\n            {\r\n                // Set the sort column to the new column.\r\n                _sortColumnIndex = e.Column;\r\n                // Set the sort order to ascending by default.\r\n                listViewCardSets.Sorting = SortOrder.Ascending;\r\n            }\r\n            else\r\n            {\r\n                // Determine what the last sort order was and change it.\r\n                if (listViewCardSets.Sorting == SortOrder.Ascending)\r\n                    listViewCardSets.Sorting = SortOrder.Descending;\r\n                else\r\n                    listViewCardSets.Sorting = SortOrder.Ascending;\r\n            }\r\n\r\n            // Call the sort method to manually sort.\r\n            listViewCardSets.Sort();\r\n\r\n            // Set the ListViewItemSorter property to a new ListViewItemComparer object.\r\n            listViewCardSets.ListViewItemSorter = new ListViewItemStringComparer(e.Column, listViewCardSets.Sorting);\r\n        }\r\n```","Url":"https://github.com/dotnet/winforms/issues/4292","RelatedDescription":"Closed issue \"bug: exception when using ListViewItemSorter\" (#4292)"},{"Id":"753658458","IsPullRequest":false,"CreatedAt":"2020-11-30T17:19:18","Actor":"athieman","Number":"4301","RawContent":null,"Title":"ListView Sort Throws NullReferenceException or EngineExecutionException Intermittently","State":"open","Body":"* .NET Core Version:\r\n    <details>\r\n        <summary>5.0.100</summary>\r\n\r\n         OS Name:     Windows\r\n         OS Version:  10.0.17763\r\n         OS Platform: Windows\r\n         RID:         win10-x64\r\n         Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100\\\r\n\r\n         Host (useful for support):\r\n         Version: 5.0.0\r\n         Commit:  cf258a14b7\r\n\r\n         .NET SDKs installed:\r\n         5.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n         .NET runtimes installed:\r\n         Microsoft.AspNetCore.All 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n         Microsoft.AspNetCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n         Microsoft.AspNetCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n         Microsoft.AspNetCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n         Microsoft.NETCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n         Microsoft.NETCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n         Microsoft.NETCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n         Microsoft.WindowsDesktop.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n         Microsoft.WindowsDesktop.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n   </details>\r\n\r\n* Have you experienced this same bug with .NET Framework?: No\r\n \r\n* Problem Description:\r\n\r\n    When sorting a ListView by a column, a NullReferenceException or EngineExecutionException is sometimes thrown.  On my computer a ListView with 2 columns and 1,000 rows will throw an exception after being sorted about 12 times.  When the number of rows is increased to 10,000, it will throw an exception on either the first or second time the ListView is sorted.  The same problem does not occur in .NET Core 3.1.\r\n\r\n**Expected behavior:**\r\nNo exceptions should be thrown when sorting a ListView by a column when none of the subitems in the the ListView are null.\r\n\r\n**Minimal repro:**\r\nI have uploaded the small demo application to the following repository: [GitHub](https://github.com/athieman/ListView-Sorting-Bug/tree/main)\r\n\r\nIncreasing the size variable in the LoadData method makes it easier to reproduce, but with the default 1,000 items it usually throws either a NullReferenceException or EngineExecutionException after sorting one of the columns 12 times on my machine.\r\n\r\nThe issue does appear to be similar to #4264 ListView.Items.Add throws ExecutionEngineException with custom ListViewItemSorter, but because I am seeing a NullReferenceException much more often than the ExecutionEngineException so I made a new Issue.","Url":"https://github.com/dotnet/winforms/issues/4301","RelatedDescription":"Open issue \"ListView Sort Throws NullReferenceException or EngineExecutionException Intermittently\" (#4301)"},{"Id":"753232919","IsPullRequest":false,"CreatedAt":"2020-11-30T07:37:00","Actor":"Zheng-Li01","Number":"4299","RawContent":null,"Title":"An error pops up when the CheckedListBox control contains duplicate items in Accessibility Insights tool","State":"open","Body":"* More info:\r\n1. This is not a regression issue, which can reproduce on .NET 6.0, 5.0, 3.1 and Framework project.\r\n2. The issue can' t reproduce on ListBox control.\r\n\r\n* .NET Core Version: \r\n.NET SDK 6.0.100-alpha.1.20574.5\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n Yes \r\n\r\n**Minimal repro:**\r\n1. Opened the attached core project.[CoreProjectTesting1.zip](https://github.com/dotnet/winforms/files/5614381/CoreProjectTesting1.zip)\r\n2. Build and run it.\r\n3. Open the Accessibility Insights tool, then focus on the list of the checkedListBox control.\r\n\r\n**Expected behavior:**\r\nNo errors pops ip.\r\n\r\n**Actual behavior:**\r\nAn error pops up in the Accessibility Insights tool that \"Focusable sibling elements must not have the same Name and LocalizedControlType\".\r\n![CoreNewIssue](https://user-images.githubusercontent.com/38325459/100580934-c95a2e80-3321-11eb-86b6-b02d722ad909.gif)","Url":"https://github.com/dotnet/winforms/issues/4299","RelatedDescription":"Open issue \"An error pops up when the CheckedListBox control contains duplicate items in Accessibility Insights tool\" (#4299)"},{"Id":"751996375","IsPullRequest":true,"CreatedAt":"2020-11-30T05:34:00","Actor":"vladimir-krestov","Number":"4286","RawContent":null,"Title":"Fixing ErrorProvider error text announcing by a screen reader","State":"closed","Body":"Fixes #2390\r\nOriginal bug: [987891](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/987891)\r\nBased on PR #2391\r\n\r\n\r\n## Proposed changes\r\n\r\n- Raise an automation notification when setting an error for a control\r\n- Don't add a tooltip announcing as in PR #2391 because it leads to Issue #2538\r\n- Add a UI test app to check an `ErrorProvider`\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- A screen reader can announce an `ErrorProvider` error text\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n- Narrator doesn't announce an error text:\r\n![image](https://user-images.githubusercontent.com/49272759/100414854-ce9e4b80-308b-11eb-97ec-316e4b8aa91e.png)\r\n\r\n\r\n### After\r\n- Narrator announces an error text when a red icon of an `ErrorProvider` appears:\r\n![Expected](https://user-images.githubusercontent.com/49272759/100414911-f392be80-308b-11eb-9c4a-28b37e00c6dc.gif)\r\n\r\n### Test app\r\n- Added `ErrorProviderTest` app to `WinformsControlsTest` project\r\n![image](https://user-images.githubusercontent.com/49272759/100415640-b5969a00-308d-11eb-99c7-9cc8444b3c5d.png)\r\n\r\n\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- UI testing\r\n- CTI\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n- Using Narrator and NVDA\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- Microsoft Windows [Version 10.0.19042.630]\r\n- .NET Version:   6.0.100-alpha.1.20554.10\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4286)","Url":"https://github.com/dotnet/winforms/pull/4286","RelatedDescription":"Closed or merged PR \"Fixing ErrorProvider error text announcing by a screen reader\" (#4286)"},{"Id":"753070501","IsPullRequest":true,"CreatedAt":"2020-11-30T01:18:45","Actor":"manuelvalenzuela","Number":"4297","RawContent":null,"Title":"TreeNodeCollection does not allow adding a TreeNode that already exists in TreeView using this[int index] setter","State":"open","Body":"Fixes #4293\r\n\r\n## Proposed changes\r\n- Setter of method this[int index] of class TreeNodeCollection should not allow adding a TreeNode that already exists in the TreeView\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4297)","Url":"https://github.com/dotnet/winforms/pull/4297","RelatedDescription":"Open PR \"TreeNodeCollection does not allow adding a TreeNode that already exists in TreeView using this[int index] setter\" (#4297)"},{"Id":"752993531","IsPullRequest":false,"CreatedAt":"2020-11-29T19:55:55","Actor":"ghost","Number":"4296","RawContent":null,"Title":"bug: windows form designer ContextMenuStrip can't be edited","State":"open","Body":"* .NET Core Version: \r\n\r\n    .NET SDK (reflecting any global.json):\r\n    Version: 5.0.100\r\n    Commit: 5044b93829\r\n\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.19041\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\5.0.100\\\r\n\r\nHost (useful for support):\r\nVersion: 5.0.0\r\nCommit: cf258a14b7\r\n\r\n.NET SDKs installed:\r\n2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n5.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\nMicrosoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\nMicrosoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\nMicrosoft.AspNetCore.All 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\nMicrosoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.AspNetCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\nMicrosoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.NETCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\nMicrosoft.WindowsDesktop.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\nMicrosoft.WindowsDesktop.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n\r\nNo\r\n\r\n**Problem description:**\r\n\r\nIn windows form designer the ContextMenuStrip can't be edited.\r\n\r\n\r\n**Expected behavior:**\r\n\r\nAn editable ContextMenuStrip.\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/4296","RelatedDescription":"Open issue \"bug: windows form designer ContextMenuStrip can't be edited\" (#4296)"},{"Id":"752957841","IsPullRequest":false,"CreatedAt":"2020-11-29T16:50:56","Actor":"ghost","Number":"4295","RawContent":null,"Title":"SplitContainer bar can't be moved in win forms designer","State":"open","Body":"* .NET Core Version: \r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.100\r\n Commit:    5044b93829\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19041\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0\r\n  Commit:  cf258a14b7\r\n\r\n.NET SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\nA SplitContainer has a movable bar, but in win forms designer it can't be moved.\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.splitcontainer?view=net-5.0\r\n\r\n\r\n**Expected behavior:**\r\n\r\nA movable bar\r\n","Url":"https://github.com/dotnet/winforms/issues/4295","RelatedDescription":"Open issue \"SplitContainer bar can't be moved in win forms designer\" (#4295)"},{"Id":"752947386","IsPullRequest":false,"CreatedAt":"2020-11-29T16:01:02","Actor":"ghost","Number":"4294","RawContent":null,"Title":"ToolStripStatusLabel not displaying '&' chars","State":"open","Body":"* .NET Core Version: \r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.100\r\n Commit:    5044b93829\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19041\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0\r\n  Commit:  cf258a14b7\r\n\r\n.NET SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\nIf you assign a string that contains one or more '&' chars to a ToolStripStatusLabel, the string is displayed WITHOUT any '&' chars.\r\n\r\n\r\n**Expected behavior:**\r\n\r\nFor example: \r\n\r\ntoolStripStatusLabel.Text = \"test&\";\r\n\r\nIt should display \"test&\" but instead it's displaying \"test\"\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/4294","RelatedDescription":"Open issue \"ToolStripStatusLabel not displaying '&' chars\" (#4294)"},{"Id":"752800626","IsPullRequest":false,"CreatedAt":"2020-11-29T00:40:50","Actor":"manuelvalenzuela","Number":"4293","RawContent":null,"Title":"Setter of method this[int index] of class TreeNodeCollection should not allow adding a TreeNode that already exists in the TreeView","State":"open","Body":"* .NET Core Version: \r\n.Net 5 (net5.0-windows)\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**Problem description:**\r\nSetter of method `public virtual TreeNode this[int index]` of class `TreeNodeCollection` should not allow adding a `TreeNode` that already exists in the `TreeView`, in order to be consistent with the methods: `Insert(int index, TreeNode node)` and `Add(TreeNode node)`.\r\n\r\n**Expected behavior:**\r\nIt should throw a `System.ArgumentException` with message `Cannot add or insert the item '{0}' in more than one place. You must first remove it from its current location or clone it.`\r\n\r\n**Minimal repro:**\r\n- Create a new WinForms App\r\n- Insert a TreeView on the Form.\r\n- Insert the folloing code in the Form_Load event handler.\r\n\r\n``` C#\r\nprivate void Form1_Load(object sender, EventArgs e)\r\n{\r\n    TreeNode node = new TreeNode(\"Node 1\");\r\n    treeView1.Nodes.Add(node);\r\n    treeView1.Nodes[0] = node;\r\n}\r\n```\r\nYou can see the expected behavior changing the following:\r\n``` C#\r\n// treeView1.Nodes[0] = node;\r\ntreeView1.Nodes.Insert(0, node);\r\n```\r\nor\r\n``` C#\r\n// treeView1.Nodes[0] = node;\r\ntreeView1.Nodes.Add(node);\r\n```","Url":"https://github.com/dotnet/winforms/issues/4293","RelatedDescription":"Open issue \"Setter of method this[int index] of class TreeNodeCollection should not allow adding a TreeNode that already exists in the TreeView\" (#4293)"},{"Id":"752113513","IsPullRequest":true,"CreatedAt":"2020-11-27T09:35:35","Actor":"SergeySmirnov-Akvelon","Number":"4290","RawContent":null,"Title":"Adding virtual mode validation for a double click","State":"open","Body":"Fixes #4156\r\n\r\n\r\n## Proposed changes\r\n- Added virtual mode validation for a double click\r\n\r\n## Customer Impact\r\nThe checkbox will not change its value on a double click when ListView is in virtual mode.\r\nBefore fix:\r\n![Issue-4290-beforefix](https://user-images.githubusercontent.com/23376742/100435207-af64e580-30ae-11eb-8a9c-79e17759544f.gif)\r\n\r\nAfter fix:\r\n![Issue-4290-afterfix](https://user-images.githubusercontent.com/23376742/100435241-ba1f7a80-30ae-11eb-9c4f-f1c788f0a876.gif)\r\n\r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- Manually\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .Net SDK 5.0.100-rc.2.20479.15\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4290)","Url":"https://github.com/dotnet/winforms/pull/4290","RelatedDescription":"Open PR \"Adding virtual mode validation for a double click\" (#4290)"},{"Id":"752041696","IsPullRequest":true,"CreatedAt":"2020-11-27T07:26:01","Actor":"RussKie","Number":"4289","RawContent":null,"Title":"Allow loading custom comctl32.dll","State":"open","Body":"\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n\r\n\r\n## Proposed changes\r\n\r\nProvide functionality to load a custom comctl32.dll from the application startup folder, if comctl32.dll is present in that location.\r\n\r\nThis allows loading debug and custom builds of the library.\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n![image](https://user-images.githubusercontent.com/4403806/100421914-68daaf80-30dd-11eb-9dbd-1b16299f6aa2.png)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Adding a debug version comctl32.dll to /src/System.Windows.Forms/src\r\n- Build and run WinformsControlsTest project\r\n- Observe the comctl32.dll is copied to the output folder\r\n- Run \"ListView\" example and observe debug asserts being hit in the comctl32 source\r\n- Check loaded modules in \"Modules\" window\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4289)","Url":"https://github.com/dotnet/winforms/pull/4289","RelatedDescription":"Open PR \"Allow loading custom comctl32.dll\" (#4289)"},{"Id":"750763710","IsPullRequest":true,"CreatedAt":"2020-11-26T07:47:27","Actor":"SergeySmirnov-Akvelon","Number":"4282","RawContent":null,"Title":"Adding border for focused ToolStripButton in PropertyGrid","State":"closed","Body":"Fixes #4268\r\n\r\n## Proposed changes\r\n- Added a special method for high contrast mode that draws a black and white dashed border\r\n- Added a special method for normal mode that draws a dashed border\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n**Before fix:**\r\n![100072081-c5886100-2e76-11eb-92f5-390882b13f65](https://user-images.githubusercontent.com/23376742/100229792-d51aaf00-2f35-11eb-8625-d9fd9c79bbea.png)\r\n\r\n**After fix:**\r\nNormal mode:\r\n![Issue-4282-NormalMode](https://user-images.githubusercontent.com/23376742/100229857-ecf23300-2f35-11eb-8b77-93d02c3ac487.gif)\r\nHigh Contrast 1:\r\n![Issue-4282-HC1](https://user-images.githubusercontent.com/23376742/100229952-0dba8880-2f36-11eb-9a85-3eb83b8087c7.gif)\r\n\r\nHigh Contrast 2:\r\n![Issue-4282-HC2](https://user-images.githubusercontent.com/23376742/100230189-70ac1f80-2f36-11eb-9463-28dfe1a1a5dc.gif)\r\n\r\nHigh Contrast Black:\r\n![Issue-4282-HCB](https://user-images.githubusercontent.com/23376742/100230209-786bc400-2f36-11eb-9b24-2770ccd1abb1.gif)\r\n\r\nHigh Contrast White:\r\n![Issue-4282-HCW](https://user-images.githubusercontent.com/23376742/100230230-7e61a500-2f36-11eb-88b7-81bbd8788eba.gif)\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- Manually \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .NET Core 5.0.100-rc.1.20420.14\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4282)","Url":"https://github.com/dotnet/winforms/pull/4282","RelatedDescription":"Closed or merged PR \"Adding border for focused ToolStripButton in PropertyGrid\" (#4282)"},{"Id":"750252373","IsPullRequest":true,"CreatedAt":"2020-11-26T04:55:34","Actor":"dotnet-maestro[bot]","Number":"4276","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:6d389ecb-0616-453a-2112-08d85e71258f)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 6d389ecb-0616-453a-2112-08d85e71258f\r\n- **Build**: 20201125.16\r\n- **Date Produced**: 11/26/2020 3:40 AM\r\n- **Commit**: b02e13abab3d6f499751af2ad1ae6333fb4e633d\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 5.0.1-servicing.20574.5 to 5.0.1-servicing.20575.16][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 5.0.1-servicing.20574.5 to 5.0.1-servicing.20575.16][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.1-servicing.20574.5 to 5.0.1-servicing.20575.16][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 5.0.1-servicing.20574.5 to 5.0.1-servicing.20575.16][1]\r\n  - **Microsoft.NETCore.App**: [from 5.0.1-servicing.20574.5 to 5.0.1-servicing.20575.16][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 5.0.1-servicing.20574.5 to 5.0.1-servicing.20575.16][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 5.0.1-servicing.20574.5 to 5.0.1-servicing.20575.16][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.1 to 5.0.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 5.0.0 to 5.0.1][2]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/2767f44...b02e13a\r\n[2]: https://github.com/dotnet/runtime/compare/cf258a1...b02e13a\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:6d389ecb-0616-453a-2112-08d85e71258f)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4276)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/4276","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/runtime\" (#4276)"},{"Id":"751231475","IsPullRequest":false,"CreatedAt":"2020-11-26T02:25:56","Actor":"vsfeedback","Number":"4284","RawContent":null,"Title":"VS crashes by resizing DataGridview scrollbars in inheritance when making them permanently visible","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/VS-crashes-by-resizing-DataGridview-scro/1263854?preview=true)._\n\n---\n[severity:It's more difficult to complete my work]\nHello,\nas described and confirmed by an other community member (Timon Yang) VS 2019 crashes when you try to make the vertical and horizontal scrollbar permanently visible independant from the rows and column count. \n\n**Report by Timon Yang:**\nIf I make any changes to it and then run the project, Visual Studio will definitely crash, but after opening Visual Studio again, it won’t crash anymore.\n\nIt is always impossible to operate it in the designer, whether it is moving or deleting, but as long as the relevant code of the horizontal scroll bar is commented, it can be operated normally.\nThis is not a solution to this problem, but a solution for the current situation where this control cannot be operated in the designer.\n\n\n**Link and Code:**\n[https://social.msdn.microsoft.com/Forums/windows/en-US/f91fe749-72d6-4ccc-a41c-0208faddac61/show-always-horizontal-and-vertical-scrollbar-in-a-datagridview?forum=csharpgeneral&prof=required]()\n\n```\n class MyDatagridview : DataGridView\n    {\n        public MyDatagridview()\n        {\n            VerticalScrollBar.Visible = true;\n            HorizontalScrollBar.Visible = true;\n\n            HorizontalScrollBar.VisibleChanged += HorizontalScrollBar_VisibleChanged;\n            VerticalScrollBar.VisibleChanged += VerticalScrollBar_VisibleChanged;\n\n        }\n\n        private void VerticalScrollBar_VisibleChanged(object sender, EventArgs e)\n        {\n            if (!VerticalScrollBar.Visible)\n            {\n                int width = VerticalScrollBar.Width;\n                VerticalScrollBar.Location = new Point(ClientRectangle.Width - width - 1, 1);\n                VerticalScrollBar.Size = new Size(width, ClientRectangle.Height-2);\n                VerticalScrollBar.Show();\n            }\n        }\n\n        private void HorizontalScrollBar_VisibleChanged(object sender, EventArgs e)\n        {\n            if (!HorizontalScrollBar.Visible)\n            {\n                int height = HorizontalScrollBar.Height;\n                HorizontalScrollBar.Location = new Point(1, ClientRectangle.Height - height );\n                HorizontalScrollBar.Size = new Size(ClientRectangle.Width - 2-17,height);\n                HorizontalScrollBar.Show();\n            }\n        }\n    }\n```\n\n---\n### Original Comments\n\n#### Feedback Bot on 11/23/2020, 11:14 AM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Zheng Li [MSFT] on 11/24/2020, 05:20 PM: \n\n<p>Dear customer, thanks for your feedback.</p>\n<p>The issue can reproduce on side based on your description, want to confirm with you, did you have the same experience than before?</p>\n<p>In addition, the Visual Studio crashed when re-size the DGV or try to delete/Cut it, if these matched your points? and the  issue also can reproduce on .NET Core project.<br>\n<img src=\"https://aka.ms/dc/image?name=B870741ade6d24d0fa413786f5c2d7929637418077160801744_FeedBackRepro1.gif&amp;tid=870741ade6d24d0fa413786f5c2d7929637418077160801744\" alt=\"FeedBackRepro1.gif\"><br>\n<img src=\"https://aka.ms/dc/image?name=B78fffb2bdd59470b949951bb290d0fcd637418077340278881_FeedBackRepro2.gif&amp;tid=78fffb2bdd59470b949951bb290d0fcd637418077340278881\" alt=\"FeedBackRepro2.gif\"></p>\n<p><img src=\"https://aka.ms/dc/image?name=B283e85fb87eb48c7a9a0a3c09b23aacc637418077458786075_FeedBackRepro3.gif&amp;tid=283e85fb87eb48c7a9a0a3c09b23aacc637418077458786075\" alt=\"FeedBackRepro3.gif\"></p>\n<p><a target='_blank' href=\"https://aka.ms/dc/file?name=Ba3984f57450e4ccea36a7461685f99cb637418077646832590_FeedBack1.zip&amp;tid=a3984f57450e4ccea36a7461685f99cb637418077646832590\">FeedBack1.zip</a></p>\n<p>Thanks<br>\nZheng</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/winforms/issues/4284","RelatedDescription":"Open issue \"VS crashes by resizing DataGridview scrollbars in inheritance when making them permanently visible\" (#4284)"},{"Id":"750684367","IsPullRequest":true,"CreatedAt":"2020-11-25T23:17:52","Actor":"RussKie","Number":"4281","RawContent":null,"Title":"fix: Prevent GC'on of native callback","State":"closed","Body":"\r\nFixes #4264\r\n\r\n(cherry picked from commit 9b140c0952647840d8f1b6984a812c548b002738)\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n## Proposed changes\r\n\r\nThe native callback can be garbage collected even in a simple app, which leads to an app crash with ExecutionEngineException.\r\nThe issue can be observed even in an app as simple as:\r\n```cs\r\nnamespace repro_listview\r\n{\r\n    static class Program\r\n    {\r\n        [STAThread]\r\n        static void Main()\r\n        {\r\n            Application.SetHighDpiMode(HighDpiMode.SystemAware);\r\n            Application.EnableVisualStyles();\r\n            Application.SetCompatibleTextRenderingDefault(false);\r\n\r\n            var f = new Form();\r\n            var listView = new ListView();\r\n\r\n            f.Controls.Add(listView);\r\n\r\n            listView.Items.Add(\"A\");\r\n            listView.Items.Add(\"Z\");\r\n            listView.Items.Add(\"X\");\r\n            listView.ListViewItemSorter = new TestComparer();\r\n\r\n            Application.Run(f);\r\n        }\r\n\r\n        class TestComparer : Comparer<ListViewItem>\r\n        {\r\n            public override int Compare(ListViewItem x, ListViewItem y)\r\n            {\r\n                GC.Collect();\r\n                Thread.Sleep(10);\r\n                return 0;\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Interacting with a `ListView` with sort enabled won't be crashing an app due to a GC'ed native callback.\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- manual, by replacing binaries in C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\6.0.0-alpha.1.20570.2\r\n- no automation test could be devised as the problem couldn't be reproduced from the Windows Forms codebase, either 5.0 or 6.0 branches\r\n\r\n\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4280)\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4281)","Url":"https://github.com/dotnet/winforms/pull/4281","RelatedDescription":"Closed or merged PR \"fix: Prevent GC'on of native callback\" (#4281)"},{"Id":"750790908","IsPullRequest":false,"CreatedAt":"2020-11-25T12:50:59","Actor":"kirsan31","Number":"4283","RawContent":null,"Title":"MonthCalendar: UpdateBoldedDates flickers and resets DisplayRange","State":"open","Body":"* .NET Core Version: **all**\r\n\r\n* Have you experienced this same bug with .NET Framework?: **yes**\r\n\r\n**Problem description:**\r\nAfter you changed BoldedDates in MonthCalendar you need to call `UpdateBoldedDates` method to see visual changes. The problem is that [UpdateBoldedDates](https://github.com/dotnet/winforms/blob/6391b524dd64e7530eba986c6607bf129b3ec8ae/src/System.Windows.Forms/src/System/Windows/Forms/MonthCalendar.cs#L1967) simple calling `RecreateHandle`. That's leads to 2 problems:\r\n1. Control fully redrawing with heavy flickering.\r\n2. If `MonthCalendar` displaying more than one months, you are not on the first page and selected date not in the last month, than  control will scroll one page back - reset current DisplayRange.\r\n![MonthCalendar](https://user-images.githubusercontent.com/17767561/100223926-2f634200-2f2d-11eb-8d06-062265b5c5a7.gif)\r\n\r\nI think that the **1** problem appear due to not using `MCM_SETDAYSTATE`. Only `MCN_GETDAYSTATE` is using, so you need full redraw to process all dates. \r\n**2** problem appear due to that [OnHandleCreated](https://github.com/dotnet/winforms/blob/6391b524dd64e7530eba986c6607bf129b3ec8ae/src/System.Windows.Forms/src/System/Windows/Forms/MonthCalendar.cs#L1386)  not care at all of  DisplayRange (only `SelectionRange` is taken into account).\r\nIt can be workaround in user code with something like this:\r\n```cs\r\nmonthCalendar1.SuspendLayout();\r\nvar v = monthCalendar1.GetDisplayRange(true);\r\nvar MinDate = monthCalendar1.MinDate;\r\nvar MaxDate = monthCalendar1.MaxDate;\r\nmonthCalendar1.MinDate = v.Start;\r\nmonthCalendar1.MaxDate = v.End;\r\nmonthCalendar1.UpdateBoldedDates();\r\nmonthCalendar1.MinDate = MinDate;\r\nmonthCalendar1.MaxDate = MaxDate;\r\nmonthCalendar1.ResumeLayout();\r\n```\r\nSomething similar can be added to `OnHandleCreated`. But I think that most efficient way is to solve **1** issue  - use `MCM_SETDAYSTATE`  with all changes to `BoldedDates` (`AnnuallyBoldedDates`, `BoldedDates`, `MonthlyBoldedDates`, `UpdateBoldedDates`). Then **2** will be solve _automatically_.\r\n\r\n**Expected behavior:**\r\nNo flickering and no DisplayRange reset.\r\n\r\n\r\n**Minimal repro:**\r\n[MonthCalendar.zip](https://github.com/dotnet/winforms/files/5596679/MonthCalendar.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/4283","RelatedDescription":"Open issue \"MonthCalendar: UpdateBoldedDates flickers and resets DisplayRange\" (#4283)"},{"Id":"750551986","IsPullRequest":true,"CreatedAt":"2020-11-25T09:52:03","Actor":"RussKie","Number":"4280","RawContent":null,"Title":"fix: Prevent GC'on of native callback","State":"closed","Body":"\r\n\r\nFixes #4264\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n## Proposed changes\r\n\r\nThe native callback can be garbage collected even in a simple app, which leads to an app crash with ExecutionEngineException.\r\nThe issue can be observed even in an app as simple as:\r\n```cs\r\nnamespace repro_listview\r\n{\r\n    static class Program\r\n    {\r\n        [STAThread]\r\n        static void Main()\r\n        {\r\n            Application.SetHighDpiMode(HighDpiMode.SystemAware);\r\n            Application.EnableVisualStyles();\r\n            Application.SetCompatibleTextRenderingDefault(false);\r\n\r\n            var f = new Form();\r\n            var listView = new ListView();\r\n\r\n            f.Controls.Add(listView);\r\n\r\n            listView.Items.Add(\"A\");\r\n            listView.Items.Add(\"Z\");\r\n            listView.Items.Add(\"X\");\r\n            listView.ListViewItemSorter = new TestComparer();\r\n\r\n            Application.Run(f);\r\n        }\r\n\r\n        class TestComparer : Comparer<ListViewItem>\r\n        {\r\n            public override int Compare(ListViewItem x, ListViewItem y)\r\n            {\r\n                GC.Collect();\r\n                Thread.Sleep(10);\r\n                return 0;\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Interacting with a `ListView` with sort enabled won't be crashing an app due to a GC'ed native callback.\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- manual, by replacing binaries in C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\6.0.0-alpha.1.20570.2\r\n- no automation test could be devised as the problem couldn't be reproduced from the Windows Forms codebase, either 5.0 or 6.0 branches\r\n\r\n\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4280)","Url":"https://github.com/dotnet/winforms/pull/4280","RelatedDescription":"Closed or merged PR \"fix: Prevent GC'on of native callback\" (#4280)"},{"Id":"750460362","IsPullRequest":false,"CreatedAt":"2020-11-25T05:24:40","Actor":"paul1956","Number":"4279","RawContent":null,"Title":"SplashScreen form not shown unless Startup Form set to Sub Main","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\nMicrosoft.WindowsDesktop.App 5.0.0\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\nIn Framework SplashScreen is shown if one is defined in project file and Project Startup object is set to Form1. In Core the splash screen is only shown if Startup object is set to Sub Main\r\n\r\n**Expected behavior:**\r\nSplashScreen is shown if Startup object is set to Form1\r\n\r\n**Minimal repro:**\r\nhttps://github.com/paul1956/WinForms5VBSample\r\n","Url":"https://github.com/dotnet/winforms/issues/4279","RelatedDescription":"Open issue \"SplashScreen form not shown unless Startup Form set to Sub Main\" (#4279)"},{"Id":"750312189","IsPullRequest":true,"CreatedAt":"2020-11-25T02:44:17","Actor":"RussKie","Number":"4277","RawContent":null,"Title":"Revert \"Explicit ImageList ownership management\"","State":"open","Body":"This reverts commit 03db3fbfcc6884356f70141f882433638b23bb49.\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nResolves #4169\r\nResolves #4275\r\n\r\n\r\n## Proposed changes\r\n\r\n\r\nRevert \"Explicit ImageList ownership management. (#3601)\"\r\nThis reverts commit 03db3fbfcc6884356f70141f882433638b23bb49.\r\n\r\nRevert \"Fix `ListView` no longer displays images (#4184)\"\r\nThis reverts commit d0608e72a356ad991f9c9d12518e29b43a1fb4f0.\r\n\r\nWe have observed an instability of tests under stress (and reasonably high degree of concurrency) presumably caused by ImageList lifetime handling (notably #3358).\r\nThe changes introduced in #3601 have helped with tests stability, however resulted in a number of regressions, such as #4169 and #4275.\r\n\r\nRestore the original implementation given it worked reasonably well for the past so many years.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- The `ImageList` behaviours should be the same as in .NET Framework and .NET Core.\r\n\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4277)","Url":"https://github.com/dotnet/winforms/pull/4277","RelatedDescription":"Open PR \"Revert \"Explicit ImageList ownership management\"\" (#4277)"},{"Id":"750138823","IsPullRequest":false,"CreatedAt":"2020-11-24T23:20:15","Actor":"AustinWise","Number":"4275","RawContent":null,"Title":"ListView redraws when images are added to its ImageList","State":"open","Body":"* .NET Core Version: release/5.0 branch (af41134ff98cf2793a2fcf40f21f95dc94f3ee79), includes #4222\r\n\r\n* Have you experienced this same bug with .NET Framework?: No. The problem is also not in .NET Core 3.1.\r\n\r\n**Problem description:**\r\n\r\nWhen adding a image to the ImageList, the entire contents of a ListView that is using that ImageList is redrawn. This causes it flicker and if there are enough item, it slows down the app. This seems to be causes by the fix in #4222. Every time an image is added to an image list, the `ImageList.RecreateHandle` event is raised. This causes the ListView to call `ImageList.CreateUniqueHandle`, which always creates a copy of the native image list.\r\n\r\n**Expected behavior:**\r\n\r\nI think to prevent the redrawing the `ImageList` needs to share the underlying native image list with the `ListView`, instead of giving it a new copy every time an image is added. This would prevent the `ListView` from redrawing unnecessarily.\r\n\r\nI know y'all recently change the lifetime management in #3601 to fix some crashes, so I understand this might not be an easy fix.\r\n\r\n**Minimal repro:**\r\n\r\n```c#\r\nusing System;\r\nusing System.Drawing;\r\nusing System.Windows.Forms;\r\n\r\nclass MyForm : Form\r\n{\r\n    [STAThread]\r\n    static void Main()\r\n    {\r\n        Application.SetHighDpiMode(HighDpiMode.SystemAware);\r\n        Application.EnableVisualStyles();\r\n        Application.SetCompatibleTextRenderingDefault(false);\r\n        Application.Run(new MyForm());\r\n    }\r\n\r\n    ListView lv;\r\n    ImageList il;\r\n    Timer tmr;\r\n\r\n    MyForm()\r\n    {\r\n        tmr = new Timer\r\n        {\r\n            Interval = 100,\r\n        };\r\n        il = new ImageList()\r\n        {\r\n        };\r\n        lv = new ListView()\r\n        {\r\n            LargeImageList = il,\r\n            View = View.LargeIcon,\r\n            Dock = DockStyle.Fill,\r\n        };\r\n        this.Controls.Add(lv);\r\n\r\n        var red = new Bitmap(il.ImageSize.Width, il.ImageSize.Height);\r\n        using (var g = Graphics.FromImage(red))\r\n            g.Clear(Color.Red);\r\n        int redIndex = il.Images.Add(red, Color.Transparent);\r\n\r\n        for (int i = 0; i < 1000; i++)\r\n        {\r\n            var lvi = new ListViewItem(i.ToString(), redIndex);\r\n            lv.Items.Add(lvi);\r\n        }\r\n\r\n        this.WindowState = FormWindowState.Maximized;\r\n        this.Load += MyForm_Load;\r\n        tmr.Tick += Tmr_Tick;\r\n    }\r\n\r\n    private void MyForm_Load(object sender, EventArgs e)\r\n    {\r\n        tmr.Enabled = true;\r\n    }\r\n\r\n    private void Tmr_Tick(object sender, EventArgs e)\r\n    {\r\n        il.Images.Add(new Bitmap(il.ImageSize.Width, il.ImageSize.Height), Color.Transparent);\r\n    }\r\n}\r\n\r\n```","Url":"https://github.com/dotnet/winforms/issues/4275","RelatedDescription":"Open issue \"ListView redraws when images are added to its ImageList\" (#4275)"},{"Id":"750104257","IsPullRequest":true,"CreatedAt":"2020-11-24T22:40:54","Actor":"dotnet-maestro[bot]","Number":"4273","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:6d389ecb-0616-453a-2112-08d85e71258f)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 6d389ecb-0616-453a-2112-08d85e71258f\r\n- **Build**: 20201124.5\r\n- **Date Produced**: 11/24/2020 9:20 PM\r\n- **Commit**: 2767f4466bd3fe4e3678510aba636b66f02b11b4\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 5.0.1-servicing.20572.4 to 5.0.1-servicing.20574.5][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 5.0.1-servicing.20572.4 to 5.0.1-servicing.20574.5][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.1-servicing.20572.4 to 5.0.1-servicing.20574.5][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 5.0.1-servicing.20572.4 to 5.0.1-servicing.20574.5][1]\r\n  - **Microsoft.NETCore.App**: [from 5.0.1-servicing.20572.4 to 5.0.1-servicing.20574.5][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 5.0.1-servicing.20572.4 to 5.0.1-servicing.20574.5][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 5.0.1-servicing.20572.4 to 5.0.1-servicing.20574.5][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.1 to 5.0.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/e564220...2767f44\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:6d389ecb-0616-453a-2112-08d85e71258f)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4273)","Url":"https://github.com/dotnet/winforms/pull/4273","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/runtime\" (#4273)"},{"Id":"749916717","IsPullRequest":false,"CreatedAt":"2020-11-24T17:47:54","Actor":"rlktradewright","Number":"4272","RawContent":null,"Title":"ActiveX support in .Net 5 Windows Forms designer?","State":"open","Body":"* .NET Core Version: \r\n.Net 5\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\nThe Windows Forms designer for .Net 5 appears to be brain-dead with regard to ActiveX controls.\r\n\r\nI have not succeeded in getting any ActiveX controls working in the Toolbox. The 'Choose items' dialog says:\r\n\r\n_'The following controls were successfully added to the toolbox but are not enabled in the active designer. .... Make sure the controls to add are compatible with the current designer and .Net Framework version.'_\r\n\r\nWell, the controls are all perfectly compatible with .Net 5 and work fine if they are manually included in the form design, so I have to conclude that the current version of the designer simply doesn't do ActiveX.\r\n\r\nPlease confirm this, and indicate whether there is likely to be full support for ActiveX controls any time soon.\r\n\r\nOr tell me what I'm doing wrong!...\r\n\r\n**Expected behavior:**\r\n\r\nThe chosen ActiveX control should appear in the Toolbox and create the control properly when applied to the form.\r\n\r\n**Minimal repro:**\r\n\r\nFor example:\r\n\r\n1. Create new .Net 5 C# Windows Forms app in Visual Studio 2019 v16.8 or later\r\n2. Right-click on a category header in the Toolbox and Select 'Choose Items...' .\r\n3. On the 'COM Components' tab of the 'Choose Toolbox Items 'dialog, set the checkbox for a control (for example the Calendar Control 8.0 is conveniently near the top of the list).\r\n4. A new window appears with the error message shown in the description above. The control is not visible in the Toolbox.\r\n","Url":"https://github.com/dotnet/winforms/issues/4272","RelatedDescription":"Open issue \"ActiveX support in .Net 5 Windows Forms designer?\" (#4272)"},{"Id":"749687508","IsPullRequest":true,"CreatedAt":"2020-11-24T13:01:29","Actor":"dotnet-maestro[bot]","Number":"4271","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20201123.2\r\n- **Date Produced**: 11/23/2020 7:34 PM\r\n- **Commit**: 35bddd4fbfab8da3518fb920250d7c9e0c3138ff\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.20567.7 to 6.0.0-beta.20573.2][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.20567.7 to 6.0.0-beta.20573.2][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.20567.7 to 6.0.0-beta.20573.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.20567.7 to 6.0.0-beta.20573.2][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.20567.7 to 6.0.0-beta.20573.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/a9a80fb...35bddd4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4271)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/4271","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#4271)"},{"Id":"753178147","IsPullRequest":false,"CreatedAt":"2020-11-23T20:11:53","Actor":"Possibility454","Number":"4298","RawContent":null,"Title":"error BC30456: 'Form1' is not a member of 'WinFormsApp'","State":"open","Body":"# Issue Title\r\n\r\nWhen changing the projects startup object to a form that isnt Form1, you get this error:\r\nerror BC30456: 'Form1' is not a member of 'WinFormsApp'\r\n\r\n# General\r\n\r\nCreate a project, such as VB WinForms Application with .Net 5. Rename the default Form1 to something else such as FormMain. Change the startup object to FormMain. Try running the application, you get the error. The auto-generated code keeps trying to use Form1 even though it no longer exists in the application.\r\n![Net 5 0 error](https://user-images.githubusercontent.com/16438153/100010362-c5fcfb00-2d95-11eb-8d6a-90ade9deec2a.png)\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/4298","RelatedDescription":"Open issue \"error BC30456: 'Form1' is not a member of 'WinFormsApp'\" (#4298)"},{"Id":"750117048","IsPullRequest":false,"CreatedAt":"2020-11-14T22:16:21","Actor":"augustoproiete","Number":"4274","RawContent":null,"Title":"Calls to comctl32.dll succeed in .NET 4.8, but fail in .NET 5 with System.EntryPointNotFoundException","State":"open","Body":"* .NET Core Version: **5.0.100** and **3.1.404**\r\n* Windows version: **Windows 10** (18363.1139)\r\n* Does the bug reproduce also in WPF for .NET Framework 4.8?: **No**\r\n* Is this bug related specifically to tooling in Visual Studio (e.g. XAML Designer, Code editing, etc...)? **No**\r\n\r\n **Problem description:**\r\n \r\nCalls to `comctl32.dll` succeed in .NET Framework 4.8, but fail in .NET 5 and also in .NET Core 3.1 with a `System.EntryPointNotFoundException`.\r\n\r\ne.g.\r\n\r\n```csharp\r\n[DllImport(\"comctl32.dll\", PreserveSig = false)]\r\nprivate static extern void TaskDialogIndirect([In] ref TaskDialogConfig pTaskConfig, out int pnButton,\r\n    out int pnRadioButton, [MarshalAs(UnmanagedType.Bool)] out bool pfVerificationFlagChecked);\r\n\r\n// ...\r\n\r\nvar config = new TaskDialogConfig\r\n{\r\n    pszWindowTitle = \"Task dialog title\",\r\n    pszMainInstruction = \"Task dialog main instruction\",\r\n    dwCommonButtons = TaskDialogCommonButtonFlags.OkButton | TaskDialogCommonButtonFlags.CancelButton,\r\n    // ...\r\n};\r\n\r\nusing (new ComCtlv6ActivationContext(enable: true))\r\n{\r\n    TaskDialogIndirect(ref config, out _, out _, out _);\r\n}\r\n```\r\n\r\n **Actual behavior:**\r\n\r\n![image](https://user-images.githubusercontent.com/177608/99158014-8d2d9980-26a4-11eb-95c9-8ecd3e366fff.png)\r\n\r\n```\r\nSystem.EntryPointNotFoundException: Unable to find an entry point named 'TaskDialogIndirect' in DLL 'comctl32.dll'.\r\n   at TaskDialogApi.TaskDialog.TaskDialogIndirect(TaskDialogConfig& pTaskConfig, Int32& pnButton, Int32& pnRadioButton, Boolean& pfVerificationFlagChecked)\r\n```\r\n \r\n **Expected behavior:**\r\n \r\nDisplay the Task Dialog requested\r\n\r\n![image](https://user-images.githubusercontent.com/177608/99158064-22309280-26a5-11eb-9d4a-fa7b5a58d6a5.png)\r\n\r\n **Minimal repro:**\r\n\r\n- [repro-wpf-net5-comctl32-entrypointnotfoundexception](https://github.com/augustoproiete-repros/repro-wpf-net5-comctl32-entrypointnotfoundexception)\r\n","Url":"https://github.com/dotnet/winforms/issues/4274","RelatedDescription":"Open issue \"Calls to comctl32.dll succeed in .NET 4.8, but fail in .NET 5 with System.EntryPointNotFoundException\" (#4274)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-12-01T05:30:48.9084065Z","RunDurationInMilliseconds":628}