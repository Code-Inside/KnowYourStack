{"Data":{"GitHub":{"Issues":[{"Id":"2724584447","IsPullRequest":true,"CreatedAt":"2024-12-07T13:42:41","Actor":"dotnet-maestro[bot]","Number":"12603","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20241206.5\r\n- **Date Produced**: December 7, 2024 2:21:41 AM UTC\r\n- **Commit**: 2d81cbb28a8feb1af5b790664b511b264d032877\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.IO.Hashing**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.Text.Encodings.Web**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.Text.Json**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24605.9 to 10.0.0-alpha.1.24606.5][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/8fca0a156d...2d81cbb28a\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12603)","Url":"https://github.com/dotnet/winforms/pull/12603","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#12603)"},{"Id":"2724584299","IsPullRequest":true,"CreatedAt":"2024-12-07T13:42:10","Actor":"dotnet-maestro[bot]","Number":"12602","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20241206.6\r\n- **Date Produced**: December 6, 2024 10:46:21 PM UTC\r\n- **Commit**: 61b8f746424762d2e3173ebfaab19346224d591c\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24605.1 to 10.0.0-beta.24606.6][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.24605.1 to 10.0.0-beta.24606.6][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.24605.1 to 10.0.0-beta.24606.6][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24605.1 to 10.0.0-beta.24606.6][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.24605.1 to 10.0.0-beta.24606.6][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.24605.1 to 10.0.0-beta.24606.6][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/110749ff6e...61b8f74642\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates sdk.version to 10.0.100-alpha.1.24573.1\r\n  - Updates tools.dotnet to 10.0.100-alpha.1.24573.1\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12602)","Url":"https://github.com/dotnet/winforms/pull/12602","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#12602)"},{"Id":"2723264198","IsPullRequest":false,"CreatedAt":"2024-12-06T15:02:23","Actor":"mario-mantese","Number":"12601","RawContent":null,"Title":"TreeView with checkboxes and DrawDefault = true renders incorrectly","State":"open","Body":"### .NET version\n\nnet8\n\n### Did it work in .NET Framework?\n\nNot tested/verified\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\nSame issue as described in https://stackoverflow.com/q/69978042\nDrawDefault=true is not rendering nodes correctly in checkboxes are present\n\n### Steps to reproduce\n\nCreate a form, add a TreevView with CheckBoxes=true and DrawMode=OwnerDrawText\nIn OnDrawNode event only set DrawDefault=true\nShow the form: checkboxes are shown corrupted on the right border\n![Image](https://github.com/user-attachments/assets/7d040abd-344c-4403-b7a3-b7659d247935)\n","Url":"https://github.com/dotnet/winforms/issues/12601","RelatedDescription":"Open issue \"TreeView with checkboxes and DrawDefault = true renders incorrectly\" (#12601)"},{"Id":"2723012767","IsPullRequest":true,"CreatedAt":"2024-12-06T13:37:39","Actor":"dotnet-maestro[bot]","Number":"12600","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20241205.9\r\n- **Date Produced**: December 6, 2024 8:06:46 AM UTC\r\n- **Commit**: 8fca0a156dcbb1eba5c79e387a6d8f924bfdd3a6\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.IO.Hashing**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.Text.Encodings.Web**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.Text.Json**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24605.1 to 10.0.0-alpha.1.24605.9][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/e99557baff...8fca0a156d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12600)","Url":"https://github.com/dotnet/winforms/pull/12600","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#12600)"},{"Id":"2723012183","IsPullRequest":true,"CreatedAt":"2024-12-06T13:37:12","Actor":"dotnet-maestro[bot]","Number":"12599","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20241205.1\r\n- **Date Produced**: December 5, 2024 5:22:48 PM UTC\r\n- **Commit**: 110749ff6e8a43fcd7c8f0bd74c5fcb0da3562ed\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24604.4 to 10.0.0-beta.24605.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.24604.4 to 10.0.0-beta.24605.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.24604.4 to 10.0.0-beta.24605.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24604.4 to 10.0.0-beta.24605.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.24604.4 to 10.0.0-beta.24605.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.24604.4 to 10.0.0-beta.24605.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/45d845e04c...110749ff6e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12599)","Url":"https://github.com/dotnet/winforms/pull/12599","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#12599)"},{"Id":"2722382660","IsPullRequest":true,"CreatedAt":"2024-12-06T08:21:08","Actor":"LeafShi1","Number":"12598","RawContent":null,"Title":"Reset MouseIsOver when the control loses focus","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #12590 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Set MouseIsOver = false in OnLostFocus method of ComboBox.cs\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n-  ComboBox dropdown button can be show normally when switching RightToLeft property\r\n\r\n## Regression? \r\n\r\n- Yes \r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\nWhen change the **RightToLeft** property **after expanding** the **Popup FlatStyle** comboBox, the dropdown button on the comboBox disappeared\r\n![Image](https://github.com/user-attachments/assets/2e730e12-e569-462b-812a-dcb8cf7ce2b6)\r\n\r\n### After\r\nThe dropdown button on the comboBox can be show normally\r\n![AfterChanges](https://github.com/user-attachments/assets/41bcbfea-1c44-4ee4-b875-87eada359f38)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manually\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .net 10.0.0-alpha.1.24605.1\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12598)","Url":"https://github.com/dotnet/winforms/pull/12598","RelatedDescription":"Open PR \"Reset MouseIsOver when the control loses focus\" (#12598)"},{"Id":"2722176314","IsPullRequest":false,"CreatedAt":"2024-12-06T06:28:14","Actor":"devcsantos","Number":"12597","RawContent":null,"Title":".NET designer throws an exception when project resource is serialized with System.Text.Json","State":"open","Body":"### Environment\n\nVisual Studio 17.12.3\n\n### .NET version\n\n.NET 8+\n\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\n\nYes, this previously worked on a previous Visual Studio 17.12 update.\n\n### Issue description\n\nWe use `System.Text.Json` serialization to independently transfer data between processes. However, external action(adding System.Text.Json V9.0) breaks our code.\n\n### Steps to reproduce\n\n1. Download [DevExpress Installer](https://go.devexpress.com/DevexpressDownload_UniversalTrial.aspx) and install WinForms components.\n2. Create a new DevExpress WinForms Project\n3. Add the `System.Text.Json` NuGet package to the project.\n4. Add SimpleButton\n5. Invoke our Image Picker Dialog\n6. Select a Vector Image or Font Icon and add it as a project resource.\nCurrent result:\nException is thrown\n\n\nAttached short video that illustrates the issue and the project used.\n[DXSample.zip](https://github.com/user-attachments/files/18033613/DXSample.zip)\n[Video](https://github.com/user-attachments/assets/d25b474d-0a1a-4b51-94a0-698c19c3eada)\n\n\n### Diagnostics\n\n```text\nSystem.MissingMethodException: Method not found: 'Int64 System.IO.Pipelines.PipeWriter.get_UnflushedBytes()'.\n   at System.Text.Json.Serialization.JsonConverter.ShouldFlush(WriteStack& state, Utf8JsonWriter writer)\n   at System.Text.Json.Serialization.Converters.DictionaryOfTKeyTValueConverter`3.OnWriteResume(Utf8JsonWriter writer, TCollection value, JsonSerializerOptions options, WriteStack& state)\n   at System.Text.Json.Serialization.JsonDictionaryConverter`3.OnTryWrite(Utf8JsonWriter writer, TDictionary dictionary, JsonSerializerOptions options, WriteStack& state)\n   at System.Text.Json.Serialization.JsonConverter`1.TryWrite(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)\n   at System.Text.Json.Serialization.JsonConverter`1.WriteCore(Utf8JsonWriter writer, T& value, JsonSerializerOptions options, WriteStack& state)\n   at System.Text.Json.Serialization.Metadata.JsonTypeInfo`1.Serialize(Utf8JsonWriter writer, T& rootValue, Object rootValueBoxed)\n   at System.Text.Json.JsonSerializer.WriteString[TValue](TValue& value, JsonTypeInfo`1 jsonTypeInfo)\n   at System.Text.Json.JsonSerializer.Serialize[TValue](TValue value, JsonSerializerOptions options)\n   at DevExpress.Utils.Design.ResourceProjectHelperNetCore.WriteImportedResources(Dictionary`2 importedResources, Dictionary`2 resXFilePathsCore, Dictionary`2 existingResourcesCore, String selectedResource)\n   at DevExpress.Utils.Design.SvgImageEditorViewModel.WriteImportedResourceAndLoadEditValue()\n   at DevExpress.Utils.Design.SvgImageEditorViewModel.ImportResources(String[] fileNames)\n   at DevExpress.Utils.Design.ImageEditorView.ImportResourceToProject(String[] fileNames)\n   at DevExpress.Utils.Design.ImageEditorView.ImportToProject(DXImageGalleryItem[] items)\n   at DevExpress.Utils.Design.ImagePickerGalleryBasePage.ApplyChanged()\n   at DevExpress.Utils.Design.ImageEditorFormBase.ApplyChangesCore()\n   at DevExpress.Utils.Design.ImageEditorFormBase.PerformApplyChanges()\n   at System.Threading.Tasks.Task.<>c.<ThrowAsync>b__128_0(Object state)\n   at InvokeStub_SendOrPostCallback.Invoke(Object, Span`1)\n   at System.Reflection.MethodBaseInvoker.InvokeWithOneArg(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\n```","Url":"https://github.com/dotnet/winforms/issues/12597","RelatedDescription":"Open issue \".NET designer throws an exception when project resource is serialized with System.Text.Json\" (#12597)"},{"Id":"2722133796","IsPullRequest":false,"CreatedAt":"2024-12-06T05:53:39","Actor":"Sekar47","Number":"12596","RawContent":null,"Title":"Visual Studio Crashes on Drag-and-Drop from Custom Dialog to Container in WinForms .NET Core Application","State":"open","Body":"> Hi @Tanya-Solyanik ,\n> \n> Thank you for clarifying the limitation with the DesignToolsServer process. Is there any alternative approach to achieve drag-and-drop functionality from a custom dialog into a container control in a WinForms .NET Core application while adhering to the supported framework? \n\n _Originally posted by @SekarSivalingam in [#12326](https://github.com/dotnet/winforms/issues/12326#issuecomment-2493315926)_","Url":"https://github.com/dotnet/winforms/issues/12596","RelatedDescription":"Open issue \"Visual Studio Crashes on Drag-and-Drop from Custom Dialog to Container in WinForms .NET Core Application\" (#12596)"},{"Id":"2714318552","IsPullRequest":true,"CreatedAt":"2024-12-05T17:47:26","Actor":"Liv-Goh","Number":"12575","RawContent":null,"Title":"Add unit test for MaskDesignerDialog","State":"closed","Body":"Related https://github.com/dotnet/winforms/issues/10773\r\n\r\n## Proposed changes\r\n1. Add unit test MaskDesignerDialogTests.cs for public properties and method of the MaskDesignerDialog.\r\n2. Enable nullability in MaskDesignerDialogTests..cs.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12575)","Url":"https://github.com/dotnet/winforms/pull/12575","RelatedDescription":"Closed or merged PR \"Add unit test for MaskDesignerDialog\" (#12575)"},{"Id":"2720361864","IsPullRequest":true,"CreatedAt":"2024-12-05T13:42:50","Actor":"dotnet-maestro[bot]","Number":"12594","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20241205.1\r\n- **Date Produced**: December 5, 2024 12:27:06 PM UTC\r\n- **Commit**: e99557baffbe864d624cc1c95c9cbf2eefae684f\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.IO.Hashing**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.Text.Encodings.Web**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.Text.Json**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24603.18 to 10.0.0-alpha.1.24605.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/7dbe407ee8...e99557baff\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12594)","Url":"https://github.com/dotnet/winforms/pull/12594","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#12594)"},{"Id":"2720360943","IsPullRequest":true,"CreatedAt":"2024-12-05T13:42:16","Actor":"dotnet-maestro[bot]","Number":"12593","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20241204.4\r\n- **Date Produced**: December 5, 2024 8:28:25 AM UTC\r\n- **Commit**: 45d845e04c05fbe5da9838c454bbc3af1df6be81\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24578.2 to 10.0.0-beta.24604.4][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.24578.2 to 10.0.0-beta.24604.4][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.24578.2 to 10.0.0-beta.24604.4][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24578.2 to 10.0.0-beta.24604.4][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.24578.2 to 10.0.0-beta.24604.4][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.24578.2 to 10.0.0-beta.24604.4][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/e8de341512...45d845e04c\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12593)","Url":"https://github.com/dotnet/winforms/pull/12593","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#12593)"},{"Id":"2720416389","IsPullRequest":false,"CreatedAt":"2024-12-05T13:26:46","Actor":"codereader","Number":"12595","RawContent":null,"Title":"ResourceCodeDomSerializer fails to assign distinct number suffixes to resources when serializing collection values","State":"open","Body":"### .NET version\n\n8.0.201 (the affected code is still there in .NET 9)\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\nThe code in [ResourceCodeDomSerializer.SerializationResourceManager.SetValue()](https://github.com/dotnet/winforms/blob/7a4fa49f330b6b0a27acd0e9a67a36d72862d618/src/System.Windows.Forms.Design/src/System/ComponentModel/Design/Serialization/ResourceCodeDomSerializer.SerializationResourceManager.cs#L729) (around code lines 714) is failing when assigning sequential number suffixes to resource names:\n\nWhile I cannot provide an quick-and-easy project to reproduce this, I'd like to suggest reading the code instead:\n```\n....\n// Now find an unused name\nstring resourceName = nameBase;\n\n// Only append the number when appendCount is set or if there is already a count.\nint count = 0;\nif (appendCount || _nameTable.TryGetValue(nameBase, out count))\n{\n    count++;\n    resourceName = $\"{nameBase}{count}\";\n}\n\n// Now that we have a name, write out the resource.\nSetValue(manager, resourceName, value, forceInvariant, shouldSerializeInvariant, ensureInvariant, applyingCachedResources);\n_nameTable[resourceName] = count; // <<--- bug here, _nameTable[nameBase] should be assigned instead\n....\n```\nThe code in .NET 4.8 assigned numbers starting from 1..N (even if only one value was in the _nameTable, so from the comment in the code I assume it has been changed to avoid assigning a number to the very first occurrence.\n\nThe bug occurs when generating number suffixes for the same `nameBase` value more than twice - it will end up using the same number 1 over and over. You'll end up with a _nameTable looking like this:\n\n- \"name\" => 0\n- \"name1\" => 1\n\n\"name1\" will be overwritten every time after the second.\n\n### Steps to reproduce\n\nThe bug is recurring in our software when copy/pasting WinForms controls in design mode. We are maintaining a Window Editor application which allows to copy/paste controls. When serializing the controls, the CodeDomSerializer will end up generating code like this (note the resource names, which are always using the number 1 as suffix.\n```\nCustomTextField.CustomProperty.AddRange(new CustomAssembly.Controls.Collections.CollectionItem[] {\n\t\t\t((CustomAssembly.Controls.Collections.CollectionItem)(resources.GetObject(\"CustomTextField.CustomProperty\"))),\n\t\t\t((CustomAssembly.Controls.Collections.CollectionItem)(resources.GetObject(\"CustomTextField.CustomProperty1\"))),\n\t\t\t((CustomAssembly.Controls.Collections.CollectionItem)(resources.GetObject(\"CustomTextField.CustomProperty1\"))),\n\t\t\t((CustomAssembly.Controls.Collections.CollectionItem)(resources.GetObject(\"CustomTextField.CustomProperty1\")))});\n```","Url":"https://github.com/dotnet/winforms/issues/12595","RelatedDescription":"Open issue \"ResourceCodeDomSerializer fails to assign distinct number suffixes to resources when serializing collection values\" (#12595)"},{"Id":"2719834609","IsPullRequest":false,"CreatedAt":"2024-12-05T09:19:44","Actor":"Nora-Zhou01","Number":"12592","RawContent":null,"Title":"Error using RichTextBox control with right-aligned bullets on Windows 11 24H2","State":"open","Body":"### .NET version\n\n10.0.100-alpha.1.24573.1\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo, repro in .NET 8.0\n\n### Issue description\n\nError using RichTextBox control with right-aligned bullets on Windows 11 24H2\n\n**Windows 11 Enterprise 24H2**\n\nhttps://github.com/user-attachments/assets/ac74cd74-be97-413b-83e8-c2ee366c5dfc\n\n**.NET 10 (.NET 9.0 with the same results)**\n\n![Image](https://github.com/user-attachments/assets/d9f0adcf-6472-4d0c-a5a5-4de779350765)\n\n**.NET 8**\n\n![Image](https://github.com/user-attachments/assets/05d5c55e-1962-44f4-8f54-c2f08a67bf57)\n\n**Windows 11 Enterprise 23H2**\n\nhttps://github.com/user-attachments/assets/b2a4950f-fa8a-4359-a845-330eaddc132a\n\n\n### Steps to reproduce\n\n1. Create a Winforms .Net Core application and add RichTextBox and Button controls\n2. Set the Text of the RichTextBox to test\n3. Double-click the Button and add the following code\n```\nthis.richTextBox1.Text = \"test\";\n\nrichTextBox1.RightToLeft = RightToLeft.Yes;\n\nrichTextBox1.SelectionBullet = true;\n```\n5. Run the project on both Windows 11 23H2 and 24H2\n\nOr\n\n1. Launch the [WinFormsApp5.zip](https://github.com/user-attachments/files/18020548/WinFormsApp5.zip) project\n2. Run the project on both Windows 11 23H2 and 24H2\n\n**More Info:**\nThe issue is from customer feedback ticket: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/2316184\n","Url":"https://github.com/dotnet/winforms/issues/12592","RelatedDescription":"Open issue \"Error using RichTextBox control with right-aligned bullets on Windows 11 24H2\" (#12592)"},{"Id":"2719691210","IsPullRequest":false,"CreatedAt":"2024-12-05T08:13:49","Actor":"Nora-Zhou01","Number":"12591","RawContent":null,"Title":"Undo operation in DemoConsole causes ContextMenuStrip to become unusable","State":"open","Body":"### .NET version\n\n.NET 10.0 main branch of WinForms repo\n\n### Did it work in .NET Framework?\n\nNot tested/verified\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, this is a regression issue. Not repro on .NET 9.0 from Release/9.0 branch of WinForms repo.\n\n### Issue description\n\nIn the DemoConsole test application in the Winforms repo, the Undo operation causes the ContextMenuStrip to be unusable.\n\n**.NET 10**\n\nhttps://github.com/user-attachments/assets/e108dec4-3987-4687-ab01-3868acfc7e00\n\n**.NET 9.0**\n\nhttps://github.com/user-attachments/assets/a01e8716-87db-48fe-b014-c9e479514b74\n\n\n\n### Steps to reproduce\n\nTest sample: [DemoConsole](https://github.com/dotnet/winforms/tree/main/src/System.Windows.Forms/tests/IntegrationTests/DesignSurface/DemoConsole) in Winforms repo\n\n1. Click the form designer after **Type Text for the ToolstripMenuItem** in the ContextMenuStrip\n2. Click Undo/Ctrl + Z","Url":"https://github.com/dotnet/winforms/issues/12591","RelatedDescription":"Open issue \"Undo operation in DemoConsole causes ContextMenuStrip to become unusable\" (#12591)"},{"Id":"2719661261","IsPullRequest":false,"CreatedAt":"2024-12-05T07:57:26","Actor":"Liv-Goh","Number":"12590","RawContent":null,"Title":"ComboBox dropdown button disappear when switching RightToLeft property","State":"open","Body":"### .NET version\n\n.NET 10 and .NET9 both having this issue\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nThis issue cannot reproduce in .NET 8, so this is a regression issue.\n\n### Issue description\n\n### Current Behavior (.NET 9.0 and 10.0)\nWhen change the **RightToLeft** property **after expanding** the **Popup FlatStyle** comboBox, the dropdown button on the comboBox disappeared\nWhen hover cursor to the disappeared dropdown button, the dropdown button will appear again.\n![Image](https://github.com/user-attachments/assets/2e730e12-e569-462b-812a-dcb8cf7ce2b6)\n\n### Expected Behavior (.NET 8.0)\nWhen change the **RightToLeft** property **after expanding** the comboBox, dropdown button on the comboBox won't be affected.\n![Image](https://github.com/user-attachments/assets/86569c80-a04a-4695-ad00-9a5c16632759)\n\n\n\n### Steps to reproduce\n\n1. Open the test app\n2. Build and run the project\n3. Click the dropdown button to **expand the comboBox** (this step is compulsory)\n4. Change the comboBox **RightToLeft** property \n5. Observe the dropdown button on the comboBox\n\nTest app: [ComboBox Dropdown issue.zip](https://github.com/user-attachments/files/18019340/ComboBox.Dropdown.issue.zip)\n","Url":"https://github.com/dotnet/winforms/issues/12590","RelatedDescription":"Open issue \"ComboBox dropdown button disappear when switching RightToLeft property\" (#12590)"},{"Id":"2719576604","IsPullRequest":false,"CreatedAt":"2024-12-05T07:20:37","Actor":"Olina-Zhang","Number":"12589","RawContent":null,"Title":"Keyboard tooltip of toolStripDropDown item keeps displaying when tab to other control","State":"open","Body":"### .NET version\n\n.NET 10 with 10.0.100-alpha.1.24573.1 build\n\n### Did it work in .NET Framework?\n\nNot tested/verified\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo, still repro in .NET 6.0/7.0/8.0/9.0\n\n### Issue description\n\nKeyboard tooltip of toolStripDropDown item keeps displaying when tab to other control:\n\n![Image](https://github.com/user-attachments/assets/abe18a63-78ab-46fe-8bf3-01a7ff489b65)\n\nhttps://github.com/user-attachments/assets/a8b70e73-11c5-42c9-8063-59e5d1be4051\n\n\n### Steps to reproduce\n\n1. Create Winforms .NET app with toolStrip and button added\n2. In toolStrip, add ToolStripDropDownButton, add toolStripMenuItem for ToolStripDropDownButton\n3. Set toolStrip's `TabStop` property to `True`\n4. Focus on toolStripMenuItem, set its `AutoToolTip` property ` to True`\n5. Build and run app\n6. Press down to expand ToolStripDropDownButton - it will focus on toolStripMenuItem with its keyboard tooltip displayed\n7. Press enter to collapse ToolStripDropDownButton, tab to another control: button\n\nTest app: [WinFormsApp15.zip](https://github.com/user-attachments/files/18018947/WinFormsApp15.zip)\n","Url":"https://github.com/dotnet/winforms/issues/12589","RelatedDescription":"Open issue \"Keyboard tooltip of toolStripDropDown item keeps displaying when tab to other control\" (#12589)"},{"Id":"2719047329","IsPullRequest":false,"CreatedAt":"2024-12-05T00:21:05","Actor":"elachlan","Number":"12588","RawContent":null,"Title":"API Proposal: Calculate Contrast Color for Improved Accessibility","State":"open","Body":"### Background and motivation\n\nWhen designing user interfaces, it is essential to ensure text or elements displayed over a background color have sufficient contrast for readability. This is particularly relevant for accessibility compliance (e.g., WCAG). Calculating a contrasting color, such as black or white, based on the background color's luminance, is a common requirement.\n\nCurrently, .NET's `Color` struct does not provide an in-built way to compute a contrast color. This proposal adds a `ContrastColor` method directly to the Color struct, allowing developers to easily determine the optimal contrasting color (black or white) for any given color.\n\nI currently use a version of this in my applications to help get contrasting text color for different labels/controls where a user can configure its background color (such as the status bar).\n\nReference: https://stackoverflow.com/questions/1855884/determine-font-color-based-on-background-color\n\n### API Proposal\n\n```csharp\nusing System.Drawing;\n\npublic static class ColorExtensions\n{\n    /// <summary>\n    /// Calculates a contrasting color (black or white) based on the luminance of the current color.\n    /// </summary>\n    /// <param name=\"color\">The base color.</param>\n    /// <returns>Black for bright colors, white for dark colors.</returns>\n    public static Color ContrastColor(this Color color)\n    {\n        // Calculate the perceptive luminance (luma) using standard coefficients\n        double luma = ((0.299 * color.R) + (0.587 * color.G) + (0.114 * color.B)) / 255;\n\n        // Return black for bright colors, white for dark colors\n        return color.A == 0 || luma > 0.5 ? Color.Black : Color.White;\n    }\n}\n\n```\n\n\n### API Usage\n\n```csharp\nusing System.Drawing;\n\nColor backgroundColor = Color.FromArgb(255, 200, 200); // Light red\nColor contrastingColor = backgroundColor.ContrastColor();\n// Result: Color.Black\n```\n\n\n### Alternative Designs\n\n**Standalone Helper Function**\nInstead of an extension method, a static utility function could be added in a helper class. However, attaching the method directly to Color improves discoverability and API integration.\n\n**Configurable Threshold**\nAn additional overload could allow developers to specify a custom luminance threshold, but this would add complexity without significant value for most use cases.\n\n### Risks\n\n**Perceived Simplicity**\nWhile the luminance formula used is standard, it assumes consistent behavior across platforms. Deviations in rendering systems or gamma settings might lead to slight visual discrepancies.\n\n**Edge Cases**\nFully transparent colors (Color.A = 0) are handled by returning Color.Black as a fallback, which may not align with all design requirements.\n\n### Will this feature affect UI controls?\n\nN/A","Url":"https://github.com/dotnet/winforms/issues/12588","RelatedDescription":"Open issue \"API Proposal: Calculate Contrast Color for Improved Accessibility\" (#12588)"},{"Id":"2716447681","IsPullRequest":true,"CreatedAt":"2024-12-04T22:33:32","Actor":"JeremyKuhne","Number":"12581","RawContent":null,"Title":"Add WPF test visibility to System.Private.Windows.Core","State":"closed","Body":"Add an entry for every test assembly. Not all of these projects exist yet, but they will soon. I'll be forcing all of the WPF test projects to the Open key.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12581)","Url":"https://github.com/dotnet/winforms/pull/12581","RelatedDescription":"Closed or merged PR \"Add WPF test visibility to System.Private.Windows.Core\" (#12581)"},{"Id":"2715616454","IsPullRequest":true,"CreatedAt":"2024-12-04T21:20:40","Actor":"lonitra","Number":"12578","RawContent":null,"Title":"Add File Classification for runtime pack","State":"closed","Body":"Related: https://github.com/dotnet/windowsdesktop/issues/4796\r\n\r\nThis change includes file classification that is needed for the runtime pack in windowsdesktop in our FileClassification.props to avoid maintaining this list in the windowsdesktop repo. These dlls come from winforms so they should be maintained here and simply pulled into windowsdesktop [like how we are already doing for the ref pack](https://github.com/dotnet/windowsdesktop/blob/main/src/windowsdesktop/src/sfx/Microsoft.WindowsDesktop.App.Ref.sfxproj#L25). The list is currently being maintained https://github.com/dotnet/windowsdesktop/blob/main/src/windowsdesktop/src/sfx/Microsoft.WindowsDesktop.App.Runtime.sfxproj#L22-L39\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12578)","Url":"https://github.com/dotnet/winforms/pull/12578","RelatedDescription":"Closed or merged PR \"Add File Classification for runtime pack\" (#12578)"},{"Id":"2718808332","IsPullRequest":false,"CreatedAt":"2024-12-04T21:19:21","Actor":"lonitra","Number":"12587","RawContent":null,"Title":"Survey: Repo Contribution Experience 2024","State":"open","Body":"Similar to last year, we are doing a survey to gain feedback on how the repo contribution experience is.\nWhether you've been involved for years or you're relatively new please tell us about your experience participating and contributing to the project.  Your feedback is important to us, we'd love to hear how it's going and how we can improve.\n\nSurvey link: https://www.surveymonkey.com/r/5SJ7DVG","Url":"https://github.com/dotnet/winforms/issues/12587","RelatedDescription":"Open issue \"Survey: Repo Contribution Experience 2024\" (#12587)"},{"Id":"2718577879","IsPullRequest":false,"CreatedAt":"2024-12-04T19:05:53","Actor":"paulthegreat","Number":"12586","RawContent":null,"Title":"Correct System.Windows.Forms.ControlPaint.HSLColor.Darker function","State":"open","Body":"### Background and motivation\n\nAt least since .NET Framework 4, the `System.WIndows.Forms.ControlPaint.HSLColor.Darker` function (which is called by `System.Windows.Forms.ControlPaint.Dark()`) has been wrong for non-system colors.\n\nThe `Lighter` function logically interpolates, based on the passed percentage value, from the current luminosity towards a luminosity value 50% higher. The `Darker` function illogically interpolates, based on the passed percentage value, from a luminosity value 33% lower than the current luminosity towards zero.\n\nA call to `Lighter(0)` reasonably returns the same color. A call to `Darker(0)` unreasonably returns a color 33% darker. `Lighter(0.5)` returns a color 25% lighter; `Darker(0.5)` returns a color 67% darker. `Lighter(1)` returns a color 50% lighter; `Darker(1)` returns black.\n\n### API Proposal\n\n```csharp\nnamespace System.Windows.Forms;\n\npublic static partial class ControlPaint\n{\n    private readonly struct HLSColor : IEquatable<HLSColor>\n    {\n        public Color Darker(float percDarker)\n        {\n            if (!_isSystemColors_Control)\n            {\n                // *** this block is the only changed code ***\n                // match the Lighter function and use current luminosity as a baseline instead of zero\n                int zeroLum = luminosity;\n                int oneLum = NewLuma(ShadowAdjustment, true);\n                return ColorFromHLS(_hue, zeroLum + (int)((oneLum - zeroLum) * percDarker), _saturation);\n            }\n            else\n            {\n                // With the usual color scheme, ControlDark/DarkDark is not exactly\n                // what we would otherwise calculate\n                if (percDarker == 0.0f)\n                {\n                    return SystemColors.ControlDark;\n                }\n                else if (percDarker == 1.0f)\n                {\n                    return SystemColors.ControlDarkDark;\n                }\n                else\n                {\n                    ARGB dark = SystemColors.ControlDark;\n                    ARGB darkDark = SystemColors.ControlDarkDark;\n\n                    return Color.FromArgb(\n                        (byte)(dark.R - (byte)((dark.R - darkDark.R) * percDarker)),\n                        (byte)(dark.G - (byte)((dark.G - darkDark.G) * percDarker)),\n                        (byte)(dark.B - (byte)((dark.B - darkDark.B) * percDarker)));\n                }\n            }\n        }\n    }\n}\n```\n\n\n### API Usage\n\n```csharp\nusing System.Drawing.Color;\n\nColor c = Color.FromArgb(128, 128, 128);\nColor sameColor = System.Windows.Forms.ControlPaint.Dark(c, 0.0);\nColor darkColor = System.Windows.Forms.ControlPaint.Dark(c, 0.5);\nColor darkerColor = System.Windows.Forms.ControlPaint.Dark(c, 1.0);\n\nColor approxSameColor = System.Windows.Forms.ControlPaint.Light(System.Windows.Forms.ControlPaint.Dark(c));\nColor approxSameColor2 = System.Windows.Forms.ControlPaint.Dark(System.Windows.Forms.ControlPaint.Light(c));\n```\n\n\n### Alternative Designs\n\n_No response_\n\n### Risks\n\n_No response_\n\n### Will this feature affect UI controls?\n\nYes.\n- no\n- none\n- no","Url":"https://github.com/dotnet/winforms/issues/12586","RelatedDescription":"Open issue \"Correct System.Windows.Forms.ControlPaint.HSLColor.Darker function\" (#12586)"},{"Id":"2718382309","IsPullRequest":true,"CreatedAt":"2024-12-04T18:53:28","Actor":"Tanya-Solyanik","Number":"12585","RawContent":null,"Title":"removed unnecessary casts that I had missed before","State":"closed","Body":"and added a baseline test for the future changes\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12585)","Url":"https://github.com/dotnet/winforms/pull/12585","RelatedDescription":"Closed or merged PR \"removed unnecessary casts that I had missed before\" (#12585)"},{"Id":"2717674724","IsPullRequest":true,"CreatedAt":"2024-12-04T13:41:36","Actor":"dotnet-maestro[bot]","Number":"12583","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20241203.18\r\n- **Date Produced**: December 4, 2024 6:37:11 AM UTC\r\n- **Commit**: 7dbe407ee8f709e7d37e81e185605d328208bc72\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.IO.Hashing**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.Text.Encodings.Web**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.Text.Json**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24603.1 to 10.0.0-alpha.1.24603.18][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/12afdedd80...7dbe407ee8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12583)","Url":"https://github.com/dotnet/winforms/pull/12583","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#12583)"},{"Id":"2717718628","IsPullRequest":false,"CreatedAt":"2024-12-04T13:19:50","Actor":"boennhoff","Number":"12584","RawContent":null,"Title":"System.Drawing.Common-8.0.8 upgrade to 9.0.0 crashes my application","State":"open","Body":"### .NET version\n\ntarget: net8.0-windows\ninstalled dotnet sdk: 9.0.100, 8.0.404 & 8.0.206 (for whatever reason I have multiple)\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nnot tested\n\n### Issue description\n\nRecently I had warnings about vulnerable package references, so I upgraded all possible Microsoft packages and tested my application thoroughly, when I stumbled over a very strange bug:\n\nRunning in a debug session, my application opens one of our forms and as soon as I load data the complete Debug session kills itself without any notice. No break on any exception, no log output, the process is just gone, and VS sits there as if no debug session was started.\n\n### Steps to reproduce\n\nAfter a `git bisect` I determined the root cause: when changing a `csproj` file from\n```xml\n<ItemGroup>\n  [..]\n  <PackageReference Include=\"System.Drawing.Common\" Version=\"8.0.8\" />\n  [..]\n</ItemGroup>\n```\nto \n```xml\n<ItemGroup>\n  [..]\n  <PackageReference Include=\"System.Drawing.Common\" Version=\"9.0.0\" />\n  [..]\n</ItemGroup>\n```\nthe bug appears. In the same commit I also upgraded many other packages from 8.0.* to 9.0.0, like `System.Configuration.ConfigurationManager` and `System.Management`, but only with `System.Drawing.Common-9.0.0` this bug happens.\n\nWe are using `System.Drawing.Common` mainly for `Image` manipulation (Resize, etc.) and `Bitmap` creation, the UI itself is 3rd-party (managed through COM interops) not `Windows.Forms`.\n\nI am a bit stuck in finding more information on this, or better describing this issue, I am posting here because the NuGet-package links here. Does anyone have an idea on how to find out more?\n\nMy workaround is of course, to not upgrade this package, but this can't be the solution in the long-run...","Url":"https://github.com/dotnet/winforms/issues/12584","RelatedDescription":"Open issue \"System.Drawing.Common-8.0.8 upgrade to 9.0.0 crashes my application\" (#12584)"},{"Id":"2717201067","IsPullRequest":false,"CreatedAt":"2024-12-04T10:08:32","Actor":"MelonWang1","Number":"12582","RawContent":null,"Title":"[DarkMode]The Form1 title bar change to white color when set the RightToLeft to Yes in PropertyGrid control","State":"open","Body":"### .NET version\n\n.NET 10.0.100-alpha.1.24573.1\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo, also repro in .NET 9.0 which it started to be supported.\n\n### Issue description\n\nThe Form1 title bar change to white color when set the RightToLeft to Yes in PropertyGrid control.\n![Image](https://github.com/user-attachments/assets/2820d14b-e549-4c7e-be61-721c4cea9941)\n\n\n\n### Steps to reproduce\n\n**Repro steps:**\n\n1. Create a WinForms .NET application with PropertyGrid control\n2. Set PropertyGrid's selectedObject property to Form1\n3. Enable DarkMode by Application.SetColorMode(SystemColorMode.Dark) in Program.cs file\n4. Run the application\n5. In PropertyGrid control, set the RightToLeft property to Yes\n\n**More Info:**\n1. If repro the issue, then set RightToLeft property to No, the Form1 title bar also be white color.","Url":"https://github.com/dotnet/winforms/issues/12582","RelatedDescription":"Open issue \"[DarkMode]The Form1 title bar change to white color when set the RightToLeft to Yes in PropertyGrid control\" (#12582)"},{"Id":"2716428850","IsPullRequest":true,"CreatedAt":"2024-12-04T02:49:22","Actor":"Zheng-Li01","Number":"12580","RawContent":null,"Title":"Add code coverage for DataGridViewComboBoxCell.ObjectCollection","State":"open","Body":"related #10453\r\n\r\n## Proposed changes\r\nAdd unit tests for  DataGridViewComboBoxCell.ObjectCollection.cs to test its properties & methods\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12580)","Url":"https://github.com/dotnet/winforms/pull/12580","RelatedDescription":"Open PR \"Add code coverage for DataGridViewComboBoxCell.ObjectCollection\" (#12580)"},{"Id":"2716091143","IsPullRequest":true,"CreatedAt":"2024-12-03T23:06:48","Actor":"JeremyKuhne","Number":"12579","RawContent":null,"Title":"Define WIC HRESULTs","State":"closed","Body":"Needed for WPF scenarios currently and likely for our own usages as well eventually.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12579)","Url":"https://github.com/dotnet/winforms/pull/12579","RelatedDescription":"Closed or merged PR \"Define WIC HRESULTs\" (#12579)"},{"Id":"2715608604","IsPullRequest":true,"CreatedAt":"2024-12-03T19:23:51","Actor":"ViktorHofer","Number":"12577","RawContent":null,"Title":"Annotate test utility projects so that they don't get built inside the VMR","State":"closed","Body":"I noticed that these get built in the normal product build that shouldn't build tests.","Url":"https://github.com/dotnet/winforms/pull/12577","RelatedDescription":"Closed or merged PR \"Annotate test utility projects so that they don't get built inside the VMR\" (#12577)"},{"Id":"2714974182","IsPullRequest":true,"CreatedAt":"2024-12-03T13:41:14","Actor":"dotnet-maestro[bot]","Number":"12576","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20241203.1\r\n- **Date Produced**: December 3, 2024 10:30:47 AM UTC\r\n- **Commit**: 12afdedd8050847aa90473e254fa782f54360990\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.IO.Hashing**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Text.Encodings.Web**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Text.Json**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24601.1 to 10.0.0-alpha.1.24603.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/5b9b8d3ae6...12afdedd80\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12576)","Url":"https://github.com/dotnet/winforms/pull/12576","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#12576)"},{"Id":"2713428426","IsPullRequest":false,"CreatedAt":"2024-12-02T21:28:31","Actor":"lonitra","Number":"12574","RawContent":null,"Title":"Expect Delayed Responses for Holiday Season","State":"open","Body":"Hi all, with the holidays coming up please expect delayed responses on issues and PRs until early January. Thank you!","Url":"https://github.com/dotnet/winforms/issues/12574","RelatedDescription":"Open issue \"Expect Delayed Responses for Holiday Season\" (#12574)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-12-08T03:30:29.3831994Z","RunDurationInMilliseconds":413}