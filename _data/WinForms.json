{"Data":{"GitHub":{"Issues":[{"Id":"1432325904","IsPullRequest":false,"CreatedAt":"2022-11-02T01:28:17","Actor":"vsfeedback","Number":"8095","RawContent":null,"Title":"winforms databound usercontrol causes rowchanged event","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/winforms-databound-usercontrol-causes-ro/10185137)._\n\n---\n[severity:It's more difficult to complete my work]\r\nWhen a win forms usercontrol is data bound to a datatable. It causes the datarow to be modified EVEN when no data has been changed.\nThis is causing a big performance issue in my application.\n\nI have created a test application which I have attached to demonstrate the problem.\nI have tried many things but cannot resolve it. I don't know where the problem is.\n\nTest 1 - Tests data binding with a standard textbox. It is bound to the source table. The DataTable has a RowChanged event handler to display the table change count and display the row versions with data. This does not cause any rowchanges.\n\nTest 2 - Tests data binding with a User Control. Note: This user control is a dummy version used to demonstrate my problem. This si bound to the same data table as etst 1 and the same source column. This test causes each row to be modified, as show by the display of the DataRow values.\n\nIn both tests, the results are displayed in a textbox on the form.\n\nCan you help.\nHow can I stop rows being changed when there is not data modified.\n\nThankyou in advance.\nGlynn.\n\n---\n### Original Comments\n\n#### Feedback Bot on 10/31/2022, 11:33 AM: \n\n(private comment, text removed)\n#### Melon Wang [MSFT] on 11/1/2022, 03:06 PM: \n\n(private comment, text removed)\n#### glynn.stuber on 11/1/2022, 04:35 PM: \n\n(private comment, text removed)\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/winforms/issues/8095","RelatedDescription":"Open issue \"winforms databound usercontrol causes rowchanged event\" (#8095)"},{"Id":"1432266064","IsPullRequest":true,"CreatedAt":"2022-11-02T00:05:42","Actor":"github-actions[bot]","Number":"8094","RawContent":null,"Title":"[release/7.0] Fix a SaveTabSelection method","State":"open","Body":"Backport of #8055 to release/7.0\n\n/cc @RussKie @mikhailovalex\n\n## Customer Impact\n\n## Testing\n\n## Risk\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8094)","Url":"https://github.com/dotnet/winforms/pull/8094","RelatedDescription":"Open PR \"[release/7.0] Fix a SaveTabSelection method\" (#8094)"},{"Id":"1432192526","IsPullRequest":true,"CreatedAt":"2022-11-01T23:49:48","Actor":"Tanya-Solyanik","Number":"8092","RawContent":null,"Title":"Suppressed WFDEV warnings in source","State":"closed","Body":"* Suppressed warnings about obsolete types\r\n* Minor cleanup in AccessibleObject\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8092)","Url":"https://github.com/dotnet/winforms/pull/8092","RelatedDescription":"Closed or merged PR \"Suppressed WFDEV warnings in source\" (#8092)"},{"Id":"1429291441","IsPullRequest":true,"CreatedAt":"2022-11-01T23:42:00","Actor":"gpetrou","Number":"8072","RawContent":null,"Title":"Enable nullability in some ToolStrip members","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in some ToolStrip members.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8072)","Url":"https://github.com/dotnet/winforms/pull/8072","RelatedDescription":"Closed or merged PR \"Enable nullability in some ToolStrip members\" (#8072)"},{"Id":"1431766638","IsPullRequest":true,"CreatedAt":"2022-11-01T23:40:41","Actor":"gpetrou","Number":"8085","RawContent":null,"Title":"Enable nullability in VerticalRowManager","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in VerticalRowManager.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8085)","Url":"https://github.com/dotnet/winforms/pull/8085","RelatedDescription":"Closed or merged PR \"Enable nullability in VerticalRowManager\" (#8085)"},{"Id":"1432220676","IsPullRequest":true,"CreatedAt":"2022-11-01T23:05:33","Actor":"garath","Number":"8093","RawContent":null,"Title":"Fix CodeQL TSA reporting","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n## Proposed changes\r\n\r\nFix CodeQL 3000 configuration to \r\n\r\n1. properly pass intent to publish results to TSA \r\n2. properly discover TSA configuration file\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\nNone\r\n\r\n## Regression? \r\n\r\nNo\r\n\r\n## Risk\r\n\r\nNone\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\nThis is the same pattern Arcade uses. I've also confirmed this specific configuration by build logs:\r\n\r\n\r\nBuild [20221031.1](https://dev.azure.com/dnceng/internal/_build/results?buildId=2033070&view=logs&j=eb2c8817-e906-5459-8080-1a4c8ed1e2e2&t=3d80e413-4872-527d-85b5-8fd7d891cc14) is a regular, scheduled build and scan. This build also shows the problem. The `CodeQLInit` task logging shows that `TSAEnabled` was not correctly detected (and thus set to false).\r\n\r\n```\r\n...\r\nConfiguration:\r\nCadence = 0\r\nEnabled = true\r\nLogLevel = 4\r\nCLIVersion = 2.8.4\r\nTSAEnabled = false\r\n...\r\n```\r\n\r\nBuild [20221101.2](https://dev.azure.com/dnceng/internal/_build/results?buildId=2034406&view=results) is a build of this PR branch. It shows resolution of both issues. \r\n\r\nCorrectly detecting the desired configuration:\r\n\r\n```\r\n...\r\nConfiguration:\r\nCadence = 0\r\nEnabled = true\r\nLogLevel = 4\r\nCLIVersion = 2.8.4\r\nTSAEnabled = true\r\nTSAOptionsPath = D:\\a\\_work\\1\\s\\eng\\pipelines\\tsaoptions.json\r\n...\r\n```\r\n\r\nFinding and loading the TSA configuration file:\r\n\r\n```\r\n...\r\nLooking for TSA options in D:\\a\\_work\\1\\s\\eng\\pipelines\\tsaoptions.json\r\n##[verbose]Loading TSA options from D:\\a\\_work\\1\\s\\eng\\pipelines\\tsaoptions.json\r\n...\r\n```\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\nTest builds run using the configuration defined in the `azure-pipelines-codeql.yml` pipeline definition and the `dotnet-winforms-codeql` pipeline.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8093)","Url":"https://github.com/dotnet/winforms/pull/8093","RelatedDescription":"Open PR \"Fix CodeQL TSA reporting\" (#8093)"},{"Id":"1432115609","IsPullRequest":true,"CreatedAt":"2022-11-01T21:20:21","Actor":"vseanreesermsft","Number":"8091","RawContent":null,"Title":"Update branding to 6.0.12","State":"open","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8091)","Url":"https://github.com/dotnet/winforms/pull/8091","RelatedDescription":"Open PR \"Update branding to 6.0.12\" (#8091)"},{"Id":"1431845528","IsPullRequest":false,"CreatedAt":"2022-11-01T18:41:23","Actor":"dreddy-work","Number":"8088","RawContent":null,"Title":"UserCOntrol with anchored controls does not work on high dpi machines.","State":"closed","Body":"### .NET version\n\n.NET 8.0\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNO\n\n### Issue description\n\nAdding a user control, that has anchored controls, to the Form and launching on high dpi scaled  (300%) monitor, doesn't display/scale anchored controls form the user control properly.\r\n\r\nActual: \r\n![image](https://user-images.githubusercontent.com/36968667/199304682-1090599b-34b6-402e-a6bf-1802d1bad3ef.png)\r\n\r\nExpected:\r\n\r\n![image](https://user-images.githubusercontent.com/36968667/199304760-b69ad16a-8961-4089-ac05-d73793df6245.png)\r\n\n\n### Steps to reproduce\n\n\r\nCreate a user control with anchored buttons as shown above and add it to the Form. Target framework does not matter here.","Url":"https://github.com/dotnet/winforms/issues/8088","RelatedDescription":"Closed issue \"UserCOntrol with anchored controls does not work on high dpi machines.\" (#8088)"},{"Id":"1431894786","IsPullRequest":false,"CreatedAt":"2022-11-01T18:41:08","Actor":"dreddy-work","Number":"8090","RawContent":null,"Title":"Anchored controls layout is broken if Container has visible scrollbars","State":"closed","Body":"### .NET version\r\n\r\n.NET 8.0\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNo\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nNo.\r\n\r\n### Issue description\r\n\r\nApplications running in PermonitorV2 mode and has scroll bars visible, anchoring child controls results in incorrect layout when moved to different monitor. Following image shows the issue in detail:\r\n\r\nscenario:  Application moved from 100% monitor to 300% monitor.\r\nActual: \r\n![image](https://user-images.githubusercontent.com/36968667/199310722-ff0018e5-de17-4387-a2d6-3a3c26603433.png)\r\n\r\nExpected:\r\n![image](https://user-images.githubusercontent.com/36968667/199312440-689ca1fe-e385-4d6d-a074-b9de07d7fd14.png)\r\n\r\n\r\n### Steps to reproduce\r\n\r\n- Create a PMv2 app with anchored controls as shown in images above.\r\n- Run the app on a dual monitor setup with 100% and 300% scaling on them.\r\n- Move application from one monitor to the other.","Url":"https://github.com/dotnet/winforms/issues/8090","RelatedDescription":"Closed issue \"Anchored controls layout is broken if Container has visible scrollbars\" (#8090)"},{"Id":"1431884735","IsPullRequest":false,"CreatedAt":"2022-11-01T18:40:20","Actor":"dreddy-work","Number":"8089","RawContent":null,"Title":"Controls on the Form are truncated on high dpi machines.","State":"closed","Body":"### .NET version\r\n\r\n.NET 8.0 \r\n\r\n### Did it work in .NET Framework?\r\n\r\nNo\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nNO\r\n\r\n### Issue description\r\n\r\nIn PermonitorV2 mode application, child controls placed on the Form, close to border are cut when moved from one monitor to the other with different DPI scaling. It is more evident in anchored controls.\r\n\r\n### Steps to reproduce\r\n\r\n- Create a simple Form with child controls placed around the border as shown in below pic.\r\n- Set application Dpi mode to PermonitorV2 mode. And run application on a dual monitor with settings 300% primary and 100% secondary.\r\n\r\nActual: \r\n![image](https://user-images.githubusercontent.com/36968667/199310019-4cd79fae-e3fc-4f98-8778-9dc1c1019484.png)\r\n\r\nExpected: \r\n![image](https://user-images.githubusercontent.com/36968667/199310071-2bf241fe-d250-4fce-9b0e-4bcb19d06c19.png)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/8089","RelatedDescription":"Closed issue \"Controls on the Form are truncated on high dpi machines.\" (#8089)"},{"Id":"1431784594","IsPullRequest":false,"CreatedAt":"2022-11-01T17:12:02","Actor":"dreddy-work","Number":"8087","RawContent":null,"Title":"Tacking issue:  Anchors in PermonV2 mode become invalid","State":"open","Body":"### .NET version\n\n.NET 8.0\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nN0. This new way of calculation is introduced in 8.0\n\n### Issue description\n\nIn PermonitorV2 mode applications, when moving the Form from one monitor to the other, Form gets an invalid display rectangle for a brief period during the scaling of its child controls. Updating anchors, because of layout, during this period would end up invalid anchor calculations. For all scaling scenarios due to DPI changed event, we will be scaling anchors and avoid/skip recalculation of anchors and prevent using this invalid display rect.\r\n\r\nFollowing is the snippet where we see invalid DisplayRect of the Form for a brief period while moving from one monitor to the other.\r\n\r\nInvalid sate: \r\n![image](https://user-images.githubusercontent.com/36968667/199294442-45913402-1ee9-4f41-b6e0-c69f1b2f44c6.png)\r\n\r\nFinal state:\r\n\r\n![image](https://user-images.githubusercontent.com/36968667/199294510-e6d0f70d-6520-41da-800b-4677a1b99d23.png)\r\n\n\n### Steps to reproduce\n\nNA","Url":"https://github.com/dotnet/winforms/issues/8087","RelatedDescription":"Open issue \"Tacking issue:  Anchors in PermonV2 mode become invalid\" (#8087)"},{"Id":"1431779522","IsPullRequest":true,"CreatedAt":"2022-11-01T17:08:34","Actor":"dreddy-work","Number":"8086","RawContent":null,"Title":"Fix Anchors in PermonitorV2 mode applications.","State":"open","Body":"fixes: #8087\r\n\r\nIn PermonitorV2 mode applications, when moving the Form from one monitor to the other, Form gets an invalid display rectangle for a brief period during the scaling of its child controls. Updating anchors, because of layout, during this period would end up invalid anchor calculations. For all scaling scenarios due to DPI changed event, we will be scaling anchors and avoid/skip recalculation of anchors to prevent using this invalid display rect.\r\n\r\nFollowing is the snippet where we see invalid DisplayRect of the Form for a brief period while moving from one monitor to the other.\r\n\r\n**Invalid state:**\r\n![image](https://user-images.githubusercontent.com/36968667/199293490-967c0fe3-324f-47b0-89ec-8340890dd834.png)\r\n\r\n**Final state:**\r\n\r\n![image](https://user-images.githubusercontent.com/36968667/199293757-999100ae-cef0-4083-8e53-f50148fb6cf4.png)\r\n\r\n\r\nAmending #7956 \r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8086)","Url":"https://github.com/dotnet/winforms/pull/8086","RelatedDescription":"Open PR \"Fix Anchors in PermonitorV2 mode applications.\" (#8086)"},{"Id":"1431320881","IsPullRequest":true,"CreatedAt":"2022-11-01T12:35:44","Actor":"dotnet-maestro[bot]","Number":"8084","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20221031.10\r\n- **Date Produced**: November 1, 2022 9:42:25 AM UTC\r\n- **Commit**: 7d5efbb9e10b6d8beb91c90cbdefd7360869cece\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.22530.1 to 8.0.0-alpha.1.22531.10][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.22530.1 to 8.0.0-alpha.1.22531.10][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22530.1 to 8.0.0-alpha.1.22531.10][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22530.1 to 8.0.0-alpha.1.22531.10][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22530.1 to 8.0.0-alpha.1.22531.10][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.22530.1 to 8.0.0-alpha.1.22531.10][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22530.1 to 8.0.0-alpha.1.22531.10][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.22530.1 to 8.0.0-alpha.1.22531.10][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.22530.1 to 8.0.0-alpha.1.22531.10][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.22530.1 to 8.0.0-alpha.1.22531.10][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22530.1 to 8.0.0-alpha.1.22531.10][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22530.1 to 8.0.0-alpha.1.22531.10][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22530.1 to 8.0.0-alpha.1.22531.10][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22530.1 to 8.0.0-alpha.1.22531.10][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22530.1 to 8.0.0-alpha.1.22531.10][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.22530.1 to 8.0.0-alpha.1.22531.10][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22530.1 to 8.0.0-alpha.1.22531.10][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22530.1 to 8.0.0-alpha.1.22531.10][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22530.1 to 8.0.0-alpha.1.22531.10][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22530.1 to 8.0.0-alpha.1.22531.10][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22530.1 to 8.0.0-alpha.1.22531.10][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22530.1 to 8.0.0-alpha.1.22531.10][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.22530.1 to 8.0.0-alpha.1.22531.10][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22530.1 to 8.0.0-alpha.1.22531.10][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22530.1 to 8.0.0-alpha.1.22531.10][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22530.1 to 8.0.0-alpha.1.22531.10][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22530.1 to 8.0.0-alpha.1.22531.10][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22530.1 to 8.0.0-alpha.1.22531.10][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22530.1 to 8.0.0-alpha.1.22531.10][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22530.1 to 8.0.0-alpha.1.22531.10][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/e6700ea...7d5efbb\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8084)","Url":"https://github.com/dotnet/winforms/pull/8084","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8084)"},{"Id":"1431319542","IsPullRequest":true,"CreatedAt":"2022-11-01T12:34:32","Actor":"dotnet-maestro[bot]","Number":"8083","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20221028.1\r\n- **Date Produced**: October 28, 2022 1:53:13 PM UTC\r\n- **Commit**: 6956787678e164e39ee646448e14353432d83c46\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.22524.5 to 8.0.0-beta.22528.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.22524.5 to 8.0.0-beta.22528.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.22524.5 to 8.0.0-beta.22528.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.22524.5 to 8.0.0-beta.22528.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.22524.5 to 8.0.0-beta.22528.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.22524.5 to 8.0.0-beta.22528.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/c5dd6a1...6956787\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8083)","Url":"https://github.com/dotnet/winforms/pull/8083","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#8083)"},{"Id":"1431272244","IsPullRequest":false,"CreatedAt":"2022-11-01T11:21:16","Actor":"bpradeep771","Number":"8082","RawContent":null,"Title":"Winforms Designer - Failed to launch the designer server process","State":"open","Body":"### Environment\n\nVisual Studio Professional 2019  - 16.11\n\n### .NET version\n\n.NetCore - 3.1\n\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\n\n_No response_\n\n### Issue description\n\nIn the Winforms project after using “Microsoft.Toolkit.Forms.UI.XamlHost” and setting Platforms is “X64; X86” in the Winforms Netcore project, unable to open the form designer.\r\n\r\nplease find my source code from the link - [Winforms_Uwp_App](https://drive.google.com/file/d/12xUSk4D5ZD7dp0b3kg4bcBSuEH3H4-29/view)\n\n### Steps to reproduce\n\nI have already reported to the Visual Studio developer community.\r\nplease find the discussion [here](https://developercommunity.visualstudio.com/t/Winforms-Failed-to-launch-the-designer-s/10100679).\r\nPlease find the video for more info - [video](https://user-images.githubusercontent.com/55428663/184504506-366a66be-cd6e-4312-bd68-bb0a9475db28.mp4)\n\n### Diagnostics\n\n_No response_","Url":"https://github.com/dotnet/winforms/issues/8082","RelatedDescription":"Open issue \"Winforms Designer - Failed to launch the designer server process\" (#8082)"},{"Id":"1428102615","IsPullRequest":true,"CreatedAt":"2022-11-01T05:15:49","Actor":"gpetrou","Number":"8067","RawContent":null,"Title":"Enable nullability in Help","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in Help.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8067)","Url":"https://github.com/dotnet/winforms/pull/8067","RelatedDescription":"Closed or merged PR \"Enable nullability in Help\" (#8067)"},{"Id":"1430585086","IsPullRequest":true,"CreatedAt":"2022-10-31T22:59:42","Actor":"Tanya-Solyanik","Number":"8081","RawContent":null,"Title":"Removed a duplicate WIN32_ERROR from  NativeMethods.txt ","State":"closed","Body":" Removed a duplicate instance of WIN32_ERROR line in NativeMethods.txt file.\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8081)","Url":"https://github.com/dotnet/winforms/pull/8081","RelatedDescription":"Closed or merged PR \"Removed a duplicate WIN32_ERROR from  NativeMethods.txt \" (#8081)"},{"Id":"1430208744","IsPullRequest":true,"CreatedAt":"2022-10-31T20:35:26","Actor":"lonitra","Number":"8078","RawContent":null,"Title":"Convert IOleControl Interface to Cswin32","State":"closed","Body":"- Convert structs `ACCEL` and `CONTROLINFO` to Cswin32\r\n- Convert methods `CreateAcceleratorTable` and `IsAccelerator` to Cswin32\r\n- general clean up\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8078)","Url":"https://github.com/dotnet/winforms/pull/8078","RelatedDescription":"Closed or merged PR \"Convert IOleControl Interface to Cswin32\" (#8078)"},{"Id":"1430239264","IsPullRequest":true,"CreatedAt":"2022-10-31T20:11:35","Actor":"gpetrou","Number":"8079","RawContent":null,"Title":"Enable nullability in HorizontalRowManager","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in HorizontalRowManager.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8079)","Url":"https://github.com/dotnet/winforms/pull/8079","RelatedDescription":"Closed or merged PR \"Enable nullability in HorizontalRowManager\" (#8079)"},{"Id":"1430276411","IsPullRequest":true,"CreatedAt":"2022-10-31T19:08:42","Actor":"JeremyKuhne","Number":"8080","RawContent":null,"Title":"Add a few clarifying comments to COM stuff","State":"closed","Body":"Document ComHelpers and ComScope.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8080)","Url":"https://github.com/dotnet/winforms/pull/8080","RelatedDescription":"Closed or merged PR \"Add a few clarifying comments to COM stuff\" (#8080)"},{"Id":"1430096301","IsPullRequest":true,"CreatedAt":"2022-10-31T16:50:28","Actor":"gpetrou","Number":"8075","RawContent":null,"Title":"Enable nullability in ToolStripContainerTypedControlCollection","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripContainerTypedControlCollection.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8075)","Url":"https://github.com/dotnet/winforms/pull/8075","RelatedDescription":"Closed or merged PR \"Enable nullability in ToolStripContainerTypedControlCollection\" (#8075)"},{"Id":"1429293518","IsPullRequest":true,"CreatedAt":"2022-10-31T16:49:19","Actor":"gpetrou","Number":"8073","RawContent":null,"Title":"Enable nullability in MultiPropertyDescriptorGridEntry","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in MultiPropertyDescriptorGridEntry.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8073)","Url":"https://github.com/dotnet/winforms/pull/8073","RelatedDescription":"Closed or merged PR \"Enable nullability in MultiPropertyDescriptorGridEntry\" (#8073)"},{"Id":"1429249095","IsPullRequest":true,"CreatedAt":"2022-10-31T16:48:22","Actor":"gpetrou","Number":"8071","RawContent":null,"Title":"Enable nullability in MultiSelectRootGridEntry","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in MultiSelectRootGridEntry.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8071)","Url":"https://github.com/dotnet/winforms/pull/8071","RelatedDescription":"Closed or merged PR \"Enable nullability in MultiSelectRootGridEntry\" (#8071)"},{"Id":"1430151242","IsPullRequest":false,"CreatedAt":"2022-10-31T16:43:44","Actor":"zydjohnHotmail","Number":"8077","RawContent":null,"Title":"How to fix the issue: \"The following controls were successfully added to the toolbox but are not enabled in the active designer\"","State":"open","Body":"### Environment\n\nVisual Studio 2022 (Version 17.3.6).\r\nOS: Windows 10 PRO (Version 21H2)\n\n### .NET version\n\n.NET 6.0\n\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\n\nYes. I can download and run its source in Visual Studio 2022 (the latest version).\r\nThe .csproj showed its target:\r\n    <TargetFrameworks>net5.0-windows;net40</TargetFrameworks>\r\n    <OutputType>Library</OutputType>\r\n\n\n### Issue description\n\nMy IDE: \r\nVisual Studio 2022 (Version 17.3.6).\r\nI want to port one custom control from this repo:\r\nhttps://github.com/dwmkerr/consolecontrol\r\nAccording to suggestions of the author, I simply import the custom control dll file:\r\nconsolecontrol.dll to toolbox in one C# WinForms app target .NET 6.0; actually, I also tried this with C# Winforms app target .NET 5.0.\r\nThe repo supported .NET 5.0, but if I install NUGET package: \r\nPM> Install-Package ConsoleControl -Version 1.3.0\r\nI got warning like: \r\nWarning\tNU1701\tPackage 'ConsoleControl 1.3.0' was restored using '.NETFramework,Version=v4.6.1, .NETFramework,Version=v4.6.2, .NETFramework,Version=v4.7, .NETFramework,Version=v4.7.1, .NETFramework,Version=v4.7.2, .NETFramework,Version=v4.8, .NETFramework,Version=v4.8.1' instead of the project target framework 'net6.0'. This package may not be fully compatible with your project.\r\n\r\nBut if I just add reference to consolecontrol.dll in one C# WinForms project, when I open Forms Designer, and tried to add a new tab in toolbox, and choose items for toolbox, I can see the following message:\r\nThe following controls were successfully added to the toolbox but are not enabled in the active designer.\r\nEven it seems not an error, but the result is: I can't see such item (custom control: consolecontrol) appear in toolbox, therefore, I can NOT drag and drop one onto Form1.\r\nPlease advise, how can I fix this issue: The following controls were successfully added to the toolbox but are not enabled in the active designer?\r\nThanks,\n\n### Steps to reproduce\n\nDownload file from:\r\nhttps://github.com/dwmkerr/consolecontrol.git\r\nUnzip it, and find consolecontrol.dll, then add reference to your WinForm project.\r\nTry to add it to Form Designer in Form1, inside toolbox, add new tab \"ConsoleControl\", then chosse items, browse to consolecontrol.dll file.\r\nThen click OK to add this custom control to toolbox in Form designer, you will see the information:\r\nThe following controls were successfully added to the toolbox but are not enabled in the active designer\n\n### Diagnostics\n\n_No response_","Url":"https://github.com/dotnet/winforms/issues/8077","RelatedDescription":"Open issue \"How to fix the issue: \"The following controls were successfully added to the toolbox but are not enabled in the active designer\"\" (#8077)"},{"Id":"1430122585","IsPullRequest":true,"CreatedAt":"2022-10-31T16:23:11","Actor":"gpetrou","Number":"8076","RawContent":null,"Title":"Enable nullability in DropDownHolder","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in DropDownHolder.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8076)","Url":"https://github.com/dotnet/winforms/pull/8076","RelatedDescription":"Open PR \"Enable nullability in DropDownHolder\" (#8076)"},{"Id":"1429732415","IsPullRequest":true,"CreatedAt":"2022-10-31T12:33:39","Actor":"dotnet-maestro[bot]","Number":"8074","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20221030.1\r\n- **Date Produced**: October 30, 2022 9:58:12 PM UTC\r\n- **Commit**: e6700ea21bbb17ca5058801259bc2d05957814d4\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/9ed32f4...e6700ea\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8074)","Url":"https://github.com/dotnet/winforms/pull/8074","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8074)"},{"Id":"1428097064","IsPullRequest":true,"CreatedAt":"2022-10-31T02:10:37","Actor":"gpetrou","Number":"8066","RawContent":null,"Title":"Enable nullability in GridToolTip","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in GridToolTip.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8066)","Url":"https://github.com/dotnet/winforms/pull/8066","RelatedDescription":"Closed or merged PR \"Enable nullability in GridToolTip\" (#8066)"},{"Id":"1428648911","IsPullRequest":true,"CreatedAt":"2022-10-31T01:55:20","Actor":"gpetrou","Number":"8068","RawContent":null,"Title":"Enable nullability in ToolStripNumericUpDownControl","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripNumericUpDownControl.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8068)","Url":"https://github.com/dotnet/winforms/pull/8068","RelatedDescription":"Closed or merged PR \"Enable nullability in ToolStripNumericUpDownControl\" (#8068)"},{"Id":"1428656152","IsPullRequest":true,"CreatedAt":"2022-10-31T01:54:45","Actor":"gpetrou","Number":"8069","RawContent":null,"Title":"Enable nullability in ToolStripPanelRowManager","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripPanelRowManager.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8069)","Url":"https://github.com/dotnet/winforms/pull/8069","RelatedDescription":"Closed or merged PR \"Enable nullability in ToolStripPanelRowManager\" (#8069)"},{"Id":"1428755925","IsPullRequest":true,"CreatedAt":"2022-10-30T12:33:05","Actor":"dotnet-maestro[bot]","Number":"8070","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20221029.1\r\n- **Date Produced**: October 29, 2022 6:40:48 PM UTC\r\n- **Commit**: 9ed32f4ab89b24b14ab83c5982cb728131a28f24\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/feb4bee...9ed32f4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8070)","Url":"https://github.com/dotnet/winforms/pull/8070","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8070)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-11-02T03:30:35.0838395Z","RunDurationInMilliseconds":530}