{"Data":{"GitHub":{"Issues":[{"Id":"1185555235","IsPullRequest":false,"CreatedAt":"2022-04-01T00:48:59","Actor":"runfoapp[bot]","Number":"6933","RawContent":null,"Title":"Flaky test: Splitter_OnSplitterMoved_Invoke_CallsSplitterMoved","State":"closed","Body":"<!-- runfo report start -->\r\nRunfo Tracking Issue: [system.windows.forms.tests.splittertests.splitter_onsplittermoved_invoke_callssplittermoved](https://runfo.azurewebsites.net/tracking/issue/315)\r\n|Build|Definition|Kind|Run Name|\r\n|---|---|---|---|\r\n|[1687371](https://dev.azure.com/dnceng/public/_build/results?buildId=1687371)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6904](https://github.com/dotnet/winforms/pull/6904)|Windows_x86-xunit|\r\n|[1687371](https://dev.azure.com/dnceng/public/_build/results?buildId=1687371)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6904](https://github.com/dotnet/winforms/pull/6904)|Windows_x86-xunit|\r\n|[1687371](https://dev.azure.com/dnceng/public/_build/results?buildId=1687371)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6904](https://github.com/dotnet/winforms/pull/6904)|Windows_x64-xunit|\r\n|[1687371](https://dev.azure.com/dnceng/public/_build/results?buildId=1687371)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6904](https://github.com/dotnet/winforms/pull/6904)|Windows_x64-xunit|\r\n|[1687371](https://dev.azure.com/dnceng/public/_build/results?buildId=1687371)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6904](https://github.com/dotnet/winforms/pull/6904)|Windows_arm64-xunit|\r\n|[1687371](https://dev.azure.com/dnceng/public/_build/results?buildId=1687371)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6904](https://github.com/dotnet/winforms/pull/6904)|Windows_arm64-xunit|\r\n|[1687371](https://dev.azure.com/dnceng/public/_build/results?buildId=1687371)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6904](https://github.com/dotnet/winforms/pull/6904)|Windows_x64-xunit|\r\n|[1687371](https://dev.azure.com/dnceng/public/_build/results?buildId=1687371)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6904](https://github.com/dotnet/winforms/pull/6904)|Windows_x64-xunit|\r\n|[1687371](https://dev.azure.com/dnceng/public/_build/results?buildId=1687371)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6904](https://github.com/dotnet/winforms/pull/6904)|Windows_x86-xunit|\r\n|[1687371](https://dev.azure.com/dnceng/public/_build/results?buildId=1687371)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6904](https://github.com/dotnet/winforms/pull/6904)|Windows_x86-xunit|\r\n\r\n\r\n\r\nBuild Result Summary\r\n|Day Hit Count|Week Hit Count|Month Hit Count|\r\n|---|---|---|\r\n|0|1|1|\r\n\r\n<!-- runfo report end -->\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6933","RelatedDescription":"Closed issue \"Flaky test: Splitter_OnSplitterMoved_Invoke_CallsSplitterMoved\" (#6933)"},{"Id":"1185556186","IsPullRequest":false,"CreatedAt":"2022-04-01T00:48:42","Actor":"runfoapp[bot]","Number":"6934","RawContent":null,"Title":"Flaky test: Splitter_OnSplitterMoving_Invoke_CallsSplitterMoving","State":"closed","Body":"<!-- runfo report start -->\r\nRunfo Tracking Issue: [system.windows.forms.tests.splittertests.splitter_onsplittermoving_invoke_callssplittermoving](https://runfo.azurewebsites.net/tracking/issue/316)\r\n|Build|Definition|Kind|Run Name|\r\n|---|---|---|---|\r\n|[1687371](https://dev.azure.com/dnceng/public/_build/results?buildId=1687371)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6904](https://github.com/dotnet/winforms/pull/6904)|Windows_x86-xunit|\r\n|[1687371](https://dev.azure.com/dnceng/public/_build/results?buildId=1687371)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6904](https://github.com/dotnet/winforms/pull/6904)|Windows_x86-xunit|\r\n|[1687371](https://dev.azure.com/dnceng/public/_build/results?buildId=1687371)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6904](https://github.com/dotnet/winforms/pull/6904)|Windows_x64-xunit|\r\n|[1687371](https://dev.azure.com/dnceng/public/_build/results?buildId=1687371)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6904](https://github.com/dotnet/winforms/pull/6904)|Windows_x64-xunit|\r\n|[1687371](https://dev.azure.com/dnceng/public/_build/results?buildId=1687371)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6904](https://github.com/dotnet/winforms/pull/6904)|Windows_arm64-xunit|\r\n|[1687371](https://dev.azure.com/dnceng/public/_build/results?buildId=1687371)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6904](https://github.com/dotnet/winforms/pull/6904)|Windows_arm64-xunit|\r\n|[1687371](https://dev.azure.com/dnceng/public/_build/results?buildId=1687371)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6904](https://github.com/dotnet/winforms/pull/6904)|Windows_x64-xunit|\r\n|[1687371](https://dev.azure.com/dnceng/public/_build/results?buildId=1687371)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6904](https://github.com/dotnet/winforms/pull/6904)|Windows_x64-xunit|\r\n|[1687371](https://dev.azure.com/dnceng/public/_build/results?buildId=1687371)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6904](https://github.com/dotnet/winforms/pull/6904)|Windows_x86-xunit|\r\n|[1687371](https://dev.azure.com/dnceng/public/_build/results?buildId=1687371)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6904](https://github.com/dotnet/winforms/pull/6904)|Windows_x86-xunit|\r\n\r\n\r\n\r\nBuild Result Summary\r\n|Day Hit Count|Week Hit Count|Month Hit Count|\r\n|---|---|---|\r\n|0|1|1|\r\n\r\n<!-- runfo report end -->\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6934","RelatedDescription":"Closed issue \"Flaky test: Splitter_OnSplitterMoving_Invoke_CallsSplitterMoving\" (#6934)"},{"Id":"1184430888","IsPullRequest":true,"CreatedAt":"2022-04-01T00:41:43","Actor":"RussKie","Number":"6925","RawContent":null,"Title":"Correctly retrieve the embedded resource","State":"closed","Body":"Resolves #6915\r\n\r\nThe regression was caused by the migration of types and resources from System.Drawing.Design to System.Windows.Forms.Design, and the resource is now getting embedded as `System.Windows.Forms.Design.colordlg.data` instead of `System.Drawing.Design.colordlg.data`.\r\n* .NET 6 version embeds the resource as follows:\r\n![image](https://user-images.githubusercontent.com/4403806/160717228-d0498625-dac0-4060-97d7-2778da94fd8d.png)\r\n* The .NET Framework version embeds it as:\r\n![image](https://user-images.githubusercontent.com/4403806/160717151-c35f64ff-92b2-48e5-8586-9e6800a7f566.png)\r\n\r\nThere are few ways of addressing this regression - update the `GetManifestResourceStream()` call and pass an updated resource name, or embed the resource under a different name. The latter felt a little more opaque from the maintenance perspective.\r\n\r\nI presume we missed this because:\r\n* we had no test coverage for this dialog as it can only be invoked via the `PropertyGrid` when editing a color, and it's not possible to invoke the dialog directly,\r\n* color editing is not believed to be a major use case in runtime scenarios.\r\n\r\n## Customer Impact\r\n\r\n- Customers will be able to use custom color editor again\r\n\r\n    **Actual Result:** an error dialog pops up:\r\n    ![image](https://user-images.githubusercontent.com/26474449/160323335-db7c0850-607b-4b92-9a2d-fa53801d046f.png)\r\n\r\n    **Fixed result:** Define color dialog pops up, following is the behavior in framework app\r\n    ![image](https://user-images.githubusercontent.com/26474449/160323646-21b348b5-b53e-4dff-bbd3-c855d72ddb4e.png)\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- manual tests\r\n- automated tests\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6925)","Url":"https://github.com/dotnet/winforms/pull/6925","RelatedDescription":"Closed or merged PR \"Correctly retrieve the embedded resource\" (#6925)"},{"Id":"1188485670","IsPullRequest":false,"CreatedAt":"2022-03-31T18:37:51","Actor":"Njoro007","Number":"6947","RawContent":null,"Title":"When UseWPF set True in a WinForms. Proj fails to recognize ApplicationConfiguration bootstrap code","State":"open","Body":"### .NET version\n\n6.0.3\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nWorked without any issues in NET 5 and Net Framework\n\n### Issue description\n\nIn a WinForms desktop application targeting .NET 6, the [UseWindowsForms] element in the .proj file is set to True, and a bootstrap ApplicationConfiguration.Initialize(); is generated and called from the startup file Program.\r\n\r\nNow I want to enable WPF by setting [EnableWPF] to True. When I do that and build I get the following error in the output log\r\n\r\n` Program.cs(13,13,13,37): error CS0103: The name 'ApplicationConfiguration' does not exist in the current context\r\n1>Done building project \"WinFormsApp1_s2dcxfug_wpftmp.csproj\" -- FAILED. `\r\n\r\n**My workaround for a net6 WinForm Project with WPF Enabled is editing the Program.CS to code below**\r\n`\r\n//ApplicationConfiguration.Initialize();\r\nApplication.SetHighDpiMode(HighDpiMode.SystemAware);\r\nApplication.EnableVisualStyles();\r\nApplication.SetCompatibleTextRenderingDefault(false);\r\nApplication.Run(new Form1());\r\n`\n\n### Steps to reproduce\n\n**To Reproduce**\r\n\r\n- Create a new Windows Forms project in VS 2022 targeting .NET 6.\r\n- Go to proj properties and check the Enable WPF for this project check box\r\n- Add a WPF window to the project\r\n- Build\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6947","RelatedDescription":"Open issue \"When UseWPF set True in a WinForms. Proj fails to recognize ApplicationConfiguration bootstrap code\" (#6947)"},{"Id":"1188392895","IsPullRequest":true,"CreatedAt":"2022-03-31T17:12:38","Actor":"ArtemTatarinov","Number":"6946","RawContent":null,"Title":"Fixing PropertyGrid memory leaks","State":"open","Body":"Fixes #6943\r\n\r\n## Proposed changes\r\n- Amount of leaked objects decreased from 595 to 39\r\n- Use the `UiaDisconnectProvider` method through the hierarchy of the classes to free objects held by accessibility tool\r\n- Only static comparers should be left at memory as amount of memory allocated for them isn't increasing after several recurrences of the repro steps described in issue\r\n\r\n**This PR requires further development:**\r\n- 39 objects are still left in memory, some of them are accessible objects. They should be tried to clean, except for the Comparers/Sorters which are most possibly are static system objects.\r\n- Quite possible that nullifying `_gridView` and other objects won't be necessary when all provider will be disconnected property\r\n- I've met a crash at the code line `Debug.Assert(result == 0)` for the result of disconnecting the third button of the `_viewSortButtons` collection if debugger is detached, and E_FAIL result if attached - it requires further investigation\r\n- There was a crash scenario at NetFx:  start AI, run internal test app, click \"Dialogs\" button, click \"Print dialog\" button, then \"Folder browser dialog\" - disconnecting `gridEntry.AccessibilityObject` at the `DisconnectChildren` method at the `PropertyGridView` class caused NRE. I couldn't reproduce this issue at the Core branch, but it's better to double check it.\r\n\r\n## Customer Impact\r\n- PropertyGrid memory will stop leaking\r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Screenshots\r\n\r\n### Before\r\n![image](https://user-images.githubusercontent.com/87859299/161106770-95acc204-9862-4e96-95b4-7477be4571a2.png)\r\n\r\n### After\r\n![image](https://user-images.githubusercontent.com/87859299/161106794-301eafc1-626d-407a-aa98-fd1e38ebeb3a.png)\r\n\r\n## Test methodology\r\n- Manual testing (_using WinDbg, see the screenshots above_)\r\n- CTI team\r\n\r\n## Test environment(s)\r\n- Microsoft Windows [Version 10.0.19043.1586]\r\n- .NET 7.0.0-preview.3.22159.12\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6946)","Url":"https://github.com/dotnet/winforms/pull/6946","RelatedDescription":"Open PR \"Fixing PropertyGrid memory leaks\" (#6946)"},{"Id":"1188313483","IsPullRequest":true,"CreatedAt":"2022-03-31T16:05:10","Actor":"gpetrou","Number":"6945","RawContent":null,"Title":"Enable nullability in ComboBox","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in ComboBox.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6945)","Url":"https://github.com/dotnet/winforms/pull/6945","RelatedDescription":"Open PR \"Enable nullability in ComboBox\" (#6945)"},{"Id":"1188304920","IsPullRequest":true,"CreatedAt":"2022-03-31T15:58:18","Actor":"gpetrou","Number":"6944","RawContent":null,"Title":"Enable nullability in CheckedIndexCollection","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in CheckedIndexCollection.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6944)","Url":"https://github.com/dotnet/winforms/pull/6944","RelatedDescription":"Open PR \"Enable nullability in CheckedIndexCollection\" (#6944)"},{"Id":"1188279899","IsPullRequest":false,"CreatedAt":"2022-03-31T15:39:38","Actor":"ArtemTatarinov","Number":"6943","RawContent":null,"Title":"PropertyGrid accessible objects are leaking in memory","State":"open","Body":"### .NET version\r\n\r\n7.0\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNo\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nNo\r\n\r\n### Issue description\r\n\r\n`PropertyGrid` accessible objects are left in memory after the `PropertyGrid` control instance was inspected with accessibility tool (like `Accessibility Insights` or `Inspect`) and the form with `PropertyGrid` is closed, garbage is collected, but accessibility tool is still opened.\r\n\r\nReport from WinDbg:\r\n![image](https://user-images.githubusercontent.com/87859299/161093704-221951bf-737d-4f52-a4d6-afb03a9c95a1.png)\r\n\r\n**Expected behavior:**\r\nAmount of the leaked objects should be minimized to the uncleanable static objects only.\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a parent form with two buttons: one will be opening a child form with the `PropertyGrid` (`SelectedObject` set to `this`) control and the other will collect the garbage.\r\n2. Press the second button to open the child form with `PropertyGrid`.\r\n3. Start the `Accessibility Insights` tools.\r\n4. Run automated checks for the `PropertyGrid` control using AI.\r\n5. Close the child form.\r\n6. Clear memory with the first button of the parent form.\r\n7. DON'T close the AI tool.\r\n8. Look for `PropertyGrid` accessible objects left in memory (using `WinDbg`, or `dotMemory`, or another suitable tool).","Url":"https://github.com/dotnet/winforms/issues/6943","RelatedDescription":"Open issue \"PropertyGrid accessible objects are leaking in memory\" (#6943)"},{"Id":"1188053740","IsPullRequest":false,"CreatedAt":"2022-03-31T13:08:35","Actor":"bairog","Number":"6942","RawContent":null,"Title":"Docs for WinForms Designer SDK were on a roadmap for the first quarter of 2022","State":"open","Body":"There is a breaking change difference in how Designers work in Framework and .NET, so neither is this a bug, nor is it supposed to work this way.\r\n\r\nTo create a Designer for VS and .NET, you would need to use the WinForms Designer SDK. The reason is (simplified), that the Designer needs to run in the context of the Form (or the UserControl), which is .NET and not Framework. But VS _is_ Framework. So, for the .NET Designer, there are two processes: The Client Process (Visual Studio, Framework) and a dedicated Server process (.NET) which is called the DesignToolsServer. So principally, and depending on what you need to do, you'd need to provide a NuGet which VS picks up, which holds the code for both the Server and the Client Process. And since the control and most part of the Designer logic is created in the Server process, anything Dialog-UI related needs to be marshalled from the Server process, which is not supposed to handle any dialogs due to potential dead lock concerns, back to the VS-Client.\r\n\r\nDocs for the SDK are in the making, they are on our roadmap for the first quarter of this year.\r\n\r\n_Originally posted by @KlausLoeffelmann in https://github.com/dotnet/winforms/issues/4451#issuecomment-1010264283_","Url":"https://github.com/dotnet/winforms/issues/6942","RelatedDescription":"Open issue \"Docs for WinForms Designer SDK were on a roadmap for the first quarter of 2022\" (#6942)"},{"Id":"1187979087","IsPullRequest":true,"CreatedAt":"2022-03-31T12:42:07","Actor":"dotnet-maestro[bot]","Number":"6941","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20220330.7\r\n- **Date Produced**: March 31, 2022 7:49:26 AM UTC\r\n- **Commit**: c0db07b3f3f093b5f4cd27e1f5e8aa54adad049d\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][1]\r\n  - **System.Text.Json**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][1]\r\n  - **System.CodeDom**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.4.22179.7 to 7.0.0-preview.4.22180.7][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/cbf3f9c...c0db07b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6941)","Url":"https://github.com/dotnet/winforms/pull/6941","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6941)"},{"Id":"1187790809","IsPullRequest":true,"CreatedAt":"2022-03-31T09:34:00","Actor":"SergeySmirnov-Akvelon","Number":"6940","RawContent":null,"Title":"Fixing issue with announcing expand/collapse action for TreeNode","State":"open","Body":"Fixes #6732\r\n\r\n## Proposed changes\r\n- The issue is reproduced due to the incorrect operation of the `RaiseAutomationPropertyChangedEvent` for the `TreeNode`. Under different conditions, the message may not be announced or announced twice.\r\n- Using `InternalRaiseAutomationNotification` helps to get around this issue, as it ensures that the message is called from .NET Core side, and not from the side of the native control.\r\n- Added `AnnouncementStopped` flag to avoid announcing `TreeNode` status message on bulk action (e.g. `ExpandAll` method)\r\n- Added unit tests\r\n\r\n## Customer Impact\r\n**Before fix:**\r\n![154913766-afd3b6f7-cc49-41f1-9e1e-511b52930d85](https://user-images.githubusercontent.com/23376742/161024611-7014de42-c467-449f-8a71-4488fbd11ddb.gif)\r\n\r\n**After fix:**\r\n![PR-6940](https://user-images.githubusercontent.com/23376742/161031306-9ddf65f1-66ca-4f60-894e-6c7dbbcc2bfc.gif)\r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- CTI team\r\n- Unit tests\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n- Narrator\r\n- JAWS\r\n- NVDA\r\n\r\n ## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19044.1526]\r\n- .NET Core SDK: 7.0.0-preview.4.22179.1\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6940)","Url":"https://github.com/dotnet/winforms/pull/6940","RelatedDescription":"Open PR \"Fixing issue with announcing expand/collapse action for TreeNode\" (#6940)"},{"Id":"1186570950","IsPullRequest":false,"CreatedAt":"2022-03-30T14:43:23","Actor":"coderb","Number":"6939","RawContent":null,"Title":"Feature Request: Allow wildcards in the middle of DataView.RowFilter","State":"open","Body":"### Is your feature request related to a problem? Please describe\n\n`DataView.RowFilter` does not allow a filter string with wildcards in the middle, eg `Name like '%JOHN%SMITH%'` is invalid.  This is documented behavior.\r\n\r\nIt would obviously be useful to allow these types of filter strings.  Perhaps they were excluded due to implementation difficulty?  It would seem like an easy to code solution could translate the filter string into a `Regex`  to perform the filter matching.\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.data.datacolumn.expression?view=net-6.0#system-data-datacolumn-expression\n\n### Describe the solution you'd like and alternatives you've considered\n\nNo API changes required, simply implement and update the documentation.\n\n### Will this feature affect UI controls?\n\nN/A","Url":"https://github.com/dotnet/winforms/issues/6939","RelatedDescription":"Open issue \"Feature Request: Allow wildcards in the middle of DataView.RowFilter\" (#6939)"},{"Id":"1186366141","IsPullRequest":true,"CreatedAt":"2022-03-30T12:52:10","Actor":"dotnet-maestro[bot]","Number":"6938","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20220329.7\r\n- **Date Produced**: March 30, 2022 6:58:51 AM UTC\r\n- **Commit**: cbf3f9c43649035f59e626792f82e7b579c44865\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][1]\r\n  - **System.Text.Json**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][1]\r\n  - **System.CodeDom**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.4.22179.1 to 7.0.0-preview.4.22179.7][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/14e6a41...cbf3f9c\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6938)","Url":"https://github.com/dotnet/winforms/pull/6938","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6938)"},{"Id":"1186365069","IsPullRequest":true,"CreatedAt":"2022-03-30T12:45:57","Actor":"dotnet-maestro[bot]","Number":"6937","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20220329.1\r\n- **Date Produced**: March 29, 2022 10:42:41 AM UTC\r\n- **Commit**: 1527dc867ccb652def4c0f57fbd2ebbed3a94019\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.22171.2 to 7.0.0-beta.22179.1][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22171.2 to 7.0.0-beta.22179.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.22171.2 to 7.0.0-beta.22179.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.22171.2 to 7.0.0-beta.22179.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.22171.2 to 7.0.0-beta.22179.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22171.2 to 7.0.0-beta.22179.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/c8a9529...1527dc8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6937)","Url":"https://github.com/dotnet/winforms/pull/6937","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6937)"},{"Id":"1186214735","IsPullRequest":false,"CreatedAt":"2022-03-30T10:12:40","Actor":"SergeySmirnov-Akvelon","Number":"6936","RawContent":null,"Title":"The narrator announces twice with a message that the TreeNode is collapsed/expanded","State":"open","Body":"### .NET version\n\n7.0.0-preview.4.22178.1\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\nThe narrator announces twice with a message that the `TreeNode` is`Collapsed`/`Expanded`\n\n### Steps to reproduce\n\n1. Create a `Form` with a `TreeView`.\r\n2. Add multiple `TreeNodes` to the `TreeView`.\r\n3. Add multiple `TreeNodes` to the first `TreeNode`.\r\n4. Run the application.\r\n5. Run the `Narrator`.\r\n6. Collapse/Expand first `TreeNode`.\r\n![TreeNodeExpandCollapse](https://user-images.githubusercontent.com/23376742/160808015-9a04ef8f-526f-44a5-9001-1e2b0db1f35b.gif)\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6936","RelatedDescription":"Open issue \"The narrator announces twice with a message that the TreeNode is collapsed/expanded\" (#6936)"},{"Id":"1185902630","IsPullRequest":true,"CreatedAt":"2022-03-30T05:27:55","Actor":"gpetrou","Number":"6935","RawContent":null,"Title":"Enable nullability in classes that inherit from Control.ControlCollection","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in classes that inherit from Control.ControlCollection.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6935)","Url":"https://github.com/dotnet/winforms/pull/6935","RelatedDescription":"Open PR \"Enable nullability in classes that inherit from Control.ControlCollection\" (#6935)"},{"Id":"1185199313","IsPullRequest":true,"CreatedAt":"2022-03-30T00:28:46","Actor":"gpetrou","Number":"6932","RawContent":null,"Title":"Enable nullability in IconComparer","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in IconComparer.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6932)","Url":"https://github.com/dotnet/winforms/pull/6932","RelatedDescription":"Closed or merged PR \"Enable nullability in IconComparer\" (#6932)"},{"Id":"1184971206","IsPullRequest":true,"CreatedAt":"2022-03-29T23:40:23","Actor":"gpetrou","Number":"6931","RawContent":null,"Title":"Enable nullability in TextBoxBase","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in TextBoxBase.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6931)","Url":"https://github.com/dotnet/winforms/pull/6931","RelatedDescription":"Closed or merged PR \"Enable nullability in TextBoxBase\" (#6931)"},{"Id":"1184764818","IsPullRequest":true,"CreatedAt":"2022-03-29T23:29:15","Actor":"dotnet-maestro[bot]","Number":"6929","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20220329.1\r\n- **Date Produced**: March 29, 2022 9:51:19 AM UTC\r\n- **Commit**: 14e6a418d15ed3fe4d784b55bddbf582733b2b1d\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.4.22178.1 to 7.0.0-preview.4.22179.1][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-preview.4.22178.1 to 7.0.0-preview.4.22179.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-preview.4.22178.1 to 7.0.0-preview.4.22179.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-preview.4.22178.1 to 7.0.0-preview.4.22179.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.4.22178.1 to 7.0.0-preview.4.22179.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-preview.4.22178.1 to 7.0.0-preview.4.22179.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.4.22178.1 to 7.0.0-preview.4.22179.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.4.22178.1 to 7.0.0-preview.4.22179.1][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.4.22178.1 to 7.0.0-preview.4.22179.1][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.4.22178.1 to 7.0.0-preview.4.22179.1][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.4.22178.1 to 7.0.0-preview.4.22179.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-preview.4.22178.1 to 7.0.0-preview.4.22179.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.4.22178.1 to 7.0.0-preview.4.22179.1][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.4.22178.1 to 7.0.0-preview.4.22179.1][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.4.22178.1 to 7.0.0-preview.4.22179.1][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-preview.4.22178.1 to 7.0.0-preview.4.22179.1][1]\r\n  - **System.Text.Json**: [from 7.0.0-preview.4.22178.1 to 7.0.0-preview.4.22179.1][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-preview.4.22178.1 to 7.0.0-preview.4.22179.1][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.4.22178.1 to 7.0.0-preview.4.22179.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.4.22178.1 to 7.0.0-preview.4.22179.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-preview.4.22178.1 to 7.0.0-preview.4.22179.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-preview.4.22178.1 to 7.0.0-preview.4.22179.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.4.22178.1 to 7.0.0-preview.4.22179.1][1]\r\n  - **System.CodeDom**: [from 7.0.0-preview.4.22178.1 to 7.0.0-preview.4.22179.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.4.22178.1 to 7.0.0-preview.4.22179.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.4.22178.1 to 7.0.0-preview.4.22179.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-preview.4.22178.1 to 7.0.0-preview.4.22179.1][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-preview.4.22178.1 to 7.0.0-preview.4.22179.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.4.22178.1 to 7.0.0-preview.4.22179.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.4.22178.1 to 7.0.0-preview.4.22179.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/bd43f55...14e6a41\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6929)","Url":"https://github.com/dotnet/winforms/pull/6929","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6929)"},{"Id":"1184864299","IsPullRequest":false,"CreatedAt":"2022-03-29T13:21:12","Actor":"isadkvc","Number":"6930","RawContent":null,"Title":"DataGridView unshare rows in VirtualMode despite all conditions to prevent it are met.","State":"open","Body":"### .NET version\n\n6.0.201\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nTested with .NET Framework 4.6.1, same issue.\n\n### Issue description\n\nWhen creating `DataGridView` and setting `VirtualMode` to `true` it is not possible to prevent rows from becoming unshared.\r\n\r\nAs far as i see, i did everything that is described in this [article](https://docs.microsoft.com/en-us/dotnet/desktop/winforms/controls/how-to-implement-virtual-mode-in-the-windows-forms-datagridview-control?view=netframeworkdesktop-4.8) to prevent rows becoming unshared, but no luck. This article is not updated for .NET Core or later.\r\n\r\nPlease take a look at the video, rows becoming unshared on row (cell) select (in 4.6.1 same behavior) but in 6.0.2 it also for some reason incrementally unshare all rows from 0 to the end in inconsistent manner (sometimes it won't start it unless row changed with arrow keys or some other woodoo)\r\nhttps://user-images.githubusercontent.com/102589197/160618007-a6077a18-8869-4388-9cbd-52ea604f4fec.mp4\r\n\r\n\n\n### Steps to reproduce\n\nCode below is not exactly what i'm trying to achieve, it is a result of experiments to see if i can solve this issue.\r\nMy goal is to display large set of data using virtual mode without unsharing rows.\r\n\r\n```cs\r\nnamespace WinFormsApp1;\r\n\r\ninternal static class Program\r\n{\r\n    [STAThread]\r\n    static void Main()\r\n    {\r\n        ApplicationConfiguration.Initialize();\r\n        Application.Run(new Form1());\r\n    }\r\n}\r\n\r\npublic partial class Form1 : Form\r\n{\r\n    public Form1()\r\n    {\r\n        InitializeComponent();\r\n\r\n        grid.ReadOnly = true;\r\n        grid.AllowUserToResizeColumns = false;\r\n        grid.AllowUserToResizeRows = false;\r\n        grid.ShowCellToolTips = false;\r\n        grid.Columns.Add(new DataGridViewColumn(new DataGridViewTextBoxCell()) { HeaderText = \"One\", Name = \"c_one1\" });\r\n        grid.Columns.Add(new DataGridViewColumn(new DataGridViewTextBoxCell()) { HeaderText = \"Two\", Name = \"c_one2\" });\r\n        grid.Columns.Add(new DataGridViewColumn(new DataGridViewTextBoxCell()) { HeaderText = \"Three\", Name = \"c_one3\" });\r\n        grid.Columns.Add(new DataGridViewColumn(new DataGridViewTextBoxCell()) { HeaderText = \"Four\", Name = \"c_one4\" });\r\n        grid.Columns.Add(new DataGridViewColumn(new DataGridViewTextBoxCell()) { HeaderText = \"Five\", Name = \"c_one5\" });\r\n        grid.VirtualMode = true;\r\n        grid.EnableHeadersVisualStyles = false;\r\n        grid.SelectionMode = DataGridViewSelectionMode.FullRowSelect;\r\n        grid.RowHeadersVisible = false;\r\n        grid.MultiSelect = false;\r\n        grid.ColumnHeadersVisible = false;\r\n        grid.RowUnshared += Grid_RowUnshared;\r\n        grid.CellValueNeeded += Grid_CellValueNeeded;\r\n        grid.RowCount = 1000000;\r\n    }\r\n\r\n    private void Grid_CellValueNeeded(object sender, DataGridViewCellValueEventArgs e)\r\n    {\r\n        e.Value = e.RowIndex.ToString();\r\n    }\r\n\r\n    private void Grid_RowUnshared(object sender, DataGridViewRowEventArgs e)\r\n    {\r\n        tb.AppendText($\"Row {e.Row.Index} unshared\" + Environment.NewLine);\r\n    }\r\n\r\n    #region Designer\r\n    private System.ComponentModel.IContainer components = null;\r\n    protected override void Dispose(bool disposing)\r\n    {\r\n        if (disposing && (components != null))\r\n            components.Dispose();\r\n        base.Dispose(disposing);\r\n    }\r\n\r\n    private void InitializeComponent()\r\n    {\r\n        this.grid = new System.Windows.Forms.DataGridView();\r\n        ((System.ComponentModel.ISupportInitialize)(this.grid)).BeginInit();\r\n        this.SuspendLayout();\r\n        // \r\n        // grid\r\n        // \r\n        this.grid.ColumnHeadersHeightSizeMode = System.Windows.Forms.DataGridViewColumnHeadersHeightSizeMode.AutoSize;\r\n        this.grid.Location = new System.Drawing.Point(22, 12);\r\n        this.grid.Name = \"grid\";\r\n        this.grid.RowTemplate.Height = 25;\r\n        this.grid.Size = new System.Drawing.Size(534, 412);\r\n        this.grid.TabIndex = 0;\r\n        // \r\n        // Form1\r\n        // \r\n        this.AutoScaleDimensions = new System.Drawing.SizeF(7F, 15F);\r\n        this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;\r\n        this.ClientSize = new System.Drawing.Size(800, 450);\r\n        this.Controls.Add(this.grid);\r\n        this.Name = \"Form1\";\r\n        this.Text = \"Form1\";\r\n        //textbox\r\n        tb = new TextBox();\r\n        tb.Size = new Size(200, 412);\r\n        tb.Location = new Point(22 + 536, 12);\r\n        tb.Multiline = true;\r\n        Controls.Add(tb);\r\n\r\n        ((System.ComponentModel.ISupportInitialize)(this.grid)).EndInit();\r\n        this.ResumeLayout(false);\r\n    }\r\n\r\n    private DataGridView grid;\r\n    private TextBox tb;\r\n    #endregion    \r\n}\r\n\r\n```","Url":"https://github.com/dotnet/winforms/issues/6930","RelatedDescription":"Open issue \"DataGridView unshare rows in VirtualMode despite all conditions to prevent it are met.\" (#6930)"},{"Id":"1184651260","IsPullRequest":false,"CreatedAt":"2022-03-29T10:29:27","Actor":"RussKie","Number":"6928","RawContent":null,"Title":"`GetDocFiles` may run more than once","State":"open","Body":"`GetDocFiles` may run more than once:\r\nhttps://github.com/dotnet/winforms/blob/725161305d1c0fe9a88914ae81466dc79dad3f38/eng/packageContent.targets#L23\r\n\r\nThis may cause build failures due to a race condition, e.g., [this build](https://dev.azure.com/dnceng/public/_build/results?buildId=1679927&view=results):\r\n```\r\ndotnet-install: Installation finished\r\n  Determining projects to restore...\r\n  Determining projects to restore...\r\n  Determining projects to restore...\r\n  Restored D:\\a\\_work\\1\\s\\src\\System.Windows.Forms\\tests\\UnitTests\\WindowsFormsTests\\WindowsFormsTests.proj (in 7.91 sec).\r\n  Restored D:\\a\\_work\\1\\s\\src\\System.Windows.Forms\\tests\\InteropTests\\NativeTests\\NativeTests.proj (in 7.65 sec).\r\nD:\\a\\_work\\1\\s\\eng\\packageContent.targets(55,5): error MSB3026: Could not copy \"D:\\a\\_work\\1\\s\\.packages\\microsoft.private.intellisense\\7.0.0-preview-20220316.2\\IntellisenseFiles\\windowsdesktop\\1033\\Accessibility.xml\" to \"D:\\a\\_work\\1\\s\\artifacts\\bin\\docs\\Accessibility.xml\". Beginning retry 1 in 1000ms. The process cannot access the file 'D:\\a\\_work\\1\\s\\artifacts\\bin\\docs\\Accessibility.xml' because it is being used by another process.  [D:\\a\\_work\\1\\s\\src\\System.Windows.Forms\\tests\\InteropTests\\NativeTests\\NativeTests.proj]\r\n##[error]eng\\packageContent.targets(55,5): error MSB3026: (NETCORE_ENGINEERING_TELEMETRY=Restore) Could not copy \"D:\\a\\_work\\1\\s\\.packages\\microsoft.private.intellisense\\7.0.0-preview-20220316.2\\IntellisenseFiles\\windowsdesktop\\1033\\Accessibility.xml\" to \"D:\\a\\_work\\1\\s\\artifacts\\bin\\docs\\Accessibility.xml\". Beginning retry 1 in 1000ms. The process cannot access the file 'D:\\a\\_work\\1\\s\\artifacts\\bin\\docs\\Accessibility.xml' because it is being used by another process. \r\nD:\\a\\_work\\1\\s\\eng\\packageContent.targets(55,5): error MSB3026: Could not copy \"D:\\a\\_work\\1\\s\\.packages\\microsoft.private.intellisense\\7.0.0-preview-20220316.2\\IntellisenseFiles\\windowsdesktop\\1033\\Accessibility.xml\" to \"D:\\a\\_work\\1\\s\\artifacts\\bin\\docs\\Accessibility.xml\". Beginning retry 1 in 1000ms. The process cannot access the file 'D:\\a\\_work\\1\\s\\artifacts\\bin\\docs\\Accessibility.xml' because it is being used by another process.  [D:\\a\\_work\\1\\s\\src\\System.Windows.Forms\\tests\\InteropTests\\NativeTests\\NativeTests.proj]\r\n##[error]eng\\packageContent.targets(55,5): error MSB3026: (NETCORE_ENGINEERING_TELEMETRY=Restore) Could not copy \"D:\\a\\_work\\1\\s\\.packages\\microsoft.private.intellisense\\7.0.0-preview-20220316.2\\IntellisenseFiles\\windowsdesktop\\1033\\Accessibility.xml\" to \"D:\\a\\_work\\1\\s\\artifacts\\bin\\docs\\Accessibility.xml\". Beginning retry 1 in 1000ms. The process cannot access the file 'D:\\a\\_work\\1\\s\\artifacts\\bin\\docs\\Accessibility.xml' because it is being used by another process. \r\n```\r\n\r\n[BuildSrc-x86.zip](https://github.com/dotnet/winforms/files/8370456/BuildSrc-x86.zip)\r\n\r\n/cc: @singhashish-wpf for visibility","Url":"https://github.com/dotnet/winforms/issues/6928","RelatedDescription":"Open issue \"`GetDocFiles` may run more than once\" (#6928)"},{"Id":"1184337127","IsPullRequest":true,"CreatedAt":"2022-03-29T09:34:37","Actor":"gpetrou","Number":"6924","RawContent":null,"Title":"Enable nullability in FlowLayoutPanel","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in FlowLayoutPanel.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6924)","Url":"https://github.com/dotnet/winforms/pull/6924","RelatedDescription":"Closed or merged PR \"Enable nullability in FlowLayoutPanel\" (#6924)"},{"Id":"1184577322","IsPullRequest":true,"CreatedAt":"2022-03-29T09:30:44","Actor":"RussKie","Number":"6927","RawContent":null,"Title":"Servicing: Correctly retrieve the embedded resource ","State":"open","Body":"Resolves #6915\r\n\r\nThe regression was caused by the migration of types and resources from System.Drawing.Design to System.Windows.Forms.Design, and the resource is now getting embedded as `System.Windows.Forms.Design.colordlg.data` instead of `System.Drawing.Design.colordlg.data`.\r\n* .NET 6 version embeds the resource as follows:\r\n![image](https://user-images.githubusercontent.com/4403806/160717228-d0498625-dac0-4060-97d7-2778da94fd8d.png)\r\n* The .NET Framework version embeds it as:\r\n![image](https://user-images.githubusercontent.com/4403806/160717151-c35f64ff-92b2-48e5-8586-9e6800a7f566.png)\r\n\r\nThere are few ways of addressing this regression - update the `GetManifestResourceStream()` call and pass an updated resource name, or embed the resource under a different name. The latter felt a little more opaque from the maintenance perspective.\r\n\r\nI presume we missed this because:\r\n* we had no test coverage for this dialog as it can only be invoked via the `PropertyGrid` when editing a color, and it's not possible to invoke the dialog directly,\r\n* color editing is not believed to be a major use case in runtime scenarios.\r\n\r\n## Customer Impact\r\n\r\n- Customers will be able to use custom color editor again\r\n\r\n    **Actual Result:** an error dialog pops up:\r\n    ![image](https://user-images.githubusercontent.com/26474449/160323335-db7c0850-607b-4b92-9a2d-fa53801d046f.png)\r\n\r\n    **Fixed result:** Define color dialog pops up, following is the behavior in framework app\r\n    ![image](https://user-images.githubusercontent.com/26474449/160323646-21b348b5-b53e-4dff-bbd3-c855d72ddb4e.png)\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- manual tests\r\n- automated tests\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6927)","Url":"https://github.com/dotnet/winforms/pull/6927","RelatedDescription":"Open PR \"Servicing: Correctly retrieve the embedded resource \" (#6927)"},{"Id":"1184562463","IsPullRequest":false,"CreatedAt":"2022-03-29T09:18:31","Actor":"runfoapp[bot]","Number":"6926","RawContent":null,"Title":"Flaky test DataGridView_OnColumnHeadersHeightChanged_InvokeWithHandle_CallsColumnHeadersHeightChanged","State":"open","Body":"<!-- runfo report start -->\r\nRunfo Tracking Issue: [Flay tests: CallsColumnHeadersHeightChanged](https://runfo.azurewebsites.net/tracking/issue/310)\r\n|Build|Definition|Kind|Run Name|\r\n|---|---|---|---|\r\n|[1692369](https://dev.azure.com/dnceng/public/_build/results?buildId=1692369)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6940](https://github.com/dotnet/winforms/pull/6940)|Windows_arm64-xunit|\r\n|[1692369](https://dev.azure.com/dnceng/public/_build/results?buildId=1692369)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6940](https://github.com/dotnet/winforms/pull/6940)|Windows_arm64-xunit|\r\n|[1689294](https://dev.azure.com/dnceng/public/_build/results?buildId=1689294)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|Rolling|Windows_x86-xunit|\r\n|[1689294](https://dev.azure.com/dnceng/public/_build/results?buildId=1689294)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|Rolling|Windows_x86-xunit|\r\n|[1688490](https://dev.azure.com/dnceng/public/_build/results?buildId=1688490)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6932](https://github.com/dotnet/winforms/pull/6932)|Windows_x86-xunit|\r\n|[1688490](https://dev.azure.com/dnceng/public/_build/results?buildId=1688490)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6932](https://github.com/dotnet/winforms/pull/6932)|Windows_x86-xunit|\r\n|[1688093](https://dev.azure.com/dnceng/public/_build/results?buildId=1688093)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6923](https://github.com/dotnet/winforms/pull/6923)|Windows_x86-xunit|\r\n|[1688093](https://dev.azure.com/dnceng/public/_build/results?buildId=1688093)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6923](https://github.com/dotnet/winforms/pull/6923)|Windows_x86-xunit|\r\n|[1687909](https://dev.azure.com/dnceng/public/_build/results?buildId=1687909)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6929](https://github.com/dotnet/winforms/pull/6929)|Windows_x86-xunit|\r\n|[1687909](https://dev.azure.com/dnceng/public/_build/results?buildId=1687909)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6929](https://github.com/dotnet/winforms/pull/6929)|Windows_x86-xunit|\r\n|[1687592](https://dev.azure.com/dnceng/public/_build/results?buildId=1687592)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6925](https://github.com/dotnet/winforms/pull/6925)|Windows_x86-xunit|\r\n|[1687592](https://dev.azure.com/dnceng/public/_build/results?buildId=1687592)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6925](https://github.com/dotnet/winforms/pull/6925)|Windows_x86-xunit|\r\n|[1687452](https://dev.azure.com/dnceng/public/_build/results?buildId=1687452)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6923](https://github.com/dotnet/winforms/pull/6923)|Windows_arm64-xunit|\r\n|[1687452](https://dev.azure.com/dnceng/public/_build/results?buildId=1687452)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6923](https://github.com/dotnet/winforms/pull/6923)|Windows_arm64-xunit|\r\n|[1685215](https://dev.azure.com/dnceng/public/_build/results?buildId=1685215)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6920](https://github.com/dotnet/winforms/pull/6920)|Windows_x64-xunit|\r\n|[1685215](https://dev.azure.com/dnceng/public/_build/results?buildId=1685215)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6920](https://github.com/dotnet/winforms/pull/6920)|Windows_x64-xunit|\r\n|[1683773](https://dev.azure.com/dnceng/public/_build/results?buildId=1683773)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|Rolling|Windows_arm64-xunit|\r\n|[1683773](https://dev.azure.com/dnceng/public/_build/results?buildId=1683773)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|Rolling|Windows_arm64-xunit|\r\n|[1683491](https://dev.azure.com/dnceng/public/_build/results?buildId=1683491)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6892](https://github.com/dotnet/winforms/pull/6892)|Windows_arm64-xunit|\r\n|[1683491](https://dev.azure.com/dnceng/public/_build/results?buildId=1683491)|[dotnet-winforms CI](https://dnceng.visualstudio.com/public/_build?definitionId=267)|[PR 6892](https://github.com/dotnet/winforms/pull/6892)|Windows_arm64-xunit|\r\n\r\n\r\n\r\nBuild Result Summary\r\n|Day Hit Count|Week Hit Count|Month Hit Count|\r\n|---|---|---|\r\n|1|10|10|\r\n\r\n<!-- runfo report end -->\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6926","RelatedDescription":"Open issue \"Flaky test DataGridView_OnColumnHeadersHeightChanged_InvokeWithHandle_CallsColumnHeadersHeightChanged\" (#6926)"},{"Id":"1184304382","IsPullRequest":true,"CreatedAt":"2022-03-29T04:55:12","Actor":"gpetrou","Number":"6923","RawContent":null,"Title":"Enable nullability in KeyboardToolTipStateMachine","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in KeyboardToolTipStateMachine.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6923)","Url":"https://github.com/dotnet/winforms/pull/6923","RelatedDescription":"Open PR \"Enable nullability in KeyboardToolTipStateMachine\" (#6923)"},{"Id":"1182918884","IsPullRequest":true,"CreatedAt":"2022-03-29T01:51:41","Actor":"gpetrou","Number":"6918","RawContent":null,"Title":"Enable nullability in RadioButton","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in RadioButton.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6918)","Url":"https://github.com/dotnet/winforms/pull/6918","RelatedDescription":"Closed or merged PR \"Enable nullability in RadioButton\" (#6918)"},{"Id":"1184129061","IsPullRequest":false,"CreatedAt":"2022-03-28T21:18:41","Actor":"yuvalrakavy","Number":"6922","RawContent":null,"Title":"ListBox.IndexFromPoint returns incorrect result in case of no match","State":"open","Body":"### Description\n\nIt should return ListBox.NoMatches (-1) and instead it returns 0xffff (16 bits)\n\n### Reproduction Steps\n\nCreate an owner draw listbox trap mouse event and call IndexFromPoint on a point which is not on any item\r\n\n\n### Expected behavior\n\nFunction should return ListBox.NoMatches (int -1)\n\n### Actual behavior\n\nThe return value is 65535.\r\n\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\nCheck that the returned index is less than ListBox.Items.Count\r\n\n\n### Configuration\n\n.NET 6 on Windows 10 (64 bits)\r\n\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/winforms/issues/6922","RelatedDescription":"Open issue \"ListBox.IndexFromPoint returns incorrect result in case of no match\" (#6922)"},{"Id":"1183339962","IsPullRequest":true,"CreatedAt":"2022-03-28T12:47:41","Actor":"dotnet-maestro[bot]","Number":"6921","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20220328.1\r\n- **Date Produced**: March 28, 2022 10:53:24 AM UTC\r\n- **Commit**: bd43f55230d533af326e727366f61cfd3ed0e050\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.4.22176.3 to 7.0.0-preview.4.22178.1][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-preview.4.22176.3 to 7.0.0-preview.4.22178.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-preview.4.22176.3 to 7.0.0-preview.4.22178.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-preview.4.22176.3 to 7.0.0-preview.4.22178.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.4.22176.3 to 7.0.0-preview.4.22178.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-preview.4.22176.3 to 7.0.0-preview.4.22178.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.4.22176.3 to 7.0.0-preview.4.22178.1][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.4.22176.3 to 7.0.0-preview.4.22178.1][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.4.22176.3 to 7.0.0-preview.4.22178.1][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.4.22176.3 to 7.0.0-preview.4.22178.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-preview.4.22176.3 to 7.0.0-preview.4.22178.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.4.22176.3 to 7.0.0-preview.4.22178.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.4.22176.3 to 7.0.0-preview.4.22178.1][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.4.22176.3 to 7.0.0-preview.4.22178.1][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-preview.4.22176.3 to 7.0.0-preview.4.22178.1][1]\r\n  - **System.Text.Json**: [from 7.0.0-preview.4.22176.3 to 7.0.0-preview.4.22178.1][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-preview.4.22176.3 to 7.0.0-preview.4.22178.1][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.4.22176.3 to 7.0.0-preview.4.22178.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.4.22176.3 to 7.0.0-preview.4.22178.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-preview.4.22176.3 to 7.0.0-preview.4.22178.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-preview.4.22176.3 to 7.0.0-preview.4.22178.1][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.4.22176.3 to 7.0.0-preview.4.22178.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.4.22176.3 to 7.0.0-preview.4.22178.1][1]\r\n  - **System.CodeDom**: [from 7.0.0-preview.4.22176.3 to 7.0.0-preview.4.22178.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.4.22176.3 to 7.0.0-preview.4.22178.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.4.22176.3 to 7.0.0-preview.4.22178.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-preview.4.22176.3 to 7.0.0-preview.4.22178.1][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-preview.4.22176.3 to 7.0.0-preview.4.22178.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.4.22176.3 to 7.0.0-preview.4.22178.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.4.22176.3 to 7.0.0-preview.4.22178.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/20761d0...bd43f55\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6921)","Url":"https://github.com/dotnet/winforms/pull/6921","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6921)"},{"Id":"1183098074","IsPullRequest":true,"CreatedAt":"2022-03-28T08:44:50","Actor":"SergeySmirnov-Akvelon","Number":"6920","RawContent":null,"Title":"Fixing ToolStripScrollBtton display issue","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #6652\r\n\r\n## Proposed changes\r\n- The issue is reproduced because we don't have support for `ToolStripScrollButton` accessibility objects in the .NET Core.\r\n- Added `StickyLabelAccessibleObject` for `ToolStripScrollButton`.\r\n- Added support for `StickyLabelAccessibleObject` by other `ToolStrip` accessibility objects.\r\n- Added unit tests.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n**Before fix:**\r\n![image](https://user-images.githubusercontent.com/23376742/160356389-dd883d71-9373-4af7-ac7c-002d385d6352.png)\r\n\r\n**After fix:**\r\n![image](https://user-images.githubusercontent.com/23376742/160359319-5c0f90e3-cca3-4df6-9dae-da31667ab8f6.png)\r\n\r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n- Minimal\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- Unit tests\r\n- CTI team\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n- Inspect\r\n- Accessibility Insights\r\n- Narrator\r\n- NVDA\r\n- JAWS\r\n \r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19044.1526]\r\n- .NET Core SDK: 7.0.0-preview.4.22174.1\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6920)","Url":"https://github.com/dotnet/winforms/pull/6920","RelatedDescription":"Open PR \"Fixing ToolStripScrollBtton display issue\" (#6920)"},{"Id":"1182952962","IsPullRequest":false,"CreatedAt":"2022-03-28T06:21:40","Actor":"generatorXu","Number":"6919","RawContent":null,"Title":"ToolboxSnapDragDropEventArgs is not implemented.","State":"open","Body":"### .NET version\n\n6.0\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nno\n\n### Issue description\n\nWhile draging a toolbox item from an IToolboxService (implemented by myself) onto a custom control at design time, the corresponding designer's OnDragDrop() won't be hit. and an exception: NotImplementedException was thrown by the  constructor() of class ToolboxSnapDragDropEventArgs.\n\n### Steps to reproduce\n\n1、create an instance of DesignSurface.\r\n2、add a custom IToolboxService impl.\r\n3、add a custom control to IToolboxService.\r\n4、drag the custom control onto the DesignFrame.\r\n5、A NotImplementedException was thrown within Debug window.","Url":"https://github.com/dotnet/winforms/issues/6919","RelatedDescription":"Open issue \"ToolboxSnapDragDropEventArgs is not implemented.\" (#6919)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-04-01T03:30:30.8192615Z","RunDurationInMilliseconds":520}