{"Data":{"GitHub":{"Issues":[{"Id":"1574915992","IsPullRequest":true,"CreatedAt":"2023-02-07T20:52:42","Actor":"vseanreesermsft","Number":"8585","RawContent":null,"Title":"Update branding to 6.0.15","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8585)","Url":"https://github.com/dotnet/winforms/pull/8585","RelatedDescription":"Closed or merged PR \"Update branding to 6.0.15\" (#8585)"},{"Id":"1574916111","IsPullRequest":true,"CreatedAt":"2023-02-07T20:49:48","Actor":"vseanreesermsft","Number":"8586","RawContent":null,"Title":"Update branding to 7.0.4","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8586)","Url":"https://github.com/dotnet/winforms/pull/8586","RelatedDescription":"Closed or merged PR \"Update branding to 7.0.4\" (#8586)"},{"Id":"1574533268","IsPullRequest":false,"CreatedAt":"2023-02-07T19:08:59","Actor":"TATKINSMSFT","Number":"8583","RawContent":null,"Title":" .NET 6 Winforms Cursors leak CPicture objects (User and GDI objects leak) due to ref count bug","State":"closed","Body":"### .NET version\n\n.NET 6\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nWorks in .NET Core 3.1 (also works in .NET 7)\n\n### Issue description\n\n*****[Mainly for tracking]  Customer running into this has been unblocked by moving to .NET 7******\r\n\r\n.NET 6 Windows Forms System.Windows.Forms.Cursor object creation leaks ole32!CPicture objects which leaks USER (Cursor) and GDI objects (Surf) due to a ref count bug.  If you do this long enough, you could experience an OutOfMemoryException (or other variation of exhausting resources) due to hitting the 10K per-process limit for GDI objects.  Example exceptions:\r\n\r\nException object: 000001b919ae0340\r\nException type:   System.OutOfMemoryException\r\nMessage:          Insufficient memory to continue the execution of the program.\r\nInnerException:   <none>\r\nStackTrace (generated):\r\n<none>\r\nStackTraceString: <none>\r\nHResult: 8007000e\r\n\r\nException object: 000001b919b68360\r\nException type:   System.ArgumentException\r\nMessage:          Parameter is not valid.\r\nInnerException:   <none>\r\nStackTrace (generated):\r\n<none>\r\nStackTraceString: <none>\r\nHResult: 80070057\r\n\r\nThe bug is in https://github.com/dotnet/winforms/blob/release/6.0/src/System.Windows.Forms.Primitives/src/Interop/WinFormsComWrappers.cs#L56\r\n\r\nThere should be a Marshal.Release (externalComObject) after the QueryInterface (QI does an AddRef, unbalancing the ref count and leading to the leak without the Release call) call.\r\n\r\nThis bug doesn't occur in .NET Core 3.1 or .NET 7 (has a Marshal.Release call).\n\n### Steps to reproduce\n\nCreate a new Windows Forms project targeting .NET 6\r\nAdd a Button to the newly created Form1 in the Designer\r\nAdd the following contrived code to Form1.cs\r\n\r\n        private Cursor[] cur;\r\n        private void button1_Click(object sender, EventArgs e)\r\n        {                                       \r\n                int i = 0;\r\n                cur = new Cursor[3350];\r\n                while (i < 3350)\r\n                    {       \r\n                        cur[i] = new Cursor(\"c:\\\\windows\\\\cursors\\\\aero_helpsel.cur\");\r\n                        cur[i].Dispose();\r\n                        cur[i] = null;\r\n                        i++;\r\n                    }\r\n                GC.Collect();\r\n                GC.WaitForPendingFinalizers();         \r\n        }\r\n\r\nF5/Run the application\r\nClick the button\r\n\r\nResult:  A System.OutOfMemoryException will occur due to hitting the 10K per-process limit for GDI objects\r\n\r\nExpected result:  No USER/GDI object leak or exception(s) \r\n","Url":"https://github.com/dotnet/winforms/issues/8583","RelatedDescription":"Closed issue \" .NET 6 Winforms Cursors leak CPicture objects (User and GDI objects leak) due to ref count bug\" (#8583)"},{"Id":"1568953727","IsPullRequest":true,"CreatedAt":"2023-02-07T17:48:19","Actor":"lonitra","Number":"8556","RawContent":null,"Title":"Enable CheckCertificateRevocationList Under a Switch","State":"closed","Body":"Related: [CodeQL](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1666879/) , https://github.com/dotnet/winforms/issues/8561\r\n- Introduces a switch for turning on `ServicePointManager.CheckCertificateRevocationList`\r\n- Fixes tests and adds test to check for same behavior when switch is both on and off\r\n- Add CodeQL suppression in case it tries to reflag this because of the switch\r\n- General clean up\r\n\r\n**Background:**\r\nBefore creating a `WebClient` or `WebRequest`, it is best practice to set `ServicePointManager.CheckCertificateRevocationList` to `true` beforehand so that revoked certificates are not accepted by `WebClient`s or `WebRequest`s as valid. \r\nNow that we are checking certificate revocation list, the behavior should remain the same as before, however there is a rare case when it could fail which is if:\r\na) the certificate authority provides revocation only through a technology called CRL, \r\nb) the client has not recently enough cached the relevant CRL, and \r\nc) the client is operating on an egress-restricted network and the CRL location isn't on the egress allow-list. Â \r\nThere may be some other corner cases, and a mild performance hit, hence why this is placed under a switch for user to have opportunity to opt out if they run into this.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8556)","Url":"https://github.com/dotnet/winforms/pull/8556","RelatedDescription":"Closed or merged PR \"Enable CheckCertificateRevocationList Under a Switch\" (#8556)"},{"Id":"1570934432","IsPullRequest":true,"CreatedAt":"2023-02-07T17:39:09","Actor":"dotnet-maestro[bot]","Number":"8567","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20230206.4\r\n- **Date Produced**: February 6, 2023 6:55:03 PM UTC\r\n- **Commit**: 02980a654d20995c38eca6ceabf729c4c13412c4\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23102.4 to 8.0.0-beta.23106.4][4]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.23102.4 to 8.0.0-beta.23106.4][4]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.23102.4 to 8.0.0-beta.23106.4][4]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23102.4 to 8.0.0-beta.23106.4][4]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.23102.4 to 8.0.0-beta.23106.4][4]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23102.4 to 8.0.0-beta.23106.4][4]\r\n\r\n[4]: https://github.com/dotnet/arcade/compare/afa0b37...02980a6\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8567)\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/8567","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#8567)"},{"Id":"1573787216","IsPullRequest":true,"CreatedAt":"2023-02-07T15:50:04","Actor":"dotnet-maestro[bot]","Number":"8578","RawContent":null,"Title":"[release/8.0-preview1] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4df5b787-1726-4081-4cf7-08dafe3cf288)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 4df5b787-1726-4081-4cf7-08dafe3cf288\r\n- **Build**: 20230206.5\r\n- **Date Produced**: February 7, 2023 6:18:36 AM UTC\r\n- **Commit**: 9f654effb17265a137695bf38f0a782d274791cd\r\n- **Branch**: refs/heads/release/8.0-preview1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-preview.1.23104.3 to 8.0.0-preview.1.23106.5][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-preview.1.23104.3 to 8.0.0-preview.1.23106.5][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.1.23104.3 to 8.0.0-preview.1.23106.5][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.1.23104.3 to 8.0.0-preview.1.23106.5][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.1.23104.3 to 8.0.0-preview.1.23106.5][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-preview.1.23104.3 to 8.0.0-preview.1.23106.5][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.1.23104.3 to 8.0.0-preview.1.23106.5][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.1.23104.3 to 8.0.0-preview.1.23106.5][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.1.23104.3 to 8.0.0-preview.1.23106.5][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-preview.1.23104.3 to 8.0.0-preview.1.23106.5][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.1.23104.3 to 8.0.0-preview.1.23106.5][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.1.23104.3 to 8.0.0-preview.1.23106.5][1]\r\n  - **System.CodeDom**: [from 8.0.0-preview.1.23104.3 to 8.0.0-preview.1.23106.5][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.1.23104.3 to 8.0.0-preview.1.23106.5][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.1.23104.3 to 8.0.0-preview.1.23106.5][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.1.23104.3 to 8.0.0-preview.1.23106.5][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.1.23104.3 to 8.0.0-preview.1.23106.5][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-preview.1.23104.3 to 8.0.0-preview.1.23106.5][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.1.23104.3 to 8.0.0-preview.1.23106.5][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.1.23104.3 to 8.0.0-preview.1.23106.5][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.1.23104.3 to 8.0.0-preview.1.23106.5][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.1.23104.3 to 8.0.0-preview.1.23106.5][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.1.23104.3 to 8.0.0-preview.1.23106.5][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.1.23104.3 to 8.0.0-preview.1.23106.5][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.1.23104.3 to 8.0.0-preview.1.23106.5][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-preview.1.23104.3 to 8.0.0-preview.1.23106.5][1]\r\n  - **System.Text.Json**: [from 8.0.0-preview.1.23104.3 to 8.0.0-preview.1.23106.5][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.1.23104.3 to 8.0.0-preview.1.23106.5][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.1.23104.3 to 8.0.0-preview.1.23106.5][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.1.23104.3 to 8.0.0-preview.1.23106.5][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/6507a44...9f654ef\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4df5b787-1726-4081-4cf7-08dafe3cf288)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8578)","Url":"https://github.com/dotnet/winforms/pull/8578","RelatedDescription":"Closed or merged PR \"[release/8.0-preview1] Update dependencies from dotnet/runtime\" (#8578)"},{"Id":"1574407439","IsPullRequest":false,"CreatedAt":"2023-02-07T13:41:17","Actor":"zeh-almeida","Number":"8582","RawContent":null,"Title":"[API Proposal]: Allow `Control.Invoke` on `Binding`","State":"open","Body":"### Background and motivation\n\n`Binding`s allow for Form `Control`s and models to be updated when their values are changed by the system in any way.\r\nThis would allow the form to be reactive, with processes running in the background performing all the necessary actions and having them reflected by the bindings automatically.\r\n\r\nThis already works with MAUI, specially if you use the `CommunityToolkit.Mvvm` and its generators.\r\nHowever, while Winforms support bindings as well, it does not support asynchronous updates, because doing so would raise a `InvalidOperationException`.\r\n\r\nThis happens because the `Binding` class updates the value of the property directly, without checking if the control is in the UI Thread or not.\r\n\r\nI then propose a new constructor to the `Binding` class in which you can set a flag to prefer using `Control.Invoke` when updating the bindings. `Control.Invoke` forces the `Action` to run at the UI Thread, solving the problem.\r\n\r\nI have already [opened an issue](https://github.com/dotnet/winforms/issues/8532) about [this as well as a PR](https://github.com/dotnet/winforms/pull/8547).\n\n### API Proposal\n\n```csharp\r\nnamespace System.Windows.Forms;\r\n\r\npublic class Binding\r\n{\r\n    public Binding(string propertyName, object dataSource, string dataMember, bool formattingEnabled, DataSourceUpdateMode dataSourceUpdateMode, object nullValue, string formatString, IFormatProvider formatInfo, bool invokeControl);\r\n}\r\n```\r\n\r\n```csharp\r\nnamespace System.Windows.Forms;\r\n\r\npublic class ControlBindingsCollection : BindingsCollection\r\n{\r\n    public Binding Add(string propertyName, object dataSource, string dataMember, bool formattingEnabled, DataSourceUpdateMode updateMode, object nullValue, string formatString, IFormatProvider formatInfo, bool invokeControl);\r\n}\r\n```\n\n### API Usage\n\n```csharp\r\n// Create a new form and a text box to bind values to\r\nForm form = new Form();\r\nTextBox textBox = new TextBox();\r\ntextBox.Parent = form;\r\n\r\n// Create a binding to handle the invoke method\r\nBinding binding = new Binding(\"Text\", mainObject, \"Text\", false, 0, null, string.Empty, null, true);\r\ntextBox.DataBindings.Add(binding);\r\n\r\nform.Show();\r\n\r\n// Perform the binding update in a separate thread to escape the UI Thread on purpose\r\nvar thread = new Thread(() =>\r\n{\r\n    textBox.Text = \"Updated test text\";\r\n\r\n    Assert.Equal(\"Updated test text\", textBox.Text);\r\n    Assert.Equal(\"Updated test text\", mainObject.Text);\r\n});\r\n\r\nthread.Start();\r\n```\r\n\n\n### Alternative Designs\n\nI have added a new constructor to the `System.Windows.Forms.Binding` class and a new public method to `System.Windows.Forms.ControlBindingsCollection` without changing previous APIs.\n\n### Risks\n\nIn my limited study of the APIs, I didn't see any breaking risk associated with this proposal.\r\nThere may be performance repercussions in the `Control.Invoke` mechanic on heavy load but I was unable to test it.\r\n\r\n[The PR I mentioned](https://github.com/dotnet/winforms/pull/8547) has some tests which could be useful in analyzing those scenarios.","Url":"https://github.com/dotnet/winforms/issues/8582","RelatedDescription":"Open issue \"[API Proposal]: Allow `Control.Invoke` on `Binding`\" (#8582)"},{"Id":"1574295238","IsPullRequest":true,"CreatedAt":"2023-02-07T13:04:58","Actor":"dotnet-maestro[bot]","Number":"8581","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230206.7\r\n- **Date Produced**: February 7, 2023 9:40:28 AM UTC\r\n- **Commit**: b39d6a6eb44860746e91e5ce4f585beff33d1f63\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-preview.2.23105.4 to 8.0.0-preview.2.23106.7][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-preview.2.23105.4 to 8.0.0-preview.2.23106.7][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.2.23105.4 to 8.0.0-preview.2.23106.7][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.2.23105.4 to 8.0.0-preview.2.23106.7][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.2.23105.4 to 8.0.0-preview.2.23106.7][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-preview.2.23105.4 to 8.0.0-preview.2.23106.7][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.2.23105.4 to 8.0.0-preview.2.23106.7][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.2.23105.4 to 8.0.0-preview.2.23106.7][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.2.23105.4 to 8.0.0-preview.2.23106.7][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-preview.2.23105.4 to 8.0.0-preview.2.23106.7][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.2.23105.4 to 8.0.0-preview.2.23106.7][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.2.23105.4 to 8.0.0-preview.2.23106.7][1]\r\n  - **System.CodeDom**: [from 8.0.0-preview.2.23105.4 to 8.0.0-preview.2.23106.7][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.2.23105.4 to 8.0.0-preview.2.23106.7][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.2.23105.4 to 8.0.0-preview.2.23106.7][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.2.23105.4 to 8.0.0-preview.2.23106.7][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.2.23105.4 to 8.0.0-preview.2.23106.7][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-preview.2.23105.4 to 8.0.0-preview.2.23106.7][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.2.23105.4 to 8.0.0-preview.2.23106.7][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.2.23105.4 to 8.0.0-preview.2.23106.7][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.2.23105.4 to 8.0.0-preview.2.23106.7][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.2.23105.4 to 8.0.0-preview.2.23106.7][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.2.23105.4 to 8.0.0-preview.2.23106.7][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.2.23105.4 to 8.0.0-preview.2.23106.7][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.2.23105.4 to 8.0.0-preview.2.23106.7][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-preview.2.23105.4 to 8.0.0-preview.2.23106.7][1]\r\n  - **System.Text.Json**: [from 8.0.0-preview.2.23105.4 to 8.0.0-preview.2.23106.7][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.2.23105.4 to 8.0.0-preview.2.23106.7][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.2.23105.4 to 8.0.0-preview.2.23106.7][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.2.23105.4 to 8.0.0-preview.2.23106.7][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/58719ec...b39d6a6\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8581)","Url":"https://github.com/dotnet/winforms/pull/8581","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/runtime\" (#8581)"},{"Id":"1573908283","IsPullRequest":false,"CreatedAt":"2023-02-07T08:38:20","Actor":"Philip-Wang01","Number":"8580","RawContent":null,"Title":"[Multi-Monitor][PerMonitorV2] ScrollBar is not scaled well on secondary screen","State":"open","Body":"### .NET version\r\n\r\n.NET 8.0.100-preview.2.23106.11\r\n\r\n### Did it work in .NET Framework?\r\n\r\nYes\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nNo, it also repro on .NET 6.0 & 7.0.\r\n\r\n### Issue description\r\n\r\nScrollBar(HScrollBar&VScrollBar) control is not scaled well in secondary screen under PermonitorV2 mode. https://github.com/dotnet/winforms/pull/8312 solved the problem of rectangular shadows not being displayed. But move from 300% DPI to 100% DPI, scrollbars should display the same result as 100% scrollbars. Move from 100% DPI to 300% DPI, scrollbars should display the same result as 300% scrollbars.\r\n\r\n### Steps to reproduce\r\n\r\n1. Launch VS instance on 300% primary screen.\r\n2. Create a WinForms .NET Core project.\r\n3. Add `<ApplicationHighDpiMode>PerMonitorV2</ApplicationHighDpiMode>` in csproj file.\r\n4. Add a HScrollBar and VScrollBar to form designer.\r\n5. Build and run it, move to 100% secondary monitor.\r\n\r\nOr\r\n\r\n1. Extract and open [testscrollbar.zip](https://github.com/dotnet/winforms/files/10673549/testscrollbar.zip) on 300% primary screen.\r\n2. Build and run it.\r\n3. Move to 100% secondary monitor.\r\n\r\n**Actual result:**\r\nScrollBar is not scaled well when move from 300% primary screen to 100% secondary monitor.\r\n300% primary screen: \r\n![image](https://user-images.githubusercontent.com/86937911/217186259-18753688-b284-4563-9ee5-281a3ecd6c4d.png)\r\nmove to 100% secondary monitor\r\n![image](https://user-images.githubusercontent.com/86937911/217186659-ed6ba1b9-8e01-4c40-bdc1-0421c87af8f4.png)\r\n\r\n**Expected result:**\r\nScrollBar should be scaled well when move from 300% primary screen to 100% secondary monitor.\r\n\r\n**More info:**\r\n1. This issue doesn't repro on SystemAware and DpiUnware mode.\r\n2. The original issue: https://github.com/dotnet/winforms/issues/8270.\r\n3. https://github.com/dotnet/winforms/pull/8312 solved the problem of rectangular shadows not being displayed. But move from 300% DPI to 100% DPI, scrollbars should display the same result as 100% scrollbars. Move from 100% DPI to 300% DPI, scrollbars should display the same result as 300% scrollbars.\r\n4. This issue also occur when move from 100% primary to 300% secondary monitor.\r\n100% primary screen: \r\n![image](https://user-images.githubusercontent.com/86937911/217187226-e88c0dd9-05cc-4ddb-ad22-34639000f702.png)\r\nmove to 300% secondary monitor: \r\n![image](https://user-images.githubusercontent.com/86937911/217188159-abd8ecc0-49e0-45f6-b6d7-e935199c2198.png)\r\n","Url":"https://github.com/dotnet/winforms/issues/8580","RelatedDescription":"Open issue \"[Multi-Monitor][PerMonitorV2] ScrollBar is not scaled well on secondary screen\" (#8580)"},{"Id":"1573852591","IsPullRequest":false,"CreatedAt":"2023-02-07T07:56:20","Actor":"Ashley-Li","Number":"8579","RawContent":null,"Title":"Form1.cs is unsaved status after reopening the form designer","State":"open","Body":"### .NET version\n\n.NET 8.0.100-preview.2.23106.11\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, it cannot repro on .NET 6.0 & 7.0.\n\n### Issue description\n\nWhen save all project, close the form designer, then reopen the form designer, the Form1.cs[Design] is unsaved state.\r\n![image](https://user-images.githubusercontent.com/56664234/217184220-c6a8d1ab-02c0-447a-99b8-4657d1b48bcd.png)\r\n\n\n### Steps to reproduce\n\n1.  Create a WinForms .NET 8.0 project.\r\n2.  Open the Smart Tag window of DataGridView, expand \"Data Source\" comboBox to click \"Add new Object Data Sourceâ¦\"\r\n3.  In \"Add/Update Datasource Type\" dialog, choose a DataSource, e.g. CSharpCodeProvider to bind.\r\n4.  Save All(Ctrl+Shift+S), close the form designer, then reopen the form designer.\r\n5.  Repeat step4 twice to observe.\r\n\r\nOr\r\n\r\n1.  Extract \"[TestApp.zip](https://github.com/dotnet/winforms/files/10672691/TestApp.zip)â and open it in VS.\r\n2.  Save All(Ctrl+Shift+S), close the form designer, then reopen the form designer.\r\n\r\n\r\n**Actual result:**\r\nThe Form1.cs[Design] is unsaved state, after step4, a dialog box pops up to save the Form1.cs file.\r\n![issue_8 0_actual](https://user-images.githubusercontent.com/56664234/217182045-ac5fbe23-f9da-4573-9f0f-28c58478377d.gif)\r\n\r\n**Expected result:**\r\nThe Form1.cs[Design] should be saved state, after step4, there's no dialog box pops up to save the Form1.cs file.\r\n![issue_7 0_expected](https://user-images.githubusercontent.com/56664234/217182013-ef1adb77-cce3-4be9-9d7d-b412e32fbd76.gif)\r\n","Url":"https://github.com/dotnet/winforms/issues/8579","RelatedDescription":"Open issue \"Form1.cs is unsaved status after reopening the form designer\" (#8579)"},{"Id":"1573438551","IsPullRequest":true,"CreatedAt":"2023-02-07T04:24:58","Actor":"MattGal","Number":"8577","RawContent":null,"Title":"Automatic Pool provider selection (Main branch)","State":"closed","Body":"Cherry pick of changes from https://github.com/dotnet/winforms/pull/8564 for main.  This will cause future release/ branches forked off from main to get this behavior.\r\n\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n\r\n## Proposed changes\r\n\r\n- \r\n- \r\n- \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8577)","Url":"https://github.com/dotnet/winforms/pull/8577","RelatedDescription":"Closed or merged PR \"Automatic Pool provider selection (Main branch)\" (#8577)"},{"Id":"1573436068","IsPullRequest":false,"CreatedAt":"2023-02-06T23:14:05","Actor":"paul1956","Number":"8576","RawContent":null,"Title":"Editing for with nested TableLayoutPanel adds additional Row and Column Styles whenever form is edited","State":"open","Body":"### Environment\n\nMicrosoft Visual Studio Community 2022 (64-bit) - Preview\r\nVersion 17.5.0 Preview 5.0\r\n\n\n### .NET version\n\n.New 7.0 but don't matter issue is designer.\n\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\n\nBefore OOP Designer\n\n### Issue description\n\nBefore edit\r\n```\r\n        TableLayoutPanelTopEx1.ColumnStyles.Add(New ColumnStyle())\r\n        TableLayoutPanelTopEx1.ColumnStyles.Add(New ColumnStyle(SizeType.Percent, 100.0F))\r\n        TableLayoutPanelTopEx1.Dock = DockStyle.Fill\r\n        TableLayoutPanelTopEx1.LabelText = \"\"\r\n        TableLayoutPanelTopEx1.Location = New Point(3, 3)\r\n        TableLayoutPanelTopEx1.Name = \"TableLayoutPanelTopEx1\"\r\n        TableLayoutPanelTopEx1.RowCount = 1\r\n        TableLayoutPanelTopEx1.RowStyles.Add(New RowStyle(SizeType.Percent, 50.0F))\r\n```\r\nAfter any edit\r\n```\r\n        Me.TableLayoutPanelTopEx1.ColumnStyles.Add(New System.Windows.Forms.ColumnStyle())\r\n        Me.TableLayoutPanelTopEx1.ColumnStyles.Add(New System.Windows.Forms.ColumnStyle(System.Windows.Forms.SizeType.Percent, 100.0!))\r\n        Me.TableLayoutPanelTopEx1.ColumnStyles.Add(New System.Windows.Forms.ColumnStyle())\r\n        Me.TableLayoutPanelTopEx1.ColumnStyles.Add(New System.Windows.Forms.ColumnStyle(System.Windows.Forms.SizeType.Percent, 100.0!))\r\n        Me.TableLayoutPanelTopEx1.Dock = System.Windows.Forms.DockStyle.Fill\r\n        Me.TableLayoutPanelTopEx1.LabelText = \"\"\r\n        Me.TableLayoutPanelTopEx1.Location = New System.Drawing.Point(3, 3)\r\n        Me.TableLayoutPanelTopEx1.Name = \"TableLayoutPanelTopEx1\"\r\n        Me.TableLayoutPanelTopEx1.RowCount = 1\r\n        Me.TableLayoutPanelTopEx1.RowStyles.Add(New System.Windows.Forms.RowStyle())\r\n        Me.TableLayoutPanelTopEx1.RowStyles.Add(New System.Windows.Forms.RowStyle(System.Windows.Forms.SizeType.Percent, 50.0!))\r\n```\r\n\n\n### Steps to reproduce\n\nOpen Project, Open form1 change anything, Save and additional Row and Column Styles are added equal to the number of Rows and Columns. \r\n\r\nhttps://github.com/paul1956/WinFormsTableListViewIssue\r\n\r\n\n\n### Diagnostics\n\n```text\nNone\n```\n","Url":"https://github.com/dotnet/winforms/issues/8576","RelatedDescription":"Open issue \"Editing for with nested TableLayoutPanel adds additional Row and Column Styles whenever form is edited\" (#8576)"},{"Id":"1570386771","IsPullRequest":true,"CreatedAt":"2023-02-06T22:59:56","Actor":"MattGal","Number":"8564","RawContent":null,"Title":"Automatic pool provider selection","State":"closed","Body":"Ready to merge.  This change opts in to automatic pool provider selection and demonstrates how we can correctly separate servicing (\"anything in a release branch\") builds from main  / dev branch builds.  \r\n\r\nI have validated all the existing winforms pipelines I touched using my changes, as described below. \r\n\r\nTesting `azure-pipelines.yml`: This PR\r\n\r\nTesting `eng\\pipelines\\azure-pipelines-codeql.yml`:\r\n  https://dnceng.visualstudio.com/internal/_build/results?buildId=2106174&view=logs&j=eb2c8817-e906-5459-8080-1a4c8ed1e2e2\r\n\r\nTesting `azure-pipelines-richnav.yml`:\r\n  https://dev.azure.com/dnceng-public/public/_build/results?buildId=161654&view=logs&j=0bc77094-9fcd-5c38-f6e4-27d2ae131589&t=2ff0d05b-859b-4800-af69-e3b925e8874d\r\n\r\n\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8564)","Url":"https://github.com/dotnet/winforms/pull/8564","RelatedDescription":"Closed or merged PR \"Automatic pool provider selection\" (#8564)"},{"Id":"1570934525","IsPullRequest":true,"CreatedAt":"2023-02-06T18:22:46","Actor":"dotnet-maestro[bot]","Number":"8568","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230205.4\r\n- **Date Produced**: February 6, 2023 8:27:11 AM UTC\r\n- **Commit**: 58719ec90b3bbae527dd81685bf8670b993fe8f9\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-preview.2.23102.7 to 8.0.0-preview.2.23105.4][3]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-preview.2.23102.7 to 8.0.0-preview.2.23105.4][3]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.2.23102.7 to 8.0.0-preview.2.23105.4][3]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.2.23102.7 to 8.0.0-preview.2.23105.4][3]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.2.23102.7 to 8.0.0-preview.2.23105.4][3]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-preview.2.23102.7 to 8.0.0-preview.2.23105.4][3]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.2.23102.7 to 8.0.0-preview.2.23105.4][3]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.2.23102.7 to 8.0.0-preview.2.23105.4][3]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.2.23102.7 to 8.0.0-preview.2.23105.4][3]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-preview.2.23102.7 to 8.0.0-preview.2.23105.4][3]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.2.23102.7 to 8.0.0-preview.2.23105.4][3]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.2.23102.7 to 8.0.0-preview.2.23105.4][3]\r\n  - **System.CodeDom**: [from 8.0.0-preview.2.23102.7 to 8.0.0-preview.2.23105.4][3]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.2.23102.7 to 8.0.0-preview.2.23105.4][3]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.2.23102.7 to 8.0.0-preview.2.23105.4][3]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.2.23102.7 to 8.0.0-preview.2.23105.4][3]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.2.23102.7 to 8.0.0-preview.2.23105.4][3]\r\n  - **System.Drawing.Common**: [from 8.0.0-preview.2.23102.7 to 8.0.0-preview.2.23105.4][3]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.2.23102.7 to 8.0.0-preview.2.23105.4][3]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.2.23102.7 to 8.0.0-preview.2.23105.4][3]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.2.23102.7 to 8.0.0-preview.2.23105.4][3]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.2.23102.7 to 8.0.0-preview.2.23105.4][3]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.2.23102.7 to 8.0.0-preview.2.23105.4][3]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.2.23102.7 to 8.0.0-preview.2.23105.4][3]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.2.23102.7 to 8.0.0-preview.2.23105.4][3]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-preview.2.23102.7 to 8.0.0-preview.2.23105.4][3]\r\n  - **System.Text.Json**: [from 8.0.0-preview.2.23102.7 to 8.0.0-preview.2.23105.4][3]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.2.23102.7 to 8.0.0-preview.2.23105.4][3]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.2.23102.7 to 8.0.0-preview.2.23105.4][3]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.2.23102.7 to 8.0.0-preview.2.23105.4][3]\r\n\r\n[3]: https://github.com/dotnet/runtime/compare/9ffc5fe...58719ec\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8568)\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/8568","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8568)"},{"Id":"1572922738","IsPullRequest":true,"CreatedAt":"2023-02-06T16:50:10","Actor":"gpetrou","Number":"8575","RawContent":null,"Title":"Use TryGetObject instead of ContainsObject and GetObject","State":"open","Body":"## Proposed changes\r\n\r\n- Use TryGetObject instead of ContainsObject and GetObject.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8575)","Url":"https://github.com/dotnet/winforms/pull/8575","RelatedDescription":"Open PR \"Use TryGetObject instead of ContainsObject and GetObject\" (#8575)"},{"Id":"1572808667","IsPullRequest":true,"CreatedAt":"2023-02-06T15:41:16","Actor":"dkazennov","Number":"8574","RawContent":null,"Title":"Removed extra validation in flaky DataGridView unit tests.","State":"open","Body":"Fixes #7799\r\n\r\n\r\n## Proposed changes\r\n- This fix comments out check for `invalidatedCallCount` in unstable unit tests with a commentary reference to this Issue to keep a track record (as [proposed](https://github.com/dotnet/winforms/issues/6926#issuecomment-1246567369) by @RussKie).\r\n- Theory data kept, unused argument warning suppressed.\r\n\r\n**Tests changed:**\r\n\r\n- DataGridView_ColumnHeadersHeightSizeMode_SetNonResizeThenResize_RestoresOldValue\r\n- DataGridView_ColumnHeadersHeightSizeMode_SetWithHandle_GetReturnsExpected\r\n- DataGridView_ColumnHeadersHeight_SetWithHandle_GetReturnsExpected\r\n- DataGridView_ColumnHeadersHeight_SetWithParentWithHandle_GetReturnsExpected\r\n- DataGridView_OnColumnHeadersHeightChanged_InvokeWithHandle_CallsColumnHeadersHeightChanged\r\n- DataGridView_OnColumnHeadersHeightSizeModeChanged_InvokeWithHandle_CallsColumnHeadersHeightSizeModeChanged\r\n- DataGridView_OnRowHeadersWidthChanged_InvokeWithHandle_CallsRowHeadersWidthChanged\r\n- DataGridView_OnRowHeadersWidthSizeModeChanged_InvokeWithHandle_CallsRowHeadersWidthSizeModeChanged\r\n- DataGridView_Parent_SetWithHandle_GetReturnsExpected\r\n- DataGridView_RowHeadersWidthSizeMode_SetNonResizeThenResize_RestoresOldValue\r\n- DataGridView_RowHeadersWidthSizeMode_SetWithHandle_GetReturnsExpected\r\n- DataGridView_RowHeadersWidth_SetWithHandle_GetReturnsExpected\r\n- DataGridView_RowHeadersWidth_SetWithParentWithHandle_GetReturnsExpected\r\n- DataGridView_TopLeftHeaderCell_GetWithHandle_ReturnsExpected\r\n- DataGridView_TopLeftHeaderCell_SetWithHandle_GetReturnsExpected\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- No impact. This fix affects only unit tests.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Unit tests.\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- - dotnet 8.0.100-alpha.1.22607.6\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8574)","Url":"https://github.com/dotnet/winforms/pull/8574","RelatedDescription":"Open PR \"Removed extra validation in flaky DataGridView unit tests.\" (#8574)"},{"Id":"1572799504","IsPullRequest":true,"CreatedAt":"2023-02-06T15:35:10","Actor":"DJm00n","Number":"8573","RawContent":null,"Title":"Fix System.Windows.Forms.InputLanguage.FromCulture() for languages without LANGID value","State":"open","Body":"Some Windows input languages do not have a unique pre-assigned LANGID to identify them and [instead use a value of `0x0c00` (LOCALE_CUSTOM_DEFAULT) or `0x1000` (LOCALE_CUSTOM_UNSPECIFIED)](https://learn.microsoft.com/globalization/locale/locale-names#the-deprecation-of-lcids).\r\n\r\nWindows tries to provide a [unique transient value in these cases](https://learn.microsoft.com/windows/win32/winmsg/wm-inputlangchange) in the HKL lowerword, but these values can't be used to identify the keyboard layout directly (we must convert it to locale name as soon as possible and use locale names where possible), and we can't get the InputLanguage correctly in the FromCulture method.\r\n\r\n## Proposed changes\r\n\r\n- Compare locale names instead of [deprecated LANGID/LCIDs](https://learn.microsoft.com/globalization/locale/locale-names#the-deprecation-of-lcids) to fix these corner cases.\r\n\r\n## Customer Impact\r\n\r\n- InputLanguage.FromCulture() now should properly work for these locales:\r\n\r\n```\r\n[localeName] [lcId]=[langId]:[keyboardId]\r\njv 0x1000=0c00:00000409\r\njv-Java 0x1000=0c00:00110c00\r\njv-Java-ID 0x1000=0c00:00110c00\r\njv-Latn 0x1000=0c00:00000409\r\njv-Latn-ID 0x1000=0c00:00000409\r\nmg 0x1000=0c00:0000040c\r\nmg-MG 0x1000=0c00:0000040c\r\nnqo 0x1000=0c00:00090c00\r\nnqo-GN 0x1000=0c00:00090c00\r\nsn 0x1000=0c00:00000409\r\nsn-Latn 0x1000=0c00:00000409\r\nsn-Latn-ZW 0x1000=0c00:00000409\r\nzgh 0x1000=0c00:0000105f\r\nzgh-Tfng 0x1000=0c00:0000105f\r\nzgh-Tfng-Ma 0x1000=0c00:0000105f\r\n```\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots\r\n\r\n### Before\r\n\r\n![image](https://user-images.githubusercontent.com/1285934/217013926-7c588360-cceb-4168-9e74-7e4a94c339ba.png)\r\n\r\n### After\r\n\r\n![image](https://user-images.githubusercontent.com/1285934/217013572-f26ff769-9a73-44fa-a9f0-706296dde192.png)\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Install \"NâKo\" input language (or any other from the list above) in Windows settings\r\n- Set it as default input language in Windows settings\r\n- Try to run `InputLanguage_FromCulture_Roundtrip_Success` test and see the results\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s)\r\n\r\n```\r\ndotnet --info\r\n.NET SDK:\r\n Version:   8.0.100-alpha.1.23061.8\r\n Commit:    c8d103ed3c\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19044\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   G:\\project\\winforms\\.dotnet\\sdk\\8.0.100-alpha.1.23061.8\\\r\n\r\nHost:\r\n  Version:      8.0.0-alpha.1.23079.4\r\n  Architecture: x64\r\n  Commit:       a34291586e\r\n\r\n.NET SDKs installed:\r\n  8.0.100-alpha.1.22512.5 [G:\\project\\winforms\\.dotnet\\sdk]\r\n  8.0.100-alpha.1.22622.3 [G:\\project\\winforms\\.dotnet\\sdk]\r\n  8.0.100-alpha.1.23061.8 [G:\\project\\winforms\\.dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 8.0.0-alpha.1.22510.12 [G:\\project\\winforms\\.dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 8.0.0-alpha.1.22615.1 [G:\\project\\winforms\\.dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 8.0.0-alpha.1.23058.7 [G:\\project\\winforms\\.dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 8.0.0-alpha.1.22507.5 [G:\\project\\winforms\\.dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 8.0.0-alpha.1.22605.1 [G:\\project\\winforms\\.dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 8.0.0-alpha.1.22627.5 [G:\\project\\winforms\\.dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 8.0.0-alpha.1.23057.5 [G:\\project\\winforms\\.dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 8.0.0-alpha.1.23058.2 [G:\\project\\winforms\\.dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 8.0.0-alpha.1.23079.4 [G:\\project\\winforms\\.dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 8.0.0-alpha.1.22507.3 [G:\\project\\winforms\\.dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 8.0.0-alpha.1.22614.1 [G:\\project\\winforms\\.dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 8.0.0-alpha.1.23057.1 [G:\\project\\winforms\\.dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nOther architectures found:\r\n  x86   [C:\\Program Files (x86)\\dotnet]\r\n    registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]\r\n\r\nEnvironment variables:\r\n  DOTNET_ROOT       [G:\\project\\winforms\\.dotnet]\r\n\r\nglobal.json file:\r\n  G:\\project\\winforms\\global.json\r\n```\r\n\r\nRelated issue in Runtime: https://github.com/dotnet/runtime/issues/81633","Url":"https://github.com/dotnet/winforms/pull/8573","RelatedDescription":"Open PR \"Fix System.Windows.Forms.InputLanguage.FromCulture() for languages without LANGID value\" (#8573)"},{"Id":"1571661805","IsPullRequest":false,"CreatedAt":"2023-02-05T23:29:36","Actor":"RussKie","Number":"8572","RawContent":null,"Title":"[Tracking] WCAF* analyzer diagnostics needs to be documented","State":"open","Body":"The [analyzer dignostics](https://github.com/dotnet/winforms/blob/a8f51bd3d2690890a6ea2ae0d8d084aab0a1b926/docs/list-of-diagnostics.md#analyzer-warnings) need to be documented at [https://learn.microsoft.com](https://learn.microsoft.com/dotnet/desktop/winforms/wfdev-diagnostics/obsoletions-overview) and the links updated at aka.ms.\r\n","Url":"https://github.com/dotnet/winforms/issues/8572","RelatedDescription":"Open issue \"[Tracking] WCAF* analyzer diagnostics needs to be documented\" (#8572)"},{"Id":"1571180070","IsPullRequest":true,"CreatedAt":"2023-02-05T23:05:52","Actor":"dotnet-maestro[bot]","Number":"8569","RawContent":null,"Title":"[release/8.0-preview1] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4df5b787-1726-4081-4cf7-08dafe3cf288)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 4df5b787-1726-4081-4cf7-08dafe3cf288\r\n- **Build**: 20230204.3\r\n- **Date Produced**: February 4, 2023 11:42:40 PM UTC\r\n- **Commit**: 6507a44770f6648ca8da6ebbd7fe804ee5f91db4\r\n- **Branch**: refs/heads/release/8.0-preview1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-preview.1.23081.6 to 8.0.0-preview.1.23104.3][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-preview.1.23081.6 to 8.0.0-preview.1.23104.3][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.1.23081.6 to 8.0.0-preview.1.23104.3][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.1.23081.6 to 8.0.0-preview.1.23104.3][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.1.23081.6 to 8.0.0-preview.1.23104.3][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-preview.1.23081.6 to 8.0.0-preview.1.23104.3][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.1.23081.6 to 8.0.0-preview.1.23104.3][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.1.23081.6 to 8.0.0-preview.1.23104.3][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.1.23081.6 to 8.0.0-preview.1.23104.3][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-preview.1.23081.6 to 8.0.0-preview.1.23104.3][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.1.23081.6 to 8.0.0-preview.1.23104.3][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.1.23081.6 to 8.0.0-preview.1.23104.3][1]\r\n  - **System.CodeDom**: [from 8.0.0-preview.1.23081.6 to 8.0.0-preview.1.23104.3][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.1.23081.6 to 8.0.0-preview.1.23104.3][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.1.23081.6 to 8.0.0-preview.1.23104.3][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.1.23081.6 to 8.0.0-preview.1.23104.3][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.1.23081.6 to 8.0.0-preview.1.23104.3][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-preview.1.23081.6 to 8.0.0-preview.1.23104.3][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.1.23081.6 to 8.0.0-preview.1.23104.3][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.1.23081.6 to 8.0.0-preview.1.23104.3][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.1.23081.6 to 8.0.0-preview.1.23104.3][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.1.23081.6 to 8.0.0-preview.1.23104.3][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.1.23081.6 to 8.0.0-preview.1.23104.3][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.1.23081.6 to 8.0.0-preview.1.23104.3][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.1.23081.6 to 8.0.0-preview.1.23104.3][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-preview.1.23081.6 to 8.0.0-preview.1.23104.3][1]\r\n  - **System.Text.Json**: [from 8.0.0-preview.1.23081.6 to 8.0.0-preview.1.23104.3][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.1.23081.6 to 8.0.0-preview.1.23104.3][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.1.23081.6 to 8.0.0-preview.1.23104.3][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.1.23081.6 to 8.0.0-preview.1.23104.3][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/1b2c4a9...6507a44\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4df5b787-1726-4081-4cf7-08dafe3cf288)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8569)","Url":"https://github.com/dotnet/winforms/pull/8569","RelatedDescription":"Closed or merged PR \"[release/8.0-preview1] Update dependencies from dotnet/runtime\" (#8569)"},{"Id":"1571309458","IsPullRequest":true,"CreatedAt":"2023-02-05T08:20:52","Actor":"gpetrou","Number":"8571","RawContent":null,"Title":"Use TabPage generic list instead of array in TabControl","State":"open","Body":"## Proposed changes\r\n\r\n- Use TabPage generic list instead of array in TabControl.\r\n- Addresses some of the feedback in https://github.com/dotnet/winforms/pull/7316.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8571)","Url":"https://github.com/dotnet/winforms/pull/8571","RelatedDescription":"Open PR \"Use TabPage generic list instead of array in TabControl\" (#8571)"},{"Id":"1571295349","IsPullRequest":true,"CreatedAt":"2023-02-05T07:13:20","Actor":"gpetrou","Number":"8570","RawContent":null,"Title":"Enable nullability in some ToolStrip members","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in some ToolStrip members.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8570)","Url":"https://github.com/dotnet/winforms/pull/8570","RelatedDescription":"Open PR \"Enable nullability in some ToolStrip members\" (#8570)"},{"Id":"1570585926","IsPullRequest":false,"CreatedAt":"2023-02-03T22:47:58","Actor":"lonitra","Number":"8566","RawContent":null,"Title":"[Tracking] Investigate Windows 10 Restriction Check on Switches","State":"open","Body":"Via discussion https://github.com/dotnet/winforms/pull/8556#discussion_r1096222194 , it may not be necessary to do a check if OS version is Windows 10 here\r\nhttps://github.com/dotnet/winforms/blob/81e690c4e5fccb0843815c05dfbe261f669862ee/src/System.Windows.Forms.Primitives/src/System/LocalAppContextSwitches/LocalAppContextSwitches.cs#L97\r\nbut investigation needs to be done.","Url":"https://github.com/dotnet/winforms/issues/8566","RelatedDescription":"Open issue \"[Tracking] Investigate Windows 10 Restriction Check on Switches\" (#8566)"},{"Id":"1570515296","IsPullRequest":true,"CreatedAt":"2023-02-03T21:50:29","Actor":"dreddy-work","Number":"8565","RawContent":null,"Title":"Removing invalid labels from closed/merged PRs","State":"closed","Body":"NA\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8565)","Url":"https://github.com/dotnet/winforms/pull/8565","RelatedDescription":"Closed or merged PR \"Removing invalid labels from closed/merged PRs\" (#8565)"},{"Id":"1570385899","IsPullRequest":true,"CreatedAt":"2023-02-03T20:14:24","Actor":"MattGal","Number":"8563","RawContent":null,"Title":"Automatic pool provider selection ","State":"closed","Body":"Trying out automatic provider selection; do not merge.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8563)","Url":"https://github.com/dotnet/winforms/pull/8563","RelatedDescription":"Closed or merged PR \"Automatic pool provider selection \" (#8563)"},{"Id":"1569813704","IsPullRequest":true,"CreatedAt":"2023-02-03T20:06:36","Actor":"dotnet-maestro[bot]","Number":"8559","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230202.7\r\n- **Date Produced**: February 3, 2023 8:26:03 AM UTC\r\n- **Commit**: 9ffc5fe52027fe193625dfd7069dcf64006f6fb5\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-preview.2.23101.9 to 8.0.0-preview.2.23102.7][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-preview.2.23101.9 to 8.0.0-preview.2.23102.7][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.2.23101.9 to 8.0.0-preview.2.23102.7][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.2.23101.9 to 8.0.0-preview.2.23102.7][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.2.23101.9 to 8.0.0-preview.2.23102.7][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-preview.2.23101.9 to 8.0.0-preview.2.23102.7][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.2.23101.9 to 8.0.0-preview.2.23102.7][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.2.23101.9 to 8.0.0-preview.2.23102.7][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.2.23101.9 to 8.0.0-preview.2.23102.7][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-preview.2.23101.9 to 8.0.0-preview.2.23102.7][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.2.23101.9 to 8.0.0-preview.2.23102.7][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.2.23101.9 to 8.0.0-preview.2.23102.7][1]\r\n  - **System.CodeDom**: [from 8.0.0-preview.2.23101.9 to 8.0.0-preview.2.23102.7][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.2.23101.9 to 8.0.0-preview.2.23102.7][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.2.23101.9 to 8.0.0-preview.2.23102.7][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.2.23101.9 to 8.0.0-preview.2.23102.7][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.2.23101.9 to 8.0.0-preview.2.23102.7][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-preview.2.23101.9 to 8.0.0-preview.2.23102.7][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.2.23101.9 to 8.0.0-preview.2.23102.7][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.2.23101.9 to 8.0.0-preview.2.23102.7][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.2.23101.9 to 8.0.0-preview.2.23102.7][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.2.23101.9 to 8.0.0-preview.2.23102.7][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.2.23101.9 to 8.0.0-preview.2.23102.7][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.2.23101.9 to 8.0.0-preview.2.23102.7][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.2.23101.9 to 8.0.0-preview.2.23102.7][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-preview.2.23101.9 to 8.0.0-preview.2.23102.7][1]\r\n  - **System.Text.Json**: [from 8.0.0-preview.2.23101.9 to 8.0.0-preview.2.23102.7][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.2.23101.9 to 8.0.0-preview.2.23102.7][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.2.23101.9 to 8.0.0-preview.2.23102.7][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.2.23101.9 to 8.0.0-preview.2.23102.7][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/bab1596...9ffc5fe\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8559)","Url":"https://github.com/dotnet/winforms/pull/8559","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8559)"},{"Id":"1569813341","IsPullRequest":true,"CreatedAt":"2023-02-03T19:38:57","Actor":"dotnet-maestro[bot]","Number":"8558","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20230202.4\r\n- **Date Produced**: February 3, 2023 3:03:19 AM UTC\r\n- **Commit**: afa0b37a066ac10768e49b29c82e5e039e714655\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23101.1 to 8.0.0-beta.23102.4][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.23101.1 to 8.0.0-beta.23102.4][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.23101.1 to 8.0.0-beta.23102.4][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23101.1 to 8.0.0-beta.23102.4][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.23101.1 to 8.0.0-beta.23102.4][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23101.1 to 8.0.0-beta.23102.4][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/c4d6ac0...afa0b37\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8558)","Url":"https://github.com/dotnet/winforms/pull/8558","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#8558)"},{"Id":"1570346398","IsPullRequest":false,"CreatedAt":"2023-02-03T19:38:03","Actor":"runfoapp[bot]","Number":"8562","RawContent":null,"Title":"[flaky test] control_activexfontmarshalertests.activexfontmarshaler_roundtripmanagedfont","State":"open","Body":"<!-- runfo report start -->\r\nRunfo Tracking Issue: [[flaky test] control_activexfontmarshalertests.activexfontmarshaler_roundtripmanagedfont](https://runfo.azurewebsites.net/tracking/issue/456)\r\n|Build|Definition|Kind|Run Name|\r\n|---|---|---|---|\r\n|[162271](https://dev.azure.com/dnceng-public/public/_build/results?buildId=162271)|[dotnet-winforms CI](https://dnceng-public.visualstudio.com/public/_build?definitionId=76)|[PR 8518](https://github.com/dotnet/winforms/pull/8518)|Windows_arm64-xunit|\r\n|[161772](https://dev.azure.com/dnceng-public/public/_build/results?buildId=161772)|[dotnet-winforms CI](https://dnceng-public.visualstudio.com/public/_build?definitionId=76)|[PR 8353](https://github.com/dotnet/winforms/pull/8353)|Windows_x86-xunit|\r\n|[158944](https://dev.azure.com/dnceng-public/public/_build/results?buildId=158944)|[dotnet-winforms CI](https://dnceng-public.visualstudio.com/public/_build?definitionId=76)|Rolling|Windows_x64-xunit|\r\n|[158602](https://dev.azure.com/dnceng-public/public/_build/results?buildId=158602)|[dotnet-winforms CI](https://dnceng-public.visualstudio.com/public/_build?definitionId=76)|[PR 8559](https://github.com/dotnet/winforms/pull/8559)|Windows_x64-xunit|\r\n\r\n\r\n\r\nBuild Result Summary\r\n|Day Hit Count|Week Hit Count|Month Hit Count|\r\n|---|---|---|\r\n|1|4|4|\r\n\r\n<!-- runfo report end -->\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/8562","RelatedDescription":"Open issue \"[flaky test] control_activexfontmarshalertests.activexfontmarshaler_roundtripmanagedfont\" (#8562)"},{"Id":"1570323435","IsPullRequest":false,"CreatedAt":"2023-02-03T19:16:54","Actor":"merriemcgaw","Number":"8561","RawContent":null,"Title":"[Tracking] CodeQL Bugs","State":"open","Body":"- [ ] [AB#1666874](https://devdiv.visualstudio.com/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_workitems/edit/1666874)\r\n- [ ] [AB#1666875](https://devdiv.visualstudio.com/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_workitems/edit/1666875)\r\n- [ ] [AB#1666876](https://devdiv.visualstudio.com/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_workitems/edit/1666876)\r\n- [ ] [AB#1666878](https://devdiv.visualstudio.com/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_workitems/edit/1666878)\r\n- [x] [AB#1666879](https://devdiv.visualstudio.com/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_workitems/edit/1666879)\r\n- [ ] [AB#1666880](https://devdiv.visualstudio.com/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_workitems/edit/1666880)\r\n- [ ] [AB#1666882](https://devdiv.visualstudio.com/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_workitems/edit/1666882)\r\n- [ ] [AB#1666883](https://devdiv.visualstudio.com/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_workitems/edit/1666883)\r\n- [ ] [AB#1666895](https://devdiv.visualstudio.com/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_workitems/edit/1666895)\r\n- [ ] [AB#1666897](https://devdiv.visualstudio.com/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_workitems/edit/1666897)\r\n- [ ] [AB#1666899](https://devdiv.visualstudio.com/0bdbc590-a062-4c3f-b0f6-9383f67865ee/_workitems/edit/1666899)","Url":"https://github.com/dotnet/winforms/issues/8561","RelatedDescription":"Open issue \"[Tracking] CodeQL Bugs\" (#8561)"},{"Id":"1570271551","IsPullRequest":true,"CreatedAt":"2023-02-03T18:27:48","Actor":"dreddy-work","Number":"8560","RawContent":null,"Title":"Update fabricbot.json","State":"closed","Body":"adding new milestone\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8560)","Url":"https://github.com/dotnet/winforms/pull/8560","RelatedDescription":"Closed or merged PR \"Update fabricbot.json\" (#8560)"},{"Id":"1569004315","IsPullRequest":true,"CreatedAt":"2023-02-03T17:03:53","Actor":"github-actions[bot]","Number":"8557","RawContent":null,"Title":"[release/7.0] Fix `KeyUp` event on `Listview` control","State":"closed","Body":"Backport of #8546 to release/7.0\n\n/cc @dreddy-work @elachlan\n\n## Customer Impact\n\n## Testing\n\n## Risk\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8557)","Url":"https://github.com/dotnet/winforms/pull/8557","RelatedDescription":"Closed or merged PR \"[release/7.0] Fix `KeyUp` event on `Listview` control\" (#8557)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-02-08T03:30:33.0782564Z","RunDurationInMilliseconds":559}