{"Data":{"GitHub":{"Issues":[{"Id":"702606380","IsPullRequest":false,"CreatedAt":"2020-09-17T02:39:16","Actor":"Jessie-Zhang01","Number":"3927","RawContent":null,"Title":"An error pops up after clicking the smart tag of ToolStrip/MenuStrip/StatusStrip/TreeView/PictureBox controls","State":"closed","Body":"* .NET Core Version: .NET 5.0.100-rc.2.20465.23\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**More Info**\r\n\r\n1. This is a regression issue, it recurs when installing .NET 5.0.100-rc.2.20465.23 from https://github.com/dotnet/installer and app targets to .NET 5.0.\r\n2. This issue cannot reproduce on .NET 5.0.100-rc.2.20464.22.\r\n3. This issue cannot reproduce on VS comes with .NET 5.0 rc1 and app target .NET 3.1.\r\n\r\n**Problem description:**\r\nUser try to show the Tasks dialog to modify some properties using smart tag, but an error pops up after clicking the smart tag button.\r\n![image](https://user-images.githubusercontent.com/45864649/93316911-5f141080-f83f-11ea-80da-f0ceb56e2b09.png)\r\n\r\n**Expected behavior:**\r\nThe Controls' Tasks dialog should be shown normally.\r\n![image](https://user-images.githubusercontent.com/45864649/93317276-dc3f8580-f83f-11ea-9d16-7fda747e7e8c.png)\r\n\r\n**Minimal repro:**\r\n1. Create a winforms core project.\r\n2. Drag and drop a ToolStrip control to form designer.\r\n3. Click the smart tag in the top right corner of the ToolStrip control.\r\n\r\n**Error Logging**\r\n[02:17:04.3919896] REQUEST FAILURES: Types/GetEditor\r\n                   Microsoft.VisualStudio.WinForms.RemoteClient.DesignToolsServerException: The type initializer for 'WinFormsSurface.Handlers.Types.GetEditorHandler' threw an exception. ---> Microsoft.VisualStudio.WinForms.RemoteClient.DesignToolsServerException: Could not load type 'System.Drawing.Design.BitmapEditor' from assembly 'System.Windows.Forms.Design.Editors, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.\r\n                      --- End of inner exception stack trace ---","Url":"https://github.com/dotnet/winforms/issues/3927","RelatedDescription":"Closed issue \"An error pops up after clicking the smart tag of ToolStrip/MenuStrip/StatusStrip/TreeView/PictureBox controls\" (#3927)"},{"Id":"702606350","IsPullRequest":false,"CreatedAt":"2020-09-17T02:38:26","Actor":"Jessie-Zhang01","Number":"3926","RawContent":null,"Title":"VS crash and restart after clicking the smart tag of ImageList/ContextMenuStrip controls in Component Tray","State":"closed","Body":"* .NET Core Version: .NET 5.0.100-rc.2.20465.23\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**More Info**\r\n\r\n1. This is a regression issue, it recurs when installing .NET 5.0.100-rc.2.20465.23 from https://github.com/dotnet/installer and app targets to .NET 5.0.\r\n2. This issue cannot reproduce on .NET 5.0.100-rc.2.20464.22.\r\n3. This issue cannot reproduce on VS comes with .NET 5.0 rc1 and app target .NET 3.1.\r\n\r\n**Problem description:**\r\nUser try to show the Tasks dialog to modify some properties using smart tag, but VS crash and restart after clicking the smart tag button.\r\n![Issue2steps1](https://user-images.githubusercontent.com/45864649/93318971-e793b080-f841-11ea-97db-bf5c55457c84.gif)\r\n\r\n**Call Stack:**\r\n[Call Stack.txt](https://github.com/dotnet/winforms/files/5231450/Call.Stack.txt)\r\n\r\n**Expected behavior:**\r\nThe Tasks dialog should be shown normally and VS shouldn’t crash.\r\n![image](https://user-images.githubusercontent.com/45864649/93317437-127d0500-f840-11ea-9cf1-98e104363771.png)\r\n\r\n**Minimal repro:**\r\n\r\n1. Create a winforms core project.\r\n2. Drag and drop a ImageList control\r\n3. Click the smart tag of it in Component tray.","Url":"https://github.com/dotnet/winforms/issues/3926","RelatedDescription":"Closed issue \"VS crash and restart after clicking the smart tag of ImageList/ContextMenuStrip controls in Component Tray\" (#3926)"},{"Id":"702609791","IsPullRequest":false,"CreatedAt":"2020-09-17T02:38:15","Actor":"Lydia-Shi","Number":"3928","RawContent":null,"Title":"VS is restarting when clicking “Add” button in ListViewItem Collection Editor","State":"closed","Body":"* .NET Core Version: \r\n.NET 5.0.100-rc.2.20465.34\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**More info:**\r\n\r\n1. This is a regression issue, it cannot reproduce on .NET 5.0.100-rc.2.20464.22 build.\r\n2. This issue also occurs when clicking “Add” button in ListViewGroup Collection Editor and ColumnHeader Collection Editor.\r\n3. This issue cannot reproduce on VS comes with .NET 5.0 rc1 and app target .NET 3.1.\r\n\r\n**Problem description:**\r\nWhen clicking “Add” button in ListViewItem Collection Editor, VS restarts. \r\n[CallStack.txt](https://github.com/dotnet/winforms/files/5231207/CallStack.txt)\r\n![EditItemsRepro](https://user-images.githubusercontent.com/54019172/93319112-14e05e80-f842-11ea-8c01-bc7fea1507e2.gif)\r\n\r\n**Expected behavior:**\r\nWhen clicking “Add” button in ListViewItem Collection Editor, VS works well .\r\n\r\n**Minimal repro:**\r\n1.\tCreate a WinForms .Net Core application and change the target framework to .NET 5.0\r\n2.\tDrag and drop a ListView to the form designer\r\n3.\tRight-click on this ListView control, then click Edit Items\r\n4.\tIn ListViewItem Collection Editor, click Add button\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/3928","RelatedDescription":"Closed issue \"VS is restarting when clicking “Add” button in ListViewItem Collection Editor\" (#3928)"},{"Id":"702586169","IsPullRequest":false,"CreatedAt":"2020-09-17T02:38:03","Actor":"Lydia-Shi","Number":"3923","RawContent":null,"Title":"Some properties are grey with black rectangle in Properties window after choosing more controls","State":"closed","Body":"* .NET Core Version: \r\n.NET 5.0.100-rc.2.20465.23\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**More info:**\r\n\r\n1. This is a regression issue, it cannot repro on  .NET 5.0.100-rc.2.20464.22\r\n2. After step3, click \"Events\" icon in Properties Browser window, vs crash.  Below is CallStack: [CallStack.txt](https://github.com/dotnet/winforms/files/5231274/CallStack.txt)\r\n\r\n\r\n**Problem description:**\r\nSome properties are grey with black rectangle in Properties window after choosing more controls. Please see following screenshot:\r\n![image](https://user-images.githubusercontent.com/54019172/93313783-7e10a380-f83b-11ea-919d-509b95da62c4.png)\r\n\r\n**Expected behavior:**\r\nThey are enabled properties after choosing more controls. Please see following screenshot:\r\n![image](https://user-images.githubusercontent.com/54019172/93313957-bca65e00-f83b-11ea-9207-30f544ca2237.png)\r\n\r\n**Minimal repro:**\r\n\r\n1. Create a WinForms .Net Core application\r\n2. Add two TreeView controls to form designer\r\n3. Choose these 2 controls, then go to VS properties window to observe all properties","Url":"https://github.com/dotnet/winforms/issues/3923","RelatedDescription":"Closed issue \"Some properties are grey with black rectangle in Properties window after choosing more controls\" (#3923)"},{"Id":"702598718","IsPullRequest":false,"CreatedAt":"2020-09-17T02:26:16","Actor":"Amy-Li03","Number":"3924","RawContent":null,"Title":"VS is restarting when opening the Items Collection Editor","State":"closed","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n.NET 5.0.100-rc.2.20465.34\r\n\r\n* More info:\r\n1. This is a regression issue, it cannot reproduce on .NET 5.0.100-rc.2.20464.22 build.\r\n2. ContextMenuStrip, StatusStrip, ToolStrip controls also can repro this issue.\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\nVS restarts when opening the Items Collection Editor by click Edit Items on MenuStrip.\r\n\r\n**Call Stack:**\r\n[callStack.txt](https://github.com/dotnet/winforms/files/5231136/callStack.txt)\r\n\r\n**Expected behavior:**\r\nItems Collection Editor dialog should show up.\r\n\r\n**Minimal repro:**\r\n1. Create a WinForms .Net Core application and change the target framework to .NET 5.0\r\n2. Drag and drop a MenuStrip to the form designer\r\n3. Right-click on the MenuStrip control, then click Edit Items","Url":"https://github.com/dotnet/winforms/issues/3924","RelatedDescription":"Closed issue \"VS is restarting when opening the Items Collection Editor\" (#3924)"},{"Id":"702558872","IsPullRequest":false,"CreatedAt":"2020-09-17T02:25:56","Actor":"Ashley-Li","Number":"3922","RawContent":null,"Title":"Vs crash and restart when select Form/all controls in the properties windows","State":"closed","Body":"* .NET Core Version:\r\n .NET 5.0.100-rc.2.20465.23 \r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n* More info\r\n  1.  **This is a regression issue**, it recurs when installing .NET 5.0.100-rc.2.20465.23 from https://github.com/dotnet/installer and app targets to .NET 5.0.\r\n  2. This issue cannot reproduce on .NET 5.0.100-rc.2.20464.22 build.\r\n  3. This issue cannot reproduce on VS comes with .NET 5.0 rc1 and   app target .NET 3.1.\r\n\r\n**Problem description:**\r\nWhen select Form1 in the  properties windows, vs crash and restart.\r\n![image](https://user-images.githubusercontent.com/56664234/93310983-00976400-f838-11ea-8aec-af9103047a1b.png)\r\n![selectForm1_VS_crash_restart](https://user-images.githubusercontent.com/56664234/93311016-0ab96280-f838-11ea-8a63-2985af8eb8a7.gif)\r\n\r\n**Expected behavior:**\r\nWhen select Form1 in the  properties windows, vs works well and does't crash and restart.\r\n\r\n**Minimal repro:**\r\nThe repro step is very simple, just create an empty app.\r\n1. Create a WinForms .Net Core application and target .NET 5.0 .\r\n2. Focus on Form designer, and go to Properties window or press F4.\r\n3. Select Form1 in the upper part of the properties windows.\r\n**Call stack:** \r\n[Call Stack.txt](https://github.com/dotnet/winforms/files/5230861/Call.Stack.txt)\r\n","Url":"https://github.com/dotnet/winforms/issues/3922","RelatedDescription":"Closed issue \"Vs crash and restart when select Form/all controls in the properties windows\" (#3922)"},{"Id":"702556764","IsPullRequest":false,"CreatedAt":"2020-09-17T02:25:37","Actor":"Amy-Li03","Number":"3921","RawContent":null,"Title":"Properties window is blank after installed latest .NET 5.0 SDK","State":"closed","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n.NET 5.0.100-rc.2.20465.34\r\n\r\n![dll](https://user-images.githubusercontent.com/62929087/93310626-9da5cd00-f837-11ea-87d1-2b299d308aad.png)\r\n\r\n\r\n* More info:\r\nThis is a regression issue, it cannot reproduce on .NET 5.0.100-rc.2.20464.22 build.\r\n![GoodDll](https://user-images.githubusercontent.com/62929087/93318068-d0a08e80-f840-11ea-9664-8c9368b567aa.png)\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\nProperties window is blank, we cannot see any properties for form or added controls, and no properties and events toolbar in Properties window.\r\n![blankIssue](https://user-images.githubusercontent.com/62929087/93310646-a1395400-f837-11ea-8730-6deef0a6031f.png)\r\n\r\n**Expected behavior:**\r\nAll properties and events are in Properties window.\r\n![Correctly](https://user-images.githubusercontent.com/62929087/93310658-a4344480-f837-11ea-9415-ae1444847800.png)\r\n\r\n**Minimal repro:**\r\n1. Create a WinForms .Net Core application and change the targetFramework to .NET 5.0.\r\n2. Focus on Form designer, and go to Properties window or press F4.\r\n3. Observe **Properties** window.","Url":"https://github.com/dotnet/winforms/issues/3921","RelatedDescription":"Closed issue \"Properties window is blank after installed latest .NET 5.0 SDK\" (#3921)"},{"Id":"703186765","IsPullRequest":true,"CreatedAt":"2020-09-17T01:52:07","Actor":"dotnet-maestro[bot]","Number":"3935","RawContent":null,"Title":"[release/5.0-rc2] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c5389e69-a40e-47fd-afe1-08d849eee71f)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: c5389e69-a40e-47fd-afe1-08d849eee71f\r\n- **Build**: 20200916.8\r\n- **Date Produced**: 9/17/2020 12:36 AM\r\n- **Commit**: c30d4bb26a7cd49890aa81e32e0dc8a87ae96696\r\n- **Branch**: refs/heads/release/5.0-rc2\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **System.CodeDom**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **System.Diagnostics.EventLog**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **System.DirectoryServices**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **Microsoft.NETCore.App**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **Microsoft.NETCore.Targets**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **Microsoft.Win32.Registry**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **System.Drawing.Common**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **System.Threading.AccessControl**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **System.Windows.Extensions**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **System.Text.Json**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **System.Text.Encodings.Web**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **System.IO.Packaging**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **System.Security.AccessControl**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **System.Security.Cryptography.Cng**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **System.Security.Cryptography.Xml**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **System.Security.Permissions**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **System.Security.Principal.Windows**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n  - **System.Resources.Extensions**: [from 5.0.0-rc.2.20465.7 to 5.0.0-rc.2.20466.8][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/e24e67a...c30d4bb\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c5389e69-a40e-47fd-afe1-08d849eee71f)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3935)","Url":"https://github.com/dotnet/winforms/pull/3935","RelatedDescription":"Closed or merged PR \"[release/5.0-rc2] Update dependencies from dotnet/runtime\" (#3935)"},{"Id":"703174074","IsPullRequest":true,"CreatedAt":"2020-09-17T01:33:44","Actor":"RussKie","Number":"3934","RawContent":null,"Title":"Correct regression introduced in #659","State":"closed","Body":"Resolves #3932\r\n\r\n(cherry picked from commit 6b20c21512a696a383a673e1411793846610000c)\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n## Proposed changes\r\n\r\n- Correct the typo in `DataGridViewRowConverter` that led to CodeDom serialization to fail for `DataGridView`.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- `DataGridView` serialization is correctly emitted by the designer\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- added unit tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3934)","Url":"https://github.com/dotnet/winforms/pull/3934","RelatedDescription":"Closed or merged PR \"Correct regression introduced in #659\" (#3934)"},{"Id":"703121562","IsPullRequest":true,"CreatedAt":"2020-09-16T23:34:36","Actor":"RussKie","Number":"3933","RawContent":null,"Title":"Correct regression introduced in #659","State":"closed","Body":"Resolves #3932\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n## Proposed changes\r\n\r\n- Correct the typo in `DataGridViewRowConverter` that led to CodeDom serialization to fail for `DataGridView`.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- `DataGridView` serialization is correctly emitted by the designer\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3933)","Url":"https://github.com/dotnet/winforms/pull/3933","RelatedDescription":"Closed or merged PR \"Correct regression introduced in #659\" (#3933)"},{"Id":"703094406","IsPullRequest":false,"CreatedAt":"2020-09-16T23:34:36","Actor":"DustinCampbell","Number":"3932","RawContent":null,"Title":"Typo in DataGridViewRowConverter causes CodeDom serialization to fail for DataGridView","State":"closed","Body":"The code below has a typo where `DataGridView` is used instead of `DataGridViewRow`.\r\n\r\nhttps://github.com/dotnet/winforms/blob/2ae45c66fdcb8e6aadf43288b7429f17f1fd0f49/src/System.Windows.Forms/src/System/Windows/Forms/DataGridViewRowConverter.cs#L33-L40","Url":"https://github.com/dotnet/winforms/issues/3932","RelatedDescription":"Closed issue \"Typo in DataGridViewRowConverter causes CodeDom serialization to fail for DataGridView\" (#3932)"},{"Id":"702191401","IsPullRequest":false,"CreatedAt":"2020-09-16T23:27:19","Actor":"DmitryGaravsky","Number":"3910","RawContent":null,"Title":"Regression in .Net 5 RC1 - the PaintEventArgs.Graphics is recreated when requested and this break all the GDI-interop scenarios due to System.ArgumentException","State":"closed","Body":"**Description**\r\nFor now, the GDI interop code fails with the ArgumentException:\r\n```\r\nSystem.ArgumentException: 'Parameter is not valid.'\r\n```\r\nOur unit tests detected this issue immediately after upgrade (we maintain unit tests for all the released and preview environments like .net core 5 in our codebase).\r\nThus it is an important breaking change for us because **most of our UI controls are broken now**.\r\n\r\n**Configuration**\r\nOS Version: Microsoft Windows [Version 10.0.18362.535]\r\n.Net Framework Version: Microsoft (R) .NET CLR Version Tool Version 4.8.3928.0\r\n.Net Core Version: SDK Version: 5.0.100-rc.1.20452.10\r\n\r\n\r\n**Regression?**\r\nYes, this works correctly until .Net Core 5 RC1\r\n\r\n**Other information**\r\nHere is the code snippet which fails under .Net Core 5 RC1:\r\n\r\n```cs\r\nusing System.Windows.Forms;\r\n\r\nnamespace WindowsFormsApp1 {\r\n    public class Form1 : Form {\r\n        protected override void OnPaint(PaintEventArgs e) {\r\n            var hdc = e.Graphics.GetHdc();\r\n            // do something with hdc\r\n            e.Graphics.ReleaseHdc(hdc); // crash here (because of the e.Graphics not related to previously created hdc)\r\n        }\r\n    }\r\n}\r\n```\r\nWe have also detected **multiple clipping issues** related to the PaintEventArgs.Graphics recreation.\r\n","Url":"https://github.com/dotnet/winforms/issues/3910","RelatedDescription":"Closed issue \"Regression in .Net 5 RC1 - the PaintEventArgs.Graphics is recreated when requested and this break all the GDI-interop scenarios due to System.ArgumentException\" (#3910)"},{"Id":"702398887","IsPullRequest":true,"CreatedAt":"2020-09-16T21:00:01","Actor":"JeremyKuhne","Number":"3914","RawContent":null,"Title":"Add ServiceProvider overloads","State":"closed","Body":"Add generic helpers to make callsite code easier to follow. Fixed some naming along the way and a few comments.\r\n\r\nNote that there is some weird code paths- there is some logic that didn't make it through to Core which makes some of the code seem odd. I'm reviewing the methods with the original sources when I'm adding tests (next up).\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3914)","Url":"https://github.com/dotnet/winforms/pull/3914","RelatedDescription":"Closed or merged PR \"Add ServiceProvider overloads\" (#3914)"},{"Id":"702463412","IsPullRequest":true,"CreatedAt":"2020-09-16T18:08:02","Actor":"JeremyKuhne","Number":"3916","RawContent":null,"Title":"Fix PaintEventArgs Graphics property (#3913)","State":"closed","Body":"#### Port #3913 to RC2 branch\r\n\r\nMove the shared logic to a class from a struct to avoid working on a copy of the nested data.\r\n\r\nFixes #3910\r\n\r\n\r\n## Proposed changes\r\n\r\n- Change shared logic container from struct to class\r\n\r\n## Customer Impact\r\n\r\n- Without this, the Graphics object is always recreated when the args are created from an HDC\r\n- Modifcations to the Graphics object are never retained\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Low, changing to a class avoids copies\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Add specific test to make sure we're retaining the right instance on an args created from an HDC\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3916)","Url":"https://github.com/dotnet/winforms/pull/3916","RelatedDescription":"Closed or merged PR \"Fix PaintEventArgs Graphics property (#3913)\" (#3916)"},{"Id":"702960273","IsPullRequest":false,"CreatedAt":"2020-09-16T17:55:26","Actor":"IrinaPykhova","Number":"3931","RawContent":null,"Title":"NumericUpDown drawing issue","State":"open","Body":"* .NET Core Version: .Net 5 RC1 (also reproducible with RC2)\r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.100-rc.1.20452.10\r\n Commit:    473d1b592e\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19041\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\nstandard NumericUpDown draws some garbage around the text area. Here are 2 examples:\r\nat runtime:\r\n![NumericUpDown](https://user-images.githubusercontent.com/19591075/93373371-ad8cd380-f86e-11ea-88d7-8170d76c5274.jpg)\r\nin VS designer:\r\n![NumericUpDown1](https://user-images.githubusercontent.com/19591075/93373386-b087c400-f86e-11ea-8f57-dfac59935dac.jpg)\r\nThe actual appearance might be different, sometimes it looks not like lines, but as a part of some underlying text.\r\n\r\n**Expected behavior:**\r\nNo artifacts, only text, borders and buttons\r\n\r\n**Minimal repro:**\r\n\r\n- place NumericUpDown to the form\r\n- run application\r\n- collapse application window to tray\r\n- restore application window - you should see artifacts\r\n- if you don't see artifacts on the previous step, collapse app window again, open some other application windows so that they cover desktop and then restore your app window. You should see artifacts. If you had your form opened in VS designer, then you should see bad effects in VS designer as well\r\n","Url":"https://github.com/dotnet/winforms/issues/3931","RelatedDescription":"Open issue \"NumericUpDown drawing issue\" (#3931)"},{"Id":"702705699","IsPullRequest":true,"CreatedAt":"2020-09-16T12:27:19","Actor":"dotnet-maestro[bot]","Number":"3930","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200914.13\r\n- **Date Produced**: 9/15/2020 4:14 AM\r\n- **Commit**: bd918c64b786bdba42e895e4cb93603e5a2ca608\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: [from 5.0.0-beta.20461.7 to 5.0.0-beta.20464.13][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 5.0.0-beta.20461.7 to 5.0.0-beta.20464.13][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 5.0.0-beta.20461.7 to 5.0.0-beta.20464.13][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 5.0.0-beta.20461.7 to 5.0.0-beta.20464.13][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 5.0.0-beta.20461.7 to 5.0.0-beta.20464.13][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/a81e6e8...bd918c6\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3930)","Url":"https://github.com/dotnet/winforms/pull/3930","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3930)"},{"Id":"702699254","IsPullRequest":true,"CreatedAt":"2020-09-16T11:51:40","Actor":"SergeySmirnov-Akvelon","Number":"3929","RawContent":null,"Title":"Adding access to page buttons on PrintPreviewDialog by keyboard shortcut keys","State":"open","Body":"Fixes #3682\r\n\r\n\r\n## Proposed changes\r\n\r\n- Adding support of keyboard shortcut keys for access to page buttons on PrintPreviewDialog\r\n\r\n## Customer Impact\r\n- The user will be able to switch between viewing modes using the shortcut keys (Ctrl+1, Ctrl+2, etc) on PrintPreviewDialog\r\n\r\n## Regression? \r\n\r\n-  No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- NET Core 5.0.100-rc.1.20420.14\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3929)","Url":"https://github.com/dotnet/winforms/pull/3929","RelatedDescription":"Open PR \"Adding access to page buttons on PrintPreviewDialog by keyboard shortcut keys\" (#3929)"},{"Id":"702603556","IsPullRequest":false,"CreatedAt":"2020-09-16T09:23:56","Actor":"Jessie-Zhang01","Number":"3925","RawContent":null,"Title":"[Accessibility] In the editing state, Accessibility Insights is not responding when just select DataGridViewTextBoxCell","State":"open","Body":"* .NET Core Version: .Net SDK 5.0.100-rc.2.20465.23\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**More Info:**\r\nThis issue cannot reproduce on Inspect and Narrator.\r\n\r\n**Minimal repro:**\r\n\r\n1. Open the attached [WinFormsApp2.zip](https://github.com/dotnet/winforms/files/5231054/WinFormsApp2.zip) application in VS, then build and run it.\r\n2. Enter text into Column1(eg: winforms).\r\n3. Open Accessibility Insights and focus on the Column1.\r\n4. Observe Accessibility Insights.\r\n\r\n**Expected behavior:**\r\nAccessibility Insights is working.\r\n![Issue2steps1](https://user-images.githubusercontent.com/45864649/93316486-d5fcd980-f83e-11ea-8abb-f44ef23dcbab.gif)\r\n\r\n**Actual behavior:**\r\nAccessibility Insights is not responding.\r\n![Issue2steps](https://user-images.githubusercontent.com/45864649/93316495-d7c69d00-f83e-11ea-8404-80c0aa37677f.gif)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/3925","RelatedDescription":"Open issue \"[Accessibility] In the editing state, Accessibility Insights is not responding when just select DataGridViewTextBoxCell\" (#3925)"},{"Id":"702547088","IsPullRequest":true,"CreatedAt":"2020-09-16T08:00:36","Actor":"RussKie","Number":"3920","RawContent":null,"Title":"Bump SDK/toolset to RC1 to allow build in VS 16.8","State":"open","Body":"## Proposed changes\r\n\r\n- Update SDK/toolset to allow building the solution in VS 16.8\r\n- Auto fix dead warnings\r\n- Suppress new warnings (to be resolved later):\r\n    * CA1837 // Use 'Environment.ProcessId'\r\n    * CA1838 // Avoid 'StringBuilder' parameters for P/Invokes\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- None - infra changes\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3917)\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3920)","Url":"https://github.com/dotnet/winforms/pull/3920","RelatedDescription":"Open PR \"Bump SDK/toolset to RC1 to allow build in VS 16.8\" (#3920)"},{"Id":"702541805","IsPullRequest":false,"CreatedAt":"2020-09-16T07:52:17","Actor":"ChungNNVN","Number":"3919","RawContent":null,"Title":"The PropertyGrid displays properties of selected object incorrectly with Net 5.0 Windows app (Core)","State":"open","Body":"* .NET Core Version: \r\n.NET SDK 5.0.100-preview.7.20417.9\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\nThe PropertyGrid displays properties of selected object incorrectly in Net 5.0 app. But display correctly with Net 4.5.2 or Net Core 3.1 version. The used VS version is 16.8.0 Preview 2.1.\r\nSample code:\r\n  `private void Form1_Load(object sender, EventArgs e)`\r\n  `{`\r\n        `propertyGrid1.SelectedObject = new Font(DefaultFont.FontFamily, 15);`\r\n        `propertyGrid1.Refresh();`\r\n  `}`\r\n\r\nResult:\r\n![image](https://user-images.githubusercontent.com/13590421/93308182-24ed4380-f82c-11ea-91f0-826e4c4aac53.png)\r\n\r\n**Expected behavior:**\r\nThe PropertyGrid in Net 5.0 app display all properties of selected object.\r\n\r\n**Minimal repro:**\r\n1. Run attached app:\r\n   [TestPropertyGrid.zip](https://github.com/dotnet/winforms/files/5230658/TestPropertyGrid.zip)\r\n\r\n2. Observe:\r\n  PropertyGrid display properties of selected object.\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/3919","RelatedDescription":"Open issue \"The PropertyGrid displays properties of selected object incorrectly with Net 5.0 Windows app (Core)\" (#3919)"},{"Id":"702482363","IsPullRequest":false,"CreatedAt":"2020-09-16T06:04:30","Actor":"RussKie","Number":"3918","RawContent":null,"Title":"Flaky test: `Button_Default_WithText_LineDrawing` crashed with System.AccessViolationException","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n\r\nrelease/5.0-RC2\r\n\r\n\r\n**Problem description:**\r\n\r\nBuild: https://dev.azure.com/dnceng/public/_build/results?buildId=817037&view=results\r\n\r\n\r\n```\r\nFatal error. System.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.\r\nRepeat 2 times:\r\n--------------------------------\r\n   at Interop+User32.FillRect(HDC, RECT ByRef, HBRUSH)\r\n--------------------------------\r\n   at System.Windows.Forms.DeviceContextExtensions.FillRectangle(HDC, System.Drawing.Rectangle, HBRUSH)\r\n   at System.Windows.Forms.DeviceContextExtensions.FillRectangle(System.Windows.Forms.DeviceContextHdcScope, System.Drawing.Rectangle, HBRUSH)\r\n   at System.Windows.Forms.Control.PaintBackColor(System.Windows.Forms.PaintEventArgs, System.Drawing.Rectangle, System.Drawing.Color)\r\n   at System.Windows.Forms.Control.PaintBackground(System.Windows.Forms.PaintEventArgs, System.Drawing.Rectangle, System.Drawing.Color, System.Drawing.Point)\r\n   at System.Windows.Forms.Control.PaintBackground(System.Windows.Forms.PaintEventArgs, System.Drawing.Rectangle)\r\n   at System.Windows.Forms.ButtonInternal.ButtonBaseAdapter.PaintButtonBackground(System.Windows.Forms.PaintEventArgs, System.Drawing.Rectangle, System.Drawing.Brush)\r\n   at System.Windows.Forms.ButtonInternal.ButtonStandardAdapter.PaintWorker(System.Windows.Forms.PaintEventArgs, Boolean, System.Windows.Forms.CheckState)\r\n   at System.Windows.Forms.ButtonInternal.ButtonStandardAdapter.PaintUp(System.Windows.Forms.PaintEventArgs, System.Windows.Forms.CheckState)\r\n   at System.Windows.Forms.ButtonInternal.ButtonBaseAdapter.Paint(System.Windows.Forms.PaintEventArgs)\r\n   at System.Windows.Forms.ButtonBase.PaintControl(System.Windows.Forms.PaintEventArgs)\r\n   at System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)\r\n   at System.Windows.Forms.Control.PaintWithErrorHandling(System.Windows.Forms.PaintEventArgs, Int16)\r\n   at System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)\r\n   at System.Windows.Forms.Control.WmPrintClient(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.ButtonBase.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Button.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.OnMessage(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.NativeWindow.Callback(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.CallWindowProcW(IntPtr, IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.CallWindowProcW(IntPtr, IntPtr, WM, IntPtr, IntPtr)\r\n   at System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.ButtonBase.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Button.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.OnMessage(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.NativeWindow.Callback(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW(IntPtr, WM, IntPtr, IntPtr)\r\n   at System.Windows.Forms.ControlExtensions.PrintToMetafile(System.Windows.Forms.Control, System.Windows.Forms.Metafiles.EmfScope, PRF)\r\n   at System.Windows.Forms.Tests.ButtonRenderingTests.Button_Default_WithText_LineDrawing()\r\n   at System.RuntimeMethodHandle.InvokeMethod(System.Object, System.Object[], System.Signature, Boolean, Boolean)\r\n   at System.Reflection.MethodBase.Invoke(System.Object, System.Object[])\r\n   at Xunit.Sdk.TestInvoker`1[[System.__Canon, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e]].CallTestMethod(System.Object)\r\n   at Xunit.Sdk.UITestInvoker+<>c__DisplayClass2_0+<<RunAsync>b__2>d.MoveNext()\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Threading.Tasks.VoidTaskResult, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[Xunit.Sdk.UITestInvoker+<>c__DisplayClass2_0+<<RunAsync>b__2>d, Xunit.StaFact, Version=1.0.0.0, Culture=neutral, PublicKeyToken=593f35978b459a4b]].ExecutionContextCallback(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Threading.Tasks.VoidTaskResult, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[Xunit.Sdk.UITestInvoker+<>c__DisplayClass2_0+<<RunAsync>b__2>d, Xunit.StaFact, Version=1.0.0.0, Culture=neutral, PublicKeyToken=593f35978b459a4b]].MoveNext(System.Threading.Thread)\r\n   at System.Runtime.CompilerServices.AsyncTaskMethodBuilder`1+AsyncStateMachineBox`1[[System.Threading.Tasks.VoidTaskResult, System.Private.CoreLib, Version=5.0.0.0, Culture=neutral, PublicKeyToken=7cec85d7bea7798e],[Xunit.Sdk.UITestInvoker+<>c__DisplayClass2_0+<<RunAsync>b__2>d, Xunit.StaFact, Version=1.0.0.0, Culture=neutral, PublicKeyToken=593f35978b459a4b]].MoveNext()\r\n   at Xunit.Sdk.Utilities+SyncContextAwaiter+<>c.<OnCompleted>b__5_0(System.Object)\r\n   at System.RuntimeMethodHandle.InvokeMethod(System.Object, System.Object[], System.Signature, Boolean, Boolean)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)\r\n   at System.Delegate.DynamicInvokeImpl(System.Object[])\r\n   at System.Delegate.DynamicInvoke(System.Object[])\r\n   at System.Windows.Forms.Control.InvokeMarshaledCallbackDo(ThreadMethodEntry)\r\n   at System.Windows.Forms.Control.InvokeMarshaledCallbackHelper(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Windows.Forms.Control.InvokeMarshaledCallback(ThreadMethodEntry)\r\n   at System.Windows.Forms.Control.InvokeMarshaledCallbacks()\r\n   at System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.OnMessage(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.NativeWindow.Callback(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.DispatchMessageW(MSG ByRef)\r\n   at Interop+User32.DispatchMessageW(MSG ByRef)\r\n   at System.Windows.Forms.Application+ComponentManager.Interop.Mso.IMsoComponentManager.FPushMessageLoop(UIntPtr, msoloop, Void*)\r\n   at System.Windows.Forms.Application+ThreadContext.RunMessageLoopInner(msoloop, System.Windows.Forms.ApplicationContext)\r\n   at System.Windows.Forms.Application+ThreadContext.RunMessageLoop(msoloop, System.Windows.Forms.ApplicationContext)\r\n   at System.Windows.Forms.Application.DoEvents()\r\n   at Xunit.Sdk.WinFormsSynchronizationContextAdapter.PumpTill(System.Threading.SynchronizationContext, System.Threading.Tasks.Task)\r\n   at Xunit.Sdk.ThreadRental+<>c__DisplayClass11_0.<CreateAsync>b__0()\r\n   at System.Threading.ThreadHelper.ThreadStart_Context(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.ThreadHelper.ThreadStart()\r\n```","Url":"https://github.com/dotnet/winforms/issues/3918","RelatedDescription":"Open issue \"Flaky test: `Button_Default_WithText_LineDrawing` crashed with System.AccessViolationException\" (#3918)"},{"Id":"702479140","IsPullRequest":true,"CreatedAt":"2020-09-16T05:59:01","Actor":"RussKie","Number":"3917","RawContent":null,"Title":"Bump SDK/toolset to RC1","State":"open","Body":"## Proposed changes\r\n\r\n- Update SDK/toolset to allow building the solution in VS 16.8\r\n- Auto fix dead warnings\r\n- Suppress new warnings (to be resolved in the master branch):\r\n    * CA1837 // Use 'Environment.ProcessId'\r\n    * CA1838 // Avoid 'StringBuilder' parameters for P/Invokes\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- None - infra changes\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3917)","Url":"https://github.com/dotnet/winforms/pull/3917","RelatedDescription":"Open PR \"Bump SDK/toolset to RC1\" (#3917)"},{"Id":"702424941","IsPullRequest":true,"CreatedAt":"2020-09-16T04:34:38","Actor":"dotnet-maestro[bot]","Number":"3915","RawContent":null,"Title":"[release/5.0-rc2] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c5389e69-a40e-47fd-afe1-08d849eee71f)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: c5389e69-a40e-47fd-afe1-08d849eee71f\r\n- **Build**: 20200915.7\r\n- **Date Produced**: 9/16/2020 3:24 AM\r\n- **Commit**: e24e67a8dd52a20e5aa07b934ce7790c96808b1b\r\n- **Branch**: refs/heads/release/5.0-rc2\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.CodeDom**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Diagnostics.EventLog**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.DirectoryServices**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **Microsoft.NETCore.App**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **Microsoft.NETCore.Targets**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **Microsoft.Win32.Registry**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Drawing.Common**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Threading.AccessControl**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Windows.Extensions**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Text.Json**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Text.Encodings.Web**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.IO.Packaging**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Security.AccessControl**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Security.Cryptography.Cng**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Security.Cryptography.Xml**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Security.Permissions**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Security.Principal.Windows**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n  - **System.Resources.Extensions**: [from 5.0.0-rc.2.20465.4 to 5.0.0-rc.2.20465.7][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/acdf37b...e24e67a\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c5389e69-a40e-47fd-afe1-08d849eee71f)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3915)","Url":"https://github.com/dotnet/winforms/pull/3915","RelatedDescription":"Closed or merged PR \"[release/5.0-rc2] Update dependencies from dotnet/runtime\" (#3915)"},{"Id":"702346931","IsPullRequest":true,"CreatedAt":"2020-09-16T03:25:10","Actor":"JeremyKuhne","Number":"3913","RawContent":null,"Title":"Fix PaintEventArgs Graphics property","State":"closed","Body":"Move the shared logic to a class from a struct to avoid working on a copy of the nested data.\r\n\r\nFixes #3910\r\n\r\n\r\n## Proposed changes\r\n\r\n- Change shared logic container from struct to class\r\n\r\n## Customer Impact\r\n\r\n- Without this, the Graphics object is always recreated when the args are created from an HDC\r\n- Modifcations to the Graphics object are never retained\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Low, changing to a class avoids copies\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Add specific test to make sure we're retaining the right instance on an args created from an HDC\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3913)","Url":"https://github.com/dotnet/winforms/pull/3913","RelatedDescription":"Closed or merged PR \"Fix PaintEventArgs Graphics property\" (#3913)"},{"Id":"702323368","IsPullRequest":true,"CreatedAt":"2020-09-16T00:03:22","Actor":"dotnet-maestro[bot]","Number":"3912","RawContent":null,"Title":"[release/5.0-rc2] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c5389e69-a40e-47fd-afe1-08d849eee71f)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: c5389e69-a40e-47fd-afe1-08d849eee71f\r\n- **Build**: 20200915.4\r\n- **Date Produced**: 9/15/2020 10:12 PM\r\n- **Commit**: acdf37b56119bd11a52a9b8e4ea1f310d0ef7b82\r\n- **Branch**: refs/heads/release/5.0-rc2\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.CodeDom**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Diagnostics.EventLog**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.DirectoryServices**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **Microsoft.NETCore.App**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **Microsoft.NETCore.Targets**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **Microsoft.Win32.Registry**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Drawing.Common**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Threading.AccessControl**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Windows.Extensions**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Text.Json**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Text.Encodings.Web**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.IO.Packaging**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Security.AccessControl**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Security.Cryptography.Cng**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Security.Cryptography.Xml**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Security.Permissions**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Security.Principal.Windows**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n  - **System.Resources.Extensions**: [from 5.0.0-rc.2.20464.8 to 5.0.0-rc.2.20465.4][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/80df3e0...acdf37b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c5389e69-a40e-47fd-afe1-08d849eee71f)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3912)","Url":"https://github.com/dotnet/winforms/pull/3912","RelatedDescription":"Closed or merged PR \"[release/5.0-rc2] Update dependencies from dotnet/runtime\" (#3912)"},{"Id":"702292523","IsPullRequest":true,"CreatedAt":"2020-09-15T22:39:27","Actor":"JeremyKuhne","Number":"3911","RawContent":null,"Title":"More BehaviorService related code cleanup","State":"closed","Body":"- Use null coalescing operators\r\n- Use conditional operators\r\n- Few more if block simplifications\r\n- Minor comment and spacing cleanup\r\n- Simplify usings\r\n\r\nNot exhaustive, just grabbing low-hanging fruit\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3911)","Url":"https://github.com/dotnet/winforms/pull/3911","RelatedDescription":"Closed or merged PR \"More BehaviorService related code cleanup\" (#3911)"},{"Id":"702125900","IsPullRequest":false,"CreatedAt":"2020-09-15T17:40:10","Actor":"vladimir-krestov","Number":"3909","RawContent":null,"Title":"[Accessibility] DataGridViewTextBoxCell in non-edit mode doesn't support Text pattern","State":"open","Body":"Text pattern area. Related PR: #3866 \r\n\r\n* .NET Core Version: 5.0.0-rc.1.20431.5\r\n\r\n* Have you experienced this same bug with .NET Framework?: Yes (Text pattern is not implemented there)\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\n- DataGridViewTextBoxCell in non-edit mode (just focused) has \"UIA_EditControlTypeId\" as a control type. And Accessibility Insights requires the cell should support Text pattern. But the cell doesn't support the pattern in non-edit mode.\r\n\r\n![image](https://user-images.githubusercontent.com/49272759/93244802-fa02e100-f792-11ea-8854-2adb6b1b2dca.png)\r\n\r\n\r\n\r\n**Expected behavior:**\r\n- DataGridViewTextBoxCell should meet the MAS requirements.\r\n   Possible ways: \r\n   1) try to implement Text pattern for DataGridViewTextBoxCell in non-edit mode. But needs to decide how it should work. We can orientate to Excel\r\n   2) change ControlType value to another, eg. [DataItem control type](https://docs.microsoft.com/en-us/windows/win32/winauto/uiauto-supportdataitemcontroltype). But needs to rework other cells\r\n\r\n\r\n**Minimal repro:**\r\n- Create a .Net 5.0 app and add DataGridVew with DGVTextBoxCell to the app\r\n- Run the app and check the cell using AccessibilityInsights or Inspect\r\n","Url":"https://github.com/dotnet/winforms/issues/3909","RelatedDescription":"Open issue \"[Accessibility] DataGridViewTextBoxCell in non-edit mode doesn't support Text pattern\" (#3909)"},{"Id":"702083280","IsPullRequest":false,"CreatedAt":"2020-09-15T16:34:57","Actor":"wjk","Number":"3908","RawContent":null,"Title":"High-DPI scaling is now totally broken","State":"open","Body":"## Version\r\n\r\n```\r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.100-rc.1.20452.10\r\n Commit:    473d1b592e\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.20211\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100-rc.1.20452.10\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0-rc.1.20451.14\r\n  Commit:  38017c3935\r\n\r\n.NET SDKs installed:\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100-preview.7.20366.6 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100-rc.1.20452.10 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.21 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.21 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.0-preview.7.20365.19 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.0-rc.1.20451.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.21 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.0-preview.7.20364.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.0-rc.1.20451.14 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0-preview.7.20366.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0-rc.1.20452.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n\r\nHave you experienced this same bug with .NET Framework?: N/A, relevant API does not exist there\r\n\r\n## Problem description\r\n\r\nImmediately after updating to VS 16.8 beta 3 and .NET 5 RC 1, now suddenly all of my Windows Forms applications do not DPI scale correctly. This did not happen before I updated. Please see the below screenshot, and zipped repro project. The form displays perfectly OK in the Visual Studio designer, without relaunching VS at 100% DPI. I have called `Application.SetHighDpiMode(HighDpiMode.PerMonitorV2)` in my Main method. I have also tried `HighDpiMode.SystemAware` (the template default), to no avail. I am running Windows 10 build 20211 at (I believe) 200% DPI scaling, over a Remote Desktop connection.\r\n\r\n<img width=\"1680\" alt=\"screenshot of broken program\" src=\"https://user-images.githubusercontent.com/1915951/93238376-56441180-f74f-11ea-81d8-386233256ecf.png\">\r\n\r\n[Zipped minimal repro](https://github.com/dotnet/winforms/files/5226397/MenuDpiRepro.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/3908","RelatedDescription":"Open issue \"High-DPI scaling is now totally broken\" (#3908)"},{"Id":"701996068","IsPullRequest":true,"CreatedAt":"2020-09-15T14:56:46","Actor":"dotnet-maestro[bot]","Number":"3907","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/core-setup","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:Coherency Updates)\r\n## Coherency Updates\r\n\r\nThe following updates ensure that dependencies with a *CoherentParentDependency*\r\nattribute were produced in a build used as input to the parent dependency's build.\r\nSee [Dependency Description Format](https://github.com/dotnet/arcade/blob/master/Documentation/DependencyDescriptionFormat.md#dependency-description-overview)\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Coherency Updates**:\r\n  - **Microsoft.NETCore.App.Internal**: from 3.1.3-servicing.20120.1 to 3.1.9-servicing.20459.3 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n  - **Microsoft.NETCore.Platforms**: from 3.1.0 to 3.1.3 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n  - **System.Resources.Extensions**: from 4.7.0 to 4.7.1 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n  - **Microsoft.NET.Sdk.IL**: from 3.1.3-servicing.20118.3 to 3.1.9-servicing.20458.2 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n  - **Microsoft.NETCore.ILAsm**: from 3.1.3-servicing.20118.3 to 3.1.9-servicing.20458.2 (parent: Microsoft.NETCore.App.Runtime.win-x64)\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n[marker]: <> (End:Coherency Updates)\r\n\r\n[marker]: <> (Begin:4fa59404-cc5b-4313-dd47-08d72a4caef5)\r\n## From https://github.com/dotnet/core-setup\r\n- **Subscription**: 4fa59404-cc5b-4313-dd47-08d72a4caef5\r\n- **Build**: 20200909.3\r\n- **Date Produced**: 9/10/2020 1:08 AM\r\n- **Commit**: 1a04dd08e56bf52e88668c1ef2bd3f630ad442a5\r\n- **Branch**: refs/heads/release/3.1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 3.1.3 to 3.1.9][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 3.1.3-servicing.20120.1 to 3.1.9-servicing.20459.3][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 3.1.0 to 3.1.3][2]\r\n  - **System.Resources.Extensions**: [from 4.7.0 to 4.7.1][3]\r\n  - **Microsoft.NET.Sdk.IL**: [from 3.1.3-servicing.20118.3 to 3.1.9-servicing.20458.2][4]\r\n  - **Microsoft.NETCore.ILAsm**: [from 3.1.3-servicing.20118.3 to 3.1.9-servicing.20458.2][4]\r\n\r\n[1]: https://github.com/dotnet/core-setup/compare/2d163b8...1a04dd0\r\n[2]: https://github.com/dotnet/corefx/compare/0f7f38c...d6302a7\r\n[3]: https://dev.azure.com/dnceng/internal/_git/dotnet-corefx/branches?baseVersion=GC0f7f38c&targetVersion=GC059a4a1&_a=files\r\n[4]: https://github.com/dotnet/coreclr/compare/c5d3d75...c2e8c9f\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4fa59404-cc5b-4313-dd47-08d72a4caef5)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3907)","Url":"https://github.com/dotnet/winforms/pull/3907","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/core-setup\" (#3907)"},{"Id":"701870062","IsPullRequest":true,"CreatedAt":"2020-09-15T12:27:17","Actor":"dotnet-maestro[bot]","Number":"3906","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200911.7\r\n- **Date Produced**: 9/11/2020 9:37 PM\r\n- **Commit**: a81e6e87cf21837abfde2da6eb9b057bea9f49fc\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: [from 5.0.0-beta.20459.8 to 5.0.0-beta.20461.7][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 5.0.0-beta.20459.8 to 5.0.0-beta.20461.7][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 5.0.0-beta.20459.8 to 5.0.0-beta.20461.7][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 5.0.0-beta.20459.8 to 5.0.0-beta.20461.7][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 5.0.0-beta.20459.8 to 5.0.0-beta.20461.7][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/91470b0...a81e6e8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3906)","Url":"https://github.com/dotnet/winforms/pull/3906","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3906)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-09-17T05:30:47.2195099Z","RunDurationInMilliseconds":741}