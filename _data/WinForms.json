{"Data":{"GitHub":{"Issues":[{"Id":"1678916849","IsPullRequest":true,"CreatedAt":"2023-04-21T20:57:33","Actor":"JeremyKuhne","Number":"9023","RawContent":null,"Title":"Global usings and file scoped namespaces","State":"closed","Body":"Get more consistent with global usings and use file scoped namespaces through the repo.\r\n\r\nDone with auto-fixers.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9023)","Url":"https://github.com/dotnet/winforms/pull/9023","RelatedDescription":"Closed or merged PR \"Global usings and file scoped namespaces\" (#9023)"},{"Id":"1678200608","IsPullRequest":true,"CreatedAt":"2023-04-21T19:27:51","Actor":"Amy-Li03","Number":"9020","RawContent":null,"Title":"Add checked ToolStripMenuItems and ToolStripButtons to Accessibility App","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes part of [9005](https://github.com/dotnet/winforms/issues/9005)\r\n\r\n\r\n## Proposed changes\r\nAdd ToolStripMenuItems and ToolStripButtons to cover different checked combinations.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\nEasier to test CheckState values of ToolStripMenuItems and ToolStripButtons from winforms repo\r\n\r\n## Regression? \r\nNo\r\n\r\n## Risk\r\n\r\nNone\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### After\r\n![image](https://user-images.githubusercontent.com/62929087/233597912-f4f58438-9888-4a1d-b76d-7c3966776488.png)\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\nManual\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\nNarrator announce:\r\n\r\nUnchecked_CheckOnClick(F), button, \r\n Unchecked_CheckOnClick(F)\r\nUnchecked_CheckOnClick(T), button, off, \r\n Unchecked_CheckOnClick(T)\r\nChecked_CheckOnClick(T), button, on, \r\n Checked_CheckOnClick(T)\r\nChecked_CheckOnClick(F), button, on, \r\n Checked_CheckOnClick(F)\r\nIndeterminate_CheckOnClick(T), button, indeterminate, \r\n Indeterminate_CheckOnClick(T)\r\nIndeterminate_CheckOnClick(F), button, indeterminate, \r\n Indeterminate_CheckOnClick(F)\r\n\r\nCheckState Samples, menu item, collapsed, <say-as interpret-as=\"spell\">5</say-as> of <say-as interpret-as=\"spell\">7</say-as>, \r\n CheckState Samples\r\nCheckState Samples, menu, \r\n CheckState Samples\r\nCheckState Samples, menu, \r\nUnchecked_CheckOnClick(T), menu item, unchecked, <say-as interpret-as=\"spell\">1</say-as> of <say-as interpret-as=\"spell\">5</say-as>, \r\nChecked_CheckOnClick(T), menu item, checked, <say-as interpret-as=\"spell\">2</say-as> of <say-as interpret-as=\"spell\">5</say-as>, \r\nUnchecked_CheckOnClick(T), menu item, unchecked, <say-as interpret-as=\"spell\">1</say-as> of <say-as interpret-as=\"spell\">5</say-as>, \r\nChecked_CheckOnClick(T), menu item, checked, <say-as interpret-as=\"spell\">2</say-as> of <say-as interpret-as=\"spell\">5</say-as>, \r\nUnchecked_CheckOnClick(T), menu item, unchecked, <say-as interpret-as=\"spell\">1</say-as> of <say-as interpret-as=\"spell\">5</say-as>, \r\nChecked_CheckOnClick(T), menu item, checked, <say-as interpret-as=\"spell\">2</say-as> of <say-as interpret-as=\"spell\">5</say-as>, \r\nUnchecked_CheckOnClick(T), menu item, unchecked, <say-as interpret-as=\"spell\">1</say-as> of <say-as interpret-as=\"spell\">5</say-as>, \r\nChecked_CheckOnClick(T), menu item, checked, <say-as interpret-as=\"spell\">2</say-as> of <say-as interpret-as=\"spell\">5</say-as>, \r\nChecked_CheckOnClick(F), menu item, checked, <say-as interpret-as=\"spell\">3</say-as> of <say-as interpret-as=\"spell\">5</say-as>, \r\nIndeterminate_CheckOnClick(T), menu item, indeterminate, <say-as interpret-as=\"spell\">4</say-as> of <say-as interpret-as=\"spell\">5</say-as>, \r\nIndeterminate_CheckOnClick(F), menu item, indeterminate, <say-as interpret-as=\"spell\">5</say-as> of <say-as interpret-as=\"spell\">5</say-as>,\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n.NET 8.0.100-preview.4.23220.10\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9020)","Url":"https://github.com/dotnet/winforms/pull/9020","RelatedDescription":"Closed or merged PR \"Add checked ToolStripMenuItems and ToolStripButtons to Accessibility App\" (#9020)"},{"Id":"1678407819","IsPullRequest":true,"CreatedAt":"2023-04-21T17:20:32","Actor":"dotnet-maestro[bot]","Number":"9022","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230421.1\r\n- **Date Produced**: April 21, 2023 9:57:57 AM UTC\r\n- **Commit**: ab2b80d06dd4d997df5ffa72a3c4a99cb36ccbff\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **System.CodeDom**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **System.Data.Odbc**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **System.Data.OleDb**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **System.IO.Ports**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **System.Management**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **System.Reflection.Context**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **System.Runtime.Caching**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **System.Speech**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **System.Text.Json**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.4.23220.1 to 8.0.0-preview.4.23221.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/4fe223ffb4...ab2b80d06d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9022)","Url":"https://github.com/dotnet/winforms/pull/9022","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#9022)"},{"Id":"1677550700","IsPullRequest":true,"CreatedAt":"2023-04-21T17:08:52","Actor":"JeremyKuhne","Number":"9017","RawContent":null,"Title":"Ensure the native dialogs are released","State":"closed","Body":"We weren't releasing the native dialog classes we create. Use scopes and don't throw/catch, just return if we're unable to create the dialog.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9017)","Url":"https://github.com/dotnet/winforms/pull/9017","RelatedDescription":"Closed or merged PR \"Ensure the native dialogs are released\" (#9017)"},{"Id":"1678407446","IsPullRequest":true,"CreatedAt":"2023-04-21T12:32:12","Actor":"dotnet-maestro[bot]","Number":"9021","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20230420.2\r\n- **Date Produced**: April 20, 2023 9:13:35 PM UTC\r\n- **Commit**: d75baf71a09ed067b48f484f29efc4e7f3e3df13\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23219.2 to 8.0.0-beta.23220.2][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.23219.2 to 8.0.0-beta.23220.2][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.23219.2 to 8.0.0-beta.23220.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23219.2 to 8.0.0-beta.23220.2][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.23219.2 to 8.0.0-beta.23220.2][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23219.2 to 8.0.0-beta.23220.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/dca04a5ec4...d75baf71a0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9021)","Url":"https://github.com/dotnet/winforms/pull/9021","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#9021)"},{"Id":"1677660699","IsPullRequest":false,"CreatedAt":"2023-04-21T02:14:32","Actor":"Olina-Zhang","Number":"9019","RawContent":null,"Title":"Exception pops up when executing Metafile.GetMetafileHeader(String fileName)","State":"open","Body":"### .NET version\n\n8.0.100-preview.4.23220.10 + the  latest binaries built for Winforms main branch\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, it doesn't reproduced in .Net 7.0\n\n### Issue description\n\nAn automation case: XMetafile, it failed for some scenarios when test Metafile.GetMetafileHeader, it may be caused by PR: https://github.com/dotnet/winforms/pull/8995\r\n\r\n**Failed log:**\r\n              _System.ArgumentException: Parameter is not valid.\r\n   at System.Drawing.SafeNativeMethods.Gdip.CheckStatus(Int32 status) in C:\\Users\\xxx\\Documents\\Winforms\\src\\System.Drawing.Common\\src\\System\\Drawing\\Gdiplus.cs:line 83\r\n   at System.Drawing.Imaging.Metafile.GetMetafileHeader(String fileName) in C:\\Users\\xxx\\Documents\\Winforms\\src\\System.Drawing.Common\\src\\System\\Drawing\\Imaging\\Metafile.cs:line 575\r\n   at XMetafile.GetMetafileHeader(TParams p, String fileName) in C:\\Users\\xxx\\Desktop\\XMetafile_p1\\XMetafile_p1\\XMetafile.cs:line 148\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)_\r\n           \r\n\n\n### Steps to reproduce\n\n**Sample app:**\r\n[WinFormsApp17.zip](https://github.com/dotnet/winforms/files/11291683/WinFormsApp17.zip)\r\n\r\n**Tested metafiles**:\r\n[work.zip](https://github.com/dotnet/winforms/files/11291714/work.zip)\r\n\r\n**Repro steps:**\r\n1. Build and run above provided app, \r\n2. Stop runtime when form is running\r\n\r\n**Actual result**: application is in break mode\r\n![image](https://user-images.githubusercontent.com/26474449/233524101-5b7a8180-4d9f-4ab3-927a-290529e63ce7.png)\r\n\r\n**Expected result**: App works well when targeting .Net 7.0\r\n","Url":"https://github.com/dotnet/winforms/issues/9019","RelatedDescription":"Open issue \"Exception pops up when executing Metafile.GetMetafileHeader(String fileName)\" (#9019)"},{"Id":"1677626975","IsPullRequest":true,"CreatedAt":"2023-04-21T01:31:31","Actor":"dreddy-work","Number":"9018","RawContent":null,"Title":"Fix null reference in PermonV2 mode.","State":"open","Body":"Null check should be explicit to avoid further access of the Item object. It is not uncovered until we enabled PermonV2 mode for the designer.\r\n\r\nFixes #[5125](https://github.com/microsoft/winforms-designer/issues/5125)\r\nFixes #[5124](https://github.com/microsoft/winforms-designer/issues/5124)\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9018)","Url":"https://github.com/dotnet/winforms/pull/9018","RelatedDescription":"Open PR \"Fix null reference in PermonV2 mode.\" (#9018)"},{"Id":"1677500387","IsPullRequest":false,"CreatedAt":"2023-04-20T22:13:32","Actor":"SoftCircuits","Number":"9016","RawContent":null,"Title":"WinForms appears to be completely broken in .NET 7","State":"open","Body":"### Environment\n\nVisual Studio Version 17.5.4\n\n### .NET version\n\n7.0\n\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\n\nYes\n\n### Issue description\n\nI haven't worked with WinForms for a little while and created a *brand new* project.\r\n\r\n1. Once the project was created, it was automatically loaded into the IDE. I got a message saying it was trying to load the form but after several minutes, it never loaded. I was finally able to load the form by restarting Visual Studio and reloading the project.\r\n2. I created a menu, and double clicked one of the menu commands. This took me to the editor and positioned the cursor in the Form1_Load method. No handler was created for the menu command. I tried this about a dozen times. Then I went to the Properties window to the Click even dropdown. It showed an expected name for the handler. But when I double click on this, it again takes me to the Form_Load handler, and no handler was created for the menu command.\r\n3. So I tried deleting the Form_Load handler. As expected, this gave me an error, which I corrected in the designer source. Then I got about a half dozen error messages in the IDE. I saved everything and rebuilt.\r\n4. Now I was able to run the app without errors again. But all my menus and previous work was gone!\n\n### Steps to reproduce\n\nThe steps were outlined above. I would think anyone who spent 15 minutes creating a new WinForms app and adding some event handlers will surely see there are problems here.\n\n### Diagnostics\n\n```text\nI tried to go through the steps in your troubleshooting guide, but for me, the Show output from dropdown only has one option: Package Manager. This is way beyond sending you an error report. It seems that virtually nothing is working for me here.\n```\n","Url":"https://github.com/dotnet/winforms/issues/9016","RelatedDescription":"Open issue \"WinForms appears to be completely broken in .NET 7\" (#9016)"},{"Id":"1673848940","IsPullRequest":true,"CreatedAt":"2023-04-20T22:07:16","Actor":"JeremyKuhne","Number":"9000","RawContent":null,"Title":"Change Font cache in AxHost to ConditionalWeakTable","State":"closed","Body":"Fonts were getting permanently rooted (leaking) here.\r\n\r\nDid some minor comment cleanup in Cache classes.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9000)","Url":"https://github.com/dotnet/winforms/pull/9000","RelatedDescription":"Closed or merged PR \"Change Font cache in AxHost to ConditionalWeakTable\" (#9000)"},{"Id":"1677385459","IsPullRequest":true,"CreatedAt":"2023-04-20T20:31:07","Actor":"JeremyKuhne","Number":"9015","RawContent":null,"Title":"Use native IAccessible handles directly","State":"open","Body":"When using system IAccessible handles directly we get increased performance and easier to debug code. This also puts us a step closer to trimmability.\r\n\r\nThis removes the `SystemIAccessbileWrapper` class and instead puts shared `IAccessible` access code in `AccessibleObjectExtensions`.\r\n\r\nAlso:\r\n\r\n- Moves a bit more towards CsWin32\r\n- Change AgileComPointer to allow not tracking disposal\r\n- Only derive AgileComPointer from tracker in debug builds\r\n- Only build tracker in debug builds (don't want it slipping in and taking stack traces)\r\n- Add new API to extract from ComWrappers to ComHelpers\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9015)","Url":"https://github.com/dotnet/winforms/pull/9015","RelatedDescription":"Open PR \"Use native IAccessible handles directly\" (#9015)"},{"Id":"1677083152","IsPullRequest":true,"CreatedAt":"2023-04-20T18:39:07","Actor":"dmitrii-drobotov","Number":"9013","RawContent":null,"Title":"Add checked ToolStripMenuItems to WinformsControlsTest app","State":"closed","Body":"Part of #9005\r\n\r\n\r\n## Proposed changes\r\n\r\n- Add menu items to cover different checked combinations, replacing previous single checked item\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Easier to test CheckState values of ToolStripMenuItem from winforms repo\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- None\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![image](https://user-images.githubusercontent.com/102954094/233435055-144c7fe2-7bbf-4ac4-bd5f-4b920fcbe101.png)\r\nA single checked item, that cannot be unchecked\r\n\r\n### After\r\n\r\n![image](https://user-images.githubusercontent.com/102954094/233434492-30a989a9-70ea-4e79-9d8d-6f1b86ec60dc.png)\r\nMultiple items covering all checked options\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\nAs expected, Narrator announces checked state where needed:\r\n\r\n> Unchecked CheckOnClick(F), menu item, <say-as interpret-as=\"spell\">1</say-as> of <say-as interpret-as=\"spell\">6</say-as>, \r\n> Unchecked CheckOnClick(T), menu item, unchecked, <say-as interpret-as=\"spell\">2</say-as> of <say-as interpret-as=\"spell\">6</say-as>, Ctrl+ C, \r\n> Checked CheckOnClick(F), menu item, checked, <say-as interpret-as=\"spell\">3</say-as> of <say-as interpret-as=\"spell\">6</say-as>, \r\n> Checked CheckOnClick(T), menu item, checked, <say-as interpret-as=\"spell\">4</say-as> of <say-as interpret-as=\"spell\">6</say-as>, \r\n> Indeterminate CheckOnClick(F), menu item, indeterminate, <say-as interpret-as=\"spell\">5</say-as> of <say-as interpret-as=\"spell\">6</say-as>, \r\n> Indeterminate CheckOnClick(T), menu item, indeterminate, <say-as interpret-as=\"spell\">6</say-as> of <say-as interpret-as=\"spell\">6</say-as>, \r\n\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .NET 8.0.100-preview.4.23218.21\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9013)","Url":"https://github.com/dotnet/winforms/pull/9013","RelatedDescription":"Closed or merged PR \"Add checked ToolStripMenuItems to WinformsControlsTest app\" (#9013)"},{"Id":"1675895598","IsPullRequest":false,"CreatedAt":"2023-04-20T18:33:55","Actor":"Olina-Zhang","Number":"9008","RawContent":null,"Title":"An error dialog pops up when clicking AutoCompleteCustomSource in properyGrid with binding ComboBox ","State":"closed","Body":"### .NET version\n\ndotnet-sdk-8.0.100-preview.4.23218.19\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, it doesn't reproduce in .Net 7.0 SDK build.\n\n### Issue description\n\nAn error dialog pops up when clicking AutoCompleteCustomSource in propertyGrid with binding ComboBox control.\r\n\r\n**Result on .Net 8.0 Preview 4 build:**\r\n![image](https://user-images.githubusercontent.com/26474449/233242927-0d02986d-4873-4f39-ba96-69a295c20c40.png)\r\n\r\n**Result on .Net 7.0 build:**\r\nWhen clicking AutoCompleteCustomSource property, it will pops up String Collection editor dialog:\r\n![image](https://user-images.githubusercontent.com/26474449/233243073-144096be-e8b2-46a6-94c4-c6c97afc13d2.png)\r\n\n\n### Steps to reproduce\n\nTested app: \r\n[WinFormsApp89.zip](https://github.com/dotnet/winforms/files/11279282/WinFormsApp89.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/9008","RelatedDescription":"Closed issue \"An error dialog pops up when clicking AutoCompleteCustomSource in properyGrid with binding ComboBox \" (#9008)"},{"Id":"1676907789","IsPullRequest":true,"CreatedAt":"2023-04-20T18:33:53","Actor":"dmitrii-drobotov","Number":"9012","RawContent":null,"Title":"Fix error dialog on editing AutoCompleteCustomSource in PropertyGrid","State":"closed","Body":"Fixes #9008\r\n\r\nRegression was introduced in https://github.com/dotnet/winforms/pull/8142 (from .NET 8). Replacing cast to be similar to other `CopyTo` overrides, for example:\r\nhttps://github.com/dotnet/winforms/blob/024a9ab98d4bea535ce9fe6c473326bcd00464b7/src/System.Windows.Forms/src/System/Windows/Forms/DataGridViewCellCollection.cs#L48\r\nhttps://github.com/dotnet/winforms/blob/024a9ab98d4bea535ce9fe6c473326bcd00464b7/src/System.Windows.Forms/src/System/Windows/Forms/TableLayoutStyleCollection.cs#L130\r\n\r\n## Proposed changes\r\n\r\n- Replace invalid cast to string[] with cast to ICollection\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- AutoCompleteCustomSource property can be edited\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![image](https://user-images.githubusercontent.com/26474449/233242927-0d02986d-4873-4f39-ba96-69a295c20c40.png)\r\n\r\n### After\r\n\r\n![autocomplete-fix](https://user-images.githubusercontent.com/102954094/233406119-c2cb8bcb-33f1-4137-9603-4184d440fad8.gif)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .NET 8.0.100-preview.4.23218.21\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9012)","Url":"https://github.com/dotnet/winforms/pull/9012","RelatedDescription":"Closed or merged PR \"Fix error dialog on editing AutoCompleteCustomSource in PropertyGrid\" (#9012)"},{"Id":"1676584281","IsPullRequest":true,"CreatedAt":"2023-04-20T16:51:45","Actor":"dotnet-maestro[bot]","Number":"9010","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20230419.2\r\n- **Date Produced**: April 19, 2023 4:02:32 PM UTC\r\n- **Commit**: dca04a5ec44fe1e75535f51a4e0b9a7aa2318de7\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23217.1 to 8.0.0-beta.23219.2][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.23217.1 to 8.0.0-beta.23219.2][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.23217.1 to 8.0.0-beta.23219.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23217.1 to 8.0.0-beta.23219.2][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.23217.1 to 8.0.0-beta.23219.2][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23217.1 to 8.0.0-beta.23219.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/cb54ca2143...dca04a5ec4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/9010","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#9010)"},{"Id":"1676584780","IsPullRequest":true,"CreatedAt":"2023-04-20T12:22:20","Actor":"dotnet-maestro[bot]","Number":"9011","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230420.1\r\n- **Date Produced**: April 20, 2023 10:41:01 AM UTC\r\n- **Commit**: 4fe223ffb49fe94fa60519e80d41b4aa83617409\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **System.CodeDom**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **System.Data.Odbc**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **System.Data.OleDb**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **System.IO.Ports**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **System.Management**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **System.Reflection.Context**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **System.Runtime.Caching**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **System.Speech**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **System.Text.Json**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.4.23218.5 to 8.0.0-preview.4.23220.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/9672d82ffa...4fe223ffb4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9011)","Url":"https://github.com/dotnet/winforms/pull/9011","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#9011)"},{"Id":"1676510296","IsPullRequest":true,"CreatedAt":"2023-04-20T11:08:44","Actor":"deinok","Number":"9009","RawContent":null,"Title":"BindingNavigatorDesigner","State":"open","Body":"Fixes #8208\r\n\r\nThis should fix the BindingNavigator not been shown in the Toolbox.\r\n\r\nSeems like the class didn't exist. See https://github.com/dotnet/winforms/blob/b3a0efc78e82ab0deba0d25d6f196f996e13bab5/src/System.Windows.Forms/src/System/Windows/Forms/BindingNavigator.cs#L13\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9009)","Url":"https://github.com/dotnet/winforms/pull/9009","RelatedDescription":"Open PR \"BindingNavigatorDesigner\" (#9009)"},{"Id":"1675890181","IsPullRequest":false,"CreatedAt":"2023-04-20T02:28:15","Actor":"Olina-Zhang","Number":"9007","RawContent":null,"Title":"[HDPI] Cursor editor in propertyGrid is not scaled well","State":"open","Body":"### .NET version\n\ndotnet-sdk-8.0.100-preview.4.23218.19\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, it doesn't reproduce in .Net 7.0 SDK build.\n\n### Issue description\n\nOn High DPI environment, cursor editor in propertyGrid is not scaled well\r\n\r\n**Result on .Net 8.0 Preview 4 build with 300%DPI**:\r\n![image](https://user-images.githubusercontent.com/26474449/233241549-b9a1d277-74cd-4448-95fb-6b011605cd63.png)\r\n![Issue2](https://user-images.githubusercontent.com/26474449/233241617-0e054977-efb2-4415-8646-cee8d2511a33.gif)\r\n\r\n**Result on .Net 7.0 build with 300%DPI**:\r\n![image](https://user-images.githubusercontent.com/26474449/233241747-532b0faf-69c1-4a92-a898-cd1d88a65492.png)\r\n\n\n### Steps to reproduce\n\nSample app: \r\n[WinFormsApp89.zip](https://github.com/dotnet/winforms/files/11279255/WinFormsApp89.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/9007","RelatedDescription":"Open issue \"[HDPI] Cursor editor in propertyGrid is not scaled well\" (#9007)"},{"Id":"1674199930","IsPullRequest":false,"CreatedAt":"2023-04-20T01:11:02","Actor":"GrapesOfWath","Number":"9002","RawContent":null,"Title":"TreeView freezes the IDE when added to tabpage","State":"closed","Body":"### Environment\r\n\r\nVisual Studio 2022 v17.5.4\r\n\r\n### .NET version\r\n\r\n6.0\r\n\r\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\r\n\r\nUnsure, haven't fiddled with VS in years\r\n\r\n### Issue description\r\n\r\nAdding a TreeView to a tabpage causes the application to hang indefinitely when swapping to a different tabpage that contains controls.\r\n\r\n### Steps to reproduce\r\n\r\n>New Project\r\n>Add TabControl\r\n>Add controls to one page\r\n>Add treeview to another page\r\n>Go back to page without the treeview on it\r\n>Notice most of the controls don't render correctly\r\n>Either you freeze here, or you switch back to the tab with the treeview on it and *then* you freeze\r\n\r\n### Diagnostics\r\n\r\n_No response_","Url":"https://github.com/dotnet/winforms/issues/9002","RelatedDescription":"Closed issue \"TreeView freezes the IDE when added to tabpage\" (#9002)"},{"Id":"1675557393","IsPullRequest":true,"CreatedAt":"2023-04-19T20:11:09","Actor":"dreddy-work","Number":"9006","RawContent":null,"Title":"Fix Anchors for Nested containers","State":"open","Body":"- Controls anchored within the nested containers are never getting chance to compute `AnchorInfo `in V2 layout and thus seeing issues mentioned in #8933. \r\n- Explicit bounds change on the control either by setting Properties like `Size`, `Location` or by calling public APIs `SetBounds` should recompute `AnchorsInfo` for the control. We documented this but missed in the validation. Issue #8494.\r\n- Added unit tests covering these scenarios.\r\n\r\nFixes #8933 \r\nFixes #8494 \r\n\r\nAnchor UI needs VS servicing to pick these changes.\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9006)","Url":"https://github.com/dotnet/winforms/pull/9006","RelatedDescription":"Open PR \"Fix Anchors for Nested containers\" (#9006)"},{"Id":"1675176157","IsPullRequest":false,"CreatedAt":"2023-04-19T15:44:17","Actor":"dmitrii-drobotov","Number":"9005","RawContent":null,"Title":"Add checkable ToolStrip menu items and buttons to test applications","State":"open","Body":"### .NET version\n\n.NET 8\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\nFollowing up on recent accessibility improvements for checkable ToolStripMenuItem and ToolStripButton (#8307, #8961), we should add samples of such controls into our test apps. \r\n\r\n#### WinFormsControlsTest app\r\n\r\n* ToolStripMenuItem. There is already a checked item on \"Menus\" page:\r\n![image](https://user-images.githubusercontent.com/102954094/233125000-a851d44c-b173-41c4-a03b-22a130231708.png)\r\nbut more cases should be included:\r\n    * `ToolStripMenuItem` with `CheckState = CheckState.Unchecked` and `CheckOnClick = true`\r\n    * `ToolStripMenuItem` with `CheckState = CheckState.Indeterminate` and `CheckOnClick = true`\r\n    * `ToolStripMenuItem` with `CheckState = CheckState.Indeterminate` and `CheckOnClick = false`\r\n    \r\n* ToolStripButton. Different cases are already covered on \"ToolStrips\" page:\r\n![image](https://user-images.githubusercontent.com/102954094/233126174-3b1dbaf6-85c2-4a81-95e5-9d44f92473bb.png)\r\n\r\n#### Accessibility_Core_App\r\n\r\n* ToolStripMenuItem. There are no samples of checked items on MenuToolbars_Controls - StripControls page, therefore we should add following items:\r\n    * `ToolStripMenuItem` with `CheckState = CheckState.Unchecked` and `CheckOnClick = true`\r\n    * `ToolStripMenuItem` with `CheckState = CheckState.Checked` and `CheckOnClick = true`\r\n    * `ToolStripMenuItem` with `CheckState = CheckState.Checked` and `CheckOnClick = false`\r\n    * `ToolStripMenuItem` with `CheckState = CheckState.Indeterminate` and `CheckOnClick = true`\r\n    * `ToolStripMenuItem` with `CheckState = CheckState.Indeterminate` and `CheckOnClick = false`\r\n    \r\n* ToolStripButton. There are also no checked buttons on MenuToolbars_Controls - StripControls page, therefore we should add a set of similar cases:\r\n    * `ToolStripButton` with `CheckState = CheckState.Unchecked` and `CheckOnClick = false`\r\n    * `ToolStripButton` with `CheckState = CheckState.Unchecked` and `CheckOnClick = true`\r\n    * `ToolStripButton` with `CheckState = CheckState.Checked` and `CheckOnClick = true`\r\n    * `ToolStripButton` with `CheckState = CheckState.Checked` and `CheckOnClick = false`\r\n    * `ToolStripButton` with `CheckState = CheckState.Indeterminate` and `CheckOnClick = true`\r\n    * `ToolStripButton` with `CheckState = CheckState.Indeterminate` and `CheckOnClick = false`\r\n\n\n### Steps to reproduce\n\nN/A","Url":"https://github.com/dotnet/winforms/issues/9005","RelatedDescription":"Open issue \"Add checkable ToolStrip menu items and buttons to test applications\" (#9005)"},{"Id":"1674445391","IsPullRequest":false,"CreatedAt":"2023-04-19T08:36:50","Actor":"tbambuch","Number":"9004","RawContent":null,"Title":"HDPI PMv2 issue in ContainerControl.ScaleContainerForDpi","State":"open","Body":"### .NET version\n\n7.0\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nworked in .net 5\n\n### Issue description\n\nThe order of functions in ScaleContainerForDpi() is wrong.\r\nNow, it first calls `PInvoke.SetWindowPos` and later it sets Font by calling `GetScaledFont `and raising `OnFontChanged`.\r\n\r\nBut, in my Per-monitor setup (175% dpi scaling for primary screen and 100% secondary), the `SetWindowPos()` call generates another `OnDpiChanged`, resulting in another `ScaleContainerForDpi `being called (see stacktrace attached).\r\nThis inner `ScaleContainerForDpi` call sets the correct font, but the Font is then overwritten by the incorrect value, after the function returns.\r\n\r\nSo I suppose the correct order should be: First raise OnFontChanged, then call PInvoke.SetWindowPos\r\n\r\n[stacktrace.txt](https://github.com/dotnet/winforms/files/11270667/stacktrace.txt)\r\n\r\n\n\n### Steps to reproduce\n\nI did not found a reliable way how to replicate the issue on smallest scenario possible, it just happens for some of the forms in my application, while some other forms behave correctly","Url":"https://github.com/dotnet/winforms/issues/9004","RelatedDescription":"Open issue \"HDPI PMv2 issue in ContainerControl.ScaleContainerForDpi\" (#9004)"},{"Id":"1674262317","IsPullRequest":false,"CreatedAt":"2023-04-19T06:39:12","Actor":"roland5572","Number":"9003","RawContent":null,"Title":"ListView cannot display content normally if ListView.View = View.SmallIcon","State":"open","Body":"### .NET version\r\n\r\n7.0.5 and 6.0\r\n\r\n### Issue description\r\n\r\nListView cannot display content normally if View = View.SmallIcon.\r\n\r\nAs shown in the picture below, in this test code, if you **scroll your mouse or click the scroll bar to move down**, the ListView will display a **white area**, which will not display any data normally.\r\n\r\n![003](https://user-images.githubusercontent.com/88176616/232988465-44bccdd0-2d37-4c8f-9a84-e848ad5da7f2.png)\r\n\r\n### Steps to reproduce\r\n\r\nFull C# Code with .net 7.0 and Visual Studio 2022\r\n\r\n```\r\nnamespace ListViewTest6\r\n{\r\n    internal static class Program\r\n    {\r\n        [STAThread]\r\n        static void Main()\r\n        {\r\n            ApplicationConfiguration.Initialize();\r\n            Application.Run(CreateForm());\r\n        }\r\n\r\n        private static Form CreateForm()\r\n        {\r\n            var form = new Form()\r\n            {\r\n                Width = 800,\r\n                Height = 600,\r\n                StartPosition = FormStartPosition.CenterScreen,\r\n            };\r\n\r\n            var imgList = new ImageList()\r\n            {\r\n                ColorDepth = ColorDepth.Depth32Bit,\r\n                ImageSize = new Size(32, 32),\r\n            };\r\n\r\n            var listView = new ListView()\r\n            {\r\n                Dock = DockStyle.Fill,\r\n                View = View.SmallIcon,\r\n\r\n                SmallImageList = imgList,\r\n                OwnerDraw = true,\r\n            };\r\n\r\n            listView.DrawColumnHeader += ListView_DrawColumnHeader;\r\n            listView.DrawItem += ListView_DrawItem;\r\n            listView.DrawSubItem += ListView_DrawSubItem;\r\n\r\n            var group1 = new ListViewGroup(\"Group 1\");\r\n            var group2 = new ListViewGroup(\"Group 2\");\r\n\r\n            listView.Groups.Add(group1);\r\n            listView.Groups.Add(group2);\r\n\r\n            for (int n = 0; n < 100; n++)\r\n            {\r\n                var item1 = listView.Items.Add(new ListViewItem(\"Item 123456789 1-\" + n));\r\n                item1.Group = group1;\r\n\r\n                var item2 = listView.Items.Add(new ListViewItem(\"Item 123456789 2-\" + n));\r\n                item2.Group = group2;\r\n            }\r\n\r\n            form.Controls.Add(listView);\r\n            return form;\r\n        }\r\n\r\n        private static void ListView_DrawItem(object sender, DrawListViewItemEventArgs e)\r\n        {\r\n            e.DrawDefault = true;\r\n        }\r\n\r\n        private static void ListView_DrawColumnHeader(object sender, DrawListViewColumnHeaderEventArgs e)\r\n        {\r\n            e.DrawDefault = true;\r\n        }\r\n\r\n        private static void ListView_DrawSubItem(object sender, DrawListViewSubItemEventArgs e)\r\n        {\r\n            e.DrawDefault = true;\r\n        }\r\n    }\r\n}\r\n```\r\n","Url":"https://github.com/dotnet/winforms/issues/9003","RelatedDescription":"Open issue \"ListView cannot display content normally if ListView.View = View.SmallIcon\" (#9003)"},{"Id":"1674171781","IsPullRequest":false,"CreatedAt":"2023-04-19T04:57:39","Actor":"roland5572","Number":"9001","RawContent":null,"Title":"Support rounded rectangle in Graphics class","State":"open","Body":"### Background and motivation\r\n\r\nIn modern interfaces, rounded rectangles are used in many places instead of right-angled rectangles, such as github buttons and labels.\r\n\r\n![001](https://user-images.githubusercontent.com/88176616/232976414-7108e93d-a823-4223-a7ac-c99dcfb7c0d9.png)\r\n\r\nThe current Graphics class provides Graphics.DrawRectangle and Graphics.FillRectangle to support drawing rectangles, but currently there is no corresponding method for drawing **rounded rectangles**.\r\n\r\nGraphics.DrawRectangle\r\nhttps://learn.microsoft.com/en-us/dotnet/api/system.drawing.graphics.drawrectangle\r\n\r\nGraphics.FillRectangle\r\nhttps://learn.microsoft.com/en-us/dotnet/api/system.drawing.graphics.fillrectangle\r\n\r\n### API Proposal\r\n\r\n```csharp\r\n\r\npublic sealed class Graphics\r\n{\r\n    public void DrawRoundedRectangle (System.Drawing.Pen pen, System.Drawing.Rectangle rect, int cornerRadius);\r\n    public void FillRoundedRectangle (System.Drawing.Brush brush, System.Drawing.Rectangle rect, int cornerRadius);\r\n}\r\n```\r\n\r\n\r\n### API Usage\r\n\r\ngraphics.DrawRoundedRectangle(new Pen(Color.Black), new Rectangle(0, 0, 100, 100), 5);\r\ngraphics.FillRoundedRectangle (new SolidBrush(Color.Black), new Rectangle(0, 0, 100, 100), 5);\r\n\r\n\r\n### Will this feature affect UI controls?\r\n\r\nWill VS Designer need to support the feature? If yes, describe how you expect it to funсtion.\r\nNo,\r\n\r\nWhat impact will it have on accessibility?\r\nNo,\r\n\r\nWill this feature need to be localized or be localizable?\r\nNo,","Url":"https://github.com/dotnet/winforms/issues/9001","RelatedDescription":"Open issue \"Support rounded rectangle in Graphics class\" (#9001)"},{"Id":"1673625774","IsPullRequest":true,"CreatedAt":"2023-04-18T21:19:10","Actor":"JeremyKuhne","Number":"8999","RawContent":null,"Title":"Add BufferScope for handling buffer rentals for interop","State":"closed","Body":"`BufferScope` is a ref struct that handles rental and return from the `ArrayPool` as well as:\r\n\r\n- Initial stack allocated buffers\r\n- Reacquisition of buffers (with content copying if necessary)\r\n- Span semantics (converters, range operators, etc.)\r\n\r\nIt significantly simplifies creating temporary buffers, particularly in cases where you need to make multiple calls (for the buffer not being large enough).\r\n\r\nAlso add `[SkipLocalsInit]` in a few places (so the stack allocated buffer doesn't get zeroed out).\r\n\r\nDid a global removal of unused usings (most of the file changes are just this).\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8999)","Url":"https://github.com/dotnet/winforms/pull/8999","RelatedDescription":"Closed or merged PR \"Add BufferScope for handling buffer rentals for interop\" (#8999)"},{"Id":"1677186338","IsPullRequest":false,"CreatedAt":"2023-04-18T20:33:26","Actor":"kseelam01","Number":"9014","RawContent":null,"Title":"Does the dotnet api support decoding webp images in Windows Server 2022(Version 21H2 and Os build 20348.1607)","State":"open","Body":"Hello,\r\n\r\nMy existing code works with System.Drawing.Image API which isn't working for some image formats as webp and throws Parameter is not valid exception. Hence I'm trying to decode webp format images using BitmapDecoder in System.Windows.Media.Imaging. The decoding is working fine on windows 11 but getting the error ''No imaging component suitable to perform this operation was found. COM Initialization failed.'' on Windows Server 2012 or Windows Server 2022.\r\n\r\nHere the error stackTrace:\r\n\r\n```\r\n'BitmapDecoder.CreateFromUriOrStream(null, null, origStream, BitmapCreateOptions.IgnoreColorProfile, BitmapCacheOption.Default, null, true)' threw an exception of type 'System.NotSupportedException'\r\n    Data: {System.Collections.ListDictionaryInternal}\r\n    HResult: -2146233067\r\n    HelpLink: null\r\n    IPForWatsonBuckets: 0x652a8822\r\n    InnerException: {\"The component cannot be found. (Exception from HRESULT: 0x88982F50)\"}\r\n    IsTransient: false\r\n    Message: \"No imaging component suitable to complete this operation was found.\"\r\n    RemoteStackTrace: null\r\n    Source: \"PresentationCore\"\r\n    StackTrace: \"   at System.Windows.Media.Imaging.BitmapDecoder.SetupDecoderFromUriOrStream(Uri uri, Stream stream, BitmapCacheOption cacheOption, Guid& clsId, Boolean& isOriginalWritable, Stream& uriStream, UnmanagedMemoryStream& unmanagedMemoryStream, SafeFileHandle& safeFilehandle)\\r\\n   at System.Windows.Media.Imaging.BitmapDecoder.CreateFromUriOrStream(Uri baseUri, Uri uri, Stream stream, BitmapCreateOptions createOptions, BitmapCacheOption cacheOption, RequestCachePolicy uriCachePolicy, Boolean insertInDecoderCache)\"\r\n    TargetSite: {System.Windows.Media.SafeMILHandle SetupDecoderFromUriOrStream(System.Uri, System.IO.Stream, System.Windows.Media.Imaging.BitmapCacheOption, System.Guid ByRef, Boolean ByRef, System.IO.Stream ByRef, System.IO.UnmanagedMemoryStream ByRef, Microsoft.Win32.SafeHandles.SafeFileHandle ByRef)}\r\n```\r\n\r\nI've tried converting webp images to other formats and use the stream with System.Drawing,Image But was throwing Parameter not valid error.\r\nDoes the Windows Server 2022(Version 21H2 and Os build 20348.1607) support decoding of webp images and if not when would the  windows updates for the same be provided ?","Url":"https://github.com/dotnet/winforms/issues/9014","RelatedDescription":"Open issue \"Does the dotnet api support decoding webp images in Windows Server 2022(Version 21H2 and Os build 20348.1607)\" (#9014)"},{"Id":"1669001358","IsPullRequest":true,"CreatedAt":"2023-04-18T18:14:45","Actor":"JeremyKuhne","Number":"8995","RawContent":null,"Title":"Clean up EncoderParameter code","State":"closed","Body":"Was investigating whether there might be logic errors in the marshalling. I've typed the conversions more directly and removed the use of PtrToStructure for performance and avoiding unnecessary reflection.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8995)","Url":"https://github.com/dotnet/winforms/pull/8995","RelatedDescription":"Closed or merged PR \"Clean up EncoderParameter code\" (#8995)"},{"Id":"1673523181","IsPullRequest":true,"CreatedAt":"2023-04-18T17:23:30","Actor":"dotnet-maestro[bot]","Number":"8998","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230418.5\r\n- **Date Produced**: April 18, 2023 4:25:40 PM UTC\r\n- **Commit**: 9672d82ffa42e00ab052aa6af5c10e25c5b35b86\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.CodeDom**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Data.Odbc**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Data.OleDb**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.IO.Ports**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Management**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Reflection.Context**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Runtime.Caching**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Speech**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Text.Json**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/2d9cb2d33f...9672d82ffa\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8998)","Url":"https://github.com/dotnet/winforms/pull/8998","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8998)"},{"Id":"1673437119","IsPullRequest":true,"CreatedAt":"2023-04-18T16:25:29","Actor":"dotnet-maestro[bot]","Number":"8997","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20230417.1\r\n- **Date Produced**: April 17, 2023 4:50:34 PM UTC\r\n- **Commit**: cb54ca21431ee8d96f91abfbc42237bcb001f9d1\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23213.1 to 8.0.0-beta.23217.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.23213.1 to 8.0.0-beta.23217.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.23213.1 to 8.0.0-beta.23217.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23213.1 to 8.0.0-beta.23217.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.23213.1 to 8.0.0-beta.23217.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23213.1 to 8.0.0-beta.23217.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/fb14cae30e...cb54ca2143\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8997)","Url":"https://github.com/dotnet/winforms/pull/8997","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#8997)"},{"Id":"1669331799","IsPullRequest":false,"CreatedAt":"2023-04-15T12:02:28","Actor":"benki111","Number":"8996","RawContent":null,"Title":"Every time i create a new project, the designer always gets stuck","State":"open","Body":"### Environment\n\n![image](https://user-images.githubusercontent.com/130839892/232219293-70c84fa0-819f-4627-b48e-cee7e731efb5.png)\r\n\n\n### .NET version\n\n7.0\n\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\n\nno\n\n### Issue description\n\nevery time i create a new project the designer immediately hangs up, and it stays like that for hours\r\n![image](https://user-images.githubusercontent.com/130839892/232219691-b2dd479b-d364-4e7c-b8a0-096e614c7382.png)\r\n\n\n### Steps to reproduce\n\ncreate a new project, no matter what net version\n\n### Diagnostics\n\n```text\n[19:48:57.383748] fail: OutputGroupService didn't return output group DesignerRuntimeImplementationProjectOutputGroup.\r\n\r\n                        For information on how to troubleshoot the designer refer to the guide at https://aka.ms/winforms/designer/troubleshooting.\r\n[19:48:57.384745] fail: Could not retrieve DesignerRuntimeImplementationProjectOutputGroup for current project.\r\n\r\n                        For information on how to troubleshoot the designer refer to the guide at https://aka.ms/winforms/designer/troubleshooting.\r\n[19:48:57.393783] fail: System.InvalidOperationException: Designer load encountered an error. Please ensure that the project can be built successfully.\r\n                           at Microsoft.DotNet.DesignTools.Client.Host.ProjectInfoProvider.NetCore.<GetNetCoreProjectInfoAsync>d__6.MoveNext()\r\n                        --- End of stack trace from previous location where exception was thrown ---\r\n                           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n                           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n                           at Microsoft.DotNet.DesignTools.Client.Host.ProjectInfoProvider.<GetProjectInfoAsync>d__9.MoveNext()\r\n                        --- End of stack trace from previous location where exception was thrown ---\r\n                           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n                           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n                           at Microsoft.DotNet.DesignTools.Client.Host.ServerHostFactory.<CreateHostAsync>d__8.MoveNext()\r\n                        --- End of stack trace from previous location where exception was thrown ---\r\n                           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n                           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n                           at Microsoft.DotNet.DesignTools.Client.DesignToolsClientLoader.<CreateClientAsync>d__29.MoveNext()\r\n\r\n                        For information on how to troubleshoot the designer refer to the guide at https://aka.ms/winforms/designer/troubleshooting.\r\n[19:48:59.229331] warn: Cannot update selection in server process as Session is not connected.\n```\n","Url":"https://github.com/dotnet/winforms/issues/8996","RelatedDescription":"Open issue \"Every time i create a new project, the designer always gets stuck\" (#8996)"},{"Id":"1668759292","IsPullRequest":true,"CreatedAt":"2023-04-14T21:57:00","Actor":"JeremyKuhne","Number":"8994","RawContent":null,"Title":"Implement typed Font.To/FromLogFont","State":"closed","Body":"This adds the new typed API.\r\n\r\nThe new namespace conflicts with the Interop class so I had to change a number of files to add a static using for Interop.\r\n\r\nAlso changes WinForms to consume the new API.\r\n\r\nFixes #8846\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8994)","Url":"https://github.com/dotnet/winforms/pull/8994","RelatedDescription":"Closed or merged PR \"Implement typed Font.To/FromLogFont\" (#8994)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-04-22T03:30:32.2108829Z","RunDurationInMilliseconds":555}