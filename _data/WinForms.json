{"Data":{"GitHub":{"Issues":[{"Id":"1675895598","IsPullRequest":false,"CreatedAt":"2023-04-20T02:36:13","Actor":"Olina-Zhang","Number":"9008","RawContent":null,"Title":"An error dialog pops up when clicking AutoCompleteCustomSource in properyGrid with binding ComboBox ","State":"open","Body":"### .NET version\n\ndotnet-sdk-8.0.100-preview.4.23218.19\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, it doesn't reproduce in .Net 7.0 SDK build.\n\n### Issue description\n\nAn error dialog pops up when clicking AutoCompleteCustomSource in propertyGrid with binding ComboBox control.\r\n\r\n**Result on .Net 8.0 Preview 4 build:**\r\n![image](https://user-images.githubusercontent.com/26474449/233242927-0d02986d-4873-4f39-ba96-69a295c20c40.png)\r\n\r\n**Result on .Net 7.0 build:**\r\nWhen clicking AutoCompleteCustomSource property, it will pops up String Collection editor dialog:\r\n![image](https://user-images.githubusercontent.com/26474449/233243073-144096be-e8b2-46a6-94c4-c6c97afc13d2.png)\r\n\n\n### Steps to reproduce\n\nTested app: \r\n[WinFormsApp89.zip](https://github.com/dotnet/winforms/files/11279282/WinFormsApp89.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/9008","RelatedDescription":"Open issue \"An error dialog pops up when clicking AutoCompleteCustomSource in properyGrid with binding ComboBox \" (#9008)"},{"Id":"1675890181","IsPullRequest":false,"CreatedAt":"2023-04-20T02:28:15","Actor":"Olina-Zhang","Number":"9007","RawContent":null,"Title":"[HDPI] Cursor editor in propertyGrid is not scaled well","State":"open","Body":"### .NET version\n\ndotnet-sdk-8.0.100-preview.4.23218.19\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, it doesn't reproduce in .Net 7.0 SDK build.\n\n### Issue description\n\nOn High DPI environment, cursor editor in propertyGrid is not scaled well\r\n\r\n**Result on .Net 8.0 Preview 4 build with 300%DPI**:\r\n![image](https://user-images.githubusercontent.com/26474449/233241549-b9a1d277-74cd-4448-95fb-6b011605cd63.png)\r\n![Issue2](https://user-images.githubusercontent.com/26474449/233241617-0e054977-efb2-4415-8646-cee8d2511a33.gif)\r\n\r\n**Result on .Net 7.0 build with 300%DPI**:\r\n![image](https://user-images.githubusercontent.com/26474449/233241747-532b0faf-69c1-4a92-a898-cd1d88a65492.png)\r\n\n\n### Steps to reproduce\n\nSample app: \r\n[WinFormsApp89.zip](https://github.com/dotnet/winforms/files/11279255/WinFormsApp89.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/9007","RelatedDescription":"Open issue \"[HDPI] Cursor editor in propertyGrid is not scaled well\" (#9007)"},{"Id":"1674199930","IsPullRequest":false,"CreatedAt":"2023-04-20T01:11:02","Actor":"GrapesOfWath","Number":"9002","RawContent":null,"Title":"TreeView freezes the IDE when added to tabpage","State":"closed","Body":"### Environment\r\n\r\nVisual Studio 2022 v17.5.4\r\n\r\n### .NET version\r\n\r\n6.0\r\n\r\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\r\n\r\nUnsure, haven't fiddled with VS in years\r\n\r\n### Issue description\r\n\r\nAdding a TreeView to a tabpage causes the application to hang indefinitely when swapping to a different tabpage that contains controls.\r\n\r\n### Steps to reproduce\r\n\r\n>New Project\r\n>Add TabControl\r\n>Add controls to one page\r\n>Add treeview to another page\r\n>Go back to page without the treeview on it\r\n>Notice most of the controls don't render correctly\r\n>Either you freeze here, or you switch back to the tab with the treeview on it and *then* you freeze\r\n\r\n### Diagnostics\r\n\r\n_No response_","Url":"https://github.com/dotnet/winforms/issues/9002","RelatedDescription":"Closed issue \"TreeView freezes the IDE when added to tabpage\" (#9002)"},{"Id":"1675557393","IsPullRequest":true,"CreatedAt":"2023-04-19T20:11:09","Actor":"dreddy-work","Number":"9006","RawContent":null,"Title":"Fix Anchors for Nested containers","State":"open","Body":"- Controls anchored within the nested containers are never getting chance to compute `AnchorInfo `in V2 layout and thus seeing issues mentioned in #8933. \r\n- Explicit bounds change on the control either by setting Properties like `Size`, `Location` or by calling public APIs `SetBounds` should recompute `AnchorsInfo` for the control. We documented this but missed in the validation. Issue #8494.\r\n- Added unit tests covering these scenarios.\r\n\r\nFixes #8933 \r\nFixes #8494 \r\n\r\nAnchor UI needs VS servicing to pick these changes.\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9006)","Url":"https://github.com/dotnet/winforms/pull/9006","RelatedDescription":"Open PR \"Fix Anchors for Nested containers\" (#9006)"},{"Id":"1675176157","IsPullRequest":false,"CreatedAt":"2023-04-19T15:44:17","Actor":"dmitrii-drobotov","Number":"9005","RawContent":null,"Title":"Add checkable ToolStrip menu items and buttons to test applications","State":"open","Body":"### .NET version\n\n.NET 8\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\nFollowing up on recent accessibility improvements for checkable ToolStripMenuItem and ToolStripButton (#8307, #8961), we should add samples of such controls into our test apps. \r\n\r\n#### WinFormsControlsTest app\r\n\r\n* ToolStripMenuItem. There is already a checked item on \"Menus\" page:\r\n![image](https://user-images.githubusercontent.com/102954094/233125000-a851d44c-b173-41c4-a03b-22a130231708.png)\r\nbut more cases should be included:\r\n    * `ToolStripMenuItem` with `CheckState = CheckState.Unchecked` and `CheckOnClick = true`\r\n    * `ToolStripMenuItem` with `CheckState = CheckState.Indeterminate` and `CheckOnClick = true`\r\n    * `ToolStripMenuItem` with `CheckState = CheckState.Indeterminate` and `CheckOnClick = false`\r\n    \r\n* ToolStripButton. Different cases are already covered on \"ToolStrips\" page:\r\n![image](https://user-images.githubusercontent.com/102954094/233126174-3b1dbaf6-85c2-4a81-95e5-9d44f92473bb.png)\r\n\r\n#### Accessibility_Core_App\r\n\r\n* ToolStripMenuItem. There are no samples of checked items on MenuToolbars_Controls - StripControls page, therefore we should add following items:\r\n    * `ToolStripMenuItem` with `CheckState = CheckState.Unchecked` and `CheckOnClick = true`\r\n    * `ToolStripMenuItem` with `CheckState = CheckState.Checked` and `CheckOnClick = true`\r\n    * `ToolStripMenuItem` with `CheckState = CheckState.Checked` and `CheckOnClick = false`\r\n    * `ToolStripMenuItem` with `CheckState = CheckState.Indeterminate` and `CheckOnClick = true`\r\n    * `ToolStripMenuItem` with `CheckState = CheckState.Indeterminate` and `CheckOnClick = false`\r\n    \r\n* ToolStripButton. There are also no checked buttons on MenuToolbars_Controls - StripControls page, therefore we should add a set of similar cases:\r\n    * `ToolStripButton` with `CheckState = CheckState.Unchecked` and `CheckOnClick = false`\r\n    * `ToolStripButton` with `CheckState = CheckState.Unchecked` and `CheckOnClick = true`\r\n    * `ToolStripButton` with `CheckState = CheckState.Checked` and `CheckOnClick = true`\r\n    * `ToolStripButton` with `CheckState = CheckState.Checked` and `CheckOnClick = false`\r\n    * `ToolStripButton` with `CheckState = CheckState.Indeterminate` and `CheckOnClick = true`\r\n    * `ToolStripButton` with `CheckState = CheckState.Indeterminate` and `CheckOnClick = false`\r\n\n\n### Steps to reproduce\n\nN/A","Url":"https://github.com/dotnet/winforms/issues/9005","RelatedDescription":"Open issue \"Add checkable ToolStrip menu items and buttons to test applications\" (#9005)"},{"Id":"1674445391","IsPullRequest":false,"CreatedAt":"2023-04-19T08:36:50","Actor":"tbambuch","Number":"9004","RawContent":null,"Title":"HDPI PMv2 issue in ContainerControl.ScaleContainerForDpi","State":"open","Body":"### .NET version\n\n7.0\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nworked in .net 5\n\n### Issue description\n\nThe order of functions in ScaleContainerForDpi() is wrong.\r\nNow, it first calls `PInvoke.SetWindowPos` and later it sets Font by calling `GetScaledFont `and raising `OnFontChanged`.\r\n\r\nBut, in my Per-monitor setup (175% dpi scaling for primary screen and 100% secondary), the `SetWindowPos()` call generates another `OnDpiChanged`, resulting in another `ScaleContainerForDpi `being called (see stacktrace attached).\r\nThis inner `ScaleContainerForDpi` call sets the correct font, but the Font is then overwritten by the incorrect value, after the function returns.\r\n\r\nSo I suppose the correct order should be: First raise OnFontChanged, then call PInvoke.SetWindowPos\r\n\r\n[stacktrace.txt](https://github.com/dotnet/winforms/files/11270667/stacktrace.txt)\r\n\r\n\n\n### Steps to reproduce\n\nI did not found a reliable way how to replicate the issue on smallest scenario possible, it just happens for some of the forms in my application, while some other forms behave correctly","Url":"https://github.com/dotnet/winforms/issues/9004","RelatedDescription":"Open issue \"HDPI PMv2 issue in ContainerControl.ScaleContainerForDpi\" (#9004)"},{"Id":"1674262317","IsPullRequest":false,"CreatedAt":"2023-04-19T06:39:12","Actor":"roland5572","Number":"9003","RawContent":null,"Title":"ListView cannot display content normally if ListView.View = View.SmallIcon","State":"open","Body":"### .NET version\r\n\r\n7.0.5 and 6.0\r\n\r\n### Issue description\r\n\r\nListView cannot display content normally if View = View.SmallIcon.\r\n\r\nAs shown in the picture below, in this test code, if you **scroll your mouse or click the scroll bar to move down**, the ListView will display a **white area**, which will not display any data normally.\r\n\r\n![003](https://user-images.githubusercontent.com/88176616/232988465-44bccdd0-2d37-4c8f-9a84-e848ad5da7f2.png)\r\n\r\n### Steps to reproduce\r\n\r\nFull C# Code with .net 7.0 and Visual Studio 2022\r\n\r\n```\r\nnamespace ListViewTest6\r\n{\r\n    internal static class Program\r\n    {\r\n        [STAThread]\r\n        static void Main()\r\n        {\r\n            ApplicationConfiguration.Initialize();\r\n            Application.Run(CreateForm());\r\n        }\r\n\r\n        private static Form CreateForm()\r\n        {\r\n            var form = new Form()\r\n            {\r\n                Width = 800,\r\n                Height = 600,\r\n                StartPosition = FormStartPosition.CenterScreen,\r\n            };\r\n\r\n            var imgList = new ImageList()\r\n            {\r\n                ColorDepth = ColorDepth.Depth32Bit,\r\n                ImageSize = new Size(32, 32),\r\n            };\r\n\r\n            var listView = new ListView()\r\n            {\r\n                Dock = DockStyle.Fill,\r\n                View = View.SmallIcon,\r\n\r\n                SmallImageList = imgList,\r\n                OwnerDraw = true,\r\n            };\r\n\r\n            listView.DrawColumnHeader += ListView_DrawColumnHeader;\r\n            listView.DrawItem += ListView_DrawItem;\r\n            listView.DrawSubItem += ListView_DrawSubItem;\r\n\r\n            var group1 = new ListViewGroup(\"Group 1\");\r\n            var group2 = new ListViewGroup(\"Group 2\");\r\n\r\n            listView.Groups.Add(group1);\r\n            listView.Groups.Add(group2);\r\n\r\n            for (int n = 0; n < 100; n++)\r\n            {\r\n                var item1 = listView.Items.Add(new ListViewItem(\"Item 123456789 1-\" + n));\r\n                item1.Group = group1;\r\n\r\n                var item2 = listView.Items.Add(new ListViewItem(\"Item 123456789 2-\" + n));\r\n                item2.Group = group2;\r\n            }\r\n\r\n            form.Controls.Add(listView);\r\n            return form;\r\n        }\r\n\r\n        private static void ListView_DrawItem(object sender, DrawListViewItemEventArgs e)\r\n        {\r\n            e.DrawDefault = true;\r\n        }\r\n\r\n        private static void ListView_DrawColumnHeader(object sender, DrawListViewColumnHeaderEventArgs e)\r\n        {\r\n            e.DrawDefault = true;\r\n        }\r\n\r\n        private static void ListView_DrawSubItem(object sender, DrawListViewSubItemEventArgs e)\r\n        {\r\n            e.DrawDefault = true;\r\n        }\r\n    }\r\n}\r\n```\r\n","Url":"https://github.com/dotnet/winforms/issues/9003","RelatedDescription":"Open issue \"ListView cannot display content normally if ListView.View = View.SmallIcon\" (#9003)"},{"Id":"1674171781","IsPullRequest":false,"CreatedAt":"2023-04-19T04:57:39","Actor":"roland5572","Number":"9001","RawContent":null,"Title":"Support rounded rectangle in Graphics class","State":"open","Body":"### Background and motivation\r\n\r\nIn modern interfaces, rounded rectangles are used in many places instead of right-angled rectangles, such as github buttons and labels.\r\n\r\n![001](https://user-images.githubusercontent.com/88176616/232976414-7108e93d-a823-4223-a7ac-c99dcfb7c0d9.png)\r\n\r\nThe current Graphics class provides Graphics.DrawRectangle and Graphics.FillRectangle to support drawing rectangles, but currently there is no corresponding method for drawing **rounded rectangles**.\r\n\r\nGraphics.DrawRectangle\r\nhttps://learn.microsoft.com/en-us/dotnet/api/system.drawing.graphics.drawrectangle\r\n\r\nGraphics.FillRectangle\r\nhttps://learn.microsoft.com/en-us/dotnet/api/system.drawing.graphics.fillrectangle\r\n\r\n### API Proposal\r\n\r\n```csharp\r\n\r\npublic sealed class Graphics\r\n{\r\n    public void DrawRoundedRectangle (System.Drawing.Pen pen, System.Drawing.Rectangle rect, int cornerRadius);\r\n    public void FillRoundedRectangle (System.Drawing.Brush brush, System.Drawing.Rectangle rect, int cornerRadius);\r\n}\r\n```\r\n\r\n\r\n### API Usage\r\n\r\ngraphics.DrawRoundedRectangle(new Pen(Color.Black), new Rectangle(0, 0, 100, 100), 5);\r\ngraphics.FillRoundedRectangle (new SolidBrush(Color.Black), new Rectangle(0, 0, 100, 100), 5);\r\n\r\n\r\n### Will this feature affect UI controls?\r\n\r\nWill VS Designer need to support the feature? If yes, describe how you expect it to funсtion.\r\nNo,\r\n\r\nWhat impact will it have on accessibility?\r\nNo,\r\n\r\nWill this feature need to be localized or be localizable?\r\nNo,","Url":"https://github.com/dotnet/winforms/issues/9001","RelatedDescription":"Open issue \"Support rounded rectangle in Graphics class\" (#9001)"},{"Id":"1673848940","IsPullRequest":true,"CreatedAt":"2023-04-18T21:21:22","Actor":"JeremyKuhne","Number":"9000","RawContent":null,"Title":"Change Font cache in AxHost to ConditionalWeakTable","State":"open","Body":"Fonts were getting permanently rooted (leaking) here.\r\n\r\nDid some minor comment cleanup in Cache classes.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9000)","Url":"https://github.com/dotnet/winforms/pull/9000","RelatedDescription":"Open PR \"Change Font cache in AxHost to ConditionalWeakTable\" (#9000)"},{"Id":"1673625774","IsPullRequest":true,"CreatedAt":"2023-04-18T21:19:10","Actor":"JeremyKuhne","Number":"8999","RawContent":null,"Title":"Add BufferScope for handling buffer rentals for interop","State":"closed","Body":"`BufferScope` is a ref struct that handles rental and return from the `ArrayPool` as well as:\r\n\r\n- Initial stack allocated buffers\r\n- Reacquisition of buffers (with content copying if necessary)\r\n- Span semantics (converters, range operators, etc.)\r\n\r\nIt significantly simplifies creating temporary buffers, particularly in cases where you need to make multiple calls (for the buffer not being large enough).\r\n\r\nAlso add `[SkipLocalsInit]` in a few places (so the stack allocated buffer doesn't get zeroed out).\r\n\r\nDid a global removal of unused usings (most of the file changes are just this).\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8999)","Url":"https://github.com/dotnet/winforms/pull/8999","RelatedDescription":"Closed or merged PR \"Add BufferScope for handling buffer rentals for interop\" (#8999)"},{"Id":"1669001358","IsPullRequest":true,"CreatedAt":"2023-04-18T18:14:45","Actor":"JeremyKuhne","Number":"8995","RawContent":null,"Title":"Clean up EncoderParameter code","State":"closed","Body":"Was investigating whether there might be logic errors in the marshalling. I've typed the conversions more directly and removed the use of PtrToStructure for performance and avoiding unnecessary reflection.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8995)","Url":"https://github.com/dotnet/winforms/pull/8995","RelatedDescription":"Closed or merged PR \"Clean up EncoderParameter code\" (#8995)"},{"Id":"1673523181","IsPullRequest":true,"CreatedAt":"2023-04-18T17:23:30","Actor":"dotnet-maestro[bot]","Number":"8998","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230418.5\r\n- **Date Produced**: April 18, 2023 4:25:40 PM UTC\r\n- **Commit**: 9672d82ffa42e00ab052aa6af5c10e25c5b35b86\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.CodeDom**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Data.Odbc**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Data.OleDb**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.IO.Ports**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Management**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Reflection.Context**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Runtime.Caching**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Speech**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Text.Json**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.4.23214.1 to 8.0.0-preview.4.23218.5][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/2d9cb2d33f...9672d82ffa\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8998)","Url":"https://github.com/dotnet/winforms/pull/8998","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8998)"},{"Id":"1673437119","IsPullRequest":true,"CreatedAt":"2023-04-18T16:25:29","Actor":"dotnet-maestro[bot]","Number":"8997","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20230417.1\r\n- **Date Produced**: April 17, 2023 4:50:34 PM UTC\r\n- **Commit**: cb54ca21431ee8d96f91abfbc42237bcb001f9d1\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23213.1 to 8.0.0-beta.23217.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.23213.1 to 8.0.0-beta.23217.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.23213.1 to 8.0.0-beta.23217.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23213.1 to 8.0.0-beta.23217.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.23213.1 to 8.0.0-beta.23217.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23213.1 to 8.0.0-beta.23217.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/fb14cae30e...cb54ca2143\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8997)","Url":"https://github.com/dotnet/winforms/pull/8997","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#8997)"},{"Id":"1669331799","IsPullRequest":false,"CreatedAt":"2023-04-15T12:02:28","Actor":"benki111","Number":"8996","RawContent":null,"Title":"Every time i create a new project, the designer always gets stuck","State":"open","Body":"### Environment\n\n![image](https://user-images.githubusercontent.com/130839892/232219293-70c84fa0-819f-4627-b48e-cee7e731efb5.png)\r\n\n\n### .NET version\n\n7.0\n\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\n\nno\n\n### Issue description\n\nevery time i create a new project the designer immediately hangs up, and it stays like that for hours\r\n![image](https://user-images.githubusercontent.com/130839892/232219691-b2dd479b-d364-4e7c-b8a0-096e614c7382.png)\r\n\n\n### Steps to reproduce\n\ncreate a new project, no matter what net version\n\n### Diagnostics\n\n```text\n[19:48:57.383748] fail: OutputGroupService didn't return output group DesignerRuntimeImplementationProjectOutputGroup.\r\n\r\n                        For information on how to troubleshoot the designer refer to the guide at https://aka.ms/winforms/designer/troubleshooting.\r\n[19:48:57.384745] fail: Could not retrieve DesignerRuntimeImplementationProjectOutputGroup for current project.\r\n\r\n                        For information on how to troubleshoot the designer refer to the guide at https://aka.ms/winforms/designer/troubleshooting.\r\n[19:48:57.393783] fail: System.InvalidOperationException: Designer load encountered an error. Please ensure that the project can be built successfully.\r\n                           at Microsoft.DotNet.DesignTools.Client.Host.ProjectInfoProvider.NetCore.<GetNetCoreProjectInfoAsync>d__6.MoveNext()\r\n                        --- End of stack trace from previous location where exception was thrown ---\r\n                           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n                           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n                           at Microsoft.DotNet.DesignTools.Client.Host.ProjectInfoProvider.<GetProjectInfoAsync>d__9.MoveNext()\r\n                        --- End of stack trace from previous location where exception was thrown ---\r\n                           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n                           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n                           at Microsoft.DotNet.DesignTools.Client.Host.ServerHostFactory.<CreateHostAsync>d__8.MoveNext()\r\n                        --- End of stack trace from previous location where exception was thrown ---\r\n                           at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n                           at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n                           at Microsoft.DotNet.DesignTools.Client.DesignToolsClientLoader.<CreateClientAsync>d__29.MoveNext()\r\n\r\n                        For information on how to troubleshoot the designer refer to the guide at https://aka.ms/winforms/designer/troubleshooting.\r\n[19:48:59.229331] warn: Cannot update selection in server process as Session is not connected.\n```\n","Url":"https://github.com/dotnet/winforms/issues/8996","RelatedDescription":"Open issue \"Every time i create a new project, the designer always gets stuck\" (#8996)"},{"Id":"1668759292","IsPullRequest":true,"CreatedAt":"2023-04-14T21:57:00","Actor":"JeremyKuhne","Number":"8994","RawContent":null,"Title":"Implement typed Font.To/FromLogFont","State":"closed","Body":"This adds the new typed API.\r\n\r\nThe new namespace conflicts with the Interop class so I had to change a number of files to add a static using for Interop.\r\n\r\nAlso changes WinForms to consume the new API.\r\n\r\nFixes #8846\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8994)","Url":"https://github.com/dotnet/winforms/pull/8994","RelatedDescription":"Closed or merged PR \"Implement typed Font.To/FromLogFont\" (#8994)"},{"Id":"1668437960","IsPullRequest":true,"CreatedAt":"2023-04-14T17:55:53","Actor":"dotnet-maestro[bot]","Number":"8991","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20230413.1\r\n- **Date Produced**: April 13, 2023 3:41:04 PM UTC\r\n- **Commit**: fb14cae30eacbe844468ac297b3d4c61e0bb9dc0\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23211.8 to 8.0.0-beta.23213.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.23211.8 to 8.0.0-beta.23213.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.23211.8 to 8.0.0-beta.23213.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23211.8 to 8.0.0-beta.23213.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.23211.8 to 8.0.0-beta.23213.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23211.8 to 8.0.0-beta.23213.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/17d9eee32f...fb14cae30e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8991)","Url":"https://github.com/dotnet/winforms/pull/8991","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#8991)"},{"Id":"1668698466","IsPullRequest":true,"CreatedAt":"2023-04-14T17:52:51","Actor":"dreddy-work","Number":"8993","RawContent":null,"Title":"Ensure application is idle before sending mouse input.","State":"open","Body":"draft\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8993)","Url":"https://github.com/dotnet/winforms/pull/8993","RelatedDescription":"Open PR \"Ensure application is idle before sending mouse input.\" (#8993)"},{"Id":"1668548181","IsPullRequest":true,"CreatedAt":"2023-04-14T16:37:29","Actor":"dotnet-maestro[bot]","Number":"8992","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230414.1\r\n- **Date Produced**: April 14, 2023 10:51:51 AM UTC\r\n- **Commit**: 2d9cb2d33f6f89f0a1a01782f2e474051bb2894a\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **System.CodeDom**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **System.Data.Odbc**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **System.Data.OleDb**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **System.IO.Ports**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **System.Management**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **System.Reflection.Context**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **System.Runtime.Caching**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **System.Speech**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **System.Text.Json**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.4.23213.5 to 8.0.0-preview.4.23214.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/42c6bcf207...2d9cb2d33f\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8992)","Url":"https://github.com/dotnet/winforms/pull/8992","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8992)"},{"Id":"1668301654","IsPullRequest":false,"CreatedAt":"2023-04-14T13:58:14","Actor":"TheLeftExit","Number":"8990","RawContent":null,"Title":"Disposing of an MDI parent form twice throws an exception","State":"open","Body":"### .NET version\n\n.NET 8 Preview 3\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, it works in .NET 7 and earlier\n\n### Issue description\n\nCalling `this.Dispose()` twice inside a form that has a child MDI form crashes the application with `NullReferenceException`.\r\n\r\nInspecting platform code code reveals an inconsistency inside the [PropertyStore.TryGetObject](https://github.com/dotnet/winforms/blob/f3a6aa1d4313472705cf3f00515a496c44552b10/src/System.Windows.Forms/src/System/Windows/Forms/PropertyStore.cs#L190-L195) method:\r\n\r\n![image](https://user-images.githubusercontent.com/47351802/232063776-1816b30e-6359-43fc-8c7c-afb8f10202c5.png)\r\n\n\n### Steps to reproduce\n\n1. In Visual Studio 2022, create a new project with the Windows Forms App template. Select .NET 8 Preview 3.\r\n2. In the form designer, add a button to the form.\r\n3. Configure the form to be an MDI container, add an MDI child form, and add a handler to `Button.Click`:\r\n```cs\r\npublic Form1() {\r\n    InitializeComponent();\r\n    IsMdiContainer = true;\r\n    var form = new Form();\r\n    form.Text = \"TEST\";\r\n    form.MdiParent = this;\r\n    form.Show();\r\n\r\n    button1.Click += (sender, e) =>\r\n    {\r\n        this.Dispose();\r\n        this.Dispose();\r\n    };\r\n}\r\n```\r\n4. Run the project and click on the button.\r\n5. **The application crashes.**","Url":"https://github.com/dotnet/winforms/issues/8990","RelatedDescription":"Open issue \"Disposing of an MDI parent form twice throws an exception\" (#8990)"},{"Id":"1667364284","IsPullRequest":true,"CreatedAt":"2023-04-14T01:56:07","Actor":"JeremyKuhne","Number":"8989","RawContent":null,"Title":"Update issue links to new URLs.","State":"closed","Body":"Also remove a .NET Framework specific code block.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8989)","Url":"https://github.com/dotnet/winforms/pull/8989","RelatedDescription":"Closed or merged PR \"Update issue links to new URLs.\" (#8989)"},{"Id":"1667258034","IsPullRequest":true,"CreatedAt":"2023-04-14T01:55:43","Actor":"JeremyKuhne","Number":"8988","RawContent":null,"Title":"Fix FontConverter InstanceDescriptor conversion","State":"closed","Body":"When porting to Core the `InstanceDescriptor` conversion was simplified to work with only the values that were supported cross platform. This caused data loss on Windows when custom GDI options were present.\r\n\r\nNow that `System.Drawing` is only supported on Windows, match the .NET Framework implementation.\r\n\r\nFixes #8838\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8988)","Url":"https://github.com/dotnet/winforms/pull/8988","RelatedDescription":"Closed or merged PR \"Fix FontConverter InstanceDescriptor conversion\" (#8988)"},{"Id":"1667203418","IsPullRequest":true,"CreatedAt":"2023-04-14T00:06:56","Actor":"JeremyKuhne","Number":"8987","RawContent":null,"Title":"Implement CachedBitmap","State":"closed","Body":"Implements GDI+ `CachedBitmap` wrapper which allows caching a device dependent copy of `Bitmap`. Rendering is signficantly faster (5x+), although it has a few caveats:\r\n\r\n- It needs to be regenerated if color depth changes\r\n- It cannot be rendered to a Graphics object that has a tranform other than translation (no rotation, scaling)\r\n\r\nFixes #8822\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8987)","Url":"https://github.com/dotnet/winforms/pull/8987","RelatedDescription":"Closed or merged PR \"Implement CachedBitmap\" (#8987)"},{"Id":"1664791582","IsPullRequest":true,"CreatedAt":"2023-04-13T23:34:41","Actor":"dotnet-maestro[bot]","Number":"8979","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20230411.8\r\n- **Date Produced**: April 11, 2023 10:04:27 PM UTC\r\n- **Commit**: 17d9eee32f20a6af0ebb620254a22f601d159578\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23210.3 to 8.0.0-beta.23211.8][3]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.23210.3 to 8.0.0-beta.23211.8][3]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.23210.3 to 8.0.0-beta.23211.8][3]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23210.3 to 8.0.0-beta.23211.8][3]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.23210.3 to 8.0.0-beta.23211.8][3]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23210.3 to 8.0.0-beta.23211.8][3]\r\n\r\n[3]: https://github.com/dotnet/arcade/compare/e5c569253a...17d9eee32f\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8979)\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/8979","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#8979)"},{"Id":"1666896841","IsPullRequest":true,"CreatedAt":"2023-04-13T18:04:45","Actor":"JeremyKuhne","Number":"8986","RawContent":null,"Title":"Null out FontFamily field on Font when disposing","State":"open","Body":"To avoid rooting the FontFamily if the Font itself is still rooted after disposal.\r\n\r\nThis introduces an ObjectDisposedException if you try to access fields that use the FontFamily after disposing.\r\n\r\nFixes #8823\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8986)","Url":"https://github.com/dotnet/winforms/pull/8986","RelatedDescription":"Open PR \"Null out FontFamily field on Font when disposing\" (#8986)"},{"Id":"1666130566","IsPullRequest":false,"CreatedAt":"2023-04-13T10:14:20","Actor":"goroggy","Number":"8985","RawContent":null,"Title":"Textbox MaxLength > 32767 has no effect, may be documentation oversight","State":"open","Body":"### Environment\n\nMicrosoft Visual Studio Community 2022 (64-bit) - Preview\r\nVersion 17.6.0 Preview 3.0\r\n<TargetFramework>net8.0-windows</TargetFramework>\r\n<LangVersion>preview</LangVersion>\r\n<Platforms>x64</Platforms>\n\n### .NET version\n\n<TargetFramework>net8.0-windows</TargetFramework>\n\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\n\nI don't know\n\n### Issue description\n\nSetting TextBox MaxLength to e.g. 99_999, it still accepts only the first 32_727 characters.\n\n### Steps to reproduce\n\nPut a textbox on a windows form. Copy text longer than 32_727 characters. Paste into this textbox. Textbox will accept the first 32_727 characters. Set MaxLength to 99_999. Textbox still accepts the first 32_767 characters only.\n\n### Diagnostics\n\n```text\n// \r\n            // TbInput\r\n            // \r\n            TbInput.Location = new Point(7, 124);\r\n            TbInput.MaxLength = 99999;\r\n            TbInput.Multiline = true;\r\n            TbInput.Name = \"TbInput\";\r\n            TbInput.ScrollBars = ScrollBars.Vertical;\r\n            TbInput.Size = new Size(846, 523);\r\n            TbInput.TabIndex = 21;\r\n            TbInput.TextChanged += TbInput_TextChanged;\n```\n","Url":"https://github.com/dotnet/winforms/issues/8985","RelatedDescription":"Open issue \"Textbox MaxLength > 32767 has no effect, may be documentation oversight\" (#8985)"},{"Id":"1665244379","IsPullRequest":true,"CreatedAt":"2023-04-13T00:48:20","Actor":"JeremyKuhne","Number":"8983","RawContent":null,"Title":"Add ExtractIcon functionality to Icon","State":"closed","Body":"This adds Icon.Extracticon to allow extracting icons from icon files and native resources from PE files at any specified resolution.\r\n\r\nAlso adds an overload to SystemIcons.GetStockIcon() to get a specified size.\r\n\r\nFixes #8929\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8983)","Url":"https://github.com/dotnet/winforms/pull/8983","RelatedDescription":"Closed or merged PR \"Add ExtractIcon functionality to Icon\" (#8983)"},{"Id":"1665132075","IsPullRequest":true,"CreatedAt":"2023-04-13T00:04:28","Actor":"sharwell","Number":"8982","RawContent":null,"Title":"Pause NGEN to avoid CPU interference during the run","State":"closed","Body":"Logs for #8977 showed copies of **mscorsvw** running in the background. This change pauses the NGEN queue to prevent **mscorsvw** from consuming CPU and potentially interfering with the integration tests.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8982)","Url":"https://github.com/dotnet/winforms/pull/8982","RelatedDescription":"Closed or merged PR \"Pause NGEN to avoid CPU interference during the run\" (#8982)"},{"Id":"1665425782","IsPullRequest":false,"CreatedAt":"2023-04-12T23:57:44","Actor":"dreddy-work","Number":"8984","RawContent":null,"Title":"[Tracking] Remove suppressions against Obsolete methods","State":"open","Body":"This is tracking issue related to the [comment ](https://github.com/dotnet/winforms/pull/8967#discussion_r1164758407)  and [comment ](https://github.com/dotnet/winforms/pull/8967#discussion_r1164758407)\r\n\r\nObsolete suppression needs to be revisited and mark appropriate public methods obsolete.","Url":"https://github.com/dotnet/winforms/issues/8984","RelatedDescription":"Open issue \"[Tracking] Remove suppressions against Obsolete methods\" (#8984)"},{"Id":"1665041034","IsPullRequest":true,"CreatedAt":"2023-04-12T23:27:32","Actor":"sharwell","Number":"8981","RawContent":null,"Title":"Automatically retry integration tests on failure","State":"closed","Body":"Re-runs just the integration test step up to one more time if a test failure occurs. Helps prevent flakiness in the system from impacting CI runs, but doesn't have any impact on developer scenarios.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8981)","Url":"https://github.com/dotnet/winforms/pull/8981","RelatedDescription":"Closed or merged PR \"Automatically retry integration tests on failure\" (#8981)"},{"Id":"1664865972","IsPullRequest":true,"CreatedAt":"2023-04-12T17:40:45","Actor":"dotnet-maestro[bot]","Number":"8980","RawContent":null,"Title":"[release/6.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:84f431dc-3375-4a46-af87-08d961c59698)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 84f431dc-3375-4a46-af87-08d961c59698\r\n- **Build**: 20230411.7\r\n- **Date Produced**: April 11, 2023 8:39:02 PM UTC\r\n- **Commit**: 7bca7a24dfc0eded1f3e364b4ff7bf1235b6eb26\r\n- **Branch**: refs/heads/release/6.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.23167.1 to 6.0.0-beta.23211.7][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 6.0.0-beta.23167.1 to 6.0.0-beta.23211.7][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.23167.1 to 6.0.0-beta.23211.7][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.23167.1 to 6.0.0-beta.23211.7][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.23167.1 to 6.0.0-beta.23211.7][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.23167.1 to 6.0.0-beta.23211.7][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/92c39a4f0b...7bca7a24df\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates sdk.version to 6.0.116\r\n  - Updates tools.dotnet to 6.0.116\r\n\r\n[marker]: <> (End:84f431dc-3375-4a46-af87-08d961c59698)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8980)","Url":"https://github.com/dotnet/winforms/pull/8980","RelatedDescription":"Closed or merged PR \"[release/6.0] Update dependencies from dotnet/arcade\" (#8980)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-04-20T03:30:32.9059942Z","RunDurationInMilliseconds":568}