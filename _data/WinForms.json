{"Data":{"GitHub":{"Issues":[{"Id":"678484996","IsPullRequest":true,"CreatedAt":"2020-08-13T15:21:24","Actor":"dotnet-maestro[bot]","Number":"3729","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200812.8\r\n- **Date Produced**: 8/13/2020 2:32 AM\r\n- **Commit**: 0db8ecbea291c09cfd84d7f33ea049f5c0cec94f\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **System.CodeDom**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **System.Diagnostics.EventLog**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **System.Diagnostics.PerformanceCounter**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **System.DirectoryServices**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **Microsoft.NETCore.App**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **Microsoft.NETCore.ILDAsm**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **Microsoft.NETCore.Targets**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **Microsoft.NETCore.App.Internal**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **Microsoft.NETCore.App.Ref**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **System.Drawing.Common**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **System.Text.Encodings.Web**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **System.Text.Json**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **System.Threading.AccessControl**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **System.Windows.Extensions**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **System.Security.Principal.Windows**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **System.IO.FileSystem.AccessControl**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **System.IO.Packaging**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **System.IO.Pipes.AccessControl**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **System.Reflection.MetadataLoadContext**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **System.Resources.Extensions**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **System.Security.AccessControl**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **System.Security.Cryptography.Pkcs**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **System.Security.Cryptography.ProtectedData**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **System.Security.Cryptography.Xml**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n  - **System.Security.Permissions**: from 5.0.0-rc.1.20411.5 to 5.0.0-rc.1.20412.8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3729)","Url":"https://github.com/dotnet/winforms/pull/3729","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3729)"},{"Id":"678469920","IsPullRequest":true,"CreatedAt":"2020-08-13T14:52:31","Actor":"dotnet-maestro[bot]","Number":"3728","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200811.8\r\n- **Date Produced**: 8/11/2020 7:07 PM\r\n- **Commit**: ecec08a0eebbd92bb9538e351d475582551d9092\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: from 5.0.0-beta.20407.3 to 5.0.0-beta.20411.8\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20407.3 to 5.0.0-beta.20411.8\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20407.3 to 5.0.0-beta.20411.8\r\n  - **Microsoft.DotNet.Helix.Sdk**: from 5.0.0-beta.20407.3 to 5.0.0-beta.20411.8\r\n  - **Microsoft.DotNet.RemoteExecutor**: from 5.0.0-beta.20407.3 to 5.0.0-beta.20411.8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3728)","Url":"https://github.com/dotnet/winforms/pull/3728","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3728)"},{"Id":"678233833","IsPullRequest":false,"CreatedAt":"2020-08-13T08:12:19","Actor":"weltkante","Number":"3727","RawContent":null,"Title":"Cannot build master after updating VS preview","State":"closed","Body":"**.NET Core Version:**\r\nmaster\r\n\r\n**Have you experienced this same bug with .NET Framework?:**\r\nno, not relevant\r\n\r\n**Problem description:**\r\n\r\nBuilding master fails because it does not find `C:/Program Files (x86)/Microsoft Visual Studio/2019/Preview/VC/Tools/MSVC/14.27.29109/bin/Hostx64/x86/cl.exe`\r\n\r\nIn particular the MSVC version `14.27.29109` is wrong, I updated the current preview and it now has a higher version.\r\n\r\n**Expected behavior:**\r\nBe more version tolerant than hardcoding a fixed version, people may want to go back and build older WinForms versions from the github history in the future to diagnose issues, so if you hardcode the \"now current\" compiler version this will be a major pain in the future when this version is no longer current.\r\n\r\n**Minimal repro:**\r\nUpdate VS to current preview and try to build master.\r\n","Url":"https://github.com/dotnet/winforms/issues/3727","RelatedDescription":"Closed issue \"Cannot build master after updating VS preview\" (#3727)"},{"Id":"678182907","IsPullRequest":true,"CreatedAt":"2020-08-13T06:16:15","Actor":"RussKie","Number":"3726","RawContent":null,"Title":"fix: RTB retrieve hidden text","State":"open","Body":"\r\n\r\nResolves #3399\r\nResolves #3632\r\n\r\nCo-authored-by: mav <martin.mueller@4voice.de>\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n## Proposed changes\r\n\r\nIn .NET 4.7 instead of using the old RichEdit2.0/3.0 a new version of RichEdit4.1 was used, which no longer allows to provide hidden text via the existing mechanics of EM_STREAMOUT.\r\nHowever in .NET Desktop allowed switching to the old RichEdit control via configuration quirks.\r\n\r\nIn .NET Core 3.0 we have deprecated the old control, which essentially\r\nbreaks certain scenarios.\r\n\r\nRestore the ability to read hidden text.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Customers relying on RichTextBox's behaviour to retrieve hidden text can now migrate to .NET 5.0\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual\r\n- Unit tests\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3726)","Url":"https://github.com/dotnet/winforms/pull/3726","RelatedDescription":"Open PR \"fix: RTB retrieve hidden text\" (#3726)"},{"Id":"677638024","IsPullRequest":true,"CreatedAt":"2020-08-13T03:04:31","Actor":"dotnet-maestro[bot]","Number":"3724","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200811.5\r\n- **Date Produced**: 8/12/2020 6:35 AM\r\n- **Commit**: 9f0826200b6b97b9ae1a0d184c938dc70bf55ea2\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **System.CodeDom**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **System.Diagnostics.EventLog**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **System.Diagnostics.PerformanceCounter**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **System.DirectoryServices**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **Microsoft.NETCore.App**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **Microsoft.NETCore.ILDAsm**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **Microsoft.NETCore.Targets**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **Microsoft.NETCore.App.Internal**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **Microsoft.NETCore.App.Ref**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **System.Drawing.Common**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **System.Text.Encodings.Web**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **System.Text.Json**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **System.Threading.AccessControl**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **System.Windows.Extensions**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **System.Security.Principal.Windows**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **System.IO.FileSystem.AccessControl**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **System.IO.Packaging**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **System.IO.Pipes.AccessControl**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **System.Reflection.MetadataLoadContext**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **System.Resources.Extensions**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **System.Security.AccessControl**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **System.Security.Cryptography.Pkcs**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **System.Security.Cryptography.ProtectedData**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **System.Security.Cryptography.Xml**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n  - **System.Security.Permissions**: from 5.0.0-rc.1.20410.10 to 5.0.0-rc.1.20411.5\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3724)","Url":"https://github.com/dotnet/winforms/pull/3724","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3724)"},{"Id":"677627875","IsPullRequest":false,"CreatedAt":"2020-08-12T11:55:05","Actor":"noseratio","Number":"3723","RawContent":null,"Title":"A blank .NET Core 3.1 WinForms app, published as self-contained and trimmed, still bundles all WPF DLLs","State":"open","Body":"* .NET Core Version: \r\n\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.401\r\n Commit:    39d17847db\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19041\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.401\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.7\r\n  Commit:  fcfdef8d6b\r\n```\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nN/A\r\n\r\n**Problem description:**\r\nA blank 3.1 WinForms app, published as self-contained and trimmed, still bundles all WPF assemblies, which adds at least extra 12MB. \r\n\r\n**Expected behavior:**\r\nWPF assemblies (`Presentation*.dll` etc) should not be included if the are not used. \r\n\r\n**Minimal repro:**\r\n\r\n```\r\ndotnet new winforms \r\ndotnet publish -r win-x64 -c Release --self-contained true /p:PublishTrimmed=true \r\ncd .\\MyFormsAppCore\\bin\\Release\\netcoreapp3.1\\win-x64\\publish \r\ndir Presentation*.dll\r\n```\r\n\r\nNote all `Presentation*.dll`\r\n","Url":"https://github.com/dotnet/winforms/issues/3723","RelatedDescription":"Open issue \"A blank .NET Core 3.1 WinForms app, published as self-contained and trimmed, still bundles all WPF DLLs\" (#3723)"},{"Id":"677414853","IsPullRequest":true,"CreatedAt":"2020-08-12T07:15:17","Actor":"gpetrou","Number":"3722","RawContent":null,"Title":"Update FxCopAnalyzers","State":"closed","Body":"## Proposed changes\r\n\r\n- Update FxCopAnalyzers.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3722)","Url":"https://github.com/dotnet/winforms/pull/3722","RelatedDescription":"Closed or merged PR \"Update FxCopAnalyzers\" (#3722)"},{"Id":"674428037","IsPullRequest":true,"CreatedAt":"2020-08-12T03:46:59","Actor":"KlausLoeffelmann","Number":"3703","RawContent":null,"Title":"Update Visual Basic Test-Template-Project","State":"closed","Body":"The VbTemplate project is a minimal Visual Basic project which enables the Visual Basic Application Framework.\r\nIt is our test project, from which we want to derive the VB Application Framework Project template.\r\n\r\nThis PR addresses the following issues:\r\n\r\n* Exclude this project from Arcade build settings, so Arcade doesn't interfere with settings like `langversion`.\r\n* Restrict the project settings to the most necessary and work with the default settings where possible.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3703)","Url":"https://github.com/dotnet/winforms/pull/3703","RelatedDescription":"Closed or merged PR \"Update Visual Basic Test-Template-Project\" (#3703)"},{"Id":"675828228","IsPullRequest":true,"CreatedAt":"2020-08-11T22:51:35","Actor":"JeremyKuhne","Number":"3711","RawContent":null,"Title":"Add Span overloads in TextRenderer","State":"closed","Body":"This adds the span overloads per #3651. It also obsoletes `TextFormatFlags.ModifyString` and fully blocks it in the span overloads. We'll add a safe API for getting output strings in a future version.\r\n\r\nResolves #3651\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3711)","Url":"https://github.com/dotnet/winforms/pull/3711","RelatedDescription":"Closed or merged PR \"Add Span overloads in TextRenderer\" (#3711)"},{"Id":"677214531","IsPullRequest":false,"CreatedAt":"2020-08-11T21:38:12","Actor":"vsfeedback","Number":"3721","RawContent":null,"Title":"Ability to set the background colour of a TabControl.","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/idea/355169/ability-to-set-the-background-colour-of-a-tabcontr.html)._\n\n---\n<p>I am currently developing a Windows Application with a white background colour scheme and want to use a TabControl. While I can set the background colour of each individual TabPage, there does not appear to be any means of setting the background colour of the TabControl, so I am always left with a grey background strip along the top of the control where the tabs stick up.</p>\n\n---\n### Original Comments\n\n#### Fiona Niu[MSFT] on 10/12/2018, 01:29 AM: \n\n<p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.&nbsp;You will hear from us in about two weeks on our next steps. </p>","Url":"https://github.com/dotnet/winforms/issues/3721","RelatedDescription":"Open issue \"Ability to set the background colour of a TabControl.\" (#3721)"},{"Id":"676830062","IsPullRequest":true,"CreatedAt":"2020-08-11T12:43:00","Actor":"dotnet-maestro[bot]","Number":"3720","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200810.10\r\n- **Date Produced**: 8/11/2020 9:30 AM\r\n- **Commit**: 0d6d73a6439e394e3ea81ae60b286ecc1ba41691\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **System.CodeDom**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **System.Diagnostics.EventLog**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **System.Diagnostics.PerformanceCounter**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **System.DirectoryServices**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **Microsoft.NETCore.App**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **Microsoft.NETCore.ILDAsm**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **Microsoft.NETCore.Targets**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **Microsoft.NETCore.App.Internal**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **Microsoft.NETCore.App.Ref**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **System.Drawing.Common**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **System.Text.Encodings.Web**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **System.Text.Json**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **System.Threading.AccessControl**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **System.Windows.Extensions**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **System.Security.Principal.Windows**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **System.IO.FileSystem.AccessControl**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **System.IO.Packaging**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **System.IO.Pipes.AccessControl**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **System.Reflection.MetadataLoadContext**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **System.Resources.Extensions**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **System.Security.AccessControl**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **System.Security.Cryptography.Pkcs**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **System.Security.Cryptography.ProtectedData**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **System.Security.Cryptography.Xml**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n  - **System.Security.Permissions**: from 5.0.0-rc.1.20409.3 to 5.0.0-rc.1.20410.10\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3720)","Url":"https://github.com/dotnet/winforms/pull/3720","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3720)"},{"Id":"676820455","IsPullRequest":true,"CreatedAt":"2020-08-11T12:27:26","Actor":"dotnet-maestro[bot]","Number":"3719","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200807.3\r\n- **Date Produced**: 8/7/2020 7:54 PM\r\n- **Commit**: ea8f37e8982dc22022b33c5e151081ad04d923a6\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: from 5.0.0-beta.20403.5 to 5.0.0-beta.20407.3\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20403.5 to 5.0.0-beta.20407.3\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20403.5 to 5.0.0-beta.20407.3\r\n  - **Microsoft.DotNet.Helix.Sdk**: from 5.0.0-beta.20403.5 to 5.0.0-beta.20407.3\r\n  - **Microsoft.DotNet.RemoteExecutor**: from 5.0.0-beta.20403.5 to 5.0.0-beta.20407.3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3719)","Url":"https://github.com/dotnet/winforms/pull/3719","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3719)"},{"Id":"675688603","IsPullRequest":true,"CreatedAt":"2020-08-11T05:50:12","Actor":"dotnet-maestro[bot]","Number":"3709","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200809.3\r\n- **Date Produced**: 8/10/2020 4:35 AM\r\n- **Commit**: ff01831094128fb9df0be61fd0e352bbcaeddf02\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **System.CodeDom**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **System.Diagnostics.EventLog**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **System.Diagnostics.PerformanceCounter**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **System.DirectoryServices**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **Microsoft.NETCore.App**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **Microsoft.NETCore.ILDAsm**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **Microsoft.NETCore.Targets**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **Microsoft.NETCore.App.Internal**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **Microsoft.NETCore.App.Ref**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **System.Drawing.Common**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **System.Text.Encodings.Web**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **System.Text.Json**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **System.Threading.AccessControl**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **System.Windows.Extensions**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **System.Security.Principal.Windows**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **System.IO.FileSystem.AccessControl**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **System.IO.Packaging**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **System.IO.Pipes.AccessControl**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **System.Reflection.MetadataLoadContext**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **System.Resources.Extensions**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **System.Security.AccessControl**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **System.Security.Cryptography.Pkcs**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **System.Security.Cryptography.ProtectedData**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **System.Security.Cryptography.Xml**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n  - **System.Security.Permissions**: from 5.0.0-rc.1.20406.11 to 5.0.0-rc.1.20409.3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3709)\r\n","Url":"https://github.com/dotnet/winforms/pull/3709","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3709)"},{"Id":"676043134","IsPullRequest":false,"CreatedAt":"2020-08-11T01:56:00","Actor":"tomrus88","Number":"3714","RawContent":null,"Title":"Adding Windows Form to Class Library project doesn't work","State":"closed","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: 5.0 Preview 7\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: No\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\nI'm unable to add Windows Form to Class Library project (.NET 5.0), it is missing in Add -> New Item VS dialog.\r\n\r\nAnd even if I do workaround, for example add Windows Form to Windows Form project and then drag&drop it to ClassLibrary project, in this case i'm unable to use Windows Form designer (it shows an error: Microsoft Visual Studio - Timed out waiting for the design tools server process launch to complete) and form added this way doesn't even compile...\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n\r\n**Expected behavior:**\r\nI should be able to add Windows Form to class library project using VS and be able to use Windows Forms designer for editing Windows Forms in Class Library projects, just like it works with .NET Framework projects.\r\n\r\n**Minimal repro:**\r\n[WindowsFormsApp8.zip](https://github.com/dotnet/winforms/files/5050353/WindowsFormsApp8.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/3714","RelatedDescription":"Closed issue \"Adding Windows Form to Class Library project doesn't work\" (#3714)"},{"Id":"676460859","IsPullRequest":true,"CreatedAt":"2020-08-11T01:06:49","Actor":"KlausLoeffelmann","Number":"3718","RawContent":null,"Title":"Update Visual Basic Project Template (CLI) for 5.0 Preview 8","State":"closed","Body":"Visual Basic will be having a new WinForms project template which works based on the VB Application Framework for Visual Studio 16.9, while the template for CLI should be in the same style as the CS template for Window Forms.\r\n\r\nThe new VS template for VB WinForms/Application Framework relies on a code generation tool which is only available in VS, so having this template for the CLI version of VB would not work.\r\n\r\nThe current VB WinForms CLI (`dotnet new winforms --language vb`) template however does _only_ invoke the Form it created as a start object. It _does not_ setup other necessary settings, like enabling Visual Styles and setting the correct HighDpiMode, but it should.\r\n\r\nThis PR corrects this.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3718)","Url":"https://github.com/dotnet/winforms/pull/3718","RelatedDescription":"Closed or merged PR \"Update Visual Basic Project Template (CLI) for 5.0 Preview 8\" (#3718)"},{"Id":"676428116","IsPullRequest":true,"CreatedAt":"2020-08-10T21:29:08","Actor":"vladimir-krestov","Number":"3717","RawContent":null,"Title":"[Tests] Adding Skip attributes for several tests with unobvious fail reasons","State":"open","Body":"Related Issue: #3716\r\nThe tests fail in 9d7af3d91733bf95eca155a79f8d34abd23160be commit (PR #2701)\r\n\r\n## Proposed changes\r\n\r\n- Add Skip attributes to avoid issues in PR #2701. The fix skips tests that have unobvious fail reasons in 9d7af3d91733bf95eca155a79f8d34abd23160be (PR #2701)\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- None\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Unit testing\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- Microsoft Windows [Version 10.0.18363.959]\r\n- .Net 5.0 version: 5.0.100-rc.1.20378.7\r\n- Commit 9d7af3d91733bf95eca155a79f8d34abd23160be\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3717)","Url":"https://github.com/dotnet/winforms/pull/3717","RelatedDescription":"Open PR \"[Tests] Adding Skip attributes for several tests with unobvious fail reasons\" (#3717)"},{"Id":"676399332","IsPullRequest":false,"CreatedAt":"2020-08-10T20:33:36","Actor":"vladimir-krestov","Number":"3716","RawContent":null,"Title":"[Tests] There are unobvious fail reasons for several tests for a specific commit","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: 5.0\r\n* Related to PR #2701\r\n\r\n**Problem description:**\r\n- The following tests have an unexpected result and unobvious fail reasons for 9d7af3d91733bf95eca155a79f8d34abd23160be commit:\r\n1. TabPageCollection_Remove_InvokeValueWithoutHandleOwnerWithHandle_Success\r\n2. TextBoxBase_WndProc_InvokeSetFontWithoutHandle_ReturnsExpected\r\n3. MonthCalendar_SingleMonthSize_GetWithHandle_ReturnsExpected\r\n4. RichTextBox_SelectionFont_SetWithHandle_GetReturnsExpected\r\n5. RichTextBox_SelectionFont_Set_GetReturnsExpected\r\n6. RichTextBox_Font_GetCharFormat_Success\r\n7. TextBoxBaseUiaTextProvider_GetLineIndex_ReturnsCorrectValue\r\n\r\n**Expected behavior:**\r\n- All tests pass\r\n\r\n**Minimal repro:**\r\n- Run the tests in multithreaded mode using a console (9d7af3d91733bf95eca155a79f8d34abd23160be)","Url":"https://github.com/dotnet/winforms/issues/3716","RelatedDescription":"Open issue \"[Tests] There are unobvious fail reasons for several tests for a specific commit\" (#3716)"},{"Id":"676164243","IsPullRequest":false,"CreatedAt":"2020-08-10T14:06:49","Actor":"zanchey","Number":"3715","RawContent":null,"Title":"WindowsFormsApplicationBase.IsSingleInstance applications are global on a machine, not per user","State":"open","Body":"* .NET Core Version: \r\nv5.0.0-preview.7\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\nThe implementation of `WindowsFormsApplicationBase.IsSingleInstance` from #3200 uses a named pipe as its synchronization and communication tool, but named pipes are in a global namespace (at least on Windows) and thus any assembly can only be running once on any given machine.\r\n\r\n**Expected behavior:**\r\nAble to start this executable in multiple user accounts (under terminal services or fast user switching) at once.\r\n\r\n**Actual behaviour:**\r\nStarting the executable in a second user account produces an uncaught `CantStartSingleInstanceException` exception.\r\n\r\nStrictly speaking this is a potential denial of service issue; by using a named pipe with a predictable name, users can prevent others on the same machine from ever starting the application. Adding the session identifier to the pipe name is enough to make the named pipe session-local, but not enough to prevent others from creating a pipe with the same name.\r\n\r\nI don't know what other options there are; mutexes and event handles have a session namespace, but don't allow for data transfer. Local TCP runs into trouble with firewalls (as the old Remoting implementation did). Cursory reading shows that named memory mappings are Windows only, and require marshalling/synchronisation to a much greater degree, though perhaps a memory mapping containing only the randomly-generated named pipe name is the way to go (like [WCF](https://rodneyviana.com/named-pipes-in-wcf-are-named-but-not-by-you-and-how-to-find-the-actual-windows-object-name/)).\r\n\r\n**Minimal repro:**\r\nBorrowed from https://stackoverflow.com/a/19326/125549:\r\n\r\n```C#\r\npublic class SingleInstanceApplication : System.Windows.Application\r\n{\r\n    protected override void OnStartup(System.Windows.StartupEventArgs e)\r\n    {\r\n        // Call the OnStartup event on our base class\r\n        base.OnStartup(e);\r\n\r\n        // Create our MainWindow and show it\r\n        MainWindow window = new MainWindow();\r\n        window.Show();\r\n    }\r\n\r\n    public void Activate()\r\n    {\r\n        // Reactivate the main window\r\n        MainWindow.Activate();\r\n    }\r\n}\r\n\r\npublic class SingleInstanceManager : Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase\r\n{\r\n    private SingleInstanceApplication _application;\r\n    private System.Collections.ObjectModel.ReadOnlyCollection<string> _commandLine;\r\n\r\n    public SingleInstanceManager()\r\n    {\r\n        IsSingleInstance = true;\r\n    }\r\n\r\n    protected override bool OnStartup(Microsoft.VisualBasic.ApplicationServices.StartupEventArgs eventArgs)\r\n    {\r\n        // First time _application is launched\r\n        _commandLine = eventArgs.CommandLine;\r\n        _application = new SingleInstanceApplication();\r\n        _application.Run();\r\n        return false;\r\n    }\r\n\r\n    protected override void OnStartupNextInstance(StartupNextInstanceEventArgs eventArgs)\r\n    {\r\n        // Subsequent launches\r\n        base.OnStartupNextInstance(eventArgs);\r\n        _commandLine = eventArgs.CommandLine;\r\n        _application.Activate();\r\n    }\r\n}\r\n\r\npublic class EntryPoint\r\n{\r\n    [STAThread]\r\n    public static void Main(string[] args)\r\n    {\r\n        SingleInstanceManager manager = new SingleInstanceManager();\r\n        manager.Run(args);\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/winforms/issues/3715","RelatedDescription":"Open issue \"WindowsFormsApplicationBase.IsSingleInstance applications are global on a machine, not per user\" (#3715)"},{"Id":"675930498","IsPullRequest":false,"CreatedAt":"2020-08-10T07:31:02","Actor":"SergeySmirnov-Akvelon","Number":"3713","RawContent":null,"Title":"[Servicing 3.1] [Accessibility] DefaultAction is empty for Combobox when \"LegacyIAccessible\" pattern is supported and Accessible Role is changed.","State":"open","Body":".NET Core Version: 3.1\r\nHave you experienced this same bug with .NET Framework?: No\r\n\r\n**Problem description:**\r\nThe DefaultAction is empty for Combobox when role is default and \"LegacyIAccessible\" pattern is supported.\r\nThe DefaultAction stays empty if change the Role property value and \"LegacyIAccessible\" pattern is supported.\r\n\r\n**Expected behavior:**\r\nThe DefaultAction should be \"Expand\" for Combobox when role is default and \"LegacyIAccessible\" pattern is supported.\r\nThe DefaultAction property should be changed when Accessible Role is changed.\r\n\r\n**Minimal repro:**\r\n1. Add supporting of \"LegacyIAccessible\" pattern for Combobox\r\n2. Create a .Net 5.0 app\r\n3. Add a Combobox to the app form\r\n4. Run the app and check \"DefaultAction\" property using Inspect","Url":"https://github.com/dotnet/winforms/issues/3713","RelatedDescription":"Open issue \"[Servicing 3.1] [Accessibility] DefaultAction is empty for Combobox when \"LegacyIAccessible\" pattern is supported and Accessible Role is changed.\" (#3713)"},{"Id":"675925652","IsPullRequest":false,"CreatedAt":"2020-08-10T07:20:31","Actor":"SergeySmirnov-Akvelon","Number":"3712","RawContent":null,"Title":"[Accessibility] DefaultAction is empty for Combobox when \"LegacyIAccessible\" pattern is supported and Accessible Role is changed.","State":"open","Body":".NET Core Version: 5.0\r\nHave you experienced this same bug with .NET Framework?: No\r\n\r\n**Problem description:**\r\nThe DefaultAction is empty for Combobox when role is default and \"LegacyIAccessible\" pattern is supported.\r\nThe DefaultAction stays empty if change the Role property value and \"LegacyIAccessible\" pattern is supported.\r\n\r\n**Expected behavior:**\r\nThe DefaultAction should be \"Expand\" for Combobox when role is default and \"LegacyIAccessible\" pattern is supported.\r\nThe DefaultAction property should be changed when Accessible Role is changed.\r\n\r\n**Minimal repro:**\r\n1. Add supporting of \"LegacyIAccessible\" pattern for Combobox\r\n2. Create a .Net 5.0 app\r\n3. Add a Combobox to the app form\r\n4. Run the app and check \"DefaultAction\" property using Inspect","Url":"https://github.com/dotnet/winforms/issues/3712","RelatedDescription":"Open issue \"[Accessibility] DefaultAction is empty for Combobox when \"LegacyIAccessible\" pattern is supported and Accessible Role is changed.\" (#3712)"},{"Id":"675827980","IsPullRequest":false,"CreatedAt":"2020-08-10T02:36:05","Actor":"JeremyKuhne","Number":"3710","RawContent":null,"Title":"API Proposal: Add safe overloads to TextRenderer to get output strings.","State":"open","Body":"## Proposal\r\n\r\nWe need to add new overloads that allow getting out the actual rendered string when using ellipses options (`TextFormatFlags.PathEllipsis` and `TextFormatFlags.WordEllipsis`). This is currently done with `TextFormatFlags.ModifyString`, which mutates the input `string`. We block this option in the newer span overloads and have obsoleted it.\r\n\r\nThis is a follow-up to #3651.\r\n\r\n``` C#\r\nnamespace System.Windows.Forms\r\n{\r\n    public sealed class TextRenderer\r\n    {\r\n        // Existing flags APIs:\r\n        public static void DrawText(IDeviceContext dc, string text, Font font, Point pt, Color foreColor, Color backColor, TextFormatFlags flags);\r\n        public static void DrawText(IDeviceContext dc, string text, Font font, Point pt, Color foreColor, TextFormatFlags flags);\r\n        public static void DrawText(IDeviceContext dc, string text, Font font, Rectangle bounds, Color foreColor, Color backColor, TextFormatFlags flags);\r\n        public static void DrawText(IDeviceContext dc, string text, Font font, Rectangle bounds, Color foreColor, TextFormatFlags flags);\r\n        public static Size MeasureText(IDeviceContext dc, string text, Font font, Size proposedSize, TextFormatFlags flags);\r\n        public static Size MeasureText(string text, Font font, Size proposedSize, TextFormatFlags flags);\r\n        public static void DrawText(IDeviceContext dc, ReadOnlySpan<char> text, Font font, Point pt, Color foreColor, Color backColor, TextFormatFlags flags);\r\n        public static void DrawText(IDeviceContext dc, ReadOnlySpan<char> text, Font font, Point pt, Color foreColor, TextFormatFlags flags);\r\n        public static void DrawText(IDeviceContext dc, ReadOnlySpan<char> text, Font font, Rectangle bounds, Color foreColor, Color backColor, TextFormatFlags flags);\r\n        public static void DrawText(IDeviceContext dc, ReadOnlySpan<char> text, Font font, Rectangle bounds, Color foreColor, TextFormatFlags flags);\r\n        public static Size MeasureText(IDeviceContext dc, ReadOnlySpan<char> text, Font font, Size proposedSize, TextFormatFlags flags);\r\n        public static Size MeasureText(ReadOnlySpan<char> text, Font font, Size proposedSize, TextFormatFlags flags);\r\n\r\n        // Proposed\r\n        public static void DrawText(IDeviceContext dc, string text, Font font, Point pt, Color foreColor, Color backColor, TextFormatFlags flags, out string outputText);\r\n        public static void DrawText(IDeviceContext dc, ReadOnlySpan<char> text, Font font, Point pt, Color foreColor, Color backColor, TextFormatFlags flags, Span<char> outputTextBuffer, out int outputTextLength);\r\n        public static void DrawText(IDeviceContext dc, string text, Font font, Rectangle bounds, Color foreColor, Color backColor, TextFormatFlags flags, out string outputText);\r\n        public static void DrawText(IDeviceContext dc, ReadOnlySpan<char> text, Font font, Rectangle bounds, Color foreColor, Color backColor, TextFormatFlags flags, Span<char> outputTextBuffer, out int outputTextLength);\r\n        public static Size MeasureText(IDeviceContext dc, string text, Font font, Size proposedSize, TextFormatFlags flags, out string outputText);\r\n        public static Size MeasureText(IDeviceContext dc, ReadOnlySpan<char> text, Font font, Size proposedSize, TextFormatFlags flags, Span<char> outputTextBuffer, out int outputTextLength);\r\n        public static Size MeasureText(string text, Font font, Size proposedSize, TextFormatFlags flags, out string outputText);\r\n        public static Size MeasureText(ReadOnlySpan<char> text, Font font, Size proposedSize, TextFormatFlags flags, Span<char> outputTextBuffer, out int outputTextLength);\r\n    }\r\n}\r\n```\r\n\r\n## Justification\r\n\r\nIt is still a valid scenario to want to know what Windows actually outputs. Providing these overloads will let us fully block the mutation of the input strings, which is extremely dangerous.\r\n\r\n## Implementation Details\r\n\r\nThese APIs will presume you want the output string _without_ requiring the obsoleted flag. When the ellipses flags are set we will get the actual output string from Windows and either create a new string or copy the output into the `Span` buffer provided and return the length. In all other scenarios we will pass back the input.\r\n\r\nThe `Span` overloads will require that the passed in `Span<char>` is at least as long as the input `ReadOnlySpan<char>`. If it is not, the API will throw.\r\n\r\nWe'll skip the overloads for just `foreColor` and document that `Color.Empty` is required for a transparent background as these APIs are not as common.\r\n\r\nWe'll match additional throwing behavior of the original APIs. The original APIs did not throw for null or empty strings, they just no-op.","Url":"https://github.com/dotnet/winforms/issues/3710","RelatedDescription":"Open issue \"API Proposal: Add safe overloads to TextRenderer to get output strings.\" (#3710)"},{"Id":"674971708","IsPullRequest":true,"CreatedAt":"2020-08-07T12:52:29","Actor":"dotnet-maestro[bot]","Number":"3708","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200806.11\r\n- **Date Produced**: 8/7/2020 3:29 AM\r\n- **Commit**: 9b2f548c3b0da290bc57f1a0460cd0c5c408095e\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.CodeDom**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Diagnostics.EventLog**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Diagnostics.PerformanceCounter**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.DirectoryServices**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **Microsoft.NETCore.App**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **Microsoft.NETCore.ILDAsm**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **Microsoft.NETCore.Targets**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **Microsoft.NETCore.App.Internal**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **Microsoft.NETCore.App.Ref**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Drawing.Common**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Text.Encodings.Web**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Text.Json**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Threading.AccessControl**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Windows.Extensions**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Security.Principal.Windows**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.IO.FileSystem.AccessControl**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.IO.Packaging**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.IO.Pipes.AccessControl**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Reflection.MetadataLoadContext**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Resources.Extensions**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Security.AccessControl**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Security.Cryptography.Pkcs**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Security.Cryptography.ProtectedData**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Security.Cryptography.Xml**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Security.Permissions**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3708)","Url":"https://github.com/dotnet/winforms/pull/3708","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3708)"},{"Id":"674890073","IsPullRequest":true,"CreatedAt":"2020-08-07T09:30:31","Actor":"Zheng-Li01","Number":"3707","RawContent":null,"Title":"Modify the AccessibilityTests App to fix the Accessibility issues","State":"open","Body":"Fixes # \r\n- Modify the AccessibilityTests App to fix the Accessibility issues:[1156469](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1156469);[1159875](https://dev.azure.com/devdiv/DevDiv/_workitems/edit/1159875);[1160081](https://dev.azure.com/devdiv/DevDiv/_workitems/edit/1160081)\r\n \r\n- Add the test scenarios to test the changes from [3549](https://github.com/dotnet/winforms/issues/3549).\r\n\r\n\r\n## Proposed changes\r\n\r\n- Setting DGVs StandardTab property as true in DataControls.cs file to fix the issue:1156469.\r\n- Change the default AccessibleName for ToolStrip_ComboBox item in ToolStripContainer.cs file to fix the issue 1159875.\r\n- Add the code \"this.richTextBox1.BackColor = System.Drawing.SystemColors.Window;\" in the CommonControl2.Designer.cs fileBinding_Data.cs file to fix the issue:1160081.\r\n- Add the test scenarios to test the changes from [3549](https://github.com/dotnet/winforms/issues/3549) in the Binding_Data page.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Fixed the Accessibility issue: [1156469](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1156469); [1159875](https://dev.azure.com/devdiv/DevDiv/_workitems/edit/1159875);[1160081](https://dev.azure.com/devdiv/DevDiv/_workitems/edit/1160081)\r\n- The CAIAcc testers can test changes around the changes from [3549](https://github.com/dotnet/winforms/issues/3549).\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n-Low\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual Testing around changes.\r\n","Url":"https://github.com/dotnet/winforms/pull/3707","RelatedDescription":"Open PR \"Modify the AccessibilityTests App to fix the Accessibility issues\" (#3707)"},{"Id":"674869711","IsPullRequest":false,"CreatedAt":"2020-08-07T08:55:46","Actor":"Zheng-Li01","Number":"3706","RawContent":null,"Title":"ListBox.DisplayMember property should be used as an accessible name for combobox items","State":"open","Body":"* .NET Core Version: \r\n.NET SDK 5.0.100.rc1.20405.13\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n* More info:\r\n1. The issue also can reproduce .NET SDK 3.1.\r\n2. Tested ListBox with items from non-data binding and data binding, the Name of list items are displayed correctly. \r\n\r\n**Problem description:**\r\nAT user does not know what items are available for selection\r\n\r\nMinimal repro:\r\n1. Open the attached project.\r\n[Project.zip](https://github.com/dotnet/winforms/files/5040304/Project.zip)\r\n2. Build & Run the application under the inspect tool.\r\n\r\n**Expected behavior:**\r\nAccessible tree should show the same strings as the drop down shows\r\n![Framework](https://user-images.githubusercontent.com/38325459/89628256-9e5d5200-d8ce-11ea-8eca-049d8ce97cd2.PNG)\r\n\r\n**Actual behavior:**\r\ntype name is used as accessible name for the ListBox list items, because a object.ToString is called:\r\n![Core](https://user-images.githubusercontent.com/38325459/89628279-a74e2380-d8ce-11ea-9870-2454456d5049.PNG)\r\n","Url":"https://github.com/dotnet/winforms/issues/3706","RelatedDescription":"Open issue \"ListBox.DisplayMember property should be used as an accessible name for combobox items\" (#3706)"},{"Id":"674814868","IsPullRequest":true,"CreatedAt":"2020-08-07T07:14:03","Actor":"KlausLoeffelmann","Number":"3705","RawContent":null,"Title":"Add HighDpiMode property and handling to WindowsFormsApplicationBase.","State":"open","Body":"For the AppDesigner for Apps written in Visual Basic based on WinForm's Application Framework, in CoreFx we need to extend the UI by an option to let the user pick the `HighDpiMode` (amongst others like `IsSingleInstance` or `EnableVisualStyles`). These settings in the VB AppDesigner (the Project Properties of a VB WinForms App) are saved to a file called _Application.MyApp_. \r\n\r\n![image](https://user-images.githubusercontent.com/9663150/89619370-b5566280-d842-11ea-875f-2250c9a0c77c.png)\r\n\r\nThis file again triggers the MyApplicationCodeGenerator which generated the partial class `Application.Designer.vb`. We need to change that code generator tool in that it generates the setting for the `HighDpiMode` into code. \r\n\r\n![image](https://user-images.githubusercontent.com/9663150/89619328-a2439280-d842-11ea-8ebe-1d305bd94dad.png)\r\n\r\nSince properties of the Application class are not written directly, but rather accessed over the inherited `WindowsFormsApplicationBase` which `MyApplication` is based on, we need to expose a `HighDpiMode` property in WindowsFormsApplicationBase. That's what this PR actually does.\r\n\r\n**NOTE:** There is also a lot of necessary cleaning up going on in this PR. \r\nSo note if you review, that the relevant changes are minor and in lines 396ff and 634ff.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\nThis PR is part of the Visual Basic template work which should go in with 16.8.\r\n\r\n## Regression? \r\n\r\nNo\r\n\r\n## Risk\r\n\r\nLow.\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3705)","Url":"https://github.com/dotnet/winforms/pull/3705","RelatedDescription":"Open PR \"Add HighDpiMode property and handling to WindowsFormsApplicationBase.\" (#3705)"},{"Id":"674042923","IsPullRequest":true,"CreatedAt":"2020-08-07T05:37:20","Actor":"gpetrou","Number":"3700","RawContent":null,"Title":"Enable nullability in VisualStyleInformation","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in VisualStyleInformation.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3700)","Url":"https://github.com/dotnet/winforms/pull/3700","RelatedDescription":"Closed or merged PR \"Enable nullability in VisualStyleInformation\" (#3700)"},{"Id":"674259523","IsPullRequest":true,"CreatedAt":"2020-08-07T00:58:20","Actor":"dotnet-maestro[bot]","Number":"3701","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200803.5\r\n- **Date Produced**: 8/3/2020 9:14 PM\r\n- **Commit**: 7385e2722b9fa517314aa5db1fa598a8d417b3c7\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: from 5.0.0-beta.20374.1 to 5.0.0-beta.20403.5\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20374.1 to 5.0.0-beta.20403.5\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20374.1 to 5.0.0-beta.20403.5\r\n  - **Microsoft.DotNet.Helix.Sdk**: from 5.0.0-beta.20374.1 to 5.0.0-beta.20403.5\r\n  - **Microsoft.DotNet.RemoteExecutor**: from 5.0.0-beta.20374.1 to 5.0.0-beta.20403.5\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3701)","Url":"https://github.com/dotnet/winforms/pull/3701","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3701)"},{"Id":"673811278","IsPullRequest":true,"CreatedAt":"2020-08-06T19:28:07","Actor":"wli3","Number":"3698","RawContent":null,"Title":"Update to net5.0 template with backcompact","State":"closed","Body":"Port change to preview 8 https://github.com/dotnet/winforms/pull/3690\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3698)","Url":"https://github.com/dotnet/winforms/pull/3698","RelatedDescription":"Closed or merged PR \"Update to net5.0 template with backcompact\" (#3698)"},{"Id":"674268401","IsPullRequest":true,"CreatedAt":"2020-08-06T12:42:55","Actor":"dotnet-maestro[bot]","Number":"3702","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200805.17\r\n- **Date Produced**: 8/6/2020 9:02 AM\r\n- **Commit**: 0f7370baa68c5809f93095cbce9bf614f44cc731\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.CodeDom**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Diagnostics.EventLog**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Diagnostics.PerformanceCounter**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.DirectoryServices**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **Microsoft.NETCore.App**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **Microsoft.NETCore.ILDAsm**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **Microsoft.NETCore.Targets**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **Microsoft.NETCore.App.Internal**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **Microsoft.NETCore.App.Ref**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Drawing.Common**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Text.Encodings.Web**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Text.Json**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Threading.AccessControl**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Windows.Extensions**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Security.Principal.Windows**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.IO.FileSystem.AccessControl**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.IO.Packaging**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.IO.Pipes.AccessControl**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Reflection.MetadataLoadContext**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Resources.Extensions**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Security.AccessControl**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Security.Cryptography.Pkcs**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Security.Cryptography.ProtectedData**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Security.Cryptography.Xml**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Security.Permissions**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3702)","Url":"https://github.com/dotnet/winforms/pull/3702","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3702)"},{"Id":"673957072","IsPullRequest":false,"CreatedAt":"2020-08-06T01:58:31","Actor":"Vino-Wang","Number":"3699","RawContent":null,"Title":"There are 4 extra (null) pane in Inspect after right clicking on the form icon","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n5.0.100-rc.1.1.20405.11\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n<!-- Yes / No -->\r\n\r\n**More info:**\r\nThis is not a regression issue.\r\n\r\n**Problem description:**\r\nThere are 4 extra (null) pane in Inspect after right clicking on the form icon.\r\n![ExtraPane](https://user-images.githubusercontent.com/18568603/89481805-1e9a8f00-d7cb-11ea-8eff-06eac760a00f.png)\r\n![ExtraItem](https://user-images.githubusercontent.com/18568603/89481824-2c501480-d7cb-11ea-9e5f-51c2bd45908b.gif)\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n**Expected behavior:**\r\nThere should have no extra (null) panel.\r\n\r\n**Minimal repro:**\r\n1.\tCreate a winforms core project.\r\n2.\tBuild and run.\r\n3.\tLaunch the Inspect tool and right click on the form icon, observe the left items in Inspect.\r\nOr \r\n1.\tRun the attached project. [CustomAccessibleNameForForm.zip](https://github.com/dotnet/winforms/files/5032104/CustomAccessibleNameForForm.zip)\r\n2.\tBuild and run.\r\n3.\tLaunch the Inspect tool and right click on the form icon, observe the left items in Inspect.","Url":"https://github.com/dotnet/winforms/issues/3699","RelatedDescription":"Open issue \"There are 4 extra (null) pane in Inspect after right clicking on the form icon\" (#3699)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-08-14T05:30:55.5468014Z","RunDurationInMilliseconds":693}