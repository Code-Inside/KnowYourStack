{"Data":{"GitHub":{"Issues":[{"Id":"2849615682","IsPullRequest":false,"CreatedAt":"2025-02-15T02:09:23","Actor":"GrabYourPitchforks","Number":"12933","RawContent":null,"Title":"Illegal use of Unsafe.Unbox<T> in PropertyStore.cs","State":"closed","Body":"(Found via static analysis.)\n\nThe use of `Unsafe.Unbox<T>` in two lines\n\nhttps://github.com/dotnet/winforms/blob/7210b61063d105d1cc2642682955aed6c03fef43/src/System.Windows.Forms/src/System/Windows/Forms/PropertyStore.cs#L217-L218\n\nis not a legal operation and could destabilize the runtime. Please do not assign values to the `T&` returned by `Unsafe.Unbox<T>`. See the _Remarks_ section of https://learn.microsoft.com/dotnet/api/system.runtime.compilerservices.unsafe.unbox for more information.","Url":"https://github.com/dotnet/winforms/issues/12933","RelatedDescription":"Closed issue \"Illegal use of Unsafe.Unbox<T> in PropertyStore.cs\" (#12933)"},{"Id":"2854506810","IsPullRequest":true,"CreatedAt":"2025-02-15T02:09:22","Actor":"JeremyKuhne","Number":"12956","RawContent":null,"Title":"Avoid ECMA spec violation in PropertyStore","State":"closed","Body":"The manual unboxing we were doing was not an ECMA approved use of the instruction. As such it could potentially fail in the future should the runtime decide to break the way we were using it.\r\n\r\nOne way to fix this would be to set each of the fields individually on the unboxed ref as the current two types we're optimizing are mutable. I've instead used `StrongBox<T>`. While significantly more complicated, it will not run afoul of the ECMA spec should we get an immutable type we want to handle.\r\n\r\nIf performance here ever ends up being a problem we could go the other way.\r\n\r\nFixes #12933\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12956)","Url":"https://github.com/dotnet/winforms/pull/12956","RelatedDescription":"Closed or merged PR \"Avoid ECMA spec violation in PropertyStore\" (#12956)"},{"Id":"2852743049","IsPullRequest":true,"CreatedAt":"2025-02-15T02:08:28","Actor":"JeremyKuhne","Number":"12950","RawContent":null,"Title":"Refine type binding for deserialization","State":"closed","Body":"This change refines deserialization binding behavior for the BinaryFormatUtilites class.\r\n\r\n- Untyped requests must be requesting the object type (as the outer APIs all do)\r\n- Removes delegate in TypeBinder\r\n- TypeBinder returns typeof(object) for untyped requests\r\n- TypeBinder does not fall back to implicit INrbfSerializer binding when missing a resolver\r\n- Move JsonSerializer serialization to static interface\r\n- Reorder TryGetObjectFromJson to fail out appropriately when binding the root type\r\n- Reset the stream position in TryReadObjectFromStream\r\n- Create the binder up front in TryReadObjectFromStream to normalize usage\r\n- Don't allow implicit nullable conversion without an explicit binder\r\n- Write a number of new tests\r\n\r\nPlan is to continue to write tests with further test cleanup\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12950)","Url":"https://github.com/dotnet/winforms/pull/12950","RelatedDescription":"Closed or merged PR \"Refine type binding for deserialization\" (#12950)"},{"Id":"2849467515","IsPullRequest":false,"CreatedAt":"2025-02-14T20:02:54","Actor":"dotnet-maestro-bot","Number":"12932","RawContent":null,"Title":"[dnceng-bot] Branch `winforms/release/8.0` can't be merged to Azdo internal branch","State":"closed","Body":"Branch [release/8.0](https://github.com/dotnet/winforms/commits/release/8.0/) in `dotnet/winforms` repo can't be mirrored from GitHub to Azure [internal/release/8.0](https://dev.azure.com/dnceng/internal/_git/dotnet-winforms?version=GBinternal%2Frelease%2F8.0&_a=history) via internal merge. \n\nThere are conflicting commits in the target branch.\nThe branch is configured to be mirrored via automated merge. \nThe situation is rare but normal. The target branch is expected to receive manual commits in the Azure DevOps clone, which could cause conflict.\n\nConflicts need to be **resolved to unblock the code flow**.\n\n- you can resolve the issue by resolving the conflict in the **target branch only**. \n    - Please make sure that the changes sensitive from security perspective are not published ahead of time to GitHub!\n- reverting the extra commits in the Azdo target branch.\n- checking the logs of the mirroring process in the [mirroring pipeline](https://dev.azure.com/dnceng/internal/_build?definitionId=1387).\n- you can disable the mirroring of the branch in the [configuration file](https://dev.azure.com/dnceng/internal/_git/dotnet-mirroring?path=/dnceng-subscriptions.jsonc).\n- you can ask @dotnet/dnceng for help or read the [documentation](https://dev.azure.com/dnceng/internal/_git/dotnet-mirroring?path=/README.md).\n\nPlease close this issue once the conflict is resolved.","Url":"https://github.com/dotnet/winforms/issues/12932","RelatedDescription":"Closed issue \"[dnceng-bot] Branch `winforms/release/8.0` can't be merged to Azdo internal branch\" (#12932)"},{"Id":"2852479221","IsPullRequest":true,"CreatedAt":"2025-02-14T18:42:25","Actor":"Tanya-Solyanik","Number":"12945","RawContent":null,"Title":"add facade assemblies to scratch projects","State":"closed","Body":"To test type editors in the runtime scenarios for HDPI testing\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12945)","Url":"https://github.com/dotnet/winforms/pull/12945","RelatedDescription":"Closed or merged PR \"add facade assemblies to scratch projects\" (#12945)"},{"Id":"2850543945","IsPullRequest":false,"CreatedAt":"2025-02-14T18:07:18","Actor":"Liv-Goh","Number":"12940","RawContent":null,"Title":"ChartControl in WinFormsControlsTest shows error when open","State":"closed","Body":"### .NET version\n\n.NET 10.0.100-preview.2.25112.47 + private dlls from main\n\n### Did it work in .NET Framework?\n\nNot tested/verified\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, it is a regression issue, last week for WinForms repo testing, we are able to open ChartControls in WinFormsTestControl\n\n\n\n### Issue description\n\nWhen open ChartControl, this exception will show up\n![Image](https://github.com/user-attachments/assets/c0bc5cf0-c7e7-447f-ad61-f90f9800cddf)\n\n![Image](https://github.com/user-attachments/assets/d1a40ba3-53a6-4f2b-838f-f1be4aa52f74)\n\n\n### Steps to reproduce\n\n1. Clone WinForms repository\n2. Run WinForms test control\n3. Click ChartControl button","Url":"https://github.com/dotnet/winforms/issues/12940","RelatedDescription":"Closed issue \"ChartControl in WinFormsControlsTest shows error when open\" (#12940)"},{"Id":"2852547808","IsPullRequest":true,"CreatedAt":"2025-02-14T18:07:17","Actor":"Tanya-Solyanik","Number":"12946","RawContent":null,"Title":"Chart control requires the SQLClient at runtime","State":"closed","Body":"Chart control in the winforms interactive test requires the SQL Client dependency at runtime. We are getting 4.9.0 version, which is the latest by default.\r\n\r\nFixes https://github.com/dotnet/winforms/issues/12940\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12946)","Url":"https://github.com/dotnet/winforms/pull/12946","RelatedDescription":"Closed or merged PR \"Chart control requires the SQLClient at runtime\" (#12946)"},{"Id":"2853494390","IsPullRequest":true,"CreatedAt":"2025-02-14T18:01:25","Actor":"ViktorHofer","Number":"12955","RawContent":null,"Title":"React to NuGet package pruning warnings","State":"closed","Body":"Contributes to https://github.com/dotnet/sdk/pull/46829\r\n\r\nNuGet added a new feature that automatically prunes package and project references that are provided by the shared framework that is targeted.\r\n\r\nResolve the warnings that got emitted when building the repository in non-source-only mode.\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12955)","Url":"https://github.com/dotnet/winforms/pull/12955","RelatedDescription":"Closed or merged PR \"React to NuGet package pruning warnings\" (#12955)"},{"Id":"2852683788","IsPullRequest":true,"CreatedAt":"2025-02-14T16:42:21","Actor":"dotnet-maestro[bot]","Number":"12948","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\n## From https://github.com/dotnet/runtime\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\n- **Build**: 20250213.8\n- **Date Produced**: February 14, 2025 1:59:47 AM UTC\n- **Commit**: 77ccd7b81e81627c8cb1ab124adc3c98f6ee388b\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.CodeDom**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.ComponentModel.Composition**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.Data.Odbc**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.Data.OleDb**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.Diagnostics.EventLog**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.DirectoryServices**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.Formats.Nrbf**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.IO.Hashing**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.IO.Packaging**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.IO.Ports**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.Management**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.Reflection.Context**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.Resources.Extensions**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.Runtime.Caching**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.Security.Permissions**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.ServiceModel.Syndication**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.Speech**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.Text.Encodings.Web**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.Text.Json**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.Threading.AccessControl**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **System.Windows.Extensions**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-preview.2.25112.7 to 10.0.0-preview.2.25113.8][1]\n\n[1]: https://github.com/dotnet/runtime/compare/751acdef8e...77ccd7b81e\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12948)","Url":"https://github.com/dotnet/winforms/pull/12948","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#12948)"},{"Id":"2852437656","IsPullRequest":true,"CreatedAt":"2025-02-14T15:44:58","Actor":"Tanya-Solyanik","Number":"12944","RawContent":null,"Title":"added a test for ShowDialog re-entry","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12944)","Url":"https://github.com/dotnet/winforms/pull/12944","RelatedDescription":"Closed or merged PR \"added a test for ShowDialog re-entry\" (#12944)"},{"Id":"2853282278","IsPullRequest":false,"CreatedAt":"2025-02-14T10:26:36","Actor":"LeafShi1","Number":"12954","RawContent":null,"Title":"Port DataGridViewColumnCollectionEditor","State":"open","Body":"Contributes to https://github.com/dotnet/winforms/issues/1115","Url":"https://github.com/dotnet/winforms/issues/12954","RelatedDescription":"Open issue \"Port DataGridViewColumnCollectionEditor\" (#12954)"},{"Id":"2852906622","IsPullRequest":true,"CreatedAt":"2025-02-14T07:38:43","Actor":"zivarah","Number":"12953","RawContent":null,"Title":"Ensure `ComManagedStream` seekable wrapper stream has position of 0","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #12951\r\n\r\n## Proposed changes\r\n\r\n- `ComManagedStream` will ensure that the stream wrapping a non-seekable source stream has a position of 0 at the end of its constructor.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- `Image.FromStream` with a non-seekable stream should no longer throw an exception when loading `.emf` and `.wmf` images.\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Risk seems relatively low, in particular because this constructor created a stream with a position of 0 in .NET Framework and .NET Core 3.1. It seems unlikely that consumers are relying on a non-zero position.\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Added unit tests ensuring that the stream returned by `ComManagedStream.GetDataStream()` has the expected state. \r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12953)","Url":"https://github.com/dotnet/winforms/pull/12953","RelatedDescription":"Open PR \"Ensure `ComManagedStream` seekable wrapper stream has position of 0\" (#12953)"},{"Id":"2852888969","IsPullRequest":true,"CreatedAt":"2025-02-14T07:28:08","Actor":"Zheng-Li01","Number":"12952","RawContent":null,"Title":"Add code coverage for ListBoxSelectedObjectCollection","State":"open","Body":"related https://github.com/dotnet/winforms/issues/10453\r\n\r\n## Proposed changes\r\nAdd unit tests for ListBox.SelectedObjectCollection.cs to test its methods\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12952)","Url":"https://github.com/dotnet/winforms/pull/12952","RelatedDescription":"Open PR \"Add code coverage for ListBoxSelectedObjectCollection\" (#12952)"},{"Id":"2852788789","IsPullRequest":false,"CreatedAt":"2025-02-14T06:25:03","Actor":"zivarah","Number":"12951","RawContent":null,"Title":"`Image.FromStream` where stream's `CanSeek` is false crashes with \"Parameter not valid\" for `.wmf`/`.emf` images","State":"open","Body":"### .NET version\n\nReproduced on:\n- 5.0.100\n- 8.0.403\n- 9.0.200-preview.0.24575.35\n\nI suspect this was broken in 5.0 by 136527537e6 (Improve perfromance for loading from Stream on Windows (dotnet/corefx#31142), 2018-07-20)\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, confirmed that it worked in .NET Core 3.1\n\n### Issue description\n\nAttempting to load certain image types with `Image.FromStream` will throw an exception if the stream reports `CanSeek` as false. This seems to be a combination of `ComManagedStream` creating a `MemoryStream` with a non-zero position, and some downstream code not handling that well. This occurs with `.wmf` and `.emf`, though that may not be exhaustive.\n\nThis looks to have been caused by [136527537e6](https://github.com/dotnet/runtime/commit/136527537e68110c0891d911705c50cbbddd829e) (Improve perfromance for loading from Stream on Windows (dotnet/corefx#31142), 2018-07-20).\n\nPrior to that commit, the `GPStream` (since renamed to `ComManagedStream`) created a `MemoryStream` using the constructor accepting a `byte[]`:\n\n```C#\nif (!stream.CanSeek)\n{\n    // [...] Omitted for brevity                                                 \n    dataStream = new MemoryStream(bytes);\n}\n```\n\nThat commit updated it to instead use `CopyTo`:\n\n```C#\nif (makeSeekable && !stream.CanSeek)\n{\n    // Copy to a memory stream so we can seek\n    MemoryStream memoryStream = new MemoryStream();\n    stream.CopyTo(memoryStream);\n    _dataStream = memoryStream;\n}\n```\n\nFrom stepping through this new version of the code, it seems that `memoryStream.Position` ends up being non-zero as a result of using `CopyTo`, which seems to then cause some downstream code to fail:\n\n```\nUnhandled exception. System.ArgumentException: Parameter is not valid.\n   at Windows.Win32.Graphics.GdiPlus.StatusExtensions.ThrowIfFailed(Status status)\n   at System.Drawing.Image.LoadGdipImageFromStream(IStream* stream, Boolean useEmbeddedColorManagement)\n   at System.Drawing.Image.LoadGdipImageFromStream(Stream stream, Boolean useEmbeddedColorManagement)\n   at System.Drawing.Image.FromStream(Stream stream, Boolean useEmbeddedColorManagement, Boolean validateImageData)\n   at System.Drawing.Image.FromStream(Stream stream, Boolean useEmbeddedColorManagement)\n   at System.Drawing.Image.FromStream(Stream stream)\n   at Program.Main(String[] args) in ...\n```\n\nThis can be worked around by wrapping the stream in a `MemoryStream`, ensuring that `MemoryStream`'s position is set to `0`, and passing that to `Image.FromStream` instead of the original stream.\n\n### Steps to reproduce\n\nNote: I was not allowed to attach the small `example.wmf` file I used for testing as `.wmf` isn't a supported file type for this form, apparently. You'll need to find an example file and drop it into your CWD before running the below reproduction.\n\n```xml\n<!-- Repro.csproj -->\n<Project Sdk=\"Microsoft.NET.Sdk\">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net9.0</TargetFramework>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include=\"System.Drawing.Common\" Version=\"9.0.2\" />\n  </ItemGroup>\n\n</Project>\n```\n\n```C#\n// Program.cs\n\nusing System;\nusing System.IO;\n\ninternal class CustomStream : MemoryStream\n{\n    private readonly bool _canSeek;\n\n    public override bool CanSeek => _canSeek;\n\n    public CustomStream(byte[] buffer, bool canSeek) : base(buffer) {\n        _canSeek = canSeek;\n    }\n}\n\ninternal class Program\n{\n    private static void Main(string[] args)\n    {\n        using FileStream fs = new FileStream(\"example.wmf\", FileMode.Open);\n        byte[] buffer = new byte[fs.Length];\n        fs.Read(buffer, 0, buffer.Length);\n\n        // canSeek: false => crash\n        // canSeek: true => works\n        using MemoryStream ms = new CustomStream(buffer, canSeek: false);\n        using System.Drawing.Image image = System.Drawing.Image.FromStream(ms);\n        Console.WriteLine(image.Size);\n    }\n}\n```","Url":"https://github.com/dotnet/winforms/issues/12951","RelatedDescription":"Open issue \"`Image.FromStream` where stream's `CanSeek` is false crashes with \"Parameter not valid\" for `.wmf`/`.emf` images\" (#12951)"},{"Id":"2852683857","IsPullRequest":true,"CreatedAt":"2025-02-14T05:54:58","Actor":"dotnet-maestro[bot]","Number":"12949","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\n## From https://github.com/dotnet/arcade\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\n- **Build**: 20250213.2\n- **Date Produced**: February 13, 2025 5:32:04 PM UTC\n- **Commit**: ea0a0a28cccd4b63a9ec40df53ef2df260ffa5b1\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25112.2 to 10.0.0-beta.25113.2][1]\n  - **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25112.2 to 10.0.0-beta.25113.2][1]\n  - **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25112.2 to 10.0.0-beta.25113.2][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25112.2 to 10.0.0-beta.25113.2][1]\n  - **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25112.2 to 10.0.0-beta.25113.2][1]\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25112.2 to 10.0.0-beta.25113.2][1]\n\n[1]: https://github.com/dotnet/arcade/compare/c7b4cf2b26...ea0a0a28cc\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12949)","Url":"https://github.com/dotnet/winforms/pull/12949","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#12949)"},{"Id":"2852567617","IsPullRequest":true,"CreatedAt":"2025-02-14T03:15:23","Actor":"LeafShi1","Number":"12947","RawContent":null,"Title":"Scale errorProvider Icon to DeviceDPI","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #12939\r\n\r\n## Proposed changes\r\n\r\n- Scale errorProvider Icon to DeviceDPI\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- The icon of errorProvider can be scaled well on HDPI screen\r\n\r\n## Regression? \r\n\r\n- Yes \r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\nThe icon of errorProvider is not scaled well on HDPI screen with SystemAware and PerMoniterV2 modes\r\n\r\n![BeforeChange](https://github.com/user-attachments/assets/bf20fcc8-bc09-44f3-b9c4-9fb1beb4751c)\r\n\r\n### After\r\nThe icon of errorProvider can be scaled well on HDPI screen\r\n\r\n![AfterChange](https://github.com/user-attachments/assets/c757eb70-9bee-4114-a2a5-55dc7a34fb2b)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manually\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .net 10.0.0-preview.2.25111.15\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12947)","Url":"https://github.com/dotnet/winforms/pull/12947","RelatedDescription":"Open PR \"Scale errorProvider Icon to DeviceDPI\" (#12947)"},{"Id":"2851852383","IsPullRequest":true,"CreatedAt":"2025-02-13T23:52:01","Actor":"Tanya-Solyanik","Number":"12942","RawContent":null,"Title":"Fix for Double clicking on a ToolStripButton to open a dialog causes stack overflow","State":"closed","Body":"Fixes https://github.com/dotnet/winforms/issues/12847\r\n\r\n`ShowDialog` for `OpenFileDialog` waits while it populates the folders view, if at this moment we receive another `ShowDialog` call for the same dialog, we would attempt to subclass the same OpenFileDialog window again and start calling our own WinProc recursevely.\r\n\r\nFix: handle the repeated call to ShowDialog gracefully by returning \"Cancel\"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12942)","Url":"https://github.com/dotnet/winforms/pull/12942","RelatedDescription":"Closed or merged PR \"Fix for Double clicking on a ToolStripButton to open a dialog causes stack overflow\" (#12942)"},{"Id":"2849200769","IsPullRequest":true,"CreatedAt":"2025-02-13T21:48:21","Actor":"JeremyKuhne","Number":"12928","RawContent":null,"Title":"Ensure Json serialized data can be read from any API","State":"closed","Body":"Writing as JSON should just work throughout the system. While users should move to the new typed APIs they cannot always change everything. This allows moving existing data that can be serialized as Json to the Json API and all consumers on .NET 10+ will be able to read it without changes.\r\n\r\nAlso:\r\n\r\n- Feedback from the last PR and more documentation cleanup\r\n- New tests directly against the NativeToManagedAdapter with IDataObject mocks\r\n- Flip the bool on DataRequest\r\n- Add a DisposableBase class for easy robust IDisposable support\r\n- Move HGLOBAL Stream helper to StreamExtensions\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12928)","Url":"https://github.com/dotnet/winforms/pull/12928","RelatedDescription":"Closed or merged PR \"Ensure Json serialized data can be read from any API\" (#12928)"},{"Id":"2851865165","IsPullRequest":true,"CreatedAt":"2025-02-13T20:04:14","Actor":"Tanya-Solyanik","Number":"12943","RawContent":null,"Title":"Add the design project to the scratch tests","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12943)","Url":"https://github.com/dotnet/winforms/pull/12943","RelatedDescription":"Closed or merged PR \"Add the design project to the scratch tests\" (#12943)"},{"Id":"2849910122","IsPullRequest":true,"CreatedAt":"2025-02-13T19:54:15","Actor":"LeafShi1","Number":"12936","RawContent":null,"Title":"Disable test \"RadioButtonRenderer_DrawRadioButton_OverloadWithHandle\" in X86","State":"closed","Body":"\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nRelated #12935\r\n\r\n## Proposed changes\r\n- Add judgment to skip test `RadioButtonRenderer_DrawRadioButton_OverloadWithHandle` in x86\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12936)","Url":"https://github.com/dotnet/winforms/pull/12936","RelatedDescription":"Closed or merged PR \"Disable test \"RadioButtonRenderer_DrawRadioButton_OverloadWithHandle\" in X86\" (#12936)"},{"Id":"2851158273","IsPullRequest":false,"CreatedAt":"2025-02-13T14:10:59","Actor":"jbennink","Number":"12941","RawContent":null,"Title":"Combox autocomplete list weird selection behaviour","State":"open","Body":"### .NET version\n\nTested with NET9.0.200. \n\n\n### Did it work in .NET Framework?\n\nNot tested/verified\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\nThe issue is that when you first open de dropdownlist, and then start typing to autocomplete it creates a seperate short list that matches you autocomplete (looks werid those two lists on top of each other). But then when you try to select an item with the mouse in the autocomplete list, it actually selects an item from the opend dropdownlist. Tryin to navigate the autocomplete list with the keyboard and selecting by pressing enter does nothing, no selection from either list.\n\n**Expected behaviour**\nI would have expected the autocomplete (filtering) to occur in the actual Dropdown list to prevent these double lists from displaying.\n\nOR\n\nWhen starting to type, close the dropdownlist, and show the autocomplete list. This might prevent the selection issue that occurs\n\n\n### Steps to reproduce\n\nRun the samples from this github: https://github.com/jbennink/WinFormsApp-TestCombobox\n\nDemo movie in repo:\n\nhttps://github.com/user-attachments/assets/0508c7ce-6617-4265-a74b-87ed317149cc\n\n\n* First click the dropdown button to open the dropdownlist\n* Then (with the cursor in the edit field) type an L\n* This open a second list/window with the autocomplete set\n* Selecting with the mous does not select the autocomplete list, but selects items from the dropdownlist below\n\n","Url":"https://github.com/dotnet/winforms/issues/12941","RelatedDescription":"Open issue \"Combox autocomplete list weird selection behaviour\" (#12941)"},{"Id":"2850149929","IsPullRequest":false,"CreatedAt":"2025-02-13T07:00:24","Actor":"Olina-Zhang","Number":"12939","RawContent":null,"Title":"[HDPI]The icon of errorProvider is not scaled well on HDPI screen with SystemAware and PerMoniterV2 modes","State":"open","Body":"### .NET version\n\n.NET 10.0 SDK build: 10.0.100-preview.2.25112.51\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, work in .NET 8.0, repro in .NET 9.0 and 10.0\n\n### Issue description\n\nThe icon of errorProvider is not scaled well on HDPI screen with SystemAware and PerMoniterV2 modes\n\n**.NET 10.0 on 300%DPI:**\n\n![Image](https://github.com/user-attachments/assets/d341907a-f84d-483c-81dc-ace6d77943ad)\n\n**.NET 8.0 on 300%DPI:**\n\n![Image](https://github.com/user-attachments/assets/a6250773-8dd8-40cc-af61-64dfb91bc0f5)\n\n### Steps to reproduce\n\n1. Create a Winforms .NET application with TextBox and ErrorProvider controls added\n2. Double-click TextBox control to generate **textBox1_TextChanged** event\n3. In that event, write some code to show errorProvider for TextBox editing\n ```\nprivate void textBox1_TextChanged(object sender, EventArgs e)\n {\n     if (!string.IsNullOrEmpty(textBox1.Text))\n     {\n         errorProvider1.SetError(textBox1, \"ErrorProvider shown\");\n     }\n     else\n     {\n         errorProvider1.SetError(textBox1, string.Empty);\n     }\n }\n```\nor using following sample app\n[WinFormsApp7.zip](https://github.com/user-attachments/files/18779412/WinFormsApp7.zip)","Url":"https://github.com/dotnet/winforms/issues/12939","RelatedDescription":"Open issue \"[HDPI]The icon of errorProvider is not scaled well on HDPI screen with SystemAware and PerMoniterV2 modes\" (#12939)"},{"Id":"2849960154","IsPullRequest":true,"CreatedAt":"2025-02-13T05:44:27","Actor":"dotnet-maestro[bot]","Number":"12938","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\n## From https://github.com/dotnet/arcade\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\n- **Build**: 20250212.2\n- **Date Produced**: February 12, 2025 9:28:30 PM UTC\n- **Commit**: c7b4cf2b26fdef0e503ba8d2f67d67cf5a1594c8\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25110.3 to 10.0.0-beta.25112.2][1]\n  - **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25110.3 to 10.0.0-beta.25112.2][1]\n  - **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25110.3 to 10.0.0-beta.25112.2][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25110.3 to 10.0.0-beta.25112.2][1]\n  - **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25110.3 to 10.0.0-beta.25112.2][1]\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25110.3 to 10.0.0-beta.25112.2][1]\n\n[1]: https://github.com/dotnet/arcade/compare/c80f5199af...c7b4cf2b26\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12938)","Url":"https://github.com/dotnet/winforms/pull/12938","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#12938)"},{"Id":"2849960079","IsPullRequest":true,"CreatedAt":"2025-02-13T05:39:04","Actor":"dotnet-maestro[bot]","Number":"12937","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\n## From https://github.com/dotnet/runtime\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\n- **Build**: 20250212.7\n- **Date Produced**: February 13, 2025 12:23:50 AM UTC\n- **Commit**: 751acdef8e947ab5bd602721ea0cd7884c5a3e4a\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.CodeDom**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.ComponentModel.Composition**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.Data.Odbc**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.Data.OleDb**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.Diagnostics.EventLog**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.DirectoryServices**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.Formats.Nrbf**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.IO.Hashing**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.IO.Packaging**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.IO.Ports**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.Management**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.Reflection.Context**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.Resources.Extensions**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.Runtime.Caching**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.Security.Permissions**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.ServiceModel.Syndication**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.Speech**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.Text.Encodings.Web**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.Text.Json**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.Threading.AccessControl**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **System.Windows.Extensions**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-preview.2.25111.15 to 10.0.0-preview.2.25112.7][1]\n\n[1]: https://github.com/dotnet/runtime/compare/8c92ae7100...751acdef8e\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12937)","Url":"https://github.com/dotnet/winforms/pull/12937","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#12937)"},{"Id":"2849800498","IsPullRequest":false,"CreatedAt":"2025-02-13T02:44:21","Actor":"LeafShi1","Number":"12935","RawContent":null,"Title":"Unstable unit test: System.Windows.Forms.Tests.RadioButtonRendererTests.RadioButtonRenderer_DrawRadioButton_OverloadWithHandle","State":"open","Body":"### Test\n\nSystem.Windows.Forms.Tests.RadioButtonRendererTests.RadioButtonRenderer_DrawRadioButton_OverloadWithHandle(focus: True)\n\n### Issue description\n\n**Error Message:**\n\n- **In X86:**\n     System.InvalidOperationException : Invalid handle (0)\n\n- **Stack trace:**\n\n```\n   at Windows.Win32.Graphics.Gdi.DeviceContextHdcScope.ValidateHDC() in /_/src/System.Private.Windows.GdiPlus/Windows/Win32/Graphics/Gdi/DeviceContextHdcScope.cs:line 186\n   at Windows.Win32.Graphics.Gdi.DeviceContextHdcScope..ctor(IHdcContext deviceContext, ApplyGraphicsProperties applyGraphicsState, Boolean saveHdcState) in /_/src/System.Private.Windows.GdiPlus/Windows/Win32/Graphics/Gdi/DeviceContextHdcScope.cs:line 147\n   at System.Windows.Forms.DeviceContextExtensions.ToHdcScope(IDeviceContext deviceContext, ApplyGraphicsProperties applyProperties) in /_/src/System.Windows.Forms.Primitives/src/System/Windows/Forms/DeviceContextExtensions.cs:line 184\n   at System.Windows.Forms.TextRenderer.DrawTextInternal(IDeviceContext dc, ReadOnlySpan`1 text, Font font, Rectangle bounds, Color foreColor, Color backColor, TextFormatFlags flags) in /_/src/System.Windows.Forms/src/System/Windows/Forms/Rendering/TextRenderer.cs:line 307\n   at System.Windows.Forms.TextRenderer.DrawText(IDeviceContext dc, String text, Font font, Rectangle bounds, Color foreColor, TextFormatFlags flags) in /_/src/System.Windows.Forms/src/System/Windows/Forms/Rendering/TextRenderer.cs:line 205\n   at System.Windows.Forms.RadioButtonRenderer.DrawRadioButton(Graphics g, Point glyphLocation, Rectangle textBounds, String radioButtonText, Font font, TextFormatFlags flags, Boolean focused, RadioButtonState state, HWND hwnd) in /_/src/System.Windows.Forms/src/System/Windows/Forms/Controls/Buttons/RadioButtonRenderer.cs:line 147\n   at System.Windows.Forms.Tests.RadioButtonRendererTests.RadioButtonRenderer_DrawRadioButton_OverloadWithHandle(Boolean focus) in /_/src/System.Windows.Forms/tests/UnitTests/System/Windows/Forms/RadioButtonRendererTests.cs:line 118\n   at System.RuntimeMethodHandle.InvokeMethod(ObjectHandleOnStack target, Void** arguments, ObjectHandleOnStack sig, BOOL isConstructor, ObjectHandleOnStack result)\n   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)\n```","Url":"https://github.com/dotnet/winforms/issues/12935","RelatedDescription":"Open issue \"Unstable unit test: System.Windows.Forms.Tests.RadioButtonRendererTests.RadioButtonRenderer_DrawRadioButton_OverloadWithHandle\" (#12935)"},{"Id":"2849684570","IsPullRequest":true,"CreatedAt":"2025-02-13T01:22:09","Actor":"Tanya-Solyanik","Number":"12934","RawContent":null,"Title":"Adding VB analyzer documentation for WFO1001","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12934)","Url":"https://github.com/dotnet/winforms/pull/12934","RelatedDescription":"Closed or merged PR \"Adding VB analyzer documentation for WFO1001\" (#12934)"},{"Id":"2849386118","IsPullRequest":true,"CreatedAt":"2025-02-13T00:52:12","Actor":"Tanya-Solyanik","Number":"12930","RawContent":null,"Title":"Some renames in analyzers source code and tests","State":"closed","Body":"Shortened analyzer class name as a follow up on the file rename\r\nManifest tests are now using a shared test utility to load the input files\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12930)","Url":"https://github.com/dotnet/winforms/pull/12930","RelatedDescription":"Closed or merged PR \"Some renames in analyzers source code and tests\" (#12930)"},{"Id":"2849418838","IsPullRequest":true,"CreatedAt":"2025-02-12T22:07:34","Actor":"dotnet-maestro[bot]","Number":"12931","RawContent":null,"Title":"[release/8.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:bcf5aa31-6777-442e-8e36-08db9e435944)\n## From https://github.com/dotnet/arcade\n- **Subscription**: bcf5aa31-6777-442e-8e36-08db9e435944\n- **Build**: 20250211.4\n- **Date Produced**: February 11, 2025 11:57:42 PM UTC\n- **Commit**: a319ada170a54ee87c7a81e3309948e3d3ea7aca\n- **Branch**: refs/heads/release/8.0\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.25060.1 to 8.0.0-beta.25111.4][1]\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.25060.1 to 8.0.0-beta.25111.4][1]\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.25060.1 to 8.0.0-beta.25111.4][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.25060.1 to 8.0.0-beta.25111.4][1]\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.25060.1 to 8.0.0-beta.25111.4][1]\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.25060.1 to 8.0.0-beta.25111.4][1]\n\n[1]: https://github.com/dotnet/arcade/compare/c255aae7f2...a319ada170\n\n[DependencyUpdate]: <> (End)\n\n- **Updates to .NET SDKs:**\n  - Updates sdk.version to 8.0.113\n  - Updates tools.dotnet to 8.0.113\n\n[marker]: <> (End:bcf5aa31-6777-442e-8e36-08db9e435944)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12931)","Url":"https://github.com/dotnet/winforms/pull/12931","RelatedDescription":"Closed or merged PR \"[release/8.0] Update dependencies from dotnet/arcade\" (#12931)"},{"Id":"2849338545","IsPullRequest":false,"CreatedAt":"2025-02-12T20:57:47","Actor":"JeremyKuhne","Number":"12929","RawContent":null,"Title":"Ensure typed deserialization requires exact type match from resolver","State":"open","Body":"Need to validate at the lowest level in BinaryFormatUtilities. Currently this is not blocked. You should not be able to ask for a base type without a resolver to get derived types.","Url":"https://github.com/dotnet/winforms/issues/12929","RelatedDescription":"Open issue \"Ensure typed deserialization requires exact type match from resolver\" (#12929)"},{"Id":"2849015131","IsPullRequest":false,"CreatedAt":"2025-02-12T18:12:38","Actor":"JeremyKuhne","Number":"12927","RawContent":null,"Title":"Add thorough tests for partially supported NRBF types","State":"open","Body":"Need to make sure that we test things like `Hashtable` thoroughly to make sure that we pass through instances with unsupported content and that we don't lose data over fields we don't currently handle (notably the comparer in this case).\n\n`CoreNrbfSerializer` is the exposure point.","Url":"https://github.com/dotnet/winforms/issues/12927","RelatedDescription":"Open issue \"Add thorough tests for partially supported NRBF types\" (#12927)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-02-15T03:30:27.6078661Z","RunDurationInMilliseconds":486}