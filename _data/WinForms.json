{"Data":{"GitHub":{"Issues":[{"Id":"1093722259","IsPullRequest":true,"CreatedAt":"2022-01-06T00:23:55","Actor":"gpetrou","Number":"6465","RawContent":null,"Title":"Enable nullability in FeatureSupport and IFeatureSupport","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in FeatureSupport and IFeatureSupport.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6465)","Url":"https://github.com/dotnet/winforms/pull/6465","RelatedDescription":"Closed or merged PR \"Enable nullability in FeatureSupport and IFeatureSupport\" (#6465)"},{"Id":"1093575003","IsPullRequest":true,"CreatedAt":"2022-01-06T00:22:49","Actor":"gpetrou","Number":"6463","RawContent":null,"Title":"Enable nullability in classes that inherit from ToolStripItemAccessibleObject","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in classes that inherit from ToolStripItemAccessibleObject.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6463)","Url":"https://github.com/dotnet/winforms/pull/6463","RelatedDescription":"Closed or merged PR \"Enable nullability in classes that inherit from ToolStripItemAccessibleObject\" (#6463)"},{"Id":"1092048989","IsPullRequest":true,"CreatedAt":"2022-01-06T00:22:25","Actor":"gpetrou","Number":"6455","RawContent":null,"Title":"Use generic list in ImageList","State":"closed","Body":"## Proposed changes\r\n\r\n- Use generic list in ImageList.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6455)","Url":"https://github.com/dotnet/winforms/pull/6455","RelatedDescription":"Closed or merged PR \"Use generic list in ImageList\" (#6455)"},{"Id":"1092054595","IsPullRequest":true,"CreatedAt":"2022-01-06T00:19:49","Actor":"gpetrou","Number":"6458","RawContent":null,"Title":"Enable nullability in UITypeEditor","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in UITypeEditor.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6458)","Url":"https://github.com/dotnet/winforms/pull/6458","RelatedDescription":"Closed or merged PR \"Enable nullability in UITypeEditor\" (#6458)"},{"Id":"1092047283","IsPullRequest":true,"CreatedAt":"2022-01-06T00:19:32","Actor":"gpetrou","Number":"6454","RawContent":null,"Title":"Use generic queue in Control","State":"closed","Body":"## Proposed changes\r\n\r\n- Use generic queue in Control.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6454)","Url":"https://github.com/dotnet/winforms/pull/6454","RelatedDescription":"Closed or merged PR \"Use generic queue in Control\" (#6454)"},{"Id":"1094334644","IsPullRequest":true,"CreatedAt":"2022-01-05T13:45:25","Actor":"dotnet-maestro[bot]","Number":"6467","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20220104.12\r\n- **Date Produced**: January 5, 2022 8:36:57 AM UTC\r\n- **Commit**: 8b9e708b9a12e58af13a2bec4003a2210bbeb437\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-alpha.1.22053.15 to 7.0.0-alpha.1.22054.12][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-alpha.1.22053.15 to 7.0.0-alpha.1.22054.12][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-alpha.1.22053.15 to 7.0.0-alpha.1.22054.12][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-alpha.1.22053.15 to 7.0.0-alpha.1.22054.12][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-alpha.1.22053.15 to 7.0.0-alpha.1.22054.12][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.22053.15 to 7.0.0-alpha.1.22054.12][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.22053.15 to 7.0.0-alpha.1.22054.12][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-alpha.1.22053.15 to 7.0.0-alpha.1.22054.12][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-alpha.1.22053.15 to 7.0.0-alpha.1.22054.12][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-alpha.1.22053.15 to 7.0.0-alpha.1.22054.12][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-alpha.1.22053.15 to 7.0.0-alpha.1.22054.12][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-alpha.1.22053.15 to 7.0.0-alpha.1.22054.12][1]\r\n  - **System.CodeDom**: [from 7.0.0-alpha.1.22053.15 to 7.0.0-alpha.1.22054.12][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-alpha.1.22053.15 to 7.0.0-alpha.1.22054.12][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-alpha.1.22053.15 to 7.0.0-alpha.1.22054.12][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-alpha.1.22053.15 to 7.0.0-alpha.1.22054.12][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-alpha.1.22053.15 to 7.0.0-alpha.1.22054.12][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-alpha.1.22053.15 to 7.0.0-alpha.1.22054.12][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-alpha.1.22053.15 to 7.0.0-alpha.1.22054.12][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-alpha.1.22053.15 to 7.0.0-alpha.1.22054.12][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.22053.15 to 7.0.0-alpha.1.22054.12][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.22053.15 to 7.0.0-alpha.1.22054.12][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-alpha.1.22053.15 to 7.0.0-alpha.1.22054.12][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-alpha.1.22053.15 to 7.0.0-alpha.1.22054.12][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-alpha.1.22053.15 to 7.0.0-alpha.1.22054.12][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-alpha.1.22053.15 to 7.0.0-alpha.1.22054.12][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-alpha.1.22053.15 to 7.0.0-alpha.1.22054.12][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-alpha.1.22053.15 to 7.0.0-alpha.1.22054.12][1]\r\n  - **System.Text.Json**: [from 7.0.0-alpha.1.22053.15 to 7.0.0-alpha.1.22054.12][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.22053.15 to 7.0.0-alpha.1.22054.12][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/7172c68...8b9e708\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6467)","Url":"https://github.com/dotnet/winforms/pull/6467","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6467)"},{"Id":"1094334068","IsPullRequest":true,"CreatedAt":"2022-01-05T13:44:33","Actor":"dotnet-maestro[bot]","Number":"6466","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20220104.5\r\n- **Date Produced**: January 4, 2022 6:27:59 PM UTC\r\n- **Commit**: 85188b0c348f3f7f8206f441ec2ee2da6dbb06fe\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.22053.2 to 7.0.0-beta.22054.5][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22053.2 to 7.0.0-beta.22054.5][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.22053.2 to 7.0.0-beta.22054.5][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.22053.2 to 7.0.0-beta.22054.5][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.22053.2 to 7.0.0-beta.22054.5][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22053.2 to 7.0.0-beta.22054.5][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/a0f6d24...85188b0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6466)","Url":"https://github.com/dotnet/winforms/pull/6466","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6466)"},{"Id":"1093639636","IsPullRequest":false,"CreatedAt":"2022-01-04T18:23:04","Actor":"rickbrew","Number":"6464","RawContent":null,"Title":"Catastrophic regression introduced in .NET 6.0.1 WinForms, completely broke Paint.NET v4.3.6","State":"open","Body":"* .NET Core Version: 6.0.1\r\n\r\n**Problem description:**\r\nYesterday I rolled out a new update for Paint.NET, version 4.3.5. After quickly pushing out a hotfix (v4.3.6) for something that _I_ broke in the code, I then received numerous reports of another catastrophic breaking issue that rendered the app completely broken. \r\n\r\nAfter many hours it was finally determined that the culprit was having a certain app setting disabled (the default is enabled): \"Translucent windows\".\r\n![image](https://user-images.githubusercontent.com/10873410/148103394-a6757fac-930a-4ee5-ab33-24f3b6f0c2ca.png)\r\n\r\nI'm pretty sure this was caused by a bug (or bug \"fix\" ?) introduced in .NET 6.0.1, as it doesn't happen in the previous version of my app (v4.3.4) on .NET 6.0, I had very few changes in the new version, and the workaround I found suggests a change in behavior surrounding `Handle`, `IsHandleCreated`, `OnHandleCreated()`, `OnHandleDestroyed()`. I've since published a new update with that workaround fix applied and everything works fine.\r\n\r\nThere's a big discussion on my forum that details the issue, the pleas for help and rollbacks, the troubleshooting, the discovery of a workaround in the app, and subsequently a test build that saved the day: https://forums.getpaint.net/topic/119185-many-problems-with-436/\r\n\r\nHere are some highlights:\r\n\r\n- Dialogs always opening at the top-left of the screen, instead of centered or literally anywhere they're supposed to be\r\n\r\n- Truncated window size. This dialog should be 3-4x taller \r\n<img width=\"265\" alt=\"image\" src=\"https://user-images.githubusercontent.com/10873410/148103524-15fb1d64-429e-4b6d-b7aa-58600e48b0b2.png\">\r\n\r\n- Progress dialogs that never complete and can't be closed, resulting in a soft hang that requires Task Manager -> End Process\r\n<img width=\"233\" alt=\"image\" src=\"https://user-images.githubusercontent.com/10873410/148103556-a7fe4467-f990-4ebf-b6f6-42d95b392259.png\">\r\n\r\n- Completely scrambled dialog layout for things like File->New, Image->Resize, etc.\r\n<img width=\"207\" alt=\"image\" src=\"https://user-images.githubusercontent.com/10873410/148103785-f9903aa8-118a-42b7-85ad-1b48c1f93d7d.png\"> \r\n\r\n**Here is the change in 6.0.1 that is _highly_ suspicious:** https://github.com/dotnet/winforms/pull/6114 cc @RussKie \r\n\r\nIn my code, I'm setting the window's opacity myself via `SetWindowLongPtrW()` and `SetLayeredWindowAttributes()`. This is because, way back with .NET 1.1 in 2004, there was some bug with `Form.Opacity` that I don't remember the details of. (I may be able to remove this code now, but like ... it ain't broke so don't fix it? maybe?) When \"Translucent windows\" is _disabled_, this ends up causing the window handle to be created in my `Form`s constructor (in a common base class that all other forms derive from), after `SuspendLayout()` and `InitializeComponent()`, and right before `ResumeLayout(false)`. I do consider this to be a bug in my code, but it should only be a performance bug, and it's been working fine for literally 18 years (Paint.NET 1.0 was originally released in May 2004 on .NET 1.1).\r\n\r\nMy fix, which is in the frantically released 4.3.7 update, is to first check `this.IsHandleCreated` before grabbing `this.Handle` to manually set the form's opacity (via `SetWindowLongPtrW()` and `SetLayeredWindowAttributes()`).\r\n\r\nThe behavior of the bug(s) seems to indicate some kind of disconnect between what WinForms thinks the handle is, and what handle Win32 is using, or maybe a disconnect between various parts of WinForms itself. Dialogs aren't closing properly, layout is all broken, every new dialog is at the top-left corner of the screen instead of centered, etc. The app will soft hang because modal progress dialogs don't close when they're supposed to. It's just a total disaster.\r\n\r\n**Expected behavior:**\r\nEverything works great. In reality, not even close :(\r\n\r\n**Minimal repro:**\r\nHere's a ZIP of the \"cursed\" Paint.NET v4.3.6 build, in portable (self-contained deployment) form: https://www.dotpdn.com/files/zip/test/paint.net.4.3.6.portable.x64.zip\r\n\r\nLaunch the app by double-clicking `paintdotnet.exe`. You should be able to launch things like File->New, Image->Resize, Layers->Rotate/Zoom, and run effects and adjustments and everything works fine.\r\n\r\nNext, go into Settings (gear icon at top right of main window), then uncheck the box \"Translucent windows\". This is supposed to only affect the floating tool forms, since they're the only forms that use `Opacity`. Anyway, close the window and then try all the things listed above (File->New, etc.). _Everything will be completely, catastrophically broken._\r\n\r\nI'm able to provide access to my solution/code for MSFT employees thanks to an NDA/license that @richlander and I set up a few years back. I can then easily show you which lines of code to change to make things broken/fixed.","Url":"https://github.com/dotnet/winforms/issues/6464","RelatedDescription":"Open issue \"Catastrophic regression introduced in .NET 6.0.1 WinForms, completely broke Paint.NET v4.3.6\" (#6464)"},{"Id":"1092053237","IsPullRequest":true,"CreatedAt":"2022-01-04T17:59:26","Actor":"gpetrou","Number":"6457","RawContent":null,"Title":"Enable nullability in ListViewItemStateImageIndexConverter","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ListViewItemStateImageIndexConverter.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6457)","Url":"https://github.com/dotnet/winforms/pull/6457","RelatedDescription":"Closed or merged PR \"Enable nullability in ListViewItemStateImageIndexConverter\" (#6457)"},{"Id":"1092051884","IsPullRequest":true,"CreatedAt":"2022-01-04T17:59:10","Actor":"gpetrou","Number":"6456","RawContent":null,"Title":"Enable nullability in LinkConverter","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in LinkConverter.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6456)","Url":"https://github.com/dotnet/winforms/pull/6456","RelatedDescription":"Closed or merged PR \"Enable nullability in LinkConverter\" (#6456)"},{"Id":"1091484278","IsPullRequest":true,"CreatedAt":"2022-01-04T17:58:51","Actor":"gpetrou","Number":"6447","RawContent":null,"Title":"Enable nullability in SelectionRange and SelectionRangeConverter","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in SelectionRange and SelectionRangeConverter.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6447)","Url":"https://github.com/dotnet/winforms/pull/6447","RelatedDescription":"Closed or merged PR \"Enable nullability in SelectionRange and SelectionRangeConverter\" (#6447)"},{"Id":"1091475710","IsPullRequest":true,"CreatedAt":"2022-01-04T17:40:17","Actor":"gpetrou","Number":"6446","RawContent":null,"Title":"Enable nullability in ImageIndexConverter","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ImageIndexConverter.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6446)","Url":"https://github.com/dotnet/winforms/pull/6446","RelatedDescription":"Closed or merged PR \"Enable nullability in ImageIndexConverter\" (#6446)"},{"Id":"1093340208","IsPullRequest":true,"CreatedAt":"2022-01-04T13:50:48","Actor":"dotnet-maestro[bot]","Number":"6462","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20220103.15\r\n- **Date Produced**: January 4, 2022 8:21:04 AM UTC\r\n- **Commit**: 7172c68fc2afe91625deadac9c6d9427f19d84a8\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-alpha.1.22052.8 to 7.0.0-alpha.1.22053.15][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-alpha.1.22052.8 to 7.0.0-alpha.1.22053.15][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-alpha.1.22052.8 to 7.0.0-alpha.1.22053.15][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-alpha.1.22052.8 to 7.0.0-alpha.1.22053.15][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-alpha.1.22052.8 to 7.0.0-alpha.1.22053.15][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.22052.8 to 7.0.0-alpha.1.22053.15][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.22052.8 to 7.0.0-alpha.1.22053.15][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-alpha.1.22052.8 to 7.0.0-alpha.1.22053.15][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-alpha.1.22052.8 to 7.0.0-alpha.1.22053.15][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-alpha.1.22052.8 to 7.0.0-alpha.1.22053.15][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-alpha.1.22052.8 to 7.0.0-alpha.1.22053.15][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-alpha.1.22052.8 to 7.0.0-alpha.1.22053.15][1]\r\n  - **System.CodeDom**: [from 7.0.0-alpha.1.22052.8 to 7.0.0-alpha.1.22053.15][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-alpha.1.22052.8 to 7.0.0-alpha.1.22053.15][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-alpha.1.22052.8 to 7.0.0-alpha.1.22053.15][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-alpha.1.22052.8 to 7.0.0-alpha.1.22053.15][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-alpha.1.22052.8 to 7.0.0-alpha.1.22053.15][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-alpha.1.22052.8 to 7.0.0-alpha.1.22053.15][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-alpha.1.22052.8 to 7.0.0-alpha.1.22053.15][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-alpha.1.22052.8 to 7.0.0-alpha.1.22053.15][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.22052.8 to 7.0.0-alpha.1.22053.15][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.22052.8 to 7.0.0-alpha.1.22053.15][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-alpha.1.22052.8 to 7.0.0-alpha.1.22053.15][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-alpha.1.22052.8 to 7.0.0-alpha.1.22053.15][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-alpha.1.22052.8 to 7.0.0-alpha.1.22053.15][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-alpha.1.22052.8 to 7.0.0-alpha.1.22053.15][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-alpha.1.22052.8 to 7.0.0-alpha.1.22053.15][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-alpha.1.22052.8 to 7.0.0-alpha.1.22053.15][1]\r\n  - **System.Text.Json**: [from 7.0.0-alpha.1.22052.8 to 7.0.0-alpha.1.22053.15][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.22052.8 to 7.0.0-alpha.1.22053.15][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/c8f3b36...7172c68\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6462)","Url":"https://github.com/dotnet/winforms/pull/6462","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6462)"},{"Id":"1093339508","IsPullRequest":true,"CreatedAt":"2022-01-04T13:49:51","Actor":"dotnet-maestro[bot]","Number":"6461","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20220103.2\r\n- **Date Produced**: January 3, 2022 2:36:19 PM UTC\r\n- **Commit**: a0f6d2432ce3d1bb30ee747bb534f477c75fd667\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.21630.1 to 7.0.0-beta.22053.2][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21630.1 to 7.0.0-beta.22053.2][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.21630.1 to 7.0.0-beta.22053.2][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.21630.1 to 7.0.0-beta.22053.2][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.21630.1 to 7.0.0-beta.22053.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21630.1 to 7.0.0-beta.22053.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/12ba11c...a0f6d24\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6461)","Url":"https://github.com/dotnet/winforms/pull/6461","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6461)"},{"Id":"1092017175","IsPullRequest":true,"CreatedAt":"2022-01-03T21:51:56","Actor":"dotnet-maestro[bot]","Number":"6452","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20220102.8\r\n- **Date Produced**: January 3, 2022 8:36:12 AM UTC\r\n- **Commit**: c8f3b36d6d5da74333c6755ccd5687127bcd9905\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-alpha.1.21631.1 to 7.0.0-alpha.1.22052.8][2]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-alpha.1.21631.1 to 7.0.0-alpha.1.22052.8][2]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-alpha.1.21631.1 to 7.0.0-alpha.1.22052.8][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-alpha.1.21631.1 to 7.0.0-alpha.1.22052.8][2]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-alpha.1.21631.1 to 7.0.0-alpha.1.22052.8][2]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21631.1 to 7.0.0-alpha.1.22052.8][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.21631.1 to 7.0.0-alpha.1.22052.8][2]\r\n  - **System.Drawing.Common**: [from 7.0.0-alpha.1.21631.1 to 7.0.0-alpha.1.22052.8][2]\r\n  - **System.DirectoryServices**: [from 7.0.0-alpha.1.21631.1 to 7.0.0-alpha.1.22052.8][2]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-alpha.1.21631.1 to 7.0.0-alpha.1.22052.8][2]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-alpha.1.21631.1 to 7.0.0-alpha.1.22052.8][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-alpha.1.21631.1 to 7.0.0-alpha.1.22052.8][2]\r\n  - **System.CodeDom**: [from 7.0.0-alpha.1.21631.1 to 7.0.0-alpha.1.22052.8][2]\r\n  - **System.IO.Packaging**: [from 7.0.0-alpha.1.21631.1 to 7.0.0-alpha.1.22052.8][2]\r\n  - **System.Security.Permissions**: [from 7.0.0-alpha.1.21631.1 to 7.0.0-alpha.1.22052.8][2]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-alpha.1.21631.1 to 7.0.0-alpha.1.22052.8][2]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-alpha.1.21631.1 to 7.0.0-alpha.1.22052.8][2]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-alpha.1.21631.1 to 7.0.0-alpha.1.22052.8][2]\r\n  - **System.Resources.Extensions**: [from 7.0.0-alpha.1.21631.1 to 7.0.0-alpha.1.22052.8][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-alpha.1.21631.1 to 7.0.0-alpha.1.22052.8][2]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21631.1 to 7.0.0-alpha.1.22052.8][2]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21631.1 to 7.0.0-alpha.1.22052.8][2]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-alpha.1.21631.1 to 7.0.0-alpha.1.22052.8][2]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-alpha.1.21631.1 to 7.0.0-alpha.1.22052.8][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-alpha.1.21631.1 to 7.0.0-alpha.1.22052.8][2]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-alpha.1.21631.1 to 7.0.0-alpha.1.22052.8][2]\r\n  - **System.Windows.Extensions**: [from 7.0.0-alpha.1.21631.1 to 7.0.0-alpha.1.22052.8][2]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-alpha.1.21631.1 to 7.0.0-alpha.1.22052.8][2]\r\n  - **System.Text.Json**: [from 7.0.0-alpha.1.21631.1 to 7.0.0-alpha.1.22052.8][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.21631.1 to 7.0.0-alpha.1.22052.8][2]\r\n\r\n[2]: https://github.com/dotnet/runtime/compare/58663f7...c8f3b36\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6452)\r\n","Url":"https://github.com/dotnet/winforms/pull/6452","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6452)"},{"Id":"1091565474","IsPullRequest":true,"CreatedAt":"2022-01-03T21:51:49","Actor":"dotnet-maestro[bot]","Number":"6449","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20211230.1\r\n- **Date Produced**: December 30, 2021 3:36:49 PM UTC\r\n- **Commit**: 12ba11c57391a796290dd8775c74f3df26cdbc6b\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.21629.1 to 7.0.0-beta.21630.1][4]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21629.1 to 7.0.0-beta.21630.1][4]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.21629.1 to 7.0.0-beta.21630.1][4]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.21629.1 to 7.0.0-beta.21630.1][4]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.21629.1 to 7.0.0-beta.21630.1][4]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21629.1 to 7.0.0-beta.21630.1][4]\r\n\r\n[4]: https://github.com/dotnet/arcade/compare/88f5cdd...12ba11c\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6449)\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/6449","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6449)"},{"Id":"1092038578","IsPullRequest":false,"CreatedAt":"2022-01-03T13:52:43","Actor":"RuoYear","Number":"6453","RawContent":null,"Title":"Why does the UI designer need to scan the output directory? Cause it to keep looping \"loading designer you can continue working\"","State":"closed","Body":"* .NET Core Version: .NET 6.0.1\r\n\r\n* Have you experienced this same bug with .NET Framework?: NO\r\n\r\nHello, I am using visual studio 2022, and I upgraded my previous .NET Framework project to .NET 6, but when I use the designer, it just keeps prompting \"The designer is loading, you can use the designer in the background Continue to work while loading\".\r\nBut when I rebuild a similar project step by step, it can work normally for a while, but most of the time it still stays at \"Loading\", and only \"Creating VSCodeDomDesignerLoader\" is displayed in the output log.\r\n\r\nWhen I found the location where the log can be output in the options, I discovered why it scans the output file directory?\r\nI placed the output directory in a separate partition due to other requirements. As a result, it scanned \"System Volume Information\" and was denied access. Why did the designer do this when opening it?\r\nWhen I found this question and changed the output directory to a subfolder again, the designer worked. How to adjust the designer so that it will not affect the operation of the target folder in the root directory of the partition?\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6453","RelatedDescription":"Closed issue \"Why does the UI designer need to scan the output directory? Cause it to keep looping \"loading designer you can continue working\"\" (#6453)"},{"Id":"1092086744","IsPullRequest":false,"CreatedAt":"2022-01-02T19:39:36","Actor":"KlausLoeffelmann","Number":"6459","RawContent":null,"Title":"Let's consider adding a faster, modern rendering engine for custom 2D and Text rendering like Skia or Direct2D/DirectWrite","State":"open","Body":"Since this topic is one of my personal favorite topics, which I deal with as a hobby in my spare time, I have been experimenting with GDI+, DirectWrite/Direct2D and SkiaSharp a bit lately. While we've made significant improvements around GDI/GDI+ memory consumptions and efficiency, we hear more and more feedback that the WinForms community finds GDI+ too slow in its (rendering) core for modernizing older Framework Apps and moving them to .NET. And it makes sense: Customer's use more and more 4K monitors (often more than 1), and GDIPlus takes much longer time to render bigger area.\r\n\r\nSo, here are a couple of thoughts as a guideline for questions and discussions, which I think would help to form a better picture around this topic.\r\n\r\n* Do we need to consider this at all or does GDI/GDI+ suffice after all for the custom drawing things we want to do in WinForms?\r\n* **DirectX/Direct2D** is native to Window. Is that good or bad, is this a pro or a con argument?\r\n* Same question for **Skia(Sharp)** which is NOT native to Windows. But since it's the render engine for Google's chrome, it's been used by Edge browser indirectly. \r\n* Skia has an extremely easy way to render into PDF, which is an extreme plus for the typical WinForms (LOB Apps) audience. I am not aware that DirectX/Direct2D allows this equally easy.\r\n* DirectX/Direct2D is the base for rendering WinUI. Should we see XAML-Islands for WinUi 3 in the future (and I am not at all implying that we won't, just to be clear!), there might be easier migration options for content rendering going forward.\r\n* Skia would introduce external dependencies, which we might not want or like. Or do we? For this, the next issue might be relevant:\r\n* Is this (no matter what technology we would go for) something which we want to have as an add-on or deeper integrated into WinForms? Would we like to - for example - have a control like the DataGridView, which is completely rendered by GDI/GDI+ and not a wrapper around some Win32 control, refactored so it would be rendered by that modern rendering engine?\r\n* Are there any additional rendering engine options we should include in the discussion?\r\n \r\nHere is a good document to get the essentials of Skia in the context of GDI/GDI+:\r\nhttps://www.chromium.org/developers/design-documents/graphics-and-skia\r\n\r\nHere are the (visual) results of a .NET 6 app I wrote and experimented with. \r\n\r\nDISCLAIMER: Please note, that I did not use the existing SkiaSharp WinForms controls, since they pull in .NET Framework dependencies and the OpenGL version of the Skia WinForms control is based on a rather old (Framework) version of the OpenTK's GLControl. While reimplementing the SkiaSharp controls based on the latest version of OpenTK (5.n) works for most of the things I tried reasonably well, I had TONS of problems when rendering circles, ellipses (which are internally seem to be converted into arc-based paths, which I think is the problem) and the alike and could only make those work on one of my several test machines, and also only with a BIG memory leak.\r\n\r\nThis demo just animates a few hundred Circles in different (transparent) colors and bounces them off the boundaries:\r\n\r\nThis is GDI+:\r\n![SkiaDemoGdiPlus_Small](https://user-images.githubusercontent.com/9663150/147887398-3e47e807-106b-4ddb-856b-40ec0c8214aa.gif)\r\n\r\nThis is Skia:\r\nhttps://user-images.githubusercontent.com/9663150/147891114-bf532588-a87b-4436-a7e3-fc861272191c.mp4\r\n\r\nThis is Skia based on OpenGL:\r\nhttps://user-images.githubusercontent.com/9663150/147890994-74c26c8a-4a33-496c-a125-85f8c2c9f2fc.mp4\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6459","RelatedDescription":"Open issue \"Let's consider adding a faster, modern rendering engine for custom 2D and Text rendering like Skia or Direct2D/DirectWrite\" (#6459)"},{"Id":"1091813563","IsPullRequest":true,"CreatedAt":"2022-01-01T13:47:52","Actor":"dotnet-maestro[bot]","Number":"6451","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20211231.1\r\n- **Date Produced**: January 1, 2022 12:11:36 AM UTC\r\n- **Commit**: 58663f73f7b43403d9c68a16b831dbd24baa7625\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-alpha.1.21630.8 to 7.0.0-alpha.1.21631.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-alpha.1.21630.8 to 7.0.0-alpha.1.21631.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-alpha.1.21630.8 to 7.0.0-alpha.1.21631.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-alpha.1.21630.8 to 7.0.0-alpha.1.21631.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-alpha.1.21630.8 to 7.0.0-alpha.1.21631.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21630.8 to 7.0.0-alpha.1.21631.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.21630.8 to 7.0.0-alpha.1.21631.1][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-alpha.1.21630.8 to 7.0.0-alpha.1.21631.1][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-alpha.1.21630.8 to 7.0.0-alpha.1.21631.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-alpha.1.21630.8 to 7.0.0-alpha.1.21631.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-alpha.1.21630.8 to 7.0.0-alpha.1.21631.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-alpha.1.21630.8 to 7.0.0-alpha.1.21631.1][1]\r\n  - **System.CodeDom**: [from 7.0.0-alpha.1.21630.8 to 7.0.0-alpha.1.21631.1][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-alpha.1.21630.8 to 7.0.0-alpha.1.21631.1][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-alpha.1.21630.8 to 7.0.0-alpha.1.21631.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-alpha.1.21630.8 to 7.0.0-alpha.1.21631.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-alpha.1.21630.8 to 7.0.0-alpha.1.21631.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-alpha.1.21630.8 to 7.0.0-alpha.1.21631.1][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-alpha.1.21630.8 to 7.0.0-alpha.1.21631.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-alpha.1.21630.8 to 7.0.0-alpha.1.21631.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21630.8 to 7.0.0-alpha.1.21631.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21630.8 to 7.0.0-alpha.1.21631.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-alpha.1.21630.8 to 7.0.0-alpha.1.21631.1][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-alpha.1.21630.8 to 7.0.0-alpha.1.21631.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-alpha.1.21630.8 to 7.0.0-alpha.1.21631.1][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-alpha.1.21630.8 to 7.0.0-alpha.1.21631.1][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-alpha.1.21630.8 to 7.0.0-alpha.1.21631.1][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-alpha.1.21630.8 to 7.0.0-alpha.1.21631.1][1]\r\n  - **System.Text.Json**: [from 7.0.0-alpha.1.21630.8 to 7.0.0-alpha.1.21631.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.21630.8 to 7.0.0-alpha.1.21631.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/07ed923...58663f7\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6451)","Url":"https://github.com/dotnet/winforms/pull/6451","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6451)"},{"Id":"1091432786","IsPullRequest":false,"CreatedAt":"2021-12-31T14:59:35","Actor":"randydejesusmarte","Number":"6444","RawContent":null,"Title":"C# need a inputBox similar to visual basic ","State":"closed","Body":"","Url":"https://github.com/dotnet/winforms/issues/6444","RelatedDescription":"Closed issue \"C# need a inputBox similar to visual basic \" (#6444)"},{"Id":"1091565738","IsPullRequest":true,"CreatedAt":"2021-12-31T13:44:59","Actor":"dotnet-maestro[bot]","Number":"6450","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20211230.8\r\n- **Date Produced**: December 31, 2021 10:36:26 AM UTC\r\n- **Commit**: 07ed923f571848a9b1ff3830dcce70230bdfad0e\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.CodeDom**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **System.Text.Json**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.21630.1 to 7.0.0-alpha.1.21630.8][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/af9202a...07ed923\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6450)","Url":"https://github.com/dotnet/winforms/pull/6450","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6450)"},{"Id":"1091492533","IsPullRequest":true,"CreatedAt":"2021-12-31T09:23:19","Actor":"gpetrou","Number":"6448","RawContent":null,"Title":"Enable nullability in KeysConverter","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in KeysConverter.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6448)","Url":"https://github.com/dotnet/winforms/pull/6448","RelatedDescription":"Open PR \"Enable nullability in KeysConverter\" (#6448)"},{"Id":"1091472360","IsPullRequest":true,"CreatedAt":"2021-12-31T08:21:58","Actor":"gpetrou","Number":"6445","RawContent":null,"Title":"Enable nullability in ListBindingConverter","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in ListBindingConverter.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6445)","Url":"https://github.com/dotnet/winforms/pull/6445","RelatedDescription":"Open PR \"Enable nullability in ListBindingConverter\" (#6445)"},{"Id":"1091095844","IsPullRequest":true,"CreatedAt":"2021-12-30T13:49:44","Actor":"dotnet-maestro[bot]","Number":"6443","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20211230.1\r\n- **Date Produced**: December 30, 2021 11:23:23 AM UTC\r\n- **Commit**: af9202a6daf91ba58d5d58bafbb6581aebb8a642\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.CodeDom**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **System.Text.Json**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.21628.3 to 7.0.0-alpha.1.21630.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/eff08ef...af9202a\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6443)","Url":"https://github.com/dotnet/winforms/pull/6443","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6443)"},{"Id":"1091095464","IsPullRequest":true,"CreatedAt":"2021-12-30T13:48:53","Actor":"dotnet-maestro[bot]","Number":"6442","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20211229.1\r\n- **Date Produced**: December 29, 2021 2:28:16 PM UTC\r\n- **Commit**: 88f5cddd49bfceca1761a93d16a0a3b5c012f521\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.21628.1 to 7.0.0-beta.21629.1][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21628.1 to 7.0.0-beta.21629.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.21628.1 to 7.0.0-beta.21629.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.21628.1 to 7.0.0-beta.21629.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.21628.1 to 7.0.0-beta.21629.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21628.1 to 7.0.0-beta.21629.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/a248c67...88f5cdd\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6442)","Url":"https://github.com/dotnet/winforms/pull/6442","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6442)"},{"Id":"1090743950","IsPullRequest":true,"CreatedAt":"2021-12-29T21:30:51","Actor":"dreddy-work","Number":"6441","RawContent":null,"Title":"Disable template localizer tool","State":"closed","Body":"Until the issue discussed here  https://github.com/dotnet/winforms/pull/6319#discussion_r773423442 resolved.\r\n\r\nrelated to #6319 \n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6441)","Url":"https://github.com/dotnet/winforms/pull/6441","RelatedDescription":"Closed or merged PR \"Disable template localizer tool\" (#6441)"},{"Id":"1090510386","IsPullRequest":true,"CreatedAt":"2021-12-29T17:26:15","Actor":"dotnet-maestro[bot]","Number":"6438","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20211228.3\r\n- **Date Produced**: December 29, 2021 12:57:16 AM UTC\r\n- **Commit**: eff08ef067fde28e56f19a5d95ca5aba51ac0a75\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.CodeDom**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **System.Text.Json**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.21628.1 to 7.0.0-alpha.1.21628.3][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/bdc6ad7...eff08ef\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6438)","Url":"https://github.com/dotnet/winforms/pull/6438","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6438)"},{"Id":"1090551575","IsPullRequest":false,"CreatedAt":"2021-12-29T14:19:41","Actor":"tbambuch","Number":"6440","RawContent":null,"Title":"UserControls inside another UserControl are not scaled in PerMonitorV2 HDPI mode","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n6\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\nIf you place UserControl with AutoScaleMode = Inherit inside another UserControl with AutoScaleMode = Inherit, the control will not be scaled when moving the form to another screen with different dpi.\r\n\r\n\r\n**Expected behavior:**\r\nscale the control, including any child controls\r\n\r\n**Minimal repro:**\r\nSample project attached. My screen setup is 100% primary screen and 150% secondary screen.\r\nThe project consists of a single Form with AutoScaleMode = Dpi and a UserControl with AutoScaleMode = Inherit. Inside this UserControl is another UserControl with AutoScaleMode = Inherit, too\r\nApplication.SetHighDpiMode is called in Program.cs\r\nThe screenshot shows the form on a non-primary screen and a primary one. On the non-primary screen, only the outer UserControl is scaled, not the inner one\r\n\r\n![image](https://user-images.githubusercontent.com/3384955/147671362-08471a29-400a-4171-b852-d34013045fb2.png)\r\n\r\n[DpiTest2.zip](https://github.com/dotnet/winforms/files/7789237/DpiTest2.zip)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6440","RelatedDescription":"Open issue \"UserControls inside another UserControl are not scaled in PerMonitorV2 HDPI mode\" (#6440)"},{"Id":"1090537950","IsPullRequest":false,"CreatedAt":"2021-12-29T13:57:16","Actor":"tbambuch","Number":"6439","RawContent":null,"Title":"Controls are scaled multiple times in PerMonitorV2 HDPI mode","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n6.0\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\nContainerControls with Visible = false are scaled multiple times in the PerMonitorV2 mode if moved to the another screen and then made visible\r\n\r\n**Expected behavior:**\r\nscaling (Size, Location, Margins, Paddings) should be made only once\r\n\r\n**Minimal repro:**\r\nSample project attached. My screen setup is 100% primary screen and 150% secondary screen.\r\nThe project consists of a single Form with AutoScaleMode = Dpi and a UserControl with AutoScaleMode = Inherit\r\nApplication.SetHighDpiMode is called in Program.cs\r\nThere are 2 equal controls placed on the form, one has Visible set to false. There is a button which makes the control visible.\r\nIf you start on the primary (100%) screen, make the control visible and then move the form on a second screen, everything looks fine (the upper form on the screenshot)\r\nIf you first move the form on the second screen and then make the control visible, it gets scaled twice, resulting in wrong Location, Size and Padding (the bottom form on the screenshot)\r\n\r\n![image](https://user-images.githubusercontent.com/3384955/147668490-0c3978cf-1793-4acc-8199-235f6b8134a0.png)\r\n\r\n[DpiTest.zip](https://github.com/dotnet/winforms/files/7789107/DpiTest.zip)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6439","RelatedDescription":"Open issue \"Controls are scaled multiple times in PerMonitorV2 HDPI mode\" (#6439)"},{"Id":"1090509900","IsPullRequest":true,"CreatedAt":"2021-12-29T13:49:06","Actor":"dotnet-maestro[bot]","Number":"6437","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20211228.1\r\n- **Date Produced**: December 28, 2021 4:57:14 PM UTC\r\n- **Commit**: a248c67a80f8ec9d10872e88729de0d070f3d64e\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.21627.1 to 7.0.0-beta.21628.1][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21627.1 to 7.0.0-beta.21628.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.21627.1 to 7.0.0-beta.21628.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.21627.1 to 7.0.0-beta.21628.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.21627.1 to 7.0.0-beta.21628.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21627.1 to 7.0.0-beta.21628.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/28ea474...a248c67\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6437)","Url":"https://github.com/dotnet/winforms/pull/6437","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6437)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-01-06T05:30:35.9177615Z","RunDurationInMilliseconds":494}