{"Data":{"GitHub":{"Issues":[{"Id":"759052384","IsPullRequest":false,"CreatedAt":"2020-12-08T04:30:17","Actor":"The-MAZZTer","Number":"4336","RawContent":null,"Title":"In Designer, Nesting a TreeView in a UserControl in a second TabPage on a Form hangs DesignServerTools.exe","State":"open","Body":"Apologies if this is not the right repo to post this in.\r\n\r\n[Edit: I found instruction to send feedback using the VS Feedback tool in Visual Studio and I have done so, please close this issue here if it is not appropriate for this repo.]\r\n\r\n* .NET Core Version: \r\nMicrosoft.NETCore.App 5.0.0\r\nMicrosoft.WindowsDesktop.App 5.0.0\r\nSDK 5.0.100\r\nVisual Studio Community Version 16.8.2\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\nIn the designer, upon activating a second tab page containing a User Control with a TreeView in it, VS hangs.\r\n\r\n**Expected behavior:**\r\nVisual Studio does not hang and the designer continues to work normally.\r\n\r\n**Minimal repro:**\r\n[SetFocusBug.zip](https://github.com/dotnet/winforms/files/5656851/SetFocusBug.zip)\r\n\r\nThis project was created with the following steps:\r\n* Create a Windows Form App (.NET) project.\r\n* Open Form1 in the designer.\r\n* Add a TabControl and keep the two tabs.\r\n* Add a User Control to the project. Open it in design mode.\r\n* Add a TreeView to the User Control and build the project to compile it.\r\n* Add the User Control to the second TabPage on the Form.\r\n* Save form.\r\n* Switch to the first TabPage and then back to the second and the hang should occur.\r\n* Upon recovering, simply reopen the form and switch to the second TabPage to cause the hang again (assuming the save went through).\r\n\r\nIf using the attached project, build before opening the form (hang does not happen until build is made and designer reopened).\r\n\r\nYou may also need to rebuild in that VS session, or with the designer open. I am seeing inconsistent behavior where the designer does not show the User Control at all after I open the project in a fresh session of VS.\r\n\r\nThese variants of the project do NOT produce any hangs or other undesirable behavior:\r\n* UserControl does not contain TreeView\r\n* TreeView directly on TabPage without user control\r\n* UserControl with TreeView on first TabPage (at least, having it visible when the form loads does not hang)\r\n\r\nI attempted to debug both VS and DesignServerTools but I am not sure exactly what I am looking at.\r\n\r\nVS' UI thread seems to hang waiting for a response from the DesignServerTools for a Hit Test on the designer or a control or something.\r\n\r\nOne of the DesignServerTools threads that stuck out to me seems to get struck calling the native SetFocus WinAPI whenever I happened to pause it. It seems to call it but the call never completes if I try to step over it.\r\n\r\nKilling the DesignServerTools process tends to allow VS to recover so I believe the problem lies with DesignServerTools.","Url":"https://github.com/dotnet/winforms/issues/4336","RelatedDescription":"Open issue \"In Designer, Nesting a TreeView in a UserControl in a second TabPage on a Form hangs DesignServerTools.exe\" (#4336)"},{"Id":"758998412","IsPullRequest":false,"CreatedAt":"2020-12-08T02:12:13","Actor":"Olina-Zhang","Number":"4335","RawContent":null,"Title":"AccessibilityInsights: ComboBox items should support ScrollItem Pattern when list shows scrollbar","State":"open","Body":"* .NET Core Version: \r\n6.0.100-alpha.1.20603.2\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes,\r\nThis is a regression issue, can repro in .Net 4.8 for comboBox with all dropdownstyle values, and in .Net 4.7.2, just comboBox items with comboBox's dropdownstyle: simple can repro this issue.\r\n\r\n**Minimal repro:**\r\n1. Create a Winforms .Net Core app with 3 comboBox controls, set their's DropDownHeight property to show scrollbar for comboBox list\r\nOr open attached sample project and run Core app directly\r\n[CoreTesting4.zip](https://github.com/dotnet/winforms/files/5656313/CoreTesting4.zip)\r\n2. Use Accessibility Insights or Inspect tool to test ComboBox dropdown items\r\n\r\n**Actual behavior:**\r\nAccessibility Insights detects errors for comboBox items, which don't support ScrollItem Pattern\r\n![image](https://user-images.githubusercontent.com/26474449/101428363-84df1c00-393b-11eb-8429-396ec254c352.png)\r\n\r\n**Expected behavior:**\r\nComboBox items for comboBox's all dropdownstyles support ScrollItem Pattern\r\n","Url":"https://github.com/dotnet/winforms/issues/4335","RelatedDescription":"Open issue \"AccessibilityInsights: ComboBox items should support ScrollItem Pattern when list shows scrollbar\" (#4335)"},{"Id":"758835875","IsPullRequest":true,"CreatedAt":"2020-12-07T23:21:08","Actor":"Tanya-Solyanik","Number":"4334","RawContent":null,"Title":"ensure that editor config follows runtime coding style (vars when type is obvious)","State":"closed","Body":"From https://github.com/dotnet/runtime/blob/master/docs/coding-guidelines/coding-style.md:\r\n`We only use var when it's obvious what the variable type is (e.g. var stream = new FileStream(...) not var stream = OpenStandardInput()).`\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4334)","Url":"https://github.com/dotnet/winforms/pull/4334","RelatedDescription":"Closed or merged PR \"ensure that editor config follows runtime coding style (vars when type is obvious)\" (#4334)"},{"Id":"758725189","IsPullRequest":true,"CreatedAt":"2020-12-07T20:17:15","Actor":"cristianosuzuki77","Number":"4332","RawContent":null,"Title":"Loc checkin","State":"closed","Body":"Latest new translations and few translations updates.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4332)","Url":"https://github.com/dotnet/winforms/pull/4332","RelatedDescription":"Closed or merged PR \"Loc checkin\" (#4332)"},{"Id":"758394144","IsPullRequest":true,"CreatedAt":"2020-12-07T12:05:45","Actor":"SergeySmirnov-Akvelon","Number":"4331","RawContent":null,"Title":"Refactored ListBox.ItemArray","State":"closed","Body":"Based on changes from #4193 \r\n\r\n## Proposed changes\r\n- Made a separate \"ItemArray\" classes out of a \"ListBox.ItemArray\" subclasses\r\n- Refactored ListBox.ItemArray\r\n- Enabled NRT\r\n- Added usage of a list of objects instead of an array of objects\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n- No \r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .NET Core 5.0.100-rc.2.20479.15\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4331)","Url":"https://github.com/dotnet/winforms/pull/4331","RelatedDescription":"Closed or merged PR \"Refactored ListBox.ItemArray\" (#4331)"},{"Id":"758318409","IsPullRequest":false,"CreatedAt":"2020-12-07T09:07:25","Actor":"vsfeedback","Number":"4330","RawContent":null,"Title":"Can't set size of the form","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/Cant-set-size-of-the-form/1278773)._\n\n---\n[severity:It's more difficult to complete my work]\r\nCan't set size of the form.\nWindows forms app.\n\nBefore form2. Show() command - it's OK - Size setted.\n\nBut just after step through form2. Show() - Width is setting up to 132.\n\n( Maximize box = false;\nMinimize box = false;\nBorder style = none; )\n\nWhat can do for set Width of form2 to e.g. 50 value ?\n\nThanks.\n\nScreenshot from VS - attached.\n\n---\n### Original Comments\n\n#### Feedback Bot on 12/7/2020, 04:08 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/winforms/issues/4330","RelatedDescription":"Open issue \"Can't set size of the form\" (#4330)"},{"Id":"758302269","IsPullRequest":true,"CreatedAt":"2020-12-07T08:45:30","Actor":"manuelvalenzuela","Number":"4329","RawContent":null,"Title":"Fixes 3437. Setting a TreeNode to a certain position in a TreeNodeCollection is Replacing the existing one","State":"open","Body":"Fixes #3437\r\n\r\n## Proposed changes\r\n\r\n- Setter of method this[int index] of class TreeNodeCollection is replacing the existing TreeNode instead of adding it\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4329)","Url":"https://github.com/dotnet/winforms/pull/4329","RelatedDescription":"Open PR \"Fixes 3437. Setting a TreeNode to a certain position in a TreeNodeCollection is Replacing the existing one\" (#4329)"},{"Id":"758227856","IsPullRequest":true,"CreatedAt":"2020-12-07T07:50:51","Actor":"SergeySmirnov-Akvelon","Number":"4328","RawContent":null,"Title":"Fix PoliCheck issue","State":"closed","Body":"## Proposed changes\r\n- Fixed comment \r\n\r\n## Customer Impact\r\n- No \r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .NET Core 5.0.100-rc.2.20479.15\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4328)","Url":"https://github.com/dotnet/winforms/pull/4328","RelatedDescription":"Closed or merged PR \"Fix PoliCheck issue\" (#4328)"},{"Id":"757981747","IsPullRequest":true,"CreatedAt":"2020-12-07T05:53:29","Actor":"vladimir-krestov","Number":"4325","RawContent":null,"Title":"Moving `CheckedListBox` nested types to separate files","State":"closed","Body":"## Proposed changes\r\n\r\n- Move nested classes. Only refactoring without functional changes \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- No, just refactoring\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4325)","Url":"https://github.com/dotnet/winforms/pull/4325","RelatedDescription":"Closed or merged PR \"Moving `CheckedListBox` nested types to separate files\" (#4325)"},{"Id":"758010945","IsPullRequest":false,"CreatedAt":"2020-12-07T05:07:53","Actor":"Shadowblitz16","Number":"4326","RawContent":null,"Title":"Add MainMenu, ToolBar, and ContextMenu back and update them","State":"closed","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n<!--\r\n    A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\r\n  -->\r\nMainMenu, ToolBar, ContextMenu and StatusBar should be readded to WinForms and updated to include features that weren't added to winforms so we can maintain backward compatibility to win32 controls.\r\n\r\nhere are some features that would need to be updated..\r\n- Allow mdi children to contain separate mainmenus\r\n- Update style to fit win 10 and possibly win 8\r\n- Allow any control to be added to MainMenu, ToolBar, ContextMenu, StatusBar\r\n- Allow Icons\r\n\r\n**Describe the solution you'd like and alternatives you've considered**\r\n<!--\r\n    A clear and concise description of what you want to happen. This includes:\r\n    - Description of what API need to be added or changed.\r\n    - Code that shows the surface area of the API.\r\n    - Code that shows real world scenarios, and how they would otherwise be handled.\r\n    - Details showing the usage/consumption of the proposed new API, and alternatives (e.g. not having this API).\r\n    - Any other context or screenshots about the feature request here.\r\n\r\n    :exclamation: Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md for more details\r\n\r\n  -->\r\nI have already tried using plain win32 and mfc to replace winforms but find the libraries to either be too difficult to use or it uses c++ which I would rather use c or c#.\r\n\r\nI am not sure what needs to be changed to do this\r\nThis implementation would be used to maintain backward compatibility with older windows operating systems.\r\n\r\n\r\n\r\n\r\n\r\n**Will this feature affect UI controls?**\r\n<!--\r\n    Yes / No\r\n\r\n    If yes, describe the following:\r\n\r\n        - Will VS Designer need to support the feature? If yes, describe how you expect it to funсtion.\r\n        - What impact will it have on accessibility?\r\n        - Will this feature need to be localized or be localizable?\r\n  -->\r\nYes\r\nIt would need supported by the designer","Url":"https://github.com/dotnet/winforms/issues/4326","RelatedDescription":"Closed issue \"Add MainMenu, ToolBar, and ContextMenu back and update them\" (#4326)"},{"Id":"758023666","IsPullRequest":false,"CreatedAt":"2020-12-06T21:10:20","Actor":"LethiferousMoose","Number":"4327","RawContent":null,"Title":"Documentation for ListControl.SelectedValue is misleading.","State":"open","Body":"The documentation for `ListControl.SelectedValue` is misleading, it does not explicitly call out that a data manager is required for it to return a value:\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.listcontrol.selectedvalue?view=net-5.0\r\n\r\n> An object containing the value of the member of the data source specified by the ValueMember property.\r\n\r\nThis makes it sound like all you need to do is have a `ValueMember` provided to the control, but if look at the code for `ListControl` you can see it needs both a `ValueMember` AND a `DataManager`:\r\n\r\n```c#\r\nget\r\n{\r\n    if (SelectedIndex != -1 && _dataManager != null)\r\n    {\r\n        object currentItem = _dataManager[SelectedIndex];\r\n        return FilterItemOnProperty(currentItem, _valueMember.BindingField);\r\n    }\r\n\r\n    return null;\r\n}\r\n```\r\n\r\nAlthough the docs do say \"data source\" that is rather vague and open to interpretation, if something is required for a feature to work, it should be called out.","Url":"https://github.com/dotnet/winforms/issues/4327","RelatedDescription":"Open issue \"Documentation for ListControl.SelectedValue is misleading.\" (#4327)"},{"Id":"756549683","IsPullRequest":false,"CreatedAt":"2020-12-06T18:21:53","Actor":"wjk","Number":"4321","RawContent":null,"Title":"Radio button \"arrow order\" cannot be configured","State":"closed","Body":"## Problem description\r\nWhen I add multiple RadioButton controls to a form, they are navigated between as a group using the arrow keys instead of the Tab key. (Only the focused radio button in a group has `TabStop=true`.) However, the order in which the controls are added to this \"arrow order\" array appears to depend on the order with which they were added to the form in the `InitializeComponent()` method. Since the order of calls in this method cannot be manually changed (without being immediately reverted by the designer), I cannot set the \"arrow order\" myself. In my project, the runtime \"arrow order\" happens to be bottom-to-top (pressing the up arrow moves the focus to the next radio button _below_ the currently focused button), but I believe that is due to sheer random chance. It could just as well be in a meaningless, seemingly random order.\r\n\r\nI need a way to ensure that the \"arrow order\" is logically related to the visual position of the controls on the form. I don't know what this should look like in terms of API, as (a) the ordering of a group of radio buttons needs to be independent of any other group of radio buttons on the form, and (b) this logic appears to be performed by native code, not by Windows Forms proper.\r\n\r\n_Have you experienced this same bug with .NET Framework?_ \r\nHave not checked, as .NET Framework is EOL.\r\n\r\n## Version info\r\n```\r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.100\r\n Commit:    5044b93829\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.20262\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0\r\n  Commit:  cf258a14b7\r\n\r\n.NET SDKs installed:\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```","Url":"https://github.com/dotnet/winforms/issues/4321","RelatedDescription":"Closed issue \"Radio button \"arrow order\" cannot be configured\" (#4321)"},{"Id":"756951523","IsPullRequest":true,"CreatedAt":"2020-12-05T04:35:06","Actor":"msoeken","Number":"4324","RawContent":null,"Title":"Typo in README","State":"closed","Body":"Just a small typo in the README.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4324)","Url":"https://github.com/dotnet/winforms/pull/4324","RelatedDescription":"Closed or merged PR \"Typo in README\" (#4324)"},{"Id":"756808429","IsPullRequest":false,"CreatedAt":"2020-12-04T05:13:43","Actor":"Olina-Zhang","Number":"4323","RawContent":null,"Title":"AccessibilityInsights: Misplaced bounding rectangle for ComboBox items when drop down shows a scrollbar ","State":"open","Body":"* .NET Core Version: \r\n6.0.100-alpha.1.20603.2\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes, \r\nThis is a regression issue, can repro in .Net 4.8, and cannot repro in .Net 4.7.2.\r\n\r\n**Minimal repro:**\r\n1. Create a Winforms .Net Core app with 3 ComboBox controls,  set their's DropDownHeight property to show scrollbar for comboBox list\r\nOr open attached sample project and run Core app directly\r\n[CoreTesting4.zip](https://github.com/dotnet/winforms/files/5640705/CoreTesting4.zip)\r\n2. Use [Accessibility Insights](https://accessibilityinsights.io/en/downloads) tool to test ComboBox dropdown items\r\n\r\n**Actual behavior:**\r\nFor some ComboBox list items, there is wrong bounding rectangle if scrollbar is not in minimal position(value 0, scrolled to top)\r\nAccessibilityInsights:\r\n![image](https://user-images.githubusercontent.com/26474449/101426857-b99da400-3938-11eb-9d29-03efb0f37bf1.png)\r\nInspect:\r\n![image](https://user-images.githubusercontent.com/26474449/101427141-4cd6d980-3939-11eb-8b2c-65670551d4e9.png)\r\n\r\n**Expected behavior:**\r\nComboBox items bounding rectangle for accessibility Insights are in correct position: in the list pane.\r\n![image](https://user-images.githubusercontent.com/26474449/101124673-75f22400-3632-11eb-8c7d-3134f3ba5425.png)\r\n","Url":"https://github.com/dotnet/winforms/issues/4323","RelatedDescription":"Open issue \"AccessibilityInsights: Misplaced bounding rectangle for ComboBox items when drop down shows a scrollbar \" (#4323)"},{"Id":"756746483","IsPullRequest":true,"CreatedAt":"2020-12-04T02:31:43","Actor":"RussKie","Number":"4322","RawContent":null,"Title":"Correct imagelist binding for ListView groups (servicing)","State":"open","Body":"(cherry picked from commit db160691c31991b78a3b58860ba5fecd0de57bab)\r\n\r\n\r\nResolves #4310\r\nResolves dotnet/winforms-designer#2057\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n\r\n## Proposed changes\r\n\r\nListViewGroups can't have title images set via either key or index, as propertygrid is unable to discover the bound imagelist.\r\nCorrect the missing binding by applying `RelatedImageListAttribute` to respective properties.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Currently it is impossible to set title images via UI tools (this includes Visual Studio designer). Thus affects the perception of working state of the Windows Forms designer.\r\n\r\n## Regression? \r\n\r\n- No, support for `ListViewGroup` title images was introduced in .NET 5.0 in #3490.\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![image](https://user-images.githubusercontent.com/4403806/100972543-1a218f80-358d-11eb-91a7-22ffe63fc489.png)\r\n\r\n\r\n### After\r\n\r\n![image](https://user-images.githubusercontent.com/4403806/100972337-bc8d4300-358c-11eb-8680-75b39d5146aa.png)\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- By substituting binaries under C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\6.0.0-alpha.1.20570.2 and running a sample project\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4322)","Url":"https://github.com/dotnet/winforms/pull/4322","RelatedDescription":"Open PR \"Correct imagelist binding for ListView groups (servicing)\" (#4322)"},{"Id":"755910903","IsPullRequest":true,"CreatedAt":"2020-12-04T02:25:21","Actor":"RussKie","Number":"4318","RawContent":null,"Title":"Correct imagelist binding for ListView groups","State":"closed","Body":"\r\n\r\nResolves #4310\r\nResolves dotnet/winforms-designer#2057\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n\r\n## Proposed changes\r\n\r\nListViewGroups can't have title images set via either key or index, as propertygrid is unable to discover the bound imagelist.\r\nCorrect the missing binding by applying `RelatedImageListAttribute` to respective properties.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Currently it is impossible to set title images via UI tools (this includes Visual Studio designer). Thus affects the perception of working state of the Windows Forms designer.\r\n\r\n## Regression? \r\n\r\n- No, support for `ListViewGroup` title images was introduced in .NET 5.0 in #3490.\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![image](https://user-images.githubusercontent.com/4403806/100972543-1a218f80-358d-11eb-91a7-22ffe63fc489.png)\r\n\r\n\r\n### After\r\n\r\n![image](https://user-images.githubusercontent.com/4403806/100972337-bc8d4300-358c-11eb-8680-75b39d5146aa.png)\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- By substituting binaries under C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\6.0.0-alpha.1.20570.2 and running a sample project\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4318)","Url":"https://github.com/dotnet/winforms/pull/4318","RelatedDescription":"Closed or merged PR \"Correct imagelist binding for ListView groups\" (#4318)"},{"Id":"754846132","IsPullRequest":false,"CreatedAt":"2020-12-04T02:25:21","Actor":"RussKie","Number":"4310","RawContent":null,"Title":"The value of ListViewGroup’s TitleImageIndex cannot be saved successfully","State":"closed","Body":"Duplicate of https://github.com/dotnet/winforms-designer/issues/2057\r\n\r\n## Minimal Reproduction Scenario\r\n1.\tCreate a winforms .NET 5.0 project.\r\n2.\tDrag and drop a ListView & a ImageList to Form.\r\n3.\tChoose one image to ImageList, then add this code line into Form1.designer.cs file: this.listView1.GroupImageList = this.imageList1;\r\n4.\tOpen form designer, add a ListViewGroup(Header = Group1) and a ListViewItem(Text = TextStr).\r\n5.\tSet the Group property of ListViewItem to ‘Group1’.\r\n6.\tSet the TitleImageIndex property of ListViewGroup to ‘0’.\r\n7.\tSave the project, close form designer and reopen again.\r\n\r\n<!--\r\n    How can this issue be reproduced? \r\n-->\r\n\r\n## Expected Behavior\r\nThe image that set previously should not disappear.\r\n<!--\r\n    Please indicate the behavior you expect to see.\r\n-->\r\n\r\n## Current Behavior\r\nThe image that set previously disappeared.\r\n![CodeLine](https://user-images.githubusercontent.com/18568603/86090448-af9b8d80-badc-11ea-832f-e170241e2ac9.PNG)\r\n![NotSaved](https://user-images.githubusercontent.com/18568603/86090426-a6122580-badc-11ea-85d0-46cb5082a332.gif)\r\n\r\n<!--\r\n    Please provide a description of the current buggy behavior\r\n-->\r\n\r\n<!--\r\n    If this issue related to any other issues, please indicate that relationship.\r\n-->\r\n","Url":"https://github.com/dotnet/winforms/issues/4310","RelatedDescription":"Closed issue \"The value of ListViewGroup’s TitleImageIndex cannot be saved successfully\" (#4310)"},{"Id":"754571949","IsPullRequest":false,"CreatedAt":"2020-12-04T02:00:35","Actor":"manfromarce","Number":"4307","RawContent":null,"Title":"Edit Assembly Info button is missing","State":"closed","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: 3.1 / 5.0\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: No\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\nIn .NET Framework Windows Forms projects there is a button to edit application assembly information in project Properties page. This button is missing in C# .NET Core projects, while in Vb.Net .NET Core Projects is visible but disabled. I'm using Visual Studio 16.8.2 and this happens in both .NET Core 3.1 and .NET 5.0.\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n**Expected behavior:**\r\nI'd like to edit assembly information like in .NET Framework.\r\n![Immagine 2020-12-01 175534](https://user-images.githubusercontent.com/45036600/100772381-c6ce0680-33ff-11eb-87f9-2e0d4451c2bc.png)\r\n\r\n**Minimal repro:**\r\nJust create a new .NET Core project and go to Project > Properties...\r\n","Url":"https://github.com/dotnet/winforms/issues/4307","RelatedDescription":"Closed issue \"Edit Assembly Info button is missing\" (#4307)"},{"Id":"755781950","IsPullRequest":false,"CreatedAt":"2020-12-04T00:44:20","Actor":"Marie-Shi","Number":"4315","RawContent":null,"Title":"NotifyIcon balloon is hided when FormBorderStyle property is set to None and form is maximized","State":"closed","Body":"* .NET Core Version: \r\n.Net 6.0.100-alpha.1.20602.2 from master branch\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**More info:**\r\nThis is not a regression issue and it can also repro on Framework project.\r\n\r\n**Minimal repro:**\r\n1.\tExtract “**NotifyIcon_hide_issue.zip**” and open it in VS.\r\n[NotifyIcon_hide_issue.zip](https://github.com/dotnet/winforms/files/5633442/NotifyIcon_hide_issue.zip)\r\n\r\n2.\tBuild and run this project.\r\n3.\tClick ‘**Border None**’ button first, next click ‘**Change State**’ button to make form maximized.\r\n4.\tClick ‘**Notify**’ button and observe whether NotifyIcon balloon is shown.\r\n\r\n**Actual behavior:**\r\nNotifyIcon balloon text is not shown on screen(not shown in front of the maximized form), but actually it is hided in Windows Task bar. Please see the attachment:\r\n[NotifyIcon_Hide_video.zip](https://github.com/dotnet/winforms/files/5633440/NotifyIcon_Hide_video.zip)\r\n![Notifyicon_not_show](https://user-images.githubusercontent.com/45864017/100959528-78347f80-3559-11eb-960e-f896506645ff.png)\r\n\r\n**Expected behavior:**\r\nThe NotifyIcon balloon text should be shown in screen(in front of the maximized form) when the form is maximized.\r\n![notifyicon_show](https://user-images.githubusercontent.com/45864017/100959500-5fc46500-3559-11eb-8977-6fe61bdeb5f0.png)\r\n","Url":"https://github.com/dotnet/winforms/issues/4315","RelatedDescription":"Closed issue \"NotifyIcon balloon is hided when FormBorderStyle property is set to None and form is maximized\" (#4315)"},{"Id":"756187988","IsPullRequest":false,"CreatedAt":"2020-12-03T13:19:29","Actor":"SergeySmirnov-Akvelon","Number":"4320","RawContent":null,"Title":"[Accessibility] ListViewItem has no keyboard tooltip","State":"open","Body":"- .NET Core Version: 5.0\r\n- Have you experienced this same bug with .NET Framework?: Yes\r\n\r\n**Problem description:**\r\n* ListViewItem has no keyboard tooltip when pressing the right/left arrow or Tab button to navigate to a ListViewItem which got the keyboard focus\r\n\r\n**Expected behavior:**\r\n* ListViewItem has a keyboard tooltip\r\n\r\n**Minimal repro:**\r\n1. Create .Net Core 5.0 app\r\n2. Add a ListView to the app\r\n3. Add items to the ListView\r\n4. Set tooltips for ListViewItems\r\n5. allow showing tooltips for items\r\n6. Run the app and try to get a item tooltip using a keyboard navigation","Url":"https://github.com/dotnet/winforms/issues/4320","RelatedDescription":"Open issue \"[Accessibility] ListViewItem has no keyboard tooltip\" (#4320)"},{"Id":"755873491","IsPullRequest":false,"CreatedAt":"2020-12-03T11:28:19","Actor":"RussKie","Number":"4316","RawContent":null,"Title":"`NativeImageList` not disposed by `ResourceManager`","State":"closed","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Version: \r\nDebug builds of .NET 5.0 and 6.0\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\nWe have added the code to track lifetime and incorrect disposal of unmanaged resources, specifically in `NativeImageList` we have the following code:\r\nhttps://github.com/dotnet/winforms/blob/b30bdd1922a23f85250729f59a3124c3c565e5e2/src/System.Windows.Forms/src/System/Windows/Forms/ImageList.NativeImageList.cs#L79-L91\r\n\r\nThis code causes apps to crash if those apps have serialised imagelists, and have a code similar to the following:\r\n```cs\r\nthis.imageList2.ImageStream = (System.Windows.Forms.ImageListStreamer)(resources.GetObject(\"imageList2.ImageStream\"));\r\n```\r\n\r\nThe app will crash with the following stacktrace:\r\n```\r\nMessage: NativeImageList was not disposed properly. Originating stack:\r\n   at System.Windows.Forms.ImageList.NativeImageList..ctor(IStream pstm)\r\n   at System.Windows.Forms.ImageListStreamer..ctor(SerializationInfo info, StreamingContext context)\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)\r\n   at System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at System.Reflection.MethodBase.Invoke(Object obj, Object[] parameters)\r\n   at System.Runtime.Serialization.ObjectManager.CompleteISerializableObject(Object obj, SerializationInfo info, StreamingContext context)\r\n   at System.Runtime.Serialization.ObjectManager.FixupSpecialObject(ObjectHolder holder)\r\n   at System.Runtime.Serialization.ObjectManager.DoFixups()\r\n   at System.Runtime.Serialization.Formatters.Binary.ObjectReader.Deserialize(BinaryParser serParser)\r\n   at System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(Stream serializationStream)\r\n   at System.Resources.Extensions.DeserializingResourceReader.ReadBinaryFormattedObject()\r\n   at System.Resources.Extensions.DeserializingResourceReader.DeserializeObject(Int32 typeIndex)\r\n   at System.Resources.Extensions.DeserializingResourceReader._LoadObjectV2(Int32 pos, ResourceTypeCode& typeCode)\r\n   at System.Resources.Extensions.DeserializingResourceReader.LoadObjectV2(Int32 pos, ResourceTypeCode& typeCode)\r\n   at System.Resources.Extensions.DeserializingResourceReader.LoadObject(Int32 pos, ResourceTypeCode& typeCode)\r\n   at System.Resources.Extensions.RuntimeResourceSet.GetObject(String key, Boolean ignoreCase, Boolean isString)\r\n   at System.Resources.Extensions.RuntimeResourceSet.GetObject(String key, Boolean ignoreCase)\r\n   at System.Resources.ResourceManager.GetObject(String name, CultureInfo culture, Boolean wrapUnmanagedMemStream)\r\n   at System.Resources.ResourceManager.GetObject(String name)\r\n   at SimpleWinForms.Form1.InitializeComponent()\r\n   at SimpleWinForms.Form1..ctor()\r\n   at SimpleWinForms.Program.Main()\r\n```\r\n\r\n**Expected behavior:**\r\n\r\nAll objects are disposed correctly, and the assert is not hit.\r\n\r\n**Minimal repro:**\r\n\r\n1. Build the Windows Forms solution in Debug mode\r\n1. Run `WinformsControlsTest` project from Visual Studio with a debugger attached\r\n1. Open `ListView` form\r\n1. Observe VS hit the assert\r\n","Url":"https://github.com/dotnet/winforms/issues/4316","RelatedDescription":"Closed issue \"`NativeImageList` not disposed by `ResourceManager`\" (#4316)"},{"Id":"755880086","IsPullRequest":true,"CreatedAt":"2020-12-03T05:37:21","Actor":"vladimir-krestov","Number":"4317","RawContent":null,"Title":"Fixing MonthCalendar a display dates range resets and flickers after calling UpdateBoldedDates ","State":"open","Body":"Fixes #4283\r\n\r\n\r\n\r\n## Proposed changes\r\n\r\n- Use [MCM_SETDAYSTATE](https://docs.microsoft.com/windows/win32/controls/mcm-setdaystate) message to a native control instead of recreating its `Handle` in the Month view\r\n- Change unit tests, because we don't create a `Handle` anymore when setting `BoldedDates`, `AnnuallyBoldedDates`, and `MonthlyBoldedDates`\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- A calendar doesn't reset a display dates range after calling [UpdateBoldedDates](https://docs.microsoft.com/dotnet/api/system.windows.forms.monthcalendar.updateboldeddates) method now.\r\n- The flickers have not disappeared but there are fewer of them than before. \r\n> The flickers reproduce for a native [MonthCalendar](https://docs.microsoft.com/windows/win32/controls/month-calendar-control-reference) control too, it seems it is a native control issue.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Middle, we are changing a public API. It has to be tested carefully.\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n- MonthCalendar has flickers and changes a display dates range when calling UpdateBoldedDates \r\n![fail](https://user-images.githubusercontent.com/49272759/100968378-495edf00-3542-11eb-8f26-a87860b74f27.gif)\r\n\r\n\r\n### After\r\n- MonthCalendar doesn't change a display dates range and has fewer flickers when calling UpdateBoldedDates \r\n![wokrs](https://user-images.githubusercontent.com/49272759/100968377-482db200-3542-11eb-929c-d60f9b2a2953.gif)\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- CTI\r\n- UI testing\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- Microsoft Windows [Version 10.0.19042.630]\r\n- .NET (6.0.100-alpha.1.20554.10)\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4317)","Url":"https://github.com/dotnet/winforms/pull/4317","RelatedDescription":"Open PR \"Fixing MonthCalendar a display dates range resets and flickers after calling UpdateBoldedDates \" (#4317)"},{"Id":"755684579","IsPullRequest":true,"CreatedAt":"2020-12-02T23:21:36","Actor":"RussKie","Number":"4314","RawContent":null,"Title":"Revert \"Explicit ImageList ownership management\" (servicing)","State":"open","Body":"This reverts commit 03db3fbfcc6884356f70141f882433638b23bb49.\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nResolves #4169\r\nResolves #4275\r\n\r\n\r\n## Proposed changes\r\n\r\n\r\nRevert \"Explicit ImageList ownership management. (#3601)\"\r\nThis reverts commit 03db3fbfcc6884356f70141f882433638b23bb49.\r\n\r\nRevert \"Fix `ListView` no longer displays images (#4184)\"\r\nThis reverts commit d0608e72a356ad991f9c9d12518e29b43a1fb4f0.\r\n\r\nWe have observed an instability of tests under stress (and reasonably high degree of concurrency) presumably caused by ImageList lifetime handling (notably #3358).\r\nThe changes introduced in #3601 have helped with tests stability, however resulted in a number of regressions, such as #4169 and #4275.\r\n\r\nRestore the original implementation given it worked reasonably well for the past so many years.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- The `ImageList` behaviours should be the same as in .NET Framework and .NET Core.\r\n\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4314)","Url":"https://github.com/dotnet/winforms/pull/4314","RelatedDescription":"Open PR \"Revert \"Explicit ImageList ownership management\" (servicing)\" (#4314)"},{"Id":"755268209","IsPullRequest":true,"CreatedAt":"2020-12-02T22:57:08","Actor":"weltkante","Number":"4312","RawContent":null,"Title":"Fix flaky Cursor accessor test","State":"closed","Body":"Ensure static Cursor accessors are initialized before testing return value consistency in multithreaded environments\r\n\r\nFixes #4309\r\n\r\n## Proposed changes\r\n\r\nas mentioned in the issue returning different instances during multithreaded access is acceptable and the test needs to take that into consideration\r\n\r\n## Customer Impact\r\n\r\nnone, product behavior remains as-is, only the test is changed\r\n\r\n## Regression? \r\n\r\nno\r\n\r\n## Risk\r\n\r\nno new risks, test made incorrect assumptions\r\n\r\n### Before\r\n\r\nIf two threads are accessing the static cursor properties at the same time both may have observed the backing field as null and created their own cursor instance. Only one of them \"wins\" the write to the backing field, the other will return a different instance than on subsequent calls to the property. The test was making the assumption that the value returned from static properties never changes which is not true in this scenario.\r\n\r\n### After\r\n\r\nThe test should be robust against running on multiple threads\r\n\r\n## Test methodology\r\n\r\n- code review\r\n- running tests multiple times locally\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4312)","Url":"https://github.com/dotnet/winforms/pull/4312","RelatedDescription":"Closed or merged PR \"Fix flaky Cursor accessor test\" (#4312)"},{"Id":"754706428","IsPullRequest":false,"CreatedAt":"2020-12-02T22:57:07","Actor":"weltkante","Number":"4309","RawContent":null,"Title":"Cursor static accessors not threadsafe / test flaky","State":"closed","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n**.NET Core Version:**\r\nmaster branch\r\n\r\n**Have you experienced this same bug with .NET Framework?:**\r\ndid not check\r\n\r\n**Problem description:**\r\nThe static accessors of the `Cursor` class are not threadsafe, if two threads attempt to access the same cursor at roughly the same time then two distinct instances of the cursor will be created.\r\n\r\nThis causes `CursorConverter_GetStandardValues_Invoke_ReturnsExpected` test to be flaky.\r\n\r\n**Expected behavior:**\r\nEither adjust the `Cursor` class to be threadsafe (using a `lock` statement or `Interlocked.CompareExchange` instead of unprotected `??=` syntax) or adjust the test in some way to not be flaky.\r\n\r\n**Minimal repro:**\r\nNot reproducable deterministcally, test is flaky and may fail.\r\n","Url":"https://github.com/dotnet/winforms/issues/4309","RelatedDescription":"Closed issue \"Cursor static accessors not threadsafe / test flaky\" (#4309)"},{"Id":"755277229","IsPullRequest":true,"CreatedAt":"2020-12-02T13:32:02","Actor":"SergeySmirnov-Akvelon","Number":"4313","RawContent":null,"Title":"Fixing behavior of tooltip for DataGrivViewTextBoxCell","State":"open","Body":"Fixes #2812\r\n\r\n## Proposed changes\r\n- Added special logic that checks if the tooltip is internal/default or if tooltip uses a value from a cell. If the value is taken from a cell, we check if the value is cut off in the cell itself. If it is cut off, we display the tooltip with the value in the cell, otherwise the tooltip is not displayed. If tooltip is internal/default then we also display the tooltip \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\nBefore fix:\r\n![Issue-2812-boforefix](https://user-images.githubusercontent.com/23376742/100880327-a2d0fa80-34bd-11eb-9bcb-bfdf155827e2.gif)\r\n\r\nAfter fix:\r\n![Issue-2812-afterfix](https://user-images.githubusercontent.com/23376742/100880364-acf2f900-34bd-11eb-91d1-950a01b8d2ae.gif)\r\n\r\n## Regression? \r\n\r\n- Yes (Only .NET Core Version, .NET Framework Version is right.)\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- Manually \r\n- CTI team \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .NET Core 5.0.100-rc.2.20479.15\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4313)","Url":"https://github.com/dotnet/winforms/pull/4313","RelatedDescription":"Open PR \"Fixing behavior of tooltip for DataGrivViewTextBoxCell\" (#4313)"},{"Id":"755102190","IsPullRequest":false,"CreatedAt":"2020-12-02T09:30:51","Actor":"fitdev","Number":"4311","RawContent":null,"Title":"WinForms Designer cannot design From inheriting from another Form","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n```\r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.100\r\n Commit:    5044b93829\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.17134\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0\r\n  Commit:  cf258a14b7\r\n\r\n.NET SDKs installed:\r\n  5.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.NETCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n* VS: 2019 16.9 Preview 1 Community\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo. On .Net Framework in the same VS version it works quickly and flawlessly.\r\n\r\n**Problem description:**\r\n\r\nNot sure if it is related to VB or is also applicable to C#, but I have the case:\r\n\r\nFormIWantToDesign.vb\r\n```vb\r\nFriend Class FormIWantToDesign : Inherits ContainerForm\r\n\r\nEnd Class\r\n```\r\nFormIWantToDesign.Designer.vb\r\n```vb\r\n<Global.Microsoft.VisualBasic.CompilerServices.DesignerGenerated()> _\r\nPartial Class FormIWantToDesign : Inherits ContainerForm\r\n\r\nEnd Class\r\n```\r\nContainerForm.vb\r\n```vb\r\nPublic Class ContainerForm : Inherits System.Windows.Forms.Form\r\n\r\nEnd Class\r\n```\r\nContainerForm.Designer.vb\r\n```vb\r\n<Global.Microsoft.VisualBasic.CompilerServices.DesignerGenerated()> _\r\nPartial Class ContainerForm\r\n    Inherits System.Windows.Forms.Form\r\n'Designer generated code here\r\nEnd Class\r\n```\r\n\r\nAll classes / files are part of the same .Net 5 project. Project compiles, is built, rebuilt, and at runtime everything works.\r\n\r\n**Expected Behavior:**\r\nWhen I click on `FormIWantToDesign.vb` I want the VS to show me a WF designer so I can interact with controls on the form, _just as is the case with .Net Framework version of it_.\r\n\r\n**Actual Behavior:**\r\n```\r\nThe designer could not be shown for this file because none of the classes within it can be designed. The designer inspected the following classes in the file: The designer could not be shown for this file because none of the classes within it can be designed. The designer inspected the following classes in the file: \\r\\n FormIWantToDesign --- The base class 'MyProjectNamespace.ContainerForm' could not be loaded. Ensure the assembly has been referenced and that all projects have been built.     \r\n\r\nInstances of this error (1)  \r\n \r\nat Microsoft.VisualStudio.WinForms.RemoteClient.Loader.RemoteCodeDomDesignerLoader.EnsureDocument(IDesignerSerializationManager manager)\r\nat Microsoft.VisualStudio.WinForms.RemoteClient.Loader.RemoteCodeDomDesignerLoader.PerformLoad(IDesignerSerializationManager manager)\r\nat Microsoft.VisualStudio.Design.Serialization.CodeDom.VSCodeDomDesignerLoader.PerformLoad(IDesignerSerializationManager serializationManager)\r\nat Microsoft.VisualStudio.Design.Serialization.CodeDom.VSCodeDomDesignerLoader.DeferredLoadHandler.Microsoft.VisualStudio.TextManager.Interop.IVsTextBufferDataEvents.OnLoadCompleted(Int32 fReload)  \r\n```\r\n\r\nWhy it says `MyProjectNamespace.ContainerForm` cannot be loaded I have no idea. The project has been built, and is the same project as the one that contains the form I try to open in a designer.\r\n\r\n**Minimal repro:**\r\nSee files samples above.","Url":"https://github.com/dotnet/winforms/issues/4311","RelatedDescription":"Open issue \"WinForms Designer cannot design From inheriting from another Form\" (#4311)"},{"Id":"754527179","IsPullRequest":false,"CreatedAt":"2020-12-02T07:19:38","Actor":"the-namelessone","Number":"4306","RawContent":null,"Title":"bug: listview column click exception","State":"closed","Body":"* .NET Core Version: \r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.100\r\n Commit:    5044b93829\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19041\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0\r\n  Commit:  cf258a14b7\r\n\r\n.NET SDKs installed:\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.505 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.602 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.604 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.700 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\n[listviewbug.zip](https://github.com/dotnet/winforms/files/5623842/listviewbug.zip)\r\n\r\n\r\nIn .NET 5.0 version see above and Visual Studio 16.8.2 the attached example program crashes and gives exception when clicking a column header. Find all source code in the zip file.\r\n\r\nThe exceptions that are thrown (randomly the one or the other):\r\n\r\nSystem.NullReferenceException: 'Object reference not set to an instance of an object.'\r\n\r\nSystem.ExecutionEngineException\r\n\r\nThose exceptions are .NET 5.0 exceptions and don't occur in  .NET Framework 4.8!\r\n\r\n\r\n**Expected behavior:**\r\n\r\nThis code works without exception in .NET Framework 4.8\r\n\r\ngreetings\r\nThe c0demast3r\r\n","Url":"https://github.com/dotnet/winforms/issues/4306","RelatedDescription":"Closed issue \"bug: listview column click exception\" (#4306)"},{"Id":"754587360","IsPullRequest":false,"CreatedAt":"2020-12-01T17:29:22","Actor":"manfromarce","Number":"4308","RawContent":null,"Title":"Error when trying to create Settings file (VB.Net)","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: 3.1 or 5.0\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: No\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\nWhen I create a new .NET Core Windows Forms project in VB.NET and go to Project > Properties > Settings, Visual Studio says that the project doesn't have a default Settings file. However when I click the message to create a new Settings file I get HRESULT_EXCEPTION 0x80070002 (Unable to find specified file). This issue doesn't occur in .NET Core C# projects, nor in .NET Framework.\r\n![Screenshot (103)](https://user-images.githubusercontent.com/45036600/100774322-3e9d3080-3402-11eb-8a52-1a61224aabc4.png)\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n**Expected behavior:**\r\nWhen I click the message, I expect a new empty settings file to be created, like in .NET Framework.\r\n\r\n**Minimal repro:**\r\nI just created a blank solution and project and the error immediately displays when I go to Project > Properties > Settings and click on the link to create a new settings file. I'm using Visual Studio 16.8.2, I tried to repair my installation and change .NET Core target version but nothing changed.\r\n","Url":"https://github.com/dotnet/winforms/issues/4308","RelatedDescription":"Open issue \"Error when trying to create Settings file (VB.Net)\" (#4308)"},{"Id":"758767406","IsPullRequest":false,"CreatedAt":"2017-05-01T22:57:08","Actor":"davkean","Number":"4333","RawContent":null,"Title":"Component designer does not display when targeting .NET Core/.NET Standard","State":"open","Body":"_From @JinShil on April 29, 2017 7:47_\n\n.Net Standard 2.0 and .Net Core 2.0 have included APIs in `System.ComponentModel` for building and extending the Visual Studio designer (e.g `Component` class, `DesignerAttribute`, `TypeConverter`, etc..) \r\n\r\nHowever, if one tries to use these classes in the current release of Visual Studio 2017 to create designers for their classes, Visual Studio displays errors in the designer like\r\n\r\n```c#\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.ComponentModel;\r\nusing System.Text;\r\n\r\nnamespace CoreDesignerTest\r\n{\r\n    public class Class1 : Component\r\n    {\r\n    }\r\n}\r\n```\r\n\r\nIn Visual Studio, right-click on the \"Class1.cs\" node and choose \"View Designer\".\r\n\r\n> Could not load file or assembly 'System.ComponentModel.Primitives, Version=4.2.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The system cannot find the file specified. \r\n\r\nWith some hacking in my .config files, I can resolve the above error, but eventually Visual Studio fails to load the .Net Core assemblies with an \"Invalid Format\" error.\r\n\r\nI'm assuming this is due to the fact that Visual Studio, being a .Net Framework-based application, is trying to load a .Net Core assembly into a .Net Framework application, and therefore failing.\r\n\r\nMy question is, with the coming release of .Net Core 2.0 and .Net Standard 2.0, will there also be an accompanying Visual Studio update that will provide the ability to create designers for .Net Core 2.0 and .Net Standard 2.0 classes?\n\n_Copied from original issue: dotnet/corefx#19139_","Url":"https://github.com/dotnet/winforms/issues/4333","RelatedDescription":"Open issue \"Component designer does not display when targeting .NET Core/.NET Standard\" (#4333)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-12-08T05:30:49.958788Z","RunDurationInMilliseconds":845}