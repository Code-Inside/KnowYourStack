{"Data":{"GitHub":{"Issues":[{"Id":"3116025510","IsPullRequest":true,"CreatedAt":"2025-06-04T02:54:41","Actor":"dotnet-maestro[bot]","Number":"13553","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250603.2](https://dev.azure.com/dnceng/internal/_build/results?buildId=2722319)\n- **Date Produced**: June 3, 2025 8:15:09 PM UTC\n- **Commit Diff**: [d2434b1...ac2aaf2](https://github.com/dotnet/dotnet/compare/d2434b1b5ed778f9869b1e51ba1df4bc3a64eda7...ac2aaf24d127067df385f2aa5ab35bb9b96d5f74)\n- **Commit**: [ac2aaf24d127067df385f2aa5ab35bb9b96d5f74](https://github.com/dotnet/dotnet/commit/ac2aaf24d127067df385f2aa5ab35bb9b96d5f74)\n- **Branch**: main\n\n**Updated Dependencies**\n- **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **System.Resources.Extensions**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **System.Windows.Extensions**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **System.Text.Encodings.Web**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **System.Text.Json**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **System.CodeDom**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **System.Formats.Nrbf**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **System.IO.Hashing**: [from 10.0.0-preview.6.25302.103 to 10.0.0-preview.6.25303.102][1]\n- **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25302.103 to 10.0.0-beta.25303.102][1]\n- **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25302.103 to 10.0.0-beta.25303.102][1]\n- **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25302.103 to 10.0.0-beta.25303.102][1]\n- **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25302.103 to 10.0.0-beta.25303.102][1]\n- **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25302.103 to 10.0.0-beta.25303.102][1]\n- **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25302.103 to 10.0.0-beta.25303.102][1]\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/d2434b1b5e...ac2aaf24d1\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13553)","Url":"https://github.com/dotnet/winforms/pull/13553","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13553)"},{"Id":"3115766641","IsPullRequest":true,"CreatedAt":"2025-06-03T23:57:35","Actor":"ricardobossan","Number":"13552","RawContent":null,"Title":"Restore \"Use Data Bound Items\" support in ListBox/ComboBox Smart Tags","State":"open","Body":"Fixes #13228\r\n\r\n## Root Cause\r\n\r\nThe `ListBox` and `ComboBox` Smart Tag panels no longer displayed the \"Use Data Bound Items\" checkbox in .NET 5+ because the logic responsible for detecting and handling data binding (previously in `ListControlBoundActionList`) was removed and replaced with a simplified `ListControlUnboundActionList`. This stripped out support for toggling between bound and unbound modes, as well as the associated UI elements and property editing.\r\n\r\n## Proposed changes\r\n\r\n- Reintroduce `BoundMode`, `DataSource`, `DisplayMember`, `ValueMember`, and `BoundSelectedValue` properties.\r\n- Conditionally show data-bound or unbound actions in the Smart Tag panel based on the control's current binding state.\r\n- Preserve existing \"Edit Items...\" dialog behavior for unbound scenarios.\r\n\r\n## Customer Impact\r\n\r\nDevelopers using the WinForms Designer in .NET 5+ will be able to configure data binding for `ListBox` and `ComboBox` controls through the Smart Tag UI.\r\n\r\n## Regression?\r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Screenshots\r\n\r\n### Before\r\n\r\n### After\r\n\r\n## Test methodology\r\n\r\n- Manual\r\n\r\n## Test environment(s)\r\n\r\n- 10.0.100-preview.6.25272.112\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13552)","Url":"https://github.com/dotnet/winforms/pull/13552","RelatedDescription":"Open PR \"Restore \"Use Data Bound Items\" support in ListBox/ComboBox Smart Tags\" (#13552)"},{"Id":"3115348075","IsPullRequest":true,"CreatedAt":"2025-06-03T20:27:13","Actor":"KlausLoeffelmann","Number":"13551","RawContent":null,"Title":"Introduce the new API InitializeControl on Control","State":"open","Body":"This PR \r\n* fixes #13550.\r\n* fixes #13460.\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13551)","Url":"https://github.com/dotnet/winforms/pull/13551","RelatedDescription":"Open PR \"Introduce the new API InitializeControl on Control\" (#13551)"},{"Id":"3115253845","IsPullRequest":false,"CreatedAt":"2025-06-03T19:53:06","Actor":"KlausLoeffelmann","Number":"13550","RawContent":null,"Title":"Add InitializeControl(int deviceDpi) to Control for Early Initialization","State":"open","Body":"## TL;DR\n\nWinForms controls frequently require setup before base classes access virtuals like `CreateParams`, which happens in base constructors. Since derived class constructors execute _after_ that point, it’s currently hard to configure control styles, flags, or scaling-related values in time for certain scenarios.\n\nTo address this, we propose introducing:\n\n```csharp\nprotected virtual void InitializeControl(int deviceDpi) { }\n```\n\nThis method is invoked directly in the Control constructor and allows derived controls to perform critical early setup — superseding the internal `InitializeConstantsForInitialDpi(int)`.\n\n\n## API Definition\n\n```csharp\n/// <summary>\n///  Provides inheriting controls a dedicated early-initialization hook that is guaranteed to run\n///  <i>before</i> <see cref=\"CreateParams\"/> is called by any base class constructor.\n/// </summary>\n/// <param name=\"deviceDpi\">The DPI value for the control's device context.</param>\nprotected virtual void InitializeControl(int deviceDpi)\n{\n}\n```\n\nThis method is to be called at the beginning of the Control constructor.\n\n## Motivation\n\n- Derived controls need deterministic access to DPI and layout-sensitive configuration before base constructors run logic dependent on those settings.\n- Prevents fragile workarounds involving deferred initialization or brittle assumptions about constructor chaining.\n- Makes discoverable what was previously internal: `InitializeConstantsForInitialDpi(int)`.\n- Offers clarity and intent for derived class authors.\n\n## Tooling & Compatibility\n\n**Windows Dependency:** None. Purely runtime logic.\n\n**Design Tools:** No impact. No special designer/codegen/serialization handling needed.\n\n**Backwards Compatibility:** Safe by default; does not affect existing controls unless overridden.\n\n## Design Discussion\n\nWhy is a virtual call from constructor acceptable?\n\nOrdinarily in C#, calling a virtual method from a constructor is discouraged. The derived type’s fields may not yet be initialized, leading to unexpected behavior.\n\nHowever, this is not an ordinary .NET design:\n\n✅ Java Origins of WinForms\n\nWinForms originated in Visual J++, a Java-based platform. In Java: \n- All non-final instance methods are virtual by default.\n- Virtual dispatch works in constructors, even if the derived class fields aren't initialized yet.\n- Tooling (e.g., IntelliJ, Eclipse) issues warnings, not errors, for constructor-dispatched virtuals.\n\n✅ Precedent in WinForms\n\nMethods like `CreateParams`, `DefaultSize`, and `GetScaledBounds` are already virtual and called in constructors. This pattern is foundational in WinForms.\n\n✅ Scoped Risk with `InitializeControl`\n\n- The method is intentionally isolated and narrowly scoped.\n- Encourages developers to use this instead of constructor hacks.\n\n✅ Improves Current Practices\n\nControl authors today often use `OnCreateControl` or other late-stage workarounds. This method gives a clean, predictable, and well-documented hook.\n\n### Replacement of Existing Internal API\n\nThis proposal replaces:\n\n```csharp\nprivate protected virtual void InitializeConstantsForInitialDpi(int initialDpi) { }\n```\n\nWith the more expressive and public accessible:\n\n```csharp\nprotected virtual void InitializeControl(int deviceDpi) { }\n```\n\nand also paves the path for us internally, to use the new API to control, if a WinForms Control wants to participate in or opt out of DarkMode or the handling of certain OwnerDrawing scenarios.\n(See [`ButtonBase` as an example](https://github.com/dotnet/winforms/blob/2f29f9abf016a0adab3700ac6823b2b5d58d8004/src/System.Windows.Forms/System/Windows/Forms/Controls/Buttons/ButtonBase.cs#L79), where the decision to OwnerDraw managers, if a Button is completely represented by the Win32 pendant, and only wrapped by .NET or if .NET actually represents the implementation logic.\n### Risks\n\n* Minimal. This change will not change existing behavior. It will, however, allow developers of Third-party-control to control early initialization of their own controls with the potential for regressions of their own controls. But this is already today possible by \"messing up\" initialization of `CreateParams` or not calling base-class methods like `CreateHandle` or `CreateControl`.\n\n\n## Summary\n\nThis small but significant addition addresses a long-standing pain point in WinForms. It adheres to existing architectural patterns, respects .NET best practices where applicable, and delivers better control to developers building derived components.\n","Url":"https://github.com/dotnet/winforms/issues/13550","RelatedDescription":"Open issue \"Add InitializeControl(int deviceDpi) to Control for Early Initialization\" (#13550)"},{"Id":"3101149843","IsPullRequest":true,"CreatedAt":"2025-06-03T19:05:21","Actor":"Youssef1313","Number":"13541","RawContent":null,"Title":"Delete eng/helixpublish.proj","State":"closed","Body":"It feels like this repo runs tests normally and not using Helix, and this file is dead?\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13541)","Url":"https://github.com/dotnet/winforms/pull/13541","RelatedDescription":"Closed or merged PR \"Delete eng/helixpublish.proj\" (#13541)"},{"Id":"3099709883","IsPullRequest":false,"CreatedAt":"2025-06-03T17:21:07","Actor":"MelonWang1","Number":"13538","RawContent":null,"Title":"Unable move component controls in DemoConsole application","State":"closed","Body":"### .NET version\n\nmain branch of WinForms repo\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, this is a regression issue. Not repro on Release/10.0-preview4 branch of WinForms repo.\n\nhttps://github.com/user-attachments/assets/17513c53-e9d8-47af-b430-3af52902d517\n\n### Issue description\n\nUnable move component controls in DemoConsole application.\n\nhttps://github.com/user-attachments/assets/fb3397cc-15c7-4565-b42a-09866a6bd404\n\n### Steps to reproduce\n\nTest sample: [DemoConsole](https://github.com/dotnet/winforms/tree/main/src/System.Windows.Forms/tests/IntegrationTests/DesignSurface/DemoConsole) bases on main branch in Winforms repo.","Url":"https://github.com/dotnet/winforms/issues/13538","RelatedDescription":"Closed issue \"Unable move component controls in DemoConsole application\" (#13538)"},{"Id":"3102719115","IsPullRequest":true,"CreatedAt":"2025-06-03T17:21:06","Actor":"LeafShi1","Number":"13542","RawContent":null,"Title":"Fix 13538: Update method Drop of DropTarget.cs","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #13538\r\n\r\n\r\n## Proposed changes\r\n\r\n- Update method `Drop` to delete `*pdwEffect = DROPEFFECT.DROPEFFECT_NONE` before `CreateDragEventArgs` \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- The component controls can be moved in design time\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\nUnable move component controls in DemoConsole application.\r\n\r\nhttps://github.com/user-attachments/assets/fb3397cc-15c7-4565-b42a-09866a6bd404\r\n\r\n### After\r\nComponent controls can be moved normally\r\n![AfterChange](https://github.com/user-attachments/assets/1eb7c844-df53-4819-b710-321fb2380a74)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manually\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .net 10.0.0-preview.6.25278.103\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13542)","Url":"https://github.com/dotnet/winforms/pull/13542","RelatedDescription":"Closed or merged PR \"Fix 13538: Update method Drop of DropTarget.cs\" (#13542)"},{"Id":"3114804676","IsPullRequest":false,"CreatedAt":"2025-06-03T17:16:52","Actor":"dotnet-maestro-bot","Number":"13549","RawContent":null,"Title":"[dnceng-bot] Branch `winforms/release/9.0` can't be merged to Azdo internal branch","State":"open","Body":"Branch [release/9.0](https://github.com/dotnet/winforms/commits/release/9.0/) in `dotnet/winforms` repo can't be mirrored from GitHub to Azure [internal/release/9.0](https://dev.azure.com/dnceng/internal/_git/dotnet-winforms?version=GBinternal%2Frelease%2F9.0&_a=history) via internal merge. \n\nThere are conflicting commits in the target branch.\nThe branch is configured to be mirrored via automated merge. \nThe situation is rare but normal. The target branch is expected to receive manual commits in the Azure DevOps clone, which could cause conflict.\n\nConflicts need to be **resolved to unblock the code flow**.\n\n- you can resolve the issue by resolving the conflict in the **target branch only**. \n    - Please make sure that the changes sensitive from security perspective are not published ahead of time to GitHub!\n- reverting the extra commits in the Azdo target branch.\n- checking the logs of the mirroring process in the [mirroring pipeline](https://dev.azure.com/dnceng/internal/_build?definitionId=1387).\n- you can disable the mirroring of the branch in the [configuration file](https://dev.azure.com/dnceng/internal/_git/dotnet-mirroring?path=/dnceng-subscriptions.jsonc).\n- you can ask @dotnet/dnceng for help or read the [documentation](https://dev.azure.com/dnceng/internal/_git/dotnet-mirroring?path=/README.md).\n\nPlease close this issue once the conflict is resolved.","Url":"https://github.com/dotnet/winforms/issues/13549","RelatedDescription":"Open issue \"[dnceng-bot] Branch `winforms/release/9.0` can't be merged to Azdo internal branch\" (#13549)"},{"Id":"3106399714","IsPullRequest":true,"CreatedAt":"2025-06-03T17:14:00","Actor":"dotnet-maestro[bot]","Number":"13544","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250602.3](https://dev.azure.com/dnceng/internal/_build/results?buildId=2721725)\n- **Date Produced**: June 2, 2025 11:19:03 PM UTC\n- **Commit Diff**: [1b58197...d2434b1](https://github.com/dotnet/dotnet/compare/1b5819797c01e0898087a34d8a2a7d9b9f55f1ac...d2434b1b5ed778f9869b1e51ba1df4bc3a64eda7)\n- **Commit**: [d2434b1b5ed778f9869b1e51ba1df4bc3a64eda7](https://github.com/dotnet/dotnet/commit/d2434b1b5ed778f9869b1e51ba1df4bc3a64eda7)\n- **Branch**: main\n\n**Updated Dependencies**\n- **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **System.Resources.Extensions**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **System.Windows.Extensions**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **System.Text.Encodings.Web**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **System.Text.Json**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **System.CodeDom**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **System.Formats.Nrbf**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **System.IO.Hashing**: [from 10.0.0-preview.6.25281.103 to 10.0.0-preview.6.25302.103][1]\n- **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25281.103 to 10.0.0-beta.25302.103][1]\n- **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25281.103 to 10.0.0-beta.25302.103][1]\n- **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25281.103 to 10.0.0-beta.25302.103][1]\n- **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25281.103 to 10.0.0-beta.25302.103][1]\n- **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25281.103 to 10.0.0-beta.25302.103][1]\n- **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25281.103 to 10.0.0-beta.25302.103][1]\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n\n\n[1]: https://github.com/dotnet/dotnet/compare/1b5819797c...804112038c\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13544)\n[1]: https://github.com/dotnet/dotnet/compare/804112038c...7de287dade\n\n[1]: https://github.com/dotnet/dotnet/compare/7de287dade...d2434b1b5e\n","Url":"https://github.com/dotnet/winforms/pull/13544","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13544)"},{"Id":"3112114888","IsPullRequest":true,"CreatedAt":"2025-06-03T17:12:22","Actor":"dotnet-maestro[bot]","Number":"13545","RawContent":null,"Title":"[release/9.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:92989bf7-cdf9-483d-64c5-08dcbc356d11)\n## From https://github.com/dotnet/arcade\n- **Subscription**: [92989bf7-cdf9-483d-64c5-08dcbc356d11](https://maestro.dot.net/subscriptions?search=92989bf7-cdf9-483d-64c5-08dcbc356d11)\n- **Build**: [20250602.2](https://dev.azure.com/dnceng/internal/_build/results?buildId=2721828)\n- **Date Produced**: June 2, 2025 9:40:50 PM UTC\n- **Commit**: [0d52a8b262d35fa2fde84e398cb2e791b8454bd2](https://github.com/dotnet/arcade/commit/0d52a8b262d35fa2fde84e398cb2e791b8454bd2)\n- **Branch**: refs/heads/release/9.0\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.25271.1 to 9.0.0-beta.25302.2][1]\n  - **Microsoft.DotNet.CMake.Sdk**: [from 9.0.0-beta.25271.1 to 9.0.0-beta.25302.2][1]\n  - **Microsoft.DotNet.GenFacades**: [from 9.0.0-beta.25271.1 to 9.0.0-beta.25302.2][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.25271.1 to 9.0.0-beta.25302.2][1]\n  - **Microsoft.DotNet.RemoteExecutor**: [from 9.0.0-beta.25271.1 to 9.0.0-beta.25302.2][1]\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.25271.1 to 9.0.0-beta.25302.2][1]\n\n[1]: https://github.com/dotnet/arcade/compare/086a177187...0d52a8b262\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:92989bf7-cdf9-483d-64c5-08dcbc356d11)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13545)","Url":"https://github.com/dotnet/winforms/pull/13545","RelatedDescription":"Closed or merged PR \"[release/9.0] Update dependencies from dotnet/arcade\" (#13545)"},{"Id":"3113709018","IsPullRequest":false,"CreatedAt":"2025-06-03T12:11:30","Actor":"Tudsday","Number":"13548","RawContent":null,"Title":"The current screen size is wrong?","State":"open","Body":"powershell.ps1\n\nAdd-Type -AssemblyName System.Windows.Forms\n$bounds = [System.Windows.Forms.SystemInformation]::VirtualScreen   \n\nWrite-Host \"W=$($bounds.Width) H=$($bounds.Height) X=$($bounds.X) Y=$($bounds.Y)\"\n\noutput: W=2560 H=1440 X=0 Y=0\n\n![Image](https://github.com/user-attachments/assets/691b2de5-f8fe-4b45-b6c4-f1156d77451b)\nBut my monitor is 4K. Why is the reading error?","Url":"https://github.com/dotnet/winforms/issues/13548","RelatedDescription":"Open issue \"The current screen size is wrong?\" (#13548)"},{"Id":"3112823324","IsPullRequest":true,"CreatedAt":"2025-06-03T07:38:35","Actor":"Zheng-Li01","Number":"13547","RawContent":null,"Title":"Add code coverage for DataGridViewImageColumn","State":"open","Body":"Related https://github.com/dotnet/winforms/issues/13442\r\n\r\n## Proposed changes\r\nAdd unit test file:DataGridViewImageColumnTests.cs for public methods of the DataGridViewImageColumn.cs\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13547)","Url":"https://github.com/dotnet/winforms/pull/13547","RelatedDescription":"Open PR \"Add code coverage for DataGridViewImageColumn\" (#13547)"},{"Id":"3112580575","IsPullRequest":true,"CreatedAt":"2025-06-03T06:21:38","Actor":"Epica3055","Number":"13546","RawContent":null,"Title":"fix #13539 Unable select ToolStripMenuItem and TooStripTextBox of MenuStrip2 in DemoConsole application","State":"open","Body":"Fixes #13539\r\n\r\n## Root cause\r\n\r\nThere is a UserControl in the designer, which is big enough to cover the MenuStrip.\r\n\r\n![Issue_13539_2](https://github.com/user-attachments/assets/ac558add-b29f-495c-8894-054e941790cf)\r\n\r\n## Proposed changes\r\n\r\n- \r\n- Make enough room for MenuStrip\r\n- \r\n\r\n\r\n## Customer Impact\r\n\r\n- \r\n- low\r\n-\r\n\r\n\r\n\r\n\r\n\r\n## Screenshots \r\n\r\n### Before\r\n\r\nhttps://github.com/user-attachments/assets/af05626f-e340-48d1-ab4b-3ffeb2c4f475\r\n\r\n### After\r\n\r\n![Issue_13539_1](https://github.com/user-attachments/assets/fcfe6488-3211-4ad1-91c3-5c5d5c383126)\r\n\r\n\r\n\r\n## Test methodology\r\n\r\n- \r\n- manual \r\n- \r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13546)","Url":"https://github.com/dotnet/winforms/pull/13546","RelatedDescription":"Open PR \"fix #13539 Unable select ToolStripMenuItem and TooStripTextBox of MenuStrip2 in DemoConsole application\" (#13546)"},{"Id":"3104670630","IsPullRequest":true,"CreatedAt":"2025-05-31T02:50:54","Actor":"dotnet-maestro[bot]","Number":"13543","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250530.2](https://dev.azure.com/dnceng/internal/_build/results?buildId=2719956)\n- **Date Produced**: May 30, 2025 7:05:33 PM UTC\n- **Commit Diff**: [0a01b39...1b58197](https://github.com/dotnet/dotnet/compare/0a01b394b186e190a80cb55740c13f6293cf5446...1b5819797c01e0898087a34d8a2a7d9b9f55f1ac)\n- **Commit**: [1b5819797c01e0898087a34d8a2a7d9b9f55f1ac](https://github.com/dotnet/dotnet/commit/1b5819797c01e0898087a34d8a2a7d9b9f55f1ac)\n- **Branch**: main\n\n**Updated Dependencies**\n- **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **System.Resources.Extensions**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **System.Windows.Extensions**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **System.Text.Encodings.Web**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **System.Text.Json**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **System.CodeDom**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **System.Formats.Nrbf**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **System.IO.Hashing**: [from 10.0.0-preview.6.25278.103 to 10.0.0-preview.6.25280.102][1]\n- **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25278.103 to 10.0.0-beta.25280.102][1]\n- **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25278.103 to 10.0.0-beta.25280.102][1]\n- **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25278.103 to 10.0.0-beta.25280.102][1]\n- **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25278.103 to 10.0.0-beta.25280.102][1]\n- **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25278.103 to 10.0.0-beta.25280.102][1]\n- **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25278.103 to 10.0.0-beta.25280.102][1]\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/0a01b394b1...1b5819797c\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13543)","Url":"https://github.com/dotnet/winforms/pull/13543","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13543)"},{"Id":"3095833116","IsPullRequest":true,"CreatedAt":"2025-05-29T20:25:09","Actor":"JeremyKuhne","Number":"13532","RawContent":null,"Title":"Null out host handle in OleInterfaces when disposing","State":"closed","Body":"This was causing the AxHost's container to stay rooted.\r\n\r\nFixes #13499\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13532)","Url":"https://github.com/dotnet/winforms/pull/13532","RelatedDescription":"Closed or merged PR \"Null out host handle in OleInterfaces when disposing\" (#13532)"},{"Id":"3095751822","IsPullRequest":true,"CreatedAt":"2025-05-29T16:53:29","Actor":"dotnet-maestro[bot]","Number":"13531","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/arcade/blob/main/Documentation/UnifiedBuild/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250528.3](https://dev.azure.com/dnceng/internal/_build/results?buildId=2718610)\n- **Date Produced**: May 28, 2025 8:32:50 PM UTC\n- **Commit Diff**: [57b0396...0a01b39](https://github.com/dotnet/dotnet/compare/57b0396ae0d21b9f0dfe0d208c57822fb88f9a8d...0a01b394b186e190a80cb55740c13f6293cf5446)\n- **Commit**: [0a01b394b186e190a80cb55740c13f6293cf5446](https://github.com/dotnet/dotnet/commit/0a01b394b186e190a80cb55740c13f6293cf5446)\n- **Branch**: main\n\n**Updated Dependencies**\n- **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.6.25277.102 to 10.0.0-preview.6.25278.103][1]\n- **System.Resources.Extensions**: [from 10.0.0-preview.6.25277.102 to 10.0.0-preview.6.25278.103][1]\n- **System.Windows.Extensions**: [from 10.0.0-preview.6.25277.102 to 10.0.0-preview.6.25278.103][1]\n- **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.6.25277.102 to 10.0.0-preview.6.25278.103][1]\n- **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25277.102 to 10.0.0-preview.6.25278.103][1]\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25277.102 to 10.0.0-preview.6.25278.103][1]\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25277.102 to 10.0.0-preview.6.25278.103][1]\n- **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.6.25277.102 to 10.0.0-preview.6.25278.103][1]\n- **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.6.25277.102 to 10.0.0-preview.6.25278.103][1]\n- **System.Text.Encodings.Web**: [from 10.0.0-preview.6.25277.102 to 10.0.0-preview.6.25278.103][1]\n- **System.Text.Json**: [from 10.0.0-preview.6.25277.102 to 10.0.0-preview.6.25278.103][1]\n- **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.6.25277.102 to 10.0.0-preview.6.25278.103][1]\n- **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.6.25277.102 to 10.0.0-preview.6.25278.103][1]\n- **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.6.25277.102 to 10.0.0-preview.6.25278.103][1]\n- **System.CodeDom**: [from 10.0.0-preview.6.25277.102 to 10.0.0-preview.6.25278.103][1]\n- **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.6.25277.102 to 10.0.0-preview.6.25278.103][1]\n- **System.Formats.Nrbf**: [from 10.0.0-preview.6.25277.102 to 10.0.0-preview.6.25278.103][1]\n- **System.IO.Hashing**: [from 10.0.0-preview.6.25277.102 to 10.0.0-preview.6.25278.103][1]\n- **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25277.102 to 10.0.0-beta.25278.103][1]\n- **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25277.102 to 10.0.0-beta.25278.103][1]\n- **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25277.102 to 10.0.0-beta.25278.103][1]\n- **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25277.102 to 10.0.0-beta.25278.103][1]\n- **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25277.102 to 10.0.0-beta.25278.103][1]\n- **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25277.102 to 10.0.0-beta.25278.103][1]\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n\n[1]: https://github.com/dotnet/dotnet/compare/f5705c8f4c...57b0396ae0\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13531)\n[1]: https://github.com/dotnet/dotnet/compare/57b0396ae0...0a01b394b1\n","Url":"https://github.com/dotnet/winforms/pull/13531","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13531)"},{"Id":"3100252397","IsPullRequest":true,"CreatedAt":"2025-05-29T12:52:10","Actor":"Youssef1313","Number":"13540","RawContent":null,"Title":"Move to xunit.v3","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n## Proposed changes\r\n\r\n- Migrates from xunit to xunit.v3\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- None. This is test-only changes\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Very low.\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13540)","Url":"https://github.com/dotnet/winforms/pull/13540","RelatedDescription":"Open PR \"Move to xunit.v3\" (#13540)"},{"Id":"3093528398","IsPullRequest":false,"CreatedAt":"2025-05-29T10:30:00","Actor":"tvidvei","Number":"13529","RawContent":null,"Title":"PropertyGrid: Splitter bar out of position when resizing the help pane at the bottom of a PropertyGrid","State":"closed","Body":"### .NET version\n\n.NET version: 10.0.0-preview.4.25258.110  (Currently the latest publicly available preview version)\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nTesting with the latest .NET versions (net60, net70, net80) give the same error.  Same for .NET Framework 4.8.1\n\n### Issue description\n\nWhen trying to resize the HelpPane at the bottom of a PropertyGrid, a splitter bar appears to indicate the new position of the split.  But it displays a wrong position.\n\nThe error seems to be related to the handling of hight DPI, which is controlled by the ApplicationHighDpiMode property in the project settings.  Changing this setting in WinFormsControlsTest from SystemAware to PerMonitorV2 reduces the deviation slightly, but it is still significant.\n\ndotnet/winforms commit tested: 1e15c5140 25.04.2025 4:25 CET\n.NET version: 10.0.0-preview.4.25258.110\nOS:  Windows 11 Pro,  version: 24H2\nHardware:\nLenovo Yoga Slim 7 14Q8X9 (Laptop)\n- Display on Laptop:  Resolution=2944x1840, Scale=200%\n- External monitor: Resolution=1920x1080, Scale=100%\n\n\n### Steps to reproduce\n\nThis error can easily be reproduced by running the WinFormsControlsTests (in dotnet/winforms), open a PropertyGrid and try to resize the HelpPane at the bottom.  The same error can be seen e.g. in the Property pane in VS2022 and anywhere where PropertyGrid is used","Url":"https://github.com/dotnet/winforms/issues/13529","RelatedDescription":"Closed issue \"PropertyGrid: Splitter bar out of position when resizing the help pane at the bottom of a PropertyGrid\" (#13529)"},{"Id":"3099727085","IsPullRequest":false,"CreatedAt":"2025-05-29T09:24:10","Actor":"MelonWang1","Number":"13539","RawContent":null,"Title":"Unable select ToolStripMenuItem and TooStripTextBox of MenuStrip2 in DemoConsole application","State":"open","Body":"### .NET version\n\nmain branch of WinForms repo\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo, also repro on Release/10.0-preview4 branch of WinForms repo.\n\n### Issue description\n\nUnable select ToolStripMenuItem and TooStripTextBox of MenuStrip2 in DemoConsole application.\n\nhttps://github.com/user-attachments/assets/af05626f-e340-48d1-ab4b-3ffeb2c4f475\n\n### Steps to reproduce\n\nTest sample: [DemoConsole](https://github.com/dotnet/winforms/tree/main/src/System.Windows.Forms/tests/IntegrationTests/DesignSurface/DemoConsole) bases on main branch in Winforms repo.\n\n**More info:**\n\n1. This issue cannot repro in SubToolStripMenuItem and SubTooStripTextBox of MenuStrip2 in DemoConsole application.\n2. This issue cannot repro in MenuStrip1 in DemoConsole application.","Url":"https://github.com/dotnet/winforms/issues/13539","RelatedDescription":"Open issue \"Unable select ToolStripMenuItem and TooStripTextBox of MenuStrip2 in DemoConsole application\" (#13539)"},{"Id":"3099562232","IsPullRequest":true,"CreatedAt":"2025-05-29T08:13:38","Actor":"Philip-Wang01","Number":"13537","RawContent":null,"Title":"Add unit test for ArrayElementGridEntry.cs file","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\nRelated https://github.com/dotnet/winforms/issues/13442\r\n\r\n## Proposed changes\r\n- Add unit test file: ArrayElementGridEntryTests.cs for ArrayElementGridEntry.cs file.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13537)","Url":"https://github.com/dotnet/winforms/pull/13537","RelatedDescription":"Open PR \"Add unit test for ArrayElementGridEntry.cs file\" (#13537)"},{"Id":"3099506726","IsPullRequest":true,"CreatedAt":"2025-05-29T07:50:40","Actor":"LeafShi1","Number":"13536","RawContent":null,"Title":"Add test for design binding picker","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nRelated #10773\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13536)","Url":"https://github.com/dotnet/winforms/pull/13536","RelatedDescription":"Open PR \"Add test for design binding picker\" (#13536)"},{"Id":"3098907979","IsPullRequest":false,"CreatedAt":"2025-05-29T01:27:43","Actor":"LeafShi1","Number":"13535","RawContent":null,"Title":"Update failIfCoverageEmpty  to use default value to prevent the pipeline from failing","State":"open","Body":"Set the `failIfCoverageEmpty` property in [build.yml ](https://github.com/dotnet/winforms/blob/9db17fd379a4b2f36f6ac274b4700fafd4713876/eng/pipelines/build.yml#L148)and [build-PR.yml](https://github.com/dotnet/winforms/blob/9db17fd379a4b2f36f6ac274b4700fafd4713876/eng/pipelines/build-PR.yml#L145) to the default value to prevent the pipeline from failing due to release code coverage failure\n\nCurrently we are getting error in CI in Initialize job:\n\n```\nStarting: PublishCodeCoverageResults\n==============================================================================\nTask         : Publish code coverage results v2\nDescription  : Publish any of the code coverage results from a build\nVersion      : 2.252.1\nAuthor       : Microsoft Corporation\nHelp         : https://docs.microsoft.com/azure/devops/pipelines/tasks/test/publish-code-coverage-results\n==============================================================================\nFound 0 result(s) matching pattern: D:\\a\\_work\\1\\s\\artifacts\\bin\\CodeCoverage\\coverage\\full\\Cobertura.xml\n##[error]No code coverage results were found to publish.\n```","Url":"https://github.com/dotnet/winforms/issues/13535","RelatedDescription":"Open issue \"Update failIfCoverageEmpty  to use default value to prevent the pipeline from failing\" (#13535)"},{"Id":"3096811854","IsPullRequest":true,"CreatedAt":"2025-05-28T10:10:14","Actor":"LeafShi1","Number":"13534","RawContent":null,"Title":"Fix 13288 by add Task.Delay for test ListView_Click_On_Second_Column_Does_Not_Alter_CheckBoxesAsync","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #13288\r\n\r\n\r\n## Proposed changes\r\n\r\n- Add Task.Delay for test ListView_Click_On_Second_Column_Does_Not_Alter_CheckBoxesAsync\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13534)","Url":"https://github.com/dotnet/winforms/pull/13534","RelatedDescription":"Open PR \"Fix 13288 by add Task.Delay for test ListView_Click_On_Second_Column_Does_Not_Alter_CheckBoxesAsync\" (#13534)"},{"Id":"3096534804","IsPullRequest":true,"CreatedAt":"2025-05-28T08:37:39","Actor":"Philip-Wang01","Number":"13533","RawContent":null,"Title":"Add unit test for GridToolTip.cs file","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\nRelated https://github.com/dotnet/winforms/issues/13442\r\n\r\n## Proposed changes\r\n- Add unit test file: GridToolTipTests.cs for GridToolTip.cs file.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13533)","Url":"https://github.com/dotnet/winforms/pull/13533","RelatedDescription":"Open PR \"Add unit test for GridToolTip.cs file\" (#13533)"},{"Id":"3094661036","IsPullRequest":true,"CreatedAt":"2025-05-27T23:58:39","Actor":"JeremyKuhne","Number":"13530","RawContent":null,"Title":"Handle ThreadContext cache more cleanly","State":"closed","Body":"Switch to a concurrent backing collection. Note that we only ever create them if you ask for them on the current thread.\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13530)","Url":"https://github.com/dotnet/winforms/pull/13530","RelatedDescription":"Closed or merged PR \"Handle ThreadContext cache more cleanly\" (#13530)"},{"Id":"3092995234","IsPullRequest":true,"CreatedAt":"2025-05-27T18:55:12","Actor":"KlausLoeffelmann","Number":"13528","RawContent":null,"Title":"DarkMode (h) PropertyGrid/ComboBox Renderer, Button Image Renderer","State":"closed","Body":"Fixes a series of issures from testing related to the individual versions of the DarkMode ButtonRenderers (ComboBox Button, PropertyGrid Buttons, etc.)\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13528)","Url":"https://github.com/dotnet/winforms/pull/13528","RelatedDescription":"Closed or merged PR \"DarkMode (h) PropertyGrid/ComboBox Renderer, Button Image Renderer\" (#13528)"},{"Id":"3092774417","IsPullRequest":true,"CreatedAt":"2025-05-27T17:37:26","Actor":"Epica3055","Number":"13526","RawContent":null,"Title":"fix #13508 Original text box is not empty after drag and drop the value to a new text box","State":"closed","Body":"Fixes #13508 \r\n\r\ncode snippet before [PR13431](https://github.com/dotnet/winforms/pull/13431)\r\n```\r\n            {\r\n                ClearDropDescription();\r\n                DragDropHelper.Drop(dragEvent);\r\n            }\r\n\r\n            _owner.OnDragDrop(dragEvent);\r\n            *pdwEffect = (DROPEFFECT)dragEvent.Effect;\r\n        }\r\n        else\r\n        {\r\n            *pdwEffect = DROPEFFECT.DROPEFFECT_NONE;\r\n        }\r\n\r\n        _lastEffect = DragDropEffects.None;\r\n        _lastDataObject = null;\r\n        return HRESULT.S_OK;\r\n    }\r\n```\r\ncode snippet after [PR13431](https://github.com/dotnet/winforms/pull/13431)\r\n```\r\n    private HRESULT HandleOnDragDrop(DragEventArgs e, IDataObjectAsyncCapability* asyncCapability, DROPEFFECT* pdwEffect)\r\n    {\r\n#pragma warning disable WFO5003 // Type is for evaluation purposes only\r\n        if (asyncCapability is not null && _owner is IAsyncDropTarget asyncDropTarget)\r\n#pragma warning restore WFO5003\r\n        {\r\n            // We have an implemented IAsyncDropTarget and the drag source supports async operations, push to a\r\n            // worker thread to allow the drop to complete without blocking the UI thread.\r\n            Task.Run(() =>\r\n            {\r\n                DROPEFFECT effect = DROPEFFECT.DROPEFFECT_NONE;\r\n\r\n                try\r\n                {\r\n                    asyncDropTarget.OnAsyncDragDrop(e);\r\n                    effect = (DROPEFFECT)e.Effect;\r\n                }\r\n                finally\r\n                {\r\n                    HRESULT result = asyncCapability->EndOperation(HRESULT.S_OK, null, (uint)effect);\r\n                    asyncCapability->Release();\r\n                }\r\n            });\r\n\r\n            // It isn't clear what we're supposed to do with the effect here as the actual result comes from\r\n            // EndOperation. Perhaps DROPEFFECT_COPY would be a better default?\r\n            *pdwEffect = DROPEFFECT.DROPEFFECT_NONE;\r\n            return HRESULT.S_OK;\r\n        }\r\n\r\n        // We don't have the IAsyncDropTarget or the drag source doesn't support async operations, so just call\r\n        // the normal OnDragDrop.\r\n\r\n        DROPEFFECT effect = DROPEFFECT.DROPEFFECT_NONE;\r\n\r\n        try\r\n        {\r\n            _owner.OnDragDrop(e);\r\n            effect = (DROPEFFECT)e.Effect;\r\n        }\r\n        finally\r\n        {\r\n            if (asyncCapability is not null)\r\n            {\r\n                HRESULT result = asyncCapability->EndOperation(HRESULT.S_OK, null, (uint)effect);\r\n                asyncCapability->Release();\r\n            }\r\n        }\r\n\r\n        return HRESULT.S_OK;\r\n    }\r\n```\r\n\r\nI think we forgot to update `*pdwEffect` after `_owner.OnDragDrop(dragEvent);`\r\n\r\n## Proposed changes\r\n\r\n- \r\n- update `*pdwEffect` after `_owner.OnDragDrop(dragEvent);`\r\n- \r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n<!-- \r\n## Risk\r\n\r\n-\r\n -->\r\n\r\n## Screenshots \r\n### Before\r\n\r\n![Image](https://github.com/user-attachments/assets/63ddefe1-71aa-4210-97aa-f0b7de42d29b)\r\n\r\n### After\r\n\r\n![pull_13526](https://github.com/user-attachments/assets/be832c36-d670-4561-a5f7-aa8d5d223cb4)\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- manually \r\n- \r\n\r\n\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13526)","Url":"https://github.com/dotnet/winforms/pull/13526","RelatedDescription":"Closed or merged PR \"fix #13508 Original text box is not empty after drag and drop the value to a new text box\" (#13526)"},{"Id":"3092884632","IsPullRequest":true,"CreatedAt":"2025-05-27T07:14:13","Actor":"MelonWang1","Number":"13527","RawContent":null,"Title":"Add coverage for ToolStripContainer_ToolStripContainerTypedContro…","State":"open","Body":"Related #13442\r\n\r\n\r\n## Proposed changes\r\n\r\n- Add unit test file: ToolStripContainer_ToolStripContainerTypedControlCollectionTests.cs for public methods of the ToolStripContainer_ToolStripContainerTypedControlCollection.cs\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13527)","Url":"https://github.com/dotnet/winforms/pull/13527","RelatedDescription":"Open PR \"Add coverage for ToolStripContainer_ToolStripContainerTypedContro…\" (#13527)"},{"Id":"3092351901","IsPullRequest":true,"CreatedAt":"2025-05-27T02:45:14","Actor":"dotnet-maestro[bot]","Number":"13525","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/arcade/blob/main/Documentation/UnifiedBuild/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250526.3](https://dev.azure.com/dnceng/internal/_build/results?buildId=2717195)\n- **Date Produced**: May 26, 2025 5:03:21 PM UTC\n- **Commit Diff**: [9d86ce5...f5705c8](https://github.com/dotnet/dotnet/compare/9d86ce59f05e31b1bccb0cd5604f803416796fe4...f5705c8f4c5079bba77bae8698ba1583bde0388c)\n- **Commit**: [f5705c8f4c5079bba77bae8698ba1583bde0388c](https://github.com/dotnet/dotnet/commit/f5705c8f4c5079bba77bae8698ba1583bde0388c)\n- **Branch**: main\n\n**Updated Dependencies**\n- **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.6.25274.104 to 10.0.0-preview.6.25276.103][1]\n- **System.Resources.Extensions**: [from 10.0.0-preview.6.25274.104 to 10.0.0-preview.6.25276.103][1]\n- **System.Windows.Extensions**: [from 10.0.0-preview.6.25274.104 to 10.0.0-preview.6.25276.103][1]\n- **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.6.25274.104 to 10.0.0-preview.6.25276.103][1]\n- **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25274.104 to 10.0.0-preview.6.25276.103][1]\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25274.104 to 10.0.0-preview.6.25276.103][1]\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25274.104 to 10.0.0-preview.6.25276.103][1]\n- **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.6.25274.104 to 10.0.0-preview.6.25276.103][1]\n- **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.6.25274.104 to 10.0.0-preview.6.25276.103][1]\n- **System.Text.Encodings.Web**: [from 10.0.0-preview.6.25274.104 to 10.0.0-preview.6.25276.103][1]\n- **System.Text.Json**: [from 10.0.0-preview.6.25274.104 to 10.0.0-preview.6.25276.103][1]\n- **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.6.25274.104 to 10.0.0-preview.6.25276.103][1]\n- **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.6.25274.104 to 10.0.0-preview.6.25276.103][1]\n- **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.6.25274.104 to 10.0.0-preview.6.25276.103][1]\n- **System.CodeDom**: [from 10.0.0-preview.6.25274.104 to 10.0.0-preview.6.25276.103][1]\n- **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.6.25274.104 to 10.0.0-preview.6.25276.103][1]\n- **System.Formats.Nrbf**: [from 10.0.0-preview.6.25274.104 to 10.0.0-preview.6.25276.103][1]\n- **System.IO.Hashing**: [from 10.0.0-preview.6.25274.104 to 10.0.0-preview.6.25276.103][1]\n- **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25274.104 to 10.0.0-beta.25276.103][1]\n- **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25274.104 to 10.0.0-beta.25276.103][1]\n- **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25274.104 to 10.0.0-beta.25276.103][1]\n- **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25274.104 to 10.0.0-beta.25276.103][1]\n- **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25274.104 to 10.0.0-beta.25276.103][1]\n- **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25274.104 to 10.0.0-beta.25276.103][1]\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/9d86ce59f0...f5705c8f4c\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13525)","Url":"https://github.com/dotnet/winforms/pull/13525","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13525)"},{"Id":"3090389356","IsPullRequest":true,"CreatedAt":"2025-05-26T08:10:41","Actor":"Zheng-Li01","Number":"13524","RawContent":null,"Title":"Add code coverage for DataGridVieLinkCell","State":"open","Body":"Related https://github.com/dotnet/winforms/issues/13442\r\n\r\n## Proposed changes\r\nAdd unit test file: DataGridVieLinkCellTests.cs for DataGridVieLinkCell.cs file.","Url":"https://github.com/dotnet/winforms/pull/13524","RelatedDescription":"Open PR \"Add code coverage for DataGridVieLinkCell\" (#13524)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-06-04T03:30:29.1764446Z","RunDurationInMilliseconds":524}