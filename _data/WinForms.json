{"Data":{"GitHub":{"Issues":[{"Id":"642253422","IsPullRequest":true,"CreatedAt":"2020-06-19T22:56:41","Actor":"weltkante","Number":"3473","RawContent":null,"Title":"WebBrowser doesn't like multiple UI threads","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nWorkaround for #3358\r\n\r\n(Extended version of PR #3423 and #3429)\r\n\r\nLike mentioned on the other PR this is only a workaround and not a final solution, further investigation to the memory corruption issues are desired. There is also the possibility of another memory corruption source we did not pinpoint yet.\r\n\r\n## Proposed changes\r\n\r\nPrevent running WebBrowser control tests on multiple UI threads in parallel as that seems to cause memory corruption (unknown whether root cause is in WinForms or native control)\r\n\r\n## Customer Impact\r\n\r\nno random crashes due to memory corruption in unit tests, should improve CI sucess rates\r\n\r\n## Regression? \r\n\r\nno\r\n\r\n## Risk\r\n\r\nmay slow down tests a bit\r\n\r\n### Before\r\n\r\nrandom CI crashes or test failures that made no sense due to memory corruption\r\n\r\n### After\r\n\r\nprevent memory corruption, allowing CI runs to perform normally\r\n\r\n\r\n## Test methodology\r\n\r\nisolated repro scenario into a separate application, it doesn't seem to cause memory corruption when only one UI thread is running the WebBrowser control\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3473)","Url":"https://github.com/dotnet/winforms/pull/3473","RelatedDescription":"Open PR \"WebBrowser doesn't like multiple UI threads\" (#3473)"},{"Id":"641922573","IsPullRequest":true,"CreatedAt":"2020-06-19T12:07:13","Actor":"dotnet-maestro[bot]","Number":"3472","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200618.14\r\n- **Date Produced**: 6/19/2020 9:24 AM\r\n- **Commit**: f555e6ac7590102f504a1a463b0de69e52418d68\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.7.20318.2 to 5.0.0-preview.7.20318.14\r\n  - **System.CodeDom**: from 5.0.0-preview.7.20318.2 to 5.0.0-preview.7.20318.14\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.7.20318.2 to 5.0.0-preview.7.20318.14\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.7.20318.2 to 5.0.0-preview.7.20318.14\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.7.20318.2 to 5.0.0-preview.7.20318.14\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.7.20318.2 to 5.0.0-preview.7.20318.14\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.7.20318.2 to 5.0.0-preview.7.20318.14\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.7.20318.2 to 5.0.0-preview.7.20318.14\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.7.20318.2 to 5.0.0-preview.7.20318.14\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.7.20318.2 to 5.0.0-preview.7.20318.14\r\n  - **System.Drawing.Common**: from 5.0.0-preview.7.20318.2 to 5.0.0-preview.7.20318.14\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.7.20318.2 to 5.0.0-preview.7.20318.14\r\n  - **System.Security.Permissions**: from 5.0.0-preview.7.20318.2 to 5.0.0-preview.7.20318.14\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.7.20318.2 to 5.0.0-preview.7.20318.14\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.7.20318.2 to 5.0.0-preview.7.20318.14\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3472)","Url":"https://github.com/dotnet/winforms/pull/3472","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/runtime\" (#3472)"},{"Id":"641817076","IsPullRequest":false,"CreatedAt":"2020-06-19T08:59:35","Actor":"Olina-Zhang","Number":"3471","RawContent":null,"Title":"[Accessibility] Narrator cannot announce order information of the sub menu items in MenuStrip","State":"open","Body":"* .NET Core Version: \r\n.Net 5.0.100-preview.7.20314.1 from Net 5.0 master branch\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**Minimal repro:**\r\n1. Extract WinformsFormsApp6.zip with MenuStrip and open it in VS, then build and run this application.\r\n[WindowsFormsApp6.zip](https://github.com/dotnet/winforms/files/4803525/WindowsFormsApp6.zip)\r\n2. Start Narrator, and focus on File menu, then expand it, go through its sub-items “New, Open, Save, Save As, Print, Print Preview, Exist” one by one\r\n\r\n**Actual behavior:**\r\nNarrator cannot announce order information of the sub menu items in MenuStrip:\r\n![image](https://user-images.githubusercontent.com/26474449/85115411-32eff000-b24e-11ea-871d-5309f4e5d069.png)\r\n\r\n**Expected behavior:**\r\nNarrator can announce order information of the sub menu items in MenuStrip\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/3471","RelatedDescription":"Open issue \"[Accessibility] Narrator cannot announce order information of the sub menu items in MenuStrip\" (#3471)"},{"Id":"641150731","IsPullRequest":true,"CreatedAt":"2020-06-19T08:24:12","Actor":"dotnet-maestro[bot]","Number":"3467","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200616.1\r\n- **Date Produced**: 6/16/2020 3:17 PM\r\n- **Commit**: 71b580038fb704df63e03c6b7ae7d2c6a4fdd71d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: from 5.0.0-beta.20309.1 to 5.0.0-beta.20316.1\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20309.1 to 5.0.0-beta.20316.1\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20309.1 to 5.0.0-beta.20316.1\r\n  - **Microsoft.DotNet.Helix.Sdk**: from 5.0.0-beta.20309.1 to 5.0.0-beta.20316.1\r\n  - **Microsoft.DotNet.RemoteExecutor**: from 5.0.0-beta.20309.1 to 5.0.0-beta.20316.1\r\n- **Updates to .NET SDKs:**\r\n  - Updates sdk.version to 5.0.100-preview.6.20310.4\r\n  - Updates tools.dotnet to 5.0.100-preview.6.20310.4\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3467)","Url":"https://github.com/dotnet/winforms/pull/3467","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3467)"},{"Id":"640621512","IsPullRequest":true,"CreatedAt":"2020-06-19T07:07:10","Actor":"hughbe","Number":"3465","RawContent":null,"Title":"Cleanup Critical Exception Handling","State":"closed","Body":"## Proposed Changes\r\n- Remove DbgUtil\r\n- Turn `IsSecurityOrCriticalException` to `IsCriticalException`. Its my understanding that in .NET Core we shouldn't be expecting code assert failures etc./\r\n\r\nI'd really love to see `IsCriticalException` killed off and us to do proper checking. I hate this pattern!","Url":"https://github.com/dotnet/winforms/pull/3465","RelatedDescription":"Closed or merged PR \"Cleanup Critical Exception Handling\" (#3465)"},{"Id":"641643907","IsPullRequest":true,"CreatedAt":"2020-06-19T01:37:32","Actor":"JeremyKuhne","Number":"3470","RawContent":null,"Title":"Add region scoping","State":"open","Body":"- Adds scope structs for GDI regions\r\n- Removes WindowsRegion\r\n- Rework WindowsGraphics and WindowsGraphicsWrapper to dispose safely/correctly\r\n- Rework ActiveXImpl to not retain an active HRGN handle\r\n- Fix some IntPtr != null checks\r\n\r\nThis is another step in trying to get rid of DeviceContext and WindowsGraphics and replace them with struct based contexts.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3470)","Url":"https://github.com/dotnet/winforms/pull/3470","RelatedDescription":"Open PR \"Add region scoping\" (#3470)"},{"Id":"641185598","IsPullRequest":true,"CreatedAt":"2020-06-18T12:56:04","Actor":"sashatankov","Number":"3469","RawContent":null,"Title":"all appearances of \"== null\" are replaced with \"is null\" and all appe…","State":"open","Body":"…arances of \"!= null\" are replaced with \"is not null\"\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n## Proposed changes\r\n\r\n- \r\n- \r\n- \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3469)","Url":"https://github.com/dotnet/winforms/pull/3469","RelatedDescription":"Open PR \"all appearances of \"== null\" are replaced with \"is null\" and all appe…\" (#3469)"},{"Id":"641159732","IsPullRequest":true,"CreatedAt":"2020-06-18T12:36:30","Actor":"dotnet-maestro[bot]","Number":"3468","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200618.2\r\n- **Date Produced**: 6/18/2020 11:02 AM\r\n- **Commit**: 38192e3cbd5610c9fa3d814506424ad93dfa19b2\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.7.20317.2 to 5.0.0-preview.7.20318.2\r\n  - **System.CodeDom**: from 5.0.0-preview.7.20317.2 to 5.0.0-preview.7.20318.2\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.7.20317.2 to 5.0.0-preview.7.20318.2\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.7.20317.2 to 5.0.0-preview.7.20318.2\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.7.20317.2 to 5.0.0-preview.7.20318.2\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.7.20317.2 to 5.0.0-preview.7.20318.2\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.7.20317.2 to 5.0.0-preview.7.20318.2\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.7.20317.2 to 5.0.0-preview.7.20318.2\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.7.20317.2 to 5.0.0-preview.7.20318.2\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.7.20317.2 to 5.0.0-preview.7.20318.2\r\n  - **System.Drawing.Common**: from 5.0.0-preview.7.20317.2 to 5.0.0-preview.7.20318.2\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.7.20317.2 to 5.0.0-preview.7.20318.2\r\n  - **System.Security.Permissions**: from 5.0.0-preview.7.20317.2 to 5.0.0-preview.7.20318.2\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.7.20317.2 to 5.0.0-preview.7.20318.2\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.7.20317.2 to 5.0.0-preview.7.20318.2\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3468)","Url":"https://github.com/dotnet/winforms/pull/3468","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3468)"},{"Id":"638381953","IsPullRequest":true,"CreatedAt":"2020-06-18T11:10:12","Actor":"gpetrou","Number":"3448","RawContent":null,"Title":"Add more combinations of REFLECT with other values in WM enum","State":"closed","Body":"## Proposed changes\r\n\r\n- Add more combinations of REFLECT with other values in WM enum.\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3448)","Url":"https://github.com/dotnet/winforms/pull/3448","RelatedDescription":"Closed or merged PR \"Add more combinations of REFLECT with other values in WM enum\" (#3448)"},{"Id":"639612300","IsPullRequest":true,"CreatedAt":"2020-06-18T10:52:51","Actor":"dotnet-maestro[bot]","Number":"3457","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200617.2\r\n- **Date Produced**: 6/17/2020 9:37 AM\r\n- **Commit**: fa7c99d6b2538591edf609b8d3a5f321f9ee7850\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.7.20314.1 to 5.0.0-preview.7.20317.2\r\n  - **System.CodeDom**: from 5.0.0-preview.7.20314.1 to 5.0.0-preview.7.20317.2\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.7.20314.1 to 5.0.0-preview.7.20317.2\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.7.20314.1 to 5.0.0-preview.7.20317.2\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.7.20314.1 to 5.0.0-preview.7.20317.2\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.7.20314.1 to 5.0.0-preview.7.20317.2\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.7.20314.1 to 5.0.0-preview.7.20317.2\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.7.20314.1 to 5.0.0-preview.7.20317.2\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.7.20314.1 to 5.0.0-preview.7.20317.2\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.7.20314.1 to 5.0.0-preview.7.20317.2\r\n  - **System.Drawing.Common**: from 5.0.0-preview.7.20314.1 to 5.0.0-preview.7.20317.2\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.7.20314.1 to 5.0.0-preview.7.20317.2\r\n  - **System.Security.Permissions**: from 5.0.0-preview.7.20314.1 to 5.0.0-preview.7.20317.2\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.7.20314.1 to 5.0.0-preview.7.20317.2\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.7.20314.1 to 5.0.0-preview.7.20317.2\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3457)\r\n","Url":"https://github.com/dotnet/winforms/pull/3457","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3457)"},{"Id":"639353214","IsPullRequest":true,"CreatedAt":"2020-06-18T06:23:41","Actor":"RussKie","Number":"3451","RawContent":null,"Title":"Enable nullable reference types for System.Windows.Forms.Primitives","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nBased on work started by @sharwell in #2676, renders it obsolete.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3451)","Url":"https://github.com/dotnet/winforms/pull/3451","RelatedDescription":"Closed or merged PR \"Enable nullable reference types for System.Windows.Forms.Primitives\" (#3451)"},{"Id":"640599906","IsPullRequest":true,"CreatedAt":"2020-06-18T03:50:59","Actor":"hughbe","Number":"3463","RawContent":null,"Title":"Remove StringSorter","State":"closed","Body":"Most of the code was dead anyway. We only call it in one place. Prefer using `Array.Sort`!\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3463)","Url":"https://github.com/dotnet/winforms/pull/3463","RelatedDescription":"Closed or merged PR \"Remove StringSorter\" (#3463)"},{"Id":"640650967","IsPullRequest":true,"CreatedAt":"2020-06-17T18:24:20","Actor":"hughbe","Number":"3466","RawContent":null,"Title":"Add tests for hidden rtf text","State":"open","Body":"## Proposed Changes\r\n- Add tests for hidden rtf text\r\n\r\nAiming to fix https://github.com/dotnet/winforms/issues/3399\r\nCan't quite repro right now\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3466)","Url":"https://github.com/dotnet/winforms/pull/3466","RelatedDescription":"Open PR \"Add tests for hidden rtf text\" (#3466)"},{"Id":"640601730","IsPullRequest":false,"CreatedAt":"2020-06-17T17:00:43","Actor":"harborsiem","Number":"3464","RawContent":null,"Title":"Vista part of the FolderBrowserDialog should be more compatible","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n.NET Core SDK (gemäß \"global.json\"):\r\n Version:   3.1.301\r\n Commit:    7feb845744\r\n\r\nLaufzeitumgebung:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.301\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.5\r\n  Commit:  65cd789777\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\nI set the SelectedPath property of the FolderBrowserDialog to string.Empty or to \"D:\\\". In this both cases the FolderBrowserDialog will show me any directory (possibly shows me the last directory I have used with OpenFileDialog).\r\n\r\n![FolderBrowser_blank_Core](https://user-images.githubusercontent.com/28147549/84926422-a9b0b000-b0cb-11ea-9237-ebea757642b6.png)\r\n\r\nWhen I set a directory to SelectedPath like \"D:\\Data\" the FolderBrowserDialog will show this directory (this will be the correct behavior)\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n\r\n**Expected behavior:**\r\n\r\nSelectedPath = string.Empty should show this:\r\n![FolderBrowser_blank](https://user-images.githubusercontent.com/28147549/84926318-7ec65c00-b0cb-11ea-8dd5-e8d0820504ea.png)\r\n\r\nSelectedPath = \"D:\\\" should show this:\r\n![FolderBrowser_d](https://user-images.githubusercontent.com/28147549/84926359-8ab21e00-b0cb-11ea-8572-1e353ecd5433.png)\r\n\r\n\r\n**Minimal repro:**\r\n\r\nFolderBrowserDialog dialog = new FolderBrowserDialog();\r\ndialog.SelectedPath = string.Empty;\r\ndialog.ShowDialog();","Url":"https://github.com/dotnet/winforms/issues/3464","RelatedDescription":"Open issue \"Vista part of the FolderBrowserDialog should be more compatible\" (#3464)"},{"Id":"640227046","IsPullRequest":true,"CreatedAt":"2020-06-17T08:26:38","Actor":"v-chmart","Number":"3462","RawContent":null,"Title":"LOC CHECKIN | dotnet/winforms master | 20200617","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\nLocalization update only\r\n\r\n## Proposed changes\r\n\r\n- \r\n- \r\n- \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3462)","Url":"https://github.com/dotnet/winforms/pull/3462","RelatedDescription":"Closed or merged PR \"LOC CHECKIN | dotnet/winforms master | 20200617\" (#3462)"},{"Id":"640226403","IsPullRequest":true,"CreatedAt":"2020-06-17T07:57:41","Actor":"RussKie","Number":"3461","RawContent":null,"Title":"fix MDI forms lost sub control box","State":"open","Body":"\r\nFixes #3029\r\n\r\n\r\n\r\n## Proposed changes\r\n\r\nWith the deprecation and removal of `MainMenu` control in #2091 one of MDI scenarios got broken where both parent and child forms don't have `MainMenuStrip` property set nor have `MainMenuStrip` instance added to their respective `Controls` collection.\r\n\r\nThe fix restores setting an MDI menu via `WM_MDISETMENU` message to the parent form.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\nCustomers who use MDI scenarios without main menu in both parent or child forms won't be able to minimise maximised child forms\r\n\r\n| net472 | netcoreapp3.1 |\r\n| -- | --- |\r\n| ![image](https://user-images.githubusercontent.com/4403806/84857263-fab0ac00-b0ab-11ea-9639-a6db8f04cff4.png) | ![image](https://user-images.githubusercontent.com/4403806/84860154-e96a9e00-b0b1-11ea-857f-e46b6916737e.png) |\r\n\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal. The use case is likely very niche, MDI scenarios without main menu are not very usable.\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n<details>\r\n<summary>👉 👉 👉  Click for lots of pretty pictures... 🖼️ 🖼️ 🖼️ </summary>\r\n\r\n| Parent | Child | Screenshot | Screenshot |\r\n|--- | --- |--- | --- |\r\n| - | - | ![image](https://user-images.githubusercontent.com/4403806/84857307-13b95d00-b0ac-11ea-9c79-fa921f61ce2e.png)<br/>![image](https://user-images.githubusercontent.com/4403806/84860225-0a32f380-b0b2-11ea-9013-e49f78784567.png)<br/>![image](https://user-images.githubusercontent.com/4403806/84865424-87af3180-b0bb-11ea-8781-77daf0d0ea32.png) | ![image](https://user-images.githubusercontent.com/4403806/84857263-fab0ac00-b0ab-11ea-9639-a6db8f04cff4.png)<br/>![image](https://user-images.githubusercontent.com/4403806/84860154-e96a9e00-b0b1-11ea-857f-e46b6916737e.png)<br/>![image](https://user-images.githubusercontent.com/4403806/84865453-93025d00-b0bb-11ea-99a0-792e73f9d1df.png) |\r\n| `Controls.Add(menuStrip)`, `MainMenuStrip` = null | - | ![image](https://user-images.githubusercontent.com/4403806/84857740-0b155680-b0ad-11ea-9ed6-3cb26a48d63e.png)<br/>![image](https://user-images.githubusercontent.com/4403806/84860431-59792400-b0b2-11ea-916d-aca30e4e0f42.png)<br/>![image](https://user-images.githubusercontent.com/4403806/84865604-db217f80-b0bb-11ea-9dea-a3d68e32c30c.png) | ![image](https://user-images.githubusercontent.com/4403806/84857729-0355b200-b0ad-11ea-9356-4f320db58ae8.png)<br/>![image](https://user-images.githubusercontent.com/4403806/84860422-541bd980-b0b2-11ea-975f-c8cdd6e651b7.png)<br/>![image](https://user-images.githubusercontent.com/4403806/84865620-e2488d80-b0bb-11ea-874e-d5d56b5bbb15.png) |\r\n| `Controls.Add(menuStrip)`, `MainMenuStrip` = `menuStrip` | - | ![image](https://user-images.githubusercontent.com/4403806/84857660-e325f300-b0ac-11ea-9edc-fb84de7b7e6d.png)<br/>![image](https://user-images.githubusercontent.com/4403806/84860571-9cd39280-b0b2-11ea-97d2-79c62d4d4853.png)<br/>![image](https://user-images.githubusercontent.com/4403806/84865971-70247880-b0bc-11ea-806c-0235a916f881.png) | ![image](https://user-images.githubusercontent.com/4403806/84857651-dacdb800-b0ac-11ea-80e7-d5b0d1dfc5cc.png)<br/>![image](https://user-images.githubusercontent.com/4403806/84860539-904f3a00-b0b2-11ea-9c4a-63e539aa1855.png)<br/>![image](https://user-images.githubusercontent.com/4403806/84866018-7d416780-b0bc-11ea-906e-62538a546273.png) |\r\n| - | `Controls.Add(menuStrip)`, `MainMenuStrip` = null | ![image](https://user-images.githubusercontent.com/4403806/84858292-3a789300-b0ae-11ea-829d-beaf0c54e8a0.png)<br/>![image](https://user-images.githubusercontent.com/4403806/84860742-f2a83a80-b0b2-11ea-9009-b22867cfd122.png)<br/>![image](https://user-images.githubusercontent.com/4403806/84866248-c98ca780-b0bc-11ea-8aeb-9ce5800f5d1c.png) | ![image](https://user-images.githubusercontent.com/4403806/84858274-30ef2b00-b0ae-11ea-8478-d4bec4ce8bad.png)<br/>![image](https://user-images.githubusercontent.com/4403806/84860730-ecb25980-b0b2-11ea-9053-3ca3e74f7256.png)<br/>![image](https://user-images.githubusercontent.com/4403806/84866268-d14c4c00-b0bc-11ea-91ae-b1e8f15f3acd.png) |\r\n| - | `Controls.Add(menuStrip)`, `MainMenuStrip` = `menuStrip` | ![image](https://user-images.githubusercontent.com/4403806/84858434-81ff1f00-b0ae-11ea-8540-359f7d5a2992.png)<br/>![image](https://user-images.githubusercontent.com/4403806/84860806-153a5380-b0b3-11ea-97cb-41330d267ebc.png)<br/>![image](https://user-images.githubusercontent.com/4403806/84866477-1f614f80-b0bd-11ea-8de3-d7eb7b88d89c.png) | ![image](https://user-images.githubusercontent.com/4403806/84858445-87f50000-b0ae-11ea-981e-6ed729df8564.png)<br/>![image](https://user-images.githubusercontent.com/4403806/84860798-11a6cc80-b0b3-11ea-9eda-4befca74d4a9.png)<br/>![image](https://user-images.githubusercontent.com/4403806/84866493-25efc700-b0bd-11ea-9e30-c7f502b64541.png) |\r\n| `Controls.Add(menuStrip)`, `MainMenuStrip` = null | `Controls.Add(menuStrip)`, `MainMenuStrip` = `null/menuStrip` | ![image](https://user-images.githubusercontent.com/4403806/84859995-95f85000-b0b1-11ea-8b01-5d2a680d3d67.png)<br/>![image](https://user-images.githubusercontent.com/4403806/84859877-5598d200-b0b1-11ea-8613-98574aa498f7.png)<br/>![image](https://user-images.githubusercontent.com/4403806/84867469-8c291980-b0be-11ea-90b4-4961a2a903a0.png) | ![image](https://user-images.githubusercontent.com/4403806/84858593-d6a29a00-b0ae-11ea-8d55-620fa5b1b8f0.png)<br/>![image](https://user-images.githubusercontent.com/4403806/84859882-5a5d8600-b0b1-11ea-93b9-eb25daa95576.png)<br/>![image](https://user-images.githubusercontent.com/4403806/84867409-73206880-b0be-11ea-9c16-d309f920a82c.png) |\r\n| `Controls.Add(menuStrip)`, `MainMenuStrip` = `menuStrip` | `Controls.Add(menuStrip)`, `MainMenuStrip` = null | ![image](https://user-images.githubusercontent.com/4403806/84859645-eae79680-b0b0-11ea-9648-ae822ee96539.png)<br/>![image](https://user-images.githubusercontent.com/4403806/84859565-c2f83300-b0b0-11ea-9375-8ff3d8117918.png)<br/>![image](https://user-images.githubusercontent.com/4403806/84868888-aebc3200-b0c0-11ea-9adf-bd6c96907d8a.png) | ![image](https://user-images.githubusercontent.com/4403806/84858815-3bf68b00-b0af-11ea-93b7-a5e44152670c.png)<br/>![image](https://user-images.githubusercontent.com/4403806/84859545-bc69bb80-b0b0-11ea-83c5-c2b66e0981cf.png)<br/>![image](https://user-images.githubusercontent.com/4403806/84868913-b67bd680-b0c0-11ea-834d-c526a9c038b0.png) |\r\n| `Controls.Add(menuStrip)`, `MainMenuStrip` = `menuStrip` | `Controls.Add(menuStrip)`, `MainMenuStrip` = `menuStrip` | ![image](https://user-images.githubusercontent.com/4403806/84859449-8f1d0d80-b0b0-11ea-9416-4378dd8c2535.png)<br />![image](https://user-images.githubusercontent.com/4403806/84859302-33eb1b00-b0b0-11ea-8829-c5af9a0c3787.png)<br/>![image](https://user-images.githubusercontent.com/4403806/84869095-f3e06400-b0c0-11ea-8e12-00c74a9d465b.png) | ![image](https://user-images.githubusercontent.com/4403806/84858845-4dd82e00-b0af-11ea-8b65-c0763496b85b.png)<br />![image](https://user-images.githubusercontent.com/4403806/84859277-2a61b300-b0b0-11ea-863d-a168c0d964c7.png)<br/>![image](https://user-images.githubusercontent.com/4403806/84869112-f93dae80-b0c0-11ea-8662-60574eb3b398.png) |\r\n\r\n</details>\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual comparison of net472 vs netcoreapp3.1 vs net5.0 (current commit)\r\n\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3461)","Url":"https://github.com/dotnet/winforms/pull/3461","RelatedDescription":"Open PR \"fix MDI forms lost sub control box\" (#3461)"},{"Id":"640096866","IsPullRequest":false,"CreatedAt":"2020-06-17T02:43:34","Actor":"Vino-Wang","Number":"3460","RawContent":null,"Title":"The icon is the same for both ListBox & CheckedListBox controls in Toolbox window","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n5.0 Preview 7 5.0.100-preview.7.20316.3\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\nThe icon is the same for ListBox & CheckedListBox controls.\r\n![Same](https://user-images.githubusercontent.com/18568603/84849160-4b61de00-b087-11ea-98a8-75df217ad0c7.png)\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n\r\n**Expected behavior:**\r\nThe icon should not be the same.\r\n![NotSame](https://user-images.githubusercontent.com/18568603/84849163-4dc43800-b087-11ea-8750-c8d46bd7c09f.png)\r\n\r\n**Minimal repro:**\r\n1. Create a winforms core project.\r\n2. Type 'listBox' words in Toolbox's search box.\r\n3. Observe the controls' icon.","Url":"https://github.com/dotnet/winforms/issues/3460","RelatedDescription":"Open issue \"The icon is the same for both ListBox & CheckedListBox controls in Toolbox window\" (#3460)"},{"Id":"639975363","IsPullRequest":true,"CreatedAt":"2020-06-17T01:17:33","Actor":"JeremyKuhne","Number":"3458","RawContent":null,"Title":"Fix start-vs.cmd","State":"closed","Body":"After repaving I discovered my previous changes weren't correct. You can't check exists on partial paths. Quoting was wonky, etc.\r\n\r\nI've tested this one thoroughly for all three handled states and it appears to work fine.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3458)","Url":"https://github.com/dotnet/winforms/pull/3458","RelatedDescription":"Closed or merged PR \"Fix start-vs.cmd\" (#3458)"},{"Id":"640066342","IsPullRequest":false,"CreatedAt":"2020-06-17T01:06:57","Actor":"RussKie","Number":"3459","RawContent":null,"Title":"Replace `== null` and `!= null` with `is null` and `is not null`","State":"open","Body":"\r\n\r\n**Expected behavior:**\r\n\r\nScrub the codebase to replace all instances:\r\n1. `== null` with `is null`, and\r\n1. `!= null` with `is not null` (**when C# 9.0 is generally available**)","Url":"https://github.com/dotnet/winforms/issues/3459","RelatedDescription":"Open issue \"Replace `== null` and `!= null` with `is null` and `is not null`\" (#3459)"},{"Id":"639601410","IsPullRequest":false,"CreatedAt":"2020-06-16T11:49:38","Actor":"weltkante","Number":"3456","RawContent":null,"Title":"Flaky Clipboard Unit Tests","State":"open","Body":"**.NET Core Version:**\r\nmaster\r\n\r\n**Have you experienced this same bug with .NET Framework?:**\r\nno\r\n\r\n**Problem description:**\r\n[Noticed](https://github.com/dotnet/winforms/pull/1932#issuecomment-644700150) as a flaky test:\r\n\r\n> System.Windows.Forms.Tests.TextBoxBaseTests.TextBoxBase_Paste_InvokeNotEmpty_Success [FAIL]\r\n      Assert.Equal() Failure\r\n                  (pos 1)\r\n      Expected: abc\r\n      Actual:   a\r\n                  (pos 1)\r\n      Stack Trace:\r\n        F:\\workspace\\_work\\1\\s\\src\\System.Windows.Forms\\tests\\UnitTests\\TextBoxBaseTests.cs(5957,0): at System.Windows.Forms.Tests.TextBoxBaseTests.TextBoxBase_Paste_InvokeNotEmpty_Success()\r\n\r\nTest seems to assume clipboard is empty/nonfunctional (there is at least one more test along these, should review for more clipboard-dependent tests)\r\n\r\nAlso any clipboard tests need to be `[Collection(\"Sequential\")]` to avoid overlapping with other clipboard tests. Is it worth making the whole test class sequential just due to that single test? should the test be moved?\r\n\r\n**Expected behavior:**\r\nClipboard based tests initialize clipboard to be in known state and are marked for sequential execution\r\n\r\n**Minimal repro:**\r\nnone, flaky test","Url":"https://github.com/dotnet/winforms/issues/3456","RelatedDescription":"Open issue \"Flaky Clipboard Unit Tests\" (#3456)"},{"Id":"639554237","IsPullRequest":false,"CreatedAt":"2020-06-16T10:29:28","Actor":"Jessie-Zhang01","Number":"3455","RawContent":null,"Title":"[Accessibility] Narrator cannot announce the content in RichTextBox.","State":"open","Body":"* .NET Core Version: \r\n.Net 5.0.100-preview.7.20314.1 from 5.0 master branch\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**Minimal repro:**\r\n\r\n1. Extract “Private_1588_LTR_without_ComboBox.zip” and open in VS, then build and run this application. \r\n2. Enter \"rich\" content into RichTextBox, then start Narrator and focus on RichTextBox and observe Narrator behavior.\r\n\r\n**Expected behavior:**\r\nNarrator should announce the content \"rich' in RichTextBox.\r\n![image](https://user-images.githubusercontent.com/45864649/84763618-1316bd00-afff-11ea-9b1f-bdae36ec591f.png)\r\n\r\n**Actual behavior:**\r\nNarrator cannot announce the content \"rich' in RichTextBox.\r\n![image](https://user-images.githubusercontent.com/45864649/84763561-fc706600-affe-11ea-86be-7a9feeda0926.png)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/3455","RelatedDescription":"Open issue \"[Accessibility] Narrator cannot announce the content in RichTextBox.\" (#3455)"},{"Id":"639552714","IsPullRequest":false,"CreatedAt":"2020-06-16T10:26:54","Actor":"Marie-Shi","Number":"3454","RawContent":null,"Title":"[Accessibility]The narrator announces twice and announces additional \"1\" when value more than \"10\" using Keyboard \"UP/Down\" arrows to change NumericUpDown value","State":"open","Body":"* .NET Core Version: \r\n.Net 5.0.100-preview.7.20314.1 from master branch + latest master VS2019 with latest core designer\r\n\r\n**Steps to reproduce:**\r\n**Scenario a:**\r\n1.\tExtract “Release dlls.zip” and replace them to .Net 5.0.\r\n[Release dlls.zip](https://github.com/dotnet/winforms/files/4786001/Release.dlls.zip)\r\n\r\n2.\tExtract “Private_1588_LTR_without_ComboBox.zip” and open in in VS, then build and run this application.\r\n[Private_1588_LTR_without_ComboBox.zip](https://github.com/dotnet/winforms/files/4786002/Private_1588_LTR_without_ComboBox.zip)\r\n\r\n3.\tStart Narrator and focus on NumericUpDown, using Keyboard \"UP/Down\" arrows to change NumericUpDown value and observe Narrator behavior.\r\n\r\n**More info:** \r\n1.\tThis issue cannot repro without private.\r\n2.\tThis issue can repro in RTL and LTR environment.\r\n3.\tThis issue can repro in 1809 OS, cannot repro in 1909 OS.\r\n\r\n**Actual behavior:**\r\nUsing Keyboard \"UP/Down\" arrows to change NumericUpDown value, the narrator announces twice.\r\n![a](https://user-images.githubusercontent.com/45864017/84762851-ed3ce880-affd-11ea-8c27-9020b82b8c42.png)\r\n\r\n**Expected behavior:**\r\nUsing Keyboard \"UP/Down\" arrows to change NumericUpDown value, the narrator only announces once time. \r\n![a1](https://user-images.githubusercontent.com/45864017/84762861-ef9f4280-affd-11ea-8882-1e7b6edfd5ed.png)\r\n\r\n**Scenario b:**\r\n1.\tRepeat Step1, Step2 from **Scenario a**.\r\n2.\tStart Narrator and focus on NumericUpDown, using Keyboard \"UP/Down\" arrows to change NumericUpDown value until more than \"10\"and observe Narrator behavior.\r\n\r\nMore info:\r\n1.\tThis issue cannot repro when using Mouse to increase Numericupdown value.\r\n2.\tThis issue cannot repro without private.\r\n3.\tThis issue can repro in 1809 OS and 1909 OS.\r\n4.\tThis issue can repro in RTL and LTR environment.\r\na.\tIn the RTL environment, narrator focuses on the single digit when NumericUpDown increases to two digits.\r\nb.\tIn the LTR environment, the narrator focuses on the tenth place when NumericUpDown increases to two digits.\r\n\r\n**Actual behavior:**\r\nNarrator announces additional \"1\" when value more than \"10\" using Keyboard \"UP/Down\" arrows to change NumericUpDown value.\r\n![b](https://user-images.githubusercontent.com/45864017/84762872-f4fc8d00-affd-11ea-8e06-707d4eba31ad.png)\r\n![ComboBox_issue](https://user-images.githubusercontent.com/45864017/84763126-4f95e900-affe-11ea-840b-b582aeadd3e6.gif)\r\n\r\n**Expected behavior:**\r\nNarrator cannot announce additional \"1\" when value more than \"10\" using Keyboard \"UP/Down\" arrows to change NumericUpDown value.","Url":"https://github.com/dotnet/winforms/issues/3454","RelatedDescription":"Open issue \"[Accessibility]The narrator announces twice and announces additional \"1\" when value more than \"10\" using Keyboard \"UP/Down\" arrows to change NumericUpDown value\" (#3454)"},{"Id":"639551418","IsPullRequest":false,"CreatedAt":"2020-06-16T10:24:51","Actor":"Jessie-Zhang01","Number":"3453","RawContent":null,"Title":"[Accessibility] The narrator announces content is confusion when using mouse to increase NumericUpDown value","State":"open","Body":"* .NET Core Version: \r\n.Net 5.0.100-preview.7.20314.1 from 5.0 master branch\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**Minimal repro:**\r\n\r\n1. Extract the private dlls file-“Release dlls.zip” and replace them under location \"C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App\\5.0.0-preview.7.20311.4\".\r\n2. Extract “Private_1588_LTR_without_ComboBox.zip” and open in in VS, then build and run this application.\r\n3. Start Narrator and focus on NumericUpDown, using mouse to increase NumericUpDown value and observe Narrator behavior.\r\n[Release dlls.zip](https://github.com/dotnet/winforms/files/4785901/Release.dlls.zip)\r\n[Private_1588_LTR_without_ComboBox.zip](https://github.com/dotnet/winforms/files/4785903/Private_1588_LTR_without_ComboBox.zip)\r\n\r\n**Expected behavior:**\r\nThe narrator should announces the correct content when using mouse to increase NumericUpDown value.\r\n\r\n**Actual behavior:**\r\nThe narrator announces content is confusion when using mouse to increase NumericUpDown value.\r\n![image](https://user-images.githubusercontent.com/45864649/84763354-a13e7380-affe-11ea-8f6c-0f2af0a7902e.png)\r\n![Numeric_increase_by_mouse](https://user-images.githubusercontent.com/45864649/84762934-05146c80-affe-11ea-920b-7bff9f198e62.gif)\r\n","Url":"https://github.com/dotnet/winforms/issues/3453","RelatedDescription":"Open issue \"[Accessibility] The narrator announces content is confusion when using mouse to increase NumericUpDown value\" (#3453)"},{"Id":"639535128","IsPullRequest":false,"CreatedAt":"2020-06-16T09:59:22","Actor":"Jessie-Zhang01","Number":"3452","RawContent":null,"Title":"[Accessibility] ComboBox control causes Narrator and Inspect not respond","State":"open","Body":"* .NET Core Version: \r\n.Net 5.0.100-preview.7.20314.1 from 5.0 master branch\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**More Info:**\r\n\r\n1. This issue can also reproduce on without Private.\r\n2. This issue can reproduce in RTL and LTR environment.\r\n\r\n**Minimal repro:**\r\n\r\n1. Open the attached ‘WindowsFormsApp3’ application in VS, then build and run it.\r\n2. Open Narrator or Inspect, then focus it's cursor to the ComboBox control.\r\n[WindowsFormsApp4.zip](https://github.com/dotnet/winforms/files/4785850/WindowsFormsApp4.zip)\r\n\r\n**Expected behavior:**\r\nNarrator or Inspect's cursor focuses on the ComboBox control and works fine.\r\n\r\n**Actual behavior:**\r\nComboBox control causes Narrator and Inspect not respond.\r\n![1909-NewIssue2](https://user-images.githubusercontent.com/45864649/84760214-47d44580-affa-11ea-85eb-7d3b20e0829d.gif)\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/3452","RelatedDescription":"Open issue \"[Accessibility] ComboBox control causes Narrator and Inspect not respond\" (#3452)"},{"Id":"638379685","IsPullRequest":true,"CreatedAt":"2020-06-16T02:05:26","Actor":"gpetrou","Number":"3447","RawContent":null,"Title":"Add CLIENTCREATESTRUCT in Interop User32 and remove unused COMRECT","State":"closed","Body":"## Proposed changes\r\n\r\n- Add CLIENTCREATESTRUCT in Interop User32 and remove the corresponding class from NativeMethods.cs.\r\n- Remove unused COMRECT.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3447)","Url":"https://github.com/dotnet/winforms/pull/3447","RelatedDescription":"Closed or merged PR \"Add CLIENTCREATESTRUCT in Interop User32 and remove unused COMRECT\" (#3447)"},{"Id":"639205913","IsPullRequest":false,"CreatedAt":"2020-06-15T21:58:55","Actor":"weltkante","Number":"3450","RawContent":null,"Title":"Leaking DeviceContext instances in unit tests","State":"open","Body":"**.NET Core Version:**\r\ngithub master\r\n\r\n**Have you experienced this same bug with .NET Framework?:**\r\nunknown (cannot debug Desktop Framework source to determine if ErrorProvider leaks there as well)\r\n\r\n**Problem description:**\r\nWhile investigating control handle leaks in the unit tests I also noticed significant `DeviceContext` leaks. They are not permanent leaks, the GC does clean them up, but they are nondeterministic and released on a different thread than they were created on - don't know if thats any issue, probably not since tests seem to be running fine generally. I also don't know if there is any relation to previously observed GDI resource bottlenecks on the CI machine.\r\n\r\n* `WindowsGraphicsCacheManager` caches a `DeviceContext` for each UI thread but never releases it, so it will leak and be GC'ed. Since unit testing creates a lot of test threads this also cycles a lot of `DeviceContext` instances through the GC.\r\n\r\n<details><summary>Stack Trace Example</summary>\r\n\r\n### Test:\r\nSystem.Windows.Forms.Tests.AccessibleObjects.MonthCalendarAccessibleObjectTests.MonthCalendarAccessibleObject_GetCalendarCell_DoesntThrowException_If_ParentAccessibleObject_IsNull\r\n\r\n### Stacktrace:\r\n```\r\n   at System.Windows.Forms.Internal.DeviceContext..ctor(IntPtr hDC, DeviceContextType dcType)\r\n   at System.Windows.Forms.Internal.DeviceContext.FromCompatibleDC(IntPtr hdc)\r\n   at System.Windows.Forms.Internal.WindowsGraphics.CreateMeasurementWindowsGraphics()\r\n   at System.Windows.Forms.Internal.WindowsGraphicsCacheManager.get_MeasurementGraphics()\r\n   at System.Windows.Forms.Internal.WindowsFont.FromFont(Font font, QUALITY fontQuality)\r\n   at System.Windows.Forms.MonthCalendar.GetMinReqRect(Int32 newDimensionLength, Boolean updateRows, Boolean updateCols)\r\n   at System.Windows.Forms.MonthCalendar.GetMinReqRect()\r\n   at System.Windows.Forms.MonthCalendar.get_DefaultSize()\r\n   at System.Windows.Forms.Control..ctor(Boolean autoInstallSyncContext)\r\n   at System.Windows.Forms.Control..ctor()\r\n   at System.Windows.Forms.MonthCalendar..ctor()\r\n   at System.Windows.Forms.Tests.AccessibleObjects.MonthCalendarAccessibleObjectTests.MonthCalendarAccessibleObject_GetCalendarCell_DoesntThrowException_If_ParentAccessibleObject_IsNull()\r\n```\r\n\r\n</details>\r\n\r\n* The `ErrorProvider` creates a private nested class `ErrorWindow` which leaks _multiple_ `DeviceContext` instances from `CreateMirrorDC` which are never disposed correctly even though the `ErrorProvider` and its controls seem to be disposed properly.\r\n\r\n  This happens in the `ErrorProviderAccessibleObjectTests` which now does have `Dispose` method and is verified to be called, but also on other `ErrorProvider` tests (see example C) which don't use instance-level fields. I may have overlooked something but it is not clear to me what additional `Dispose` calls are needed to clean up an `ErrorProvider` correctly, so its currently unknown if its tests not disposing properly or the implementation not disposing properly.\r\n\r\n<details><summary>Stack Trace Example A</summary>\r\n\r\n### Test:\r\nSystem.Windows.Forms.Tests.AccessibleObjects.ErrorProviderAccessibleObjectTests.ErrorProvider_NameDoesntEqualControlTypeOrChildName\r\n\r\n### Stacktrace:\r\n```\r\n   at System.Windows.Forms.Internal.DeviceContext..ctor(IntPtr hDC, DeviceContextType dcType)\r\n   at System.Windows.Forms.Internal.DeviceContext.FromHdc(IntPtr hdc)\r\n   at System.Windows.Forms.ErrorProvider.ErrorWindow.CreateMirrorDC(IntPtr hdc, Int32 originOffset)\r\n   at System.Windows.Forms.ErrorProvider.ErrorWindow.Update(Boolean timerCaused)\r\n   at System.Windows.Forms.ErrorProvider.ErrorWindow.Add(ControlItem item)\r\n   at System.Windows.Forms.ErrorProvider.ControlItem.AddToWindow()\r\n   at System.Windows.Forms.ErrorProvider.ControlItem.set_Error(String value)\r\n   at System.Windows.Forms.ErrorProvider.SetError(Control control, String value)\r\n   at System.Windows.Forms.Tests.AccessibleObjects.ErrorProviderAccessibleObjectTests..ctor()\r\n```\r\n\r\n</details>\r\n\r\n<details><summary>Stack Trace Example B</summary>\r\n\r\n### Test:\r\nSystem.Windows.Forms.Tests.AccessibleObjects.ErrorProviderAccessibleObjectTests.ErrorProvider_CorrectErrorValue\r\n\r\n### Stacktrace:\r\n```\r\n   at System.Windows.Forms.Internal.DeviceContext..ctor(IntPtr hDC, DeviceContextType dcType)\r\n   at System.Windows.Forms.Internal.DeviceContext.FromHdc(IntPtr hdc)\r\n   at System.Windows.Forms.ErrorProvider.ErrorWindow.CreateMirrorDC(IntPtr hdc, Int32 originOffset)\r\n   at System.Windows.Forms.ErrorProvider.ErrorWindow.Update(Boolean timerCaused)\r\n   at System.Windows.Forms.ErrorProvider.ErrorWindow.StartBlinking()\r\n   at System.Windows.Forms.ErrorProvider.ControlItem.StartBlinking()\r\n   at System.Windows.Forms.ErrorProvider.ControlItem.AddToWindow()\r\n   at System.Windows.Forms.ErrorProvider.ControlItem.set_Error(String value)\r\n   at System.Windows.Forms.ErrorProvider.SetError(Control control, String value)\r\n   at System.Windows.Forms.Tests.AccessibleObjects.ErrorProviderAccessibleObjectTests..ctor()\r\n```\r\n\r\n   </details>\r\n\r\n<details><summary>Stack Trace Example C</summary>\r\n\r\n### Test:\r\nSystem.Windows.Forms.Tests.ErrorProviderTests.ErrorProvider_Items_CallEvents_Success\r\n\r\n### Stacktrace:\r\n```\r\n   at System.Windows.Forms.Internal.DeviceContext..ctor(IntPtr hDC, DeviceContextType dcType)\r\n   at System.Windows.Forms.Internal.DeviceContext.FromHdc(IntPtr hdc)\r\n   at System.Windows.Forms.ErrorProvider.ErrorWindow.CreateMirrorDC(IntPtr hdc, Int32 originOffset)\r\n   at System.Windows.Forms.ErrorProvider.ErrorWindow.Update(Boolean timerCaused)\r\n   at System.Windows.Forms.ErrorProvider.ErrorWindow.StartBlinking()\r\n   at System.Windows.Forms.ErrorProvider.ControlItem.StartBlinking()\r\n   at System.Windows.Forms.ErrorProvider.ControlItem.AddToWindow()\r\n   at System.Windows.Forms.ErrorProvider.ControlItem.OnParentVisibleChanged(Object sender, EventArgs e)\r\n   at System.Windows.Forms.Control.OnVisibleChanged(EventArgs e)\r\n   at System.Windows.Forms.Control.SetVisibleCore(Boolean value)\r\n   at System.Windows.Forms.Control.set_Visible(Boolean value)\r\n   at System.Windows.Forms.Tests.ErrorProviderTests.ErrorProvider_Items_CallEvents_Success(ErrorBlinkStyle blinkStyle, SubControl control, String error, String expected)\r\n```\r\n\r\n   </details>\r\n\r\n**Expected behavior:**\r\nIdeally deterministic cleanup of GDI resources (instead of letting the GC clean up lazily)\r\n\r\n**Minimal repro:**\r\nRun unit tests under a debugger and put a conditional breakpoint in `DeviceContext` finalizer. Condition it on `_disposed == false`.\r\n\r\n(Sometimes the finalizer is called on disposed objects, thats an issue with finalization order and cross-class internal calls from other finalized classes to `Dispose(bool)` not implementing the disposable pattern correctly. Doesn't cause any harm just a redundant call.)\r\n","Url":"https://github.com/dotnet/winforms/issues/3450","RelatedDescription":"Open issue \"Leaking DeviceContext instances in unit tests\" (#3450)"},{"Id":"638384349","IsPullRequest":true,"CreatedAt":"2020-06-15T00:16:30","Actor":"gpetrou","Number":"3449","RawContent":null,"Title":"Add ENM enum in Interop RichEdit","State":"closed","Body":"## Proposed changes\r\n\r\n- Add ENM enum in Interop RichEdit.\r\n- Remove ENM constants from RichTextBoxConstants.cs.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3449)","Url":"https://github.com/dotnet/winforms/pull/3449","RelatedDescription":"Closed or merged PR \"Add ENM enum in Interop RichEdit\" (#3449)"},{"Id":"638234958","IsPullRequest":false,"CreatedAt":"2020-06-13T21:16:00","Actor":"weltkante","Number":"3446","RawContent":null,"Title":"Remove references to ControlBindingsConverter","State":"open","Body":"Follow-up to #2412 and #3444\r\n\r\n**.NET Core Version:**\r\ngithub master\r\n\r\n**Have you experienced this same bug with .NET Framework?:**\r\nno\r\n\r\n**Problem description:**\r\n`ControlBindingsConverter` is currently defined in the VS designer and no longer present in the WinForms runtime, yet still [referenced](https://github.com/dotnet/winforms/search?q=ControlBindingsConverter&unscoped_q=ControlBindingsConverter). The previous approach was to port these by a on-demand basis so this is currently not needed in the WinForms runtime and should be removed to avoid confusion.\r\n\r\n**Expected behavior:**\r\nMetadata attributes should not refer to nonexistant classes.\r\n\r\n**Minimal repro:**\r\nPR #2230 test failure when removing skip entry","Url":"https://github.com/dotnet/winforms/issues/3446","RelatedDescription":"Open issue \"Remove references to ControlBindingsConverter\" (#3446)"},{"Id":"638056399","IsPullRequest":false,"CreatedAt":"2020-06-13T20:52:25","Actor":"KlausLoeffelmann","Number":"3445","RawContent":null,"Title":"Port missing DesignBinding Class","State":"closed","Body":"The `DesignBinding` class, which is used in the Design-Time Environment to support Data Binding, has not been ported yet from NetFx.","Url":"https://github.com/dotnet/winforms/issues/3445","RelatedDescription":"Closed issue \"Port missing DesignBinding Class\" (#3445)"},{"Id":"638055362","IsPullRequest":false,"CreatedAt":"2020-06-13T20:50:15","Actor":"KlausLoeffelmann","Number":"3444","RawContent":null,"Title":"Port missing ControlBindingsConverter","State":"closed","Body":"The `ControlBindingsConverter`, which provides the `DesignBindings` and the `AdvancedBinding` for the `ControlBindingsCollection` in a Design-Time environment, has not been ported yet from NetFx and is missing.","Url":"https://github.com/dotnet/winforms/issues/3444","RelatedDescription":"Closed issue \"Port missing ControlBindingsConverter\" (#3444)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-06-20T05:30:52.5451556Z","RunDurationInMilliseconds":643}