{"Data":{"GitHub":{"Issues":[{"Id":"2737230207","IsPullRequest":true,"CreatedAt":"2024-12-13T02:19:08","Actor":"LeafShi1","Number":"12636","RawContent":null,"Title":"Correct the assignment of the constant TreeNodeCollectionAddRangeRespectsSortOrder in WinFormsAppContextSwitchNames.cs","State":"open","Body":"Correct the assignment of the constant TreeNodeCollectionAddRangeRespectsSortOrder in WinFormsAppContextSwitchNames.cs\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12636)","Url":"https://github.com/dotnet/winforms/pull/12636","RelatedDescription":"Open PR \"Correct the assignment of the constant TreeNodeCollectionAddRangeRespectsSortOrder in WinFormsAppContextSwitchNames.cs\" (#12636)"},{"Id":"2737201676","IsPullRequest":true,"CreatedAt":"2024-12-13T01:48:44","Actor":"Tanya-Solyanik","Number":"12635","RawContent":null,"Title":"replaced end of sentence dot followed by 2 spaces with a dot with a single space","State":"open","Body":"I ran this regex on winforms and design projects, on .cs and .resx files\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12635)","Url":"https://github.com/dotnet/winforms/pull/12635","RelatedDescription":"Open PR \"replaced end of sentence dot followed by 2 spaces with a dot with a single space\" (#12635)"},{"Id":"2736871495","IsPullRequest":true,"CreatedAt":"2024-12-13T01:31:58","Actor":"JeremyKuhne","Number":"12633","RawContent":null,"Title":"Move all GDI+ specific interop to System.Private.Windows.GdiPlus","State":"closed","Body":"This removes the risk of not properly initializing GDI+ before calling native methods. It also removes the risk of inadvertently loading GDI+ in WPF. Lastly, it reduces the footprint for WPF.\r\n\r\nThe new project is not under a second `src` folder as we're going to move all tests to the root under `tests`. This allows for better build file structure (Directory.*, etc.) and helps some with MAX_PATH constraints.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12633)","Url":"https://github.com/dotnet/winforms/pull/12633","RelatedDescription":"Closed or merged PR \"Move all GDI+ specific interop to System.Private.Windows.GdiPlus\" (#12633)"},{"Id":"2734410422","IsPullRequest":true,"CreatedAt":"2024-12-13T01:01:29","Actor":"Tanya-Solyanik","Number":"12629","RawContent":null,"Title":"Added resource to SR file for the clipboard APIs","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12629)","Url":"https://github.com/dotnet/winforms/pull/12629","RelatedDescription":"Closed or merged PR \"Added resource to SR file for the clipboard APIs\" (#12629)"},{"Id":"2736956947","IsPullRequest":false,"CreatedAt":"2024-12-12T21:57:13","Actor":"Tanya-Solyanik","Number":"12634","RawContent":null,"Title":"Upgrade PublishCodeCoverageResults@1 to PublishCodeCoverageResults@2","State":"open","Body":"Update the [build.yml ](https://github.com/dotnet/winforms/blob/main/eng/pipelines/build.yml#L145-#L153)file  to use PublishCodeCoverageResults@2 task.\n\nCurrently we are getting warnings in CI in Initialize job:\n```\nDownloading task: PublishCodeCoverageResults (1.248.1)\n##[warning]Task 'Publish code coverage' version 1 (PublishCodeCoverageResults@1) is deprecated.\n##[warning]The PublishCodeCoverageResults@1 is deprecated. Users are recommended to switch to task version 2. For more details, see https://devblogs.microsoft.com/devops/new-pccr-task\nDownloading task: PublishBuildArtifacts (1.247.1)\nDownloading task: PublishTestResults (2.247.1)\n```\nDetails https://devblogs.microsoft.com/devops/new-pccr-task/","Url":"https://github.com/dotnet/winforms/issues/12634","RelatedDescription":"Open issue \"Upgrade PublishCodeCoverageResults@1 to PublishCodeCoverageResults@2\" (#12634)"},{"Id":"2736585029","IsPullRequest":true,"CreatedAt":"2024-12-12T19:06:44","Actor":"Tanya-Solyanik","Number":"12632","RawContent":null,"Title":"Fixed the autoConvert default values in DataObject.TryGetData","State":"closed","Body":"Fixed the autoConvert default values in DataObject.TryGetData  to match default values from DataObject.GetData\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12632)","Url":"https://github.com/dotnet/winforms/pull/12632","RelatedDescription":"Closed or merged PR \"Fixed the autoConvert default values in DataObject.TryGetData\" (#12632)"},{"Id":"2735839889","IsPullRequest":true,"CreatedAt":"2024-12-12T13:42:08","Actor":"dotnet-maestro[bot]","Number":"12630","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20241211.4\r\n- **Date Produced**: December 12, 2024 6:20:52 AM UTC\r\n- **Commit**: b9e1dd7c1e1d05679831467cd3c051b9f8f84460\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24610.2 to 10.0.0-beta.24611.4][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.24610.2 to 10.0.0-beta.24611.4][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.24610.2 to 10.0.0-beta.24611.4][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24610.2 to 10.0.0-beta.24611.4][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.24610.2 to 10.0.0-beta.24611.4][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.24610.2 to 10.0.0-beta.24611.4][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/d5c8bb8726...b9e1dd7c1e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12630)","Url":"https://github.com/dotnet/winforms/pull/12630","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#12630)"},{"Id":"2735840604","IsPullRequest":true,"CreatedAt":"2024-12-12T13:02:07","Actor":"dotnet-maestro[bot]","Number":"12631","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20241211.9\r\n- **Date Produced**: December 12, 2024 4:07:03 AM UTC\r\n- **Commit**: c6464250c27ee67af31d6df3141db1722f006e48\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.IO.Hashing**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.Text.Encodings.Web**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.Text.Json**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24611.1 to 10.0.0-alpha.1.24611.9][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/aa9cd3b323...c6464250c2\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12631)","Url":"https://github.com/dotnet/winforms/pull/12631","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/runtime\" (#12631)"},{"Id":"2734262263","IsPullRequest":true,"CreatedAt":"2024-12-12T00:28:23","Actor":"JeremyKuhne","Number":"12628","RawContent":null,"Title":"Tweak Scratch projects and add WPF visibility for SPWC","State":"closed","Body":"Couple of minor tweaks to the scratch projects for ease of use.\r\n\r\nAlso add System.Printing for visibility of System.Private.Windows.Core.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12628)","Url":"https://github.com/dotnet/winforms/pull/12628","RelatedDescription":"Closed or merged PR \"Tweak Scratch projects and add WPF visibility for SPWC\" (#12628)"},{"Id":"2731882285","IsPullRequest":false,"CreatedAt":"2024-12-12T00:27:06","Actor":"carlreinke","Number":"12623","RawContent":null,"Title":"`Graphics.DrawRectangle` throws `OutOfMemoryException`","State":"closed","Body":"### .NET version\n\n`net9.0-windows`\n\n### Did it work in .NET Framework?\n\nNot tested/verified\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\nWhen using a certain pen, `Graphics.DrawRectangle` throws `OutOfMemoryException` when drawing a 1x1 rectangle.\n\n### Steps to reproduce\n\n1. Create a new WinFormsApp project.\n2. In the form code, add the following:\n    ```C#\n    protected override void OnPaint(PaintEventArgs e)\n    {\n        base.OnPaint(e);\n\n        using (var pen = new Pen(Color.Black))\n        {\n            pen.DashPattern = [4, 4];\n            pen.DashOffset = 4;\n\n            e.Graphics.DrawRectangle(pen, 0, 0, 1, 1);\n        }\n    }\n    ```\n3. Run the project.","Url":"https://github.com/dotnet/winforms/issues/12623","RelatedDescription":"Closed issue \"`Graphics.DrawRectangle` throws `OutOfMemoryException`\" (#12623)"},{"Id":"2734242105","IsPullRequest":false,"CreatedAt":"2024-12-11T23:29:43","Actor":"JeremyKuhne","Number":"12627","RawContent":null,"Title":"Stop throwing OutOfMemoryException for GDI+ errors in System.Drawing","State":"open","Body":"GDI+ returns [`Status.OutOfMemory`](https://learn.microsoft.com/windows/win32/api/gdiplustypes/ne-gdiplustypes-status) for many general purpose errors. This is deeply confusing for users and almost never happens due to an actual lack of memory.\n\nI'm inclined to change this behavior to always throw `InvalidOperationException` with a message along the lines of:\n\n> GDI+ returned Status.OutOfMemory. This is usually a general error and not a lack of memory.\n\nI can't know for sure that there isn't a low memory situation, but if it is other things are likely to fail imminently for lack of memory anyway.\n\nI'd offer an `AppContext` opt-out switch that would throw with the old behavior.","Url":"https://github.com/dotnet/winforms/issues/12627","RelatedDescription":"Open issue \"Stop throwing OutOfMemoryException for GDI+ errors in System.Drawing\" (#12627)"},{"Id":"2732924480","IsPullRequest":true,"CreatedAt":"2024-12-11T17:05:54","Actor":"dotnet-maestro[bot]","Number":"12626","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20241211.1\r\n- **Date Produced**: December 11, 2024 11:48:45 AM UTC\r\n- **Commit**: aa9cd3b3234ef5bfe7d6037016bd7e6b8f991a5e\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.IO.Hashing**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.Text.Encodings.Web**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.Text.Json**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24610.2 to 10.0.0-alpha.1.24611.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/920a17ac91...aa9cd3b323\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12626)","Url":"https://github.com/dotnet/winforms/pull/12626","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#12626)"},{"Id":"2732923770","IsPullRequest":true,"CreatedAt":"2024-12-11T13:37:29","Actor":"dotnet-maestro[bot]","Number":"12625","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20241210.2\r\n- **Date Produced**: December 10, 2024 11:22:08 AM UTC\r\n- **Commit**: d5c8bb8726b46b5867961f5d8f56f1b13e72dcb9\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24609.8 to 10.0.0-beta.24610.2][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.24609.8 to 10.0.0-beta.24610.2][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.24609.8 to 10.0.0-beta.24610.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24609.8 to 10.0.0-beta.24610.2][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.24609.8 to 10.0.0-beta.24610.2][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.24609.8 to 10.0.0-beta.24610.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/1fba3c5407...d5c8bb8726\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12625)","Url":"https://github.com/dotnet/winforms/pull/12625","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#12625)"},{"Id":"2732168756","IsPullRequest":true,"CreatedAt":"2024-12-11T08:06:03","Actor":"LeafShi1","Number":"12624","RawContent":null,"Title":"Add AppContext switch 'UseSystemRenderingModeAsDefault' for StatusStrip","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #12616\r\n\r\n\r\n## Proposed changes\r\n\r\n- Add an opt-out AppContext switch 'UseSystemRenderingModeAsDefault' for StatusStrip control to restore the default value that was used in the past (.NET Framework to .NET8). The problem with that default value was that it wasn't accessible. Our goal is to have default versions of our control as accessible as possible without the knowledge of business logic. \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Customer can use the switch `UseSystemRenderingModeAsDefault `decide whether to use the `ToolStripRenderMode.System` as the default painting style for the StatusStrip control\r\n\r\n## Regression? \r\n\r\n- Yes \r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\nA white line in the dialog when using StatusStrip\r\n<img width=\"251\" alt=\"image\" src=\"https://github.com/user-attachments/assets/ed22666a-f70f-46eb-87ef-fc7c7e7f10b9\">\r\n\r\n\r\n### After\r\nNo extra white line the dialog\r\n<img width=\"233\" alt=\"image\" src=\"https://github.com/user-attachments/assets/cf28ca25-c665-4154-a0d3-eb3210e52de7\">\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Unit test and manually\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n-  .net 10.0.0-alpha.1.24606.5\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12624)","Url":"https://github.com/dotnet/winforms/pull/12624","RelatedDescription":"Open PR \"Add AppContext switch 'UseSystemRenderingModeAsDefault' for StatusStrip\" (#12624)"},{"Id":"2731676971","IsPullRequest":true,"CreatedAt":"2024-12-11T02:43:19","Actor":"Zheng-Li01","Number":"12622","RawContent":null,"Title":"Add code coverage for DataGridViewCellConverter","State":"open","Body":"related https://github.com/dotnet/winforms/issues/10453\r\n\r\n# Proposed changes\r\nAdd unit tests for DataGridViewCellConverter.cs to test its methods\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12622)","Url":"https://github.com/dotnet/winforms/pull/12622","RelatedDescription":"Open PR \"Add code coverage for DataGridViewCellConverter\" (#12622)"},{"Id":"2730944749","IsPullRequest":true,"CreatedAt":"2024-12-11T00:20:55","Actor":"Tanya-Solyanik","Number":"12620","RawContent":null,"Title":"Removed BitmapBinder because it was made redundant by us reading/writing primitive and known types manually","State":"closed","Body":"The purpose of BitmapBinder was to restrict binary formatter deserialization for known formats that should not accept managed types other than primitives or bitmaps. All types that are allowed by the BitmapBinder are supported as \"common, known\" types and are serialized by writing the serialization record manually, not by calling the BinaryFormatter. We read some other types, such as collections as the common ones, but these have been read in NET9 as well, and are not a security issue. Currently this binder is used only in the failure cases to raise a special exception that indicates that we should not read the data again (used to set doNotContinue). The read difference is that we don't enter the serialization and deserialization code now.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12620)","Url":"https://github.com/dotnet/winforms/pull/12620","RelatedDescription":"Closed or merged PR \"Removed BitmapBinder because it was made redundant by us reading/writing primitive and known types manually\" (#12620)"},{"Id":"2731432333","IsPullRequest":true,"CreatedAt":"2024-12-10T23:54:16","Actor":"JeremyKuhne","Number":"12621","RawContent":null,"Title":"Move NoAssertContext to Core test utilities","State":"closed","Body":"This will allow it to be used in WPF as well.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12621)","Url":"https://github.com/dotnet/winforms/pull/12621","RelatedDescription":"Closed or merged PR \"Move NoAssertContext to Core test utilities\" (#12621)"},{"Id":"2730722833","IsPullRequest":true,"CreatedAt":"2024-12-10T22:46:33","Actor":"Tanya-Solyanik","Number":"12619","RawContent":null,"Title":"Ensure memory is freed on a serialization failure in the cipboard","State":"closed","Body":"1. Ensure that HGLOBAL is freed when a serialization exception is thrown when flushing data to the clipboard. Before the change we were always allocating it but freeing only when an HR failure was returned.\r\n2. Ensure that we don't attempt deserialization if we couldn't serialize data from the inproc scenario\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12619)","Url":"https://github.com/dotnet/winforms/pull/12619","RelatedDescription":"Closed or merged PR \"Ensure memory is freed on a serialization failure in the cipboard\" (#12619)"},{"Id":"2730065581","IsPullRequest":true,"CreatedAt":"2024-12-10T13:42:39","Actor":"dotnet-maestro[bot]","Number":"12618","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20241210.2\r\n- **Date Produced**: December 10, 2024 12:33:42 PM UTC\r\n- **Commit**: 920a17ac91440abb5b34109104e72da77ec58b59\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.IO.Hashing**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.Text.Encodings.Web**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.Text.Json**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24609.1 to 10.0.0-alpha.1.24610.2][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/b085dadd16...920a17ac91\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12618)","Url":"https://github.com/dotnet/winforms/pull/12618","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#12618)"},{"Id":"2730064806","IsPullRequest":true,"CreatedAt":"2024-12-10T13:42:09","Actor":"dotnet-maestro[bot]","Number":"12617","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20241209.8\r\n- **Date Produced**: December 10, 2024 1:30:06 AM UTC\r\n- **Commit**: 1fba3c5407537249f8c55332cd3d1ac81c39fdb2\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24606.6 to 10.0.0-beta.24609.8][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.24606.6 to 10.0.0-beta.24609.8][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.24606.6 to 10.0.0-beta.24609.8][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24606.6 to 10.0.0-beta.24609.8][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.24606.6 to 10.0.0-beta.24609.8][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.24606.6 to 10.0.0-beta.24609.8][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/61b8f74642...1fba3c5407\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12617)","Url":"https://github.com/dotnet/winforms/pull/12617","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#12617)"},{"Id":"2729347551","IsPullRequest":false,"CreatedAt":"2024-12-10T07:44:46","Actor":"hmisaki","Number":"12616","RawContent":null,"Title":"A unexpected white line in StatusStrip compoent in dotnet 9","State":"open","Body":"### Description\n\nIf a dialog with a dark background and used StatusStrip. Then move the code from dotnet 8 to dotnet 9. There are many unexpected white lines in our dialog.\n![Image](https://github.com/user-attachments/assets/985a6e50-ae45-4409-8844-ed1778066f2e)\nbut if we build our project with dotnet 8. there will be good:\n![Image](https://github.com/user-attachments/assets/d140b1a4-fdb6-4794-b6a0-8823a5a0f6d8)\n\n\n### Reproduction Steps\n\n1. create a Winform app with dotnet 9.\n2. add componts `StatusStrip `and `ToolStripStatusLabel`\n3. set the dialog and StatusStrip back color to a grey color, for example:\n```\nthis.BackColor = Color.FromArgb(255,59,68,83);\nstatusStrip1.BackColor = BackColor;\n```\n4. build the project and run the test app.\n\n\n### Expected behavior\n\nGet a grey dialog and a grey StatusStrip\nfor example:\n![Image](https://github.com/user-attachments/assets/df5df03d-08a4-4380-9054-865388f433f5)\n\n\n### Actual behavior\n\na white line in the dialog\n![Image](https://github.com/user-attachments/assets/e4178f52-5fb1-405a-9029-ea46a756dcde)\n\n\n\n### Regression?\n\nIt's fine in dotnet 8.\n\n### Known Workarounds\n\nno\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/winforms/issues/12616","RelatedDescription":"Open issue \"A unexpected white line in StatusStrip compoent in dotnet 9\" (#12616)"},{"Id":"2728613581","IsPullRequest":true,"CreatedAt":"2024-12-10T01:13:42","Actor":"JeremyKuhne","Number":"12614","RawContent":null,"Title":"Add additional error defines","State":"closed","Body":"Add a number of additional defines that are coming up in WPF.\r\n\r\nAlso add a few more NTSTATUS related helpers to HRESULT.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12614)","Url":"https://github.com/dotnet/winforms/pull/12614","RelatedDescription":"Closed or merged PR \"Add additional error defines\" (#12614)"},{"Id":"2728658230","IsPullRequest":true,"CreatedAt":"2024-12-10T01:00:35","Actor":"paul1956","Number":"12615","RawContent":null,"Title":"Use Generic Overloads in VB Code","State":"open","Body":"## Proposed changes\r\nCleanup new suggestions in VB caused by latest merge\r\n \r\n## Customer Impact\r\n-Developer Only, removes noise in Error Window\r\n\r\n## Regression? \r\n- Yes\r\n\r\n## Risk\r\n- None 100% Coverage\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12615)","Url":"https://github.com/dotnet/winforms/pull/12615","RelatedDescription":"Open PR \"Use Generic Overloads in VB Code\" (#12615)"},{"Id":"2728575130","IsPullRequest":true,"CreatedAt":"2024-12-09T23:56:56","Actor":"ricardobossan","Number":"12613","RawContent":null,"Title":"Avoids a `System.InvalidCastException` error to be thrown when passing `ObjectCollection` to `AddRangeInternal` of the `DataGridViewComboBoxCell.ObjectCollection` class","State":"open","Body":"Fixes #12612\r\n\r\n## Proposed changes\r\n\r\n- Avoids a `System.InvalidCastException` error to be thrown when passing `ObjectCollection` to `AddRangeInternal` of the `DataGridViewComboBoxCell.ObjectCollection` class, by:\r\n  - Modifying the `AddRange(ObjectCollection value)` method\r\n  - Adding the `AddRangeInternal(ObjectCollection items)` methods\r\n- Adds unit test\r\n\r\n## Customer Impact\r\n\r\n- Avoids a possible `System.InvalidCastException`\r\n\r\n## Regression?\r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Screenshots\r\n\r\n### Before\r\n\r\n![Captura de tela 2024-12-09 200542](https://github.com/user-attachments/assets/c5b9fa72-cb93-4c67-b17e-9ffb88a3fa0d)\r\n\r\n### After\r\n\r\n![image](https://github.com/user-attachments/assets/bc52a015-79f0-40e3-b4e5-0b2b3d095893)\r\n\r\n## Test methodology\r\n\r\n- Unit tests\r\n\r\n## Accessibility testing\r\n\r\n## Test environment(s)\r\n\r\n- `10.0.100-alpha.1.24573.1`\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12613)","Url":"https://github.com/dotnet/winforms/pull/12613","RelatedDescription":"Open PR \"Avoids a `System.InvalidCastException` error to be thrown when passing `ObjectCollection` to `AddRangeInternal` of the `DataGridViewComboBoxCell.ObjectCollection` class\" (#12613)"},{"Id":"2728490897","IsPullRequest":false,"CreatedAt":"2024-12-09T23:12:21","Actor":"ricardobossan","Number":"12612","RawContent":null,"Title":"A casting issue error is thrown when passing `ObjectCollection` to the `AddRangeInternal` method of the `DataGridViewComboBoxCell.ObjectCollection` class.","State":"open","Body":"### .NET version\n\n10.0.100-alpha.1.24573.1\n\n### Did it work in .NET Framework?\n\nNot tested/verified\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\nA casting issue error is thrown when passing `ObjectCollection` to the `AddRangeInternal` method of the `DataGridViewComboBoxCell.ObjectCollection` class.\n\n### Steps to reproduce\n\n- Add a unit test for `DataGridViewComboBoxCell.ObjectCollection` class's `AddRange(ObjectCollection value)`:\n\n  ```csharp\n  [WinFormsFact]\n  public void ObjectCollection_AddRange_AddsItemsCorrectly()\n  {\n     DataGridViewComboBoxCell comboBoxCell = new();\n     DataGridViewComboBoxCell.ObjectCollection collection = new(comboBoxCell);\n     DataGridViewComboBoxCell.ObjectCollection items = new(comboBoxCell) { \"Item1\", \"Item2\", \"Item3\" };\n\n     collection.AddRange(items);\n\n     collection.Count.Should().Be(3);\n     collection[0].Should().Be(\"Item1\");\n     collection[1].Should().Be(\"Item2\");\n     collection[2].Should().Be(\"Item3\");\n  }\n  ```\n\n- Debug test:\n\n![Image](https://github.com/user-attachments/assets/ffa859d9-b7ed-47bf-bacf-c3acd6879df9)\n","Url":"https://github.com/dotnet/winforms/issues/12612","RelatedDescription":"Open issue \"A casting issue error is thrown when passing `ObjectCollection` to the `AddRangeInternal` method of the `DataGridViewComboBoxCell.ObjectCollection` class.\" (#12612)"},{"Id":"2728270410","IsPullRequest":false,"CreatedAt":"2024-12-09T21:08:03","Actor":"Tanya-Solyanik","Number":"12611","RawContent":null,"Title":"Add recommendations and potentially analyzers to make TryGetData<T> APIs more trimmable","State":"open","Body":"1. document scenarios that work in trimmable applications\n2. document suggesting for trimmable resolver Func implementations.","Url":"https://github.com/dotnet/winforms/issues/12611","RelatedDescription":"Open issue \"Add recommendations and potentially analyzers to make TryGetData<T> APIs more trimmable\" (#12611)"},{"Id":"2728260164","IsPullRequest":false,"CreatedAt":"2024-12-09T21:04:23","Actor":"Tanya-Solyanik","Number":"12610","RawContent":null,"Title":"Add analyzers that suggest replacing obsoleted GetData APIs with the new typed versions","State":"open","Body":"1. suggest using POCO types for data exchange to simplify resolver implementation, and potentially suggest opting out from the OOB formatters assembly if not needed for other reasons.\n2. replace GetData for POCO types or primitives and known types wth the TryGetData analog with no resolver\n3. point to sample resolvers in [github.com/dotnet/samples/windowsforms](https://github.com/dotnet/samples/tree/fc205fddb5dc0dc97d8b9613b1502356c186d046/windowsforms) when getting more complex types.","Url":"https://github.com/dotnet/winforms/issues/12610","RelatedDescription":"Open issue \"Add analyzers that suggest replacing obsoleted GetData APIs with the new typed versions\" (#12610)"},{"Id":"2728252411","IsPullRequest":false,"CreatedAt":"2024-12-09T21:00:11","Actor":"Tanya-Solyanik","Number":"12609","RawContent":null,"Title":"Add a code analyzer to enforce a safer implementation of the resolver Func in ITypeDataObject APIs","State":"open","Body":"1 Warn users against calling `Type.GetType` from the resolver Func<TypeName, Type> or resolver interface methods.\n2. Suggest having a hardcoded set of allowed types to avoid assembly loading and to root types to support trimming in the future  ","Url":"https://github.com/dotnet/winforms/issues/12609","RelatedDescription":"Open issue \"Add a code analyzer to enforce a safer implementation of the resolver Func in ITypeDataObject APIs\" (#12609)"},{"Id":"2728243967","IsPullRequest":false,"CreatedAt":"2024-12-09T20:55:36","Actor":"Tanya-Solyanik","Number":"12608","RawContent":null,"Title":"Add code analyzers to enforce that ITypedDataObject interface is implemented for data objects","State":"open","Body":"1. An object that implements only `ITypedDataObject` interface can't be used in clipboard or drag and drop operations\n2. Suggest implementing `ITypedDataObject` interface whenever `IDataObject` interface is implemented, otherwise the typed APIs such as Clipboard.TryGetData<T>(...) and DataObject.TryGetData<T>(..) would throw an unsupported exception when invoked.\n3. When overriding virtual methods in the WinForms concrete `DataObject` class, suggest overriding `protected virtual bool TryGetDataCore` as well to support the new APIs\n4. if `Clipboard.SetData` or `Clipboard.SetDataObject`, or `DataObject.SetData` is invoked with an `IDataObject` data, verify if `ITypeDataObject` is implemented as well and suggest implementing it if it's not implemented.","Url":"https://github.com/dotnet/winforms/issues/12608","RelatedDescription":"Open issue \"Add code analyzers to enforce that ITypedDataObject interface is implemented for data objects\" (#12608)"},{"Id":"2727843339","IsPullRequest":false,"CreatedAt":"2024-12-09T17:50:41","Actor":"Tanya-Solyanik","Number":"12607","RawContent":null,"Title":"[Accessibility] Fix keyboard navigation in dropdown type editors in property grid","State":"open","Body":"Property grid drop down type editor does not support conventional keyboard navigation. Usually selection is committed when the ENTER key is pressed. However in this case value is committed on the Down arrow press. Then the drop down list is expanded, the screen reader user might want to navigate through all values in the drop down using the arrows, on each arrow key press the new item should be presented (and announced) in the selection text box, however, the  drop down is closed on the first arrow key. According to the accessibility SMEs, this is a major problem - the keyboard users are losing their work by committing a wrong value. \nOther drop down editors behave as expected \n\nKeyboard navigation had been designed incorrectly from the .NET Framework. \n\nMore details in Bugs: https://github.com/dotnet/winforms/issues/12434, https://github.com/dotnet/winforms/issues/12421, https://github.com/dotnet/winforms/issues/12440, https://github.com/dotnet/winforms/issues/12031","Url":"https://github.com/dotnet/winforms/issues/12607","RelatedDescription":"Open issue \"[Accessibility] Fix keyboard navigation in dropdown type editors in property grid\" (#12607)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-12-13T03:30:29.5587104Z","RunDurationInMilliseconds":466}