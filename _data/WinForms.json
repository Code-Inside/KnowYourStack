{"Data":{"GitHub":{"Issues":[{"Id":"3217639057","IsPullRequest":true,"CreatedAt":"2025-07-10T02:11:30","Actor":"dotnet-maestro[bot]","Number":"13693","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"open","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250709.1](https://dev.azure.com/dnceng/internal/_build/results?buildId=2746062)\n- **Date Produced**: July 9, 2025 11:33:03 AM UTC\n- **Commit**: [f451e5d3036a4f140a989e0a7f3f1ae432420e71](https://github.com/dotnet/dotnet/commit/f451e5d3036a4f140a989e0a7f3f1ae432420e71)\n- **Commit Diff**: [23101ed...f451e5d](https://github.com/dotnet/dotnet/compare/23101ed07a38169d3e59d63b9d4d33e6d1d609bb...f451e5d3036a4f140a989e0a7f3f1ae432420e71)\n- **Branch**: main\n\n**Updated Dependencies**\n- From [10.0.0-preview.7.25358.102 to 10.0.0-preview.7.25359.101][1]\n  - Microsoft.NET.Sdk.IL\n  - Microsoft.NETCore.App.Ref\n  - Microsoft.NETCore.ILAsm\n  - Microsoft.NETCore.ILDAsm\n  - Microsoft.NETCore.Platforms\n  - Microsoft.Win32.SystemEvents\n  - runtime.win-x64.Microsoft.NETCore.ILAsm\n  - runtime.win-x86.Microsoft.NETCore.ILAsm\n  - System.CodeDom\n  - System.Configuration.ConfigurationManager\n  - System.Formats.Nrbf\n  - System.IO.Hashing\n  - System.Reflection.MetadataLoadContext\n  - System.Resources.Extensions\n  - System.Runtime.Serialization.Formatters\n  - System.Text.Encodings.Web\n  - System.Text.Json\n  - System.Windows.Extensions\n- From [10.0.0-beta.25358.102 to 10.0.0-beta.25359.101][1]\n  - Microsoft.DotNet.Arcade.Sdk\n  - Microsoft.DotNet.CMake.Sdk\n  - Microsoft.DotNet.GenFacades\n  - Microsoft.DotNet.Helix.Sdk\n  - Microsoft.DotNet.RemoteExecutor\n  - Microsoft.DotNet.XUnitV3Extensions\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/23101ed07a...f451e5d303\n[marker]: <> (Start:Footer:CodeFlow PR)\n\n## Associated changes in source repos\n- https://github.com/dotnet/deployment-tools/compare/1478b7e6938013629e182b0656bfbde04d367cc5...227da60247996ce95c272cdb5941163c669224e8\n- https://github.com/dotnet/fsharp/compare/2cd0102635fd1bfeac91be1099b8c2094cf76d82...318345330ed997a88bd9152b2a661b7bd954cec9\n- https://github.com/dotnet/roslyn/compare/d92a029dfde276aa7cb9a576c351d29d43c4c320...9eec48b9253e5c65e22dbe4a41cc30191ee6c974\n\n[marker]: <> (End:Footer:CodeFlow PR)\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13693)","Url":"https://github.com/dotnet/winforms/pull/13693","RelatedDescription":"Open PR \"[main] Source code updates from dotnet/dotnet\" (#13693)"},{"Id":"3214255775","IsPullRequest":true,"CreatedAt":"2025-07-09T13:50:53","Actor":"dotnet-maestro[bot]","Number":"13690","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250708.2](https://dev.azure.com/dnceng/internal/_build/results?buildId=2745218)\n- **Date Produced**: July 8, 2025 9:27:48 PM UTC\n- **Commit**: [23101ed07a38169d3e59d63b9d4d33e6d1d609bb](https://github.com/dotnet/dotnet/commit/23101ed07a38169d3e59d63b9d4d33e6d1d609bb)\n- **Commit Diff**: [eaa19c2...23101ed](https://github.com/dotnet/dotnet/compare/eaa19c281d34580a8168cff9ce1e7337da8bfe4f...23101ed07a38169d3e59d63b9d4d33e6d1d609bb)\n- **Branch**: main\n\n**Updated Dependencies**\n- From [10.0.0-preview.7.25351.106 to 10.0.0-preview.7.25358.102][1]\n  - Microsoft.NET.Sdk.IL\n  - Microsoft.NETCore.App.Ref\n  - Microsoft.NETCore.ILAsm\n  - Microsoft.NETCore.ILDAsm\n  - Microsoft.NETCore.Platforms\n  - Microsoft.Win32.SystemEvents\n  - runtime.win-x64.Microsoft.NETCore.ILAsm\n  - runtime.win-x86.Microsoft.NETCore.ILAsm\n  - System.CodeDom\n  - System.Configuration.ConfigurationManager\n  - System.Formats.Nrbf\n  - System.IO.Hashing\n  - System.Reflection.MetadataLoadContext\n  - System.Resources.Extensions\n  - System.Runtime.Serialization.Formatters\n  - System.Text.Encodings.Web\n  - System.Text.Json\n  - System.Windows.Extensions\n- From [10.0.0-beta.25351.106 to 10.0.0-beta.25358.102][1]\n  - Microsoft.DotNet.Arcade.Sdk\n  - Microsoft.DotNet.CMake.Sdk\n  - Microsoft.DotNet.GenFacades\n  - Microsoft.DotNet.Helix.Sdk\n  - Microsoft.DotNet.RemoteExecutor\n  - Microsoft.DotNet.XUnitV3Extensions\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/eaa19c281d...23101ed07a\n[marker]: <> (Start:Footer:CodeFlow PR)\n\n## Associated changes in source repos\n- https://github.com/dotnet/arcade/compare/0e335649fe2d2f98ea51e55cc1a0899af3617eba...d1834121068b0df7974a380cebadb781e58ff098\n- https://github.com/dotnet/diagnostics/compare/e32a259690378945a52bc8ac5cc5e302d9beb193...f903b9dcd4a2099474aa08ea1f1b4dc923a71049\n- https://github.com/dotnet/efcore/compare/14b439c0bcf7cb81899457e4cbd14640cc365578...4d458fba4e81920b9552479c486d85d117645ba5\n- https://github.com/dotnet/emsdk/compare/d7f601751622ebee331367f19b4310eaa9b70102...6c6421d38f085dd4822a9acd8abc4890debe4c59\n- https://github.com/dotnet/fsharp/compare/7346d84a24dd15155d74f8179788a423cbdd962a...2cd0102635fd1bfeac91be1099b8c2094cf76d82\n- https://github.com/dotnet/msbuild/compare/0e2431add8a483acfd985c6fdd352ebfcade6755...4e1f2f285ff08a628e45f21d40b9f682f2b99de7\n- https://github.com/dotnet/razor/compare/58de0c1a5c1fadf56a848dd45d91440ae041e22c...0286b0e118d2ab3589ca64fb0ad4cc0bf49e1a74\n- https://github.com/dotnet/sdk/compare/4177291d4d3dabd5341239d01b3e844125659304...6abcc1555959a9c08db5cac78468ac880170d5bd\n- https://github.com/dotnet/source-build-reference-packages/compare/31f60141b67dc390bbcc1e3251c63d240379a0be...24d24fcadbda7343189b132956debb716d4de057\n- https://github.com/dotnet/xdt/compare/0d66c1314c16a831f1289b1e4b1adbe0d8b94404...d1231b22ac3ba77f8a7e506b10d922f6f7ace210\n\n[marker]: <> (End:Footer:CodeFlow PR)\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13690)","Url":"https://github.com/dotnet/winforms/pull/13690","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13690)"},{"Id":"3216018677","IsPullRequest":true,"CreatedAt":"2025-07-09T13:46:58","Actor":"ViktorHofer","Number":"13692","RawContent":null,"Title":"Update global.json","State":"open","Body":"Use the new paths feature and allow newer SDKs when building\r\n\r\nhttps://learn.microsoft.com/en-us/dotnet/core/tools/global-json#paths\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13692)","Url":"https://github.com/dotnet/winforms/pull/13692","RelatedDescription":"Open PR \"Update global.json\" (#13692)"},{"Id":"3215115335","IsPullRequest":true,"CreatedAt":"2025-07-09T09:02:48","Actor":"Zheng-Li01","Number":"13691","RawContent":null,"Title":"Add code coverage for ToolStripProfessionalLowResolutionRenderer","State":"open","Body":"Related https://github.com/dotnet/winforms/issues/13442\r\n\r\n## Proposed changes:\r\n\r\nAdd unit test file: ToolStripProfessionalLowResolutionRendererTests.cs for ToolStripProfessionalLowResolutionRenderer.cs file\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13691)","Url":"https://github.com/dotnet/winforms/pull/13691","RelatedDescription":"Open PR \"Add code coverage for ToolStripProfessionalLowResolutionRenderer\" (#13691)"},{"Id":"3213839195","IsPullRequest":true,"CreatedAt":"2025-07-09T07:15:20","Actor":"vseanreesermsft","Number":"13689","RawContent":null,"Title":"Merging internal commits for release/9.0","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13689)","Url":"https://github.com/dotnet/winforms/pull/13689","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/9.0\" (#13689)"},{"Id":"3195024608","IsPullRequest":true,"CreatedAt":"2025-07-09T07:13:36","Actor":"Zheng-Li01","Number":"13667","RawContent":null,"Title":"Add code coverage for DataGridViewButtonCell","State":"closed","Body":"Related https://github.com/dotnet/winforms/issues/13442\r\n\r\n## Proposed changes\r\nAdd unit test file:DataGridViewButtonCellTest.cs for public/protected methods of the DataGridViewButtonCellcs\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13667)","Url":"https://github.com/dotnet/winforms/pull/13667","RelatedDescription":"Closed or merged PR \"Add code coverage for DataGridViewButtonCell\" (#13667)"},{"Id":"3213824959","IsPullRequest":true,"CreatedAt":"2025-07-09T02:38:58","Actor":"dotnet-maestro[bot]","Number":"13688","RawContent":null,"Title":"[release/10.0-preview6] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:bbf25048-a2e8-41c6-92da-d9b3c980e1cc)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [bbf25048-a2e8-41c6-92da-d9b3c980e1cc](https://maestro.dot.net/subscriptions?search=bbf25048-a2e8-41c6-92da-d9b3c980e1cc)\n- **Build**: [20250708.3](https://dev.azure.com/dnceng/internal/_build/results?buildId=2745251)\n- **Date Produced**: July 8, 2025 8:59:18 PM UTC\n- **Commit**: [75972a5ba730bdaf7cf3a34f528ab0f5c7f05183](https://github.com/dotnet/dotnet/commit/75972a5ba730bdaf7cf3a34f528ab0f5c7f05183)\n- **Commit Diff**: [6b71c64...75972a5](https://github.com/dotnet/dotnet/compare/6b71c64e75168c7704e2e789c7920a3b681af364...75972a5ba730bdaf7cf3a34f528ab0f5c7f05183)\n- **Branch**: release/10.0.1xx-preview6\n\n**Updated Dependencies**\n- From [10.0.0-preview.6.25326.107 to 10.0.0-preview.6.25358.103][1]\n  - Microsoft.NET.Sdk.IL\n  - Microsoft.NETCore.App.Ref\n  - Microsoft.NETCore.ILAsm\n  - Microsoft.NETCore.ILDAsm\n  - Microsoft.NETCore.Platforms\n  - Microsoft.Win32.SystemEvents\n  - runtime.win-x64.Microsoft.NETCore.ILAsm\n  - runtime.win-x86.Microsoft.NETCore.ILAsm\n  - System.CodeDom\n  - System.Configuration.ConfigurationManager\n  - System.Formats.Nrbf\n  - System.IO.Hashing\n  - System.Reflection.MetadataLoadContext\n  - System.Resources.Extensions\n  - System.Runtime.Serialization.Formatters\n  - System.Text.Encodings.Web\n  - System.Text.Json\n  - System.Windows.Extensions\n- From [10.0.0-beta.25326.107 to 10.0.0-beta.25358.103][1]\n  - Microsoft.DotNet.Arcade.Sdk\n  - Microsoft.DotNet.CMake.Sdk\n  - Microsoft.DotNet.GenFacades\n  - Microsoft.DotNet.Helix.Sdk\n  - Microsoft.DotNet.RemoteExecutor\n  - Microsoft.DotNet.XUnitV3Extensions\n\n[marker]: <> (End:bbf25048-a2e8-41c6-92da-d9b3c980e1cc)\n\n[1]: https://github.com/dotnet/dotnet/compare/6b71c64e75...75972a5ba7\n[marker]: <> (Start:Footer:CodeFlow PR)\n\n## Associated changes in source repos\n- https://github.com/dotnet/runtime/compare/3d4474909220103b71bae2435a0443b162bb60aa...3eac7ee1b21c1c205a8a13828a4f0883f1e5f56b\n\n[marker]: <> (End:Footer:CodeFlow PR)\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13688)","Url":"https://github.com/dotnet/winforms/pull/13688","RelatedDescription":"Closed or merged PR \"[release/10.0-preview6] Source code updates from dotnet/dotnet\" (#13688)"},{"Id":"3213813626","IsPullRequest":true,"CreatedAt":"2025-07-09T02:15:31","Actor":"vseanreesermsft","Number":"13687","RawContent":null,"Title":"Merging internal commits for release/8.0","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13687)","Url":"https://github.com/dotnet/winforms/pull/13687","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/8.0\" (#13687)"},{"Id":"3213095685","IsPullRequest":false,"CreatedAt":"2025-07-08T16:17:08","Actor":"leooliveirawo","Number":"13686","RawContent":null,"Title":"Windows Forms controls unexpectedly change width after copy-paste inside containers (.NET 5 to 9)","State":"open","Body":"## 🚨 Bug: Controls change `Width` after Ctrl+C/Ctrl+V when width is not fixed inside containers\n\n### Description\n\nIn Windows Forms (.NET 5 through 9), any control **without a manually fixed `Width`** placed inside containers (`GroupBox`, `Panel`, `TabPage`, etc.) can have its **width automatically changed** when performing:\n\n- **Ctrl + C** (copy)\n- **Ctrl + V** (paste)\n- Copy/paste operations in the Designer with `UserControls`\n- Sometimes even just focusing or interacting with the control via keyboard\n\nThis bug affects various controls, including:\n\n- `TextBox`\n- `RichTextBox`\n- `ComboBox`\n- `UserControl`\n- And other standard or custom controls\n\n---\n\n### ✅ Expected behavior\n\nControls **should maintain their stable width**, as happens in .NET Framework, even after copy/paste operations or keyboard interactions.\n\n---\n\n### ❌ Actual behavior\n\nThe control's `Width` is **automatically changed**, without any developer intervention, breaking the visual layout.\n\n---\n\n### ✅ How to reproduce\n\n1. Create a new **Windows Forms App** project (.NET 5 through 9)\n2. Add a `GroupBox` or `Panel`\n3. Inside it, add any control such as a `TextBox` **without setting a fixed width**\n4. Run the application\n5. Type something and press **Ctrl + C** (or use Ctrl + V)\n6. Observe the control changing its size\n\n### 🧪 Environment\n\n- **.NET SDK**: 9.0.301  \n  (Issue also confirmed in .NET 5, 6, 7, 8)  \n- **Operating System**: Windows 11 Home 24H2 (Build 26100.4484)  \n- **IDE**: Visual Studio 2022 and 2025 Preview  \n- **Project Type**: Windows Forms Application  \n\n#### Minimal example code:\n\n```csharp\nusing System;\nusing System.Windows.Forms;\n\nnamespace WinFormsWidthBug\n{\n    public class MainForm : Form\n    {\n        public MainForm()\n        {\n            var groupBox = new GroupBox\n            {\n                Text = \"Container\",\n                Width = 300,\n                Height = 100,\n                Left = 10,\n                Top = 10\n            };\n\n            var textBox = new TextBox\n            {\n                Left = 10,\n                Top = 30,\n                Anchor = AnchorStyles.Left | AnchorStyles.Top,\n                // Width is not fixed here!\n            };\n\n            groupBox.Controls.Add(textBox);\n            Controls.Add(groupBox);\n\n            Text = \".NET Width Bug\";\n            Width = 400;\n            Height = 200;\n        }\n\n        [STAThread]\n        public static void Main()\n        {\n            Application.EnableVisualStyles();\n            Application.Run(new MainForm());\n        }\n    }\n}","Url":"https://github.com/dotnet/winforms/issues/13686","RelatedDescription":"Open issue \"Windows Forms controls unexpectedly change width after copy-paste inside containers (.NET 5 to 9)\" (#13686)"},{"Id":"3211690181","IsPullRequest":true,"CreatedAt":"2025-07-08T09:07:16","Actor":"Olina-Zhang","Number":"13685","RawContent":null,"Title":"Add unit test for ListView.CheckedListViewItemCollection file","State":"open","Body":"Related https://github.com/dotnet/winforms/issues/13442\r\n\r\n**Proposed changes:**\r\n- Add unit test file: ListView.CheckedListViewItemCollectionTests.cs for ListView.CheckedListViewItemCollection.cs file\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13685)","Url":"https://github.com/dotnet/winforms/pull/13685","RelatedDescription":"Open PR \"Add unit test for ListView.CheckedListViewItemCollection file\" (#13685)"},{"Id":"3211216840","IsPullRequest":true,"CreatedAt":"2025-07-08T06:30:15","Actor":"LeafShi1","Number":"13684","RawContent":null,"Title":"Update SetScreenCaptureModeInternal by reset WINDOW_DISPLAY_AFFINITY to NONE before setting new affinity","State":"open","Body":"\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #13680\r\n\r\n\r\n## Proposed changes\r\n\r\n- Update `SetScreenCaptureModeInternal` by reset `WINDOW_DISPLAY_AFFINITY` to `NONE` before setting new affinity\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- `FormScreenCaptureMode` still works properly after multiple calls\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\nWhen the FormScreenCaptureMode property is set twice in succession, ScreenCaptureMode always retains the first setting.\r\n\r\nhttps://github.com/user-attachments/assets/1e37db66-9b7a-48cc-a7bf-f7f896cf440c\r\n\r\n### After\r\n\r\nhttps://github.com/user-attachments/assets/16b61d36-0eb1-4022-a0cd-ec28b7b2d895\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manually\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .net 10.0.0-preview.7.25320.118\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13684)","Url":"https://github.com/dotnet/winforms/pull/13684","RelatedDescription":"Open PR \"Update SetScreenCaptureModeInternal by reset WINDOW_DISPLAY_AFFINITY to NONE before setting new affinity\" (#13684)"},{"Id":"3208707899","IsPullRequest":true,"CreatedAt":"2025-07-07T11:49:16","Actor":"Youssef1313","Number":"13683","RawContent":null,"Title":"Update xunit.v3 to 3.0.0-pre.40","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n## Proposed changes\r\n\r\n- \r\n- \r\n- \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13683)","Url":"https://github.com/dotnet/winforms/pull/13683","RelatedDescription":"Open PR \"Update xunit.v3 to 3.0.0-pre.40\" (#13683)"},{"Id":"3208324837","IsPullRequest":true,"CreatedAt":"2025-07-07T09:58:54","Actor":"Olina-Zhang","Number":"13682","RawContent":null,"Title":"Add unit test for ListView.CheckedIndexCollection file","State":"open","Body":"Related https://github.com/dotnet/winforms/issues/13442\r\n\r\n\r\n## Proposed changes\r\n\r\n- Add unit test file: ListView.CheckedIndexCollectionTests.cs for ListView.CheckedIndexCollection.cs file\r\n\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13682)","Url":"https://github.com/dotnet/winforms/pull/13682","RelatedDescription":"Open PR \"Add unit test for ListView.CheckedIndexCollection file\" (#13682)"},{"Id":"3208012947","IsPullRequest":true,"CreatedAt":"2025-07-07T08:19:36","Actor":"Epica3055","Number":"13681","RawContent":null,"Title":"fix #13677 FontStyle.Bold Not Visually Applied to LinkLabel at Runtime via Code","State":"open","Body":"\r\n\r\n\r\nFixes #13677 \r\n\r\n## Root cause\r\n\r\nThis issue was introduced by [PR6250](https://github.com/dotnet/winforms/pull/6250) to fix [Issue6116](https://github.com/dotnet/winforms/issues/6116)\r\n\r\nThis is one of it's changes.\r\n![image](https://github.com/user-attachments/assets/82c721df-ec31-4226-baf5-1a78e2e00477)\r\n\r\nThe new parameter `isActive` is to address DataGridViewLinkCell issue, but it also break other cases.\r\n\r\n## Proposed changes\r\n\r\n- \r\n- make it bold by painting it again \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n<!-- \r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n\r\n\r\n## Risk\r\n\r\n-\r\n\r\n -->\r\n\r\n\r\n## Screenshots \r\n\r\n### Before\r\n![Image](https://github.com/user-attachments/assets/dbce76a0-0c8e-4847-81bd-321d4e770e85)\r\n\r\n\r\n### After\r\n![13677_01](https://github.com/user-attachments/assets/9cbaa94d-5633-4e42-872f-eb33582332ad)\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13681)","Url":"https://github.com/dotnet/winforms/pull/13681","RelatedDescription":"Open PR \"fix #13677 FontStyle.Bold Not Visually Applied to LinkLabel at Runtime via Code\" (#13681)"},{"Id":"3207406508","IsPullRequest":false,"CreatedAt":"2025-07-07T03:13:46","Actor":"Olina-Zhang","Number":"13680","RawContent":null,"Title":"FormScreenCaptureMode transitions between HideContent and HideWindow do not apply correctly","State":"open","Body":"### .NET version\n\n10.0.100-preview.7.25351.106\n\n### Did it work in .NET Framework?\n\nNot tested/verified\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nThis is a new feature introduced by the https://github.com/dotnet/winforms/pull/13561 in .NET 10 Preview 6\n\n### Issue description\n\nWhen changing the `Form.FormScreenCaptureMode` value, the following issue occurs:\n\nChanging from `HideContent `to `HideWindow` (or vice versa) does not take effect;\n\nThe only way to make it apply is to first set the value to `Allow`, and then to the desired mode (`HideContent` or `HideWindow`).\n\nThis behavior is unexpected and not intuitive.\n\n### Steps to reproduce\n\n1. Create a Form instance;\n\n2. Set FormScreenCaptureMode = HideContent;\n\n3. Then set FormScreenCaptureMode = HideWindow;\n```\nform.FormScreenCaptureMode = ScreenCaptureMode.HideContent;\n// This change will not take effect\nform.FormScreenCaptureMode = ScreenCaptureMode.HideWindow;\n```\n\n[WinFormsApp74.zip](https://github.com/user-attachments/files/21095995/WinFormsApp74.zip)\n\n**Actual Behavior:**\nObserve that the behavior still reflects HideContent, not HideWindow.\n\nhttps://github.com/user-attachments/assets/1e37db66-9b7a-48cc-a7bf-f7f896cf440c\n\n**Expected Behavior**\nAny change in the FormScreenCaptureMode value should trigger the necessary system-level updates, regardless of whether the mode is Allow, HideContent, or HideWindow.","Url":"https://github.com/dotnet/winforms/issues/13680","RelatedDescription":"Open issue \"FormScreenCaptureMode transitions between HideContent and HideWindow do not apply correctly\" (#13680)"},{"Id":"3206744080","IsPullRequest":false,"CreatedAt":"2025-07-06T16:18:04","Actor":"peter-g-dev","Number":"13679","RawContent":null,"Title":"Visual Studio 2022 WinForms Designer only works when Visual Studio is run as Administrator","State":"open","Body":"When creating a new WinForms C# project in Visual Studio 2022 (latest version, 17.14.7), the form designer fails to load unless Visual Studio is started with administrator privileges. This happens immediately with a newly created project without any user code. After creating the project, Visual Studio must be started once as administrator. Then works the Designer. From then on, the designer will function normally, even without administrator privileges. This has to be repeated with every new project.\n\n**Steps to Reproduce:**\n- Open Visual Studio 2022 (non-admin)\n- Create a new WinForms c# App (.NET 8)\n- Try to open Form1.cs in Designer\n- Error occurs: Designer fails to load with no errors in Error List.\n\n**Workaround:**\n- Running Visual Studio as Administrator\n- Open the WinForms project\n- Open Form1.cs in Designer. This works now.\n- Close Visual Studio\n- Open Visual Studio without Administrator privileges.\n- From now, the Designer works.\n\nOnly this steps allows the Forms Designer to work.\n\n**Expected Behavior:**\nWinForms Designer should work without requiring elevated privileges.\n\n**Environment:**\n- Visual Studio 2022 v17.14.7\n- .NET 8.0\n- Windows 11 Pro\n\nThank you for your support.\n\n","Url":"https://github.com/dotnet/winforms/issues/13679","RelatedDescription":"Open issue \"Visual Studio 2022 WinForms Designer only works when Visual Studio is run as Administrator\" (#13679)"},{"Id":"3201945577","IsPullRequest":false,"CreatedAt":"2025-07-04T09:20:45","Actor":"Olina-Zhang","Number":"13678","RawContent":null,"Title":"Issues related font setting","State":"open","Body":"- [ ] https://github.com/dotnet/winforms/issues/13677 - works in .NET 6, regression from .NET 7\n\n- [ ] https://github.com/dotnet/winforms/issues/10237 - works in .NET 6, regression from .NET 7\n\n- [ ] https://github.com/dotnet/winforms/issues/11816 - works in .NET 6, regression from .NET 7\n\n- [ ] https://github.com/dotnet/winforms/issues/12481 - Doesn't work in .NET 6 to latest, also doesn't work in .NET framework\n\n","Url":"https://github.com/dotnet/winforms/issues/13678","RelatedDescription":"Open issue \"Issues related font setting\" (#13678)"},{"Id":"3201672419","IsPullRequest":false,"CreatedAt":"2025-07-04T07:35:36","Actor":"Olina-Zhang","Number":"13677","RawContent":null,"Title":"FontStyle.Bold Not Visually Applied to LinkLabel at Runtime via Code","State":"open","Body":"### .NET version\n\n10.0.100-preview.7.25351.106\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nWork in .NET 6, regression from .NET 7 to the latest .NET 10\n\n### Issue description\n\nWhen changing a LinkLabel control's font to bold programmatically at runtime using FontStyle.Bold, the change is not visually reflected in the UI. This occurs even though the Font object reports Bold = true in the debugger.\n\n**.NET 7 to .NET 10:**\n\n![Image](https://github.com/user-attachments/assets/dbce76a0-0c8e-4847-81bd-321d4e770e85)\n\n**.NET 6:**\n\n![Image](https://github.com/user-attachments/assets/96b820a0-65b0-4c81-9e15-721671232484)\n\n### Steps to reproduce\n\n1. Use a LinkLabel with the default Microsoft Segoe UI font\n2. At runtime, execute:\n`linkLabel1.Font = new Font(linkLabel1.Font, FontStyle.Bold);`\n3. Observe font style for linkLabel\n\n[WinFormsApp73.zip](https://github.com/user-attachments/files/21052541/WinFormsApp73.zip)\n\n**Expected Behavior:**\nText in the LinkLabel should appear bold after setting FontStyle.Bold via code at runtime.\n\n**Actual Behavior:**\nThe text continues to appear in regular style, despite the Font.Bold property being true.","Url":"https://github.com/dotnet/winforms/issues/13677","RelatedDescription":"Open issue \"FontStyle.Bold Not Visually Applied to LinkLabel at Runtime via Code\" (#13677)"},{"Id":"3201612213","IsPullRequest":false,"CreatedAt":"2025-07-04T07:11:58","Actor":"AngeloCresta","Number":"13676","RawContent":null,"Title":"[DarkMode] ComboBox white Background when disabled","State":"open","Body":"### .NET version\n\nC:\\Users\\User>dotnet --info\n.NET SDK:\n Version:           10.0.100-preview.7.25322.101\n Commit:            67889d9d2f\n Workload version:  10.0.100-manifests.c51aa787\n MSBuild version:   17.15.0-preview-25322-101+67889d9d2\n\nRuntime Environment:\n OS Name:     Windows\n OS Version:  10.0.26100\n OS Platform: Windows\n RID:         win-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\10.0.100-preview.7.25322.101\\\n\nHost:\n  Version:      10.0.0-preview.7.25322.101\n  Architecture: x64\n  Commit:       67889d9d2f\n\n.NET SDKs installed:\n  8.0.411 [C:\\Program Files\\dotnet\\sdk]\n  9.0.301 [C:\\Program Files\\dotnet\\sdk]\n  10.0.100-preview.7.25322.101 [C:\\Program Files\\dotnet\\sdk]\n\n### Did it work in .NET Framework?\n\nNA\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNot Implemented\n\n### Issue description\n\nCombo enabled:\n\n![Image](https://github.com/user-attachments/assets/53b0822f-2f65-4d3f-9dd8-d977ce71f832)\n\nCombo disabled:\n\n![Image](https://github.com/user-attachments/assets/3882d36b-14bf-4310-bd9d-c1cc0d524e58)\n\n\n### Steps to reproduce\n\nJust Add the Combo to a form and, after populate it with some items, set the `cb.Enabled = false;`\n","Url":"https://github.com/dotnet/winforms/issues/13676","RelatedDescription":"Open issue \"[DarkMode] ComboBox white Background when disabled\" (#13676)"},{"Id":"3200103227","IsPullRequest":true,"CreatedAt":"2025-07-04T06:46:21","Actor":"vseanreesermsft","Number":"13673","RawContent":null,"Title":"Update branding to 8.0.19","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13673)","Url":"https://github.com/dotnet/winforms/pull/13673","RelatedDescription":"Closed or merged PR \"Update branding to 8.0.19\" (#13673)"},{"Id":"3197723236","IsPullRequest":true,"CreatedAt":"2025-07-04T06:08:20","Actor":"dotnet-maestro[bot]","Number":"13669","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250701.6](https://dev.azure.com/dnceng/internal/_build/results?buildId=2741398)\n- **Date Produced**: July 2, 2025 9:28:11 AM UTC\n- **Commit**: [eaa19c281d34580a8168cff9ce1e7337da8bfe4f](https://github.com/dotnet/dotnet/commit/eaa19c281d34580a8168cff9ce1e7337da8bfe4f)\n- **Commit Diff**: [df4663b...eaa19c2](https://github.com/dotnet/dotnet/compare/df4663b92c2f2d25b66e44524478d9016c812949...eaa19c281d34580a8168cff9ce1e7337da8bfe4f)\n- **Branch**: main\n\n**Updated Dependencies**\n- From [10.0.0-preview.7.25351.105 to 10.0.0-preview.7.25351.106][1]\n  - Microsoft.NET.Sdk.IL\n  - Microsoft.NETCore.App.Ref\n  - Microsoft.NETCore.ILAsm\n  - Microsoft.NETCore.ILDAsm\n  - Microsoft.NETCore.Platforms\n  - Microsoft.Win32.SystemEvents\n  - runtime.win-x64.Microsoft.NETCore.ILAsm\n  - runtime.win-x86.Microsoft.NETCore.ILAsm\n  - System.CodeDom\n  - System.Configuration.ConfigurationManager\n  - System.Formats.Nrbf\n  - System.IO.Hashing\n  - System.Reflection.MetadataLoadContext\n  - System.Resources.Extensions\n  - System.Runtime.Serialization.Formatters\n  - System.Text.Encodings.Web\n  - System.Text.Json\n  - System.Windows.Extensions\n- From [10.0.0-beta.25351.105 to 10.0.0-beta.25351.106][1]\n  - Microsoft.DotNet.Arcade.Sdk\n  - Microsoft.DotNet.CMake.Sdk\n  - Microsoft.DotNet.GenFacades\n  - Microsoft.DotNet.Helix.Sdk\n  - Microsoft.DotNet.RemoteExecutor\n  - Microsoft.DotNet.XUnitV3Extensions\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/df4663b92c...eaa19c281d\n[marker]: <> (Start:Footer:CodeFlow PR)\n\n## Associated changes in source repos\n- https://github.com/dotnet/sdk/compare/0e9898bbc2834154ba0afdfb8372acd02d39ef01...4177291d4d3dabd5341239d01b3e844125659304\n\n[marker]: <> (End:Footer:CodeFlow PR)\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13669)","Url":"https://github.com/dotnet/winforms/pull/13669","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13669)"},{"Id":"3200103545","IsPullRequest":true,"CreatedAt":"2025-07-04T05:39:16","Actor":"vseanreesermsft","Number":"13674","RawContent":null,"Title":"Update branding to 9.0.8","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13674)","Url":"https://github.com/dotnet/winforms/pull/13674","RelatedDescription":"Closed or merged PR \"Update branding to 9.0.8\" (#13674)"},{"Id":"3200755546","IsPullRequest":false,"CreatedAt":"2025-07-03T22:00:07","Actor":"paul1956","Number":"13675","RawContent":null,"Title":"TabPage DarkMode renders tabs and tab background incorrectly and different in .Net 9 and 10","State":"open","Body":"### .NET version\n\nMicrosoft Visual Studio Community 2022 (64-bit) - Preview\nVersion 17.14.7 Preview 1.0\n\n\n### Did it work in .NET Framework?\n\nNot tested/verified\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nN/A\n\n### Issue description\n\nIt is unclear how to get TabPage to correctly render in DarkMode in both .Net 9 and .Net 10.\n\nThe designer does not support DarkMode (by design?) so it's difficult to know how it should be setup.\n\nWith TabPage1.UseVisualStyleBackColor = True, Tab Background is Dark but the page background is white\n![Image](https://github.com/user-attachments/assets/cfc521b3-43f5-4d1a-8d4a-99c697aa1c21)\n\nWith TabPage1.UseVisualStyleBackColor = False, Tab Background is Dark and the page background is dark\n![Image](https://github.com/user-attachments/assets/f9babf28-9ffd-47f6-8437-f5916b7c08a0)\n\nIf I render the Tabs (to make them dark) in code the tab background is always white\n![Image](https://github.com/user-attachments/assets/73899dcc-aa05-47ac-a232-206a0f46dfea)\n\nAlso unless I render the tabs the selected tab is not highlighted.\n\nI need tabs and the space behind the tabs to be dark, this is separate from the main area of the tab which I either want Blank or don't care about.\n\n\n### Steps to reproduce\n\nAdd TabControl to Form, add some TabPages and set\n```\nPrivate Sub MyApplication_ApplyApplicationDefaults(sender As Object, e As ApplyApplicationDefaultsEventArgs) Handles Me.ApplyApplicationDefaults\n    e.ColorMode = SystemColorMode.Dark\nEnd Sub\n\nFrom Form1.Designer\n\n' \n' TabControl1\n' \nTabControl1.Controls.Add(TabPage1)\nTabControl1.Controls.Add(TabPage2)\nTabControl1.Dock = DockStyle.Fill\nTabControl1.Location = New Point(0, 0)\nTabControl1.Name = \"TabControl1\"\nTabControl1.SelectedIndex = 0\nTabControl1.Size = New Size(1388, 180)\nTabControl1.TabIndex = 0\n' \n' TabPage1\n' \nTabPage1.Location = New Point(4, 24)\nTabPage1.Name = \"TabPage1\"\nTabPage1.Padding = New Padding(3)\nTabPage1.Size = New Size(1380, 152)\nTabPage1.TabIndex = 0\nTabPage1.Text = \"TabPage1\"\n' \n' TabPage2\n' \nTabPage2.Location = New Point(4, 24)\nTabPage2.Name = \"TabPage2\"\nTabPage2.Padding = New Padding(3)\nTabPage2.Size = New Size(1380, 152)\nTabPage2.TabIndex = 1\nTabPage2.Text = \"TabPage2\"\nTabPage2.UseVisualStyleBackColor = True\n\n\n```\nTest with TabPage1.UseVisualStyleBackColor True and False on both .Net 9 and 10\n","Url":"https://github.com/dotnet/winforms/issues/13675","RelatedDescription":"Open issue \"TabPage DarkMode renders tabs and tab background incorrectly and different in .Net 9 and 10\" (#13675)"},{"Id":"3199453597","IsPullRequest":false,"CreatedAt":"2025-07-03T13:42:15","Actor":"shindepra","Number":"13672","RawContent":null,"Title":"Screen reader announcing incorrect row count information while navigating the table data: A11y_WinForm.NETRuntime_MonitorMrationsWindow_InfoAndRelationship.","State":"open","Body":"\"Please do not close this bug. This bug should only be closed by TCS, C+AI Accessibility or the Divisional Driver.\"\n\n### GitHub Tags:\n#A11ySev2; #A11yTCS; #WCAG1.3.1; #Win32; #DesktopApp; #Win11; #WinForms .NET Runtime; #BM_WinForms.NETRuntime_Win32_June2025; #Info and Relationships; #Narrator; #Screen Reader; #A11yMAS\n\n### Environment Details:\nMicrosoft Windows 11 Enterprise (24H2) Build on 26100.4061\n\n### Actual Result: \nScreen reader announcing incorrect row count information while navigating the table data under “Monitor migrations” window.   \n\n### Expected Result: \nScreen reader should announce the correct row count information while navigating the table data under “Monitor migrations” window.   \n\n### Repro Steps: \n\n1. Open SQL Server Migration Assistant for oracle.  \n2. Splash screen appears and SSMA is launched  \n3. Navigate to 'Migrate Data with DMS(preview)' button and select it.  \n4. 'At Scale Migration Wizard'>Enter Azure Subscriptions details  \n5. Navigate all the controls under \"Enter Azure subscription details\" window and select next button  \n6. Navigate all the controls under \"source data base connection details\" window and select next button   \n7. Navigate all the controls under \"Target database connection details\" window and select next button  \n8. Navigate all the controls under \"select the location of the database migration\" window and select \"finish\" button  \n9. Navigate all the controls under \"monitor migrations window\" and select \"view\" button and navigate all the controls under another \"monitor migration\" window.  \n10. Verify whether screen reader announcing correct row count or not.  \n\n### User Empact:\nWhen a screen reader announces incorrect row count information while navigating table data, it can mislead users about the structure and amount of content, making it harder to understand or interact with the data accurately. This affects information clarity and undermines accessibility for screen reader users.   \n\n### Attachment:\nhttps://microsoftapc-my.sharepoint.com/:v:/g/personal/v-kkumar2_microsoft_com/EfK3aGoBmHxMtVS9huz7IG0B8Ixe_aVhlDx875gJGauyNA?e=EeKhEy","Url":"https://github.com/dotnet/winforms/issues/13672","RelatedDescription":"Open issue \"Screen reader announcing incorrect row count information while navigating the table data: A11y_WinForm.NETRuntime_MonitorMrationsWindow_InfoAndRelationship.\" (#13672)"},{"Id":"3198688334","IsPullRequest":false,"CreatedAt":"2025-07-03T09:21:21","Actor":"koszeggy","Number":"13671","RawContent":null,"Title":"ExecutionEngineException from ToolStripComboBox","State":"open","Body":"### .NET version\n\nEvery version is affected\n\n### Did it work in .NET Framework?\n\nNo\n\nIn .NET Framework the same issue exists. The only difference that it causes an `AccessViolationException` rather than an `ExecutionEngineException`. I think I've found the same issue reported [here](https://learn.microsoft.com/en-ie/answers/questions/2124572/why-am-i-encountering-a-system-accessviolationexce), but they couldn't provide a reproduction.\n\n### Issue description\n\nChanging the `RightToLeft` property of the `Form` triggered by the `SelectedValueChanged` event of a `ComboBox` may lead to an `ExecutionEngineException` (.NET Framework: `AccessViolationException`).\n\nThe exception does not always occur for the first time, but after a few tries it happens eventually.\n\nThough I haven't performed a deep analysis, the issue may have something to do with the fact that changing `Form.RightToLeft` recreates the whole form, and if it happens when the combo box was dropped down, some Windows messages may be processed on an already freed handle.\n\n### Steps to reproduce\n\nA minimal repro:\n\n**ExceptionFromComboBox.cs:**\n```cs\nusing System;\nusing System.Windows.Forms;\n\nnamespace WindowsFormsApp1\n{\n    public partial class ExceptionFromComboBox : Form\n    {\n        public ExceptionFromComboBox()\n        {\n            InitializeComponent();\n            cmbRtl.ComboBox.DataSource = new[] { RightToLeft.No, RightToLeft.Yes };\n            cmbRtl.ComboBox.SelectedValueChanged += ComboBox_SelectedValueChanged;\n        }\n\n        private void ComboBox_SelectedValueChanged(object sender, EventArgs e)\n        {\n            RightToLeft = (RightToLeft)cmbRtl.ComboBox.SelectedValue;\n        }\n    }\n}\n```\n\n**ExceptionFromComboBox.Designer.cs:**\n```cs\nnamespace WindowsFormsApp1\n{\n    partial class ExceptionFromComboBox\n    {\n        private System.ComponentModel.IContainer components = null;\n\n        protected override void Dispose(bool disposing)\n        {\n            if (disposing && (components != null))\n            {\n                components.Dispose();\n            }\n            base.Dispose(disposing);\n        }\n\n        #region Windows Form Designer generated code\n\n        private void InitializeComponent()\n        {\n            this.toolStrip1 = new System.Windows.Forms.ToolStrip();\n            this.toolStripLabel1 = new System.Windows.Forms.ToolStripLabel();\n            this.cmbRtl = new System.Windows.Forms.ToolStripComboBox();\n            this.toolStrip1.SuspendLayout();\n            this.SuspendLayout();\n            // \n            // toolStrip1\n            // \n            this.toolStrip1.Items.AddRange(new System.Windows.Forms.ToolStripItem[] {\n            this.toolStripLabel1,\n            this.cmbRtl});\n            this.toolStrip1.Location = new System.Drawing.Point(0, 0);\n            this.toolStrip1.Name = \"toolStrip1\";\n            this.toolStrip1.Size = new System.Drawing.Size(283, 25);\n            this.toolStrip1.TabIndex = 0;\n            this.toolStrip1.Text = \"toolStrip1\";\n            // \n            // toolStripLabel1\n            // \n            this.toolStripLabel1.Name = \"toolStripLabel1\";\n            this.toolStripLabel1.Size = new System.Drawing.Size(71, 22);\n            this.toolStripLabel1.Text = \"RightToLeft:\";\n            // \n            // cmbRtl\n            // \n            this.cmbRtl.DropDownStyle = System.Windows.Forms.ComboBoxStyle.DropDownList;\n            this.cmbRtl.Name = \"cmbRtl\";\n            this.cmbRtl.Size = new System.Drawing.Size(121, 25);\n            // \n            // ExceptionFromComboBox\n            // \n            this.AutoScaleDimensions = new System.Drawing.SizeF(6F, 13F);\n            this.AutoScaleMode = System.Windows.Forms.AutoScaleMode.Font;\n            this.ClientSize = new System.Drawing.Size(283, 154);\n            this.Controls.Add(this.toolStrip1);\n            this.Name = \"ExceptionFromComboBox\";\n            this.RightToLeftLayout = true;\n            this.Text = \"ExceptionFromComboBox\";\n            this.toolStrip1.ResumeLayout(false);\n            this.toolStrip1.PerformLayout();\n            this.ResumeLayout(false);\n            this.PerformLayout();\n        }\n\n        #endregion\n\n        private System.Windows.Forms.ToolStrip toolStrip1;\n        private System.Windows.Forms.ToolStripLabel toolStripLabel1;\n        private System.Windows.Forms.ToolStripComboBox cmbRtl;\n    }\n}\n```\n\nExecute the application with debugging, and start toggling the RightToLeft value in the combo box until the exception occurs.\n\n![Image](https://github.com/user-attachments/assets/72593e26-929e-4dfb-b3ee-7a49f36b3bbf)\n\nThe exception happens during processing a `WM_COMMAND` for the native child window of the `ComboBox` by `DefWndProc`.\n\nThe following screenshot is for the .NET 9 build:\n![Image](https://github.com/user-attachments/assets/af491065-c8bb-4675-a51e-e43f3245dd73)","Url":"https://github.com/dotnet/winforms/issues/13671","RelatedDescription":"Open issue \"ExecutionEngineException from ToolStripComboBox\" (#13671)"},{"Id":"3197744528","IsPullRequest":false,"CreatedAt":"2025-07-03T02:21:09","Actor":"AraHaan","Number":"13670","RawContent":null,"Title":"[API Request] Add Question to TaskDialogIcon.","State":"open","Body":"### Background and motivation\n\nI find it a problem that ``TaskDialogIcon`` is missing ``Question`` with no direct *out-of-box* migration path for MessageBox's which use ``MessageBoxIcon.Question``.\n\n**Why not just embed the icon myself?**\nI feel like having to do something like this to get a 1:1 migration path away from the MessageBox API's *could* be simplified further if ``Question`` was added as a property to ``TaskDialogIcon``:\n```cs\ninternal static class MessageBoxIconExtensions\n{\n    internal static TaskDialogIcon ToTaskDialogIcon(this MessageBoxIcon icon)\n        => icon switch\n        {\n            MessageBoxIcon.Question => new(SystemIcons.Question),\n            MessageBoxIcon.Information => TaskDialogIcon.Information,\n            MessageBoxIcon.Warning => TaskDialogIcon.Warning,\n            MessageBoxIcon.Error => TaskDialogIcon.Error,\n            MessageBoxIcon.None => TaskDialogIcon.None,\n            _ => throw new NotSupportedException(\"bug!!!\"),\n        };\n}\n```\n\n### API Proposal\n\n```csharp\nnamespace System.Windows.Forms;\n\npublic class TaskDialogIcon : IDisposable\n{\n    // snipped existing properties for the icons.\n\n    public static readonly TaskDialogIcon Question = new(SystemIcons.Question); // added\n\n    // snipped existing code.\n}\n```\n\n\n### API Usage\n\n```csharp\ninternal static class MessageBoxIconExtensions\n{\n    internal static TaskDialogIcon ToTaskDialogIcon(this MessageBoxIcon icon)\n        => icon switch\n        {\n            MessageBoxIcon.Question => TaskDialogIcon.Question, // <-- new API used here.\n            MessageBoxIcon.Information => TaskDialogIcon.Information,\n            MessageBoxIcon.Warning => TaskDialogIcon.Warning,\n            MessageBoxIcon.Error => TaskDialogIcon.Error,\n            MessageBoxIcon.None => TaskDialogIcon.None,\n            _ => throw new NotSupportedException(\"bug!!!\"),\n        };\n}\n```\nAnd yes I actually use code similar to this in one of my programs and would love to eventually be able to share this piece of code inside of more of them to migrate them to ``TaskDialog`` as a free and cheap upgrade path.\n\n### Alternative Designs\n\nI have not thought of any other alternative API's as I feel that this member to TaskDialogIcon would be the best idea as having a 1:1 migration path for 100% of all use cases for ``MessageBox`` -> ``TaskDialog`` *should* be worth investing in.\n\n### Risks\n\nMinimal as this would help people migrate 100% away from ``MessageBox`` and into ``TaskDialog`` which can be customized much better than ``MessageBox``. Also existing code that uses ``new TaskDialogIcon(SystemIcons.Question)`` can also be detected by the Windows Forms analyzer when used outside of the Windows Forms codebase to then suggest the change to use ``TaskDialogIcon.Question`` instead. Also with this it *could* become possible to then add ``[Obsolete]`` to the ``MessageBox`` class and possibly also remove it from winforms in a future version of .NET in favor of ``TaskDialog`` (on the reference assembly side with the runtime implementation being stubs to ``TaskDialog`` instead to not break existing applications).\n\n### Will this feature affect UI controls?\n\nI do not think this feature would affect any of the UI controls, would need to be localized, or even impact accessibility.","Url":"https://github.com/dotnet/winforms/issues/13670","RelatedDescription":"Open issue \"[API Request] Add Question to TaskDialogIcon.\" (#13670)"},{"Id":"3197555117","IsPullRequest":false,"CreatedAt":"2025-07-03T00:36:07","Actor":"dotnet-maestro-bot","Number":"13668","RawContent":null,"Title":"[dnceng-bot] Branch `winforms/release/9.0` can't be merged to Azdo internal branch","State":"open","Body":"Branch [release/9.0](https://github.com/dotnet/winforms/commits/release/9.0/) in `dotnet/winforms` repo can't be mirrored from GitHub to Azure [internal/release/9.0](https://dev.azure.com/dnceng/internal/_git/dotnet-winforms?version=GBinternal%2Frelease%2F9.0&_a=history) via internal merge. \n\nThere are conflicting commits in the target branch.\nThe branch is configured to be mirrored via automated merge. \nThe situation is rare but normal. The target branch is expected to receive manual commits in the Azure DevOps clone, which could cause conflict.\n\nConflicts need to be **resolved to unblock the code flow**.\n\n- you can resolve the issue by resolving the conflict in the **target branch only**. \n    - Please make sure that the changes sensitive from security perspective are not published ahead of time to GitHub!\n- reverting the extra commits in the Azdo target branch.\n- checking the logs of the mirroring process in the [mirroring pipeline](https://dev.azure.com/dnceng/internal/_build?definitionId=1387).\n- you can disable the mirroring of the branch in the [configuration file](https://dev.azure.com/dnceng/internal/_git/dotnet-mirroring?path=/dnceng-subscriptions.jsonc).\n- you can ask @dotnet/dnceng for help or read the [documentation](https://dev.azure.com/dnceng/internal/_git/dotnet-mirroring?path=/README.md).\n\nPlease close this issue once the conflict is resolved.","Url":"https://github.com/dotnet/winforms/issues/13668","RelatedDescription":"Open issue \"[dnceng-bot] Branch `winforms/release/9.0` can't be merged to Azdo internal branch\" (#13668)"},{"Id":"3194283551","IsPullRequest":true,"CreatedAt":"2025-07-02T09:45:49","Actor":"dotnet-maestro[bot]","Number":"13666","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250701.5](https://dev.azure.com/dnceng/internal/_build/results?buildId=2741231)\n- **Date Produced**: July 2, 2025 1:07:44 AM UTC\n- **Commit**: [df4663b92c2f2d25b66e44524478d9016c812949](https://github.com/dotnet/dotnet/commit/df4663b92c2f2d25b66e44524478d9016c812949)\n- **Commit Diff**: [2fd058a...df4663b](https://github.com/dotnet/dotnet/compare/2fd058a2011cf1842cb3a42531e34987e948602e...df4663b92c2f2d25b66e44524478d9016c812949)\n- **Branch**: main\n\n**Updated Dependencies**\n- From [10.0.0-preview.7.25330.103 to 10.0.0-preview.7.25351.105][1]\n  - Microsoft.NET.Sdk.IL\n  - Microsoft.NETCore.App.Ref\n  - Microsoft.NETCore.ILAsm\n  - Microsoft.NETCore.ILDAsm\n  - Microsoft.NETCore.Platforms\n  - Microsoft.Win32.SystemEvents\n  - runtime.win-x64.Microsoft.NETCore.ILAsm\n  - runtime.win-x86.Microsoft.NETCore.ILAsm\n  - System.CodeDom\n  - System.Configuration.ConfigurationManager\n  - System.Formats.Nrbf\n  - System.IO.Hashing\n  - System.Reflection.MetadataLoadContext\n  - System.Resources.Extensions\n  - System.Runtime.Serialization.Formatters\n  - System.Text.Encodings.Web\n  - System.Text.Json\n  - System.Windows.Extensions\n- From [10.0.0-beta.25330.103 to 10.0.0-beta.25351.105][1]\n  - Microsoft.DotNet.Arcade.Sdk\n  - Microsoft.DotNet.CMake.Sdk\n  - Microsoft.DotNet.GenFacades\n  - Microsoft.DotNet.Helix.Sdk\n  - Microsoft.DotNet.RemoteExecutor\n  - Microsoft.DotNet.XUnitV3Extensions\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/2fd058a201...df4663b92c\n[marker]: <> (Start:Footer:CodeFlow PR)\n\n## Associated changes in source repos\n- https://github.com/dotnet/efcore/compare/6b700794951d639726dbe4ccdd420723a1b4ce0a...14b439c0bcf7cb81899457e4cbd14640cc365578\n- https://github.com/dotnet/fsharp/compare/44a24dcd6677639f3b62e361d99f6495175dc49f...7346d84a24dd15155d74f8179788a423cbdd962a\n- https://github.com/dotnet/msbuild/compare/faa2ec8d4839e837b99f2527b30353d3e89f98ca...0e2431add8a483acfd985c6fdd352ebfcade6755\n- https://github.com/dotnet/razor/compare/1b931e8879948986442ab29949ca57edcea58ac9...58de0c1a5c1fadf56a848dd45d91440ae041e22c\n- https://github.com/dotnet/runtime/compare/b97f98b7bdd339ee3424e81ec0cfe4b40590268e...61f2ad644f82a7208eb925bedc3bae49754e4440\n- https://github.com/dotnet/sourcelink/compare/634059dd61cb2de8a5fbed786093790a78ce0de7...3e1ad8d7d7799cfa18eca11b0c071eec3395b0c1\n- https://github.com/dotnet/templating/compare/0e87747d1d3cf64745bc64ec821144054a9b7800...bbbcb1d9bb33264e618581165807fd59c2ffa3f4\n- https://github.com/dotnet/windowsdesktop/compare/c4c3cd1ffcc1983e176d0c00b12d0f2c0a9b5ad2...3406b151b95d3c15cb98e038a05583fc865c575b\n\n[marker]: <> (End:Footer:CodeFlow PR)\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13666)","Url":"https://github.com/dotnet/winforms/pull/13666","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13666)"},{"Id":"3184450740","IsPullRequest":true,"CreatedAt":"2025-07-01T23:41:34","Actor":"dotnet-maestro[bot]","Number":"13663","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250630.3](https://dev.azure.com/dnceng/internal/_build/results?buildId=2740513)\n- **Date Produced**: July 1, 2025 1:07:04 AM UTC\n- **Commit**: [2fd058a2011cf1842cb3a42531e34987e948602e](https://github.com/dotnet/dotnet/commit/2fd058a2011cf1842cb3a42531e34987e948602e)\n- **Commit Diff**: [1bc437c...2fd058a](https://github.com/dotnet/dotnet/compare/1bc437cd77614e60dc6068da6cffeaae1804c72e...2fd058a2011cf1842cb3a42531e34987e948602e)\n- **Branch**: main\n\n**Updated Dependencies**\n- From [10.0.0-preview.7.25326.109 to 10.0.0-preview.7.25330.103][2]\n  - Microsoft.NET.Sdk.IL\n  - Microsoft.NETCore.App.Ref\n  - Microsoft.NETCore.ILAsm\n  - Microsoft.NETCore.ILDAsm\n  - Microsoft.NETCore.Platforms\n  - Microsoft.Win32.SystemEvents\n  - runtime.win-x64.Microsoft.NETCore.ILAsm\n  - runtime.win-x86.Microsoft.NETCore.ILAsm\n  - System.CodeDom\n  - System.Configuration.ConfigurationManager\n  - System.Formats.Nrbf\n  - System.IO.Hashing\n  - System.Reflection.MetadataLoadContext\n  - System.Resources.Extensions\n  - System.Runtime.Serialization.Formatters\n  - System.Text.Encodings.Web\n  - System.Text.Json\n  - System.Windows.Extensions\n- From [10.0.0-beta.25326.109 to 10.0.0-beta.25330.103][2]\n  - Microsoft.DotNet.Arcade.Sdk\n  - Microsoft.DotNet.CMake.Sdk\n  - Microsoft.DotNet.GenFacades\n  - Microsoft.DotNet.Helix.Sdk\n  - Microsoft.DotNet.RemoteExecutor\n  - Microsoft.DotNet.XUnitV3Extensions\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n\n[1]: https://github.com/dotnet/dotnet/compare/1bc437cd77...72e8593d62\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13663)\n[2]: https://github.com/dotnet/dotnet/compare/1bc437cd77...2fd058a201\n[marker]: <> (Start:Footer:CodeFlow PR)\n\n## Associated changes in source repos\n- https://github.com/dotnet/arcade/compare/f70d32d77df8544117bd659512a9087619c1de6e...0e335649fe2d2f98ea51e55cc1a0899af3617eba\n- https://github.com/dotnet/aspnetcore/compare/f2353d2504c8c575bc0df9a5c8490aa5e2526e62...9e69f19a5c7efa19577627a62c029ff387810d50\n- https://github.com/dotnet/diagnostics/compare/c80de30e0d582df0c6fb9b24e8b10c3a78c97161...e32a259690378945a52bc8ac5cc5e302d9beb193\n- https://github.com/dotnet/efcore/compare/c5313b0e8dc19d6d43897c6b8a37129563e13353...6b700794951d639726dbe4ccdd420723a1b4ce0a\n- https://github.com/dotnet/msbuild/compare/1269b69cb11a3169aa0e44d68698fe157cf26869...faa2ec8d4839e837b99f2527b30353d3e89f98ca\n- https://github.com/dotnet/razor/compare/c60ff6979c94e41675d9f092e2e9161ef2e41493...1b931e8879948986442ab29949ca57edcea58ac9\n- https://github.com/dotnet/roslyn-analyzers/compare/aabbaa2c6459fd586ad4258c8bd6059dac8ba4e6...62b0e094420a1f93d32ecb338aff8ad498ec9cd5\n- https://github.com/dotnet/runtime/compare/c158ff4424d3d7e330ccc98fffc55225238e7d32...b97f98b7bdd339ee3424e81ec0cfe4b40590268e\n- https://github.com/dotnet/templating/compare/47d652fd0d57f213226c192f551be66bd5955915...0e87747d1d3cf64745bc64ec821144054a9b7800\n- https://github.com/dotnet/windowsdesktop/compare/37ba7be40a4af897f1d390d44fc416000c31ed24...c4c3cd1ffcc1983e176d0c00b12d0f2c0a9b5ad2\n- https://github.com/dotnet/wpf/compare/52e2951b4519ef469bb18045bcd2b47a9a804c05...28843aafcedc8299336ae470c868f842a4ca52b4\n- https://github.com/dotnet/xdt/compare/0522205e7ee27c529c3253b51cae0b0b96a32f9a...0d66c1314c16a831f1289b1e4b1adbe0d8b94404\n\n[marker]: <> (End:Footer:CodeFlow PR)","Url":"https://github.com/dotnet/winforms/pull/13663","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13663)"},{"Id":"3187933024","IsPullRequest":true,"CreatedAt":"2025-06-30T10:16:18","Actor":"LeafShi1","Number":"13665","RawContent":null,"Title":"Override the name property of the MonthCalendarAccessibleObject","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #13657\r\n\r\n## Root Cause\r\n\r\n1. The date in the calendar is not an independent control. NVDA cannot focus on the specific date cell, \r\n2. Although MSAA notifications are sent, but NVDA can only announce the `Name` of the `MonthCalendarAccessibleObject`, it cannot announce the `Value` of the `MonthCalendarAccessibleObject`\r\n\r\n## Proposed changes\r\n\r\n- Override the name property of `MonthCalendarAccessibleObject`, and output the `Value` content in `Name` to ensure that NVDA can read it normally\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- When switching calendar dates using the keyboard, the screen reader can correctly read the date information in the calendar table\r\n\r\n\r\n## Regression? \r\n\r\n-  No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\nScreen Reader user will not be able understand the correct data information while navigating on calendar. \r\n\r\nhttps://github.com/user-attachments/assets/e189d65a-3a1e-4c98-8370-bda95e7d26e0\r\n\r\n### After\r\n\r\n![AfterChange](https://github.com/user-attachments/assets/838c5356-0eb7-413f-b595-bdc4dbf5c9d6)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manually\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- 10.0.0-preview.7.25320.118\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13665)","Url":"https://github.com/dotnet/winforms/pull/13665","RelatedDescription":"Open PR \"Override the name property of the MonthCalendarAccessibleObject\" (#13665)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-07-10T03:30:27.618615Z","RunDurationInMilliseconds":501}