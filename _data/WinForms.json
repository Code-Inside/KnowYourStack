{"Data":{"GitHub":{"Issues":[{"Id":"1142267075","IsPullRequest":true,"CreatedAt":"2022-02-18T03:16:35","Actor":"RussKie","Number":"6712","RawContent":null,"Title":"Update designer-related docs, add designer troubleshooting guide","State":"open","Body":"Closes #6705\r\nCloses #6492\r\nCloses #6420\r\n\r\nThe preview is available at https://github.com/RussKie/winforms/tree/designer_troubleshooting_guide/docs/designer.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6712)","Url":"https://github.com/dotnet/winforms/pull/6712","RelatedDescription":"Open PR \"Update designer-related docs, add designer troubleshooting guide\" (#6712)"},{"Id":"1142133764","IsPullRequest":true,"CreatedAt":"2022-02-18T00:56:06","Actor":"github-actions[bot]","Number":"6711","RawContent":null,"Title":"[release/6.0] Pass SendKeys state by ref","State":"open","Body":"Backport of #6710 to release/6.0\r\n\r\nRegression introduced in 90f7c1dd955c51c904efd496731a2394cacf578f.\r\n\r\nFixes #6666\r\n\r\n/cc @dreddy-work @JeremyKuhne\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6711)","Url":"https://github.com/dotnet/winforms/pull/6711","RelatedDescription":"Open PR \"[release/6.0] Pass SendKeys state by ref\" (#6711)"},{"Id":"1142131116","IsPullRequest":true,"CreatedAt":"2022-02-18T00:52:05","Actor":"JeremyKuhne","Number":"6710","RawContent":null,"Title":"Pass SendKeys state by ref","State":"open","Body":"Regression introduced in 90f7c1dd955c51c904efd496731a2394cacf578f.\r\n\r\nFixes #6666\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6710)","Url":"https://github.com/dotnet/winforms/pull/6710","RelatedDescription":"Open PR \"Pass SendKeys state by ref\" (#6710)"},{"Id":"1132564549","IsPullRequest":false,"CreatedAt":"2022-02-17T23:48:47","Actor":"AmalRajUmapathySelvam","Number":"6681","RawContent":null,"Title":"Size of the control placed in toolstripcontainer is wrong in extended monitor when changing padding of toolstrip","State":"closed","Body":"* .NET Core Version: \r\nNot tested.\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes. 4.6.1\r\n\r\n**Problem description:**\r\n\r\nWe have created an application with add-in express and extends the application to the external monitor with below mentioned screen resolution specifications. \r\n\r\nPrimary Monitor:\r\nDPI - 150\r\nScreen resolution - 1920*1080\r\n\r\nSecondary Monitor: (4K)\r\nDPI - 100\r\nScreen resolution - 1920*1080\r\n\r\nWe have changed the padding of the toolstrip with add-in and the issue occurs in external monitor. This issue not reproduced with primary monitor and with other screen resolutions. \r\n\r\nIn the below attached example, we have placed the MS DataGridView as content for ToolStripContainer.ContentControl and we believe the issue can be reproduced with any other controls. And seems sizing the child controls as per padding is improper with toolstrip and toolstripcontainer.\r\n\r\n**Expected behavior:**\r\nControl size should be proper as per the size of the ToolStripContainer.ContentControl.\r\n\r\n**Sample:**   -  [ToolstripPaddingIssue.zip](https://github.com/dotnet/winforms/files/8048723/ToolstripPaddingIssue.zip)\r\n\r\n**Minimal repro:**\r\n1) Use Microsoft Excel Add-in express.\r\n2) Run the application. (Launched in excel)\r\n3) Move to menu section and click \"Click here to change padding\" menu.\r\n4) And click on the ribbon button shown.\r\n5) Change the padding repeatedly through the dropdown available in form shown.\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6681","RelatedDescription":"Closed issue \"Size of the control placed in toolstripcontainer is wrong in extended monitor when changing padding of toolstrip\" (#6681)"},{"Id":"1141520489","IsPullRequest":false,"CreatedAt":"2022-02-17T15:51:55","Actor":"jbhensley","Number":"6708","RawContent":null,"Title":"ListView.GroupCollapsedStateChanged fires with incorrect GroupIndex/doesn't fire at all","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n.NET Core Version:  \r\n\r\n* .NET Core SDK: 7.0.0-preview.2.22116.9\r\n\r\nHave you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\nWhen a key is pressed, `ListView` determines which group is affected by grabbing the `Group` property of the first selected item:\r\n\r\nhttps://github.com/dotnet/winforms/blob/150aabc4cf47c303f980fbc6313c329e6da8583c/src/System.Windows.Forms/src/System/Windows/Forms/ListView.cs#L6934-L6937\r\n\r\nThis is incorrect if an item is selected in one group, followed by subsequent selection of a second group which can be done by holding down Ctrl and selecting a different group's header.\r\n\r\nBehavior manifests different depending on whether changes in PR #6493 have been applied (note: PR not merged at time of issue creation).\r\n\r\n- On most recent build: `ListView.GroupCollapsedStateChanged` event fires with incorrect `GroupIndex`\r\n\r\n![ListViewGroup-unpatched](https://user-images.githubusercontent.com/13544395/154516336-a57ff954-fcda-4093-8c93-9a2fea7140a1.gif)\r\n\r\n- After #6493 , the event does not fire at all\r\n\r\n![ListViewGroup](https://user-images.githubusercontent.com/13544395/154516575-62709402-0a92-4ace-9579-1ea66eeef564.gif)\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n\r\n**Expected behavior:**\r\n<!--\r\n    Provide details on expected behavior with screenshots/GIF, where ever possible.\r\n -->\r\n\r\n`ListView.GroupCollapsedStateChanged` should fire and have the correct value for `GroupIndex`\r\n\r\n**Minimal repro:**\r\n<!--\r\n    Provide step by step guide to repro this issue.  Incase repro steps are complex, It would be helpful if \r\n    you attach a GIF with repro actions. Attaching a sample app to repro the issue will help speed up the \r\n    resolution. \r\n -->\r\n\r\nCode used for animations:\r\n\r\n``` C#\r\nusing var form = new Form() { Size = new Size(808, 469) };\r\nusing var listView = new ListView();\r\nusing var textBox = new TextBox() { Multiline = true };\r\n\r\nform.Controls.Add(listView);\r\nlistView.Location = new Point(10, 10);\r\nlistView.Size = new Size(770, 200);\r\n\r\nform.Controls.Add(textBox);\r\ntextBox.Location = new Point(10, 220);\r\ntextBox.Size = new Size(770, 200);\r\n\r\nvar group1 = new ListViewGroup(\"Group 1\") { CollapsedState = ListViewGroupCollapsedState.Expanded };\r\nvar group2 = new ListViewGroup(\"Group 2\") { CollapsedState = ListViewGroupCollapsedState.Expanded };\r\n\r\nlistView.Groups.AddRange(new[] { group1, group2 });\r\nlistView.Items.Add(new ListViewItem(\"g1 - i1\", group1));\r\nlistView.Items.Add(new ListViewItem(\"g1 - i2\", group1));\r\nlistView.Items.Add(new ListViewItem(\"g1 - i3\", group1));\r\nlistView.Items.Add(new ListViewItem(\"g2 - i1\", group2));\r\nlistView.Items.Add(new ListViewItem(\"g2 - i2\", group2));\r\nlistView.Items.Add(new ListViewItem(\"g2 - i3\", group2));\r\n\r\nlistView.GroupCollapsedStateChanged += (_, e) =>\r\n{\r\n\ttextBox.Text = $\"{DateTime.Now.TimeOfDay}: CollapsedStateChanged for {listView.Groups[e.GroupIndex].Header}{Environment.NewLine}{textBox.Text}\";\r\n};\r\n\r\nform.ShowDialog();\r\n```","Url":"https://github.com/dotnet/winforms/issues/6708","RelatedDescription":"Open issue \"ListView.GroupCollapsedStateChanged fires with incorrect GroupIndex/doesn't fire at all\" (#6708)"},{"Id":"1141381370","IsPullRequest":false,"CreatedAt":"2022-02-17T14:04:31","Actor":"ThomasLee-Factbook","Number":"6707","RawContent":null,"Title":"NullReferenceException in CheckListBox","State":"open","Body":"* .NET Core Version: 6.0.102\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**Problem description:**\r\nA NullReferenceException occurs in the CheckedListBox RefreshItems method when using a data source, see project [Example.zip](https://github.com/dotnet/winforms/files/8089130/Example.zip) .\r\n\r\n**Expected behavior:**\r\nNo exception is thrown.","Url":"https://github.com/dotnet/winforms/issues/6707","RelatedDescription":"Open issue \"NullReferenceException in CheckListBox\" (#6707)"},{"Id":"1141316013","IsPullRequest":true,"CreatedAt":"2022-02-17T13:38:26","Actor":"dotnet-maestro[bot]","Number":"6706","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20220216.9\r\n- **Date Produced**: February 17, 2022 6:01:52 AM UTC\r\n- **Commit**: 793185a23907b941787fa5e9dab1524d0063df1f\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-preview.2.22115.15 to 7.0.0-preview.2.22116.9][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.2.22115.15 to 7.0.0-preview.2.22116.9][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-preview.2.22115.15 to 7.0.0-preview.2.22116.9][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.2.22115.15 to 7.0.0-preview.2.22116.9][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-preview.2.22115.15 to 7.0.0-preview.2.22116.9][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.2.22115.15 to 7.0.0-preview.2.22116.9][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-preview.2.22115.15 to 7.0.0-preview.2.22116.9][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.2.22115.15 to 7.0.0-preview.2.22116.9][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.2.22115.15 to 7.0.0-preview.2.22116.9][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.2.22115.15 to 7.0.0-preview.2.22116.9][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-preview.2.22115.15 to 7.0.0-preview.2.22116.9][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.2.22115.15 to 7.0.0-preview.2.22116.9][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.2.22115.15 to 7.0.0-preview.2.22116.9][1]\r\n  - **System.Text.Json**: [from 7.0.0-preview.2.22115.15 to 7.0.0-preview.2.22116.9][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-preview.2.22115.15 to 7.0.0-preview.2.22116.9][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.2.22115.15 to 7.0.0-preview.2.22116.9][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.2.22115.15 to 7.0.0-preview.2.22116.9][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-preview.2.22115.15 to 7.0.0-preview.2.22116.9][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-preview.2.22115.15 to 7.0.0-preview.2.22116.9][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.2.22115.15 to 7.0.0-preview.2.22116.9][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.2.22115.15 to 7.0.0-preview.2.22116.9][1]\r\n  - **System.CodeDom**: [from 7.0.0-preview.2.22115.15 to 7.0.0-preview.2.22116.9][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.2.22115.15 to 7.0.0-preview.2.22116.9][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.2.22115.15 to 7.0.0-preview.2.22116.9][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-preview.2.22115.15 to 7.0.0-preview.2.22116.9][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-preview.2.22115.15 to 7.0.0-preview.2.22116.9][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.2.22115.15 to 7.0.0-preview.2.22116.9][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-preview.2.22115.15 to 7.0.0-preview.2.22116.9][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.2.22115.15 to 7.0.0-preview.2.22116.9][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.2.22115.15 to 7.0.0-preview.2.22116.9][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/32434f9...793185a\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6706)","Url":"https://github.com/dotnet/winforms/pull/6706","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6706)"},{"Id":"1141116408","IsPullRequest":false,"CreatedAt":"2022-02-17T09:58:22","Actor":"smohanty05","Number":"6705","RawContent":null,"Title":"WinForms Designer not loading  ","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n6.0\r\n* Have you experienced this same bug with .NET Framework?: \r\n<!-- Yes / No -->\r\nNo\r\n**Problem description:**\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\nI have a solution file with 100+ projects. It is taking 1-5 to 2 minutes load a designer for a project. Other WinForm of the same project then loads quickly. But if we restart VS or reload project or make any changes to the project, then next WinForm load again taking 1-5 to 2 minutes.\r\nAlso I saw one case where it is not loading at all. Open one WinForm of Project1. While waiting, load another WinForm of Project2. After waiting for around 2 minutes, Project2 form designer opens. But Project1 form designer does not open at all. Even closing both forms and reopening Project1 form also does not solve it.\r\nWokaround: restart Visual Studio open the Project1 designer.\r\n\r\nHope you will resolve such issues.\r\n\r\n**Expected behavior:**\r\n<!--\r\n    Provide details on expected behavior with screenshots/GIF, where ever possible.\r\n -->\r\nWinForms designer should load always and also should not take long time to load.\r\n\r\n**Minimal repro:**\r\n<!--\r\n    Provide step by step guide to repro this issue.  Incase repro steps are complex, It would be helpful if \r\n    you attach a GIF with repro actions. Attaching a sample app to repro the issue will help speed up the \r\n    resolution. \r\n -->\r\nOpen one WinForm of Project1. \r\nWhile waiting, load another WinForm of Project2. After waiting for around 2 minutes,\r\n Project2 form designer opens. \r\nBut Project1 form designer does not open at all. Even closing both forms and reopening Project1 form also does not solve it.\r\n\r\nAfter that I tried couple of times, even after restating VS, Winforms not loading.\r\nGetting below error:\r\n[02:56:01.4218652] Processed 'System.Design' in 00:00:00.1833175\r\n[02:56:01.4788618] Added 'System.Design'\r\n[02:56:01.4788618] Loaded System.Drawing.Design in 00:00:00.0000201 [thread 30]\r\n[02:56:01.4818653] Processed 'System.Drawing.Design' in 00:00:00.0033208\r\n[02:56:01.4838625] Added 'System.Drawing.Design'\r\n[02:56:01.4988609] Creating VSCodeDomDesignerLoader\r\n[02:56:03.3968614] Current VS Version = 17.0\r\n[02:56:03.4029064] Start processing enqueued assemblies\r\n[02:56:05.4728612] Loaded Microsoft.WinForms.DesignTools.Protocol in 00:00:00.0000229 [thread 15]\r\n[02:56:05.4728612] Processed 'Microsoft.WinForms.DesignTools.Protocol' in 00:00:00.0000847\r\n[02:56:05.4758617] Added 'Microsoft.WinForms.DesignTools.Protocol'\r\n[02:56:05.4768616] Loaded Microsoft.WinForms.DesignTools.Client in 00:00:00.0000129 [thread 15]\r\n[02:56:05.4768616] Processed 'Microsoft.WinForms.DesignTools.Client' in 00:00:00.0000517\r\n[02:56:05.4788609] Added 'Microsoft.WinForms.DesignTools.Client'\r\n[02:56:26.4448613] [TestProj]: Preparing shadow cache folder\r\n[02:56:26.5018603] [TestProj]: Copying design tools server common files from: 'c:\\program files\\microsoft visual studio\\2022\\professional\\common7\\ide\\commonextensions\\microsoft\\windows.forms\\DesignToolsServer\\Common'\r\n[02:56:43.1938610] [TestProj]: Copying design tool server platform-specific files from: 'c:\\program files\\microsoft visual studio\\2022\\professional\\common7\\ide\\commonextensions\\microsoft\\windows.forms\\DesignToolsServer\\x64'\r\n[02:56:43.7488646] [TestProj]: Copying project output folder from: 'C:\\Users\\admin\\Test\\Core\\Goods\\Debug\\net6.0-windows'\r\n[02:58:09.7628609] [TestProj]: Copying 'C:\\Users\\admin\\Test\\TestProj\\obj\\Debug\\net6.0-windows\\TestProj.designer.deps.json' to 'DesignToolsServer.deps.json'\r\n[02:58:10.0968584] [TestProj]: Copying 'C:\\Users\\admin\\Test\\TestProj\\obj\\Debug\\net6.0-windows\\TestProj.designer.runtimeconfig.json' to 'DesignToolsServer.runtimeconfig.json'\r\n[02:59:02.5368609] [TestProj]: Launching design tools server process...\r\n[02:59:10.6518617] [TestProj]: Connected to named pipe: DesignToolsServer.8e987606-f748-4d4d-85e1-8371114185ed\r\n[02:59:10.6718605] [TestProj]: info: Design Tools Server[0]\r\n[02:59:10.6718605] [TestProj]:       Connecting to pipe: DesignToolsServer.8e987606-f748-4d4d-85e1-8371114185ed... \r\n[02:59:10.6868563] [TestProj]: info: Design Tools Server[0]\r\n[02:59:10.6868563] [TestProj]:       Successfully connected to pipe: DesignToolsServer.8e987606-f748-4d4d-85e1-8371114185ed\r\n[02:59:10.6868563] [TestProj]: info: Microsoft.DotNet.DesignTools.Server.DesignToolsServer[0]\r\n[02:59:10.6868563] [TestProj]:       Creating DesignToolsServer [thread 1]\r\n[02:59:10.6988609] [TestProj]: info: Microsoft.DotNet.DesignTools.Server.DesignToolsServer[0]\r\n[02:59:10.6988609] [TestProj]:       Performing start up tasks [thread 7]\r\n[02:59:10.7178614] [TestProj]: info: Microsoft.DotNet.DesignTools.Server.DesignToolsServer[0]\r\n[02:59:10.7178614] [TestProj]:       Starting UI thread [thread 1]\r\n[02:59:11.3908585] [TestProj]: info: Design Tools Server[0]\r\n[02:59:11.3908585] [TestProj]:       UI thread started\r\n[02:59:11.4128615] [TestProj]: info: Microsoft.DotNet.DesignTools.Server.DesignToolsServer[0]\r\n[02:59:11.4128615] [TestProj]:       Wait for start up tasks to complete... [thread 8]\r\n[02:59:11.9358620] [TestProj]: info: Microsoft.DotNet.DesignTools.Server.DesignToolsServer[0]\r\n[02:59:11.9358620] [TestProj]:       Loaded server manifest [thread 7]\r\n[02:59:11.9468571] [TestProj]: info: Microsoft.DotNet.DesignTools.Server.DesignToolsServer[0]\r\n[02:59:11.9468571] [TestProj]:       Loading design-time assemblies [thread 7]\r\n[02:59:18.6108583] [TestProj]: info: Microsoft.DotNet.DesignTools.Server.ServerProtocolContext[0]\r\n[02:59:18.6118592] [TestProj]:       Building MEF composition\r\n[02:59:20.7198643] [TestProj]: Timed out waiting for the design tools server process launch to complete.\r\n[02:59:20.7668637] Microsoft.DotNet.DesignTools.Client.ServerException: Timed out waiting for the design tools server process launch to complete.\r\n                      at Microsoft.DotNet.DesignTools.Client.Host.ServerProcess.<LaunchAsync>d__25.MoveNext()\r\n                   --- End of stack trace from previous location where exception was thrown ---\r\n                      at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n                      at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n                      at Microsoft.DotNet.DesignTools.Client.Host.ServerHostFactory.<CreateHostAsync>d__7.MoveNext()\r\n                   --- End of stack trace from previous location where exception was thrown ---\r\n                      at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n                      at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n                      at Microsoft.DotNet.DesignTools.Client.DesignToolsClientLoader.<CreateClientAsync>d__35.MoveNext()\r\n                   --- End of stack trace from previous location where exception was thrown ---\r\n                      at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n                      at Microsoft.VisualStudio.Telemetry.WindowsErrorReporting.WatsonReport.GetClrWatsonExceptionInfo(Exception exceptionObject)\r\n\r\nError seen when opening any other WinForm of different project. Then I again reloaded project and this time it opened.\r\n\r\nSo the behavior is not consistent.","Url":"https://github.com/dotnet/winforms/issues/6705","RelatedDescription":"Open issue \"WinForms Designer not loading  \" (#6705)"},{"Id":"1140944782","IsPullRequest":false,"CreatedAt":"2022-02-17T06:54:35","Actor":"Amy-Li03","Number":"6704","RawContent":null,"Title":"Exception when clicking on the value of PropertyGrid's property under JAWS tool ","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n.NET SDK 7.0.100-preview.2.22103\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n* More info: \r\n1. This issue reproduces on .NET 5.0 & .NET 6.0 & .NET 7.0 \r\n2. This issue doesn't repro on .NET Core 3.1 \r\n3. VS with other tool(e.g. Narrator) doesn't repro this issue \r\n\r\n**Steps to reproduce:**\r\n[TestApp.zip](https://github.com/dotnet/winforms/files/8086107/TestApp.zip)\r\n\r\n1. Create a .NET Core WinForms projects with any control added(E.g. Checkbox) \r\n2. Set the SelelctedObject property of propertyGrid to the checkBox control \r\n3. Run this project \r\n4. Launch the **JAWS** tool \r\n5. Clicking using mouse or press \"Tab\" keyboard on the value of propertyGrid's property \r\n![Actual](https://user-images.githubusercontent.com/62929087/154419615-f42458cc-c068-4610-94a3-61cfb5235bf8.gif)\r\n\r\n**Expected behavior:**\r\nNo exception was throwing.\r\n\r\n**Actual behavior:**\r\nThere is an exception was throwing \r\n![image](https://user-images.githubusercontent.com/62929087/154417935-4640850f-1776-4c47-9354-05da7615e447.png)\r\n\r\n**Call Stack:**\r\nSystem.ExecutionEngineException\r\n  HResult=0x80131506\r\n  Source= Cannot evaluate the exception source\r\n  StackTrace: Cannot evaluate the exception stack trace","Url":"https://github.com/dotnet/winforms/issues/6704","RelatedDescription":"Open issue \"Exception when clicking on the value of PropertyGrid's property under JAWS tool \" (#6704)"},{"Id":"1140931043","IsPullRequest":false,"CreatedAt":"2022-02-17T06:32:01","Actor":"greengumby","Number":"6703","RawContent":null,"Title":"winforms .net 6.0.2 SetHighDpiMode","State":"open","Body":".net 6.0.2 desktop sdk \r\n\r\nI am trying to understand how the following line impacts the scaling of controls.\r\n\r\nApplication.SetHighDpiMode(HighDpiMode.SystemAware);\r\n\r\nSpecifically a statusStrip with an embedded progress bar. (Splash Screen)\r\n\r\nIf I run the application without the SetHighDpiMode the progress bar is the correct height however with the SetHighDpiMode enabled the height seems to be around 300% larger vertically.  Horizontally there is no change to the design view.\r\n\r\nIn addition I have copied the form and startup code into a new project with no other dependencies and no vertical scaling is occurring.\r\n\r\nSo my question is where should I be looking to figure out what is influencing this control's height.  Other controls are impacted by this but as this is the first screen aka splash screen I thought it a simple form to start with.\r\n\r\nEdit:\r\n\r\nFound a setting under Display Settings -> Advanced Scaling Options -> Fix scaling for apps.\r\n\r\nToggling this setting off and then on seemed to fix the problem for the progress bar but the icons all still look very small. I'm guessing its supposed to scale the icon size but something is preventing this?\r\n\r\n\r\nThanks for any assistance you can provide.\r\n\r\n \r\n","Url":"https://github.com/dotnet/winforms/issues/6703","RelatedDescription":"Open issue \"winforms .net 6.0.2 SetHighDpiMode\" (#6703)"},{"Id":"1139768154","IsPullRequest":false,"CreatedAt":"2022-02-17T03:52:29","Actor":"Junjun-zhao","Number":"6700","RawContent":null,"Title":"[dotnet-sdk-7.0.100-preview.2.22114.1] DbTool get exception after launch and app crashs","State":"closed","Body":"**Application Name**: DbTool\r\n**OS**: Windows 10 RS5\r\n**CPU**: X64\r\n**.NET Build Number**: dotnet-sdk-7.0.100-preview.2.22114.1\r\n\r\n**Verify Scenarios:**\r\n1). Windows10 RS5 x64+dotnet-sdk-7.0.100-preview.2.22114.1: Fail\r\n2). Windows10 RS5 x64+dotnet-sdk-7.0.100-preview.1.22110.4: Pass\r\n3). Windows10 RS5 x64+dotnet-sdk-5.0.405-win-x64 (Default SDK): Pass\r\n\r\n**Github link for source code:**\r\nhttps://github.com/WeihanLi/DbTool\r\n\r\n**App Source and App Check at :** https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1483884\r\n\r\n\r\n**Findings**:\r\nWhen we create FolderBrowserDialog object, this issue only repro if we init Description property.\r\n\r\n   Description = \"this is test\", //if you remove this line, issue not repro\r\n\r\n**Minimal Repro steps:**\r\ndotnet-sdk-7.0.100-preview.2.22114.1 sdk should be installed on the machine. \r\nSample code attached. \r\n[WinFormsApp1 (1).zip](https://github.com/dotnet/winforms/files/8078546/WinFormsApp1.1.zip)\r\n\r\n1) Create .net7 Winform app\r\n2) Add FolderBrowserDialog and Button Component to form\r\n3) In Button click event, write this :\r\n```\r\n  private void button1_Click(object sender, EventArgs e)\r\n        {\r\n            var dialog = new System.Windows.Forms.FolderBrowserDialog\r\n            {\r\n                Description = \"this is test\", //if you remove this line, issue not repro\r\n                ShowNewFolderButton = true\r\n            };\r\n            if (dialog.ShowDialog() == System.Windows.Forms.DialogResult.OK) //error here\r\n            {\r\n\r\n            }\r\n        }\r\n```\r\n\r\n**Expected Result**: \r\nDialog will be closed.\r\n\r\n**Actual Result**:\r\nGet below exception:\r\n```\r\nSystem.InvalidCastException\r\n  HResult=0x80004002\r\n  Message=Unable to cast object of type 'FileOpenDialogWrapper' to type 'IFileDialogCustomize'.\r\n  Source=System.Private.CoreLib\r\n  StackTrace:\r\n   at System.Runtime.CompilerServices.CastHelpers.ChkCast_Helper(Void* toTypeHnd, Object obj)\r\n   at System.Windows.Forms.FolderBrowserDialog.SetDialogProperties(IFileDialog dialog)\r\n   at System.Windows.Forms.FolderBrowserDialog.TryRunDialogVista(IntPtr owner, Boolean& returnValue)\r\n   at System.Windows.Forms.FolderBrowserDialog.RunDialog(IntPtr hWndOwner)\r\n   at System.Windows.Forms.CommonDialog.ShowDialog(IWin32Window owner)\r\n   at WinFormsApp1.Form1.button1_Click(Object sender, EventArgs e) in C:\\Users\\v-altunc\\source\\repos\\WpfApp2\\WinFormsApp1\\Form1.cs:line 17\r\n   at System.Windows.Forms.Button.OnMouseUp(MouseEventArgs mevent)\r\n   at System.Windows.Forms.Control.WmMouseUp(Message& m, MouseButtons button, Int32 clicks)\r\n   at System.Windows.Forms.Control.WndProc(Message& m)\r\n   at System.Windows.Forms.ButtonBase.WndProc(Message& m)\r\n   at System.Windows.Forms.Control.ControlNativeWindow.WndProc(Message& m)\r\n   at System.Windows.Forms.NativeWindow.Callback(IntPtr hWnd, WM msg, IntPtr wparam, IntPtr lparam)\r\n   at Interop.User32.DispatchMessageW(MSG& msg)\r\n   at System.Windows.Forms.Application.ComponentManager.Interop.Mso.IMsoComponentManager.FPushMessageLoop(UIntPtr dwComponentID, msoloop uReason, Void* pvLoopData)\r\n   at System.Windows.Forms.Application.ThreadContext.RunMessageLoopInner(msoloop reason, ApplicationContext context)\r\n   at System.Windows.Forms.Application.ThreadContext.RunMessageLoop(msoloop reason, ApplicationContext context)\r\n   at WinFormsApp1.Program.Main() in C:\\Users\\v-altunc\\source\\repos\\WpfApp2\\WinFormsApp1\\Program.cs:line 14\r\n\r\n  This exception was originally thrown at this call stack:\r\n    System.Windows.Forms.FolderBrowserDialog.SetDialogProperties(Interop.Shell32.IFileDialog)\r\n    System.Windows.Forms.FolderBrowserDialog.TryRunDialogVista(System.IntPtr, out bool)\r\n    System.Windows.Forms.FolderBrowserDialog.RunDialog(System.IntPtr)\r\n    System.Windows.Forms.CommonDialog.ShowDialog(System.Windows.Forms.IWin32Window)\r\n    WinFormsApp1.Form1.button1_Click(object, System.EventArgs) in Form1.cs\r\n    System.Windows.Forms.Button.OnMouseUp(System.Windows.Forms.MouseEventArgs)\r\n    System.Windows.Forms.Control.WmMouseUp(ref System.Windows.Forms.Message, System.Windows.Forms.MouseButtons, int)\r\n    System.Windows.Forms.Control.WndProc(ref System.Windows.Forms.Message)\r\n    System.Windows.Forms.ButtonBase.WndProc(ref System.Windows.Forms.Message)\r\n    System.Windows.Forms.Control.ControlNativeWindow.WndProc(ref System.Windows.Forms.Message)\r\n    ...\r\n    [Call Stack Truncated]\r\n```\r\n**Repro steps for affected app:**\r\n**This is .Net 5.0 app, but we are running it on 7.0, machine only have 7.0 installed, and DOTNET_ROLL_FORWARD_ON_NO_CANDIDATE_FX=2, so it runs on 7.0**\r\n1.Launch DbTool.exe.\r\n3.Input connection string: Server=(localdb)\\MSSQLLocalDB;Database=master.\r\n4.Select “SqlServer” item.\r\n5.Click Connect button.\r\n6.Check the item MSreplicationoptions.\r\n7.Click “导出C# Code” button.\r\n\r\n**Expected Result:**\r\nExport successful.\r\n\r\n**Actual Result:**\r\nIt shows error and crash.\r\n```\r\nApplication: DbTool.exe\r\nCoreCLR Version: 7.0.22.10302\r\n.NET Version: 7.0.0-preview.2.22103.2\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: System.InvalidCastException: Unable to cast object of type 'FileOpenDialogWrapper' to type 'IFileDialogCustomize'.\r\nat System.Windows.Forms.FolderBrowserDialog.SetDialogProperties(IFileDialog dialog)\r\nat System.Windows.Forms.FolderBrowserDialog.TryRunDialogVista(IntPtr owner, Boolean& returnValue)\r\nat System.Windows.Forms.FolderBrowserDialog.RunDialog(IntPtr hWndOwner)\r\nat System.Windows.Forms.CommonDialog.ShowDialog(IWin32Window owner)\r\nat DbTool.MainWindow.ChooseFolder() in C:\\sourcr\\DbTool\\src\\DbTool\\MainWindow.xaml.cs:line 395\r\nat DbTool.MainWindow.ExportModel_Click(Object sender, RoutedEventArgs e) in C:\\sourcr\\DbTool\\src\\DbTool\\MainWindow.xaml.cs:line 145\r\nat System.Windows.EventRoute.InvokeHandlersImpl(Object source, RoutedEventArgs args, Boolean reRaised)\r\nat System.Windows.UIElement.RaiseEventImpl(DependencyObject sender, RoutedEventArgs args)\r\nat System.Windows.Controls.Primitives.ButtonBase.OnClick()\r\nat System.Windows.Controls.Button.OnClick()\r\nat System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(MouseButtonEventArgs e)\r\nat System.Windows.RoutedEventArgs.InvokeHandler(Delegate handler, Object target)\r\nat System.Windows.EventRoute.InvokeHandlersImpl(Object source, RoutedEventArgs args, Boolean reRaised)\r\nat System.Windows.UIElement.ReRaiseEventAs(DependencyObject sender, RoutedEventArgs args, RoutedEvent newEvent)\r\nat System.Windows.RoutedEventArgs.InvokeHandler(Delegate handler, Object target)\r\nat System.Windows.EventRoute.InvokeHandlersImpl(Object source, RoutedEventArgs args, Boolean reRaised)\r\nat System.Windows.UIElement.RaiseEventImpl(DependencyObject sender, RoutedEventArgs args)\r\nat System.Windows.UIElement.RaiseTrustedEvent(RoutedEventArgs args)\r\nat System.Windows.Input.InputManager.ProcessStagingArea()\r\nat System.Windows.Input.InputProviderSite.ReportInput(InputReport inputReport)\r\nat System.Windows.Interop.HwndMouseInputProvider.ReportInput(IntPtr hwnd, InputMode mode, Int32 timestamp, RawMouseActions actions, Int32 x, Int32 y, Int32 wheel)\r\nat System.Windows.Interop.HwndMouseInputProvider.FilterMessage(IntPtr hwnd, WindowMessage msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\nat System.Windows.Interop.HwndSource.InputFilterMessage(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\nat MS.Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)\r\nat MS.Win32.HwndSubclass.DispatcherCallbackOperation(Object o)\r\nat System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)\r\nat System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)\r\nat System.Windows.Threading.Dispatcher.LegacyInvokeImpl(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object args, Int32 numArgs)\r\nat MS.Win32.HwndSubclass.SubclassWndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam)\r\nat MS.Win32.UnsafeNativeMethods.DispatchMessage(MSG& msg)\r\nat System.Windows.Threading.Dispatcher.PushFrameImpl(DispatcherFrame frame)\r\nat System.Windows.Application.RunDispatcher(Object ignore)\r\nat System.Windows.Application.RunInternal(Window window)\r\nat DbTool.App.Main() in C:\\sourcr\\DbTool\\src\\DbTool\\obj\\Debug\\net5.0-windows\\App.g.cs:line 51\r\n\r\n```\r\n@dotnet-actwx-bot @dotnet/compat\r\n","Url":"https://github.com/dotnet/winforms/issues/6700","RelatedDescription":"Closed issue \"[dotnet-sdk-7.0.100-preview.2.22114.1] DbTool get exception after launch and app crashs\" (#6700)"},{"Id":"1140807295","IsPullRequest":false,"CreatedAt":"2022-02-17T02:40:42","Actor":"VinoWang01","Number":"6702","RawContent":null,"Title":"[Win11][.NETCore3.1]The project stops working when running Narrator and clicking the dropdown button several times on the propertyGrid control in runtime","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n**.NET Core Version:**\r\n\r\n- .NET Core 3.1.22\r\n\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n**Have you experienced this same bug with .NET Framework?:**\r\n\r\n- No\r\n\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\nThe application has stopped working when running Narrator and clicking the dropdown button several times on the propertyGrid control in runtime.\r\n![3 1_Win11_PropertyGrid_Crash](https://user-images.githubusercontent.com/90816462/154393478-2894e47f-9b8f-4924-92aa-9cbf97682d58.gif)\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n![StopWorking](https://user-images.githubusercontent.com/90816462/154393703-d7bcc83a-619f-4c07-88b3-a83cabdc0ee8.png)\r\n\r\n\r\n**Expected behavior:**\r\nProject and Narrator both work well.\r\n<!--\r\n    Provide details on expected behavior with screenshots/GIF, where ever possible.\r\n -->\r\n\r\n**Minimal repro:**\r\n1. Create a .NET Core 3.1 Winforms project with ProeprtyGrid control added. \r\n2. Set the SelectedObject property to Form1. \r\n3. Build and run the project. \r\n4. Launch Narrator, then click the drop down button in the PropertyGrid control. \r\nor run the attached project and execute Step4.[3.1CoreApp.zip](https://github.com/dotnet/winforms/files/8085114/3.1CoreApp.zip)\r\n\r\n<!--\r\n    Provide step by step guide to repro this issue.  Incase repro steps are complex, It would be helpful if \r\n    you attach a GIF with repro actions. Attaching a sample app to repro the issue will help speed up the \r\n    resolution. \r\n -->\r\n**More Info:**\r\n1. This issue can't reproduce on win10. \r\n2. This issue can't reproduce with .net5.0, .net6.0, .net7.0. ","Url":"https://github.com/dotnet/winforms/issues/6702","RelatedDescription":"Open issue \"[Win11][.NETCore3.1]The project stops working when running Narrator and clicking the dropdown button several times on the propertyGrid control in runtime\" (#6702)"},{"Id":"1140001916","IsPullRequest":true,"CreatedAt":"2022-02-16T18:11:25","Actor":"dotnet-maestro[bot]","Number":"6701","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20220215.15\r\n- **Date Produced**: February 16, 2022 10:44:27 AM UTC\r\n- **Commit**: 32434f9007428d7d806df6afce80c36a308c2fa0\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22115.15][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22115.15][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22115.15][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22115.15][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22115.15][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22115.15][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22115.15][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22115.15][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22115.15][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22115.15][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22115.15][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22115.15][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22115.15][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22115.15][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22115.15][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22115.15][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22115.15][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22115.15][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22115.15][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22115.15][1]\r\n  - **System.CodeDom**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22115.15][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22115.15][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22115.15][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22115.15][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22115.15][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22115.15][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22115.15][1]\r\n  - **System.Text.Json**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22115.15][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22115.15][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.2.22114.13 to 7.0.0-preview.2.22115.15][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/14e6411...32434f9\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6701)","Url":"https://github.com/dotnet/winforms/pull/6701","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6701)"},{"Id":"1139691075","IsPullRequest":false,"CreatedAt":"2022-02-16T08:31:19","Actor":"VinoWang01","Number":"6699","RawContent":null,"Title":"The ListView's GroupCollapsedStateChanged events no longer fire even if the CollapsedState is actually changed ","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n.NET Core Version: \r\n\r\n- .NET Core SDK: 7.0.100-PREVIEW.2.22115.2\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\nHave you experienced this same bug with .NET Framework?: \r\n\r\n- No. `ListViewGroup.CollapsedState` was implemented in .NET Core 5.0 (https://github.com/dotnet/winforms/pull/3155) and from (https://github.com/dotnet/winforms/issues/5960)\r\n\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\nThe `expand/collapse` state is changed correctly, but the `GroupCollapsedStateChanged` events no longer fire.\r\n![NoFireEvent_Keyboard](https://user-images.githubusercontent.com/90816462/154224888-d0ac9441-0513-4d88-b553-00ea5bee94b6.gif)\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n\r\n**Expected behavior:**\r\nThe `expand/collapse` state should be changed correctly and the `GroupCollapsedStateChanged` events should be fired.\r\n![NoFireEvent_Mouse](https://user-images.githubusercontent.com/90816462/154224933-cb42374a-7b82-4d11-b489-b6d8f01ab083.gif)\r\n\r\n<!--\r\n    Provide details on expected behavior with screenshots/GIF, where ever possible.\r\n -->\r\n\r\n**Minimal repro:**\r\n\r\n1. Run the Test app. [ListViewGroupState.zip](https://github.com/dotnet/winforms/files/8078074/ListViewGroupState.zip)\r\n2. Collapse the second ListViewGoup -- 'Expanded ListViewGroup'. \r\n3. Focus on the third `ListViewGroup group header` using keyboard -- 'Collapsed ListViewGroup'. \r\n4. Press left and right key arrows to see the behavior. \r\n\r\n<!--\r\n    Provide step by step guide to repro this issue.  Incase repro steps are complex, It would be helpful if \r\n    you attach a GIF with repro actions. Attaching a sample app to repro the issue will help speed up the \r\n    resolution. \r\n -->\r\n**More Info:**\r\nThis issue can't reproduce when the second ListViewGoup -- 'Expanded ListViewGroup' is keeping Expanded. ","Url":"https://github.com/dotnet/winforms/issues/6699","RelatedDescription":"Open issue \"The ListView's GroupCollapsedStateChanged events no longer fire even if the CollapsedState is actually changed \" (#6699)"},{"Id":"1139338981","IsPullRequest":true,"CreatedAt":"2022-02-16T00:53:17","Actor":"dreddy-work","Number":"6698","RawContent":null,"Title":"branding for 7.0 preview 3","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6698)","Url":"https://github.com/dotnet/winforms/pull/6698","RelatedDescription":"Closed or merged PR \"branding for 7.0 preview 3\" (#6698)"},{"Id":"1139334732","IsPullRequest":true,"CreatedAt":"2022-02-15T23:57:33","Actor":"dreddy-work","Number":"6697","RawContent":null,"Title":"7.0 preview 2 publishing APIs","State":"closed","Body":"none.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6697)","Url":"https://github.com/dotnet/winforms/pull/6697","RelatedDescription":"Closed or merged PR \"7.0 preview 2 publishing APIs\" (#6697)"},{"Id":"1138672507","IsPullRequest":true,"CreatedAt":"2022-02-15T18:01:07","Actor":"dotnet-maestro[bot]","Number":"6694","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20220214.7\r\n- **Date Produced**: February 14, 2022 6:39:03 PM UTC\r\n- **Commit**: 6d977266bcc193caedb60a27ae44d14d9a11a040\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.22111.10 to 7.0.0-beta.22114.7][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22111.10 to 7.0.0-beta.22114.7][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.22111.10 to 7.0.0-beta.22114.7][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.22111.10 to 7.0.0-beta.22114.7][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.22111.10 to 7.0.0-beta.22114.7][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22111.10 to 7.0.0-beta.22114.7][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/ff6cc4e...6d97726\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6694)","Url":"https://github.com/dotnet/winforms/pull/6694","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6694)"},{"Id":"1138673626","IsPullRequest":true,"CreatedAt":"2022-02-15T13:45:45","Actor":"dotnet-maestro[bot]","Number":"6695","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20220214.13\r\n- **Date Produced**: February 15, 2022 7:29:18 AM UTC\r\n- **Commit**: 14e64115c99bbad6f22a8e8331052c89e7006a89\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][1]\r\n  - **System.CodeDom**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][1]\r\n  - **System.Text.Json**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.2.22113.2 to 7.0.0-preview.2.22114.13][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/6e05d78...14e6411\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6695)","Url":"https://github.com/dotnet/winforms/pull/6695","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6695)"},{"Id":"1138225228","IsPullRequest":false,"CreatedAt":"2022-02-15T06:26:10","Actor":"SimonCropp","Number":"6693","RawContent":null,"Title":"Did the System.Windows.Forms assembly version intentionally change in 6.0.2?","State":"closed","Body":"i updated my CI server to sdk 6.0.102 not when i try to run the output i get\r\n\r\n```\r\nUnhandled exception. System.IO.FileLoadException: Could not load file or assembly 'System.Windows.Forms, Version=6.0.2.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'. The located assembly's manifest definition does not match the assembly reference. (0x80131040)\r\nFile name: 'System.Windows.Forms, Version=6.0.2.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'\r\n   at Program.Main()\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)\r\n   at Program.Main()\r\n   at Program.<Main>()\r\n```","Url":"https://github.com/dotnet/winforms/issues/6693","RelatedDescription":"Closed issue \"Did the System.Windows.Forms assembly version intentionally change in 6.0.2?\" (#6693)"},{"Id":"1138093918","IsPullRequest":true,"CreatedAt":"2022-02-15T02:28:07","Actor":"kant2002","Number":"6692","RawContent":null,"Title":"Explicitly use ComWrappers for file dialogs","State":"open","Body":"Do not use COM interfaces for file dialogs at all except IFileDialogEvents\r\nRight now each CoClass created using CoCreateInstance represented as unique RCW\r\nThat RCW still uses interfaces, but all important methods are implicitly declares\r\nNo explicit interface method of IFileDialog, IOpenFileDialog and ISaveFileDialog\r\nare used.\r\nIShellItem and IShellItemArray still used, but that usage comes from IXXXFileDialog\r\ninterfaces. If I remove them, I can be explicit about wrappers.\r\n\r\nAfter this point, there two options\r\n- Leave interfaces as is, wasteful RCW, good for documentation\r\n- Remove interfaces, simplify RCW even more. Keeping track of method table would be problematic.\r\n\r\nRelated to #5163\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6692)","Url":"https://github.com/dotnet/winforms/pull/6692","RelatedDescription":"Open PR \"Explicitly use ComWrappers for file dialogs\" (#6692)"},{"Id":"1137279251","IsPullRequest":true,"CreatedAt":"2022-02-14T13:43:54","Actor":"dotnet-maestro[bot]","Number":"6691","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20220213.2\r\n- **Date Produced**: February 13, 2022 7:28:25 PM UTC\r\n- **Commit**: 6e05d78deba320a54ef10a265c6025bbb686efe6\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-preview.2.22112.5 to 7.0.0-preview.2.22113.2][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-preview.2.22112.5 to 7.0.0-preview.2.22113.2][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-preview.2.22112.5 to 7.0.0-preview.2.22113.2][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.2.22112.5 to 7.0.0-preview.2.22113.2][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-preview.2.22112.5 to 7.0.0-preview.2.22113.2][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.2.22112.5 to 7.0.0-preview.2.22113.2][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.2.22112.5 to 7.0.0-preview.2.22113.2][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-preview.2.22112.5 to 7.0.0-preview.2.22113.2][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.2.22112.5 to 7.0.0-preview.2.22113.2][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.2.22112.5 to 7.0.0-preview.2.22113.2][1]\r\n  - **System.CodeDom**: [from 7.0.0-preview.2.22112.5 to 7.0.0-preview.2.22113.2][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.2.22112.5 to 7.0.0-preview.2.22113.2][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.2.22112.5 to 7.0.0-preview.2.22113.2][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.2.22112.5 to 7.0.0-preview.2.22113.2][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-preview.2.22112.5 to 7.0.0-preview.2.22113.2][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.2.22112.5 to 7.0.0-preview.2.22113.2][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.2.22112.5 to 7.0.0-preview.2.22113.2][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.2.22112.5 to 7.0.0-preview.2.22113.2][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.2.22112.5 to 7.0.0-preview.2.22113.2][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-preview.2.22112.5 to 7.0.0-preview.2.22113.2][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-preview.2.22112.5 to 7.0.0-preview.2.22113.2][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.2.22112.5 to 7.0.0-preview.2.22113.2][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.2.22112.5 to 7.0.0-preview.2.22113.2][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-preview.2.22112.5 to 7.0.0-preview.2.22113.2][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.2.22112.5 to 7.0.0-preview.2.22113.2][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.2.22112.5 to 7.0.0-preview.2.22113.2][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-preview.2.22112.5 to 7.0.0-preview.2.22113.2][1]\r\n  - **System.Text.Json**: [from 7.0.0-preview.2.22112.5 to 7.0.0-preview.2.22113.2][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-preview.2.22112.5 to 7.0.0-preview.2.22113.2][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.2.22112.5 to 7.0.0-preview.2.22113.2][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/78c6505...6e05d78\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6691)","Url":"https://github.com/dotnet/winforms/pull/6691","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6691)"},{"Id":"1137121804","IsPullRequest":false,"CreatedAt":"2022-02-14T10:53:43","Actor":"vladimir-krestov","Number":"6690","RawContent":null,"Title":"Some flaky tests fail CI build and block fixes deployment","State":"open","Body":"This is a global issue for tracking flaky tests for different controls, that need to be skipped.\r\n\r\n* .NET Core Version: 7.0\r\n\r\n**Problem description:**\r\nSome tests fail sometimes and block successful fixes deployment:\r\n- [ ] #6597\r\n- [ ] #6609\r\n- [ ] #6610\r\n- [ ] #6635\r\n- [ ] #6654\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n\r\n**Expected behavior:**\r\n- All successful PRs pass CI build correctly\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6690","RelatedDescription":"Open issue \"Some flaky tests fail CI build and block fixes deployment\" (#6690)"},{"Id":"1135982157","IsPullRequest":true,"CreatedAt":"2022-02-14T01:23:45","Actor":"gpetrou","Number":"6687","RawContent":null,"Title":"Enable nullability in GroupBox","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in GroupBox.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6687)","Url":"https://github.com/dotnet/winforms/pull/6687","RelatedDescription":"Closed or merged PR \"Enable nullability in GroupBox\" (#6687)"},{"Id":"1136011471","IsPullRequest":true,"CreatedAt":"2022-02-14T01:23:15","Actor":"gpetrou","Number":"6688","RawContent":null,"Title":"Enable nullability in Label","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in Label.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6688)","Url":"https://github.com/dotnet/winforms/pull/6688","RelatedDescription":"Closed or merged PR \"Enable nullability in Label\" (#6688)"},{"Id":"1136331377","IsPullRequest":false,"CreatedAt":"2022-02-13T19:27:38","Actor":"jbhensley","Number":"6689","RawContent":null,"Title":"ComboBox internal state not consistent when inserting at SelectedIndex and IsHandleCreated == false","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: 6.0.101\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**Problem description:**\r\n\r\nAdd items to the `ComboBox` and select one:\r\n\r\n``` C#\r\ncomboBox1.Items.Add(\"Item 1\");\r\ncomboBox1.Items.Add(\"Item 2\");\r\ncomboBox1.Items.Add(\"Item 3\");\r\n\r\ncomboBox1.SelectedIndex = 1;\r\n```\r\n\r\nNow insert at the selected index: `comboBox1.Items.Insert(1, \"Test\");`\r\n\r\nIf the handle has been created:\r\n\r\n- Item will be inserted into collection\r\n- `SelectedIndex` will increment\r\n- `SelectedItem` and `Text` remain consistent\r\n\r\nIf the handle has not been created:\r\n\r\n- Item will be inserted into collection\r\n- `SelectedIndex` will remain the same\r\n- `SelectedItem` will be the newly inserted item\r\n- `Text` will match the old `SelectedItem`\r\n\r\nIssue discovered while adding events to `Items` collection (#6673)\r\n\r\n**Expected behavior:**\r\n\r\n- Internal state of control should remain consistent\r\n- Behavior when handle has not yet been created should match that of when it has been\r\n\r\n**Minimal repro:**\r\n\r\n- Create new WinForms project\r\n- Add the following to `Main` just after `ApplicationConfiguration.Initialize();`\r\n\r\n``` C#\r\nvar comboBox = new ComboBox();\r\n\r\ncomboBox.Items.Add(\"Item 1\");\r\ncomboBox.Items.Add(\"Item 2\");\r\ncomboBox.Items.Add(\"Item 3\");\r\ncomboBox.SelectedIndex = 1;\r\n\r\ncomboBox.Items.Insert(1, \"Test\");\r\n```\r\n\r\n- Set a breakpoint on `comboBox.Items.Insert(1, \"Test\");`\r\n- Observe the values of `SelectedIndex`, `SelectedItem` and `Text` before and after that line executes","Url":"https://github.com/dotnet/winforms/issues/6689","RelatedDescription":"Open issue \"ComboBox internal state not consistent when inserting at SelectedIndex and IsHandleCreated == false\" (#6689)"},{"Id":"1132577053","IsPullRequest":true,"CreatedAt":"2022-02-13T16:42:12","Actor":"dotnet-maestro[bot]","Number":"6683","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20220212.5\r\n- **Date Produced**: February 13, 2022 2:40:20 AM UTC\r\n- **Commit**: 78c6505cffe2558b036fbe44cd27038affbb6cce\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-preview.2.22109.10 to 7.0.0-preview.2.22112.5][3]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-preview.2.22109.10 to 7.0.0-preview.2.22112.5][3]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-preview.2.22109.10 to 7.0.0-preview.2.22112.5][3]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.2.22109.10 to 7.0.0-preview.2.22112.5][3]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-preview.2.22109.10 to 7.0.0-preview.2.22112.5][3]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.2.22109.10 to 7.0.0-preview.2.22112.5][3]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.2.22109.10 to 7.0.0-preview.2.22112.5][3]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-preview.2.22109.10 to 7.0.0-preview.2.22112.5][3]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.2.22109.10 to 7.0.0-preview.2.22112.5][3]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.2.22109.10 to 7.0.0-preview.2.22112.5][3]\r\n  - **System.CodeDom**: [from 7.0.0-preview.2.22109.10 to 7.0.0-preview.2.22112.5][3]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.2.22109.10 to 7.0.0-preview.2.22112.5][3]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.2.22109.10 to 7.0.0-preview.2.22112.5][3]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.2.22109.10 to 7.0.0-preview.2.22112.5][3]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-preview.2.22109.10 to 7.0.0-preview.2.22112.5][3]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.2.22109.10 to 7.0.0-preview.2.22112.5][3]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.2.22109.10 to 7.0.0-preview.2.22112.5][3]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.2.22109.10 to 7.0.0-preview.2.22112.5][3]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.2.22109.10 to 7.0.0-preview.2.22112.5][3]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-preview.2.22109.10 to 7.0.0-preview.2.22112.5][3]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-preview.2.22109.10 to 7.0.0-preview.2.22112.5][3]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.2.22109.10 to 7.0.0-preview.2.22112.5][3]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.2.22109.10 to 7.0.0-preview.2.22112.5][3]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-preview.2.22109.10 to 7.0.0-preview.2.22112.5][3]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.2.22109.10 to 7.0.0-preview.2.22112.5][3]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.2.22109.10 to 7.0.0-preview.2.22112.5][3]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-preview.2.22109.10 to 7.0.0-preview.2.22112.5][3]\r\n  - **System.Text.Json**: [from 7.0.0-preview.2.22109.10 to 7.0.0-preview.2.22112.5][3]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-preview.2.22109.10 to 7.0.0-preview.2.22112.5][3]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.2.22109.10 to 7.0.0-preview.2.22112.5][3]\r\n\r\n[3]: https://github.com/dotnet/runtime/compare/2b862d4...78c6505\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6683)\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/6683","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6683)"},{"Id":"1134035291","IsPullRequest":true,"CreatedAt":"2022-02-12T13:38:59","Actor":"dotnet-maestro[bot]","Number":"6686","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20220211.10\r\n- **Date Produced**: February 12, 2022 2:40:37 AM UTC\r\n- **Commit**: ff6cc4e9c3eef575f62a33a642ca80e79d27c9bb\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.22110.7 to 7.0.0-beta.22111.10][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22110.7 to 7.0.0-beta.22111.10][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.22110.7 to 7.0.0-beta.22111.10][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.22110.7 to 7.0.0-beta.22111.10][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.22110.7 to 7.0.0-beta.22111.10][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22110.7 to 7.0.0-beta.22111.10][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/78eaf78...ff6cc4e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6686)","Url":"https://github.com/dotnet/winforms/pull/6686","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6686)"},{"Id":"1133650671","IsPullRequest":true,"CreatedAt":"2022-02-12T06:45:57","Actor":"kant2002","Number":"6685","RawContent":null,"Title":"Autocomplete using ComWrappers","State":"open","Body":"Provide RCW for\r\n- [x] IAutoComplete2\r\n\r\nProvides CCW\r\n- [x] IEnumString\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6685)","Url":"https://github.com/dotnet/winforms/pull/6685","RelatedDescription":"Open PR \"Autocomplete using ComWrappers\" (#6685)"},{"Id":"1133649759","IsPullRequest":true,"CreatedAt":"2022-02-12T06:44:04","Actor":"kant2002","Number":"6684","RawContent":null,"Title":"Option to not use WebRequest for PictureBox","State":"open","Body":"Indirectly related to #1756 because if that would work, I would be able to fix #1756 using the same approach.\r\nWebRequest bring ton of code to WinForms which is old, and not really interesting. NativeAOT suffer from this.\r\n\r\nInspired by https://github.com/dotnet/runtime/pull/38397\r\n\r\nBy itself if applying `<RuntimeHostConfigurationOption Include=\"System.Windows.Forms.PictureBox.UseWebRequest\" Value=\"false\" Trim=\"true\" />` it will shave 1Mb from 20Mb  of my sample application which compiled under NativeAOT. I include all controls in that application.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6684)","Url":"https://github.com/dotnet/winforms/pull/6684","RelatedDescription":"Open PR \"Option to not use WebRequest for PictureBox\" (#6684)"},{"Id":"1132576182","IsPullRequest":true,"CreatedAt":"2022-02-11T13:39:18","Actor":"dotnet-maestro[bot]","Number":"6682","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20220210.7\r\n- **Date Produced**: February 11, 2022 12:51:41 AM UTC\r\n- **Commit**: 78eaf78761027d225030be2b28aaf4e8bf392929\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.22109.1 to 7.0.0-beta.22110.7][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22109.1 to 7.0.0-beta.22110.7][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.22109.1 to 7.0.0-beta.22110.7][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.22109.1 to 7.0.0-beta.22110.7][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.22109.1 to 7.0.0-beta.22110.7][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22109.1 to 7.0.0-beta.22110.7][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/00b6cce...78eaf78\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6682)","Url":"https://github.com/dotnet/winforms/pull/6682","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6682)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-02-18T03:30:33.0921291Z","RunDurationInMilliseconds":548}