{"Data":{"GitHub":{"Issues":[{"Id":"2068260883","IsPullRequest":true,"CreatedAt":"2024-01-06T00:49:30","Actor":"JeremyKuhne","Number":"10599","RawContent":null,"Title":"Remove Control ActiveX TraceSwitch","State":"open","Body":"A significant amount of the code in some areas was just trace statements. We've removed them in other places as we have had trace breakpoints for nearly 20 years. The code is significantly easier to navigate without these.\r\n\r\nIn this particular case there also was an AV in debug for our NativeHost sample.\r\n\r\nAlso some minor cleanup, including a change to just return E_NOTIMPL from ActiveXImpl.DoVerb instead of throwing it.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10599)","Url":"https://github.com/dotnet/winforms/pull/10599","RelatedDescription":"Open PR \"Remove Control ActiveX TraceSwitch\" (#10599)"},{"Id":"2068223857","IsPullRequest":true,"CreatedAt":"2024-01-06T00:09:18","Actor":"JeremyKuhne","Number":"10598","RawContent":null,"Title":"Convert the rest of System.Drawing printing to CsWin32","State":"open","Body":"This moves the rest of System.Drawing.Printing to CsWin32.\r\n\r\n- Move now-shared API to Core assembly\r\n- Update calls to PInvokeCore for said calls\r\n- Add HdcHandle for HDCs that we have to keep in fields\r\n- Move printing DeviceContext usages to scopes\r\n- Use new printer dialog to get default printer names\r\n- Remove ScreenDC and use scope\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10598)","Url":"https://github.com/dotnet/winforms/pull/10598","RelatedDescription":"Open PR \"Convert the rest of System.Drawing printing to CsWin32\" (#10598)"},{"Id":"2066397279","IsPullRequest":true,"CreatedAt":"2024-01-05T23:04:42","Actor":"halgab","Number":"10585","RawContent":null,"Title":"Fix calls to Component in ComponentDesigner.Dispose overrides","State":"closed","Body":"In #9408, we forced the `ComponentDesigner.Component` property to be non-null. We noticed this had implications in the method `ControlDesigner.Dispose`. This PR addresses all other such cases that were broken by this PR but 2 instances that will be addressed in followup PRs.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10585)","Url":"https://github.com/dotnet/winforms/pull/10585","RelatedDescription":"Closed or merged PR \"Fix calls to Component in ComponentDesigner.Dispose overrides\" (#10585)"},{"Id":"2064965260","IsPullRequest":true,"CreatedAt":"2024-01-05T22:31:24","Actor":"elachlan","Number":"10576","RawContent":null,"Title":"Refactoring `ImageCodecInfoTests` to replace `Hashtable` with Generic Dictionary","State":"closed","Body":"Related: #8143\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10576)","Url":"https://github.com/dotnet/winforms/pull/10576","RelatedDescription":"Closed or merged PR \"Refactoring `ImageCodecInfoTests` to replace `Hashtable` with Generic Dictionary\" (#10576)"},{"Id":"2066547321","IsPullRequest":true,"CreatedAt":"2024-01-05T20:31:10","Actor":"github-actions[bot]","Number":"10589","RawContent":null,"Title":"[release/8.0] Fix PropertyGrid.RemoveTabType method","State":"closed","Body":"Backport of #10575 to release/8.0\r\n\r\n/cc @lonitra @thomasnaletsg\r\n\r\n## Customer Impact\r\nCustomers are able to add property tabs, but are unable to remove them. This fix allows customers to remove the property tabs that they have added\r\n\r\n## Testing\r\n- Unit test added to verify property grid can be removed successfully\r\n- Manually verified property tab is successfully removed on call to `RemoveTabType` in test app\r\n\r\n## Risk\r\nMinimal\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10589)","Url":"https://github.com/dotnet/winforms/pull/10589","RelatedDescription":"Closed or merged PR \"[release/8.0] Fix PropertyGrid.RemoveTabType method\" (#10589)"},{"Id":"2067976279","IsPullRequest":true,"CreatedAt":"2024-01-05T20:10:31","Actor":"halgab","Number":"10597","RawContent":null,"Title":"Improve the NRT annotations of ToolStripPanelDesigner","State":"open","Body":"## Proposed changes\r\n\r\n- Improve the NRT annotations of `ToolStripPanelDesigner`\r\n- Fix a bug introduced in #9408 when calling the `Dispose` method twice (see #10585)\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10597)","Url":"https://github.com/dotnet/winforms/pull/10597","RelatedDescription":"Open PR \"Improve the NRT annotations of ToolStripPanelDesigner\" (#10597)"},{"Id":"2063517049","IsPullRequest":true,"CreatedAt":"2024-01-05T19:36:51","Actor":"Epica3055","Number":"10570","RawContent":null,"Title":"[release/8.0] [Accessibility]Inspect or AccessibilityInsights tool's rectangle can't focus on the entire Treeview with scrollBar","State":"closed","Body":"related to [PR_10532](https://github.com/dotnet/winforms/pull/10532)\r\n\r\nFix #10485\r\n\r\n## Proposed changes\r\nDo not use BoundingRectangle method defined on the AccessibleObject class, instead use Win32 API GetWindowRect\r\n\r\n## Customer Impact\r\nAccessibility tools do not have access to the control scroll bars if TreeView shows them.\r\n\r\n## Regression?\r\n - [X] Yes \r\n - [ ] No\r\n \r\n## Risk\r\n- [ ] High\r\n- [ ] Medium\r\n- [X] Low â€“ because the change made in this pr does not affect TreeView control itself. It only change TreeViews' rectangle when accessibility client is open.\r\n\r\n## Before\r\n\r\n![image](https://github.com/dotnet/winforms/assets/130345015/659d0f27-1b6b-43cc-88dd-4976e63e9887)\r\n\r\n## After\r\n\r\n![image](https://github.com/dotnet/winforms/assets/135201996/b13347ee-1075-4a5d-91c2-508c135b3106)\r\n\r\n## Verification\r\n- [x] Manual \r\n- [ ] Automated\r\n \r\n## Packaging changes reviewed?\r\n- [ ] Yes\r\n- [ ] No\r\n- [X] N/A\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10570)","Url":"https://github.com/dotnet/winforms/pull/10570","RelatedDescription":"Closed or merged PR \"[release/8.0] [Accessibility]Inspect or AccessibilityInsights tool's rectangle can't focus on the entire Treeview with scrollBar\" (#10570)"},{"Id":"2065151183","IsPullRequest":false,"CreatedAt":"2024-01-05T17:35:34","Actor":"Nora-Zhou01","Number":"10580","RawContent":null,"Title":"An error occurs after resizing a control in the DemoConsole application","State":"closed","Body":"### .NET version\r\n\r\n9.0.0-alpha.1.24053.2\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNot tested/verified\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nYes, this is a regression issue.\r\n\r\n### Issue description\r\n\r\nIn the **Use SnapLines** of the [DemoConsole](https://github.com/dotnet/winforms/tree/main/src/System.Windows.Forms/tests/IntegrationTests/DesignSurface/DemoConsole) test app of Winforms repo, control cannot be resized.\r\n\r\n**Actual result** in [DemoConsole](https://github.com/dotnet/winforms/tree/main/src/System.Windows.Forms/tests/IntegrationTests/DesignSurface/DemoConsole) test app:\r\n\r\nhttps://github.com/dotnet/winforms/assets/104609169/2773f67d-d721-4d66-8ebc-8fc44f4f04fa\r\n\r\n**Expected result:**\r\nControls can be resized.\r\n\r\nhttps://github.com/dotnet/winforms/assets/104609169/968971fe-2c4b-4aad-bb62-0515938541b6\r\n\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\nTest sample: [DemoConsole](https://github.com/dotnet/winforms/tree/main/src/System.Windows.Forms/tests/IntegrationTests/DesignSurface/DemoConsole) in Winforms repo","Url":"https://github.com/dotnet/winforms/issues/10580","RelatedDescription":"Closed issue \"An error occurs after resizing a control in the DemoConsole application\" (#10580)"},{"Id":"2066364437","IsPullRequest":true,"CreatedAt":"2024-01-05T17:35:33","Actor":"elachlan","Number":"10584","RawContent":null,"Title":"Fix `StackOverflow` in `ControlDesigner`","State":"closed","Body":"Fixes #10580\r\nCaused by #10279\r\n\r\n![294309830-228b6d58-f9b8-44ac-be59-f73019024a3d](https://github.com/dotnet/winforms/assets/2433737/3da5c8e6-98f0-465c-bf8d-6768efabf274)\r\n![294309898-978d4797-29b5-483f-8089-bbbd568ee69b](https://github.com/dotnet/winforms/assets/2433737/cb3e1976-a50e-4cbd-858c-da8e9a7082a9)\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10584)","Url":"https://github.com/dotnet/winforms/pull/10584","RelatedDescription":"Closed or merged PR \"Fix `StackOverflow` in `ControlDesigner`\" (#10584)"},{"Id":"2067321802","IsPullRequest":true,"CreatedAt":"2024-01-05T16:32:08","Actor":"dotnet-maestro[bot]","Number":"10595","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20240104.18\r\n- **Date Produced**: January 5, 2024 9:28:49 AM UTC\r\n- **Commit**: 9325d3836d1f8af309855a4d82170d5a43f10122\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.CodeDom**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.IO.Ports**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Management**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Speech**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Text.Json**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/fac60d0e97...9325d3836d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10595)","Url":"https://github.com/dotnet/winforms/pull/10595","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#10595)"},{"Id":"2067652284","IsPullRequest":true,"CreatedAt":"2024-01-05T16:27:55","Actor":"sharwell","Number":"10596","RawContent":null,"Title":"Fix ambiguous references in cref attributes","State":"open","Body":"Restores build diagnostics which were disabled in #10525.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10596)","Url":"https://github.com/dotnet/winforms/pull/10596","RelatedDescription":"Open PR \"Fix ambiguous references in cref attributes\" (#10596)"},{"Id":"2067320020","IsPullRequest":true,"CreatedAt":"2024-01-05T13:24:00","Actor":"dotnet-maestro[bot]","Number":"10594","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20240104.2\r\n- **Date Produced**: January 4, 2024 5:10:39 PM UTC\r\n- **Commit**: 574b28f9639dbd60738c6662d44f47b4abf5bba1\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.24053.1 to 9.0.0-beta.24054.2][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 9.0.0-beta.24053.1 to 9.0.0-beta.24054.2][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 9.0.0-beta.24053.1 to 9.0.0-beta.24054.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.24053.1 to 9.0.0-beta.24054.2][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 9.0.0-beta.24053.1 to 9.0.0-beta.24054.2][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.24053.1 to 9.0.0-beta.24054.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/f4e11a15c7...574b28f963\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10594)","Url":"https://github.com/dotnet/winforms/pull/10594","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10594)"},{"Id":"2066813108","IsPullRequest":true,"CreatedAt":"2024-01-05T06:40:01","Actor":"CuteLeon","Number":"10593","RawContent":null,"Title":"https://github.com/dotnet/winforms/issues/10592","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #10592 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Enhance ToolStripItem to make Renderer accessable\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- ToolStripItem's Renderer accessable\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- No\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- This modification is very tiny, and doesn't change default behavior.\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10593)","Url":"https://github.com/dotnet/winforms/pull/10593","RelatedDescription":"Open PR \"https://github.com/dotnet/winforms/issues/10592\" (#10593)"},{"Id":"2066804264","IsPullRequest":false,"CreatedAt":"2024-01-05T06:30:48","Actor":"CuteLeon","Number":"10592","RawContent":null,"Title":"Enable ToolStripItem to support specifying specific Renderer","State":"open","Body":"### Background and motivation\n\nI implemented a specified ToolStripItem class, and hope to specify a renderer for it to reuse base OnPaint logic, instead of using owner's renderer. While ToolStripItem's Renderer property was decleared as Internal and not overrideable.\n\n### API Proposal\n\n```csharp\r\npublic abstract partial class ToolStripItem\r\n{\r\n    protected virtual ToolStripRenderer? Renderer\r\n    {\r\n        get\r\n        {\r\n            if (Owner is not null)\r\n            {\r\n                return Owner.Renderer;\r\n            }\r\n\r\n            return ParentInternal?.Renderer;\r\n        }\r\n    }\r\n}\r\n```\r\n\n\n### API Usage\n\n```csharp\r\npublic class MyToolStripButton : ToolStripButton\r\n{\r\n    protected static ToolStripProfessionalRenderer OverrideRenderer = new();\r\n\r\n    protected override ToolStripRenderer? Renderer { get => OverrideRenderer; }\r\n}\r\n```\r\n\n\n### Alternative Designs\n\n_No response_\n\n### Risks\n\n_No response_\n\n### Will this feature affect UI controls?\n\n1. No\r\n2. No\r\n3. No","Url":"https://github.com/dotnet/winforms/issues/10592","RelatedDescription":"Open issue \"Enable ToolStripItem to support specifying specific Renderer\" (#10592)"},{"Id":"2066791355","IsPullRequest":false,"CreatedAt":"2024-01-05T06:17:48","Actor":"Olina-Zhang","Number":"10591","RawContent":null,"Title":"[Accessibility] Narrator cannot announce the leaf node information(level 1) for nodes in TreeView","State":"open","Body":"### .NET version\n\n9.0.100-alpha.1.24053.14 \n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, it cannot repro in .NET 6 SDK, repro from .NET7.0 to .NET 9.0\n\n### Issue description\n\nNarrator cannot announce the leaf node information for nodes in TreeView\r\n\r\n**Actual result of .Net 9.0:**\r\nNarrator:\r\n![image](https://github.com/dotnet/winforms/assets/26474449/a76f3fe1-7ad7-4e8d-8c99-474541b02379)\r\n\r\nInspect:\r\n![image](https://github.com/dotnet/winforms/assets/26474449/f494ed90-2144-43a1-8e50-b3981d8b7b0a)\r\n\r\n**Expected result of .Net 6.0:**\r\nNarrator: \r\n![image](https://github.com/dotnet/winforms/assets/26474449/82a6ec41-ceca-4b7f-ad4d-587c3d171117)\r\nInspect:\r\n![image](https://github.com/dotnet/winforms/assets/26474449/dc726fb2-6a5a-423b-a6e7-708eba00edc2)\r\n\r\n\n\n### Steps to reproduce\n\n1. Create Winforms .NET 9 application with TreeView added\r\n2. In treeView, add several nodes, one of nodes contains child nodes\r\n3. Build and run application\r\n4. Use Narrator and Inspect to test nodes in TreeView","Url":"https://github.com/dotnet/winforms/issues/10591","RelatedDescription":"Open issue \"[Accessibility] Narrator cannot announce the leaf node information(level 1) for nodes in TreeView\" (#10591)"},{"Id":"2066645497","IsPullRequest":true,"CreatedAt":"2024-01-05T04:28:31","Actor":"AustinWise","Number":"10590","RawContent":null,"Title":"Delete Build.complog","State":"closed","Body":"Delete file that should not have been included in #10525.\r\n\r\nI thought about adding `*.complog` to `.gitignore`, but I'm not aware of `.complog` being a common MSBuild binary log file extension.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10590)","Url":"https://github.com/dotnet/winforms/pull/10590","RelatedDescription":"Closed or merged PR \"Delete Build.complog\" (#10590)"},{"Id":"2066477407","IsPullRequest":true,"CreatedAt":"2024-01-04T23:15:46","Actor":"elachlan","Number":"10588","RawContent":null,"Title":"Refactoring `DesignerActionMethodItem` usage to use nameof instead of inline string","State":"open","Body":"Stumbled onto this when investigating #10579\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10588)","Url":"https://github.com/dotnet/winforms/pull/10588","RelatedDescription":"Open PR \"Refactoring `DesignerActionMethodItem` usage to use nameof instead of inline string\" (#10588)"},{"Id":"2066446583","IsPullRequest":false,"CreatedAt":"2024-01-04T22:50:59","Actor":"JeremyKuhne","Number":"10587","RawContent":null,"Title":"Add more analyzer coverage for coding style guidelines","State":"open","Body":"Not all of our coding style guidelines are covered by analyzers. https://github.com/dotnet/winforms/blob/main/docs/coding-style.md Some things that currently aren't covered:\r\n\r\n- XML comments indented by a space\r\n- Line breaks start with operators: `||` at the beginning of the line for example\r\n- `=>` stays on the previous line (for better alignment of further line breaks)\r\n- `t_` for thread statics\r\n- `unsafe` on methods or classes only\r\n- No empty XML comment blocks\r\n- `=` can be aligned in some cases\r\n- `?:` should be on a single line or broken starting two lines with `?` and `:`","Url":"https://github.com/dotnet/winforms/issues/10587","RelatedDescription":"Open issue \"Add more analyzer coverage for coding style guidelines\" (#10587)"},{"Id":"2066407996","IsPullRequest":true,"CreatedAt":"2024-01-04T22:14:53","Actor":"halgab","Number":"10586","RawContent":null,"Title":"Improve the NRT annotations of DataGridViewDesigner","State":"open","Body":"## Proposed changes\r\n\r\n- Improve the NRT annotations of `DataGridViewDesigner`\r\n- Fix a bug introduced in #9408 when calling the Dispose method twice (see #10585)\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10586)","Url":"https://github.com/dotnet/winforms/pull/10586","RelatedDescription":"Open PR \"Improve the NRT annotations of DataGridViewDesigner\" (#10586)"},{"Id":"2066067383","IsPullRequest":false,"CreatedAt":"2024-01-04T17:32:28","Actor":"weltkante","Number":"10583","RawContent":null,"Title":"Support ComSourceGenerator-based ActiveX controls","State":"open","Body":"### .NET version\r\n\r\n.NET 8\r\n\r\n### Did it work in .NET Framework?\r\n\r\nYes (using classic COM interop)\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nWorks using the classic COM interop.\r\n\r\n### Issue description\r\n\r\nTLB support and tooling isn't ready yet in .NET 8 so its understandable that there has been limited attention to support the new COM source generators in WinForms, but there is still desire (https://github.com/dotnet/runtime/issues/66674#issuecomment-1856072113) to get it working eventually. I'm currently prototyping (https://github.com/Devolutions/MsRdpEx/issues/97) a hand written binding for the Microsoft RDP Client, which is apparently only provided in form of an ActiveX control, so should be a decent usecase and test scenario for ActiveX support in WinForms against the new COM source generators (besides the custom MFC based controls we previously used for testing compatibility, I might also extend those to provide test coverage, not sure how well a RDP client control is suited for unit testing)\r\n\r\nA few things to note so far, I'll probably add more as the prototype comes along:\r\n* returning a ComWrappers instance from `CreateInstanceCore` makes WinForms fail to resolve its interfaces\r\n  * according to the [docs](https://github.com/dotnet/runtime/blob/main/docs/design/libraries/ComInterfaceGenerator/Compatibility.md#interop-with-comimport) this is supported by the runtime, but its off by default and has to be opted-in and is not NativeAOT compatible, so I do not opt-in and do things manually\r\n  * it is possible to work around this by manually translating it to a classic interop COM object (__ComObject instance obtained via `Marshal.GetObjectForIUnknown` on the ComWrappers IUnknown pointer)\r\n  * ideally WinForms will support either being returned here, maybe probing which variant it is or something, I'll experiment and see what I can get to work here\r\n* passing a ComWrappers instance to `ConnectionPointCookie` makes WinForms fail to understand it\r\n  * the current `ConnectionPointCookie` API is not well-suited to custom bindings since it wants an interface type for reflection\r\n  * even if the event handler interface implements both ComWrapper and classic COM interfaces WinForms still fails\r\n\r\nMy primary goal of this issue will be tracking required changes to support getting the prototype running entirely with handwritten source generator bindings, I'll open a PR for suggested fixes once I figure out more about why WinForms fails interacting with ComWrapper based instances.\r\n\r\n### Steps to reproduce\r\n\r\nWrite COM source generator bindings against an ActiveX control and try to use it with WinForms AxHost","Url":"https://github.com/dotnet/winforms/issues/10583","RelatedDescription":"Open issue \"Support ComSourceGenerator-based ActiveX controls\" (#10583)"},{"Id":"2065627718","IsPullRequest":true,"CreatedAt":"2024-01-04T13:24:57","Actor":"dotnet-maestro[bot]","Number":"10582","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20240103.7\r\n- **Date Produced**: January 4, 2024 6:02:16 AM UTC\r\n- **Commit**: fac60d0e972dd3f16ddc568573f2934c5fdc9acc\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **System.CodeDom**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **System.IO.Ports**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **System.Management**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **System.Speech**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **System.Text.Json**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-alpha.1.24052.13 to 9.0.0-alpha.1.24053.7][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/653739cc0e...fac60d0e97\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10582)","Url":"https://github.com/dotnet/winforms/pull/10582","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#10582)"},{"Id":"2065625336","IsPullRequest":true,"CreatedAt":"2024-01-04T13:23:34","Actor":"dotnet-maestro[bot]","Number":"10581","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20240103.1\r\n- **Date Produced**: January 3, 2024 4:03:40 PM UTC\r\n- **Commit**: f4e11a15c7b8a949d4a366e792a9843ff6e88cd5\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.24052.3 to 9.0.0-beta.24053.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 9.0.0-beta.24052.3 to 9.0.0-beta.24053.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 9.0.0-beta.24052.3 to 9.0.0-beta.24053.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.24052.3 to 9.0.0-beta.24053.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 9.0.0-beta.24052.3 to 9.0.0-beta.24053.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.24052.3 to 9.0.0-beta.24053.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/3531486ae4...f4e11a15c7\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10581)","Url":"https://github.com/dotnet/winforms/pull/10581","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10581)"},{"Id":"2065086756","IsPullRequest":false,"CreatedAt":"2024-01-04T06:32:30","Actor":"Zheng-Li01","Number":"10579","RawContent":null,"Title":" The selected icon for Icon property cannot be refreshed in time when adding the icon by using \"Choose Icon...\" command line until clicked any where in the propertyGide Window","State":"open","Body":"### .NET version\n\n9.0.0-alpha.1.24053.2\n\n### Did it work in .NET Framework?\n\nNot tested/verified\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo, it doesn't work in .Net 8.0 from Release/8.0 branch of Winforms repo\n\n### Issue description\n\n The selected icon for Icon property cannot be refreshed in time when adding the icon by using \"Choose Icon...\" command line until clicked any where in the propertyGide Window\n\n### Steps to reproduce\n\n1. Build & Run test sample: [DemoConsole](https://github.com/dotnet/winforms/tree/main/src/System.Windows.Forms/tests/IntegrationTests/DesignSurface/DemoConsole) in Winforms repo\r\n2. Adding the icon for Icon property by using \"Choose Icon...\" command line\r\n3. Observed the added icon for Icon property\r\n4. Clicked any where in the propertyGide Window\r\n5. Observed the added icon for Icon property\r\n\r\n**Actual Results:**\r\nAfter stpes#4, the added icon for Icon property is not refresh in time\r\nAfter stpes#5, the added icon for Icon property is refreshed\r\n![DemoConsole](https://github.com/dotnet/winforms/assets/38325459/b0529be4-0432-4768-a074-af71510b757b)\r\n\r\n**Expected Results:**\r\nAfter stpes#4, the added icon for Icon property can refresh in time\r\n\r\n**More info:**\r\n1. The issue cannot reproduce when adding the icon by using Icon property.\r\n2. The selected icon for Icon property can be refreshed in time when adding the icon by using \"Choose Icon...\" command line in Design time property grid.\r\n3. Can't support modified the icon property of the NotifyIcon control in runtime property grid by using command line.\r\n\r\n**PropertyGrid_RunTime**\r\n![PropertyGrid_RunTime](https://github.com/dotnet/winforms/assets/38325459/461354c7-0fa3-4b3e-826e-57b0d86553d1)\r\n**PropertyGrid_DesignTime**\r\n![PropertyGrid_DesignTime](https://github.com/dotnet/winforms/assets/38325459/f0836272-b60c-44ac-90c4-1ebcedcf6eb1)\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/10579","RelatedDescription":"Open issue \" The selected icon for Icon property cannot be refreshed in time when adding the icon by using \"Choose Icon...\" command line until clicked any where in the propertyGide Window\" (#10579)"},{"Id":"2065009857","IsPullRequest":true,"CreatedAt":"2024-01-04T05:09:39","Actor":"gpetrou","Number":"10578","RawContent":null,"Title":"Enable nullability in some DataGridView.Methods members","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in some DataGridView.Methods members.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10578)","Url":"https://github.com/dotnet/winforms/pull/10578","RelatedDescription":"Open PR \"Enable nullability in some DataGridView.Methods members\" (#10578)"},{"Id":"2064984724","IsPullRequest":true,"CreatedAt":"2024-01-04T04:33:24","Actor":"elachlan","Number":"10577","RawContent":null,"Title":"Replace `ArrayList` usage in `FlowLayoutPanelDesigner` with List","State":"open","Body":"Related:\r\n- #8140\r\n- #10432\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10577)","Url":"https://github.com/dotnet/winforms/pull/10577","RelatedDescription":"Open PR \"Replace `ArrayList` usage in `FlowLayoutPanelDesigner` with List\" (#10577)"},{"Id":"2063323380","IsPullRequest":true,"CreatedAt":"2024-01-03T18:41:38","Actor":"Epica3055","Number":"10569","RawContent":null,"Title":"Revert \"fix isssue 10516 [Accessibility] CheckBox control should support ValuePattern property (#10533)\"","State":"closed","Body":"revert [PR 10533](https://github.com/dotnet/winforms/pull/10533), since it is not a bug.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10569)","Url":"https://github.com/dotnet/winforms/pull/10569","RelatedDescription":"Closed or merged PR \"Revert \"fix isssue 10516 [Accessibility] CheckBox control should support ValuePattern property (#10533)\"\" (#10569)"},{"Id":"2064007652","IsPullRequest":true,"CreatedAt":"2024-01-03T17:59:54","Actor":"dotnet-maestro[bot]","Number":"10573","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20240102.13\r\n- **Date Produced**: January 3, 2024 6:07:29 AM UTC\r\n- **Commit**: 653739cc0e4f6c7a44e4cda6c9ac8bb2a265505a\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **System.CodeDom**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **System.IO.Ports**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **System.Management**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **System.Speech**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **System.Text.Json**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-alpha.1.24052.1 to 9.0.0-alpha.1.24052.13][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/623cf77a58...653739cc0e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10573)","Url":"https://github.com/dotnet/winforms/pull/10573","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#10573)"},{"Id":"2064043063","IsPullRequest":true,"CreatedAt":"2024-01-03T13:30:45","Actor":"thomasnaletsg","Number":"10575","RawContent":null,"Title":"Fix PropertyGrid.RemoveTabType method","State":"open","Body":"Tab removal wasn't matching the tab type so it wouldn't remove tabs.\r\n\r\nFixes #10574","Url":"https://github.com/dotnet/winforms/pull/10575","RelatedDescription":"Open PR \"Fix PropertyGrid.RemoveTabType method\" (#10575)"},{"Id":"2064035942","IsPullRequest":false,"CreatedAt":"2024-01-03T13:25:34","Actor":"thomasnaletsg","Number":"10574","RawContent":null,"Title":"PropertyGrid.RemoveTabType does not effectively remove tab","State":"open","Body":"### .NET version\n\n8.0.100\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, it works in 5.0\n\n### Issue description\n\nThe PropertyGrid.RemoveTabType method does not effectively remove the PropertyTab. Calling this method with a previously added tab does not suppress the tab. It looks like the check on type is wrong in the method RemoveTabType  since the commit https://github.com/dotnet/winforms/pull/6108\r\n\r\nThe type check is not consistent between AddTabType and RemoveTabType method:\r\nIn AddTabType: https://github.com/dotnet/winforms/blob/39c1cfba04f0682ae79e6629188eb291bc0d203e/src/System.Windows.Forms/src/System/Windows/Forms/PropertyGrid.cs#L1480\r\n\r\nIn RemoveTabType:\r\nhttps://github.com/dotnet/winforms/blob/39c1cfba04f0682ae79e6629188eb291bc0d203e/src/System.Windows.Forms/src/System/Windows/Forms/PropertyGrid.cs#L3565\r\n\r\n\n\n### Steps to reproduce\n\n1. Create a new form with a PropertyGrid\r\n2. Create a class MyPropertyTab which inherits from PropertyTab\r\n3. Properly implement MyPropertyTab \r\n4. Call propertyGrid.AddTabType(typeof(MyPropertyTab))\r\n5. Call propertyGrid.RemoveTabType(typeof(MyPropertyTab))\r\n\r\nIn .net50, MyPropertyTab is removed\r\nin .net80, MyPropertyTab is not removed\r\n","Url":"https://github.com/dotnet/winforms/issues/10574","RelatedDescription":"Open issue \"PropertyGrid.RemoveTabType does not effectively remove tab\" (#10574)"},{"Id":"2064005319","IsPullRequest":true,"CreatedAt":"2024-01-03T13:24:14","Actor":"dotnet-maestro[bot]","Number":"10572","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20240102.3\r\n- **Date Produced**: January 2, 2024 4:10:47 PM UTC\r\n- **Commit**: 3531486ae4b4e78149d815d99db3d3a0e8a3c64d\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.23628.1 to 9.0.0-beta.24052.3][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 9.0.0-beta.23628.1 to 9.0.0-beta.24052.3][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 9.0.0-beta.23628.1 to 9.0.0-beta.24052.3][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.23628.1 to 9.0.0-beta.24052.3][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 9.0.0-beta.23628.1 to 9.0.0-beta.24052.3][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.23628.1 to 9.0.0-beta.24052.3][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/9e5fd26c0d...3531486ae4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10572)","Url":"https://github.com/dotnet/winforms/pull/10572","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10572)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-01-06T03:30:26.7251673Z","RunDurationInMilliseconds":467}