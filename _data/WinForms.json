{"Data":{"GitHub":{"Issues":[{"Id":"1197432145","IsPullRequest":true,"CreatedAt":"2022-04-08T16:31:45","Actor":"dmitrii-drobotov","Number":"6991","RawContent":null,"Title":"Adding Skip attribute or adjusting skip condition for flaky tests","State":"closed","Body":"Related issues: \r\n\r\n* https://github.com/dotnet/winforms/issues/6713\r\n* https://github.com/dotnet/winforms/issues/6610\r\n* https://github.com/dotnet/winforms/issues/6714 \r\n* https://github.com/dotnet/winforms/issues/6739\r\n* https://github.com/dotnet/winforms/issues/6926\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n## Proposed changes\r\n\r\n- Skip tests that sometimes fail in CI and block deployment. \r\n- Some tests were already skipped for certain architecture but turned out to be flaky for other architectures as well (#6610, #6926, #6739). This PR removes skip condition for such tests so that they are skipped for all architectures.\r\n- Another test (#6714) was reported to be flaky but not skipped yet.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- No\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- CI build\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6991)","Url":"https://github.com/dotnet/winforms/pull/6991","RelatedDescription":"Closed or merged PR \"Adding Skip attribute or adjusting skip condition for flaky tests\" (#6991)"},{"Id":"1197324737","IsPullRequest":false,"CreatedAt":"2022-04-08T13:32:16","Actor":"FTricoire","Number":"6990","RawContent":null,"Title":"Timed out while connecting to named pipe: DesignToolsServer.9e32d169-ddf5-4473-a4af-3f8d634b3fdc","State":"open","Body":"### Environment\n\nMicrosoft Visual Studio Community 2022\r\nVersion 17.1.3\r\nVisualStudio.17.Release/17.1.3+32328.378\r\nMicrosoft .NET Framework\r\nVersion 4.8.04084\r\n\r\nVersion installée : Community\r\n\r\nASP.NET and Web Tools 2019   17.1.358.51495\r\nASP.NET and Web Tools 2019\r\n\r\nASP.NET Web Frameworks and Tools 2019   17.1.358.51495\r\nPour plus d'informations, visitez https://www.asp.net/\r\n\r\nAzure Functions and Web Jobs Tools   17.1.358.51495\r\nAzure Functions and Web Jobs Tools\r\n\r\nCleanBinAndObjCommand Extension   1.2.58\r\nCleanBinAndObjCommand Visual Studio Extension Detailed Info\r\n\r\nCommon Azure Tools   1.10\r\nProvides common services for use by Azure Mobile Services and Microsoft Azure Tools.\r\n\r\nDébogage de .NET Core avec WSL   1.0\r\nDébogage de .NET Core avec WSL\r\n\r\nExtensions des outils de conteneur Visual Studio   1.0\r\nAffichez, gérez et diagnostiquez les conteneurs dans Visual Studio.\r\n\r\nGestionnaire de bibliothèques Microsoft   2.1.161+abc97ecc7d.RR\r\nInstallez facilement des bibliothèques côté client dans n'importe quel projet web\r\n\r\nGestionnaire de package NuGet   6.1.0\r\nGestionnaire de package NuGet dans Visual Studio. Pour plus d'informations sur NuGet, visitez https://docs.nuget.org/\r\n\r\nMicrosoft JVM Debugger   1.0\r\nProvides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines\r\n\r\nMicrosoft MI-Based Debugger   1.0\r\nProvides support for connecting Visual Studio to MI compatible debuggers\r\n\r\nOutils Azure App Service v3.0.0   17.1.358.51495\r\nOutils Azure App Service v3.0.0\r\n\r\nOutils C#   4.1.0-5.22165.10+e555772db77ca828b02b4bd547c318387f11d01f\r\nComposants C# utilisés dans l'IDE. Selon votre type de projet et vos paramètres, une version différente du compilateur peut être utilisée.\r\n\r\nOutils TypeScript   17.0.1229.2001\r\nOutils TypeScript pour Microsoft Visual Studio\r\n\r\nOutils Visual Basic   4.1.0-5.22165.10+e555772db77ca828b02b4bd547c318387f11d01f\r\nComposants Visual Basic utilisés dans l'IDE. Selon votre type de projet et vos paramètres, une version différente du compilateur peut être utilisée.\r\n\r\nPackage hôte de l'adaptateur de débogage de Visual Studio Code   1.0\r\nCouche d'interopérabilité pour l'hébergement d'adaptateurs de débogage Visual Studio Code dans Visual Studio\r\n\r\nRazor (ASP.NET Core)   17.0.0.2206201+62a2c1d6162f828801565a7ca26d9d48b810a05b\r\nFournit des services de langage pour ASP.NET Core Razor.\r\n\r\nResX Resource Manager   ResXManager\r\nManage localization of all ResX-based resources in one place. Shows all resources of a solution and lets you edit the strings and their localizations in a well-arranged data grid.\r\n\r\nSQL Server Data Tools   17.0.62203.25080\r\nMicrosoft SQL Server Data Tools\r\n\r\nStylerPackage Extension   1.0\r\nStylerPackage Visual Stuido Extension Detailed Info\r\n\r\nVisual F# Tools   17.1.0-beta.21610.4+07b5673e4f2fa7630e78abe37f16b372353a7242\r\nMicrosoft Visual F# Tools\r\n\r\nVisual Studio IntelliCode   2.2\r\nDéveloppement assisté par intelligence artificielle pour Visual Studio.\r\n\r\nVisual Studio Tools pour Conteneurs   1.0\r\nVisual Studio Tools pour Conteneurs\r\n\r\nVisual Studio Tools pour Docker   1.2\r\nDéveloppez, exécutez et validez vos applications ASP.NET Core dans l'environnement cible. Appuyez sur F5 pour exécuter votre application directement dans un conteneur avec débogage ou sur CTRL+F5 pour modifier et actualiser votre application sans avoir à recréer le conteneur.\n\n### .NET version\n\n.NET 5.0\n\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\n\nI've never experienced this problem on Visual Studio 2019, and it's only since few weeks that I have it on Visual Studio 2022.\n\n### Issue description\n\nI've seen the problem on issue #6492  and #6705 but the conclusion was that the timeout was set to 2 minutes and in 17.2 we will have the ability to increase it.\r\n\r\nDoes it mean that the design will take 10 minutes (for example) to load whereas on Visual Studio 2019 it was almost instant ?\n\n### Steps to reproduce\n\nI just have to open a Winform Design to have the issue.\n\n### Diagnostics\n\n_No response_","Url":"https://github.com/dotnet/winforms/issues/6990","RelatedDescription":"Open issue \"Timed out while connecting to named pipe: DesignToolsServer.9e32d169-ddf5-4473-a4af-3f8d634b3fdc\" (#6990)"},{"Id":"1197303959","IsPullRequest":true,"CreatedAt":"2022-04-08T13:13:52","Actor":"roland5572","Number":"6989","RawContent":null,"Title":"Fixing ShowInTaskbar=false doesn't work in some cases (#6421)","State":"open","Body":"Fixes  https://github.com/dotnet/winforms/issues/6421.\r\n\r\nIf you set ShowInTaskbar=false, the winforms will recreate the Handle. It will call RecreateHandleCore() from Control.cs.\r\n\r\nIn method WmNCDestroy(ref Message m) from class Form.cs, The program needs to confirm whether the handle is being recreated before setting the value of the DialogResult.\r\n\r\nIf the program is in the process of recreating the handle, setting DialogResult = DialogResult.Cancel will cause the Form to be automatically closed.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6989)","Url":"https://github.com/dotnet/winforms/pull/6989","RelatedDescription":"Open PR \"Fixing ShowInTaskbar=false doesn't work in some cases (#6421)\" (#6989)"},{"Id":"1197240033","IsPullRequest":true,"CreatedAt":"2022-04-08T12:49:39","Actor":"dotnet-maestro[bot]","Number":"6988","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20220406.10\r\n- **Date Produced**: April 6, 2022 11:05:52 PM UTC\r\n- **Commit**: 549523c3fc8929da1a3073d1a97f298e0d1dc342\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.22181.2 to 7.0.0-beta.22206.10][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22181.2 to 7.0.0-beta.22206.10][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.22181.2 to 7.0.0-beta.22206.10][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.22181.2 to 7.0.0-beta.22206.10][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.22181.2 to 7.0.0-beta.22206.10][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22181.2 to 7.0.0-beta.22206.10][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/e0b311b...549523c\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6988)","Url":"https://github.com/dotnet/winforms/pull/6988","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6988)"},{"Id":"1196949353","IsPullRequest":false,"CreatedAt":"2022-04-08T07:31:02","Actor":"kirsan31","Number":"6987","RawContent":null,"Title":"ContextMenuStrip ToolTip appear behind menu items with dropdown elements","State":"open","Body":"### .NET version\n\nAll up to current 6.0.\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo.\n\n### Issue description\n\n`ContextMenuStrip` item with dropdown elements + ToolTip (`ToolTipText`) will display tip behind itself. So tip will be not visible (not fully visible). Video:\r\n\r\nhttps://user-images.githubusercontent.com/17767561/162386114-90fca9d5-8cf4-4f82-a18a-808e4c639ca9.mp4\r\n\r\n\r\n\n\n### Steps to reproduce\n\n[MenuTip.zip](https://github.com/dotnet/winforms/files/8449594/MenuTip.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/6987","RelatedDescription":"Open issue \"ContextMenuStrip ToolTip appear behind menu items with dropdown elements\" (#6987)"},{"Id":"1196880143","IsPullRequest":true,"CreatedAt":"2022-04-08T06:21:42","Actor":"kant2002","Number":"6986","RawContent":null,"Title":"Cut working incorrectly in ToolStripTextBox","State":"open","Body":"I assume that this is a bug which we all living with .NET 2.0\r\nHighly unlikely this is ever would be fixed, but would like to discuss possible options.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6986)","Url":"https://github.com/dotnet/winforms/pull/6986","RelatedDescription":"Open PR \"Cut working incorrectly in ToolStripTextBox\" (#6986)"},{"Id":"1196698582","IsPullRequest":true,"CreatedAt":"2022-04-08T00:45:24","Actor":"RussKie","Number":"6985","RawContent":null,"Title":"Run selected tests in en-US culture","State":"open","Body":"Mu OS default locale is set to \"en-AU\", and these tests kept failing for me. Add two new XUnit attributes to specify the desired locale.\r\n\r\n/cc: @weltkante @vladimir-krestov I know that in the past you had troubles with some locale-dependent tests on your ends. If you could run these changes and confirm that (at least) these tests pass for you - it would be awesome. \r\nAlso, if you see any other tests that may benefit from the new decoration - please let me know (or sent a PR in :)).\r\nThank you.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6985)","Url":"https://github.com/dotnet/winforms/pull/6985","RelatedDescription":"Open PR \"Run selected tests in en-US culture\" (#6985)"},{"Id":"1195533128","IsPullRequest":true,"CreatedAt":"2022-04-08T00:35:28","Actor":"RussKie","Number":"6983","RawContent":null,"Title":"Do not dispose imagelist bound to a toolstrip","State":"closed","Body":"Revert https://github.com/dotnet/winforms/pull/3676/commits/05c132f1231a5824d8e0b1db83cf51b0d095f9fa\r\nFixes #6881\r\n\r\n\r\n## Proposed changes\r\n\r\n- Do not dispose imagelist bound to a toolstrip, because the imagelist may be shared and outlive the controls it's bound to.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n\r\n## Regression? \r\n\r\n- Yes, introduced in https://github.com/dotnet/winforms/pull/3676\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual tests\r\n- Automated tests\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6983)","Url":"https://github.com/dotnet/winforms/pull/6983","RelatedDescription":"Closed or merged PR \"Do not dispose imagelist bound to a toolstrip\" (#6983)"},{"Id":"1194049947","IsPullRequest":true,"CreatedAt":"2022-04-07T23:19:50","Actor":"RussKie","Number":"6973","RawContent":null,"Title":"Update the intellisense version","State":"closed","Body":"* Update the intellisense version\r\n* Avoid additional copy step\r\n* Avoid race conditions\r\n\r\nCloses #6928\r\n\r\n## Test\r\n\r\nManually verified the content against a previously published microsoft.private.winforms NuGet package.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6973)","Url":"https://github.com/dotnet/winforms/pull/6973","RelatedDescription":"Closed or merged PR \"Update the intellisense version\" (#6973)"},{"Id":"1191394532","IsPullRequest":false,"CreatedAt":"2022-04-07T22:26:57","Actor":"kant2002","Number":"6963","RawContent":null,"Title":"Potential memory leak in HtmlElementShim","State":"closed","Body":"### .NET version\n\n7.0 and earlier\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\nLook at the code\r\nhttps://github.com/dotnet/winforms/blob/8bbc3f2f4f2270f62ddf1cca36a0870b36017fa8/src/System.Windows.Forms/src/System/Windows/Forms/HtmlElement.HtmlElementShim.cs#L101-L111\r\n\r\nFrom what I see some cookies abandoned after they are attached. Does this indicate memory leak? Shouldn't this class has list of cookies instead of just single ConnectionPointCookie?\n\n### Steps to reproduce\n\nStare at the code until question arise in your heart.","Url":"https://github.com/dotnet/winforms/issues/6963","RelatedDescription":"Closed issue \"Potential memory leak in HtmlElementShim\" (#6963)"},{"Id":"1196236738","IsPullRequest":true,"CreatedAt":"2022-04-07T17:11:32","Actor":"dotnet-maestro[bot]","Number":"6984","RawContent":null,"Title":"[release/6.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:84f431dc-3375-4a46-af87-08d961c59698)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 84f431dc-3375-4a46-af87-08d961c59698\r\n- **Build**: 20220406.7\r\n- **Date Produced**: April 6, 2022 8:41:47 PM UTC\r\n- **Commit**: 254113fd7c3ee04f832c165d6aec1a6077de0d63\r\n- **Branch**: refs/heads/release/6.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 6.0.0-beta.22178.5 to 6.0.0-beta.22206.7][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.22178.5 to 6.0.0-beta.22206.7][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.22178.5 to 6.0.0-beta.22206.7][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.22178.5 to 6.0.0-beta.22206.7][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.22178.5 to 6.0.0-beta.22206.7][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.22178.5 to 6.0.0-beta.22206.7][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/f8c0d51...254113f\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:84f431dc-3375-4a46-af87-08d961c59698)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6984)","Url":"https://github.com/dotnet/winforms/pull/6984","RelatedDescription":"Closed or merged PR \"[release/6.0] Update dependencies from dotnet/arcade\" (#6984)"},{"Id":"1195504227","IsPullRequest":true,"CreatedAt":"2022-04-07T06:48:28","Actor":"gpetrou","Number":"6982","RawContent":null,"Title":"Enable nullability in SelectedIndexCollection","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in SelectedIndexCollection.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6982)","Url":"https://github.com/dotnet/winforms/pull/6982","RelatedDescription":"Closed or merged PR \"Enable nullability in SelectedIndexCollection\" (#6982)"},{"Id":"1195322898","IsPullRequest":true,"CreatedAt":"2022-04-07T00:04:42","Actor":"kant2002","Number":"6981","RawContent":null,"Title":"Pass proper COM interfaces to the drag functions","State":"open","Body":"Fixes #6952\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6981)","Url":"https://github.com/dotnet/winforms/pull/6981","RelatedDescription":"Open PR \"Pass proper COM interfaces to the drag functions\" (#6981)"},{"Id":"1194981952","IsPullRequest":true,"CreatedAt":"2022-04-06T19:51:55","Actor":"gpetrou","Number":"6979","RawContent":null,"Title":"Enable nullability in ObjectCollection","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ObjectCollection.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6979)","Url":"https://github.com/dotnet/winforms/pull/6979","RelatedDescription":"Closed or merged PR \"Enable nullability in ObjectCollection\" (#6979)"},{"Id":"1195000242","IsPullRequest":true,"CreatedAt":"2022-04-06T19:45:57","Actor":"gpetrou","Number":"6980","RawContent":null,"Title":"Enable nullability in CheckedItemCollection","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in CheckedItemCollection.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6980)","Url":"https://github.com/dotnet/winforms/pull/6980","RelatedDescription":"Closed or merged PR \"Enable nullability in CheckedItemCollection\" (#6980)"},{"Id":"1194408038","IsPullRequest":true,"CreatedAt":"2022-04-06T10:28:18","Actor":"kirsan31","Number":"6978","RawContent":null,"Title":"Workaround for empty finalizers in DataGridView.","State":"open","Body":"Contribute to #6858.\r\nThis is continuation of https://github.com/dotnet/winforms/pull/6878 based on discussion.\r\nDocumentation for calling `GC.SuppressFinalize` on users subclasses also need to be updated some how...\r\n\r\n## Test methodology\r\n\r\n- Existing UT.\r\n- New UT for all subclasses coverage.\r\n- Manual.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6978)","Url":"https://github.com/dotnet/winforms/pull/6978","RelatedDescription":"Open PR \"Workaround for empty finalizers in DataGridView.\" (#6978)"},{"Id":"1194399652","IsPullRequest":false,"CreatedAt":"2022-04-06T10:20:41","Actor":"TheLeftExit","Number":"6977","RawContent":null,"Title":"String resource containing only whitespace characters are loaded as blank strings","State":"open","Body":"### .NET version\n\nReplicated on .NET Core 3 and all later versions.\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nI did not try this with versions prior to .NET Core 3.\n\n### Issue description\n\nIf a localized property's value is set to a string that only contains whitespace characters, **ComponentResourceManager** methods such as **ApplyResources** or **GetString** retrieve it as a blank string. This is a breaking change for .NET Framework applications where this is not the case.\r\n\r\nI could not find this change documented anywhere, or any issues related to it.\r\n\r\nThe XML generated for the property is the same in both .NET FX and .NET Core/5+:\r\n```xml\r\n<data name=\"label1.Text\" xml:space=\"preserve\">\r\n  <value>  </value>\r\n</data>\r\n```\n\n### Steps to reproduce\n\nI attached a solution containing two identical forms in .NET Framework 4.8 and .NET 6.\r\n[T1080450.zip](https://github.com/dotnet/winforms/files/8425886/T1080450.zip)\r\n\r\nTo replicate:\r\n - Create a new project using the Windows Forms App template.\r\n - Set the main form's **Localizable** property to **true**.\r\n - Add a label and set its **Text** property to ` ` (a string with a single whitespace character).\r\n - Debug the project and check the value of this property after it is set in the **InitializeComponent** method.","Url":"https://github.com/dotnet/winforms/issues/6977","RelatedDescription":"Open issue \"String resource containing only whitespace characters are loaded as blank strings\" (#6977)"},{"Id":"1194354328","IsPullRequest":true,"CreatedAt":"2022-04-06T09:44:25","Actor":"kant2002","Number":"6976","RawContent":null,"Title":"Properly use QI for all ComWrapper created instances","State":"open","Body":"Unfortunately this is not kind of fix which I willing to bring, but this seems to be only way without undoing other work too.\r\n\r\nFixes #6952\r\n\r\n## Proposed changes\r\n\r\n- Move forward with ComWrappers work, so all drag/drop functionality would be covered.\r\n- Inside WinForms right now all Drag/Drop working using ComWrappers, methods which are user-facing still rely on built-in COM (See #6745 for potential solution)\r\n- Additional testing needed on the corner cases like drag/drop from external application, etc.\r\n\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Moderate\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Verified using attached to the issue test case\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6976)","Url":"https://github.com/dotnet/winforms/pull/6976","RelatedDescription":"Open PR \"Properly use QI for all ComWrapper created instances\" (#6976)"},{"Id":"1194203761","IsPullRequest":false,"CreatedAt":"2022-04-06T07:49:15","Actor":"roland5572","Number":"6975","RawContent":null,"Title":"Wrong ListViewItemStates value in OnDrawSubItem method from ListView Control.","State":"open","Body":"### .NET version\r\n\r\n6.0, 4.8\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNo\r\n\r\n### Issue description\r\n\r\nIn the **ListView** control, set OwnerDraw = true, then you can overload the OnDrawSubItem function. \r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.listview.ondrawsubitem\r\n\r\nWhen you select an Item, then click on an empty/blank space in the ListView. This operation will result in no items being selected (ListView.SelectedItems.Count==0). But the wrong value may appear in the **OnDrawSubItem** method (DrawListViewSubItemEventArgs e).\r\n\r\ne.ItemState still equals ListViewItemStates.Selected | ListViewItemStates.Focused\r\n\r\nTest Code: .net 6.0 / Visual Studio 2022\r\n\r\n```\r\nnamespace ListViewItemStatesTest\r\n{\r\n    internal static class Program\r\n    {\r\n        [STAThread]\r\n        static void Main()\r\n        {\r\n            ApplicationConfiguration.Initialize();\r\n            Application.Run(CreateForm());\r\n        }\r\n\r\n        private class NewListView : ListView\r\n        {\r\n            private static readonly SolidBrush Brush = new SolidBrush(Color.Black);\r\n\r\n            protected override void OnDrawSubItem(DrawListViewSubItemEventArgs e)\r\n            {\r\n                if (e.ItemState == (ListViewItemStates.Selected | ListViewItemStates.Focused))\r\n                {\r\n                    e.SubItem.BackColor = Color.Orange;\r\n                }\r\n                else\r\n                {\r\n                    e.SubItem.BackColor = Color.LightBlue;\r\n                }\r\n\r\n                e.DrawDefault = true;\r\n                base.OnDrawSubItem(e);\r\n            }\r\n        }\r\n\r\n        private static Form CreateForm()\r\n        {\r\n            var frm = new Form()\r\n            {\r\n                Width = 800,\r\n                Height = 600,\r\n\r\n                StartPosition = FormStartPosition.CenterScreen\r\n            };\r\n\r\n            var control = new NewListView()\r\n            {\r\n                Dock = DockStyle.Fill,\r\n                View = View.Details,\r\n\r\n                OwnerDraw = true,\r\n                GridLines = true,\r\n                FullRowSelect = true,\r\n            };\r\n\r\n            control.Columns.Add(\"Column 1\", 100);\r\n            control.Columns.Add(\"Column 2\", 600);\r\n\r\n            var item1 = control.Items.Add(\"1\");\r\n            item1.SubItems.Add(\"Sub Item 1\");\r\n\r\n            var item2 = control.Items.Add(\"2\");\r\n            item2.SubItems.Add(\"Sub Item 2\");\r\n\r\n            frm.Controls.Add(control);\r\n\r\n            var button1= new Button() { Text = \"Button 1\", Height = 50, Dock = DockStyle.Top };\r\n            frm.Controls.Add(button1);\r\n\r\n            return frm;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n### Steps to reproduce\r\n\r\nnormal control behavior:\r\n1. Run the above code.\r\n2. Click ListView's item 1. The item's background turns blue.\r\n3. Click Button 1,  The item's background turns gray.\r\n\r\nIncorrect control behavior:\r\n1. **Restart program** (you need to restart the program, because the focus of the control may have changed).\r\n2. Click ListView's item 1. The item's background turns blue.\r\n4. Click on other blank area (white color) of ListView (don't click on Item area or column area, but blank area). The item's background turns orange.\r\n\r\nBecause the value of the parameter of DrawListViewSubItemEventArgs e (e.ItemState) is wrong, the item background behaves as Orange.\r\n\r\nIf you can't reproduce the process, or need a video, please let me know.","Url":"https://github.com/dotnet/winforms/issues/6975","RelatedDescription":"Open issue \"Wrong ListViewItemStates value in OnDrawSubItem method from ListView Control.\" (#6975)"},{"Id":"1194060667","IsPullRequest":true,"CreatedAt":"2022-04-06T05:35:19","Actor":"vladimir-krestov","Number":"6974","RawContent":null,"Title":"Fixed Narrator announcement of an empty form or its inner controls when opening","State":"open","Body":"Fixes #6896\r\nThis is a regression from .NET 3.1 after #2096. (.NET Core 3.0 and .NET Framework work well)\r\n\r\n## Proposed changes\r\n\r\n- Raise the focus event for a form or its active control, when the form is opening. Thereby a screen reader will focus on the form and announce its title.\r\n**We can't raise the UIA focus event in `OnGotFocus`, `OnShown`, `OnLoad` event handlers, because when they work AccessibleObject is not created yet and we can't be sure that a UIA tool (eg. Narrator) is working. It's a Form control issue only, when it's showing and if the form is empty. So we have to use `OnAccessibleObjectCreated` and check a focus state there.\r\nIf the form has enabled and visible controls, we need to do nothing.**\r\n\r\n## Customer Impact\r\n\r\n- Now a user can know from Narrator that a form has been opened\r\n\r\n## Regression? \r\n\r\n- Yes (from #2096)\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before - todo\r\n\r\n<!-- TODO -->\r\n\r\n### After - todo\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing\r\n- CTI\r\n\r\n## Accessibility testing \r\n- Using Narrator, AI, and Inspect.\r\n   Tested the following cases:\r\n     - Open an empty form - Narrator should focus on the form and announce its title\r\n     - Open a form with one control - Narrator should focus on this control and announce the form title and then the control info. Also checked, if a control, that overrides `OnGotFocus`, doesn't conflict with this fix raising focus event:\r\n        - ListBox\r\n        - DateTimePicker\r\n        - ListView\r\n        - MonthCalendar\r\n        - TabControl\r\n     - Open a form with several controls - Narrator should focus on an active control (usually, that has a minimal TabIndex) and announce the form title and then the active control info.\r\n     - Open a form with one disabled or invisible control (so we can't focus on it) - Narrator should focus on the form and announce its title\r\n    \r\n\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- Windows 11\r\n- .NET 7.0.0-preview.4.22179.1\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6974)","Url":"https://github.com/dotnet/winforms/pull/6974","RelatedDescription":"Open PR \"Fixed Narrator announcement of an empty form or its inner controls when opening\" (#6974)"},{"Id":"1193870861","IsPullRequest":true,"CreatedAt":"2022-04-06T00:37:06","Actor":"dreddy-work","Number":"6972","RawContent":null,"Title":"Deprecate Permonitor mode intended only for Windows 8.1","State":"open","Body":"WinForms never fully supported this mode. Windows 10 and above versions use 'PermonitorV2' mode.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6972)","Url":"https://github.com/dotnet/winforms/pull/6972","RelatedDescription":"Open PR \"Deprecate Permonitor mode intended only for Windows 8.1\" (#6972)"},{"Id":"1193863433","IsPullRequest":true,"CreatedAt":"2022-04-06T00:21:58","Actor":"dreddy-work","Number":"6971","RawContent":null,"Title":"Fix nested/User control scaling.","State":"open","Body":"Fixes #6381.\r\n\r\nNested controls are disabled for scaling once their parent layout is finished.\r\nHowever, Parent might be reparented and could go through a new layout based on\r\n its parent's scale dimensions.\r\n\r\nWe are maintaining multiple flags around scaling here and can be cleaned but require full testing. Making a scoped fix here to limit the risk.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6971)","Url":"https://github.com/dotnet/winforms/pull/6971","RelatedDescription":"Open PR \"Fix nested/User control scaling.\" (#6971)"},{"Id":"1193685544","IsPullRequest":true,"CreatedAt":"2022-04-05T21:29:42","Actor":"dotnet-maestro[bot]","Number":"6970","RawContent":null,"Title":"[release/6.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:84f431dc-3375-4a46-af87-08d961c59698)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 84f431dc-3375-4a46-af87-08d961c59698\r\n- **Build**: 20220328.5\r\n- **Date Produced**: March 28, 2022 7:04:19 PM UTC\r\n- **Commit**: f8c0d51185208227e582f76ac3c5003db237b689\r\n- **Branch**: refs/heads/release/6.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 6.0.0-beta.22161.1 to 6.0.0-beta.22178.5][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.22161.1 to 6.0.0-beta.22178.5][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.22161.1 to 6.0.0-beta.22178.5][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.22161.1 to 6.0.0-beta.22178.5][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.22161.1 to 6.0.0-beta.22178.5][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.22161.1 to 6.0.0-beta.22178.5][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/879df78...f8c0d51\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:84f431dc-3375-4a46-af87-08d961c59698)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6970)","Url":"https://github.com/dotnet/winforms/pull/6970","RelatedDescription":"Closed or merged PR \"[release/6.0] Update dependencies from dotnet/arcade\" (#6970)"},{"Id":"1193675716","IsPullRequest":true,"CreatedAt":"2022-04-05T21:03:12","Actor":"dotnet-maestro[bot]","Number":"6968","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:7ad8a074-d804-46e2-eafe-08d86aff023e)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 7ad8a074-d804-46e2-eafe-08d86aff023e\r\n- **Build**: 20220309.5\r\n- **Date Produced**: March 9, 2022 9:39:48 PM UTC\r\n- **Commit**: ee744068a4fcccc5b8b56e0025f9c95aa19ff318\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: [from 5.0.0-beta.22055.3 to 5.0.0-beta.22159.5][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 5.0.0-beta.22055.3 to 5.0.0-beta.22159.5][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 5.0.0-beta.22055.3 to 5.0.0-beta.22159.5][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 5.0.0-beta.22055.3 to 5.0.0-beta.22159.5][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 5.0.0-beta.22055.3 to 5.0.0-beta.22159.5][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/e5953f2...ee74406\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:7ad8a074-d804-46e2-eafe-08d86aff023e)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6968)","Url":"https://github.com/dotnet/winforms/pull/6968","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/arcade\" (#6968)"},{"Id":"1193658395","IsPullRequest":true,"CreatedAt":"2022-04-05T20:59:15","Actor":"vseanreesermsft","Number":"6966","RawContent":null,"Title":"Update branding to 5.0.17","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6966)","Url":"https://github.com/dotnet/winforms/pull/6966","RelatedDescription":"Closed or merged PR \"Update branding to 5.0.17\" (#6966)"},{"Id":"1193658492","IsPullRequest":true,"CreatedAt":"2022-04-05T20:58:42","Actor":"vseanreesermsft","Number":"6967","RawContent":null,"Title":"Update branding to 6.0.5","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6967)","Url":"https://github.com/dotnet/winforms/pull/6967","RelatedDescription":"Closed or merged PR \"Update branding to 6.0.5\" (#6967)"},{"Id":"1193676433","IsPullRequest":true,"CreatedAt":"2022-04-05T20:53:56","Actor":"dotnet-maestro[bot]","Number":"6969","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a2a5ea62-d9bf-419c-0c86-08d7315b512a)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: a2a5ea62-d9bf-419c-0c86-08d7315b512a\r\n- **Build**: 20220309.6\r\n- **Date Produced**: March 9, 2022 9:51:37 PM UTC\r\n- **Commit**: aebcd10d76469b2e84cffd39d043574bc5357d22\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 2.4.1-beta.22077.9 to 2.4.1-beta.22159.6][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.22077.9 to 1.0.0-beta.22159.6][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 2.0.0-beta.22077.9 to 2.0.0-beta.22159.6][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 1.0.0-beta.22077.9 to 1.0.0-beta.22159.6][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/31e3d88...aebcd10\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:a2a5ea62-d9bf-419c-0c86-08d7315b512a)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6969)","Url":"https://github.com/dotnet/winforms/pull/6969","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#6969)"},{"Id":"1192765918","IsPullRequest":false,"CreatedAt":"2022-04-05T07:53:32","Actor":"gc-maximloverov","Number":"6965","RawContent":null,"Title":"Windows Automation RaiseAutomationPropertyChangedEvent throws System.NotSupportedException","State":"open","Body":"### .NET version\r\n\r\n6.0\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNo\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\n_No response_\r\n\r\n### Issue description\r\n\r\nWindows Automation RaiseAutomationPropertyChangedEvent method for BoundingRectangleProperty throws System.NotSupportedException 'Type 'System.Windows.Rect' cannot be marshalled to a Variant. Type library is not registered.'.\r\nNo exception is thrown if the AutomationPropertyChangedEvent values are null.\r\n\r\n### Steps to reproduce\r\n\r\n1. Run attached app:\r\n[UiaNotSupportedException6.zip](https://github.com/dotnet/winforms/files/8416069/UiaNotSupportedException6.zip)\r\n2. Press button \"button1\"\r\n3. Observe thrown System.NotSupportedException","Url":"https://github.com/dotnet/winforms/issues/6965","RelatedDescription":"Open issue \"Windows Automation RaiseAutomationPropertyChangedEvent throws System.NotSupportedException\" (#6965)"},{"Id":"1192480923","IsPullRequest":false,"CreatedAt":"2022-04-05T01:02:32","Actor":"RussKie","Number":"6964","RawContent":null,"Title":"Mark `WebBrowser` and all related (e.g., HTML* types) as obsolete","State":"open","Body":"### Is your feature request related to a problem? Please describe\n\n `WebBrowser` control is based on IE engine, which is almost universally unusable for general web browsing these days. [WebView2](https://docs.microsoft.com/microsoft-edge/webview2/) is a modern replacement for the web browser control.\r\n\n\n### Describe the solution you'd like and alternatives you've considered\n\nFor .NET 7 and .NET 8 decorate all web- and html-related types as obsolete (`error: false`) with a link to directing developers use  [WebView2](https://docs.microsoft.com/microsoft-edge/webview2/) control instead.\r\nIn .NET 9 update the decorations to `error: true`, remove all implementations and leave only the public API that throw NIE.\n\n### Will this feature affect UI controls?\n\nThe affected controls will need to be made hidden from the designer.","Url":"https://github.com/dotnet/winforms/issues/6964","RelatedDescription":"Open issue \"Mark `WebBrowser` and all related (e.g., HTML* types) as obsolete\" (#6964)"},{"Id":"1191331892","IsPullRequest":true,"CreatedAt":"2022-04-04T06:45:37","Actor":"kant2002","Number":"6962","RawContent":null,"Title":"Remove Message.GetLParam since it is linker unfriendly","State":"open","Body":"That remove one warning from linker.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6962)","Url":"https://github.com/dotnet/winforms/pull/6962","RelatedDescription":"Open PR \"Remove Message.GetLParam since it is linker unfriendly\" (#6962)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-04-09T03:30:29.2010998Z","RunDurationInMilliseconds":532}