{"Data":{"GitHub":{"Issues":[{"Id":"762474574","IsPullRequest":true,"CreatedAt":"2020-12-11T16:01:31","Actor":"dotnet-maestro[bot]","Number":"4360","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:7ad8a074-d804-46e2-eafe-08d86aff023e)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 7ad8a074-d804-46e2-eafe-08d86aff023e\r\n- **Build**: 20201130.4\r\n- **Date Produced**: 11/30/2020 8:34 PM\r\n- **Commit**: 79333c52da3f213509ab79bd92924660e04e668c\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: [from 5.0.0-beta.20560.3 to 5.0.0-beta.20580.4][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 5.0.0-beta.20560.3 to 5.0.0-beta.20580.4][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 5.0.0-beta.20560.3 to 5.0.0-beta.20580.4][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 5.0.0-beta.20560.3 to 5.0.0-beta.20580.4][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 5.0.0-beta.20560.3 to 5.0.0-beta.20580.4][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/6f54e00...79333c5\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:7ad8a074-d804-46e2-eafe-08d86aff023e)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4360)","Url":"https://github.com/dotnet/winforms/pull/4360","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/arcade\" (#4360)"},{"Id":"762370557","IsPullRequest":false,"CreatedAt":"2020-12-11T14:02:48","Actor":"SylkoZ","Number":"4359","RawContent":null,"Title":"ToolStrip position changed after minimize and restore of form","State":"open","Body":"Hi,\r\n\r\nall WinForms toolstrip's will move to the upper left corner when the form is minimized and restored.\r\n\r\nThe ToolBarBug.zip is a very simple WinForms solution to reproduce this beavior.\r\n\r\n[ToolBarBug.zip](https://github.com/dotnet/winforms/files/5679507/ToolBarBug.zip)\r\n\r\na) Run the WinForm application with the two toolstips on the form.\r\nb) Remember the location of the two strips\r\nc) Mnimize the form to the task-bar of windows \r\nd) Re-show the form from task-bar\r\n\r\n--> ToolStrip positions moved.\r\n\r\nI think this is not the expected behavior of the toolstrips. \r\n\r\nKind regards\r\nSylko\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/4359","RelatedDescription":"Open issue \"ToolStrip position changed after minimize and restore of form\" (#4359)"},{"Id":"762332562","IsPullRequest":true,"CreatedAt":"2020-12-11T13:14:16","Actor":"dotnet-maestro[bot]","Number":"4358","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20201211.2\r\n- **Date Produced**: 12/11/2020 11:02 AM\r\n- **Commit**: 5e34c00f387d248ad963fecd8c5b6db5ca3b517e\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **System.CodeDom**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **System.Text.Json**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-alpha.1.20609.15 to 6.0.0-alpha.1.20611.2][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/34cae74...5e34c00\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4358)","Url":"https://github.com/dotnet/winforms/pull/4358","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/runtime\" (#4358)"},{"Id":"762322782","IsPullRequest":true,"CreatedAt":"2020-12-11T13:01:19","Actor":"dotnet-maestro[bot]","Number":"4357","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20201209.9\r\n- **Date Produced**: 12/10/2020 5:26 AM\r\n- **Commit**: 66c6b1b53965afd8ee5695a36b1909d006ae98af\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.20608.21 to 6.0.0-beta.20609.9][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.20608.21 to 6.0.0-beta.20609.9][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.20608.21 to 6.0.0-beta.20609.9][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.20608.21 to 6.0.0-beta.20609.9][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.20608.21 to 6.0.0-beta.20609.9][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/b984ce8...66c6b1b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4357)","Url":"https://github.com/dotnet/winforms/pull/4357","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#4357)"},{"Id":"761951705","IsPullRequest":false,"CreatedAt":"2020-12-11T06:27:42","Actor":"Marie-Shi","Number":"4356","RawContent":null,"Title":"[Accessibility]Color contrast ratio of Collapsed icon of Font node is less than 3:1","State":"open","Body":"* .NET Core Version: \r\nNet 6.0.100-alpha.1.20610.2\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**More Info:**\r\n1.\tThis issue can also repro on the below scenario:\r\nClick Tools->Options-> Text Editor-> C/C++ -> Code Style-> Linter, then click ‘Checkers’ to collapse it, and observe the Color contrast of collapsed icon.\r\n2.\tThis issue cannot repro on the expand icon of Font node.\r\n3.\tThere are 2 similar bugs: [1257160](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1257160), [1236121](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1236121).\r\n\r\n**Minimal repro:**\r\n1.\tInstall the Accessibility Insights from https://accessibilityinsights.io/en/downloads.\r\n2.\tExtract ‘CollapsedIcon_PropertyGrid_Core.zip’ and open it in VS.\r\n[CollapsedIcon_PropertyGrid_Core.zip](https://github.com/dotnet/winforms/files/5677354/CollapsedIcon_PropertyGrid_Core.zip)\r\n3.\tBuild and run this project.\r\n4.\tOpen the Accessibility Insights and select the Contrast of the directory on the left.\r\n5.\tFind the Font node, click on the color picker under Color2 and focus on the background of the collapsed icon.\r\n6.\tClick on the color picker under Color1 and focus on the collapsed icon.\r\n\r\n**Expected behavior:**\r\nColor contrast ratio of Collapsed icon of Font node should be greater than 3:1.\r\n\r\n**Actual behavior:**\r\nColor contrast ratio of Collapsed icon of Font node is 2.411:1, it is less than 3:1.\r\n![Core_actual](https://user-images.githubusercontent.com/45864017/101870380-72bfe080-3bbc-11eb-8d7f-c092d82bdd67.png)","Url":"https://github.com/dotnet/winforms/issues/4356","RelatedDescription":"Open issue \"[Accessibility]Color contrast ratio of Collapsed icon of Font node is less than 3:1\" (#4356)"},{"Id":"758302269","IsPullRequest":true,"CreatedAt":"2020-12-10T22:46:26","Actor":"manuelvalenzuela","Number":"4329","RawContent":null,"Title":"Setting a new TreeNode in a TreeNodeCollection will replace existing one","State":"closed","Body":"Fixes #3437\r\n\r\n## Proposed changes\r\n\r\n- Setter of method this[int index] of class TreeNodeCollection is replacing the existing TreeNode instead of adding it\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4329)","Url":"https://github.com/dotnet/winforms/pull/4329","RelatedDescription":"Closed or merged PR \"Setting a new TreeNode in a TreeNodeCollection will replace existing one\" (#4329)"},{"Id":"760976260","IsPullRequest":false,"CreatedAt":"2020-12-10T18:40:28","Actor":"LethiferousMoose","Number":"4349","RawContent":null,"Title":"DataBinding object property to static list in ComboBox is calling EndEdit on model containing said property.","State":"closed","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: .NET 5\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: Haven't tested yet, will try tomorrow.\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\nSo I've been Googling this for several hours and I haven't found much, so I'm not sure if I am doing it wrong or if this is a bug.\r\n\r\nI have a class with a string property, this property can be one of two values, for sake of example we will say A or B:\r\n```c#\r\ninternal class Model : IEditableObject\r\n{\r\n    public string TestString { get; set; } = \"A\";\r\n\r\n    public void BeginEdit()\r\n    {\r\n        Debug.WriteLine(\"BeginEdit\");\r\n    }\r\n\r\n    public void CancelEdit()\r\n    {\r\n        Debug.WriteLine(\"CancelEdit\");\r\n    }\r\n\r\n    public void EndEdit()\r\n    {\r\n        Debug.WriteLine(\"EndEdit\");\r\n    }\r\n}\r\n```\r\n\r\nIn my form I setup a databinding for `SelectedItem` on `TestString`:\r\n\r\n```c#\r\nBindingSource bindingSource = new BindingSource(new Model(), \"\");\r\ncomboBox1.DataSource = new BindingSource(new string[] { \"A\", \"B\" }, \"\"); // Tried this with and without a BindingSource, probably don't need it.\r\ncomboBox1.DataBindings.Add(\"SelectedItem\", bindingSource, \"TestString\");\r\n```\r\n\r\nThe issue is, whenever the combobox runs it's `OnValidation` call setup via the binding, it is calling `EndEdit` in `Model` even though the `DataSource` for the combobox is not the model, it's supposed to be a static list.\r\n\r\nEither I am missing something super obvious, or I've done something wrong, cause I am super confused. I followed the same pattern for `TextBoxes` and NumericUpDowns` and those work fine. Not sure yet if this only applies to .NET 5, I will check tomorrow.\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n\r\n**Expected behavior:**\r\nThe property on `Model` should be updated and editing should not be completed.\r\n\r\n**Minimal repro:**\r\nSee above code snippets.\r\n","Url":"https://github.com/dotnet/winforms/issues/4349","RelatedDescription":"Closed issue \"DataBinding object property to static list in ComboBox is calling EndEdit on model containing said property.\" (#4349)"},{"Id":"761231458","IsPullRequest":true,"CreatedAt":"2020-12-10T13:35:13","Actor":"dotnet-maestro[bot]","Number":"4355","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20201209.15\r\n- **Date Produced**: 12/10/2020 7:51 AM\r\n- **Commit**: 34cae7461f96a9c1a7574c72c436e309bf4031f4\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **System.CodeDom**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **System.Text.Json**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-alpha.1.20609.2 to 6.0.0-alpha.1.20609.15][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/53c1619...34cae74\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4355)","Url":"https://github.com/dotnet/winforms/pull/4355","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#4355)"},{"Id":"761221890","IsPullRequest":true,"CreatedAt":"2020-12-10T13:21:40","Actor":"dotnet-maestro[bot]","Number":"4353","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20201208.21\r\n- **Date Produced**: 12/9/2020 6:43 AM\r\n- **Commit**: b984ce874f048ec28e1067e9f47bdb183682df46\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.20607.11 to 6.0.0-beta.20608.21][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.20607.11 to 6.0.0-beta.20608.21][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.20607.11 to 6.0.0-beta.20608.21][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.20607.11 to 6.0.0-beta.20608.21][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.20607.11 to 6.0.0-beta.20608.21][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/ae4226e...b984ce8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4353)","Url":"https://github.com/dotnet/winforms/pull/4353","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#4353)"},{"Id":"761228408","IsPullRequest":true,"CreatedAt":"2020-12-10T13:10:33","Actor":"SergeySmirnov-Akvelon","Number":"4354","RawContent":null,"Title":"Fixed position of bounding rectangle for ComboBox items when drop down shows a scrollbar","State":"open","Body":"Fixes #4323\r\n\r\n## Proposed changes\r\n- Added logic that makes an index shift, which helps to draw a bounding rectangle with the correct position \r\n\r\n## Customer Impact\r\nBefore:\r\n![Issue-4354-beforefix](https://user-images.githubusercontent.com/23376742/101778060-66784c80-3b04-11eb-95ff-f6cc42ac3638.gif)\r\n\r\nAfter:\r\n![Issue-4354-afterfix](https://user-images.githubusercontent.com/23376742/101778079-6c6e2d80-3b04-11eb-82de-6f9175c4c32d.gif)\r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- Manually\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n- Inspector\r\n- Accessibility Insights\r\n \r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .NET Core 5.0.100-rc.2.20479.15\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4354)","Url":"https://github.com/dotnet/winforms/pull/4354","RelatedDescription":"Open PR \"Fixed position of bounding rectangle for ComboBox items when drop down shows a scrollbar\" (#4354)"},{"Id":"761035279","IsPullRequest":true,"CreatedAt":"2020-12-10T08:46:15","Actor":"SergeySmirnov-Akvelon","Number":"4352","RawContent":null,"Title":"Fixing issue with getting of textbox from DataGridViewTextBoxCell by Accessibility Insights (port to 3.1) ","State":"open","Body":"Fixes #3925\r\nBased on changes from #4124\r\n\r\n## Proposed changes\r\n- Added logic for restoring of parent during reattaching of EditingControlAccessibleObject. \r\n- Added missing validation for \"EditingControlAccessibleObject\" property.\r\n- Added unit tests\r\n\r\n## Customer Impact\r\nFixed issue with hanging of Accessibility Insights during getting of data about textbox from DataGridViewTextBoxCell\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- Manually \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n- Narrator\r\n- Inspector\r\n- Accessibility Insights\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .NET Core 5.0.100-rc.2.20479.15\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4352)","Url":"https://github.com/dotnet/winforms/pull/4352","RelatedDescription":"Open PR \"Fixing issue with getting of textbox from DataGridViewTextBoxCell by Accessibility Insights (port to 3.1) \" (#4352)"},{"Id":"761010755","IsPullRequest":true,"CreatedAt":"2020-12-10T08:07:39","Actor":"SergeySmirnov-Akvelon","Number":"4351","RawContent":null,"Title":"Fixing issue with getting of textbox from DataGridViewTextBoxCell by Accessibility Insights (port to 5.0)","State":"open","Body":"Fixes #3925\r\nBased on changes from #4124\r\n\r\n## Proposed changes\r\n- Added logic for restoring of parent during reattaching of EditingControlAccessibleObject. \r\n- Added unit tests\r\n\r\n## Customer Impact\r\nFixed issue with hanging of Accessibility Insights during getting of data about textbox from DataGridViewTextBoxCell\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- Manually \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n- Narrator\r\n- Inspector\r\n- Accessibility Insights\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .NET Core 5.0.100-rc.2.20479.15\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4351)","Url":"https://github.com/dotnet/winforms/pull/4351","RelatedDescription":"Open PR \"Fixing issue with getting of textbox from DataGridViewTextBoxCell by Accessibility Insights (port to 5.0)\" (#4351)"},{"Id":"760998370","IsPullRequest":true,"CreatedAt":"2020-12-10T07:46:37","Actor":"vladimir-krestov","Number":"4350","RawContent":null,"Title":"Implemented ScrollItemPattern for ComboBoxItemAccessibleObject","State":"open","Body":"\r\nFixes #4335\r\n\r\n## Proposed changes\r\n\r\n- Implement `ScrollIntoView` method of `ScrollItemPattern`\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Accessibility tools or users can scroll a combo box drop-down list to some item\r\n\r\n## Regression? \r\n\r\n- Yes (from .NET Framework 4.7.2)\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nTODO \r\n\r\n### After\r\n\r\nTODO\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- TODO: Unit tests\r\n- Manual testing\r\n- CTI\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n- Using Inspect\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- Microsoft Windows [Version 10.0.19042.685]\r\n- .NET v. 6.0.100-alpha.1.20554.10\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4350)","Url":"https://github.com/dotnet/winforms/pull/4350","RelatedDescription":"Open PR \"Implemented ScrollItemPattern for ComboBoxItemAccessibleObject\" (#4350)"},{"Id":"760189522","IsPullRequest":true,"CreatedAt":"2020-12-10T03:41:35","Actor":"weltkante","Number":"4342","RawContent":null,"Title":"Fix flaky test","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #4213 \r\n\r\n## Proposed changes\r\n\r\nDo not perform an exact check on the number of invalidations since the OS may perform additional invalidations. See issue for a detailed analysis of the scenario we are fixing.\r\n\r\n## Customer Impact\r\n\r\nnone, test-only\r\n\r\n## Regression? \r\n\r\nno\r\n\r\n## Risk\r\n\r\nnone, test-only\r\n\r\n### Before\r\n\r\nTest failed depending on last input, which was indeterministic due to multithreaded tests simulating user input.\r\n\r\n### After\r\n\r\nTest should be stable independent of input generated by other threads\r\n\r\n## Test methodology\r\n\r\nRun the test in the VS debugger and make sure its independent of keyboard/mouse input performed in the debugger\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4342)","Url":"https://github.com/dotnet/winforms/pull/4342","RelatedDescription":"Closed or merged PR \"Fix flaky test\" (#4342)"},{"Id":"760824196","IsPullRequest":false,"CreatedAt":"2020-12-10T02:21:01","Actor":"RussKie","Number":"4347","RawContent":null,"Title":"Flaky test: `RichTextBox_Text_GetWithHandle_ReturnsExpected`","State":"open","Body":"\r\n**Problem description:**\r\n\r\nFew variations, but generally the failing point is this:\r\n```\r\n    System.Windows.Forms.Tests.RichTextBoxTests.RichTextBox_Text_GetWithHandle_ReturnsExpected [FAIL]\r\n      Assert.Equal() Failure\r\n                 (pos 0)\r\n      Expected: a?b\r\n      Actual:   ?b\r\n                 (pos 0)\r\n      Stack Trace:\r\n        /_/src/System.Windows.Forms/tests/UnitTests/System/Windows/Forms/RichTextBoxTests.cs(6918,0): at System.Windows.Forms.Tests.RichTextBoxTests.RichTextBox_Text_GetWithHandle_ReturnsExpected()\r\n```\r\n\r\nThe test started failing repeatedly recently, in x86 and only on the public CI.\r\n\r\nObserved:\r\n- Reported https://github.com/dotnet/winforms/pull/4342#issuecomment-741741593\r\n- https://dev.azure.com/dnceng/public/_build/results?buildId=913908&view=results","Url":"https://github.com/dotnet/winforms/issues/4347","RelatedDescription":"Open issue \"Flaky test: `RichTextBox_Text_GetWithHandle_ReturnsExpected`\" (#4347)"},{"Id":"760799308","IsPullRequest":true,"CreatedAt":"2020-12-10T02:14:34","Actor":"cristianosuzuki77","Number":"4346","RawContent":null,"Title":"[loc] Latest translations","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nNew translations.\r\n\r\n\r\n## Proposed changes\r\n\r\n- \r\n- \r\n- \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4346)","Url":"https://github.com/dotnet/winforms/pull/4346","RelatedDescription":"Closed or merged PR \"[loc] Latest translations\" (#4346)"},{"Id":"760638016","IsPullRequest":false,"CreatedAt":"2020-12-09T20:14:31","Actor":"AlexVallat","Number":"4345","RawContent":null,"Title":"InputLanguage.LayoutName can return the wrong value when multiple layouts for a single language exist","State":"open","Body":"* .NET Core Version: 5\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n\r\n**Problem description:**\r\nWhen there are multiple keyboard layouts of the same language for a single language installed, InputLanguage.LayoutName returns the same value for all of them.\r\n\r\n**Expected behavior:**\r\nThe correct name of each keyboard layout should be returned\r\n\r\n**Minimal repro:**\r\nIn Windows 10, add the Bulgarian language (just basic typing), then add both the Bulgarian and Bulgarian (Phonetic Traditional) keyboard layouts. Use InputLanguage.InstalledInputLanguages to iterate over both layouts, note that the InputLanguage for both returns the same value of \"Bulgarian\"\r\n\r\n**Analysis**\r\nLooking at the code, this is because it's looking up substitutions in HKCU\\Substitutes but matching on language alone: https://github.com/dotnet/winforms/blob/a07615a219d84f7af24f639dc84f18427083f754/src/System.Windows.Forms/src/System/Windows/Forms/InputLanguage.cs#L180\r\n\r\nIf you look in the registry key, you can see values for both 00000402 and d0010402 which would both match Bulgarian language (0402), and therefore the same substitution is used for both layouts. I believe the fix is probably to search all substitutions and then check the Layout Id value of all target substitutes to see which one matches the correct layout Id.","Url":"https://github.com/dotnet/winforms/issues/4345","RelatedDescription":"Open issue \"InputLanguage.LayoutName can return the wrong value when multiple layouts for a single language exist\" (#4345)"},{"Id":"760320680","IsPullRequest":true,"CreatedAt":"2020-12-09T13:36:39","Actor":"dotnet-maestro[bot]","Number":"4344","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20201209.2\r\n- **Date Produced**: 12/9/2020 11:29 AM\r\n- **Commit**: 53c16198a8417e87e62c9df7c5e2e2602f9aa01d\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **System.CodeDom**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **System.Text.Json**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-alpha.1.20608.2 to 6.0.0-alpha.1.20609.2][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/3565463...53c1619\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4344)","Url":"https://github.com/dotnet/winforms/pull/4344","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#4344)"},{"Id":"760309511","IsPullRequest":true,"CreatedAt":"2020-12-09T13:31:48","Actor":"dotnet-maestro[bot]","Number":"4343","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20201207.11\r\n- **Date Produced**: 12/8/2020 3:15 AM\r\n- **Commit**: ae4226e0521b46075925444f3d733e05ae74dc0d\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.20604.2 to 6.0.0-beta.20607.11][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.20604.2 to 6.0.0-beta.20607.11][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.20604.2 to 6.0.0-beta.20607.11][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.20604.2 to 6.0.0-beta.20607.11][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.20604.2 to 6.0.0-beta.20607.11][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/ea609b8...ae4226e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4343)","Url":"https://github.com/dotnet/winforms/pull/4343","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#4343)"},{"Id":"759436727","IsPullRequest":true,"CreatedAt":"2020-12-09T07:31:28","Actor":"dotnet-maestro[bot]","Number":"4337","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20201208.2\r\n- **Date Produced**: 12/8/2020 11:44 AM\r\n- **Commit**: 3565463ecab1bd979a3ab8bd305f92f92507dffe\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **System.CodeDom**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **System.Text.Json**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-alpha.1.20606.6 to 6.0.0-alpha.1.20608.2][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/83d19de...3565463\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4337)","Url":"https://github.com/dotnet/winforms/pull/4337","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#4337)"},{"Id":"759807309","IsPullRequest":false,"CreatedAt":"2020-12-09T06:11:18","Actor":"vsfeedback","Number":"4339","RawContent":null,"Title":"ADD an Inputbox control in C#.net without having to reference the  VB.net library","State":"closed","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/idea/740240/add-an-inputbox-control-in-cnet-without-having-to.html)._\n\n---\n\n\n---\n### Original Comments\n\n#### Jane Wu [MSFT] on 9/20/2019, 01:16 AM: \n\n<p>Thank you for taking the time to provide your suggestion. We will do some preliminary checks to make sure we can proceed further.  We’ll provide an update once the issue has been triaged by the product team.</p>\n","Url":"https://github.com/dotnet/winforms/issues/4339","RelatedDescription":"Closed issue \"ADD an Inputbox control in C#.net without having to reference the  VB.net library\" (#4339)"},{"Id":"758318409","IsPullRequest":false,"CreatedAt":"2020-12-09T05:58:20","Actor":"vsfeedback","Number":"4330","RawContent":null,"Title":"Can't set size of the form","State":"closed","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/Cant-set-size-of-the-form/1278773)._\n\n---\n[severity:It's more difficult to complete my work]\r\nCan't set size of the form.\nWindows forms app.\n\nBefore form2. Show() command - it's OK - Size setted.\n\nBut just after step through form2. Show() - Width is setting up to 132.\n\n( Maximize box = false;\nMinimize box = false;\nBorder style = none; )\n\nWhat can do for set Width of form2 to e.g. 50 value ?\n\nThanks.\n\nScreenshot from VS - attached.\n\n---\n### Original Comments\n\n#### Feedback Bot on 12/7/2020, 04:08 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/winforms/issues/4330","RelatedDescription":"Closed issue \"Can't set size of the form\" (#4330)"},{"Id":"759899236","IsPullRequest":true,"CreatedAt":"2020-12-09T05:49:56","Actor":"JeremyKuhne","Number":"4340","RawContent":null,"Title":"Fix resize grip in DropDown editor","State":"closed","Body":"Order statics so sizing is correctly calculated. Change ControlPaint.DrawSizeGrip to use GDI+ to get fully applied transforms.\r\n\r\nFixes #4238\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4340)","Url":"https://github.com/dotnet/winforms/pull/4340","RelatedDescription":"Closed or merged PR \"Fix resize grip in DropDown editor\" (#4340)"},{"Id":"759905335","IsPullRequest":false,"CreatedAt":"2020-12-09T01:09:07","Actor":"JeremyKuhne","Number":"4341","RawContent":null,"Title":"Need to add helpers for validating Graphics rendering","State":"open","Body":"There are two components to this. The first is relatively easy- we need helpers and some examples to view GDI calls generated when rendering to a `Graphics` object. The second is more complicated- we need to be able to look at GDI+ records.\r\n\r\nRecording and playing back GDI records from a Graphics object can be done in a few ways:\r\n\r\n1. We can create a Graphics object around a Metafile HDC we create and just look at that HDC the way we're already doing it.\r\n2. We can create a System.Drawing MetaFile around a stream and create a Graphics object from that to record to. You can then grab the HENHMETAFILE from the MetaFile and enumerate the way we already are.\r\n\r\nEnumerating the GDI+ records is more complicated as the record headers and parsing need to be created from scratch by following the EMF+ specification.\r\n\r\nI've started fiddling with the lower level APIs with this here: https://github.com/JeremyKuhne/WInterop/blob/main/src/Tests/WInterop.Tests/GdiPlus/Metafiles.cs#L65 This code can be used to find the equivalent System.Drawing entry points.\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/4341","RelatedDescription":"Open issue \"Need to add helpers for validating Graphics rendering\" (#4341)"},{"Id":"759796568","IsPullRequest":false,"CreatedAt":"2020-12-08T21:30:41","Actor":"JeremyKuhne","Number":"4338","RawContent":null,"Title":"API Proposal: Add IDeviceContext overloads to ControlPaint","State":"open","Body":"### Summary\r\n\r\nPainting using `System.Drawing` (GDI+) has significant performance overhead over utilizing GDI. Internally WinForms has moved much of it's rendering to GDI (starting in .NET 2.0) and has provided some entry points with GDI via `IDeviceContext`. Adding overloads to `ControlPaint` methods will allow more performant rendering of custom controls. It allows direct use of paint event arguments in `OnPaint`  as they now expose `IDeviceContext` (as opposed to `e.Graphics`, which has huge overhead).\r\n\r\n### API\r\n\r\n``` C#\r\n    public sealed class ControlPaint\r\n    {\r\n        // Existing APIs that take Graphics\r\n        public static void DrawBorder(Graphics graphics, Rectangle bounds, Color color, ButtonBorderStyle style);\r\n        public static void DrawBorder(Graphics graphics, Rectangle bounds, Color leftColor, int leftWidth, ButtonBorderStyle leftStyle, Color topColor, int topWidth, ButtonBorderStyle topStyle, Color rightColor, int rightWidth, ButtonBorderStyle rightStyle, Color bottomColor, int bottomWidth, ButtonBorderStyle bottomStyle);\r\n        public static void DrawBorder3D(Graphics graphics, int x, int y, int width, int height);\r\n        public static void DrawBorder3D(Graphics graphics, int x, int y, int width, int height, Border3DStyle style);\r\n        public static void DrawBorder3D(Graphics graphics, int x, int y, int width, int height, Border3DStyle style, Border3DSide sides);\r\n        public static void DrawBorder3D(Graphics graphics, Rectangle rectangle);\r\n        public static void DrawBorder3D(Graphics graphics, Rectangle rectangle, Border3DStyle style);\r\n        public static void DrawBorder3D(Graphics graphics, Rectangle rectangle, Border3DStyle style, Border3DSide sides);\r\n        public static void DrawButton(Graphics graphics, int x, int y, int width, int height, ButtonState state);\r\n        public static void DrawButton(Graphics graphics, Rectangle rectangle, ButtonState state);\r\n        public static void DrawCaptionButton(Graphics graphics, int x, int y, int width, int height, CaptionButton button, ButtonState state);\r\n        public static void DrawCaptionButton(Graphics graphics, Rectangle rectangle, CaptionButton button, ButtonState state);\r\n        public static void DrawCheckBox(Graphics graphics, int x, int y, int width, int height, ButtonState state);\r\n        public static void DrawCheckBox(Graphics graphics, Rectangle rectangle, ButtonState state);\r\n        public static void DrawComboButton(Graphics graphics, int x, int y, int width, int height, ButtonState state);\r\n        public static void DrawComboButton(Graphics graphics, Rectangle rectangle, ButtonState state);\r\n        public static void DrawContainerGrabHandle(Graphics graphics, Rectangle bounds);\r\n        public static void DrawFocusRectangle(Graphics graphics, Rectangle rectangle);\r\n        public static void DrawFocusRectangle(Graphics graphics, Rectangle rectangle, Color foreColor, Color backColor);\r\n        public static void DrawGrabHandle(Graphics graphics, Rectangle rectangle, bool primary, bool enabled);\r\n        public static void DrawGrid(Graphics graphics, Rectangle area, Size pixelsBetweenDots, Color backColor);\r\n        public static void DrawLockedFrame(Graphics graphics, Rectangle rectangle, bool primary);\r\n        public static void DrawMenuGlyph(Graphics graphics, int x, int y, int width, int height, MenuGlyph glyph);\r\n        public static void DrawMenuGlyph(Graphics graphics, int x, int y, int width, int height, MenuGlyph glyph, Color foreColor, Color backColor);\r\n        public static void DrawMenuGlyph(Graphics graphics, Rectangle rectangle, MenuGlyph glyph);\r\n        public static void DrawMenuGlyph(Graphics graphics, Rectangle rectangle, MenuGlyph glyph, Color foreColor, Color backColor);\r\n        public static void DrawMixedCheckBox(Graphics graphics, int x, int y, int width, int height, ButtonState state);\r\n        public static void DrawMixedCheckBox(Graphics graphics, Rectangle rectangle, ButtonState state);\r\n        public static void DrawRadioButton(Graphics graphics, int x, int y, int width, int height, ButtonState state);\r\n        public static void DrawRadioButton(Graphics graphics, Rectangle rectangle, ButtonState state);\r\n        public static void DrawScrollButton(Graphics graphics, int x, int y, int width, int height, ScrollButton button, ButtonState state);\r\n        public static void DrawScrollButton(Graphics graphics, Rectangle rectangle, ScrollButton button, ButtonState state);\r\n        public static void DrawSelectionFrame(Graphics graphics, bool active, Rectangle outsideRect, Rectangle insideRect, Color backColor);\r\n        public static void DrawSizeGrip(Graphics graphics, Color backColor, int x, int y, int width, int height);\r\n        public static void DrawSizeGrip(Graphics graphics, Color backColor, Rectangle bounds);\r\n        public static void DrawVisualStyleBorder(Graphics graphics, Rectangle bounds);\r\n\r\n        // Existing, IDeviceContext doesn't make sense as this also takes Image\r\n        public static void DrawImageDisabled(Graphics graphics, Image image, int x, int y, Color background);\r\n\r\n        // Existing, already has IDeviceContext overload\r\n        public static void DrawStringDisabled(Graphics graphics, string s, Font font, Color color, RectangleF layoutRectangle, StringFormat format);\r\n\r\n        // Proposed IDeviceContext overloads\r\n        public static void DrawBorder(IDeviceContext deviceContext, Rectangle bounds, Color color, ButtonBorderStyle style);\r\n        public static void DrawBorder(IDeviceContext deviceContext, Rectangle bounds, Color leftColor, int leftWidth, ButtonBorderStyle leftStyle, Color topColor, int topWidth, ButtonBorderStyle topStyle, Color rightColor, int rightWidth, ButtonBorderStyle rightStyle, Color bottomColor, int bottomWidth, ButtonBorderStyle bottomStyle);\r\n        public static void DrawBorder3D(IDeviceContext deviceContext, int x, int y, int width, int height);\r\n        public static void DrawBorder3D(IDeviceContext deviceContext, int x, int y, int width, int height, Border3DStyle style);\r\n        public static void DrawBorder3D(IDeviceContext deviceContext, int x, int y, int width, int height, Border3DStyle style, Border3DSide sides);\r\n        public static void DrawBorder3D(IDeviceContext deviceContext, Rectangle rectangle);\r\n        public static void DrawBorder3D(IDeviceContext deviceContext, Rectangle rectangle, Border3DStyle style);\r\n        public static void DrawBorder3D(IDeviceContext deviceContext, Rectangle rectangle, Border3DStyle style, Border3DSide sides);\r\n        public static void DrawButton(IDeviceContext deviceContext, int x, int y, int width, int height, ButtonState state);\r\n        public static void DrawButton(IDeviceContext deviceContext, Rectangle rectangle, ButtonState state);\r\n        public static void DrawCaptionButton(IDeviceContext deviceContext, int x, int y, int width, int height, CaptionButton button, ButtonState state);\r\n        public static void DrawCaptionButton(IDeviceContext deviceContext, Rectangle rectangle, CaptionButton button, ButtonState state);\r\n        public static void DrawCheckBox(IDeviceContext deviceContext, int x, int y, int width, int height, ButtonState state);\r\n        public static void DrawCheckBox(IDeviceContext deviceContext, Rectangle rectangle, ButtonState state);\r\n        public static void DrawComboButton(IDeviceContext deviceContext, int x, int y, int width, int height, ButtonState state);\r\n        public static void DrawComboButton(IDeviceContext deviceContext, Rectangle rectangle, ButtonState state);\r\n        public static void DrawContainerGrabHandle(IDeviceContext deviceContext, Rectangle bounds);\r\n        public static void DrawFocusRectangle(IDeviceContext deviceContext, Rectangle rectangle);\r\n        public static void DrawFocusRectangle(IDeviceContext deviceContext, Rectangle rectangle, Color foreColor, Color backColor);\r\n        public static void DrawGrabHandle(IDeviceContext deviceContext, Rectangle rectangle, bool primary, bool enabled);\r\n        public static void DrawGrid(IDeviceContext deviceContext, Rectangle area, Size pixelsBetweenDots, Color backColor);\r\n        public static void DrawLockedFrame(IDeviceContext deviceContext, Rectangle rectangle, bool primary);\r\n        public static void DrawMenuGlyph(IDeviceContext deviceContext, int x, int y, int width, int height, MenuGlyph glyph);\r\n        public static void DrawMenuGlyph(IDeviceContext deviceContext, int x, int y, int width, int height, MenuGlyph glyph, Color foreColor, Color backColor);\r\n        public static void DrawMenuGlyph(IDeviceContext deviceContext, Rectangle rectangle, MenuGlyph glyph);\r\n        public static void DrawMenuGlyph(IDeviceContext deviceContext, Rectangle rectangle, MenuGlyph glyph, Color foreColor, Color backColor);\r\n        public static void DrawMixedCheckBox(IDeviceContext deviceContext, int x, int y, int width, int height, ButtonState state);\r\n        public static void DrawMixedCheckBox(IDeviceContext deviceContext, Rectangle rectangle, ButtonState state);\r\n        public static void DrawRadioButton(IDeviceContext deviceContext, int x, int y, int width, int height, ButtonState state);\r\n        public static void DrawRadioButton(IDeviceContext deviceContext, Rectangle rectangle, ButtonState state);\r\n        public static void DrawScrollButton(IDeviceContext deviceContext, int x, int y, int width, int height, ScrollButton button, ButtonState state);\r\n        public static void DrawScrollButton(IDeviceContext deviceContext, Rectangle rectangle, ScrollButton button, ButtonState state);\r\n        public static void DrawSelectionFrame(IDeviceContext deviceContext, bool active, Rectangle outsideRect, Rectangle insideRect, Color backColor);\r\n        public static void DrawSizeGrip(IDeviceContext deviceContext, Color backColor, int x, int y, int width, int height);\r\n        public static void DrawSizeGrip(IDeviceContext deviceContext, Color backColor, Rectangle bounds);\r\n        public static void DrawVisualStyleBorder(IDeviceContext deviceContext, Rectangle bounds);\r\n    }\r\n```\r\n\r\n### Details\r\n\r\n* Parameter validation will match existing methods\r\n* `Color` alpha will be ignored, as that requires GDI+ (we could throw, but that wouldn't fit with other APIs we currently have)\r\n* Drawing will always be done with GDI, even if the passed in `IDeviceContext` is a `Graphics` object\r\n* As with other usages we will apply `Graphics` offset and clipping if `IDeviceContext` is a `Graphics` object\r\n* Implementation will come in phases as some of these APIs are more straight-forward than others","Url":"https://github.com/dotnet/winforms/issues/4338","RelatedDescription":"Open issue \"API Proposal: Add IDeviceContext overloads to ControlPaint\" (#4338)"},{"Id":"759052384","IsPullRequest":false,"CreatedAt":"2020-12-08T04:30:17","Actor":"The-MAZZTer","Number":"4336","RawContent":null,"Title":"In Designer, Nesting a TreeView in a UserControl in a second TabPage on a Form hangs DesignServerTools.exe","State":"open","Body":"Apologies if this is not the right repo to post this in.\r\n\r\n[Edit: I found instruction to send feedback using the VS Feedback tool in Visual Studio and I have done so, please close this issue here if it is not appropriate for this repo.]\r\n\r\n* .NET Core Version: \r\nMicrosoft.NETCore.App 5.0.0\r\nMicrosoft.WindowsDesktop.App 5.0.0\r\nSDK 5.0.100\r\nVisual Studio Community Version 16.8.2\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\nIn the designer, upon activating a second tab page containing a User Control with a TreeView in it, VS hangs.\r\n\r\n**Expected behavior:**\r\nVisual Studio does not hang and the designer continues to work normally.\r\n\r\n**Minimal repro:**\r\n[SetFocusBug.zip](https://github.com/dotnet/winforms/files/5656851/SetFocusBug.zip)\r\n\r\nThis project was created with the following steps:\r\n* Create a Windows Form App (.NET) project.\r\n* Open Form1 in the designer.\r\n* Add a TabControl and keep the two tabs.\r\n* Add a User Control to the project. Open it in design mode.\r\n* Add a TreeView to the User Control and build the project to compile it.\r\n* Add the User Control to the second TabPage on the Form.\r\n* Save form.\r\n* Switch to the first TabPage and then back to the second and the hang should occur.\r\n* Upon recovering, simply reopen the form and switch to the second TabPage to cause the hang again (assuming the save went through).\r\n\r\nIf using the attached project, build before opening the form (hang does not happen until build is made and designer reopened).\r\n\r\nYou may also need to rebuild in that VS session, or with the designer open. I am seeing inconsistent behavior where the designer does not show the User Control at all after I open the project in a fresh session of VS.\r\n\r\nThese variants of the project do NOT produce any hangs or other undesirable behavior:\r\n* UserControl does not contain TreeView\r\n* TreeView directly on TabPage without user control\r\n* UserControl with TreeView on first TabPage (at least, having it visible when the form loads does not hang)\r\n\r\nI attempted to debug both VS and DesignServerTools but I am not sure exactly what I am looking at.\r\n\r\nVS' UI thread seems to hang waiting for a response from the DesignServerTools for a Hit Test on the designer or a control or something.\r\n\r\nOne of the DesignServerTools threads that stuck out to me seems to get struck calling the native SetFocus WinAPI whenever I happened to pause it. It seems to call it but the call never completes if I try to step over it.\r\n\r\nKilling the DesignServerTools process tends to allow VS to recover so I believe the problem lies with DesignServerTools.","Url":"https://github.com/dotnet/winforms/issues/4336","RelatedDescription":"Open issue \"In Designer, Nesting a TreeView in a UserControl in a second TabPage on a Form hangs DesignServerTools.exe\" (#4336)"},{"Id":"758998412","IsPullRequest":false,"CreatedAt":"2020-12-08T02:12:13","Actor":"Olina-Zhang","Number":"4335","RawContent":null,"Title":"AccessibilityInsights: ComboBox items should support ScrollItem Pattern when list shows scrollbar","State":"open","Body":"* .NET Core Version: \r\n6.0.100-alpha.1.20603.2\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes,\r\nThis is a regression issue, can repro in .Net 4.8 for comboBox with all dropdownstyle values, and in .Net 4.7.2, just comboBox items with comboBox's dropdownstyle: simple can repro this issue.\r\n\r\n**Minimal repro:**\r\n1. Create a Winforms .Net Core app with 3 comboBox controls, set their's DropDownHeight property to show scrollbar for comboBox list\r\nOr open attached sample project and run Core app directly\r\n[CoreTesting4.zip](https://github.com/dotnet/winforms/files/5656313/CoreTesting4.zip)\r\n2. Use Accessibility Insights or Inspect tool to test ComboBox dropdown items\r\n\r\n**Actual behavior:**\r\nAccessibility Insights detects errors for comboBox items, which don't support ScrollItem Pattern\r\n![image](https://user-images.githubusercontent.com/26474449/101428363-84df1c00-393b-11eb-8429-396ec254c352.png)\r\n\r\n**Expected behavior:**\r\nComboBox items for comboBox's all dropdownstyles support ScrollItem Pattern\r\n","Url":"https://github.com/dotnet/winforms/issues/4335","RelatedDescription":"Open issue \"AccessibilityInsights: ComboBox items should support ScrollItem Pattern when list shows scrollbar\" (#4335)"},{"Id":"758835875","IsPullRequest":true,"CreatedAt":"2020-12-07T23:21:08","Actor":"Tanya-Solyanik","Number":"4334","RawContent":null,"Title":"ensure that editor config follows runtime coding style (vars when type is obvious)","State":"closed","Body":"From https://github.com/dotnet/runtime/blob/master/docs/coding-guidelines/coding-style.md:\r\n`We only use var when it's obvious what the variable type is (e.g. var stream = new FileStream(...) not var stream = OpenStandardInput()).`\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4334)","Url":"https://github.com/dotnet/winforms/pull/4334","RelatedDescription":"Closed or merged PR \"ensure that editor config follows runtime coding style (vars when type is obvious)\" (#4334)"},{"Id":"758725189","IsPullRequest":true,"CreatedAt":"2020-12-07T20:17:15","Actor":"cristianosuzuki77","Number":"4332","RawContent":null,"Title":"Loc checkin","State":"closed","Body":"Latest new translations and few translations updates.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4332)","Url":"https://github.com/dotnet/winforms/pull/4332","RelatedDescription":"Closed or merged PR \"Loc checkin\" (#4332)"},{"Id":"758394144","IsPullRequest":true,"CreatedAt":"2020-12-07T12:05:45","Actor":"SergeySmirnov-Akvelon","Number":"4331","RawContent":null,"Title":"Refactored ListBox.ItemArray","State":"closed","Body":"Based on changes from #4193 \r\n\r\n## Proposed changes\r\n- Made a separate \"ItemArray\" classes out of a \"ListBox.ItemArray\" subclasses\r\n- Refactored ListBox.ItemArray\r\n- Enabled NRT\r\n- Added usage of a list of objects instead of an array of objects\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n- No \r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .NET Core 5.0.100-rc.2.20479.15\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4331)","Url":"https://github.com/dotnet/winforms/pull/4331","RelatedDescription":"Closed or merged PR \"Refactored ListBox.ItemArray\" (#4331)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-12-12T05:30:47.6846404Z","RunDurationInMilliseconds":655}