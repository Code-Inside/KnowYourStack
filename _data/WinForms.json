{"Data":{"GitHub":{"Issues":[{"Id":"1083843412","IsPullRequest":true,"CreatedAt":"2021-12-18T14:24:50","Actor":"dotnet-bot","Number":"6365","RawContent":null,"Title":"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 1519865","State":"open","Body":"This is the pull request automatically created by the OneLocBuild task in the build process to check-in localized files generated based upon translation source files (.lcl files) handed-back from the downstream localization pipeline. If there are issues in translations, visit https://aka.ms/ceLocBug and log bugs for fixes. The OneLocBuild wiki is https://aka.ms/onelocbuild and the localization process in general is documented at https://aka.ms/AllAboutLoc.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6365)","Url":"https://github.com/dotnet/winforms/pull/6365","RelatedDescription":"Open PR \"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 1519865\" (#6365)"},{"Id":"1083829453","IsPullRequest":true,"CreatedAt":"2021-12-18T13:43:10","Actor":"dotnet-maestro[bot]","Number":"6363","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20211217.4\r\n- **Date Produced**: December 17, 2021 10:25:38 PM UTC\r\n- **Commit**: 78659a1d4831ce9d62ea817fe13e4e2e70a52961\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.21615.1 to 7.0.0-beta.21617.4][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.21615.1 to 7.0.0-beta.21617.4][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21615.1 to 7.0.0-beta.21617.4][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.21615.1 to 7.0.0-beta.21617.4][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.21615.1 to 7.0.0-beta.21617.4][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21615.1 to 7.0.0-beta.21617.4][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/943d03f...78659a1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6363)","Url":"https://github.com/dotnet/winforms/pull/6363","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6363)"},{"Id":"1083832493","IsPullRequest":false,"CreatedAt":"2021-12-18T13:24:45","Actor":"memoarfaa","Number":"6364","RawContent":null,"Title":"Windows 11  breaking Development compatibility","State":"open","Body":"\r\n\r\n* .NET Core Version: \r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?:  Yes \r\n\r\n**Problem description:**\r\n\r\n1.  MDIParent Window  that have Custom WM_NCPAINT Windows Message or  its  DWMNCRENDERINGPOLICY set to DWMNCRP_DISABLED will add then new  Snap layouts in maximize button to Mdi Child Window (how  a Child Window can layout all Desktop Windows and layout its parent in Desktop  );\r\n\r\n![2021-12-18_14-47-33](https://user-images.githubusercontent.com/12494184/146642641-b4c32095-58ea-411a-aefe-7a6b0d98dbe7.png)\r\n<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n\r\n\r\n\r\n2.  DwmExtendFrameIntoClientArea  Wrong MARGINS \r\n\r\nDwmExtendFrameIntoClientArea will Extend  Frame to both Client and Non Client area\r\n\r\n\r\n`  [DllImport(\"dwmapi.dll\")]\r\npublic static extern int DwmExtendFrameIntoClientArea(IntPtr hWnd, ref MARGINS pMarInset);\r\n\r\n   [StructLayout(LayoutKind.Sequential)]\r\n        public struct MARGINS\r\n        {\r\n            internal int cxLeftWidth;\r\n\r\n            internal int cxRightWidth;\r\n\r\n            internal int cyTopHeight;\r\n\r\n            internal int cyBottomHeight;\r\n\r\n         \r\n            public MARGINS(int cxLeftWidth, int cxRightWidth, int cyTopHeight, int cyBottomHeight) : this()\r\n            {\r\n                this.cxLeftWidth = cxRightWidth;\r\n                this.cxRightWidth = cxRightWidth;\r\n                this.cyTopHeight = cyTopHeight;\r\n                this.cyBottomHeight = cyBottomHeight;\r\n            }\r\n\r\n           \r\n        }\r\n          MARGINS m = new MARGINS(8, 8, 31, 8);\r\n            DwmExtendFrameIntoClientArea(Handle,ref m); `\r\n\r\n\r\nwindows 11 \r\n![2021-12-18_15-39-35](https://user-images.githubusercontent.com/12494184/146643316-81785e0b-c31a-45eb-bd66-f7e1a6bb6a2c.png)\r\nWindows 10 and lower\r\n![2021-12-18_15-59-28](https://user-images.githubusercontent.com/12494184/146643657-1c554194-9343-4c68-8a3b-6fe46f383221.png)\r\n\r\n**Expected behavior:**\r\n<!--\r\n \r\n -->\r\n\r\n**Minimal repro:**\r\n<!--\r\n    Provide step by step guide to repro this issue.  Incase repro steps are complex, It would be helpful if \r\n    you attach a GIF with repro actions. Attaching a sample app to repro the issue will help speed up the \r\n    resolution. \r\n -->\r\n","Url":"https://github.com/dotnet/winforms/issues/6364","RelatedDescription":"Open issue \"Windows 11  breaking Development compatibility\" (#6364)"},{"Id":"1083768405","IsPullRequest":false,"CreatedAt":"2021-12-18T07:16:58","Actor":"roland5572","Number":"6362","RawContent":null,"Title":"Long text causes ToolStripLabel not to display any text.","State":"open","Body":"If you have a long text that needs to be displayed on the ToolStripLabel control, when your form interface is not wide enough, ToolStripLabel will hide all the text instead of using ellipsis to replace the content that is not wide enough.\r\n\r\nIf no text is displayed, it looks like the entire control is missing.\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.toolstriplabel\r\n\r\nTest Code:\r\n.net 6.0\r\n\r\n```\r\nnamespace ToolStripLabelTest\r\n{\r\n    internal static class Program\r\n    {\r\n        [STAThread]\r\n        static void Main()\r\n        {\r\n            ApplicationConfiguration.Initialize();\r\n            Application.Run(CreateForm());\r\n        }\r\n\r\n        private static Form CreateForm()\r\n        {\r\n            var frm = new Form()\r\n            {\r\n                Width = 600,\r\n                Height = 400,\r\n\r\n                StartPosition = FormStartPosition.CenterScreen,\r\n            };\r\n\r\n            var toolStrip = new ToolStrip();\r\n\r\n            var label = new ToolStripLabel()\r\n            {\r\n                Text = \"long application message text long application message text long application message text long application message text long application message text\",\r\n            };\r\n\r\n            toolStrip.Items.Add(label);\r\n            frm.Controls.Add(toolStrip);\r\n\r\n            return frm;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nTest Result:\r\n\r\n![001](https://user-images.githubusercontent.com/88176616/146634770-e45c5983-7c55-4b9b-980e-61b04e0db130.png)\r\n\r\n![002](https://user-images.githubusercontent.com/88176616/146634771-c81152e4-7713-466b-9b7e-d1285d168345.png)\r\n\r\nExpected effect:\r\n\r\nWhen the width of ToolStripLabel is not enough, this control can use ellipsis to display content that is not wide enough.\r\n\r\np.s:\r\n\r\nIf you don't see the issue, it may be that your computer font is different from the font I used. Adjust the width of the Form to 500, or 400, and it can be displayed.\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6362","RelatedDescription":"Open issue \"Long text causes ToolStripLabel not to display any text.\" (#6362)"},{"Id":"1083691776","IsPullRequest":false,"CreatedAt":"2021-12-18T00:00:18","Actor":"KnightNine","Number":"6361","RawContent":null,"Title":"Arrow navigation always prioritizes parent `DataGridView` control regardless of what child control is focused.","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n6.0\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**Problem description:**\r\nThe issue is that I cannot use arrows for navigating through any of my controls that are children to my parent DataGridView.\r\nadding a `TextBox`, another `DataGridView`, or any control that uses the arrow keys for navigation in any way to the Controls of a `DataGridView` means that any use of the arrow keys causes that parent `DataGridView` to take priority (as if it was in focus even when it isnâ€™t) so you cannot use the arrow keys for any children controls.\r\n\r\n\r\n\r\n**Expected behavior:**\r\nArrow keys should control the `Control` that is in focus and not the parent of that control\r\n\r\n\r\n**Minimal repro:**\r\n[Arrow Control Test.zip](https://github.com/dotnet/winforms/files/7738333/Arrow.Control.Test.zip)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6361","RelatedDescription":"Open issue \"Arrow navigation always prioritizes parent `DataGridView` control regardless of what child control is focused.\" (#6361)"},{"Id":"1083461314","IsPullRequest":false,"CreatedAt":"2021-12-17T17:15:06","Actor":"tgriff","Number":"6359","RawContent":null,"Title":"[Accessibility] Narrator announces NumericUpDown as \"edit\" instead of \"spinbutton\"","State":"open","Body":"* .NET Core Version: \r\nNone\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes, .NET Framework 4.8.1\r\n\r\n**Problem description:**\r\nNarrator announces NumericUpDown as \"edit\" instead of \"spinbutton\". I have set the AccessibleRole = SpinButton but the control is still announced as \"edit\". Note that this was reported to me by our internal accessibility test team and I am filing this issue per their guidance.\r\n\r\n**Expected behavior:**\r\nNarrator should announce NumericUpDown as \"spinbutton\".\r\n\r\n**Minimal repro:**\r\nHere is a gif of the issue, using Narrator Buddy to show what Narrator is saying (note that it's double-logging, Narrator only says each line once).\r\n![repro](https://user-images.githubusercontent.com/34492055/146582280-b13621b0-2dba-4898-b98e-6b069f6e3d72.gif)\r\n\r\nHere is a .NET Framework 4.8.1 WinForms project that produces the issue:\r\n[SpinButtonRepro.zip](https://github.com/dotnet/winforms/files/7736681/SpinButtonRepro.zip)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6359","RelatedDescription":"Open issue \"[Accessibility] Narrator announces NumericUpDown as \"edit\" instead of \"spinbutton\"\" (#6359)"},{"Id":"1082489851","IsPullRequest":true,"CreatedAt":"2021-12-16T17:58:45","Actor":"gpetrou","Number":"6358","RawContent":null,"Title":"Enable nullability in ToolStripItemAccessibleObject","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripItemAccessibleObject.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6358)","Url":"https://github.com/dotnet/winforms/pull/6358","RelatedDescription":"Open PR \"Enable nullability in ToolStripItemAccessibleObject\" (#6358)"},{"Id":"1082459564","IsPullRequest":true,"CreatedAt":"2021-12-16T17:22:32","Actor":"gpetrou","Number":"6357","RawContent":null,"Title":"Enable nullability in DomainUpDown accessible objects","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in DomainUpDown accessible objects.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6357)","Url":"https://github.com/dotnet/winforms/pull/6357","RelatedDescription":"Open PR \"Enable nullability in DomainUpDown accessible objects\" (#6357)"},{"Id":"1082281356","IsPullRequest":true,"CreatedAt":"2021-12-16T14:46:09","Actor":"jbhensley","Number":"6356","RawContent":null,"Title":"Do not attempt to cache CheckedItems if in virtual mode","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #4042 \r\n\r\n\r\n## Proposed changes\r\n\r\n`ListView` attempts to cache `CheckedItems` when setting `CheckBoxes` to `false`. This results in an `InvalidOperationException` in `CheckedItems.Count` when the `ListView` is in virtual mode. Since `CheckedItems` cannot be used in virtual mode anyway, the fix is to skip this caching logic when `VirtualMode == true`.\r\n\r\nNote: there was a unit test that ensured this behavior. It's not clear why since it seems undesirable. The error is trivial to repro. All you have to do is drop a new `ListView` into the forms designer, set `VirtualMode` to `true`,  and then try toggling `CheckBoxes` to `true` and then back to `false`, all within the properties tool window. The existing unit test was modified to ensure the error does not happen.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\nCustomer should be able to toggle `CheckBoxes` from `true` to `false` when in virtual mode.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\nCan't identify any\r\n\r\n<!-- end TELL-MODE -->\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Unit test ensures functionality \n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6356)","Url":"https://github.com/dotnet/winforms/pull/6356","RelatedDescription":"Open PR \"Do not attempt to cache CheckedItems if in virtual mode\" (#6356)"},{"Id":"1082178380","IsPullRequest":true,"CreatedAt":"2021-12-16T13:54:40","Actor":"dotnet-maestro[bot]","Number":"6355","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20211215.1\r\n- **Date Produced**: December 15, 2021 4:26:14 PM UTC\r\n- **Commit**: 943d03f62955c771825dfa1f1bdeb8f853a2d7dd\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.21614.1 to 7.0.0-beta.21615.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.21614.1 to 7.0.0-beta.21615.1][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21614.1 to 7.0.0-beta.21615.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.21614.1 to 7.0.0-beta.21615.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.21614.1 to 7.0.0-beta.21615.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21614.1 to 7.0.0-beta.21615.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/cc0fa94...943d03f\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6355)","Url":"https://github.com/dotnet/winforms/pull/6355","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6355)"},{"Id":"1082036400","IsPullRequest":true,"CreatedAt":"2021-12-16T10:43:51","Actor":"SergeySmirnov-Akvelon","Number":"6354","RawContent":null,"Title":"Fixing NRE when the user press the left / right arrow in ListView","State":"open","Body":"Fixes #6353\r\n\r\n## Proposed changes\r\n- The issue is reproduced because we are trying to access a `ListViewGroup` that the `ListViewItem` may not contain it.\r\n- Added a condition so that the code for working with `ListViewGroups` is called only when the `ListViewGroups` are enabled (`GroupsEnabled` property).\r\n- Fixed condition for cases when the `Group` property has `null` value. \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n**Before fix:**\r\n![Issue-6353](https://user-images.githubusercontent.com/23376742/146353359-81c3ec2f-5d81-4066-82e6-1cdc8e918861.gif)\r\n\r\n**After fix:**\r\n![Issue-6353_AfterFix](https://user-images.githubusercontent.com/23376742/146356548-d77d6290-fa60-4370-ac80-e88297e18a15.gif)\r\n\r\n## Regression? \r\n- Yes (from #5960)\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- Unit tests\r\n- CTI team\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.1348]\r\n- .NET Core SDK: 7.0.0-alpha.1.21576.4\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6354)","Url":"https://github.com/dotnet/winforms/pull/6354","RelatedDescription":"Open PR \"Fixing NRE when the user press the left / right arrow in ListView\" (#6354)"},{"Id":"1082010882","IsPullRequest":false,"CreatedAt":"2021-12-16T10:18:19","Actor":"SergeySmirnov-Akvelon","Number":"6353","RawContent":null,"Title":"An exception appears when the user press the left / right arrow in the ListView without ListViewGroup","State":"open","Body":".NET Core Version: \r\n - NET Core SDK: 7.0.0-alpha.1.21606.7\r\n\r\nHave you experienced this same bug with .NET Framework?: \r\n- Yes (from #5960)\r\n\r\n**Problem description:**\r\n\r\n1. Create a `Form` with a `ListView`.\r\n2. Add an `ListViewItem` to the `ListView`.\r\n3. Run the app.\r\n4. Press the left / right arrow.\r\n\r\n**Actual behavior:**\r\nUser sees an exception.\r\n![Issue-6353](https://user-images.githubusercontent.com/23376742/146353359-81c3ec2f-5d81-4066-82e6-1cdc8e918861.gif)\r\n\r\n**Expected behavior:**\r\nUser should not see exception.","Url":"https://github.com/dotnet/winforms/issues/6353","RelatedDescription":"Open issue \"An exception appears when the user press the left / right arrow in the ListView without ListViewGroup\" (#6353)"},{"Id":"1081927873","IsPullRequest":true,"CreatedAt":"2021-12-16T08:53:58","Actor":"SergeySmirnov-Akvelon","Number":"6352","RawContent":null,"Title":"Fixing issue with getting ListViewItem.AccessibilityObject when ListView does not exist","State":"open","Body":"Fixes #6230 \r\n\r\n## Proposed changes\r\n- The issue is reproduced because we have cached the `ListViewItem.AccessibilityObject`. After the changes in #4910, we added logic that, with each call to the `AccessibilityObject` property, checked that the `ListView` exists and, if absent, threw an exception. Now we return null as a `ListViewItem.AccessibilityObject` instead of returning an exception.\r\n\r\n- Also, after the focused `ListViewItem` is removed, it remains cached in the `FocusedItem` property. It also forces the Accessibility tool to try to retrieve the data of the `ListViewItem` that is not displayed. As a fix, a logic was added to reset the Focused flag from the `ListViewItem`.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n**Before fix:**\r\n![Issue-6230](https://user-images.githubusercontent.com/23376742/144040481-714f76ab-e33b-46dc-bdcc-d98e00346f1d.gif)\r\n\r\n**After fix:**\r\n![Issue-6230-SecondFix](https://user-images.githubusercontent.com/23376742/146338936-c1449c40-5a78-4c2b-8d4a-2f00036f44be.gif)\r\n\r\n## Regression? \r\n- Yes (from #4910)\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test methodology\r\n- Manual testing\r\n- CTI team\r\n- Unit tests\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n- Inspect \r\n- Narrator\r\n- Accessibility Insights\r\n\r\n## Test environment(s)\r\n- Microsoft Windows [Version 10.0.19041.1348]\r\n- .NET Core SDK: 7.0.0-alpha.1.21576.4\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6352)","Url":"https://github.com/dotnet/winforms/pull/6352","RelatedDescription":"Open PR \"Fixing issue with getting ListViewItem.AccessibilityObject when ListView does not exist\" (#6352)"},{"Id":"1080949795","IsPullRequest":true,"CreatedAt":"2021-12-16T03:11:46","Actor":"ArtemTatarinov","Number":"6350","RawContent":null,"Title":"Adding MDI test cases to internal test app","State":"closed","Body":"Added test cases from the PR #6239 as discussed in this comment https://github.com/dotnet/winforms/pull/6239#pullrequestreview-822243910.\r\n\r\n![image](https://user-images.githubusercontent.com/87859299/146180549-76e681b1-c2f0-4231-97a5-4ed662b7b39d.png)\r\n![image](https://user-images.githubusercontent.com/87859299/146180629-df6f9ef8-ae97-4452-9bee-ee4a24034d7e.png)\r\n![image](https://user-images.githubusercontent.com/87859299/146180665-1fd6caf8-9204-4e53-bcff-afdbcbdb87b9.png)\r\n![image](https://user-images.githubusercontent.com/87859299/146180820-1c7e740e-8e8a-4eee-a0aa-e96c363830ef.png)\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6350)","Url":"https://github.com/dotnet/winforms/pull/6350","RelatedDescription":"Closed or merged PR \"Adding MDI test cases to internal test app\" (#6350)"},{"Id":"1081021148","IsPullRequest":true,"CreatedAt":"2021-12-15T13:49:02","Actor":"dotnet-maestro[bot]","Number":"6351","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20211214.1\r\n- **Date Produced**: December 14, 2021 2:58:51 PM UTC\r\n- **Commit**: cc0fa942bf43c2814af778868d4e7ddf21146b96\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.21613.2 to 7.0.0-beta.21614.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.21613.2 to 7.0.0-beta.21614.1][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21613.2 to 7.0.0-beta.21614.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.21613.2 to 7.0.0-beta.21614.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.21613.2 to 7.0.0-beta.21614.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21613.2 to 7.0.0-beta.21614.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/bcd6e00...cc0fa94\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6351)","Url":"https://github.com/dotnet/winforms/pull/6351","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6351)"},{"Id":"1080699132","IsPullRequest":false,"CreatedAt":"2021-12-15T07:56:55","Actor":"roland5572","Number":"6349","RawContent":null,"Title":"ElementHost class causes black areas when maximized","State":"open","Body":"If use class **System.Windows.Forms.Integration.ElementHost** in Winforms, and then maximize the interface, it will cause a large area of black on the interface background.\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.integration.elementhost\r\n\r\nTest Code:\r\n.net 6.0\r\n\r\n```\r\nusing System.Windows.Forms.Integration;\r\n\r\nnamespace FormBorderTest\r\n{\r\n    internal static class Program\r\n    {\r\n        [STAThread]\r\n        static void Main()\r\n        {\r\n            ApplicationConfiguration.Initialize();\r\n\r\n            var form = new Form()\r\n            {\r\n                Width = 600,\r\n                Height = 400,\r\n\r\n                StartPosition = FormStartPosition.CenterScreen,\r\n            };\r\n\r\n            var host = new ElementHost()\r\n            {\r\n                Dock= DockStyle.Fill,\r\n            };\r\n\r\n            form.Controls.Add(host);\r\n\r\n            Application.Run(form);\r\n        }\r\n    }\r\n}\r\n```\r\nTest Steps:\r\n\r\nStep 1: Double-click the title bar to start maximizing.\r\n\r\n![000](https://user-images.githubusercontent.com/88176616/146145942-43043673-8a47-44b6-8dce-04614b0892f1.png)\r\n\r\nStep 2: In the process of maximization, a large black area appeared on the entire interface.\r\n\r\n![002](https://user-images.githubusercontent.com/88176616/146144681-15da8498-db0b-4766-afbe-5937ad11daf1.png)\r\n\r\nStep 3: After being maximized, the interface returns to normal.\r\n\r\n![003](https://user-images.githubusercontent.com/88176616/146144689-6cc35132-1d75-47c7-8893-0d6773ee621b.png)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6349","RelatedDescription":"Open issue \"ElementHost class causes black areas when maximized\" (#6349)"},{"Id":"1080054813","IsPullRequest":true,"CreatedAt":"2021-12-14T23:12:09","Actor":"vseanreesermsft","Number":"6343","RawContent":null,"Title":"Merging internal commits for release/5.0","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6343)","Url":"https://github.com/dotnet/winforms/pull/6343","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/5.0\" (#6343)"},{"Id":"1080191233","IsPullRequest":true,"CreatedAt":"2021-12-14T21:47:23","Actor":"dotnet-bot","Number":"6348","RawContent":null,"Title":"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 1512846","State":"closed","Body":"This is the pull request automatically created by the OneLocBuild task in the build process to check-in localized files generated based upon translation source files (.lcl files) handed-back from the downstream localization pipeline. If there are issues in translations, visit https://aka.ms/ceLocBug and log bugs for fixes. The OneLocBuild wiki is https://aka.ms/onelocbuild and the localization process in general is documented at https://aka.ms/AllAboutLoc.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6348)","Url":"https://github.com/dotnet/winforms/pull/6348","RelatedDescription":"Closed or merged PR \"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 1512846\" (#6348)"},{"Id":"1080048512","IsPullRequest":true,"CreatedAt":"2021-12-14T20:55:13","Actor":"vseanreesermsft","Number":"6342","RawContent":null,"Title":"Merging internal commits for release/6.0","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6342)","Url":"https://github.com/dotnet/winforms/pull/6342","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/6.0\" (#6342)"},{"Id":"1080100771","IsPullRequest":true,"CreatedAt":"2021-12-14T20:20:52","Actor":"dotnet-maestro[bot]","Number":"6346","RawContent":null,"Title":"[release/6.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:84f431dc-3375-4a46-af87-08d961c59698)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 84f431dc-3375-4a46-af87-08d961c59698\r\n- **Build**: 20211209.4\r\n- **Date Produced**: December 10, 2021 12:51:53 AM UTC\r\n- **Commit**: 7421b55f46aff8373764016d942b23cbf87c75cb\r\n- **Branch**: refs/heads/release/6.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.21560.2 to 6.0.0-beta.21609.4][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 6.0.0-beta.21560.2 to 6.0.0-beta.21609.4][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.21560.2 to 6.0.0-beta.21609.4][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.21560.2 to 6.0.0-beta.21609.4][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.21560.2 to 6.0.0-beta.21609.4][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.21560.2 to 6.0.0-beta.21609.4][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/ee9b7f1...7421b55\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:84f431dc-3375-4a46-af87-08d961c59698)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6346)","Url":"https://github.com/dotnet/winforms/pull/6346","RelatedDescription":"Closed or merged PR \"[release/6.0] Update dependencies from dotnet/arcade\" (#6346)"},{"Id":"1080147257","IsPullRequest":true,"CreatedAt":"2021-12-14T19:44:05","Actor":"dreddy-work","Number":"6347","RawContent":null,"Title":"Enable loc on main.","State":"closed","Body":"enable loc\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6347)","Url":"https://github.com/dotnet/winforms/pull/6347","RelatedDescription":"Closed or merged PR \"Enable loc on main.\" (#6347)"},{"Id":"1080097310","IsPullRequest":true,"CreatedAt":"2021-12-14T19:31:15","Actor":"dotnet-maestro[bot]","Number":"6345","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:7ad8a074-d804-46e2-eafe-08d86aff023e)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 7ad8a074-d804-46e2-eafe-08d86aff023e\r\n- **Build**: 20211115.1\r\n- **Date Produced**: November 15, 2021 10:06:02 PM UTC\r\n- **Commit**: 2f5d6d594674c80c57048dd9ba8b4f6ee9297171\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: [from 5.0.0-beta.21552.7 to 5.0.0-beta.21565.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 5.0.0-beta.21552.7 to 5.0.0-beta.21565.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 5.0.0-beta.21552.7 to 5.0.0-beta.21565.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 5.0.0-beta.21552.7 to 5.0.0-beta.21565.1][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 5.0.0-beta.21552.7 to 5.0.0-beta.21565.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/03adead...2f5d6d5\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:7ad8a074-d804-46e2-eafe-08d86aff023e)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6345)","Url":"https://github.com/dotnet/winforms/pull/6345","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/arcade\" (#6345)"},{"Id":"1080096206","IsPullRequest":true,"CreatedAt":"2021-12-14T19:24:47","Actor":"dotnet-maestro[bot]","Number":"6344","RawContent":null,"Title":"[release/3.1] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:a2a5ea62-d9bf-419c-0c86-08d7315b512a)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: a2a5ea62-d9bf-419c-0c86-08d7315b512a\r\n- **Build**: 20211111.2\r\n- **Date Produced**: November 11, 2021 7:34:26 PM UTC\r\n- **Commit**: 3df4410511ad9900804da00ec680bd1c7d6f21e1\r\n- **Branch**: refs/heads/release/3.x\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 2.4.1-beta.21552.6 to 2.4.1-beta.21561.2][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 1.0.0-beta.21552.6 to 1.0.0-beta.21561.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 2.0.0-beta.21552.6 to 2.0.0-beta.21561.2][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 1.0.0-beta.21552.6 to 1.0.0-beta.21561.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/afb7961...3df4410\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:a2a5ea62-d9bf-419c-0c86-08d7315b512a)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6344)","Url":"https://github.com/dotnet/winforms/pull/6344","RelatedDescription":"Closed or merged PR \"[release/3.1] Update dependencies from dotnet/arcade\" (#6344)"},{"Id":"1079933349","IsPullRequest":true,"CreatedAt":"2021-12-14T15:59:48","Actor":"WPMGPRoSToTeMa","Number":"6341","RawContent":null,"Title":"Fixing PGV accessibility tree for property descriptors and dropdown holders","State":"open","Body":"Fixes #2848, #4876\r\n\r\n\r\n## Proposed changes\r\n\r\n- Fix sibling relationship between child property descriptors and selected entry controls\r\n- Fix parent-child relationship between dropdown holder and listbox\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- No\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- CTI (planned)\r\n- Manual testing\r\n- Unit-tests\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- Microsoft Windows [Version 10.0.19044.1348]\r\n- .NET 7.0.0-alpha.1.21602.1\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6341)","Url":"https://github.com/dotnet/winforms/pull/6341","RelatedDescription":"Open PR \"Fixing PGV accessibility tree for property descriptors and dropdown holders\" (#6341)"},{"Id":"1079737931","IsPullRequest":true,"CreatedAt":"2021-12-14T13:48:45","Actor":"dotnet-maestro[bot]","Number":"6340","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20211213.2\r\n- **Date Produced**: December 13, 2021 2:45:43 PM UTC\r\n- **Commit**: bcd6e007b9f53be0a7aff804d5c17ea7e179317b\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.21610.4 to 7.0.0-beta.21613.2][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.21610.4 to 7.0.0-beta.21613.2][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21610.4 to 7.0.0-beta.21613.2][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.21610.4 to 7.0.0-beta.21613.2][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.21610.4 to 7.0.0-beta.21613.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21610.4 to 7.0.0-beta.21613.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/18adc5b...bcd6e00\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6340)","Url":"https://github.com/dotnet/winforms/pull/6340","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6340)"},{"Id":"1079382274","IsPullRequest":false,"CreatedAt":"2021-12-14T06:58:40","Actor":"ArtemTatarinov","Number":"6339","RawContent":null,"Title":"Setting `MainMenuStrip` at the MDI child form several times leads to multiplying `ControlBox` buttons","State":"open","Body":"* .NET Core Version: \r\n7.0\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes, at 4.8\r\n\r\n**Problem description:**\r\nIf the `MainMenuStrip` property of the child MDI `Form` class is set to some `MenuStrip` instance, then set to null, and then is set again to the `MenuStrip` instance, then the `ControlBox` buttons (`System`, `Minimize`, `Restore`, `Close`) are cloned:\r\n\r\n![mdiMultipleButtons](https://user-images.githubusercontent.com/87859299/145946963-0927f397-3db9-4500-a91c-cfb8f91e786a.gif)\r\n\r\nThe handler for this checkbox does the following:\r\n\r\n![image](https://user-images.githubusercontent.com/87859299/145947627-e5e40594-36bd-42cf-97db-04dfb4e55c0e.png)\r\n\r\n**Expected behavior:**\r\nThe set of the `ControlBox` buttons should always be single per window.\r\n\r\n**Minimal repro:**\r\n\r\n1. Run the internal `WinformsControlsTest` test app\r\n2. Click the `MDI Parent` button\r\n3. Check and uncheck the `Set parent menustrip` checkbox several times.","Url":"https://github.com/dotnet/winforms/issues/6339","RelatedDescription":"Open issue \"Setting `MainMenuStrip` at the MDI child form several times leads to multiplying `ControlBox` buttons\" (#6339)"},{"Id":"1079175166","IsPullRequest":true,"CreatedAt":"2021-12-14T00:34:54","Actor":"dreddy-work","Number":"6338","RawContent":null,"Title":"Disable loc on release","State":"closed","Body":"Disable loc in release. Wait on https://ceapex.visualstudio.com/CEINTL/_workitems/edit/531949 to enable in main.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6338)","Url":"https://github.com/dotnet/winforms/pull/6338","RelatedDescription":"Closed or merged PR \"Disable loc on release\" (#6338)"},{"Id":"1079174630","IsPullRequest":true,"CreatedAt":"2021-12-14T00:33:53","Actor":"dreddy-work","Number":"6337","RawContent":null,"Title":"Dev/dreddy/disbalelocon6.0","State":"closed","Body":"Disable loc on release so we can enable it on main.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6337)","Url":"https://github.com/dotnet/winforms/pull/6337","RelatedDescription":"Closed or merged PR \"Dev/dreddy/disbalelocon6.0\" (#6337)"},{"Id":"1079116219","IsPullRequest":true,"CreatedAt":"2021-12-13T23:27:56","Actor":"dreddy-work","Number":"6336","RawContent":null,"Title":"Missing build time changes for 7.0 template","State":"closed","Body":"Template 7.0 addition change in https://github.com/dotnet/winforms/pull/6206\r\n\r\nrequire these build time changes.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6336)","Url":"https://github.com/dotnet/winforms/pull/6336","RelatedDescription":"Closed or merged PR \"Missing build time changes for 7.0 template\" (#6336)"},{"Id":"1079075653","IsPullRequest":true,"CreatedAt":"2021-12-13T22:04:12","Actor":"jbhensley","Number":"6335","RawContent":null,"Title":"Fix Form snap layout when in maximized state","State":"open","Body":"Fixes #6153. \r\n\r\n## Proposed changes\r\n\r\n`System.Windows.Forms.Form` caches size and location upon becoming maximized and restores it when exiting maximized state. This creates a problem when using Windows snap layout since the form will be brought out of a maximized state and \"docked\" to a specific location by Windows only have its size and location subsequently changed to the internally cached values when the form processes `WM_WINDOWPOSCHANGED`.\r\n\r\nIf it were possible to not use internally cached values when coming out of a maximized state due to a snap layout command, this problem should be resolved. It does not appear that Windows provides any way to detect that. Instead, this PR assumes that any position change not initiated by the user or by a programmatic change of `Form.WindowState` is instead initiated by a window manager and cached positional values are not used.\r\n\r\nNote: for determining if the change was initiated by the user, it was observed that a window message of `WM_SYSCOMMAND` containing a `wParam` of `SC_RESTORE` was sent regardless of whether the max/min button was clicked, the title bar was double-clicked, or if the restore command was used from the window's context menu. I was not able to find any way for the user to exit maximized state without triggering the `WM_SYSCOMMAND`. If that were possible, this fix would not work.\r\n\r\n## Customer Impact\r\n\r\nCustomers should observe that `Form` objects respond properly when using snap layout while in a maximized state.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\nRisk is that manner of determining whether `Form` position change is due to Windows snap layout versus user/programmatic change is deficient and does not cover all scenarios.\r\n\r\n## Test methodology\r\n\r\n- Added unit tests to verify expected behavior, including a test that fails under unmodified code but passes with change in place (`Form_Restore_DoesNotRestorePosition_WindowManager`)\r\n- Manually manipulated a `Form` object with the mouse and keyboard to verify behavior\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6335)","Url":"https://github.com/dotnet/winforms/pull/6335","RelatedDescription":"Open PR \"Fix Form snap layout when in maximized state\" (#6335)"}],"ResultType":"GitHubIssue"}},"RunOn":"2021-12-19T05:30:39.0119924Z","RunDurationInMilliseconds":513}