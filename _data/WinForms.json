{"Data":{"GitHub":{"Issues":[{"Id":"3148383302","IsPullRequest":true,"CreatedAt":"2025-06-16T03:01:01","Actor":"LeafShi1","Number":"13601","RawContent":null,"Title":"Public Unshipped APIs","State":"open","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13601)","Url":"https://github.com/dotnet/winforms/pull/13601","RelatedDescription":"Open PR \"Public Unshipped APIs\" (#13601)"},{"Id":"3135811550","IsPullRequest":false,"CreatedAt":"2025-06-16T02:55:11","Actor":"panxn","Number":"13583","RawContent":null,"Title":"NodeLabelEditEventArgs.Label is wrong from .NET9","State":"closed","Body":"### .NET version\n\n.NET9 or .NET10 preview5\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nIt works in .NET8\n\n### Issue description\n\nAfter updating .NET from 8 to 10, the handler of `TreeView.AfterLabelEdit` runs into StackOverflow exception. The code were adapted from [MS sample code](https://learn.microsoft.com/en-us/dotnet/api/system.windows.forms.treeview.afterlabeledit?view=windowsdesktop-9.0), I have simplified them, see \"Steps to reproduce\".\n\n1. The first issue is, `NodeLabelEditEventArgs.Label` is not null when Enter is pressed, it doesn't respect the [MS API document](https://learn.microsoft.com/en-us/dotnet/api/system.windows.forms.nodelabelediteventargs.label?view=windowsdesktop-9.0#remarks)\n2. `e.Node.EndEdit(false)` re-triggers `TreeView.AfterLabelEdit`, endless loop. see my sample code for details.\n\n\n\n### Steps to reproduce\n\n```\nusing System;\nusing System.Windows.Forms;\n\npublic class TreeViewExample : Form\n{\n    private TreeView treeView;\n\n    public TreeViewExample()\n    {\n        treeView = new TreeView();\n        treeView.Dock = DockStyle.Fill;\n\n        TreeNode rootNode = new TreeNode(\"Root\");\n        rootNode.Nodes.Add(\"Child 1\");\n        rootNode.Nodes.Add(\"Child 2\");\n        treeView.Nodes.Add(rootNode);\n\n        treeView.LabelEdit = true;\n\n        treeView.AfterLabelEdit += TreeView_AfterLabelEdit;\n\n        this.Controls.Add(treeView);\n    }\n\n    private int recursiveDepth = 0;\n\n    // In treeview, select item then click, to begin edit\n    private void TreeView_AfterLabelEdit(object sender, NodeLabelEditEventArgs e)\n    {\n        /*\n         *  NET8:\n         *      Press ESC or Enter or Lose Focus -> e.Label is null\n         *  NET9/10:\n         *      Press ESC                        -> e.Label is null\n         *      Press Enter or Lose Focus        -> e.Label is not null\n         *  Expected:\n         *      The value of this property is null if the user presses ESC to cancel the edit or presses ENTER without modifying the label text.\n         *      https://learn.microsoft.com/en-us/dotnet/api/system.windows.forms.nodelabelediteventargs.label?view=windowsdesktop-9.0#remarks\n         */\n        Console.WriteLine(e.Label);\n\n        /*\n         *  As a bad result, it runs into endless loop when I use MS sample code in .NET9/10\n         *  https://learn.microsoft.com/en-us/dotnet/api/system.windows.forms.treeview.afterlabeledit?view=windowsdesktop-9.0\n         */\n\n        if (e.Label != null)\n        {\n            if (e.Label.Length > 0)\n            {\n                recursiveDepth++;\n                Console.WriteLine(recursiveDepth);\n\n                // it calls AfterLabelEdit recursively\n                e.Node.EndEdit(false);\n\n                recursiveDepth--;\n            }\n        }\n    }\n\n    [STAThread]\n    public static void Main()\n    {\n        Application.EnableVisualStyles();\n        Application.SetCompatibleTextRenderingDefault(false);\n        Application.Run(new TreeViewExample());\n    }\n}\n```","Url":"https://github.com/dotnet/winforms/issues/13583","RelatedDescription":"Closed issue \"NodeLabelEditEventArgs.Label is wrong from .NET9\" (#13583)"},{"Id":"3139537300","IsPullRequest":true,"CreatedAt":"2025-06-16T02:55:10","Actor":"LeafShi1","Number":"13588","RawContent":null,"Title":"Update TreeView's TvnEndLabelEdit method to set label to null when no text has changed","State":"closed","Body":"\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #13583\r\n\r\n\r\n## Proposed changes\r\n\r\n-  Update TreeView's `TvnEndLabelEdit` method to set label to null when no text has changed\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- The edit state of TreeNode can be exited using the Enter key\r\n\r\n## Regression? \r\n\r\n- Yes \r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\nPressing the Enter key when a TreeNode enters the edit state will cause an exception\r\n\r\n![beforeChange](https://github.com/user-attachments/assets/118a2bd7-f7b3-4f19-9e49-4e65db5bc00e)\r\n\r\n### After\r\nWhen a TreeNode enters the edit state, press the Enter key, the node will exit the edit state\r\n\r\n![AfterChange](https://github.com/user-attachments/assets/61695ade-0144-4c5d-a037-20ad73d13347)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manually\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .net 10.0.0-preview.6.25310.107\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13588)","Url":"https://github.com/dotnet/winforms/pull/13588","RelatedDescription":"Closed or merged PR \"Update TreeView's TvnEndLabelEdit method to set label to null when no text has changed\" (#13588)"},{"Id":"3148312663","IsPullRequest":true,"CreatedAt":"2025-06-16T02:46:08","Actor":"dotnet-maestro[bot]","Number":"13600","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250615.2](https://dev.azure.com/dnceng/internal/_build/results?buildId=2730661)\n- **Date Produced**: June 15, 2025 5:47:28 PM UTC\n- **Commit Diff**: [005f36c...be8cb62](https://github.com/dotnet/dotnet/compare/005f36cd1953e1308c1882a9d2e1fc1e84e6b2e4...be8cb623e031f933b5b62e82d37094b4981dce30)\n- **Commit**: [be8cb623e031f933b5b62e82d37094b4981dce30](https://github.com/dotnet/dotnet/commit/be8cb623e031f933b5b62e82d37094b4981dce30)\n- **Branch**: main\n\n**Updated Dependencies**\n- **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.6.25314.101 to 10.0.0-preview.6.25315.102][1]\n- **System.Resources.Extensions**: [from 10.0.0-preview.6.25314.101 to 10.0.0-preview.6.25315.102][1]\n- **System.Windows.Extensions**: [from 10.0.0-preview.6.25314.101 to 10.0.0-preview.6.25315.102][1]\n- **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.6.25314.101 to 10.0.0-preview.6.25315.102][1]\n- **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25314.101 to 10.0.0-preview.6.25315.102][1]\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25314.101 to 10.0.0-preview.6.25315.102][1]\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25314.101 to 10.0.0-preview.6.25315.102][1]\n- **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.6.25314.101 to 10.0.0-preview.6.25315.102][1]\n- **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.6.25314.101 to 10.0.0-preview.6.25315.102][1]\n- **System.Text.Encodings.Web**: [from 10.0.0-preview.6.25314.101 to 10.0.0-preview.6.25315.102][1]\n- **System.Text.Json**: [from 10.0.0-preview.6.25314.101 to 10.0.0-preview.6.25315.102][1]\n- **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.6.25314.101 to 10.0.0-preview.6.25315.102][1]\n- **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.6.25314.101 to 10.0.0-preview.6.25315.102][1]\n- **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.6.25314.101 to 10.0.0-preview.6.25315.102][1]\n- **System.CodeDom**: [from 10.0.0-preview.6.25314.101 to 10.0.0-preview.6.25315.102][1]\n- **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.6.25314.101 to 10.0.0-preview.6.25315.102][1]\n- **System.Formats.Nrbf**: [from 10.0.0-preview.6.25314.101 to 10.0.0-preview.6.25315.102][1]\n- **System.IO.Hashing**: [from 10.0.0-preview.6.25314.101 to 10.0.0-preview.6.25315.102][1]\n- **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25314.101 to 10.0.0-beta.25315.102][1]\n- **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25314.101 to 10.0.0-beta.25315.102][1]\n- **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25314.101 to 10.0.0-beta.25315.102][1]\n- **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25314.101 to 10.0.0-beta.25315.102][1]\n- **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25314.101 to 10.0.0-beta.25315.102][1]\n- **Microsoft.DotNet.XUnitV3Extensions**: [from 10.0.0-beta.25314.101 to 10.0.0-beta.25315.102][1]\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/005f36cd19...be8cb623e0\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13600)","Url":"https://github.com/dotnet/winforms/pull/13600","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13600)"},{"Id":"3132599466","IsPullRequest":true,"CreatedAt":"2025-06-16T01:15:37","Actor":"LeafShi1","Number":"13578","RawContent":null,"Title":"Add do...while loop in the SetValue method of SerializationResourceManager.cs until resourceName is unique","State":"closed","Body":"\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #12595\r\n\r\n## Root Cause\r\n\r\nThis issue is caused by replacing `for (;;)` with `if (appendCount || _nameTable.TryGetValue(nameBase, out count))` in PR #8332, which leads to resource name conflicts.\r\n\r\n## Proposed changes\r\n\r\n- Add do...while loop in the SetValue method until resourceName is unique\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- When serializing collection values, the resource numeric suffix can be incremented without duplication\r\n\r\n## Regression? \r\n\r\n- Yes \r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\nPaste after the second time, the resource will end up using the same number 1 over and over\r\n![Image](https://github.com/user-attachments/assets/6540e3bf-481e-4853-8285-2d5ed0f22485)\r\n\r\n### After\r\nResource suffixes are increasing\r\n\r\n![AfterChange](https://github.com/user-attachments/assets/e4750933-0693-4cf4-a155-410448dbac8b)\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manually\r\n\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .net 10.0.0-preview.6.25304.106\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13578)","Url":"https://github.com/dotnet/winforms/pull/13578","RelatedDescription":"Closed or merged PR \"Add do...while loop in the SetValue method of SerializationResourceManager.cs until resourceName is unique\" (#13578)"},{"Id":"3148248212","IsPullRequest":false,"CreatedAt":"2025-06-16T01:09:59","Actor":"Zheng-Li01","Number":"13599","RawContent":null,"Title":"A warning dialog pops up when trying to switch the values for the FormScreenCaptureMode property","State":"open","Body":"### .NET version\n\n.NET SDK 10.0.100-preview.6.25315.102\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo, this is a new feature introduced by the https://github.com/dotnet/winforms/pull/13561\n\n### Issue description\n\nA warning dialog pops up when trying to switch the values for the FormScreenCaptureMode property\n\n![Image](https://github.com/user-attachments/assets/88c71ce0-6ede-47a4-a636-de7313e24b50)\n\n\n### Steps to reproduce\n\n1. Create a .NET winforms application\n2. Trying to switch the values for the FormScreenCaptureMode property","Url":"https://github.com/dotnet/winforms/issues/13599","RelatedDescription":"Open issue \"A warning dialog pops up when trying to switch the values for the FormScreenCaptureMode property\" (#13599)"},{"Id":"3146989193","IsPullRequest":true,"CreatedAt":"2025-06-15T06:41:18","Actor":"dotnet-maestro[bot]","Number":"13598","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250614.1](https://dev.azure.com/dnceng/internal/_build/results?buildId=2730183)\n- **Date Produced**: June 14, 2025 2:02:34 PM UTC\n- **Commit Diff**: [04b9001...005f36c](https://github.com/dotnet/dotnet/compare/04b9001ab9ace9980b9b862278eaafedfe599432...005f36cd1953e1308c1882a9d2e1fc1e84e6b2e4)\n- **Commit**: [005f36cd1953e1308c1882a9d2e1fc1e84e6b2e4](https://github.com/dotnet/dotnet/commit/005f36cd1953e1308c1882a9d2e1fc1e84e6b2e4)\n- **Branch**: main\n\n**Updated Dependencies**\n- **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.Resources.Extensions**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.Windows.Extensions**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.Text.Encodings.Web**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.Text.Json**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.CodeDom**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.Formats.Nrbf**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **System.IO.Hashing**: [from 10.0.0-preview.6.25313.102 to 10.0.0-preview.6.25314.101][1]\n- **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25313.102 to 10.0.0-beta.25314.101][1]\n- **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25313.102 to 10.0.0-beta.25314.101][1]\n- **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25313.102 to 10.0.0-beta.25314.101][1]\n- **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25313.102 to 10.0.0-beta.25314.101][1]\n- **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25313.102 to 10.0.0-beta.25314.101][1]\n- **Microsoft.DotNet.XUnitV3Extensions**: [from 10.0.0-beta.25313.102 to 10.0.0-beta.25314.101][1]\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/04b9001ab9...005f36cd19\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13598)","Url":"https://github.com/dotnet/winforms/pull/13598","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13598)"},{"Id":"3135749045","IsPullRequest":true,"CreatedAt":"2025-06-14T15:16:52","Actor":"KlausLoeffelmann","Number":"13582","RawContent":null,"Title":"Refactor DarkMode management for Controls as per API Review outcome","State":"closed","Body":"For a Control to indicate that it wants to participate in DarkMode theming, it needs to indicate that by setting the style flag `ApplyThemingImplicitly`. \r\n\r\nThe original architectural plan was to introduce a dedicate protected virtual method `InitializeControl` that would be called by the constructor of Control, which would then set the `ApplyThemingImplicitly` flag and give also the control the chance to learn about the initial DeviceAPI, with that replacing the original internal method. \r\n\r\nThis approach was not approved by the API Review board (see https://github.com/dotnet/winforms/issues/13550#issuecomment-2960189335).\r\n\r\nConsequently, this PR builds the DarkMode handling back to the original approach and also refactors the flaw of the approach how controls are internally provided the initial DPI setting. \r\n(Also pointed outby the API Review.)\r\n\r\nBecause of the general architecture of the Controls inheritance hierarchy, Controls need to make sure to opt into (or opt out) DarkMode handling _before_ their own constructor runs, which means they have to override `CreateParams` and set the respective flags before calling the base implementation.\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13582)","Url":"https://github.com/dotnet/winforms/pull/13582","RelatedDescription":"Closed or merged PR \"Refactor DarkMode management for Controls as per API Review outcome\" (#13582)"},{"Id":"3145685364","IsPullRequest":true,"CreatedAt":"2025-06-14T07:38:39","Actor":"Youssef1313","Number":"13597","RawContent":null,"Title":"Fix leak in UpDownBaseTests","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #13596\r\n\r\n\r\n## Proposed changes\r\n\r\n- Call OnHandleDestroyed to unsubscribe from UserPreferenceChanged event and fix memory leak in tests.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- None. Test only change.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- None. Test only change.\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n","Url":"https://github.com/dotnet/winforms/pull/13597","RelatedDescription":"Open PR \"Fix leak in UpDownBaseTests\" (#13597)"},{"Id":"3145641675","IsPullRequest":false,"CreatedAt":"2025-06-14T07:14:59","Actor":"Youssef1313","Number":"13596","RawContent":null,"Title":"UpDownBaseTests are severely leaking","State":"open","Body":"There is a severe memory leak in some UpDownBaseTests.\n\n![Image](https://github.com/user-attachments/assets/617817ba-fafc-4831-bcdc-9eb96a9e08fd)\n\nAs shown in this trace, there are subscriptions to UserPreferenceChanged that are never unsubscribed.\n\nOne example is `UpDownBase_OnHandleCreated_Invoke_CallsHandleCreated` which manually calls `OnHandleCreated` (which subscribes to the event), but never calls `OnHandleDestroyed`.\n\nAlternatively, might be worth try calling `CreateHandle` instead of `OnHandleCreated`, so that `Dispose` can see that a handle is created and then it can destroy properly.","Url":"https://github.com/dotnet/winforms/issues/13596","RelatedDescription":"Open issue \"UpDownBaseTests are severely leaking\" (#13596)"},{"Id":"3145397046","IsPullRequest":true,"CreatedAt":"2025-06-14T04:17:05","Actor":"Youssef1313","Number":"13595","RawContent":null,"Title":"Cleanup for XUnitV3Version","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n## Proposed changes\r\n\r\n- \r\n- \r\n- \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13595)","Url":"https://github.com/dotnet/winforms/pull/13595","RelatedDescription":"Open PR \"Cleanup for XUnitV3Version\" (#13595)"},{"Id":"3145383879","IsPullRequest":true,"CreatedAt":"2025-06-14T04:01:28","Actor":"Youssef1313","Number":"13594","RawContent":null,"Title":"Add dotnet.config to opt-in MTP `dotnet test`","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n## Proposed changes\r\n\r\n- Adds `dotnet.config` to use the `dotnet test` experience for MTP.\r\n- Follow-up to https://github.com/dotnet/winforms/pull/13540\r\n\r\n## Customer Impact\r\n\r\n- None\r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13594)","Url":"https://github.com/dotnet/winforms/pull/13594","RelatedDescription":"Open PR \"Add dotnet.config to opt-in MTP `dotnet test`\" (#13594)"},{"Id":"3145286935","IsPullRequest":true,"CreatedAt":"2025-06-14T02:54:43","Actor":"dotnet-maestro[bot]","Number":"13592","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250613.2](https://dev.azure.com/dnceng/internal/_build/results?buildId=2729497)\n- **Date Produced**: June 13, 2025 1:43:40 PM UTC\n- **Commit Diff**: [25bec1a...04b9001](https://github.com/dotnet/dotnet/compare/25bec1af21db71468c5c2c3a588dd54d0e058e9d...04b9001ab9ace9980b9b862278eaafedfe599432)\n- **Commit**: [04b9001ab9ace9980b9b862278eaafedfe599432](https://github.com/dotnet/dotnet/commit/04b9001ab9ace9980b9b862278eaafedfe599432)\n- **Branch**: main\n\n**Updated Dependencies**\n- **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.6.25311.107 to 10.0.0-preview.6.25313.102][1]\n- **System.Resources.Extensions**: [from 10.0.0-preview.6.25311.107 to 10.0.0-preview.6.25313.102][1]\n- **System.Windows.Extensions**: [from 10.0.0-preview.6.25311.107 to 10.0.0-preview.6.25313.102][1]\n- **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.6.25311.107 to 10.0.0-preview.6.25313.102][1]\n- **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25311.107 to 10.0.0-preview.6.25313.102][1]\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25311.107 to 10.0.0-preview.6.25313.102][1]\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25311.107 to 10.0.0-preview.6.25313.102][1]\n- **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.6.25311.107 to 10.0.0-preview.6.25313.102][1]\n- **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.6.25311.107 to 10.0.0-preview.6.25313.102][1]\n- **System.Text.Encodings.Web**: [from 10.0.0-preview.6.25311.107 to 10.0.0-preview.6.25313.102][1]\n- **System.Text.Json**: [from 10.0.0-preview.6.25311.107 to 10.0.0-preview.6.25313.102][1]\n- **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.6.25311.107 to 10.0.0-preview.6.25313.102][1]\n- **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.6.25311.107 to 10.0.0-preview.6.25313.102][1]\n- **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.6.25311.107 to 10.0.0-preview.6.25313.102][1]\n- **System.CodeDom**: [from 10.0.0-preview.6.25311.107 to 10.0.0-preview.6.25313.102][1]\n- **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.6.25311.107 to 10.0.0-preview.6.25313.102][1]\n- **System.Formats.Nrbf**: [from 10.0.0-preview.6.25311.107 to 10.0.0-preview.6.25313.102][1]\n- **System.IO.Hashing**: [from 10.0.0-preview.6.25311.107 to 10.0.0-preview.6.25313.102][1]\n- **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25311.107 to 10.0.0-beta.25313.102][1]\n- **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25311.107 to 10.0.0-beta.25313.102][1]\n- **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25311.107 to 10.0.0-beta.25313.102][1]\n- **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25311.107 to 10.0.0-beta.25313.102][1]\n- **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25311.107 to 10.0.0-beta.25313.102][1]\n- **Microsoft.DotNet.XUnitV3Extensions**: [from 10.0.0-beta.25311.107 to 10.0.0-beta.25313.102][1]\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/25bec1af21...04b9001ab9\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13592)","Url":"https://github.com/dotnet/winforms/pull/13592","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13592)"},{"Id":"3145309412","IsPullRequest":false,"CreatedAt":"2025-06-14T02:39:15","Actor":"Lephat902","Number":"13593","RawContent":null,"Title":"DataGridView memory leakage when removing rows with RemoveAt","State":"open","Body":"### .NET version\n\n.NET 9.0\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\n\nI have a specific usage pattern with a `DataGridView` where I **pre-create a set of `DataGridViewRow` instances** and then dynamically **add or remove** these rows from an existing `DataGridView` at runtime.\n\nHere’s how I currently manage rows:\n\n-   **`Add`** – I use this to add pre-created `DataGridViewRow` objects to the `DataGridView`. This works as expected.\n    \n-   **`Clear`** – I use this to remove all rows at once. This also works correctly and does not seem to cause any issues.\n    \n-   **`RemoveAt`** – I frequently use this to remove rows at specific indices. However, I've noticed that repeated use of `RemoveAt` appears to cause **memory leaks** over time.\n    \n\nThis suggests that `RemoveAt` may not be fully disposing of internal row resources or references.\n\n\n### Steps to reproduce\n\n\nI’ve created a minimal reproducible codebase that demonstrates the issue:\n\n📁 **[WinFormsApp1.zip](https://github.com/user-attachments/files/20735096/WinFormsApp1.zip)**\n\nI'm observing unexpected memory behavior after adding and removing `DataGridViewRow` objects repeatedly. Specifically, memory snapshots reveal a buildup of tooltip-related objects even after rows are removed.\n\n#### 📸 Memory Snapshot Before `Hide/Show`:\n\n![Initial Snapshot](https://github.com/user-attachments/assets/4b0926f4-a223-400f-94d9-b09772980195)\n\n#### 📸 Memory Snapshot After One `Hide/Show` Cycle:\n\n![After Hide/Show](https://github.com/user-attachments/assets/b3a85e33-ec57-4e6f-977b-204b9f02d8d6)\n\n![Image](https://github.com/user-attachments/assets/3bcaeae4-d29b-4ce7-9d49-31532d89243d)\n\nAs shown, there's a significant increase in:\n\n-   `ConditionalWeakTable+Entry<IKeyboardToolTip, WeakReference<ToolTip>>[]`\n    \n-   `WeakReference<ToolTip>`\n    \n\nThese objects appear to accumulate with each hide/show cycle, and may not be getting released properly, potentially indicating a **memory leak related to tooltip handling in `DataGridViewRow`**.\n\nI'm looking for guidance on:\n\n-   Whether this is a known issue with `DataGridView` tooltip internals.\n    \n-   Recommended practices to avoid or mitigate this kind of memory retention when programmatically adding/removing large numbers of rows.","Url":"https://github.com/dotnet/winforms/issues/13593","RelatedDescription":"Open issue \"DataGridView memory leakage when removing rows with RemoveAt\" (#13593)"},{"Id":"3144479588","IsPullRequest":true,"CreatedAt":"2025-06-13T18:54:18","Actor":"memoarfaa","Number":"13591","RawContent":null,"Title":"Fix All Dark mode Visual Style Renders","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #11950\r\nFixes #11949 \r\nFixes #12909\r\nFixes #11893\r\nFixes #11901 \r\nFixes #12040\r\n\r\n## Proposed changes\r\n\r\n- Enhanced dark mode visual style generation and selection logic, with custom handling for Button, ComboBox, Toolbar, Header, Status, and TreeView controls.\r\n- Improved consistency and accuracy of dark mode rendering, especially for high-DPI displays.\r\n\r\n## Customer Impact\r\n\r\n- More visually consistent dark mode experience for end users.\r\n- High-DPI setups now render dark mode elements correctly and reliably.\r\n\r\n## Regression? \r\n\r\n- No\r\n- \r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nhttps://github.com/user-attachments/assets/b7736281-09db-40ec-9c3d-5c75228a3073\r\n\r\n\r\n\r\n### After\r\n\r\n\r\n\r\n\r\nhttps://github.com/user-attachments/assets/b234ea18-dc33-4808-b6c3-0bb39070f002\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing across various controls in dark mode and high-DPI environments.\r\n- Verified correct rendering for affected controls.\r\n- Ran existing integration tests.\r\n\r\n## Test environment(s) \r\n\r\n- Tested on Windows 11, Latest .NET 10 SDK build: 10.0.100-preview.6.25311.107\r\n\r\n## UI scaling,\r\n100% UI scaling  and other UI scaling.\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13591)","Url":"https://github.com/dotnet/winforms/pull/13591","RelatedDescription":"Open PR \"Fix All Dark mode Visual Style Renders\" (#13591)"},{"Id":"3142831295","IsPullRequest":false,"CreatedAt":"2025-06-13T09:06:56","Actor":"CortiWins","Number":"13590","RawContent":null,"Title":"SystemEvents can contain reference to invalid thread and InvalidAsynchronousStateException","State":"open","Body":"### .NET version\n\nNet48, Net8\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\n### Short:\nPotential application crash by SystemEvents having a reference to an invalid thread used as a SynchronizationContext.\n\n### Long:\nMicrosoft.Win32.SystemEvents has a few different static events that winforms controls can register with.\n\nExamples are: \n- UserPreferenceChanged\n- DisplaySettingsChanged\n\nInternally it is not a pure list of delegates. The SystemEventInvokeInfo contains a delegate and an optional SynchronizationContext. \n\nThe SynchronizationContext is of two types\n- System.Threading.SynchronizationContext\n- System.Windows.Forms.WindowsFormsSynchronizationContext\n\nThe SynchronizationContext can contain a thread, or the thread can be null.\nIn the constructor, the thread is requested by System.ComponentModel.AsyncOperationManager.SynchronizationContext\n\nSo whenever a display setting in Windows changes, the DisplaySettingsChanged event gets fired and the delegates get invoked with a potential to be invoked with a WindowsFormsSynchronizationContext.\n\nThe issue:\nThese static events are not only used by instances of controls that register and deregister on disposal.\n\nThere are also static types that register and they only register once for that type. Examples are:\n- System.Windows.Forms.Screen\n- System.Drawing.Internal.SystemColorTracker\n- System.Windows.Forms.ProfessionalColors\n- System.Windows.Forms.SystemInforation\n\nAnd when doing that they create a SynchronizationContext that depends on the thread and the state of the thread.\n- Start/Main Thread in Program.Main()\n- Start/Main Thread within System.Windows.Forms.Application.Run()\n- Any other thread\n\nAnd while the main thread will stay for the lifetime of the application, other threads may not.\n\nResult:\nIf a thread other than the main thread happens to read from one of the static types like\nrequesting System.Windows.Forms.Screen.PrimaryScreen.WorkingArea before the main thread does,\nit creates a SynchronizationContext with a dead thread and that can throw an exception later and crash the application when a Windows setting changes that triggers the event.\n\nInvalidAsynchronousStateException(SR.ThreadNoLongerValid) from\nStacktrace:\n```\n    System.Windows.Forms.dll!System.Windows.Forms.WindowsFormsSynchronizationContext.Send(System.Threading.SendOrPostCallback d, object state) Line 84\tC#\n    Microsoft.Win32.SystemEvents.dll!Microsoft.Win32.SystemEvents.SystemEventInvokeInfo.Invoke(bool checkFinalization, object[] args) Line 34\tC#\n    Microsoft.Win32.SystemEvents.dll!Microsoft.Win32.SystemEvents.RaiseEvent(bool checkFinalization, object key, object[] args) Line 844\tC#\n    Microsoft.Win32.SystemEvents.dll!Microsoft.Win32.SystemEvents.RaiseEvent(object key, object[] args) Line 819\tC#\n    Microsoft.Win32.SystemEvents.dll!Microsoft.Win32.SystemEvents.OnUserPreferenceChanging(int msg, nint wParam, nint lParam) Line 809\tC#\n    Microsoft.Win32.SystemEvents.dll!Microsoft.Win32.SystemEvents.WindowProc(nint hWnd, int msg, nint wParam, nint lParam) Line 955\tC#\n    [Native to Managed Transition]\t\n    [Managed to Native Transition]\t\n    Microsoft.Win32.SystemEvents.dll!Interop.User32.DispatchMessageW(ref Interop.User32.MSG msg) Line 859\tC#\n    Microsoft.Win32.SystemEvents.dll!Microsoft.Win32.SystemEvents.WindowThreadProc() Line 1033\tC#\n```\n\nRelated Code files:\n- Link: SystemEvents Class https://github.com/dotnet/runtime/blob/main/src/libraries/Microsoft.Win32.SystemEvents/src/Microsoft/Win32/SystemEvents.cs\n- Link: SystemEvents s_handlers https://github.com/dotnet/runtime/blob/e0620bc380fa291867568e653206a9ecb8923d64/src/libraries/Microsoft.Win32.SystemEvents/src/Microsoft/Win32/SystemEvents.cs#L62\n- Link: SystemEventInvokeInfo: https://github.com/dotnet/runtime/blob/e0620bc380fa291867568e653206a9ecb8923d64/src/libraries/Microsoft.Win32.SystemEvents/src/Microsoft/Win32/SystemEvents.cs#L1246\n\n### Steps to reproduce\n\nThis demo application an enforce the behaviour that would otherwise be possible by accident.\nIt is a mini version of the application where it actually happened and can be used to simulate how the event handlers are setup by changing the injection point in Program.Main.\n\nIn this case, it is the SplashScreen-Form on a separate thread that causes the problem because it accesses System.Windows.Forms.Screen before the ui thread does. \nWhile in this specific case, it can be avoided now that i know what causes it.\n\nIn general, a harmless looking read access to a property (like System.Windows.Forms.Screen.PrimaryScreen.WorkingArea) can link a thread permanently to static types.\n\n[DeadEventHandler_V1.zip](https://github.com/user-attachments/files/20723170/DeadEventHandler_V1.zip)","Url":"https://github.com/dotnet/winforms/issues/13590","RelatedDescription":"Open issue \"SystemEvents can contain reference to invalid thread and InvalidAsynchronousStateException\" (#13590)"},{"Id":"3135837220","IsPullRequest":false,"CreatedAt":"2025-06-13T03:07:33","Actor":"Olina-Zhang","Number":"13584","RawContent":null,"Title":"No unit test is available in cloned Winforms repository","State":"closed","Body":"### .NET version\n\n10.0.100-preview.6.25310.107\n\n### Did it work in .NET Framework?\n\nNot tested/verified\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNot tested\n\n### Issue description\n\nFor the cloned latest Winforms repo, regressed after the PR: https://github.com/dotnet/winforms/pull/13521, doesn't detect unit test, so cannot run unit test in our machine:\n\n![Image](https://github.com/user-attachments/assets/c114a214-3f79-43c9-a0db-e6ad0bab97c9)\n\nLog in Output window:\n```\n========== Starting test discovery ==========\n[xUnit.net 00:00:00.01] xUnit.net VSTest Adapter v2.8.1+ce9211e970 (64-bit .NET 10.0.0-preview.6.25310.107)\nNo test is available in D:\\Winforms\\artifacts\\bin\\System.Private.Windows.Core.Tests\\Debug\\net10.0-windows7.0\\System.Private.Windows.Core.Tests.dll. Make sure that test discoverer & executors are registered and platform & framework version settings are appropriate and try again.\n========== Test discovery finished: 0 Tests found in 4.7 sec ==========\nBuilding Test Projects\nExecuting all tests in file: BindingTests.cs\n========== Starting test run ==========\n========== Test run aborted: 0 Tests (0 Passed, 0 Failed, 0 Skipped) run in < 1 ms ==========\n```\n\n### Steps to reproduce\n\nClone [Winforms repro](https://github.com/dotnet/winforms), run any unit test","Url":"https://github.com/dotnet/winforms/issues/13584","RelatedDescription":"Closed issue \"No unit test is available in cloned Winforms repository\" (#13584)"},{"Id":"3142030259","IsPullRequest":true,"CreatedAt":"2025-06-13T03:00:49","Actor":"dotnet-maestro[bot]","Number":"13589","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250611.7](https://dev.azure.com/dnceng/internal/_build/results?buildId=2728212)\n- **Date Produced**: June 12, 2025 2:47:29 AM UTC\n- **Commit Diff**: [20fdc50...25bec1a](https://github.com/dotnet/dotnet/compare/20fdc50b34ee89e7c54eef0a193c30ed4816597a...25bec1af21db71468c5c2c3a588dd54d0e058e9d)\n- **Commit**: [25bec1af21db71468c5c2c3a588dd54d0e058e9d](https://github.com/dotnet/dotnet/commit/25bec1af21db71468c5c2c3a588dd54d0e058e9d)\n- **Branch**: main\n\n**Updated Dependencies**\n- **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.6.25311.102 to 10.0.0-preview.6.25311.107][1]\n- **System.Resources.Extensions**: [from 10.0.0-preview.6.25311.102 to 10.0.0-preview.6.25311.107][1]\n- **System.Windows.Extensions**: [from 10.0.0-preview.6.25311.102 to 10.0.0-preview.6.25311.107][1]\n- **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.6.25311.102 to 10.0.0-preview.6.25311.107][1]\n- **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25311.102 to 10.0.0-preview.6.25311.107][1]\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25311.102 to 10.0.0-preview.6.25311.107][1]\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25311.102 to 10.0.0-preview.6.25311.107][1]\n- **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.6.25311.102 to 10.0.0-preview.6.25311.107][1]\n- **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.6.25311.102 to 10.0.0-preview.6.25311.107][1]\n- **System.Text.Encodings.Web**: [from 10.0.0-preview.6.25311.102 to 10.0.0-preview.6.25311.107][1]\n- **System.Text.Json**: [from 10.0.0-preview.6.25311.102 to 10.0.0-preview.6.25311.107][1]\n- **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.6.25311.102 to 10.0.0-preview.6.25311.107][1]\n- **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.6.25311.102 to 10.0.0-preview.6.25311.107][1]\n- **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.6.25311.102 to 10.0.0-preview.6.25311.107][1]\n- **System.CodeDom**: [from 10.0.0-preview.6.25311.102 to 10.0.0-preview.6.25311.107][1]\n- **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.6.25311.102 to 10.0.0-preview.6.25311.107][1]\n- **System.Formats.Nrbf**: [from 10.0.0-preview.6.25311.102 to 10.0.0-preview.6.25311.107][1]\n- **System.IO.Hashing**: [from 10.0.0-preview.6.25311.102 to 10.0.0-preview.6.25311.107][1]\n- **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25311.102 to 10.0.0-beta.25311.107][1]\n- **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25311.102 to 10.0.0-beta.25311.107][1]\n- **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25311.102 to 10.0.0-beta.25311.107][1]\n- **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25311.102 to 10.0.0-beta.25311.107][1]\n- **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25311.102 to 10.0.0-beta.25311.107][1]\n- **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25311.102 to 10.0.0-beta.25311.107][1]\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/20fdc50b34...25bec1af21\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13589)","Url":"https://github.com/dotnet/winforms/pull/13589","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13589)"},{"Id":"3138547546","IsPullRequest":true,"CreatedAt":"2025-06-12T02:49:11","Actor":"dotnet-maestro[bot]","Number":"13587","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250611.2](https://dev.azure.com/dnceng/internal/_build/results?buildId=2727981)\n- **Date Produced**: June 11, 2025 5:20:57 PM UTC\n- **Commit Diff**: [604a661...20fdc50](https://github.com/dotnet/dotnet/compare/604a6612d130bc042dc973aba84889f529f9cb69...20fdc50b34ee89e7c54eef0a193c30ed4816597a)\n- **Commit**: [20fdc50b34ee89e7c54eef0a193c30ed4816597a](https://github.com/dotnet/dotnet/commit/20fdc50b34ee89e7c54eef0a193c30ed4816597a)\n- **Branch**: main\n\n**Updated Dependencies**\n- **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **System.Resources.Extensions**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **System.Windows.Extensions**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **System.Text.Encodings.Web**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **System.Text.Json**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **System.CodeDom**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **System.Formats.Nrbf**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **System.IO.Hashing**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25310.107 to 10.0.0-beta.25311.102][1]\n- **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25310.107 to 10.0.0-beta.25311.102][1]\n- **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25310.107 to 10.0.0-beta.25311.102][1]\n- **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25310.107 to 10.0.0-beta.25311.102][1]\n- **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25310.107 to 10.0.0-beta.25311.102][1]\n- **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25310.107 to 10.0.0-beta.25311.102][1]\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/604a6612d1...20fdc50b34\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13587)","Url":"https://github.com/dotnet/winforms/pull/13587","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13587)"},{"Id":"3138300231","IsPullRequest":true,"CreatedAt":"2025-06-12T01:53:30","Actor":"KlausLoeffelmann","Number":"13586","RawContent":null,"Title":"Update copilot instructions","State":"closed","Body":"This PR is adding a way more detailed instruction set according to our .editorConfig enforced coding-standards, and it helps with refactorings or code generation from Copilot to minimize manual work.\r\n\r\nIt also adds a set of rules for GDI/GDI+ based renderer instructions.\r\n\r\nThe latter does not get automatically involved. If you have a code file which you for example would like to review according to our standards, which are reflected by those instructions, prompt as an example something like this:\r\n\r\n\"Could you review the code file #MyNewGridViewRenderer.cs according to the GDI+ instructions in #GDIPlus-copilot-instructions.md\"\r\n\r\n**Important:** These instructions do NOT have any influence on how Copilot is reviewing PRs!\r\n\r\n**Note:** If you wish the edit or expand on those instructions, please do not just read the instructions and interpret them as you would. If you think you need to improve them, please try your changes first with concrete example to make sure, what you want to change _is_ actual an improvement.\r\n\r\nI have tested and iterated on these instructions intensively.\r\nThey are a considerable improvement compared to what we had before.\r\n\r\nPlease try them and use them and consider adding additional ones for additional topics.\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13586)","Url":"https://github.com/dotnet/winforms/pull/13586","RelatedDescription":"Closed or merged PR \"Update copilot instructions\" (#13586)"},{"Id":"3137076489","IsPullRequest":true,"CreatedAt":"2025-06-11T14:56:56","Actor":"dotnet-maestro[bot]","Number":"13585","RawContent":null,"Title":"[release/8.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:bcf5aa31-6777-442e-8e36-08db9e435944)\n## From https://github.com/dotnet/arcade\n- **Subscription**: [bcf5aa31-6777-442e-8e36-08db9e435944](https://maestro.dot.net/subscriptions?search=bcf5aa31-6777-442e-8e36-08db9e435944)\n- **Build**: [20250610.3](https://dev.azure.com/dnceng/internal/_build/results?buildId=2727308)\n- **Date Produced**: June 10, 2025 10:07:55 PM UTC\n- **Commit**: [2ce3f8c7b2614c2b19985b669ffcd934bc39ffd1](https://github.com/dotnet/arcade/commit/2ce3f8c7b2614c2b19985b669ffcd934bc39ffd1)\n- **Branch**: refs/heads/release/8.0\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.25263.4 to 8.0.0-beta.25310.3][1]\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.25263.4 to 8.0.0-beta.25310.3][1]\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.25263.4 to 8.0.0-beta.25310.3][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.25263.4 to 8.0.0-beta.25310.3][1]\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.25263.4 to 8.0.0-beta.25310.3][1]\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.25263.4 to 8.0.0-beta.25310.3][1]\n\n[1]: https://github.com/dotnet/arcade/compare/20ab70a74d...2ce3f8c7b2\n\n[DependencyUpdate]: <> (End)\n\n- **Updates to .NET SDKs:**\n  - Updates sdk.version to 8.0.117\n  - Updates tools.dotnet to 8.0.117\n\n[marker]: <> (End:bcf5aa31-6777-442e-8e36-08db9e435944)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13585)","Url":"https://github.com/dotnet/winforms/pull/13585","RelatedDescription":"Closed or merged PR \"[release/8.0] Update dependencies from dotnet/arcade\" (#13585)"},{"Id":"3135261861","IsPullRequest":true,"CreatedAt":"2025-06-11T06:15:55","Actor":"dotnet-maestro[bot]","Number":"13581","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250610.7](https://dev.azure.com/dnceng/internal/_build/results?buildId=2727197)\n- **Date Produced**: June 10, 2025 10:04:34 PM UTC\n- **Commit Diff**: [9a90ec1...604a661](https://github.com/dotnet/dotnet/compare/9a90ec1b43070dc3ee0f0b869a78a175c1d33b68...604a6612d130bc042dc973aba84889f529f9cb69)\n- **Commit**: [604a6612d130bc042dc973aba84889f529f9cb69](https://github.com/dotnet/dotnet/commit/604a6612d130bc042dc973aba84889f529f9cb69)\n- **Branch**: main\n\n**Updated Dependencies**\n- **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **System.Resources.Extensions**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **System.Windows.Extensions**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **System.Text.Encodings.Web**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **System.Text.Json**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **System.CodeDom**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **System.Formats.Nrbf**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **System.IO.Hashing**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25306.103 to 10.0.0-beta.25310.107][1]\n- **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25306.103 to 10.0.0-beta.25310.107][1]\n- **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25306.103 to 10.0.0-beta.25310.107][1]\n- **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25306.103 to 10.0.0-beta.25310.107][1]\n- **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25306.103 to 10.0.0-beta.25310.107][1]\n- **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25306.103 to 10.0.0-beta.25310.107][1]\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/9a90ec1b43...604a6612d1\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13581)","Url":"https://github.com/dotnet/winforms/pull/13581","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13581)"},{"Id":"3134739124","IsPullRequest":true,"CreatedAt":"2025-06-11T01:52:53","Actor":"vseanreesermsft","Number":"13579","RawContent":null,"Title":"Merging internal commits for release/8.0","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13579)","Url":"https://github.com/dotnet/winforms/pull/13579","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/8.0\" (#13579)"},{"Id":"3134756375","IsPullRequest":true,"CreatedAt":"2025-06-11T01:52:46","Actor":"vseanreesermsft","Number":"13580","RawContent":null,"Title":"Merging internal commits for release/9.0","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13580)","Url":"https://github.com/dotnet/winforms/pull/13580","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/9.0\" (#13580)"},{"Id":"3132026618","IsPullRequest":true,"CreatedAt":"2025-06-10T09:57:33","Actor":"Epica3055","Number":"13573","RawContent":null,"Title":"fix #13086 The DemoConsole application in the Winforms repo stops running after convert added MenuItems to other type items then clicking the last 'Type Here'","State":"closed","Body":"Fix #13086 , also Fix #13085, because they share the same root cause.\r\n\r\n## Root cause\r\nIn the process, we generated a new Component with an already existing name.\r\n![Issue_13086_02](https://github.com/user-attachments/assets/ebab61b3-c9d6-4567-8dae-34826dcfa5cc)\r\n\r\n\r\n## Proposed changes\r\n\r\n- \r\n- modify NameCreationServiceImp.CreateName()\r\n- \r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nhttps://github.com/user-attachments/assets/350c03de-6904-4a56-8c61-1b4a7bdddcb2\r\n\r\n### After\r\n\r\n![Issue_13086_03](https://github.com/user-attachments/assets/bd2e1d4e-f749-472e-9743-6eecabcaf007)\r\n\r\n![Issue_13086_04](https://github.com/user-attachments/assets/e0de400f-d501-4971-8b00-6856ad4a3810)\r\n\r\n\r\n## Test methodology \r\n\r\n- \r\n- manually\r\n- \r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13573)","Url":"https://github.com/dotnet/winforms/pull/13573","RelatedDescription":"Closed or merged PR \"fix #13086 The DemoConsole application in the Winforms repo stops running after convert added MenuItems to other type items then clicking the last 'Type Here'\" (#13573)"},{"Id":"3132255181","IsPullRequest":true,"CreatedAt":"2025-06-10T06:04:41","Actor":"KlausLoeffelmann","Number":"13577","RawContent":null,"Title":"DarkMode (f) fix DataGridView issues","State":"open","Body":"Fixes dark mode issues around the DataGridView.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13577)","Url":"https://github.com/dotnet/winforms/pull/13577","RelatedDescription":"Open PR \"DarkMode (f) fix DataGridView issues\" (#13577)"},{"Id":"3132249642","IsPullRequest":true,"CreatedAt":"2025-06-10T06:01:36","Actor":"KlausLoeffelmann","Number":"13576","RawContent":null,"Title":"Dark mode (e) fix combo box renderer","State":"open","Body":"Fixes dark mode issues around the ComboBox.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13576)","Url":"https://github.com/dotnet/winforms/pull/13576","RelatedDescription":"Open PR \"Dark mode (e) fix combo box renderer\" (#13576)"},{"Id":"3132244665","IsPullRequest":true,"CreatedAt":"2025-06-10T05:58:52","Actor":"KlausLoeffelmann","Number":"13575","RawContent":null,"Title":"DarkMode (d) Fix ListView ColumnHeaders theme change","State":"open","Body":"This PR fixes a bug, where the ListView does not apply dark mode to the ColumnHeaders, if the View changes _after_ the ListView Handel has been created.\r\n\r\nThis fixes #13472.\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13575)","Url":"https://github.com/dotnet/winforms/pull/13575","RelatedDescription":"Open PR \"DarkMode (d) Fix ListView ColumnHeaders theme change\" (#13575)"},{"Id":"3132229470","IsPullRequest":true,"CreatedAt":"2025-06-10T05:49:54","Actor":"KlausLoeffelmann","Number":"13574","RawContent":null,"Title":"DarkMode (c) fix TabControl issues","State":"open","Body":"Fixes #11953.\r\n\r\n![DarkModeTabAndListView](https://github.com/user-attachments/assets/3515355c-e13f-4ac7-b6a4-6f132c5dbc52)\r\n\r\nNote, that this works only for horizontal Tabs and for the Standard Button Style, not for vertically aligned - we should mention this later in the docs.\r\n\r\nFor variations, folks can still owner draw the Tabs (albeit with a white frame) to customize the theme.\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13574)","Url":"https://github.com/dotnet/winforms/pull/13574","RelatedDescription":"Open PR \"DarkMode (c) fix TabControl issues\" (#13574)"},{"Id":"3131927163","IsPullRequest":true,"CreatedAt":"2025-06-10T02:47:35","Actor":"dotnet-maestro[bot]","Number":"13572","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250606.3](https://dev.azure.com/dnceng/internal/_build/results?buildId=2724748)\n- **Date Produced**: June 9, 2025 1:38:10 PM UTC\n- **Commit Diff**: [7e27ec4...9a90ec1](https://github.com/dotnet/dotnet/compare/7e27ec4c314eb774eae2c54ce4682c98973c7c60...9a90ec1b43070dc3ee0f0b869a78a175c1d33b68)\n- **Commit**: [9a90ec1b43070dc3ee0f0b869a78a175c1d33b68](https://github.com/dotnet/dotnet/commit/9a90ec1b43070dc3ee0f0b869a78a175c1d33b68)\n- **Branch**: main\n\n**Updated Dependencies**\n- **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **System.Resources.Extensions**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **System.Windows.Extensions**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **System.Text.Encodings.Web**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **System.Text.Json**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **System.CodeDom**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **System.Formats.Nrbf**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **System.IO.Hashing**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25304.106 to 10.0.0-beta.25306.103][1]\n- **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25304.106 to 10.0.0-beta.25306.103][1]\n- **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25304.106 to 10.0.0-beta.25306.103][1]\n- **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25304.106 to 10.0.0-beta.25306.103][1]\n- **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25304.106 to 10.0.0-beta.25306.103][1]\n- **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25304.106 to 10.0.0-beta.25306.103][1]\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/7e27ec4c31...9a90ec1b43\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13572)","Url":"https://github.com/dotnet/winforms/pull/13572","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13572)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-06-16T03:30:28.8758018Z","RunDurationInMilliseconds":490}