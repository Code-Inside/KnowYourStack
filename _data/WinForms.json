{"Data":{"GitHub":{"Issues":[{"Id":"2776741120","IsPullRequest":false,"CreatedAt":"2025-01-09T03:14:15","Actor":"LeafShi1","Number":"12739","RawContent":null,"Title":"WinForms Combo Box Flickering Issue","State":"open","Body":"### .NET version\n\n10.0\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo\n\n### Issue description\n\nWhen the mouse moves over the combo box, an extra white box is drawn in the input area of ​​the combo box, resulting in a flickering effect.\n\n### Steps to reproduce\n\n1. Create Winforms .NET app with ComboBox\n2. Set comboBox1.FlatStyle = FlatStyle.Popup  or comboBox1.FlatStyle = FlatStyle.Flat\n3. Move the mouse over the combo box, a flickering effect occurs.\n\nThe original bug: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/2053861\n","Url":"https://github.com/dotnet/winforms/issues/12739","RelatedDescription":"Open issue \"WinForms Combo Box Flickering Issue\" (#12739)"},{"Id":"2776732956","IsPullRequest":true,"CreatedAt":"2025-01-09T03:04:44","Actor":"lonitra","Number":"12738","RawContent":null,"Title":"Only Unwrap If Given IDataObject","State":"open","Body":"Fixes https://github.com/dotnet/winforms/issues/12665\r\n\r\nIn .NET 9, we had switched to leveraging cswin32 for our OLE interop and discovered that the clipboard always returns a proxy. In order to resolve longstanding bug https://github.com/dotnet/winforms/issues/4555, we altered behavior to be able to get the real data object out for in-process scenarios instead of the proxy. \r\nWhile doing this, we had missed the fact that for known data formats such as text, the native side includes its equivalents (e.g. CF_TEXT, CF_UNICODE) in its mappings while in managed we don't do this and will only look further if autoConvert parameter such as in [Clipboard.ContainsData](https://github.com/dotnet/winforms/blob/ce6b6c2e675edbb52900ca75f66603d2468c5034/src/System.Windows.Forms/src/System/Windows/Forms/OLE/Clipboard.cs#L199) is set to `true`. Calling `Clipboard.SetDataObject()` will not trigger the native pathway (because copy parameter = false by default) which includes known data format equivalents, meaning in .NET 9 we are only able to find equivalent formats if autoConvert = true, which it is not for Clipboard.ContainsText. \r\n\r\nThe fix tweaks the approach that we took to resolve https://github.com/dotnet/winforms/issues/4555 and will now more explicitly only do any unwrapping if the user has given us an IDataObject, otherwise if any other data is given, we will return the proxy just as the behavior in .NET 8.\r\n\r\nChanges also includes adding more tests to capture behavior and minor optimization with not wrapping twice\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12738)","Url":"https://github.com/dotnet/winforms/pull/12738","RelatedDescription":"Open PR \"Only Unwrap If Given IDataObject\" (#12738)"},{"Id":"2776731401","IsPullRequest":true,"CreatedAt":"2025-01-09T03:02:59","Actor":"LeafShi1","Number":"12737","RawContent":null,"Title":"Revert changes in PR11529 and PR11761","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #12590\r\n\r\n## Root Cause\r\n\r\nIn order to fix the flickering issue#[2053861](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/2053861), I modified the drawing logic of ComboBox in https://github.com/dotnet/winforms/pull/11529, this leads to the current issue and issue #11760.\r\n\r\n## Proposed changes\r\n\r\n- Revert the changes on PR #11529 and PR #11761\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- ComboBox dropdown button can be shown normally when switching RightToLeft property, or recreating the combobox for any other reason.\r\n\r\n## Regression? \r\n\r\n- Yes \r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n### Before\r\nWhen change the **RightToLeft** property **after expanding** the **Popup FlatStyle** comboBox, the dropdown button on the comboBox disappeared\r\n![Image](https://github.com/user-attachments/assets/2e730e12-e569-462b-812a-dcb8cf7ce2b6)\r\n\r\n### After\r\nThe dropdown button on the comboBox can be show normally\r\n![AfterChanges](https://github.com/user-attachments/assets/41bcbfea-1c44-4ee4-b875-87eada359f38)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manually\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .net 10.0.0-alpha.1.24605.1\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12737)","Url":"https://github.com/dotnet/winforms/pull/12737","RelatedDescription":"Open PR \"Revert changes in PR11529 and PR11761\" (#12737)"},{"Id":"2776661583","IsPullRequest":true,"CreatedAt":"2025-01-09T01:23:27","Actor":"Zheng-Li01","Number":"12736","RawContent":null,"Title":"Update the Update_ToolStripPanelControlCollection_XYCompareTestsFiler…","State":"open","Body":"related https://github.com/dotnet/winforms/issues/10453\r\n\r\n## Proposed changes\r\nUpdate the Update_ToolStripPanelControlCollection_XYCompareTestsFile to let the test class inherit from the IDisposable interface.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12736)","Url":"https://github.com/dotnet/winforms/pull/12736","RelatedDescription":"Open PR \"Update the Update_ToolStripPanelControlCollection_XYCompareTestsFiler…\" (#12736)"},{"Id":"2776442223","IsPullRequest":true,"CreatedAt":"2025-01-08T22:09:21","Actor":"mthalman","Number":"12735","RawContent":null,"Title":"Fix code analysis issues","State":"open","Body":"Using the latest daily build of the .NET 10 SDK to build this repo causes various code analysis build errors for IDE0040, IDE0057, IDE0305, and IDE0306. Fixing those here. These were found as part of the work in https://github.com/dotnet/sdk/pull/45749.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12735)","Url":"https://github.com/dotnet/winforms/pull/12735","RelatedDescription":"Open PR \"Fix code analysis issues\" (#12735)"},{"Id":"2775749026","IsPullRequest":false,"CreatedAt":"2025-01-08T21:49:32","Actor":"SekarSivalingam","Number":"12734","RawContent":null,"Title":"ContextMenuStrip and Submenus Placing Outside Parent Form Bounds","State":"closed","Body":"### .NET version\n\n.NET Framework 4.8\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo\n\n### Issue description\n\nWhen using a ContextMenuStrip in a WinForms application, the menu and its submenus sometimes place themselves partially or completely outside the bounds of the parent Form, especially in a multi-level submenu hierarchy.[WindowsFormsApp1 (2).zip](https://github.com/user-attachments/files/18349849/WindowsFormsApp1.2.zip)\n\n![Image](https://github.com/user-attachments/assets/f311821f-abbd-46e8-a310-634d4aadb023)\n\n\n### Steps to reproduce\n\n1.Download and run the provided sample application.\n2.Click the button on the form to open the ContextMenuStrip.\n3.Hover over a menu item that contains sub-items to open the submenu.\n4.Observe that the context menu and its submenus are placed partially or fully outside the Form1 window.\n\nExpected Behavior:\nAll levels of menus and submenus should remain fully within the boundaries of the Form1 window.","Url":"https://github.com/dotnet/winforms/issues/12734","RelatedDescription":"Closed issue \"ContextMenuStrip and Submenus Placing Outside Parent Form Bounds\" (#12734)"},{"Id":"2774614416","IsPullRequest":true,"CreatedAt":"2025-01-08T21:19:34","Actor":"LeafShi1","Number":"12731","RawContent":null,"Title":"[release/8.0] Fix #12661 Null Reference Exception: System.Windows.Forms.TabControl<WmSelChange>","State":"closed","Body":"Backport of #12683 to release/8.0\r\nFixes https://github.com/dotnet/winforms/issues/12661\r\n\r\n### Customer Impact\r\nA customer reported a crash in their application that uses WinForms TabControl and requested a fix in NET8 release. Application is running under accessibility tools and is removing TabPages from a control dynamically. When the selected page is removed, the selection moves to the next page and the corresponding accessibility event is queued using BeginInvoke to be raised. If by the time the event is raised, the page is removed, a NullReferenceException is thrown. No workaround is available.\r\n\r\n### Fix\r\nTest if the selected page is still available before raising the accessibility event inside the BeginInvoke delegate.\r\n\r\n### Testing\r\nManual with the customer repro case and unit tests.\r\n\r\n## Risk\r\nLow - this is an additional validation only.\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12731)","Url":"https://github.com/dotnet/winforms/pull/12731","RelatedDescription":"Closed or merged PR \"[release/8.0] Fix #12661 Null Reference Exception: System.Windows.Forms.TabControl<WmSelChange>\" (#12731)"},{"Id":"2774345129","IsPullRequest":true,"CreatedAt":"2025-01-08T21:19:10","Actor":"github-actions[bot]","Number":"12728","RawContent":null,"Title":"[release/9.0] Fix #12661 Null Reference Exception: System.Windows.Forms.TabControl.<WmSelChange>","State":"closed","Body":"Backport of #12683 to release/9.0\r\nFixes https://github.com/dotnet/winforms/issues/12661\r\n\r\n/cc @LeafShi1 @John-Qiao\r\n\r\n### Customer Impact\r\nA customer reported a crash in their application that uses WinForms TabControl and requested a fix in NET8 release. Application is running under accessibility tools and is removing TabPages from a control dynamically. When the selected page is removed, the selection moves to the next page and the corresponding accessibility event is queued using BeginInvoke to be raised. If by the time the event is raised, the page is removed, a NullReferenceException is thrown. No workaround is available.\r\n\r\n### Fix\r\nTest if the selected page is still available before raising the accessibility event inside the BeginInvoke delegate.\r\n\r\n### Testing\r\nManual with the customer repro case and unit tests.\r\n\r\n## Risk\r\nLow - this is an additional validation only.\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12728)","Url":"https://github.com/dotnet/winforms/pull/12728","RelatedDescription":"Closed or merged PR \"[release/9.0] Fix #12661 Null Reference Exception: System.Windows.Forms.TabControl.<WmSelChange>\" (#12728)"},{"Id":"2774563328","IsPullRequest":true,"CreatedAt":"2025-01-08T18:29:17","Actor":"kirsan31","Number":"12729","RawContent":null,"Title":"Revert #4808 fix. Due to #12591 and investigations.","State":"closed","Body":"Fix #12591.\r\nThis revert #4808 fix commit from #11358 PR.\r\n\r\nThe clean up of `DisplayedItems` after removal **has already been implemented** in `DoLayoutIfHandleCreated` but only if handle is created:\r\nhttps://github.com/dotnet/winforms/blob/034543a7f08086c5ce29d85beaafcae70c3a33a5/src/System.Windows.Forms/src/System/Windows/Forms/Controls/ToolStrips/ToolStrip.cs#L3218-L3224\r\nhttps://github.com/dotnet/winforms/blob/034543a7f08086c5ce29d85beaafcae70c3a33a5/src/System.Windows.Forms/src/System/Windows/Forms/Controls/ToolStrips/ToolStrip.cs#L3244-L3247\r\n\r\nSo we have leak only if handle is destroyed (#4808 case) and we didn't take this into account :(\r\nAll are much more complicated than [originally intended](https://github.com/dotnet/winforms/issues/4808#issuecomment-1849319594). And lead to some side affect see this [comment](https://github.com/dotnet/winforms/issues/12591#issuecomment-2573054446).\r\n\r\nI think that is safer to revert the fix and reopen #4808 then.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12729)","Url":"https://github.com/dotnet/winforms/pull/12729","RelatedDescription":"Closed or merged PR \"Revert #4808 fix. Due to #12591 and investigations.\" (#12729)"},{"Id":"2774606021","IsPullRequest":true,"CreatedAt":"2025-01-08T18:22:20","Actor":"paul1956","Number":"12730","RawContent":null,"Title":"PR Feedback Cleanup files in Separate PR","State":"closed","Body":"Fixes PR Review Comments from #12486\r\n\r\n## Proposed changes\r\nCleanup\r\nSingleInstanceHelpers.vb\r\nWindowsFormsApplicationBase.vb\r\nNetwork.DownloadFile.vb\r\nInteraction.vb\r\nClipboardProxy.vb\r\nSingleInstanceHelpersTests.vb\r\nTestUtilitiesTests.vb\r\nPathSeparatorTestData.vb\r\nVbFileCleanupTestBase.vb\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\nSimplify review if #12486\r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n- minimal only code cleanup\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12730)","Url":"https://github.com/dotnet/winforms/pull/12730","RelatedDescription":"Closed or merged PR \"PR Feedback Cleanup files in Separate PR\" (#12730)"},{"Id":"2774861604","IsPullRequest":false,"CreatedAt":"2025-01-08T09:43:47","Actor":"Liv-Goh","Number":"12733","RawContent":null,"Title":"Navigate using right key skip Alt in shortcut key property","State":"open","Body":"### .NET version\n\n.NET 10\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo, this is not a regression issue\n\n### Issue description\n\n**Current Behavior**\nWhen navigate using right key, Alt is skipped\n\nhttps://github.com/user-attachments/assets/a3e68682-323d-462d-b934-fc80dc8e7432\n\n\n**Expected Behavior**\nWhen navigate using up/down key and Tab key, Alt is not skipped \n\nhttps://github.com/user-attachments/assets/788675c7-5a9b-41ac-8cc1-234f7bc2b3ae\n\n\n### Steps to reproduce\n\n1. Download and run [WinFormsApp341.zip](https://github.com/user-attachments/files/18345301/WinFormsApp341.zip)\n2. Go to shortcut key property\n3. Expand shortcut key property\n4. Navigate using left right arrow (right arrow will skip ALT key)\n\n### More Info\nDesign time also have the same behavior\n","Url":"https://github.com/dotnet/winforms/issues/12733","RelatedDescription":"Open issue \"Navigate using right key skip Alt in shortcut key property\" (#12733)"},{"Id":"2771965284","IsPullRequest":true,"CreatedAt":"2025-01-08T08:52:47","Actor":"Liv-Goh","Number":"12718","RawContent":null,"Title":"Add unit test for LinkAreaEditor","State":"closed","Body":"Related https://github.com/dotnet/winforms/issues/10773\r\n\r\n## Proposed changes\r\n1. Add unit test LinkAreaEditorTests.cs for public properties and method of the LinkAreaEditor.\r\n2. Enable nullability in LinkAreaEditorTests.cs.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12718)","Url":"https://github.com/dotnet/winforms/pull/12718","RelatedDescription":"Closed or merged PR \"Add unit test for LinkAreaEditor\" (#12718)"},{"Id":"2774643353","IsPullRequest":true,"CreatedAt":"2025-01-08T08:48:03","Actor":"Epica3055","Number":"12732","RawContent":null,"Title":"Revert commit e109957","State":"closed","Body":"kirsan31 created [PR-11358](https://github.com/dotnet/winforms/pull/11358) to fix [Issue-4808](https://github.com/dotnet/winforms/issues/4808), but that pr also introduced [this issue](https://github.com/dotnet/winforms/issues/12591)\r\n\r\nSo revert the commit\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12732)","Url":"https://github.com/dotnet/winforms/pull/12732","RelatedDescription":"Closed or merged PR \"Revert commit e109957\" (#12732)"},{"Id":"2770079347","IsPullRequest":true,"CreatedAt":"2025-01-08T06:53:01","Actor":"Olina-Zhang","Number":"12713","RawContent":null,"Title":"Add unit tests for DataGridViewTextBoxColumn","State":"closed","Body":"related https://github.com/dotnet/winforms/issues/10453\r\n## Proposed changes\r\n\r\n- Add unit tests for DataGridViewTextBoxColumn to test its Constructor, CellTemplate, MaxInputLength, SortMode properties and ToString() method\r\n- Enable nullability in DataGridViewTextBoxColumnTests.cs\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12713)","Url":"https://github.com/dotnet/winforms/pull/12713","RelatedDescription":"Closed or merged PR \"Add unit tests for DataGridViewTextBoxColumn\" (#12713)"},{"Id":"2774302334","IsPullRequest":true,"CreatedAt":"2025-01-08T05:48:01","Actor":"dotnet-maestro[bot]","Number":"12726","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\n## From https://github.com/dotnet/runtime\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\n- **Build**: 20250107.17\n- **Date Produced**: January 8, 2025 1:45:03 AM UTC\n- **Commit**: cce6bdfc9a897faa5cd64900cfcb73d8d7a62d5f\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **Microsoft.NET.Sdk.IL**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **Microsoft.NETCore.ILDAsm**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.CodeDom**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.IO.Hashing**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.Management**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.Speech**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.Text.Encodings.Web**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.Text.Json**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.25056.22 to 10.0.0-alpha.1.25057.17][1]\n\n[1]: https://github.com/dotnet/runtime/compare/c5df73f30c...cce6bdfc9a\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12726)","Url":"https://github.com/dotnet/winforms/pull/12726","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#12726)"},{"Id":"2771706097","IsPullRequest":false,"CreatedAt":"2025-01-08T05:47:54","Actor":"HerbertScroggins","Number":"12716","RawContent":null,"Title":"FolderBrowserDialog causes application to lock up when shown modally from an MDI based application","State":"closed","Body":"### .NET version\n\n.NET SDK:\n Version:           9.0.101\n Commit:            eedb237549\n Workload version:  9.0.100-manifests.4a280210\n MSBuild version:   17.12.12+1cce77968\n\nRuntime Environment:\n OS Name:     Windows\n OS Version:  10.0.22631\n OS Platform: Windows\n RID:         win-x64\n Base Path:   C:\\Program Files\\dotnet\\sdk\\9.0.101\\\n\n.NET workloads installed:\n [aspire]\n   Installation Source: VS 17.12.35527.113\n   Manifest Version:    8.2.2/8.0.100\n   Manifest Path:       C:\\Program Files\\dotnet\\sdk-manifests\\8.0.100\\microsoft.net.sdk.aspire\\8.2.2\\WorkloadManifest.json\n   Install Type:              Msi\n\nConfigured to use loose manifests when installing new manifests.\n\nHost:\n  Version:      9.0.0\n  Architecture: x64\n  Commit:       9d5a6a9aa4\n\n.NET SDKs installed:\n  6.0.419 [C:\\Program Files\\dotnet\\sdk]\n  9.0.101 [C:\\Program Files\\dotnet\\sdk]\n\n.NET runtimes installed:\n  Microsoft.AspNetCore.App 6.0.27 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 8.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.AspNetCore.App 9.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\n  Microsoft.NETCore.App 6.0.16 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 6.0.27 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 8.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.NETCore.App 9.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\n  Microsoft.WindowsDesktop.App 6.0.27 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 8.0.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n  Microsoft.WindowsDesktop.App 9.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\n\nOther architectures found:\n  x86   [C:\\Program Files (x86)\\dotnet]\n    registered at [HKLM\\SOFTWARE\\dotnet\\Setup\\InstalledVersions\\x86\\InstallLocation]\n\nEnvironment variables:\n  Not set\n\nglobal.json file:\n  Not found\n\n### Did it work in .NET Framework?\n\nNot tested/verified\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNot tested\n\n### Issue description\n\nIf the main form of a WinForms application is an MDI parent form, attempting to show the FolderBrowserDialog modally causes the application to lock-up and the dialog does not appear.\n\nDisplaying other user (non-mdi child) forms modally works fine (including multiple (non-mdi child) forms stacked modally).\n\n### Steps to reproduce\n\n1.\tCreate an MDI parent form.\n2.\tCreate a menu option to open the FolderBrowserDialog e.g.\n```\nusing FolderBrowserDialog folderBrowserDialog = new();\nfolderBrowserDialog.ShowDialog(this);\n```\n3.\tRun the application and select the menu option to open the dialog - the dialog does not appear and the application becomes unresponsive.","Url":"https://github.com/dotnet/winforms/issues/12716","RelatedDescription":"Closed issue \"FolderBrowserDialog causes application to lock up when shown modally from an MDI based application\" (#12716)"},{"Id":"2774302405","IsPullRequest":true,"CreatedAt":"2025-01-08T05:42:52","Actor":"dotnet-maestro[bot]","Number":"12727","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\n## From https://github.com/dotnet/arcade\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\n- **Build**: 20250107.5\n- **Date Produced**: January 7, 2025 8:54:33 PM UTC\n- **Commit**: 43494f7be1c54e6a065f02f92842e08f29a1ff6f\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25056.1 to 10.0.0-beta.25057.5][1]\n  - **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25056.1 to 10.0.0-beta.25057.5][1]\n  - **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25056.1 to 10.0.0-beta.25057.5][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25056.1 to 10.0.0-beta.25057.5][1]\n  - **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25056.1 to 10.0.0-beta.25057.5][1]\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25056.1 to 10.0.0-beta.25057.5][1]\n\n[1]: https://github.com/dotnet/arcade/compare/e58820063a...43494f7be1\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12727)","Url":"https://github.com/dotnet/winforms/pull/12727","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#12727)"},{"Id":"2772209023","IsPullRequest":true,"CreatedAt":"2025-01-08T04:13:50","Actor":"LeafShi1","Number":"12719","RawContent":null,"Title":"[release/9.0] Get rid of an unexpected white line above the status strip due to a changed renderer","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nBack port pr #12646 and #12092 to release9.0\r\nFixes #12616\r\n\r\n## Bug Description\r\n\r\nIn NET9 to fix accessibility color contrast issue #11450  (the contrast between the focus color and the background color of the `ToolStripSplitButton` in the `StatusStrip` control is less than 3:1), the rendering mode of the `StatusStrip` control was changed in PR #12045. But this fix caused the issue #12616: unexpected white lines appearing in the StatusStrip component when the dialog background is dark.\r\nWe had redone the fix for color contrast issue #11450 in NET10 (PR #12092)，by changing Pen to a more contrasting one in `ToolStripSystemRenderer`, `ToolStripHighContrastRenderer` and `ToolstripProfessionalRenderer`, so that the `ToolStripSplitButton` can achieve sufficient contrast regardless of the High Contrast theme or when it gets the focus.\r\nThus the original fix that replaced the renderer is not needed, and we are reverting that commit and porting the NET10 fix to NET9.\r\n\r\n## Customer Impact\r\n\r\n- If a dialog has a dark background and uses a `StatusStrip`, an unexpected white line shows in the dialog. This regression was reported by the customer.\r\n\r\n## Regression? \r\n\r\n- Yes, it's fine in dotnet 8. This is due to [#11502](https://github.com/dotnet/winforms/pull/11502), in the PR, the default RenderMode of StatusStrip was changed from System to ManagerRenderMode.\r\n\r\n## Risk\r\n\r\n- Low\r\n\r\n## Testing\r\n\r\n- Manual testing with the user-provided project and AccessibilityInsights color contrast tool.\r\n- Automation regression test\r\n\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12719)","Url":"https://github.com/dotnet/winforms/pull/12719","RelatedDescription":"Closed or merged PR \"[release/9.0] Get rid of an unexpected white line above the status strip due to a changed renderer\" (#12719)"},{"Id":"2774053006","IsPullRequest":true,"CreatedAt":"2025-01-08T01:46:54","Actor":"MelonWang1","Number":"12725","RawContent":null,"Title":"Add unit tests for LinkAreaEditor.LinkAreaUI","State":"open","Body":"Related https://github.com/dotnet/winforms/issues/10773\r\n\r\n\r\n## Proposed changes\r\n\r\n- Add unit test LinkAreaEditor.LinkAreaUITests.cs for public properties and method of the LinkAreaEditor.LinkAreaUI.\r\n- Enable nullability in LinkAreaEditor.LinkAreaUITests.cs.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12725)","Url":"https://github.com/dotnet/winforms/pull/12725","RelatedDescription":"Open PR \"Add unit tests for LinkAreaEditor.LinkAreaUI\" (#12725)"},{"Id":"2772395888","IsPullRequest":true,"CreatedAt":"2025-01-08T00:58:59","Actor":"Epica3055","Number":"12720","RawContent":null,"Title":"fix #12591 Undo operation in DemoConsole causes ContextMenuStrip to become unusable","State":"closed","Body":"\r\nFixes #12591\r\n\r\n## root cause\r\nIn design mode. ContextMenuStript.items contains some default items which have some functionality.\r\n\r\n[This PR](https://github.com/dotnet/winforms/pull/11358) addressed [the memory leak issue](https://github.com/dotnet/winforms/issues/4808) which I think is a runtime issue.\r\n\r\n## Proposed changes\r\n\r\n- \r\n- Add DesignMode condition to exclude removing logic.\r\n- \r\n\r\n<!-- \r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n -->\r\n## Risk\r\n\r\n- low\r\n\r\n\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nhttps://github.com/user-attachments/assets/e108dec4-3987-4687-ab01-3868acfc7e00\r\n\r\n### After\r\n\r\n\r\nhttps://github.com/user-attachments/assets/747bacbb-4f56-4aec-8b4d-f5f0b383e9e8\r\n\r\n\r\n\r\nhttps://github.com/user-attachments/assets/a8cc603a-6a79-4519-a2ff-a610fbd24a14\r\n\r\n\r\n\r\n## Test methodology \r\n- \r\n- manual \r\n- \r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12720)","Url":"https://github.com/dotnet/winforms/pull/12720","RelatedDescription":"Closed or merged PR \"fix #12591 Undo operation in DemoConsole causes ContextMenuStrip to become unusable\" (#12720)"},{"Id":"2773811537","IsPullRequest":true,"CreatedAt":"2025-01-07T23:31:23","Actor":"lonitra","Number":"12724","RawContent":null,"Title":"[release/8.0] Update MicroBuild to v4","State":"closed","Body":"Infrastructure change only. This change updates MicroBuild version to get CI build passing for release/8.0 as it currently fails due to out of date MicroBuild version\r\n\r\nSame change was done to main in https://github.com/dotnet/winforms/pull/12666\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12724)","Url":"https://github.com/dotnet/winforms/pull/12724","RelatedDescription":"Closed or merged PR \"[release/8.0] Update MicroBuild to v4\" (#12724)"},{"Id":"2773779255","IsPullRequest":true,"CreatedAt":"2025-01-07T23:30:54","Actor":"github-actions[bot]","Number":"12723","RawContent":null,"Title":"[release/9.0] Update MicroBuild to v4","State":"closed","Body":"Backport of #12666 to release/9.0\r\n\r\n/cc @lonitra @ViktorHofer\r\n\r\nInfrastructure only change to get CI build passing for release/9.0 as it currently fails due to out of date microbuild version\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12723)","Url":"https://github.com/dotnet/winforms/pull/12723","RelatedDescription":"Closed or merged PR \"[release/9.0] Update MicroBuild to v4\" (#12723)"},{"Id":"2773494539","IsPullRequest":true,"CreatedAt":"2025-01-07T19:53:40","Actor":"vseanreesermsft","Number":"12721","RawContent":null,"Title":"Update branding to 8.0.13","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12721)","Url":"https://github.com/dotnet/winforms/pull/12721","RelatedDescription":"Closed or merged PR \"Update branding to 8.0.13\" (#12721)"},{"Id":"2773495018","IsPullRequest":true,"CreatedAt":"2025-01-07T19:43:50","Actor":"vseanreesermsft","Number":"12722","RawContent":null,"Title":"Update branding to 9.0.2","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12722)","Url":"https://github.com/dotnet/winforms/pull/12722","RelatedDescription":"Closed or merged PR \"Update branding to 9.0.2\" (#12722)"},{"Id":"2769703824","IsPullRequest":true,"CreatedAt":"2025-01-07T19:38:36","Actor":"Zheng-Li01","Number":"12711","RawContent":null,"Title":"Add code coverage for ToolStripPanelControlCollection_XYComparer","State":"closed","Body":"related https://github.com/dotnet/winforms/issues/10453\r\n\r\n## Proposed changes\r\nAdd unit tests for ToolStripPanelControlCollectionXYComparer.cs to test its methods\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12711)","Url":"https://github.com/dotnet/winforms/pull/12711","RelatedDescription":"Closed or merged PR \"Add code coverage for ToolStripPanelControlCollection_XYComparer\" (#12711)"},{"Id":"2771904538","IsPullRequest":true,"CreatedAt":"2025-01-07T05:43:37","Actor":"dotnet-maestro[bot]","Number":"12717","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\n## From https://github.com/dotnet/runtime\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\n- **Build**: 20250106.22\n- **Date Produced**: January 7, 2025 4:23:01 AM UTC\n- **Commit**: c5df73f30cb55ab9b0281cb915d6f51d8580a67f\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **Microsoft.NET.Sdk.IL**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **Microsoft.NETCore.ILDAsm**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.CodeDom**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.IO.Hashing**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.Management**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.Speech**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.Text.Encodings.Web**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.Text.Json**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.25056.1 to 10.0.0-alpha.1.25056.22][1]\n\n[1]: https://github.com/dotnet/runtime/compare/4b02c51f71...c5df73f30c\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12717)","Url":"https://github.com/dotnet/winforms/pull/12717","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#12717)"},{"Id":"2771014425","IsPullRequest":true,"CreatedAt":"2025-01-06T17:13:00","Actor":"dotnet-maestro[bot]","Number":"12715","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\n## From https://github.com/dotnet/arcade\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\n- **Build**: 20250106.1\n- **Date Produced**: January 6, 2025 10:58:36 AM UTC\n- **Commit**: e58820063a8754d418518bce69ca2df0e3b4ac25\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25053.3 to 10.0.0-beta.25056.1][1]\n  - **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25053.3 to 10.0.0-beta.25056.1][1]\n  - **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25053.3 to 10.0.0-beta.25056.1][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25053.3 to 10.0.0-beta.25056.1][1]\n  - **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25053.3 to 10.0.0-beta.25056.1][1]\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25053.3 to 10.0.0-beta.25056.1][1]\n\n[1]: https://github.com/dotnet/arcade/compare/05d4d46d43...e58820063a\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12715)","Url":"https://github.com/dotnet/winforms/pull/12715","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#12715)"},{"Id":"2770380442","IsPullRequest":false,"CreatedAt":"2025-01-06T10:46:35","Actor":"ElavazhaganSF4422","Number":"12714","RawContent":null,"Title":"Accessing Images from a .resource File in .NET 9.0","State":"open","Body":"### .NET version\n\n.NET 9.0\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, in the .NET 8.0 version, we were able to access the image from the .resource file.\n\n### Issue description\n\n I added an image file as a resource in my project and attempted to access the image using the ResourceManager. However, when running the application in .NET 9.0 (NET90), I encountered the following error:\n\nSystem.PlatformNotSupportedException: 'BinaryFormatter serialization and deserialization have been removed. See https://aka.ms/binaryformatter for more information.'\n\nInterestingly, this approach works successfully when using .NET 8.0 (NET80). Below are the screenshots showing the issue in NET90 and the successful result in NET80:\n\n**NET90 Error Screenshot:**\n![Image](https://github.com/user-attachments/assets/5833de59-209a-4a51-8bb9-cfde8af1a2db)\n\n\n**NET80 Success Screenshot:**\n![Image](https://github.com/user-attachments/assets/13e5c197-7080-4065-b50c-b091922e249f)\n\n\n**Request:** I need an alternate solution for accessing the .resources file in .NET 9.0, as the BinaryFormatter is no longer supported in this version. How can I successfully load and access resources, such as images, in .NET 9.0?\n\n\n\n### Steps to reproduce\n\n1. Run the Sample\n2. click the button\n\n[New folder (2).zip](https://github.com/user-attachments/files/18318362/New.folder.2.zip)\n\n\n**Observed behavior** \n![Image](https://github.com/user-attachments/assets/674d039a-4191-4ebd-ae7a-c9c079a95018)\n\n\n**Excepted behavior**\n![Image](https://github.com/user-attachments/assets/cbae47ad-62e8-4ddd-9224-f7bd3f08bb16)\n","Url":"https://github.com/dotnet/winforms/issues/12714","RelatedDescription":"Open issue \"Accessing Images from a .resource File in .NET 9.0\" (#12714)"},{"Id":"2770055089","IsPullRequest":true,"CreatedAt":"2025-01-06T07:48:22","Actor":"Nora-Zhou01","Number":"12712","RawContent":null,"Title":"Add unit tests for DesignerFrame","State":"open","Body":"Related https://github.com/dotnet/winforms/issues/10773\r\n\r\n## Proposed changes\r\n\r\n- Add unit test DesignerFrameTests.cs for public properties and method of the DesignerFrame\r\n- Enable nullability in DesignerFrameTests.cs\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12712)","Url":"https://github.com/dotnet/winforms/pull/12712","RelatedDescription":"Open PR \"Add unit tests for DesignerFrame\" (#12712)"},{"Id":"2769621692","IsPullRequest":true,"CreatedAt":"2025-01-06T01:59:45","Actor":"chaowendy","Number":"12710","RawContent":null,"Title":"add unit test for UserControlDocumentDesigner","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nRelated https://github.com/dotnet/winforms/issues/10773\r\n\r\n\r\n## Proposed changes\r\n\r\n- Add unit test UserControlDocumentDesignerTests.cs for public properties and method of the UserControlDocumentDesigner.UserControlDocumentDesigner.\r\n- Enable nullability in UserControlDocumentDesignerTests.cs.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12710)","Url":"https://github.com/dotnet/winforms/pull/12710","RelatedDescription":"Open PR \"add unit test for UserControlDocumentDesigner\" (#12710)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-01-09T03:30:29.1799768Z","RunDurationInMilliseconds":511}