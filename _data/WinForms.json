{"Data":{"GitHub":{"Issues":[{"Id":"817394155","IsPullRequest":true,"CreatedAt":"2021-02-26T14:18:48","Actor":"SergeySmirnov-Akvelon","Number":"4618","RawContent":null,"Title":"Move sub-classes of \"DataFormats\", \"DataGridViewComboBoxCell\", \"DataGridViewHeaderCell\" and \"CategoryGridEntry\" classes to their own files","State":"open","Body":"## Proposed changes\r\n- Moved sub-classes of \"DataFormats\", \"DataGridViewComboBoxCell\", \"DataGridViewHeaderCell\" and \"CategoryGridEntry\" classes to their own files \r\n## Customer Impact\r\n- No \r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .NET Core SDK 6.0.0-alpha.1.21073.5\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4618)","Url":"https://github.com/dotnet/winforms/pull/4618","RelatedDescription":"Open PR \"Move sub-classes of \"DataFormats\", \"DataGridViewComboBoxCell\", \"DataGridViewHeaderCell\" and \"CategoryGridEntry\" classes to their own files\" (#4618)"},{"Id":"817355997","IsPullRequest":true,"CreatedAt":"2021-02-26T13:52:08","Actor":"dotnet-maestro[bot]","Number":"4616","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20210225.5\r\n- **Date Produced**: 2/25/2021 6:16 PM\r\n- **Commit**: 15246f4af00a1cb2e580783d32ec2937b1878a64\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.21105.12 to 6.0.0-beta.21125.5][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.21105.12 to 6.0.0-beta.21125.5][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.21105.12 to 6.0.0-beta.21125.5][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.21105.12 to 6.0.0-beta.21125.5][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.21105.12 to 6.0.0-beta.21125.5][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/938b3e8...15246f4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4616)","Url":"https://github.com/dotnet/winforms/pull/4616","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#4616)"},{"Id":"817370641","IsPullRequest":true,"CreatedAt":"2021-02-26T13:47:30","Actor":"SergeySmirnov-Akvelon","Number":"4617","RawContent":null,"Title":"Move sub-classes of \"DataGridViewRowCollection\", \"ListBox.IntegerCollection\" and \"ListBox.SelectedIndexCollection\" classes to their own files","State":"open","Body":"## Proposed changes\r\n- Moved sub-classes of \"DataGridViewRowCollection\", \"ListBox.IntegerCollection\" and \"ListBox.SelectedIndexCollection\" classes to their own files\r\n## Customer Impact\r\n- No \r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .NET Core SDK 6.0.0-alpha.1.21073.5\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4617)","Url":"https://github.com/dotnet/winforms/pull/4617","RelatedDescription":"Open PR \"Move sub-classes of \"DataGridViewRowCollection\", \"ListBox.IntegerCollection\" and \"ListBox.SelectedIndexCollection\" classes to their own files\" (#4617)"},{"Id":"817330360","IsPullRequest":true,"CreatedAt":"2021-02-26T12:48:38","Actor":"SergeySmirnov-Akvelon","Number":"4615","RawContent":null,"Title":"Move sub-classes of \"DataGridViewCellLinkedList\", \"DataGridViewColumnCollection\", \"DataGridViewIntLinkedList\" and \"ImageCollection\" classes to their own files","State":"open","Body":"## Proposed changes\r\n- Moved sub-classes of \"DataGridViewCellLinkedList\", \"DataGridViewColumnCollection\", \"DataGridViewIntLinkedList\" and \"ImageCollection\" classes to their own files\r\n## Customer Impact\r\n- No \r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .NET Core SDK 6.0.0-alpha.1.21073.5\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4615)","Url":"https://github.com/dotnet/winforms/pull/4615","RelatedDescription":"Open PR \"Move sub-classes of \"DataGridViewCellLinkedList\", \"DataGridViewColumnCollection\", \"DataGridViewIntLinkedList\" and \"ImageCollection\" classes to their own files\" (#4615)"},{"Id":"817247089","IsPullRequest":true,"CreatedAt":"2021-02-26T10:44:38","Actor":"SergeySmirnov-Akvelon","Number":"4614","RawContent":null,"Title":"Move sub-classes of \"ToolStripComboBox\" and \"ToolStripProgressBar\" classes to their own files","State":"open","Body":"## Proposed changes\r\n- Moved sub-classes of \"ToolStripComboBox\" and \"ToolStripProgressBar\" classes to their own files\r\n## Customer Impact\r\n- No \r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .NET Core SDK 6.0.0-alpha.1.21073.5\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4614)","Url":"https://github.com/dotnet/winforms/pull/4614","RelatedDescription":"Open PR \"Move sub-classes of \"ToolStripComboBox\" and \"ToolStripProgressBar\" classes to their own files\" (#4614)"},{"Id":"817201853","IsPullRequest":true,"CreatedAt":"2021-02-26T09:43:39","Actor":"SergeySmirnov-Akvelon","Number":"4613","RawContent":null,"Title":"Move sub-classes of \"ToolStripDropDownButton\", \"ToolStripLabel\" and \"ToolStripPanelRow\" classes to their own files","State":"open","Body":"## Proposed changes\r\n- Moved sub-classes of \"ToolStripDropDownButton\", \"ToolStripLabel\" and \"ToolStripPanelRow\" classes to their own files\r\n## Customer Impact\r\n- No \r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .NET Core SDK 6.0.0-alpha.1.21073.5\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4613)","Url":"https://github.com/dotnet/winforms/pull/4613","RelatedDescription":"Open PR \"Move sub-classes of \"ToolStripDropDownButton\", \"ToolStripLabel\" and \"ToolStripPanelRow\" classes to their own files\" (#4613)"},{"Id":"817133274","IsPullRequest":true,"CreatedAt":"2021-02-26T07:59:37","Actor":"SergeySmirnov-Akvelon","Number":"4612","RawContent":null,"Title":"Move sub-classes of \"NotifyIcon\", \"ToolStripDropDownItem\", \"ToolStripSplitButton\" and \"ToolStripStatusLabel\" classes to their own files","State":"open","Body":"## Proposed changes\r\n- Moved sub-classes of \"NotifyIcon\", \"ToolStripDropDownItem\", \"ToolStripSplitButton\" and \"ToolStripStatusLabel\" classes to their own files\r\n## Customer Impact\r\n- No \r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .NET Core SDK 6.0.0-alpha.1.21073.5\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4612)","Url":"https://github.com/dotnet/winforms/pull/4612","RelatedDescription":"Open PR \"Move sub-classes of \"NotifyIcon\", \"ToolStripDropDownItem\", \"ToolStripSplitButton\" and \"ToolStripStatusLabel\" classes to their own files\" (#4612)"},{"Id":"816893147","IsPullRequest":true,"CreatedAt":"2021-02-25T23:30:25","Actor":"RussKie","Number":"4611","RawContent":null,"Title":"fix PropertyGrid value rendering (servicing 5.0)","State":"open","Body":"Fixes #4593\r\n\r\n\r\n## Proposed changes\r\n\r\nThe fix introduced in #4525 has redirected the `PropertyGrid` value rendering through a different code path which only relies on flags passed into `DrawTextInternal` completely side-stepping any modifications applied to the `Graphics` object. However the `PropertyGrid` value rendering routines do modify the `Graphics` object (applying clipping and transformations) but do not pass the necessary flags to `DrawTextInternal`.\r\n\r\nFix by applying the necessary flags to preserve the `Graphics` modifications, and add debug-time asserts to check that necessary flags are applies, if the underlying `Graphics` object is modified.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- `PropertyGrid` control is currently completely unusable without any workarounds.\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal, scoped to `PropertyGrid` control only\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![image](https://user-images.githubusercontent.com/45864649/108816650-81316c00-75f1-11eb-8acf-606c391b87d7.png)\r\n\r\n### After\r\n\r\n![image](https://user-images.githubusercontent.com/45864649/108818177-faca5980-75f3-11eb-86c2-e69ca43bd755.png)\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- added unit tests\r\n- debug added asserts to catch situations where `Graphics` object is modified, but no relevant `TextFormatFlags` supplied.\r\n- manual testing\r\n\r\nI was unable to add a rendering test for `PropertyGrid` itself as our EMF parsing implementation is incomplete. \r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4611)","Url":"https://github.com/dotnet/winforms/pull/4611","RelatedDescription":"Open PR \"fix PropertyGrid value rendering (servicing 5.0)\" (#4611)"},{"Id":"816890726","IsPullRequest":true,"CreatedAt":"2021-02-25T23:25:31","Actor":"RussKie","Number":"4610","RawContent":null,"Title":"fix PropertyGrid value rendering","State":"open","Body":"\r\nFixes #4593\r\n\r\n\r\n## Proposed changes\r\n\r\nThe fix introduced in #4525 has redirected the `PropertyGrid` value rendering through a different code path which only relies on flags passed into `DrawTextInternal` completely side-stepping any modifications applied to the `Graphics` object. However the `PropertyGrid` value rendering routines do modify the `Graphics` object (applying clipping and transformations) but do not pass the necessary flags to `DrawTextInternal`.\r\n\r\nFix by applying the necessary flags to preserve the `Graphics` modifications, and add debug-time asserts to check that necessary flags are applies, if the underlying `Graphics` object is modified.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- `PropertyGrid` control is currently completely unusable without any workarounds.\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal, scoped to `PropertyGrid` control only\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![image](https://user-images.githubusercontent.com/45864649/108816650-81316c00-75f1-11eb-8acf-606c391b87d7.png)\r\n\r\n### After\r\n\r\n![image](https://user-images.githubusercontent.com/45864649/108818177-faca5980-75f3-11eb-86c2-e69ca43bd755.png)\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- added unit tests\r\n- debug added asserts to catch situations where `Graphics` object is modified, but no relevant `TextFormatFlags` supplied.\r\n- manual testing\r\n\r\nI was unable to add a rendering test for `PropertyGrid` itself as our EMF parsing implementation is incomplete. \r\n\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4610)","Url":"https://github.com/dotnet/winforms/pull/4610","RelatedDescription":"Open PR \"fix PropertyGrid value rendering\" (#4610)"},{"Id":"816826731","IsPullRequest":false,"CreatedAt":"2021-02-25T21:30:48","Actor":"gcaughey","Number":"4609","RawContent":null,"Title":"Some file is missing from single-file self-contained publish beginning in .NET 5.0.3","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: 5.0.3\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: No\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\n\r\nApplication fails to launch with this message: Launch exception: The system cannot find the file specified. (0x80070002)\r\nThis only happens with a a single-file self-contained app published to a folder on a PC that doesn't have .NET 5 runtime installed. \r\nIf the app is published self-contained but not single-file, the app runs as expected.\r\n\r\nThis appears to only happen in a winforms app. I have not seen this behavior in WPF apps.\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n\r\n**Expected behavior:** It should run when published single-file self-contained as it did with previous versions of .NET 5, which did not have this issue,\r\n\r\n\r\n**Minimal repro:**\r\n","Url":"https://github.com/dotnet/winforms/issues/4609","RelatedDescription":"Open issue \"Some file is missing from single-file self-contained publish beginning in .NET 5.0.3\" (#4609)"},{"Id":"816825086","IsPullRequest":false,"CreatedAt":"2021-02-25T21:27:59","Actor":"RussKie","Number":"4608","RawContent":null,"Title":"Simplify `Invoke` and `BeginInvoke` signature and accept `Action`","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n## Proposed API:\r\n\r\nAdd an overload that takes `Action` as a parameter for both [`Invoke(Action method)`](https://docs.microsoft.com/dotnet/api/system.windows.forms.control.invoke) and [`BeginInvoke(Action method)`](https://docs.microsoft.com/dotnet/api/system.windows.forms.control.begininvoke). \r\nI don't think it is necessary to create overloads for methods that take `params object[] args` as it is possible to pass necessary parameters via a closure.\r\n\r\n```diff\r\n+        public IAsyncResult BeginInvoke(Action method)\r\n         public IAsyncResult BeginInvoke(Delegate method)\r\n         public IAsyncResult BeginInvoke(Delegate method, params object[] args)\r\n\r\n+        public object Invoke(Action method)\r\n         public object Invoke(Delegate method)\r\n         public object Invoke(Delegate method, params object[] args)\r\n```\r\n\r\n## Background\r\n\r\nThere are two golden rules for Windows Forms:\r\n\r\n1. Always interact with UI controls on the same thread as they are created. Interacting with controls from another thread requires [`InvokeRequired`](https://docs.microsoft.com/dotnet/api/system.windows.forms.control.invokerequired), [`Invoke`](https://docs.microsoft.com/dotnet/api/system.windows.forms.control.invoke), [`BeginInvoke`](https://docs.microsoft.com/dotnet/api/system.windows.forms.control.begininvoke), etc.\r\n2. Never execute a long-running piece of code in the UI thread.\r\n\r\n[`Invoke`](https://docs.microsoft.com/dotnet/api/system.windows.forms.control.invoke) and [`BeginInvoke`](https://docs.microsoft.com/dotnet/api/system.windows.forms.control.begininvoke) take `Delegate` as their input parameters, which requires rather cumbersome boilerplate code, and frankly look dated by todays standard.\r\n\r\nE.g.\r\n```cs\r\nprivate void UpdateUI() \r\n{\r\n    if (myControl.InvokeRequired) \r\n    {\r\n        myControl.Invoke(new MethodInvoker(() => { UpdateUI(); })); // <-- this is very cumbersome\r\n    } \r\n    else\r\n    {\r\n        // we're on UI thread, update myControl\r\n    }\r\n}\r\n``` \r\n\r\n⚠️  **NB:** The discussion of [automatically switching to the UI thread](https://medium.com/criteo-engineering/switching-back-to-the-ui-thread-in-wpf-uwp-in-modern-c-5dc1cc8efa5e) is well outside the scope of this proposal. It will come separately.\r\n\r\nThe cumbersome bit is this:\r\n```cs\r\nmyControl.Invoke(new MethodInvoker(() => { UpdateUI(); }));\r\n```\r\nwhich can also be written as \r\n```cs\r\nmyControl.Invoke((MethodInvoker)(() => { UpdateUI(); }));\r\n```\r\nHowever it can not be written as this:\r\n```cs\r\nmyControl.Invoke(() => { UpdateUI(); });\r\n```\r\ndespite the fact [`Action`](https://docs.microsoft.com/dotnet/api/system.action) is of a delegate type, just like [`MethodInvoker`](https://docs.microsoft.com/dotnet/api/system.windows.forms.methodinvoker).\r\n\r\n## Other considerations\r\n\r\nI have checked emitted IL, and it appears to be of the same size, with the only difference use of `Action` instead of `MethodInvoker`.\r\n\r\n@KlausLoeffelmann has highlighted to me that the issue appears to be C# specific, as VB understand the following right now:\r\n```vb\r\n        Friend Sub Test()\r\n            Dim control As New Button()\r\n            control.BeginInvoke(Sub()\r\n                                    MessageBox.Show(\"Test!\")\r\n                                End Sub)\r\n        End Sub\r\n```\r\nI have verified the proposal does not appear to have any negative impacts on VB.\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/4608","RelatedDescription":"Open issue \"Simplify `Invoke` and `BeginInvoke` signature and accept `Action`\" (#4608)"},{"Id":"816576333","IsPullRequest":false,"CreatedAt":"2021-02-25T16:06:46","Actor":"techfan101","Number":"4607","RawContent":null,"Title":"Inconsistent behavior getting/setting scroll bar visibility for ScrollableControl / UserControl","State":"open","Body":"**Environment**\r\n\r\n.NET Core Version: 5.0\r\n\r\n**Problem description:**\r\n\r\nWhile I was implementing a custom [UserControl](https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.usercontrol), I noticed some very strange behavior regarding the visibility of the scroll bars.  Upon further investigation, this behavior seems to point to a bug in its parent class:  [ScrollableControl](https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.scrollablecontrol).\r\n\r\nIn a class derived from [ScrollableControl](https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.scrollablecontrol), there appear to be three different documented means of getting or setting the visibility of the scroll bars:\r\n\r\n1. Via the [HorizontalScroll](https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.scrollablecontrol.horizontalscroll) or [VerticalScroll](https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.scrollablecontrol.verticalscroll) properties, using their [Visible](https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.scrollproperties.visible) field.\r\n2. Via the [HScroll](https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.scrollablecontrol.hscroll) or [VScroll](https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.scrollablecontrol.vscroll) properties.\r\n3. Via the [GetScrollState](https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.scrollablecontrol.getscrollstate)/[SetScrollState](https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.scrollablecontrol.setscrollstate) methods, using the [ScrollStateHScrollVisible](https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.scrollablecontrol.scrollstatehscrollvisible)/[ScrollStateVScrollVisible](https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.scrollablecontrol.scrollstatevscrollvisible) bits.\r\n\r\nSetting the visibility using method 1 ([HorizontalScroll](https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.scrollablecontrol.horizontalscroll)/[VerticalScroll](https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.scrollablecontrol.verticalscroll)) successfully changes the visibility of the scroll bars.  However, the results returned by methods 2 ([HScroll](https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.scrollablecontrol.hscroll)/[VScroll](https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.scrollablecontrol.vscroll)) and 3 ([GetScrollState](https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.scrollablecontrol.getscrollstate)) do not reflect the changed value.\r\n\r\nSetting the visibility using methods 2 ([HScroll](https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.scrollablecontrol.hscroll)/[VScroll](https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.scrollablecontrol.vscroll)) and 3 ([SetScrollState](https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.scrollablecontrol.setscrollstate))  does not normally (more on this later) affect the visibility of the scroll bars.  Also, the results returned by method 1 ([HorizontalScroll](https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.scrollablecontrol.horizontalscroll)/[VerticalScroll](https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.scrollablecontrol.verticalscroll)) do not reflect the changed value.\r\n\r\nI'll class the following under the truly weird category, to the point I highly doubted my own results.  Starting with both scroll bars already visible, setting either the horizontal **OR** vertical visibility to true (using methods 2 or 3), will cause **BOTH** scroll bars to vanish.  Even stranger, after they have vanished, the visibility returned by method 1 will indicate that they are both still visible.  This result was so unexpected, that I spent a lot of time confirming the behavior.\r\n\r\n**Expected behavior:**\r\n\r\nAssuming [AutoScroll](https://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.scrollablecontrol.autoscroll) is set to false, after changing the visibility using any of these three methods, one would reasonably expect two things to occur:\r\n\r\n1. The visibility of the control would actually change.\r\n2. Subsequently, getting that same visibility using any of the three methods would return the same result.\r\n\r\nRegrettably, as described earlier, neither of these two assertions is true.\r\n\r\n**Minimal repro:**\r\n\r\nHere, I've focused solely on the disconnect between the set values and the expected get values.  Below is a derived class, with three test methods:\r\n\r\n1. `HorizontalVerticalScrollTest` - This demonstrates failed assertions resulting from setting visibility via method 1.\r\n2. `HVScrollTest` - This demonstrates failed assertions resulting from setting visibility via method 2.\r\n3. `ScrollStateHVScrollVisibleTest` - This demonstrates failed assertions resulting from setting visibility via method 3.\r\n\r\nThe GUI aspects of visibility are not reproduced here, though this is easily accomplished by hosting this derived control in a form.\r\n\r\n```\r\nusing System;\r\nusing System.Windows.Forms;\r\n\r\nnamespace ScrollableControlBug\r\n{\r\n\tpublic class DerivedControl : ScrollableControl\r\n\t{\r\n\t\t// In this method, the following assertions fail (see AssertAfterState)\r\n\t\t//   After: HScroll\r\n\t\t//   After: VScroll\r\n\t\t//   After: ScrollStateHScrollVisible\r\n\t\t//   After: ScrollStateVScrollVisible\r\n\t\tpublic void HorizontalVerticalScrollTest()\r\n\t\t{\r\n\t\t\tAssertBeforeState();\r\n\r\n\t\t\tHorizontalScroll.Visible = true;\r\n\t\t\tVerticalScroll.Visible = true;\r\n\r\n\t\t\tAssertAfterState();\r\n\t\t}\r\n\r\n\t\t// In this method, the following assertions fail (see AssertAfterState)\r\n\t\t//   After: HorizontalScroll.Visible\r\n\t\t//   After: VerticalScroll.Visible\r\n\t\tpublic void HVScrollTest()\r\n\t\t{\r\n\t\t\tAssertBeforeState();\r\n\r\n\t\t\tHScroll = true;\r\n\t\t\tVScroll = true;\r\n\r\n\t\t\tAssertAfterState();\r\n\t\t}\r\n\r\n\t\t// In this method, the following assertions fail (see AssertAfterState)\r\n\t\t//   After: HorizontalScroll.Visible\r\n\t\t//   After: VerticalScroll.Visible\r\n\t\tpublic void ScrollStateHVScrollVisibleTest()\r\n\t\t{\r\n\t\t\tAssertBeforeState();\r\n\r\n\t\t\tSetScrollState(ScrollStateHScrollVisible, true);\r\n\t\t\tSetScrollState(ScrollStateVScrollVisible, true);\r\n\r\n\t\t\tAssertAfterState();\r\n\t\t}\r\n\r\n\t\tprivate void AssertBeforeState()\r\n\t\t{\r\n\t\t\tAssert.IsFalse(AutoScroll, \"Before: AutoScroll\");\r\n\t\t\tAssert.IsFalse(HorizontalScroll.Visible, \"Before: HorizontalScroll.Visible\");\r\n\t\t\tAssert.IsFalse(VerticalScroll.Visible, \"Before: VerticalScroll.Visible\");\r\n\t\t\tAssert.IsFalse(HScroll, \"Before: HScroll\");\r\n\t\t\tAssert.IsFalse(VScroll, \"Before: VScroll\");\r\n\t\t\tAssert.IsFalse(GetScrollState(ScrollStateHScrollVisible), \"Before: ScrollStateHScrollVisible\");\r\n\t\t\tAssert.IsFalse(GetScrollState(ScrollStateVScrollVisible), \"Before: ScrollStateVScrollVisible\");\r\n\t\t}\r\n\r\n\t\tprivate void AssertAfterState()\r\n\t\t{\r\n\t\t\tAssert.IsFalse(AutoScroll, \"After: AutoScroll\");\r\n\t\t\tAssert.IsTrue(HorizontalScroll.Visible, \"After: HorizontalScroll.Visible\");\r\n\t\t\tAssert.IsTrue(VerticalScroll.Visible, \"After: VerticalScroll.Visible\");\r\n\t\t\tAssert.IsTrue(HScroll, \"After: HScroll\");\r\n\t\t\tAssert.IsTrue(VScroll, \"After: VScroll\");\r\n\t\t\tAssert.IsTrue(GetScrollState(ScrollStateHScrollVisible), \"After: ScrollStateHScrollVisible\");\r\n\t\t\tAssert.IsTrue(GetScrollState(ScrollStateVScrollVisible), \"After: ScrollStateVScrollVisible\");\r\n\t\t}\r\n\r\n\t\tprivate static class Assert\r\n\t\t{\r\n\t\t\tpublic static void IsFalse(bool value, string message)\r\n\t\t\t{\r\n\t\t\t\tif (value)\r\n\t\t\t\t\tthrow new Exception(message);\r\n\t\t\t}\r\n\r\n\t\t\tpublic static void IsTrue(bool value, string message)\r\n\t\t\t{\r\n\t\t\t\tif (!value)\r\n\t\t\t\t\tthrow new Exception(message);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/4607","RelatedDescription":"Open issue \"Inconsistent behavior getting/setting scroll bar visibility for ScrollableControl / UserControl\" (#4607)"},{"Id":"816495515","IsPullRequest":true,"CreatedAt":"2021-02-25T14:36:51","Actor":"SergeySmirnov-Akvelon","Number":"4606","RawContent":null,"Title":"Moved sub-classes of \"FileDialog\", \"OpenFileDialog\" and \"SaveFileDialog\" classes to their own files","State":"open","Body":"## Proposed changes\r\n- Moved sub-classes of \"FileDialog\", \"OpenFileDialog\" and \"SaveFileDialog\" classes to their own files \r\n## Customer Impact\r\n- No \r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .NET Core SDK 6.0.0-alpha.1.21073.5\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4606)","Url":"https://github.com/dotnet/winforms/pull/4606","RelatedDescription":"Open PR \"Moved sub-classes of \"FileDialog\", \"OpenFileDialog\" and \"SaveFileDialog\" classes to their own files\" (#4606)"},{"Id":"816458941","IsPullRequest":true,"CreatedAt":"2021-02-25T13:54:42","Actor":"SergeySmirnov-Akvelon","Number":"4605","RawContent":null,"Title":"Move sub-classes of \"ColumnHeader\" and \"ErrorProvider\" classes to their own files","State":"open","Body":"## Proposed changes\r\n- Moved sub-classes of \"ColumnHeader\" and \"ErrorProvider\"  classes to their own files\r\n## Customer Impact\r\n- No \r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .NET Core SDK 6.0.0-alpha.1.21073.5\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4605)","Url":"https://github.com/dotnet/winforms/pull/4605","RelatedDescription":"Open PR \"Move sub-classes of \"ColumnHeader\" and \"ErrorProvider\" classes to their own files\" (#4605)"},{"Id":"816431784","IsPullRequest":true,"CreatedAt":"2021-02-25T13:37:06","Actor":"dotnet-maestro[bot]","Number":"4604","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20210225.3\r\n- **Date Produced**: 2/25/2021 11:55 AM\r\n- **Commit**: 12ec2197ed3999c98f49c006a27ee761282df168\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **System.CodeDom**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **System.Text.Json**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-preview.3.21123.15 to 6.0.0-preview.3.21125.3][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/87a7159...12ec219\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4604)","Url":"https://github.com/dotnet/winforms/pull/4604","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#4604)"},{"Id":"816418959","IsPullRequest":true,"CreatedAt":"2021-02-25T13:05:40","Actor":"SergeySmirnov-Akvelon","Number":"4603","RawContent":null,"Title":"Move sub-classes of \"PropertyGridView\" classes to their own files","State":"open","Body":"## Proposed changes\r\n- Moved sub-classes of \"PropertyGridView\"  class to their own files\r\n## Customer Impact\r\n- No \r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .NET Core SDK 6.0.0-alpha.1.21073.5\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4603)","Url":"https://github.com/dotnet/winforms/pull/4603","RelatedDescription":"Open PR \"Move sub-classes of \"PropertyGridView\" classes to their own files\" (#4603)"},{"Id":"816403692","IsPullRequest":true,"CreatedAt":"2021-02-25T12:45:06","Actor":"SergeySmirnov-Akvelon","Number":"4602","RawContent":null,"Title":"Move sub-classes of \"PropertyGrid\"  classes to their own files","State":"open","Body":"## Proposed changes\r\n- Moved sub-classes of \"PropertyGrid\"  class to their own files\r\n- Fixed unit tests\r\n\r\n## Customer Impact\r\n- No \r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .NET Core SDK 6.0.0-alpha.1.21073.5\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4602)","Url":"https://github.com/dotnet/winforms/pull/4602","RelatedDescription":"Open PR \"Move sub-classes of \"PropertyGrid\"  classes to their own files\" (#4602)"},{"Id":"816369586","IsPullRequest":false,"CreatedAt":"2021-02-25T11:57:04","Actor":"PavelAgurov","Number":"4601","RawContent":null,"Title":"TabControl control has transparent tab color by default","State":"open","Body":"Hi,\r\n\r\nWhen I put TabControl to the form I have transparent color of all tabs.\r\nIt’s not usefule - I have to change it to the “Control” color or something like this.\r\nCan you set some color for tab pages by default?\r\n\r\nBR,\r\nPavel","Url":"https://github.com/dotnet/winforms/issues/4601","RelatedDescription":"Open issue \"TabControl control has transparent tab color by default\" (#4601)"},{"Id":"816186119","IsPullRequest":false,"CreatedAt":"2021-02-25T07:56:28","Actor":"HubKing","Number":"4600","RawContent":null,"Title":"Make the owner window foreground, when the child window that the user had clicked is closed.","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n<!--\r\n    A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\r\n  -->\r\nI have been personally annoyed by this \"disappearing window\" issue of my own WinForms app for years. When I close a child window, suddenly the main window gets hidden for some reason. I did not know exactly why it happened, and today, I finally found it out.\r\n\r\nLet's say that the WinForms app has a MainWindow and a child Window. Create a new WinForms project, and add the following lines of code after `InitializeComponent();`.\r\n\r\n\t\tthis.Size = new Size(600,300);\r\n\t\tvar b = new Button();\r\n\t\tb.Text = \"Open\";\r\n\t\tb.Location = new Point(100,100);\r\n\t\tthis.Controls.Add(b);\r\n\t\tb.Click += (_, _) =>\r\n\t\t {\r\n\t\t\tvar f = new Form();\r\n\t\t\tf.Size = new Size(600,300);\r\n\t\t\tf.Show(this);\r\n\t\t};\r\n\r\nNow, run the application, and click the button. When the child window is open, click another application so that it becomes the foreground app obscuring the WinForms app. Now, click the child window to make the WinForms app foreground. We can see both the child and the main window. Now close the child window. I expect then the main window becomes the foreground window, because the WinForms app is the foreground app. However, it gets obscured by the other application. See the screen recording below.\r\n\r\n![LiFd8mumVi](https://user-images.githubusercontent.com/10900489/109120482-5843df00-7789-11eb-81a4-f80edaf187ea.gif)\r\n\r\nProbably the developers thought this was the correct behaviour, but to a simple user like myself, this is counter-intuitive. I thought I brought the WinForms app to the foreground by clicking the child window. Even if the child window is closed, this WinForms app should stay foreground.\r\n\r\n**Describe the solution you'd like and alternatives you've considered**\r\n<!--\r\n    A clear and concise description of what you want to happen. This includes:\r\n    - Description of what API need to be added or changed.\r\n    - Code that shows the surface area of the API.\r\n    - Code that shows real world scenarios, and how they would otherwise be handled.\r\n    - Details showing the usage/consumption of the proposed new API, and alternatives (e.g. not having this API).\r\n    - Any other context or screenshots about the feature request here.\r\n\r\n    :exclamation: Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md for more details\r\n\r\n  -->\r\n\r\nThere needs to be an option to make the owner window of the foreground child window stay foreground when the foreground child window is closed. I do not know if in some cases, the current behaviour makes more sense, but in my opinion, most of the cases, it is desirable that the main window stays foreground.\r\n\r\n**Will this feature affect UI controls?**\r\n<!--\r\n    Yes\r\n\r\n    If yes, describe the following:\r\n\r\n        - Will VS Designer need to support the feature? If yes, describe how you expect it to funсtion.\r\n        - What impact will it have on accessibility?\r\n        - Will this feature need to be localized or be localizable?\r\n  -->\r\n\r\nNo VS designer support or localisation is needed; just a behavioural change of the Form. I am not sure about accessibility, but probably no impact.","Url":"https://github.com/dotnet/winforms/issues/4600","RelatedDescription":"Open issue \"Make the owner window foreground, when the child window that the user had clicked is closed.\" (#4600)"},{"Id":"816173328","IsPullRequest":false,"CreatedAt":"2021-02-25T07:35:28","Actor":"Zheng-Li01","Number":"4599","RawContent":null,"Title":"Missing the description for some properties & events of migrated DataSet control","State":"open","Body":"* .NET Core Version: \r\n.NET 6.0.100-preview.3.21123.4\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\nMissing the description for some properties & events of migrated DataSet, DirectorySearcher, DirectoryEntry, PerformanceCounte controls.\r\n\r\n**Expected behavior:**\r\nThere have the description for some properties & events of migrated DataSet control.\r\n\r\n**Minimal repro:**\r\n1. Extract the attached application([FraTestingNewIssue.zip](https://github.com/dotnet/winforms/files/6041197/FraTestingNewIssue.zip)).\r\n2. Open the Form1.cs[Deisgn], and select the dataSet1 control.\r\n3. Observe the description of CaseSensitive property in the property browser window.\r\n![image](https://user-images.githubusercontent.com/38325459/109118990-0a29de00-777f-11eb-8d45-2acdab0beed2.png)","Url":"https://github.com/dotnet/winforms/issues/4599","RelatedDescription":"Open issue \"Missing the description for some properties & events of migrated DataSet control\" (#4599)"},{"Id":"815769987","IsPullRequest":false,"CreatedAt":"2021-02-24T19:18:54","Actor":"Tanya-Solyanik","Number":"4598","RawContent":null,"Title":"Form and CheckedListBox icons contain only 16x16 frames","State":"open","Body":"We need icons with multiple resolution to support HDPI environment. \r\nhttps://github.com/dotnet/winforms/blob/main/src/System.Windows.Forms/src/Resources/System/Windows/Forms/Form.ico\r\nhttps://github.com/dotnet/winforms/blob/main/src/System.Windows.Forms/src/Resources/System/Windows/Forms/CheckedListBox.ico\r\n![image](https://user-images.githubusercontent.com/15823268/109053876-0c623e80-7692-11eb-973f-bc4994aa8778.png)\r\n\r\n \r\n![image](https://user-images.githubusercontent.com/15823268/109053525-a4abf380-7691-11eb-985b-9b570d6fb797.png)\r\n![image](https://user-images.githubusercontent.com/15823268/109053566-b2fa0f80-7691-11eb-9331-39a818d42078.png)\r\n\r\nPorted from \r\nhttps://github.com/dotnet/winforms-designer/issues/2904\r\nhttps://github.com/dotnet/winforms-designer/issues/2905\r\n","Url":"https://github.com/dotnet/winforms/issues/4598","RelatedDescription":"Open issue \"Form and CheckedListBox icons contain only 16x16 frames\" (#4598)"},{"Id":"815470114","IsPullRequest":true,"CreatedAt":"2021-02-24T13:44:06","Actor":"dotnet-maestro[bot]","Number":"4597","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20210223.15\r\n- **Date Produced**: 2/24/2021 9:01 AM\r\n- **Commit**: 87a7159be8ca598838ae014bcd11bff5c7d779c5\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **System.CodeDom**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **System.Text.Json**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-preview.3.21123.2 to 6.0.0-preview.3.21123.15][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/b121bca...87a7159\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4597)","Url":"https://github.com/dotnet/winforms/pull/4597","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#4597)"},{"Id":"815013900","IsPullRequest":true,"CreatedAt":"2021-02-24T02:26:39","Actor":"dotnet-maestro[bot]","Number":"4596","RawContent":null,"Title":"[release/6.0-preview2] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:f8d7b52c-46ae-46a8-5b7b-08d8d784082a)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: f8d7b52c-46ae-46a8-5b7b-08d8d784082a\r\n- **Build**: 20210223.7\r\n- **Date Produced**: 2/23/2021 5:01 PM\r\n- **Commit**: ec21beea1763aa539e1084e595a86a58d444036e\r\n- **Branch**: refs/heads/release/6.0-preview2\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **System.CodeDom**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **System.Text.Json**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.2.21123.7][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/a350bc6...ec21bee\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:f8d7b52c-46ae-46a8-5b7b-08d8d784082a)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4596)","Url":"https://github.com/dotnet/winforms/pull/4596","RelatedDescription":"Closed or merged PR \"[release/6.0-preview2] Update dependencies from dotnet/runtime\" (#4596)"},{"Id":"814455450","IsPullRequest":true,"CreatedAt":"2021-02-23T13:52:00","Actor":"dotnet-maestro[bot]","Number":"4595","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20210223.2\r\n- **Date Produced**: 2/23/2021 9:39 AM\r\n- **Commit**: b121bcacec60f10b316b25eb9d0b7113599bc508\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **System.CodeDom**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **System.Text.Json**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-preview.3.21121.7 to 6.0.0-preview.3.21123.2][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/49cfb35...b121bca\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4595)","Url":"https://github.com/dotnet/winforms/pull/4595","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#4595)"},{"Id":"814240361","IsPullRequest":false,"CreatedAt":"2021-02-23T08:34:58","Actor":"rvv27","Number":"4594","RawContent":null,"Title":"DataGridView.SelectedCells returns inconsistent results based on selection type","State":"open","Body":"* .NET Core Version: \r\nAny version\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**Problem description:**\r\nWhen using DataGridView.SelectedCells property it returns the Selected Cells. When doing so it ignores the cells from rows which are set Visible = false. i.e. SelectedCells.Count ignores the hidden rows and gets the actual visible cell count\r\n\r\nBug: This however doesn't work if you use rectangular selection. i.e. The selection must include more than 1 column and more than 1 row. In this case the SelectedCells include all the cells from top left to bottom right corners, even from the rows which are set to Visible = false. This is a Inconsistent behavior.\r\n\r\n**Expected behavior:**\r\nDatagridView.SelectedCells property should behave the same no matter the selection type. Whether the selection is from the same column or same row or rectangular selection.\r\n\r\n**Minimal repro:**\r\nAny Datagridview produces this result","Url":"https://github.com/dotnet/winforms/issues/4594","RelatedDescription":"Open issue \"DataGridView.SelectedCells returns inconsistent results based on selection type\" (#4594)"},{"Id":"814239593","IsPullRequest":false,"CreatedAt":"2021-02-23T08:33:49","Actor":"Jessie-Zhang01","Number":"4593","RawContent":null,"Title":"The default value is not displayed in the correct position after setting SelectedObject property for PropertyGird control","State":"open","Body":"* .NET Core Version: .Net SDK 6.0.100-preview.2.21120.3, .Net SDK 5.0.104 from March 2021 Update Test Pass\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\nThe default value is not displayed in the correct position after setting SelectedObject property for PropertyGird control. It seems to be displayed in the upper left corner of the propertygrid.\r\n![image](https://user-images.githubusercontent.com/45864649/108816650-81316c00-75f1-11eb-8acf-606c391b87d7.png)\r\n![step1](https://user-images.githubusercontent.com/45864649/108818313-24838080-75f4-11eb-9558-d09cb32590ea.gif)\r\n\r\n**Expected behavior:**\r\nAfter setting the SelectedObject property for the PropertyGird control, it should display correct default values.\r\n![image](https://user-images.githubusercontent.com/45864649/108818177-faca5980-75f3-11eb-86c2-e69ca43bd755.png)\r\n\r\n**More Info:**\r\nThis is a regression issue, it cannot reproduce on .Net SDK 5.0.103 and .Net SDK 6.0.100-preview.2.21111.1, but can reproduce on **.Net SDK 5.0.104 from March 2021 Update Test Pass and .Net SDK 6.0.100-preview.2.21112.1**.\r\n\r\n**Minimal repro:**\r\n\r\n1. Create a WinForms .Net Core application.\r\n2. Add a PropertyGird control to Form.\r\n3. Press F4 to go to the Property Browser Window, set its SelectedObject property to Form1.\r\n4. Build and run the application, observe the PropertyGrid.\r\n\r\nOr\r\n\r\n1. Extract the attached project and open it.\r\n[Test.zip](https://github.com/dotnet/winforms/files/6027544/Test.zip)\r\n\r\n2. Build and run this application, observe the PropertyGrid.","Url":"https://github.com/dotnet/winforms/issues/4593","RelatedDescription":"Open issue \"The default value is not displayed in the correct position after setting SelectedObject property for PropertyGird control\" (#4593)"},{"Id":"813491061","IsPullRequest":true,"CreatedAt":"2021-02-22T13:50:30","Actor":"dotnet-maestro[bot]","Number":"4592","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20210221.7\r\n- **Date Produced**: 2/22/2021 4:18 AM\r\n- **Commit**: 49cfb3507c586b539d0652814defbbc9e3073f16\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **System.CodeDom**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **System.Text.Json**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-preview.2.21120.6 to 6.0.0-preview.3.21121.7][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/a350bc6...49cfb35\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4592)","Url":"https://github.com/dotnet/winforms/pull/4592","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#4592)"},{"Id":"812645033","IsPullRequest":true,"CreatedAt":"2021-02-22T08:19:14","Actor":"gpetrou","Number":"4588","RawContent":null,"Title":"Enable nullability in TreeViewHitTestInfo","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in TreeViewHitTestInfo.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4588)","Url":"https://github.com/dotnet/winforms/pull/4588","RelatedDescription":"Closed or merged PR \"Enable nullability in TreeViewHitTestInfo\" (#4588)"},{"Id":"813007111","IsPullRequest":true,"CreatedAt":"2021-02-22T00:59:28","Actor":"RussKie","Number":"4590","RawContent":null,"Title":"Use Microsoft.Windows.Compatibility","State":"open","Body":"Replace loose references with the ref pack\r\nhttps://github.com/dotnet/runtime/blob/8e943c5e1513a816777961a8adf0151c189d181a/src/libraries/pkg/Microsoft.Windows.Compatibility/Microsoft.Windows.Compatibility.pkgproj#L1\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4590)","Url":"https://github.com/dotnet/winforms/pull/4590","RelatedDescription":"Open PR \"Use Microsoft.Windows.Compatibility\" (#4590)"},{"Id":"812853367","IsPullRequest":true,"CreatedAt":"2021-02-21T13:30:12","Actor":"dotnet-maestro[bot]","Number":"4589","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20210220.6\r\n- **Date Produced**: 2/21/2021 12:20 AM\r\n- **Commit**: a350bc6e0896d2869e4028fdafb94588e3fe0867\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **System.CodeDom**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **System.Text.Json**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-preview.2.21119.11 to 6.0.0-preview.2.21120.6][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/064a4a3...a350bc6\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/4589)","Url":"https://github.com/dotnet/winforms/pull/4589","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#4589)"}],"ResultType":"GitHubIssue"}},"RunOn":"2021-02-27T05:30:33.6098152Z","RunDurationInMilliseconds":546}