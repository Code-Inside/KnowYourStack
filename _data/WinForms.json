{"Data":{"GitHub":{"Issues":[{"Id":"1761796082","IsPullRequest":true,"CreatedAt":"2023-06-17T12:03:46","Actor":"dotnet-maestro[bot]","Number":"9306","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230617.4\r\n- **Date Produced**: June 17, 2023 9:49:34 PM UTC\r\n- **Commit**: 2c62994efb2495dcaef2312de3ab25ea4792b23a\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **System.CodeDom**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **System.Data.Odbc**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **System.Data.OleDb**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **System.IO.Ports**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **System.Management**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **System.Reflection.Context**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **System.Runtime.Caching**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **System.Speech**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **System.Text.Json**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.6.23316.1 to 8.0.0-preview.6.23317.4][2]\r\n\r\n[2]: https://github.com/dotnet/runtime/compare/be6a1389c8...2c62994efb\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9306)\r\n","Url":"https://github.com/dotnet/winforms/pull/9306","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/runtime\" (#9306)"},{"Id":"1761795413","IsPullRequest":true,"CreatedAt":"2023-06-17T12:02:13","Actor":"dotnet-maestro[bot]","Number":"9305","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20230616.6\r\n- **Date Produced**: June 16, 2023 5:38:51 PM UTC\r\n- **Commit**: e2334b2be36919347923d0ec872a46acddb1e385\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23314.1 to 8.0.0-beta.23316.6][2]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.23314.1 to 8.0.0-beta.23316.6][2]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.23314.1 to 8.0.0-beta.23316.6][2]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23314.1 to 8.0.0-beta.23316.6][2]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.23314.1 to 8.0.0-beta.23316.6][2]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23314.1 to 8.0.0-beta.23316.6][2]\r\n\r\n[2]: https://github.com/dotnet/arcade/compare/c279376800...e2334b2be3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9305)\r\n","Url":"https://github.com/dotnet/winforms/pull/9305","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#9305)"},{"Id":"1760496814","IsPullRequest":true,"CreatedAt":"2023-06-16T23:29:39","Actor":"dotnet-maestro[bot]","Number":"9302","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230616.1\r\n- **Date Produced**: June 16, 2023 10:05:12 AM UTC\r\n- **Commit**: be6a1389c852fdc96a919769867fb3f3ddb0fbde\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.CodeDom**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Data.Odbc**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Data.OleDb**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.IO.Ports**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Management**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Reflection.Context**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Runtime.Caching**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Speech**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Text.Json**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.6.23314.15 to 8.0.0-preview.6.23316.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/171a525880...be6a1389c8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9302)","Url":"https://github.com/dotnet/winforms/pull/9302","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#9302)"},{"Id":"1760887377","IsPullRequest":false,"CreatedAt":"2023-06-16T15:48:59","Actor":"sharwell","Number":"9304","RawContent":null,"Title":"Unit tests crash due to failure to resolve Arg_NullReferenceException","State":"open","Body":"```\r\nProcess terminated. Encountered infinite recursion while looking up resource 'Arg_NullReferenceException' in System.Private.CoreLib. Verify the installation of .NET is complete and does not need repairing, and that the state of the process has not become corrupted.\r\n   at System.Environment.FailFast(System.String)\r\n   at System.SR.InternalGetResourceString(System.String)\r\n   at System.SR.GetResourceString(System.String)\r\n   at System.NullReferenceException..ctor()\r\n   at System.Resources.ResourceManager.GetString(System.String, System.Globalization.CultureInfo)\r\n   at System.SR.InternalGetResourceString(System.String)\r\n   at System.SR.GetResourceString(System.String)\r\n   at System.NullReferenceException..ctor()\r\n   at System.Resources.ResourceManager.GetString(System.String, System.Globalization.CultureInfo)\r\n   at System.SR.InternalGetResourceString(System.String)\r\n   at System.SR.GetResourceString(System.String)\r\n   at System.Diagnostics.StackTrace.ToString(TraceFormat, System.Text.StringBuilder)\r\n   at System.Diagnostics.StackTrace.ToString()\r\n   at System.DisposalTracking+Tracker..ctor(Boolean)\r\n   at System.Windows.Forms.DeviceContextHdcScope..ctor(System.Drawing.IDeviceContext, System.Windows.Forms.ApplyGraphicsProperties, Boolean)\r\n   at System.Windows.Forms.DeviceContextHdcScope..ctor(System.Drawing.IDeviceContext, Boolean, Boolean)\r\n   at System.Windows.Forms.Control.PaintBackColor(System.Windows.Forms.PaintEventArgs, System.Drawing.Rectangle, System.Drawing.Color)\r\n   at System.Windows.Forms.Control.PaintBackground(System.Windows.Forms.PaintEventArgs, System.Drawing.Rectangle, System.Drawing.Color, System.Drawing.Point)\r\n   at System.Windows.Forms.Control.PaintBackground(System.Windows.Forms.PaintEventArgs, System.Drawing.Rectangle)\r\n   at System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)\r\n   at System.Windows.Forms.ScrollableControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)\r\n   at System.Windows.Forms.Control.PaintWithErrorHandling(System.Windows.Forms.PaintEventArgs, Int16)\r\n   at System.Windows.Forms.Control.WmEraseBkgnd(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.ScrollableControl.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.ContainerControl.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Form.WmEraseBkgnd(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.OnMessage(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.NativeWindow.Callback(Windows.Win32.Foundation.HWND, WM, Windows.Win32.Foundation.WPARAM, Windows.Win32.Foundation.LPARAM)\r\n   at Windows.Win32.PInvoke.CallWindowProc(Windows.Win32.Foundation.LRESULT (Windows.Win32.Foundation.HWND, UInt32, Windows.Win32.Foundation.WPARAM, Windows.Win32.Foundation.LPARAM), Windows.Win32.Foundation.HWND, UInt32, Windows.Win32.Foundation.WPARAM, Windows.Win32.Foundation.LPARAM)\r\n   at Windows.Win32.PInvoke.CallWindowProc(Windows.Win32.Foundation.LRESULT (Windows.Win32.Foundation.HWND, UInt32, Windows.Win32.Foundation.WPARAM, Windows.Win32.Foundation.LPARAM), Windows.Win32.Foundation.HWND, UInt32, Windows.Win32.Foundation.WPARAM, Windows.Win32.Foundation.LPARAM)\r\n   at Windows.Win32.PInvoke.CallWindowProc[[Windows.Win32.Foundation.HWND, System.Windows.Forms.Primitives, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]](Void*, Windows.Win32.Foundation.HWND, UInt32, Windows.Win32.Foundation.WPARAM, Windows.Win32.Foundation.LPARAM)\r\n   at System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Form.DefWndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.ScrollableControl.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.ContainerControl.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.OnMessage(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.NativeWindow.Callback(Windows.Win32.Foundation.HWND, WM, Windows.Win32.Foundation.WPARAM, Windows.Win32.Foundation.LPARAM)\r\n```\r\n\r\nhttps://dev.azure.com/dnceng-public/public/_build/results?buildId=307289&view=results\r\nhttps://dev.azure.com/dnceng-public/public/_build/results?buildId=309994&view=results\r\nhttps://dev.azure.com/dnceng-public/public/_build/results?buildId=310192&view=results","Url":"https://github.com/dotnet/winforms/issues/9304","RelatedDescription":"Open issue \"Unit tests crash due to failure to resolve Arg_NullReferenceException\" (#9304)"},{"Id":"1760314728","IsPullRequest":false,"CreatedAt":"2023-06-16T08:37:45","Actor":"JPasterkampRotec","Number":"9301","RawContent":null,"Title":"Graphics.Clear not working with alpha 0 values","State":"open","Body":"### Description\n\nThe `Clear(System.Drawing.Color color)` method of `System.Drawing.Graphics` does not set the RGB values correctly when a color with alpha 0 is used.\n\n### Reproduction Steps\n\nThis unit test will fail:\r\n``` csharp\r\nusing Microsoft.VisualStudio.TestTools.UnitTesting;\r\nusing System.Drawing;\r\nusing System.Drawing.Imaging;\r\n\r\n[TestMethod]\r\npublic void ClearlyNotWorking()\r\n{\r\n    var image = new Bitmap(3, 3, PixelFormat.Format32bppArgb);\r\n    \r\n    Color initialColor = image.GetPixel(0, 0);\r\n    Assert.AreEqual(0, initialColor.A);\r\n    Assert.AreEqual(0, initialColor.R);\r\n    Assert.AreEqual(0, initialColor.G);\r\n    Assert.AreEqual(0, initialColor.B);\r\n    \r\n    using (var graphics = Graphics.FromImage(image))\r\n    {\r\n        // Color.Transparent is A=0, R=255, G=255, B=255\r\n        graphics.Clear(Color.Transparent);\r\n    }\r\n    \r\n    Color newColor = image.GetPixel(0, 0);\r\n    Assert.AreEqual(Color.Transparent.A, newColor.A);\r\n    // Expecting 255 on the RGB values, but actually they remain 0.\r\n    Assert.AreEqual(Color.Transparent.R, newColor.R);\r\n    Assert.AreEqual(Color.Transparent.G, newColor.G);\r\n    Assert.AreEqual(Color.Transparent.B, newColor.B);\r\n}\r\n```\n\n### Expected behavior\n\nI expect all pixels in the bitmap to have exactly the color specified in the `System.Drawing.Graphics.Clear(System.Drawing.Color color)` method.\n\n### Actual behavior\n\nRGB values remain 0 when a color with alpha 0 is provided to the `System.Drawing.Graphics.Clear(System.Drawing.Color color)` method.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\nYou can work around this by:\r\n- Locking the bitmap and getting the `BitmapData`.\r\n- Manually changing all values in the data\r\n- Unlocking the bitmap\n\n### Configuration\n\nTested and found the issue in:\r\n- .NET 7 console application \r\n- .NET Framework WPF application.\r\n\r\nI'm on Windows 10 Pro 21H2 19044.2251 (x64), although I don't think that matters for this issue.\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/winforms/issues/9301","RelatedDescription":"Open issue \"Graphics.Clear not working with alpha 0 values\" (#9301)"},{"Id":"1760658224","IsPullRequest":false,"CreatedAt":"2023-06-16T03:43:21","Actor":"idmansourid","Number":"9303","RawContent":null,"Title":"How to disable row shifting when column is sorting in datatable","State":"open","Body":"When it is sorted, when I give a value to the cell, the row moves. I don't want this to happen. I work with DataGridView and DataTable . (vb.net-vs2019)\r\nThis is a weakness in 'DataTable' or 'DataGridView'?\r\nthe biggest problem. Will this problem be solved in the future? In other versions of DataTable or DataGridView.\r\nIt would be great if it had an option named (orderFix).\r\nHow can this feedback be reported?\r\n![20230609_155121 (1)](https://github.com/dotnet/dotnet-api-docs/assets/77550842/2808c114-ff4e-4512-aab7-d1eba83a41d4)\r\n\r\n`    Dim MyDataTable As New DataTable\r\n    Private Sub Form1_Load(sender As Object, e As EventArgs) Handles MyBase.Load\r\n    MyDataTable.Columns.AddRange(\"id\", \"f1\", \"f2\", \"f3\")\r\n    MyDataTable.Rows.Add({\"1\", \"a1\", \"b1\", \"c1\"})\r\n    MyDataTable.Rows.Add({\"2\", \"a2\", \"b2\", \"c2\"})\r\n    MyDataTable.Rows.Add({\"3\", \"a3\", \"b3\", \"c3\"})\r\n    dgv.DataSource = MyDataTable\r\n    dgv.Columns(0).SortMode = DataGridViewColumnSortMode.Programmatic\r\n    dgv.Columns(1).SortMode = DataGridViewColumnSortMode.Programmatic\r\n    dgv.Columns(2).SortMode = DataGridViewColumnSortMode.Programmatic\r\n    dgv.Columns(3).SortMode = DataGridViewColumnSortMode.Programmatic\r\nEnd Sub\r\n\r\n Private Sub Button3_Click(sender As Object, e As EventArgs) Handles Button3.Click\r\n    MyDataTable.DefaultView.Sort = \"[f2] asc\"\r\nEnd Sub`","Url":"https://github.com/dotnet/winforms/issues/9303","RelatedDescription":"Open issue \"How to disable row shifting when column is sorting in datatable\" (#9303)"},{"Id":"1758677333","IsPullRequest":true,"CreatedAt":"2023-06-15T23:58:55","Actor":"dotnet-maestro[bot]","Number":"9294","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20230614.1\r\n- **Date Produced**: June 14, 2023 5:18:10 PM UTC\r\n- **Commit**: c27937680063bcf06804c9fd0466d26a0f9ea4e6\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23313.6 to 8.0.0-beta.23314.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.23313.6 to 8.0.0-beta.23314.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.23313.6 to 8.0.0-beta.23314.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23313.6 to 8.0.0-beta.23314.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.23313.6 to 8.0.0-beta.23314.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23313.6 to 8.0.0-beta.23314.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/74bd8c5340...c279376800\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9294)","Url":"https://github.com/dotnet/winforms/pull/9294","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#9294)"},{"Id":"1759622959","IsPullRequest":true,"CreatedAt":"2023-06-15T23:54:07","Actor":"JeremyKuhne","Number":"9300","RawContent":null,"Title":"Update to the latest CSWin32","State":"closed","Body":"Take the latest drop of CSWin32.\r\n\r\nThere were a number of changes, but the key ones were:\r\n\r\n- VARIANT moved to another namespace\r\n- CsWin32 wrapper methods that take strings no longer have unusued/reserved parameters\r\n- HGLOBAL is now used in signatures\r\n- Some parameters moved from enums to uint\r\n\r\nA few other things in this change:\r\n\r\n- Added start-vs.cmd to the solution folder\r\n- Pinned created Arrays in VARIANT to avoid a potential memory corruption\r\n- Removed VARIANT IRecord related code that was ultimately going to throw\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9300)","Url":"https://github.com/dotnet/winforms/pull/9300","RelatedDescription":"Closed or merged PR \"Update to the latest CSWin32\" (#9300)"},{"Id":"1759546793","IsPullRequest":true,"CreatedAt":"2023-06-15T23:52:15","Actor":"dotnet-maestro[bot]","Number":"9298","RawContent":null,"Title":"[release/7.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1bb79c46-2599-4c95-8164-08da7ef6284d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1bb79c46-2599-4c95-8164-08da7ef6284d\r\n- **Build**: 20230613.4\r\n- **Date Produced**: June 13, 2023 9:38:29 PM UTC\r\n- **Commit**: 59ac824080b9807fd91dbc8a6d2b4447e74874ab\r\n- **Branch**: refs/heads/release/7.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.23211.2 to 7.0.0-beta.23313.4][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.23211.2 to 7.0.0-beta.23313.4][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.23211.2 to 7.0.0-beta.23313.4][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.23211.2 to 7.0.0-beta.23313.4][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.23211.2 to 7.0.0-beta.23313.4][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.23211.2 to 7.0.0-beta.23313.4][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/7c5e5a782c...59ac824080\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates sdk.version to 7.0.107\r\n  - Updates tools.dotnet to 7.0.107\r\n\r\n[marker]: <> (End:1bb79c46-2599-4c95-8164-08da7ef6284d)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9298)","Url":"https://github.com/dotnet/winforms/pull/9298","RelatedDescription":"Closed or merged PR \"[release/7.0] Update dependencies from dotnet/arcade\" (#9298)"},{"Id":"1759561579","IsPullRequest":true,"CreatedAt":"2023-06-15T21:37:09","Actor":"dotnet-maestro[bot]","Number":"9299","RawContent":null,"Title":"[release/6.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:84f431dc-3375-4a46-af87-08d961c59698)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 84f431dc-3375-4a46-af87-08d961c59698\r\n- **Build**: 20230613.5\r\n- **Date Produced**: June 13, 2023 9:38:40 PM UTC\r\n- **Commit**: 91616785a1a6578c83f7e93d98c34a1eb83d6223\r\n- **Branch**: refs/heads/release/6.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.23211.7 to 6.0.0-beta.23313.5][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 6.0.0-beta.23211.7 to 6.0.0-beta.23313.5][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.23211.7 to 6.0.0-beta.23313.5][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.23211.7 to 6.0.0-beta.23313.5][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.23211.7 to 6.0.0-beta.23313.5][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.23211.7 to 6.0.0-beta.23313.5][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/7bca7a24df...91616785a1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates sdk.version to 6.0.118\r\n  - Updates tools.dotnet to 6.0.118\r\n\r\n[marker]: <> (End:84f431dc-3375-4a46-af87-08d961c59698)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9299)","Url":"https://github.com/dotnet/winforms/pull/9299","RelatedDescription":"Closed or merged PR \"[release/6.0] Update dependencies from dotnet/arcade\" (#9299)"},{"Id":"1759312444","IsPullRequest":true,"CreatedAt":"2023-06-15T18:05:30","Actor":"sharwell","Number":"9297","RawContent":null,"Title":"Set foreground","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n## Proposed changes\r\n\r\n- \r\n- \r\n- \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9297)","Url":"https://github.com/dotnet/winforms/pull/9297","RelatedDescription":"Open PR \"Set foreground\" (#9297)"},{"Id":"1759169729","IsPullRequest":false,"CreatedAt":"2023-06-15T16:18:36","Actor":"dmitrii-drobotov","Number":"9296","RawContent":null,"Title":"Accessible properties AccessKey and KeyboardShortcut ignore UseMnemonic = false","State":"open","Body":"### .NET version\r\n\r\n.NET 8.0.0-preview.6.23307.4\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNo\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nNo\r\n\r\n### Issue description\r\n\r\nButton, Label and derived controls have [mnemonics](https://learn.microsoft.com/en-us/dotnet/api/system.windows.forms.label.usemnemonic) feature, which allows making a shortcut with one of characters in control's Text. For example, a button with `UseMnemonic = true` and `Text = \"&Button\"` will be displayed as \"<ins>B</ins>utton\" and can be activated by pressing Alt+B. If `UseMnemonic` is set to `false`, ampersand will be treated as a regular character, and Alt+B shortcut won't work.\r\n\r\nAccessible objects set mnemonic shortcut in `AccessKey` and `KeyboardShortcut` properties, which makes screen readers read the shortcut when control is focused. However, when mnemonic is disabled by setting `UseMnemonic = false`, accessible properties ignore it and still set the shortcut. Screen readers will read the shortcut, even though it doesn't work.\r\n\r\n#### Actual behavior\r\n\r\nhttps://github.com/dotnet/winforms/assets/102954094/2a100682-d544-4d6a-848e-e25f4ab7a2b7\r\n\r\nNarrator reads the form as follows:\r\n\r\n> Mnemonic, edit, Alt+ m, \r\n> No mnemonic, edit, Alt+ n, \r\n> Mnemonic, button, Alt+ e, \r\n> No mnemonic, button, Alt+ o, \r\n> Mnemonic, radio button, selected, Alt+ i, \r\n> Mnemonic, radio button, non-selected, Alt+ i, \r\n> No mnemonic, radio button, selected, Alt+ c, \r\n\r\nFor controls with \"No mnemonic\" text, pressing announced shortcut will not do anything\r\n\r\n#### Expected behavior\r\n\r\n* `AccessKey` and `KeyboardShortcut` should be empty when mnemonics are disabled\r\n* Narrator should not read shortcut when mnemonics are disabled\r\n* Narrator should read ampersand as part of the text when mnemonics are disabled, exactly as displayed\r\n\r\n### Steps to reproduce\r\n\r\nRun sample app: \r\n[MnemonicRepro.zip](https://github.com/dotnet/winforms/files/11759886/MnemonicRepro.zip)\r\n\r\nMost likely it also reproduces with all controls derived from Button and Label.","Url":"https://github.com/dotnet/winforms/issues/9296","RelatedDescription":"Open issue \"Accessible properties AccessKey and KeyboardShortcut ignore UseMnemonic = false\" (#9296)"},{"Id":"1758677940","IsPullRequest":true,"CreatedAt":"2023-06-15T12:27:12","Actor":"dotnet-maestro[bot]","Number":"9295","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230614.15\r\n- **Date Produced**: June 15, 2023 9:13:52 AM UTC\r\n- **Commit**: 171a525880315369e48c6adf6c181f98357352a5\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.CodeDom**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Data.Odbc**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Data.OleDb**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.IO.Ports**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Management**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Reflection.Context**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Runtime.Caching**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Speech**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Text.Json**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.6.23313.31 to 8.0.0-preview.6.23314.15][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/48e1fb8185...171a525880\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9295)","Url":"https://github.com/dotnet/winforms/pull/9295","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#9295)"},{"Id":"1758170580","IsPullRequest":false,"CreatedAt":"2023-06-15T06:59:50","Actor":"hmisaki","Number":"9293","RawContent":null,"Title":"The Form display incorrectly in the high DPI.","State":"open","Body":"### .NET version\n\n.Net 6\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo\n\n### Issue description\n\nThe WinForm dialog display incorrectly in the high DPI(>100%) see the screenshot:\r\n![displayError](https://github.com/dotnet/winforms/assets/23306796/07298380-2a21-40e1-ab02-6394d8965b52)\r\nThis is the correct display:\r\n![displayCorrectly](https://github.com/dotnet/winforms/assets/23306796/ca736be4-6ef7-4594-9276-5e84aed4daf3)\r\nBut if I add a `Font = Font` or `Scale(new SizeF(1.0F,1.0F))` to the end of `InitializeComponent`, we can get  the right display again:\r\n![DisplayCorrectlyAfterFix](https://github.com/dotnet/winforms/assets/23306796/afa5d8b2-7073-45fc-888b-64087fd38c65)\r\n\r\nSo why do I need the extra code to make it display correctly? We just migrated our code to .net 6 from .net 4.8. There are no these situations on the .net framework 4.8. Did we have any solution to handle this on the high DPI?\n\n### Steps to reproduce\n\nCreate a new WinForm project (.net 6)\r\nUse a groupbox, and fill in some checkboxes.\r\nSet the dialog's AutoScaleMode to Dpi.\r\nBuilding.\r\nSet the system Scale to 200% (system settings ->Display -> Scale and layout).\r\nOpen the new exe.","Url":"https://github.com/dotnet/winforms/issues/9293","RelatedDescription":"Open issue \"The Form display incorrectly in the high DPI.\" (#9293)"},{"Id":"1757351903","IsPullRequest":true,"CreatedAt":"2023-06-14T17:59:57","Actor":"dreddy-work","Number":"9292","RawContent":null,"Title":"Update intellisense version","State":"closed","Body":"Update version.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9292)","Url":"https://github.com/dotnet/winforms/pull/9292","RelatedDescription":"Closed or merged PR \"Update intellisense version\" (#9292)"},{"Id":"1756737165","IsPullRequest":true,"CreatedAt":"2023-06-14T17:25:48","Actor":"dotnet-maestro[bot]","Number":"9289","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20230613.6\r\n- **Date Produced**: June 13, 2023 11:25:19 PM UTC\r\n- **Commit**: 74bd8c5340936e8125d1ed89d38817bc06646450\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23309.8 to 8.0.0-beta.23313.6][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.23309.8 to 8.0.0-beta.23313.6][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.23309.8 to 8.0.0-beta.23313.6][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23309.8 to 8.0.0-beta.23313.6][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.23309.8 to 8.0.0-beta.23313.6][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23309.8 to 8.0.0-beta.23313.6][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/9994c5ed43...74bd8c5340\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates sdk.version to 8.0.100-preview.5.23303.2\r\n  - Updates tools.dotnet to 8.0.100-preview.5.23303.2\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9289)","Url":"https://github.com/dotnet/winforms/pull/9289","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#9289)"},{"Id":"1757331871","IsPullRequest":false,"CreatedAt":"2023-06-14T17:11:08","Actor":"JeremyKuhne","Number":"9291","RawContent":null,"Title":"ComNativeDescriptor is dependent on Windows","State":"open","Body":"We've recently enabled using `ComWrappers` with the `ComNativeDescriptor`- this `TypeDescriptionProvider` is what is used by the .NET runtime `TypeDescriptor` for COM objects.\r\n\r\n`ComWrappers` supports other platforms (Unix/Mac), but our current implementation is dependent on Windows PInvokes. These are used both in the `ComNativeDescriptor` code directly and in support code, such as our `VARIANT` implementation.\r\n\r\nWe could remove some of these dependencies, but not everything. As a starting point it would probably be good to target COM types that have no complicated types (that is \"primitives\") exposed as properties (as described in the `ITypeInfo` for the type).\r\n\r\nConverters that have dependencies on Windows APIs (directly, or indirectly through System.Drawing) would need to be conditionalized. It is unclear what would be the right answer for these. Do we skip a property when it has an IPicture or IFont, for example?\r\n\r\nIdeally, we would get cross-plat primitive VARIANT handling from the .NET runtime (that would work with AOT/Trimming enabled). The notable Win32 dependency we have is with SafeArray handling. I haven't looked closely at those APIs, so I'm not sure how difficult it would be to manually implement.\r\n\r\nCapturing this for the future. This is unlikely to get scheduled in the near term.","Url":"https://github.com/dotnet/winforms/issues/9291","RelatedDescription":"Open issue \"ComNativeDescriptor is dependent on Windows\" (#9291)"},{"Id":"1756737814","IsPullRequest":true,"CreatedAt":"2023-06-14T12:27:40","Actor":"dotnet-maestro[bot]","Number":"9290","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230613.31\r\n- **Date Produced**: June 14, 2023 9:17:28 AM UTC\r\n- **Commit**: 48e1fb81858cee39be6b53b24566957aa546e891\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **System.CodeDom**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **System.Data.Odbc**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **System.Data.OleDb**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **System.IO.Ports**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **System.Management**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **System.Reflection.Context**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **System.Runtime.Caching**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **System.Speech**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **System.Text.Json**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.6.23309.7 to 8.0.0-preview.6.23313.31][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/37c0371ab3...48e1fb8185\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9290)","Url":"https://github.com/dotnet/winforms/pull/9290","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#9290)"},{"Id":"1755823319","IsPullRequest":true,"CreatedAt":"2023-06-14T01:45:22","Actor":"dreddy-work","Number":"9287","RawContent":null,"Title":"Fix branch name while disabling UI tests","State":"closed","Body":"This is fixing an error in reading branch name in the PR https://github.com/dotnet/winforms/pull/9284\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9287)","Url":"https://github.com/dotnet/winforms/pull/9287","RelatedDescription":"Closed or merged PR \"Fix branch name while disabling UI tests\" (#9287)"},{"Id":"1755821477","IsPullRequest":true,"CreatedAt":"2023-06-14T00:46:08","Actor":"dreddy-work","Number":"9286","RawContent":null,"Title":"Porting: Disable UI tests in release/6.0 branch","State":"closed","Body":"Disable UI testing release/6.0\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9286)","Url":"https://github.com/dotnet/winforms/pull/9286","RelatedDescription":"Closed or merged PR \"Porting: Disable UI tests in release/6.0 branch\" (#9286)"},{"Id":"1755840155","IsPullRequest":false,"CreatedAt":"2023-06-14T00:40:22","Actor":"elachlan","Number":"9288","RawContent":null,"Title":"Add `ClickThrough` to `ToolStrip`/`MenuStrip` to bring behavior in-line with other controls.","State":"open","Body":"### Background and motivation\n\nThere have recently been a couple of issues asking for this feature. \r\n- #9240\r\n- #9277\r\n\r\nOutline explaining the feature from associated blog post:\r\n> ToolStrip classes do not support \"Click Through\" between forms. For more information on what click through is, I recommend reading https://daringfireball.net/2003/05/interface_details_itunes_vs_safari . In Windows, pretty much all applications use \"click through,\" whereby if you have one window active and click on to another one, the mouse click activates the window and the click is processed by whatever control you had the mouse over.\r\n\r\nhttps://learn.microsoft.com/en-us/archive/blogs/rickbrew/how-to-enable-click-through-for-net-2-0-toolstrip-and-menustrip\r\n\n\n### API Proposal\n\n```csharp\r\npublic class ToolStrip\r\n{\r\n   public bool ClickThrough=true;\r\n\r\n   protected override void WndProc(ref Message m)\r\n    {\r\n        base.WndProc(ref m);\r\n        if (this.clickThrough &&\r\n            m.Msg == NativeConstants.WM_MOUSEACTIVATE &&\r\n            m.Result == (IntPtr)NativeConstants.MA_ACTIVATEANDEAT)\r\n        {\r\n            m.Result = (IntPtr)NativeConstants.MA_ACTIVATE;\r\n        }\r\n\r\n    }\r\n}\r\n```\r\n\n\n### API Usage\n\nEnable/Disable the `ClickThrough` property to change the behavior.\r\n\n\n### Alternative Designs\n\ndefault value of property set to `false`\n\n### Risks\n\nIf default is true, then behavior could change in existing applications.\n\n### Will this feature affect UI controls?\n\nYes. Toolstrip will allow click through by default or at least allow click through after the developer enables it.\r\n\r\nUnsure on accessibility impact.\r\n\r\nFeature is not localizable.","Url":"https://github.com/dotnet/winforms/issues/9288","RelatedDescription":"Open issue \"Add `ClickThrough` to `ToolStrip`/`MenuStrip` to bring behavior in-line with other controls.\" (#9288)"},{"Id":"1755675416","IsPullRequest":true,"CreatedAt":"2023-06-14T00:29:47","Actor":"dreddy-work","Number":"9285","RawContent":null,"Title":"port to release/7.0: Disable UI tests in release branches.","State":"closed","Body":"Disable UI tests in release branches.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9285)","Url":"https://github.com/dotnet/winforms/pull/9285","RelatedDescription":"Closed or merged PR \"port to release/7.0: Disable UI tests in release branches.\" (#9285)"},{"Id":"1753218570","IsPullRequest":true,"CreatedAt":"2023-06-13T23:43:43","Actor":"JeremyKuhne","Number":"9278","RawContent":null,"Title":"Fully enable ComWrappers for COM TypeDescriptor","State":"closed","Body":"Uses ComHelpers to query for interface pointers to enable all COM scenarios (ComWrappers, Com Interop, our own Com exposed classes).\r\n\r\n- Change Com2DataTypeToManagedDataTypeConverter to go between VARIANT and object.\r\n- Remove Activator.CreateInstance call for type converters from Com2PropertyDescriptor and just create the instances directly as needed.\r\n- Add a NullTypeDescriptor to simplify the ComTypeDescriptor.\r\n- Add reverse IUnknown* cast operator to VARIANT.\r\n- Ensure we don't return null from BSTR.ToStringAndFree and only free if it isn't null.\r\n- Change RegisterInterfaceInGlobal to return HRESULT for easier debugging.\r\n- Use centralized IDispatch property gettter/setter helpers and ensure we free any returned exception BSTRs.\r\n- Add IVTable to additional COM structs.\r\n- Add tests to cover both legacy COM and ComWrappers and also validate IProvideMulitpleClassInfo\r\n- Move IDispatchTests to the right namespace.\r\n- Seal classes, revise variable names, split out COM struct files, and other various cleanup.","Url":"https://github.com/dotnet/winforms/pull/9278","RelatedDescription":"Closed or merged PR \"Fully enable ComWrappers for COM TypeDescriptor\" (#9278)"},{"Id":"1755470413","IsPullRequest":true,"CreatedAt":"2023-06-13T22:24:38","Actor":"dreddy-work","Number":"9284","RawContent":null,"Title":"Disable UI tests in release branch.","State":"closed","Body":"Disable UI tests in release branches while increasing retry count in main.\r\n\r\nWill be ported to release branches.","Url":"https://github.com/dotnet/winforms/pull/9284","RelatedDescription":"Closed or merged PR \"Disable UI tests in release branch.\" (#9284)"},{"Id":"1755340863","IsPullRequest":true,"CreatedAt":"2023-06-13T21:51:20","Actor":"vseanreesermsft","Number":"9282","RawContent":null,"Title":"Merging internal commits for release/6.0","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9282)","Url":"https://github.com/dotnet/winforms/pull/9282","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/6.0\" (#9282)"},{"Id":"1754082121","IsPullRequest":false,"CreatedAt":"2023-06-13T20:10:37","Actor":"HindujaArugula","Number":"9280","RawContent":null,"Title":"A11y_.NET Core_WinForms_PrintingTesting_PrintingTesting_ScreenReader: After pressing ENTER on \"Printing Testing\" tab Narrator is not announcing the status message of the dialog \"Generate Preview\".","State":"closed","Body":"### .NET version\n\n.NET-SDK-8.0.100-preview.4.23260.5\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo response\n\n### Issue description\n\n### GitHubTags:\r\n#A11yMAS;#A11yTCS;#BM_.NET Core[Winforms]-Win32-May2023;#.NET Core;#A11ySev3;#WCAG4.1.3;#DesktopApp;#Win11;#NonBenchmark;#Narrator;#NVDA;\r\n\r\n### Actual:\r\nAfter pressing ENTER on \"Printing_Controls:Testing the controls under the Printings Tab\" a \"Generating Previews\" dialog appears Narrator is not announcing any status message of the dialog as \"Generate Preview\".\r\n\r\n### Note: Issue is not observed with NVDA.\r\n\r\n### Expected:\r\nAfter pressing ENTER on \"Printing_Controls:Testing the controls under the Printings Tab\" a \"Generating Previews\" dialog appears Narrator should announce the status message of the dialog as \"Generate Preview\".\r\n\r\n### User Impact:\r\nScreen Reader users will face difficulty if narrator does not announce the status message of the dialog.\n\n### Steps to reproduce\n\n1. Install and Open \"Winforms\" App.\r\n2. \"Main Form\" screen would appear.\r\n3. TAB to \"Printing_Controls:Testing the controls under the Printings Tab\" and press ENTER key.\r\n4. Start Narrator.\r\n5. Now observe that after press ENTER key on the \"Printing_Controls:Testing the controls under the Printings Tab\" Narrartor is not announcing the status message as \"Generate Preview\".\r\n\r\n### Attachment:\r\nNarrator:\r\n![NarratorIssue](https://github.com/dotnet/winforms/assets/125462007/3729cedd-db1f-4d70-a891-91464da49331)\r\n\r\nNVDA:\r\n![NVDA](https://github.com/dotnet/winforms/assets/125462007/144f7d16-d5a7-4506-aeb4-a8707029baa0)\r\n","Url":"https://github.com/dotnet/winforms/issues/9280","RelatedDescription":"Closed issue \"A11y_.NET Core_WinForms_PrintingTesting_PrintingTesting_ScreenReader: After pressing ENTER on \"Printing Testing\" tab Narrator is not announcing the status message of the dialog \"Generate Preview\".\" (#9280)"},{"Id":"1755347874","IsPullRequest":true,"CreatedAt":"2023-06-13T17:40:28","Actor":"vseanreesermsft","Number":"9283","RawContent":null,"Title":"Merging internal commits for release/7.0","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9283)","Url":"https://github.com/dotnet/winforms/pull/9283","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/7.0\" (#9283)"},{"Id":"1754705597","IsPullRequest":false,"CreatedAt":"2023-06-13T11:52:11","Actor":"dmitrii-drobotov","Number":"9281","RawContent":null,"Title":"DateTimePicker has incorrect AccessKey and KeyboardShortcut accessibility properties when Text contains '&' character","State":"open","Body":"### .NET version\r\n\r\n.NET 8\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNo\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nNo\r\n\r\n### Issue description\r\n\r\nFollow-up on https://github.com/dotnet/winforms/pull/9253/files#r1227133642. \r\n\r\nWhen DateTimePicker has text with '&' character before another character, DateTimePickerAccessibleObject [interprets](https://github.com/dotnet/winforms/blob/d1c6829dfa2c26757efab792fd0bab012537c629/src/System.Windows.Forms/src/System/Windows/Forms/DateTimePicker.DateTimePickerAccessibleObject.cs#L38-L45) it as a mnemonic character — as if it's a shortcut to select it by Alt+mnemonic. Some controls like Label support it by adding an underscore for a mnemonic character and making it a shortcut. But DateTimePicker doesn't seem to support it, '&' is interpreted as a regular character without any special meaning, it doesn't create a shortcut. I didn't find a way to turn '&' into a mnemonic by escaping it with `\\` or similar, and there is no documentation on Win32 DateTimePicker regarding mnemonic characters.\r\n\r\nAs a result, Narrator announces it as a shortcut, although it doesn't work, unlike a mnemonic shortcut from Label with `\"&Date\"` text:\r\n![datetimepicker-shortcut](https://github.com/dotnet/winforms/assets/102954094/16545a90-d9b1-4011-bdba-6073a25b8eb2)\r\n\r\nAccessKey and KeyboardShortcut accessibility properties should be empty instead of \"Alt+t\":\r\n![image](https://github.com/dotnet/winforms/assets/102954094/0d64730c-03f1-4829-9dc7-8ff99139fe4d)\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Add a DateTimePicker to form\r\n2. Set `Format` as `Custom`\r\n3. Add `&` before any character in `CustomFormat` property, for example set `CustomFormat` as `'Date&Time' hh:mm dd/MM`\r\n\r\nSample app:\r\n[WinFormsApp8.zip](https://github.com/dotnet/winforms/files/11734357/WinFormsApp8.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/9281","RelatedDescription":"Open issue \"DateTimePicker has incorrect AccessKey and KeyboardShortcut accessibility properties when Text contains '&' character\" (#9281)"},{"Id":"1753595242","IsPullRequest":false,"CreatedAt":"2023-06-12T21:09:00","Actor":"KlausLoeffelmann","Number":"9279","RawContent":null,"Title":"Extend WinForms Designer SDK by Root Designer functionality","State":"open","Body":"This is an informative issue targeted at Custom Control and Designer Library providers.\r\n\r\nRoot Designers are needed in the WinForms Designer, to provide Designer functionality, which are not scoped to a single control, but for a top-level-document. For example, the Forms and UserControl designers in the WinForms Designers are root designers themselves. Root Designer support is also needed, to provide special design support, like for custom Report Designers.\r\n\r\nWe are primarily tracking this work in our internal WinForms Designer repository. This issue has rather informative purpose, to point our progress and plans, and what breaking changes in contrast to the .NET Framework root designer APIs we will expect.\r\n\r\n- [x] **Refactoring of the Toolbox handling for .NET Components in the Out-of-Proc Designers.** Part of the required foundation for the implementation for Root Designer APIs is the refactoring of the Toolbox item handling.  PRs for that are pending and will be merged soon.\r\n- [x] **Create Solution Templates for Root Designer solutions**, so the necessary Client- and Server-projects can get properly packed and loaded into both the client- and server-process at design time.\r\n- [ ] **Replicate `ToolboxItemFilter` attributes from NuGet-packaged and referenced components including Type and Project information, for correct filtering.\r\n- [ ] **API design process:** Conventionalize the principal approach for public surfacing APIs to provide custom toolbox item control, filtering, and the principal design surface at design time. Requirements need to be synced with our first- and third-party Partners and Control Library vendors. \r\n- [ ] **Implement Rendering functionality and the required inter-process-communication**\r\n- [ ] **Support infrastructure for selection, overlays, adorners.**\r\n\r\n## What are the principal challenges and difference the Designers?\r\n\r\nPlease read up on the Out-of-process Designer design principles for Control Designers first, to get a basic understanding about the architectural challenges:\r\nhttps://devblogs.microsoft.com/dotnet/custom-controls-for-winforms-out-of-process-designer/\r\n\r\n* Implementing Root Designer functionality requires document designers, each respective for the client (Visual Studio) and the server process (DesignToolsServer). \r\n* The Toolbox handling can only be happening on the client, and user-interaction with the toolbox needs to be communicated to the server process. To this end, a client-side document designer needs to be implemented and needs to be inherited from a proxy designer base class. (Details to be provided).\r\n* The rendering of graphical content and design-adornments on the other hand, can only be happening at the server-side. This will be happening and controlled by a document designer which will implement the `IRootDesigner` interface. **Note**: Since the Toolbox handling need to be handled exclusively on the client-side, `IRootDesigner` and `IToolboxUser` cannot be implemented on the same designer base class. `IToolboxUser` needs to be implemented on the client-side Designer; both Designers need to be communicating between the processed with internal Designer infrastructure.\r\n* The server-side root designer will not be able to use classic controls for the render-surface the same way it was possible for the in-proc-designer. The reason is, that due to inter-process-limitations, we need to send mouse-event information from the client to the server-side. We will provide a special Designer View via the SDK, with exact details yet to be determined.\r\n\r\nWe expect a Designer SDK preview (with API definitions subject to change) in the Visual Studio 17 time-frame.\r\n\r\nNote: The work on this is an ongoing process, and we will provide more details when they become available. If you have specific questions around this topic, please get engaged in the discussion for this issue.\r\n","Url":"https://github.com/dotnet/winforms/issues/9279","RelatedDescription":"Open issue \"Extend WinForms Designer SDK by Root Designer functionality\" (#9279)"},{"Id":"1753190492","IsPullRequest":false,"CreatedAt":"2023-06-12T17:08:41","Actor":"CuteLeon","Number":"9277","RawContent":null,"Title":"Can not raise Click event when mouse click a ToolStripButton in a inactive window","State":"open","Body":"### .NET version\n\n.Net 8.0 Preview 4\n\n### Did it work in .NET Framework?\n\nNot tested/verified\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\nI can not raise a Click event when I first time click a ToolStripButton in a inactive window, have to click twice to raise above event.\n\n### Steps to reproduce\n\n1. Create a WinForms project.\r\n2. Create 2 form classes, and add a ToolStrip to each of above forms.\r\n3. Create a ToolStripButton to each of above ToolStrips.\r\n\r\nIssues:\r\n1. Active first form, click ToolStripButton control of another form (inactive), ToolStripButton doesn't raise a Click event.\r\n2. Have to click twice to raise above event.","Url":"https://github.com/dotnet/winforms/issues/9277","RelatedDescription":"Open issue \"Can not raise Click event when mouse click a ToolStripButton in a inactive window\" (#9277)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-06-19T03:30:32.9851797Z","RunDurationInMilliseconds":498}