{"Data":{"GitHub":{"Issues":[{"Id":"748447565","IsPullRequest":false,"CreatedAt":"2020-11-23T04:05:50","Actor":"RussKie","Number":"4265","RawContent":null,"Title":"Sited `ImageList` attached to `ListView` detached twice","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n.NET 5.0 RTM, .NET 6.0\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\nA sited `ImageList` (i.e. added to an `IContainer`) \r\n```cs\r\nimageList = new System.Windows.Forms.ImageList(this.components);\r\n```\r\n\r\nupon the container disposal will be detached twice tripping on an assert:\r\nhttps://github.com/dotnet/winforms/blob/26ee7b5fea05516d1caa83b94995c54115c148a1/src/System.Windows.Forms/src/System/Windows/Forms/ListView.cs#L2978-L2988\r\n\r\nFirst we detach an imagelist by disposing the component (i.e. the instance of the imagelist):\r\n```\r\n>\tSystem.Windows.Forms.dll!System.Windows.Forms.ListView.SmallImageList.set(System.Windows.Forms.ImageList value = null) Line 1491\tC#\tSymbols loaded.\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.ListView.DetachImageList(object sender = {System.Windows.Forms.ImageList}, System.EventArgs e = {System.EventArgs}) Line 2991\tC#\tSymbols loaded.\r\n \tSystem.ComponentModel.Primitives.dll!System.ComponentModel.Component.Dispose(bool disposing)\tUnknown\tNo symbols loaded.\r\n \tSystem.Windows.Forms.dll!System.Windows.Forms.ImageList.Dispose(bool disposing = true) Line 538\tC#\tSymbols loaded.\r\n \tSystem.ComponentModel.Primitives.dll!System.ComponentModel.Component.Dispose()\tUnknown\tNo symbols loaded.\r\n \tSystem.ComponentModel.TypeConverter.dll!System.ComponentModel.Container.Dispose(bool disposing)\tUnknown\tNo symbols loaded.\r\n \tSystem.ComponentModel.TypeConverter.dll!System.ComponentModel.Container.Dispose()\tUnknown\tNo symbols loaded.\r\n \tListViewRepro.dll!ListViewRepro.MainForm.Dispose(bool disposing = true) Line 18\tC#\tSymbols loaded.\r\n```\r\n\r\nAnd then we end up at the same method through a disposed event raised by:\r\n```\r\n \tSystem.ComponentModel.Primitives.dll!System.ComponentModel.Component.Dispose(bool disposing)\tUnknown\tNo symbols loaded.\r\n```\r\n\r\nThis doesn't happen if an imagelist is not sited, i.e. \r\n```cs\r\nimageList = new System.Windows.Forms.ImageList();\r\n```\r\n\r\n**Expected behavior:**\r\n\r\n\r\n**Minimal repro:**\r\n","Url":"https://github.com/dotnet/winforms/issues/4265","RelatedDescription":"Open issue \"Sited `ImageList` attached to `ListView` detached twice\" (#4265)"},{"Id":"748143311","IsPullRequest":false,"CreatedAt":"2020-11-23T00:59:39","Actor":"dhrdlicka","Number":"4263","RawContent":null,"Title":"ListView does not display icons for items added after the form has been loaded","State":"closed","Body":"* .NET Core Version: 5.0.100\r\n\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**Problem description:**\r\n\r\nListView renders items added after the form has been loaded without their icons. This happens regardless of the configured view.\r\n\r\nThe provided repro adds 50 items in the constructor, Form.Load handler and Form.Shown handler respectively. As you can see, only the first 50 items are displayed with icons, although all items are generated and added by the same function.\r\n![image](https://user-images.githubusercontent.com/13226155/99891805-3e689c80-2c6e-11eb-96fa-7302c6af9121.png)\r\n\r\n**Expected behavior:**\r\nThe same project built for .NET Core 3.1:\r\n![image](https://user-images.githubusercontent.com/13226155/99891844-a7e8ab00-2c6e-11eb-9c3c-3e848842fd15.png)\r\n\r\n\r\n**Minimal repro:**\r\nhttps://github.com/dhrdlicka/ListViewRepro","Url":"https://github.com/dotnet/winforms/issues/4263","RelatedDescription":"Closed issue \"ListView does not display icons for items added after the form has been loaded\" (#4263)"},{"Id":"748147247","IsPullRequest":false,"CreatedAt":"2020-11-22T02:25:09","Actor":"dhrdlicka","Number":"4264","RawContent":null,"Title":"ListView.Items.Add throws ExecutionEngineException with custom ListViewItemSorter","State":"open","Body":"* .NET Core Version: 5.0.100\r\n\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**Problem description:**\r\n\r\nListView.Items.Add throws ExecutionEngineException upon reaching a certain number of items in the ListView when ListView.ListViewItemSorter is used to sort the items.\r\n\r\nThe exact number might vary on the specific use case and machine setup. The repro linked below crashes on my machine after ~130 added items, although I have observed numbers as low as 16 in a project of mine.\r\n\r\nThis didn't happen in .NET Core 3.1.\r\n\r\nStack trace:\r\n```\r\nProcess terminated. A callback was made on a garbage collected delegate of type 'System.Windows.Forms.Primitives!System.Windows.Forms.NativeMethods+ListViewCompareCallback::Invoke'.\r\nRepeat 2 times:\r\n--------------------------------\r\n   at Interop+User32.CallWindowProcW(IntPtr, IntPtr, WM, IntPtr, IntPtr)\r\n--------------------------------\r\n   at System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.ListView.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.NativeWindow.Callback(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.SendMessageW(IntPtr, WM, IntPtr, IntPtr)\r\n   at System.Windows.Forms.ListView.Sort()\r\n   at System.Windows.Forms.ListView.InsertItems(Int32, System.Windows.Forms.ListViewItem[], Boolean)\r\n   at System.Windows.Forms.ListView+ListViewNativeItemCollection.Add(System.Windows.Forms.ListViewItem)\r\n   at System.Windows.Forms.ListView+ListViewItemCollection.Add(System.Windows.Forms.ListViewItem)\r\n   at ListViewRepro.MainForm.AddFruit()\r\n   at ListViewRepro.MainForm.MainForm_Shown(System.Object, System.EventArgs)\r\n   at System.Windows.Forms.Form.OnShown(System.EventArgs)\r\n   at System.Windows.Forms.Form.CallShownEvent()\r\n   at System.Windows.Forms.Control.InvokeMarshaledCallbackDo(ThreadMethodEntry)\r\n   at System.Windows.Forms.Control.InvokeMarshaledCallbackHelper(System.Object)\r\n   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)\r\n   at System.Windows.Forms.Control.InvokeMarshaledCallback(ThreadMethodEntry)\r\n   at System.Windows.Forms.Control.InvokeMarshaledCallbacks()\r\n   at System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.ScrollableControl.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.Control+ControlNativeWindow.WndProc(System.Windows.Forms.Message ByRef)\r\n   at System.Windows.Forms.NativeWindow.Callback(IntPtr, WM, IntPtr, IntPtr)\r\n   at Interop+User32.DispatchMessageW(MSG ByRef)\r\n   at Interop+User32.DispatchMessageW(MSG ByRef)\r\n   at System.Windows.Forms.Application+ComponentManager.Interop.Mso.IMsoComponentManager.FPushMessageLoop(UIntPtr, msoloop, Void*)\r\n   at System.Windows.Forms.Application+ThreadContext.RunMessageLoopInner(msoloop, System.Windows.Forms.ApplicationContext)\r\n   at System.Windows.Forms.Application+ThreadContext.RunMessageLoop(msoloop, System.Windows.Forms.ApplicationContext)\r\n   at System.Windows.Forms.Application.Run(System.Windows.Forms.Form)\r\n   at ListViewRepro.Program.Main()\r\n```\r\n\r\n**Expected behavior:**\r\nListView.Add does not throw ExecutionEngineException.\r\n\r\n**Minimal repro:**\r\nhttps://github.com/dhrdlicka/ListViewRepro (The LVIS assignment is commented out in the MainForm constructor as the same project serves as repro on another issue as well)","Url":"https://github.com/dotnet/winforms/issues/4264","RelatedDescription":"Open issue \"ListView.Items.Add throws ExecutionEngineException with custom ListViewItemSorter\" (#4264)"},{"Id":"747919312","IsPullRequest":true,"CreatedAt":"2020-11-21T04:32:35","Actor":"dotnet-maestro[bot]","Number":"4262","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:6d389ecb-0616-453a-2112-08d85e71258f)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 6d389ecb-0616-453a-2112-08d85e71258f\r\n- **Build**: 20201120.12\r\n- **Date Produced**: 11/21/2020 3:35 AM\r\n- **Commit**: 9ecbcd746c9648d00d4bf98bf15f31e21e01db6e\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 5.0.1-servicing.20568.11 to 5.0.1-servicing.20570.12][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 5.0.1-servicing.20568.11 to 5.0.1-servicing.20570.12][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.1-servicing.20568.11 to 5.0.1-servicing.20570.12][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 5.0.1-servicing.20568.11 to 5.0.1-servicing.20570.12][1]\r\n  - **Microsoft.NETCore.App**: [from 5.0.1-servicing.20568.11 to 5.0.1-servicing.20570.12][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 5.0.1-servicing.20568.11 to 5.0.1-servicing.20570.12][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 5.0.1-servicing.20568.11 to 5.0.1-servicing.20570.12][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.1 to 5.0.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/a05d753...9ecbcd7\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:6d389ecb-0616-453a-2112-08d85e71258f)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4262)","Url":"https://github.com/dotnet/winforms/pull/4262","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/runtime\" (#4262)"},{"Id":"744819735","IsPullRequest":false,"CreatedAt":"2020-11-20T19:37:52","Actor":"smourier","Number":"4246","RawContent":null,"Title":".NET Core 3.1 console apps with UseWindowsForms set to true in .csproj always fails since .NET 5.0","State":"closed","Body":"### Description\r\n\r\nIf I create this simple .NET Core 3.1 Console project (on Windows, Visual Studio or not), it works fine:\r\n\t\r\nProject.csproj:\r\n\t\r\n\t<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n\t  <PropertyGroup>\r\n\t\t<OutputType>Exe</OutputType>\r\n\t\t<TargetFramework>netcoreapp3.1</TargetFramework>\r\n\t  </PropertyGroup>\r\n\r\n\t</Project>\r\n\r\nProgram.cs:\r\n\t\t\r\n\tstatic void Main(string[] args)\r\n\t{\r\n\t    Console.WriteLine(\"Hello World!\");\r\n\t    var key = Console.ReadKey(true);\r\n\t}\r\n\r\nNow, if I add this to the .csproj in the PropertyGroup Xml element:\r\n\r\n\t<UseWindowsForms>true</UseWindowsForms>\r\n\t\r\nEveything compiles fine, but I get this error everytime on the ReadKey() call:\r\n\t\r\n\tSystem.InvalidOperationException: 'Cannot read keys when either application does not have a console or when console input has been redirected. Try Console.Read.'\r\n\r\n### Regression\r\n\r\nThis worked. I think it fails since I installed the brand new released .NET 5.0, through Visual Studio 2019 updates. (I though all this was side by side?).\r\n\r\n### Other information\r\n\r\nThe workaround is to call Win32's AllocConsole \"manually\" once at startup. But it requires a change and recompilation of all .NET core 3.1 console apps.","Url":"https://github.com/dotnet/winforms/issues/4246","RelatedDescription":"Closed issue \".NET Core 3.1 console apps with UseWindowsForms set to true in .csproj always fails since .NET 5.0\" (#4246)"},{"Id":"747281010","IsPullRequest":false,"CreatedAt":"2020-11-20T08:16:35","Actor":"Jessie-Zhang01","Number":"4260","RawContent":null,"Title":"RichTextBox Monospace Font Rendering is Broken","State":"open","Body":"* .NET Core Version: \r\n.Net 6.0.100-alpha.1.20568.7 from master branch\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**More Info:**\r\n\r\n1. This issue also can reproduce on .Net Core 3.1.\r\n2. This is a regression issue, it can reproduce from .Net framework 4.7 to 4.8, but cannot reproduce on .Net Framework 4.6.2. In addition, from .Net framework 4.7 to 4.8, there is a workaround: add the quirk to the App.config file.\r\n ```\r\n <runtime>\r\n\t<AppContextSwitchOverrides value=\"Switch.System.Windows.Forms.DoNotLoadLatestRichEditControl=true\"/>\r\n</runtime>\r\n ```\r\n\r\n**Minimal repro:**\r\n\r\n1. Extract the [RichTextBoxDemo.zip](https://github.com/dotnet/winforms/files/5572035/RichTextBoxDemo.zip) and open it in VS.\r\n2. Build and run this application.\r\n3. Observe the length of Text in RichTextBox.\r\n\r\n**Expected behavior:**\r\nThe Text of the same length in the RichTextBox should be consistent.\r\n![image](https://user-images.githubusercontent.com/45864649/99774896-5e527000-2b49-11eb-9b6a-ed9b99cb6787.png)\r\n\r\n**Actual behavior:**\r\nThe text of the same length in the RichTextBox is not consistent.\r\n![image](https://user-images.githubusercontent.com/45864649/99774721-277c5a00-2b49-11eb-9b26-a58cafa78498.png)\r\n![image](https://user-images.githubusercontent.com/45864649/99774827-44b12880-2b49-11eb-9f88-36987a397498.png)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/4260","RelatedDescription":"Open issue \"RichTextBox Monospace Font Rendering is Broken\" (#4260)"},{"Id":"747039573","IsPullRequest":true,"CreatedAt":"2020-11-20T00:26:26","Actor":"AdamYoblick","Number":"4259","RawContent":null,"Title":"**NO-MERGE** Proof of concept for running unit tests through helix","State":"open","Body":"Fixes #3140 \r\nFixes https://github.com/dotnet/winforms-designer/issues/1732\r\n\r\nThis work is tracked by https://github.com/dotnet/winforms-designer/issues/1732 in the winforms-designer repo.\r\n\r\nThis task is mostly done, but there are still some remaining tasks:\r\n\r\n1. Scaling to other OS's if we choose to (this is easy, just add to the `_HelixTargetQueues` variables in the yaml.\r\n1. Fixing the few unit tests that are failing\r\n1. Fixing the integration tests.\r\n   * This one is the biggest task, as it's not as simple as unit tests. See https://github.com/dotnet/winforms-designer/issues/1732#issuecomment-729954799 for details.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4259)","Url":"https://github.com/dotnet/winforms/pull/4259","RelatedDescription":"Open PR \"**NO-MERGE** Proof of concept for running unit tests through helix\" (#4259)"},{"Id":"746564050","IsPullRequest":true,"CreatedAt":"2020-11-19T13:01:28","Actor":"dotnet-maestro[bot]","Number":"4258","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20201117.7\r\n- **Date Produced**: 11/18/2020 12:05 AM\r\n- **Commit**: a9a80fb35d2e7da21509441d665a40022ce8f1b4\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.20566.3 to 6.0.0-beta.20567.7][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.20566.3 to 6.0.0-beta.20567.7][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.20566.3 to 6.0.0-beta.20567.7][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.20566.3 to 6.0.0-beta.20567.7][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.20566.3 to 6.0.0-beta.20567.7][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/7a2f81b...a9a80fb\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4258)\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/4258","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/arcade\" (#4258)"},{"Id":"746209074","IsPullRequest":true,"CreatedAt":"2020-11-19T03:31:10","Actor":"dotnet-maestro[bot]","Number":"4257","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:6d389ecb-0616-453a-2112-08d85e71258f)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 6d389ecb-0616-453a-2112-08d85e71258f\r\n- **Build**: 20201118.11\r\n- **Date Produced**: 11/19/2020 2:25 AM\r\n- **Commit**: a05d7533168a89e5ddd8eaedfd2c03adc0b8d10b\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 5.0.1-servicing.20568.8 to 5.0.1-servicing.20568.11][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 5.0.1-servicing.20568.8 to 5.0.1-servicing.20568.11][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.1-servicing.20568.8 to 5.0.1-servicing.20568.11][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 5.0.1-servicing.20568.8 to 5.0.1-servicing.20568.11][1]\r\n  - **Microsoft.NETCore.App**: [from 5.0.1-servicing.20568.8 to 5.0.1-servicing.20568.11][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 5.0.1-servicing.20568.8 to 5.0.1-servicing.20568.11][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 5.0.1-servicing.20568.8 to 5.0.1-servicing.20568.11][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.1 to 5.0.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/87bc28f...a05d753\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:6d389ecb-0616-453a-2112-08d85e71258f)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4257)","Url":"https://github.com/dotnet/winforms/pull/4257","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/runtime\" (#4257)"},{"Id":"746133333","IsPullRequest":true,"CreatedAt":"2020-11-19T00:33:40","Actor":"dotnet-maestro[bot]","Number":"4256","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:6d389ecb-0616-453a-2112-08d85e71258f)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 6d389ecb-0616-453a-2112-08d85e71258f\r\n- **Build**: 20201118.8\r\n- **Date Produced**: 11/18/2020 11:14 PM\r\n- **Commit**: 87bc28f8c846a0d58764eb73e694ace2f2c6e87c\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 5.0.1-servicing.20568.5 to 5.0.1-servicing.20568.8][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 5.0.1-servicing.20568.5 to 5.0.1-servicing.20568.8][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.1-servicing.20568.5 to 5.0.1-servicing.20568.8][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 5.0.1-servicing.20568.5 to 5.0.1-servicing.20568.8][1]\r\n  - **Microsoft.NETCore.App**: [from 5.0.1-servicing.20568.5 to 5.0.1-servicing.20568.8][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 5.0.1-servicing.20568.5 to 5.0.1-servicing.20568.8][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 5.0.1-servicing.20568.5 to 5.0.1-servicing.20568.8][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.1 to 5.0.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/51873a0...87bc28f\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:6d389ecb-0616-453a-2112-08d85e71258f)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4256)","Url":"https://github.com/dotnet/winforms/pull/4256","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/runtime\" (#4256)"},{"Id":"746099635","IsPullRequest":false,"CreatedAt":"2020-11-18T22:55:31","Actor":"samsp-msft","Number":"4255","RawContent":null,"Title":"Survey: Repo contribution experience, Fall 2020","State":"open","Body":"We normally focus on how to improve the product, but we’re also turning our focus to improving the open source project. Periodically we are running a survey to collect feedback on your experience working with our repos. We did one back in May, and as its been about 6 months, its about time for another. We’ve created a survey to better understand your individual experience of participating and contributing in this project.\r\n\r\nWe would appreciate your feedback so we can work to address shortcomings and missed opportunities. If you don’t supply contact details, then responses will be anonymous.\r\n\r\n[Survey](https://www.surveymonkey.com/r/92RLF7R?Source=dotnet/winforms)\r\n\r\nThank you for your time!\r\n","Url":"https://github.com/dotnet/winforms/issues/4255","RelatedDescription":"Open issue \"Survey: Repo contribution experience, Fall 2020\" (#4255)"},{"Id":"745968654","IsPullRequest":true,"CreatedAt":"2020-11-18T20:35:21","Actor":"dotnet-maestro[bot]","Number":"4254","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:6d389ecb-0616-453a-2112-08d85e71258f)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 6d389ecb-0616-453a-2112-08d85e71258f\r\n- **Build**: 20201118.5\r\n- **Date Produced**: 11/18/2020 7:22 PM\r\n- **Commit**: 51873a07965f04c4c1d43a674311a606ab5dda8f\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 5.0.1-servicing.20567.14 to 5.0.1-servicing.20568.5][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 5.0.1-servicing.20567.14 to 5.0.1-servicing.20568.5][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.1-servicing.20567.14 to 5.0.1-servicing.20568.5][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 5.0.1-servicing.20567.14 to 5.0.1-servicing.20568.5][1]\r\n  - **Microsoft.NETCore.App**: [from 5.0.1-servicing.20567.14 to 5.0.1-servicing.20568.5][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 5.0.1-servicing.20567.14 to 5.0.1-servicing.20568.5][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 5.0.1-servicing.20567.14 to 5.0.1-servicing.20568.5][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.1 to 5.0.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/030f593...51873a0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:6d389ecb-0616-453a-2112-08d85e71258f)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4254)","Url":"https://github.com/dotnet/winforms/pull/4254","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/runtime\" (#4254)"},{"Id":"745846739","IsPullRequest":true,"CreatedAt":"2020-11-18T17:45:24","Actor":"dotnet-maestro[bot]","Number":"4252","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:6d389ecb-0616-453a-2112-08d85e71258f)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 6d389ecb-0616-453a-2112-08d85e71258f\r\n- **Build**: 20201117.14\r\n- **Date Produced**: 11/18/2020 4:21 PM\r\n- **Commit**: 030f5933e2f82bd8fceff166fc578020943a6b11\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 5.0.1-servicing.20567.12 to 5.0.1-servicing.20567.14][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 5.0.1-servicing.20567.12 to 5.0.1-servicing.20567.14][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.1-servicing.20567.12 to 5.0.1-servicing.20567.14][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 5.0.1-servicing.20567.12 to 5.0.1-servicing.20567.14][1]\r\n  - **Microsoft.NETCore.App**: [from 5.0.1-servicing.20567.12 to 5.0.1-servicing.20567.14][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 5.0.1-servicing.20567.12 to 5.0.1-servicing.20567.14][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 5.0.1-servicing.20567.12 to 5.0.1-servicing.20567.14][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.1 to 5.0.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/06330b8...030f593\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:6d389ecb-0616-453a-2112-08d85e71258f)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4252)","Url":"https://github.com/dotnet/winforms/pull/4252","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/runtime\" (#4252)"},{"Id":"745793731","IsPullRequest":true,"CreatedAt":"2020-11-18T16:16:26","Actor":"mmitche","Number":"4251","RawContent":null,"Title":"Update runtime","State":"closed","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4251)","Url":"https://github.com/dotnet/winforms/pull/4251","RelatedDescription":"Closed or merged PR \"Update runtime\" (#4251)"},{"Id":"745793487","IsPullRequest":true,"CreatedAt":"2020-11-18T16:08:28","Actor":"dotnet-maestro[bot]","Number":"4250","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20201121.5\r\n- **Date Produced**: 11/22/2020 7:25 AM\r\n- **Commit**: bb492cb7d9b0a3f2026b34f4ed7250c28cf94fab\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **System.CodeDom**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **System.Text.Json**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-alpha.1.20561.11 to 6.0.0-alpha.1.20571.5][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/f56a56f...bb492cb\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4250)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/4250","RelatedDescription":"Open PR \"[master] Update dependencies from dotnet/runtime\" (#4250)"},{"Id":"744716793","IsPullRequest":true,"CreatedAt":"2020-11-18T15:18:34","Actor":"dotnet-maestro[bot]","Number":"4245","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20201116.3\r\n- **Date Produced**: 11/16/2020 4:34 PM\r\n- **Commit**: 7a2f81b46ec807fe5df62f6df9c26bd3daee4fcf\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.20561.5 to 6.0.0-beta.20566.3][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.20561.5 to 6.0.0-beta.20566.3][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.20561.5 to 6.0.0-beta.20566.3][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.20561.5 to 6.0.0-beta.20566.3][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.20561.5 to 6.0.0-beta.20566.3][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/e65d307...7a2f81b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4245)\r\n","Url":"https://github.com/dotnet/winforms/pull/4245","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#4245)"},{"Id":"745470557","IsPullRequest":true,"CreatedAt":"2020-11-18T09:03:47","Actor":"vladimir-krestov","Number":"4249","RawContent":null,"Title":"Adding a part of the `DataGridView` test app to check DGV in Virtual mode","State":"open","Body":"Just adding a UI test case to have an additional example\r\n\r\n## Proposed changes\r\n\r\n- Add a DataGridView in Virtual mode with some data to an existing test app\r\n- Rename the UI test app\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Users can see an example of how to implement and set up a `DataGridView` in Virtual mode in their applications\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n- Now the test app looks like that:\r\n![image](https://user-images.githubusercontent.com/49272759/99508646-e263f680-2995-11eb-85d2-c66e05114c7c.png)\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- UI testing\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- Microsoft Windows [Version 10.0.19042.630]\r\n- .NET SDK Version:   6.0.100-alpha.1.20554.10\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4249)","Url":"https://github.com/dotnet/winforms/pull/4249","RelatedDescription":"Open PR \"Adding a part of the `DataGridView` test app to check DGV in Virtual mode\" (#4249)"},{"Id":"745285981","IsPullRequest":true,"CreatedAt":"2020-11-18T03:23:33","Actor":"dotnet-maestro[bot]","Number":"4248","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:6d389ecb-0616-453a-2112-08d85e71258f)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 6d389ecb-0616-453a-2112-08d85e71258f\r\n- **Build**: 20201117.12\r\n- **Date Produced**: 11/18/2020 2:36 AM\r\n- **Commit**: 06330b8839f8409f20625473ae59b84ce3e68f58\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 5.0.1-servicing.20566.8 to 5.0.1-servicing.20567.12][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 5.0.1-servicing.20566.8 to 5.0.1-servicing.20567.12][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.1-servicing.20566.8 to 5.0.1-servicing.20567.12][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 5.0.1-servicing.20566.8 to 5.0.1-servicing.20567.12][1]\r\n  - **Microsoft.NETCore.App**: [from 5.0.1-servicing.20566.8 to 5.0.1-servicing.20567.12][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 5.0.1-servicing.20566.8 to 5.0.1-servicing.20567.12][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 5.0.1-servicing.20566.8 to 5.0.1-servicing.20567.12][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.1 to 5.0.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/bed28f3...06330b8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:6d389ecb-0616-453a-2112-08d85e71258f)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4248)","Url":"https://github.com/dotnet/winforms/pull/4248","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/runtime\" (#4248)"},{"Id":"747625060","IsPullRequest":false,"CreatedAt":"2020-11-17T22:07:14","Actor":"CBrauer","Number":"4261","RawContent":null,"Title":"Windows Forms App (.NET) .NET5.0 SkiaSharp throws Attempted to read or write protected memory","State":"open","Body":"# Issue\r\nI have built a Windows Forms App (.NET) using .NET 5.0 rc2 and SkiaSharp. It is throwing the error: “Message=Attempted to read or write protected memory. This is often an indication that other memory is corrupt.”\r\n\r\n# General\r\n\r\nI have put my reproducible solution on GitHub at: https://github.com/CBrauer/TestSkia\r\nI hope you guys can use this complete solution to fix the error.\r\n\r\n# Environment\r\nMicrosoft Windows 10 Enterprise, version 10.0,19042 Build 19042\r\nMicrosoft Visual Studio Professional 2019 Preview Version 16.9.0 Preview 1.0\r\n.NET 5.0 rc2\r\n\r\nCharles\r\n","Url":"https://github.com/dotnet/winforms/issues/4261","RelatedDescription":"Open issue \"Windows Forms App (.NET) .NET5.0 SkiaSharp throws Attempted to read or write protected memory\" (#4261)"},{"Id":"745029123","IsPullRequest":true,"CreatedAt":"2020-11-17T20:30:04","Actor":"mmitche","Number":"4247","RawContent":null,"Title":"[release/5.0] Fixup 5.0.0 shas to be RTM","State":"closed","Body":"These got updated to a newer build before branding was updated.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4247)","Url":"https://github.com/dotnet/winforms/pull/4247","RelatedDescription":"Closed or merged PR \"[release/5.0] Fixup 5.0.0 shas to be RTM\" (#4247)"},{"Id":"744557176","IsPullRequest":false,"CreatedAt":"2020-11-17T20:07:14","Actor":"SergeySmirnov-Akvelon","Number":"4243","RawContent":null,"Title":"Narrator does not announce that the row has been added to the DataGridView","State":"closed","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n5.0.100-rc.2.20479.15\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**Minimal repro:**\r\n\r\n1. Create the application with a DataGridView\r\n2. Run the application.\r\n3. Start editing the last row (row to add a new row)\r\n\r\n![Issue-4243](https://user-images.githubusercontent.com/23376742/99370940-5c7d7800-28cf-11eb-95e2-d0bc7b927607.gif)\r\n\r\n\r\n**Actual behavior:**\r\nNarrator does not announce that the row has been added.\r\n\r\n**Expected behavior:**\r\nNarrator should announce that the row has been added.","Url":"https://github.com/dotnet/winforms/issues/4243","RelatedDescription":"Closed issue \"Narrator does not announce that the row has been added to the DataGridView\" (#4243)"},{"Id":"743740747","IsPullRequest":true,"CreatedAt":"2020-11-17T20:07:14","Actor":"SergeySmirnov-Akvelon","Number":"4237","RawContent":null,"Title":"Fix the issue with announcing that a new row was added to the DataGridView","State":"closed","Body":"Fixes #4243\r\n\r\n## Proposed changes\r\n- Added the \"RaiseAutomationNotification\" method to announce that a new row was added to the DataGridView\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n- Narrator will start to announce that a row has been added to the DataGridView\r\n![Issue-4237-dotnet](https://user-images.githubusercontent.com/23376742/99248318-50cf7a00-2819-11eb-8723-06ac2439da3e.gif)\r\n\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- Manually\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n- Narrator\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .Net SDK 5.0.100-rc.2.20479.15\r\n\r\n## Note\r\nAlternatively, we can add the following changes to the application code (for example: [TestApplication.zip](https://github.com/dotnet/winforms/files/5545955/TestApplication.zip)):\r\n```\r\n{\r\n    ....\r\n    this.dataGridView1.UserAddedRow += DataGridView1_UserAddedRow;\r\n    ....\r\n}\r\n\r\nprivate void DataGridView1_UserAddedRow(object sender, DataGridViewRowEventArgs e)\r\n{\r\n    (sender as DataGridView).AccessibilityObject.RaiseAutomationNotification(System.Windows.Forms.Automation.AutomationNotificationKind.ItemAdded,\r\n        System.Windows.Forms.Automation.AutomationNotificationProcessing.ImportantMostRecent, $\"Row {e.Row.Index} is added\");\r\n}\r\n````\r\nIn this case, Narrator will work as well.\r\n![Issue-4237-testapplication](https://user-images.githubusercontent.com/23376742/99248361-5dec6900-2819-11eb-916a-21fa6f742baa.gif)\r\n\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4237)","Url":"https://github.com/dotnet/winforms/pull/4237","RelatedDescription":"Closed or merged PR \"Fix the issue with announcing that a new row was added to the DataGridView\" (#4237)"},{"Id":"744569023","IsPullRequest":false,"CreatedAt":"2020-11-17T09:35:15","Actor":"Zheng-Li01","Number":"4244","RawContent":null,"Title":"An error pops up and Form1.cs[Design] page load failed after retarget the Target framework from 6.0 to 3.1","State":"open","Body":"* More info\r\n1. The issue can't reproduce without installing the latest .NET SDK 6.0. such as retarget the Target framework from 5.0 to 3.1.\r\n\r\n* .NET Core Version: \r\n.NET SDK 6.0.100-alpha1.20566.10 +16.9.0 Preview 2.0 [30716.228.main]\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Minimal repro:**\r\n1. Install the latest .NET SDK 6.0 from: https://github.com/dotnet/core-sdk.\r\n2. Launch VS, go to Tools>>Options>>Environment>>Preview Features tab, enable the \"Show all .NET Core templates in the New project dialog(requires restart)\" option in the right panel, then close VS.\r\n3. Create a .NET Core project targeting  .NET SDK 6.0.\r\n4.  Retarget the Target framework from 6.0 to 3.1in properties page.\r\n\r\n**Expected behavior:**\r\nRetarget the Target framework from 6.0 to 3.1 and Form1.cs[Design] page load successfully.\r\n\r\n**Actual behavior:** \r\nAn error pops up and Form1.cs[Design] page load failed after retarget the Target framework from 6.0 to 3.1.\r\n![ReproGIF](https://user-images.githubusercontent.com/38325459/99372350-fd355d00-28fa-11eb-95ec-c65f1acd5ec9.gif)\r\n![Exception](https://user-images.githubusercontent.com/38325459/99371842-65d00a00-28fa-11eb-8b2f-f7ca26e23578.PNG)","Url":"https://github.com/dotnet/winforms/issues/4244","RelatedDescription":"Open issue \"An error pops up and Form1.cs[Design] page load failed after retarget the Target framework from 6.0 to 3.1\" (#4244)"},{"Id":"744544199","IsPullRequest":false,"CreatedAt":"2020-11-17T09:00:51","Actor":"Marie-Shi","Number":"4242","RawContent":null,"Title":"[Inspect]Inspect is crashing when moving cursor inside the DataGridView that setting AllowUserToAddRows as false","State":"open","Body":"* .NET Core Version: \r\n.Net 6.0.100-alpha.1.20563.2 from master branch\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**More info:**\r\n1.\tThis is a regression issue, it can also **repro** on .Net Framework 4.8, cannot repro on .Net Framework 4.7.2. \r\n\r\n2.\tThis issue cannot repro when setting AllowUserToAddRows property of DataGridView as true.\r\n\r\n**Minimal repro:**\r\n1.\tExtract the ‘DataGridView_Inspect_crash.zip’ and open it in VS.\r\n[DataGridView_Inspect_crash.zip](https://github.com/dotnet/winforms/files/5552297/DataGridView_Inspect_crash.zip)\r\n\r\n2.\tBuild and run this application.\r\n3.\tStart Inspect and try to focus on the column header of DataGridView, observe the inspect behavior.\r\n\r\n**Actual behavior:**\r\nInspect is crashing when focus on the column header of DataGridView.\r\n![core](https://user-images.githubusercontent.com/45864017/99368341-fc4dfc80-28f5-11eb-9615-9db023a3e2b1.gif)\r\n\r\n**Expected behavior:**\r\nInspect cannot crash and works well when focus on the column header of DataGridView.\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/4242","RelatedDescription":"Open issue \"[Inspect]Inspect is crashing when moving cursor inside the DataGridView that setting AllowUserToAddRows as false\" (#4242)"},{"Id":"744380625","IsPullRequest":true,"CreatedAt":"2020-11-17T03:34:05","Actor":"paul1956","Number":"4241","RawContent":null,"Title":"Fix OnInitialize fails to compile if VB Compile Options changes","State":"open","Body":"Fixes #4178\r\n\r\n## Proposed changes\r\nChange\r\n```\r\nDim eventArgs = New ApplyHighDpiModeEventArgs(\r\n```\r\nto\r\n```\r\nDim eventArgs As New ApplyHighDpiModeEventArgs(\r\n```\r\n## Customer Impact\r\nCustomers who use Option Explicit On will fail using \"=\" but with \"As\" it will work no matter what setting are used.\r\n\r\n## Regression? \r\n\r\n- Yes this file does not exist before Core 5.0\r\n\r\n## Risk\r\n\r\nnone, this is a valid alternative syntax\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\nThis code is already tested but Option Explicit On is not set in tests.\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n```\r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.100\r\n Commit:    5044b93829\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19042\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0\r\n  Commit:  cf258a14b7\r\n\r\n.NET SDKs installed:\r\n  1.1.13 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.302 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.23 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.0-preview.6.20278.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\nVB with Option Explicit On\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4241)","Url":"https://github.com/dotnet/winforms/pull/4241","RelatedDescription":"Open PR \"Fix OnInitialize fails to compile if VB Compile Options changes\" (#4241)"},{"Id":"744299312","IsPullRequest":true,"CreatedAt":"2020-11-17T00:45:30","Actor":"dotnet-maestro[bot]","Number":"4240","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:6d389ecb-0616-453a-2112-08d85e71258f)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 6d389ecb-0616-453a-2112-08d85e71258f\r\n- **Build**: 20201116.8\r\n- **Date Produced**: 11/16/2020 11:42 PM\r\n- **Commit**: bed28f348ccd4bffbac619eb5c55c98836a3ef4b\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 5.0.0 to 5.0.1-servicing.20566.8][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 5.0.0 to 5.0.1-servicing.20566.8][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.0-rtm.20563.12 to 5.0.1-servicing.20566.8][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 5.0.0 to 5.0.1-servicing.20566.8][1]\r\n  - **Microsoft.NETCore.App**: [from 5.0.0-rtm.20563.12 to 5.0.1-servicing.20566.8][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 5.0.0 to 5.0.1-servicing.20566.8][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 5.0.0 to 5.0.1-servicing.20566.8][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.0 to 5.0.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/bfc4994...bed28f3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:6d389ecb-0616-453a-2112-08d85e71258f)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4240)","Url":"https://github.com/dotnet/winforms/pull/4240","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/runtime\" (#4240)"},{"Id":"743933519","IsPullRequest":false,"CreatedAt":"2020-11-16T15:33:45","Actor":"oudi","Number":"4239","RawContent":null,"Title":"Value cannot be null. (Parameter 'rootComponent') when use IRootDesigner","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n.NET 5 updated with VS2019 (Version 16.8.1) community build.\r\nnet5.0-windows\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\nWhen I create the IRootDesigner myself component, open the deisnger of the component in VS 2019, it shows the error below.\r\n\r\n```\r\nValue cannot be null.  (Parameter 'rootComponent') \r\nCall Stack\r\nat Microsoft.VisualStudio.WinForms.Protocol.Endpoints.Sessions.InitializeRootComponentResponse..ctor(IComponent rootComponent, IComponent[] components, String[] componentNames)\r\nat WinFormsSurface.Handlers.Sessions.InitializeRootComponentHandler.HandleRequest(InitializeRootComponentRequest request)\r\nat WinFormsSurface.Requests.RequestHandler`2.WinFormsSurface.Requests.IRequestHandler.HandleRequest(Request request) \r\n```\r\n\r\nThen I create a sample from https://docs.microsoft.com/en-us/dotnet/api/system.componentmodel.design.irootdesigner?view=net-5.0 and open the deisgner of `RootDesignedComponent ` it shows the same error!\r\n\r\n![20201116233302](https://user-images.githubusercontent.com/2518192/99273544-248d1b00-2864-11eb-8b84-73601bd23513.png)\r\n\r\nThe proejct use net5.0-windows as TargetFramework. and the Form1 inherit System.Windows.Forms.Form works fine but not the component!\r\n\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <TargetFramework>net5.0-windows</TargetFramework>\r\n    <UseWindowsForms>true</UseWindowsForms>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```","Url":"https://github.com/dotnet/winforms/issues/4239","RelatedDescription":"Open issue \"Value cannot be null. (Parameter 'rootComponent') when use IRootDesigner\" (#4239)"},{"Id":"743874987","IsPullRequest":false,"CreatedAt":"2020-11-16T14:21:38","Actor":"ds1709","Number":"4238","RawContent":null,"Title":"Resize grip is missing in PropertyGrid DropDown editor after update to net5.0-windows","State":"open","Body":"* .NET Core Version: \r\n.Net 5 (net5.0-windows)\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\nI have simple drop-down editor `IsDropDownResizable => true` and `GetEditStyle => UITypeEditorEditStyle.DropDown`. For `net472` or `netcoreapp3.1` there's resize grip under drop-down editor. After update to `net5.0-windows` resize grip is missing.\r\n\r\n**Expected behavior:**\r\nResize grip is displayed under editor control.\r\n\r\n**Minimal repro:**\r\n```csharp\r\n    public partial class Form1 : Form\r\n    {\r\n        public Form1()\r\n        {\r\n            InitializeComponent();\r\n            propertyGrid1.SelectedObject = new Foo(); // propertyGrid1 added via designer\r\n        }\r\n    }\r\n```\r\n```csharp\r\n    public sealed class Foo\r\n    {\r\n        [Editor(typeof(FooBarEditor), typeof(UITypeEditor))]\r\n        public string Bar { get; set; }\r\n    }\r\n```\r\n```csharp\r\n    public sealed class FooBarEditor : UITypeEditor\r\n    {\r\n        public override bool IsDropDownResizable => true;\r\n\r\n        public override UITypeEditorEditStyle GetEditStyle(ITypeDescriptorContext context)\r\n            => UITypeEditorEditStyle.DropDown;\r\n\r\n        public override object EditValue(ITypeDescriptorContext context, IServiceProvider provider, object value)\r\n        {\r\n            ((IWindowsFormsEditorService)provider.GetService(typeof(IWindowsFormsEditorService)))\r\n                .DropDownControl(new Panel { BackColor = Color.Yellow });\r\n\r\n            return value;\r\n        }\r\n    }\r\n```","Url":"https://github.com/dotnet/winforms/issues/4238","RelatedDescription":"Open issue \"Resize grip is missing in PropertyGrid DropDown editor after update to net5.0-windows\" (#4238)"},{"Id":"743048093","IsPullRequest":true,"CreatedAt":"2020-11-14T18:27:55","Actor":"dotnet-maestro[bot]","Number":"4236","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:6d389ecb-0616-453a-2112-08d85e71258f)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 6d389ecb-0616-453a-2112-08d85e71258f\r\n- **Build**: 20201113.12\r\n- **Date Produced**: 11/14/2020 4:49 PM\r\n- **Commit**: bfc49945c0bedeffe01bb5d6f3c217dad207d0d8\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 5.0.0 to 5.0.0][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.CodeDom**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.App**: [from 5.0.0-rtm.20563.5 to 5.0.0-rtm.20563.12][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.Targets**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.Win32.Registry**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.0-rtm.20563.5 to 5.0.0-rtm.20563.12][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Cryptography.Xml**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Permissions**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Principal.Windows**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Text.Encodings.Web**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Text.Json**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Threading.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Windows.Extensions**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Cryptography.Cng**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Diagnostics.EventLog**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.DirectoryServices**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Drawing.Common**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.IO.Packaging**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Resources.Extensions**: [from 5.0.0 to 5.0.0][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/56b65e0...bfc4994\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:6d389ecb-0616-453a-2112-08d85e71258f)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4236)","Url":"https://github.com/dotnet/winforms/pull/4236","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/runtime\" (#4236)"},{"Id":"742975502","IsPullRequest":true,"CreatedAt":"2020-11-14T10:14:32","Actor":"gpetrou","Number":"4235","RawContent":null,"Title":"Enable nullability in some Event Args","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in some Event Args.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4235)","Url":"https://github.com/dotnet/winforms/pull/4235","RelatedDescription":"Open PR \"Enable nullability in some Event Args\" (#4235)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-11-23T05:30:49.3166693Z","RunDurationInMilliseconds":734}