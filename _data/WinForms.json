{"Data":{"GitHub":{"Issues":[{"Id":"1071089924","IsPullRequest":false,"CreatedAt":"2021-12-04T01:43:02","Actor":"merriemcgaw","Number":"6270","RawContent":null,"Title":"Epic - Align with Win11 look and feel","State":"open","Body":"Windows 11 implemented a new look and feel. While we get most of that automatically through the Common Controls we do have several places where we owner draw our controls and these should be enhanced in some way to look more aligned with Windows. This is part of our dotnet/planning/issues/27 theme.\r\n\r\nI will be creating and adding issues to this epic in the coming weeks to outline precisely what we need to be doing.\r\n\r\n- [ ] Investigate which controls need to be changed to align with Win11\r\n- [ ] If available from Windows, expose a property that indicates whether the OS is in a Dark Mode or a Light Mode. I'm currently working directly with Windows on this.\r\n- [ ] #6153 \r\n- [ ] #5516 \r\n","Url":"https://github.com/dotnet/winforms/issues/6270","RelatedDescription":"Open issue \"Epic - Align with Win11 look and feel\" (#6270)"},{"Id":"1071089083","IsPullRequest":false,"CreatedAt":"2021-12-04T01:38:43","Actor":"merriemcgaw","Number":"6269","RawContent":null,"Title":"Epic - Improve Clipboard functionality","State":"open","Body":"In addition to removing BinaryFormatter we need to make sure that we are creating a safe and efficient Clipboard feature area. This is part of the dotnet/planning/issues/27 theme. We'll add individual issues to this list as we investigate.\r\n\r\n- [ ] Investigate limitations and problems in current Clipboard implementation","Url":"https://github.com/dotnet/winforms/issues/6269","RelatedDescription":"Open issue \"Epic - Improve Clipboard functionality\" (#6269)"},{"Id":"1071087491","IsPullRequest":false,"CreatedAt":"2021-12-04T01:31:18","Actor":"merriemcgaw","Number":"6268","RawContent":null,"Title":"Epic - complete PerMonV2 support in WinForms","State":"open","Body":"We've been working on improving our HDPI experience for the last few releases. We're going to put a significant focus on HPDI as part of .NET 7. \r\n\r\nIssues will be linked as they are scoped into this epic so that we can track them. This is part of the dotnet/planning/issues/27 theme.","Url":"https://github.com/dotnet/winforms/issues/6268","RelatedDescription":"Open issue \"Epic - complete PerMonV2 support in WinForms\" (#6268)"},{"Id":"1071084308","IsPullRequest":false,"CreatedAt":"2021-12-04T01:27:26","Actor":"merriemcgaw","Number":"6267","RawContent":null,"Title":"Epic- Remove BinaryFormatter from WinForms runtime","State":"open","Body":"BinaryFormatter is an inherently unsafe serliazer. WinForms used it quite a bit in early versions and now we should remove as much of this as possible.\r\n\r\nThis is part of the dotnet/planning/issues/27 theme\r\n\r\n- [ ] https://github.com/dotnet/winforms/issues/1251 ","Url":"https://github.com/dotnet/winforms/issues/6267","RelatedDescription":"Open issue \"Epic- Remove BinaryFormatter from WinForms runtime\" (#6267)"},{"Id":"1071052778","IsPullRequest":false,"CreatedAt":"2021-12-03T23:45:33","Actor":"merriemcgaw","Number":"6266","RawContent":null,"Title":"Expect some delays while members are on vacation","State":"open","Body":"Due to seasonal holidays, many of our members are taking time off. Please expect delayed responses until early January.","Url":"https://github.com/dotnet/winforms/issues/6266","RelatedDescription":"Open issue \"Expect some delays while members are on vacation\" (#6266)"},{"Id":"1071037606","IsPullRequest":false,"CreatedAt":"2021-12-03T23:06:02","Actor":"alanhoman","Number":"6265","RawContent":null,"Title":"ChildMdi inactive (not visible) TabPages do not render properly on HDPI change","State":"open","Body":".NET Core Version:\r\ndotnet-sdk-7.0.100-alpha.1.21568.2-win-x64\r\n\r\nHave you experienced this same bug with .NET Framework?:\r\nNo\r\n\r\n**Issue:** When moving an MdiParent to a higher DPI monitor, the ChildMdi (Maximized) inactive (not visible) TabPages do not render properly when moved from a 100% to 150% monitor.\r\n\r\nRun the project and click MdiParent - Simple Layout on the 100% monitor\r\nDrag the MdiParent to the 150% monitor. The inactive (not visible) tabPage2 and tabPage3 controls do not render properly.  On tabPage2 the groupBox2 and groupBox3 are cut off on the bottom.  On tabPage3, the ListView on tabPage4 is much shorter and should have gone to the bottom of the tab page.\r\n![ChildMdi TabControl 1](https://user-images.githubusercontent.com/2184698/144683021-7101045e-5ed1-41e4-87f6-068820bde6eb.gif)\r\n\r\nIf you start on the 100% monitor with tabPage2 visible, then move to the 150% monitor, tabPage2 renders correctly.  \r\n![ChildMdi TabControl 2](https://user-images.githubusercontent.com/2184698/144683246-106cc214-ac55-49bc-9e58-0720f1c875ab.gif)\r\n\r\nIf you start on the 100% monitor with tabPage3 visible, then move to the 150% monitor, tabPage3 renders correctly.  \r\n![ChildMdi TabControl 3](https://user-images.githubusercontent.com/2184698/144683369-34116614-2230-4cbd-b138-ca2d40d6c6c8.gif)\r\n\r\nIf you use SimpleForm (not MdiParent), the inactive tabs render properly\r\n![ChildMdi TabControl 4](https://user-images.githubusercontent.com/2184698/144683465-76f884ad-8bca-4790-9740-a0a866ac0cf7.gif)\r\n[PerMonitorHDPICore - NET 7.0.zip](https://github.com/dotnet/winforms/files/7652835/PerMonitorHDPICore.-.NET.7.0.zip)\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6265","RelatedDescription":"Open issue \"ChildMdi inactive (not visible) TabPages do not render properly on HDPI change\" (#6265)"},{"Id":"1070574470","IsPullRequest":true,"CreatedAt":"2021-12-03T13:49:16","Actor":"dotnet-maestro[bot]","Number":"6264","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20211203.1\r\n- **Date Produced**: December 3, 2021 11:23:53 AM UTC\r\n- **Commit**: 42224c69786c6386a946dfa47ebbcaf645283f5e\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.CodeDom**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n  - **System.Text.Json**: [from 7.0.0-alpha.1.21602.1 to 7.0.0-alpha.1.21603.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/a61c1a3...42224c6\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6264)","Url":"https://github.com/dotnet/winforms/pull/6264","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6264)"},{"Id":"1070573798","IsPullRequest":true,"CreatedAt":"2021-12-03T13:08:05","Actor":"dotnet-maestro[bot]","Number":"6263","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20211202.3\r\n- **Date Produced**: December 2, 2021 10:41:13 PM UTC\r\n- **Commit**: 59775387deb609d7c62f9e713d133c34ba28ffcd\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.21576.4 to 7.0.0-beta.21602.3][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.21576.4 to 7.0.0-beta.21602.3][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21576.4 to 7.0.0-beta.21602.3][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.21576.4 to 7.0.0-beta.21602.3][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.21576.4 to 7.0.0-beta.21602.3][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21576.4 to 7.0.0-beta.21602.3][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/427c059...5977538\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6263)","Url":"https://github.com/dotnet/winforms/pull/6263","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#6263)"},{"Id":"1070533927","IsPullRequest":true,"CreatedAt":"2021-12-03T12:18:57","Actor":"Danil-Andrianov","Number":"6262","RawContent":null,"Title":"Rewrite printPreviewDialog, label and DataGridView MAUI tests","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3617\r\n\r\n\r\n## Proposed changes\r\n\r\n- Replaced DataGridViewMAUI tests into UI IntegrationTests project\r\n- Replaced LabelMAUI tests into UI IntegrationTests project\r\n- Replaced PrintPreviewDialogMAUI tests into UI IntegrationTests project\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6262)","Url":"https://github.com/dotnet/winforms/pull/6262","RelatedDescription":"Open PR \"Rewrite printPreviewDialog, label and DataGridView MAUI tests\" (#6262)"},{"Id":"1070501079","IsPullRequest":true,"CreatedAt":"2021-12-03T11:38:36","Actor":"Danil-Andrianov","Number":"6261","RawContent":null,"Title":"Rewrite MauiComboBox tests","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3617\r\n\r\n\r\n## Proposed changes\r\n\r\n- Replaced ComboBoxMAUI tests into UI IntegrationTests project\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6261)","Url":"https://github.com/dotnet/winforms/pull/6261","RelatedDescription":"Open PR \"Rewrite MauiComboBox tests\" (#6261)"},{"Id":"1070139637","IsPullRequest":false,"CreatedAt":"2021-12-03T01:53:18","Actor":"alanhoman","Number":"6260","RawContent":null,"Title":"ChildMdi Container control rendering issues when Maximized","State":"open","Body":".NET Core Version:\r\ndotnet-sdk-7.0.100-alpha.1.21568.2-win-x64\r\n\r\nHave you experienced this same bug with .NET Framework?:\r\nNo\r\n\r\n**Issue:** When moving an MdiParent to a higher DPI monitor, the ChildMdi (Maximized) TabControl on the bottom becomes slightly narrower and slightly shorter after multiple moves.\r\n\r\nRun the project and click MdiParent - Simple Layout on the 100% monitor\r\nDrag the MdiParent to the 150% monitor. The Width = 674 and the Height = 267 as displayed in the text box inside the tab control. After moving it to the 100% monitor and back again, the size becomes 672x256. After doing this again, it becomes 671x246.  Also, the list view inside groupBox4 shrinks in height.  This issue does not occur when running the form via Simple Layout (Not MdiParent).\r\n![ChildMDI Maximized](https://user-images.githubusercontent.com/2184698/144530907-95966341-9117-4707-806a-23327456e790.gif)\r\n[PerMonitorHDPICore - NET 7.0.zip](https://github.com/dotnet/winforms/files/7646207/PerMonitorHDPICore.-.NET.7.0.zip)","Url":"https://github.com/dotnet/winforms/issues/6260","RelatedDescription":"Open issue \"ChildMdi Container control rendering issues when Maximized\" (#6260)"},{"Id":"1070122826","IsPullRequest":false,"CreatedAt":"2021-12-03T01:15:01","Actor":"alanhoman","Number":"6259","RawContent":null,"Title":"ChildMdi Container control rendering issues when not Maximized","State":"open","Body":"* .NET Core Version: \r\ndotnet-sdk-7.0.100-alpha.1.21568.2-win-x64\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Issue** When moving an MdiParent to a higher DPI monitor, the ChildMdi (not maximized) TabControl on the bottom becomes slightly wider and slightly shorter after multiple moves.  \r\n\r\nRun the project and click MdiParent - Simple Layout on the 100% monitor\r\nClick on the Maximize/Minimize to un-maximize the ChildMDI form, then drag the MdiParent to the 150% monitor.  The Width = 613 and the Height = 261 as displayed in the text box inside the tab control.  After moving it to the 100% and back again, the size becomes 619x233.  After doing this again, it becomes 816x204 and the tab control now runs past the right edge.\r\n![ChildMDI Not Maximized](https://user-images.githubusercontent.com/2184698/144527632-4b200a9d-4ed1-4847-b2d2-e07ce2635ce0.gif)\r\n[PerMonitorHDPICore - NET 7.0.zip](https://github.com/dotnet/winforms/files/7646074/PerMonitorHDPICore.-.NET.7.0.zip)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6259","RelatedDescription":"Open issue \"ChildMdi Container control rendering issues when not Maximized\" (#6259)"},{"Id":"1065656488","IsPullRequest":false,"CreatedAt":"2021-12-02T23:40:02","Actor":"liyanligt","Number":"6247","RawContent":null,"Title":"C#  tabControl1_DrawItem event firing constantly when I tried doublebuffering --cp.ExStyle |= 0x02000000","State":"closed","Body":"I have a form and it has tones of other controls(buttons,textbox, custom controls, labels, panel,gridview,,listview,). You can guess i had flickering issue. I tried doublebuffering,but it caused other question that  tabControl1_DrawItem event firing constantly, how can it be fixed? Thank you very much.\r\nI also want to note that without this code the problem does not happen, but the tabs flicker constantly and crazy without the \"WS_EX_COMPOSITED hack\" as Hans called it. With double buffering everything using this hack, it makes tabpages loaded well so it is staying in there necessarily。\r\nHere related code:\r\n```cs\r\n         protected override CreateParams CreateParams\r\n        {\r\n            get\r\n            {\r\n                CreateParams cp = base.CreateParams;\r\n                cp.ExStyle |= 0x02000000; //WS_EX_COMPOSITED\r\n                this.Opacity = 1;\r\n                return cp;\r\n            }\r\n        }\r\n\r\n        private void tclTabControl_DrawItem(object sender, DrawItemEventArgs e)\r\n        {\r\n            if (e.Index == fTcl.SelectedIndex || (fTcl.TabCount - e.Index > 7))\r\n            {\r\n                if (!ResourcesManager.EtfSetting.IsWhiteStyle)\r\n                {\r\n                    //绘制主控件的背景\r\n                    Rectangle rec3 = fTcl.ClientRectangle;\r\n                    e.Graphics.FillRectangle(new SolidBrush(MyColor.BackColor), rec3);\r\n                }\r\n                SetStyle(ControlStyles.UserPaint, true);\r\n                SetStyle(ControlStyles.AllPaintingInWmPaint, true); \r\n                SolidBrush orange = new SolidBrush(Color.Orange);\r\n                SolidBrush pre = new SolidBrush(MyColor.RiskColor);\r\n                SolidBrush dis = new SolidBrush(MyColor.DownColor);\r\n                SolidBrush foreColor = new SolidBrush(MyColor.ForeColor);\r\n                SolidBrush darkRed = new SolidBrush(Color.FromArgb(0, 128, 255));//Color.DarkRed\r\n                SolidBrush selectedColor = new SolidBrush(MyColor.SelectedTabBackColor);\r\n                SolidBrush unselectedColor = new SolidBrush(MyColor.UnselectedTabBackColor);\r\n                StringFormat stringFormat = new StringFormat\r\n                {\r\n                    Alignment = StringAlignment.Center,\r\n                    LineAlignment = StringAlignment.Center,\r\n                };\r\n\r\n\r\n                if (fTcl.TabPages.Count > 0)\r\n                {\r\n                    fTcl.BringToFront();\r\n                    btnClose.BringToFront();\r\n                    for (int i = 0; i < fTcl.TabPages.Count; i++)\r\n                    {\r\n                        TabPage page = fTcl.TabPages[i];\r\n                        Rectangle rect = fTcl.GetTabRect(i);\r\n                        SolidBrush backColor = unselectedColor;\r\n                        foreach (Control ctrl in page.Controls)\r\n                        {\r\n                            if (ctrl is ETFOperateControl)\r\n                            {\r\n                                ETFOperateControl control = ctrl as ETFOperateControl;\r\n                                if (control != null)\r\n                                {\r\n                                    TradeType trdType = control.TrdType;\r\n                                    switch (trdType)\r\n                                    {\r\n                                        case TradeType.Dis:\r\n                                            backColor = dis;\r\n                                            break;\r\n                                        case TradeType.Pre:\r\n                                            backColor = pre;\r\n                                            break;\r\n                                        case TradeType.Mid:\r\n                                            backColor = orange;\r\n                                            break;\r\n                                        default:\r\n                                            break;\r\n                                    }\r\n                                    break;\r\n                                }\r\n                            }\r\n                        }\r\n                        float size = 9F;\r\n                        Font font = new Font(\"微软雅黑\", size);\r\n                        SolidBrush fontColor = foreColor;\r\n                        if (page == fTcl.SelectedTab)\r\n                        {\r\n                            font = new Font(\"微软雅黑\", size, FontStyle.Bold);\r\n                            fontColor = darkRed;\r\n                            backColor = selectedColor;\r\n                        }\r\n                        e.Graphics.FillRectangle(backColor, rect);\r\n                        e.Graphics.DrawString(page.Text, font, fontColor, rect, stringFormat);\r\n                    }\r\n                }\r\n            }\r\n       }\r\n```\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6247","RelatedDescription":"Closed issue \"C#  tabControl1_DrawItem event firing constantly when I tried doublebuffering --cp.ExStyle |= 0x02000000\" (#6247)"},{"Id":"1069667920","IsPullRequest":true,"CreatedAt":"2021-12-02T15:17:10","Actor":"Danil-Andrianov","Number":"6257","RawContent":null,"Title":"Rewrite ListViewMAUI tests","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3617 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Replaced ListViewMAUI tests into UI IntegrationTests project\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6257)","Url":"https://github.com/dotnet/winforms/pull/6257","RelatedDescription":"Open PR \"Rewrite ListViewMAUI tests\" (#6257)"},{"Id":"1069527793","IsPullRequest":true,"CreatedAt":"2021-12-02T13:41:43","Actor":"dotnet-maestro[bot]","Number":"6256","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20211202.1\r\n- **Date Produced**: December 2, 2021 10:58:29 AM UTC\r\n- **Commit**: a61c1a3cf5a3391c8df61d5db739ba7d1674bba5\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-alpha.1.21580.11 to 7.0.0-alpha.1.21602.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-alpha.1.21580.11 to 7.0.0-alpha.1.21602.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-alpha.1.21580.11 to 7.0.0-alpha.1.21602.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-alpha.1.21580.11 to 7.0.0-alpha.1.21602.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-alpha.1.21580.11 to 7.0.0-alpha.1.21602.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21580.11 to 7.0.0-alpha.1.21602.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.21580.11 to 7.0.0-alpha.1.21602.1][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-alpha.1.21580.11 to 7.0.0-alpha.1.21602.1][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-alpha.1.21580.11 to 7.0.0-alpha.1.21602.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-alpha.1.21580.11 to 7.0.0-alpha.1.21602.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-alpha.1.21580.11 to 7.0.0-alpha.1.21602.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-alpha.1.21580.11 to 7.0.0-alpha.1.21602.1][1]\r\n  - **System.CodeDom**: [from 7.0.0-alpha.1.21580.11 to 7.0.0-alpha.1.21602.1][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-alpha.1.21580.11 to 7.0.0-alpha.1.21602.1][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-alpha.1.21580.11 to 7.0.0-alpha.1.21602.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-alpha.1.21580.11 to 7.0.0-alpha.1.21602.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-alpha.1.21580.11 to 7.0.0-alpha.1.21602.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-alpha.1.21580.11 to 7.0.0-alpha.1.21602.1][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-alpha.1.21580.11 to 7.0.0-alpha.1.21602.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-alpha.1.21580.11 to 7.0.0-alpha.1.21602.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21580.11 to 7.0.0-alpha.1.21602.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21580.11 to 7.0.0-alpha.1.21602.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-alpha.1.21580.11 to 7.0.0-alpha.1.21602.1][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-alpha.1.21580.11 to 7.0.0-alpha.1.21602.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-alpha.1.21580.11 to 7.0.0-alpha.1.21602.1][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-alpha.1.21580.11 to 7.0.0-alpha.1.21602.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.21580.11 to 7.0.0-alpha.1.21602.1][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-alpha.1.21580.11 to 7.0.0-alpha.1.21602.1][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-alpha.1.21580.11 to 7.0.0-alpha.1.21602.1][1]\r\n  - **System.Text.Json**: [from 7.0.0-alpha.1.21580.11 to 7.0.0-alpha.1.21602.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/09cd9c2...a61c1a3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6256)","Url":"https://github.com/dotnet/winforms/pull/6256","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6256)"},{"Id":"1068385116","IsPullRequest":true,"CreatedAt":"2021-12-01T13:51:56","Actor":"dotnet-maestro[bot]","Number":"6254","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20211130.11\r\n- **Date Produced**: December 1, 2021 10:16:29 AM UTC\r\n- **Commit**: 09cd9c2cfd21f7e830269ee7cd64ea11cbe47a1d\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-alpha.1.21579.5 to 7.0.0-alpha.1.21580.11][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-alpha.1.21579.5 to 7.0.0-alpha.1.21580.11][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-alpha.1.21579.5 to 7.0.0-alpha.1.21580.11][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-alpha.1.21579.5 to 7.0.0-alpha.1.21580.11][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-alpha.1.21579.5 to 7.0.0-alpha.1.21580.11][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21579.5 to 7.0.0-alpha.1.21580.11][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.21579.5 to 7.0.0-alpha.1.21580.11][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-alpha.1.21579.5 to 7.0.0-alpha.1.21580.11][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-alpha.1.21579.5 to 7.0.0-alpha.1.21580.11][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-alpha.1.21579.5 to 7.0.0-alpha.1.21580.11][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-alpha.1.21579.5 to 7.0.0-alpha.1.21580.11][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-alpha.1.21579.5 to 7.0.0-alpha.1.21580.11][1]\r\n  - **System.CodeDom**: [from 7.0.0-alpha.1.21579.5 to 7.0.0-alpha.1.21580.11][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-alpha.1.21579.5 to 7.0.0-alpha.1.21580.11][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-alpha.1.21579.5 to 7.0.0-alpha.1.21580.11][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-alpha.1.21579.5 to 7.0.0-alpha.1.21580.11][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-alpha.1.21579.5 to 7.0.0-alpha.1.21580.11][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-alpha.1.21579.5 to 7.0.0-alpha.1.21580.11][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-alpha.1.21579.5 to 7.0.0-alpha.1.21580.11][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-alpha.1.21579.5 to 7.0.0-alpha.1.21580.11][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21579.5 to 7.0.0-alpha.1.21580.11][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21579.5 to 7.0.0-alpha.1.21580.11][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-alpha.1.21579.5 to 7.0.0-alpha.1.21580.11][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-alpha.1.21579.5 to 7.0.0-alpha.1.21580.11][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-alpha.1.21579.5 to 7.0.0-alpha.1.21580.11][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-alpha.1.21579.5 to 7.0.0-alpha.1.21580.11][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.21579.5 to 7.0.0-alpha.1.21580.11][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-alpha.1.21579.5 to 7.0.0-alpha.1.21580.11][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-alpha.1.21579.5 to 7.0.0-alpha.1.21580.11][1]\r\n  - **System.Text.Json**: [from 7.0.0-alpha.1.21579.5 to 7.0.0-alpha.1.21580.11][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/13c8988...09cd9c2\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6254)","Url":"https://github.com/dotnet/winforms/pull/6254","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6254)"},{"Id":"1068070003","IsPullRequest":false,"CreatedAt":"2021-12-01T07:45:33","Actor":"AmalRajUmapathySelvam","Number":"6253","RawContent":null,"Title":"Custom cursors are getting shrank in dpi aware application on extended monitor with high resolution","State":"open","Body":"* .NET Core Version: \r\nNot tested in .NET Core.\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n**Yes.**\r\n\r\n**Problem description:**\r\nWhen showing custom cursor, cursor is not shown properly in dpi aware applications when app is build on primary monitor with 175 dpi and extended to secondary monitor with 100 dpi in high resolution.\r\n\r\n**Output screenshot with dpi aware:**\r\n![dpiAware_true](https://user-images.githubusercontent.com/44425449/144192354-09ce2860-63ba-4026-9041-f448215513b6.png)\r\n\r\n**Output screenshot without dpi aware:**\r\n![dpiaware_false](https://user-images.githubusercontent.com/44425449/144192407-2ecd92ae-b7c5-45ab-bd47-30b962459001.png)\r\n\r\n**Expected behavior:**\r\nCustom cursor should be loaded properly.\r\n\r\n**Primary screen details:**\r\nDPI – 175%\r\nScreen resolution – 1920*1080 (maximum)\r\nDisplay Orientation - Landscape\r\n\r\n**Secondary screen details :**\r\nDPI – 100%\r\nScreen resolution – 3840*2160 (maximum)\r\nDisplay Orientation - Landscape\r\n\r\n\r\n**Minimal repro:**\r\n\r\nSample - [WindowsFormsApp1 - Copy.zip](https://github.com/dotnet/winforms/files/7631711/WindowsFormsApp1.-.Copy.zip)\r\n1) Run the attached sample.\r\n2) Drag the application and extend to secondary monitor.\r\n3) Hover on any button to show custom cursor.","Url":"https://github.com/dotnet/winforms/issues/6253","RelatedDescription":"Open issue \"Custom cursors are getting shrank in dpi aware application on extended monitor with high resolution\" (#6253)"},{"Id":"1067992426","IsPullRequest":false,"CreatedAt":"2021-12-01T05:54:33","Actor":"TempeBrennan","Number":"6252","RawContent":null,"Title":"\"DrawIcon\" method will translate offset twice","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: 6.0.100\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: No\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\nIf translate transform, DrawIcon paint position is wrong. I'm not sure is this a bug or not, netcore 3.1 is correct\r\n```\r\nusing (var icon = new Icon(\"aa.ico\"))\r\n{\r\n    e.Graphics.TranslateTransform(0, 10);\r\n    e.Graphics.DrawRectangle(new Pen(Brushes.Black), 0, 0, 50, 50);\r\n    e.Graphics.DrawIcon(icon, new Rectangle(0, 0, 50, 50));\r\n}\r\n```\r\n**Current behavior:**\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n![image](https://user-images.githubusercontent.com/51563666/144179146-4e7ee736-22c5-4c9c-8040-c1915f99f759.png)\r\n\r\n**Expected behavior:**\r\n<!--\r\n    Provide details on expected behavior with screenshots/GIF, where ever possible.\r\n -->\r\n![image](https://user-images.githubusercontent.com/51563666/144179195-6637d299-da08-42f5-b721-4bd83f05d351.png)\r\n\r\n\r\n**Minimal repro:**\r\n<!--\r\n    Provide step by step guide to repro this issue.  Incase repro steps are complex, It would be helpful if \r\n    you attach a GIF with repro actions. Attaching a sample app to repro the issue will help speed up the \r\n    resolution. \r\n -->\r\n[WinFormsApp6.zip](https://github.com/dotnet/winforms/files/7631213/WinFormsApp6.zip)\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6252","RelatedDescription":"Open issue \"\"DrawIcon\" method will translate offset twice\" (#6252)"},{"Id":"1064464525","IsPullRequest":false,"CreatedAt":"2021-12-01T00:50:27","Actor":"mcguu","Number":"6241","RawContent":null,"Title":"[Question]no authorization to open a file using zip?","State":"closed","Body":"sorry I am a newbie and I do not know where to ask so I put it here.\r\nI am using uwp\r\nI want to open and read a zipped file using `ZipFile`\r\n\r\n```\r\n FileOpenPicker picker = new FileOpenPicker\r\n                  {\r\n                      ViewMode = PickerViewMode.Thumbnail,\r\n                      SuggestedStartLocation = PickerLocationId.DocumentsLibrary\r\n                  };\r\n\r\n                  StorageFile file = await picker.PickSingleFileAsync();\r\n\r\nZipArchive zipArchive = ZipFile.OpenRead(file.Path);\r\n```\r\nthe `file` is not null and there is a exception that I do not have access to the file.\r\n\r\nwhat should I do?\r\n","Url":"https://github.com/dotnet/winforms/issues/6241","RelatedDescription":"Closed issue \"[Question]no authorization to open a file using zip?\" (#6241)"},{"Id":"1067215016","IsPullRequest":true,"CreatedAt":"2021-11-30T13:57:03","Actor":"dotnet-maestro[bot]","Number":"6251","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20211129.5\r\n- **Date Produced**: November 30, 2021 4:43:52 AM UTC\r\n- **Commit**: 13c8988a03af75ada180a639f8bc85515f2c732f\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-alpha.1.21576.4 to 7.0.0-alpha.1.21579.5][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-alpha.1.21576.4 to 7.0.0-alpha.1.21579.5][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-alpha.1.21576.4 to 7.0.0-alpha.1.21579.5][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-alpha.1.21576.4 to 7.0.0-alpha.1.21579.5][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-alpha.1.21576.4 to 7.0.0-alpha.1.21579.5][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21576.4 to 7.0.0-alpha.1.21579.5][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.21576.4 to 7.0.0-alpha.1.21579.5][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-alpha.1.21576.4 to 7.0.0-alpha.1.21579.5][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-alpha.1.21576.4 to 7.0.0-alpha.1.21579.5][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-alpha.1.21576.4 to 7.0.0-alpha.1.21579.5][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-alpha.1.21576.4 to 7.0.0-alpha.1.21579.5][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-alpha.1.21576.4 to 7.0.0-alpha.1.21579.5][1]\r\n  - **System.CodeDom**: [from 7.0.0-alpha.1.21576.4 to 7.0.0-alpha.1.21579.5][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-alpha.1.21576.4 to 7.0.0-alpha.1.21579.5][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-alpha.1.21576.4 to 7.0.0-alpha.1.21579.5][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-alpha.1.21576.4 to 7.0.0-alpha.1.21579.5][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-alpha.1.21576.4 to 7.0.0-alpha.1.21579.5][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-alpha.1.21576.4 to 7.0.0-alpha.1.21579.5][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-alpha.1.21576.4 to 7.0.0-alpha.1.21579.5][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-alpha.1.21576.4 to 7.0.0-alpha.1.21579.5][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21576.4 to 7.0.0-alpha.1.21579.5][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.21576.4 to 7.0.0-alpha.1.21579.5][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-alpha.1.21576.4 to 7.0.0-alpha.1.21579.5][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-alpha.1.21576.4 to 7.0.0-alpha.1.21579.5][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-alpha.1.21576.4 to 7.0.0-alpha.1.21579.5][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-alpha.1.21576.4 to 7.0.0-alpha.1.21579.5][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.21576.4 to 7.0.0-alpha.1.21579.5][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-alpha.1.21576.4 to 7.0.0-alpha.1.21579.5][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-alpha.1.21576.4 to 7.0.0-alpha.1.21579.5][1]\r\n  - **System.Text.Json**: [from 7.0.0-alpha.1.21576.4 to 7.0.0-alpha.1.21579.5][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/9ede9a2...13c8988\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6251)","Url":"https://github.com/dotnet/winforms/pull/6251","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6251)"},{"Id":"1067159114","IsPullRequest":true,"CreatedAt":"2021-11-30T12:08:38","Actor":"Danil-Andrianov","Number":"6250","RawContent":null,"Title":"Fixing color contrast for DataGridViewLinkCell active link when cell is selected","State":"open","Body":"Fixes #6116\r\n\r\n\r\n## Proposed changes\r\n\r\n- Color for link in the selected cell switched to `SystemColors.HighLightText`\r\n- Font for the active link inside selected cell switched to bold\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Before fix:\r\n\r\n![image](https://user-images.githubusercontent.com/74228865/144044156-948de530-deac-4637-84fb-b6b83132ddbb.png)\r\n\r\n![image](https://user-images.githubusercontent.com/74228865/144044177-e0e69774-c7e1-4886-8ddb-237013718beb.png)\r\n\r\n- After fix:\r\n\r\n![DataGridViewLinkCellColor](https://user-images.githubusercontent.com/74228865/144043837-716e9b7b-0d01-49b7-bb27-08807623b483.gif)\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Test methodology\r\n\r\n- CTI team\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n- Accesssibility Insights\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- Microsoft Windows [Version 10.0.19042.1237]\r\n- .NET 6.0.100-rc.2.21505.57\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6250)","Url":"https://github.com/dotnet/winforms/pull/6250","RelatedDescription":"Open PR \"Fixing color contrast for DataGridViewLinkCell active link when cell is selected\" (#6250)"},{"Id":"1067048440","IsPullRequest":true,"CreatedAt":"2021-11-30T10:16:42","Actor":"SergeySmirnov-Akvelon","Number":"6249","RawContent":null,"Title":"Fixing NullReferenceException when user removes ListViewItem","State":"open","Body":"Fixes #6230 \r\n\r\n## Proposed changes\r\n- The issue is reproduced because we believed that if an `ListViewItem` does not have a `ListView`, then it is inaccessible to the user and has no interaction with the Accessibility tool (Inspect, Narrator).\r\n- Unfortunately, after deleting an `ListViewItem`, the Accessibility tool still tries to get information about it, although the `ListViewItem` no longer has a `ListView`. Therefore, the logic has been updated to work with an `ListViewItem` that does not have a `ListView`.\r\n- Also, after the focused `ListViewItem` is removed, it remains cached in the `FocusedItem` property. It also forces the Accessibility tool to try to retrieve the data of the `ListViewItem` that is not displayed. As a fix, a logic was added to reset the `Focused` flag from the `ListViewItem`.\r\n\r\n## Customer Impact\r\n**Before fix:**\r\n![Issue-6230-before](https://user-images.githubusercontent.com/23376742/144040481-714f76ab-e33b-46dc-bdcc-d98e00346f1d.gif)\r\n\r\n**After fix:**\r\n![Issue-6230](https://user-images.githubusercontent.com/23376742/144039475-a8f96143-e35c-4741-921e-81c771413686.gif)\r\n\r\n## Regression? \r\n- Yes.\r\n\r\n## Risk\r\n- Minimal.\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n-  CTI team;\r\n- Unit tests.\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n- Accessibility Insights;\r\n- Inspect;\r\n- Narrator.\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.1348]\r\n- .NET Core SDK: 7.0.0-alpha.1.21576.4\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6249)","Url":"https://github.com/dotnet/winforms/pull/6249","RelatedDescription":"Open PR \"Fixing NullReferenceException when user removes ListViewItem\" (#6249)"},{"Id":"1067044395","IsPullRequest":true,"CreatedAt":"2021-11-30T10:13:01","Actor":"vladimir-krestov","Number":"6248","RawContent":null,"Title":"Fixing PGV drop-down list box accessibility tree","State":"open","Body":"Fixes #4876\r\n\r\n## Proposed changes\r\n\r\n- Rework parent-child accessibility relations of a PGV drop-down holder and a list box\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- No\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Screenshots\r\n\r\n### Before\r\n\r\n\r\n### After\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- CTI\r\n- Manual testing\r\n- Unit tests\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n- Using Inspect and AI\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .NET 7.0\r\n- Windows 10\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6248)","Url":"https://github.com/dotnet/winforms/pull/6248","RelatedDescription":"Open PR \"Fixing PGV drop-down list box accessibility tree\" (#6248)"},{"Id":"1065048575","IsPullRequest":false,"CreatedAt":"2021-11-29T00:35:33","Actor":"Notplayingallday383","Number":"6243","RawContent":null,"Title":"VS2019 Crashes when adding reference","State":"closed","Body":"Hello, I am trying to add a dll file to my C# Project and whenever I do vs just freezes then crashes. Does anyone know how to fix this issue without uninstalling VS?","Url":"https://github.com/dotnet/winforms/issues/6243","RelatedDescription":"Closed issue \"VS2019 Crashes when adding reference\" (#6243)"},{"Id":"1065408845","IsPullRequest":false,"CreatedAt":"2021-11-29T00:17:07","Actor":"simmotech","Number":"6245","RawContent":null,"Title":"Found a reason for WinForms Designer to 'hang' when loading","State":"closed","Body":"Symptom:\r\nOpening a Form or User Control shows \"Loading designer...\" and never completes.\r\n\r\nMy main applications both did this for months and I assumed it was because I was using pre-release versions of VS 2022.\r\nBut the same happened with the final release so today I got around to researching what the problem was.\r\n\r\nI turned on Verbose output for the WinForms Designer and spotted an exception about a missing Type in a resource file.\r\nAlthough the log showed many more entries after this (and the apps run fine even with the missing type), the designer never loads but doesn't show any error message to give any clue as to why.\r\n\r\nI tried edited the resources.rex file and just manually corrected the version numbers:\r\n`<value>..\\Resources\\SmartLibrarianLogo.svg;DevExpress.Utils.Svg.SvgImage, DevExpress.Data.v21.1, Version=21.1.5.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a</value>\r\n`\r\nto\r\n`<value>..\\Resources\\SmartLibrarianLogo.svg;DevExpress.Utils.Svg.SvgImage, DevExpress.Data.v21.2, Version=21.2.3.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a</value>\r\n`\r\n\r\nAfter restarting VS, there are no errors in the log and the designer works!\r\n\r\nI'm not clear why the designer loading process log seems to continue when there is a fatal problem. It should either be able to skip over this issue or show a dialog box to say there is a problem.","Url":"https://github.com/dotnet/winforms/issues/6245","RelatedDescription":"Closed issue \"Found a reason for WinForms Designer to 'hang' when loading\" (#6245)"},{"Id":"1065195354","IsPullRequest":true,"CreatedAt":"2021-11-28T05:49:57","Actor":"willibrandon","Number":"6244","RawContent":null,"Title":"Add missing feasible file and folder dialog options","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #5405 \r\n\r\n## Proposed changes\r\n\r\nAdd missing feasible file and folder dialog options and expose them via public properties.\r\n\r\n- AddToRecent\r\n- CheckWriteAccess\r\n- ExpandedMode\r\n- OkRequiresInteraction\r\n- SelectReadOnly\r\n- ShowHiddenFiles\r\n- ShowPinnedPlaces\r\n- ShowPreview\r\n\r\n```csharp\r\n\r\nnamespace System.Windows.Forms\r\n{\r\n    public partial class FileDialog\r\n    {\r\n        [DefaultValue(true)]\r\n        public bool AddToRecent { get; set; } = true;\r\n\r\n        [DefaultValue(false)]\r\n        public bool ShowHiddenFiles { get; set; }\r\n\r\n        [DefaultValue(true)]\r\n        public bool ShowPinnedPlaces { get; set; } = true;\r\n\r\n        [DefaultValue(false)]\r\n        public bool OkRequiresInteraction { get; set; }\r\n    }\r\n\r\n    public partial class OpenFileDialog\r\n    {\r\n        [DefaultValue(false)]\r\n        public bool ShowPreview { get; set; }\r\n\r\n        [DefaultValue(true)]\r\n        public bool SelectReadOnly { get; set; } = true;\r\n    }\r\n\r\n    public partial class SaveFileDialog\r\n    {\r\n        [DefaultValue(true)]\r\n        public bool ExpandedMode { get; set; } = true;\r\n\r\n        [DefaultValue(true)]\r\n        public bool CheckWriteAccess { get; set; } = true;\r\n    }\r\n\r\n    public partial class FolderBrowserDialog\r\n    {\r\n        [DefaultValue(true)]\r\n        public bool AddToRecent { get; set; } = true;\r\n\r\n        [DefaultValue(false)]\r\n        public bool ShowHiddenFiles { get; set; }\r\n\r\n        [DefaultValue(true)]\r\n        public bool ShowPinnedPlaces { get; set; } = true;\r\n\r\n        [DefaultValue(false)]\r\n        public bool OkRequiresInteraction { get; set; }\r\n    }\r\n}\r\n\r\n```\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Improved file and folder dialog experience.\r\n\r\n## Regression? \r\n\r\n- No.\r\n\r\n## Risk\r\n\r\n- I could use some guidance analyzing the risk for this change.\r\n- I don't know if I've included everything that is necessary for the VS Designer to support this feature.\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n## Videos <!-- Remove this section if PR does not change UI -->\r\n\r\n<details><summary>AddToRecent</summary>\r\n\r\nGets or sets a value indicating whether the dialog box adds the folder being selected to the recent list.\r\n\r\nhttps://user-images.githubusercontent.com/5017479/137843944-f00e8399-dd5b-41b8-8943-bfd0be76de10.mp4\r\n\r\n</details>\r\n\r\n<details><summary>CheckWriteAccess</summary>\r\n\r\nGets or sets a value indicating whether the dialog box verifies whether creation of the specified file will be successful. If this flag is not set, the calling application must handle errors, such as denial of access, discovered when the item is created.\r\n\r\nhttps://user-images.githubusercontent.com/5017479/137844713-1ab80c5b-1d1b-4de1-971d-705fe0074c8d.mp4\r\n\r\n</details>\r\n\r\n<details><summary>ExpandedMode</summary>\r\n\r\nGets or sets a value indicating whether the dialog box is always opened in the expanded mode.\r\n\r\nhttps://user-images.githubusercontent.com/5017479/137844642-7765180b-0a23-4248-b350-76a7c55c6626.mp4\r\n\r\n</details>\r\n\r\n<details><summary>OkRequiresInteraction</summary>\r\n\r\nGets or sets a value indicating whether the OK button of the dialog box is disabled until the user navigates the view or edits the filename (if applicable). Note: Disabling of the OK button does not prevent the dialog from being submitted by the Enter key.\r\n\r\nhttps://user-images.githubusercontent.com/5017479/137844523-a2b15923-c496-4481-9941-6518909b46ea.mp4\r\n\r\n</details>\r\n\r\n<details><summary>SelectReadOnly</summary>\r\n\r\nGets or sets a value indicating whether the dialog box allows to select read-only files.\r\n\r\nhttps://user-images.githubusercontent.com/5017479/137844790-4e40ba95-ef1f-459e-819f-a2900e99b452.mp4\r\n\r\n</details>\r\n\r\n<details><summary>ShowHiddenFiles</summary>\r\n\r\nGets or sets a value indicating whether the dialog box displays hidden and system files.\r\n\r\nhttps://user-images.githubusercontent.com/5017479/137844598-8fe5334d-7d29-4c25-acca-58f5d3bfbda4.mp4\r\n\r\n</details>\r\n\r\n<details><summary>ShowPinnedPlaces</summary>\r\n\r\nGets or sets a value indicating whether the items shown by default in the view's navigation pane are hidden.\r\n\r\nhttps://user-images.githubusercontent.com/5017479/137844557-575f1bba-7e47-4db0-b0a5-dd7c6d61cea7.mp4\r\n\r\n</details>\r\n\r\n<details><summary>ShowPreview</summary>\r\n\r\nGets or sets a value indicating whether the dialog box shows a preview for selected files.\r\n\r\nhttps://user-images.githubusercontent.com/5017479/137844744-c93c7007-9411-41cb-b01a-2b8acb9a62b3.mp4\r\n\r\n</details>\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Added unit tests.\r\n- Manually tested the changes using WinformsControlsTest -> Dialogs Test (see videos).\r\n- Ran unit and integration tests.\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\nAccessibility Insights for Windows\r\n\r\nI'm seeing FastPass automated check failures for the `FolderBrowserDialog`, `OpenFileDialog`, and `SaveFileDialog` prior to making this change. Based on my tests this change does not increase the number of failures detected.\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- Windows 10.0.22000\r\n- .NET Core SDK 6.0.100\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6244)","Url":"https://github.com/dotnet/winforms/pull/6244","RelatedDescription":"Open PR \"Add missing feasible file and folder dialog options\" (#6244)"},{"Id":"1065038907","IsPullRequest":true,"CreatedAt":"2021-11-27T13:43:11","Actor":"dotnet-maestro[bot]","Number":"6242","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20211126.4\r\n- **Date Produced**: November 26, 2021 6:15:22 PM UTC\r\n- **Commit**: 427c05909067bb2e484116ae2239456bb45adb85\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.21576.2 to 7.0.0-beta.21576.4][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.21576.2 to 7.0.0-beta.21576.4][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21576.2 to 7.0.0-beta.21576.4][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.21576.2 to 7.0.0-beta.21576.4][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.21576.2 to 7.0.0-beta.21576.4][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21576.2 to 7.0.0-beta.21576.4][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/9c578f7...427c059\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6242)","Url":"https://github.com/dotnet/winforms/pull/6242","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6242)"},{"Id":"1064454352","IsPullRequest":true,"CreatedAt":"2021-11-26T13:43:13","Actor":"dotnet-maestro[bot]","Number":"6240","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20211126.2\r\n- **Date Produced**: November 26, 2021 11:16:38 AM UTC\r\n- **Commit**: 9c578f701e92c055ed752c3869a0f36c60630cea\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.21574.3 to 7.0.0-beta.21576.2][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.21574.3 to 7.0.0-beta.21576.2][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21574.3 to 7.0.0-beta.21576.2][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.21574.3 to 7.0.0-beta.21576.2][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.21574.3 to 7.0.0-beta.21576.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21574.3 to 7.0.0-beta.21576.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/11fb293...9c578f7\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6240)","Url":"https://github.com/dotnet/winforms/pull/6240","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6240)"},{"Id":"1064442715","IsPullRequest":true,"CreatedAt":"2021-11-26T12:54:38","Actor":"ArtemTatarinov","Number":"6239","RawContent":null,"Title":"Fixing missing ControlBox buttons at maximized MDI child window for UIA","State":"open","Body":"Fixes #6231\r\n\r\n## Proposed changes\r\n- `MdiControlStrip` is the class that implements merged `MenuStrip` when an MDI child is maximized and the `MainMenuStrip` property of the `Form` is set. \r\n- `MdiControlStrip` has three `ControlBoxMenuItems` with `Alignment` property set to `Right`: `_minimize`, `_restore` and `_close`.\r\n- The item collection of `MdiControlStrip` after merging will look like this:\r\n![image](https://user-images.githubusercontent.com/87859299/143578415-d8fc2e1c-587d-4915-9c5d-1c678655455c.png)\r\nfor this menu bar:\r\n![image](https://user-images.githubusercontent.com/87859299/143578222-0332ce32-0914-42c4-8ee8-d8ebbab7ec77.png)\r\n- That's okay for the `MenuStrip` rendering because the right-aligned items will be placed on the right side correctly, but not okay for the `ToolStripAccessibleObject`, which picks the item by its sequential `fragmentIndex` at the `GetChildFragment` method. \r\n- To fix this issue we need to re-order the local item collection at `GetChildFragment` to make it consistent with the visual layout.\r\n\r\n## Customer Impact\r\n**Before the fix**\r\n- \r\n![image](https://user-images.githubusercontent.com/87859299/143578778-cb1f0714-6db5-4285-98e7-7a5b69f3c9c3.png)\r\n- \r\n![image](https://user-images.githubusercontent.com/87859299/143578816-16d3171c-9f09-4e09-b93b-099ba5d51d17.png)\r\n\r\n**After the fix**\r\n- \r\n![image](https://user-images.githubusercontent.com/87859299/143579107-fa352ab1-ac12-4d77-86eb-d94cca5034eb.png)\r\n- \r\n![image](https://user-images.githubusercontent.com/87859299/143579188-19403a1b-eefb-40f1-9ae3-d254e459cf21.png) \r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- Unit tests\r\n- CTI team\r\n- Manual testing:\r\n1. The case when parent MDI form has 6 MenuStrip items (see the screenshots at the `After the fix` section)\r\n2. The case when parent MDI form has 6 MenuStrip items and child MDI form has 2 MenuStrip items:\r\n![image](https://user-images.githubusercontent.com/87859299/143579959-e486a9e6-e97d-4393-82bb-6e826545f22d.png)\r\n3. The case when child MDI form has 2 MenuStrip items:\r\n![image](https://user-images.githubusercontent.com/87859299/143580161-02ce2553-5b0d-4e97-9f1c-ed4ddb6437fb.png)\r\n4. The case when both parent and child MDI forms have no MenuStrip items at all:\r\n![image](https://user-images.githubusercontent.com/87859299/143580367-1c279c02-91a9-45ed-89b4-d6986303effa.png)\r\n5. The case when the `RightToLeft` mode is set to `Yes` for parent MDI form (at the Accessibility Insights tool it look the same as for `RightToLeft` turned off because when the `RightToLeft` is on the first item is still the `System` item, then `Test1`, `Test2`, etc.):\r\n![image](https://user-images.githubusercontent.com/87859299/143581858-88611b82-a652-40c3-9433-6920ebf59218.png)\r\n6. The case when child MDI form isn't maximized - the code from the fix won't even be called because the item will be returned by the code above, and Accessibility Insights will show correct menu bars both for parent and child MDI forms.\r\n\r\n## Accessibility testing\r\n- Accessibility Insights\r\n- Inspect\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19043.1348]\r\n- .Net SDK 7.0.100-alpha.1.21526.13\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6239)","Url":"https://github.com/dotnet/winforms/pull/6239","RelatedDescription":"Open PR \"Fixing missing ControlBox buttons at maximized MDI child window for UIA\" (#6239)"},{"Id":"1064438412","IsPullRequest":false,"CreatedAt":"2021-11-26T12:48:59","Actor":"SergeySmirnov-Akvelon","Number":"6238","RawContent":null,"Title":"Narrator does not announce the focused ListViewItem when the user returns focus to the ListView after deleting the ListViewItem.","State":"open","Body":".NET Core Version: \r\n- .NET Core SDK: 7.0.0-alpha.1.21574.1\r\n\r\nHave you experienced this same bug with .NET Framework?: \r\n- No (the issue is reproduced since .NET Core 5.0)\r\n\r\n**Repro steps:**\r\n1. Create a `Form` with a `ListView` and a couple of `Buttons`.\r\n2. Add a couple of `Columns` to the `ListView` and set the view mode to `Details`.\r\n3. Make the first `Button` a button for adding `ListViewItems` to the `ListView`.\r\n4. Make the second `Button` a button to delete `ListViewItems` from the `ListView`.\r\n5. Launch the application.\r\n6. Add a couple of `ListViewItems` using the first `Button`.\r\n7. Set focus to the first `ListViewItems` and press the `Button` to delete.\r\n8. Use `Tab` to return focus to the `ListView`.\r\n\r\n**Actual behavior:**\r\nThe Narrator announces nothing.\r\n![6238](https://user-images.githubusercontent.com/23376742/143583678-e51f1846-977f-41bd-9bdb-92f005215135.gif)\r\n\r\n**Expected:**\r\nThe Narrator should announce data about the ListView.\r\n![image](https://user-images.githubusercontent.com/23376742/143584834-b96b3b16-ef83-481b-84bf-bd382d2fecb3.png)\r\n","Url":"https://github.com/dotnet/winforms/issues/6238","RelatedDescription":"Open issue \"Narrator does not announce the focused ListViewItem when the user returns focus to the ListView after deleting the ListViewItem.\" (#6238)"}],"ResultType":"GitHubIssue"}},"RunOn":"2021-12-04T05:30:37.3178837Z","RunDurationInMilliseconds":477}