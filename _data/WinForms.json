{"Data":{"GitHub":{"Issues":[{"Id":"1426366087","IsPullRequest":true,"CreatedAt":"2022-10-28T23:13:53","Actor":"dreddy-work","Number":"8054","RawContent":null,"Title":"Enable CodeQL in WinForms repo","State":"closed","Body":"- Enabling CodeQL for WinForms repo by adding new YML\r\n- CodeQL is increasing the build time hence, scheduled to run weekly and comply with the policy.\r\n- Will be adding new pipeline, new pipeline is going to run on this new YML, scheduled weekly, and separate from regular pipeline. \r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8054)","Url":"https://github.com/dotnet/winforms/pull/8054","RelatedDescription":"Closed or merged PR \"Enable CodeQL in WinForms repo\" (#8054)"},{"Id":"1425885056","IsPullRequest":true,"CreatedAt":"2022-10-28T22:44:03","Actor":"gpetrou","Number":"8050","RawContent":null,"Title":"Enable nullability in ToolStripComboBoxControl","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripComboBoxControl.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8050)","Url":"https://github.com/dotnet/winforms/pull/8050","RelatedDescription":"Closed or merged PR \"Enable nullability in ToolStripComboBoxControl\" (#8050)"},{"Id":"1427662014","IsPullRequest":true,"CreatedAt":"2022-10-28T19:50:19","Actor":"JeremyKuhne","Number":"8063","RawContent":null,"Title":"Reorder Message fields","State":"closed","Body":"Historically our first four fields matched the layout of MSG. Keeping it that way for better back compat.\r\n\r\nAs Message doesn't match MSG, they shouldn't be blitted over each other, but for those that might be doing this we can keep the order. Note that other future changes to the struct could break doing this sort of thing even if the first four fields stay the same.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8063)","Url":"https://github.com/dotnet/winforms/pull/8063","RelatedDescription":"Closed or merged PR \"Reorder Message fields\" (#8063)"},{"Id":"1425955111","IsPullRequest":true,"CreatedAt":"2022-10-28T19:36:21","Actor":"vseanreesermsft","Number":"8053","RawContent":null,"Title":"Update branding to 7.0.1","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8053)","Url":"https://github.com/dotnet/winforms/pull/8053","RelatedDescription":"Closed or merged PR \"Update branding to 7.0.1\" (#8053)"},{"Id":"1427469261","IsPullRequest":true,"CreatedAt":"2022-10-28T16:03:58","Actor":"gpetrou","Number":"8061","RawContent":null,"Title":"Enable nullability in LinkCollection","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in LinkCollection.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8061)","Url":"https://github.com/dotnet/winforms/pull/8061","RelatedDescription":"Open PR \"Enable nullability in LinkCollection\" (#8061)"},{"Id":"1427221217","IsPullRequest":true,"CreatedAt":"2022-10-28T12:52:32","Actor":"conorgee","Number":"8060","RawContent":null,"Title":"Semester of code","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #329\r\n\r\n\r\n## Proposed changes\r\n\r\n- solving the issue of the laggy trackbar for large maximum \r\n- only creating ticks based on the physical limitations of the trackbar\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- solves the issue of ticks taking up a large amount of resources\r\n\r\n## Regression? \r\n\r\n-  No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8060)","Url":"https://github.com/dotnet/winforms/pull/8060","RelatedDescription":"Open PR \"Semester of code\" (#8060)"},{"Id":"1427160160","IsPullRequest":true,"CreatedAt":"2022-10-28T12:33:12","Actor":"dotnet-maestro[bot]","Number":"8059","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20221027.6\r\n- **Date Produced**: October 28, 2022 6:03:22 AM UTC\r\n- **Commit**: feb4bee67a111d6e6091b8492cef57a35191b1d9\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/65233eb...feb4bee\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8059)","Url":"https://github.com/dotnet/winforms/pull/8059","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8059)"},{"Id":"1427571449","IsPullRequest":false,"CreatedAt":"2022-10-28T09:27:15","Actor":"icom85","Number":"8062","RawContent":null,"Title":"The WH_GETMESSAGE hook type is not working in .NET 7","State":"open","Body":"### Description\n\nHello!\r\n\r\nThe P/Invoked `SetWindowsHookEx` method using the [WH_GETMESSAGE](https://learn.microsoft.com/en-us/windows/win32/winmsg/about-hooks#wh_getmessage) hook type is not working in .NET 7. The messages that are constructed seem odd, for example in .NET 7 the WM_LBUTTONDOWN message is never created. The issue seems to be e regression as the same code and setup is working in .NET 6.\r\n\n\n### Reproduction Steps\n\n1. Create a simple WinForms project and target .NET 7.\r\n```XML\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>WinExe</OutputType>\r\n    <TargetFramework>net7.0-windows</TargetFramework>\r\n    <Nullable>enable</Nullable>\r\n    <UseWindowsForms>true</UseWindowsForms>\r\n    <ImplicitUsings>enable</ImplicitUsings>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\n2. In the click event of a button install the hook:\r\n```C#\r\nusing System.Runtime.InteropServices;\r\n\r\nnamespace GetMessageHookNet7\r\n{\r\n    public partial class Form1 : Form\r\n    {\r\n        const int WM_LBUTTONDOWN = 0x201;\r\n\r\n        private delegate int HookProc(int code, IntPtr wParam, IntPtr lParam);\r\n\r\n        [DllImport(\"user32.dll\")]\r\n        private static extern IntPtr SetWindowsHookEx(HookType code, HookProc func, IntPtr hInstance, int threadID);\r\n\r\n        [DllImport(\"kernel32.dll\")]\r\n        static extern int GetCurrentThreadId();\r\n\r\n        public Form1()\r\n        {\r\n            InitializeComponent();\r\n        }\r\n\r\n        private void button1_Click(object sender, EventArgs e)\r\n        {\r\n            this.button1.Enabled = false;\r\n            int threadId = GetCurrentThreadId();\r\n            SetWindowsHookEx(HookType.WH_GETMESSAGE, new HookProc(GetMessageHookProc), IntPtr.Zero, threadId);\r\n        }\r\n\r\n        private int GetMessageHookProc(int code, IntPtr wParam, IntPtr lParam)\r\n        {\r\n            if (code >= 0 && (long)wParam > 0)\r\n            {\r\n                Message msg = (Message)Marshal.PtrToStructure(lParam, typeof(Message));\r\n                if (msg.Msg == WM_LBUTTONDOWN)\r\n                {\r\n\r\n                }\r\n            }\r\n\r\n            return 0;\r\n        }\r\n\r\n        private enum HookType\r\n        {\r\n            WH_MSGFILTER = -1,\r\n            WH_JOURNALRECORD = 0,\r\n            WH_JOURNALPLAYBACK = 1,\r\n            WH_KEYBOARD = 2,\r\n            WH_GETMESSAGE = 3,\r\n            WH_CALLWNDPROC = 4,\r\n            WH_CBT = 5,\r\n            WH_SYSMSGFILTER = 6,\r\n            WH_MOUSE = 7,\r\n            WH_HARDWARE = 8,\r\n            WH_DEBUG = 9,\r\n            WH_SHELL = 10,\r\n            WH_FOREGROUNDIDLE = 11,\r\n            WH_CALLWNDPROCRET = 12,\r\n            WH_KEYBOARD_LL = 13,\r\n            WH_MOUSE_LL = 14\r\n        }\r\n    }\r\n}\r\n```\r\n4. Put a breakpoint in the `GetMessageHookProc` inside the _if_ statement where we check for the `WM_LBUTTONDOWN` message.\r\n3. Build and run the project.\r\n4. Click the button to install the hook.\r\n6. Click anywhere on the form.\r\n7. Notice that you will not stop at the breakpoint.\r\n\r\nDebugging the project, you will notice that some very strange messages be generated. I am attaching the test project for reference.\r\n[GetMessageHookNet7.zip](https://github.com/dotnet/runtime/files/9887034/GetMessageHookNet7.zip)\r\n\r\nThe issue also does not reproduce in .NET 6. I am attaching a short gif file showing the observed behavior.\r\n![net7-hook](https://user-images.githubusercontent.com/5156494/198553004-8b427580-a395-4942-bcdf-8709a67e036e.gif)\n\n### Expected behavior\n\nThe breakpoint inside the GetMessageHookProc is hit.\n\n### Actual behavior\n\nThe breakpoint inside the GetMessageHookProc is **not** hit.\n\n### Regression?\n\nYes, this issue is a regression. It does not reproduce in .NET 6. \r\n\r\nI tested it in the latest version of VS2022 - **17.4.0 Preview 5.0** and with .NET 7 SDK: **7.0.100-rc.2.22477.23** I also tested with the first preview of .NET 7 - **7.0.100-preview.1.22110.4** and issue still reproduces.\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/winforms/issues/8062","RelatedDescription":"Open issue \"The WH_GETMESSAGE hook type is not working in .NET 7\" (#8062)"},{"Id":"1426838022","IsPullRequest":true,"CreatedAt":"2022-10-28T07:47:08","Actor":"gpetrou","Number":"8058","RawContent":null,"Title":"Enable nullability in ToolStripDropDown","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripDropDown.","Url":"https://github.com/dotnet/winforms/pull/8058","RelatedDescription":"Open PR \"Enable nullability in ToolStripDropDown\" (#8058)"},{"Id":"1426714564","IsPullRequest":true,"CreatedAt":"2022-10-28T05:45:09","Actor":"gpetrou","Number":"8057","RawContent":null,"Title":"Enable nullability in StatusStrip","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in StatusStrip.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8057)","Url":"https://github.com/dotnet/winforms/pull/8057","RelatedDescription":"Open PR \"Enable nullability in StatusStrip\" (#8057)"},{"Id":"1426704487","IsPullRequest":true,"CreatedAt":"2022-10-28T05:34:57","Actor":"gpetrou","Number":"8056","RawContent":null,"Title":"Enable nullability in MdiWindowListStrip","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in MdiWindowListStrip.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8056)","Url":"https://github.com/dotnet/winforms/pull/8056","RelatedDescription":"Open PR \"Enable nullability in MdiWindowListStrip\" (#8056)"},{"Id":"1426696920","IsPullRequest":true,"CreatedAt":"2022-10-28T05:24:56","Actor":"mikhailovalex","Number":"8055","RawContent":null,"Title":"Fix a SaveTabSelection method","State":"open","Body":"\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n\r\nHi,\r\n\r\n\r\n\r\nMy name is Alex M. I am a software developer at DevExpress WinForms Team.\r\n\r\n\r\n\r\nI created a pull request that fixes the following issue. It's related only for .NET 7 after this PR - [Combine PropertyGrid tab information.](https://github.com/dotnet/winforms/pull/6108).\r\n\r\n\r\n\r\n\r\n### Fixes\r\n\"Invalid cast error\" in the TryGetSavedTabSelection method. PropertyGrid saves information about selectedTab in a [SaveTabSelection ](https://github.com/dotnet/winforms/blob/7ef35233ec820db47dce981b9ba403850b98d7ec/src/System.Windows.Forms/src/System/Windows/Forms/PropertyGrid.cs#L3628) method. After change the _selectedTab field from int to a TabInfo record we should use a _tabs.IndexOf(_selectedTab) method. In a [TryGetSavedTabSelection ](https://github.com/dotnet/winforms/blob/7ef35233ec820db47dce981b9ba403850b98d7ec/src/System.Windows.Forms/src/System/Windows/Forms/PropertyGrid.cs#L3646) method we restore information and we expect int value in a _designerSelections Hashtable. \r\n\r\n\r\n\r\n\r\n\r\n## Proposed changes\r\n\r\n\r\n\r\n-Changed the type of value added to the _designerSelections dictionary in the SaveTabSelection method.\r\n\r\n\r\n\r\n-Before\r\nTabInfo \r\n\r\n\r\n\r\n-After\r\nint\r\n\r\n\r\n\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n## Customer Impact\r\n\r\n\r\n\r\nThe error occurs when an end-user modify somthing in Visual Studio designer.\r\n\r\n\r\n\r\n## Regression?\r\n\r\n\r\n\r\nYes\r\n\r\n\r\n\r\n## Risk\r\n\r\n\r\n\r\nMedium\r\n\r\n\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n\r\n\r\n* Manually\r\n\r\n\r\n\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\nVisualStudio 2022 Preview 4\r\n.NET 7 RC2\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8055)","Url":"https://github.com/dotnet/winforms/pull/8055","RelatedDescription":"Open PR \"Fix a SaveTabSelection method\" (#8055)"},{"Id":"1425893580","IsPullRequest":true,"CreatedAt":"2022-10-28T01:56:06","Actor":"lonitra","Number":"8052","RawContent":null,"Title":"Convert AxHost IPersistX Interface to Cswin32","State":"closed","Body":"- Converted rest of AxHost interfaces (IPersistX) to cswin32 version, which prompted for the conversion of other relating interfaces: `IStream`,`IStorage`,`IPropertyBag`,`IPicture`,`IPictureDisp`\r\n- Added helpers to ComHelpers.cs to get IDispatch property and get scoped pointers\r\n- Convert IStream vtable to the new pattern\r\n- Remove PictureWrapper\r\n- Create real mocks in Com2PictureConverterTests since IPicture can no longer be mocked using moq\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8052)","Url":"https://github.com/dotnet/winforms/pull/8052","RelatedDescription":"Closed or merged PR \"Convert AxHost IPersistX Interface to Cswin32\" (#8052)"},{"Id":"1425891686","IsPullRequest":true,"CreatedAt":"2022-10-27T23:21:59","Actor":"gpetrou","Number":"8051","RawContent":null,"Title":"Enable nullability in FeedbackDropDown","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in FeedbackDropDown.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8051)","Url":"https://github.com/dotnet/winforms/pull/8051","RelatedDescription":"Closed or merged PR \"Enable nullability in FeedbackDropDown\" (#8051)"},{"Id":"1425876097","IsPullRequest":true,"CreatedAt":"2022-10-27T15:55:13","Actor":"gpetrou","Number":"8049","RawContent":null,"Title":"Enable nullability in some ToolStripItem members","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in some ToolStripItem members.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8049)","Url":"https://github.com/dotnet/winforms/pull/8049","RelatedDescription":"Open PR \"Enable nullability in some ToolStripItem members\" (#8049)"},{"Id":"1425522451","IsPullRequest":true,"CreatedAt":"2022-10-27T12:33:18","Actor":"dotnet-maestro[bot]","Number":"8047","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20221026.6\r\n- **Date Produced**: October 27, 2022 6:00:29 AM UTC\r\n- **Commit**: 65233ebb1368ab5eebe76c05aac852b9b6a8cde8\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.22525.7 to 8.0.0-alpha.1.22526.6][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.22525.7 to 8.0.0-alpha.1.22526.6][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22525.7 to 8.0.0-alpha.1.22526.6][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22525.7 to 8.0.0-alpha.1.22526.6][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22525.7 to 8.0.0-alpha.1.22526.6][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.22525.7 to 8.0.0-alpha.1.22526.6][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22525.7 to 8.0.0-alpha.1.22526.6][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.22525.7 to 8.0.0-alpha.1.22526.6][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.22525.7 to 8.0.0-alpha.1.22526.6][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.22525.7 to 8.0.0-alpha.1.22526.6][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22525.7 to 8.0.0-alpha.1.22526.6][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22525.7 to 8.0.0-alpha.1.22526.6][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22525.7 to 8.0.0-alpha.1.22526.6][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22525.7 to 8.0.0-alpha.1.22526.6][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22525.7 to 8.0.0-alpha.1.22526.6][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.22525.7 to 8.0.0-alpha.1.22526.6][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22525.7 to 8.0.0-alpha.1.22526.6][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22525.7 to 8.0.0-alpha.1.22526.6][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22525.7 to 8.0.0-alpha.1.22526.6][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22525.7 to 8.0.0-alpha.1.22526.6][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22525.7 to 8.0.0-alpha.1.22526.6][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22525.7 to 8.0.0-alpha.1.22526.6][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.22525.7 to 8.0.0-alpha.1.22526.6][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22525.7 to 8.0.0-alpha.1.22526.6][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22525.7 to 8.0.0-alpha.1.22526.6][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22525.7 to 8.0.0-alpha.1.22526.6][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22525.7 to 8.0.0-alpha.1.22526.6][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22525.7 to 8.0.0-alpha.1.22526.6][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22525.7 to 8.0.0-alpha.1.22526.6][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22525.7 to 8.0.0-alpha.1.22526.6][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/7b5ab35...65233eb\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8047)","Url":"https://github.com/dotnet/winforms/pull/8047","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8047)"},{"Id":"1423994260","IsPullRequest":true,"CreatedAt":"2022-10-27T01:30:40","Actor":"v-elnovikova","Number":"8039","RawContent":null,"Title":"Added unit tests for \"AccessibleObject.FragmentNavigate\" method in MonthCalendar-related classes","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes https://github.com/dotnet/winforms/issues/6094\r\n\r\n\r\n## Proposed changes\r\n\r\nAdded missing unit tests to check the method behavior in these classes:\r\n- MonthCalendarAccessibleObject\r\n- CalendarAccessibleObject\r\n- CalendarPreviousButtonAccessibleObject\r\n- CalendarNextButtonAccessibleObject\r\n- CalendarTodayLinkAccessibleObject\r\n- CalendarBodyAccessibleObject\r\n- CalendarHeaderAccessibleObject\r\n- CalendarDayOfWeekCellAccessibleObject\r\n- CalendarWeekNumberCellAccessibleObject\r\n- CalendarRowAccessibleObject\r\n- CalendarCellAccessibleObject\r\n\r\n\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .NET 7.0.0-rc.1.22426.10\r\n- Windows 11\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8039)","Url":"https://github.com/dotnet/winforms/pull/8039","RelatedDescription":"Closed or merged PR \"Added unit tests for \"AccessibleObject.FragmentNavigate\" method in MonthCalendar-related classes\" (#8039)"},{"Id":"1423959733","IsPullRequest":true,"CreatedAt":"2022-10-27T01:28:40","Actor":"v-elnovikova","Number":"8037","RawContent":null,"Title":"Fixed unit tests for \"AccessibleObject.FragmentNavigate\" method in ListViewItem-related classes","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes https://github.com/dotnet/winforms/issues/6094\r\n\r\n\r\n## Proposed changes\r\n\r\n- Fixed tests for ListView in virtual mode\r\n- Added comments on related test cases code location\r\n\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .NET 7.0.0-rc.2.22472.3\r\n- Windows 11\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8037)","Url":"https://github.com/dotnet/winforms/pull/8037","RelatedDescription":"Closed or merged PR \"Fixed unit tests for \"AccessibleObject.FragmentNavigate\" method in ListViewItem-related classes\" (#8037)"},{"Id":"1424803974","IsPullRequest":true,"CreatedAt":"2022-10-27T01:27:17","Actor":"JeremyKuhne","Number":"8045","RawContent":null,"Title":"Null annotate Com2Interop","State":"closed","Body":"This was a bit tricky as we deviate a bit from the base annotations. I've moved a number of the collections to generic ones to facilitate this and cleaned up more to keep null state clearer.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8045)","Url":"https://github.com/dotnet/winforms/pull/8045","RelatedDescription":"Closed or merged PR \"Null annotate Com2Interop\" (#8045)"},{"Id":"1423950593","IsPullRequest":true,"CreatedAt":"2022-10-27T01:25:33","Actor":"v-elnovikova","Number":"8036","RawContent":null,"Title":"Added unit tests for \"AccessibleObject.FragmentNavigate\" method in UpDown-related classes","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #6094\r\n\r\n## Proposed changes\r\n\r\n- Add missing unit tests to check the method behavior in these classes: UpDownButtonsAccessibleObject, DirectionButtonAccessibleObject, DomainUpDownAccessibleObject\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .NET 7.0.0-rc.2.22472.3\r\n- Windows 11\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8036)","Url":"https://github.com/dotnet/winforms/pull/8036","RelatedDescription":"Closed or merged PR \"Added unit tests for \"AccessibleObject.FragmentNavigate\" method in UpDown-related classes\" (#8036)"},{"Id":"1423909351","IsPullRequest":true,"CreatedAt":"2022-10-27T01:12:13","Actor":"dotnet-maestro[bot]","Number":"8035","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20221025.7\r\n- **Date Produced**: October 26, 2022 4:53:08 AM UTC\r\n- **Commit**: 7b5ab359a84d6a2c36a864a23c23bbe7686cae95\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/5108757...7b5ab35\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8035)","Url":"https://github.com/dotnet/winforms/pull/8035","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8035)"},{"Id":"1424874539","IsPullRequest":false,"CreatedAt":"2022-10-27T01:00:36","Actor":"JeremyKuhne","Number":"8046","RawContent":null,"Title":" System.Windows.Forms.Tests.ListControlTests.ListControl_FormatInfo_Set_CallsRefreshItems fails intermittently","State":"open","Body":"### Test\n\nSystem.Windows.Forms.Tests.ListControlTests.ListControl_FormatInfo_Set_CallsRefreshItems\n\n### Issue description\n\n\r\nSystem.Windows.Forms.Tests.ListControlTests.ListControl_FormatInfo_Set_CallsRefreshItems has been failing periodically, in the instance I investigated this was the error:\r\n\r\n```\r\nError message\r\nAssert.Same() Failure\\r\\nExpected: en-US\\r\\nActual:   en-US\r\n\r\nStack trace\r\n   at System.Windows.Forms.Tests.ListControlTests.ListControl_FormatInfo_Set_CallsRefreshItems() in /_/src/System.Windows.Forms/tests/UnitTests/System/Windows/Forms/ListControlTests.cs:line 1406\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)\r\n```\r\n\r\n`Same` doesn't seem right, even if we think it doesn't change it, from a consumption standpoint it shouldn't matter. Should probably change to `Equals`.","Url":"https://github.com/dotnet/winforms/issues/8046","RelatedDescription":"Open issue \" System.Windows.Forms.Tests.ListControlTests.ListControl_FormatInfo_Set_CallsRefreshItems fails intermittently\" (#8046)"},{"Id":"1423825799","IsPullRequest":true,"CreatedAt":"2022-10-27T00:52:56","Actor":"v-elnovikova","Number":"8034","RawContent":null,"Title":"Fixed ToolStrip overflow button arrow color in HC themes","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #7724\r\n\r\n\r\n## Proposed changes\r\n\r\n- Changed ToolStrip overflow button arrow color when the button is in selected state. Affects HC themes only.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Better button arrow visibility on HC themes\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nWindows 11:\r\n![win11_before](https://user-images.githubusercontent.com/113603457/198006539-66ac2850-fd86-4d5c-bc83-39639e21f5d1.png)\r\n\r\nWindows 10:\r\n![win10_before](https://user-images.githubusercontent.com/113603457/198006551-afb2949b-05e3-4a4c-96fa-fa05644e482e.png)\r\n\r\n### After\r\n\r\nWindows 11:\r\n![win11_after](https://user-images.githubusercontent.com/113603457/198006643-d874d034-747c-4869-a431-7e27dc7591e1.png)\r\n\r\nWindows10:\r\n![win10_after](https://user-images.githubusercontent.com/113603457/198006667-cef8dccf-17bc-45f4-9f3e-d1e9b98757ab.png)\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n- Accessibility Insights for Windows - Color contrast analyzer\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- Windows 10: .NET SDK 7.0.100-rc.2.22477.23\r\n- Windows 11: .NET SDK 7.0.100-rc.2.22477.23\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8034)","Url":"https://github.com/dotnet/winforms/pull/8034","RelatedDescription":"Closed or merged PR \"Fixed ToolStrip overflow button arrow color in HC themes\" (#8034)"},{"Id":"1424372303","IsPullRequest":true,"CreatedAt":"2022-10-26T23:27:16","Actor":"gpetrou","Number":"8044","RawContent":null,"Title":"Enable nullability in ToolStripSplitButtonButton","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripSplitButtonButton.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8044)","Url":"https://github.com/dotnet/winforms/pull/8044","RelatedDescription":"Closed or merged PR \"Enable nullability in ToolStripSplitButtonButton\" (#8044)"},{"Id":"1424368197","IsPullRequest":true,"CreatedAt":"2022-10-26T23:24:54","Actor":"gpetrou","Number":"8043","RawContent":null,"Title":"Enable nullability in ToolStripSplitStackDragDropHandler","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripSplitStackDragDropHandler.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8043)","Url":"https://github.com/dotnet/winforms/pull/8043","RelatedDescription":"Closed or merged PR \"Enable nullability in ToolStripSplitStackDragDropHandler\" (#8043)"},{"Id":"1424343309","IsPullRequest":true,"CreatedAt":"2022-10-26T23:15:34","Actor":"gpetrou","Number":"8040","RawContent":null,"Title":"Enable nullability in ToolStripSplitButton","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripSplitButton.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8040)","Url":"https://github.com/dotnet/winforms/pull/8040","RelatedDescription":"Closed or merged PR \"Enable nullability in ToolStripSplitButton\" (#8040)"},{"Id":"1424346687","IsPullRequest":true,"CreatedAt":"2022-10-26T23:04:55","Actor":"gpetrou","Number":"8041","RawContent":null,"Title":"Enable nullability in PropertyGridToolStrip","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in PropertyGridToolStrip.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8041)","Url":"https://github.com/dotnet/winforms/pull/8041","RelatedDescription":"Closed or merged PR \"Enable nullability in PropertyGridToolStrip\" (#8041)"},{"Id":"1424358101","IsPullRequest":true,"CreatedAt":"2022-10-26T23:04:32","Actor":"gpetrou","Number":"8042","RawContent":null,"Title":"Enable nullability in ToolStripProgressBarControl","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripProgressBarControl.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8042)","Url":"https://github.com/dotnet/winforms/pull/8042","RelatedDescription":"Closed or merged PR \"Enable nullability in ToolStripProgressBarControl\" (#8042)"},{"Id":"1423992156","IsPullRequest":true,"CreatedAt":"2022-10-26T13:08:45","Actor":"draganovik","Number":"8038","RawContent":null,"Title":"Update README.md","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n## Proposed changes\r\n\r\n- \r\n- \r\n- \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8038)","Url":"https://github.com/dotnet/winforms/pull/8038","RelatedDescription":"Closed or merged PR \"Update README.md\" (#8038)"},{"Id":"1423736375","IsPullRequest":false,"CreatedAt":"2022-10-26T09:42:39","Actor":"Olina-Zhang","Number":"8033","RawContent":null,"Title":"[Accessibility] The menuItem with Alignment: right setting is not displayed in UIA tree when setting MenuStrip's GripStyle as Visible","State":"open","Body":"### .NET version\n\n8.0.100-alpha.1.22514.14\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo，repro in previous .Net versions: 7.0/6.0 and .Net Core 3.1\n\n### Issue description\n\nThe menuItem with Alignment: right setting is not displayed in UIA tree when setting MenuStrip's GripStyle as Visible\r\n\r\n.Net 8.0:\r\n![image](https://user-images.githubusercontent.com/26474449/197992664-3312b542-5302-4c6b-92de-250e8543f8a9.png)\r\n\r\n\r\n.Net Framework 4.8.1:\r\n![image](https://user-images.githubusercontent.com/26474449/197992824-58190ee8-f99d-4b56-a093-ab18c072cf17.png)\r\n\n\n### Steps to reproduce\n\n1. Create a Winforms .Net 8.0 application\r\n2. Add a MenuStrip to form designer with \"Insert Standard Items\"\r\n3. Choose any item, and set its Alignment as Right\r\n4. Set MenuStrip's GripStyle as Visible\r\n5. Build and run application\r\n6. Use AccessibilityInsight or Inspect to check the MenuItems in UIA tree\r\n\r\nTested app:\r\n[MenuStripSample.zip](https://github.com/dotnet/winforms/files/9868207/MenuStripSample.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/8033","RelatedDescription":"Open issue \"[Accessibility] The menuItem with Alignment: right setting is not displayed in UIA tree when setting MenuStrip's GripStyle as Visible\" (#8033)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-10-29T03:32:03.4848403Z","RunDurationInMilliseconds":593}