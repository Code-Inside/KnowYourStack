{"Data":{"GitHub":{"Issues":[{"Id":"619223544","IsPullRequest":true,"CreatedAt":"2020-05-15T20:21:36","Actor":"lonitra","Number":"3293","RawContent":null,"Title":"Implement Task Property for ListViewGroup","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #2656\r\n\r\n\r\n## Proposed changes\r\n\r\n- Add Task API to `ListViewGroup`\r\n- Add GroupLinkClick event handler/args in `ListView`\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Customers will be able to add tasks to their ListViewGroups\r\n- Customers will receive callback to do as they please once group task clicked\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n![image](https://user-images.githubusercontent.com/30007367/82090899-43d79f80-96ab-11ea-86c2-df1ef5c73e1d.png)\r\n### After\r\n![grouptaskex1](https://user-images.githubusercontent.com/30007367/82092331-ebee6800-96ad-11ea-81cc-de7984da8abe.gif)\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing\r\n- Unit testing\r\n\r\n## TODOs:\r\n- [ ] Both narrator and inspect do not pick up on Task property, we'll need to do accessibility improvements here.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3293)","Url":"https://github.com/dotnet/winforms/pull/3293","RelatedDescription":"Open PR \"Implement Task Property for ListViewGroup\" (#3293)"},{"Id":"618920645","IsPullRequest":true,"CreatedAt":"2020-05-15T12:29:18","Actor":"dotnet-maestro[bot]","Number":"3292","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200514.1\r\n- **Date Produced**: 5/14/2020 12:45 PM\r\n- **Commit**: bdd7235c43d762cea051cfc2071e14de48175f0c\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.6.20263.7 to 5.0.0-preview.6.20264.1\r\n  - **System.CodeDom**: from 5.0.0-preview.6.20263.7 to 5.0.0-preview.6.20264.1\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.6.20263.7 to 5.0.0-preview.6.20264.1\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.6.20263.7 to 5.0.0-preview.6.20264.1\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.6.20263.7 to 5.0.0-preview.6.20264.1\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.6.20263.7 to 5.0.0-preview.6.20264.1\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.6.20263.7 to 5.0.0-preview.6.20264.1\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.6.20263.7 to 5.0.0-preview.6.20264.1\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.6.20263.7 to 5.0.0-preview.6.20264.1\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.6.20263.7 to 5.0.0-preview.6.20264.1\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.6.20263.7 to 5.0.0-preview.6.20264.1\r\n  - **System.Security.Permissions**: from 5.0.0-preview.6.20263.7 to 5.0.0-preview.6.20264.1\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.6.20263.7 to 5.0.0-preview.6.20264.1\r\n  - **System.Drawing.Common**: from 5.0.0-preview.6.20263.7 to 5.0.0-preview.6.20264.1\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.6.20263.7 to 5.0.0-preview.6.20264.1\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3292)","Url":"https://github.com/dotnet/winforms/pull/3292","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3292)"},{"Id":"618727938","IsPullRequest":false,"CreatedAt":"2020-05-15T06:20:09","Actor":"Zheng-Li01","Number":"3291","RawContent":null,"Title":"The value of the FileName attribute is not fully displayed when the character length is greater than 16","State":"open","Body":"* .NET Core Version: \r\n.NET SDK 5.0.100-preview5.20262.6\r\n\r\n* More info:\r\n1. The issue also can reproduce .NET SDK 3.1.\r\n2. The issue can't reproduce on SaveFileDialog control.\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n Yes, this is not a regression issue, which can repro from .NET 3.5 to .NET 4.8. \r\n\r\n**Minimal repro:**\r\n1. Create a core project with a openFileDialog control.\r\n2. Inserting the code section \"openFileDialog1.ShowDialog();\" in the button1_click() method to show the OpenFileDialog.\r\n3. Setting the value of 'FileName' property as \"openFileDialog12\".\r\n4. Build & Run the project, click the button1 to show OpenFiledialog.\r\n5. Change the value of 'FileName' property from \"openFileDialog12 to \"openFileDialog123\".\r\n6. Build & Run the project, click the button1 to show OpenFiledialog.\r\n7. Click any where, such as TaskBar of windows, then back to click the OpenFiledialog again.\r\n\r\n**Expected behavior:**\r\nAfter steps7, the value  \"openFileDialog123\" is fully displayed.\r\n\r\n**Actual behavior:**\r\nAfter step4, the value  \"openFileDialog12\" is fully displayed.\r\nAfter step7, the value  \"openFileDialog123\" is not fully  displayed, which displaying as \"enFileDialog123\"\r\nAfter step8, the value  \"openFileDialog123\" is full displayed.\r\n![CoreIssue](https://user-images.githubusercontent.com/38325459/82017814-8d79b780-96b6-11ea-9646-931058ed3066.gif)\r\n![CoreIssue](https://user-images.githubusercontent.com/38325459/82017855-a6826880-96b6-11ea-922c-a249288508c7.PNG)\r\n\r\nRepro project:\r\n[Reproduce.zip](https://github.com/dotnet/winforms/files/4632575/Reproduce.zip)","Url":"https://github.com/dotnet/winforms/issues/3291","RelatedDescription":"Open issue \"The value of the FileName attribute is not fully displayed when the character length is greater than 16\" (#3291)"},{"Id":"618722846","IsPullRequest":false,"CreatedAt":"2020-05-15T06:07:39","Actor":"Olina-Zhang","Number":"3290","RawContent":null,"Title":"RootFolder property doesn't work for modernize ForderBrowserDialog","State":"open","Body":"* .NET Core Version: \r\n.Net Core 5.0 from master branch: 5.0.100-preview.5.20262.7\r\n\r\n* Have you experienced this same bug with .NET Framework?: No \r\n\r\n**Minimal repro:**\r\n1.\tCreate a Winforms .Net Core Application\r\n2.\tAdd following code to show modernize folderBrowserDialog and set its RootFolder property to specific Folder\r\npublic Form1()\r\n        {\r\n            InitializeComponent();\r\n            FolderBrowserDialog folderBrowserDialog = new FolderBrowserDialog();\r\n            **folderBrowserDialog.RootFolder = Environment.SpecialFolder.CommonStartMenu;**\r\n            folderBrowserDialog.ShowDialog();\r\n        }\r\n3.\tBuild and run application\r\n\r\n**Actual behavior:**\r\nRootFolder property setting doesn't work, please see following screenshot:\r\n![image](https://user-images.githubusercontent.com/26474449/82017250-48a15100-96b5-11ea-92b4-cc51b74e5380.png)\r\n\r\n\r\n**Expected behavior:**\r\nRootFolder should be changed in modernize folderBrowserDialog, see below screenshot in old folderBrowserDialog(.Net Framework behavior)\r\n![image](https://user-images.githubusercontent.com/26474449/82017062-e0526f80-96b4-11ea-83ba-86b68a330820.png)\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/3290","RelatedDescription":"Open issue \"RootFolder property doesn't work for modernize ForderBrowserDialog\" (#3290)"},{"Id":"616764203","IsPullRequest":true,"CreatedAt":"2020-05-15T05:37:17","Actor":"hughbe","Number":"3268","RawContent":null,"Title":"Add ButtonBase tests","State":"closed","Body":"## Proposed Changes\r\n- Add ButtonBase tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3268)","Url":"https://github.com/dotnet/winforms/pull/3268","RelatedDescription":"Closed or merged PR \"Add ButtonBase tests\" (#3268)"},{"Id":"617381107","IsPullRequest":true,"CreatedAt":"2020-05-15T03:11:05","Actor":"hughbe","Number":"3277","RawContent":null,"Title":"Extract DataGridView nested classes","State":"closed","Body":"## Proposed Changes\r\n- Extract DataGridView nested classes without any cleanup\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3277)","Url":"https://github.com/dotnet/winforms/pull/3277","RelatedDescription":"Closed or merged PR \"Extract DataGridView nested classes\" (#3277)"},{"Id":"617171527","IsPullRequest":true,"CreatedAt":"2020-05-15T03:05:06","Actor":"RussKie","Number":"3273","RawContent":null,"Title":"AccessibleObject NRT annotations","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n## Proposed changes\r\n\r\nAnnotate the following types:\r\n* AccessibleObject\r\n* InternalAccessibleObject\r\n* AccessibleObject.EnumVariantObject\r\n* Control.ControlAccessibleObject\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3273)","Url":"https://github.com/dotnet/winforms/pull/3273","RelatedDescription":"Closed or merged PR \"AccessibleObject NRT annotations\" (#3273)"},{"Id":"617983287","IsPullRequest":true,"CreatedAt":"2020-05-14T23:18:56","Actor":"RussKie","Number":"3281","RawContent":null,"Title":"Correct exception","State":"closed","Body":"Fixes #3252\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n\r\n## Proposed changes\r\n\r\n- Pass the missing parameter\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3281)","Url":"https://github.com/dotnet/winforms/pull/3281","RelatedDescription":"Closed or merged PR \"Correct exception\" (#3281)"},{"Id":"618574325","IsPullRequest":true,"CreatedAt":"2020-05-14T22:59:20","Actor":"RussKie","Number":"3289","RawContent":null,"Title":"Fixing DataGridViewComboBoxCell: ComboBox causes application crash on handle recreating related to accessibility hierarchy tree restructuring","State":"closed","Body":"\r\nFixes #3251\r\n(cherry picked from commit 7a5e6e589d97cb585db29233e1f6c5709c52dc22)\r\n\r\n## Proposed changes\r\n\r\n- Porting .NET Framework fix for DataGridViewComboBox cell issue related to the control handle recreating when restructuring accessibility hierarchy tree.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Costumers will not experience application error when working with the DataGridView containing ComboBox cell. \r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3289)","Url":"https://github.com/dotnet/winforms/pull/3289","RelatedDescription":"Closed or merged PR \"Fixing DataGridViewComboBoxCell: ComboBox causes application crash on handle recreating related to accessibility hierarchy tree restructuring\" (#3289)"},{"Id":"618497118","IsPullRequest":true,"CreatedAt":"2020-05-14T22:34:34","Actor":"danmosemsft","Number":"3286","RawContent":null,"Title":"Add links in \"new issue\" flow to other related repos","State":"closed","Body":"This .yml adds quick links to other repos below the existing issue template buttons in your new issue flow.\r\n\r\nFor an example of what this looks like, see https://github.com/danmosemsft/runtime/issues/new/choose (the white buttons below your existing green buttons)\r\n\r\nWe are adding this in dotnet/runtime (https://github.com/dotnet/runtime/pull/36431). Reasoning: it's sometimes confusing which is the correct repo to open an issue in. The goal here is to make it easier to open an issue in the correct repo first time so we need to move fewer issues and they more quickly get attention from the right people.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3286)","Url":"https://github.com/dotnet/winforms/pull/3286","RelatedDescription":"Closed or merged PR \"Add links in \"new issue\" flow to other related repos\" (#3286)"},{"Id":"618556746","IsPullRequest":true,"CreatedAt":"2020-05-14T22:28:45","Actor":"dotnet-maestro[bot]","Number":"3288","RawContent":null,"Title":"[release/5.0-preview5] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:67c9bc50-cce6-417c-985c-08d7f21e18b5)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 67c9bc50-cce6-417c-985c-08d7f21e18b5\r\n- **Build**: 20200513.12\r\n- **Date Produced**: 5/14/2020 8:43 PM\r\n- **Commit**: c39954c06937b5b40e3dab0621b1de950207bdf0\r\n- **Branch**: refs/heads/release/5.0-preview5\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20262.7 to 5.0.0-preview.5.20263.12\r\n  - **System.CodeDom**: from 5.0.0-preview.5.20262.7 to 5.0.0-preview.5.20263.12\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.5.20262.7 to 5.0.0-preview.5.20263.12\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20262.7 to 5.0.0-preview.5.20263.12\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.5.20262.7 to 5.0.0-preview.5.20263.12\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.5.20262.7 to 5.0.0-preview.5.20263.12\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20262.7 to 5.0.0-preview.5.20263.12\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.5.20262.7 to 5.0.0-preview.5.20263.12\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.5.20262.7 to 5.0.0-preview.5.20263.12\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.5.20262.7 to 5.0.0-preview.5.20263.12\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.5.20262.7 to 5.0.0-preview.5.20263.12\r\n  - **System.Security.Permissions**: from 5.0.0-preview.5.20262.7 to 5.0.0-preview.5.20263.12\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.5.20262.7 to 5.0.0-preview.5.20263.12\r\n  - **System.Drawing.Common**: from 5.0.0-preview.5.20262.7 to 5.0.0-preview.5.20263.12\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.5.20262.7 to 5.0.0-preview.5.20263.12\r\n\r\n[marker]: <> (End:67c9bc50-cce6-417c-985c-08d7f21e18b5)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3288)","Url":"https://github.com/dotnet/winforms/pull/3288","RelatedDescription":"Closed or merged PR \"[release/5.0-preview5] Update dependencies from dotnet/runtime\" (#3288)"},{"Id":"618498776","IsPullRequest":false,"CreatedAt":"2020-05-14T19:58:51","Actor":"M-Lipin","Number":"3287","RawContent":null,"Title":"Accessibility: review and make accessibility implementation consistent","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n.NET SDK (reflecting any global.json):\r\nVersion: 5.0.100-preview.5.20260.4\r\nCommit: 0950d416f9\r\n\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.18363\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\5.0.100-preview.5.20260.4\\\r\n\r\nHost (useful for support):\r\nVersion: 5.0.0-preview.5.20260.5\r\nCommit: 09ee4814cb\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n<!-- Yes / No -->\r\nYes\r\n\r\n**Problem description:**\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n```\r\nobject IAccessible.accHitTest(int xLeft, int yTop)\r\n{\r\n    // Some code is here...\r\n\r\n    AccessibleObject obj = HitTest(xLeft, yTop);\r\n    if (obj != null) // This is not consistent with below implementation.\r\n    {\r\n        return AsVariant(obj);\r\n    }\r\n\r\n    // Other statements here...\r\n    // Execution goes here if obj is null. Do we need it?\r\n}\r\n```\r\n\r\n```\r\nobject IAccessible.accNavigate(int navDir, object childID)\r\n{\r\n    // Some code is here...\r\n\r\n    return AsVariant(child.Navigate((AccessibleNavigation)navDir));\r\n}\r\n```\r\n\r\n**Expected behavior:**\r\nUsing `AsVariant` should be consistent across AccessibleObject implementation, if code flow is not consistent we should have a comment in the code clarifying the intent of different implementation.\r\n\r\n**Minimal repro:**\r\nCreate the app with some control, use Inspect to force some accessibility calls. Observe different code flows for different methods.","Url":"https://github.com/dotnet/winforms/issues/3287","RelatedDescription":"Open issue \"Accessibility: review and make accessibility implementation consistent\" (#3287)"},{"Id":"618491716","IsPullRequest":false,"CreatedAt":"2020-05-14T19:46:12","Actor":"M-Lipin","Number":"3285","RawContent":null,"Title":"Accessibility: implement unit and UI tests for accessible navigation","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.100-preview.5.20260.4\r\n Commit:    0950d416f9\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100-preview.5.20260.4\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0-preview.5.20260.5\r\n  Commit:  09ee4814cb\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\nThere is no covering by unit tests for accessibility navigation including `IAccessible.accNavigate` and \r\n`IRawElementProviderFragment.Navigate` method implementations.\r\n\r\n**Expected behavior:**\r\nThere should be test covering for accessible navigation so if navigation is broken by some changes CI will notify about it.\r\n- Need to have basic unit tests for unit functionality.\r\n- Need to have per-control scenarios for controls' accessible navigation.\r\n\r\n**Minimal repro:**\r\n- Change the implementation of accessible navigation for some control, for instance add return null for some control's accessible object `FragmentNavigate` and notify that Inspect shows empty accessible tree for the this control in inspect. Please note that there is no tests for this.","Url":"https://github.com/dotnet/winforms/issues/3285","RelatedDescription":"Open issue \"Accessibility: implement unit and UI tests for accessible navigation\" (#3285)"},{"Id":"618179927","IsPullRequest":true,"CreatedAt":"2020-05-14T12:43:42","Actor":"dotnet-maestro[bot]","Number":"3284","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200513.7\r\n- **Date Produced**: 5/14/2020 2:33 AM\r\n- **Commit**: 5859dadf20a9dae44624e0a79e48f1b3f1f26a0a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.6.20262.14 to 5.0.0-preview.6.20263.7\r\n  - **System.CodeDom**: from 5.0.0-preview.6.20262.14 to 5.0.0-preview.6.20263.7\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.6.20262.14 to 5.0.0-preview.6.20263.7\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.6.20262.14 to 5.0.0-preview.6.20263.7\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.6.20262.14 to 5.0.0-preview.6.20263.7\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.6.20262.14 to 5.0.0-preview.6.20263.7\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.6.20262.14 to 5.0.0-preview.6.20263.7\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.6.20262.14 to 5.0.0-preview.6.20263.7\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.6.20262.14 to 5.0.0-preview.6.20263.7\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.6.20262.14 to 5.0.0-preview.6.20263.7\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.6.20262.14 to 5.0.0-preview.6.20263.7\r\n  - **System.Security.Permissions**: from 5.0.0-preview.6.20262.14 to 5.0.0-preview.6.20263.7\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.6.20262.14 to 5.0.0-preview.6.20263.7\r\n  - **System.Drawing.Common**: from 5.0.0-preview.6.20262.14 to 5.0.0-preview.6.20263.7\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.6.20262.14 to 5.0.0-preview.6.20263.7\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3284)","Url":"https://github.com/dotnet/winforms/pull/3284","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3284)"},{"Id":"618172713","IsPullRequest":true,"CreatedAt":"2020-05-14T12:42:03","Actor":"dotnet-maestro[bot]","Number":"3283","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200511.9\r\n- **Date Produced**: 5/11/2020 11:09 PM\r\n- **Commit**: 898e51ed5fdcc4871087ac5754ca9056e58e575d\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: from 5.0.0-beta.20258.8 to 5.0.0-beta.20261.9\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20258.8 to 5.0.0-beta.20261.9\r\n  - **Microsoft.DotNet.Helix.Sdk**: from 5.0.0-beta.20258.8 to 5.0.0-beta.20261.9\r\n  - **Microsoft.DotNet.RemoteExecutor**: from 5.0.0-beta.20258.8 to 5.0.0-beta.20261.9\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20258.8 to 5.0.0-beta.20261.9\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3283)","Url":"https://github.com/dotnet/winforms/pull/3283","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3283)"},{"Id":"618091315","IsPullRequest":true,"CreatedAt":"2020-05-14T09:52:41","Actor":"hughbe","Number":"3282","RawContent":null,"Title":"Fix trailing null in NativeGetItemText","State":"open","Body":"See https://github.com/dotnet/winforms/pull/3174#discussion_r422615154\r\n\r\nIt now returns \"ABC\\0\", which is unintended.\r\n\r\nSo I wrote some more tests in #3107 that exercise this code path and the tests passed on .NET Framework and .NET Core. It seems like we also already had tests testing this code path as well.\r\n\r\nI was a little confused why the tests passed until I realised that the only place where this method was called was in code like\r\n\r\n```cs\r\nif (string.Compare(owner.GetItemText(value), owner.NativeGetItemText(index), true, CultureInfo.CurrentCulture) != 0)\r\n```\r\n\r\nSo I tested in my sandbox and found that \r\n```cs\r\nConsole.WriteLine(string.Compare(\"abc\", \"abc\\0\", true, CultureInfo.CurrentCulture));\r\n```\r\n\r\nprints out\r\n```cs\r\n0\r\n```\r\n\r\nEssentially meaning that whilst this changed behaviour, it didn't break anything as string.Compare already handles trailing `\\0`\r\n\r\nThis just fixes things for correctness\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3282)","Url":"https://github.com/dotnet/winforms/pull/3282","RelatedDescription":"Open PR \"Fix trailing null in NativeGetItemText\" (#3282)"},{"Id":"617891501","IsPullRequest":true,"CreatedAt":"2020-05-14T03:15:06","Actor":"RussKie","Number":"3279","RawContent":null,"Title":"fix: ContextMenuStrip leads to crash on W10 1607","State":"open","Body":"\r\nResolves #2969.\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n\r\n\r\n## Proposed changes\r\n\r\nW10 1607 is not fully compatible with PerMonv2, and this leads to crashes interacting with `ContextMenuStrip`.\r\n\r\n`CommonUnsafeNativeMethods.SetThreadDpiAwarenessContext` may return `DPI_AWARENESS_CONTEXT_UNSPECIFIED` result that is never checked, however we set `dpiAwarenessScopeIsSet` flag assuming the scope was set.\r\n\r\nWhen disposing the scope we pass the obtained context to `TrySetThreadDpiAwarenessContext` that tries to restore the scope back to the original. However in event the original was `DPI_AWARENESS_CONTEXT_UNSPECIFIED` it leads to ANE, that was observed in #2969.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Customers on W10 1607 will now be able to use `ContextMenuStrip` in `HighDpiMode.PerMonitorV2`\r\n- \r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3279)","Url":"https://github.com/dotnet/winforms/pull/3279","RelatedDescription":"Open PR \"fix: ContextMenuStrip leads to crash on W10 1607\" (#3279)"},{"Id":"617395759","IsPullRequest":true,"CreatedAt":"2020-05-13T12:57:26","Actor":"dotnet-maestro[bot]","Number":"3278","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200512.14\r\n- **Date Produced**: 5/13/2020 3:06 AM\r\n- **Commit**: bc3bec788cd8d1f9d882b359ca8368248bf051a4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20261.9 to 5.0.0-preview.6.20262.14\r\n  - **System.CodeDom**: from 5.0.0-preview.5.20261.9 to 5.0.0-preview.6.20262.14\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.5.20261.9 to 5.0.0-preview.6.20262.14\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20261.9 to 5.0.0-preview.6.20262.14\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.5.20261.9 to 5.0.0-preview.6.20262.14\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.5.20261.9 to 5.0.0-preview.6.20262.14\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20261.9 to 5.0.0-preview.6.20262.14\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.5.20261.9 to 5.0.0-preview.6.20262.14\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.5.20261.9 to 5.0.0-preview.6.20262.14\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.5.20261.9 to 5.0.0-preview.6.20262.14\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.5.20261.9 to 5.0.0-preview.6.20262.14\r\n  - **System.Security.Permissions**: from 5.0.0-preview.5.20261.9 to 5.0.0-preview.6.20262.14\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.5.20261.9 to 5.0.0-preview.6.20262.14\r\n  - **System.Drawing.Common**: from 5.0.0-preview.5.20261.9 to 5.0.0-preview.6.20262.14\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.5.20261.9 to 5.0.0-preview.6.20262.14\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3278)","Url":"https://github.com/dotnet/winforms/pull/3278","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3278)"},{"Id":"617303387","IsPullRequest":true,"CreatedAt":"2020-05-13T09:42:58","Actor":"weltkante","Number":"3276","RawContent":null,"Title":"update Xunit.StaFact to include bugfixes","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3122\r\n\r\n\r\n## Proposed changes\r\n\r\nUpdate Xunit.StaFact package to consume bugfixes made upstream\r\n\r\n## Customer Impact\r\n\r\nNone, test infrastructure only\r\n\r\n## Regression? \r\n\r\nNo\r\n\r\n## Risk\r\n\r\nUnknown issues may be introdcued by updating 3rd party packages, but getting fixes for already known issues should outweight that risk.\r\n\r\n### Before\r\n\r\nUnable to run WinFormsTheory with complex MemberData inside VS\r\n\r\n### After\r\n\r\nAble to run WinFormsTheory with complex MemberData inside VS\r\n\r\n(+ various other fixes I don't know exactly how to test for, like calling OleRequired to initialize OLE on the STA thread)\r\n\r\n## Test methodology\r\n\r\nMaking sure one of the known issues is actually fixed. I didn't explicitly test for other fixes that have been merged.\r\n\r\n## Test environment\r\n\r\nlocal\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3276)","Url":"https://github.com/dotnet/winforms/pull/3276","RelatedDescription":"Open PR \"update Xunit.StaFact to include bugfixes\" (#3276)"},{"Id":"617274456","IsPullRequest":false,"CreatedAt":"2020-05-13T09:01:29","Actor":"Olina-Zhang","Number":"3275","RawContent":null,"Title":"The first runtime behavior is not correct after changed TextBox's PasswordChar value from one to another","State":"open","Body":"* .NET Core Version: \r\n.Net Core 5.0 from master branch: 5.0.100-preview.5.20262.7\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Minimal repro:**\r\n1.    Create a Winforms Core application\r\n2.    Add a TextBox control to form designer, and set its PasswordChar property to value ‘*’,\r\n3.    Run this application and input some string in TextBox\r\n4.    Close runtime, and change its PasswordChar property to value ‘&’,\r\n5.    Run this application and input some string in TextBox\r\n6.    Stop debugging, and run this application again, and input some string in TextBox\r\n\r\n**Actual behavior:**\r\nAfter step5, the displayed text in TextBox still is ‘*’, not ‘&’. --- it is not right behavior, and checked the code in form1.designer.cs file, the value is correct. Please see following screenshot:\r\n![image](https://user-images.githubusercontent.com/26474449/81793936-98104180-953c-11ea-9b5a-8f00d4f931c6.png)\r\n\r\n\r\nAfter step6, the displayed text in TextBox is '&'. --- it is right behavior\r\n\r\n**Expected behavior:**\r\nTextBox text display in runtime keeps same as the setting of TextBox’s PasswordChar all the time","Url":"https://github.com/dotnet/winforms/issues/3275","RelatedDescription":"Open issue \"The first runtime behavior is not correct after changed TextBox's PasswordChar value from one to another\" (#3275)"},{"Id":"617174903","IsPullRequest":true,"CreatedAt":"2020-05-13T06:20:02","Actor":"jeremy-visionaid","Number":"3274","RawContent":null,"Title":"Fix menu right-to-left handling","State":"open","Body":"\r\nFixes #3272 \r\n\r\n\r\n## Proposed changes\r\n\r\nFix menu navigation\r\n\r\n## Customer Impact\r\n\r\n\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\nManual testing with MenuStripAndCheckedListBox \r\n\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.100-preview.5.20262.6\r\n Commit:    9ad967d49e\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100-preview.5.20262.6\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0-preview.6.20262.3\r\n  Commit:  210a82a2e7\r\n\r\n.NET SDKs installed:\r\n  3.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100-preview.5.20262.6 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.0-preview.5.20255.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.0-preview.6.20262.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0-preview.6.20261.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3274)","Url":"https://github.com/dotnet/winforms/pull/3274","RelatedDescription":"Open PR \"Fix menu right-to-left handling\" (#3274)"},{"Id":"617159379","IsPullRequest":false,"CreatedAt":"2020-05-13T05:43:24","Actor":"jeremy-visionaid","Number":"3272","RawContent":null,"Title":"MenuStrip arrow key navigation goes in the wrong direction","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\nAt least current master (5.0.100-preview.5.20251.2), but I recall seeing the issue since at least .NET Framework 2.0\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**Problem description:**\r\n\r\nWith a populated MenuStrip, and focus on ToolStripMenuItem that is not top-level, focus shifts in the reverse direction to the arrow key (i.e. pressing the left arrow key causes focus to shift to the right, and pressing the right menu key causes focus to shift to the left). When the focus is on a top-level item, focus shifts in the correct direction.\r\n\r\n**Expected behavior:**\r\nPressing an arrow key should move in the direction of the arrow\r\n\r\n**Minimal repro:**\r\nThe problem is reproducible with the MenuStripAndCheckedListBox winforms test","Url":"https://github.com/dotnet/winforms/issues/3272","RelatedDescription":"Open issue \"MenuStrip arrow key navigation goes in the wrong direction\" (#3272)"},{"Id":"617097168","IsPullRequest":false,"CreatedAt":"2020-05-13T02:45:09","Actor":"RussKie","Number":"3271","RawContent":null,"Title":"Flaky test: `IDispatch_GetTypeInfo_Invoke_Success`","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=641217&view=logs&j=7c8326b9-0a5f-532a-e6de-db8515c72d9a&s=ff05ad62-bb9a-53b6-ce9f-72f329a63e7c\r\n\r\n```\r\n    System.Windows.Forms.Primitives.Tests.Interop.Oleaut32.IDispatchTests.IDispatch_GetTypeInfo_Invoke_Success [FAIL]\r\n      System.Runtime.InteropServices.COMException : Error HRESULT E_FAIL has been returned from a call to a COM component.\r\n      Stack Trace:\r\n           at Interop.Ole32.OleCreatePictureIndirect(PICTDESC* pictdesc, Guid& refiid, BOOL fOwn)\r\n        /_/src/System.Windows.Forms.Primitives/src/Interop/Ole32/Interop.OleCreatePictureIndirect.cs(23,0): at Interop.Ole32.OleCreatePictureIndirect(PICTDESC& pictdesc, Guid& refiid, BOOL fOwn)\r\n        /_/src/System.Windows.Forms/src/System/Windows/Forms/AxHost.cs(3988,0): at System.Windows.Forms.AxHost.GetIPictureDispFromPicture(Image image)\r\n        /_/src/System.Windows.Forms.Primitives/tests/Interop/Oleaut32/IDispatchTests.cs(94,0): at System.Windows.Forms.Primitives.Tests.Interop.Oleaut32.IDispatchTests.SubAxHost.GetIPictureDispFromPicture(Image image)\r\n        /_/src/System.Windows.Forms.Primitives/tests/Interop/Oleaut32/IDispatchTests.cs(39,0): at System.Windows.Forms.Primitives.Tests.Interop.Oleaut32.IDispatchTests.IDispatch_GetTypeInfo_Invoke_Success()\r\n```\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/3271","RelatedDescription":"Open issue \"Flaky test: `IDispatch_GetTypeInfo_Invoke_Success`\" (#3271)"},{"Id":"616989612","IsPullRequest":true,"CreatedAt":"2020-05-12T22:30:05","Actor":"dotnet-maestro[bot]","Number":"3270","RawContent":null,"Title":"[release/5.0-preview5] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:67c9bc50-cce6-417c-985c-08d7f21e18b5)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 67c9bc50-cce6-417c-985c-08d7f21e18b5\r\n- **Build**: 20200512.7\r\n- **Date Produced**: 5/12/2020 7:59 PM\r\n- **Commit**: 9491e7a47b9b41c48c4b28d0e55cc2917ae109c7\r\n- **Branch**: refs/heads/release/5.0-preview5\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20262.7\r\n  - **System.CodeDom**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20262.7\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20262.7\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20262.7\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20262.7\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20262.7\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20262.7\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20262.7\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20262.7\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20262.7\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20262.7\r\n  - **System.Security.Permissions**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20262.7\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20262.7\r\n  - **System.Drawing.Common**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20262.7\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20262.7\r\n\r\n[marker]: <> (End:67c9bc50-cce6-417c-985c-08d7f21e18b5)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3270)","Url":"https://github.com/dotnet/winforms/pull/3270","RelatedDescription":"Closed or merged PR \"[release/5.0-preview5] Update dependencies from dotnet/runtime\" (#3270)"},{"Id":"616844585","IsPullRequest":false,"CreatedAt":"2020-05-12T17:50:50","Actor":"lonitra","Number":"3269","RawContent":null,"Title":"Accessibility: ListViewGroup Collapsible/Collapsed","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\nA Collapsible ListViewGroup cannot be collapsed/expanded via keyboard only. Additionally, there is no Narrator announcement for the collapse/expand state change.\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n\r\n**Expected behavior:**\r\nUser should be able to collapse/expand a collapsible ListViewGroup via keyboard only, perhaps by pressing the SPACE bar. \r\n\r\nNarrator should also announce the expand/collapse state change. Something similar to what the PropertyGrid does when something is collapsed or expanded:\r\n\r\n![image](https://user-images.githubusercontent.com/30007367/81727214-79775100-943d-11ea-9f34-4519c848a1a1.png)\r\n\r\n![image](https://user-images.githubusercontent.com/30007367/81727101-49c84900-943d-11ea-8f85-d572f06dec44.png)\r\n\r\n**Minimal repro:**\r\n\r\n1. Create a winforms core app\r\n2. Add a ListView and ListViewGroup \r\n3. Set `Collapsible = true` for ListViewGroup\r\n4. Run app\r\n5. Try to expand/collapse ListViewGroup via keyboard only\r\n6. Start Narrator and expand/collapse through clicks\r\n\r\n**Note:**\r\nThis stems from TODO in PR #3155 ","Url":"https://github.com/dotnet/winforms/issues/3269","RelatedDescription":"Open issue \"Accessibility: ListViewGroup Collapsible/Collapsed\" (#3269)"},{"Id":"616609522","IsPullRequest":true,"CreatedAt":"2020-05-12T12:37:12","Actor":"dotnet-maestro[bot]","Number":"3267","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200511.9\r\n- **Date Produced**: 5/12/2020 2:18 AM\r\n- **Commit**: 0ba41a844ae03bd1b0cfd06e00552be8e4b8f02a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20261.9\r\n  - **System.CodeDom**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20261.9\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20261.9\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20261.9\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20261.9\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20261.9\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20261.9\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20261.9\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20261.9\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20261.9\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20261.9\r\n  - **System.Security.Permissions**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20261.9\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20261.9\r\n  - **System.Drawing.Common**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20261.9\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20261.9\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3267)","Url":"https://github.com/dotnet/winforms/pull/3267","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3267)"},{"Id":"616600433","IsPullRequest":true,"CreatedAt":"2020-05-12T12:31:56","Actor":"dotnet-maestro[bot]","Number":"3266","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200508.8\r\n- **Date Produced**: 5/8/2020 9:10 PM\r\n- **Commit**: 8078d8f3f77b7e8b7f6e289cf82cfdfa9c7a9355\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: from 5.0.0-beta.20256.5 to 5.0.0-beta.20258.8\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20256.5 to 5.0.0-beta.20258.8\r\n  - **Microsoft.DotNet.Helix.Sdk**: from 5.0.0-beta.20256.5 to 5.0.0-beta.20258.8\r\n  - **Microsoft.DotNet.RemoteExecutor**: from 5.0.0-beta.20256.5 to 5.0.0-beta.20258.8\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20256.5 to 5.0.0-beta.20258.8\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3266)","Url":"https://github.com/dotnet/winforms/pull/3266","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3266)"},{"Id":"616556718","IsPullRequest":true,"CreatedAt":"2020-05-12T11:07:33","Actor":"hughbe","Number":"3265","RawContent":null,"Title":"Add Microsoft.DotNet.CMake.Sdk to global.json","State":"closed","Body":"We know this is going to be used in https://github.com/dotnet/winforms/pull/1932\r\n\r\nBut annoyingly we need to constantly rebase global.json in that PR because we get merge conflicts every time we add update arcade.\r\n\r\nInstead, lets add this sdk to global.json in this PR which can be merged rapidly so we don't have to keep rebasing #1932\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3265)","Url":"https://github.com/dotnet/winforms/pull/3265","RelatedDescription":"Closed or merged PR \"Add Microsoft.DotNet.CMake.Sdk to global.json\" (#3265)"},{"Id":"616488020","IsPullRequest":false,"CreatedAt":"2020-05-12T09:04:13","Actor":"kirsan31","Number":"3263","RawContent":null,"Title":"Designer: Ability to set relative Font size and style","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\n\r\nMany _new_ Fonts for the controls are simple size/style change of parent font. Currently you can achieve this in Designer only by explicitly creating new fixed Font object. **But this is completely breaks Windows Font size scaling of your app.** So, for now to preserve Font size scaling you need (full manual approach not a variant here):\r\n\r\nDesign form in designer (with creating fixed fonts) and then in constructor reassign fonts to all needed controls like:\r\n```cs\r\ncontrol.Font = new Font(control.Parent.Font.FontFamily, control.Parent.Font.SizeInPoints * 1.1f, FontStyle.Bold);\r\n// or\r\ncontrol.Font = new Font(DefaultFont, FontStyle.Bold);\r\n// or\r\ncontrol.Font = SomePredefinedFont;\r\n```\r\nDrawbacks:\r\n\r\n- If you have complex form with many controls, manual assigning fonts is hard and boring.\r\n- Designer creates many Fonts instances, that will be replaced on form creation anyway.\r\n\r\n\r\n**Describe the solution you'd like and alternatives you've considered**\r\n\r\nAbility to set font size/style of the control in designer relative to Parent/Default font.\r\nSorry, but I can't suggest designer user input interface for this - many options are possible ...\r\n","Url":"https://github.com/dotnet/winforms/issues/3263","RelatedDescription":"Open issue \"Designer: Ability to set relative Font size and style\" (#3263)"},{"Id":"616279637","IsPullRequest":false,"CreatedAt":"2020-04-27T20:15:46","Actor":"ben-page","Number":"3262","RawContent":null,"Title":"Support Legacy Windows Forms Designer with SDK-Style projects","State":"open","Body":"**Visual Studio Version**:\r\n16.5.4\r\n**Summary**:\r\nI have a large enterprise application based on Windows Forms. It's made up of four assemblies.\r\n\r\n1. DataAndBusinessLogic\r\n2. WinFormsSupport - references DataAndBusinessLogic\r\n3. ApplicationDataAndBusinessLogic - references DataAndBusinessLogic\r\n4. ApplicationUI - references DataBusinessLogic,WinFormsSupport, & ApplicationDataAndBusinessLogic \r\n\r\nWe'd like to add a fifth: a .NET Core Blazor project:\r\n5. ApplicationWebUi - references ApplicationDataAndBusinessLogic & DataAndBusinessLogic\r\n\r\nWe want to maintain the WinForms UI while developing the Blazor UI. And we want them to share the same Data and BI libraries.\r\n\r\nWe made this work (or build at least). But we can't get the Windows Forms Designer to work at all.\r\n\r\n**Steps to Reproduce**:\r\nI converted the supporting libraries (1 & 3) to SDK-Style projects and had compile both .NET Framework and .NET Core assemblies.\r\n```\r\n<TargetFrameworks>net48;netcoreapp3.1</TargetFrameworks>\r\n```\r\nIn the ApplicationUI project, the Windows Forms designer works for simply forms. But if that form references anything from the other assemblies, the Designer will load.\r\n\r\nI also tried converting the other projects to SDK-Style projects, but still targeting only the .NET Framework. I was also able to get this to compile, but it's now trying to use the .NET Core Windows Forms Designer, which obviously wont work. ","Url":"https://github.com/dotnet/winforms/issues/3262","RelatedDescription":"Open issue \"Support Legacy Windows Forms Designer with SDK-Style projects\" (#3262)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-05-16T05:30:52.0195088Z","RunDurationInMilliseconds":724}