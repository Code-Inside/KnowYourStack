{"Data":{"GitHub":{"Issues":[{"Id":"3138547546","IsPullRequest":true,"CreatedAt":"2025-06-12T02:49:11","Actor":"dotnet-maestro[bot]","Number":"13587","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250611.2](https://dev.azure.com/dnceng/internal/_build/results?buildId=2727981)\n- **Date Produced**: June 11, 2025 5:20:57 PM UTC\n- **Commit Diff**: [604a661...20fdc50](https://github.com/dotnet/dotnet/compare/604a6612d130bc042dc973aba84889f529f9cb69...20fdc50b34ee89e7c54eef0a193c30ed4816597a)\n- **Commit**: [20fdc50b34ee89e7c54eef0a193c30ed4816597a](https://github.com/dotnet/dotnet/commit/20fdc50b34ee89e7c54eef0a193c30ed4816597a)\n- **Branch**: main\n\n**Updated Dependencies**\n- **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **System.Resources.Extensions**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **System.Windows.Extensions**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **System.Text.Encodings.Web**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **System.Text.Json**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **System.CodeDom**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **System.Formats.Nrbf**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **System.IO.Hashing**: [from 10.0.0-preview.6.25310.107 to 10.0.0-preview.6.25311.102][1]\n- **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25310.107 to 10.0.0-beta.25311.102][1]\n- **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25310.107 to 10.0.0-beta.25311.102][1]\n- **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25310.107 to 10.0.0-beta.25311.102][1]\n- **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25310.107 to 10.0.0-beta.25311.102][1]\n- **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25310.107 to 10.0.0-beta.25311.102][1]\n- **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25310.107 to 10.0.0-beta.25311.102][1]\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/604a6612d1...20fdc50b34\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13587)","Url":"https://github.com/dotnet/winforms/pull/13587","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13587)"},{"Id":"3138300231","IsPullRequest":true,"CreatedAt":"2025-06-12T01:53:30","Actor":"KlausLoeffelmann","Number":"13586","RawContent":null,"Title":"Update copilot instructions","State":"closed","Body":"This PR is adding a way more detailed instruction set according to our .editorConfig enforced coding-standards, and it helps with refactorings or code generation from Copilot to minimize manual work.\r\n\r\nIt also adds a set of rules for GDI/GDI+ based renderer instructions.\r\n\r\nThe latter does not get automatically involved. If you have a code file which you for example would like to review according to our standards, which are reflected by those instructions, prompt as an example something like this:\r\n\r\n\"Could you review the code file #MyNewGridViewRenderer.cs according to the GDI+ instructions in #GDIPlus-copilot-instructions.md\"\r\n\r\n**Important:** These instructions do NOT have any influence on how Copilot is reviewing PRs!\r\n\r\n**Note:** If you wish the edit or expand on those instructions, please do not just read the instructions and interpret them as you would. If you think you need to improve them, please try your changes first with concrete example to make sure, what you want to change _is_ actual an improvement.\r\n\r\nI have tested and iterated on these instructions intensively.\r\nThey are a considerable improvement compared to what we had before.\r\n\r\nPlease try them and use them and consider adding additional ones for additional topics.\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13586)","Url":"https://github.com/dotnet/winforms/pull/13586","RelatedDescription":"Closed or merged PR \"Update copilot instructions\" (#13586)"},{"Id":"3137076489","IsPullRequest":true,"CreatedAt":"2025-06-11T14:56:56","Actor":"dotnet-maestro[bot]","Number":"13585","RawContent":null,"Title":"[release/8.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:bcf5aa31-6777-442e-8e36-08db9e435944)\n## From https://github.com/dotnet/arcade\n- **Subscription**: [bcf5aa31-6777-442e-8e36-08db9e435944](https://maestro.dot.net/subscriptions?search=bcf5aa31-6777-442e-8e36-08db9e435944)\n- **Build**: [20250610.3](https://dev.azure.com/dnceng/internal/_build/results?buildId=2727308)\n- **Date Produced**: June 10, 2025 10:07:55 PM UTC\n- **Commit**: [2ce3f8c7b2614c2b19985b669ffcd934bc39ffd1](https://github.com/dotnet/arcade/commit/2ce3f8c7b2614c2b19985b669ffcd934bc39ffd1)\n- **Branch**: refs/heads/release/8.0\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.25263.4 to 8.0.0-beta.25310.3][1]\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.25263.4 to 8.0.0-beta.25310.3][1]\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.25263.4 to 8.0.0-beta.25310.3][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.25263.4 to 8.0.0-beta.25310.3][1]\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.25263.4 to 8.0.0-beta.25310.3][1]\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.25263.4 to 8.0.0-beta.25310.3][1]\n\n[1]: https://github.com/dotnet/arcade/compare/20ab70a74d...2ce3f8c7b2\n\n[DependencyUpdate]: <> (End)\n\n- **Updates to .NET SDKs:**\n  - Updates sdk.version to 8.0.117\n  - Updates tools.dotnet to 8.0.117\n\n[marker]: <> (End:bcf5aa31-6777-442e-8e36-08db9e435944)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13585)","Url":"https://github.com/dotnet/winforms/pull/13585","RelatedDescription":"Closed or merged PR \"[release/8.0] Update dependencies from dotnet/arcade\" (#13585)"},{"Id":"3135837220","IsPullRequest":false,"CreatedAt":"2025-06-11T07:45:53","Actor":"Olina-Zhang","Number":"13584","RawContent":null,"Title":"No unit test is available in cloned Winforms repository","State":"open","Body":"### .NET version\n\n10.0.100-preview.6.25310.107\n\n### Did it work in .NET Framework?\n\nNot tested/verified\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNot tested\n\n### Issue description\n\nFor the cloned latest Winforms repo, regressed after the PR: https://github.com/dotnet/winforms/pull/13521, doesn't detect unit test, so cannot run unit test in our machine:\n\n![Image](https://github.com/user-attachments/assets/c114a214-3f79-43c9-a0db-e6ad0bab97c9)\n\nLog in Output window:\n```\n========== Starting test discovery ==========\n[xUnit.net 00:00:00.01] xUnit.net VSTest Adapter v2.8.1+ce9211e970 (64-bit .NET 10.0.0-preview.6.25310.107)\nNo test is available in D:\\Winforms\\artifacts\\bin\\System.Private.Windows.Core.Tests\\Debug\\net10.0-windows7.0\\System.Private.Windows.Core.Tests.dll. Make sure that test discoverer & executors are registered and platform & framework version settings are appropriate and try again.\n========== Test discovery finished: 0 Tests found in 4.7 sec ==========\nBuilding Test Projects\nExecuting all tests in file: BindingTests.cs\n========== Starting test run ==========\n========== Test run aborted: 0 Tests (0 Passed, 0 Failed, 0 Skipped) run in < 1 ms ==========\n```\n\n### Steps to reproduce\n\nClone [Winforms repro](https://github.com/dotnet/winforms), run any unit test","Url":"https://github.com/dotnet/winforms/issues/13584","RelatedDescription":"Open issue \"No unit test is available in cloned Winforms repository\" (#13584)"},{"Id":"3135811550","IsPullRequest":false,"CreatedAt":"2025-06-11T07:36:58","Actor":"panxn","Number":"13583","RawContent":null,"Title":"NodeLabelEditEventArgs.Label is wrong from .NET9","State":"open","Body":"### .NET version\n\n.NET9 or .NET10 preview5\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nIt works in .NET8\n\n### Issue description\n\nAfter updating .NET from 8 to 10, the handler of `TreeView.AfterLabelEdit` runs into StackOverflow exception. The code were adapted from [MS sample code](https://learn.microsoft.com/en-us/dotnet/api/system.windows.forms.treeview.afterlabeledit?view=windowsdesktop-9.0), I have simplified them, see \"Steps to reproduce\".\n\n1. The first issue is, `NodeLabelEditEventArgs.Label` is not null when Enter is pressed, it doesn't respect the [MS API document](https://learn.microsoft.com/en-us/dotnet/api/system.windows.forms.nodelabelediteventargs.label?view=windowsdesktop-9.0#remarks)\n2. `e.Node.EndEdit(false)` re-triggers `TreeView.AfterLabelEdit`, endless loop. see my sample code for details.\n\n\n\n### Steps to reproduce\n\n```\nusing System;\nusing System.Windows.Forms;\n\npublic class TreeViewExample : Form\n{\n    private TreeView treeView;\n\n    public TreeViewExample()\n    {\n        treeView = new TreeView();\n        treeView.Dock = DockStyle.Fill;\n\n        TreeNode rootNode = new TreeNode(\"Root\");\n        rootNode.Nodes.Add(\"Child 1\");\n        rootNode.Nodes.Add(\"Child 2\");\n        treeView.Nodes.Add(rootNode);\n\n        treeView.LabelEdit = true;\n\n        treeView.AfterLabelEdit += TreeView_AfterLabelEdit;\n\n        this.Controls.Add(treeView);\n    }\n\n    private int recursiveDepth = 0;\n\n    // In treeview, select item then click, to begin edit\n    private void TreeView_AfterLabelEdit(object sender, NodeLabelEditEventArgs e)\n    {\n        /*\n         *  NET8:\n         *      Press ESC or Enter or Lose Focus -> e.Label is null\n         *  NET9/10:\n         *      Press ESC                        -> e.Label is null\n         *      Press Enter or Lose Focus        -> e.Label is not null\n         *  Expected:\n         *      The value of this property is null if the user presses ESC to cancel the edit or presses ENTER without modifying the label text.\n         *      https://learn.microsoft.com/en-us/dotnet/api/system.windows.forms.nodelabelediteventargs.label?view=windowsdesktop-9.0#remarks\n         */\n        Console.WriteLine(e.Label);\n\n        /*\n         *  As a bad result, it runs into endless loop when I use MS sample code in .NET9/10\n         *  https://learn.microsoft.com/en-us/dotnet/api/system.windows.forms.treeview.afterlabeledit?view=windowsdesktop-9.0\n         */\n\n        if (e.Label != null)\n        {\n            if (e.Label.Length > 0)\n            {\n                recursiveDepth++;\n                Console.WriteLine(recursiveDepth);\n\n                // it calls AfterLabelEdit recursively\n                e.Node.EndEdit(false);\n\n                recursiveDepth--;\n            }\n        }\n    }\n\n    [STAThread]\n    public static void Main()\n    {\n        Application.EnableVisualStyles();\n        Application.SetCompatibleTextRenderingDefault(false);\n        Application.Run(new TreeViewExample());\n    }\n}\n```","Url":"https://github.com/dotnet/winforms/issues/13583","RelatedDescription":"Open issue \"NodeLabelEditEventArgs.Label is wrong from .NET9\" (#13583)"},{"Id":"3135749045","IsPullRequest":true,"CreatedAt":"2025-06-11T07:13:12","Actor":"KlausLoeffelmann","Number":"13582","RawContent":null,"Title":"Refactor DarkMode management for Controls as per API Review outcome","State":"open","Body":"For a Control to indicate that it wants to participate in DarkMode theming, it needs to indicate that by setting the style flag `ApplyThemingImplicitly`. \r\n\r\nThe original architectural plan was to introduce a dedicate protected virtual method `InitializeControl` that would be called by the constructor of Control, which would then set the `ApplyThemingImplicitly` flag and give also the control the chance to learn about the initial DeviceAPI, with that replacing the original internal method. \r\n\r\nThis approach was not approved by the API Review board (see https://github.com/dotnet/winforms/issues/13550#issuecomment-2960189335).\r\n\r\nConsequently, this PR builds the DarkMode handling back to the original approach and also refactors the flaw of the approach how controls are internally provided the initial DPI setting. \r\n(Also pointed outby the API Review.)\r\n\r\nBecause of the general architecture of the Controls inheritance hierarchy, Controls need to make sure to opt into (or opt out) DarkMode handling _before_ their own constructor runs, which means they have to override `CreateParams` and set the respective flags before calling the base implementation.\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13582)","Url":"https://github.com/dotnet/winforms/pull/13582","RelatedDescription":"Open PR \"Refactor DarkMode management for Controls as per API Review outcome\" (#13582)"},{"Id":"3135261861","IsPullRequest":true,"CreatedAt":"2025-06-11T06:15:55","Actor":"dotnet-maestro[bot]","Number":"13581","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250610.7](https://dev.azure.com/dnceng/internal/_build/results?buildId=2727197)\n- **Date Produced**: June 10, 2025 10:04:34 PM UTC\n- **Commit Diff**: [9a90ec1...604a661](https://github.com/dotnet/dotnet/compare/9a90ec1b43070dc3ee0f0b869a78a175c1d33b68...604a6612d130bc042dc973aba84889f529f9cb69)\n- **Commit**: [604a6612d130bc042dc973aba84889f529f9cb69](https://github.com/dotnet/dotnet/commit/604a6612d130bc042dc973aba84889f529f9cb69)\n- **Branch**: main\n\n**Updated Dependencies**\n- **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **System.Resources.Extensions**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **System.Windows.Extensions**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **System.Text.Encodings.Web**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **System.Text.Json**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **System.CodeDom**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **System.Formats.Nrbf**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **System.IO.Hashing**: [from 10.0.0-preview.6.25306.103 to 10.0.0-preview.6.25310.107][1]\n- **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25306.103 to 10.0.0-beta.25310.107][1]\n- **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25306.103 to 10.0.0-beta.25310.107][1]\n- **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25306.103 to 10.0.0-beta.25310.107][1]\n- **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25306.103 to 10.0.0-beta.25310.107][1]\n- **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25306.103 to 10.0.0-beta.25310.107][1]\n- **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25306.103 to 10.0.0-beta.25310.107][1]\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/9a90ec1b43...604a6612d1\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13581)","Url":"https://github.com/dotnet/winforms/pull/13581","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13581)"},{"Id":"3134739124","IsPullRequest":true,"CreatedAt":"2025-06-11T01:52:53","Actor":"vseanreesermsft","Number":"13579","RawContent":null,"Title":"Merging internal commits for release/8.0","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13579)","Url":"https://github.com/dotnet/winforms/pull/13579","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/8.0\" (#13579)"},{"Id":"3134756375","IsPullRequest":true,"CreatedAt":"2025-06-11T01:52:46","Actor":"vseanreesermsft","Number":"13580","RawContent":null,"Title":"Merging internal commits for release/9.0","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13580)","Url":"https://github.com/dotnet/winforms/pull/13580","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/9.0\" (#13580)"},{"Id":"3123503418","IsPullRequest":true,"CreatedAt":"2025-06-11T01:04:11","Actor":"LeafShi1","Number":"13563","RawContent":null,"Title":"[10.0-Preview4] Fix #13557 Removing flag OperationInReleasingDataSource from DataGridView.cs","State":"closed","Body":"Backport of #13362 to release/10.0-Preview4\r\nFixes https://github.com/dotnet/winforms/issues/13557 \r\n\r\n### Customer Impact\r\nIn DataGridView.CellValueChanged event handler, DataSource=null throws exception\r\n\r\n### Fix\r\nSet `CurrentCell = null;` in DataSource set method, and add judgment `IsHandleCreated` before invoking `EndEdit` to avoid the exception\r\n\r\n### Testing\r\nManual with the customer repro case.\r\n\r\n## Risk\r\nLow - This change has been included in .net8, .net9, and works fine.\r\n","Url":"https://github.com/dotnet/winforms/pull/13563","RelatedDescription":"Closed or merged PR \"[10.0-Preview4] Fix #13557 Removing flag OperationInReleasingDataSource from DataGridView.cs\" (#13563)"},{"Id":"3132026618","IsPullRequest":true,"CreatedAt":"2025-06-10T09:57:33","Actor":"Epica3055","Number":"13573","RawContent":null,"Title":"fix #13086 The DemoConsole application in the Winforms repo stops running after convert added MenuItems to other type items then clicking the last 'Type Here'","State":"closed","Body":"Fix #13086 , also Fix #13085, because they share the same root cause.\r\n\r\n## Root cause\r\nIn the process, we generated a new Component with an already existing name.\r\n![Issue_13086_02](https://github.com/user-attachments/assets/ebab61b3-c9d6-4567-8dae-34826dcfa5cc)\r\n\r\n\r\n## Proposed changes\r\n\r\n- \r\n- modify NameCreationServiceImp.CreateName()\r\n- \r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nhttps://github.com/user-attachments/assets/350c03de-6904-4a56-8c61-1b4a7bdddcb2\r\n\r\n### After\r\n\r\n![Issue_13086_03](https://github.com/user-attachments/assets/bd2e1d4e-f749-472e-9743-6eecabcaf007)\r\n\r\n![Issue_13086_04](https://github.com/user-attachments/assets/e0de400f-d501-4971-8b00-6856ad4a3810)\r\n\r\n\r\n## Test methodology \r\n\r\n- \r\n- manually\r\n- \r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13573)","Url":"https://github.com/dotnet/winforms/pull/13573","RelatedDescription":"Closed or merged PR \"fix #13086 The DemoConsole application in the Winforms repo stops running after convert added MenuItems to other type items then clicking the last 'Type Here'\" (#13573)"},{"Id":"3132599466","IsPullRequest":true,"CreatedAt":"2025-06-10T08:13:57","Actor":"LeafShi1","Number":"13578","RawContent":null,"Title":"Add do...while loop in the SetValue method of SerializationResourceManager.cs until resourceName is unique","State":"open","Body":"\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #12595\r\n\r\n## Root Cause\r\n\r\nThis issue is caused by replacing `for (;;)` with `if (appendCount || _nameTable.TryGetValue(nameBase, out count))` in PR #8332, which leads to resource name conflicts.\r\n\r\n## Proposed changes\r\n\r\n- Add do...while loop in the SetValue method until resourceName is unique\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- When serializing collection values, the resource numeric suffix can be incremented without duplication\r\n\r\n## Regression? \r\n\r\n- Yes \r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\nPaste after the second time, the resource will end up using the same number 1 over and over\r\n![Image](https://github.com/user-attachments/assets/6540e3bf-481e-4853-8285-2d5ed0f22485)\r\n\r\n### After\r\nResource suffixes are increasing\r\n\r\n![AfterChange](https://github.com/user-attachments/assets/e4750933-0693-4cf4-a155-410448dbac8b)\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manually\r\n\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .net 10.0.0-preview.6.25304.106\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13578)","Url":"https://github.com/dotnet/winforms/pull/13578","RelatedDescription":"Open PR \"Add do...while loop in the SetValue method of SerializationResourceManager.cs until resourceName is unique\" (#13578)"},{"Id":"3132255181","IsPullRequest":true,"CreatedAt":"2025-06-10T06:04:41","Actor":"KlausLoeffelmann","Number":"13577","RawContent":null,"Title":"DarkMode (f) fix DataGridView issues","State":"open","Body":"Fixes dark mode issues around the DataGridView.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13577)","Url":"https://github.com/dotnet/winforms/pull/13577","RelatedDescription":"Open PR \"DarkMode (f) fix DataGridView issues\" (#13577)"},{"Id":"3132249642","IsPullRequest":true,"CreatedAt":"2025-06-10T06:01:36","Actor":"KlausLoeffelmann","Number":"13576","RawContent":null,"Title":"Dark mode (e) fix combo box renderer","State":"open","Body":"Fixes dark mode issues around the ComboBox.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13576)","Url":"https://github.com/dotnet/winforms/pull/13576","RelatedDescription":"Open PR \"Dark mode (e) fix combo box renderer\" (#13576)"},{"Id":"3132244665","IsPullRequest":true,"CreatedAt":"2025-06-10T05:58:52","Actor":"KlausLoeffelmann","Number":"13575","RawContent":null,"Title":"DarkMode (d) Fix ListView ColumnHeaders theme change","State":"open","Body":"This PR fixes a bug, where the ListView does not apply dark mode to the ColumnHeaders, if the View changes _after_ the ListView Handel has been created.\r\n\r\nThis fixes #13472.\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13575)","Url":"https://github.com/dotnet/winforms/pull/13575","RelatedDescription":"Open PR \"DarkMode (d) Fix ListView ColumnHeaders theme change\" (#13575)"},{"Id":"3132229470","IsPullRequest":true,"CreatedAt":"2025-06-10T05:49:54","Actor":"KlausLoeffelmann","Number":"13574","RawContent":null,"Title":"DarkMode (c) fix TabControl issues","State":"open","Body":"Fixes #11953.\r\n\r\n![DarkModeTabAndListView](https://github.com/user-attachments/assets/3515355c-e13f-4ac7-b6a4-6f132c5dbc52)\r\n\r\nNote, that this works only for horizontal Tabs and for the Standard Button Style, not for vertically aligned - we should mention this later in the docs.\r\n\r\nFor variations, folks can still owner draw the Tabs (albeit with a white frame) to customize the theme.\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13574)","Url":"https://github.com/dotnet/winforms/pull/13574","RelatedDescription":"Open PR \"DarkMode (c) fix TabControl issues\" (#13574)"},{"Id":"3129171040","IsPullRequest":false,"CreatedAt":"2025-06-10T03:31:44","Actor":"JyotikaGargg","Number":"13569","RawContent":null,"Title":"[Tracking] DataGridViewLinkColumn screen reader always read the column header and row number and never read the actual content of the cell.","State":"closed","Body":"Regardless of the content of the cell in a DataGridViewLinkColumn, screen reader always read the column header and row number and never read the actual content of the cell.\nWe are using .NET Framework 4.8.1. This looks to me a bug of DataGridViewLinkColumn implementation.\nWe created a simple application to reproduce the issue, you can see the accessible name of the cells in the screenshot below. (attached is the code for this simple application)\n![Image](https://github.com/user-attachments/assets/5795578e-2b57-4ece-96d7-a80d650e7f22)\n\n![Image](https://github.com/user-attachments/assets/b5036575-f3d6-4d1e-81b4-8b8c2db6491a)\n\nRelated bug created : https://msdata.visualstudio.com/Tina/_workitems/edit/4187788","Url":"https://github.com/dotnet/winforms/issues/13569","RelatedDescription":"Closed issue \"[Tracking] DataGridViewLinkColumn screen reader always read the column header and row number and never read the actual content of the cell.\" (#13569)"},{"Id":"3131927163","IsPullRequest":true,"CreatedAt":"2025-06-10T02:47:35","Actor":"dotnet-maestro[bot]","Number":"13572","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250606.3](https://dev.azure.com/dnceng/internal/_build/results?buildId=2724748)\n- **Date Produced**: June 9, 2025 1:38:10 PM UTC\n- **Commit Diff**: [7e27ec4...9a90ec1](https://github.com/dotnet/dotnet/compare/7e27ec4c314eb774eae2c54ce4682c98973c7c60...9a90ec1b43070dc3ee0f0b869a78a175c1d33b68)\n- **Commit**: [9a90ec1b43070dc3ee0f0b869a78a175c1d33b68](https://github.com/dotnet/dotnet/commit/9a90ec1b43070dc3ee0f0b869a78a175c1d33b68)\n- **Branch**: main\n\n**Updated Dependencies**\n- **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **System.Resources.Extensions**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **System.Windows.Extensions**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **System.Text.Encodings.Web**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **System.Text.Json**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **System.CodeDom**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **System.Formats.Nrbf**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **System.IO.Hashing**: [from 10.0.0-preview.6.25304.106 to 10.0.0-preview.6.25306.103][1]\n- **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25304.106 to 10.0.0-beta.25306.103][1]\n- **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25304.106 to 10.0.0-beta.25306.103][1]\n- **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25304.106 to 10.0.0-beta.25306.103][1]\n- **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25304.106 to 10.0.0-beta.25306.103][1]\n- **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25304.106 to 10.0.0-beta.25306.103][1]\n- **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25304.106 to 10.0.0-beta.25306.103][1]\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/7e27ec4c31...9a90ec1b43\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13572)","Url":"https://github.com/dotnet/winforms/pull/13572","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13572)"},{"Id":"3131723710","IsPullRequest":false,"CreatedAt":"2025-06-09T23:23:36","Actor":"trypsynth","Number":"13571","RawContent":null,"Title":"Screen readers announce row numbers three times instead of just one in some cases when navigating through a DataGridView","State":"open","Body":"### .NET version\n\ndotnet   Version:      9.0.2                                                                                                   \n\n### Did it work in .NET Framework?\n\nNot tested/verified\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\nI have this super simple test app with a DataGridView. When arrowing around the DataGridView using my screen reader, NVDA, I hear something like this:\n> Row 2, Not sorted.  data item  (null)  Row 2  row 2\nUpon first press of the down arrow in this app.\nThis is not ideal for a multitude of reasons, I'd also quite like to get rid of the \"Not sorted\" announcement when my DataGridView isn't editable/sortable, but the largest ouch, and the one this issue is about, is the fact that it tells me I'm in row 2 three times. This should only be announced once, IMO right at the beginning is fine like it currently is, just remove the extra two at the end.\n\n```\nnamespace GridTest;\n\npublic class Form1 : Form {\n\tpublic Form1() {\n\t\tText = \"Test\";\n\t\tDataGridView gridView = new DataGridView {\n\t\t\tAllowUserToAddRows = false,\n\t\t\tAllowUserToDeleteRows = false,\n\t\t\tAllowUserToOrderColumns = false,\n\t\t\tAllowUserToResizeColumns = false,\n\t\t\tAllowUserToResizeRows = false,\n\t\t\tShowCellToolTips = false,\n\t\t\tColumnCount = 18,\n\t\t\tRowCount = 11,\n\t\t\tDock = DockStyle.Fill,\n\t\t\tReadOnly = true,\n\t\t\tStandardTab = true\n\t\t};\n\t\tControls.Add(gridView);\n\t}\n}\nnamespace GridTest;\n\nstatic class Program\n{\n    /// <summary>\n    ///  The main entry point for the application.\n    /// </summary>\n    [STAThread]\n    static void Main()\n    {\n        // To customize application configuration such as set high DPI settings or default font,\n        // see https://aka.ms/applicationconfiguration.\n        ApplicationConfiguration.Initialize();\n        Application.Run(new Form1());\n    }    \n}\n```\n\n\n### Steps to reproduce\n\nRun the provided test app with the NVDA screen reader active. Once it launches, press down arrow, and notice what NVDA reports.","Url":"https://github.com/dotnet/winforms/issues/13571","RelatedDescription":"Open issue \"Screen readers announce row numbers three times instead of just one in some cases when navigating through a DataGridView\" (#13571)"},{"Id":"3129563877","IsPullRequest":true,"CreatedAt":"2025-06-09T08:21:13","Actor":"Epica3055","Number":"13570","RawContent":null,"Title":"Related to #10466   Support Tab key in the demo console","State":"open","Body":"\r\nRelated to #10466   Support Tab key in the demo console\r\n\r\n\r\n## Proposed changes\r\n\r\n- \r\n- Add tab\r\n- \r\n\r\n<!-- \r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n-\r\n -->\r\n\r\n### Before\r\n\r\nNot supported.\r\n\r\n### After\r\n![PR_13570](https://github.com/user-attachments/assets/edb836c2-abd5-43ca-8475-c005bfc6ca93)\r\n\r\n<!-- \r\n\r\n\r\n## Test methodology\r\n\r\n- \r\n- \r\n- \r\nTODO\r\n -->\r\n\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13570)","Url":"https://github.com/dotnet/winforms/pull/13570","RelatedDescription":"Open PR \"Related to #10466   Support Tab key in the demo console\" (#13570)"},{"Id":"3128917481","IsPullRequest":true,"CreatedAt":"2025-06-09T01:58:32","Actor":"dotnet-bot","Number":"13568","RawContent":null,"Title":"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 2728443","State":"open","Body":"This is the pull request automatically created by the OneLocBuild task in the build process to check-in localized files generated based upon translation source files (.lcl files) handed-back from the downstream localization pipeline. If there are issues in translations, visit https://aka.ms/icxLocBug and log bugs for fixes. The OneLocBuild wiki is https://aka.ms/onelocbuild and the localization process in general is documented at https://aka.ms/AllAboutLoc.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13568)","Url":"https://github.com/dotnet/winforms/pull/13568","RelatedDescription":"Open PR \"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 2728443\" (#13568)"},{"Id":"3126642359","IsPullRequest":true,"CreatedAt":"2025-06-07T07:29:45","Actor":"Youssef1313","Number":"13567","RawContent":null,"Title":"Cleanup MissingPropertySerializationConfigurationAnalyzer","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n## Proposed changes\r\n\r\n- \r\n- \r\n- \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13567)","Url":"https://github.com/dotnet/winforms/pull/13567","RelatedDescription":"Open PR \"Cleanup MissingPropertySerializationConfigurationAnalyzer\" (#13567)"},{"Id":"3126349242","IsPullRequest":true,"CreatedAt":"2025-06-07T03:07:37","Actor":"Youssef1313","Number":"13566","RawContent":null,"Title":"Cleanup AvoidPassingTaskWithoutCancellationTokenAnalyzer","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n## Proposed changes\r\n\r\n- Implement analyzer using `IOperation` instead of syntax.\r\n- Moving the implementation to language agnostic layer now that we don't need language syntax.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13566)","Url":"https://github.com/dotnet/winforms/pull/13566","RelatedDescription":"Open PR \"Cleanup AvoidPassingTaskWithoutCancellationTokenAnalyzer\" (#13566)"},{"Id":"3126288514","IsPullRequest":false,"CreatedAt":"2025-06-07T02:09:38","Actor":"Youssef1313","Number":"13565","RawContent":null,"Title":"Verify cancellation behavior of `EnumValidationGenerator`","State":"open","Body":"https://github.com/dotnet/winforms/blob/f2060dfa61556829461a5175b05120ae34a584ed/src/System.Windows.Forms.PrivateSourceGenerators/src/System/Windows/Forms/SourceGenerators/EnumValidationGenerator.cs#L211-L214\n\nThis feels suspicious. I think it may happen that the compiler caches this step, causing incomplete result to be cached and re-used. This should use `ThrowIfCancellationRequested`.\n\n(Putting aside that the generator is likely to have severe perf issues)","Url":"https://github.com/dotnet/winforms/issues/13565","RelatedDescription":"Open issue \"Verify cancellation behavior of `EnumValidationGenerator`\" (#13565)"},{"Id":"3126152826","IsPullRequest":true,"CreatedAt":"2025-06-07T00:15:39","Actor":"KlausLoeffelmann","Number":"13564","RawContent":null,"Title":"Refactor/Improve InvokeAsync to address potential disposing issues ","State":"open","Body":"Addresses #12696, #12697 \r\n(Mentioning the latter just for same topic. I do not think, this is an issue really.)\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13564)","Url":"https://github.com/dotnet/winforms/pull/13564","RelatedDescription":"Open PR \"Refactor/Improve InvokeAsync to address potential disposing issues \" (#13564)"},{"Id":"3121972163","IsPullRequest":true,"CreatedAt":"2025-06-06T19:23:29","Actor":"KlausLoeffelmann","Number":"13561","RawContent":null,"Title":"Introduce FormScreenCaptureMode property on Form","State":"closed","Body":"Fixes #13258.\r\nFixes #13450.\r\n\r\nLooks like this, when _recorded_:\r\n\r\n![ScreenCapture](https://github.com/user-attachments/assets/f97c768f-93cd-407b-a90c-b26d481c5559)\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13561)","Url":"https://github.com/dotnet/winforms/pull/13561","RelatedDescription":"Closed or merged PR \"Introduce FormScreenCaptureMode property on Form\" (#13561)"},{"Id":"3123402570","IsPullRequest":true,"CreatedAt":"2025-06-06T02:49:51","Actor":"dotnet-maestro[bot]","Number":"13562","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/dotnet/tree/main/docs/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250604.6](https://dev.azure.com/dnceng/internal/_build/results?buildId=2723441)\n- **Date Produced**: June 5, 2025 6:19:29 AM UTC\n- **Commit Diff**: [62e9d32...7e27ec4](https://github.com/dotnet/dotnet/compare/62e9d324a3c6678a0415b12af92354b6b03677c8...7e27ec4c314eb774eae2c54ce4682c98973c7c60)\n- **Commit**: [7e27ec4c314eb774eae2c54ce4682c98973c7c60](https://github.com/dotnet/dotnet/commit/7e27ec4c314eb774eae2c54ce4682c98973c7c60)\n- **Branch**: main\n\n**Updated Dependencies**\n- **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **System.Resources.Extensions**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **System.Windows.Extensions**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **System.Text.Encodings.Web**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **System.Text.Json**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **System.CodeDom**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **System.Formats.Nrbf**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **System.IO.Hashing**: [from 10.0.0-preview.6.25304.104 to 10.0.0-preview.6.25304.106][1]\n- **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25304.104 to 10.0.0-beta.25304.106][1]\n- **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25304.104 to 10.0.0-beta.25304.106][1]\n- **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25304.104 to 10.0.0-beta.25304.106][1]\n- **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25304.104 to 10.0.0-beta.25304.106][1]\n- **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25304.104 to 10.0.0-beta.25304.106][1]\n- **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25304.104 to 10.0.0-beta.25304.106][1]\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/62e9d324a3...7e27ec4c31\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13562)","Url":"https://github.com/dotnet/winforms/pull/13562","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13562)"},{"Id":"3121918410","IsPullRequest":true,"CreatedAt":"2025-06-06T01:56:51","Actor":"KlausLoeffelmann","Number":"13560","RawContent":null,"Title":"Address additional TitleBar corner case issues","State":"closed","Body":"We introduced a few new APIs around TitleBar control (independent of dark mode).\r\n\r\n* They have been put behind the DarkMode experimental flag, although they weren't really dark-mode related, but \"just\" controlling some TitleBar properties equally in Light- and in DarkMode.\r\n* When a Form needs to recreate a handle, they \"lost\" their settings, since we only applied the TitleBar settings initially.\r\n\r\nFixes #12991.\r\nFixes #12992.\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13560)","Url":"https://github.com/dotnet/winforms/pull/13560","RelatedDescription":"Closed or merged PR \"Address additional TitleBar corner case issues\" (#13560)"},{"Id":"3120542149","IsPullRequest":true,"CreatedAt":"2025-06-05T09:43:50","Actor":"LeafShi1","Number":"13558","RawContent":null,"Title":"Fix 13227: Update SetName of DesignerExtenders.NameExtenderProvider to virtual method","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #13227\r\n\r\n\r\n## Proposed changes\r\n\r\n- Change `SetName` of `DesignerExtenders.NameExtenderProvider` from `static` to `virtual` method\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Enable Name property for all controls in DemoConsole\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nIn [DemoConsole](https://github.com/dotnet/winforms/tree/main/src/System.Windows.Forms/tests/IntegrationTests/DesignSurface/DemoConsole) test app of WinForms repo, `Name` property for all controls is disabled\r\n.NET 10:\r\n\r\n![Image](https://github.com/user-attachments/assets/9299cfc1-6390-4609-be1f-0b53066a18de)\r\n\r\n### After\r\n\r\n `Name` property for all controls is enabled\r\n\r\n![image](https://github.com/user-attachments/assets/8ca9e888-18bf-4256-b6c6-4689580cd187)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manually\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .net 10.0.0-preview.6.25303.102\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13558)","Url":"https://github.com/dotnet/winforms/pull/13558","RelatedDescription":"Open PR \"Fix 13227: Update SetName of DesignerExtenders.NameExtenderProvider to virtual method\" (#13558)"},{"Id":"3121311164","IsPullRequest":false,"CreatedAt":"2025-06-05T09:20:36","Actor":"smToDo","Number":"13559","RawContent":null,"Title":"Incorrect rendering of hot prefixes for some fonts after the KB5058499 update for Windows 11","State":"open","Body":"### Description\n\nHello.\nWe have an application with custom string rendering using the <a href='https://learn.microsoft.com/en-us/dotnet/api/system.drawing.graphics.drawstring?view=windowsdesktop-9.0&viewFallbackFrom=net-8.0'>DrawString</a> method and the Segoe UI font. \nAfter installing the <a href ='https://support.microsoft.com/en-us/topic/may-28-2025-kb5058499-os-build-26100-4202-preview-d4c2f1ee-8138-4038-b705-546945076f92'>KB5058499</a> update for Windows 11, our application began to render the string with hot prefixes incorrectly.\nThe <a href='https://learn.microsoft.com/en-us/dotnet/api/system.windows.forms.textrenderer.drawtext?view=windowsdesktop-8.0'>DrawText</a> method works correctly.\nThis issue does not exist for all fonts.\nOriginal string: \"ファイル(&F)\"\n![Image](https://github.com/user-attachments/assets/9629d62e-6fa1-4360-9030-29a0f163d678)\n\n\n### Reproduction Steps\n\n1. Create a WinForms application for .Net Framework or .Net\n2. Override the OnPaint method of the main form:\n```\n        protected override void OnPaint(PaintEventArgs e)\n        {\n            base.OnPaint(e);\n\n            var text = \"ファイル(&F)\";\n            var stringFormat = new StringFormat\n            {\n                HotkeyPrefix = System.Drawing.Text.HotkeyPrefix.Show\n            };\n            using (var font = new Font(\"Segoe UI\", 10))\n            {\n                e.Graphics.DrawString($\"DrawString {text}\", font, SystemBrushes.ControlText, new Point(Bounds.Width / 2, Bounds.Height / 2), stringFormat);\n                TextRenderer.DrawText(e.Graphics, $\"DrawText {text}\", font, new Point(Bounds.Width / 2, Bounds.Height / 2 + 30), SystemColors.ControlText);\n            }\n        }\n```\n3. Run application.\n\n### Expected behavior\n\nThe DrawString method ​​renders a hot prefix as the DrawText method.\n\n### Actual behavior\n\nThe DrawString method does not display hot prefix correctly.\n\n### Regression?\n\nYes, the DrawStrings works correctly with Windows 10 and Windows 11 before KB5058499.\n\n### Known Workarounds\n\nNot all fonts are drawn with an issue, you can select a new application font.\n\n### Configuration\n\n.Net Framework 4.8\n.Net 8\nWindows 11 Pro 24H2 26100.4202\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/winforms/issues/13559","RelatedDescription":"Open issue \"Incorrect rendering of hot prefixes for some fonts after the KB5058499 update for Windows 11\" (#13559)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-06-12T03:30:30.932331Z","RunDurationInMilliseconds":476}