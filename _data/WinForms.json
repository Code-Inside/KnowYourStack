{"Data":{"GitHub":{"Issues":[{"Id":"2677683276","IsPullRequest":true,"CreatedAt":"2024-11-21T01:32:55","Actor":"Zheng-Li01","Number":"12522","RawContent":null,"Title":"Add code coverage for DataGridViewLinkColumn","State":"open","Body":"related https://github.com/dotnet/winforms/issues/10453\r\n\r\n# Proposed changes\r\nAdd unit tests for DataGridViewLinkColumn.cs to test its properties & methods & events\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12522)","Url":"https://github.com/dotnet/winforms/pull/12522","RelatedDescription":"Open PR \"Add code coverage for DataGridViewLinkColumn\" (#12522)"},{"Id":"2677552945","IsPullRequest":true,"CreatedAt":"2024-11-21T00:10:32","Actor":"JeremyKuhne","Number":"12521","RawContent":null,"Title":"Mark System.Private.Windows.Core as WPF as well","State":"closed","Body":"WPF now depends on it as well, need to mark it so it is included in WPF references.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12521)","Url":"https://github.com/dotnet/winforms/pull/12521","RelatedDescription":"Closed or merged PR \"Mark System.Private.Windows.Core as WPF as well\" (#12521)"},{"Id":"2677468172","IsPullRequest":true,"CreatedAt":"2024-11-20T23:06:50","Actor":"Tanya-Solyanik","Number":"12520","RawContent":null,"Title":"fixed a couple of typos","State":"open","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12520)","Url":"https://github.com/dotnet/winforms/pull/12520","RelatedDescription":"Open PR \"fixed a couple of typos\" (#12520)"},{"Id":"2677203869","IsPullRequest":true,"CreatedAt":"2024-11-20T21:15:42","Actor":"github-actions[bot]","Number":"12519","RawContent":null,"Title":"[release/9.0] Call Correct HtmlHelp Overload","State":"open","Body":"Backport of #12511 to release/9.0\n\n/cc @lonitra\n\n## Customer Impact\n\n## Testing\n\n## Risk\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12519)","Url":"https://github.com/dotnet/winforms/pull/12519","RelatedDescription":"Open PR \"[release/9.0] Call Correct HtmlHelp Overload\" (#12519)"},{"Id":"2668822080","IsPullRequest":false,"CreatedAt":"2024-11-20T21:14:58","Actor":"UniqeId6542","Number":"12505","RawContent":null,"Title":"Help.ShowHelp does not launch if TopicId provided - .NET 9","State":"closed","Body":"### .NET version\n\n.NET 9\n\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes\n\n### Issue description\n\n```\nHelp.ShowHelp(null, \"C:\\\\MyHelpFile.chm\", HelpNavigator.TopicId, \"15\");\nHelp.ShowHelp(null, \"C:\\\\MyHelpFile.chm\");\n```\n\nIn .NET 8 (and earlier), the first line will launch Help and show the provided topic ID.  (Assuming that the help file exists and the topic exists)\nThen, the second line will do nothing.  (expected)\n\nIn .NET 9, the first line will do nothing. (bug)\nThen, the second line will launch Help to the default page. (expected given that the help is not currently open)\n\nI expect the ShowHelp to properly launch help to the provided TopicId.\nI checked the .NET 9 breaking changes, and help launch was not listed.\n\n\n### Steps to reproduce\n\nWrite a Help.ShowHelp line to open a help file to a specific TopicId.\ne.g.:\n```\nHelp.ShowHelp(null, \"C:\\\\MyHelpFile.chm\", HelpNavigator.TopicId, \"15\");\n```\n(where the help file and TopicId are valid)\nWhen running in .NET 9, this line of code will not launch the help.  (bug)  (though, it works in .NET 8 and earlier)\n\nI expect the ShowHelp to properly launch help to the provided TopicId.","Url":"https://github.com/dotnet/winforms/issues/12505","RelatedDescription":"Closed issue \"Help.ShowHelp does not launch if TopicId provided - .NET 9\" (#12505)"},{"Id":"2673794098","IsPullRequest":true,"CreatedAt":"2024-11-20T21:14:57","Actor":"lonitra","Number":"12511","RawContent":null,"Title":"Call Correct HtmlHelp Overload","State":"closed","Body":"Fixes https://github.com/dotnet/winforms/issues/12505\r\n\r\nIn .NET 8 when calling `Help.ShowHelp` with a .chm file and an integer ID for the Topic ID, we would call [HtmlHelp overload](https://github.com/dotnet/winforms/blob/release/8.0/src/System.Windows.Forms.Primitives/src/Interop/Hhctrl/Interop.HtmlHelpW.cs#L13) with [cast to `IntPtr`](https://github.com/dotnet/winforms/blob/release/8.0/src/System.Windows.Forms/src/System/Windows/Forms/Help.cs#L170), taking the integer ID as is. In .NET 9 after updating to use cswin32, we updated to call the [wrong overload](https://github.com/dotnet/winforms/blob/release/9.0/src/System.Windows.Forms.Primitives/src/Windows/Win32/PInvoke.HtmlHelp.cs#L46) where instead of taking the integer ID as is, we would take its address, causing the help page to fail to show because topic ID doesn't exist. Tested changes manually to confirm fix. There is not a good way to unit test this it seems as `Help.ShowHelp` returns void.\r\n\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12511)","Url":"https://github.com/dotnet/winforms/pull/12511","RelatedDescription":"Closed or merged PR \"Call Correct HtmlHelp Overload\" (#12511)"},{"Id":"2675786001","IsPullRequest":true,"CreatedAt":"2024-11-20T13:37:30","Actor":"dotnet-maestro[bot]","Number":"12518","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20241119.15\r\n- **Date Produced**: November 20, 2024 8:08:14 AM UTC\r\n- **Commit**: d0b4ca6ee4b6f6c99e7aed2fe0e042e5e4974ad9\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.IO.Hashing**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.Text.Encodings.Web**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.Text.Json**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24565.3 to 10.0.0-alpha.1.24569.15][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/55eee32465...d0b4ca6ee4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12518)","Url":"https://github.com/dotnet/winforms/pull/12518","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#12518)"},{"Id":"2675785298","IsPullRequest":true,"CreatedAt":"2024-11-20T13:37:01","Actor":"dotnet-maestro[bot]","Number":"12517","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20241120.1\r\n- **Date Produced**: November 20, 2024 8:37:32 AM UTC\r\n- **Commit**: efdc52bb77eeadae5420eb48e66722c4fdcaa3be\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24564.1 to 10.0.0-beta.24570.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.24564.1 to 10.0.0-beta.24570.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.24564.1 to 10.0.0-beta.24570.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24564.1 to 10.0.0-beta.24570.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.24564.1 to 10.0.0-beta.24570.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.24564.1 to 10.0.0-beta.24570.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/c1852b9ac3...efdc52bb77\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12517)","Url":"https://github.com/dotnet/winforms/pull/12517","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#12517)"},{"Id":"2675248990","IsPullRequest":true,"CreatedAt":"2024-11-20T09:52:07","Actor":"Nora-Zhou01","Number":"12516","RawContent":null,"Title":"Add unit tests for ListControlStringCollectionEditor","State":"open","Body":"Related https://github.com/dotnet/winforms/issues/10773\r\n\r\n## Proposed changes\r\n\r\n- Add unit test ListControlStringCollectionEditorTests.cs for public properties and method of the ListControlStringCollectionEditor\r\n- Enable nullability in ListControlStringCollectionEditorTests.cs\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12516)","Url":"https://github.com/dotnet/winforms/pull/12516","RelatedDescription":"Open PR \"Add unit tests for ListControlStringCollectionEditor\" (#12516)"},{"Id":"2674967328","IsPullRequest":false,"CreatedAt":"2024-11-20T08:43:44","Actor":"Liv-Goh","Number":"12515","RawContent":null,"Title":"[Accessiblity] Narrator did not announce anchor property check state when press space to check","State":"open","Body":"### .NET version\n\n.NET SDK 10.0.100-alpha.1.24562.4\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo, this is not a regression issue. This issue repro in previous versions of .NET too\n\n\n\n### Issue description\n\n## Current Behavior\nIn runtime property grid, Narrator only announces \"space\" when checked using spacebar\n\nhttps://github.com/user-attachments/assets/4d6ea558-e4b0-4118-a835-358661ee4813\n\n## Expected Behavior\nIn VS property grid, Narrator announces \"space, Top/Right/Left/Bottom checkbox checked\"\n\nhttps://github.com/user-attachments/assets/fbfabe8c-710f-497f-8cd0-e5923220fdd9\n\n\n### Steps to reproduce\n\n1. Create a .NET Core Winforms project.\n2. Add a button and PropertyGrid controls in form designer.\n3. Set the button as propertyGrid SelectedObject\n4. Build and run project.\n5. Open Narrator tool and select Anchor property in propertyGrid control.\n6. Use keyboard spacebar to change the status of the anchor direction to checked and unchecked\n\n## More Info\nThis issue repro in NVDA tool.\n\n","Url":"https://github.com/dotnet/winforms/issues/12515","RelatedDescription":"Open issue \"[Accessiblity] Narrator did not announce anchor property check state when press space to check\" (#12515)"},{"Id":"2674945489","IsPullRequest":false,"CreatedAt":"2024-11-20T08:35:29","Actor":"DaveTallett26","Number":"12514","RawContent":null,"Title":"Trying to use designsurface.cs but have error on line 84 - public ICollection LoadErrors => _loadErrors ?? Array.Empty<object>();","State":"open","Body":"I am trying to use the code designsurface.cs.\n\nI am using the c# compiler supplied with the current version of Windows - \n\nMicrosoft (R) Visual C# 2008 Compiler version 3.5.30729.9151\nfor Microsoft (R) .NET Framework version 3.5\n\nline 84 appears to not compile\n \npublic ICollection LoadErrors => _loadErrors ?? Array.Empty<object>();\n\nCan you help me please?\n\nDMT","Url":"https://github.com/dotnet/winforms/issues/12514","RelatedDescription":"Open issue \"Trying to use designsurface.cs but have error on line 84 - public ICollection LoadErrors => _loadErrors ?? Array.Empty<object>();\" (#12514)"},{"Id":"2674546615","IsPullRequest":true,"CreatedAt":"2024-11-20T06:01:02","Actor":"Olina-Zhang","Number":"12513","RawContent":null,"Title":"Fix issue 12495: Infinite loop in ToolStripItemCollection.AddRange","State":"open","Body":"Fixes https://github.com/dotnet/winforms/issues/12495 and https://github.com/dotnet/winforms/issues/4454\r\n\r\n\r\n## Proposed changes\r\n\r\n- Early return for empty collection\r\n- Converts the ToolStripItemCollection into a List<ToolStripItem> (using Cast<ToolStripItem>().ToList()). This ensures that the collection is not modified while it is being iterated over, which avoids issues where adding items to the collection during iteration might cause exceptions or unintended behavior\r\n- Add unit test for issue https://github.com/dotnet/winforms/issues/12495 case\r\n\r\n## Regression? \r\n\r\n- Yes \r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Test fixing for GH issues: 12495 and 4454 manually \r\n- Unit test\r\n\r\n\r\n\r\n \r\n\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12513)","Url":"https://github.com/dotnet/winforms/pull/12513","RelatedDescription":"Open PR \"Fix issue 12495: Infinite loop in ToolStripItemCollection.AddRange\" (#12513)"},{"Id":"2674098555","IsPullRequest":true,"CreatedAt":"2024-11-20T02:21:07","Actor":"KlausLoeffelmann","Number":"12512","RawContent":null,"Title":"Bump up NuGet Packs and apply new Analyzer Rules.","State":"open","Body":"Updates the NuGet packages to the latest versions and applies the new respective Analyzer Rules.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12512)","Url":"https://github.com/dotnet/winforms/pull/12512","RelatedDescription":"Open PR \"Bump up NuGet Packs and apply new Analyzer Rules.\" (#12512)"},{"Id":"2672242977","IsPullRequest":false,"CreatedAt":"2024-11-19T22:50:49","Actor":"chrarnoldus","Number":"12509","RawContent":null,"Title":"WinForms designer generates resx file with BinaryFormatter warning when control has PointF property","State":"closed","Body":"### Environment\n\nMicrosoft Visual Studio Professional 2022 (64-bit) - Current\nVersion 17.12.0\n\n### .NET version\n\nSDK version 9.0.100\n\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\n\nI think this issue applies since BinaryFormatter was marked Obsolete.\n\nEdit: I'm actually not sure if the designer ever could serialize PointF values out of the box.\n\n### Issue description\n\nWhen a control with PointF property is used through the WinForms designer, the following warning is generated:\n\n```\nForm1.resx : warning MSB3825: Resource \"userControl11.Point\" of type \"System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089\" may be deserialized via BinaryFormatter at runtime. BinaryFormatter is deprecated due to known security risks and is removed from .NET 9+. If you wish to continue using it, set property \"GenerateResourceWarnOnBinaryFormatterUse\" to false.\nForm1.resx : warning MSB3825:            More information: https://aka.ms/binaryformatter-migration-guide\n```\n\nI have found related issues https://github.com/dotnet/winforms/issues/9701 and https://github.com/dotnet/winforms/issues/9110, but it is still not clear to me how to work around this issue. I don't think suppressing the warning as suggested is acceptable. The control could be in a third party DLL, so modifying the control is not a workable solution either.\n\nNote that the property is grayed out in the designer, so it is unclear why it is serialized in the first place.\n\n### Steps to reproduce\n\nBuild the following repro: [WinFormsApp1.zip](https://github.com/user-attachments/files/17815912/WinFormsApp1.zip)","Url":"https://github.com/dotnet/winforms/issues/12509","RelatedDescription":"Closed issue \"WinForms designer generates resx file with BinaryFormatter warning when control has PointF property\" (#12509)"},{"Id":"2673680008","IsPullRequest":false,"CreatedAt":"2024-11-19T22:01:06","Actor":"JeremyKuhne","Number":"12510","RawContent":null,"Title":"AssemblyNamesTypeResolutionService needs a trim-friendly heuristic for resolving","State":"open","Body":"`#pragma warning disable IL3000` needs analyzed and commented or worked around.","Url":"https://github.com/dotnet/winforms/issues/12510","RelatedDescription":"Open issue \"AssemblyNamesTypeResolutionService needs a trim-friendly heuristic for resolving\" (#12510)"},{"Id":"2671647477","IsPullRequest":true,"CreatedAt":"2024-11-19T10:35:10","Actor":"LeafShi1","Number":"12508","RawContent":null,"Title":"Unhook the mouse down hook at the end of PropertyGridView.ProcessEnumUpAndDown","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #12434\r\n\r\n## Root cause:\r\n\r\nAfter changing the value by pressing up/down keyboard directly in EditTextbox, the `EditTextBox.HookMouseDown` will be set to True\r\n\r\nThe stack trace:\r\n```\r\nat System.Windows.Forms.PropertyGridInternal.PropertyGridView.GridViewTextBox.set_HookMouseDown(Boolean value)\r\nat System.Windows.Forms.PropertyGridInternal.PropertyGridView.SetCommitError(ErrorState error, Boolean capture)\r\nat System.Windows.Forms.PropertyGridInternal.PropertyGridView.OnEditChange(Object sender, EventArgs e)\r\nat System.Windows.Forms.Control.OnTextChanged(EventArgs e)\r\nat System.Windows.Forms.TextBoxBase.OnTextChanged(EventArgs e)\r\nat System.Windows.Forms.Control.set_Text(String value)\r\nat System.Windows.Forms.TextBoxBase.set_Text(String value)\r\nat System.Windows.Forms.TextBox.set_Text(String value)\r\nat System.Windows.Forms.PropertyGridInternal.PropertyGridView.GridViewTextBox.set_Text(String value)\r\nat System.Windows.Forms.PropertyGridInternal.PropertyGridView.CommitValue(GridEntry entry, Object value, Boolean closeDropDown)\r\nat System.Windows.Forms.PropertyGridInternal.PropertyGridView.ProcessEnumUpAndDown(GridEntry entry, Keys keyCode, Boolean closeDropDown)\r\n\r\n\r\n```\r\nthen pressing `Alt+Down` to open the DropDown list, and select a item, the [CommitValue ](https://github.com/dotnet/winforms/blob/7896a6e7b4d3627c76bd3168d0042f72574d9b14/src/System.Windows.Forms/src/System/Windows/Forms/Controls/PropertyGrid/PropertyGridInternal/PropertyGridView.cs#L4663) will be invoked. \r\nAt this time, `EditTextBox.HookMouseDown = true`. In [HookMouseDown](https://github.com/dotnet/winforms/blob/7896a6e7b4d3627c76bd3168d0042f72574d9b14/src/System.Windows.Forms/src/System/Windows/Forms/Controls/PropertyGrid/PropertyGridInternal/PropertyGridView.GridViewTextBox.cs#L64-L68), the `Focus()` was invoked, so the DropDown list was collapsed.\r\n\r\n## Proposed changes\r\n\r\n-  Set  `EditTextBox.HookMouseDown = false` at the end of PropertyGridView.ProcessEnumUpAndDown\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- When pressing the up/down keyboard in the property drop-down list, the drop-down menu will not be collapsed directly\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Mininal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\nPressing Up/Down keyboard in drop-down list of property collapses dropdown directly.\r\n![Image](https://github.com/user-attachments/assets/2d68ad2b-a52a-4348-ac19-ab94a99e1597)\r\n\r\n### After\r\nWhen pressing the up/down keyboard in the property drop-down list, the drop-down menu will not be collapsed directly\r\n![AfterChange](https://github.com/user-attachments/assets/009178c3-58e9-45ce-ad71-e69654848906)\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manually\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .net 10.0.0-beta.24562.15\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12508)","Url":"https://github.com/dotnet/winforms/pull/12508","RelatedDescription":"Open PR \"Unhook the mouse down hook at the end of PropertyGridView.ProcessEnumUpAndDown\" (#12508)"},{"Id":"2670506330","IsPullRequest":true,"CreatedAt":"2024-11-19T02:20:23","Actor":"paul1956","Number":"12507","RawContent":null,"Title":"Reennable test broken in Merge and fix developer usability issues","State":"open","Body":"Stop ProgressDialog and VBInputBox from opening in designer which will fail.\r\n Fix missing return in Interaction.vb\r\n\r\nFixes Issue where trying to open 2 VB Files in Designer causes designer to fail as its not supported (Don't know issue #)\r\nFact was missing from WindowsFormsApplicationBaseTests in Merge.\r\n\r\n\r\n## Proposed changes\r\n- Fix minor issue\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Improved test and WinForm Developers will not hang it they accidently try to open design files in Visual Studio\r\n\r\n## Regression? \r\n- Yes (test was accidently disabled) and No fixes usability issue\r\n\r\n## Risk\r\n- minimal\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12507)","Url":"https://github.com/dotnet/winforms/pull/12507","RelatedDescription":"Open PR \"Reennable test broken in Merge and fix developer usability issues\" (#12507)"},{"Id":"2670282353","IsPullRequest":true,"CreatedAt":"2024-11-19T01:13:05","Actor":"JeremyKuhne","Number":"12506","RawContent":null,"Title":"Move common code to assemblies","State":"closed","Body":"Most of what was in the Common folder was only used in one place or could live in a shared assembly. Moved what I easily could.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12506)","Url":"https://github.com/dotnet/winforms/pull/12506","RelatedDescription":"Closed or merged PR \"Move common code to assemblies\" (#12506)"},{"Id":"2666608502","IsPullRequest":true,"CreatedAt":"2024-11-18T23:42:25","Actor":"Tanya-Solyanik","Number":"12503","RawContent":null,"Title":"Sealed the internal DataStore class, and some minor clean-up","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12503)","Url":"https://github.com/dotnet/winforms/pull/12503","RelatedDescription":"Closed or merged PR \"Sealed the internal DataStore class, and some minor clean-up\" (#12503)"},{"Id":"2666896006","IsPullRequest":true,"CreatedAt":"2024-11-18T18:05:58","Actor":"JeremyKuhne","Number":"12504","RawContent":null,"Title":"Ensure GDI+ is initialized for all codepaths","State":"closed","Body":"One place slipped through the cracks. If you call GetImageEncoders before any other System.Drawing code you will get a fatal error.\r\n\r\n(Port from #12501)\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12504)","Url":"https://github.com/dotnet/winforms/pull/12504","RelatedDescription":"Closed or merged PR \"Ensure GDI+ is initialized for all codepaths\" (#12504)"},{"Id":"2664510035","IsPullRequest":true,"CreatedAt":"2024-11-18T17:34:23","Actor":"emmanuel-ferdman","Number":"12500","RawContent":null,"Title":"Update `Microsoft.WindowsDesktop.App.Ref.sfxproj` reference","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n## Proposed changes\r\n\r\nPR updates the location of `Microsoft.WindowsDesktop.App.Ref.sfxproj`.\r\n\r\n## Customer Impact\r\n\r\n## Regression? \r\n\r\nNo\r\n\r\n## Risk\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12500)","Url":"https://github.com/dotnet/winforms/pull/12500","RelatedDescription":"Closed or merged PR \"Update `Microsoft.WindowsDesktop.App.Ref.sfxproj` reference\" (#12500)"},{"Id":"2666259348","IsPullRequest":true,"CreatedAt":"2024-11-18T02:23:23","Actor":"JeremyKuhne","Number":"12501","RawContent":null,"Title":"Ensure GDI+ is initialized for all codepaths","State":"closed","Body":"A few places slipped through the cracks. If you call GetImageEncoders before any other System.Drawing code, you will get a fatal error.\r\n\r\nFixes #12494\r\n\r\nThere isn't a great way to add a regression test for this as any other call that initializes GDI+ will cause the test to not find this.\r\n\r\nCreated https://github.com/microsoft/CsWin32/issues/1308 to try and make this programmatic. If this ends up being problematic, we could add another core assembly `System.Private.Windows.Core.GdiPlus` to handle this scenario. Said assembly would _have_ to depend on `System.Private.Windows.Core`.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12501)","Url":"https://github.com/dotnet/winforms/pull/12501","RelatedDescription":"Closed or merged PR \"Ensure GDI+ is initialized for all codepaths\" (#12501)"},{"Id":"2666313357","IsPullRequest":false,"CreatedAt":"2024-11-17T18:53:16","Actor":"JeremyKuhne","Number":"12502","RawContent":null,"Title":"Improving WinForms and WPF agility","State":"open","Body":"WPF and WinForms are the two components of https://github.com/dotnet/windowsdesktop. The two projects have a long history that has intertwined in various ways over the past 20+ years. Leaning in together as the Win32 managed frameworks we can leverage each-other's efforts, reduce duplication, and make it easier for contributions to accrue to both platforms.\n\nIn .NET 10 we plan to start sharing code between the two platforms. WPF already depends on the WinForms build. As such, the shared code will come from the WinForms repo. WinForms introduced a lower-level System.Private.Windows.Core assembly in .NET 9 to facilitate the two packages that ship from WinForms: WinForms itself, and System.Drawing.Common. This no-dependency assembly is the one we'll be sharing throughout both WPF and WinForms.\n\nThe better aligned the two repos are, the easier it will be.\n\nThe WPF issue for this effort is https://github.com/dotnet/wpf/issues/10081.\n\nIn WinForms there are a few tasks related to this; we'll capture them here.\n\n- [ ] Factor shared test utilities (#12407)\n- [ ] Clean up .editorconfig usage (#12426)\n- [ ] Refresh code style docs\n- [ ] Ensure test guidelines are up to date\n- [ ] Relocate shared docs as appropriate\n- [ ] Document procedures for updating shared code and docs\n- [ ] Factor OLE implementation to allow sharing (Clipboard / Drag & Drop)\n- [ ] Ensure Numerics Color exchange types is fully implemented (https://github.com/dotnet/runtime/issues/48615)","Url":"https://github.com/dotnet/winforms/issues/12502","RelatedDescription":"Open issue \"Improving WinForms and WPF agility\" (#12502)"},{"Id":"2664276970","IsPullRequest":true,"CreatedAt":"2024-11-16T13:41:21","Actor":"dotnet-maestro[bot]","Number":"12499","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20241115.3\r\n- **Date Produced**: November 15, 2024 5:20:18 PM UTC\r\n- **Commit**: 55eee324653e01cf28809d02b25a5b0894b58d22\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.IO.Hashing**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.Text.Encodings.Web**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.Text.Json**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24564.12 to 10.0.0-alpha.1.24565.3][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/5aee7c2379...55eee32465\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12499)","Url":"https://github.com/dotnet/winforms/pull/12499","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#12499)"},{"Id":"2663734259","IsPullRequest":false,"CreatedAt":"2024-11-16T04:00:22","Actor":"QINGCHARLES","Number":"12498","RawContent":null,"Title":"Typo on docs/designer/designer-high-dpi-mode.md","State":"open","Body":"This page is linked directly from Visual Studio, but it has a typo:\nhttps://github.com/dotnet/winforms/blob/main/docs/designer/designer-high-dpi-mode.md\n\nThe XML file at the bottom lacks a closing tag.","Url":"https://github.com/dotnet/winforms/issues/12498","RelatedDescription":"Open issue \"Typo on docs/designer/designer-high-dpi-mode.md\" (#12498)"},{"Id":"2663286712","IsPullRequest":false,"CreatedAt":"2024-11-15T22:00:27","Actor":"pushkin-","Number":"12497","RawContent":null,"Title":"Setting MinimumSize activates the Form","State":"open","Body":"### .NET version\n\n.NET 8-windows\n\n### Did it work in .NET Framework?\n\nNot tested/verified\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nnot that I know of\n\n### Issue description\n\nI'm seeing that setting `MinimumSize` on a Form, activates it.\n\nThis was reported here: https://github.com/dotnet/winforms/issues/7251 though not sure what the resolution was\n\nAnd here https://github.com/dotnet/winforms/issues/3020 where it's suggested that they don't want to fix this.\n\nI haven't found a good workaround for this. I can detect if the Form isn't active and pend the MinimumSize set for when it becomes active, but this causes others problems for me, so I would like this fixed.\n\n### Steps to reproduce\n\n.net 8 WinForms app on Windows 11, per-monitor v2 DPI (though this reprod when the app wasn't DPI aware)\n\ncan paste some sample app if I have time, but just create a barebones app that sets MinimumSize on a timer a couple times and focus on another Form. Focus should move to the first Form.","Url":"https://github.com/dotnet/winforms/issues/12497","RelatedDescription":"Open issue \"Setting MinimumSize activates the Form\" (#12497)"},{"Id":"2662777027","IsPullRequest":false,"CreatedAt":"2024-11-15T18:22:40","Actor":"ottoman52","Number":"12495","RawContent":null,"Title":"Infinite loop in ToolStripItemCollection.AddRange","State":"open","Body":"### .NET version\n\n.NET 8.0\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nI dont know\n\n### Issue description\n\nThere is an infinite loop in ToolStripItemCollection.cs:\n\n```\npublic void AddRange(ToolStripItemCollection toolStripItems)\n{\n\tArgumentNullException.ThrowIfNull(toolStripItems, \"toolStripItems\");\n\tif (IsReadOnly)\n\t{\n\t\tthrow new NotSupportedException(System.SR.ToolStripItemCollectionIsReadOnly);\n\t}\n\tusing (new LayoutTransaction(_owner, _owner, \"Items\"))\n\t{\n\t\tfor (int i = 0; i < toolStripItems.Count; i++)\n\t\t{\n\t\t\tAdd(toolStripItems[i--]);\n\t\t}\n\t}\n}\n```\n\nfor (int i = 0; i < toolStripItems.Count; i++) counts up from 0 but decrements 'i' down in Add(toolStripItems[i--]);\n\nAny call to add items using this override will infinite loop with i going from 0 -> -1 -> 0 -> -1 etc...\n\n### Steps to reproduce\n\nAny call to ToolStripItemCollection.AddRange(ToolStripItemCollection toolStripItems) with items.","Url":"https://github.com/dotnet/winforms/issues/12495","RelatedDescription":"Open issue \"Infinite loop in ToolStripItemCollection.AddRange\" (#12495)"},{"Id":"2661895137","IsPullRequest":true,"CreatedAt":"2024-11-15T17:21:08","Actor":"dotnet-maestro[bot]","Number":"12493","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20241114.12\r\n- **Date Produced**: November 15, 2024 9:45:29 AM UTC\r\n- **Commit**: 5aee7c2379d1e99f7df13b13a88e908b27890b91\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.CodeDom**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.ComponentModel.Composition**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.Data.Odbc**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.Data.OleDb**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.Diagnostics.EventLog**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.DirectoryServices**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.Formats.Nrbf**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.IO.Hashing**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.IO.Packaging**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.IO.Ports**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.Management**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.Reflection.Context**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.Resources.Extensions**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.Runtime.Caching**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.Security.Permissions**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.ServiceModel.Syndication**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.Speech**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.Text.Encodings.Web**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.Text.Json**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.Threading.AccessControl**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **System.Windows.Extensions**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-alpha.1.24564.7 to 10.0.0-alpha.1.24564.12][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/31e28adfc1...5aee7c2379\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12493)","Url":"https://github.com/dotnet/winforms/pull/12493","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#12493)"},{"Id":"2662117314","IsPullRequest":false,"CreatedAt":"2024-11-15T14:17:31","Actor":"bitbound","Number":"12494","RawContent":null,"Title":"`ImageCodecInfo.GetImageEncoders()` throws fatal exception in 9.0.0 package.","State":"open","Body":"### .NET version\n\n9.0\n\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes.  It worked in 8.0.x.\n\n### Issue description\n\n`ImageCodecInfo.GetImageEncoders()` throws a fatal exception in the 9.0.0 version of `System.Drawing.Common`.\n\n### Steps to reproduce\n\n## Exception in 9.0\n\n![Image](https://github.com/user-attachments/assets/1138edc7-1acc-41b9-a472-fbf1c6aebb9b)\n\n## Working in 8.0\n![Image](https://github.com/user-attachments/assets/01b8842f-5bcd-4ff3-8bb7-0bc11c2a96ed)\n","Url":"https://github.com/dotnet/winforms/issues/12494","RelatedDescription":"Open issue \"`ImageCodecInfo.GetImageEncoders()` throws fatal exception in 9.0.0 package.\" (#12494)"},{"Id":"2661894506","IsPullRequest":true,"CreatedAt":"2024-11-15T13:42:19","Actor":"dotnet-maestro[bot]","Number":"12492","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20241114.1\r\n- **Date Produced**: November 14, 2024 10:19:48 AM UTC\r\n- **Commit**: c1852b9ac37df9a86630c2f078dbee43f7b186e7\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24563.7 to 10.0.0-beta.24564.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.24563.7 to 10.0.0-beta.24564.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.24563.7 to 10.0.0-beta.24564.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24563.7 to 10.0.0-beta.24564.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.24563.7 to 10.0.0-beta.24564.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.24563.7 to 10.0.0-beta.24564.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/16010cc5b1...c1852b9ac3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/12492)","Url":"https://github.com/dotnet/winforms/pull/12492","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#12492)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-11-21T03:30:30.3604318Z","RunDurationInMilliseconds":453}