{"Data":{"GitHub":{"Issues":[{"Id":"1450704364","IsPullRequest":false,"CreatedAt":"2022-11-16T02:15:12","Actor":"RussKie","Number":"8204","RawContent":null,"Title":"[Announcement] Signing off","State":"open","Body":"After three and a half years of being the repository owner and maintainer I'm moving to another .NET team and, thus, signing off here. It was an awesome ride, and together we've built an amazing community. Windows Forms has a special place in my heart, and I expect to stick around, though, more in a role of a contributor.\r\n\r\nFeel free to tag me in issues and pull-requests, though I can't guarantee the same level of responsiveness as you've come to expect of me.\r\n\r\nThank you all, and happy coding!\r\nIgor","Url":"https://github.com/dotnet/winforms/issues/8204","RelatedDescription":"Open issue \"[Announcement] Signing off\" (#8204)"},{"Id":"1450669094","IsPullRequest":false,"CreatedAt":"2022-11-16T01:38:27","Actor":"JeremyKuhne","Number":"8203","RawContent":null,"Title":"Use interpolated strings in WinForms","State":"open","Body":"WinForms formatted string usages should be converted to interpolated strings where possible to get the various performance benefits.\r\n\r\nhttps://learn.microsoft.com/dotnet/csharp/language-reference/tokens/interpolated\r\n\r\nThis is a good community contribution issue. Details:\r\n\r\n- Keep PRs to a manageable size\r\n- This includes usages of `+` to concat strings\r\n- `string.Format` is still needed for anything that gets localized strings (`SR.*`)\r\n- In most cases we don't need to specify culture\r\n  - Not needed ever for integers or booleans that aren't special formatted\r\n  - Never really needed in Debug statements\r\n\r\n\r\nExamples of changes:\r\n\r\n``` C#\r\n// No culture needed - non localized string, debug only, boolean\r\nDebug.WriteLineIf(CompModSwitches.ImeMode.Level >= TraceLevel.Info, string.Format(CultureInfo.CurrentCulture, \"Inside get_CanEnableIme(), value = {0}, this = {1}\", ImeSupported, this));\r\n\r\n// Becomes...\r\n\r\nDebug.WriteLineIf(CompModSwitches.ImeMode.Level >= TraceLevel.Info, $\"Inside get_CanEnableIme(), value = {ImeSupported}, this = {this}\");\r\n\r\n\r\n\r\nDebug.WriteLineIf(CompModSwitches.ImeMode.Level >= TraceLevel.Info, \"Inside get_CurrentImeContextMode(), this = \" + this)\r\n\r\n// Becomes...\r\n\r\nDebug.WriteLineIf(CompModSwitches.ImeMode.Level >= TraceLevel.Info, $\"Inside get_CurrentImeContextMode(), this = {this}\")\r\n```\r\n\r\nI don't think we have many cases where [raw string literals](https://learn.microsoft.com/dotnet/csharp/language-reference/proposals/csharp-11.0/raw-string-literal) are needed, but that can be included in this work if any come up. (`$\"\"\"Count {0}\"\"\"`)\r\n\r\nWe should also identify and collect places in the WinForms code where we're frequently passing formatted strings that may not be used so we can look for ways to leverage skipping formatting in much the same way that `Debug.WriteLineIf`, etc. do.\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/8203","RelatedDescription":"Open issue \"Use interpolated strings in WinForms\" (#8203)"},{"Id":"1449090209","IsPullRequest":true,"CreatedAt":"2022-11-16T01:12:30","Actor":"RussKie","Number":"8197","RawContent":null,"Title":"Tweak \"Add no recent activity label to issues and pull requests\" task","State":"closed","Body":"The task appears to have not been run for awhile, tweak the settings in hope to revive the task.\r\n![image](https://user-images.githubusercontent.com/4403806/201817886-dd075aa4-44da-435f-9ba5-027440189b3c.png)\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8197)","Url":"https://github.com/dotnet/winforms/pull/8197","RelatedDescription":"Closed or merged PR \"Tweak \"Add no recent activity label to issues and pull requests\" task\" (#8197)"},{"Id":"1448999843","IsPullRequest":true,"CreatedAt":"2022-11-16T01:06:09","Actor":"elachlan","Number":"8196","RawContent":null,"Title":"Add CSharpIsNull Analyzer","State":"closed","Body":"Related: #3459\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8196)","Url":"https://github.com/dotnet/winforms/pull/8196","RelatedDescription":"Closed or merged PR \"Add CSharpIsNull Analyzer\" (#8196)"},{"Id":"1449260789","IsPullRequest":true,"CreatedAt":"2022-11-16T01:02:50","Actor":"elachlan","Number":"8200","RawContent":null,"Title":"Refactor CommandSet and associated classes to use List<T> and Dictionary<TKey, TValue>","State":"closed","Body":"Related: #8140\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8200)","Url":"https://github.com/dotnet/winforms/pull/8200","RelatedDescription":"Closed or merged PR \"Refactor CommandSet and associated classes to use List<T> and Dictionary<TKey, TValue>\" (#8200)"},{"Id":"1449182338","IsPullRequest":true,"CreatedAt":"2022-11-16T00:44:58","Actor":"elachlan","Number":"8199","RawContent":null,"Title":"Refactor ResizeBehavior to replace ArrayList","State":"closed","Body":"Related: #8140\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8199)","Url":"https://github.com/dotnet/winforms/pull/8199","RelatedDescription":"Closed or merged PR \"Refactor ResizeBehavior to replace ArrayList\" (#8199)"},{"Id":"1450497035","IsPullRequest":true,"CreatedAt":"2022-11-15T22:56:04","Actor":"elachlan","Number":"8202","RawContent":null,"Title":"Refactor ArrangedElementCollection to replace ArrayList","State":"open","Body":"Related: #8140\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8202)","Url":"https://github.com/dotnet/winforms/pull/8202","RelatedDescription":"Open PR \"Refactor ArrangedElementCollection to replace ArrayList\" (#8202)"},{"Id":"1450309279","IsPullRequest":true,"CreatedAt":"2022-11-15T20:02:18","Actor":"dreddy-work","Number":"8201","RawContent":null,"Title":"Fix anchors in nested UserControls","State":"open","Body":"This is not a regression, but the root cause is different in Framework vs .NET 8.0. In .NET 8.0 Anchor calculations are delayed until after the Handles are created. This is problematic in the scenarios where UserControls containing anchored controls are nested and resized. See below example.\r\n\r\nex:\r\n-  User control has a TextBox anchored in all directions.\r\n-  User control is then added to Form and resized, Textbox anchors should have been calculated based on the UserControls original size and grow/shrink on this resize event. However, in runtime while deserializing this, none of the Handles have been created yet and thus anchor calculations computed with the new size for UserControl, when their Handles are created.\r\n\r\nOnly reason we delayed anchors calculation in .NET8.0 is to accommodate initialization to complete, and all parenting and sizes are applied on the controls. We can achieve this by delaying anchors calculation until after the parent layout is resumed. When handles are created, DPI is applied to handles and WinForms runtime scales controls and anchors (if applicable).\r\n\r\nFixes #6381.\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8201)","Url":"https://github.com/dotnet/winforms/pull/8201","RelatedDescription":"Open PR \"Fix anchors in nested UserControls\" (#8201)"},{"Id":"1448551326","IsPullRequest":true,"CreatedAt":"2022-11-15T19:08:38","Actor":"Jericho","Number":"8189","RawContent":null,"Title":"Refactor WeakRefCollection to use List<WeakRefObject?> instead of ArrayList ","State":"closed","Body":"Related: #8140 \n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8189)","Url":"https://github.com/dotnet/winforms/pull/8189","RelatedDescription":"Closed or merged PR \"Refactor WeakRefCollection to use List<WeakRefObject?> instead of ArrayList \" (#8189)"},{"Id":"1447682746","IsPullRequest":true,"CreatedAt":"2022-11-15T18:09:11","Actor":"elachlan","Number":"8187","RawContent":null,"Title":"Refactor BehaviorService to use List<T> instead of ArrayList","State":"closed","Body":"Related: #8140\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8187)","Url":"https://github.com/dotnet/winforms/pull/8187","RelatedDescription":"Closed or merged PR \"Refactor BehaviorService to use List<T> instead of ArrayList\" (#8187)"},{"Id":"1448893219","IsPullRequest":true,"CreatedAt":"2022-11-15T17:55:11","Actor":"elachlan","Number":"8195","RawContent":null,"Title":"Refactor ToolStripKeyboardHandlingService to use List<T> instead of ArrayList","State":"closed","Body":"Plus other refactors.\r\n\r\nRelated: #8140, #3459\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8195)","Url":"https://github.com/dotnet/winforms/pull/8195","RelatedDescription":"Closed or merged PR \"Refactor ToolStripKeyboardHandlingService to use List<T> instead of ArrayList\" (#8195)"},{"Id":"1449179315","IsPullRequest":true,"CreatedAt":"2022-11-15T05:12:19","Actor":"elachlan","Number":"8198","RawContent":null,"Title":"Refactor DesignerActionService to replace Hashtable and ArrayList","State":"open","Body":"Related: #8140, #8143\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8198)","Url":"https://github.com/dotnet/winforms/pull/8198","RelatedDescription":"Open PR \"Refactor DesignerActionService to replace Hashtable and ArrayList\" (#8198)"},{"Id":"1447623643","IsPullRequest":true,"CreatedAt":"2022-11-15T03:23:45","Actor":"elachlan","Number":"8185","RawContent":null,"Title":"Refactor ReferenceService to use List<T> instead of ArrayList","State":"closed","Body":"Related: #8140\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8185)","Url":"https://github.com/dotnet/winforms/pull/8185","RelatedDescription":"Closed or merged PR \"Refactor ReferenceService to use List<T> instead of ArrayList\" (#8185)"},{"Id":"1447566063","IsPullRequest":true,"CreatedAt":"2022-11-15T02:43:36","Actor":"elachlan","Number":"8181","RawContent":null,"Title":"Refactor DesignerEventService to use List<IDesignerHost> instead of ArrayList","State":"closed","Body":"Related: #8140\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8181)","Url":"https://github.com/dotnet/winforms/pull/8181","RelatedDescription":"Closed or merged PR \"Refactor DesignerEventService to use List<IDesignerHost> instead of ArrayList\" (#8181)"},{"Id":"1447568969","IsPullRequest":true,"CreatedAt":"2022-11-15T02:42:28","Actor":"elachlan","Number":"8182","RawContent":null,"Title":"Refactor ExtenderProviderService to use List<IExtenderProvider> instead of ArrayList","State":"closed","Body":"Related: #8140\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8182)","Url":"https://github.com/dotnet/winforms/pull/8182","RelatedDescription":"Closed or merged PR \"Refactor ExtenderProviderService to use List<IExtenderProvider> instead of ArrayList\" (#8182)"},{"Id":"1448880062","IsPullRequest":true,"CreatedAt":"2022-11-15T02:39:07","Actor":"elachlan","Number":"8194","RawContent":null,"Title":"Refactor DocumentDesigner to use List<T> instead of ArrayList","State":"closed","Body":"Related: #8140\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8194)","Url":"https://github.com/dotnet/winforms/pull/8194","RelatedDescription":"Closed or merged PR \"Refactor DocumentDesigner to use List<T> instead of ArrayList\" (#8194)"},{"Id":"1448879750","IsPullRequest":true,"CreatedAt":"2022-11-15T02:38:33","Actor":"elachlan","Number":"8193","RawContent":null,"Title":"Refactor PbrsForward to use List<T> instead of ArrayList","State":"closed","Body":"As well as other refactors.\r\n\r\nRelated: #8140\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8193)","Url":"https://github.com/dotnet/winforms/pull/8193","RelatedDescription":"Closed or merged PR \"Refactor PbrsForward to use List<T> instead of ArrayList\" (#8193)"},{"Id":"1448760195","IsPullRequest":true,"CreatedAt":"2022-11-14T22:14:46","Actor":"dotnet-maestro[bot]","Number":"8192","RawContent":null,"Title":"[release/6.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:84f431dc-3375-4a46-af87-08d961c59698)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 84f431dc-3375-4a46-af87-08d961c59698\r\n- **Build**: 20221111.1\r\n- **Date Produced**: November 11, 2022 6:08:35 PM UTC\r\n- **Commit**: 0967701e5527a1be21d9473821077c3f4be7f9dc\r\n- **Branch**: refs/heads/release/6.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.22560.1 to 6.0.0-beta.22561.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 6.0.0-beta.22560.1 to 6.0.0-beta.22561.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.22560.1 to 6.0.0-beta.22561.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.22560.1 to 6.0.0-beta.22561.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.22560.1 to 6.0.0-beta.22561.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.22560.1 to 6.0.0-beta.22561.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/a0fd54b...0967701\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:84f431dc-3375-4a46-af87-08d961c59698)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8192)","Url":"https://github.com/dotnet/winforms/pull/8192","RelatedDescription":"Closed or merged PR \"[release/6.0] Update dependencies from dotnet/arcade\" (#8192)"},{"Id":"1448561203","IsPullRequest":true,"CreatedAt":"2022-11-14T20:41:52","Actor":"dotnet-maestro[bot]","Number":"8190","RawContent":null,"Title":"[release/7.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1bb79c46-2599-4c95-8164-08da7ef6284d)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1bb79c46-2599-4c95-8164-08da7ef6284d\r\n- **Build**: 20221111.2\r\n- **Date Produced**: November 11, 2022 6:35:12 PM UTC\r\n- **Commit**: f36ea231c234560514ede4c2747897a737ced28f\r\n- **Branch**: refs/heads/release/7.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22558.4 to 7.0.0-beta.22561.2][2]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.22558.4 to 7.0.0-beta.22561.2][2]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.22558.4 to 7.0.0-beta.22561.2][2]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22558.4 to 7.0.0-beta.22561.2][2]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.22558.4 to 7.0.0-beta.22561.2][2]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.22558.4 to 7.0.0-beta.22561.2][2]\r\n\r\n[2]: https://github.com/dotnet/arcade/compare/3f3c360...f36ea23\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1bb79c46-2599-4c95-8164-08da7ef6284d)\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8190)\r\n","Url":"https://github.com/dotnet/winforms/pull/8190","RelatedDescription":"Closed or merged PR \"[release/7.0] Update dependencies from dotnet/arcade\" (#8190)"},{"Id":"1448565450","IsPullRequest":true,"CreatedAt":"2022-11-14T19:18:40","Actor":"dotnet-maestro[bot]","Number":"8191","RawContent":null,"Title":"[release/6.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:84f431dc-3375-4a46-af87-08d961c59698)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 84f431dc-3375-4a46-af87-08d961c59698\r\n- **Build**: 20221110.1\r\n- **Date Produced**: November 11, 2022 4:38:15 PM UTC\r\n- **Commit**: a0fd54b5c2dc3e23aa8466bd4638462df4303633\r\n- **Branch**: refs/heads/release/6.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.22558.7 to 6.0.0-beta.22560.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 6.0.0-beta.22558.7 to 6.0.0-beta.22560.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.22558.7 to 6.0.0-beta.22560.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.22558.7 to 6.0.0-beta.22560.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.22558.7 to 6.0.0-beta.22560.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.22558.7 to 6.0.0-beta.22560.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/a7773a9...a0fd54b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:84f431dc-3375-4a46-af87-08d961c59698)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8191)","Url":"https://github.com/dotnet/winforms/pull/8191","RelatedDescription":"Closed or merged PR \"[release/6.0] Update dependencies from dotnet/arcade\" (#8191)"},{"Id":"1448531270","IsPullRequest":true,"CreatedAt":"2022-11-14T18:19:12","Actor":"Jericho","Number":"8188","RawContent":null,"Title":"Refactor several data grid view classes to use List<T> instead of ArrayList","State":"open","Body":"Related: https://github.com/dotnet/winforms/issues/8140\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8188)","Url":"https://github.com/dotnet/winforms/pull/8188","RelatedDescription":"Open PR \"Refactor several data grid view classes to use List<T> instead of ArrayList\" (#8188)"},{"Id":"1447654223","IsPullRequest":true,"CreatedAt":"2022-11-14T09:01:17","Actor":"elachlan","Number":"8186","RawContent":null,"Title":"Use ObjectDisposedException.ThrowIf in more places","State":"open","Body":"Related: #8184\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8186)","Url":"https://github.com/dotnet/winforms/pull/8186","RelatedDescription":"Open PR \"Use ObjectDisposedException.ThrowIf in more places\" (#8186)"},{"Id":"1447620965","IsPullRequest":false,"CreatedAt":"2022-11-14T08:37:15","Actor":"elachlan","Number":"8184","RawContent":null,"Title":"Use `ObjectDisposedException.ThrowIf` in more places","State":"open","Body":"### Is your feature request related to a problem? Please describe\n\n`ObjectDisposedException.ThrowIf` was introduced in .NET7, we should make use of it in more places.\r\n\r\nhttps://learn.microsoft.com/en-us/dotnet/api/system.objectdisposedexception.throwif?view=net-7.0\n\n### Describe the solution you'd like and alternatives you've considered\n\nn/a\n\n### Will this feature affect UI controls?\n\nn/a","Url":"https://github.com/dotnet/winforms/issues/8184","RelatedDescription":"Open issue \"Use `ObjectDisposedException.ThrowIf` in more places\" (#8184)"},{"Id":"1447601770","IsPullRequest":true,"CreatedAt":"2022-11-14T08:22:00","Actor":"elachlan","Number":"8183","RawContent":null,"Title":"Refactor MenuCommandService to use List<T> instead of ArrayList","State":"open","Body":"Related: #8140\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8183)","Url":"https://github.com/dotnet/winforms/pull/8183","RelatedDescription":"Open PR \"Refactor MenuCommandService to use List<T> instead of ArrayList\" (#8183)"},{"Id":"1446487153","IsPullRequest":true,"CreatedAt":"2022-11-14T04:15:07","Actor":"gpetrou","Number":"8176","RawContent":null,"Title":"Enable nullability in BindingMemberInfo","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in BindingMemberInfo.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8176)","Url":"https://github.com/dotnet/winforms/pull/8176","RelatedDescription":"Closed or merged PR \"Enable nullability in BindingMemberInfo\" (#8176)"},{"Id":"1446987474","IsPullRequest":true,"CreatedAt":"2022-11-14T04:14:44","Actor":"gpetrou","Number":"8179","RawContent":null,"Title":"Enable nullability in IComponentEditorPageSite","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in IComponentEditorPageSite.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8179)","Url":"https://github.com/dotnet/winforms/pull/8179","RelatedDescription":"Closed or merged PR \"Enable nullability in IComponentEditorPageSite\" (#8179)"},{"Id":"1446762061","IsPullRequest":true,"CreatedAt":"2022-11-14T03:50:16","Actor":"gpetrou","Number":"8177","RawContent":null,"Title":"Enable nullability in ErrorProvider","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ErrorProvider.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8177)","Url":"https://github.com/dotnet/winforms/pull/8177","RelatedDescription":"Closed or merged PR \"Enable nullability in ErrorProvider\" (#8177)"},{"Id":"1446306188","IsPullRequest":true,"CreatedAt":"2022-11-14T03:36:41","Actor":"gpetrou","Number":"8175","RawContent":null,"Title":"Enable nullability in ToolStripPanelCellToControlEnumerator","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripPanelCellToControlEnumerator.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8175)","Url":"https://github.com/dotnet/winforms/pull/8175","RelatedDescription":"Closed or merged PR \"Enable nullability in ToolStripPanelCellToControlEnumerator\" (#8175)"},{"Id":"1446767070","IsPullRequest":true,"CreatedAt":"2022-11-14T03:35:55","Actor":"gpetrou","Number":"8178","RawContent":null,"Title":"Enable nullability in MergeHistoryItem","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in MergeHistoryItem.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8178)","Url":"https://github.com/dotnet/winforms/pull/8178","RelatedDescription":"Closed or merged PR \"Enable nullability in MergeHistoryItem\" (#8178)"},{"Id":"1446294952","IsPullRequest":true,"CreatedAt":"2022-11-12T06:49:18","Actor":"gpetrou","Number":"8174","RawContent":null,"Title":"Enable nullability in some ToolStripItem members","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in some ToolStripItem members.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8174)","Url":"https://github.com/dotnet/winforms/pull/8174","RelatedDescription":"Open PR \"Enable nullability in some ToolStripItem members\" (#8174)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-11-16T03:30:34.1954482Z","RunDurationInMilliseconds":557}