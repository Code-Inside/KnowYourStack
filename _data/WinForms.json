{"Data":{"GitHub":{"Issues":[{"Id":"617891501","IsPullRequest":true,"CreatedAt":"2020-05-14T03:15:06","Actor":"RussKie","Number":"3279","RawContent":null,"Title":"fix: ContextMenuStrip leads to crash on W10 1607","State":"open","Body":"\r\n\r\nResolves #2696.\r\n\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n\r\n\r\n## Proposed changes\r\n\r\nW10 1607 is not fully compatible with PerMonv2, and this leads to crashes interacting with `ContextMenuStrip`.\r\n\r\n`CommonUnsafeNativeMethods.SetThreadDpiAwarenessContext` may return `DPI_AWARENESS_CONTEXT_UNSPECIFIED` result that is never checked, however we set `dpiAwarenessScopeIsSet` flag assuming the scope was set.\r\n\r\nWhen disposing the scope we pass the obtained context to `TrySetThreadDpiAwarenessContext` that tries to restore the scope back to the original. However in event the original was `DPI_AWARENESS_CONTEXT_UNSPECIFIED` it leads to ANE, that was observed in #2969.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Customers on W10 1607 will now be able to use `ContextMenuStrip` in `HighDpiMode.PerMonitorV2`\r\n- \r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3279)","Url":"https://github.com/dotnet/winforms/pull/3279","RelatedDescription":"Open PR \"fix: ContextMenuStrip leads to crash on W10 1607\" (#3279)"},{"Id":"617395759","IsPullRequest":true,"CreatedAt":"2020-05-13T12:57:26","Actor":"dotnet-maestro[bot]","Number":"3278","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200512.14\r\n- **Date Produced**: 5/13/2020 3:06 AM\r\n- **Commit**: bc3bec788cd8d1f9d882b359ca8368248bf051a4\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20261.9 to 5.0.0-preview.6.20262.14\r\n  - **System.CodeDom**: from 5.0.0-preview.5.20261.9 to 5.0.0-preview.6.20262.14\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.5.20261.9 to 5.0.0-preview.6.20262.14\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20261.9 to 5.0.0-preview.6.20262.14\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.5.20261.9 to 5.0.0-preview.6.20262.14\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.5.20261.9 to 5.0.0-preview.6.20262.14\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20261.9 to 5.0.0-preview.6.20262.14\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.5.20261.9 to 5.0.0-preview.6.20262.14\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.5.20261.9 to 5.0.0-preview.6.20262.14\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.5.20261.9 to 5.0.0-preview.6.20262.14\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.5.20261.9 to 5.0.0-preview.6.20262.14\r\n  - **System.Security.Permissions**: from 5.0.0-preview.5.20261.9 to 5.0.0-preview.6.20262.14\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.5.20261.9 to 5.0.0-preview.6.20262.14\r\n  - **System.Drawing.Common**: from 5.0.0-preview.5.20261.9 to 5.0.0-preview.6.20262.14\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.5.20261.9 to 5.0.0-preview.6.20262.14\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3278)","Url":"https://github.com/dotnet/winforms/pull/3278","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3278)"},{"Id":"617381107","IsPullRequest":true,"CreatedAt":"2020-05-13T11:47:10","Actor":"hughbe","Number":"3277","RawContent":null,"Title":"Extract DataGridView nested classes","State":"open","Body":"## Proposed Changes\r\n- Extract DataGridView nested classes without any cleanup\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3277)","Url":"https://github.com/dotnet/winforms/pull/3277","RelatedDescription":"Open PR \"Extract DataGridView nested classes\" (#3277)"},{"Id":"617303387","IsPullRequest":true,"CreatedAt":"2020-05-13T09:42:58","Actor":"weltkante","Number":"3276","RawContent":null,"Title":"update Xunit.StaFact to include bugfixes","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3122\r\n\r\n\r\n## Proposed changes\r\n\r\nUpdate Xunit.StaFact package to consume bugfixes made upstream\r\n\r\n## Customer Impact\r\n\r\nNone, test infrastructure only\r\n\r\n## Regression? \r\n\r\nNo\r\n\r\n## Risk\r\n\r\nUnknown issues may be introdcued by updating 3rd party packages, but getting fixes for already known issues should outweight that risk.\r\n\r\n### Before\r\n\r\nUnable to run WinFormsTheory with complex MemberData inside VS\r\n\r\n### After\r\n\r\nAble to run WinFormsTheory with complex MemberData inside VS\r\n\r\n(+ various other fixes I don't know exactly how to test for, like calling OleRequired to initialize OLE on the STA thread)\r\n\r\n## Test methodology\r\n\r\nMaking sure one of the known issues is actually fixed. I didn't explicitly test for other fixes that have been merged.\r\n\r\n## Test environment\r\n\r\nlocal\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3276)","Url":"https://github.com/dotnet/winforms/pull/3276","RelatedDescription":"Open PR \"update Xunit.StaFact to include bugfixes\" (#3276)"},{"Id":"617274456","IsPullRequest":false,"CreatedAt":"2020-05-13T09:01:29","Actor":"Olina-Zhang","Number":"3275","RawContent":null,"Title":"The first runtime behavior is not correct after changed TextBox's PasswordChar value from one to another","State":"open","Body":"* .NET Core Version: \r\n.Net Core 5.0 from master branch: 5.0.100-preview.5.20262.7\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Minimal repro:**\r\n1.    Create a Winforms Core application\r\n2.    Add a TextBox control to form designer, and set its PasswordChar property to value ‘*’,\r\n3.    Run this application and input some string in TextBox\r\n4.    Close runtime, and change its PasswordChar property to value ‘&’,\r\n5.    Run this application and input some string in TextBox\r\n6.    Stop debugging, and run this application again, and input some string in TextBox\r\n\r\n**Actual behavior:**\r\nAfter step5, the displayed text in TextBox still is ‘*’, not ‘&’. --- it is not right behavior, and checked the code in form1.designer.cs file, the value is correct. Please see following screenshot:\r\n![image](https://user-images.githubusercontent.com/26474449/81793936-98104180-953c-11ea-9b5a-8f00d4f931c6.png)\r\n\r\n\r\nAfter step6, the displayed text in TextBox is '&'. --- it is right behavior\r\n\r\n**Expected behavior:**\r\nTextBox text display in runtime keeps same as the setting of TextBox’s PasswordChar all the time","Url":"https://github.com/dotnet/winforms/issues/3275","RelatedDescription":"Open issue \"The first runtime behavior is not correct after changed TextBox's PasswordChar value from one to another\" (#3275)"},{"Id":"617174903","IsPullRequest":true,"CreatedAt":"2020-05-13T06:20:02","Actor":"jeremy-visionaid","Number":"3274","RawContent":null,"Title":"Fix menu right-to-left handling","State":"open","Body":"\r\nFixes #3272 \r\n\r\n\r\n## Proposed changes\r\n\r\nFix menu navigation\r\n\r\n## Customer Impact\r\n\r\n\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\nManual testing with MenuStripAndCheckedListBox \r\n\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.100-preview.5.20262.6\r\n Commit:    9ad967d49e\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100-preview.5.20262.6\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0-preview.6.20262.3\r\n  Commit:  210a82a2e7\r\n\r\n.NET SDKs installed:\r\n  3.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  5.0.100-preview.5.20262.6 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 5.0.0-preview.5.20255.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 5.0.0-preview.6.20262.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 5.0.0-preview.6.20261.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3274)","Url":"https://github.com/dotnet/winforms/pull/3274","RelatedDescription":"Open PR \"Fix menu right-to-left handling\" (#3274)"},{"Id":"617171527","IsPullRequest":true,"CreatedAt":"2020-05-13T06:12:26","Actor":"RussKie","Number":"3273","RawContent":null,"Title":"AccessibleObject NRT annotations","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n## Proposed changes\r\n\r\nAnnotate the following types:\r\n* AccessibleObject\r\n* InternalAccessibleObject\r\n* AccessibleObject.EnumVariantObject\r\n* Control.ControlAccessibleObject\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3273)","Url":"https://github.com/dotnet/winforms/pull/3273","RelatedDescription":"Open PR \"AccessibleObject NRT annotations\" (#3273)"},{"Id":"617159379","IsPullRequest":false,"CreatedAt":"2020-05-13T05:43:24","Actor":"jeremy-visionaid","Number":"3272","RawContent":null,"Title":"MenuStrip arrow key navigation goes in the wrong direction","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\nAt least current master (5.0.100-preview.5.20251.2), but I recall seeing the issue since at least .NET Framework 2.0\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**Problem description:**\r\n\r\nWith a populated MenuStrip, and focus on ToolStripMenuItem that is not top-level, focus shifts in the reverse direction to the arrow key (i.e. pressing the left arrow key causes focus to shift to the right, and pressing the right menu key causes focus to shift to the left). When the focus is on a top-level item, focus shifts in the correct direction.\r\n\r\n**Expected behavior:**\r\nPressing an arrow key should move in the direction of the arrow\r\n\r\n**Minimal repro:**\r\nThe problem is reproducible with the MenuStripAndCheckedListBox winforms test","Url":"https://github.com/dotnet/winforms/issues/3272","RelatedDescription":"Open issue \"MenuStrip arrow key navigation goes in the wrong direction\" (#3272)"},{"Id":"617097168","IsPullRequest":false,"CreatedAt":"2020-05-13T02:45:09","Actor":"RussKie","Number":"3271","RawContent":null,"Title":"Flaky test: `IDispatch_GetTypeInfo_Invoke_Success`","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=641217&view=logs&j=7c8326b9-0a5f-532a-e6de-db8515c72d9a&s=ff05ad62-bb9a-53b6-ce9f-72f329a63e7c\r\n\r\n```\r\n    System.Windows.Forms.Primitives.Tests.Interop.Oleaut32.IDispatchTests.IDispatch_GetTypeInfo_Invoke_Success [FAIL]\r\n      System.Runtime.InteropServices.COMException : Error HRESULT E_FAIL has been returned from a call to a COM component.\r\n      Stack Trace:\r\n           at Interop.Ole32.OleCreatePictureIndirect(PICTDESC* pictdesc, Guid& refiid, BOOL fOwn)\r\n        /_/src/System.Windows.Forms.Primitives/src/Interop/Ole32/Interop.OleCreatePictureIndirect.cs(23,0): at Interop.Ole32.OleCreatePictureIndirect(PICTDESC& pictdesc, Guid& refiid, BOOL fOwn)\r\n        /_/src/System.Windows.Forms/src/System/Windows/Forms/AxHost.cs(3988,0): at System.Windows.Forms.AxHost.GetIPictureDispFromPicture(Image image)\r\n        /_/src/System.Windows.Forms.Primitives/tests/Interop/Oleaut32/IDispatchTests.cs(94,0): at System.Windows.Forms.Primitives.Tests.Interop.Oleaut32.IDispatchTests.SubAxHost.GetIPictureDispFromPicture(Image image)\r\n        /_/src/System.Windows.Forms.Primitives/tests/Interop/Oleaut32/IDispatchTests.cs(39,0): at System.Windows.Forms.Primitives.Tests.Interop.Oleaut32.IDispatchTests.IDispatch_GetTypeInfo_Invoke_Success()\r\n```\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/3271","RelatedDescription":"Open issue \"Flaky test: `IDispatch_GetTypeInfo_Invoke_Success`\" (#3271)"},{"Id":"616989612","IsPullRequest":true,"CreatedAt":"2020-05-12T22:30:05","Actor":"dotnet-maestro[bot]","Number":"3270","RawContent":null,"Title":"[release/5.0-preview5] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:67c9bc50-cce6-417c-985c-08d7f21e18b5)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 67c9bc50-cce6-417c-985c-08d7f21e18b5\r\n- **Build**: 20200512.7\r\n- **Date Produced**: 5/12/2020 7:59 PM\r\n- **Commit**: 9491e7a47b9b41c48c4b28d0e55cc2917ae109c7\r\n- **Branch**: refs/heads/release/5.0-preview5\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20262.7\r\n  - **System.CodeDom**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20262.7\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20262.7\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20262.7\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20262.7\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20262.7\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20262.7\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20262.7\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20262.7\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20262.7\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20262.7\r\n  - **System.Security.Permissions**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20262.7\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20262.7\r\n  - **System.Drawing.Common**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20262.7\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20262.7\r\n\r\n[marker]: <> (End:67c9bc50-cce6-417c-985c-08d7f21e18b5)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3270)","Url":"https://github.com/dotnet/winforms/pull/3270","RelatedDescription":"Closed or merged PR \"[release/5.0-preview5] Update dependencies from dotnet/runtime\" (#3270)"},{"Id":"616844585","IsPullRequest":false,"CreatedAt":"2020-05-12T17:50:50","Actor":"lonitra","Number":"3269","RawContent":null,"Title":"Accessibility: ListViewGroup Collapsible/Collapsed","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\nA Collapsible ListViewGroup cannot be collapsed/expanded via keyboard only. Additionally, there is no Narrator announcement for the collapse/expand state change.\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n\r\n**Expected behavior:**\r\nUser should be able to collapse/expand a collapsible ListViewGroup via keyboard only, perhaps by pressing the SPACE bar. \r\n\r\nNarrator should also announce the expand/collapse state change. Something similar to what the PropertyGrid does when something is collapsed or expanded:\r\n\r\n![image](https://user-images.githubusercontent.com/30007367/81727214-79775100-943d-11ea-9f34-4519c848a1a1.png)\r\n\r\n![image](https://user-images.githubusercontent.com/30007367/81727101-49c84900-943d-11ea-8f85-d572f06dec44.png)\r\n\r\n**Minimal repro:**\r\n\r\n1. Create a winforms core app\r\n2. Add a ListView and ListViewGroup \r\n3. Set `Collapsible = true` for ListViewGroup\r\n4. Run app\r\n5. Try to expand/collapse ListViewGroup via keyboard only\r\n6. Start Narrator and expand/collapse through clicks\r\n\r\n**Note:**\r\nThis stems from TODO in PR #3155 ","Url":"https://github.com/dotnet/winforms/issues/3269","RelatedDescription":"Open issue \"Accessibility: ListViewGroup Collapsible/Collapsed\" (#3269)"},{"Id":"616764203","IsPullRequest":true,"CreatedAt":"2020-05-12T15:47:10","Actor":"hughbe","Number":"3268","RawContent":null,"Title":"Add ButtonBase tests","State":"open","Body":"## Proposed Changes\r\n- Add ButtonBase tests\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3268)","Url":"https://github.com/dotnet/winforms/pull/3268","RelatedDescription":"Open PR \"Add ButtonBase tests\" (#3268)"},{"Id":"616609522","IsPullRequest":true,"CreatedAt":"2020-05-12T12:37:12","Actor":"dotnet-maestro[bot]","Number":"3267","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200511.9\r\n- **Date Produced**: 5/12/2020 2:18 AM\r\n- **Commit**: 0ba41a844ae03bd1b0cfd06e00552be8e4b8f02a\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20261.9\r\n  - **System.CodeDom**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20261.9\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20261.9\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20261.9\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20261.9\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20261.9\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20261.9\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20261.9\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20261.9\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20261.9\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20261.9\r\n  - **System.Security.Permissions**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20261.9\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20261.9\r\n  - **System.Drawing.Common**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20261.9\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.5.20260.5 to 5.0.0-preview.5.20261.9\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3267)","Url":"https://github.com/dotnet/winforms/pull/3267","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3267)"},{"Id":"616600433","IsPullRequest":true,"CreatedAt":"2020-05-12T12:31:56","Actor":"dotnet-maestro[bot]","Number":"3266","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200508.8\r\n- **Date Produced**: 5/8/2020 9:10 PM\r\n- **Commit**: 8078d8f3f77b7e8b7f6e289cf82cfdfa9c7a9355\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: from 5.0.0-beta.20256.5 to 5.0.0-beta.20258.8\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20256.5 to 5.0.0-beta.20258.8\r\n  - **Microsoft.DotNet.Helix.Sdk**: from 5.0.0-beta.20256.5 to 5.0.0-beta.20258.8\r\n  - **Microsoft.DotNet.RemoteExecutor**: from 5.0.0-beta.20256.5 to 5.0.0-beta.20258.8\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20256.5 to 5.0.0-beta.20258.8\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3266)","Url":"https://github.com/dotnet/winforms/pull/3266","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3266)"},{"Id":"616556718","IsPullRequest":true,"CreatedAt":"2020-05-12T11:07:33","Actor":"hughbe","Number":"3265","RawContent":null,"Title":"Add Microsoft.DotNet.CMake.Sdk to global.json","State":"closed","Body":"We know this is going to be used in https://github.com/dotnet/winforms/pull/1932\r\n\r\nBut annoyingly we need to constantly rebase global.json in that PR because we get merge conflicts every time we add update arcade.\r\n\r\nInstead, lets add this sdk to global.json in this PR which can be merged rapidly so we don't have to keep rebasing #1932\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3265)","Url":"https://github.com/dotnet/winforms/pull/3265","RelatedDescription":"Closed or merged PR \"Add Microsoft.DotNet.CMake.Sdk to global.json\" (#3265)"},{"Id":"616495213","IsPullRequest":false,"CreatedAt":"2020-05-12T09:14:23","Actor":"Olina-Zhang","Number":"3264","RawContent":null,"Title":"Application cannot be ran successfully when adding pictureBox with image, changed targeting from .Net Core 5.0 to 3.1","State":"open","Body":"# Customer-Facing Description\r\nAfter changed targeting from .Net Core 5.0 to 3.1, app cannot be ran successfully when form contains pictureBox with Image added\r\n\r\n## Minimal Reproduction Scenario\r\n1.\tCreate a Winforms Core application with targeting .Net Core 5.0\r\n2.\tAdd a pictureBox with image by Local resource\r\n3.\tBuild and run app\r\n4.\tChange app’s targeting to .Net Core 3.1 or using following .zip app directly \r\n5.\tBuild and run app\r\n\r\n**Test App with targeting .Net Core 5.0:**\r\n[WindowsFormsApp16.zip](https://github.com/dotnet/winforms/files/4614536/WindowsFormsApp16.zip)\r\n\r\n**Actual behavior:**\r\nAfter step5, app cannot be ran successfully with following error in Form1.Designer.cs file:\r\nSystem.IO.FileLoadException\r\n  HResult=0x80131040\r\n  Message=Could not load file or assembly 'System.Drawing.Common, Version=5.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51'. The located assembly's manifest definition does not match the assembly reference. (0x80131040)\r\n  Source=<Cannot evaluate the exception source>\r\n  StackTrace:\r\n<Cannot evaluate the exception stack trace>\r\n\r\n\r\n**Expected behavior:**\r\nApp is ran successfully\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/3264","RelatedDescription":"Open issue \"Application cannot be ran successfully when adding pictureBox with image, changed targeting from .Net Core 5.0 to 3.1\" (#3264)"},{"Id":"616488020","IsPullRequest":false,"CreatedAt":"2020-05-12T09:04:13","Actor":"kirsan31","Number":"3263","RawContent":null,"Title":"Designer: Ability to set relative Font size and style","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\n\r\nMany _new_ Fonts for the controls are simple size/style change of parent font. Currently you can achieve this in Designer only by explicitly creating new fixed Font object. **But this is completely breaks Windows Font size scaling of your app.** So, for now to preserve Font size scaling you need (full manual approach not a variant here):\r\n\r\nDesign form in designer (with creating fixed fonts) and then in constructor reassign fonts to all needed controls like:\r\n```cs\r\ncontrol.Font = new Font(control.Parent.Font.FontFamily, control.Parent.Font.SizeInPoints * 1.1f, FontStyle.Bold);\r\n// or\r\ncontrol.Font = new Font(DefaultFont, FontStyle.Bold);\r\n// or\r\ncontrol.Font = SomePredefinedFont;\r\n```\r\nDrawbacks:\r\n\r\n- If you have complex form with many controls, manual assigning fonts is hard and boring.\r\n- Designer creates many Fonts instances, that will be replaced on form creation anyway.\r\n\r\n\r\n**Describe the solution you'd like and alternatives you've considered**\r\n\r\nAbility to set font size/style of the control in designer relative to Parent/Default font.\r\nSorry, but I can't suggest designer user input interface for this - many options are possible ...\r\n","Url":"https://github.com/dotnet/winforms/issues/3263","RelatedDescription":"Open issue \"Designer: Ability to set relative Font size and style\" (#3263)"},{"Id":"616273535","IsPullRequest":false,"CreatedAt":"2020-05-12T00:31:03","Actor":"lonitra","Number":"3261","RawContent":null,"Title":"Accessibility: ListViewGroup Subtitle Property","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Problem description:**\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\nThe ListViewGroup has a subtitle property that is not being picked up by both inspect and narrator.\r\n\r\n**Expected behavior:**\r\n\r\nThe subtitle property should be read by narrator and it should also be displayed somewhere in inspect\r\n\r\n**Minimal repro:**\r\n\r\n1. Create a winforms core app\r\n2. Add a ListView and ListViewGroup with a subtitle\r\n4. Run app\r\n3. Start inspect/narrator and click on the ListViewGroup with the subtitle in the app\r\n\r\n**Note:**\r\nThis issue stems from PR #3234 \r\n","Url":"https://github.com/dotnet/winforms/issues/3261","RelatedDescription":"Open issue \"Accessibility: ListViewGroup Subtitle Property\" (#3261)"},{"Id":"616260746","IsPullRequest":false,"CreatedAt":"2020-05-11T23:52:31","Actor":"filipnavara","Number":"3260","RawContent":null,"Title":"Changing MainForm doesn't update reference in ThreadContext","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: 3.1.200\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: <strike>Haven't tried</strike> Yes\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\n\r\nWe have an application that can have more than one form open. When one of these forms is closed and it was the `ApplicationContext.MainForm` one we switch it to another opened window. Once all the windows are closed we shut down the app.\r\n\r\nCurrently the `Application.ThreadContext` class holds an additional reference to the main form that is assigned only at the beginning of the message loop. It doesn't reflect any changes to `ApplicationContext.MainForm` which is documented to be allowed:\r\n\r\n```c#\r\n        /// <summary>\r\n        ///  Determines the mainForm for this context. This may be changed\r\n        ///  at anytime.\r\n        ///  If OnMainFormClosed is not overriden, the thread's message\r\n        ///  loop will be terminated when mainForm is closed.\r\n        /// </summary>\r\n```\r\n\r\nChanging MainForm doesn't update reference in ThreadContext and hence the memory for the old form is never released. Similarly, any properties that are checked in the ThreadContext class are checked on a wrong form.\r\n\r\n**Expected behavior:**\r\n\r\nThreadContext should not hold its own reference to MainForm. If it needs it then it should be updated accordingly, either periodically in the loop, or through some mechanism from inside `Application.MainForm` setter.\r\n\r\n**Minimal repro:**\r\n\r\n[MainFormLeak.cs.zip](https://github.com/dotnet/winforms/files/4612656/MainFormLeak.cs.zip)\r\n\r\n![image](https://user-images.githubusercontent.com/1764393/81623212-398b7c00-93f3-11ea-9a35-6e83b0c6fc2a.png)\r\n","Url":"https://github.com/dotnet/winforms/issues/3260","RelatedDescription":"Open issue \"Changing MainForm doesn't update reference in ThreadContext\" (#3260)"},{"Id":"616166400","IsPullRequest":true,"CreatedAt":"2020-05-11T20:31:58","Actor":"hughbe","Number":"3259","RawContent":null,"Title":"Cleanup and enhance DataGridViewCell testing","State":"open","Body":"## Proposed Changes\r\n- Cleanup and enhance DataGridViewCell testing\r\n\r\nBasically I started by removing instances of creating `DataGridView` in test data, but ended up doing way more :)\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3259)","Url":"https://github.com/dotnet/winforms/pull/3259","RelatedDescription":"Open PR \"Cleanup and enhance DataGridViewCell testing\" (#3259)"},{"Id":"616131597","IsPullRequest":true,"CreatedAt":"2020-05-11T19:37:07","Actor":"M-Lipin","Number":"3258","RawContent":null,"Title":"Fixing DataGridViewComboBoxCell: ComboBox causes application crash on handle recreating related to accessibility hierarchy tree restructuring","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3251\r\n\r\n\r\n## Proposed changes\r\n\r\n- Porting .NET Framework fix for DataGridViewComboBox cell issue related to the control handle recreating when restructuring accessibility hierarchy tree.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Costumers will not experience application error when working with the DataGridView containing ComboBox cell. \r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nApplication error (crash) when working with DataGridView with ComboBox cell (reproduces rarely).\r\n\r\n### After\r\n\r\nNo issues.\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing.\r\n- Unit testing.\r\n- Automation tests.\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n<!-- use `dotnet --info` -->\r\n.NET SDK (reflecting any global.json):\r\n Version:   5.0.100-preview.5.20260.4\r\n Commit:    0950d416f9\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\5.0.100-preview.5.20260.4\\\r\n\r\nHost (useful for support):\r\n  Version: 5.0.0-preview.5.20260.5\r\n  Commit:  09ee4814cb\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3258)","Url":"https://github.com/dotnet/winforms/pull/3258","RelatedDescription":"Open PR \"Fixing DataGridViewComboBoxCell: ComboBox causes application crash on handle recreating related to accessibility hierarchy tree restructuring\" (#3258)"},{"Id":"616105264","IsPullRequest":false,"CreatedAt":"2020-05-11T18:53:13","Actor":"terrajobst","Number":"3257","RawContent":null,"Title":"Survey: repo contribution experience","State":"open","Body":"We’ve been working as a team, and community, for five years in the dotnet org on the .NET Core project. Many of the same GitHub handles have remained constant over that time, some are new, and others have come and gone. Thanks to everyone that has contributed! We normally focus on how to improve the product, but we’re turning our focus to improving the open source project. We’ve created a survey to better understand your individual experience of participating and contributing in this project.\r\n\r\nWe would appreciate your feedback so we can work to address shortcomings and missed opportunities. If you don’t supply contact details, then responses will be anonymous.\r\n\r\n[Survey](https://www.surveymonkey.com/r/ZLPVNX9?SourceRepo=dotnet%2Fwinforms)\r\n\r\nThank you for your time!\r\n\r\n### Discussion\r\n\r\nFor discussion, please go to https://github.com/dotnet/runtime/issues/36235.","Url":"https://github.com/dotnet/winforms/issues/3257","RelatedDescription":"Open issue \"Survey: repo contribution experience\" (#3257)"},{"Id":"615837417","IsPullRequest":true,"CreatedAt":"2020-05-11T13:34:09","Actor":"dotnet-maestro[bot]","Number":"3256","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200510.5\r\n- **Date Produced**: 5/10/2020 9:42 PM\r\n- **Commit**: 09ee4814cb669e4b703a458c63483fa75a47c58f\r\n- **Branch**: refs/heads/master\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20259.5 to 5.0.0-preview.5.20260.5\r\n  - **System.CodeDom**: from 5.0.0-preview.5.20259.5 to 5.0.0-preview.5.20260.5\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-preview.5.20259.5 to 5.0.0-preview.5.20260.5\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20259.5 to 5.0.0-preview.5.20260.5\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-preview.5.20259.5 to 5.0.0-preview.5.20260.5\r\n  - **Microsoft.NETCore.App**: from 5.0.0-preview.5.20259.5 to 5.0.0-preview.5.20260.5\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-preview.5.20259.5 to 5.0.0-preview.5.20260.5\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-preview.5.20259.5 to 5.0.0-preview.5.20260.5\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-preview.5.20259.5 to 5.0.0-preview.5.20260.5\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-preview.5.20259.5 to 5.0.0-preview.5.20260.5\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-preview.5.20259.5 to 5.0.0-preview.5.20260.5\r\n  - **System.Security.Permissions**: from 5.0.0-preview.5.20259.5 to 5.0.0-preview.5.20260.5\r\n  - **System.Windows.Extensions**: from 5.0.0-preview.5.20259.5 to 5.0.0-preview.5.20260.5\r\n  - **System.Drawing.Common**: from 5.0.0-preview.5.20259.5 to 5.0.0-preview.5.20260.5\r\n  - **System.Resources.Extensions**: from 5.0.0-preview.5.20259.5 to 5.0.0-preview.5.20260.5\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3256)","Url":"https://github.com/dotnet/winforms/pull/3256","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3256)"},{"Id":"615823073","IsPullRequest":true,"CreatedAt":"2020-05-11T13:07:06","Actor":"RussKie","Number":"3255","RawContent":null,"Title":"Disable deadlocking test","State":"closed","Body":"\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3255)","Url":"https://github.com/dotnet/winforms/pull/3255","RelatedDescription":"Closed or merged PR \"Disable deadlocking test\" (#3255)"},{"Id":"615816695","IsPullRequest":false,"CreatedAt":"2020-05-11T11:37:34","Actor":"RussKie","Number":"3254","RawContent":null,"Title":"Flaky test: `ProfessionalColorTable_ChangeUserPreferences_GetColor_ReturnsExpected` deadlock","State":"open","Body":"\r\n**Problem description:**\r\n\r\nAfter #3226 was merged, `ProfessionalColorTable_ChangeUserPreferences_GetColor_ReturnsExpected` tests started deadlocking in x86 mode that caused CI builds to fail again.\r\nI managed to reproduce the deadlock locally, though it took few attempts to do so.\r\n\r\nLooks like the test deadlocks on itself, there are no other user-code executed:\r\n![image](https://user-images.githubusercontent.com/4403806/81555995-eacaeb80-93cc-11ea-9af3-78e5f32ee5e5.png)\r\n\r\n![image](https://user-images.githubusercontent.com/4403806/81555946-ccfd8680-93cc-11ea-880a-7ef98bf4bc56.png)\r\n\r\n\r\n**Expected behavior:**\r\n\r\nThe tests work as expected.\r\n\r\n**Minimal repro:**\r\n\r\nA repro is bit convoluted. Unfortunately `build.cmd -test -platform x86` command doesn't appear to work unless `Winforms.sln` is configured for x86 platform (which breaks other modes). ","Url":"https://github.com/dotnet/winforms/issues/3254","RelatedDescription":"Open issue \"Flaky test: `ProfessionalColorTable_ChangeUserPreferences_GetColor_ReturnsExpected` deadlock\" (#3254)"},{"Id":"615767335","IsPullRequest":true,"CreatedAt":"2020-05-11T10:18:13","Actor":"hughbe","Number":"3253","RawContent":null,"Title":"Add FxCopAnalyzers","State":"open","Body":"## Proposed Changes\r\n- Add FxCopAnalyzers\r\n\r\nBaselined all the failures. Can go thru and re-enable them as we see fit\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3253)","Url":"https://github.com/dotnet/winforms/pull/3253","RelatedDescription":"Open PR \"Add FxCopAnalyzers\" (#3253)"},{"Id":"615478256","IsPullRequest":false,"CreatedAt":"2020-05-10T21:16:46","Actor":"hughbe","Number":"3252","RawContent":null,"Title":"AppActivate_ProcessId fails locally","State":"open","Body":"```\r\nA total of 1 test files matched the specified pattern.\r\n[xUnit.net 00:00:02.87]     Microsoft.VisualBasic.IntegrationTests.InteractionTests.AppActivate_ProcessId [FAIL]\r\n  X Microsoft.VisualBasic.IntegrationTests.InteractionTests.AppActivate_ProcessId [584ms]\r\n  Error Message:\r\n   System.FormatException : Index (zero based) must be greater than or equal to zero and less than the size of the argument list.\r\n  Stack Trace:\r\n     at System.Text.ValueStringBuilder.AppendFormatHelper(IFormatProvider provider, String format, ParamsArray args)\r\n   at System.String.FormatHelper(IFormatProvider provider, String format, ParamsArray args)\r\n   at System.String.Format(IFormatProvider provider, String format, Object[] args)\r\n   at Microsoft.VisualBasic._Interaction.AppActivateHelper(IntPtr hwndApp) in C:\\Users\\hughbe\\Documents\\GitHub\\winforms\\src\\Microsoft.VisualBasic.Forms\\src\\Microsoft\\VisualBasic\\Interaction.vb:line 204\r\n   at Microsoft.VisualBasic._Interaction.AppActivateByProcessId(Int32 ProcessId) in C:\\Users\\hughbe\\Documents\\GitHub\\winforms\\src\\Microsoft.VisualBasic.Forms\\src\\Microsoft\\VisualBasic\\Interaction.vb:line 137\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor, Boolean wrapExceptions)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at Microsoft.VisualBasic.Interaction.InvokeMethod(String methodName, Object[] args)\r\n   at Microsoft.VisualBasic.Interaction.AppActivate(Int32 ProcessId)\r\n   at Microsoft.VisualBasic.IntegrationTests.InteractionTests.AppActivate_ProcessId() in C:\\Users\\hughbe\\Documents\\GitHub\\winforms\\src\\Microsoft.VisualBasic\\tests\\IntegrationTests\\Microsoft.VisualBasic.IntegrationTests\\InteractionTests.cs:line 21\r\n```\r\n\r\nI suspect this might be causing tests to hang, because I ran some tests locally and I got a visual basic popup saying \"Message\" that didn't go away once the tests finished","Url":"https://github.com/dotnet/winforms/issues/3252","RelatedDescription":"Open issue \"AppActivate_ProcessId fails locally\" (#3252)"},{"Id":"615464902","IsPullRequest":false,"CreatedAt":"2020-05-10T19:59:01","Actor":"M-Lipin","Number":"3251","RawContent":null,"Title":"DataGridViewCell ComboBox causes application crash in some circumstances","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n.NET Core 5.0\r\nVersion: 5.0.100-alpha.1.20073.10\r\nCommit: 29f4d693a9\r\nRuntime Environment:\r\nOS Name: Windows\r\nOS Version: 10.0.18363\r\nOS Platform: Windows\r\nRID: win10-x64\r\nBase Path: C:\\Program Files\\dotnet\\sdk\\5.0.100-alpha1-05536\r\nHost (useful for support):\r\nVersion: 5.0.0-alpha.1.20072.3\r\nCommit: c3dc1fdfdc\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n<!-- Yes / No -->\r\nYes\r\n\r\n**Problem description:**\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\nSometimes DataGridViewComboBox cell causes application crash when changing ComboBox selected values.\r\n\r\n**Expected behavior:**\r\nNo crash.\r\n\r\n**Minimal repro:**\r\n- Create WinForms app with the DataGridView control and ComboBox cell and other cells with different control types.\r\n- Run app and change ComboBox cell selected value.\r\n\r\n**DevDiv issue:**\r\nhttps://devdiv.visualstudio.com/DevDiv/_workitems/edit/1071695","Url":"https://github.com/dotnet/winforms/issues/3251","RelatedDescription":"Open issue \"DataGridViewCell ComboBox causes application crash in some circumstances\" (#3251)"},{"Id":"615206346","IsPullRequest":true,"CreatedAt":"2020-05-09T16:00:31","Actor":"hughbe","Number":"3249","RawContent":null,"Title":"Cleanup image list","State":"open","Body":"## Proposed Changes\r\n- Cleanup image list\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3249)","Url":"https://github.com/dotnet/winforms/pull/3249","RelatedDescription":"Open PR \"Cleanup image list\" (#3249)"},{"Id":"616279637","IsPullRequest":false,"CreatedAt":"2020-04-27T20:15:46","Actor":"ben-page","Number":"3262","RawContent":null,"Title":"Support Legacy Windows Forms Designer with SDK-Style projects","State":"open","Body":"**Visual Studio Version**:\r\n16.5.4\r\n**Summary**:\r\nI have a large enterprise application based on Windows Forms. It's made up of four assemblies.\r\n\r\n1. DataAndBusinessLogic\r\n2. WinFormsSupport - references DataAndBusinessLogic\r\n3. ApplicationDataAndBusinessLogic - references DataAndBusinessLogic\r\n4. ApplicationUI - references DataBusinessLogic,WinFormsSupport, & ApplicationDataAndBusinessLogic \r\n\r\nWe'd like to add a fifth: a .NET Core Blazor project:\r\n5. ApplicationWebUi - references ApplicationDataAndBusinessLogic & DataAndBusinessLogic\r\n\r\nWe want to maintain the WinForms UI while developing the Blazor UI. And we want them to share the same Data and BI libraries.\r\n\r\nWe made this work (or build at least). But we can't get the Windows Forms Designer to work at all.\r\n\r\n**Steps to Reproduce**:\r\nI converted the supporting libraries (1 & 3) to SDK-Style projects and had compile both .NET Framework and .NET Core assemblies.\r\n```\r\n<TargetFrameworks>net48;netcoreapp3.1</TargetFrameworks>\r\n```\r\nIn the ApplicationUI project, the Windows Forms designer works for simply forms. But if that form references anything from the other assemblies, the Designer will load.\r\n\r\nI also tried converting the other projects to SDK-Style projects, but still targeting only the .NET Framework. I was also able to get this to compile, but it's now trying to use the .NET Core Windows Forms Designer, which obviously wont work. ","Url":"https://github.com/dotnet/winforms/issues/3262","RelatedDescription":"Open issue \"Support Legacy Windows Forms Designer with SDK-Style projects\" (#3262)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-05-14T05:30:51.0631369Z","RunDurationInMilliseconds":599}