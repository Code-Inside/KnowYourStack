{"Data":{"GitHub":{"Issues":[{"Id":"1827695320","IsPullRequest":true,"CreatedAt":"2023-07-29T22:13:54","Actor":"halgab","Number":"9609","RawContent":null,"Title":"Enable nullability in FileNameEditor and FolderNameEditor","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in `FileNameEditor`\r\n- Enable nullability in `FolderNameEditor`\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9609)","Url":"https://github.com/dotnet/winforms/pull/9609","RelatedDescription":"Open PR \"Enable nullability in FileNameEditor and FolderNameEditor\" (#9609)"},{"Id":"1827683136","IsPullRequest":true,"CreatedAt":"2023-07-29T21:42:35","Actor":"halgab","Number":"9608","RawContent":null,"Title":"Enable nullability in CursorEditor","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in `CursorEditor`\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9608)","Url":"https://github.com/dotnet/winforms/pull/9608","RelatedDescription":"Open PR \"Enable nullability in CursorEditor\" (#9608)"},{"Id":"1827471785","IsPullRequest":true,"CreatedAt":"2023-07-29T13:02:07","Actor":"halgab","Number":"9607","RawContent":null,"Title":"Enable nullability in UndoEngine","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in `UndoEngine` and add some helper methods to simplify the code\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9607)","Url":"https://github.com/dotnet/winforms/pull/9607","RelatedDescription":"Open PR \"Enable nullability in UndoEngine\" (#9607)"},{"Id":"1827456748","IsPullRequest":true,"CreatedAt":"2023-07-29T12:27:50","Actor":"dotnet-maestro[bot]","Number":"9606","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230728.11\r\n- **Date Produced**: July 29, 2023 9:20:26 AM UTC\r\n- **Commit**: d5c4a4e6b7e78d4dc9fc5ff560c802a4b901b2ed\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **System.CodeDom**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **System.Data.Odbc**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **System.Data.OleDb**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **System.IO.Ports**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **System.Management**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **System.Reflection.Context**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **System.Runtime.Caching**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **System.Speech**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **System.Text.Json**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-rc.1.23377.8 to 8.0.0-rc.1.23378.11][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/afed0a9f40...d5c4a4e6b7\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9606)","Url":"https://github.com/dotnet/winforms/pull/9606","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#9606)"},{"Id":"1827456562","IsPullRequest":true,"CreatedAt":"2023-07-29T12:01:56","Actor":"dotnet-maestro[bot]","Number":"9605","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20230728.2\r\n- **Date Produced**: July 28, 2023 7:50:47 PM UTC\r\n- **Commit**: 54dd37d44a2adfb8b966fac466c2ece40f8b20dd\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23377.1 to 8.0.0-beta.23378.2][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.23377.1 to 8.0.0-beta.23378.2][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.23377.1 to 8.0.0-beta.23378.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23377.1 to 8.0.0-beta.23378.2][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.23377.1 to 8.0.0-beta.23378.2][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23377.1 to 8.0.0-beta.23378.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/94ab279661...54dd37d44a\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9605)","Url":"https://github.com/dotnet/winforms/pull/9605","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#9605)"},{"Id":"1827257830","IsPullRequest":true,"CreatedAt":"2023-07-29T01:24:33","Actor":"Tanya-Solyanik","Number":"9604","RawContent":null,"Title":"IDE to report unused usings as errors. ","State":"open","Body":"CLI has warnings as errors enabled for most of the projects, thus the CLI build is less affected.\r\n\r\nBefore\r\n![image](https://github.com/dotnet/winforms/assets/15823268/67b87d8e-c394-47c3-a996-9de2c1ad9a48)\r\n\r\nAfter\r\n![image](https://github.com/dotnet/winforms/assets/15823268/a07ffe4a-be67-4d87-8ec6-f7219fb70383)\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9604)","Url":"https://github.com/dotnet/winforms/pull/9604","RelatedDescription":"Open PR \"IDE to report unused usings as errors. \" (#9604)"},{"Id":"1827099096","IsPullRequest":true,"CreatedAt":"2023-07-28T23:22:34","Actor":"JeremyKuhne","Number":"9603","RawContent":null,"Title":"Add ref to IOleClientSite in SetClientSite.","State":"closed","Body":"We were not adding a ref to the IOleClientSite pointer passed to SetClientSite, which was a mistake made when we moved this to directly utilizing COM pointers.\r\n\r\nFixes #9551\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9603)","Url":"https://github.com/dotnet/winforms/pull/9603","RelatedDescription":"Closed or merged PR \"Add ref to IOleClientSite in SetClientSite.\" (#9603)"},{"Id":"1827000539","IsPullRequest":true,"CreatedAt":"2023-07-28T20:37:07","Actor":"dreddy-work","Number":"9601","RawContent":null,"Title":"merge main into feature/9.0 branch","State":"closed","Body":"merge main into feature/9.0\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9601)","Url":"https://github.com/dotnet/winforms/pull/9601","RelatedDescription":"Closed or merged PR \"merge main into feature/9.0 branch\" (#9601)"},{"Id":"1827041390","IsPullRequest":false,"CreatedAt":"2023-07-28T20:18:01","Actor":"asamanta-tg","Number":"9602","RawContent":null,"Title":"Control fails to load with serialization issue when upgrading Framework project to .NET 6","State":"open","Body":"### .NET version\r\n\r\n.NET 6.0.20\r\n.NET 8.0.0 Preview 6\r\n\r\n\r\n### Did it work in .NET Framework?\r\n\r\nYes\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\n_No response_\r\n\r\n### Issue description\r\n\r\nHello,\r\n\r\nI wasn't sure if this is the correct repository to create this issue, but I have been running into a problem migrating a large WinForms .NET Framework project to .NET 6 and eventually .NET 8. \r\n\r\nMy first step was to convert all of the .csproj files into the SDK style format, which I used the upgrade-assistant dotnet tool to accomplish, and with some manual adjustments I was able to get everything converted and running. I am able to build my solution and get my project up and running with some visual artifacts that I will have to fix.\r\n\r\nNow my problem I am encountering has to do with the designer and how it stores public properties into the resource .resx file within my Controls and Forms. In .NET Framework, our public properties are being stored and binary serialized into the resx file for the form/control, but since the upgrade to .NET 6, most of them are failing to deserialize when opening the designer and are giving the following error.\r\n\r\n> Unable to find assembly 'mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]], mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'. \r\n> at System.Runtime.Serialization.Formatters.Binary.BinaryAssemblyInfo.GetAssembly()\r\n> at System.Runtime.Serialization.Formatters.Binary.ObjectReader.GetType(BinaryAssemblyInfo assemblyInfo, String name)\r\n> at System.Runtime.Serialization.Formatters.Binary.ObjectMap..ctor(String objectName, String[] memberNames, BinaryTypeEnum[] binaryTypeEnumA, Object[] typeInformationA, Int32[] memberAssemIds, ObjectReader objectReader, Int32 objectId, BinaryAssemblyInfo assemblyInfo, SizedArray assemIdToAssemblyTable)\r\n> at System.Runtime.Serialization.Formatters.Binary.BinaryParser.ReadObjectWithMapTyped(BinaryObjectWithMapTyped record)\r\n> at System.Runtime.Serialization.Formatters.Binary.BinaryParser.ReadObjectWithMapTyped(BinaryHeaderEnum binaryHeaderEnum)\r\n> at System.Runtime.Serialization.Formatters.Binary.BinaryParser.Run()\r\n> at System.Runtime.Serialization.Formatters.Binary.ObjectReader.Deserialize(BinaryParser serParser)\r\n> at System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(Stream serializationStream)\r\n> at Microsoft.DotNet.DesignTools.Utilities.Resources.ResXDataNode.GenerateObjectFromDataNodeInfo(DataNodeInfo dataNodeInfo, ITypeResolutionService typeResolver)\r\n> at Microsoft.DotNet.DesignTools.Utilities.Resources.ResXDataNode.GetValue(ITypeResolutionService typeResolver)\r\n> at Microsoft.DotNet.DesignTools.Utilities.Resources.ResXResourceReader.ParseDataNode(XmlTextReader reader, Boolean isMetaData)\r\n> at Microsoft.DotNet.DesignTools.Utilities.Resources.ResXResourceReader.ParseXml(XmlTextReader reader)\r\n\r\nLooking further into this, one example I came across was that our public property at design time is an empty List\\<int\\>, and upon further inspection of the resx file for the form which contains the value of the property differs between .NET Framework and .NET 6. The example below is from my sample application I have attached.\r\n\r\n```\r\n<!-- .NET Framework -->\r\n<data name=\"userControl11.CollectionInt\" mimetype=\"application/x-microsoft.net.object.binary.base64\">\r\n    <value>\r\n        AAEAAAD/////AQAAAAAAAAAMAgAAAJoBbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1u\r\n        ZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0sIG1zY29ybGliLCBWZXJzaW9u\r\n        PTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OQUB\r\n        AAAAL1N5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkxpc3RgMVtbU3lzdGVtLkludDMyAwAAAAZfaXRl\r\n        bXMFX3NpemUIX3ZlcnNpb24HAAAICAgCAAAACQMAAAAAAAAAAAAAAA8DAAAAAAAAAAgL\r\n    </value>\r\n</data>\r\n```\r\n```\r\n<!-- .NET 6 -->\r\n<data name=\"userControl11.CollectionInt\" mimetype=\"application/x-microsoft.net.object.binary.base64\">\r\n    <value>\r\n        AAEAAAD/////AQAAAAAAAAAEAQAAAH5TeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5MaXN0YDFbW1N5\r\n        c3RlbS5JbnQzMiwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJs\r\n        aWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5XV0DAAAABl9pdGVtcwVfc2l6ZQhfdmVyc2lvbgcAAAgI\r\n        CAkCAAAAAAAAAAAAAAAPAgAAAAAAAAAICw==\r\n    </value>\r\n</data>\r\n```\r\n\r\nIt looks like the binary serializer has changed between these two frameworks, but I don't believe that is the case. I have tried taking the base64-encoded string generated by the .NET Framework designer and tried to manually deserialize it with code  within my .NET Framework project and I encounter the same error. I do not encounter the error with the .NET 6 version of the base64-encoded binary string in either .NET Framework or .NET 6. I believe the designer in .NET Framework is adding something else that cannot be deserialized without going through the resources.GetObject() method within the designer, and that will be a problem for anyone going through the same upgrade process as myself.\r\n\r\nI can manually fix most of these with a find/replace using the sample project I created since they are empty lists in our case, but we do have some where some data has been manually inputted into the collection, so doing a simple find/replace isn't going to work here.\r\n\r\nThere is a vaguely similar issue that I found that could be related to this problem. https://github.com/dotnet/winforms/issues/8584\r\n\r\n### Steps to reproduce\r\n\r\nI will attach a sample Visual Studio solution demonstrating this issue. Inside of the solution there will be 4 WinForms projects:\r\n[ResXPropertySerialization.zip](https://github.com/dotnet/winforms/files/12197916/ResXPropertySerialization.zip)\r\n- one with the old csproj format using .NET Framework 4.8\r\n- one that was an old csproj format using.NET Framework 4.8 but upgraded with upgrade-assistant to .NET 6\r\n- one that is a new SDK csproj format using 'net48'\r\n- one that is a new SDK csproj format using 'net6.0-windows'\r\n\r\nEach project has one Form and one Control, where the Form has the control inside of it. All of the projects open up in the respected designer (in/out of process) with the exception of the one that was converted using upgrade-assistant, which throws the error.\r\n\r\nYou can replicate this error with my sample application by updating the third project that is the SDK style csproj targetting 'net48' and changing that to 'net6.0-windows', building the solution, then trying to open the form with the designer in the project.","Url":"https://github.com/dotnet/winforms/issues/9602","RelatedDescription":"Open issue \"Control fails to load with serialization issue when upgrading Framework project to .NET 6\" (#9602)"},{"Id":"1825705266","IsPullRequest":true,"CreatedAt":"2023-07-28T19:37:09","Actor":"gpetrou","Number":"9593","RawContent":null,"Title":"Enable nullability in DataGridViewSelectedCellCollection","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in DataGridViewSelectedCellCollection.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9593)","Url":"https://github.com/dotnet/winforms/pull/9593","RelatedDescription":"Closed or merged PR \"Enable nullability in DataGridViewSelectedCellCollection\" (#9593)"},{"Id":"1825707674","IsPullRequest":true,"CreatedAt":"2023-07-28T19:36:37","Actor":"gpetrou","Number":"9594","RawContent":null,"Title":"Enable nullability in RowArrayList","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in RowArrayList.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9594)","Url":"https://github.com/dotnet/winforms/pull/9594","RelatedDescription":"Closed or merged PR \"Enable nullability in RowArrayList\" (#9594)"},{"Id":"1826928273","IsPullRequest":true,"CreatedAt":"2023-07-28T19:08:26","Actor":"dotnet-bot","Number":"9600","RawContent":null,"Title":"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 2231490","State":"closed","Body":"This is the pull request automatically created by the OneLocBuild task in the build process to check-in localized files generated based upon translation source files (.lcl files) handed-back from the downstream localization pipeline. If there are issues in translations, visit https://aka.ms/icxLocBug and log bugs for fixes. The OneLocBuild wiki is https://aka.ms/onelocbuild and the localization process in general is documented at https://aka.ms/AllAboutLoc.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9600)","Url":"https://github.com/dotnet/winforms/pull/9600","RelatedDescription":"Closed or merged PR \"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 2231490\" (#9600)"},{"Id":"1826306069","IsPullRequest":true,"CreatedAt":"2023-07-28T18:03:43","Actor":"dotnet-maestro[bot]","Number":"9597","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20230727.1\r\n- **Date Produced**: July 27, 2023 3:51:57 PM UTC\r\n- **Commit**: 94ab279661f45a3bc9f6e86a5d52718ed80cd318\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23376.1 to 8.0.0-beta.23377.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.23376.1 to 8.0.0-beta.23377.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.23376.1 to 8.0.0-beta.23377.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23376.1 to 8.0.0-beta.23377.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.23376.1 to 8.0.0-beta.23377.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23376.1 to 8.0.0-beta.23377.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/9c133f0206...94ab279661\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9597)","Url":"https://github.com/dotnet/winforms/pull/9597","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#9597)"},{"Id":"1826712030","IsPullRequest":false,"CreatedAt":"2023-07-28T16:21:47","Actor":"decobeirne","Number":"9599","RawContent":null,"Title":"Support HelpProvider HelpKeyword for local HTML files","State":"open","Body":"### Background and motivation\n\nWhere `HelpNamespace` is set to a local HTML file, e.g. a HTML file that is bundled with the application (surely a common use case?), a HTML anchor that is specified using `SetHelpKeyword` will not be shown when pressing F1.\r\n\r\nIn `Help::ShowHTMLFile`, the URI is constructed correctly to include the keyword, `file = new Uri($\"{file}#{stringParam}\");`, but the URI is then presented using:\r\n\r\n```\r\nPInvoke.ShellExecute(handle.Handle, lpOperation: null, file.ToString(), lpParameters: null, lpDirectory: null, SHOW_WINDOW_CMD.SW_NORMAL);\r\n```\r\n\r\nFor a local HTML file, this will throw away the anchor. However, at this point we already know that the URI is a HTML file, therefore this command could be updated to use the default browser to open the URI.\n\n### API Proposal\n\nIn `Help`, first determine the default browser, e.g. by reading the registry key:\r\n\r\n```\r\nRegistry.CurrentUser.OpenSubKey(\"Software\\\\Microsoft\\\\Windows\\\\CurrentVersion\\\\Explorer\\\\FileExts\\\\.htm\\\\UserChoice\", false);\r\n```\r\n\r\nThen in `Help::ShowHTMLFile`, update the `ShellExecute` command to use the default browser to open the URI:\r\n\r\n```\r\nPInvoke.ShellExecute(handle.Handle, lpOperation: null, defaultBrowser, lpParameters: file.ToString(), lpDirectory: null, SHOW_WINDOW_CMD.SW_NORMAL);\r\n```\r\n\n\n### API Usage\n\nNo change\n\n### Alternative Designs\n\n_No response_\n\n### Risks\n\n_No response_\n\n### Will this feature affect UI controls?\n\nNo","Url":"https://github.com/dotnet/winforms/issues/9599","RelatedDescription":"Open issue \"Support HelpProvider HelpKeyword for local HTML files\" (#9599)"},{"Id":"1826307296","IsPullRequest":true,"CreatedAt":"2023-07-28T12:23:31","Actor":"dotnet-maestro[bot]","Number":"9598","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230727.8\r\n- **Date Produced**: July 28, 2023 2:07:35 AM UTC\r\n- **Commit**: afed0a9f40d51e51c95dd0842913d7caaf5a9beb\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **System.CodeDom**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **System.Data.Odbc**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **System.Data.OleDb**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **System.IO.Ports**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **System.Management**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **System.Reflection.Context**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **System.Runtime.Caching**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **System.Speech**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **System.Text.Json**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-rc.1.23376.11 to 8.0.0-rc.1.23377.8][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/bcb608e3d2...afed0a9f40\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9598)","Url":"https://github.com/dotnet/winforms/pull/9598","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#9598)"},{"Id":"1823824163","IsPullRequest":true,"CreatedAt":"2023-07-28T08:47:53","Actor":"LeafShi1","Number":"9579","RawContent":null,"Title":"Add PrintDialogDesigner.cs","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nRelated to #4908 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Port MonthCalendarDesigner to runtime \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- PrintDialogDesigner can be designed in runtime\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\nThe default value of the property \"UseEXDialog\" is false\r\n![image](https://github.com/dotnet/winforms/assets/132890443/8c4d18e3-3f29-441b-b862-a69d704649ce)\r\n\r\n### After\r\nThe default value of the property \"UseEXDialog\" is true\r\n![image](https://github.com/dotnet/winforms/assets/132890443/6b151d71-9f4d-410a-992f-5a1b0e9338f9)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manually (added PrintDialogDesigner to DemoConsole test app)\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .Net 8.0.100-rc.1.23375.11\r\n- Windows 10 Enterprise 22H2\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9579)","Url":"https://github.com/dotnet/winforms/pull/9579","RelatedDescription":"Closed or merged PR \"Add PrintDialogDesigner.cs\" (#9579)"},{"Id":"1825990409","IsPullRequest":false,"CreatedAt":"2023-07-28T08:45:04","Actor":"John-Qiao","Number":"9596","RawContent":null,"Title":"System.ArgumentOutOfRangeException: Value of '-22' is not valid for 'LargeChange'.","State":"open","Body":"### .NET version\n\n8.0.100-rc.1.23377.5\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, regression after PR https://github.com/dotnet/winforms/pull/9477\n\n### Issue description\n\n'LargeChange' must be greater than or equal to 0. But the 'LargeChange' value is '-22' in below test cases scneiaros:\r\n\r\n```\r\n<Scenario method=\"get_RestoreBounds()\" name=\"get_RestoreBounds()\">\r\n            Uncaught exception or assertion failure: System.ArgumentOutOfRangeException\r\nSystem.ArgumentOutOfRangeException: Value of '-22' is not valid for 'LargeChange'. 'LargeChange' must be greater than or equal to 0. (Parameter 'value')\r\n   at System.Windows.Forms.ScrollBar.set_LargeChange(Int32 value)\r\n   at System.Windows.Forms.PrintPreviewControl.&lt;LayoutScrollBars&gt;g__AdjustScroll|105_1(ScrollBar scrollBar, Int32 virtualDimension, Int32 displayDimension, Int32 offset)\r\n   at System.Windows.Forms.PrintPreviewControl.LayoutScrollBars()\r\n   at System.Windows.Forms.PrintPreviewControl.InvalidateLayout()\r\n   at System.Windows.Forms.PrintPreviewControl.OnResize(EventArgs eventargs)\r\n   at System.Windows.Forms.Control.OnSizeChanged(EventArgs e)\r\n   at System.Windows.Forms.Control.UpdateBounds(Int32 x, Int32 y, Int32 width, Int32 height, Int32 clientWidth, Int32 clientHeight)\r\n   at System.Windows.Forms.Control.UpdateBounds()\r\n   at System.Windows.Forms.Control.WmWindowPosChanged(Message&amp; m)\r\n   at System.Windows.Forms.Control.WndProc(Message&amp; m)\r\n   at System.Windows.Forms.Control.ControlNativeWindow.WndProc(Message&amp; m)\r\n   at System.Windows.Forms.NativeWindow.Callback(HWND hWnd, MessageId msg, WPARAM wparam, LPARAM lparam)\r\n            <Result type=\"Fail\">\r\n                <ResultComments>\r\n                    Uncaught exception or assertion failure: System.ArgumentOutOfRangeException\r\n                </ResultComments>\r\n            </Result>\r\n</Scenario>\r\n\r\n<Scenario method=\"set_RestoreBounds(Rectangle value)\" name=\"set_RestoreBounds(Rectangle value)\">\r\n            Uncaught exception or assertion failure: System.ArgumentOutOfRangeException\r\nSystem.ArgumentOutOfRangeException: Value of '-22' is not valid for 'LargeChange'. 'LargeChange' must be greater than or equal to 0. (Parameter 'value')\r\n   at System.Windows.Forms.ScrollBar.set_LargeChange(Int32 value)\r\n   at System.Windows.Forms.PrintPreviewControl.&lt;LayoutScrollBars&gt;g__AdjustScroll|105_1(ScrollBar scrollBar, Int32 virtualDimension, Int32 displayDimension, Int32 offset)\r\n   at System.Windows.Forms.PrintPreviewControl.LayoutScrollBars()\r\n   at System.Windows.Forms.PrintPreviewControl.InvalidateLayout()\r\n   at System.Windows.Forms.PrintPreviewControl.OnResize(EventArgs eventargs)\r\n   at System.Windows.Forms.Control.OnSizeChanged(EventArgs e)\r\n   at System.Windows.Forms.Control.UpdateBounds(Int32 x, Int32 y, Int32 width, Int32 height, Int32 clientWidth, Int32 clientHeight)\r\n   at System.Windows.Forms.Control.UpdateBounds()\r\n   at System.Windows.Forms.Control.WmWindowPosChanged(Message&amp; m)\r\n   at System.Windows.Forms.Control.WndProc(Message&amp; m)\r\n   at System.Windows.Forms.Control.ControlNativeWindow.WndProc(Message&amp; m)\r\n   at System.Windows.Forms.NativeWindow.Callback(HWND hWnd, MessageId msg, WPARAM wparam, LPARAM lparam)\r\n            <Result type=\"Fail\">\r\n                <ResultComments>\r\n                    Uncaught exception or assertion failure: System.ArgumentOutOfRangeException\r\n                </ResultComments>\r\n            </Result>\r\n</Scenario>\r\n\r\n<Scenario method=\"set_WindowState(FormWindowState value)\" name=\"set_WindowState(FormWindowState value)\">\r\n            Setting WindowState from Normal to Minimized\r\n            Uncaught exception or assertion failure: System.ArgumentOutOfRangeException\r\nSystem.ArgumentOutOfRangeException: Value of '-22' is not valid for 'LargeChange'. 'LargeChange' must be greater than or equal to 0. (Parameter 'value')\r\n   at System.Windows.Forms.ScrollBar.set_LargeChange(Int32 value)\r\n   at System.Windows.Forms.PrintPreviewControl.&lt;LayoutScrollBars&gt;g__AdjustScroll|105_1(ScrollBar scrollBar, Int32 virtualDimension, Int32 displayDimension, Int32 offset)\r\n   at System.Windows.Forms.PrintPreviewControl.LayoutScrollBars()\r\n   at System.Windows.Forms.PrintPreviewControl.InvalidateLayout()\r\n   at System.Windows.Forms.PrintPreviewControl.OnResize(EventArgs eventargs)\r\n   at System.Windows.Forms.Control.OnSizeChanged(EventArgs e)\r\n   at System.Windows.Forms.Control.UpdateBounds(Int32 x, Int32 y, Int32 width, Int32 height, Int32 clientWidth, Int32 clientHeight)\r\n   at System.Windows.Forms.Control.UpdateBounds()\r\n   at System.Windows.Forms.Control.WmWindowPosChanged(Message&amp; m)\r\n   at System.Windows.Forms.Control.WndProc(Message&amp; m)\r\n   at System.Windows.Forms.Control.ControlNativeWindow.WndProc(Message&amp; m)\r\n   at System.Windows.Forms.NativeWindow.Callback(HWND hWnd, MessageId msg, WPARAM wparam, LPARAM lparam)\r\n            <Result type=\"Fail\">\r\n                <ResultComments>\r\n                    Uncaught exception or assertion failure: System.ArgumentOutOfRangeException\r\n                </ResultComments>\r\n            </Result>\r\n</Scenario>\r\n```\r\n\n\n### Steps to reproduce\n\n1. Open the project [XPrintPreviewDialog.zip](https://github.com/dotnet/winforms/files/12192285/XPrintPreviewDialog.zip) in VS.\r\n2. Build and run it.\r\n3. Check the results.log in XPrintPreviewDialog\\bin\\Debug\\net8.0-windows folder.","Url":"https://github.com/dotnet/winforms/issues/9596","RelatedDescription":"Open issue \"System.ArgumentOutOfRangeException: Value of '-22' is not valid for 'LargeChange'.\" (#9596)"},{"Id":"1825988159","IsPullRequest":true,"CreatedAt":"2023-07-28T08:43:36","Actor":"LeafShi1","Number":"9595","RawContent":null,"Title":"Add PrintDialogDesigner.cs","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nRelated to #4908 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Port MonthCalendarDesigner to runtime\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- PrintDialogDesigner can be designed in runtime\r\n\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n-Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nThe default value of the property \"UseEXDialog\" is false\r\n![image](https://github.com/dotnet/winforms/assets/132890443/182ecfe1-30fa-47f1-90a0-38d643d6f2b7)\r\n\r\n\r\n### After\r\n\r\nThe default value of the property \"UseEXDialog\" is true\r\n![image](https://github.com/dotnet/winforms/assets/132890443/db063665-a4c8-481f-9b67-39c362e6e657)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manually (added PrintDialogDesigner to DemoConsole test app)\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .Net 8.0.100-rc.1.23375.11\r\n- Windows 10 Enterprise 22H2\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9595)","Url":"https://github.com/dotnet/winforms/pull/9595","RelatedDescription":"Open PR \"Add PrintDialogDesigner.cs\" (#9595)"},{"Id":"1824151568","IsPullRequest":false,"CreatedAt":"2023-07-28T08:08:08","Actor":"tbambuch","Number":"9580","RawContent":null,"Title":"Font size of context menu items does not update when screen dpi changes","State":"closed","Body":"### .NET version\r\n\r\n8.0\r\n\r\n### Did it work in .NET Framework?\r\n\r\nYes\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\n_No response_\r\n\r\n### Issue description\r\n\r\nThe font of contextmenu items will does not update after the system dpi scaling is changed if the contextmenu has already been opened before, the app must be restarted to take effect.\r\n\r\n![image](https://github.com/dotnet/winforms/assets/3384955/683b4c4f-9a50-4c51-87d6-12282f6e3fc8)\r\n![image](https://github.com/dotnet/winforms/assets/3384955/79ca25ac-1df8-4ed8-abc4-ba19c3374d2b)\r\n[DpiTest.zip](https://github.com/dotnet/winforms/files/12182569/DpiTest.zip)\r\n\r\n\r\n### Steps to reproduce\r\n\r\nRun the attached sample. Open the contextmenu, then change the dpi scaling in Windows, app still running. The font of the button is correctly changed, but the contextmenu items still have the original font.\r\nIn my case I change from 150% (default) to 200%, only a single monitor attached. Windows 11\r\nDoes not work in .net7, either","Url":"https://github.com/dotnet/winforms/issues/9580","RelatedDescription":"Closed issue \"Font size of context menu items does not update when screen dpi changes\" (#9580)"},{"Id":"1824812870","IsPullRequest":true,"CreatedAt":"2023-07-28T00:19:55","Actor":"gpetrou","Number":"9587","RawContent":null,"Title":"Enable nullability in RowComparer","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in RowComparer.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9587)","Url":"https://github.com/dotnet/winforms/pull/9587","RelatedDescription":"Closed or merged PR \"Enable nullability in RowComparer\" (#9587)"},{"Id":"1825328192","IsPullRequest":true,"CreatedAt":"2023-07-27T23:56:28","Actor":"dotnet-bot","Number":"9591","RawContent":null,"Title":"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 2230934","State":"closed","Body":"This is the pull request automatically created by the OneLocBuild task in the build process to check-in localized files generated based upon translation source files (.lcl files) handed-back from the downstream localization pipeline. If there are issues in translations, visit https://aka.ms/icxLocBug and log bugs for fixes. The OneLocBuild wiki is https://aka.ms/onelocbuild and the localization process in general is documented at https://aka.ms/AllAboutLoc.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9591)","Url":"https://github.com/dotnet/winforms/pull/9591","RelatedDescription":"Closed or merged PR \"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 2230934\" (#9591)"},{"Id":"1825336288","IsPullRequest":true,"CreatedAt":"2023-07-27T23:56:21","Actor":"dotnet-bot","Number":"9592","RawContent":null,"Title":"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 2230946","State":"closed","Body":"This is the pull request automatically created by the OneLocBuild task in the build process to check-in localized files generated based upon translation source files (.lcl files) handed-back from the downstream localization pipeline. If there are issues in translations, visit https://aka.ms/icxLocBug and log bugs for fixes. The OneLocBuild wiki is https://aka.ms/onelocbuild and the localization process in general is documented at https://aka.ms/AllAboutLoc.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9592)","Url":"https://github.com/dotnet/winforms/pull/9592","RelatedDescription":"Closed or merged PR \"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 2230946\" (#9592)"},{"Id":"1825097288","IsPullRequest":true,"CreatedAt":"2023-07-27T22:22:41","Actor":"JeremyKuhne","Number":"9588","RawContent":null,"Title":"Guard against re-entry in ActiveXImpl / AgileComPointer.","State":"closed","Body":"Releasing a COM interface can lead to a call back. We need to clear fields before releasing so we don't attempt to release twice.\r\n\r\nFixes #9551 \r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9588)","Url":"https://github.com/dotnet/winforms/pull/9588","RelatedDescription":"Closed or merged PR \"Guard against re-entry in ActiveXImpl / AgileComPointer.\" (#9588)"},{"Id":"1825295571","IsPullRequest":true,"CreatedAt":"2023-07-27T22:15:54","Actor":"dreddy-work","Number":"9590","RawContent":null,"Title":"Update loc resources for keyboard buttons text.","State":"closed","Body":"\r\nThis change is ran through [pipeline ](https://dev.azure.com/dnceng/internal/_build/results?buildId=2230876&view=results) and results are validated with help of loc team.\r\n\r\nLocbuild task isnot recognizing the `ll-CC` format either.  \n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9590)","Url":"https://github.com/dotnet/winforms/pull/9590","RelatedDescription":"Closed or merged PR \"Update loc resources for keyboard buttons text.\" (#9590)"},{"Id":"1825176278","IsPullRequest":true,"CreatedAt":"2023-07-27T20:35:43","Actor":"KlausLoeffelmann","Number":"9589","RawContent":null,"Title":"Remove RequiresPreviewFeatures attributes from Command Binding APIs","State":"open","Body":"We introduce Command Binding APIs under Preview in .NET 7 and aimed to remove this in the .NET 8 timeframe, when it did not cause any breaking changes. \r\n\r\nhttps://github.com/dotnet/winforms/pull/7143\r\n\r\nWe got some feedback, but mainly asking to invest further into data biding, like simplifying Converters or allow automatic marshalling from other threads to the UI thread when updating controls from the data sources. We want to address that in the .NET 9 release.\r\n\r\nWe found some issues in the Designer though, but they were due to the fact that the Out-Of-Proc Designer couldn't handle preview-assemblies per se and had nothing to do with the new APIs themselves. In so far, having those new APIs attributed with `RequiresPreviewFeatures` helped us to make the Designer more robust and able to deal with binding to properties in the runtime, which are attributed to be under preview.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9589)","Url":"https://github.com/dotnet/winforms/pull/9589","RelatedDescription":"Open PR \"Remove RequiresPreviewFeatures attributes from Command Binding APIs\" (#9589)"},{"Id":"1824729685","IsPullRequest":false,"CreatedAt":"2023-07-27T16:17:46","Actor":"radio42","Number":"9585","RawContent":null,"Title":"Form's parent window is placed to the very back, when a child is hidden","State":"open","Body":"### .NET version\n\nAll, e.g. .Net 4.7x or .Net 4.8.x\r\n\r\nSeems to be a general issue inside the Windows API?\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo.\n\n### Issue description\n\nA form's parent window is hidden after a child form is placed on the form which is opened via the .Show(this) methid and the child form opens another child form, which both are then hidden.\r\n\r\nWhy this demo? \r\nIt is very obvious an very often the case, that you open a 3rd 'form' from within a child from, which was shown from a parent form.\r\nE.g. many UI vendors, like DevExpress or Syncfusion use this to implement popup container controls.\r\nWhenever you use such control within a modeless dialog, this odd behavior occurs and the parent form becomes invisible.\r\n\r\nThis behavior affects millions of users world wide, that's why I see this pretty critical and urgent.\r\nI already addressed this to the above mentioned UI vendors and both told me to raise a ticket here.\n\n### Steps to reproduce\n\n[T1179595.zip](https://github.com/dotnet/winforms/files/12185511/T1179595.zip)\r\n\r\n1. Run the attached project.\r\n2. Click on the \"Show(this)\" item.\r\n3. In the child form press ENTER to another \"PopupForm\".\r\n4. Now press ESC twice.\r\n\r\nResult: The main (root parent) form is hidden.\r\nExpected: The main (root parent) stays visbible of course.\r\n\r\nWhen you use the \"Show()\" method without a parent reference, the issue does not occur.","Url":"https://github.com/dotnet/winforms/issues/9585","RelatedDescription":"Open issue \"Form's parent window is placed to the very back, when a child is hidden\" (#9585)"},{"Id":"1824225596","IsPullRequest":true,"CreatedAt":"2023-07-27T12:28:14","Actor":"dotnet-maestro[bot]","Number":"9583","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230726.11\r\n- **Date Produced**: July 27, 2023 9:08:26 AM UTC\r\n- **Commit**: bcb608e3d21344a0bb7c3399f060143504bbf475\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **System.CodeDom**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **System.Data.Odbc**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **System.Data.OleDb**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **System.IO.Ports**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **System.Management**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **System.Reflection.Context**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **System.Runtime.Caching**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **System.Speech**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **System.Text.Json**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-rc.1.23375.8 to 8.0.0-rc.1.23376.11][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/d389ab955d...bcb608e3d2\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9583)","Url":"https://github.com/dotnet/winforms/pull/9583","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#9583)"},{"Id":"1824224399","IsPullRequest":true,"CreatedAt":"2023-07-27T12:27:28","Actor":"dotnet-maestro[bot]","Number":"9582","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20230726.1\r\n- **Date Produced**: July 26, 2023 5:33:48 PM UTC\r\n- **Commit**: 9c133f0206c655b7a12a045b1de7c76804cde3fb\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23371.1 to 8.0.0-beta.23376.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.23371.1 to 8.0.0-beta.23376.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.23371.1 to 8.0.0-beta.23376.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23371.1 to 8.0.0-beta.23376.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.23371.1 to 8.0.0-beta.23376.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23371.1 to 8.0.0-beta.23376.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/602351e368...9c133f0206\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9582)","Url":"https://github.com/dotnet/winforms/pull/9582","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#9582)"},{"Id":"1824230666","IsPullRequest":false,"CreatedAt":"2023-07-27T12:06:00","Actor":"v-elnovikova","Number":"9584","RawContent":null,"Title":"PrintPreviewControl lacks UI Automation Scroll pattern support","State":"open","Body":"### .NET version\n\n.NET SDK 8.0.0-rc.1.23371.3\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, regression after PR #9477 \n\n### Issue description\n\nAfter replacing native scrolling with .NET ScrollBars in PR #9477 PrintPreviewControl no longer supports Scroll pattern.\r\n\r\n**Before PR #9477**\r\nNarrator was announcing scroll percent of PrintPreviewControl:\r\n\r\n![PrintPreviewControl_Narrator_before_PR_9477](https://github.com/dotnet/winforms/assets/113603457/dca29359-08d6-4fc9-af22-b504d656c91f)\r\n\r\nScrollPattern was supported:\r\n![PrintPreviewControl_before_PR_9477](https://github.com/dotnet/winforms/assets/113603457/ddd5ea0d-4c23-435e-96ef-4672780bbd81)\r\n\r\n**After PR #9477**\r\nNarrator does not announce scroll percent:\r\n![PrintPreviewControl_Narrator_after_PR_9477](https://github.com/dotnet/winforms/assets/113603457/ee3eebe4-6ca7-4117-8a5a-6a21ab6ca176)\r\n\r\nScrollPattern is not supported:\r\n![PrintPreviewControl_after_PR_9477](https://github.com/dotnet/winforms/assets/113603457/73ce80ef-7c37-4fa8-9559-8de5f32604e5)\r\n\r\n\n\n### Steps to reproduce\n\n1. Create .NET project with PrintPreviewControl and PrintDocument, or run Accessibility_Core_App.\r\n2. Run Narrator and switch focus to PrintPreviewControl.","Url":"https://github.com/dotnet/winforms/issues/9584","RelatedDescription":"Open issue \"PrintPreviewControl lacks UI Automation Scroll pattern support\" (#9584)"},{"Id":"1824192106","IsPullRequest":false,"CreatedAt":"2023-07-27T11:40:31","Actor":"tbambuch","Number":"9581","RawContent":null,"Title":"Font size of a UserControl in ToolStripControlHost is wrong after changing system dpi","State":"open","Body":"### .NET version\n\n8.0\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\nThe Font of UserControl in ToolStripControlHost is wrong after the system dpi scaling is changed if the contextmenu has never been opened before\r\n\r\n![image](https://github.com/dotnet/winforms/assets/3384955/e2a23a17-2222-483e-ad80-bf6196b060ff)\r\n\n\n### Steps to reproduce\n\nRun the attached sample, do not open the contextmenu and change the dpi settings in Windows, app still running. The correct font is set for the form and for menuitems, but the Font for a UserControl under ToolStripControlHost is wrong\r\nIn my case I change from 150% (default) to 125%, only a single monitor attached. Windows 11","Url":"https://github.com/dotnet/winforms/issues/9581","RelatedDescription":"Open issue \"Font size of a UserControl in ToolStripControlHost is wrong after changing system dpi\" (#9581)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-07-30T03:30:27.7452427Z","RunDurationInMilliseconds":530}