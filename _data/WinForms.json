{"Data":{"GitHub":{"Issues":[{"Id":"1872748335","IsPullRequest":false,"CreatedAt":"2023-08-30T01:48:30","Actor":"KlausLoeffelmann","Number":"9807","RawContent":null,"Title":"Refactor VB's Application Framework Network Class","State":"open","Body":"The class [`Microsoft.VisualBasic.Devices.Network`](https://github.com/dotnet/winforms/blob/e47bebd2e1c8ce466f16ab0d40d0d7d60d5dcffa/src/Microsoft.VisualBasic.Forms/src/Microsoft/VisualBasic/Devices/Network.vb#L37), which is part of the Visual Basic Application Framework, is based on the obsoleted [`WebClient`](https://learn.microsoft.com/en-us/dotnet/api/system.net.webclient?view=net-7.0) class.\r\n\r\nWe need to modernize this part of the Application Framework to avoid breaking changes, should the `WebClient` class no longer be included in future versions of .NET.\r\n\r\nThis should be done in the .NET 9-time frame.\r\n\r\nThis also addresses https://github.com/dotnet/winforms/issues/3936.\r\n\r\nHere is a potential general approach, which uses `HttpClient` instead of `WebClient`.\r\n(!not tested, and my last Web-dev-experiences is quite a while, so, please double-check me here!)\r\n\r\n```VB\r\nImports System.IO\r\nImports System.Net\r\nImports System.Net.Http\r\n\r\nPublic Class Network\r\n\r\n    Public Async Function DownloadFileWithCredentialsAndProgressAsAStartingPointAsync(\r\n        url As String,\r\n        destinationPath As String,\r\n        credentials As NetworkCredential,\r\n        progress As IProgress(Of Double)) As Task\r\n\r\n        Dim handler As New HttpClientHandler() With\r\n        {\r\n            .Credentials = credentials\r\n        }\r\n\r\n        Using httpClient As New HttpClient(handler)\r\n\r\n            Dim response = Await httpClient.GetAsync(url, HttpCompletionOption.ResponseHeadersRead)\r\n            Dim contentLength = response.Content.Headers.ContentLength\r\n\r\n            Using responseStream As Stream = Await response.Content.ReadAsStreamAsync()\r\n                Using fileStream As New FileStream(destinationPath, FileMode.Create, FileAccess.Write, FileShare.None)\r\n\r\n                    Dim buffer(8191) As Byte\r\n                    Dim totalBytesRead As Long = 0\r\n                    Dim bytesRead As Integer\r\n\r\n                    While (Await responseStream.ReadAsync(buffer, 0, buffer.Length)) > 0\r\n                        Await fileStream.WriteAsync(buffer, 0, bytesRead)\r\n                        totalBytesRead += bytesRead\r\n\r\n                        If contentLength.HasValue Then\r\n                            Dim percentage As Double = (CDbl(totalBytesRead) / CDbl(contentLength.Value)) * 100\r\n                            progress.Report(percentage)\r\n                        End If\r\n\r\n                    End While\r\n                End Using\r\n            End Using\r\n        End Using\r\n    End Function\r\nEnd Class\r\n```\r\n","Url":"https://github.com/dotnet/winforms/issues/9807","RelatedDescription":"Open issue \"Refactor VB's Application Framework Network Class\" (#9807)"},{"Id":"1866275138","IsPullRequest":true,"CreatedAt":"2023-08-30T01:26:59","Actor":"SimonZhao888","Number":"9782","RawContent":null,"Title":"Make sure the Label Edit in ListView has correct position in accessibility tree ","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #7263\r\n\r\n\r\n## Proposed changes\r\n\r\n- Add a variable to the ListView to record the ListViewSubItem to which the Label Edit belongs.\r\n- Remove the code related to Label Edit in ListViewAccessibleObject class.\r\n- Adjust the ListViewSubItemAccessibleObject and ListViewLabelEditAccessibleObject classes so that the Label Edit will be displayed under the ListViewSubItem node when constructing the tree structure.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- The control of LabelEdit will show under ListViewSubItem.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\nLabel Edit is at the same level as the List item and is displayed under the root node of the List.\r\n![image](https://github.com/dotnet/winforms/assets/133954995/619a5fa0-7f23-4687-a299-fc0e381e8cbf)\r\n\r\n### After\r\nLabel Edit displays under the edited cell.\r\n![image](https://github.com/dotnet/winforms/assets/133954995/8b878aec-9a77-4fff-a3ee-a5786fc64d9f)\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual (using inspect )\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- 8.0.100-preview.7.23376.3\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9782)","Url":"https://github.com/dotnet/winforms/pull/9782","RelatedDescription":"Closed or merged PR \"Make sure the Label Edit in ListView has correct position in accessibility tree \" (#9782)"},{"Id":"1872542034","IsPullRequest":true,"CreatedAt":"2023-08-30T00:20:50","Actor":"dotnet-maestro[bot]","Number":"9806","RawContent":null,"Title":"[release/8.0] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:5f9d099d-0d05-4b82-cc41-08db9e4039c1)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 5f9d099d-0d05-4b82-cc41-08db9e4039c1\r\n- **Build**: 20230829.12\r\n- **Date Produced**: August 29, 2023 9:27:22 PM UTC\r\n- **Commit**: bbaba10171c0e8d26b9d31877799d2ebe309c7ee\r\n- **Branch**: refs/heads/release/8.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **System.CodeDom**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **System.Data.Odbc**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **System.Data.OleDb**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **System.IO.Ports**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **System.Management**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **System.Reflection.Context**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **System.Runtime.Caching**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **System.Speech**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **System.Text.Json**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-rc.2.23426.4 to 8.0.0-rc.2.23429.12][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/4122c63a13...bbaba10171\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:5f9d099d-0d05-4b82-cc41-08db9e4039c1)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9806)","Url":"https://github.com/dotnet/winforms/pull/9806","RelatedDescription":"Closed or merged PR \"[release/8.0] Update dependencies from dotnet/runtime\" (#9806)"},{"Id":"1872512714","IsPullRequest":false,"CreatedAt":"2023-08-29T21:33:37","Actor":"JeremyKuhne","Number":"9805","RawContent":null,"Title":"Need to handle incoming IDataObject pointers for AOT","State":"open","Body":"In order to support trimming/AOT we'll be moving our OLE interactions to native pointers and `ComWrappers`. In doing that we'll need to handle incoming IDataObject pointers. This issue is to capture some of what this entails.\r\n\r\nWhen we get `IDataObject*` from OLE (for drag/drop and clipboard) we have a number of cases:\r\n\r\n1. The `IDataObject*` is a CCW from COM interop.\r\n2. The `IDataObject*` is a CCW from `ComWrappers`\r\n3. The `IDataObject*` is neither (originally created in native code - that is originating outside of .NET).\r\n\r\nIn the first case we need to recognize that and unwrap the managed object if it was one that we populated. It is possible someone else may have manually P/Invoked data out and we need to be aware of it and consider if we're breaking any casting support that COM interop provides.\r\n\r\nThe second case is much the same, we want to get the original `DataObject` out and not try and wrap in a `ComWrappers` RCW.\r\n\r\nThird case is a bit more tricky. Historically we have wrapped this in a COM interop RCW. This allows dynamic casting of any supported COM interface via `QueryInterface`. While we can create a `ComWrappers` RCW, we wouldn't get this behavior anymore in that case.\r\n\r\nFor example in `CreateDragEventArgs`:\r\n\r\n``` C#\r\nobject? obj = Marshal.GetObjectForIUnknown((nint)pDataObj);\r\nif (obj is IDataObject dataObject)\r\n{\r\n    data = dataObject;\r\n}\r\nelse if (obj is ComTypes.IDataObject nativeDataObject)\r\n{\r\n    data = new DataObject(nativeDataObject);\r\n}\r\n```\r\n\r\nBecause of this lack of dynamic casting we'll have to either use built in COM when it is available and/or allow configuring the behavior based on config switches.","Url":"https://github.com/dotnet/winforms/issues/9805","RelatedDescription":"Open issue \"Need to handle incoming IDataObject pointers for AOT\" (#9805)"},{"Id":"1872489044","IsPullRequest":true,"CreatedAt":"2023-08-29T21:19:39","Actor":"JeremyKuhne","Number":"9804","RawContent":null,"Title":"Fix Accessibility COM related issues","State":"open","Body":"- AccessibleObject.Navigate was not returning results from SysNavigate\r\n- Change SysNavigate to return AccessibleObject to allow both use cases\r\n- Update comments around SysNavigate/GetSysChild\r\n- Add release for IDispatch in TryGetAccessibleObject when it fails\r\n- Various other comment cleanup\r\n- Tolerate incoming VT_INT in AccessibleObjectExtensions\r\n- Turn ControlTabOrderHolder into record struct with clearer terms\r\n- Make ControlTabOrderComparer static and add comments\r\n- Use Assert.Fail for clarity in PropertyGridTests\r\n- Add tests for AccessibleObject.Navigate\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9804)","Url":"https://github.com/dotnet/winforms/pull/9804","RelatedDescription":"Open PR \"Fix Accessibility COM related issues\" (#9804)"},{"Id":"1871525413","IsPullRequest":true,"CreatedAt":"2023-08-29T19:38:30","Actor":"dotnet-maestro[bot]","Number":"9800","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20230828.2\r\n- **Date Produced**: August 29, 2023 12:51:45 AM UTC\r\n- **Commit**: 3d92d0bfd8c9006f5fe1687e465dc4f8aa068b00\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23425.2 to 8.0.0-beta.23428.2][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.23425.2 to 8.0.0-beta.23428.2][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.23425.2 to 8.0.0-beta.23428.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23425.2 to 8.0.0-beta.23428.2][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.23425.2 to 8.0.0-beta.23428.2][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23425.2 to 8.0.0-beta.23428.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/90c167d5c5...3d92d0bfd8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9800)","Url":"https://github.com/dotnet/winforms/pull/9800","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#9800)"},{"Id":"1871752193","IsPullRequest":false,"CreatedAt":"2023-08-29T19:11:55","Actor":"johanstrand","Number":"9803","RawContent":null,"Title":"DPIUNAWARE registry key does not work","State":"closed","Body":"### Environment\n\nWin 11, Visual Studio 2022 17.7.2\n\n### .NET version\n\nCore 7\n\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\n\nIt worked in Visual Studio 17.6.x.\n\n### Issue description\n\nDesigner will not start for projects targeting .net Core 7. I get the message \r\n\"failed to set process dpi mode value to: dpiunaware\"  when starting the forms editor.\r\nThis is the same as #7609. In 17.6 the suggested solution to add a registry key worked, but after upgrading to 17.7.1 and 17.7.2 it fails again.\r\nThe forms editor works if I remove the registry key and start VS with the /NoScale flag. /NoScale does not work with the registry key set.\n\n### Steps to reproduce\n\nAdd the registry key:\r\n`C:\\Program Files\\Microsoft Visual Studio\\2022\\Professional\\Common7\\IDE` to `\\HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\AppCompatFlags\\Layers` with the value `DPIUNAWARE`\r\n\r\nCreate a Winforms application targeting .NET Core 7. \r\n\r\nTry to open the forms editor.\n\n### Diagnostics\n\n_No response_","Url":"https://github.com/dotnet/winforms/issues/9803","RelatedDescription":"Closed issue \"DPIUNAWARE registry key does not work\" (#9803)"},{"Id":"1871612915","IsPullRequest":true,"CreatedAt":"2023-08-29T13:18:07","Actor":"dotnet-maestro[bot]","Number":"9802","RawContent":null,"Title":"[release/8.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bcf5aa31-6777-442e-8e36-08db9e435944)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: bcf5aa31-6777-442e-8e36-08db9e435944\r\n- **Build**: 20230828.2\r\n- **Date Produced**: August 29, 2023 12:51:45 AM UTC\r\n- **Commit**: 3d92d0bfd8c9006f5fe1687e465dc4f8aa068b00\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23425.2 to 8.0.0-beta.23428.2][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.23425.2 to 8.0.0-beta.23428.2][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.23425.2 to 8.0.0-beta.23428.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23425.2 to 8.0.0-beta.23428.2][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.23425.2 to 8.0.0-beta.23428.2][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23425.2 to 8.0.0-beta.23428.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/90c167d5c5...3d92d0bfd8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:bcf5aa31-6777-442e-8e36-08db9e435944)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9802)","Url":"https://github.com/dotnet/winforms/pull/9802","RelatedDescription":"Closed or merged PR \"[release/8.0] Update dependencies from dotnet/arcade\" (#9802)"},{"Id":"1871525751","IsPullRequest":true,"CreatedAt":"2023-08-29T12:29:11","Actor":"dotnet-maestro[bot]","Number":"9801","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230829.1\r\n- **Date Produced**: August 29, 2023 10:14:07 AM UTC\r\n- **Commit**: 86252f7b723eeae2a827144ee9c15bc675028ad8\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **System.CodeDom**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **System.IO.Ports**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **System.Management**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **System.Speech**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **System.Text.Json**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-alpha.1.23426.3 to 9.0.0-alpha.1.23429.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/976c2ab862...86252f7b72\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9801)","Url":"https://github.com/dotnet/winforms/pull/9801","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#9801)"},{"Id":"1870706761","IsPullRequest":true,"CreatedAt":"2023-08-29T00:56:42","Actor":"KlausLoeffelmann","Number":"9799","RawContent":null,"Title":"Fix missing category attribute for BindableComponent's DataBinding property.","State":"open","Body":"Fixes #8154.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9799)","Url":"https://github.com/dotnet/winforms/pull/9799","RelatedDescription":"Open PR \"Fix missing category attribute for BindableComponent's DataBinding property.\" (#9799)"},{"Id":"1865785292","IsPullRequest":true,"CreatedAt":"2023-08-28T23:01:46","Actor":"halgab","Number":"9779","RawContent":null,"Title":"Enable nullability in BasicDesignerLoader and CodeDomDesignerLoader","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in `BasicDesignerLoader`\r\n- Enable nullability in `CodeDomDesignerLoader`\r\n\r\nThis includes some code cleanup, and consolidation between the two classes\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9779)","Url":"https://github.com/dotnet/winforms/pull/9779","RelatedDescription":"Closed or merged PR \"Enable nullability in BasicDesignerLoader and CodeDomDesignerLoader\" (#9779)"},{"Id":"1870536279","IsPullRequest":true,"CreatedAt":"2023-08-28T21:29:41","Actor":"halgab","Number":"9798","RawContent":null,"Title":"Enable nullability in EventBindingService","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in `EventBindingService`\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9798)","Url":"https://github.com/dotnet/winforms/pull/9798","RelatedDescription":"Open PR \"Enable nullability in EventBindingService\" (#9798)"},{"Id":"1870530159","IsPullRequest":true,"CreatedAt":"2023-08-28T21:24:17","Actor":"JeremyKuhne","Number":"9797","RawContent":null,"Title":"More COM audit fixes (#9776)","State":"open","Body":"## Port of #9776\r\n\r\nAdditional audit fixes:\r\n\r\n- IGetOleObject should be returning IOleObject, not IUnknown. Confirmed against VB6 code.\r\n- ClassPropertyDispatchAdapter was allowing conflicts with explicit [DispId]\r\n- Clarify code a bit in ClassPropertyDispatchAdapter.Invoke, use VARIANT marshalling, and allow no result in getter\r\n- Tweak ITypeLib import to throw for clarity in StandardDispatch\r\n- Validate DISPPARAMS parameter in StandardDispatch Invoke methods\r\n- Remove unused method in StandardDispatch\r\n- Add a few unit tests for ClassPropertyDispatchAdapterTests\r\n- Change namespace for IDispatchTests\r\n- Minor source cleaning in COM type descriptor code\r\n- Throw with OleCreatePropertyFrame as we used to.\r\n- Use ComHelpers for one missed IPerPropertyBrowsing usage in Com2IPerPropertyBrowsingEnum\r\n- Don't create in VARIANT for ExecuteBuilder call in COM2PropertyBuilderUITypeEditor (validated with all implementations in VS and Windows)\r\n- Com2PropertyDescriptor.SetValue should store the object not the VARIANT in last value and should free the VARIANT\r\n- Remove IErrorInfo wrapper and use the API directly\r\n- Use VARIANT method to get object in ProcessTypeInfoEnum\r\n- Add a simple test to validate interop behavior for int/uint and add comment to VARIANT\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9797)","Url":"https://github.com/dotnet/winforms/pull/9797","RelatedDescription":"Open PR \"More COM audit fixes (#9776)\" (#9797)"},{"Id":"1870522694","IsPullRequest":true,"CreatedAt":"2023-08-28T21:20:59","Actor":"github-actions[bot]","Number":"9796","RawContent":null,"Title":"[release/8.0] More COM audit fixes","State":"closed","Body":"Backport of #9776 to release/8.0\r\n\r\n/cc @JeremyKuhne\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9796)","Url":"https://github.com/dotnet/winforms/pull/9796","RelatedDescription":"Closed or merged PR \"[release/8.0] More COM audit fixes\" (#9796)"},{"Id":"1870518028","IsPullRequest":false,"CreatedAt":"2023-08-28T21:14:12","Actor":"JeremyKuhne","Number":"9795","RawContent":null,"Title":"Make AccessibleObject trimmable","State":"open","Body":"In order for AOT/Trimming to be a viable option we need to change AccessibleObject to fully utilize native VARIANTs and pointers and use ComWrappers for our CCW projections.\r\n\r\nThere are a number of steps to this, including:\r\n\r\n- Implement the CsWin32 IAccessible.Interface on AccessibleObject and have the existing public IAccessible interface projection just wrap this.\r\n- Convert the UIA interfaces to use CsWin32.\r\n- Ensure that we're using IManagedWrapper on all of our accessible objects.","Url":"https://github.com/dotnet/winforms/issues/9795","RelatedDescription":"Open issue \"Make AccessibleObject trimmable\" (#9795)"},{"Id":"1867869080","IsPullRequest":true,"CreatedAt":"2023-08-28T16:26:52","Actor":"dotnet-maestro[bot]","Number":"9788","RawContent":null,"Title":"[release/8.0] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:5f9d099d-0d05-4b82-cc41-08db9e4039c1)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 5f9d099d-0d05-4b82-cc41-08db9e4039c1\r\n- **Build**: 20230826.4\r\n- **Date Produced**: August 27, 2023 2:15:21 AM UTC\r\n- **Commit**: 4122c63a13cfe40e97ac1f9ef01d8110a66943f4\r\n- **Branch**: refs/heads/release/8.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **System.CodeDom**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **System.Data.Odbc**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **System.Data.OleDb**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **System.DirectoryServices**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **System.IO.Packaging**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **System.IO.Ports**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **System.Management**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **System.Reflection.Context**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **System.Resources.Extensions**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **System.Runtime.Caching**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **System.Security.Permissions**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **System.Speech**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **System.Text.Json**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **System.Windows.Extensions**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-rc.2.23423.5 to 8.0.0-rc.2.23426.4][2]\r\n\r\n[2]: https://github.com/dotnet/runtime/compare/ba6a4adb22...4122c63a13\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:5f9d099d-0d05-4b82-cc41-08db9e4039c1)\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9788)\r\n","Url":"https://github.com/dotnet/winforms/pull/9788","RelatedDescription":"Closed or merged PR \"[release/8.0] Update dependencies from dotnet/runtime\" (#9788)"},{"Id":"1869461734","IsPullRequest":false,"CreatedAt":"2023-08-28T10:20:15","Actor":"2Tadmin","Number":"9794","RawContent":null,"Title":"Triggering a flush in the WinForms Designer (Saving, Doc-Tab change) is VERY slow.","State":"open","Body":"### .NET version\n\nNET 7\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nI haven't test. I test only with full framework 4.7.2 (in VS 2022 last revision)\n\n### Issue description\n\nusing the editor in VS2022 adding controls from toolbox to winform (windows form app NET 7) , when the  controls are enough, for example 30-40 if you try to save form, select control, double click on button to show handler code,..., the hourglass appears and lock for some seconds, If you have many controls the cursor with hourglass still for also 20 seconds and is not possible to do nothing.\r\nIf I use the IDENTICAL winform  so with the same controls BUT for framework Target 4.7.2 the speed is good during design editor.\r\nThe problem is for new editor for NET 7 and it will be fixed (becouse is not possible working in this condition) ore is another problem that is necessary do something?\r\nThanks\n\n### Steps to reproduce\n\nto reproduce is very simple add loto of controls label and text box and button on winform and try to save, doubble click on button, do Copy and paste of control and you can see.\r\n","Url":"https://github.com/dotnet/winforms/issues/9794","RelatedDescription":"Open issue \"Triggering a flush in the WinForms Designer (Saving, Doc-Tab change) is VERY slow.\" (#9794)"},{"Id":"1868470519","IsPullRequest":true,"CreatedAt":"2023-08-27T12:27:00","Actor":"dotnet-maestro[bot]","Number":"9793","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230826.3\r\n- **Date Produced**: August 26, 2023 10:32:06 PM UTC\r\n- **Commit**: 976c2ab862494ef05e2b61535a3d08e26f131145\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **System.CodeDom**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **System.Data.Odbc**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **System.Data.OleDb**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **System.IO.Ports**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **System.Management**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **System.Reflection.Context**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **System.Runtime.Caching**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **System.Speech**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **System.Text.Json**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-rc.1.23421.3 to 9.0.0-alpha.1.23426.3][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/f8c110b800...976c2ab862\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9793)","Url":"https://github.com/dotnet/winforms/pull/9793","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#9793)"},{"Id":"1868399891","IsPullRequest":true,"CreatedAt":"2023-08-27T07:55:02","Actor":"gpetrou","Number":"9792","RawContent":null,"Title":"Enable nullability in some DataGridView members","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in some DataGridView members.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9792)","Url":"https://github.com/dotnet/winforms/pull/9792","RelatedDescription":"Open PR \"Enable nullability in some DataGridView members\" (#9792)"},{"Id":"1868383057","IsPullRequest":true,"CreatedAt":"2023-08-27T06:46:50","Actor":"gpetrou","Number":"9791","RawContent":null,"Title":"Enable nullability in some DataGridView.Methods members","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in some DataGridView.Methods members.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9791)","Url":"https://github.com/dotnet/winforms/pull/9791","RelatedDescription":"Open PR \"Enable nullability in some DataGridView.Methods members\" (#9791)"},{"Id":"1868085006","IsPullRequest":true,"CreatedAt":"2023-08-26T13:09:04","Actor":"dotnet-maestro[bot]","Number":"9790","RawContent":null,"Title":"[release/8.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:bcf5aa31-6777-442e-8e36-08db9e435944)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: bcf5aa31-6777-442e-8e36-08db9e435944\r\n- **Build**: 20230825.2\r\n- **Date Produced**: August 26, 2023 7:20:02 AM UTC\r\n- **Commit**: 90c167d5c57de4a8bced566379dbd893556c94e8\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23422.1 to 8.0.0-beta.23425.2][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.23422.1 to 8.0.0-beta.23425.2][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.23422.1 to 8.0.0-beta.23425.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23422.1 to 8.0.0-beta.23425.2][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.23422.1 to 8.0.0-beta.23425.2][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23422.1 to 8.0.0-beta.23425.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/4d9945d230...90c167d5c5\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:bcf5aa31-6777-442e-8e36-08db9e435944)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9790)","Url":"https://github.com/dotnet/winforms/pull/9790","RelatedDescription":"Closed or merged PR \"[release/8.0] Update dependencies from dotnet/arcade\" (#9790)"},{"Id":"1868073420","IsPullRequest":true,"CreatedAt":"2023-08-26T12:26:58","Actor":"dotnet-maestro[bot]","Number":"9789","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20230825.2\r\n- **Date Produced**: August 26, 2023 7:20:02 AM UTC\r\n- **Commit**: 90c167d5c57de4a8bced566379dbd893556c94e8\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23422.1 to 8.0.0-beta.23425.2][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.23422.1 to 8.0.0-beta.23425.2][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.23422.1 to 8.0.0-beta.23425.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23422.1 to 8.0.0-beta.23425.2][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.23422.1 to 8.0.0-beta.23425.2][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23422.1 to 8.0.0-beta.23425.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/4d9945d230...90c167d5c5\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9789)","Url":"https://github.com/dotnet/winforms/pull/9789","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#9789)"},{"Id":"1867534197","IsPullRequest":false,"CreatedAt":"2023-08-25T18:46:00","Actor":"JeremyKuhne","Number":"9787","RawContent":null,"Title":"Validate COM TypeDescriptor behavior with trimming/AOT","State":"open","Body":"We currently generate an assembly with a matching managed enum for native enums. This needs to be looked at to ensure that our behavior is sensible.","Url":"https://github.com/dotnet/winforms/issues/9787","RelatedDescription":"Open issue \"Validate COM TypeDescriptor behavior with trimming/AOT\" (#9787)"},{"Id":"1867528401","IsPullRequest":false,"CreatedAt":"2023-08-25T18:41:26","Actor":"JeremyKuhne","Number":"9786","RawContent":null,"Title":"Implement ISupportsErrorInfo and IErrorInfo for COM interop","State":"open","Body":"We don't do this in our `ComWrappers` implementation (we just return an HRESULT). We would have to work with CsWin32 to either provide this or allow us to plug in exception handling that does this.\r\n\r\n@jkoritzinsky do the source generators do this in .NET 8? Is this something we could possibly expose through a helper in .NET 9?","Url":"https://github.com/dotnet/winforms/issues/9786","RelatedDescription":"Open issue \"Implement ISupportsErrorInfo and IErrorInfo for COM interop\" (#9786)"},{"Id":"1867517105","IsPullRequest":false,"CreatedAt":"2023-08-25T18:30:37","Actor":"JeremyKuhne","Number":"9785","RawContent":null,"Title":"Lazily populate ClassPropertyDispatchAdapter","State":"open","Body":"It is expected that we normally won't hit the custom `IDispatch` fields and members in `ExtenderProxy` and can probably do this lazily to save startup cost.","Url":"https://github.com/dotnet/winforms/issues/9785","RelatedDescription":"Open issue \"Lazily populate ClassPropertyDispatchAdapter\" (#9785)"},{"Id":"1867513240","IsPullRequest":false,"CreatedAt":"2023-08-25T18:27:15","Actor":"JeremyKuhne","Number":"9784","RawContent":null,"Title":"Implement StandardDispatch for AccessibleObject","State":"open","Body":"In order to make `AccessibleObject` trim friendly we'll need to implement `StandardDispatch` and replicate `IReflect` like we do in `ExtenderProxy` via `ClassPropertyDispatchAdapter`.\r\n\r\nWe don't handle fields / methods in `ClassPropertyDispatchAdapter` at this point (which AccessibleObject needs). Mapping for fields is in the class but is commented out.\r\n\r\nIt is important that we cache this in some way for given `AccessibleObject` types so that we don't incur the cost for every single control.","Url":"https://github.com/dotnet/winforms/issues/9784","RelatedDescription":"Open issue \"Implement StandardDispatch for AccessibleObject\" (#9784)"},{"Id":"1867507444","IsPullRequest":false,"CreatedAt":"2023-08-25T18:22:14","Actor":"JeremyKuhne","Number":"9783","RawContent":null,"Title":"Consider providing IDispatch data with trimming/AOT","State":"open","Body":"For our `StandardDispatch` (which replaces `IReflect`) we're providing members via reflection (see `ClassPropertyDispatchAdapter`). If this becomes a problem with trimming/AOT, we could manually compose the known members and add any diffs in the user types. For example, `ExtenderProxy` provides its own properties and those of the `Control` it is proxying. We know the ones we define and could write manual adapters for them (or perhaps a source generator to do so).","Url":"https://github.com/dotnet/winforms/issues/9783","RelatedDescription":"Open issue \"Consider providing IDispatch data with trimming/AOT\" (#9783)"},{"Id":"1865948750","IsPullRequest":true,"CreatedAt":"2023-08-25T16:02:56","Actor":"dotnet-maestro[bot]","Number":"9781","RawContent":null,"Title":"[release/8.0] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:5f9d099d-0d05-4b82-cc41-08db9e4039c1)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 5f9d099d-0d05-4b82-cc41-08db9e4039c1\r\n- **Build**: 20230823.5\r\n- **Date Produced**: August 24, 2023 9:33:02 PM UTC\r\n- **Commit**: ba6a4adb228567a6bb3f4a9e5789fb74c47c8c94\r\n- **Branch**: refs/heads/release/8.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **System.CodeDom**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **System.Data.Odbc**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **System.Data.OleDb**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **System.IO.Ports**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **System.Management**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **System.Reflection.Context**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **System.Runtime.Caching**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **System.Speech**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **System.Text.Json**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-rc.2.23423.11 to 8.0.0-rc.2.23423.5][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/3d1b254359...ba6a4adb22\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:5f9d099d-0d05-4b82-cc41-08db9e4039c1)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9781)","Url":"https://github.com/dotnet/winforms/pull/9781","RelatedDescription":"Closed or merged PR \"[release/8.0] Update dependencies from dotnet/runtime\" (#9781)"},{"Id":"1865814845","IsPullRequest":true,"CreatedAt":"2023-08-24T21:34:28","Actor":"JeremyKuhne","Number":"9780","RawContent":null,"Title":"Additional COM fixes (#9769)","State":"closed","Body":"Port of #9769 - do not squash\r\n\r\nCOM code audit fixes:\r\n\r\n- AxContainer.IOleInPlaceFrame.SetActiveObject was not ref counting correctly or checking for null\r\n- OleInterfaces.IOleControlSite.GetExtendedControl was unnecessarily using Marshal\r\n- OleIntefaces.IOleInPlaceSite.GetWindowContext brought in line with MFC behavior with null pointers\r\n- Use SearchValues in ActiveXImpl (minor perf fix)\r\n- ActiveXImpl.InPlaceActivate was incorrectly ref counting\r\n- ActiveXImpl Save/Load were releasing IPropertyBag when it was passed directly from native code, move the using local to the internal code\r\n- ActiveXImpl.QuickActivate should not fail if we cannot get IConnectionPointContainer\r\n- Add DisposeHelper.NullAndRelease helper for safer release of pointer fields\r\n- Harden AgileComPointer a bit more by using Interlocked\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9780)","Url":"https://github.com/dotnet/winforms/pull/9780","RelatedDescription":"Closed or merged PR \"Additional COM fixes (#9769)\" (#9780)"},{"Id":"1864469497","IsPullRequest":true,"CreatedAt":"2023-08-24T06:09:01","Actor":"github-actions[bot]","Number":"9778","RawContent":null,"Title":"[release/8.0-rc1] fix bug PrintPreviewControl lacks UI Automation Scroll pattern support","State":"closed","Body":"Backport of #9694 to release/8.0-rc1\n\n/cc @Epica3055\n\n## Customer Impact\n\n## Testing\n\n## Risk\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9778)","Url":"https://github.com/dotnet/winforms/pull/9778","RelatedDescription":"Closed or merged PR \"[release/8.0-rc1] fix bug PrintPreviewControl lacks UI Automation Scroll pattern support\" (#9778)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-08-30T03:30:32.6601753Z","RunDurationInMilliseconds":457}