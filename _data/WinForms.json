{"Data":{"GitHub":{"Issues":[{"Id":"3078745996","IsPullRequest":false,"CreatedAt":"2025-05-21T03:00:16","Actor":"adslbarxatov","Number":"13494","RawContent":null,"Title":"Unexpected lowering of access rights when using System.Windows.Forms.Timer","State":"open","Body":"### .NET version\n\n.NET 9.0\n\n### Did it work in .NET Framework?\n\nNot tested/verified\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNot sure, haven't tested\n\n### Issue description\n\nHi!\n\nWe've occasionally met this issue today. It's quite hard to reproduce it. So, we'll try to present all corresponding info.\n\n---\n\n## Environment\n- Visual studio 17.14\n- .NET 9.0\n- WinForms C# project\n\nAlso (for all tested PC):\n- Windows 10 (latest update)\n- The UAC level doesn't matter\n- App is running under admin\n- The `Run as admin` compatibility flag is set\n- App is located in `C:\\Program files (x86)\\KassArray` directory\n\n---\n\n## Essence of problem\n\nWe have next code (*we think, it is important, where the needed file is located – the* ***OS-protected area*** *in this case*):\n\n```\nprivate void Timer_Tick (object sender, EventArgs e)\n  {\n  Button_Clicked (null, null);\n  }\n\nprivate void Button_Clicked (object sender, EventArgs e)\n  {\n  bool result = File.Exists (\"C:\\\\Program files (x86)\\\\KassArray\\\\PrinterSettings.fsr\");\n  if (result)\n    DoSomethingWithOtherFiles ();\n  }\n```\n\nIn this case `result` gets exactly the expected value when we click `Button` in the app interface. In our tests it was confirmed as `true` on all PCs.\n\nBut the **result becomes random** when the `Timer` ticks. And it doesn't make sence because it's happening **in the same app at the same time**. Under *random* we understand that it somehow depends on the machine where the app is running. Admin rights and UAC lowering don't help.\n\nAlso, `DoSomethingWithOtherFiles` method triggered by `Timer` is still able to access (read and write) files located in \"free\" area (f.e., Desktop or Documents). We've tested it by commenting the `if (result)` line.\n\n---\n\n### Thoughts\nThe only difference we've found is that OS, where the `result` is `true`, trusts the certificate which has been used to sign the app. And OS, where the `result` is `false`, doesn't trust it. The button clicking gives `true` on both systems.\n\nCan the separated background thread of the timer explain this, may be? Does it have some restrictions?\n\n### Steps to reproduce\n\nQuite hard to reproduce it. We've tried to present all corresponding info above","Url":"https://github.com/dotnet/winforms/issues/13494","RelatedDescription":"Open issue \"Unexpected lowering of access rights when using System.Windows.Forms.Timer\" (#13494)"},{"Id":"3078665337","IsPullRequest":true,"CreatedAt":"2025-05-21T02:49:47","Actor":"dotnet-maestro[bot]","Number":"13493","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/arcade/blob/main/Documentation/UnifiedBuild/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250519.9](https://dev.azure.com/dnceng/internal/_build/results?buildId=2713192)\n- **Date Produced**: May 20, 2025 9:46:44 AM UTC\n- **Commit Diff**: [170498a...d60c3fe](https://github.com/dotnet/dotnet/compare/170498a9429a5553fe7ac0ec2341d19bbb97cbe8...d60c3fe894af16cd15dc86420af0fc9d02be4997)\n- **Commit**: [d60c3fe894af16cd15dc86420af0fc9d02be4997](https://github.com/dotnet/dotnet/commit/d60c3fe894af16cd15dc86420af0fc9d02be4997)\n- **Branch**: main\n\n**Updated Dependencies**\n- **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.5.25267.102 to 10.0.0-preview.5.25269.109][1]\n- **System.Resources.Extensions**: [from 10.0.0-preview.5.25267.102 to 10.0.0-preview.5.25269.109][1]\n- **System.Windows.Extensions**: [from 10.0.0-preview.5.25267.102 to 10.0.0-preview.5.25269.109][1]\n- **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.5.25267.102 to 10.0.0-preview.5.25269.109][1]\n- **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.5.25267.102 to 10.0.0-preview.5.25269.109][1]\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.5.25267.102 to 10.0.0-preview.5.25269.109][1]\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.5.25267.102 to 10.0.0-preview.5.25269.109][1]\n- **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.5.25267.102 to 10.0.0-preview.5.25269.109][1]\n- **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.5.25267.102 to 10.0.0-preview.5.25269.109][1]\n- **System.Text.Encodings.Web**: [from 10.0.0-preview.5.25267.102 to 10.0.0-preview.5.25269.109][1]\n- **System.Text.Json**: [from 10.0.0-preview.5.25267.102 to 10.0.0-preview.5.25269.109][1]\n- **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.5.25267.102 to 10.0.0-preview.5.25269.109][1]\n- **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.5.25267.102 to 10.0.0-preview.5.25269.109][1]\n- **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.5.25267.102 to 10.0.0-preview.5.25269.109][1]\n- **System.CodeDom**: [from 10.0.0-preview.5.25267.102 to 10.0.0-preview.5.25269.109][1]\n- **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.5.25267.102 to 10.0.0-preview.5.25269.109][1]\n- **System.Formats.Nrbf**: [from 10.0.0-preview.5.25267.102 to 10.0.0-preview.5.25269.109][1]\n- **System.IO.Hashing**: [from 10.0.0-preview.5.25267.102 to 10.0.0-preview.5.25269.109][1]\n- **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25267.102 to 10.0.0-beta.25269.109][1]\n- **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25267.102 to 10.0.0-beta.25269.109][1]\n- **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25267.102 to 10.0.0-beta.25269.109][1]\n- **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25267.102 to 10.0.0-beta.25269.109][1]\n- **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25267.102 to 10.0.0-beta.25269.109][1]\n- **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25267.102 to 10.0.0-beta.25269.109][1]\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/170498a942...d60c3fe894\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13493)","Url":"https://github.com/dotnet/winforms/pull/13493","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13493)"},{"Id":"3078495097","IsPullRequest":true,"CreatedAt":"2025-05-21T00:06:17","Actor":"ricardobossan","Number":"13492","RawContent":null,"Title":"Adds code coverage to StandardMenuStripVerb","State":"open","Body":"Related #10773\r\n\r\n## Proposed changes\r\n\r\n- Adds code coverage to `StandardMenuStripVerb`\r\n\r\n## Customer Impact\r\n\r\n- None\r\n\r\n## Regression?\r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Test methodology\r\n\r\n- Unit tests\r\n\r\n## Test environment(s)\r\n\r\n- 10.0.100-preview.5.25265.106\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13492)","Url":"https://github.com/dotnet/winforms/pull/13492","RelatedDescription":"Open PR \"Adds code coverage to StandardMenuStripVerb\" (#13492)"},{"Id":"3078160044","IsPullRequest":true,"CreatedAt":"2025-05-20T22:06:06","Actor":"Copilot","Number":"13489","RawContent":null,"Title":"Fix thread safety in Application.ThreadContext.FromId","State":"closed","Body":"## Issue\nThe `Application.ThreadContext.FromId` method was reading from the `s_contextHash` dictionary without using a lock, which could cause errors if another thread writes to the dictionary at the same time.\n\nBefore this PR:\n- `s_contextHash` was being read without synchronization in the `FromId` method\n- All writers to the dictionary used proper locking with `s_lock`\n- This could lead to race conditions or exceptions when one thread is reading while another is writing\n\n## Fix\nAdded proper locking when accessing the `s_contextHash` dictionary in the `FromId` method to ensure thread safety.\n\n```diff\ninternal static ThreadContext? FromId(uint id)\n{\n+   lock (s_lock)\n+   {\n        if (!s_contextHash.TryGetValue(id, out ThreadContext? context) && id == PInvokeCore.GetCurrentThreadId())\n        {\n            context = Create();\n        }\n\n        return context;\n+   }\n}\n```\n\nThis change ensures thread safety by using the same locking pattern that's already used in other parts of the codebase that write to the `s_contextHash` dictionary.\n\nFixes #13246.\n\n> [!WARNING]\n>\n> <details>\n> <summary>Firewall rules blocked me from connecting to one or more addresses</summary>\n>\n> #### I tried to connect to the following addresses, but was blocked by firewall rules:\n>\n> - `dc.services.visualstudio.com`\n>   - Triggering command: `/home/REDACTED/work/winforms/winforms/.dotnet/dotnet msbuild /m /nologo /clp:Summary /v:minimal /nr:true /warnaserror /p:TreatWarningsAsErrors=true /p:ContinuousIntegrationBuild=false /home/REDACTED/work/winforms/winforms/artifacts/toolset/restore.proj /t:__WriteToolsetLocation /clp:ErrorsOnly;NoSummary /p:__ToolsetLocationOutputFile=/home/REDACTED/work/winforms/winforms/artifacts/toolset/10.0.0-beta.25267.102.txt ` (dns block)\n> - `pkgs.dev.azure.com`\n>   - Triggering command: `/home/REDACTED/work/winforms/winforms/.dotnet/dotnet msbuild /m /nologo /clp:Summary /v:minimal /nr:true /warnaserror /p:TreatWarningsAsErrors=true /p:ContinuousIntegrationBuild=false /home/REDACTED/work/winforms/winforms/artifacts/toolset/restore.proj /t:__WriteToolsetLocation /clp:ErrorsOnly;NoSummary /p:__ToolsetLocationOutputFile=/home/REDACTED/work/winforms/winforms/artifacts/toolset/10.0.0-beta.25267.102.txt ` (dns block)\n>\n> If you need me to access, download, or install something from one of these locations, you can either:\n>\n> - Configure [Actions setup steps](https://gh.io/copilot/actions-setup-steps) to set up my environment, which run before the firewall is enabled\n> - Add the appropriate URLs or hosts to my [firewall allow list](https://gh.io/copilot/firewall-config)\n>\n> </details>\n\n\n---\n\n💡 You can make Copilot smarter by setting up custom instructions, customizing its development environment and configuring Model Context Protocol (MCP) servers. Learn more [Copilot coding agent tips](https://gh.io/copilot-coding-agent-tips) in the docs.","Url":"https://github.com/dotnet/winforms/pull/13489","RelatedDescription":"Closed or merged PR \"Fix thread safety in Application.ThreadContext.FromId\" (#13489)"},{"Id":"3078166718","IsPullRequest":true,"CreatedAt":"2025-05-20T20:31:52","Actor":"Copilot","Number":"13491","RawContent":null,"Title":"Add tests for Clipboard JSON and raw data scenarios","State":"open","Body":"## Overview\n\nThis PR validates that Clipboard and DataObject support specialized data retrieval features, particularly for working with raw data and NRBF serialized content. It adds comprehensive tests to document existing behavior.\n\nKey scenarios validated:\n\n- **Raw Data Access**: Retrieving the raw `MemoryStream` data from the clipboard using `TryGetData<MemoryStream>()`\n- **NRBF Data Access**: Decoding clipboard data to `SerializationRecord` using `TryGetData<SerializationRecord>()`\n- **JSON Serialization**: Proper handling of JSON-serialized data in both in-process and out-of-process scenarios\n\n## Implementation Details\n\nThe existing implementation in `BinaryFormatUtilities.TryReadObjectFromStream<T>` already supports these scenarios:\n\n```csharp\n// Raw data access\nif (typeof(T) == typeof(MemoryStream))\n{\n    // Explicitly asked for a MemoryStream, return the stream as is.\n    @object = (T)(object)stream;\n    return true;\n}\n\n// NRBF serialized data access\nrecord = stream.DecodeNrbf();\nif (typeof(T) == typeof(SerializationRecord))\n{\n    // If SerializationRecord was explicitly requested, return the decoded stream.\n    @object = (T)(object)record;\n    return true;\n}\n```\n\nThe added tests ensure:\n\n1. `TryGetData<MemoryStream>` always returns the raw HGLOBAL data stream\n2. `TryGetData<SerializationRecord>` properly decodes NRBF-formatted data\n3. JSON serialized data works correctly in all API scenarios\n4. Tests cover both in-process and out-of-process (copy=true/false) cases\n\nFixes #12919.\n\n> [!WARNING]\n>\n> <details>\n> <summary>Firewall rules blocked me from connecting to one or more addresses</summary>\n>\n> #### I tried to connect to the following addresses, but was blocked by firewall rules:\n>\n> - `aka.ms`\n>   - Triggering command: `curl -I -sSL --retry 5 --retry-delay 2 --connect-timeout 15 REDACTED ` (dns block)\n> - `dot.net`\n>   - Triggering command: `wget REDACTED ` (dns block)\n> - `pkgs.dev.azure.com`\n>   - Triggering command: `dotnet build src/System.Windows.Forms/System.Windows.Forms.csproj ` (dns block)\n>   - Triggering command: `/home/REDACTED/work/_temp/ghcca-node/node/bin/node /home/REDACTED/work/_temp/copilot-developer-action-main/dist/index.js ` (dns block)\n>\n> If you need me to access, download, or install something from one of these locations, you can either:\n>\n> - Configure [Actions setup steps](https://gh.io/copilot/actions-setup-steps) to set up my environment, which run before the firewall is enabled\n> - Add the appropriate URLs or hosts to my [firewall allow list](https://gh.io/copilot/firewall-config)\n>\n> </details>\n\n\n---\n\n💡 You can make Copilot smarter by setting up custom instructions, customizing its development environment and configuring Model Context Protocol (MCP) servers. Learn more [Copilot coding agent tips](https://gh.io/copilot-coding-agent-tips) in the docs.","Url":"https://github.com/dotnet/winforms/pull/13491","RelatedDescription":"Open PR \"Add tests for Clipboard JSON and raw data scenarios\" (#13491)"},{"Id":"3078166226","IsPullRequest":true,"CreatedAt":"2025-05-20T20:31:46","Actor":"Copilot","Number":"13490","RawContent":null,"Title":"Add thorough tests for partially supported NRBF types","State":"open","Body":"This PR adds comprehensive tests for `Hashtable` serialization handling in `CoreNrbfSerializer` to ensure we're properly handling instances with unsupported content and not losing data over fields we don't currently handle (like the comparer).\n\nThe tests include:\n\n1. Verification that `CoreNrbfSerializer.IsFullySupportedType()` correctly returns `false` for `Hashtable` types\n2. Tests that standard `Hashtable` objects can be properly serialized and deserialized\n3. Tests that `Hashtable` objects with custom comparers:\n   - Can be serialized but not deserialized by `CoreNrbfSerializer`\n   - Retain all their data including the comparer when roundtripped through serialization\n4. Tests that `Hashtable` objects with custom hash code providers:\n   - Can be serialized but not deserialized by `CoreNrbfSerializer` \n   - Preserve their hash code provider information when roundtripped\n\nThese tests are important to ensure that while we may not fully handle all `Hashtable` configurations through `CoreNrbfSerializer`, we at least don't lose data when these objects pass through serialization, maintaining compatibility with existing functionality.\n\nFixes #12927.\n\n> [!WARNING]\n>\n> <details>\n> <summary>Firewall rules blocked me from connecting to one or more addresses</summary>\n>\n> #### I tried to connect to the following addresses, but was blocked by firewall rules:\n>\n> - `pkgs.dev.azure.com`\n>   - Triggering command: `dotnet restore src/System.Private.Windows.Core/tests/System.Private.Windows.Core.Tests/System.Private.Windows.Core.Tests.csproj ` (dns block)\n>\n> If you need me to access, download, or install something from one of these locations, you can either:\n>\n> - Configure [Actions setup steps](https://gh.io/copilot/actions-setup-steps) to set up my environment, which run before the firewall is enabled\n> - Add the appropriate URLs or hosts to my [firewall allow list](https://gh.io/copilot/firewall-config)\n>\n> </details>\n\n\n---\n\n💡 You can make Copilot smarter by setting up custom instructions, customizing its development environment and configuring Model Context Protocol (MCP) servers. Learn more [Copilot coding agent tips](https://gh.io/copilot-coding-agent-tips) in the docs.","Url":"https://github.com/dotnet/winforms/pull/13490","RelatedDescription":"Open PR \"Add thorough tests for partially supported NRBF types\" (#13490)"},{"Id":"3078009182","IsPullRequest":true,"CreatedAt":"2025-05-20T19:20:23","Actor":"HenKun","Number":"13488","RawContent":null,"Title":"Elide async lambda and use WrappedCallbackAsync directly","State":"open","Body":"Fixes #12697\n\n## Proposed changes\n\n- Elides the async lambda in two locations and uses the method group directly\n\n<!-- We are in TELL-MODE the following section must be completed -->\n\n## Customer Impact\n\n- Depending on the rate `InvokeAsync` is called to update the UI, it can result in a performance improvement\n- Due to avoiding creating a new delegate each time and creating a state machine, memory can be saved and the GC pressure be reduced\n\n## Regression? \n\n- No\n\n## Risk\n\n- Propagation of exceptions from within `callback`. But since `WrappedCallbackAsync` wraps `callback` in a try-catch block this should be save and not change the current behavior.\n\n<!-- end TELL-MODE -->\n\n## Test methodology <!-- How did you ensure quality? -->\n\n- Code review of related code\n- Existing tests should still pass\n\n\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13488)","Url":"https://github.com/dotnet/winforms/pull/13488","RelatedDescription":"Open PR \"Elide async lambda and use WrappedCallbackAsync directly\" (#13488)"},{"Id":"3077638933","IsPullRequest":false,"CreatedAt":"2025-05-20T16:42:47","Actor":"KlausLoeffelmann","Number":"13487","RawContent":null,"Title":"Reminder: Outstanding PRs with review comments by @KlausLoeffelmann","State":"open","Body":"There are outstanding pull requests that I (KlausLoeffelmann) published in this repository which have unresolved review comments. Please take a look and address any feedback or outstanding items:\n\n- [Fix DarkMode (a) StatusStrip background renderer A11Y Regression. (#13360)](https://github.com/dotnet/winforms/pull/13360)\n- [Address non dark-mode coloring of listitem and treenode controls while in edit mode (#12674)](https://github.com/dotnet/winforms/pull/12674)\n\nPlease review the latest comments in each PR and respond accordingly to keep them moving forward. Thank you!\n","Url":"https://github.com/dotnet/winforms/issues/13487","RelatedDescription":"Open issue \"Reminder: Outstanding PRs with review comments by @KlausLoeffelmann\" (#13487)"},{"Id":"3076487254","IsPullRequest":true,"CreatedAt":"2025-05-20T10:17:25","Actor":"Epica3055","Number":"13486","RawContent":null,"Title":"add workflow Block PRs with \"NO-MERGE\" label","State":"open","Body":"Sometime we don't want to merge a PR until a latter time. So we add a NO-MERGE label to indicate that. but we may accidentally click it. 🤣\r\n\r\nSo add a workflow to block PRs with \"NO-MERGE\" label.\r\n<!--\r\nI have done a similar task in my test repo. It didn't work perfectly as I expected.\r\n![pull_13486](https://github.com/user-attachments/assets/8820ca6b-1dc4-488f-8c99-bd2ddfdfe719)\r\n\r\nThe \"Merge pull request\" button turn from blue to white, but it still can be clicked. How can I make it disabled.\r\n\r\nCan someone have a look at this?\r\n-->\r\nTo make it work, I think we need to configure it after this is merged, which I think I don't have the privilege to do so.\r\n![image](https://github.com/user-attachments/assets/465aa79e-141d-4217-a468-92b5850a6471)\r\n","Url":"https://github.com/dotnet/winforms/pull/13486","RelatedDescription":"Open PR \"add workflow Block PRs with \"NO-MERGE\" label\" (#13486)"},{"Id":"3076357209","IsPullRequest":true,"CreatedAt":"2025-05-20T09:34:32","Actor":"MelonWang1","Number":"13485","RawContent":null,"Title":"Add code coverage for ListView.IconComparer","State":"open","Body":"Related #13442\r\n\r\n\r\n## Proposed changes\r\n\r\n- Add unit test file:  ListView.IconComparerTests.cs for public methods of the ListView.IconComparer.cs.cs\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13485)","Url":"https://github.com/dotnet/winforms/pull/13485","RelatedDescription":"Open PR \"Add code coverage for ListView.IconComparer\" (#13485)"},{"Id":"3076179118","IsPullRequest":true,"CreatedAt":"2025-05-20T08:34:49","Actor":"Zheng-Li01","Number":"13484","RawContent":null,"Title":"Add code coverage for DomainItemAccessibleObjectTests","State":"open","Body":"Related https://github.com/dotnet/winforms/issues/13442\r\n\r\nProposed changes\r\nAdd unit test file: DomainItemAccessibleObject.cs for public methods of the DomainItemAccessibleObject.cs\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13484)","Url":"https://github.com/dotnet/winforms/pull/13484","RelatedDescription":"Open PR \"Add code coverage for DomainItemAccessibleObjectTests\" (#13484)"},{"Id":"3076087556","IsPullRequest":true,"CreatedAt":"2025-05-20T08:06:31","Actor":"LeafShi1","Number":"13483","RawContent":null,"Title":"Update resourceManagement.yml and Versions.props","State":"open","Body":"Update Pre-Release Iteration and Resource Management Milestone to preview6\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13483)","Url":"https://github.com/dotnet/winforms/pull/13483","RelatedDescription":"Open PR \"Update resourceManagement.yml and Versions.props\" (#13483)"},{"Id":"3075971212","IsPullRequest":true,"CreatedAt":"2025-05-20T07:24:40","Actor":"Zheng-Li01","Number":"13482","RawContent":null,"Title":"Add code coverage for TabRenderer","State":"open","Body":"Related https://github.com/dotnet/winforms/issues/13442\r\n\r\nProposed changes\r\nAdd unit test file: TabRendererTests.cs for public methods of the TabRenderer.cs\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13482)","Url":"https://github.com/dotnet/winforms/pull/13482","RelatedDescription":"Open PR \"Add code coverage for TabRenderer\" (#13482)"},{"Id":"3075792812","IsPullRequest":true,"CreatedAt":"2025-05-20T06:17:31","Actor":"LeafShi1","Number":"13481","RawContent":null,"Title":"Update build.yml and build-PR.yml to use default value to failIfCoverageEmpty for task PublishCodeCoverageResults@2","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n## Proposed changes\r\n\r\n- Update build.yml and build-PR.yml to use default value to failIfCoverageEmpty for task PublishCodeCoverageResults@2\r\n-  The setting failIfCoverageEmpty caused the pipeline https://dev.azure.com/dnceng/internal/_build?definitionId=1353 failed\r\n<img width=\"935\" alt=\"image\" src=\"https://github.com/user-attachments/assets/426a30c1-59d3-4454-8148-fd36aa3dd5a3\" />\r\n\r\n\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13481)","Url":"https://github.com/dotnet/winforms/pull/13481","RelatedDescription":"Open PR \"Update build.yml and build-PR.yml to use default value to failIfCoverageEmpty for task PublishCodeCoverageResults@2\" (#13481)"},{"Id":"3075401061","IsPullRequest":true,"CreatedAt":"2025-05-20T02:56:17","Actor":"LeafShi1","Number":"13479","RawContent":null,"Title":"Publish unpublished APIs","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13479)","Url":"https://github.com/dotnet/winforms/pull/13479","RelatedDescription":"Closed or merged PR \"Publish unpublished APIs\" (#13479)"},{"Id":"3075456167","IsPullRequest":true,"CreatedAt":"2025-05-20T02:42:59","Actor":"memoarfaa","Number":"13480","RawContent":null,"Title":"[DarkMode] Fix MDIParent MainMenuStrip System Bitmaps","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #13475\r\n\r\n## Proposed changes\r\n\r\n- Adjust bitmap color transformation logic in `ToolStripMenuItem.cs` to render MainMenuStrip bitmaps correctly in dark mode.\r\n- Apply color matrix transformation to invert and adjust bitmap colors for dark mode in MDIParent scenarios.\r\n- Ensure icons visually match the dark theme when `Application.SetColorMode(SystemColorMode.Dark)` is enabled.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Resolves an issue where MainMenuStrip bitmaps in MDIParent forms were drawn with light colors in dark mode.\r\n- Improves UI consistency for users utilizing dark mode in their WinForms applications.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Low: Changes are isolated to bitmap rendering for dark mode and do not affect standard rendering paths.\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO: Add screenshot showing incorrect light-colored bitmaps in dark mode -->\r\n\r\n![Screenshot 2025-05-18 020913](https://github.com/user-attachments/assets/3d6ead05-7de5-42e1-8767-11846d75ee33)\r\n\r\n### After\r\n\r\n<!-- TODO: Add screenshot showing corrected dark-themed bitmaps in dark mode -->\r\n![Screenshot 2025-05-20 053833](https://github.com/user-attachments/assets/b3df2133-080e-4ce7-a613-a0413931a583)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing in a sample MDI WinForms .NET Core project.\r\n- Verified that MainMenuStrip bitmaps render correctly in both light and dark modes.\r\n- Confirmed no regressions in standard (light mode) theme rendering.\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .NET 10.0.100-preview5.25266.103\r\n- Windows 11 x64\r\n- <!-- use `dotnet --info` -->\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13480)","Url":"https://github.com/dotnet/winforms/pull/13480","RelatedDescription":"Open PR \"[DarkMode] Fix MDIParent MainMenuStrip System Bitmaps\" (#13480)"},{"Id":"3073208492","IsPullRequest":true,"CreatedAt":"2025-05-19T09:40:32","Actor":"LeafShi1","Number":"13478","RawContent":null,"Title":"Fix 13247 by removing unnecessary judgment from method Serialize of DemoConsole.DesignerSerializationService","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #13247\r\n\r\n## Cause:\r\n\r\n- This problem is due to the ToolStripItem not being serialized\r\n\r\n    Judgment `if (obj is Control)` was added to the `Serialize `method of the `DemoConsole.DesignerSerializationService`, resulting in `ToolStripItem` not being serialized https://github.com/dotnet/winforms/blob/716bc129a4679a98394b2e2d24d1d1d3d4f54ddb/src/test/integration/DesignSurface/DesignSurfaceExt/DesignerSerializationServiceImpl.cs#L36-L37\r\n\r\n    [.netFramwork](https://devdiv.visualstudio.com/DevDiv/_git/VS?path=/src/vsip/Designer/Host/Serialization/CodeDomDesignerLoader.cs&version=GBmain&line=994&lineEnd=996&lineStartColumn=1&lineEndColumn=1&lineStyle=plain&_a=contents) does not have this logic\r\n\r\n## Proposed changes\r\n\r\n- Removing unnecessary judgment  `if (obj is Control)` from method `Serialize` of `DemoConsole.DesignerSerializationService`\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- The ToolStrip can be copy and paste normally \r\n\r\n## Regression? \r\n\r\n-  No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nThe subitem of the ToolStrip cannot be copied\r\n![BeforeChangs](https://github.com/user-attachments/assets/4fc11858-d0f2-4387-8339-073fee242200)\r\n\r\n### After\r\nAll of the content can be copied normally\r\n![AfterChanges](https://github.com/user-attachments/assets/59efae48-52a3-48a3-b890-723e12f5e084)\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manually\r\n\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .net 10.0.100-preview.5.25265.106\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13478)","Url":"https://github.com/dotnet/winforms/pull/13478","RelatedDescription":"Open PR \"Fix 13247 by removing unnecessary judgment from method Serialize of DemoConsole.DesignerSerializationService\" (#13478)"},{"Id":"3071280746","IsPullRequest":true,"CreatedAt":"2025-05-18T02:49:48","Actor":"dotnet-maestro[bot]","Number":"13476","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/arcade/blob/main/Documentation/UnifiedBuild/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250517.2](https://dev.azure.com/dnceng/internal/_build/results?buildId=2711459)\n- **Date Produced**: May 17, 2025 4:44:25 PM UTC\n- **Commit Diff**: [604dfc7...170498a](https://github.com/dotnet/dotnet/compare/604dfc7f29729283704bee27b1e844c1fa044b9c...170498a9429a5553fe7ac0ec2341d19bbb97cbe8)\n- **Commit**: [170498a9429a5553fe7ac0ec2341d19bbb97cbe8](https://github.com/dotnet/dotnet/commit/170498a9429a5553fe7ac0ec2341d19bbb97cbe8)\n- **Branch**: main\n\n**Updated Dependencies**\n- **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.5.25266.103 to 10.0.0-preview.5.25267.102][1]\n- **System.Resources.Extensions**: [from 10.0.0-preview.5.25266.103 to 10.0.0-preview.5.25267.102][1]\n- **System.Windows.Extensions**: [from 10.0.0-preview.5.25266.103 to 10.0.0-preview.5.25267.102][1]\n- **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.5.25266.103 to 10.0.0-preview.5.25267.102][1]\n- **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.5.25266.103 to 10.0.0-preview.5.25267.102][1]\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.5.25266.103 to 10.0.0-preview.5.25267.102][1]\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.5.25266.103 to 10.0.0-preview.5.25267.102][1]\n- **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.5.25266.103 to 10.0.0-preview.5.25267.102][1]\n- **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.5.25266.103 to 10.0.0-preview.5.25267.102][1]\n- **System.Text.Encodings.Web**: [from 10.0.0-preview.5.25266.103 to 10.0.0-preview.5.25267.102][1]\n- **System.Text.Json**: [from 10.0.0-preview.5.25266.103 to 10.0.0-preview.5.25267.102][1]\n- **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.5.25266.103 to 10.0.0-preview.5.25267.102][1]\n- **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.5.25266.103 to 10.0.0-preview.5.25267.102][1]\n- **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.5.25266.103 to 10.0.0-preview.5.25267.102][1]\n- **System.CodeDom**: [from 10.0.0-preview.5.25266.103 to 10.0.0-preview.5.25267.102][1]\n- **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.5.25266.103 to 10.0.0-preview.5.25267.102][1]\n- **System.Formats.Nrbf**: [from 10.0.0-preview.5.25266.103 to 10.0.0-preview.5.25267.102][1]\n- **System.IO.Hashing**: [from 10.0.0-preview.5.25266.103 to 10.0.0-preview.5.25267.102][1]\n- **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25266.103 to 10.0.0-beta.25267.102][1]\n- **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25266.103 to 10.0.0-beta.25267.102][1]\n- **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25266.103 to 10.0.0-beta.25267.102][1]\n- **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25266.103 to 10.0.0-beta.25267.102][1]\n- **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25266.103 to 10.0.0-beta.25267.102][1]\n- **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25266.103 to 10.0.0-beta.25267.102][1]\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/604dfc7f29...170498a942\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13476)","Url":"https://github.com/dotnet/winforms/pull/13476","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13476)"},{"Id":"3071145144","IsPullRequest":false,"CreatedAt":"2025-05-17T23:22:55","Actor":"memoarfaa","Number":"13475","RawContent":null,"Title":"[DarkMode] MDIParent MainMenuStrip Bitmaps draw with light Colors","State":"open","Body":"### .NET version\n\n### .NET version\n .NET 10.0.100-preview5.25266.103\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n No\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n No, also repro in .NET 9.0 which it started to be supported.\n\n\n### Issue description\n\n\n### Issue description\nMDIParent MainMenuStrip Bitmaps draw with light Colors\n\n![Image](https://github.com/user-attachments/assets/0316ba7f-4d4f-45d7-9659-5dfc322a4cc5)\n\n\n\n### Steps to reproduce\n\n1. Create a winforms .NET Core project.\n2. Enable DarkMode by Application.SetColorMode(SystemColorMode.Dark) in Program.cs file.\n3. Build and run MDIParent.","Url":"https://github.com/dotnet/winforms/issues/13475","RelatedDescription":"Open issue \"[DarkMode] MDIParent MainMenuStrip Bitmaps draw with light Colors\" (#13475)"},{"Id":"3071057874","IsPullRequest":true,"CreatedAt":"2025-05-17T20:53:44","Actor":"memoarfaa","Number":"13474","RawContent":null,"Title":"Dark Mode issues Fixes  ","State":"open","Body":"Fix Dark Mode issues \r\n\r\nFixes #12027\r\nFixes #12992\r\nFixes #12991\r\nFixes #12582\r\nFixes #11941\r\nFixes #11932\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13474)","Url":"https://github.com/dotnet/winforms/pull/13474","RelatedDescription":"Open PR \"Dark Mode issues Fixes  \" (#13474)"},{"Id":"3071034115","IsPullRequest":true,"CreatedAt":"2025-05-17T20:06:32","Actor":"KlausLoeffelmann","Number":"13473","RawContent":null,"Title":"DarkMode (f) Fix ListView ColumnHeaders theme change","State":"open","Body":"This PR fixes a bug, where the ListView does not apply dark mode to the ColumnHeaders, if the View changes _after_ the ListView Handel has been created.\r\n\r\nThis fixes #13472.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13473)","Url":"https://github.com/dotnet/winforms/pull/13473","RelatedDescription":"Open PR \"DarkMode (f) Fix ListView ColumnHeaders theme change\" (#13473)"},{"Id":"3071021858","IsPullRequest":false,"CreatedAt":"2025-05-17T19:44:49","Actor":"KlausLoeffelmann","Number":"13472","RawContent":null,"Title":"ListView details view ColumnsHeaders in DarkMode remain light mode in certain conditions","State":"open","Body":"When you change the `View` of a `ListView` to `Details` _after_ th `ListView`'s `Handle` has been created, the `ColumnsHeaders` are not getting properly themed.\n","Url":"https://github.com/dotnet/winforms/issues/13472","RelatedDescription":"Open issue \"ListView details view ColumnsHeaders in DarkMode remain light mode in certain conditions\" (#13472)"},{"Id":"3070654271","IsPullRequest":false,"CreatedAt":"2025-05-17T10:33:02","Actor":"viruscamp","Number":"13470","RawContent":null,"Title":"Databinding for an invisble NumericUpDown , may cause ArgumentOutOfRangeException","State":"open","Body":"### .NET version\n\n8.0\nIt affects netfx-2.0, 3.5 ,4.0, 4.6, 4.8, and net-8.0 which I have tested.\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNot tested.\n\n### Issue description\n\nControl databinding bugs.\n\n### Steps to reproduce\n\nRun the code, change value of the NumericUpDown in tabPage1, you will got:\n```\nSystem.ArgumentOutOfRangeException:““0” is invalid for “Value”. “Value” should be between 'Minimum' and 'Maximum'. (Parameter 'value') Actual value was 0.”\n```\nIf you first switch to tabPage2, and then switch back to tabPage1,  change value of the NumericUpDown , no exception occurs.\n\n```C#\nusing System;\nusing System.Collections.Generic;\nusing System.ComponentModel;\nusing System.Windows.Forms;\n\nnamespace WinFormsApp2\n{\n    class Data : INotifyPropertyChanged\n    {\n        #region INotifyPropertyChanged\n        public event PropertyChangedEventHandler PropertyChanged;\n        void RaisePropertyChanged(string name)\n        {\n            PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(name));\n        }\n\n        bool SetValue<T>(ref T field, T value, string name)\n        {\n            if (!object.Equals(field, value))\n            {\n                field = value;\n                RaisePropertyChanged(name);\n                return true;\n            }\n            return false;\n        }\n        #endregion\n\n        public int _TestInt = 42;\n        public int TestInt\n        {\n            get => _TestInt;\n            set => SetValue(ref _TestInt, value, nameof(TestInt));\n        }\n\n        public int _TestInt2 = 18;\n        public int TestInt2\n        {\n            get => _TestInt2;\n            set => SetValue(ref _TestInt2, value, nameof(TestInt2));\n        }\n    }\n    internal static class Program\n    {\n        [STAThread]\n        static void Main()\n        {\n            Application.EnableVisualStyles();\n            Application.SetCompatibleTextRenderingDefault(false);\n\n            var data = new Data();\n\n            var form = new Form();\n            form.Size = new System.Drawing.Size(200, 160);\n\n            var tabControl1 = new TabControl();\n            tabControl1.Dock = DockStyle.Fill;\n            form.Controls.Add(tabControl1);\n\n            var tabPage1 = new TabPage();\n            tabPage1.Text = \"tabPage1\";\n            tabControl1.TabPages.Add(tabPage1);\n\n            var num1 = new NumericUpDown();\n            num1.DataBindings.Add(nameof(num1.Value), data, nameof(data.TestInt), false, DataSourceUpdateMode.OnPropertyChanged);\n            tabPage1.Controls.Add(num1);\n\n            var tabPage2 = new TabPage();\n            tabPage2.Text = \"tabPage2\";\n            tabControl1.TabPages.Add(tabPage2);\n\n            var num2 = new NumericUpDown();\n            num2.Minimum = 8;\n            num2.DataBindings.Add(nameof(num2.Value), data, nameof(data.TestInt2), false, DataSourceUpdateMode.OnPropertyChanged);\n            tabPage2.Controls.Add(num2);\n\n            Application.Run(form);\n        }\n    }\n}\n```","Url":"https://github.com/dotnet/winforms/issues/13470","RelatedDescription":"Open issue \"Databinding for an invisble NumericUpDown , may cause ArgumentOutOfRangeException\" (#13470)"},{"Id":"3070178386","IsPullRequest":true,"CreatedAt":"2025-05-17T02:52:56","Actor":"dotnet-maestro[bot]","Number":"13469","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/arcade/blob/main/Documentation/UnifiedBuild/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250516.3](https://dev.azure.com/dnceng/internal/_build/results?buildId=2710812)\n- **Date Produced**: May 16, 2025 8:37:04 PM UTC\n- **Commit Diff**: [ad85650...604dfc7](https://github.com/dotnet/dotnet/compare/ad8565092bbfdd5c8b4a94a718d10b2d394f7aee...604dfc7f29729283704bee27b1e844c1fa044b9c)\n- **Commit**: [604dfc7f29729283704bee27b1e844c1fa044b9c](https://github.com/dotnet/dotnet/commit/604dfc7f29729283704bee27b1e844c1fa044b9c)\n- **Branch**: main\n\n**Updated Dependencies**\n- **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.5.25265.101 to 10.0.0-preview.5.25266.103][1]\n- **System.Resources.Extensions**: [from 10.0.0-preview.5.25265.101 to 10.0.0-preview.5.25266.103][1]\n- **System.Windows.Extensions**: [from 10.0.0-preview.5.25265.101 to 10.0.0-preview.5.25266.103][1]\n- **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.5.25265.101 to 10.0.0-preview.5.25266.103][1]\n- **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.5.25265.101 to 10.0.0-preview.5.25266.103][1]\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.5.25265.101 to 10.0.0-preview.5.25266.103][1]\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.5.25265.101 to 10.0.0-preview.5.25266.103][1]\n- **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.5.25265.101 to 10.0.0-preview.5.25266.103][1]\n- **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.5.25265.101 to 10.0.0-preview.5.25266.103][1]\n- **System.Text.Encodings.Web**: [from 10.0.0-preview.5.25265.101 to 10.0.0-preview.5.25266.103][1]\n- **System.Text.Json**: [from 10.0.0-preview.5.25265.101 to 10.0.0-preview.5.25266.103][1]\n- **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.5.25265.101 to 10.0.0-preview.5.25266.103][1]\n- **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.5.25265.101 to 10.0.0-preview.5.25266.103][1]\n- **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.5.25265.101 to 10.0.0-preview.5.25266.103][1]\n- **System.CodeDom**: [from 10.0.0-preview.5.25265.101 to 10.0.0-preview.5.25266.103][1]\n- **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.5.25265.101 to 10.0.0-preview.5.25266.103][1]\n- **System.Formats.Nrbf**: [from 10.0.0-preview.5.25265.101 to 10.0.0-preview.5.25266.103][1]\n- **System.IO.Hashing**: [from 10.0.0-preview.5.25265.101 to 10.0.0-preview.5.25266.103][1]\n- **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25265.101 to 10.0.0-beta.25266.103][1]\n- **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25265.101 to 10.0.0-beta.25266.103][1]\n- **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25265.101 to 10.0.0-beta.25266.103][1]\n- **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25265.101 to 10.0.0-beta.25266.103][1]\n- **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25265.101 to 10.0.0-beta.25266.103][1]\n- **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25265.101 to 10.0.0-beta.25266.103][1]\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/ad8565092b...604dfc7f29\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13469)","Url":"https://github.com/dotnet/winforms/pull/13469","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13469)"},{"Id":"3070021076","IsPullRequest":true,"CreatedAt":"2025-05-16T22:55:58","Actor":"KlausLoeffelmann","Number":"13468","RawContent":null,"Title":"DarkMode (c) Fix TitleBar issues","State":"open","Body":"Fixes #12992.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13468)","Url":"https://github.com/dotnet/winforms/pull/13468","RelatedDescription":"Open PR \"DarkMode (c) Fix TitleBar issues\" (#13468)"},{"Id":"3070019667","IsPullRequest":true,"CreatedAt":"2025-05-16T22:54:14","Actor":"KlausLoeffelmann","Number":"13467","RawContent":null,"Title":"New Feature (d) Introduce FormScreenCaptureMode property on Form","State":"open","Body":"Fixes #13258.\r\nFixes #13450.\r\n\r\nLooks like this, when _recorded_:\r\n\r\n![ScreenCapture](https://github.com/user-attachments/assets/f97c768f-93cd-407b-a90c-b26d481c5559)\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13467)","Url":"https://github.com/dotnet/winforms/pull/13467","RelatedDescription":"Open PR \"New Feature (d) Introduce FormScreenCaptureMode property on Form\" (#13467)"},{"Id":"3070015625","IsPullRequest":true,"CreatedAt":"2025-05-16T22:49:28","Actor":"KlausLoeffelmann","Number":"13466","RawContent":null,"Title":"DarkMode (e) fix TabControl issues","State":"open","Body":"Fixes #11953.\r\n\r\n![DarkModeTabAndListView](https://github.com/user-attachments/assets/3515355c-e13f-4ac7-b6a4-6f132c5dbc52)\r\n\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13466)","Url":"https://github.com/dotnet/winforms/pull/13466","RelatedDescription":"Open PR \"DarkMode (e) fix TabControl issues\" (#13466)"},{"Id":"3066387083","IsPullRequest":true,"CreatedAt":"2025-05-16T06:17:28","Actor":"dotnet-maestro[bot]","Number":"13465","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/arcade/blob/main/Documentation/UnifiedBuild/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250515.1](https://dev.azure.com/dnceng/internal/_build/results?buildId=2709724)\n- **Date Produced**: May 15, 2025 1:00:05 PM UTC\n- **Commit Diff**: [362a422...ad85650](https://github.com/dotnet/dotnet/compare/362a4227bd38985f75f6a6d7f6733c7d62414569...ad8565092bbfdd5c8b4a94a718d10b2d394f7aee)\n- **Commit**: [ad8565092bbfdd5c8b4a94a718d10b2d394f7aee](https://github.com/dotnet/dotnet/commit/ad8565092bbfdd5c8b4a94a718d10b2d394f7aee)\n- **Branch**: main\n\n**Updated Dependencies**\n- **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.5.25263.108 to 10.0.0-preview.5.25265.101][1]\n- **System.Resources.Extensions**: [from 10.0.0-preview.5.25263.108 to 10.0.0-preview.5.25265.101][1]\n- **System.Windows.Extensions**: [from 10.0.0-preview.5.25263.108 to 10.0.0-preview.5.25265.101][1]\n- **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.5.25263.108 to 10.0.0-preview.5.25265.101][1]\n- **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.5.25263.108 to 10.0.0-preview.5.25265.101][1]\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.5.25263.108 to 10.0.0-preview.5.25265.101][1]\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.5.25263.108 to 10.0.0-preview.5.25265.101][1]\n- **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.5.25263.108 to 10.0.0-preview.5.25265.101][1]\n- **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.5.25263.108 to 10.0.0-preview.5.25265.101][1]\n- **System.Text.Encodings.Web**: [from 10.0.0-preview.5.25263.108 to 10.0.0-preview.5.25265.101][1]\n- **System.Text.Json**: [from 10.0.0-preview.5.25263.108 to 10.0.0-preview.5.25265.101][1]\n- **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.5.25263.108 to 10.0.0-preview.5.25265.101][1]\n- **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.5.25263.108 to 10.0.0-preview.5.25265.101][1]\n- **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.5.25263.108 to 10.0.0-preview.5.25265.101][1]\n- **System.CodeDom**: [from 10.0.0-preview.5.25263.108 to 10.0.0-preview.5.25265.101][1]\n- **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.5.25263.108 to 10.0.0-preview.5.25265.101][1]\n- **System.Formats.Nrbf**: [from 10.0.0-preview.5.25263.108 to 10.0.0-preview.5.25265.101][1]\n- **System.IO.Hashing**: [from 10.0.0-preview.5.25263.108 to 10.0.0-preview.5.25265.101][1]\n- **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25263.108 to 10.0.0-beta.25265.101][1]\n- **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25263.108 to 10.0.0-beta.25265.101][1]\n- **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25263.108 to 10.0.0-beta.25265.101][1]\n- **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25263.108 to 10.0.0-beta.25265.101][1]\n- **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25263.108 to 10.0.0-beta.25265.101][1]\n- **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25263.108 to 10.0.0-beta.25265.101][1]\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/362a4227bd...ad8565092b\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13465)","Url":"https://github.com/dotnet/winforms/pull/13465","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13465)"},{"Id":"3065526105","IsPullRequest":true,"CreatedAt":"2025-05-15T09:10:14","Actor":"LeafShi1","Number":"13464","RawContent":null,"Title":"Adding GetData test and SetAudio tests to ClipboardCoreTests","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nRelated https://github.com/dotnet/winforms/issues/13331\r\n\r\n## Proposed changes\r\nAdding `GetData` tests and `SetAudio` tests to `ClipboardCoreTests`\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13464)","Url":"https://github.com/dotnet/winforms/pull/13464","RelatedDescription":"Open PR \"Adding GetData test and SetAudio tests to ClipboardCoreTests\" (#13464)"},{"Id":"3064682406","IsPullRequest":true,"CreatedAt":"2025-05-15T02:57:02","Actor":"dotnet-maestro[bot]","Number":"13463","RawContent":null,"Title":"[main] Source code updates from dotnet/dotnet","State":"closed","Body":"\n> [!NOTE]\n> This is a codeflow update. It may contain both source code changes from [the VMR](https://github.com/dotnet/dotnet) as well as dependency updates. Learn more [here](https://github.com/dotnet/arcade/blob/main/Documentation/UnifiedBuild/Codeflow-PRs.md).\n\nThis pull request brings the following source code changes\n\n[marker]: <> (Begin:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n## From https://github.com/dotnet/dotnet\n- **Subscription**: [81d064a4-929c-4152-b746-ee3acc24b4ed](https://maestro.dot.net/subscriptions?search=81d064a4-929c-4152-b746-ee3acc24b4ed)\n- **Build**: [20250513.8](https://dev.azure.com/dnceng/internal/_build/results?buildId=2708619)\n- **Date Produced**: May 14, 2025 4:57:01 AM UTC\n- **Commit Diff**: [5d437e9...362a422](https://github.com/dotnet/dotnet/compare/5d437e96e412b189af05abb84753996de9aa698f...362a4227bd38985f75f6a6d7f6733c7d62414569)\n- **Commit**: [362a4227bd38985f75f6a6d7f6733c7d62414569](https://github.com/dotnet/dotnet/commit/362a4227bd38985f75f6a6d7f6733c7d62414569)\n- **Branch**: main\n\n**Updated Dependencies**\n- **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.5.25263.104 to 10.0.0-preview.5.25263.108][1]\n- **System.Resources.Extensions**: [from 10.0.0-preview.5.25263.104 to 10.0.0-preview.5.25263.108][1]\n- **System.Windows.Extensions**: [from 10.0.0-preview.5.25263.104 to 10.0.0-preview.5.25263.108][1]\n- **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.5.25263.104 to 10.0.0-preview.5.25263.108][1]\n- **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.5.25263.104 to 10.0.0-preview.5.25263.108][1]\n- **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.5.25263.104 to 10.0.0-preview.5.25263.108][1]\n- **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.5.25263.104 to 10.0.0-preview.5.25263.108][1]\n- **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.5.25263.104 to 10.0.0-preview.5.25263.108][1]\n- **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.5.25263.104 to 10.0.0-preview.5.25263.108][1]\n- **System.Text.Encodings.Web**: [from 10.0.0-preview.5.25263.104 to 10.0.0-preview.5.25263.108][1]\n- **System.Text.Json**: [from 10.0.0-preview.5.25263.104 to 10.0.0-preview.5.25263.108][1]\n- **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.5.25263.104 to 10.0.0-preview.5.25263.108][1]\n- **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.5.25263.104 to 10.0.0-preview.5.25263.108][1]\n- **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.5.25263.104 to 10.0.0-preview.5.25263.108][1]\n- **System.CodeDom**: [from 10.0.0-preview.5.25263.104 to 10.0.0-preview.5.25263.108][1]\n- **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.5.25263.104 to 10.0.0-preview.5.25263.108][1]\n- **System.Formats.Nrbf**: [from 10.0.0-preview.5.25263.104 to 10.0.0-preview.5.25263.108][1]\n- **System.IO.Hashing**: [from 10.0.0-preview.5.25263.104 to 10.0.0-preview.5.25263.108][1]\n- **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25263.104 to 10.0.0-beta.25263.108][1]\n- **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25263.104 to 10.0.0-beta.25263.108][1]\n- **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25263.104 to 10.0.0-beta.25263.108][1]\n- **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25263.104 to 10.0.0-beta.25263.108][1]\n- **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25263.104 to 10.0.0-beta.25263.108][1]\n- **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25263.104 to 10.0.0-beta.25263.108][1]\n\n[marker]: <> (End:81d064a4-929c-4152-b746-ee3acc24b4ed)\n\n[1]: https://github.com/dotnet/dotnet/compare/5d437e96e4...362a4227bd\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13463)","Url":"https://github.com/dotnet/winforms/pull/13463","RelatedDescription":"Closed or merged PR \"[main] Source code updates from dotnet/dotnet\" (#13463)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-05-21T03:30:29.4222318Z","RunDurationInMilliseconds":499}