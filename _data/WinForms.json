{"Data":{"GitHub":{"Issues":[{"Id":"1128002926","IsPullRequest":false,"CreatedAt":"2022-02-09T03:21:55","Actor":"Olina-Zhang","Number":"6650","RawContent":null,"Title":"The ToolStripScrollDownButton should be disabled when displaying and focused on the last dropdown item in order to avoid an exception popping up","State":"open","Body":"* .NET Core Version: \r\n7.0.100-preview.2.22103.2\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**Repro steps:**\r\n1. Create a Winforms .Net Core application\r\n2. Add a toolStrip on the form designer\r\n3. Add a toolStripDropDownButton on the toolStrip\r\n4. Add several drop down items under toolStripDropDownButton\r\n5. In the Form.Designer.cs file, edit height of the this.toolStripDropDownButton1.DropDown.MaximumSize property in order to just display one or a part of one drop down item\r\n\r\nOr using attached app:\r\n[WinFormsApp91.zip](https://github.com/dotnet/winforms/files/8029086/WinFormsApp91.zip)\r\n\r\n6. Build and run app, then click ToolStripScrollDownButton to display the last dropdown item\r\n\r\n**Actual behavior:**\r\nThe ToolStripScrollDownButton is still enabled when displaying the last dropdown item, and in this case, an exception pops up when clicking that ToolStripScrollDownButton again\r\n![image](https://user-images.githubusercontent.com/26474449/153115438-608e4b8d-8a17-4e53-bbc8-1d1adab7b603.png)\r\n\r\n![DropDown_MaximumSize](https://user-images.githubusercontent.com/26474449/153114981-2edada1d-602d-4f10-8f07-6e8f09457173.gif)\r\n\r\n**Expected behavior:**\r\nWhen go through the last dropdown item, the ToolStripScrollDownButton is disabled\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6650","RelatedDescription":"Open issue \"The ToolStripScrollDownButton should be disabled when displaying and focused on the last dropdown item in order to avoid an exception popping up\" (#6650)"},{"Id":"1127953015","IsPullRequest":true,"CreatedAt":"2022-02-09T02:52:31","Actor":"stephentoub","Number":"6649","RawContent":null,"Title":"Delete unnecessary Regex.IsMatch usage","State":"closed","Body":"Addresses PR feedback at https://github.com/dotnet/winforms/pull/6643#pullrequestreview-876645648\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6649)","Url":"https://github.com/dotnet/winforms/pull/6649","RelatedDescription":"Closed or merged PR \"Delete unnecessary Regex.IsMatch usage\" (#6649)"},{"Id":"1127889273","IsPullRequest":true,"CreatedAt":"2022-02-09T00:07:57","Actor":"vseanreesermsft","Number":"6648","RawContent":null,"Title":"Merging internal commits for release/6.0","State":"open","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6648)","Url":"https://github.com/dotnet/winforms/pull/6648","RelatedDescription":"Open PR \"Merging internal commits for release/6.0\" (#6648)"},{"Id":"1127831916","IsPullRequest":true,"CreatedAt":"2022-02-08T22:37:00","Actor":"RussKie","Number":"6647","RawContent":null,"Title":"proof of concept for running unit tests through helix","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n## Proposed changes\r\n\r\n- \r\n- \r\n- \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6647)","Url":"https://github.com/dotnet/winforms/pull/6647","RelatedDescription":"Open PR \"proof of concept for running unit tests through helix\" (#6647)"},{"Id":"1127413597","IsPullRequest":true,"CreatedAt":"2022-02-08T22:31:18","Actor":"stephentoub","Number":"6643","RawContent":null,"Title":"Use RegexGenerator in WinForms","State":"closed","Body":"The regex source generator is new in .NET 7.  It does all the parsing and compilation of the regex that would have been done at run-time instead at compile time, improving startup and enabling additional optimizations that wouldn't otherwise be performed.  This updates the regexes used in winforms to use the generator.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6643)","Url":"https://github.com/dotnet/winforms/pull/6643","RelatedDescription":"Closed or merged PR \"Use RegexGenerator in WinForms\" (#6643)"},{"Id":"1127607665","IsPullRequest":true,"CreatedAt":"2022-02-08T22:29:21","Actor":"vseanreesermsft","Number":"6644","RawContent":null,"Title":"Merging internal commits for release/6.0","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6644)","Url":"https://github.com/dotnet/winforms/pull/6644","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/6.0\" (#6644)"},{"Id":"1127692734","IsPullRequest":false,"CreatedAt":"2022-02-08T19:51:37","Actor":"Tanya-Solyanik","Number":"6646","RawContent":null,"Title":"Add ETW events that would measure application start up time.","State":"open","Body":"This is a request from the runtime team, aligned with their Arm64 effort. Related to https://github.com/dotnet/runtime/issues/64993\r\n\r\nAs an example, here’s a pointer to how the perf lab does this.  All of the start-up tests emit an event when they have completed start-up: [https://github.com/dotnet/performance/blob/23b05253055e3c5253bf4a1c8d4d767f33c2b77b/src/tools/ScenarioMeasurement/Startup/GenericStartupParser.cs#L8](https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fperformance%2Fblob%2F23b05253055e3c5253bf4a1c8d4d767f33c2b77b%2Fsrc%2Ftools%2FScenarioMeasurement%2FStartup%2FGenericStartupParser.cs%23L8&data=04%7C01%7CTatiana.Solyanik%40microsoft.com%7Cc3e0644499224ac8f73c08d9eb2a047e%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637799387966396924%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000&sdata=pLz5axwT4EfpYxtAjsYiGIBarg43zoIXzRrvXOx3mdM%3D&reserved=0)","Url":"https://github.com/dotnet/winforms/issues/6646","RelatedDescription":"Open issue \"Add ETW events that would measure application start up time.\" (#6646)"},{"Id":"1127610049","IsPullRequest":true,"CreatedAt":"2022-02-08T18:23:51","Actor":"vseanreesermsft","Number":"6645","RawContent":null,"Title":"Merging internal commits for release/5.0","State":"open","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6645)","Url":"https://github.com/dotnet/winforms/pull/6645","RelatedDescription":"Open PR \"Merging internal commits for release/5.0\" (#6645)"},{"Id":"1127381843","IsPullRequest":true,"CreatedAt":"2022-02-08T18:07:49","Actor":"dotnet-maestro[bot]","Number":"6642","RawContent":null,"Title":"[release/6.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:84f431dc-3375-4a46-af87-08d961c59698)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 84f431dc-3375-4a46-af87-08d961c59698\r\n- **Build**: 20220207.2\r\n- **Date Produced**: February 7, 2022 11:24:16 PM UTC\r\n- **Commit**: fe5cc1841d12196d94a4ae3b276cb92d8d7ca73d\r\n- **Branch**: refs/heads/release/6.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 6.0.0-beta.22102.3 to 6.0.0-beta.22107.2][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.22102.3 to 6.0.0-beta.22107.2][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.22102.3 to 6.0.0-beta.22107.2][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.22102.3 to 6.0.0-beta.22107.2][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.22102.3 to 6.0.0-beta.22107.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.22102.3 to 6.0.0-beta.22107.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/93e08e3...fe5cc18\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:84f431dc-3375-4a46-af87-08d961c59698)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6642)","Url":"https://github.com/dotnet/winforms/pull/6642","RelatedDescription":"Closed or merged PR \"[release/6.0] Update dependencies from dotnet/arcade\" (#6642)"},{"Id":"1125244435","IsPullRequest":true,"CreatedAt":"2022-02-08T18:01:12","Actor":"gpetrou","Number":"6632","RawContent":null,"Title":"Enable nullability in SelectedIndexCollection and SelectedObjectCollection","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in SelectedIndexCollection and SelectedObjectCollection.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6632)","Url":"https://github.com/dotnet/winforms/pull/6632","RelatedDescription":"Closed or merged PR \"Enable nullability in SelectedIndexCollection and SelectedObjectCollection\" (#6632)"},{"Id":"1127378107","IsPullRequest":true,"CreatedAt":"2022-02-08T15:06:00","Actor":"ArtemTatarinov","Number":"6641","RawContent":null,"Title":"Refactoring AutomationId at the accessible object classes","State":"open","Body":"Fixes #6603\r\n\r\n## Proposed changes\r\n- This PR is created from the branch of the base PR #6640 (which is also branched from another not merged PR) to avoid merge conflicts and isolate the changes. When PR #6640 will be reviewed, tested, and merged, this PR should be rebased on the main branch before merging.\r\n- The `AutomationId` property is moved to the `AccessibleObject` base class\r\n- This property returns `null` at `AccessibleObject`\r\n- It is returned at the `GetPropertyValue` method of `AccessibleObject` for the case `AutomationIdPropertyId`\r\n- The current implementations in the 4 classes derived from AO are kept the same way, but they are marked as overrides\r\n- Returning of the `Owner.Name` is moved to the `ControlAccessibleObjectObject` class to make it universal for all its descendants\r\n- All duplicate code with the same logic is cleaned out in the derived classes\r\n- No unit tests are added yet, but they will be after discussion these changes\r\n- Only the last commit is relevant to this PR, others are from the base PR branches.\r\n\r\n## Customer Impact\r\n- Tests based on the old implementation of AutomationId could become obsolete\r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test methodology\r\n- Unit tests\r\n- CTI testing\r\n\r\n## Test environment(s)\r\n.NET SDK 7.0.0-preview-2.22103.2\r\nMicrosoft Windows [Version 10.0.19043.1466]\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6641)","Url":"https://github.com/dotnet/winforms/pull/6641","RelatedDescription":"Open PR \"Refactoring AutomationId at the accessible object classes\" (#6641)"},{"Id":"1127233968","IsPullRequest":true,"CreatedAt":"2022-02-08T13:43:17","Actor":"dotnet-maestro[bot]","Number":"6639","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20220207.26\r\n- **Date Produced**: February 8, 2022 10:19:26 AM UTC\r\n- **Commit**: af42c8ee4e1f0e420605f928cded476520296ced\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.CodeDom**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.Text.Json**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/0ae04e5...af42c8e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6639)","Url":"https://github.com/dotnet/winforms/pull/6639","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6639)"},{"Id":"1127260750","IsPullRequest":true,"CreatedAt":"2022-02-08T13:30:01","Actor":"ArtemTatarinov","Number":"6640","RawContent":null,"Title":"Moving 3 properties at `GetPropertyValue` method to the base `AccessibleObject` class","State":"open","Body":"Fixes #6582\r\n\r\n## Proposed changes\r\n- This PR is created from the branch of the base PR #6429 to avoid merge conflicts and isolate the changes. When PR #6429 will be reviewed, tested, and merged, this PR should be rebased on the main branch before merging.\r\n- `IsPasswordPropertyId`, `FrameworkIdPropertyId` and `AccessKeyPropertyId` are refactored by moving to the base `AccessibleObject` class\r\n- `AccessKeyPropertyId` is returning an empty string now if `KeyboardShortcut` is null, I guess that's a suitable change of behavior because it allows us to clean a lot of places in the code where an empty string is returned, also the `GetPropertyValue` method is an `internal` method anyway, and UIA tools like Inspect and Accessibility Insights treat `null` and `string.Empty` the same way.\r\n\r\n## Customer Impact\r\n- None\r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test methodology\r\n- Unit tests\r\n- CTI testing\r\n\r\n## Test environment(s)\r\n.NET SDK 7.0.0-preview-2.22103.2\r\nMicrosoft Windows [Version 10.0.19043.1466]\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6640)","Url":"https://github.com/dotnet/winforms/pull/6640","RelatedDescription":"Open PR \"Moving 3 properties at `GetPropertyValue` method to the base `AccessibleObject` class\" (#6640)"},{"Id":"1127151766","IsPullRequest":true,"CreatedAt":"2022-02-08T11:49:03","Actor":"YuliiaKovalova","Number":"6638","RawContent":null,"Title":"test install-scripts","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/pull/6638","RelatedDescription":"Open PR \"test install-scripts\" (#6638)"},{"Id":"1127048359","IsPullRequest":true,"CreatedAt":"2022-02-08T10:13:49","Actor":"ArtemTatarinov","Number":"6637","RawContent":null,"Title":"Fixing Text property of the DateTimePicker","State":"open","Body":"Fixes #6590\r\n\r\n## Proposed changes\r\n- Return formatted `Value` in the getter of the `Text` property to make the behavior of this property consistent with the documentation:\r\n![image](https://user-images.githubusercontent.com/87859299/152965809-c7869757-b5e1-4699-ba06-3e146acc074f.png)\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.datetimepicker.text?view=windowsdesktop-6.0\r\n\r\n## Customer Impact\r\n- `Text` property will return a formatted Value instead of an empty string:\r\n![image](https://user-images.githubusercontent.com/87859299/152966392-c0d88486-142d-4da3-a222-c2fce86b2de3.png)\r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- Unit tests\r\n- CTI testing\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n.NET SDK 7.0.0-preview-2.22103.2\r\nMicrosoft Windows [Version 10.0.19043.1466]\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6637)","Url":"https://github.com/dotnet/winforms/pull/6637","RelatedDescription":"Open PR \"Fixing Text property of the DateTimePicker\" (#6637)"},{"Id":"1127028896","IsPullRequest":false,"CreatedAt":"2022-02-08T09:57:01","Actor":"MelonWang1","Number":"6636","RawContent":null,"Title":"The color contrast of the button border is less than 3:1 when setting FlatStyle to Standard","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n **.NET Core Version:** \r\n* Main: 7.0.100-preview.2.22107.13\r\n* Release: 7.0.100-preview.2.22107.10\r\n\r\n**Have you experienced this same bug with .NET Framework?** \r\nYes (based on [#1101503](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1101503))\r\n\r\n**Repro steps:**\r\n\r\n1. Create a Winforms .net core application with a button\r\n2. Set Button.FlatStyle= FlatStyle.Standard\r\n3. Build and run the application and use Accessibility tool to observe luminosity contrast ratio\r\n\r\n**Actual behavior:**\r\nLuminosity contrast ratio of the button border is less than 3:1 when Button.FlatStyle=FlatStyle.Standrad.\r\n![31](https://user-images.githubusercontent.com/94418985/152958694-f4d7a422-ab42-44be-8b1b-16d2886350e9.png)\r\n\r\n\r\n**Expected behavior:**\r\n\r\nLuminosity contrast ratio of the button border is greater than 3:1.\r\n\r\n**More info:**\r\n1. This issue occurs in 7.0.100-preview.2.22107.13 from latest main branch and 7.0.100-preview.2.22107.10 from release branch.\r\n2. This has been fixed and added [comment](https://github.com/dotnet/winforms/issues/6021#issuecomment-972470132) in [#6021](https://github.com/dotnet/winforms/issues/6021). ","Url":"https://github.com/dotnet/winforms/issues/6636","RelatedDescription":"Open issue \"The color contrast of the button border is less than 3:1 when setting FlatStyle to Standard\" (#6636)"},{"Id":"1125130480","IsPullRequest":true,"CreatedAt":"2022-02-08T00:20:47","Actor":"gpetrou","Number":"6628","RawContent":null,"Title":"Enable nullability on ScrollableControl","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability on ScrollableControl.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6628)","Url":"https://github.com/dotnet/winforms/pull/6628","RelatedDescription":"Closed or merged PR \"Enable nullability on ScrollableControl\" (#6628)"},{"Id":"1126498520","IsPullRequest":false,"CreatedAt":"2022-02-07T21:07:36","Actor":"vladimir-krestov","Number":"6635","RawContent":null,"Title":"ImageList_FinalizerReleasesNativeHandle_ReturnsExpected test is flaky in x86 Debug CI build","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: 7.0\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: No\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\n- `ImageList_FinalizerReleasesNativeHandle_ReturnsExpected` unit test fails sometime in x86 Debug CI build for successful PRs, that blocking deployment of fixes into sdk.\r\n\r\n**Stack trace** ([System.Windows.Forms.UI.IntegrationTests_net7.0_x86.log](https://dev.azure.com/dnceng/public/_build/results?buildId=1596505&view=artifacts&pathAsName=false&type=publishedArtifacts))\r\n```\r\nSystem.Windows.Forms.UITests.ImageListTests.ImageList_FinalizerReleasesNativeHandle_ReturnsExpected [FAIL]\r\n      Assert.Equal() Failure\r\n      Expected: 32\r\n      Actual:   31\r\n      Stack Trace:\r\n        /_/src/System.Windows.Forms/tests/IntegrationTests/UIIntegrationTests/ImageListTests.cs(47,0): at System.Windows.Forms.UITests.ImageListTests.ImageList_FinalizerReleasesNativeHandle_ReturnsExpected()\r\n      Output:\r\n        GDI handles before: 32\r\n        GDI handles after: 31\r\n```\r\n**Expected behavior:**\r\n- All correct tests pass every time.\r\n\r\n**Minimal repro:**\r\n- Run unit tests on x86 environment (or create a PR with changes, CI build will do it)\r\n","Url":"https://github.com/dotnet/winforms/issues/6635","RelatedDescription":"Open issue \"ImageList_FinalizerReleasesNativeHandle_ReturnsExpected test is flaky in x86 Debug CI build\" (#6635)"},{"Id":"1126428434","IsPullRequest":true,"CreatedAt":"2022-02-07T20:53:13","Actor":"Tanya-Solyanik","Number":"6634","RawContent":null,"Title":"added hidden column and row to a DGV in the integration test","State":"closed","Body":"This is a follow up on https://github.com/dotnet/winforms/pull/6498\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6634)","Url":"https://github.com/dotnet/winforms/pull/6634","RelatedDescription":"Closed or merged PR \"added hidden column and row to a DGV in the integration test\" (#6634)"},{"Id":"1125130522","IsPullRequest":true,"CreatedAt":"2022-02-07T06:46:48","Actor":"gpetrou","Number":"6629","RawContent":null,"Title":"Enable nullability in ImageKeyConverter","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ImageKeyConverter.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6629)","Url":"https://github.com/dotnet/winforms/pull/6629","RelatedDescription":"Closed or merged PR \"Enable nullability in ImageKeyConverter\" (#6629)"},{"Id":"1125140575","IsPullRequest":true,"CreatedAt":"2022-02-07T00:19:34","Actor":"gpetrou","Number":"6630","RawContent":null,"Title":"Enable nullability in Screen","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in Screen.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6630)","Url":"https://github.com/dotnet/winforms/pull/6630","RelatedDescription":"Closed or merged PR \"Enable nullability in Screen\" (#6630)"},{"Id":"1125171305","IsPullRequest":true,"CreatedAt":"2022-02-07T00:15:51","Actor":"gpetrou","Number":"6631","RawContent":null,"Title":"Enable nullability in ProgressBar","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ProgressBar.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6631)","Url":"https://github.com/dotnet/winforms/pull/6631","RelatedDescription":"Closed or merged PR \"Enable nullability in ProgressBar\" (#6631)"},{"Id":"1125251893","IsPullRequest":true,"CreatedAt":"2022-02-06T16:40:49","Actor":"gpetrou","Number":"6633","RawContent":null,"Title":"Enable nullability in SnappableControl and CommandsPane","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in SnappableControl and CommandsPane.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6633)","Url":"https://github.com/dotnet/winforms/pull/6633","RelatedDescription":"Open PR \"Enable nullability in SnappableControl and CommandsPane\" (#6633)"},{"Id":"1124867802","IsPullRequest":false,"CreatedAt":"2022-02-05T11:49:13","Actor":"Janiel13","Number":"6625","RawContent":null,"Title":"Janiel13","State":"closed","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\n\n**Is your feature request related to a problem? Please describe.**\n<!--\n    A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\n  -->\n\n**Describe the solution you'd like and alternatives you've considered**\n<!--\n    A clear and concise description of what you want to happen. This includes:\n    - Description of what API need to be added or changed.\n    - Code that shows the surface area of the API.\n    - Code that shows real world scenarios, and how they would otherwise be handled.\n    - Details showing the usage/consumption of the proposed new API, and alternatives (e.g. not having this API).\n    - Any other context or screenshots about the feature request here.\n\n    :exclamation: Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md for more details\n\n  -->\n\n\n**Will this feature affect UI controls?**\n<!--\n    Yes / No\n\n    If yes, describe the following:\n\n        - Will VS Designer need to support the feature? If yes, describe how you expect it to funсtion.\n        - What impact will it have on accessibility?\n        - Will this feature need to be localized or be localizable?\n  -->\n","Url":"https://github.com/dotnet/winforms/issues/6625","RelatedDescription":"Closed issue \"Janiel13\" (#6625)"},{"Id":"1124893065","IsPullRequest":true,"CreatedAt":"2022-02-05T10:27:15","Actor":"gpetrou","Number":"6627","RawContent":null,"Title":"Enable nullability in ListView","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in ListView.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6627)","Url":"https://github.com/dotnet/winforms/pull/6627","RelatedDescription":"Open PR \"Enable nullability in ListView\" (#6627)"},{"Id":"1124869951","IsPullRequest":true,"CreatedAt":"2022-02-05T08:24:41","Actor":"gpetrou","Number":"6626","RawContent":null,"Title":"Enable nullability in classes that inherit from NativeWindow","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in classes that inherit from NativeWindow.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6626)","Url":"https://github.com/dotnet/winforms/pull/6626","RelatedDescription":"Open PR \"Enable nullability in classes that inherit from NativeWindow\" (#6626)"},{"Id":"1124189970","IsPullRequest":true,"CreatedAt":"2022-02-04T18:17:01","Actor":"dotnet-maestro[bot]","Number":"6624","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20220203.2\r\n- **Date Produced**: February 3, 2022 5:10:31 PM UTC\r\n- **Commit**: 0ae04e5b33afac1c14a6127df1037f83d39a6ec3\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-preview.2.22102.17 to 7.0.0-preview.2.22103.2][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-preview.2.22102.17 to 7.0.0-preview.2.22103.2][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-preview.2.22102.17 to 7.0.0-preview.2.22103.2][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.2.22102.17 to 7.0.0-preview.2.22103.2][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-preview.2.22102.17 to 7.0.0-preview.2.22103.2][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.2.22102.17 to 7.0.0-preview.2.22103.2][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.2.22102.17 to 7.0.0-preview.2.22103.2][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-preview.2.22102.17 to 7.0.0-preview.2.22103.2][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.2.22102.17 to 7.0.0-preview.2.22103.2][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.2.22102.17 to 7.0.0-preview.2.22103.2][1]\r\n  - **System.CodeDom**: [from 7.0.0-preview.2.22102.17 to 7.0.0-preview.2.22103.2][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.2.22102.17 to 7.0.0-preview.2.22103.2][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.2.22102.17 to 7.0.0-preview.2.22103.2][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.2.22102.17 to 7.0.0-preview.2.22103.2][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-preview.2.22102.17 to 7.0.0-preview.2.22103.2][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-preview.2.22102.17 to 7.0.0-preview.2.22103.2][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.2.22102.17 to 7.0.0-preview.2.22103.2][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.2.22102.17 to 7.0.0-preview.2.22103.2][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.2.22102.17 to 7.0.0-preview.2.22103.2][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.2.22102.17 to 7.0.0-preview.2.22103.2][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-preview.2.22102.17 to 7.0.0-preview.2.22103.2][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-preview.2.22102.17 to 7.0.0-preview.2.22103.2][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.2.22102.17 to 7.0.0-preview.2.22103.2][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.2.22102.17 to 7.0.0-preview.2.22103.2][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.2.22102.17 to 7.0.0-preview.2.22103.2][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.2.22102.17 to 7.0.0-preview.2.22103.2][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-preview.2.22102.17 to 7.0.0-preview.2.22103.2][1]\r\n  - **System.Text.Json**: [from 7.0.0-preview.2.22102.17 to 7.0.0-preview.2.22103.2][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-preview.2.22102.17 to 7.0.0-preview.2.22103.2][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.2.22102.17 to 7.0.0-preview.2.22103.2][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/7550df8...0ae04e5\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6624)","Url":"https://github.com/dotnet/winforms/pull/6624","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6624)"},{"Id":"1124189226","IsPullRequest":true,"CreatedAt":"2022-02-04T18:16:51","Actor":"dotnet-maestro[bot]","Number":"6623","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20220203.1\r\n- **Date Produced**: February 3, 2022 10:28:45 AM UTC\r\n- **Commit**: 70831f0d126fe88b81d7dc8de11358e17a5ce364\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.22080.1 to 7.0.0-beta.22103.1][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22080.1 to 7.0.0-beta.22103.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.22080.1 to 7.0.0-beta.22103.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.22080.1 to 7.0.0-beta.22103.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.22080.1 to 7.0.0-beta.22103.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22080.1 to 7.0.0-beta.22103.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/4d6406f...70831f0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6623)","Url":"https://github.com/dotnet/winforms/pull/6623","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6623)"},{"Id":"1124151020","IsPullRequest":true,"CreatedAt":"2022-02-04T14:38:18","Actor":"vlada-shubina","Number":"6622","RawContent":null,"Title":"update arcade version and re-enable template localization","State":"closed","Body":"PR reenables template localization disabled in https://github.com/dotnet/winforms/pull/6441\r\nIssue was fixed in https://github.com/dotnet/templating/pull/4267 and available in latest version of arcade https://github.com/dotnet/arcade/pull/8395.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6622)","Url":"https://github.com/dotnet/winforms/pull/6622","RelatedDescription":"Closed or merged PR \"update arcade version and re-enable template localization\" (#6622)"},{"Id":"1124077903","IsPullRequest":false,"CreatedAt":"2022-02-04T11:06:18","Actor":"SergeySmirnov-Akvelon","Number":"6621","RawContent":null,"Title":"Combobox text field is not cleared when last item is removed","State":"open","Body":".NET Core Version: \r\n- 7.0.0-preview.2.22102.17\r\n\r\nHave you experienced this same bug with .NET Framework?: \r\n- Yes\r\n\r\n**Problem description:**\r\n\r\n1. Create a `Form` with a `ComboBox` and a `Button`.\r\n2. Add two `Items` to the `ComboBox`.\r\n3. Add an event to remove the selected `Item` when the `Button` is clicked.\r\n4. Run the application.\r\n5. Choose any `Item`.\r\n6. Click on the `Button` (`Combobox` text field will be cleared).\r\n7. Choose another `Item`.\r\n8. Click on the `Button`.\r\n\r\n**Actual behavior:**\r\nThe text field contains the name of the `Item`.\r\n\r\n**Expected behavior:**\r\nThe text field should be cleared.","Url":"https://github.com/dotnet/winforms/issues/6621","RelatedDescription":"Open issue \"Combobox text field is not cleared when last item is removed\" (#6621)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-02-09T03:30:32.1995841Z","RunDurationInMilliseconds":581}