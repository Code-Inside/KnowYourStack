{"Data":{"GitHub":{"Issues":[{"Id":"1423994260","IsPullRequest":true,"CreatedAt":"2022-10-27T01:30:40","Actor":"v-elnovikova","Number":"8039","RawContent":null,"Title":"Added unit tests for \"AccessibleObject.FragmentNavigate\" method in MonthCalendar-related classes","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes https://github.com/dotnet/winforms/issues/6094\r\n\r\n\r\n## Proposed changes\r\n\r\nAdded missing unit tests to check the method behavior in these classes:\r\n- MonthCalendarAccessibleObject\r\n- CalendarAccessibleObject\r\n- CalendarPreviousButtonAccessibleObject\r\n- CalendarNextButtonAccessibleObject\r\n- CalendarTodayLinkAccessibleObject\r\n- CalendarBodyAccessibleObject\r\n- CalendarHeaderAccessibleObject\r\n- CalendarDayOfWeekCellAccessibleObject\r\n- CalendarWeekNumberCellAccessibleObject\r\n- CalendarRowAccessibleObject\r\n- CalendarCellAccessibleObject\r\n\r\n\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .NET 7.0.0-rc.1.22426.10\r\n- Windows 11\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8039)","Url":"https://github.com/dotnet/winforms/pull/8039","RelatedDescription":"Closed or merged PR \"Added unit tests for \"AccessibleObject.FragmentNavigate\" method in MonthCalendar-related classes\" (#8039)"},{"Id":"1423959733","IsPullRequest":true,"CreatedAt":"2022-10-27T01:28:40","Actor":"v-elnovikova","Number":"8037","RawContent":null,"Title":"Fixed unit tests for \"AccessibleObject.FragmentNavigate\" method in ListViewItem-related classes","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes https://github.com/dotnet/winforms/issues/6094\r\n\r\n\r\n## Proposed changes\r\n\r\n- Fixed tests for ListView in virtual mode\r\n- Added comments on related test cases code location\r\n\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .NET 7.0.0-rc.2.22472.3\r\n- Windows 11\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8037)","Url":"https://github.com/dotnet/winforms/pull/8037","RelatedDescription":"Closed or merged PR \"Fixed unit tests for \"AccessibleObject.FragmentNavigate\" method in ListViewItem-related classes\" (#8037)"},{"Id":"1424803974","IsPullRequest":true,"CreatedAt":"2022-10-27T01:27:17","Actor":"JeremyKuhne","Number":"8045","RawContent":null,"Title":"Null annotate Com2Interop","State":"closed","Body":"This was a bit tricky as we deviate a bit from the base annotations. I've moved a number of the collections to generic ones to facilitate this and cleaned up more to keep null state clearer.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8045)","Url":"https://github.com/dotnet/winforms/pull/8045","RelatedDescription":"Closed or merged PR \"Null annotate Com2Interop\" (#8045)"},{"Id":"1423950593","IsPullRequest":true,"CreatedAt":"2022-10-27T01:25:33","Actor":"v-elnovikova","Number":"8036","RawContent":null,"Title":"Added unit tests for \"AccessibleObject.FragmentNavigate\" method in UpDown-related classes","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #6094\r\n\r\n## Proposed changes\r\n\r\n- Add missing unit tests to check the method behavior in these classes: UpDownButtonsAccessibleObject, DirectionButtonAccessibleObject, DomainUpDownAccessibleObject\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .NET 7.0.0-rc.2.22472.3\r\n- Windows 11\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8036)","Url":"https://github.com/dotnet/winforms/pull/8036","RelatedDescription":"Closed or merged PR \"Added unit tests for \"AccessibleObject.FragmentNavigate\" method in UpDown-related classes\" (#8036)"},{"Id":"1423909351","IsPullRequest":true,"CreatedAt":"2022-10-27T01:12:13","Actor":"dotnet-maestro[bot]","Number":"8035","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20221025.7\r\n- **Date Produced**: October 26, 2022 4:53:08 AM UTC\r\n- **Commit**: 7b5ab359a84d6a2c36a864a23c23bbe7686cae95\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22524.5 to 8.0.0-alpha.1.22525.7][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/5108757...7b5ab35\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8035)","Url":"https://github.com/dotnet/winforms/pull/8035","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8035)"},{"Id":"1424874539","IsPullRequest":false,"CreatedAt":"2022-10-27T01:00:36","Actor":"JeremyKuhne","Number":"8046","RawContent":null,"Title":" System.Windows.Forms.Tests.ListControlTests.ListControl_FormatInfo_Set_CallsRefreshItems fails intermittently","State":"open","Body":"### Test\n\nSystem.Windows.Forms.Tests.ListControlTests.ListControl_FormatInfo_Set_CallsRefreshItems\n\n### Issue description\n\n\r\nSystem.Windows.Forms.Tests.ListControlTests.ListControl_FormatInfo_Set_CallsRefreshItems has been failing periodically, in the instance I investigated this was the error:\r\n\r\n```\r\nError message\r\nAssert.Same() Failure\\r\\nExpected: en-US\\r\\nActual:   en-US\r\n\r\nStack trace\r\n   at System.Windows.Forms.Tests.ListControlTests.ListControl_FormatInfo_Set_CallsRefreshItems() in /_/src/System.Windows.Forms/tests/UnitTests/System/Windows/Forms/ListControlTests.cs:line 1406\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n   at System.Reflection.MethodInvoker.Invoke(Object obj, IntPtr* args, BindingFlags invokeAttr)\r\n```\r\n\r\n`Same` doesn't seem right, even if we think it doesn't change it, from a consumption standpoint it shouldn't matter. Should probably change to `Equals`.","Url":"https://github.com/dotnet/winforms/issues/8046","RelatedDescription":"Open issue \" System.Windows.Forms.Tests.ListControlTests.ListControl_FormatInfo_Set_CallsRefreshItems fails intermittently\" (#8046)"},{"Id":"1423825799","IsPullRequest":true,"CreatedAt":"2022-10-27T00:52:56","Actor":"v-elnovikova","Number":"8034","RawContent":null,"Title":"Fixed ToolStrip overflow button arrow color in HC themes","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #7724\r\n\r\n\r\n## Proposed changes\r\n\r\n- Changed ToolStrip overflow button arrow color when the button is in selected state. Affects HC themes only.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Better button arrow visibility on HC themes\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nWindows 11:\r\n![win11_before](https://user-images.githubusercontent.com/113603457/198006539-66ac2850-fd86-4d5c-bc83-39639e21f5d1.png)\r\n\r\nWindows 10:\r\n![win10_before](https://user-images.githubusercontent.com/113603457/198006551-afb2949b-05e3-4a4c-96fa-fa05644e482e.png)\r\n\r\n### After\r\n\r\nWindows 11:\r\n![win11_after](https://user-images.githubusercontent.com/113603457/198006643-d874d034-747c-4869-a431-7e27dc7591e1.png)\r\n\r\nWindows10:\r\n![win10_after](https://user-images.githubusercontent.com/113603457/198006667-cef8dccf-17bc-45f4-9f3e-d1e9b98757ab.png)\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n- Accessibility Insights for Windows - Color contrast analyzer\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- Windows 10: .NET SDK 7.0.100-rc.2.22477.23\r\n- Windows 11: .NET SDK 7.0.100-rc.2.22477.23\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8034)","Url":"https://github.com/dotnet/winforms/pull/8034","RelatedDescription":"Closed or merged PR \"Fixed ToolStrip overflow button arrow color in HC themes\" (#8034)"},{"Id":"1424372303","IsPullRequest":true,"CreatedAt":"2022-10-26T23:27:16","Actor":"gpetrou","Number":"8044","RawContent":null,"Title":"Enable nullability in ToolStripSplitButtonButton","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripSplitButtonButton.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8044)","Url":"https://github.com/dotnet/winforms/pull/8044","RelatedDescription":"Closed or merged PR \"Enable nullability in ToolStripSplitButtonButton\" (#8044)"},{"Id":"1424368197","IsPullRequest":true,"CreatedAt":"2022-10-26T23:24:54","Actor":"gpetrou","Number":"8043","RawContent":null,"Title":"Enable nullability in ToolStripSplitStackDragDropHandler","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripSplitStackDragDropHandler.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8043)","Url":"https://github.com/dotnet/winforms/pull/8043","RelatedDescription":"Closed or merged PR \"Enable nullability in ToolStripSplitStackDragDropHandler\" (#8043)"},{"Id":"1424343309","IsPullRequest":true,"CreatedAt":"2022-10-26T23:15:34","Actor":"gpetrou","Number":"8040","RawContent":null,"Title":"Enable nullability in ToolStripSplitButton","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripSplitButton.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8040)","Url":"https://github.com/dotnet/winforms/pull/8040","RelatedDescription":"Closed or merged PR \"Enable nullability in ToolStripSplitButton\" (#8040)"},{"Id":"1424346687","IsPullRequest":true,"CreatedAt":"2022-10-26T23:04:55","Actor":"gpetrou","Number":"8041","RawContent":null,"Title":"Enable nullability in PropertyGridToolStrip","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in PropertyGridToolStrip.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8041)","Url":"https://github.com/dotnet/winforms/pull/8041","RelatedDescription":"Closed or merged PR \"Enable nullability in PropertyGridToolStrip\" (#8041)"},{"Id":"1424358101","IsPullRequest":true,"CreatedAt":"2022-10-26T23:04:32","Actor":"gpetrou","Number":"8042","RawContent":null,"Title":"Enable nullability in ToolStripProgressBarControl","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripProgressBarControl.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8042)","Url":"https://github.com/dotnet/winforms/pull/8042","RelatedDescription":"Closed or merged PR \"Enable nullability in ToolStripProgressBarControl\" (#8042)"},{"Id":"1421427742","IsPullRequest":true,"CreatedAt":"2022-10-26T21:51:26","Actor":"lonitra","Number":"8020","RawContent":null,"Title":"Convert AxHost Interfaces to Cswin32","State":"closed","Body":"- Removes our definition of `IOleInPlaceActiveObject`, `IOleInPlaceObject`, `IOleInPlaceObjectWindowless`,\r\n`IOleWindow`,`IOleClientSite`,`IOleContainer`,`IOleObject`,`IPerPropertyBrowsing` and use Cswin32 interfaces\r\n- Add helper functions in ComHelpers.cs to reduce redundant code revolving around querying for interface of an object\r\n- Axhost interfaces revolving around streams/storage will be a follow up.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8020)","Url":"https://github.com/dotnet/winforms/pull/8020","RelatedDescription":"Closed or merged PR \"Convert AxHost Interfaces to Cswin32\" (#8020)"},{"Id":"1423992156","IsPullRequest":true,"CreatedAt":"2022-10-26T13:08:45","Actor":"draganovik","Number":"8038","RawContent":null,"Title":"Update README.md","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n## Proposed changes\r\n\r\n- \r\n- \r\n- \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8038)","Url":"https://github.com/dotnet/winforms/pull/8038","RelatedDescription":"Closed or merged PR \"Update README.md\" (#8038)"},{"Id":"1423736375","IsPullRequest":false,"CreatedAt":"2022-10-26T09:42:39","Actor":"Olina-Zhang","Number":"8033","RawContent":null,"Title":"[Accessibility] The menuItem with Alignment: right setting is not displayed in UIA tree when setting MenuStrip's GripStyle as Visible","State":"open","Body":"### .NET version\n\n8.0.100-alpha.1.22514.14\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo，repro in previous .Net versions: 7.0/6.0 and .Net Core 3.1\n\n### Issue description\n\nThe menuItem with Alignment: right setting is not displayed in UIA tree when setting MenuStrip's GripStyle as Visible\r\n\r\n.Net 8.0:\r\n![image](https://user-images.githubusercontent.com/26474449/197992664-3312b542-5302-4c6b-92de-250e8543f8a9.png)\r\n\r\n\r\n.Net Framework 4.8.1:\r\n![image](https://user-images.githubusercontent.com/26474449/197992824-58190ee8-f99d-4b56-a093-ab18c072cf17.png)\r\n\n\n### Steps to reproduce\n\n1. Create a Winforms .Net 8.0 application\r\n2. Add a MenuStrip to form designer with \"Insert Standard Items\"\r\n3. Choose any item, and set its Alignment as Right\r\n4. Set MenuStrip's GripStyle as Visible\r\n5. Build and run application\r\n6. Use AccessibilityInsight or Inspect to check the MenuItems in UIA tree\r\n\r\nTested app:\r\n[MenuStripSample.zip](https://github.com/dotnet/winforms/files/9868207/MenuStripSample.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/8033","RelatedDescription":"Open issue \"[Accessibility] The menuItem with Alignment: right setting is not displayed in UIA tree when setting MenuStrip's GripStyle as Visible\" (#8033)"},{"Id":"1423513356","IsPullRequest":true,"CreatedAt":"2022-10-26T06:40:09","Actor":"NikitaSemenovAkvelon","Number":"8032","RawContent":null,"Title":"Fixed incorrect Column value in ListViewSubItemAccessibleObject","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #8025\r\n\r\n\r\n## Proposed changes\r\n\r\n- Fixed value in the `Column` property of `ListViewSubItemAccessibleObject` class.\r\n- Covered `ListViewSubItemAccessibleObject.GetColumnHeaderItems` method with tests.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Customer will see correct header info from a sub-item.\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![Screenshot 2022-10-26 084435](https://user-images.githubusercontent.com/109065597/197952731-1a3a8d94-458a-405e-96ce-36d7f7974eb2.png)\r\n![Screenshot 2022-10-26 084406](https://user-images.githubusercontent.com/109065597/197952756-54799e43-dab1-4642-b639-3d0300f5414b.png)\r\n\r\n\r\n### After\r\n\r\n![Screenshot 2022-10-26 084114](https://user-images.githubusercontent.com/109065597/197952793-ce71f38d-541d-461c-ba7e-08efec77ce27.png)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manually\r\n- Unit tests \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n- Inspect\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n.NET SDK:\r\n Version:   8.0.100-alpha.1.22512.5\r\n Commit:    1b80461e45\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.22621\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8032)","Url":"https://github.com/dotnet/winforms/pull/8032","RelatedDescription":"Open PR \"Fixed incorrect Column value in ListViewSubItemAccessibleObject\" (#8032)"},{"Id":"1423227303","IsPullRequest":true,"CreatedAt":"2022-10-26T03:22:47","Actor":"elachlan","Number":"8031","RawContent":null,"Title":"CA2007 Consider calling ConfigureAwait on the awaited task","State":"closed","Body":"Enabled CA2007 analyzer.\r\nhttps://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca2007\r\n\r\nManually fixed. \r\n**Team needs to verify whether `ConfigureAwait(False)` or `ConfigureAwait(True)` is appropriate.**\r\nRelated: https://github.com/dotnet/winforms/issues/7887\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8031)","Url":"https://github.com/dotnet/winforms/pull/8031","RelatedDescription":"Closed or merged PR \"CA2007 Consider calling ConfigureAwait on the awaited task\" (#8031)"},{"Id":"1423163090","IsPullRequest":true,"CreatedAt":"2022-10-26T00:13:04","Actor":"elachlan","Number":"8028","RawContent":null,"Title":"SA1121 Use built-in type alias","State":"closed","Body":"Enable SA1121 analyzer.\r\nhttps://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1121.md\r\n\r\nUsed solution wide code fix.\r\n\r\nRelated: #7887\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8028)","Url":"https://github.com/dotnet/winforms/pull/8028","RelatedDescription":"Closed or merged PR \"SA1121 Use built-in type alias\" (#8028)"},{"Id":"1423174663","IsPullRequest":true,"CreatedAt":"2022-10-25T23:57:33","Actor":"elachlan","Number":"8029","RawContent":null,"Title":"SA1129 Do not use default value type constructor","State":"closed","Body":"Enabled SA1129 analyzer.\r\nhttps://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1129.md\r\n\r\nApplied solution wide code fix.\r\nRelated: #7887\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8029)","Url":"https://github.com/dotnet/winforms/pull/8029","RelatedDescription":"Closed or merged PR \"SA1129 Do not use default value type constructor\" (#8029)"},{"Id":"1422760710","IsPullRequest":true,"CreatedAt":"2022-10-25T23:23:44","Actor":"gpetrou","Number":"8026","RawContent":null,"Title":"Enable nullability in ToolStripCustomIComparer","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripCustomIComparer\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8026)","Url":"https://github.com/dotnet/winforms/pull/8026","RelatedDescription":"Closed or merged PR \"Enable nullability in ToolStripCustomIComparer\" (#8026)"},{"Id":"1421015162","IsPullRequest":true,"CreatedAt":"2022-10-25T23:16:42","Actor":"gpetrou","Number":"8017","RawContent":null,"Title":"Enable nullability in ToolStripOverflow","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripOverflow.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8017)","Url":"https://github.com/dotnet/winforms/pull/8017","RelatedDescription":"Closed or merged PR \"Enable nullability in ToolStripOverflow\" (#8017)"},{"Id":"1422769496","IsPullRequest":true,"CreatedAt":"2022-10-25T23:02:20","Actor":"gpetrou","Number":"8027","RawContent":null,"Title":"Enable nullability in ToolStripPanelControlCollection","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripPanelControlCollection.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8027)","Url":"https://github.com/dotnet/winforms/pull/8027","RelatedDescription":"Closed or merged PR \"Enable nullability in ToolStripPanelControlCollection\" (#8027)"},{"Id":"1423187240","IsPullRequest":true,"CreatedAt":"2022-10-25T23:01:29","Actor":"elachlan","Number":"8030","RawContent":null,"Title":"SA1205 Partial elements should declare an access modifier","State":"closed","Body":"Enabled SA1205 analyzer.\r\nhttps://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1205.md\r\n\r\nApplied solution wide code fix.\r\nRelated: #7887\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8030)","Url":"https://github.com/dotnet/winforms/pull/8030","RelatedDescription":"Closed or merged PR \"SA1205 Partial elements should declare an access modifier\" (#8030)"},{"Id":"1422354114","IsPullRequest":true,"CreatedAt":"2022-10-25T17:02:17","Actor":"dotnet-maestro[bot]","Number":"8024","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20221024.5\r\n- **Date Produced**: October 25, 2022 8:47:06 AM UTC\r\n- **Commit**: 5108757b997c59ab8ba1fc5309ab0d4e730e2b77\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.22523.2 to 8.0.0-alpha.1.22524.5][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.22523.2 to 8.0.0-alpha.1.22524.5][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22523.2 to 8.0.0-alpha.1.22524.5][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22523.2 to 8.0.0-alpha.1.22524.5][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22523.2 to 8.0.0-alpha.1.22524.5][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.22523.2 to 8.0.0-alpha.1.22524.5][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22523.2 to 8.0.0-alpha.1.22524.5][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.22523.2 to 8.0.0-alpha.1.22524.5][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.22523.2 to 8.0.0-alpha.1.22524.5][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.22523.2 to 8.0.0-alpha.1.22524.5][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22523.2 to 8.0.0-alpha.1.22524.5][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22523.2 to 8.0.0-alpha.1.22524.5][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22523.2 to 8.0.0-alpha.1.22524.5][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22523.2 to 8.0.0-alpha.1.22524.5][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22523.2 to 8.0.0-alpha.1.22524.5][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.22523.2 to 8.0.0-alpha.1.22524.5][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22523.2 to 8.0.0-alpha.1.22524.5][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22523.2 to 8.0.0-alpha.1.22524.5][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22523.2 to 8.0.0-alpha.1.22524.5][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22523.2 to 8.0.0-alpha.1.22524.5][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22523.2 to 8.0.0-alpha.1.22524.5][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22523.2 to 8.0.0-alpha.1.22524.5][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.22523.2 to 8.0.0-alpha.1.22524.5][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22523.2 to 8.0.0-alpha.1.22524.5][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22523.2 to 8.0.0-alpha.1.22524.5][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22523.2 to 8.0.0-alpha.1.22524.5][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22523.2 to 8.0.0-alpha.1.22524.5][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22523.2 to 8.0.0-alpha.1.22524.5][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22523.2 to 8.0.0-alpha.1.22524.5][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22523.2 to 8.0.0-alpha.1.22524.5][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/33cb335...5108757\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8024)","Url":"https://github.com/dotnet/winforms/pull/8024","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8024)"},{"Id":"1422352886","IsPullRequest":true,"CreatedAt":"2022-10-25T12:34:19","Actor":"dotnet-maestro[bot]","Number":"8023","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20221024.5\r\n- **Date Produced**: October 24, 2022 9:22:19 PM UTC\r\n- **Commit**: c5dd6a1da2e6d9b3423ab809fcda8af2927a408b\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.22520.1 to 8.0.0-beta.22524.5][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.22520.1 to 8.0.0-beta.22524.5][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.22520.1 to 8.0.0-beta.22524.5][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.22520.1 to 8.0.0-beta.22524.5][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.22520.1 to 8.0.0-beta.22524.5][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.22520.1 to 8.0.0-beta.22524.5][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/7e27c0a...c5dd6a1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8023)","Url":"https://github.com/dotnet/winforms/pull/8023","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#8023)"},{"Id":"1422388387","IsPullRequest":false,"CreatedAt":"2022-10-25T12:31:30","Actor":"NikitaSemenovAkvelon","Number":"8025","RawContent":null,"Title":"[Accessibility] ArgumentOutOfRange exception is raised on selecting the last SubItem of ListViewItem in Details view if it has an image.","State":"open","Body":"### .NET version\r\n\r\n8.0.100-alpha.1.22512.5\r\n\r\n### Did it work in .NET Framework?\r\n\r\nYes\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nYes, reproduces only in .NET 8.\r\n\r\n### Issue description\r\n\r\nIf select or just move cursor over the last `SubItem` of `ListViewItem` which has an image in `Details` view an `ArgumentOutOfRange` exception will be raised.\r\n![Screenshot 2022-10-25 160736](https://user-images.githubusercontent.com/109065597/197772637-d8f65ae9-95c6-4e6e-b540-70c1eb26d0d0.png)\r\nIt is a regression bug from #7672\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a new WinForms application.\r\n2. Add ListView.\r\n3. Set View to Details.\r\n4. Add a new item with an image.\r\n5. Select the last SubItem while some accessibility tool (e.g. AI) is working.","Url":"https://github.com/dotnet/winforms/issues/8025","RelatedDescription":"Open issue \"[Accessibility] ArgumentOutOfRange exception is raised on selecting the last SubItem of ListViewItem in Details view if it has an image.\" (#8025)"},{"Id":"1421909435","IsPullRequest":true,"CreatedAt":"2022-10-25T06:04:26","Actor":"NikitaSemenovAkvelon","Number":"8022","RawContent":null,"Title":"Adding the ListViewItemImageAccessibleObject as a child in a ListViewItem in LargeIcon, SmallIcon and List views.","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nPartly fixes #4690 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Added base class `ListViewItemIconAccessibleObject` and its implementations `ListViewItemLargeIconAccessibleObject` and `ListViewItemSmallIconAccessibleObject`.\r\n- Used `ListViewItemIconAccessibleObject` as base class of `ListViewItemListAccessibleObject`.\r\n- Refactored `ListViewItemBaseAccessibleObject` and implementations. Moved common logic to the base class.\r\n- Removed unused resource string `ListViewItemAccessibilityObjectInvalidViewsException`.\r\n- Configured `ListViewItem` to support new item AO.\r\n- Modified ListViewAccessibleObject to support image's AO in `LargeIcon`, `SmallIcon` and `List`  views.\r\n- Fixed old unit tests.\r\n- Added new unit tests.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- User can see information about ListViewItem's image via accessibility tools in `LargeIcon`, `SmallIcon` and `List` views.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![Screenshot 2022-10-25 095038](https://user-images.githubusercontent.com/109065597/197694538-55f8e977-87b8-4d78-97ca-8d0507996fc8.png)\r\n_LargeIcon view_\r\n\r\n![Screenshot 2022-10-25 094947](https://user-images.githubusercontent.com/109065597/197694563-457ef6c9-2cc4-4148-97b1-4316e07ad798.png)\r\n_SmallIcon view_\r\n\r\n![Screenshot 2022-10-25 152011](https://user-images.githubusercontent.com/109065597/197759844-c579608d-6d7d-4125-9ccb-350e1d3768f4.png)\r\n_List view_\r\n\r\n### After\r\n\r\n![Screenshot 2022-10-25 094535](https://user-images.githubusercontent.com/109065597/197694626-f98db8bc-132e-45ab-b896-cf2022991a6b.png)\r\n_LargeIcon view_\r\n\r\n![Screenshot 2022-10-25 094647](https://user-images.githubusercontent.com/109065597/197694644-ae185029-5c1a-4e3b-9191-08a49f96ec79.png)\r\n_SmallIcon view_\r\n\r\n![Screenshot 2022-10-25 151244](https://user-images.githubusercontent.com/109065597/197759873-b66fbc6b-9b8f-4282-a78a-3b01d5d7c04f.png)\r\n_List view_\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manually\r\n- Unit testing \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n- Inspect\r\n- AI\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n.NET SDK:\r\n Version:   8.0.100-alpha.1.22512.5\r\n Commit:    1b80461e45\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.22621\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8022)","Url":"https://github.com/dotnet/winforms/pull/8022","RelatedDescription":"Open PR \"Adding the ListViewItemImageAccessibleObject as a child in a ListViewItem in LargeIcon, SmallIcon and List views.\" (#8022)"},{"Id":"1421175727","IsPullRequest":true,"CreatedAt":"2022-10-24T23:29:07","Actor":"dreddy-work","Number":"8018","RawContent":null,"Title":"Fix WM_GETDPISCALEDSIZE message handling.","State":"closed","Body":"WM_GETDPISCALEDSIZE is sent once per device and when moved back to same device, we only get DPI_CHANGED message but not WM_GETDPISCALEDSIZE. Windows cache the result from the first time and reuse it. This isn't very clear from the [documentation](https://learn.microsoft.com/en-us/windows/win32/hidpi/wm-getdpiscaledsize) and is found while experimenting and validating the scenarios.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8018)","Url":"https://github.com/dotnet/winforms/pull/8018","RelatedDescription":"Closed or merged PR \"Fix WM_GETDPISCALEDSIZE message handling.\" (#8018)"},{"Id":"1421520463","IsPullRequest":true,"CreatedAt":"2022-10-24T22:06:20","Actor":"elachlan","Number":"8021","RawContent":null,"Title":"Add Test for FolderBrowserDialog","State":"open","Body":"Fixes #79\r\nRelated: #7981\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8021)","Url":"https://github.com/dotnet/winforms/pull/8021","RelatedDescription":"Open PR \"Add Test for FolderBrowserDialog\" (#8021)"},{"Id":"1421215300","IsPullRequest":true,"CreatedAt":"2022-10-24T19:03:00","Actor":"JeremyKuhne","Number":"8019","RawContent":null,"Title":"Break out Com2* subclasses","State":"closed","Body":"Just breaks out some subclasses, no code changes otherwise.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8019)","Url":"https://github.com/dotnet/winforms/pull/8019","RelatedDescription":"Closed or merged PR \"Break out Com2* subclasses\" (#8019)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-10-27T03:30:32.7762228Z","RunDurationInMilliseconds":578}