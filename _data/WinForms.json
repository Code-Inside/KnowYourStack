{"Data":{"GitHub":{"Issues":[{"Id":"1430585086","IsPullRequest":true,"CreatedAt":"2022-10-31T22:59:42","Actor":"Tanya-Solyanik","Number":"8081","RawContent":null,"Title":"Removed a duplicate WIN32_ERROR from  NativeMethods.txt ","State":"closed","Body":" Removed a duplicate instance of WIN32_ERROR line in NativeMethods.txt file.\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8081)","Url":"https://github.com/dotnet/winforms/pull/8081","RelatedDescription":"Closed or merged PR \"Removed a duplicate WIN32_ERROR from  NativeMethods.txt \" (#8081)"},{"Id":"1427469261","IsPullRequest":true,"CreatedAt":"2022-10-31T21:07:59","Actor":"gpetrou","Number":"8061","RawContent":null,"Title":"Enable nullability in LinkCollection","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in LinkCollection.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8061)","Url":"https://github.com/dotnet/winforms/pull/8061","RelatedDescription":"Closed or merged PR \"Enable nullability in LinkCollection\" (#8061)"},{"Id":"1430208744","IsPullRequest":true,"CreatedAt":"2022-10-31T20:35:26","Actor":"lonitra","Number":"8078","RawContent":null,"Title":"Convert IOleControl Interface to Cswin32","State":"closed","Body":"- Convert structs `ACCEL` and `CONTROLINFO` to Cswin32\r\n- Convert methods `CreateAcceleratorTable` and `IsAccelerator` to Cswin32\r\n- general clean up\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8078)","Url":"https://github.com/dotnet/winforms/pull/8078","RelatedDescription":"Closed or merged PR \"Convert IOleControl Interface to Cswin32\" (#8078)"},{"Id":"1430239264","IsPullRequest":true,"CreatedAt":"2022-10-31T20:11:35","Actor":"gpetrou","Number":"8079","RawContent":null,"Title":"Enable nullability in HorizontalRowManager","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in HorizontalRowManager.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8079)","Url":"https://github.com/dotnet/winforms/pull/8079","RelatedDescription":"Closed or merged PR \"Enable nullability in HorizontalRowManager\" (#8079)"},{"Id":"1430276411","IsPullRequest":true,"CreatedAt":"2022-10-31T19:08:42","Actor":"JeremyKuhne","Number":"8080","RawContent":null,"Title":"Add a few clarifying comments to COM stuff","State":"closed","Body":"Document ComHelpers and ComScope.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8080)","Url":"https://github.com/dotnet/winforms/pull/8080","RelatedDescription":"Closed or merged PR \"Add a few clarifying comments to COM stuff\" (#8080)"},{"Id":"1426838022","IsPullRequest":true,"CreatedAt":"2022-10-31T17:09:55","Actor":"gpetrou","Number":"8058","RawContent":null,"Title":"Enable nullability in ToolStripDropDown","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripDropDown.","Url":"https://github.com/dotnet/winforms/pull/8058","RelatedDescription":"Closed or merged PR \"Enable nullability in ToolStripDropDown\" (#8058)"},{"Id":"1430096301","IsPullRequest":true,"CreatedAt":"2022-10-31T16:50:28","Actor":"gpetrou","Number":"8075","RawContent":null,"Title":"Enable nullability in ToolStripContainerTypedControlCollection","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripContainerTypedControlCollection.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8075)","Url":"https://github.com/dotnet/winforms/pull/8075","RelatedDescription":"Closed or merged PR \"Enable nullability in ToolStripContainerTypedControlCollection\" (#8075)"},{"Id":"1429293518","IsPullRequest":true,"CreatedAt":"2022-10-31T16:49:19","Actor":"gpetrou","Number":"8073","RawContent":null,"Title":"Enable nullability in MultiPropertyDescriptorGridEntry","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in MultiPropertyDescriptorGridEntry.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8073)","Url":"https://github.com/dotnet/winforms/pull/8073","RelatedDescription":"Closed or merged PR \"Enable nullability in MultiPropertyDescriptorGridEntry\" (#8073)"},{"Id":"1429249095","IsPullRequest":true,"CreatedAt":"2022-10-31T16:48:22","Actor":"gpetrou","Number":"8071","RawContent":null,"Title":"Enable nullability in MultiSelectRootGridEntry","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in MultiSelectRootGridEntry.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8071)","Url":"https://github.com/dotnet/winforms/pull/8071","RelatedDescription":"Closed or merged PR \"Enable nullability in MultiSelectRootGridEntry\" (#8071)"},{"Id":"1430151242","IsPullRequest":false,"CreatedAt":"2022-10-31T16:43:44","Actor":"zydjohnHotmail","Number":"8077","RawContent":null,"Title":"How to fix the issue: \"The following controls were successfully added to the toolbox but are not enabled in the active designer\"","State":"open","Body":"### Environment\n\nVisual Studio 2022 (Version 17.3.6).\r\nOS: Windows 10 PRO (Version 21H2)\n\n### .NET version\n\n.NET 6.0\n\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\n\nYes. I can download and run its source in Visual Studio 2022 (the latest version).\r\nThe .csproj showed its target:\r\n    <TargetFrameworks>net5.0-windows;net40</TargetFrameworks>\r\n    <OutputType>Library</OutputType>\r\n\n\n### Issue description\n\nMy IDE: \r\nVisual Studio 2022 (Version 17.3.6).\r\nI want to port one custom control from this repo:\r\nhttps://github.com/dwmkerr/consolecontrol\r\nAccording to suggestions of the author, I simply import the custom control dll file:\r\nconsolecontrol.dll to toolbox in one C# WinForms app target .NET 6.0; actually, I also tried this with C# Winforms app target .NET 5.0.\r\nThe repo supported .NET 5.0, but if I install NUGET package: \r\nPM> Install-Package ConsoleControl -Version 1.3.0\r\nI got warning like: \r\nWarning\tNU1701\tPackage 'ConsoleControl 1.3.0' was restored using '.NETFramework,Version=v4.6.1, .NETFramework,Version=v4.6.2, .NETFramework,Version=v4.7, .NETFramework,Version=v4.7.1, .NETFramework,Version=v4.7.2, .NETFramework,Version=v4.8, .NETFramework,Version=v4.8.1' instead of the project target framework 'net6.0'. This package may not be fully compatible with your project.\r\n\r\nBut if I just add reference to consolecontrol.dll in one C# WinForms project, when I open Forms Designer, and tried to add a new tab in toolbox, and choose items for toolbox, I can see the following message:\r\nThe following controls were successfully added to the toolbox but are not enabled in the active designer.\r\nEven it seems not an error, but the result is: I can't see such item (custom control: consolecontrol) appear in toolbox, therefore, I can NOT drag and drop one onto Form1.\r\nPlease advise, how can I fix this issue: The following controls were successfully added to the toolbox but are not enabled in the active designer?\r\nThanks,\n\n### Steps to reproduce\n\nDownload file from:\r\nhttps://github.com/dwmkerr/consolecontrol.git\r\nUnzip it, and find consolecontrol.dll, then add reference to your WinForm project.\r\nTry to add it to Form Designer in Form1, inside toolbox, add new tab \"ConsoleControl\", then chosse items, browse to consolecontrol.dll file.\r\nThen click OK to add this custom control to toolbox in Form designer, you will see the information:\r\nThe following controls were successfully added to the toolbox but are not enabled in the active designer\n\n### Diagnostics\n\n_No response_","Url":"https://github.com/dotnet/winforms/issues/8077","RelatedDescription":"Open issue \"How to fix the issue: \"The following controls were successfully added to the toolbox but are not enabled in the active designer\"\" (#8077)"},{"Id":"1430122585","IsPullRequest":true,"CreatedAt":"2022-10-31T16:23:11","Actor":"gpetrou","Number":"8076","RawContent":null,"Title":"Enable nullability in DropDownHolder","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in DropDownHolder.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8076)","Url":"https://github.com/dotnet/winforms/pull/8076","RelatedDescription":"Open PR \"Enable nullability in DropDownHolder\" (#8076)"},{"Id":"1429732415","IsPullRequest":true,"CreatedAt":"2022-10-31T12:33:39","Actor":"dotnet-maestro[bot]","Number":"8074","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20221030.1\r\n- **Date Produced**: October 30, 2022 9:58:12 PM UTC\r\n- **Commit**: e6700ea21bbb17ca5058801259bc2d05957814d4\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22529.1 to 8.0.0-alpha.1.22530.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/9ed32f4...e6700ea\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8074)","Url":"https://github.com/dotnet/winforms/pull/8074","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8074)"},{"Id":"1429291441","IsPullRequest":true,"CreatedAt":"2022-10-31T05:46:58","Actor":"gpetrou","Number":"8072","RawContent":null,"Title":"Enable nullability in some ToolStrip members","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in some ToolStrip members.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8072)","Url":"https://github.com/dotnet/winforms/pull/8072","RelatedDescription":"Open PR \"Enable nullability in some ToolStrip members\" (#8072)"},{"Id":"1428089741","IsPullRequest":true,"CreatedAt":"2022-10-31T02:11:19","Actor":"gpetrou","Number":"8064","RawContent":null,"Title":"Enable nullability in MonthCalendar","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in MonthCalendar.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8064)","Url":"https://github.com/dotnet/winforms/pull/8064","RelatedDescription":"Closed or merged PR \"Enable nullability in MonthCalendar\" (#8064)"},{"Id":"1428097064","IsPullRequest":true,"CreatedAt":"2022-10-31T02:10:37","Actor":"gpetrou","Number":"8066","RawContent":null,"Title":"Enable nullability in GridToolTip","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in GridToolTip.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8066)","Url":"https://github.com/dotnet/winforms/pull/8066","RelatedDescription":"Closed or merged PR \"Enable nullability in GridToolTip\" (#8066)"},{"Id":"1426704487","IsPullRequest":true,"CreatedAt":"2022-10-31T02:09:50","Actor":"gpetrou","Number":"8056","RawContent":null,"Title":"Enable nullability in MdiWindowListStrip","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in MdiWindowListStrip.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8056)","Url":"https://github.com/dotnet/winforms/pull/8056","RelatedDescription":"Closed or merged PR \"Enable nullability in MdiWindowListStrip\" (#8056)"},{"Id":"1426714564","IsPullRequest":true,"CreatedAt":"2022-10-31T01:58:44","Actor":"gpetrou","Number":"8057","RawContent":null,"Title":"Enable nullability in StatusStrip","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in StatusStrip.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8057)","Url":"https://github.com/dotnet/winforms/pull/8057","RelatedDescription":"Closed or merged PR \"Enable nullability in StatusStrip\" (#8057)"},{"Id":"1428648911","IsPullRequest":true,"CreatedAt":"2022-10-31T01:55:20","Actor":"gpetrou","Number":"8068","RawContent":null,"Title":"Enable nullability in ToolStripNumericUpDownControl","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripNumericUpDownControl.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8068)","Url":"https://github.com/dotnet/winforms/pull/8068","RelatedDescription":"Closed or merged PR \"Enable nullability in ToolStripNumericUpDownControl\" (#8068)"},{"Id":"1428656152","IsPullRequest":true,"CreatedAt":"2022-10-31T01:54:45","Actor":"gpetrou","Number":"8069","RawContent":null,"Title":"Enable nullability in ToolStripPanelRowManager","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripPanelRowManager.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8069)","Url":"https://github.com/dotnet/winforms/pull/8069","RelatedDescription":"Closed or merged PR \"Enable nullability in ToolStripPanelRowManager\" (#8069)"},{"Id":"1428755925","IsPullRequest":true,"CreatedAt":"2022-10-30T12:33:05","Actor":"dotnet-maestro[bot]","Number":"8070","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20221029.1\r\n- **Date Produced**: October 29, 2022 6:40:48 PM UTC\r\n- **Commit**: 9ed32f4ab89b24b14ab83c5982cb728131a28f24\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22527.6 to 8.0.0-alpha.1.22529.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/feb4bee...9ed32f4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8070)","Url":"https://github.com/dotnet/winforms/pull/8070","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8070)"},{"Id":"1428102615","IsPullRequest":true,"CreatedAt":"2022-10-29T05:42:09","Actor":"gpetrou","Number":"8067","RawContent":null,"Title":"Enable nullability in Help","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in Help.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8067)","Url":"https://github.com/dotnet/winforms/pull/8067","RelatedDescription":"Open PR \"Enable nullability in Help\" (#8067)"},{"Id":"1428095339","IsPullRequest":true,"CreatedAt":"2022-10-29T05:14:00","Actor":"gpetrou","Number":"8065","RawContent":null,"Title":"Enable nullability in ToolStripDropDownItem","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripDropDownItem.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8065)","Url":"https://github.com/dotnet/winforms/pull/8065","RelatedDescription":"Open PR \"Enable nullability in ToolStripDropDownItem\" (#8065)"},{"Id":"1426366087","IsPullRequest":true,"CreatedAt":"2022-10-28T23:13:53","Actor":"dreddy-work","Number":"8054","RawContent":null,"Title":"Enable CodeQL in WinForms repo","State":"closed","Body":"- Enabling CodeQL for WinForms repo by adding new YML\r\n- CodeQL is increasing the build time hence, scheduled to run weekly and comply with the policy.\r\n- Will be adding new pipeline, new pipeline is going to run on this new YML, scheduled weekly, and separate from regular pipeline. \r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8054)","Url":"https://github.com/dotnet/winforms/pull/8054","RelatedDescription":"Closed or merged PR \"Enable CodeQL in WinForms repo\" (#8054)"},{"Id":"1427662014","IsPullRequest":true,"CreatedAt":"2022-10-28T19:50:19","Actor":"JeremyKuhne","Number":"8063","RawContent":null,"Title":"Reorder Message fields","State":"closed","Body":"Historically our first four fields matched the layout of MSG. Keeping it that way for better back compat.\r\n\r\nAs Message doesn't match MSG, they shouldn't be blitted over each other, but for those that might be doing this we can keep the order. Note that other future changes to the struct could break doing this sort of thing even if the first four fields stay the same.\r\n\r\n\r\nFixes #8062\r\nRelates to #5849\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8063)","Url":"https://github.com/dotnet/winforms/pull/8063","RelatedDescription":"Closed or merged PR \"Reorder Message fields\" (#8063)"},{"Id":"1425955111","IsPullRequest":true,"CreatedAt":"2022-10-28T19:36:21","Actor":"vseanreesermsft","Number":"8053","RawContent":null,"Title":"Update branding to 7.0.1","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8053)","Url":"https://github.com/dotnet/winforms/pull/8053","RelatedDescription":"Closed or merged PR \"Update branding to 7.0.1\" (#8053)"},{"Id":"1427221217","IsPullRequest":true,"CreatedAt":"2022-10-28T12:52:32","Actor":"conorgee","Number":"8060","RawContent":null,"Title":"Avoid excessive memory consumption by `TrackBar` control","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #329\r\n\r\n\r\n## Proposed changes\r\n\r\n- solving the issue of the laggy trackbar for large maximum \r\n- only creating ticks based on the physical limitations of the trackbar\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- solves the issue of ticks taking up a large amount of resources\r\n\r\n## Regression? \r\n\r\n-  No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8060)","Url":"https://github.com/dotnet/winforms/pull/8060","RelatedDescription":"Open PR \"Avoid excessive memory consumption by `TrackBar` control\" (#8060)"},{"Id":"1427160160","IsPullRequest":true,"CreatedAt":"2022-10-28T12:33:12","Actor":"dotnet-maestro[bot]","Number":"8059","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20221027.6\r\n- **Date Produced**: October 28, 2022 6:03:22 AM UTC\r\n- **Commit**: feb4bee67a111d6e6091b8492cef57a35191b1d9\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22526.6 to 8.0.0-alpha.1.22527.6][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/65233eb...feb4bee\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8059)","Url":"https://github.com/dotnet/winforms/pull/8059","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8059)"},{"Id":"1427571449","IsPullRequest":false,"CreatedAt":"2022-10-28T09:27:15","Actor":"icom85","Number":"8062","RawContent":null,"Title":"The WH_GETMESSAGE hook type is not working in .NET 7","State":"open","Body":"### Description\n\nHello!\r\n\r\nThe P/Invoked `SetWindowsHookEx` method using the [WH_GETMESSAGE](https://learn.microsoft.com/en-us/windows/win32/winmsg/about-hooks#wh_getmessage) hook type is not working in .NET 7. The messages that are constructed seem odd, for example in .NET 7 the WM_LBUTTONDOWN message is never created. The issue seems to be e regression as the same code and setup is working in .NET 6.\r\n\n\n### Reproduction Steps\n\n1. Create a simple WinForms project and target .NET 7.\r\n```XML\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>WinExe</OutputType>\r\n    <TargetFramework>net7.0-windows</TargetFramework>\r\n    <Nullable>enable</Nullable>\r\n    <UseWindowsForms>true</UseWindowsForms>\r\n    <ImplicitUsings>enable</ImplicitUsings>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\n2. In the click event of a button install the hook:\r\n```C#\r\nusing System.Runtime.InteropServices;\r\n\r\nnamespace GetMessageHookNet7\r\n{\r\n    public partial class Form1 : Form\r\n    {\r\n        const int WM_LBUTTONDOWN = 0x201;\r\n\r\n        private delegate int HookProc(int code, IntPtr wParam, IntPtr lParam);\r\n\r\n        [DllImport(\"user32.dll\")]\r\n        private static extern IntPtr SetWindowsHookEx(HookType code, HookProc func, IntPtr hInstance, int threadID);\r\n\r\n        [DllImport(\"kernel32.dll\")]\r\n        static extern int GetCurrentThreadId();\r\n\r\n        public Form1()\r\n        {\r\n            InitializeComponent();\r\n        }\r\n\r\n        private void button1_Click(object sender, EventArgs e)\r\n        {\r\n            this.button1.Enabled = false;\r\n            int threadId = GetCurrentThreadId();\r\n            SetWindowsHookEx(HookType.WH_GETMESSAGE, new HookProc(GetMessageHookProc), IntPtr.Zero, threadId);\r\n        }\r\n\r\n        private int GetMessageHookProc(int code, IntPtr wParam, IntPtr lParam)\r\n        {\r\n            if (code >= 0 && (long)wParam > 0)\r\n            {\r\n                Message msg = (Message)Marshal.PtrToStructure(lParam, typeof(Message));\r\n                if (msg.Msg == WM_LBUTTONDOWN)\r\n                {\r\n\r\n                }\r\n            }\r\n\r\n            return 0;\r\n        }\r\n\r\n        private enum HookType\r\n        {\r\n            WH_MSGFILTER = -1,\r\n            WH_JOURNALRECORD = 0,\r\n            WH_JOURNALPLAYBACK = 1,\r\n            WH_KEYBOARD = 2,\r\n            WH_GETMESSAGE = 3,\r\n            WH_CALLWNDPROC = 4,\r\n            WH_CBT = 5,\r\n            WH_SYSMSGFILTER = 6,\r\n            WH_MOUSE = 7,\r\n            WH_HARDWARE = 8,\r\n            WH_DEBUG = 9,\r\n            WH_SHELL = 10,\r\n            WH_FOREGROUNDIDLE = 11,\r\n            WH_CALLWNDPROCRET = 12,\r\n            WH_KEYBOARD_LL = 13,\r\n            WH_MOUSE_LL = 14\r\n        }\r\n    }\r\n}\r\n```\r\n4. Put a breakpoint in the `GetMessageHookProc` inside the _if_ statement where we check for the `WM_LBUTTONDOWN` message.\r\n3. Build and run the project.\r\n4. Click the button to install the hook.\r\n6. Click anywhere on the form.\r\n7. Notice that you will not stop at the breakpoint.\r\n\r\nDebugging the project, you will notice that some very strange messages be generated. I am attaching the test project for reference.\r\n[GetMessageHookNet7.zip](https://github.com/dotnet/runtime/files/9887034/GetMessageHookNet7.zip)\r\n\r\nThe issue also does not reproduce in .NET 6. I am attaching a short gif file showing the observed behavior.\r\n![net7-hook](https://user-images.githubusercontent.com/5156494/198553004-8b427580-a395-4942-bcdf-8709a67e036e.gif)\n\n### Expected behavior\n\nThe breakpoint inside the GetMessageHookProc is hit.\n\n### Actual behavior\n\nThe breakpoint inside the GetMessageHookProc is **not** hit.\n\n### Regression?\n\nYes, this issue is a regression. It does not reproduce in .NET 6. \r\n\r\nI tested it in the latest version of VS2022 - **17.4.0 Preview 5.0** and with .NET 7 SDK: **7.0.100-rc.2.22477.23** I also tested with the first preview of .NET 7 - **7.0.100-preview.1.22110.4** and issue still reproduces.\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/winforms/issues/8062","RelatedDescription":"Open issue \"The WH_GETMESSAGE hook type is not working in .NET 7\" (#8062)"},{"Id":"1426696920","IsPullRequest":true,"CreatedAt":"2022-10-28T05:24:56","Actor":"mikhailovalex","Number":"8055","RawContent":null,"Title":"Fix a SaveTabSelection method","State":"open","Body":"\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n\r\nHi,\r\n\r\n\r\n\r\nMy name is Alex M. I am a software developer at DevExpress WinForms Team.\r\n\r\n\r\n\r\nI created a pull request that fixes the following issue. It's related only for .NET 7 after this PR - [Combine PropertyGrid tab information.](https://github.com/dotnet/winforms/pull/6108).\r\n\r\n\r\n\r\n\r\n### Fixes\r\n\"Invalid cast error\" in the TryGetSavedTabSelection method. PropertyGrid saves information about selectedTab in a [SaveTabSelection ](https://github.com/dotnet/winforms/blob/7ef35233ec820db47dce981b9ba403850b98d7ec/src/System.Windows.Forms/src/System/Windows/Forms/PropertyGrid.cs#L3628) method. After change the _selectedTab field from int to a TabInfo record we should use a _tabs.IndexOf(_selectedTab) method. In a [TryGetSavedTabSelection ](https://github.com/dotnet/winforms/blob/7ef35233ec820db47dce981b9ba403850b98d7ec/src/System.Windows.Forms/src/System/Windows/Forms/PropertyGrid.cs#L3646) method we restore information and we expect int value in a _designerSelections Hashtable. \r\n\r\n\r\n\r\n\r\n\r\n## Proposed changes\r\n\r\n\r\n\r\n-Changed the type of value added to the _designerSelections dictionary in the SaveTabSelection method.\r\n\r\n\r\n\r\n-Before\r\nTabInfo \r\n\r\n\r\n\r\n-After\r\nint\r\n\r\n\r\n\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n## Customer Impact\r\n\r\n\r\n\r\nThe error occurs when an end-user modify somthing in Visual Studio designer.\r\n\r\n\r\n\r\n## Regression?\r\n\r\n\r\n\r\nYes\r\n\r\n\r\n\r\n## Risk\r\n\r\n\r\n\r\nMedium\r\n\r\n\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n\r\n\r\n* Manually\r\n\r\n\r\n\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\nVisualStudio 2022 Preview 4\r\n.NET 7 RC2\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8055)","Url":"https://github.com/dotnet/winforms/pull/8055","RelatedDescription":"Open PR \"Fix a SaveTabSelection method\" (#8055)"},{"Id":"1425893580","IsPullRequest":true,"CreatedAt":"2022-10-28T01:56:06","Actor":"lonitra","Number":"8052","RawContent":null,"Title":"Convert AxHost IPersistX Interface to Cswin32","State":"closed","Body":"- Converted rest of AxHost interfaces (IPersistX) to cswin32 version, which prompted for the conversion of other relating interfaces: `IStream`,`IStorage`,`IPropertyBag`,`IPicture`,`IPictureDisp`\r\n- Added helpers to ComHelpers.cs to get IDispatch property and get scoped pointers\r\n- Convert IStream vtable to the new pattern\r\n- Remove PictureWrapper\r\n- Create real mocks in Com2PictureConverterTests since IPicture can no longer be mocked using moq\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8052)","Url":"https://github.com/dotnet/winforms/pull/8052","RelatedDescription":"Closed or merged PR \"Convert AxHost IPersistX Interface to Cswin32\" (#8052)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-11-01T03:30:33.5836105Z","RunDurationInMilliseconds":555}