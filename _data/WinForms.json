{"Data":{"GitHub":{"Issues":[{"Id":"2321957471","IsPullRequest":true,"CreatedAt":"2024-05-28T23:04:25","Actor":"dotnet-maestro[bot]","Number":"11438","RawContent":null,"Title":"[release/9.0-preview5] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:af03d026-fbfc-4993-0242-08dc7a5ad585)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: af03d026-fbfc-4993-0242-08dc7a5ad585\r\n- **Build**: 20240528.5\r\n- **Date Produced**: May 28, 2024 9:01:41 PM UTC\r\n- **Commit**: d89832aaf3616212c6ffa32ed1320f5117907056\r\n- **Branch**: refs/heads/release/9.0-preview5\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **System.CodeDom**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **System.IO.Hashing**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **System.IO.Ports**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **System.Management**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **System.Speech**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **System.Text.Json**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-preview.5.24274.5 to 9.0.0-preview.5.24278.5][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/1594d257e7...d89832aaf3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:af03d026-fbfc-4993-0242-08dc7a5ad585)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11438)","Url":"https://github.com/dotnet/winforms/pull/11438","RelatedDescription":"Closed or merged PR \"[release/9.0-preview5] Update dependencies from dotnet/runtime\" (#11438)"},{"Id":"2321500625","IsPullRequest":false,"CreatedAt":"2024-05-28T16:37:16","Actor":"PoojaNamde","Number":"11437","RawContent":null,"Title":"Keyboard focus loss is observed when we press TAB key after \"Tree view\": A11y_.NET CoreWinforms_Common_Controls2_WebBrowser_Keyboard","State":"open","Body":"### .NET version\r\n\r\ndotnet-sdk-9.0.100-preview.5.24258.1\r\n\r\n### Did it work in .NET Framework?\r\n\r\nYes\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\n_No response_\r\n\r\n### Issue description\r\n\r\n### GitHub Tags:\r\n#A11yMAS; #A11yTCS; #A11ySev3; #BM_.NET Core[Winforms]_Win32_May2024; #.NETCore; #WCAG2.4.7; #DesktopApp; #Win11; #FTP; #Keyboard;\r\n\r\n### Environment Details:\r\nApp name: .NET Core Winforms\r\nWindow Version: Win 11\r\nOS Build: 22621.3085\r\n\r\n### Repro Steps:\r\n\r\n1. Launch the \"Accessibility core app\".\r\n2. Main Form screen would appear.\r\n3. TAB to \"Common_Controls2:Testing the controls under the Common_controls\" and hit ENTER key.\r\n4. Navigate using TAB key after the tree view.\r\n5. Observe the issue.\r\n\r\n### Actual Result:\r\nKeyboard focus loss is observed when we press TAB key after \"Tree view\".\r\n\r\n### Expected Result:\r\nKeyboard focus should be clearly visible on scrollbar present for \"Web browser\" control when we navigate using TAB key after the \"Tree view\".\r\n\r\n### User Impact:\r\nKeyboard users will not be able to identify where the focus is and will not be able to interact with the control.\r\n\r\n### Attachment\r\n\r\nhttps://github.com/dotnet/winforms/assets/90901519/071400ba-1e04-4c9a-93ef-94e7207b1e96\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/11437","RelatedDescription":"Open issue \"Keyboard focus loss is observed when we press TAB key after \"Tree view\": A11y_.NET CoreWinforms_Common_Controls2_WebBrowser_Keyboard\" (#11437)"},{"Id":"2321464833","IsPullRequest":false,"CreatedAt":"2024-05-28T16:17:40","Actor":"PoojaNamde","Number":"11436","RawContent":null,"Title":"Narrator screen reader is not announcing label associated with the control: A11y_.NET CoreWinforms_ Data Binding Example for controls_ScreenReader","State":"open","Body":"### .NET version\r\n\r\ndotnet-sdk-9.0.100-preview.5.24258.1\r\n\r\n### Did it work in .NET Framework?\r\n\r\nYes\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\n_No response_\r\n\r\n### Issue description\r\n\r\n**Please do not close this bug. This bug should only be closed by Trusted Tester after verification.**\r\n\r\n### GitHub Tags:\r\n#A11yMAS; #A11yTCS; #A11ySev2; #BM_.NET Core[Winforms]_Win32_May2024; #.NETCore; #WCAG1.3.1; #DesktopApp; #Win11; #FTP; #NVDA; #Narrator; #Element:Labels;\r\n\r\n### Environment Details:\r\nApp name: .NET Core Winforms\r\nWindow Version: Win 11\r\nOS Build: 22621.3085\r\n\r\n### Repro Steps:\r\n\r\n1. Turn on the Narrator/ NVDA screen reader.\r\n2. Launch the \"Accessibility core app\".\r\n3. Main Form screen would appear.\r\n4. TAB to \"DataBinding Example\" and hit ENTER key.\r\n5. \"Data Binding Example for controls\" screen would appear.\r\n6. TAB to \"Student number\", \"Female\", \"Is_Student\" and \"Agreement\" controls.\r\n7. Observe the issue.\r\n\r\n### Actual Result:\r\nNarrator screen reader is not announcing label associated with the \"Student number\", \"Female\", \"Is_Student\" and \"Agreement\" controls.\r\n\r\n**Similar issue is also observed with NVDA.**\r\n\r\n### Expected Result:\r\nNarrator screen reader should be announcing label associated with the \"Student number\", \"Female\", \"Is_Student\" and \"Agreement\" controls.\r\n\r\n### User Impact:\r\nScreen reader users will not be able to get the information about the control and will miss information here.\r\n\r\n### Attachment\r\n\r\n![11436_A11y_ NET CoreWinforms_ Data Binding Example for controls_Narrator](https://github.com/dotnet/winforms/assets/90901519/114b6b11-a2b6-4cc1-9d69-dd8a3ba592a1)\r\n![11436_A11y_ NET CoreWinforms_ Data Binding Example for controls_NVDA](https://github.com/dotnet/winforms/assets/90901519/0d41304c-603f-4ad0-838b-dc17ee86b4d7)\r\n","Url":"https://github.com/dotnet/winforms/issues/11436","RelatedDescription":"Open issue \"Narrator screen reader is not announcing label associated with the control: A11y_.NET CoreWinforms_ Data Binding Example for controls_ScreenReader\" (#11436)"},{"Id":"2320888212","IsPullRequest":true,"CreatedAt":"2024-05-28T12:42:14","Actor":"dotnet-maestro[bot]","Number":"11435","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20240527.5\r\n- **Date Produced**: May 28, 2024 4:02:55 AM UTC\r\n- **Commit**: a71f19b802c68967b956c495c041ab64a69fdd96\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **System.CodeDom**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **System.IO.Hashing**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **System.IO.Ports**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **System.Management**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **System.Speech**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **System.Text.Json**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-preview.5.24275.1 to 9.0.0-preview.5.24277.5][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/35e4aad602...a71f19b802\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11435)","Url":"https://github.com/dotnet/winforms/pull/11435","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#11435)"},{"Id":"2320887628","IsPullRequest":true,"CreatedAt":"2024-05-28T12:41:55","Actor":"dotnet-maestro[bot]","Number":"11434","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20240524.1\r\n- **Date Produced**: May 24, 2024 6:37:22 PM UTC\r\n- **Commit**: 91fdecfe881902a109205279e023037692db4c11\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.24272.5 to 9.0.0-beta.24274.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 9.0.0-beta.24272.5 to 9.0.0-beta.24274.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 9.0.0-beta.24272.5 to 9.0.0-beta.24274.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.24272.5 to 9.0.0-beta.24274.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 9.0.0-beta.24272.5 to 9.0.0-beta.24274.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.24272.5 to 9.0.0-beta.24274.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/2001d73c8f...91fdecfe88\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates sdk.version to 9.0.100-preview.4.24267.66\r\n  - Updates tools.dotnet to 9.0.100-preview.4.24267.66\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11434)","Url":"https://github.com/dotnet/winforms/pull/11434","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#11434)"},{"Id":"2320760225","IsPullRequest":false,"CreatedAt":"2024-05-28T10:58:37","Actor":"PoojaNamde","Number":"11433","RawContent":null,"Title":"There is no functionality provided to adjust columns width which is achievable using single pointer: A11y_.NET CoreWinforms_ Data Binding Example for controls_DraggingMovement","State":"open","Body":"### .NET version\r\n\r\ndotnet-sdk-9.0.100-preview.5.24258.1\r\n\r\n### Did it work in .NET Framework?\r\n\r\nYes\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\n_No response_\r\n\r\n### Issue description\r\n\r\n**Please do not close this bug. This bug should only be closed by Trusted Tester after verification.**\r\n\r\n### GitHub Tags:\r\n#A11yMAS; #A11yTCS; #A11ySev2; #BM_.NET Core[Winforms]_Win32_May2024; #.NETCore; #WCAG2.5.7; #A11yWCAG2.2#DesktopApp; #Win11; #FTP; \r\n\r\n### Environment Details:\r\nApp name: .NET Core Winforms\r\nWindow Version: Win 11\r\nOS Build: 22621.3085\r\n\r\n### Repro Steps:\r\n\r\n1. Launch the \"Accessibility core app\".\r\n2. Main Form screen would appear.\r\n3. TAB to \"DataBinding Example\" and hit ENTER key.\r\n4. \"Data Binding Example for controls\" screen would appear.\r\n5. TAB to \"List view\" and \"Grid\" present.\r\n6. Observe that There is no functionality provided to adjust columns width which is achievable using single pointer\r\n\r\n### Actual Result: \r\nThere is no functionality provided to adjust columns width which is achievable using single pointer\r\n\r\n### Expected Result:\r\nThere should be functionality provided to adjust columns width which is achievable using single pointer.\r\n\r\n### User Impact:\r\nIf the drag and drop functionality is not performing as expected on controls within a user interface, it can hamper user experience. Users may resort to alternative methods to achieve their goals; this increases the cognitive load and effort required to complete tasks. \r\n\r\n### Attachment\r\n\r\nhttps://github.com/dotnet/winforms/assets/90901519/973fc41e-4274-41d2-8948-946bb6e9b370\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/11433","RelatedDescription":"Open issue \"There is no functionality provided to adjust columns width which is achievable using single pointer: A11y_.NET CoreWinforms_ Data Binding Example for controls_DraggingMovement\" (#11433)"},{"Id":"2320664412","IsPullRequest":true,"CreatedAt":"2024-05-28T10:11:16","Actor":"Epica3055","Number":"11432","RawContent":null,"Title":"add InheritedPropertyDescriptor unit tests","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nrelated to #714\r\n\r\nadd InheritedPropertyDescriptor unit tests\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11432)","Url":"https://github.com/dotnet/winforms/pull/11432","RelatedDescription":"Open PR \"add InheritedPropertyDescriptor unit tests\" (#11432)"},{"Id":"2320638164","IsPullRequest":false,"CreatedAt":"2024-05-28T09:58:45","Actor":"ricardobossan","Number":"11431","RawContent":null,"Title":"Column Borders Misalignment and Top Row Header Border Disappearance with RightToLeft and VisualStyles not Enabled","State":"open","Body":"### .NET version\r\n\r\n9.0.100-preview.3.24204.13\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNot tested/verified\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\n_No response_\r\n\r\n### Issue description\r\n\r\nDuring the review of [PR 11345](https://github.com/dotnet/winforms/pull/11345), we identified two issues when `RightToLeft` is set to `Yes` and `VisualStyles` is not enabled:\r\n\r\n1. Column borders misalignment between header and body.\r\n2. The top row header's left border disappears when there's a horizontal scrollbar and it is moved to the left.\r\n\r\nThese issues are not regressions from PR 11345. We are opening this new issue to track the column borders misalignment and the top row header border issue.\r\n\r\nWe will investigate these problems further and work towards a resolution in this new issue.\r\n\r\n### Steps to reproduce\r\n\r\nCreate a new DataGridView form and set it to RightToLeft.Yes and do not enable VisualStyles. Sample project [here](https://github.com/dotnet/winforms/files/15467430/ScratchProject.zip).","Url":"https://github.com/dotnet/winforms/issues/11431","RelatedDescription":"Open issue \"Column Borders Misalignment and Top Row Header Border Disappearance with RightToLeft and VisualStyles not Enabled\" (#11431)"},{"Id":"2320363992","IsPullRequest":false,"CreatedAt":"2024-05-28T07:43:32","Actor":"Jonasmarien","Number":"11430","RawContent":null,"Title":"Custom CodeDomSerializer causes casting exception during serialization in Designer","State":"open","Body":"### Environment\r\n\r\nVersion 17.9.7\r\n\r\n### .NET version\r\n\r\n.NET 8\r\n\r\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\r\n\r\n_No response_\r\n\r\n### Issue description\r\n\r\nWhen I create a custom CodeDomSerializer and specify it on a Component using the DesignerSerializerAttribute, a casting exception occurs whenever serialization is triggered in the Visual Studio Designer.\r\n\r\n![image](https://github.com/dotnet/winforms/assets/14920486/3f822ee9-cfa7-4ba7-8ba9-e851598c5ab8)\r\n\r\nProject file\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>WinExe</OutputType>\r\n    <TargetFramework>net8.0-windows</TargetFramework>\r\n    <Nullable>enable</Nullable>\r\n    <UseWindowsForms>true</UseWindowsForms>\r\n    <ImplicitUsings>enable</ImplicitUsings>\r\n  </PropertyGroup>\r\n\r\n</Project>\r\n```\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a new WinForms project targeting .NET 8\r\n\r\n2. Add a WinForms UserControl\r\n![image](https://github.com/dotnet/winforms/assets/14920486/8966cedf-9828-4384-a837-5b87503f978e)\r\n\r\n3. Create a new MyComponent class which inherits `System.ComponentModel.Component`\r\n```\r\ninternal class MyComponent : Component\r\n{\r\n}\r\n```\r\n\r\n4. Create a new MySerializer class which inherits `System.ComponentModel.Design.Serialization.CodeDomSerializer`\r\n```\r\nusing System.ComponentModel.Design.Serialization;\r\n\r\npublic class MySerializer : CodeDomSerializer\r\n{\r\n}\r\n```\r\n\r\n5. Explicitly assign MySerializer to MyComponent using the `DesignerSerializerAttribute`\r\n```\r\nusing System.ComponentModel;\r\nusing System.ComponentModel.Design.Serialization;\r\n\r\n[DesignerSerializer(typeof(MySerializer), typeof(CodeDomSerializer))]\r\ninternal class MyComponent : Component\r\n{\r\n}\r\n```\r\n\r\n6.  Right-click MyControl and select 'View Designer'\r\n![image](https://github.com/dotnet/winforms/assets/14920486/aea1c34b-5278-4e4b-a278-eb3c63bbec7f)\r\n\r\n7. Open up Toolbox and drag MyComponent into the Designer view\r\n\r\n**Note:** Here's a pre-made solution to start with. Simply start from step 6.\r\n[https://github.com/Jonasmarien/winforms-codedomserializer-issue-reproduction](https://github.com/Jonasmarien/winforms-codedomserializer-issue-reproduction)\r\n\r\n### Diagnostics\r\n\r\n```text\r\n[09:14:36.547921] fail: Request failures: Sessions/GetUpdatedRootComponentCodeDom.\r\n                        Microsoft.DotNet.DesignTools.Client.DesignToolsServerException: Unable to cast object of type 'WInForms.CustomSerializer.Project.MySerializer' to type 'Microsoft.DotNet.DesignTools.Serialization.CodeDomSerializer'.\r\n\r\n                        For information on how to troubleshoot the designer refer to the guide at https://aka.ms/winforms/designer/troubleshooting.\r\n```","Url":"https://github.com/dotnet/winforms/issues/11430","RelatedDescription":"Open issue \"Custom CodeDomSerializer causes casting exception during serialization in Designer\" (#11430)"},{"Id":"2311823759","IsPullRequest":false,"CreatedAt":"2024-05-28T03:37:00","Actor":"deerchao","Number":"11417","RawContent":null,"Title":"Can't remove tooltip once added to NumericUpDown","State":"closed","Body":"### .NET version\n\n8.0.4\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nI don't think so.\n\n### Issue description\n\n    var f = new Form();\r\n    var n = new NumericUpDown(); // can't realy clear tooltip once set\r\n    // var n = new TextBox();    // we can clear tooltip\r\n    var t = new ToolTip();\r\n    var b = new Button { Left = 100, Top = 50, Text = \"Clear\"};\r\n    b.Click += (_, _) => t.SetToolTip(n, null);\r\n    \r\n    f.Controls.Add(n);\r\n    f.Controls.Add(b);\r\n\r\n    t.SetToolTip(n, \"haha ha\");\r\n\r\n    f.ShowDialog();\r\n\r\nOnce tooltip set on NumericUpDown, it can't be cleared. In this sample, After click the clear button, tooltip removed on textbox but not on numericupdown.\n\n### Steps to reproduce\n\nCreate a winforms app, set tooltip to numericupdown, try to clear the tooltip, and you will see it doesn't work.\r\n\r\nIt was shocking to find out this issue exists  in .net framework, too.","Url":"https://github.com/dotnet/winforms/issues/11417","RelatedDescription":"Closed issue \"Can't remove tooltip once added to NumericUpDown\" (#11417)"},{"Id":"2312314310","IsPullRequest":true,"CreatedAt":"2024-05-28T03:36:59","Actor":"elachlan","Number":"11419","RawContent":null,"Title":"Implement missing `RemoveToolTip` on `UpDownBase` to cleanup `ToolTip`","State":"closed","Body":"Makes sure that the `_upDownEdit` and `_upDownButtons` have their tooltip removed.\r\n\r\nFixes #11417\r\n\r\nI am unsure how to add tests for this. I manually tested the fix.","Url":"https://github.com/dotnet/winforms/pull/11419","RelatedDescription":"Closed or merged PR \"Implement missing `RemoveToolTip` on `UpDownBase` to cleanup `ToolTip`\" (#11419)"},{"Id":"2312322805","IsPullRequest":true,"CreatedAt":"2024-05-28T03:32:24","Actor":"LeafShi1","Number":"11420","RawContent":null,"Title":"Disable unstable test case \"ToolStrip_WndProc_InvokeMouseActivate_Success\"","State":"closed","Body":"\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nRelated #11418\r\n\r\n\r\n## Proposed changes\r\n\r\n- Add `SkipOnArchitecture` for test `ToolStrip_WndProc_InvokeMouseActivate_Success`\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11420)","Url":"https://github.com/dotnet/winforms/pull/11420","RelatedDescription":"Closed or merged PR \"Disable unstable test case \"ToolStrip_WndProc_InvokeMouseActivate_Success\"\" (#11420)"},{"Id":"2319634107","IsPullRequest":false,"CreatedAt":"2024-05-27T18:38:59","Actor":"nangelgr","Number":"11429","RawContent":null,"Title":"Derived form of a base form fails to accept and display new controls in it","State":"open","Body":"### .NET version\n\n8.0.200\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\nI created a simple form that will be used as a base dialog for the rest of the dialogs.\r\nThe base dialog contains a docked tablelayoutpanel control with two rows and one column. The first row of this tableloutpanel contains a new tablelayoutpanel control with one col and one row and a label in the latter\r\nSo far so good\r\nThis compiles normally and the derived dialog displays normally\r\nThe problems begin when i try to add a new tablelayoutpanel  in the second row of the tablelayoutpanel coming from the base dialog. The new control can not be added and also not showing up not even into the Document outline pane.\r\n\n\n### Steps to reproduce\n\nCreate a form that will be used as base dialog form named D1\r\nin D1 create a tablelayoutpanel TLP1 with 1 col and 2 rows. In the first cell of the TLP1 create a new label L1\r\nNow create a second form named derivedD2 : D1 instead of derivedD2  : Form\r\nThe contents of the D1 showing up correctly in the D2 dialog\r\nNow try to add a new tablelayoutpanel in the second cell (cell of col 0 and row 1)\r\nMine? Fails!! No new control can be added to the empty cell and also no new control shows up in the document outline pane\r\nBug? or my mistake?\r\n","Url":"https://github.com/dotnet/winforms/issues/11429","RelatedDescription":"Open issue \"Derived form of a base form fails to accept and display new controls in it\" (#11429)"},{"Id":"2317668472","IsPullRequest":true,"CreatedAt":"2024-05-27T12:42:43","Actor":"dotnet-maestro[bot]","Number":"11427","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20240525.1\r\n- **Date Produced**: May 25, 2024 3:55:44 PM UTC\r\n- **Commit**: 35e4aad602ee3c28330e94746cfd4e0d4569b66f\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **System.CodeDom**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **System.Data.Odbc**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **System.Data.OleDb**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **System.DirectoryServices**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **System.IO.Hashing**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **System.IO.Packaging**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **System.IO.Ports**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **System.Management**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **System.Reflection.Context**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **System.Resources.Extensions**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **System.Runtime.Caching**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **System.Security.Permissions**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **System.Speech**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **System.Text.Json**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **System.Windows.Extensions**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-preview.5.24274.15 to 9.0.0-preview.5.24275.1][2]\r\n\r\n[2]: https://github.com/dotnet/runtime/compare/ce1477b5df...35e4aad602\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11427)\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/11427","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#11427)"},{"Id":"2318371494","IsPullRequest":false,"CreatedAt":"2024-05-27T06:47:36","Actor":"kirsan31","Number":"11428","RawContent":null,"Title":"Make some internal/private VS designer sdk classes public","State":"open","Body":"### Background and motivation\r\n\r\nThis is duplicate of https://github.com/microsoft/winforms-designer-extensibility/issues/4 in correct repo.\r\n1. We have two (may be more?) `internal` classes: `Microsoft.DotNet.DesignTools.Client.Proxies.ProxyPropertyDescriptor` and `Microsoft.DotNet.DesignTools.Protocol.PropertyData`. It would very useful to make them `public`, I will explain with a concrete example from [chart](https://github.com/kirsan31/winforms-datavisualization) control (I think it's all clear from comments and code). The code from `protected override void ShowHelp()`. `GetPropValue` is my extension method to get property value with reflection:\r\n```cs\r\nGridItem item = grid.SelectedGridItem;\r\n// Original code:\r\n//_helpTopic = item.PropertyDescriptor.ComponentType.ToString() + \".\" + item.PropertyDescriptor.Name;\r\n\r\n// We have a proxy object (Microsoft.DotNet.DesignTools.Client.Proxies.ProxyPropertyDescriptor) here as PropertyDescriptor.\r\n// So to get real type we need get PropertyData (Microsoft.DotNet.DesignTools.Protocol.PropertyData) from PropertyDescriptor and then ComponentType from it.\r\n// Because Microsoft.DotNet.DesignTools.Client.Proxies.ProxyPropertyDescriptor and Microsoft.DotNet.DesignTools.Protocol.PropertyData are internal we need to use reflection...\r\nif (item.PropertyDescriptor.GetPropValue(\"PropertyData\")?.GetPropValue(\"ComponentType\") is Microsoft.DotNet.DesignTools.Protocol.Types.TypeIdentity typeIdentity)\r\n    _helpTopic = typeIdentity.TypeName + \".\" + item.PropertyDescriptor.Name;\r\n```\r\n2. In `Microsoft.DotNet.DesignTools.Client.Editors.CollectionEditor` we have two `private` classes: `DefaultCollectionForm` and `DefaultViewModel`. I think it would helpful to make them public or protected with ability to extend/modify. This should make minor modifications to the default behavior easier. I find it very costly due to minimal modification to make your own dialog like in [`BaseUI\\DesignableCollectionEditor`](https://github.com/KlausLoeffelmann/NetControlDesigners/tree/main/src/Samples/Previous%20Versions/Sophisticated%20-%20CollectionEditor/TileRepeater.Designer.Client/BaseUI) example.\r\n\r\n### API Proposal\r\n\r\n- Make `Microsoft.DotNet.DesignTools.Client.Proxies.ProxyPropertyDescriptor` and `Microsoft.DotNet.DesignTools.Protocol.PropertyData` `public`. _This is very easy and helpful change._\r\n\r\n- Make `DefaultCollectionForm` and `DefaultViewModel` from `Microsoft.DotNet.DesignTools.Client.Editors.CollectionEditor` `public` or `protected` with some changes allowing to  extend/modify them. _It's just an idea._\r\n\r\n\r\n### Risks\r\n\r\nNo.\r\n\r\n### Will this feature affect UI controls?\r\n\r\nUI controls (with designers) owners will be able to do some things easier.","Url":"https://github.com/dotnet/winforms/issues/11428","RelatedDescription":"Open issue \"Make some internal/private VS designer sdk classes public\" (#11428)"},{"Id":"2316957818","IsPullRequest":true,"CreatedAt":"2024-05-25T12:41:00","Actor":"dotnet-maestro[bot]","Number":"11426","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20240524.15\r\n- **Date Produced**: May 25, 2024 4:41:32 AM UTC\r\n- **Commit**: ce1477b5df9b378f1dfcbb9194aeed3932ecfc03\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **System.CodeDom**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **System.IO.Hashing**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **System.IO.Ports**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **System.Management**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **System.Speech**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **System.Text.Json**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-preview.5.24273.1 to 9.0.0-preview.5.24274.15][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/aabefea9ec...ce1477b5df\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11426)","Url":"https://github.com/dotnet/winforms/pull/11426","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#11426)"},{"Id":"2316754664","IsPullRequest":true,"CreatedAt":"2024-05-25T06:21:34","Actor":"gpetrou","Number":"11425","RawContent":null,"Title":"Enable nullability in some ControlDesigner members","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in some ControlDesigner members.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11425)","Url":"https://github.com/dotnet/winforms/pull/11425","RelatedDescription":"Open PR \"Enable nullability in some ControlDesigner members\" (#11425)"},{"Id":"2316472216","IsPullRequest":true,"CreatedAt":"2024-05-25T01:13:00","Actor":"dotnet-maestro[bot]","Number":"11424","RawContent":null,"Title":"[release/9.0-preview5] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:af03d026-fbfc-4993-0242-08dc7a5ad585)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: af03d026-fbfc-4993-0242-08dc7a5ad585\r\n- **Build**: 20240524.5\r\n- **Date Produced**: May 25, 2024 12:05:07 AM UTC\r\n- **Commit**: 1594d257e7195c6d0d3919210802bc9528eabcb4\r\n- **Branch**: refs/heads/release/9.0-preview5\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **System.CodeDom**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **System.IO.Hashing**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **System.IO.Ports**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **System.Management**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **System.Speech**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **System.Text.Json**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24274.5][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/2bfd1b4420...1594d257e7\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:af03d026-fbfc-4993-0242-08dc7a5ad585)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11424)","Url":"https://github.com/dotnet/winforms/pull/11424","RelatedDescription":"Closed or merged PR \"[release/9.0-preview5] Update dependencies from dotnet/runtime\" (#11424)"},{"Id":"2314641464","IsPullRequest":true,"CreatedAt":"2024-05-24T07:33:04","Actor":"Epica3055","Number":"11423","RawContent":null,"Title":" 8768 :: Resolve Addrange issue after sorting.","State":"open","Body":"Fixes #8768 \r\n\r\n## Proposed changes\r\nif tree is already sorted then we don't want to set fixed Index value. due to these reason It is misbehave. \r\n\r\n## Customer Impact\r\n\r\n- No\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- No\r\n\r\n### Before\r\n\r\nWhen the user adds a value to the treenode list and sorts it using treeview.sort(), it works fine. Subsequently, when the user adds individual trees through the add event, it functions as expected and sorts the entire tree automatically. However, if the user adds multiple values through AddRange, it does not work as expected.\r\n\r\n### After\r\nI've fixed the sorting issue we discussed earlier, and now everything is working smoothly. When users add values individually or use treeview.sort(), the sorting works fine. Even when they add multiple values at once using AddRange, the sorting behaves as expected.\r\n\r\n## Test methodology \r\n\r\n- Testcase added\r\n\r\n## Test environment(s)\r\n\r\n- tested with .net core 8.0\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11423)","Url":"https://github.com/dotnet/winforms/pull/11423","RelatedDescription":"Open PR \" 8768 :: Resolve Addrange issue after sorting.\" (#11423)"},{"Id":"2312740892","IsPullRequest":true,"CreatedAt":"2024-05-23T12:42:07","Actor":"dotnet-maestro[bot]","Number":"11422","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20240523.1\r\n- **Date Produced**: May 23, 2024 11:11:24 AM UTC\r\n- **Commit**: aabefea9ec7c5717177454cd570e48cc55a535bf\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **System.CodeDom**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **System.IO.Hashing**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **System.IO.Ports**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **System.Management**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **System.Speech**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **System.Text.Json**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-preview.5.24272.1 to 9.0.0-preview.5.24273.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/745230568e...aabefea9ec\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11422)","Url":"https://github.com/dotnet/winforms/pull/11422","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#11422)"},{"Id":"2312740390","IsPullRequest":true,"CreatedAt":"2024-05-23T12:41:51","Actor":"dotnet-maestro[bot]","Number":"11421","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20240522.5\r\n- **Date Produced**: May 23, 2024 6:03:20 AM UTC\r\n- **Commit**: 2001d73c8ff942331a73300ba61fa6164805b231\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.24270.3 to 9.0.0-beta.24272.5][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 9.0.0-beta.24270.3 to 9.0.0-beta.24272.5][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 9.0.0-beta.24270.3 to 9.0.0-beta.24272.5][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.24270.3 to 9.0.0-beta.24272.5][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 9.0.0-beta.24270.3 to 9.0.0-beta.24272.5][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.24270.3 to 9.0.0-beta.24272.5][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/1cf3eaa1f6...2001d73c8f\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11421)","Url":"https://github.com/dotnet/winforms/pull/11421","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#11421)"},{"Id":"2312293662","IsPullRequest":false,"CreatedAt":"2024-05-23T08:30:29","Actor":"LeafShi1","Number":"11418","RawContent":null,"Title":"Unstable unit test: System.Windows.Forms.Tests.ToolStripTests.ToolStrip_WndProc_InvokeMouseActivate_Success","State":"open","Body":"Related #11227\r\n\r\n### Test\r\n\r\nSystem.Windows.Forms.Tests.ToolStripTests.ToolStrip_WndProc_InvokeMouseActivate_Success\r\n\r\n### Issue description\r\n\r\n**The case failed in X64 unit tests, the failure link:**\r\n\r\n- [#20240520.13 • Merge pull request #11400 from dotnet/darc-main-dc9509e6-219c-4e5b-b9cb-36f21d03c3c2](https://dev.azure.com/dnceng-public/public/_build/results?buildId=682345&view=ms.vss-test-web.build-test-results-tab&runId=16932814&resultId=116319&paneView=debug)\r\n- [#20240513.6 • [main] Update dependencies from dotnet/runtime (#11364)](https://dev.azure.com/dnceng-public/public/_build/results?buildId=673968&view=ms.vss-test-web.build-test-results-tab&runId=16709506&resultId=111804&paneView=debug)\r\n\r\n**Error Message:**\r\n   - Assert.Equal() Failure: Values differ\r\n     Expected: 0\r\n     Actual:   2\r\n\r\n**Stack trace:**\r\n```\r\n at System.Windows.Forms.Tests.ToolStripTests.ToolStrip_WndProc_InvokeMouseActivate_Success() in /_/src/System.Windows.Forms/tests/UnitTests/System/Windows/Forms/ToolStripTests.cs:line 7147\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)\r\n   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)\r\n```","Url":"https://github.com/dotnet/winforms/issues/11418","RelatedDescription":"Open issue \"Unstable unit test: System.Windows.Forms.Tests.ToolStripTests.ToolStrip_WndProc_InvokeMouseActivate_Success\" (#11418)"},{"Id":"2311602050","IsPullRequest":true,"CreatedAt":"2024-05-22T22:31:17","Actor":"JeremyKuhne","Number":"11416","RawContent":null,"Title":"Add params to ReadOnlySpan parameters","State":"open","Body":"This adds params to ReadOnlySpan APIs primarily in System.Drawing. This enables C# to generate stack based collections in some cases.\r\n\r\nhttps://learn.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-13#params-collections\r\n\r\nThis feature requires 17.10 of Visual Studio.\r\n\r\ncc: @jaredpar \r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11416)","Url":"https://github.com/dotnet/winforms/pull/11416","RelatedDescription":"Open PR \"Add params to ReadOnlySpan parameters\" (#11416)"},{"Id":"2309747242","IsPullRequest":true,"CreatedAt":"2024-05-22T20:39:27","Actor":"Tanya-Solyanik","Number":"11413","RawContent":null,"Title":"Minor changes in the Clipboard code","State":"closed","Body":"Reordered IDataObject's and DataObject's methods alphabetically.\r\nRemoved explicit xml doc comments on DataObject's implementation of the managed IDataObject interface \r\nRemoved a duplicate test (format != DataFormats.BitmapConstant) in TryGetBitmapData\r\nChanged return type to MemoryStream from Stream in ReadByteStreamFromHGLOBAL\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11413)","Url":"https://github.com/dotnet/winforms/pull/11413","RelatedDescription":"Closed or merged PR \"Minor changes in the Clipboard code\" (#11413)"},{"Id":"2311311058","IsPullRequest":false,"CreatedAt":"2024-05-22T19:20:58","Actor":"alex-oswald","Number":"11415","RawContent":null,"Title":"Add WindowsFormsLifetime extensions to the .NET Generic Host","State":"open","Body":"### Background and motivation\r\n\r\nThe .NET Generic Host is the standard for developing .NET applications that leverage common .NET libraries such as Dependency Injection, Configuration and Logging. Currently, .NET does not provide a built in way for Windows Forms developers to use the Generic Host. I believe most Windows Forms developers use the standard template that comes with Visual Studio when creating Windows Forms applications. This template uses old .NET patterns and isn't up to date with the new Minimal API pattern added to .NET.\r\n\r\nWhile working in the Enterprise world, I worked on a lot of internal Windows Forms applications that we were modernizing and upgrading to .NET Core at the time. There was no easy way to use **dependency injection**, **configuration**, **logging**, and background task support. This need drove me to write the [WindowsFormsLifetime](https://github.com/alex-oswald/WindowsFormsLifetime) library that provides extensions for the Generic Host to support Windows Forms and its lifetime. I believe there is a want and need for this functionality world wide, and building it into .NET would allow Windows Forms developers everywhere the chance to use modern patterns and libraries they use in other places.\r\n\r\n#### High Level\r\n\r\nWindows Forms Lifetime works by registering a custom implementation of `IHostLifetime` for the generic host. It also registers an `IHostedService` that creates and manages the GUI thread that Windows Forms works on top of, and hooks into Windows Forms `Application` context to shut down the host when the application exits.\r\n\r\n#### Going Deep\r\n\r\nA high level explanation of how Windows Forms Lifetime was described above. This section will go into detail of the inner workings. Lets hope I understand this the same as when I wrote the library since it's been 4 years since my initial proof of concept.\r\n\r\nTo understand how this works, you need to have a beginners understanding of how Windows Forms works internally. WinForms uses an `Application` class with a bunch of static methods that manages the application and the UI thread. The `Application` class helps manage an `ApplicationContext`. This context controls the application by listening to the main forms close event and then exits the GUI threads message loop that is reference by the `ThreadContext`. When you write a Windows Forms application, you invoke `Application.Run()` to start the GUI thread and show the main form. When you exit the main form, the `ApplicationContext` is notified and exits the GUI thread. Using this information, we can modify how `Application` works and use our own GUI thread. So lets get into it.\r\n\r\nThe Generic Host implements a singleton of `IHostLifetime`. In the standard Generic Host implementation, `IHostLifetime` is never messed with, but since we want to control the lifetime of the application, we first create a custom implementation of the interface called `WindowsFormsLifetime`. Injecting our own implementation of `IHostLifetime` overrides the default implementation and lets us control when the Generic Host shuts down.\r\n\r\nWe also add the `WindowsFormsHostedService` `IHostedService` implementation. This is really the core of the library. The Generic Host starts up every `IHostedService` registered and they can effectively run for the entirety of the application. When `WindowsFormsHostedService` is started, it creates a thread for the GUI and passes in the `StartUiThread` method. The `StartUiThread` method also registers a callback with `Application.ApplicationExit` that signals the Generic Host to shutdown when the WinForms application exits, i.e. the main form is closed. The `StartUiThread` also captures the `WindowsFormsSynchronizationContext` for the GUI thread and saves it to the singleton `WindowsFormsSynchronizationContextProvider` for easy retrieval later using dependency injection. Lastly, the `StartUiThread` method gets the `ApplicationContext` registered with the service provider and passes it to the `Application.Run()` invocation.\r\n\r\nAs mentioned above, an instance of `WindowsFormsSynchronizationContextProvider` is registered with the service provider for easy retrieval in various parts of the application. This class also inherits the `IGuiContext` interface that exposes methods to invoke `Action`'s and `Func`'s with the `WindowsFormsSynchronizationContext` to ensure they are invoked on the GUI thread.\r\n\r\nAn implementation of `IFormProvider` is also registered with the service provider. This implementation provides an easy way to fetch a new instance of a form from the service provider and ensures it is created on the GUI thread. It exposes a few methods such as, `GetFormAsync<T>()` and `GetFormAsync<T>(IServiceScope scope)` allowing the creation of scoped forms. The advantage here is that you can create a form with the same scope as a `DbContext` instance. This allows the `DbContext` instance to be disposed of when the form is closed.\r\n\r\n### API Proposal\r\n\r\nThe main API proposal adds extension methods to the Generic Host. A few `IHostApplicationBuilder` extensions would be created in the `Microsoft.Extensions.Hosting` namespace.\r\n\r\n```csharp\r\nnamespace Microsoft.Extensions.Hosting;\r\n\r\npublic static class WindowsFormsLifetimeHostApplicationBuilderExtensionsa\r\n{\r\n    public static IHostApplicationBuilder UseWindowsFormsLifetime<TStartForm>(\r\n        this IHostApplicationBuilder hostAppBuilder,\r\n        Action<WindowsFormsLifetimeOptions> configure = null)\r\n        where TStartForm : Form\r\n\r\n    public static IHostApplicationBuilder UseWindowsFormsLifetime<TAppContext>(\r\n        this IHostApplicationBuilder hostAppBuilder,\r\n        Func<TAppContext> applicationContextFactory = null,\r\n        Action<WindowsFormsLifetimeOptions> configure = null)\r\n        where TAppContext : ApplicationContext\r\n\r\n    public static IHostApplicationBuilder UseWindowsFormsLifetime<TAppContext, TStartForm>(\r\n        this IHostApplicationBuilder hostAppBuilder,\r\n        Func<TStartForm, TAppContext> applicationContextFactory,\r\n        Action<WindowsFormsLifetimeOptions> configure = null)\r\n        where TAppContext : ApplicationContext\r\n        where TStartForm : Form\r\n}\r\n```\r\n\r\nA few `IServiceCollection` extensions would be created in the `Microsoft.Extensions.DependencyInjection` namespace.\r\n\r\n```csharp\r\nnamespace Microsoft.Extensions.DependencyInjection;\r\n\r\npublic static class WindowsFormsLifetimeServiceCollectionExtensions\r\n{\r\n    public static IServiceCollection AddWindowsFormsLifetime(\r\n        this IServiceCollection services,\r\n        Action<WindowsFormsLifetimeOptions> configure,\r\n        Action<IServiceProvider> preApplicationRunAction = null)\r\n\r\n    public static IServiceCollection AddWindowsFormsLifetime<TStartForm>(\r\n        this IServiceCollection services,\r\n        Action<WindowsFormsLifetimeOptions> configure = null,\r\n        Action<IServiceProvider> preApplicationRunAction = null)\r\n        where TStartForm : Form\r\n\r\n    public static IServiceCollection AddWindowsFormsLifetime<TAppContext>(\r\n        this IServiceCollection services,\r\n        Func<TAppContext> applicationContextFactory = null,\r\n        Action<WindowsFormsLifetimeOptions> configure = null,\r\n        Action<IServiceProvider> preApplicationRunAction = null)\r\n        where TAppContext : ApplicationContext\r\n\r\n    public static IServiceCollection AddWindowsFormsLifetime<TAppContext, TStartForm>(\r\n        this IServiceCollection services,\r\n        Func<TStartForm, TAppContext> applicationContextFactory,\r\n        Action<WindowsFormsLifetimeOptions> configure = null,\r\n        Action<IServiceProvider> preApplicationRunAction = null)\r\n        where TAppContext : ApplicationContext\r\n        where TStartForm : Form\r\n}\r\n```\r\n\r\n#### Registered Services\r\n\r\n`IOptions<WindowsFormsLifetimeOptions>`\r\n\r\n```csharp\r\npublic HighDpiMode HighDpiMode { get; set; } = HighDpiMode.SystemAware;\r\npublic bool EnableVisualStyles { get; set; } = true;\r\npublic bool CompatibleTextRenderingDefault { get; set; }\r\npublic bool SuppressStatusMessages { get; set; }\r\npublic bool EnableConsoleShutdown { get; set; }\r\n```\r\n\r\n`IHostApplicationLifetime` via `WindowsFormsLifetime`\r\n\r\nReplaces the hosts singleton lifetime implementation.\r\n\r\n`IWindowsFormsSynchronizationContextProvider` via `WindowsFormsSynchronizationContextProvider`\r\n\r\nHolds a reference to the `WindowsFormsSynchronizationContext` for the Windows Forms thread.\r\n\r\n```csharp\r\nWindowsFormsSynchronizationContext SynchronizationContext { get; }\r\n```\r\n\r\n`IWindowsFormsThreadContext` via `WindowsFormsSynchronizationContextProvider`\r\n\r\nProvides methods to marshal calls to the `WindowsFormsSynchronizationContext`, i.e. the Windows Forms thread.\r\n\r\n```csharp\r\nvoid Invoke(Action action);\r\nTResult Invoke<TResult>(Func<TResult> func);\r\nTask<TResult> InvokeAsync<TResult>(Func<TResult> func);\r\nTask<TResult> InvokeAsync<TResult, TInput>(Func<TInput, TResult> func, TInput input);\r\n```\r\n\r\n`IFormProvider` via `FormProvider`\r\n\r\n```csharp\r\nTask<T> GetFormAsync<T>() where T : Form;\r\nTask<T> GetFormAsync<T>(IServiceScope scope) where T : Form;\r\nTask<Form> GetMainFormAsync();\r\nT GetForm<T>() where T : Form;\r\nT GetForm<T>(IServiceScope scope) where T : Form;\r\n```\r\n\r\n### API Usage\r\n\r\nCurrently, when you create a Windows Forms project in C# using the template, you get the following `Program.cs` file:\r\n\r\n```csharp\r\nnamespace WinFormsApp1\r\n{\r\n    internal static class Program\r\n    {\r\n        /// <summary>\r\n        ///  The main entry point for the application.\r\n        /// </summary>\r\n        [STAThread]\r\n        static void Main()\r\n        {\r\n            // To customize application configuration such as set high DPI settings or default font,\r\n            // see https://aka.ms/applicationconfiguration.\r\n            ApplicationConfiguration.Initialize();\r\n            Application.Run(new Form1());\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nUsing the new API, `Program.cs` would look like the following:\r\n\r\n```csharp\r\nusing Microsoft.Extensions.Hosting;\r\nusing WinFormsApp1;\r\n\r\nvar builder = Host.CreateApplicationBuilder(args);\r\nbuilder.UseWindowsFormsLifetime<Form1>();\r\nvar app = builder.Build();\r\napp.Run();\r\n```\r\n\r\nThis allows the use of dependency injection. Here is an example of a forms code.\r\n\r\nhttps://github.com/alex-oswald/WindowsFormsLifetime/blob/main/samples/SampleApp/Form1.cs\r\n\r\n```csharp\r\n﻿using Microsoft.Extensions.Logging;\r\nusing WindowsFormsLifetime;\r\n\r\nnamespace SampleApp;\r\n\r\npublic partial class Form1 : Form\r\n{\r\n    private readonly ILogger<Form1> _logger;\r\n    private readonly IFormProvider _formProvider;\r\n\r\n    public Form1(ILogger<Form1> logger, IFormProvider formProvider)\r\n    {\r\n        InitializeComponent();\r\n        _logger = logger;\r\n        _formProvider = formProvider;\r\n\r\n        ThreadLabel.Text = $\"{Thread.CurrentThread.ManagedThreadId} {Thread.CurrentThread.Name}\";\r\n    }\r\n\r\n    private async void button1_Click(object sender, EventArgs e)\r\n    {\r\n        _logger.LogInformation(\"Show\");\r\n        var form = await _formProvider.GetFormAsync<Form2>();\r\n        form.Show();\r\n    }\r\n\r\n    private void button2_Click(object sender, EventArgs e)\r\n    {\r\n        _logger.LogInformation(\"Close\");\r\n        this.Close();\r\n    }\r\n}\r\n```\r\n\r\n#### Use Cases\r\n\r\nWindows Forms Blazor Hybrid\r\n\r\n```csharp\r\nvar builder = WebApplication.CreateBuilder(args);\r\nbuilder.Host.UseWindowsFormsLifetime<Form1>();\r\nbuilder.Services.AddWindowsFormsBlazorWebView();\r\n\r\nvar app = builder.Build();\r\napp.Run();\r\n```\r\n\r\nAn app with hosted services that run background tasks.\r\n\r\n```csharp\r\nvar builder = Host.CreateApplicationBuilder(args);\r\nbuilder.UseWindowsFormsLifetime<Form1>();\r\nbuilder.Services.AddHostedService<FormSpawnHostedService>();\r\nbuilder.Services.AddHostedService<TickingHostedService>();\r\nbuilder.Services.AddTransient<Form2>();\r\n\r\nvar app = builder.Build();\r\napp.Run();\r\n```\r\n\r\nUsing Entity Framework with a Sqlite database.\r\n\r\n```csharp\r\nvar builder = Host.CreateApplicationBuilder(args);\r\nbuilder.Host.UseWindowsFormsLifetime<MainForm>();\r\n\r\nbuilder.Services.AddScoped<IRepository<Note>, EntityFrameworkRepository<Note, SqliteDbContext>>();\r\nbuilder.Services.AddDbContext<SqliteDbContext>(options =>\r\n    options.UseSqlite(builder.Configuration.GetConnectionString(\"Default\")));\r\n\r\nvar app = builder.Build();\r\n\r\n// Create the database\r\nvar db = app.Services.GetService<SqliteDbContext>();\r\ndb?.Database.EnsureCreated();\r\n\r\napp.Run();\r\n```\r\n\r\n### Alternative Designs\r\n\r\n- `IHostApplicationBuilder` extension methods like `UseWindowsFormsLifetime` could be simply named `UseWindowForms`.\r\n- Change name of `IGuiContext` to `IWindowsFormsThreadContext`.\r\n\r\n### Risks\r\n\r\nLow, this should just enable easier modern development. Possible Windows Forms thread issues, though enough testing will mitigate this.\r\n\r\n### Will this feature affect UI controls?\r\n\r\nNo, this will not affect UI controls.","Url":"https://github.com/dotnet/winforms/issues/11415","RelatedDescription":"Open issue \"Add WindowsFormsLifetime extensions to the .NET Generic Host\" (#11415)"},{"Id":"2309725988","IsPullRequest":true,"CreatedAt":"2024-05-22T17:42:03","Actor":"LeafShi1","Number":"11412","RawContent":null,"Title":"Update Pre-Release Iteration and Resource Management Milestone","State":"closed","Body":"Update Pre-Release Iteration and Resource Management Milestone to preview6\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11412)","Url":"https://github.com/dotnet/winforms/pull/11412","RelatedDescription":"Closed or merged PR \"Update Pre-Release Iteration and Resource Management Milestone\" (#11412)"},{"Id":"2310352356","IsPullRequest":true,"CreatedAt":"2024-05-22T12:41:07","Actor":"dotnet-maestro[bot]","Number":"11414","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20240522.1\r\n- **Date Produced**: May 22, 2024 11:21:25 AM UTC\r\n- **Commit**: 745230568e52639e229dcc24c98fe0dbb4c1641d\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **System.CodeDom**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **System.IO.Hashing**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **System.IO.Ports**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **System.Management**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **System.Speech**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **System.Text.Json**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-preview.5.24271.1 to 9.0.0-preview.5.24272.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/2bfd1b4420...745230568e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11414)","Url":"https://github.com/dotnet/winforms/pull/11414","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#11414)"},{"Id":"2309661818","IsPullRequest":false,"CreatedAt":"2024-05-22T06:17:38","Actor":"CyrilPaulus","Number":"11411","RawContent":null,"Title":"Winform Designer generates confliting resource files on partial class","State":"open","Body":"### Environment\n\nVersion 17.9.6\n\n### .NET version\n\n8.0.204\n\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\n\n_No response_\n\n### Issue description\n\nWhen editing a control split into a partial class, the designer generates a new resource file for each file contributing to the partial class. This makes compilation impossible, as the generated resource files conflict with each other.\r\n\n\n### Steps to reproduce\n\n1. Clone the repo https://github.com/CyrilPaulus/WinFormDesignerPartialResourceBug\r\n2. Open the file Form1_partial.cs with the WinForm Designer.\r\n3. The file Form1_partial.resx should have been generated.\r\n4. Try to compile the project.\n\n### Diagnostics\n\n_No response_","Url":"https://github.com/dotnet/winforms/issues/11411","RelatedDescription":"Open issue \"Winform Designer generates confliting resource files on partial class\" (#11411)"},{"Id":"2322095373","IsPullRequest":false,"CreatedAt":"2024-05-21T19:35:12","Actor":"hanyoungsoo","Number":"11439","RawContent":null,"Title":"Proposal to add \"InvokeRequired\" property to prevent invoke errors in some public controls","State":"open","Body":" Hello Framework Team.\r\n \r\nCurrently, I am getting an invoice error when accessing UI controls like TextBox in a C# multithreaded environment.\r\nTo prevent this, developers should write their code using InvokeRequired and Invoke methods every time.\r\n\r\nTo improve this, add the \"InvokeRequired\" property to the TextBox control,\r\nSetting this property to true enables automatic invoking.\r\nI suggest adding: This makes it simpler for developers to\r\nYou will be able to write intuitive code.\r\n\r\nLet me show you our source as an example.\r\n   private void logPLUS(string type, string message1, string message2 = \"\", int eCode = 0) {\r\n         \r\n          if (checkBox1.InvokeRequired) {\r\n             checkBox1.Invoke(new Action(() => {\r\n                if (checkBox1.Checked) { // Access text999 in Invoke\r\n                   string logMessage = $\"{Type}{(char)7}{Message1}{(char)7}{Message2}{(char)7}{eCode}\" + \"\\r\\n\" + text999.Text;\r\n                   text999.Invoke(new Action(() => { text999.Text = logMessage; }));\r\n                }\r\n             }));\r\n          } else {\r\n             if (checkBox1.Checked) {\r\n                string logMessage = $\"{Type}{(char)7}{Message1}{(char)7}{Message2}{(char)7}{eCode}\" + \"\\r\\n\" + text999.Text;\r\n                text999.Text = logMessage;\r\n             }\r\n          }\r\n       }\r\n\r\nThe content is changed only when checked.\r\nI think it's very inconvenient to have to code this in such a difficult way.\r\nI'm sending it through Google translation, so there may be errors.\r\nPlease understand. thank you","Url":"https://github.com/dotnet/winforms/issues/11439","RelatedDescription":"Open issue \"Proposal to add \"InvokeRequired\" property to prevent invoke errors in some public controls\" (#11439)"},{"Id":"2308134398","IsPullRequest":true,"CreatedAt":"2024-05-21T12:42:12","Actor":"dotnet-maestro[bot]","Number":"11410","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20240521.1\r\n- **Date Produced**: May 21, 2024 11:23:14 AM UTC\r\n- **Commit**: 2bfd1b44200de244a66b7f4a7604be1f2d5585bc\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **System.CodeDom**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **System.IO.Hashing**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **System.IO.Ports**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **System.Management**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **System.Speech**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **System.Text.Json**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-preview.5.24269.2 to 9.0.0-preview.5.24271.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/5f067ce8b5...2bfd1b4420\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11410)","Url":"https://github.com/dotnet/winforms/pull/11410","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#11410)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-05-29T03:30:25.614005Z","RunDurationInMilliseconds":410}