{"Data":{"GitHub":{"Issues":[{"Id":"1101703254","IsPullRequest":true,"CreatedAt":"2022-01-13T18:07:38","Actor":"dotnet-maestro[bot]","Number":"6500","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20220112.8\r\n- **Date Produced**: January 13, 2022 9:53:25 AM UTC\r\n- **Commit**: 46db4aa3c505ac36cf8d0d612d4161bb7239ed87\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-alpha.1.22061.11 to 7.0.0-alpha.1.22062.8][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-alpha.1.22061.11 to 7.0.0-alpha.1.22062.8][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-alpha.1.22061.11 to 7.0.0-alpha.1.22062.8][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-alpha.1.22061.11 to 7.0.0-alpha.1.22062.8][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-alpha.1.22061.11 to 7.0.0-alpha.1.22062.8][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.22061.11 to 7.0.0-alpha.1.22062.8][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.22061.11 to 7.0.0-alpha.1.22062.8][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-alpha.1.22061.11 to 7.0.0-alpha.1.22062.8][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-alpha.1.22061.11 to 7.0.0-alpha.1.22062.8][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-alpha.1.22061.11 to 7.0.0-alpha.1.22062.8][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-alpha.1.22061.11 to 7.0.0-alpha.1.22062.8][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-alpha.1.22061.11 to 7.0.0-alpha.1.22062.8][1]\r\n  - **System.CodeDom**: [from 7.0.0-alpha.1.22061.11 to 7.0.0-alpha.1.22062.8][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-alpha.1.22061.11 to 7.0.0-alpha.1.22062.8][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-alpha.1.22061.11 to 7.0.0-alpha.1.22062.8][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-alpha.1.22061.11 to 7.0.0-alpha.1.22062.8][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-alpha.1.22061.11 to 7.0.0-alpha.1.22062.8][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-alpha.1.22061.11 to 7.0.0-alpha.1.22062.8][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-alpha.1.22061.11 to 7.0.0-alpha.1.22062.8][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-alpha.1.22061.11 to 7.0.0-alpha.1.22062.8][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.22061.11 to 7.0.0-alpha.1.22062.8][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.22061.11 to 7.0.0-alpha.1.22062.8][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-alpha.1.22061.11 to 7.0.0-alpha.1.22062.8][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-alpha.1.22061.11 to 7.0.0-alpha.1.22062.8][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-alpha.1.22061.11 to 7.0.0-alpha.1.22062.8][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-alpha.1.22061.11 to 7.0.0-alpha.1.22062.8][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-alpha.1.22061.11 to 7.0.0-alpha.1.22062.8][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-alpha.1.22061.11 to 7.0.0-alpha.1.22062.8][1]\r\n  - **System.Text.Json**: [from 7.0.0-alpha.1.22061.11 to 7.0.0-alpha.1.22062.8][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.22061.11 to 7.0.0-alpha.1.22062.8][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/ef7ff07...46db4aa\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6500)","Url":"https://github.com/dotnet/winforms/pull/6500","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6500)"},{"Id":"1101701759","IsPullRequest":true,"CreatedAt":"2022-01-13T13:49:50","Actor":"dotnet-maestro[bot]","Number":"6499","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20220113.1\r\n- **Date Produced**: January 13, 2022 9:13:51 AM UTC\r\n- **Commit**: 7a7ba506eed201288d4182fce8b380b22bdd73cb\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.22056.6 to 7.0.0-beta.22063.1][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22056.6 to 7.0.0-beta.22063.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.22056.6 to 7.0.0-beta.22063.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.22056.6 to 7.0.0-beta.22063.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.22056.6 to 7.0.0-beta.22063.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22056.6 to 7.0.0-beta.22063.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/34bc5b1...7a7ba50\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6499)","Url":"https://github.com/dotnet/winforms/pull/6499","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6499)"},{"Id":"1101677313","IsPullRequest":true,"CreatedAt":"2022-01-13T12:51:07","Actor":"SergeySmirnov-Akvelon","Number":"6498","RawContent":null,"Title":"Fixing announcement of information about hidden columns and rows for DGV","State":"open","Body":"Fixes #6471\r\n\r\n## Proposed changes\r\n- The issue is reproduced because properties `RowCount` and `ColumnCount` do not take into account that columns and rows can be hidden. In addition, other properties also have problems if `DataGridView` elements are hidden.\r\n- Fixed methods and properties of `DataGridViewAccessibleObject`.\r\n- Unit tests have been added as a check to ensure that methods and properties work correctly even if rows/columns are hidden.\r\n\r\n## Customer Impact\r\n**Before fix:**\r\n![image](https://user-images.githubusercontent.com/23376742/149331974-8263eda4-ee7f-49ac-83e8-cf39f44fd309.png)\r\n \r\n**After fix:** \r\n![image](https://user-images.githubusercontent.com/23376742/149333251-949b9f9f-04c9-4a70-bdaa-83be8a97d76b.png)\r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- CTI team\r\n- Unit tests\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n- Inspect\r\n- Narrator\r\n- Accessibility Insights\r\n \r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.1348]\r\n- .NET Core SDK: 7.0.0-alpha.1.22061.11\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6498)","Url":"https://github.com/dotnet/winforms/pull/6498","RelatedDescription":"Open PR \"Fixing announcement of information about hidden columns and rows for DGV\" (#6498)"},{"Id":"1101628928","IsPullRequest":true,"CreatedAt":"2022-01-13T12:12:29","Actor":"SergeySmirnov-Akvelon","Number":"6497","RawContent":null,"Title":"Fixing incorrect rendering of button rounded borders for Windows 11","State":"open","Body":"Fixes #6187\r\n\r\n\r\n## Proposed changes\r\n- The issue is reproduced because we have always drawn rectangular borders, although Windows 11 uses rounded borders.\r\n- Added logic for drawing a rounded border.\r\n- Added logic to draw a line at the bottom to simulate a gradient effect\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n**Before fix:**\r\n![image](https://user-images.githubusercontent.com/23376742/149326045-cf625099-03e1-45f3-b17d-40df5bd8635c.png)\r\n\r\n**After fix:**\r\n![image](https://user-images.githubusercontent.com/23376742/149326114-c0e4dcf7-6ab9-47ae-96b0-c1c7741b718f.png)\r\n![image](https://user-images.githubusercontent.com/23376742/149326175-7c0c01e8-9880-4fa4-b0ac-c2e643781ab5.png)\r\n![image](https://user-images.githubusercontent.com/23376742/149328158-d9d9e618-49ac-4918-a5ae-4f7e0d6d3ff4.png)\r\n\r\n## Regression impact\r\n**Before fix:**\r\nRendering 500 standard buttons on local machine takes an average of **2208** seconds.\r\nRendering 500 standard buttons on a virtual machine takes an average of **1.999** seconds.\r\n\r\n**After fix:**\r\nRendering 500 standard buttons on local machine takes an average of **2229** seconds.\r\nRendering 500 standard buttons on a virtual machine takes an average of **1.879** seconds.\r\n\r\n## Regression? \r\n- Yes (from #6059)\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- CTI team\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.22000.434]\r\n- .NET Core SDK: 7.0.0-alpha.1.22061.11\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6497)","Url":"https://github.com/dotnet/winforms/pull/6497","RelatedDescription":"Open PR \"Fixing incorrect rendering of button rounded borders for Windows 11\" (#6497)"},{"Id":"1098541693","IsPullRequest":true,"CreatedAt":"2022-01-13T03:39:48","Actor":"WPMGPRoSToTeMa","Number":"6488","RawContent":null,"Title":"Fixing incorrect mouse tooltip for TabPage of TabControl","State":"closed","Body":"Fixes #4750. The DELTOOL message of tooltip causes moving of the last tool to the slot of the deleted tool in the tool array (e.g. deleting `Button` from the `[Button, TabControl, TabPage1, TabPage2]` results in `[TabPage1, TabControl, TabPage2]`). This breaks the hit-test logic of the tooltip that checks the tools in the reverse order. Thus the TabControl may be checked earlier than any of TabPages and tooltip will be shown for the TabControl and not for the TabPage.\r\n\r\nA possible fix is to reorder the tools in the tools array, but there is no way to access it directly. It is possible to change the array through GETTOOLINFO and SETTOOLINFO messages but this may have undesirable side-effects of breaking caches and other things.\r\n\r\nThe other way is to remove deletion from the keyboard tooltips logic. But it won't actually help because deletion may be called directly.\r\n\r\nThe only appropriate solution is to not add a tool for the TabControl itself. It doesn't break anything because the TabControl relays mouse messages to the tooltip by itself (no subclassing is needed) and there is no area where the tool for the TabControl will be shown (hit-testing detects only TabPages, the other things are transparent).\r\n\r\n\r\n## Proposed changes\r\n\r\n- Removed adding a tool for the `TabControl` in the tooltip logic\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- The user sees the correct tooltip in the correct rectangle for a tab page of tab control\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![](http://g.recordit.co/ixoSv2dpaR.gif)\r\n\r\n### After\r\n\r\n![](http://g.recordit.co/pdly4JDumj.gif)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing\r\n- Unit-tests\r\n- CTI (planned)\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- Microsoft Windows [Version 10.0.19044.1415]\r\n- .NET 7.0.0-alpha.1.22058.4\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6488)","Url":"https://github.com/dotnet/winforms/pull/6488","RelatedDescription":"Closed or merged PR \"Fixing incorrect mouse tooltip for TabPage of TabControl\" (#6488)"},{"Id":"1101078504","IsPullRequest":false,"CreatedAt":"2022-01-13T02:34:27","Actor":"VinoWang01","Number":"6496","RawContent":null,"Title":"[CSY] ‘Details’ and ‘Continue’ have the same hotkey: P in unhandled exception dialog","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n.NET Core Version: \r\n\r\n- .NET SDK 7.0.100-alpha.1.22060.5 \r\n\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\nHave you experienced this same bug with .NET Framework?: \r\n\r\n- No\r\n\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\n‘Details’ and ‘Continue’ have the same hotkey: P\r\n![image](https://user-images.githubusercontent.com/90816462/149255111-bbeb9aab-4c7d-4c05-9f0a-9904bed71000.png)\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n\r\n**Expected behavior:**\r\nThe hot key should be unique.\r\n![image](https://user-images.githubusercontent.com/90816462/149255128-dfbc6f48-5780-47d8-a661-d3d6d8ed45ad.png)\r\n\r\n<!--\r\n    Provide details on expected behavior with screenshots/GIF, where ever possible.\r\n -->\r\n\r\n**Minimal repro:**\r\n1.\tCreate a Winforms core project.\r\n2.\tAdd a button control on Form designer.\r\n3.\tDouble click the button and add following code: `throw new Exception(\"\");` in `button_click` event handler.\r\n4.\tRun the project via pressing `Ctrl + F5`.\r\n5.\tPress `Alt` keyboard, then observe the hot key.\r\nOr use the sample project with changing the target to 7.0.\r\n[UnhandledExceptionDialog.zip](https://github.com/dotnet/winforms/files/7859386/UnhandledExceptionDialog.zip)\r\n\r\n**More info:**\r\nThis issue can’t reproduce with ENU, CHS, CHT, DEU, ESN, FRA, JPN, ITA, KOR, PLK, PTB, RUS, TRK languages.\r\n<!--\r\n    Provide step by step guide to repro this issue.  Incase repro steps are complex, It would be helpful if \r\n    you attach a GIF with repro actions. Attaching a sample app to repro the issue will help speed up the \r\n    resolution. \r\n -->\r\n","Url":"https://github.com/dotnet/winforms/issues/6496","RelatedDescription":"Open issue \"[CSY] ‘Details’ and ‘Continue’ have the same hotkey: P in unhandled exception dialog\" (#6496)"},{"Id":"1098541716","IsPullRequest":true,"CreatedAt":"2022-01-13T02:10:45","Actor":"WPMGPRoSToTeMa","Number":"6489","RawContent":null,"Title":"Fixing announcing the tooltip for the TabPage","State":"closed","Body":"Fixes #5835. There are some controls that are adding their own tools (e.g. TabControls adds a tool for each TabPage) and for these tools we don't have an associated caption. Moreover these tools are typically retrieving the caption using TTN_NEEDTEXT notification.\r\n\r\nThe simplest way to fix this issue is to retrieve the caption using the `GetWindowText` function. At `WmShow` we know that the caption was already retrieved and set by the tooltip, so it can be retrieved using this API function. This way works for both static and dynamic captions.\r\n\r\nThe more complex way is to change the logic of the current tool retrieval and also the most important to change the logic of the caption retrieval, to support the dynamic ones.\r\n\r\nThe first approach was chosen as it is very simple and works without any downsides. The second approach also means that we are actually retrieving the caption twice: once by the tooltip internal logic and then once by our announcing logic.\r\n\r\n\r\n## Proposed changes\r\n\r\n- Changed `GetCaptionForTool` to `GetWindowText` in the caption retrieval logic inside `WmShow` method\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- The user of Narrator hears the correct caption for a tab page's tooltip\r\n\r\n## Regression? \r\n\r\n- The announcing feature was introduced in #2074 and it already had issue for tab pages\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![](http://g.recordit.co/mkmTYzONP3.gif)\r\n\r\n### After\r\n\r\n![](http://g.recordit.co/5sNDODtoEl.gif)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual testing\r\n- Unit-tests\r\n- CTI (planned)\r\n\r\n\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- Microsoft Windows [Version 10.0.19044.1415]\r\n- .NET 7.0.0-alpha.1.22058.4\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6489)","Url":"https://github.com/dotnet/winforms/pull/6489","RelatedDescription":"Closed or merged PR \"Fixing announcing the tooltip for the TabPage\" (#6489)"},{"Id":"1100319938","IsPullRequest":true,"CreatedAt":"2022-01-12T19:50:16","Actor":"dotnet-maestro[bot]","Number":"6495","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20220111.11\r\n- **Date Produced**: January 12, 2022 10:59:01 AM UTC\r\n- **Commit**: ef7ff071099d185a5f66b55966866fcc964e287c\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-alpha.1.22060.15 to 7.0.0-alpha.1.22061.11][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-alpha.1.22060.15 to 7.0.0-alpha.1.22061.11][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-alpha.1.22060.15 to 7.0.0-alpha.1.22061.11][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-alpha.1.22060.15 to 7.0.0-alpha.1.22061.11][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-alpha.1.22060.15 to 7.0.0-alpha.1.22061.11][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.22060.15 to 7.0.0-alpha.1.22061.11][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.22060.15 to 7.0.0-alpha.1.22061.11][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-alpha.1.22060.15 to 7.0.0-alpha.1.22061.11][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-alpha.1.22060.15 to 7.0.0-alpha.1.22061.11][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-alpha.1.22060.15 to 7.0.0-alpha.1.22061.11][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-alpha.1.22060.15 to 7.0.0-alpha.1.22061.11][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-alpha.1.22060.15 to 7.0.0-alpha.1.22061.11][1]\r\n  - **System.CodeDom**: [from 7.0.0-alpha.1.22060.15 to 7.0.0-alpha.1.22061.11][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-alpha.1.22060.15 to 7.0.0-alpha.1.22061.11][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-alpha.1.22060.15 to 7.0.0-alpha.1.22061.11][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-alpha.1.22060.15 to 7.0.0-alpha.1.22061.11][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-alpha.1.22060.15 to 7.0.0-alpha.1.22061.11][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-alpha.1.22060.15 to 7.0.0-alpha.1.22061.11][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-alpha.1.22060.15 to 7.0.0-alpha.1.22061.11][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-alpha.1.22060.15 to 7.0.0-alpha.1.22061.11][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.22060.15 to 7.0.0-alpha.1.22061.11][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.22060.15 to 7.0.0-alpha.1.22061.11][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-alpha.1.22060.15 to 7.0.0-alpha.1.22061.11][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-alpha.1.22060.15 to 7.0.0-alpha.1.22061.11][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-alpha.1.22060.15 to 7.0.0-alpha.1.22061.11][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-alpha.1.22060.15 to 7.0.0-alpha.1.22061.11][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-alpha.1.22060.15 to 7.0.0-alpha.1.22061.11][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-alpha.1.22060.15 to 7.0.0-alpha.1.22061.11][1]\r\n  - **System.Text.Json**: [from 7.0.0-alpha.1.22060.15 to 7.0.0-alpha.1.22061.11][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.22060.15 to 7.0.0-alpha.1.22061.11][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/917d369...ef7ff07\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6495)","Url":"https://github.com/dotnet/winforms/pull/6495","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6495)"},{"Id":"1099854451","IsPullRequest":false,"CreatedAt":"2022-01-12T04:08:08","Actor":"John-Qiao","Number":"6494","RawContent":null,"Title":"The dropdown button is no visible in ComboBox control when set FlatStyle property to Flat or Popup","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n.NET SDK 7.0.100-alpha.1.22060.5\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\nThe dropdown button is no visible in ComboBox control when set FlatStyle property to Flat or Popup.\r\n\r\nDesign Time:\r\n![DesignTime](https://user-images.githubusercontent.com/45864985/149062167-cc1f413b-39d9-41b4-a845-a9d5f9f71219.png)\r\n\r\nRuntime:\r\n![Runtime](https://user-images.githubusercontent.com/45864985/149062175-e7aa3f83-d00e-448f-a2b7-3498b063a30a.png)\r\n\r\n**Expected behavior:**\r\n\r\nThe dropdown button is no visible in ComboBox control when set FlatStyle property to Flat or Popup.\r\n\r\nDesign Time:\r\n![Expected-DesignTime](https://user-images.githubusercontent.com/45864985/149062197-6c8787ce-b1ba-42a3-8788-1ae1869d2301.png)\r\n\r\nRuntime:\r\n![Expected-Runtime](https://user-images.githubusercontent.com/45864985/149062200-86a92b0c-e668-49a1-9310-526c8677aa91.png)\r\n\r\n**Minimal repro:**\r\n\r\n1. Open the [TestApp.zip](https://github.com/dotnet/winforms/files/7851589/TestApp.zip) project.\r\n2. Open Form1 designer and observe the dropdown button of ComboBox controls in the second and third columns.\r\n3. Run the project, and observe the dropdown button of ComboBox controls in the second and third columns too.\r\n\r\n**More info:**\r\n\r\n1. This is a regression issue, it does not occur in .NET 7.0.100-alpha.1.21568.2, and it occurs in .NET 7.0.100-alpha.1.22060.5.\r\n2. This issue does not occur when set FlatStyle property to Standard or System.","Url":"https://github.com/dotnet/winforms/issues/6494","RelatedDescription":"Open issue \"The dropdown button is no visible in ComboBox control when set FlatStyle property to Flat or Popup\" (#6494)"},{"Id":"1099474246","IsPullRequest":true,"CreatedAt":"2022-01-11T18:06:37","Actor":"jbhensley","Number":"6493","RawContent":null,"Title":"Update ListViewGroup.CollapsedState from native when changed by keyboard","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #6468\r\n\r\n\r\n## Proposed changes\r\n\r\nPreviously, `ListView` would toggle `CollapsedState` of current `ListViewGroup` between `Expanded` and `Collapsed` if a `ListViewItem` was selected and:\r\n\r\n- The left arrow key was pressed and the group state was `Expanded`\r\n- The right arrow key was pressed and the group state was `Collapsed`\r\n\r\nIt did this regardless of whether the key press triggered an actual change in native state resulting in repeated `GroupCollapsedStateChanged` events and the group's `CollapsedState` property becoming out of sync with native state.\r\n\r\nThis change reads native state on arrow key press and updates `CollapsedState`/raises `GroupCollapsedStateChanged` only when the state is different.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n`ListViewGroup.CollapsedState` should no longer be out of sync with native state and phantom `GroupCollapsedStateChanged` events should no longer fire.\r\n\r\n## Regression? \r\n\r\n- No. Appears that issue existed in initial commit of work.\r\n\r\n## Risk\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Unit tests\r\n- UI integration test\r\n- Manual testing\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6493)","Url":"https://github.com/dotnet/winforms/pull/6493","RelatedDescription":"Open PR \"Update ListViewGroup.CollapsedState from native when changed by keyboard\" (#6493)"},{"Id":"1099130308","IsPullRequest":true,"CreatedAt":"2022-01-11T18:01:02","Actor":"dotnet-maestro[bot]","Number":"6491","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20220110.15\r\n- **Date Produced**: January 11, 2022 10:48:36 AM UTC\r\n- **Commit**: 917d369f78cd768d472e11f42bd3acd1de615630\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][1]\r\n  - **System.CodeDom**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][1]\r\n  - **System.Text.Json**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.22059.2 to 7.0.0-alpha.1.22060.15][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/a2af629...917d369\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6491)","Url":"https://github.com/dotnet/winforms/pull/6491","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6491)"},{"Id":"1099219345","IsPullRequest":false,"CreatedAt":"2022-01-11T14:18:53","Actor":"Njoro007","Number":"6492","RawContent":null,"Title":"(Loading Designer...) Form Designer Fails to Display","State":"open","Body":"\r\n* .NET Core Version: 6.0.101\r\n\r\n* Visual Studio 2022 Version 17.0.4\r\n\r\nWhen opening a Form Designer it Displays the Message \"Loading Designer...\"(Image Attached) and completely doesn't display the Form Designer. What should one do to have the Form Designer Displayed? Form Designer sometimes shows after a few VS Restarts or sometimes lucky to have it displayed the first time VS starts. I didn't experience this using VS 2019 NET 5\r\n![Screenshot 2022-01-11 171702](https://user-images.githubusercontent.com/22431006/148959516-04912444-3582-4112-8fda-d463212f69b3.png)\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6492","RelatedDescription":"Open issue \"(Loading Designer...) Form Designer Fails to Display\" (#6492)"},{"Id":"1098936924","IsPullRequest":false,"CreatedAt":"2022-01-11T10:01:24","Actor":"VinoWang01","Number":"6490","RawContent":null,"Title":"[RUS] The ‘Details’ button text overlaps its drop down arrow in unhandled exception dialog","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n.NET Core Version: \r\n\r\n- .NET SDK 7.0.100-alpha.1.22060.9\r\n\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\nHave you experienced this same bug with .NET Framework?: \r\n\r\n- No\r\n\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\nThe text overlaps the drop down arrow in ‘Details’ button of Unhandled exception window.\r\n![RUS-Core](https://user-images.githubusercontent.com/90816462/148921242-13a34e54-69d9-48da-bd1d-bd17a7923118.png)\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n**Expected behavior:**\r\nThere should be no overlapping.\r\nNetFX:\r\n![RUS-NetFX](https://user-images.githubusercontent.com/90816462/148921265-bd6fd7c5-820d-4510-866d-3a1901180b92.png)\r\n\r\n.NET Core 3.1:\r\n![RUS-Core31](https://user-images.githubusercontent.com/90816462/148921302-fe2274b8-c714-4a26-a0b3-6ea0622df9c3.png)\r\n\r\n\r\n<!--\r\n    Provide details on expected behavior with screenshots/GIF, where ever possible.\r\n -->\r\n\r\n**Minimal repro:**\r\n1.\tCreate a Winforms core project.\r\n2.\tAdd a button control on Form designer.\r\n3.\tDouble click the button and add following code: `throw new Exception(\"\")`; in `button_click` event handler.\r\n4.\tRun the project via pressing `Ctrl + F5`.\r\nOr use the sample project with changing the target to 7.0: \r\n[UnhandledExceptionDialog.zip](https://github.com/dotnet/winforms/files/7859422/UnhandledExceptionDialog.zip)\r\n\r\n\r\n**More Info:**\r\n1. This is a regression issue, it can’t reproduce when targeting .net core 3.1, it reproduce from .net 5.0 to latest .net 7.0.\r\n2. This issue can’t reproduce with .NET Framework project.\r\n\r\n<!--\r\n    Provide step by step guide to repro this issue.  Incase repro steps are complex, It would be helpful if \r\n    you attach a GIF with repro actions. Attaching a sample app to repro the issue will help speed up the \r\n    resolution. \r\n -->\r\n","Url":"https://github.com/dotnet/winforms/issues/6490","RelatedDescription":"Open issue \"[RUS] The ‘Details’ button text overlaps its drop down arrow in unhandled exception dialog\" (#6490)"},{"Id":"1096702864","IsPullRequest":true,"CreatedAt":"2022-01-10T17:47:51","Actor":"dreddy-work","Number":"6482","RawContent":null,"Title":"[servicing6.0*] Fixing incorrect state set for State.Created flag on the Control ","State":"closed","Body":"this fix is already in main here: https://github.com/dotnet/winforms/pull/6477\r\n\r\nThis PR is the result of regressions caused by #6114 and #2262.\r\n\r\n`State.Created` must be set only when `Handle` and the `Control `associated with it is created. Otherwise, recreating `Control `scenarios would be out of sync.  Changes in this PR is basically bringing the source code back to 6.0 GA state with respect to setting flag on `State.Created`.\r\n\r\nSetting `State.Created` when the `Handle `is created but the associated `Control `is not, have repercussions mentioned in #6464. We cache this state and check before creating the control. Incorrect state would skip this. ex: https://github.com/dotnet/winforms/blob/0d4484331f57113d3303275c6aa5717fcd4b6c25/src/System.Windows.Forms/src/System/Windows/Forms/Control.cs#L5044\r\n\r\nfixes #6464 \r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6482)","Url":"https://github.com/dotnet/winforms/pull/6482","RelatedDescription":"Closed or merged PR \"[servicing6.0*] Fixing incorrect state set for State.Created flag on the Control \" (#6482)"},{"Id":"1097879860","IsPullRequest":true,"CreatedAt":"2022-01-10T13:42:43","Actor":"dotnet-maestro[bot]","Number":"6487","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20220109.2\r\n- **Date Produced**: January 10, 2022 2:52:38 AM UTC\r\n- **Commit**: a2af6294767b4a3f4c2ce787c5dda2abeeda7a00\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][1]\r\n  - **System.CodeDom**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][1]\r\n  - **System.Text.Json**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.22058.4 to 7.0.0-alpha.1.22059.2][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/ce2165d...a2af629\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6487)","Url":"https://github.com/dotnet/winforms/pull/6487","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6487)"},{"Id":"1097191430","IsPullRequest":true,"CreatedAt":"2022-01-09T13:42:30","Actor":"dotnet-maestro[bot]","Number":"6486","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20220108.4\r\n- **Date Produced**: January 8, 2022 11:23:16 PM UTC\r\n- **Commit**: ce2165d8084cca98b95f5d8ff9386759bfd8c722\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][1]\r\n  - **System.CodeDom**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][1]\r\n  - **System.Text.Json**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.22057.18 to 7.0.0-alpha.1.22058.4][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/bc7f6c2...ce2165d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6486)","Url":"https://github.com/dotnet/winforms/pull/6486","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6486)"},{"Id":"1096923069","IsPullRequest":true,"CreatedAt":"2022-01-08T20:11:56","Actor":"dotnet-maestro[bot]","Number":"6485","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20220107.18\r\n- **Date Produced**: January 8, 2022 9:04:51 AM UTC\r\n- **Commit**: bc7f6c27546c8f01fb7c1714fae034a8dd742a4c\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][1]\r\n  - **System.CodeDom**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][1]\r\n  - **System.Text.Json**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.22056.10 to 7.0.0-alpha.1.22057.18][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/ef49cd0...bc7f6c2\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6485)","Url":"https://github.com/dotnet/winforms/pull/6485","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6485)"},{"Id":"1096856981","IsPullRequest":false,"CreatedAt":"2022-01-08T09:55:29","Actor":"khaledafifi","Number":"6483","RawContent":null,"Title":"vs 2022 Win forms app on windows 11","State":"closed","Body":"the designer doesn't open and says \"Loading designer ..... \" \r\nvs 2022 - build: 17.0.4\r\napp: WinForms\r\nframework: .net 6 ","Url":"https://github.com/dotnet/winforms/issues/6483","RelatedDescription":"Closed issue \"vs 2022 Win forms app on windows 11\" (#6483)"},{"Id":"1096863832","IsPullRequest":true,"CreatedAt":"2022-01-08T08:03:46","Actor":"gpetrou","Number":"6484","RawContent":null,"Title":"Make toolStrip non-nullable in ToolStripGripRenderEventArgs and ToolStripRenderEventArgs","State":"open","Body":"## Proposed changes\r\n\r\n- Make toolStrip non-nullable in ToolStripGripRenderEventArgs and ToolStripRenderEventArgs.\r\n- Addresses feedback in https://github.com/dotnet/winforms/pull/6391.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6484)","Url":"https://github.com/dotnet/winforms/pull/6484","RelatedDescription":"Open PR \"Make toolStrip non-nullable in ToolStripGripRenderEventArgs and ToolStripRenderEventArgs\" (#6484)"},{"Id":"1095816836","IsPullRequest":true,"CreatedAt":"2022-01-07T21:49:36","Actor":"dreddy-work","Number":"6477","RawContent":null,"Title":"Fixing incorrect state set for State.Created flag on the Control","State":"closed","Body":"This PR is the result of regressions caused by #6114 and #2262.\r\n\r\n`State.Created` must be set only when `Handle` and the `Control `associated with it is created. Otherwise, recreating `Control `scenarios would be out of sync.  Changes in this PR is basically bringing the source code back to 6.0 GA state with respect to setting flag on `State.Created`.\r\n\r\nSetting `State.Created` when the `Handle `is created but the associated `Control `is not, have repercussions mentioned in #6464. We cache this state and check before creating the control. Incorrect state would skip this. ex: https://github.com/dotnet/winforms/blob/0d4484331f57113d3303275c6aa5717fcd4b6c25/src/System.Windows.Forms/src/System/Windows/Forms/Control.cs#L5044\r\n\r\nfixes #6464 \r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6477)","Url":"https://github.com/dotnet/winforms/pull/6477","RelatedDescription":"Closed or merged PR \"Fixing incorrect state set for State.Created flag on the Control\" (#6477)"},{"Id":"1096070224","IsPullRequest":true,"CreatedAt":"2022-01-07T18:19:22","Actor":"gpetrou","Number":"6479","RawContent":null,"Title":"Enable nullability in MouseHook and MouseHookObject","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in MouseHook and MouseHookObject.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6479)","Url":"https://github.com/dotnet/winforms/pull/6479","RelatedDescription":"Closed or merged PR \"Enable nullability in MouseHook and MouseHookObject\" (#6479)"},{"Id":"1096302685","IsPullRequest":true,"CreatedAt":"2022-01-07T18:14:53","Actor":"dotnet-maestro[bot]","Number":"6480","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20220106.6\r\n- **Date Produced**: January 6, 2022 9:12:49 PM UTC\r\n- **Commit**: 34bc5b1611e13bd0ee6a9f38ab8524d2ee489be5\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.22054.5 to 7.0.0-beta.22056.6][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22054.5 to 7.0.0-beta.22056.6][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.22054.5 to 7.0.0-beta.22056.6][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.22054.5 to 7.0.0-beta.22056.6][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.22054.5 to 7.0.0-beta.22056.6][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22054.5 to 7.0.0-beta.22056.6][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/85188b0...34bc5b1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6480)","Url":"https://github.com/dotnet/winforms/pull/6480","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6480)"},{"Id":"1096303333","IsPullRequest":true,"CreatedAt":"2022-01-07T13:44:37","Actor":"dotnet-maestro[bot]","Number":"6481","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20220106.10\r\n- **Date Produced**: January 7, 2022 6:32:58 AM UTC\r\n- **Commit**: ef49cd03929b950d80d111621781728bef9cebf9\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][1]\r\n  - **System.CodeDom**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][1]\r\n  - **System.Text.Json**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.22055.11 to 7.0.0-alpha.1.22056.10][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/abb7df5...ef49cd0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6481)","Url":"https://github.com/dotnet/winforms/pull/6481","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6481)"},{"Id":"1095883206","IsPullRequest":false,"CreatedAt":"2022-01-07T01:13:13","Actor":"SoftCircuits","Number":"6478","RawContent":null,"Title":"What's new with async support for WinForms event handlers?","State":"open","Body":"I'm sure I'm not the first to ask this but is there anything new with regards to WinForms event handlers implementing `async`?\r\n\r\nBasically, since everything is basically done in event handlers with WinForms, the question is can I use `async/await` at all?\r\n\r\nLooks like the old workaround is to return `void` instead of `Task`. But I know this can cause problems.\r\n\r\nI know the WinForms engine was recently built for .NET 5.0/6.0. Was any thought given to this?\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6478","RelatedDescription":"Open issue \"What's new with async support for WinForms event handlers?\" (#6478)"},{"Id":"1095304576","IsPullRequest":true,"CreatedAt":"2022-01-06T17:55:20","Actor":"dotnet-maestro[bot]","Number":"6474","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20220105.11\r\n- **Date Produced**: January 6, 2022 10:12:15 AM UTC\r\n- **Commit**: abb7df59eb4f8c813c07ddd6f46f94e59604577d\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-alpha.1.22054.12 to 7.0.0-alpha.1.22055.11][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-alpha.1.22054.12 to 7.0.0-alpha.1.22055.11][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-alpha.1.22054.12 to 7.0.0-alpha.1.22055.11][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-alpha.1.22054.12 to 7.0.0-alpha.1.22055.11][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-alpha.1.22054.12 to 7.0.0-alpha.1.22055.11][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.22054.12 to 7.0.0-alpha.1.22055.11][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-alpha.1.22054.12 to 7.0.0-alpha.1.22055.11][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-alpha.1.22054.12 to 7.0.0-alpha.1.22055.11][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-alpha.1.22054.12 to 7.0.0-alpha.1.22055.11][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-alpha.1.22054.12 to 7.0.0-alpha.1.22055.11][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-alpha.1.22054.12 to 7.0.0-alpha.1.22055.11][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-alpha.1.22054.12 to 7.0.0-alpha.1.22055.11][1]\r\n  - **System.CodeDom**: [from 7.0.0-alpha.1.22054.12 to 7.0.0-alpha.1.22055.11][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-alpha.1.22054.12 to 7.0.0-alpha.1.22055.11][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-alpha.1.22054.12 to 7.0.0-alpha.1.22055.11][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-alpha.1.22054.12 to 7.0.0-alpha.1.22055.11][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-alpha.1.22054.12 to 7.0.0-alpha.1.22055.11][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-alpha.1.22054.12 to 7.0.0-alpha.1.22055.11][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-alpha.1.22054.12 to 7.0.0-alpha.1.22055.11][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-alpha.1.22054.12 to 7.0.0-alpha.1.22055.11][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.22054.12 to 7.0.0-alpha.1.22055.11][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-alpha.1.22054.12 to 7.0.0-alpha.1.22055.11][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-alpha.1.22054.12 to 7.0.0-alpha.1.22055.11][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-alpha.1.22054.12 to 7.0.0-alpha.1.22055.11][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-alpha.1.22054.12 to 7.0.0-alpha.1.22055.11][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-alpha.1.22054.12 to 7.0.0-alpha.1.22055.11][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-alpha.1.22054.12 to 7.0.0-alpha.1.22055.11][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-alpha.1.22054.12 to 7.0.0-alpha.1.22055.11][1]\r\n  - **System.Text.Json**: [from 7.0.0-alpha.1.22054.12 to 7.0.0-alpha.1.22055.11][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-alpha.1.22054.12 to 7.0.0-alpha.1.22055.11][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/8b9e708...abb7df5\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6474)","Url":"https://github.com/dotnet/winforms/pull/6474","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6474)"},{"Id":"1095506458","IsPullRequest":true,"CreatedAt":"2022-01-06T16:59:01","Actor":"gpetrou","Number":"6476","RawContent":null,"Title":"Enable nullability in classes that inherit from ToolStripDropDownItemAccessibleObject","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in classes that inherit from ToolStripDropDownItemAccessibleObject.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6476)","Url":"https://github.com/dotnet/winforms/pull/6476","RelatedDescription":"Open PR \"Enable nullability in classes that inherit from ToolStripDropDownItemAccessibleObject\" (#6476)"},{"Id":"1095191848","IsPullRequest":true,"CreatedAt":"2022-01-06T10:44:22","Actor":"gpetrou","Number":"6473","RawContent":null,"Title":"Enable nullability in ContainerInfo","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in ContainerInfo.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6473)","Url":"https://github.com/dotnet/winforms/pull/6473","RelatedDescription":"Open PR \"Enable nullability in ContainerInfo\" (#6473)"},{"Id":"1095176905","IsPullRequest":true,"CreatedAt":"2022-01-06T10:26:39","Actor":"gpetrou","Number":"6472","RawContent":null,"Title":"Enable nullability in Button and IButtonControl","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in Button and IButtonControl.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6472)","Url":"https://github.com/dotnet/winforms/pull/6472","RelatedDescription":"Open PR \"Enable nullability in Button and IButtonControl\" (#6472)"},{"Id":"1095123452","IsPullRequest":false,"CreatedAt":"2022-01-06T09:22:34","Actor":"Olina-Zhang","Number":"6471","RawContent":null,"Title":"[Accessibility] Screen reader announces incorrect columns of DataGridView table when some columns are hidden","State":"open","Body":"* .NET Core Version: \r\n7.0.100-alpha.1.21568.2\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes. Related AzDo bug: https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1451446 \r\n\r\n**Minimal repro:**\r\n1. Open attached application:( a DataGridView with 6 columns, and **the last 2 columns' Visible property are false**)\r\n[WinFormsApp46.zip](https://github.com/dotnet/winforms/files/7820686/WinFormsApp46.zip)\r\n2. Build and run application\r\n3. Use narrator to read any of cell \r\n\r\n**Actual behavior:**\r\nNarrator announces counts for all columns regardless of their visibility status\r\n![image](https://user-images.githubusercontent.com/26474449/148359121-5f693728-7366-4259-90a2-30192e7c1878.png)\r\n\r\n**Expected behavior:**\r\nNarrator should announce the counts of visibility columns\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6471","RelatedDescription":"Open issue \"[Accessibility] Screen reader announces incorrect columns of DataGridView table when some columns are hidden\" (#6471)"},{"Id":"1095050114","IsPullRequest":true,"CreatedAt":"2022-01-06T07:37:40","Actor":"gpetrou","Number":"6470","RawContent":null,"Title":"Make s_events non-nullable in SendKeys","State":"open","Body":"## Proposed changes\r\n\r\n- Addresses post-merge feedback in https://github.com/dotnet/winforms/pull/6428.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6470)","Url":"https://github.com/dotnet/winforms/pull/6470","RelatedDescription":"Open PR \"Make s_events non-nullable in SendKeys\" (#6470)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-01-14T05:30:33.7498729Z","RunDurationInMilliseconds":558}