{"Data":{"GitHub":{"Issues":[{"Id":"1493629417","IsPullRequest":true,"CreatedAt":"2022-12-13T22:07:30","Actor":"Tanya-Solyanik","Number":"8374","RawContent":null,"Title":"Removed designer-added tags from the project file","State":"closed","Body":"These were added by the designer when nested classes were [split into the dedicated files](https://github.com/dotnet/winforms/commit/d0974fc45e7be195721091b4a8d09caf7394397b). Subtype informs the IDE what file view to use with these files, however it would had deduced this information from the type and visual designer does not work with these files. \n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8374)","Url":"https://github.com/dotnet/winforms/pull/8374","RelatedDescription":"Closed or merged PR \"Removed designer-added tags from the project file\" (#8374)"},{"Id":"1486726382","IsPullRequest":true,"CreatedAt":"2022-12-13T18:47:15","Actor":"dotnet-maestro[bot]","Number":"8355","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20221212.4\r\n- **Date Produced**: December 12, 2022 8:27:08 PM UTC\r\n- **Commit**: cb37e1f67041bfc6484ec47525bda461606efe92\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.22606.1 to 8.0.0-beta.22612.4][5]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.22606.1 to 8.0.0-beta.22612.4][5]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.22606.1 to 8.0.0-beta.22612.4][5]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.22606.1 to 8.0.0-beta.22612.4][5]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.22606.1 to 8.0.0-beta.22612.4][5]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.22606.1 to 8.0.0-beta.22612.4][5]\r\n\r\n[5]: https://github.com/dotnet/arcade/compare/513428e...cb37e1f\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8355)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/8355","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#8355)"},{"Id":"1494704372","IsPullRequest":true,"CreatedAt":"2022-12-13T18:46:28","Actor":"gpetrou","Number":"8379","RawContent":null,"Title":"Enable nullability in SnapLine","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in SnapLine.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8379)","Url":"https://github.com/dotnet/winforms/pull/8379","RelatedDescription":"Closed or merged PR \"Enable nullability in SnapLine\" (#8379)"},{"Id":"1494717069","IsPullRequest":true,"CreatedAt":"2022-12-13T17:45:30","Actor":"gpetrou","Number":"8380","RawContent":null,"Title":"Enable nullability in MenuCommandsChangedEventArgs","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in MenuCommandsChangedEventArgs.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8380)","Url":"https://github.com/dotnet/winforms/pull/8380","RelatedDescription":"Closed or merged PR \"Enable nullability in MenuCommandsChangedEventArgs\" (#8380)"},{"Id":"1494685483","IsPullRequest":true,"CreatedAt":"2022-12-13T17:36:51","Actor":"gpetrou","Number":"8378","RawContent":null,"Title":"Enable nullability in RTLAwareMessageBox","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in RTLAwareMessageBox.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8378)","Url":"https://github.com/dotnet/winforms/pull/8378","RelatedDescription":"Closed or merged PR \"Enable nullability in RTLAwareMessageBox\" (#8378)"},{"Id":"1494201096","IsPullRequest":true,"CreatedAt":"2022-12-13T17:19:09","Actor":"dotnet-maestro[bot]","Number":"8377","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20221212.8\r\n- **Date Produced**: December 13, 2022 12:03:28 PM UTC\r\n- **Commit**: c635ae2426d07bfdfec426ac25d1e62aadcadf73\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.22611.2 to 8.0.0-alpha.1.22612.8][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.22611.2 to 8.0.0-alpha.1.22612.8][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22611.2 to 8.0.0-alpha.1.22612.8][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22611.2 to 8.0.0-alpha.1.22612.8][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22611.2 to 8.0.0-alpha.1.22612.8][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.22611.2 to 8.0.0-alpha.1.22612.8][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22611.2 to 8.0.0-alpha.1.22612.8][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.22611.2 to 8.0.0-alpha.1.22612.8][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.22611.2 to 8.0.0-alpha.1.22612.8][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.22611.2 to 8.0.0-alpha.1.22612.8][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22611.2 to 8.0.0-alpha.1.22612.8][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22611.2 to 8.0.0-alpha.1.22612.8][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22611.2 to 8.0.0-alpha.1.22612.8][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22611.2 to 8.0.0-alpha.1.22612.8][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22611.2 to 8.0.0-alpha.1.22612.8][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.22611.2 to 8.0.0-alpha.1.22612.8][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22611.2 to 8.0.0-alpha.1.22612.8][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22611.2 to 8.0.0-alpha.1.22612.8][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22611.2 to 8.0.0-alpha.1.22612.8][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22611.2 to 8.0.0-alpha.1.22612.8][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22611.2 to 8.0.0-alpha.1.22612.8][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22611.2 to 8.0.0-alpha.1.22612.8][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.22611.2 to 8.0.0-alpha.1.22612.8][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22611.2 to 8.0.0-alpha.1.22612.8][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22611.2 to 8.0.0-alpha.1.22612.8][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22611.2 to 8.0.0-alpha.1.22612.8][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22611.2 to 8.0.0-alpha.1.22612.8][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22611.2 to 8.0.0-alpha.1.22612.8][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22611.2 to 8.0.0-alpha.1.22612.8][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22611.2 to 8.0.0-alpha.1.22612.8][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/cfdf0f6...c635ae2\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8377)","Url":"https://github.com/dotnet/winforms/pull/8377","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8377)"},{"Id":"1494189662","IsPullRequest":false,"CreatedAt":"2022-12-13T12:58:35","Actor":"SathiyathanamSathish","Number":"8376","RawContent":null,"Title":"Text is looking blurred after change the scale in a system with High DPI settings.","State":"open","Body":"### .NET version\n\n.Net 6\r\n\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo.\n\n### Issue description\n\nThe text is looking blurred after change the scale settings in a system. We have added the below settings in our App.Config file.\r\n\r\n<img width=\"687\" alt=\"image\" src=\"https://user-images.githubusercontent.com/89458634/207317690-5a2b2da6-e5f6-409d-b7a5-0d59a2611a73.png\">\r\n\r\nKindly share your suggestions if we have missed anything?\n\n### Steps to reproduce\n\nYou can refer the below video to reproduce the issue.\r\n\r\n\r\n\r\nhttps://user-images.githubusercontent.com/89458634/207322835-0292f9e1-c73e-4cd4-8e65-c6ffeb489d52.mp4\r\n\r\n\r\nSample : \r\n[DPI_Test.zip](https://github.com/dotnet/winforms/files/10218079/DPI_Test.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/8376","RelatedDescription":"Open issue \"Text is looking blurred after change the scale in a system with High DPI settings.\" (#8376)"},{"Id":"1493921352","IsPullRequest":true,"CreatedAt":"2022-12-13T10:25:40","Actor":"NikitaSemenovAkvelon","Number":"8375","RawContent":null,"Title":"Fixed memory leaking of PropertyGrid","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #6943 (except cases when leaking is caused by `UiaTextRange`)\r\n\r\n\r\n## Proposed changes\r\n\r\n- Added `ReleaseUiaProvider` method to `GridEntry` to release it and its children.\r\n- Override `ReleaseUiaProvider` method in `PropertyGrid` and `PropertyGridView` classes to release their items too.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Fewer leaks in memory when `PropertyGrid` is used.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![Screenshot 2022-12-13 110035](https://user-images.githubusercontent.com/109065597/207292611-e9e065dc-f401-4f52-8ce3-c55034ca37d2.png)\r\n\r\n### After\r\n\r\n![Screenshot 2022-12-13 104756](https://user-images.githubusercontent.com/109065597/207292646-015b4592-4fb4-4724-910a-d2cf3705ab5d.png)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manualy utilizing WinDbg \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n- Inspect\r\n- AI\r\n- Narrator\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n.NET SDK:\r\n Version:   8.0.100-alpha.1.22512.5\r\n Commit:    1b80461e45\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.22621\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8375)","Url":"https://github.com/dotnet/winforms/pull/8375","RelatedDescription":"Open PR \"Fixed memory leaking of PropertyGrid\" (#8375)"},{"Id":"1493573589","IsPullRequest":false,"CreatedAt":"2022-12-13T07:26:41","Actor":"runfoapp[bot]","Number":"8373","RawContent":null,"Title":"Flaky test: cursorconverter_convertto_unknowntoinstancedescriptor_throwsnotsupportedexception","State":"open","Body":"<!-- runfo report start -->\r\nRunfo Tracking Issue: [Flaky test: cursorconverter_convertto_unknowntoinstancedescriptor_throwsnotsupportedexception](https://runfo.azurewebsites.net/tracking/issue/445)\r\n|Build|Definition|Kind|Run Name|\r\n|---|---|---|---|\r\n|[110400](https://dev.azure.com/dnceng-public/public/_build/results?buildId=110400)|[dotnet-winforms CI](https://dnceng-public.visualstudio.com/public/_build?definitionId=76)|[PR 8358](https://github.com/dotnet/winforms/pull/8358)|Windows_x64-xunit|\r\n|[109295](https://dev.azure.com/dnceng-public/public/_build/results?buildId=109295)|[dotnet-winforms CI](https://dnceng-public.visualstudio.com/public/_build?definitionId=76)|[PR 8359](https://github.com/dotnet/winforms/pull/8359)|Windows_x64-xunit|\r\n\r\n\r\n\r\nBuild Result Summary\r\n|Day Hit Count|Week Hit Count|Month Hit Count|\r\n|---|---|---|\r\n|1|2|2|\r\n\r\n<!-- runfo report end -->\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/8373","RelatedDescription":"Open issue \"Flaky test: cursorconverter_convertto_unknowntoinstancedescriptor_throwsnotsupportedexception\" (#8373)"},{"Id":"1493161373","IsPullRequest":true,"CreatedAt":"2022-12-13T07:08:27","Actor":"dreddy-work","Number":"8370","RawContent":null,"Title":"Replace bitmap with Icon","State":"closed","Body":"related to #8358 \r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8370)","Url":"https://github.com/dotnet/winforms/pull/8370","RelatedDescription":"Closed or merged PR \"Replace bitmap with Icon\" (#8370)"},{"Id":"1493504915","IsPullRequest":true,"CreatedAt":"2022-12-13T06:40:22","Actor":"elachlan","Number":"8372","RawContent":null,"Title":"Specify `Font` in `HH_POPUPW` when calling `ShowHTML10Help` in `Help.ShowPopup` to allow for unicode characters","State":"open","Body":"See issue for discussion on fix.\r\n\r\nFixes #4422\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8372)","Url":"https://github.com/dotnet/winforms/pull/8372","RelatedDescription":"Open PR \"Specify `Font` in `HH_POPUPW` when calling `ShowHTML10Help` in `Help.ShowPopup` to allow for unicode characters\" (#8372)"},{"Id":"1493462945","IsPullRequest":true,"CreatedAt":"2022-12-13T06:09:17","Actor":"elachlan","Number":"8371","RawContent":null,"Title":"Cleanup explicit `EmbeddedResource` items from `System.Windows.Forms.csproj`","State":"open","Body":"- Glob EmbeddedResources in Project file\r\n- Rename icon files to help with globbing\r\n- delete redundant icons\r\n- Add tests for EmbeddedResources\r\n\r\nFixes #49\r\nRelated #8358\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8371)","Url":"https://github.com/dotnet/winforms/pull/8371","RelatedDescription":"Open PR \"Cleanup explicit `EmbeddedResource` items from `System.Windows.Forms.csproj`\" (#8371)"},{"Id":"1487780802","IsPullRequest":true,"CreatedAt":"2022-12-13T04:35:00","Actor":"elachlan","Number":"8358","RawContent":null,"Title":"Cleanup explicit `EmbeddedResource` items in `System.Windows.Forms.Design.csproj`","State":"closed","Body":"For `System.Windows.Forms.Design` this uses globbing to add the Embedded Resources instead of explicit items.\r\n\r\nIf this goes okay, I will look into the rest of the projects in the solution.\r\n\r\nRelated: #49\r\n\r\nReference:\r\nhttps://stackoverflow.com/questions/46584499/how-to-add-a-glob-for-resx-files-for-new-sdk-csproj-file\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8358)","Url":"https://github.com/dotnet/winforms/pull/8358","RelatedDescription":"Closed or merged PR \"Cleanup explicit `EmbeddedResource` items in `System.Windows.Forms.Design.csproj`\" (#8358)"},{"Id":"1493098596","IsPullRequest":true,"CreatedAt":"2022-12-13T01:26:10","Actor":"4039-zach","Number":"8369","RawContent":null,"Title":"Remove isExternal config option from Helix","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n## Proposed changes\r\n\r\n- Removes the isExternal configuration option from Helix\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- N/A\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- None\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Verified that the isExternal config option is not used anywhere else.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8369)","Url":"https://github.com/dotnet/winforms/pull/8369","RelatedDescription":"Closed or merged PR \"Remove isExternal config option from Helix\" (#8369)"},{"Id":"1493043506","IsPullRequest":true,"CreatedAt":"2022-12-13T00:01:07","Actor":"elachlan","Number":"8368","RawContent":null,"Title":"Fix `LinkLabel` truncate when programmatically disabled and `UseCompatibleTextRendering=false`","State":"open","Body":"Fixes #7341\r\n\r\nBefore:\r\n![image](https://user-images.githubusercontent.com/2433737/207186226-fd67025e-37dd-4faf-81cc-ec915414c080.png)\r\n\r\nAfter:\r\n![image](https://user-images.githubusercontent.com/2433737/207186353-0742a050-ed55-476a-a53a-5231d104afe6.png)\r\n\r\nOriginal comment: https://github.com/dotnet/winforms/issues/7341#issuecomment-1345829400\r\n\r\n> This comment pointed me in the right direction.\r\n> https://github.com/dotnet/winforms/issues/3780#issuecomment-855463125\r\n> \r\n> When setting `UseCompatibleTextRendering=false`, it causes the issue.\r\n> \r\n> The most basic reproduction is:\r\n> ```csharp\r\n> using Form form = new();\r\n> using LinkLabel linkLabel = new()\r\n> {\r\n>     Text = \"linkLabel12345\",\r\n>     Enabled = false,\r\n>     UseCompatibleTextRendering = false,\r\n>     AutoSize = true\r\n> };\r\n> form.Controls.Add(linkLabel);\r\n> form.ShowDialog();\r\n> ```\r\n> \r\n> The issue stems from how `OnPaint` functions when `Enabled` and `UseCompatibleTextRendering`. The key here is around `Graphics.ExcludeClip` vs `Graphics.IntersectClip` and how Margins are included in the `_textRegion` in `EnsureRun`.\r\n> \r\n> When `Enabled` is `true`, a manual paint is done via `PaintLink` and then `Graphics.ExcludeClip(_textRegion)` is called to avoid rendering that part of the graphics.\r\n> \r\n> When `Enabled` is `false`, `Graphics.IntersectClip(_textRegion)` is called and then depending on `UseCompatibleTextRendering` we call a different overload of `ControlPaint.DrawStringDisabled`. `UseCompatibleTextRendering=true` will result in a `graphics.DrawString` call, where as `UseCompatibleTextRendering=false` results in a `User32.DrawTextExW` call.\r\n> \r\n> When `UseCompatibleTextRendering=true` it uses `Graphics.MeasureCharacterRanges` to set the `_textRegion`. When `UseCompatibleTextRendering=false`, it uses the `ClientRectWithPadding` and then the margins returned from `hfont.GetTextMargins()`. The margins returned are then **SUBTRACTED** from the width to create a new rectangle. This is the bug, they should be ADDED to the width to account for the extra space required for the text.\r\n> \r\n> https://github.com/dotnet/winforms/blob/b0e5f5b7c4698d3b39424c22d09dbce01e0ce544/src/System.Windows.Forms/src/System/Windows/Forms/LinkLabel.cs#L704-L707\r\n> \r\n> By changing the code to the following the behaviour was fixed in all scenarios.\r\n> ```csharp\r\n> Rectangle visualRectangle = new Rectangle(clientRectWithPadding.X + iLeftMargin,\r\n>                                                                   clientRectWithPadding.Y,\r\n>                                                                   textSize.Width + iRightMargin + iLeftMargin,\r\n>                                                                   textSize.Height);\r\n> ```\r\n> Calling _textRegion.GetBounds(g); when UseCompatibleTextRendering=true gets Width = 81 Height = 16.\r\n> \r\n> When UseCompatibleTextRendering=false\r\n> With Changes:\r\n> visualRectangle has Width = 91 Height = 15. Which is then changed to Width = 84 Height = 15 after the call to CalcTextRenderBounds which narrows it to the clientRectWithPadding.\r\n> \r\n> Without Changes:\r\n> visualRectangle has Width = 77 Height = 15.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8368)","Url":"https://github.com/dotnet/winforms/pull/8368","RelatedDescription":"Open PR \"Fix `LinkLabel` truncate when programmatically disabled and `UseCompatibleTextRendering=false`\" (#8368)"},{"Id":"1486311566","IsPullRequest":false,"CreatedAt":"2022-12-12T23:35:48","Actor":"kirsan31","Number":"8354","RawContent":null,"Title":"local variables in WinForms projects are not captured by debugger","State":"closed","Body":"Created based on [this](https://github.com/dotnet/winforms/issues/8348#issuecomment-1343424116) discussion.\r\n\r\n### .NET version\r\n\r\n`net6.0-windows; net7.0-windows; net472`\r\n\r\n### V.S.\r\n\r\n```\r\nMicrosoft Visual Studio Community 2022\r\nVersion 17.4.2\r\nVisualStudio.17.Release/17.4.2+33122.133\r\nMicrosoft .NET Framework\r\nVersion 4.8.09032\r\n```\r\n\r\n17.4.1 and 17.5.p1 - same behavior.\r\n\r\n### Windows.\r\n\r\n```\r\nOS Name\tMicrosoft Windows 11 Home\r\nVersion\t10.0.22621 Build 22621\r\n```\r\n\r\n### Issue description\r\n\r\nV.S. Debugger not capturing local variables in any WinForms .Net / .net framework projects. In console projects all are ok: \r\n![Snipaste_2022-12-08_08-40-36](https://user-images.githubusercontent.com/17767561/206388114-1ad2e844-a614-4a1d-863f-c59a4af11542.png)\r\nReset settings and repair installation - nothing helps.\r\n\r\ndevelopercommunity issues:\r\nhttps://developercommunity.visualstudio.com/t/Net-local-variables-not-captured-by-deb/10216016 (closed in favor of next one)\r\nhttps://developercommunity.visualstudio.com/t/CS0103-in-the-watch-window-for-local-var/10222843\r\n\r\n\r\n### Steps to reproduce\r\n\r\nAny WinForms project.","Url":"https://github.com/dotnet/winforms/issues/8354","RelatedDescription":"Closed issue \"local variables in WinForms projects are not captured by debugger\" (#8354)"},{"Id":"1491281134","IsPullRequest":true,"CreatedAt":"2022-12-12T22:09:05","Actor":"elachlan","Number":"8367","RawContent":null,"Title":"Fix `Cursor(Stream)` to avoid incomplete reads and possible exception","State":"closed","Body":"Fixes #3492\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8367)","Url":"https://github.com/dotnet/winforms/pull/8367","RelatedDescription":"Closed or merged PR \"Fix `Cursor(Stream)` to avoid incomplete reads and possible exception\" (#8367)"},{"Id":"1488471989","IsPullRequest":true,"CreatedAt":"2022-12-12T20:01:29","Actor":"dotnet-maestro[bot]","Number":"8359","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20221211.2\r\n- **Date Produced**: December 12, 2022 4:18:37 AM UTC\r\n- **Commit**: cfdf0f67485ae41f4454a687b1e01ccb32e5e799\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.22609.1 to 8.0.0-alpha.1.22611.2][3]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.22609.1 to 8.0.0-alpha.1.22611.2][3]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22609.1 to 8.0.0-alpha.1.22611.2][3]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22609.1 to 8.0.0-alpha.1.22611.2][3]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22609.1 to 8.0.0-alpha.1.22611.2][3]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.22609.1 to 8.0.0-alpha.1.22611.2][3]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22609.1 to 8.0.0-alpha.1.22611.2][3]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.22609.1 to 8.0.0-alpha.1.22611.2][3]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.22609.1 to 8.0.0-alpha.1.22611.2][3]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.22609.1 to 8.0.0-alpha.1.22611.2][3]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22609.1 to 8.0.0-alpha.1.22611.2][3]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22609.1 to 8.0.0-alpha.1.22611.2][3]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22609.1 to 8.0.0-alpha.1.22611.2][3]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22609.1 to 8.0.0-alpha.1.22611.2][3]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22609.1 to 8.0.0-alpha.1.22611.2][3]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.22609.1 to 8.0.0-alpha.1.22611.2][3]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22609.1 to 8.0.0-alpha.1.22611.2][3]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22609.1 to 8.0.0-alpha.1.22611.2][3]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22609.1 to 8.0.0-alpha.1.22611.2][3]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22609.1 to 8.0.0-alpha.1.22611.2][3]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22609.1 to 8.0.0-alpha.1.22611.2][3]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22609.1 to 8.0.0-alpha.1.22611.2][3]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.22609.1 to 8.0.0-alpha.1.22611.2][3]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22609.1 to 8.0.0-alpha.1.22611.2][3]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22609.1 to 8.0.0-alpha.1.22611.2][3]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22609.1 to 8.0.0-alpha.1.22611.2][3]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22609.1 to 8.0.0-alpha.1.22611.2][3]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22609.1 to 8.0.0-alpha.1.22611.2][3]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22609.1 to 8.0.0-alpha.1.22611.2][3]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22609.1 to 8.0.0-alpha.1.22611.2][3]\r\n\r\n[3]: https://github.com/dotnet/runtime/compare/d76ddf3...cfdf0f6\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8359)\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/8359","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8359)"},{"Id":"1488858134","IsPullRequest":true,"CreatedAt":"2022-12-12T18:16:29","Actor":"JeremyKuhne","Number":"8362","RawContent":null,"Title":"Update to the latest CsWin32","State":"closed","Body":"This drop adds CCW generation, which removes a good chunk of our boilerplate and will facilitate additional progress on moving to ComWrappers.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8362)","Url":"https://github.com/dotnet/winforms/pull/8362","RelatedDescription":"Closed or merged PR \"Update to the latest CsWin32\" (#8362)"},{"Id":"1490170121","IsPullRequest":true,"CreatedAt":"2022-12-12T18:08:40","Actor":"Lera022","Number":"8363","RawContent":null,"Title":"Create mmm","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n## Proposed changes\r\n\r\n- \r\n- \r\n- \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8363)","Url":"https://github.com/dotnet/winforms/pull/8363","RelatedDescription":"Closed or merged PR \"Create mmm\" (#8363)"},{"Id":"1490597323","IsPullRequest":true,"CreatedAt":"2022-12-12T00:02:39","Actor":"elachlan","Number":"8366","RawContent":null,"Title":"Change default `ImageList.ColorDepth` to 32bit","State":"open","Body":"Fixes #7021\r\n\r\nIn the linked issue, the suggestion was to change the default `ColorDepth` to `32bit`. Thus having the best looking image by default. For modern applications this makes a lot of sense.\r\n\r\nSide effects from this include a branch in `GetBitmap` which checks the alpha information, which may decrease performance slightly when interacting with the `ImageCollection`. It could also result in higher memory usage. But I cannot see any documentation on whether the `ColorDepth` setting reduces the image quality to save on memory. It's just a hunch.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8366)","Url":"https://github.com/dotnet/winforms/pull/8366","RelatedDescription":"Open PR \"Change default `ImageList.ColorDepth` to 32bit\" (#8366)"},{"Id":"1490232625","IsPullRequest":true,"CreatedAt":"2022-12-11T17:08:47","Actor":"Jericho","Number":"8365","RawContent":null,"Title":"Refactor Com2IManagedPerPropertyBrowsingHandler to replace ArrayList with List<Atrribute>","State":"open","Body":"Related: #8140\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8365)","Url":"https://github.com/dotnet/winforms/pull/8365","RelatedDescription":"Open PR \"Refactor Com2IManagedPerPropertyBrowsingHandler to replace ArrayList with List<Atrribute>\" (#8365)"},{"Id":"1490200902","IsPullRequest":true,"CreatedAt":"2022-12-11T16:36:35","Actor":"Jericho","Number":"8364","RawContent":null,"Title":"Refactor BindingCollection to replace ArrayList with List<Binding>","State":"open","Body":"Related: #8140\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8364)","Url":"https://github.com/dotnet/winforms/pull/8364","RelatedDescription":"Open PR \"Refactor BindingCollection to replace ArrayList with List<Binding>\" (#8364)"},{"Id":"1488613544","IsPullRequest":false,"CreatedAt":"2022-12-10T15:53:58","Actor":"kirsan31","Number":"8360","RawContent":null,"Title":"Some times ToolBox not populated with user control from Nuget","State":"open","Body":"### Environment\n\nMicrosoft Visual Studio Community 2022\r\nVersion 17.4.2\r\nVisualStudio.17.Release/17.4.2+33122.133\r\nMicrosoft .NET Framework\r\nVersion 4.8.09032\n\n### .NET version\n\n.Net6 .Net7\n\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\n\nNo\n\n### Issue description\n\nThis also coming from our [discussion](https://github.com/KlausLoeffelmann/NetControlDesigners/pull/6#issuecomment-1336462914) with @KlausLoeffelmann.\r\nWorking on porting [chart control designer](https://github.com/kirsan31/winforms-datavisualization/tree/DesignerTest) I ran into the following issues.\r\n\r\nIn the solution I have control itself and test WinForms project that reference nuget package of the control. So we must have 2 controls on ToolBox (one from project and one from nuget):\r\n![image](https://user-images.githubusercontent.com/17767561/203862352-4a0f36ad-87ba-47c1-a929-ba33b1bbee4a.png)\r\n\r\n 1. Some times ToolBox not populated with Nuget control version (the control from project is always here).  \r\n    - Even when we have not see control from nuget, when we drug project control version - all client/server staff are working, so it's only ToolBox problem.\r\n    - Need to restart studio (sometimes many times) until it shows up.\r\n2. Not a bug but very annoying. The client side of the control designer is loading and caсhing on first opening of the test project form in the designer. After that if you have modified client side, you **need** to restart VS to see this changes. I have test project with `*` reference to package and more of it with nuget restore before build - this not help. Designer populate and cache ToolBox only on first load (even close and reopen solution not helps). May be add some way to reload / repopulate ToolBox manually? It's also helps with previous bug :)\r\n\n\n### Steps to reproduce\n\n1. Pull https://github.com/kirsan31/winforms-datavisualization/tree/DesignerTest\r\n2. Build.\r\n3. Open `Form1` from `DesignerTest` project in designer and see on TooLbox. \r\n  a. If you see only  \r\n  ![image](https://user-images.githubusercontent.com/17767561/203863403-f3687942-a62b-432a-b83c-b0da3c0d3724.png) \r\n  here - you've got it :)\r\n  b. If you see both versions - restart VS and do point 3. Repeat (sometimes the bug appears immediately, sometimes it takes about 10 restarts) until you see only one.\n\n### Diagnostics\n\n_No response_","Url":"https://github.com/dotnet/winforms/issues/8360","RelatedDescription":"Open issue \"Some times ToolBox not populated with user control from Nuget\" (#8360)"},{"Id":"1487469906","IsPullRequest":false,"CreatedAt":"2022-12-09T21:22:33","Actor":"dreddy-work","Number":"8357","RawContent":null,"Title":"[Tracking] HashTable/ArrayList replacement in Winforms","State":"open","Body":"While replacing HashSet and ArrayList we found scenarios where replacements from Generics are not functionally equivalent with non-generics. ex: [HashTable/ArrayLaist replacement in Winforms](https://github.com/dotnet/winforms/pull/8235/files#r1044787174). \r\n\r\nWe are going to do a quick review around [here](https://github.com/dotnet/winforms/issues/8140) and [here](https://github.com/dotnet/winforms/issues/8143) and provide further guidance/helpers to make sure replacements are smooth.\r\n\r\nrelated #8143 , #8140  \r\n\r\nCommunity and primarily @elachlan , @Jericho , @hughbe @gpetrou that are helping in this space, can you help us on [these](https://github.com/dotnet/winforms/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22) meanwhile?","Url":"https://github.com/dotnet/winforms/issues/8357","RelatedDescription":"Open issue \"[Tracking] HashTable/ArrayList replacement in Winforms\" (#8357)"},{"Id":"1486727757","IsPullRequest":true,"CreatedAt":"2022-12-09T13:35:12","Actor":"dotnet-maestro[bot]","Number":"8356","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20221209.1\r\n- **Date Produced**: December 9, 2022 12:06:07 PM UTC\r\n- **Commit**: d76ddf37da0a6e3dbcb66d571725299633f741a0\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22607.6 to 8.0.0-alpha.1.22609.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/5316939...d76ddf3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8356)","Url":"https://github.com/dotnet/winforms/pull/8356","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8356)"},{"Id":"1488652718","IsPullRequest":false,"CreatedAt":"2022-12-09T08:30:18","Actor":"kjetil-gdm","Number":"8361","RawContent":null,"Title":"Windows.Forms.Form opening outside of visible desktop/screen area","State":"open","Body":"### Description\n\n\r\nIf you have multiple screens, a Form may be opened outside of visible screen area if you open a new form with StartPosition = WindowsDefaultLocation using code like this:\r\n            anotherForm another = new anotherForm();\r\n            another.Owner = this;\r\n            another.ShowDialog();\r\n\r\nIf you use \r\nanother.ShowDialog(this)\r\nthe form will however open next to your original form.\r\nIn my case I have 3 screens, from left to right:\r\n1. 3840x2160 at 150%,\r\n2. 2560x1600 at 150%\r\n3. 1920x1080 at 100%\r\n\r\n\n\n### Reproduction Steps\n\n    public partial class Form1 : Form\r\n    {\r\n        public Form1()\r\n        {\r\n            InitializeComponent();\r\n        }\r\n\r\n        private void button1_Click(object sender, EventArgs e)\r\n        {\r\n            anotherForm another = new anotherForm();\r\n            another.Owner = this;\r\n            another.ShowDialog();\r\n        }\r\n    }\r\n\r\n----\r\n\n\n### Expected behavior\n\nExpected the Form to be somewhere within the visible screen area.\n\n### Actual behavior\n\nForm is shown in Taskbar, but is outside visible area. \r\nIt is possible to move the Form back into visible area e.g by selecting it in task bar and using Win+Left.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\nSet (Form).StartPosition = other value than WindowsDefaultLocation,\r\nor use (Form).ShowDialog(this).\n\n### Configuration\n\nWindows Forms app (.NET Framework) v 4.8.\r\nC# and VB tested, x86 debug/release and any cpu tested.\r\nWindows 11 Pro 10.0.22621 Build 22621\r\n\r\nNot tested on other configurations.\n\n### Other information\n\nProbably something to do with calculation of startup position based on the dpi of the screen the Form currently is on.\r\n","Url":"https://github.com/dotnet/winforms/issues/8361","RelatedDescription":"Open issue \"Windows.Forms.Form opening outside of visible desktop/screen area\" (#8361)"},{"Id":"1485922171","IsPullRequest":true,"CreatedAt":"2022-12-09T04:00:26","Actor":"elachlan","Number":"8353","RawContent":null,"Title":"Refactor `DesignerSerializationManager` to replace `HashTable` and enable Nullability","State":"open","Body":"Refactored to replace HashTable\r\nRefactored for null-ability annotations\r\nGeneral code cleanup\r\n\r\nDependent on runtime changes in: https://github.com/dotnet/runtime/pull/79429\r\n\r\nRelated: #8342, #8143\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8353)","Url":"https://github.com/dotnet/winforms/pull/8353","RelatedDescription":"Open PR \"Refactor `DesignerSerializationManager` to replace `HashTable` and enable Nullability\" (#8353)"},{"Id":"1484598496","IsPullRequest":true,"CreatedAt":"2022-12-08T13:34:22","Actor":"dotnet-maestro[bot]","Number":"8352","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20221207.6\r\n- **Date Produced**: December 8, 2022 4:54:14 AM UTC\r\n- **Commit**: 531693977729e675bd330b2929f1a516727ed94e\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22606.7 to 8.0.0-alpha.1.22607.6][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/ffffc4b...5316939\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8352)","Url":"https://github.com/dotnet/winforms/pull/8352","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8352)"},{"Id":"1483895214","IsPullRequest":true,"CreatedAt":"2022-12-08T07:06:31","Actor":"NikitaSemenovAkvelon","Number":"8351","RawContent":null,"Title":"Changed type of the `handle` parameter from `IntPtr` to  `HWND` in the `Control.ReleaseUiaProvider` method","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #8217\r\n\r\n\r\n## Proposed changes\r\n\r\n- Changed type to `HWND`.\r\n- Refactored `Control.HWNDInternal` property to remove extra convert.\r\n- Used `HWND` value instead of `Handle`.\r\n- Used `HWND.Null` value instead of `IntPtr.Zero`.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Method becomes more clear and an argument type is unified.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual\r\n- Unit tests\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n- Inspect \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n.NET SDK:\r\n Version:   8.0.100-alpha.1.22512.5\r\n Commit:    1b80461e45\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.22621\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8351)","Url":"https://github.com/dotnet/winforms/pull/8351","RelatedDescription":"Open PR \"Changed type of the `handle` parameter from `IntPtr` to  `HWND` in the `Control.ReleaseUiaProvider` method\" (#8351)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-12-14T03:30:32.5300647Z","RunDurationInMilliseconds":556}