{"Data":{"GitHub":{"Issues":[{"Id":"1746641786","IsPullRequest":true,"CreatedAt":"2023-06-08T21:14:09","Actor":"JeremyKuhne","Number":"9244","RawContent":null,"Title":"Update COM type descriptor extended browsing handlers","State":"closed","Body":"This cleans up the COM type descriptor extended property handlers for supported property interfaces.\r\n\r\n- Uses interfaces directly, enabling ComWrapper scenarios\r\n- Simplifies the handler instance handling - no longer uses Activator.CreateInstance\r\n- Bring variable names up to standard (notably for event args)\r\n- Add simple supports interface helper in ComHelpers\r\n- Add interface for COM2ExtendedBrowsingHandler and make base class generic of interface type\r\n\r\nAdditional PRs will follow that change away from casting to managed COM interfaces to suppport AOT / ComWrappers.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9244)","Url":"https://github.com/dotnet/winforms/pull/9244","RelatedDescription":"Closed or merged PR \"Update COM type descriptor extended browsing handlers\" (#9244)"},{"Id":"1746963704","IsPullRequest":true,"CreatedAt":"2023-06-08T20:46:54","Actor":"LeafShi1","Number":"9246","RawContent":null,"Title":"Update control owning field of Label and Panel to using weak references","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nRelated to #9224 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Update the control owning field of Label and Panel to using weak references\r\n- Enable the GC collect test for the Label and Panel control in unit test cases\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- The strong reference used by the original Owner property can cause a memory leak\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Unit tests\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- dotnet 8.0.100-preview.6.23307.24\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9246)","Url":"https://github.com/dotnet/winforms/pull/9246","RelatedDescription":"Closed or merged PR \"Update control owning field of Label and Panel to using weak references\" (#9246)"},{"Id":"1748529443","IsPullRequest":true,"CreatedAt":"2023-06-08T19:46:02","Actor":"dreddy-work","Number":"9257","RawContent":null,"Title":"Update WinFormsFact version to include RetryCount for flaky tests","State":"open","Body":"Test Infra:\r\n\r\nUpdating `WinFormsFact` version to include retry count on flaky UI tests.","Url":"https://github.com/dotnet/winforms/pull/9257","RelatedDescription":"Open PR \"Update WinFormsFact version to include RetryCount for flaky tests\" (#9257)"},{"Id":"1747816547","IsPullRequest":false,"CreatedAt":"2023-06-08T12:38:58","Actor":"v-elnovikova","Number":"9256","RawContent":null,"Title":"[Accessibility] Narrator cannot announce the indeterminate state of DataGridViewCheckBoxCell correctly","State":"open","Body":"### .NET version\n\n.NET SDK 8.0.100-preview.4.23260.5\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo\n\n### Issue description\n\nWhen set DataGridViewCheckBoxCell  value to Indeterminate, Narrator cannot announce that state is Indeterminate, but \"Unchecked\".\r\n\r\n![DataGridViewCeckBoxCell - indeterminate announced as unchecked in 8 0](https://github.com/dotnet/winforms/assets/113603457/bb8e6551-8967-43ab-994e-022ca9b914ad)\r\n\r\n![DataGridViewCeckBoxCell - indeterminate is Off in 8 0](https://github.com/dotnet/winforms/assets/113603457/9d124cd1-5a86-49d4-994d-46b933d0ec81)\r\n\n\n### Steps to reproduce\n\n1. Create a Winforms .Net Core application with DataGridView.\r\n2. Add a DataGridViewCheckBoxColumn to DataGridView.\r\n3. Build and run application.\r\n4. Launch Narrator to focus on a grid check box cell.\r\n\r\nSample app:  [WinFormsApp1.zip](https://github.com/dotnet/winforms/files/11688232/WinFormsApp1.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/9256","RelatedDescription":"Open issue \"[Accessibility] Narrator cannot announce the indeterminate state of DataGridViewCheckBoxCell correctly\" (#9256)"},{"Id":"1747753085","IsPullRequest":true,"CreatedAt":"2023-06-08T12:27:46","Actor":"dotnet-maestro[bot]","Number":"9255","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230608.1\r\n- **Date Produced**: June 8, 2023 9:57:02 AM UTC\r\n- **Commit**: 7c00b17be1b2ffb6ed49ad68cf36e9a056323152\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **System.CodeDom**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **System.Data.Odbc**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **System.Data.OleDb**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **System.IO.Ports**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **System.Management**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **System.Reflection.Context**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **System.Runtime.Caching**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **System.Speech**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **System.Text.Json**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.6.23307.1 to 8.0.0-preview.6.23308.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/6e34b5d4e9...7c00b17be1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9255)","Url":"https://github.com/dotnet/winforms/pull/9255","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#9255)"},{"Id":"1747752374","IsPullRequest":true,"CreatedAt":"2023-06-08T12:22:20","Actor":"dotnet-maestro[bot]","Number":"9254","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20230607.2\r\n- **Date Produced**: June 7, 2023 9:20:27 PM UTC\r\n- **Commit**: a178d756de78f9fd55339cb92665e791a3ba6535\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23302.3 to 8.0.0-beta.23307.2][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.23302.3 to 8.0.0-beta.23307.2][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.23302.3 to 8.0.0-beta.23307.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23302.3 to 8.0.0-beta.23307.2][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.23302.3 to 8.0.0-beta.23307.2][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23302.3 to 8.0.0-beta.23307.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/234e0726c7...a178d756de\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9254)","Url":"https://github.com/dotnet/winforms/pull/9254","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#9254)"},{"Id":"1747164039","IsPullRequest":false,"CreatedAt":"2023-06-08T10:39:01","Actor":"HindujaArugula","Number":"9248","RawContent":null,"Title":"A11y_.NET Core_WinForms_PrintTesting_Print_ColorContrast: Color contrast ratio is less than 4.5:1 for the \"Stores printing output to a file\" text where the ratio is 3.278:1","State":"closed","Body":"### .NET version\n\nMicrosoft.Net SDK6.0.311 (x64)\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo response\n\n### Issue description\n\n### GitHubTags:\r\n#A11yMAS;#A11yTCS;#BM_.NET Core[Winforms]-Win32-May2023;#.NET Core;#A11ySev2;#WCAG1.4.3;#DesktopApp;#Win11;#NonBenchmark;#ColorContrast\r\n\r\n### Actual:\r\nColor contrast ratio for \"Stores printing output to a file\" text 3.278:1 which is present below \"Print to a file\" where the ratio is less than 4.5:1.\r\n\r\n### Expected:\r\nColor contrast ratio for \"Stores printing output to a file\" text 3.278:1 which is present below \"Print to a file\" where the ratio should be greater than or equal to 4.5:1.\r\n\r\n### User Impact:\r\nLow vision users find it difficult to see the text if the color contrast ratio is less than 4.5:1.\r\n\r\n### Attachment:\r\n![Color Contrast](https://github.com/dotnet/winforms/assets/125462007/6f9611f9-ca1d-4e8e-9951-2146bbd579e8)\r\n\n\n### Steps to reproduce\n\n1. Install and Open \"Winforms\" App.\r\n2. \"Main Form\" screen would appear.\r\n3. TAB to \"Printing_Controls:Testing the controls under Printing Tab\" and press ENTER key.\r\n4. TAB to \"Print' button and press ENTER key.\r\n5. Now \"Printing from win32 application - Print\" appears on the screen.\r\n6. TAB to \"Store Printing output to a file\".\r\n7.Open Accessibility Insights for Windows.\r\n8.Now observe the issue that Color contrast ratio for \"Stores printing output to a file\" text 3.278:1 which is present below \"Print to a file\" where the ratio is less than 4.5:1.","Url":"https://github.com/dotnet/winforms/issues/9248","RelatedDescription":"Closed issue \"A11y_.NET Core_WinForms_PrintTesting_Print_ColorContrast: Color contrast ratio is less than 4.5:1 for the \"Stores printing output to a file\" text where the ratio is 3.278:1\" (#9248)"},{"Id":"1747593641","IsPullRequest":true,"CreatedAt":"2023-06-08T10:23:44","Actor":"Epica3055","Number":"9253","RawContent":null,"Title":"Update DateTimePicker and Accessibility class","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #9232 \r\n\r\n\r\n## Proposed changes\r\n\r\n- \r\n- Add new method\r\n- \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Narrator is announcing the Time when the focus lands to the date picker control , but visually time is not present.\r\n\r\n## Regression? \r\n\r\n- Yes \r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![image](https://github.com/dotnet/winforms/assets/135201996/5fb3240d-73ad-4479-b986-e0643bc65907)\r\n\r\n\r\n### After\r\n\r\n![image](https://github.com/dotnet/winforms/assets/135201996/7b599ef1-deae-4a20-b0d4-9396b2678aea)\r\n\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- \r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9253)","Url":"https://github.com/dotnet/winforms/pull/9253","RelatedDescription":"Open PR \"Update DateTimePicker and Accessibility class\" (#9253)"},{"Id":"1747583358","IsPullRequest":false,"CreatedAt":"2023-06-08T10:19:56","Actor":"HindujaArugula","Number":"9252","RawContent":null,"Title":"A11y_.NET Core_WinForms_Print_Microsoft Print to PDF Advanced Options_Keyboard: Keyboard focus is going to text i.e., \"Paper size\" \"Copy count\" which is present below \"Paper/Output\" tree view after press ENTER key the dialog is getting closed.","State":"open","Body":"### .NET version\n\nMicrosoft.Net SDK6.0.311 (x64)\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo response\n\n### Issue description\n\n### GitHubTags:\r\n#A11yMAS;#A11yTCS;#BM_.NET Core[Winforms]-Win32-May2023;#.NET Core;#A11ySev2;#WCAG2.1.1#DesktopApp;#Win11;#NonBenchmark;#Keyboard\r\n\r\n### Actual:\r\nKeyboard focus is going to text i.e., \"Paper size\" \"Copy count\" which is present below \"Paper/Output\" tree view after press ENTER key the dialog is automatically getting closed.\r\n\r\n### Expected:\r\nKeyboard focus is going to text i.e., \"Paper size\" \"Copy count\" which is present below \"Paper/Output\" tree view after press ENTER key the dialog should not get automatically closed.\r\n\r\n### User Impact:\r\nKeyboard only users will face difficulties and gets confused if the dialog gets automatically closed after pressing ENTER key.\r\n\r\n### Attachment:\r\n![keyboard focus](https://github.com/dotnet/winforms/assets/125462007/39d8901b-f724-47a4-a554-044c521e990b)\r\n\n\n### Steps to reproduce\n\n1. Install and Open \"Winforms\" App.\r\n2. \"Main Form\" screen would appear.\r\n3. TAB to \"Printing_Controls:Testing the controls under Printing Tab\" and press ENTER key.\r\n4. TAB to \"Print' button and press ENTER key.\r\n5. Now \"Printing from win32 application - Print\" appears on the screen.\r\n6. TAB to \"More Settings\" button and press ENTER key.\r\n7. Now \"Printing Preference\" Screen will appear.\r\n8. TAB to \"Advanced\" button and press ENTER key.\r\n9. Now \"Microsoft print to PDF Advanced Options\" screen will appear.\r\n10.Now observe that Keyboard focus is going to text i.e., \"Paper size\" \"Copy count\" which is present below \"Paper/Output\" tree view after press ENTER key the dialog is automatically getting closed.","Url":"https://github.com/dotnet/winforms/issues/9252","RelatedDescription":"Open issue \"A11y_.NET Core_WinForms_Print_Microsoft Print to PDF Advanced Options_Keyboard: Keyboard focus is going to text i.e., \"Paper size\" \"Copy count\" which is present below \"Paper/Output\" tree view after press ENTER key the dialog is getting closed.\" (#9252)"},{"Id":"1747317148","IsPullRequest":false,"CreatedAt":"2023-06-08T07:58:08","Actor":"Olina-Zhang","Number":"9251","RawContent":null,"Title":"[Multi-Monitor] ThreadExceptionDialog doesn't scaled well when DPI is differ","State":"open","Body":"### .NET version\n\n.NET 8.0.100-preview.6.23307.24\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo, the result on the latest 8.0 is different from .Net 7.0\n\n### Issue description\n\nThreadExceptionDialog doesn't scaled well when application is in PerMonitorV2 mode and DPI is differ\r\nThe result on the latest 8.0 is different from .Net 7.0, but all aren't scaled well.\r\n\r\n**.Net 8.0: from 100% primary monitor to 300% secondary monitor**\r\n\r\nhttps://github.com/dotnet/winforms/assets/26474449/637fdfdb-49a7-4e57-9a04-e5b30d032cdb\r\n\r\n**.Net 8.0: from 300% primary monitor to 100% secondary monitor**\r\n\r\nhttps://github.com/dotnet/winforms/assets/26474449/f952cdb4-8467-41cd-83dd-179167fc21bd\r\n\r\n**.Net 7.0: from 100% primary monitor to 300% secondary monitor**\r\n\r\nhttps://github.com/dotnet/winforms/assets/26474449/1eb1296b-2cd5-482a-8349-4b61659361bb\r\n\r\n**.Net 7.0: from 300% primary monitor to 100% secondary monitor**\r\n\r\nhttps://github.com/dotnet/winforms/assets/26474449/597b6b79-523e-4e9f-9b88-0cad43de322c\r\n\r\n\n\n### Steps to reproduce\n\n**Repro steps:**\r\n1. Create a Winforms .Net Core application with a button\r\n2. Double click button to generate event\r\n3. In the event, add following code to show ThreadException dialog\r\n```\r\nprivate void button1_Click(object sender, EventArgs e)\r\n{\r\n    using ThreadExceptionDialog dialog = new(new Exception(\"Really long exception description string, because we want to see if it properly wraps around or is truncated.\"));\r\n    dialog.ShowDialog(this);\r\n}\r\n```\r\n4. Do some testing between 2 different monitors\r\n\r\n**Test application:** \r\n[WinFormsApp6.zip](https://github.com/dotnet/winforms/files/11685438/WinFormsApp6.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/9251","RelatedDescription":"Open issue \"[Multi-Monitor] ThreadExceptionDialog doesn't scaled well when DPI is differ\" (#9251)"},{"Id":"1747273486","IsPullRequest":true,"CreatedAt":"2023-06-08T07:30:29","Actor":"LeafShi1","Number":"9250","RawContent":null,"Title":"Fix issue #7721 by inverting the color of the Browse button","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #7721 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Add HighContrast judgment when initializing Brower button\r\n- Under the HC black theme, call the method \"CreateResizedBitmap\" to invert the icon color\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- The icon of \"Browse...\" in PropertyGrid control is unclear when non-selecting it\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![image](https://github.com/dotnet/winforms/assets/132890443/0ffedbc6-4397-436c-b9ae-7a744170494a)\r\n\r\n\r\n### After\r\n\r\n![image](https://github.com/dotnet/winforms/assets/132890443/a5051f93-3aa6-4a1d-ab24-d70db6249cd2)\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- DotNet 8.0.100-preview.6.23307.24\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9250)","Url":"https://github.com/dotnet/winforms/pull/9250","RelatedDescription":"Open PR \"Fix issue #7721 by inverting the color of the Browse button\" (#9250)"},{"Id":"1747269589","IsPullRequest":false,"CreatedAt":"2023-06-08T07:28:51","Actor":"Philip-Wang01","Number":"9249","RawContent":null,"Title":"[Multi-Monitor] PictureBox don't scale well on the secondary monitor when application is in PerMonitorV2 mode ","State":"open","Body":"### .NET version\n\n.NET 8.0.100-preview.6.23307.24\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo, it doesn't work in .NET 6.0/7.0/8.0, not a regression issue.\n\n### Issue description\n\nTestapp: [testpictureboxapp.zip](https://github.com/dotnet/winforms/files/11685082/testpictureboxapp.zip)\r\n\r\nhttps://github.com/dotnet/winforms/assets/86937911/a1d2f5d6-accc-4e20-9ca2-236d2bdc0eb3\r\n\r\n100%DPI:\r\n\r\n![picturebox100](https://github.com/dotnet/winforms/assets/86937911/218455b2-df12-4c55-8bcf-ea7f8d6c2e07)\r\n\r\n100% primary monitor -> 300% secondary monitor:\r\n\r\n![picturebox300](https://github.com/dotnet/winforms/assets/86937911/cfefd915-4d20-453a-b240-890bb91157e0)\r\n\r\nThis issue also repro's when move from 300% primary monitor to 100% secondary monitor.\r\n\r\nhttps://github.com/dotnet/winforms/assets/86937911/84d21b90-ceea-4282-9794-7f1ce1acee36\r\n\r\nThis issue also repro's on design time.\r\n\r\nhttps://github.com/dotnet/winforms/assets/86937911/47a42df1-b8ed-4a4d-80db-622c3b32f05a\r\n\r\n\n\n### Steps to reproduce\n\n1. Launch VS instance on 100% primary monitor.\r\n2. Add `<ApplicationHighDpiMode>PerMonitorV2</ApplicationHighDpiMode>` in csproj file.\r\n3. Close and reopen Solution.\r\n4. Add an PictureBox with images to form designer.\r\n5. Build and run the application.\r\n6. Move to 300% secondary monitor.\r\n\r\n**More Info:**\r\n\r\n1. This issue also repro's on design time.\r\n2. This issue also repro's when move from 300% primary monitor to 100% secondary monitor.\r\n3. This issue only repro on `PerMonitorV2`application mode.","Url":"https://github.com/dotnet/winforms/issues/9249","RelatedDescription":"Open issue \"[Multi-Monitor] PictureBox don't scale well on the secondary monitor when application is in PerMonitorV2 mode \" (#9249)"},{"Id":"1747106426","IsPullRequest":false,"CreatedAt":"2023-06-08T05:23:14","Actor":"HindujaArugula","Number":"9247","RawContent":null,"Title":"A11y_.NET Core_WinForms_Print_Preference_Usability: Keyboard focus is going to the non-interactive text i.e \"Layout\" which is present on the top of the page.","State":"open","Body":"### .NET version\n\nMicrosoft.Net SDK6.0.311 (x64)\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo response\n\n### Issue description\n\n### GitHubTags:\r\n#A11yTCS;#BM_.NET Core[Winforms]-Win32-May2023;#.NET Core;#A11ySev4;#DesktopApp;#Win11;#NonBenchmark;#A11yUsable\r\n\r\n### Actual:\r\nKeyboard focus is going to the non-interactive text i.e. \"Layout\" which is present on the top of the page \r\n\r\n### Expected:\r\nKeyboard focus is going to the non-interactive text i.e. \"Layout\" which is present on the top of the page \r\n\r\n### User Impact:\r\nKeyboard only users will get confused if keyboard focus goes to non-interactive text i.e., \"Layout\".\r\n\r\n### Attachment:\r\n![keyboard focus](https://github.com/dotnet/winforms/assets/125462007/8a840c8e-16b5-48be-8cc8-6b024d02451a)\r\n\n\n### Steps to reproduce\n\n1. Install and Open \"Winforms\" App.\r\n2. \"Main Form\" screen would appear.\r\n3. TAB to \"Printing_Controls:Testing the controls under Printing Tab\" and press ENTER key.\r\n4. TAB to \"Print' button and press ENTER key.\r\n5. Now \"Printing from win32 application - Print\" appears on the screen.\r\n6. TAB to \"More Settings\" button and press ENTER key.\r\n7. Now \"Printing Preference\" Screen will appear.\r\n8.Now observe that Keyboard focus is going to the non-interactive text i.e., \"Layout\" which is present on the top of the page.","Url":"https://github.com/dotnet/winforms/issues/9247","RelatedDescription":"Open issue \"A11y_.NET Core_WinForms_Print_Preference_Usability: Keyboard focus is going to the non-interactive text i.e \"Layout\" which is present on the top of the page.\" (#9247)"},{"Id":"1746869956","IsPullRequest":true,"CreatedAt":"2023-06-08T00:34:41","Actor":"RussKie","Number":"9245","RawContent":null,"Title":"Update bug_report.yml","State":"open","Body":"Add \"Not Tested/Verified\" as an option for \"Did it work in .NET Framework\" question.\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9245)","Url":"https://github.com/dotnet/winforms/pull/9245","RelatedDescription":"Open PR \"Update bug_report.yml\" (#9245)"},{"Id":"1744274840","IsPullRequest":false,"CreatedAt":"2023-06-07T20:19:27","Actor":"CuteLeon","Number":"9236","RawContent":null,"Title":"Bind Model to Winforms DataGridView, can not get old value when property changed","State":"closed","Body":"### .NET version\n\n.Net 8.0 Preview 4\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\nI have a Model (INotifyPropertyChanged) and bound to a DataGridView by BindingList, Once I edited a property of model instance, DataGridView's cell value updated before PropertyChanged raied. I have no idea why.\r\n\r\nI am going to listen to BindingList's ListChanged (ItemChanged) event and get new value and old value of updating property, but DataGridView's cell value updated before raising this event, so that I can not get old value from DatGridView's cell.\r\n\r\nDoes anyone has some others solution to get both of new and old values when model's property changed? Great thanks!\n\n### Steps to reproduce\n\n\r\nHere is my code:\r\n``` csharp\r\npublic partial class Form1 : Form\r\n{\r\n    public abstract class BindableBase : INotifyPropertyChanged\r\n    {\r\n        public event PropertyChangedEventHandler? PropertyChanged;\r\n\r\n        protected bool SetProperty<TValue>(ref TValue field, TValue newValue, [CallerMemberName] string propertyName = \"\")\r\n        {\r\n            if (EqualityComparer<TValue>.Default.Equals(field, newValue))\r\n            {\r\n                return false;\r\n            }\r\n\r\n            var dataGridView = Application.OpenForms.OfType<Form1>().First().dataGridView1;\r\n            if (dataGridView.RowCount > 0)\r\n                Debug.Print($\"Before set value to field: {dataGridView.Rows[0].Cells[0].Value}\");\r\n            field = newValue;\r\n            if (dataGridView.RowCount > 0)\r\n                Debug.Print($\"After set value to field But before raise PropertyChanged event: {dataGridView.Rows[0].Cells[0].Value}\");\r\n            this.PropertyChanged?.Invoke(this, new PropertyChangedEventArgs(propertyName));\r\n            if (dataGridView.RowCount > 0)\r\n                Debug.Print($\"After raise PropertyChanged event: {dataGridView.Rows[0].Cells[0].Value}\");\r\n            return true;\r\n        }\r\n    }\r\n\r\n    public class Model : BindableBase\r\n    {\r\n        private int age;\r\n\r\n        public int Age { get => age; set => this.SetProperty(ref this.age, value); }\r\n    }\r\n\r\n    BindingList<Model> Models = new();\r\n\r\n    public Form1()\r\n    {\r\n        this.InitializeComponent();\r\n        this.dataGridView1.AutoGenerateColumns = true;\r\n        this.dataGridView1.DataSource = this.Models;\r\n        this.dataGridView1.Click += this.DataGridView1_Click;\r\n    }\r\n\r\n    private void DataGridView1_Click(object? sender, EventArgs e)\r\n    {\r\n        switch (this.dataGridView1.RowCount)\r\n        {\r\n            case 0:\r\n                this.Models.Add(new Model() { Age = 10 });\r\n                break;\r\n            default:\r\n                this.Models[0].Age = DateTime.Now.Microsecond;\r\n                break;\r\n        }\r\n    }\r\n```\r\n\r\nHere is some logs, you can see that Cell value was updated when set value to field and before raising PropertyChanged event;\r\n``` log\r\nBefore set value to field: 10\r\nAfter set value to field But before raise PropertyChanged event: 478\r\nAfter raise PropertyChanged event: 478\r\n\r\nBefore set value to field: 478\r\nAfter set value to field But before raise PropertyChanged event: 744\r\nAfter raise PropertyChanged event: 744\r\n```","Url":"https://github.com/dotnet/winforms/issues/9236","RelatedDescription":"Closed issue \"Bind Model to Winforms DataGridView, can not get old value when property changed\" (#9236)"},{"Id":"1746128955","IsPullRequest":false,"CreatedAt":"2023-06-07T15:08:54","Actor":"v-elnovikova","Number":"9243","RawContent":null,"Title":"[Accessibility] Narrator cannot announce the indeterminate state of CheckedListBox item correctly","State":"open","Body":"### .NET version\n\n.NET SDK 8.0.100-preview.4.23260.5\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, it is a regression issue, cannot repro in .Net 5, and repro in .Net 6, 7 versions\n\n### Issue description\n\nCheckedListBox item's state can be set to **Indeterminate** programmatically:\r\n\r\n```\r\ncheckedListBox1.SetItemCheckState(2, CheckState.Indeterminate);\r\n```\r\n\r\n\r\nNarrator announces **Indeterminate** state as **Checked**.\r\n\r\n#### .NET 8.0:\r\n![CheckedListBox - indeterminate state annouced as checked in 8 0](https://github.com/dotnet/winforms/assets/113603457/17beb2a1-bd9c-43d7-bb54-9c6e2c1d63f5)\r\n![CheckedListBox - indeterminate state as On in 8 0](https://github.com/dotnet/winforms/assets/113603457/4cb60f37-83a3-4aec-ad15-8352f72163e0)\r\n\r\n#### .NET 5.0:\r\n![CheckedListBox - indeterminate state annouced correctly in 5 0](https://github.com/dotnet/winforms/assets/113603457/3d2b8fda-6e11-46f5-936b-d1c87eae65ac)\r\n![CheckedListBox - indeterminate state is correct in 5 0](https://github.com/dotnet/winforms/assets/113603457/e394ca15-fb00-4a06-a92b-52681b00b70e)\r\n\n\n### Steps to reproduce\n\n1. Create a Winforms .Net Core application with CheckedListBox.\r\n2. Call `SetItemCheckState` method for one of CheckedListBox items.\r\n3. Build and run application.\r\n4. Launch Narrator to focus on that item.\r\n\r\nSample app:  [WinFormsApp1.zip](https://github.com/dotnet/winforms/files/11679033/WinFormsApp1.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/9243","RelatedDescription":"Open issue \"[Accessibility] Narrator cannot announce the indeterminate state of CheckedListBox item correctly\" (#9243)"},{"Id":"1745855521","IsPullRequest":true,"CreatedAt":"2023-06-07T13:03:46","Actor":"v-elnovikova","Number":"9242","RawContent":null,"Title":"Fix CheckBox indeterminate state announcement in screen readers","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #9157\r\n\r\n\r\n## Proposed changes\r\n\r\n- Update TogglePattern ToggleState property implementation in `CheckBoxAccessibleObject`.\r\n- Trigger StateChange accessible event when CheckBox is switched to Indeterminate state.\r\n- Add unit tests to verify CheckBoxAccessibleObject.ToggleState property value and CheckBoxAccessibleObject.Toggle method behavior;\r\n- Add three-state check box to WinformsControlsTest app.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Screen readers announce CheckBox state correctly.\r\n\r\n## Regression? \r\n\r\n- Yes, the issue cannot repro in .Net Core 3.1, and repro in .Net 5, 6, 7 versions\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\nNarrator announces Indeterminate state as Checked:\r\n![Narrator announces Indeterminate as Checked](https://github.com/dotnet/winforms/assets/113603457/87f0d6dd-6d8c-433e-b571-436e3103b6df)\r\n\r\nNarrator does not announce switching from Checked to Indeterminate state:\r\n\r\nhttps://github.com/dotnet/winforms/assets/113603457/48630969-36ff-430a-8f80-d00d2e5c4d3e\r\n\r\nToogleState value is On for Indeterminate checkbox: \r\n![ToggleState is On](https://github.com/dotnet/winforms/assets/113603457/bee6b4c6-59e9-41d3-879f-277f206c908e)\r\n\r\n### After\r\n\r\n![Narrator announces Indeterminate](https://github.com/dotnet/winforms/assets/113603457/a011852c-6b76-486d-98e6-31a1e6c3681c)\r\n\r\nhttps://github.com/dotnet/winforms/assets/113603457/1c04e0cb-c369-46c0-84e9-2ad8ebf3e979\r\n\r\n![ToggleState is Indeterminate](https://github.com/dotnet/winforms/assets/113603457/1f9ca36c-51dc-444a-b278-989f2f0a619e)\r\n\r\n\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .NET  8.0.100-preview.4.23260.5\r\n- Inspect 7.2.0.0\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9242)","Url":"https://github.com/dotnet/winforms/pull/9242","RelatedDescription":"Open PR \"Fix CheckBox indeterminate state announcement in screen readers\" (#9242)"},{"Id":"1745742995","IsPullRequest":true,"CreatedAt":"2023-06-07T12:27:45","Actor":"dotnet-maestro[bot]","Number":"9241","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230607.1\r\n- **Date Produced**: June 7, 2023 11:03:36 AM UTC\r\n- **Commit**: 6e34b5d4e9b16321f37c108fea3aa7e4e04b495a\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **System.CodeDom**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **System.Data.Odbc**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **System.Data.OleDb**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **System.IO.Ports**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **System.Management**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **System.Reflection.Context**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **System.Runtime.Caching**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **System.Speech**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **System.Text.Json**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.6.23305.2 to 8.0.0-preview.6.23307.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/fe980088a9...6e34b5d4e9\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9241)","Url":"https://github.com/dotnet/winforms/pull/9241","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#9241)"},{"Id":"1745529197","IsPullRequest":false,"CreatedAt":"2023-06-07T10:07:45","Actor":"panxn","Number":"9240","RawContent":null,"Title":"ToolStripButton OnClicked handler is not called if be clicked when the app has no focus","State":"open","Body":"### .NET version\n\n.NET6 and .NET7\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\nMy project is upgraded from .NET framework 47 to .NET6. `ToolBar/ToolBarButton` has to be replaced with `ToolStrip/ToolStripButton`.\r\n\r\n![image](https://github.com/dotnet/winforms/assets/4163729/e5c8fd14-90dd-48bb-82f2-db979361b46c)\r\n\r\nI created a sample app to reproduce the problem, there are one `ToolStrip` (three `ToolStripButton` in it) and one `Button`.\r\n\r\nIf the app is active (has focus), click any button, the event handler for \"Clicked\" gets called as expected.\r\nIf the app is not active, click `ToolStripButton`, the event handler is **not** called, it just active the app, then user has to click again to trigger the event handler. But `Button` still works for this scenario.\r\n\r\nIn .NET framework, `ToolBarButton` can work if the app is not active. Is it a bug or as design? Is there any way to make `ToolStripButton` keep same behavior as `ToolBarButton` used to do.\r\n\n\n### Steps to reproduce\n\nSee above","Url":"https://github.com/dotnet/winforms/issues/9240","RelatedDescription":"Open issue \"ToolStripButton OnClicked handler is not called if be clicked when the app has no focus\" (#9240)"},{"Id":"1745466547","IsPullRequest":false,"CreatedAt":"2023-06-07T09:33:18","Actor":"Philip-Wang01","Number":"9239","RawContent":null,"Title":"[Multi-Monitor] Buttons don't scale well on the secondary monitor when their font property is a non-default setting ","State":"open","Body":"### .NET version\n\n.NET 8.0.100-preview.6.23306.2\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo, it doesn't work in .NET 6.0/7.0/8.0, not a regression issue.\n\n### Issue description\n\nTestapp: [testfontapp.zip](https://github.com/dotnet/winforms/files/11675107/testfontapp.zip)\r\n\r\nhttps://github.com/dotnet/winforms/assets/86937911/6515ca51-ce5d-4bb8-8761-0922055e6df9\r\n\r\n100%DPI:\r\n![image](https://github.com/dotnet/winforms/assets/86937911/4ee1ecee-7ad1-44dc-a1c6-f1e83607d926)\r\n\r\n100% primary monitor -> 300% secondary monitor\r\n![image](https://github.com/dotnet/winforms/assets/86937911/31ce4092-4356-4503-a3ab-e8329cc24c04)\r\n\r\nThis issue does not repro when move from 300% primary monitor to 100% secondary monitor.\r\n\r\nhttps://github.com/dotnet/winforms/assets/86937911/31b371f7-5bf4-4186-bcbb-775ee2eef05a\r\n\r\nThis issue also repro's on design time.\r\n\r\nhttps://github.com/dotnet/winforms/assets/86937911/1900a7d9-0c5b-49cf-823f-3b6f91e58b0a\r\n\r\n\r\n\n\n### Steps to reproduce\n\n1. Launch VS instance on 100% primary monitor.\r\n2. Add `<ApplicationHighDpiMode>PerMonitorV2</ApplicationHighDpiMode>` in csproj file.\r\n3. Close and reopen Solution.\r\n4. Add some buttons with different font properties to form designer.\r\n5. Set buttons AutoSize property as true. (It's a necessary step)\r\n6. Build and run the application.\r\n7. Move to 300% secondary monitor.\r\n\r\n**More Info:**\r\n1. This issue also repro's on design time.\r\n2. This issue does not repro when their font property is a default setting.\r\n3. This issue does not repro when move from 300% primary monitor to 100% secondary monitor.\r\n4. This issue only repro on `PerMonitorV2` application mode.","Url":"https://github.com/dotnet/winforms/issues/9239","RelatedDescription":"Open issue \"[Multi-Monitor] Buttons don't scale well on the secondary monitor when their font property is a non-default setting \" (#9239)"},{"Id":"1743139100","IsPullRequest":false,"CreatedAt":"2023-06-07T08:20:26","Actor":"Ashutoshsahoo164","Number":"9231","RawContent":null,"Title":"A11y_.Net Core_Winforms_MainForm_Dialog Controls_Color Dialog_Screen reader : Narrator Focus is not going to the individual Colors and it is not announcing the color names also. ","State":"closed","Body":"### .NET version\r\n\r\nMicrosoft.Net SDK6.0.311 (x64)\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNo\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\n_No response_\r\n\r\n### Issue description\r\n\r\n### GitHubTags:\r\n#A11yMAS;#A11yTCS;#BM_.NET Core[Winforms]-Win32-May2023;#.NET Core;#A11ySev2;#WCAG1.3.1;#DesktopApp;#Win11;#Benchmark;#Narrator;#NVDA;\r\n\r\n### Actual:\r\nThe Narrator screen reader focus is not going to individual colors and it is not announcing the color name also.\r\n\r\n**Note :** This Issue is also reproducing using NVDA screen reader\r\n\r\n### Expected:\r\nThe Narrator/NVDA Screen reader focus should go to the Individual color blocks and it should announce the color name as well.\r\n\r\n### User Impact:\r\nScreen reader user will face difficulty in knowing and picking up the colors.\r\n\r\n### Steps to reproduce\r\n\r\n1. Install and Open Winforms App\r\n2. Main Form screen would appear.\r\n3. Tab till \"Dialog Controls : Testing the Controls Under the Dialog Tab\" and Hit enter.\r\n4. Navigate to \"Color Dialog\" Button and Hit enter.\r\n5. Observe with Screen reader that the Color Names are not announced by Narrator and the focus also does not move to the color blocks.\r\n\r\n### Attachment:\r\n\r\n**Narrator Attachment :** \r\n![Narrator Color](https://github.com/dotnet/winforms/assets/85863895/85b2c300-6e91-4ed1-818a-e90ee4d23742)\r\n\r\n\r\n**NVDA Attachment:**\r\n![NVDA color](https://github.com/dotnet/winforms/assets/85863895/ca783c1a-2e37-4d27-b0da-a712e6db7f4c)\r\n","Url":"https://github.com/dotnet/winforms/issues/9231","RelatedDescription":"Closed issue \"A11y_.Net Core_Winforms_MainForm_Dialog Controls_Color Dialog_Screen reader : Narrator Focus is not going to the individual Colors and it is not announcing the color names also. \" (#9231)"},{"Id":"1744514790","IsPullRequest":true,"CreatedAt":"2023-06-06T20:40:44","Actor":"vseanreesermsft","Number":"9238","RawContent":null,"Title":"Update branding to 7.0.8","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9238)","Url":"https://github.com/dotnet/winforms/pull/9238","RelatedDescription":"Closed or merged PR \"Update branding to 7.0.8\" (#9238)"},{"Id":"1744514415","IsPullRequest":true,"CreatedAt":"2023-06-06T20:40:26","Actor":"vseanreesermsft","Number":"9237","RawContent":null,"Title":"Update branding to 6.0.19","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9237)","Url":"https://github.com/dotnet/winforms/pull/9237","RelatedDescription":"Closed or merged PR \"Update branding to 6.0.19\" (#9237)"},{"Id":"1743717344","IsPullRequest":true,"CreatedAt":"2023-06-06T17:28:40","Actor":"dotnet-maestro[bot]","Number":"9235","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20230605.2\r\n- **Date Produced**: June 5, 2023 4:11:11 PM UTC\r\n- **Commit**: fe980088a91c65a6f021ab788d703211f4fc6427\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **System.CodeDom**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **System.ComponentModel.Composition**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **System.Data.Odbc**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **System.Data.OleDb**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **System.DirectoryServices.Protocols**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **System.IO.Ports**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **System.Management**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **System.Reflection.Context**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **System.Runtime.Caching**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **System.ServiceModel.Syndication**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **System.Speech**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **System.Text.Encoding.CodePages**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **System.Text.Json**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-preview.6.23304.2 to 8.0.0-preview.6.23305.2][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/2bf8f1aa83...fe980088a9\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/9235)","Url":"https://github.com/dotnet/winforms/pull/9235","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#9235)"},{"Id":"1743286551","IsPullRequest":false,"CreatedAt":"2023-06-06T07:47:40","Actor":"Ashutoshsahoo164","Number":"9234","RawContent":null,"Title":"A11y_.Net Core_Winforms_MainForm_Common Controls1_ Date Picker Section_High Contrast : In High contrast themes , The Check box focus and Date picker Icon is not properly visible.","State":"open","Body":"### .NET version\r\n\r\nMicrosoft.Net SDK6.0.311 (x64)\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNo\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\n_No response_\r\n\r\n### Issue description\r\n\r\n### GitHubTags:\r\n#A11yMAS;#A11yTCS;#BM_.NET Core[Winforms]-Win32-May2023;#.NET Core;#A11ySev3;#WCAG4.3.1;#DesktopApp;#Win11;#Benchmark;\r\n\r\n### Pre Requisite:\r\n\r\n1. Turn on Contrast modes in System settings\r\n2. Choose any themes\r\n\r\n### Actual:\r\nIn All High Contrast Themes , the Check box focus and Date picker Icon is not properly visible.\r\n\r\nNote : This issue is present in all the high contrast themes.\r\n\r\n### Expected:\r\nThe Keyboard focus on check box and Date picker icon should be properly visible with all the high contrast themes.\r\n\r\n### User Impact:\r\nUsers who use high contrast themes for Navigating through out the UI will face difficulty in Knowing the proper focus and proper control\r\n\r\n### Steps to reproduce\r\n\r\n1. Install and Open Winforms App\r\n2. Main Form screen would appear.\r\n3. Tab till \"Common Controls_1: Testing the controls under common controls Tab\" and Hit enter.\r\n4. Navigate to \"Date picker\" Section\r\n5. Observe with High contrast themes that the keyboard focus and Date picker Icon is not properly visible.\r\n\r\n### Attachment : \r\n![High Contrast](https://github.com/dotnet/winforms/assets/85863895/3253ce85-53dd-4abd-bfc3-ec1da3843846)\r\n","Url":"https://github.com/dotnet/winforms/issues/9234","RelatedDescription":"Open issue \"A11y_.Net Core_Winforms_MainForm_Common Controls1_ Date Picker Section_High Contrast : In High contrast themes , The Check box focus and Date picker Icon is not properly visible.\" (#9234)"},{"Id":"1743246435","IsPullRequest":false,"CreatedAt":"2023-06-06T07:20:54","Actor":"Ashutoshsahoo164","Number":"9233","RawContent":null,"Title":"A11y_.Net Core_Winforms_MainForm_Common Controls1_List View : Color contrast ratio of the selected and any non selected list item is less than 3:1 i.e 1.139:1","State":"open","Body":"### .NET version\n\nMicrosoft.Net SDK6.0.311 (x64)\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\n### GitHubTags:\r\n#A11yMAS;#A11yTCS;#BM_.NET Core[Winforms]-Win32-May2023;#.NET Core;#A11ySev3;#WCAG1.4.11;#DesktopApp;#Win11;#Benchmark;\r\n\r\n### Actual:\r\nThe Color contrast ratio Between the Selected and Non-Selected List item is less than 3:1 i.e 1.139:1\r\n\r\n### Expected:\r\nThe Color contrast ratio should be 3:1 minimum for the selected and Non Selected List Item.\r\n\r\n### User Impact:\r\nLow vision users will face difficulty in differentiating between the Selected and Non Selected List item.\n\n### Steps to reproduce\n\n1. Install and Open Winforms App\r\n2. Main Form screen would appear.\r\n3. Tab till \"Common Controls_1: Testing the controls under common controls Tab\" and Hit enter.\r\n4. Navigate to \"List View\" Section\r\n5. Observe with (Accessibility Insights for web)Color contrast analyzer that the Ratio of the selected and Non-Selected List Item is less than 3:1.\r\n\r\nAttachment : \r\n![Screenshot (3)](https://github.com/dotnet/winforms/assets/85863895/1c2e12a0-dfae-47b5-bf48-cdab3f3fa316)\r\n","Url":"https://github.com/dotnet/winforms/issues/9233","RelatedDescription":"Open issue \"A11y_.Net Core_Winforms_MainForm_Common Controls1_List View : Color contrast ratio of the selected and any non selected list item is less than 3:1 i.e 1.139:1\" (#9233)"},{"Id":"1743231053","IsPullRequest":false,"CreatedAt":"2023-06-06T07:09:59","Actor":"Ashutoshsahoo164","Number":"9232","RawContent":null,"Title":"A11y_.Net Core_Winforms_MainForm_Common Controls1_Screen reader : Narrator is announcing the Time when the focus lands to the date picker control , but visually time is not present.","State":"open","Body":"### .NET version\n\nMicrosoft.Net SDK6.0.311 (x64)\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\n### GitHubTags:\r\n#A11yMAS;#A11yTCS;#BM_.NET Core[Winforms]-Win32-May2023;#.NET Core;#A11ySev3;#WCAG1.3.1;#DesktopApp;#Win11;#Benchmark;#Narrator;#NVDA\r\n\r\n### Actual:\r\nThe Narrator screen reader is announcing the Time along with Date when the Focus lands on the Date control in the Date Picker section , But visually there is no Time stamp provided in the screen.\r\n\r\nNote : This issue is also reproducing with NVDA screen reader. NVDA is announcing the \"Effects\" Label but not the \"Sample\" Label\r\n\r\n### Expected:\r\nThe Narrator/NVDA screen reader should announce the contents which are present visually. The time stamp should be visible in the UI or Screen reader should not read the time stamp if it is not present visually.\r\n\r\n### User Impact:\r\nLow vision and Screen reader user will be confused with this announcement and content not present visually.\n\n### Steps to reproduce\n\n1. Install and Open Winforms App\r\n2. Main Form screen would appear.\r\n3. Tab till \"Common Controls_1: Testing the controls under common controls Tab\" and Hit enter.\r\n4. Navigate to \"Date picker\" Section\r\n5. Observe with Screen reader that the Time is announced by Narrator/NVDA but visually it is not present.\r\n\r\n### Attachment : \r\n\r\nNarrator Attachment : \r\n![Narrator Time](https://github.com/dotnet/winforms/assets/85863895/c60ff7f4-e2e5-46fb-a7d2-8e5358cbff67)\r\n\r\n\r\nNVDA Attachment:\r\n![NVDA Timing](https://github.com/dotnet/winforms/assets/85863895/dd5e97b2-76a1-4473-8d62-3f173c8130c5)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/9232","RelatedDescription":"Open issue \"A11y_.Net Core_Winforms_MainForm_Common Controls1_Screen reader : Narrator is announcing the Time when the focus lands to the date picker control , but visually time is not present.\" (#9232)"},{"Id":"1742945758","IsPullRequest":false,"CreatedAt":"2023-06-06T02:26:15","Actor":"Ashutoshsahoo164","Number":"9230","RawContent":null,"Title":"A11y_.Net Core_Winforms_MainForm_Resize : While Resizing the Screen to 200% all the Button Names, Texts are getting truncated.","State":"open","Body":"### .NET version\r\n\r\nMicrosoft.Net SDK6.0.311 (x64)\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNo\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\n_No response_\r\n\r\n### Issue description\r\n\r\n### GitHubTags:\r\n#A11yMAS;#A11yTCS;#BM_.NET Core[Winforms]-Win32-May2023;#.NET Core;#A11ySev2;#WCAG1.4.4;#DesktopApp;#Win11;#Benchmark;#Zoom\r\n\r\n### Pre Requisite:\r\n\r\n1. Change the Resolution to 1280*768\r\n2. Increase the Text Size to 200%\r\n\r\n### Actual:\r\nWhen the screen is zoomed to 200% , all the button Labels are getting truncated. \r\n\r\n**Note :** This Issue is present through out the Application\r\n\r\n### Expected:\r\nAt 200% zoom all the contents must be visible properly without any truncation.\r\n\r\n### User Impact:\r\nUsers who use zoom functionality to navigate through the UI will face difficulty in seeing the Button Names.\r\n\r\n### Steps to reproduce\r\n\r\n1. Install and Open Winforms App\r\n2. Main Form screen would appear.\r\n3. Apply Resize and Observe the Issue. \r\n\r\n### Attachment:\r\n[9230_A11y_.Net Core_Winforms_MainForm_Resize.zip](https://github.com/dotnet/winforms/files/11659388/9230_A11y_.Net.Core_Winforms_MainForm_Resize.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/9230","RelatedDescription":"Open issue \"A11y_.Net Core_Winforms_MainForm_Resize : While Resizing the Screen to 200% all the Button Names, Texts are getting truncated.\" (#9230)"},{"Id":"1742913280","IsPullRequest":false,"CreatedAt":"2023-06-06T01:52:25","Actor":"Ashutoshsahoo164","Number":"9229","RawContent":null,"Title":"A11y_.Net Core_Winforms_MainForm_Dialog Controls_Font Dialog_Screen reader :  Narrator is not announcing the Labels Names \"Effects\" and \"Sample\"  present in the Font dialog Window","State":"open","Body":"### .NET version\r\n\r\nMicrosoft.Net SDK6.0.311 (x64)\r\n\r\n### Did it work in .NET Framework?\r\n\r\nYes\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\n_No response_\r\n\r\n### Issue description\r\n\r\n### GitHubTags:\r\n#A11yMAS;#A11yTCS;#BM_.NET Core[Winforms]-Win32-May2023;#.NET Core;#A11ySev2;#WCAG1.3.1;#DesktopApp;#Win11;#Benchmark;#Narrator;#NVDA\r\n\r\n### Actual:\r\nThe Narrator screen reader is not announcing the Label Names \"Sample\" And \"Effects\" when we go by SCAN ON mode of Narrator.\r\n\r\nNote : This issue is also reproducing with NVDA screen reader. NVDA is announcing the \"Effects\" Label but not the \"Sample\" Label\r\n\r\n### Expected:\r\nThe Narrator/NVDA screen reader should announce the Labels Name while we Navigate through screen reader.\r\n\r\n### User Impact:\r\nScreen reader user will face difficulty in knowing the Label name of the section.\r\n\r\n### Steps to reproduce\r\n\r\n1. Install and Open Winforms App\r\n2. Main Form screen would appear.\r\n3. Tab till \"Dialog Controls : Testing the Controls Under the Dialog Tab\" and Hit enter.\r\n4. Navigate to \"Font Dialog\" Button and Hit enter.\r\n5. Observe with Screen reader that the Label Names are not announced by Narrator/NVDA.\r\n\r\n### Attachment:\r\n\r\nNarrator Attachment:\r\n[Narrator Not announcing as Label.zip](https://github.com/dotnet/winforms/files/11659160/Narrator.Not.announcing.as.Label.zip)\r\n\r\nNVDA Attachment:\r\n![NVDA Label](https://github.com/dotnet/winforms/assets/85863895/65ad6954-0c58-432a-900e-a1cf2b84535f)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/9229","RelatedDescription":"Open issue \"A11y_.Net Core_Winforms_MainForm_Dialog Controls_Font Dialog_Screen reader :  Narrator is not announcing the Labels Names \"Effects\" and \"Sample\"  present in the Font dialog Window\" (#9229)"},{"Id":"1742888441","IsPullRequest":false,"CreatedAt":"2023-06-06T01:12:05","Actor":"Ashutoshsahoo164","Number":"9228","RawContent":null,"Title":"A11y_.Net Core_Winforms_MainForm_ConmonControl1_Keyboard : The Keyboard Focus is not clearly Visible in the Checkbox present in the \"Date Time Picker Section\"","State":"open","Body":"### .NET version\r\n\r\nMicrosoft.Net SDK6.0.311 (x64)\r\n\r\n### Did it work in .NET Framework?\r\n\r\nYes\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\n_No response_\r\n\r\n### Issue description\r\n\r\n### GitHubTags:\r\n#A11yMAS;#A11yTCS;#BM_.NET Core[Winforms]-Win32-May2023;#.NET Core;#A11ySev2;#WCAG2.4.7;#DesktopApp;#Win11;#Benchmark;#keyboard\r\n\r\n### Actual:\r\nThe Keyboard Focus is not clearly Visible in the check box present in the \"Date Time Picker\" Section.\r\n\r\n### Expected:\r\nThe Keyboard focus should be visible properly on the check box , when the focus lands on it.\r\n\r\n### User Impact:\r\nLow Vision user using keyboard to navigate will face difficulty in knowing the keyboard focus.\r\n\r\n### Steps to reproduce\r\n\r\n1. Install and Open Winforms App\r\n2. Main Form screen would appear.\r\n3. Tab till \"Common_Controls1:Testing the controls under the Common_controls\" and Hit enter.\r\n4. Navigate to Date Time picker section.\r\n5. Observe with keyboard that the keyboard focus is not clearly visible on the check box.\r\n\r\n### Attachment:\r\n![Checkbox focus not clear](https://github.com/dotnet/winforms/assets/85863895/c495a32c-8341-4ab3-a2a7-13734fa06f41)\r\n","Url":"https://github.com/dotnet/winforms/issues/9228","RelatedDescription":"Open issue \"A11y_.Net Core_Winforms_MainForm_ConmonControl1_Keyboard : The Keyboard Focus is not clearly Visible in the Checkbox present in the \"Date Time Picker Section\"\" (#9228)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-06-09T03:30:30.3583321Z","RunDurationInMilliseconds":542}