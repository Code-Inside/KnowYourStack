{"Data":{"GitHub":{"Issues":[{"Id":"2111161084","IsPullRequest":true,"CreatedAt":"2024-02-01T00:11:28","Actor":"JeremyKuhne","Number":"10784","RawContent":null,"Title":"Improve Image save performance","State":"closed","Body":"Getting the array of encoder ImageCodeInfo is expensive and unnecessary to do repeatedly. Cache the guids for internal use without converting to managed classes and jagged arrays.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10784)","Url":"https://github.com/dotnet/winforms/pull/10784","RelatedDescription":"Closed or merged PR \"Improve Image save performance\" (#10784)"},{"Id":"2110928746","IsPullRequest":true,"CreatedAt":"2024-01-31T22:04:26","Actor":"JeremyKuhne","Number":"10783","RawContent":null,"Title":"Clean up Image.Save","State":"closed","Body":"Do a little cleanup on Image.Save.\r\n\r\n- Improve terminology\r\n- Factor code to allow moving some logic to Core\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10783)","Url":"https://github.com/dotnet/winforms/pull/10783","RelatedDescription":"Closed or merged PR \"Clean up Image.Save\" (#10783)"},{"Id":"2110904296","IsPullRequest":true,"CreatedAt":"2024-01-31T20:24:20","Actor":"github-actions[bot]","Number":"10782","RawContent":null,"Title":"[release/8.0] Fix ListView CancelEdit","State":"open","Body":"Backport of #10768 to release/8.0\n\n/cc @lonitra @JeremyKuhne\n\n## Customer Impact\n\n## Testing\n\n## Risk\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10782)","Url":"https://github.com/dotnet/winforms/pull/10782","RelatedDescription":"Open PR \"[release/8.0] Fix ListView CancelEdit\" (#10782)"},{"Id":"2110848960","IsPullRequest":true,"CreatedAt":"2024-01-31T19:50:17","Actor":"gpetrou","Number":"10781","RawContent":null,"Title":"Add RadioButtonDesigner tests","State":"open","Body":"## Proposed changes\r\n\r\n- Add RadioButtonDesigner tests.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10781)","Url":"https://github.com/dotnet/winforms/pull/10781","RelatedDescription":"Open PR \"Add RadioButtonDesigner tests\" (#10781)"},{"Id":"2110838163","IsPullRequest":true,"CreatedAt":"2024-01-31T19:44:47","Actor":"gpetrou","Number":"10780","RawContent":null,"Title":"Add MaskedTextBoxDesigner tests","State":"open","Body":"## Proposed changes\r\n\r\n- Add MaskedTextBoxDesigner tests.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10780)","Url":"https://github.com/dotnet/winforms/pull/10780","RelatedDescription":"Open PR \"Add MaskedTextBoxDesigner tests\" (#10780)"},{"Id":"2109107867","IsPullRequest":true,"CreatedAt":"2024-01-31T18:12:54","Actor":"JeremyKuhne","Number":"10767","RawContent":null,"Title":"Rename some files in Core to match","State":"closed","Body":"Some cleanup from earlier work.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10767)","Url":"https://github.com/dotnet/winforms/pull/10767","RelatedDescription":"Closed or merged PR \"Rename some files in Core to match\" (#10767)"},{"Id":"2109100407","IsPullRequest":true,"CreatedAt":"2024-01-31T18:12:38","Actor":"JeremyKuhne","Number":"10766","RawContent":null,"Title":"Some System.Drawing tests autofixes","State":"closed","Body":"Runs a few auto-fixers on System.Drawing tests.\r\n\r\n- Simple usings\r\n- Unnecessary casts\r\n- Collection initialization syntax\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10766)","Url":"https://github.com/dotnet/winforms/pull/10766","RelatedDescription":"Closed or merged PR \"Some System.Drawing tests autofixes\" (#10766)"},{"Id":"2109123107","IsPullRequest":true,"CreatedAt":"2024-01-31T18:11:54","Actor":"JeremyKuhne","Number":"10768","RawContent":null,"Title":"Fix ListView CancelEdit","State":"closed","Body":"The state got inverted in https://github.com/dotnet/winforms/commit/7e0115d442c26dfce4ad49231e446b8bdd172cab. I don't think there is a good way to get an automated test for this, but I'll look into it.\r\n\r\nWe need to get this serviced as it always flips what you try to do.\r\n\r\nFixes #10746\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10768)","Url":"https://github.com/dotnet/winforms/pull/10768","RelatedDescription":"Closed or merged PR \"Fix ListView CancelEdit\" (#10768)"},{"Id":"2109322306","IsPullRequest":true,"CreatedAt":"2024-01-31T17:47:31","Actor":"gpetrou","Number":"10772","RawContent":null,"Title":"Add ComboBoxDesigner tests","State":"closed","Body":"## Proposed changes\r\n\r\n- Add ComboBoxDesigner tests.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10772)","Url":"https://github.com/dotnet/winforms/pull/10772","RelatedDescription":"Closed or merged PR \"Add ComboBoxDesigner tests\" (#10772)"},{"Id":"2109312735","IsPullRequest":true,"CreatedAt":"2024-01-31T17:25:22","Actor":"gpetrou","Number":"10771","RawContent":null,"Title":"Add LabelDesigner tests","State":"closed","Body":"## Proposed changes\r\n\r\n- Add LabelDesigner tests.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10771)","Url":"https://github.com/dotnet/winforms/pull/10771","RelatedDescription":"Closed or merged PR \"Add LabelDesigner tests\" (#10771)"},{"Id":"2110048626","IsPullRequest":true,"CreatedAt":"2024-01-31T17:09:17","Actor":"dotnet-maestro[bot]","Number":"10776","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20240130.3\r\n- **Date Produced**: January 30, 2024 9:52:23 PM UTC\r\n- **Commit**: b4e9225c6c2f9da42fbb611a5e8942a08476fe89\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.24080.1 to 9.0.0-beta.24080.3][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 9.0.0-beta.24080.1 to 9.0.0-beta.24080.3][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 9.0.0-beta.24080.1 to 9.0.0-beta.24080.3][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.24080.1 to 9.0.0-beta.24080.3][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 9.0.0-beta.24080.1 to 9.0.0-beta.24080.3][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.24080.1 to 9.0.0-beta.24080.3][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/dd50030a02...b4e9225c6c\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10776)","Url":"https://github.com/dotnet/winforms/pull/10776","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10776)"},{"Id":"2109840068","IsPullRequest":true,"CreatedAt":"2024-01-31T15:34:49","Actor":"ViktorHofer","Number":"10775","RawContent":null,"Title":"Update packaging.targets","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10775)","Url":"https://github.com/dotnet/winforms/pull/10775","RelatedDescription":"Closed or merged PR \"Update packaging.targets\" (#10775)"},{"Id":"2110166912","IsPullRequest":true,"CreatedAt":"2024-01-31T14:33:31","Actor":"dotnet-maestro[bot]","Number":"10778","RawContent":null,"Title":"[release/9.0-preview1] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:37db25bc-6fad-4165-2518-08dc1750a536)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 37db25bc-6fad-4165-2518-08dc1750a536\r\n- **Build**: 20240130.9\r\n- **Date Produced**: January 31, 2024 1:36:34 PM UTC\r\n- **Commit**: 1d1bf92fcf43aa6981804dc53c5174445069c9e4\r\n- **Branch**: refs/heads/release/9.0-preview1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **System.CodeDom**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **System.IO.Ports**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **System.Management**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **System.Speech**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **System.Text.Json**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-preview.1.24080.6 to 9.0.0-preview.1.24080.9][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/4d8029314e...1d1bf92fcf\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:37db25bc-6fad-4165-2518-08dc1750a536)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10778)","Url":"https://github.com/dotnet/winforms/pull/10778","RelatedDescription":"Closed or merged PR \"[release/9.0-preview1] Update dependencies from dotnet/runtime\" (#10778)"},{"Id":"2110049047","IsPullRequest":true,"CreatedAt":"2024-01-31T13:37:42","Actor":"dotnet-maestro[bot]","Number":"10777","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20240130.11\r\n- **Date Produced**: January 31, 2024 10:20:49 AM UTC\r\n- **Commit**: cd460dbda99c080b9f9ec1cbdcd233f25ba8c189\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **System.CodeDom**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **System.IO.Ports**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **System.Management**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **System.Speech**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **System.Text.Json**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-preview.2.24079.10 to 9.0.0-preview.2.24080.11][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/fe51bd72fb...cd460dbda9\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10777)","Url":"https://github.com/dotnet/winforms/pull/10777","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#10777)"},{"Id":"2109553147","IsPullRequest":false,"CreatedAt":"2024-01-31T08:31:35","Actor":"SimonZhao888","Number":"10773","RawContent":null,"Title":"Missing unit tests coverage of public methods in Design namespace","State":"open","Body":"We are in the process of adding unit tests for all public methods to improve the test coverage of code. Here is a list categorized by namespace.\r\n\r\nSystem.Windows.Forms.Design\r\n - [ ] AxImporter.cs\r\n - [ ] BaseContextMenuStrip.cs\r\n - [ ] BindingNavigatorDesigner.cs\r\n - [ ] BindingSourceDesigner.cs\r\n - [ ] ButtonBaseDesigner.cs\r\n - [ ] ChangeToolStripParentVerb.cs\r\n - [ ] CollectionEditVerbManager.cs\r\n - [ ] ComboBoxDesigner.cs\r\n - [ ] CommandSet.cs\r\n - [ ] ComponentTray.cs\r\n - [ ] CompositionDesigner.cs\r\n - [ ] ContextMenuStripActionList.cs\r\n - [ ] ContextMenuStripGroup.cs\r\n - [ ] ContextMenuStripGroupCollection.cs\r\n - [ ] ControlCodeDomSerializer.cs\r\n - [ ] ControlCommandSet.cs\r\n - [ ] ControlDesigner.ControlDesignerAccessibleObject.cs\r\n - [ ] ControlDesigner.DesignerControlCollection.cs\r\n - [ ] ControlDesigner.TransparentBehavior.cs\r\n - [ ] ControlDesigner.cs\r\n - [ ] CustomMenuItemCollection.cs\r\n - [ ] DataGridViewAddColumnDialog.cs\r\n - [ ] DataGridViewCellStyleBuilder.cs\r\n - [ ] DataGridViewCellStyleEditor.cs\r\n - [ ] DataGridViewColumnDesigner.cs\r\n - [ ] DataGridViewComponentPropertyGridSite.cs\r\n - [ ] DataGridViewDesigner.cs\r\n - [ ] DataSourceDescriptorCollection.cs\r\n - [ ] DataSourceGroupCollection.cs\r\n - [ ] DataSourceListEditor.cs\r\n - [ ] DateTimePickerDesigner.cs\r\n - [ ] DesignBinding.cs\r\n - [ ] DesignBindingPicker.cs\r\n - [ ] DesignerExtenders.cs\r\n - [ ] DesignerFrame.cs\r\n - [ ] DesignerToolStripControlHost.cs\r\n - [ ] DesignerUtils.cs\r\n - [ ] DesignerVerbToolStripMenuItem.cs\r\n - [ ] DocumentDesigner.cs\r\n - [ ] EditorServiceContext.cs\r\n - [ ] FlowPanelDesigner.cs\r\n - [ ] FolderNameEditor.cs\r\n - [ ] FormDocumentDesigner.cs\r\n - [ ] FormatControl.CurrencyFormatType.cs\r\n - [ ] FormatControl.CustomFormatType.cs\r\n - [ ] FormatControl.DateTimeFormatType.cs\r\n - [ ] FormatControl.NoFormattingFormatType.cs\r\n - [ ] FormatControl.NumericFormatType.cs\r\n - [ ] FormatControl.ScientificFormatType.cs\r\n - [ ] FormatControl.cs\r\n - [ ] FormatStringDialog.cs\r\n - [ ] FormatStringEditor.cs\r\n - [ ] GroupedContextMenuStrip.cs\r\n - [ ] ImageCollectionCodeDomSerializer.cs\r\n - [ ] ImageIndexEditor.cs\r\n - [ ] ImageListActionList.cs\r\n - [ ] ImageListDesigner.OriginalImageCollection.cs\r\n - [ ] ImageListDesigner.cs\r\n - [ ] ImageListImage.cs\r\n - [ ] ImageListImageEditor.cs\r\n - [ ] InheritanceUI.cs\r\n - [ ] ItemTypeToolStripMenuItem.cs\r\n - [ ] LabelDesigner.cs\r\n - [ ] LinkAreaEditor.LinkAreaUI.cs\r\n - [ ] LinkAreaEditor.cs\r\n - [ ] ListAdapter.cs\r\n - [ ] ListBoxDesigner.cs\r\n - [ ] ListControlStringCollectionEditor.cs\r\n - [ ] ListControlUnboundActionList.cs\r\n - [ ] ListViewActionList.cs\r\n - [ ] ListViewDesigner.cs\r\n - [ ] ListViewGroupCollectionEditor.cs\r\n - [ ] MaskDescriptor.cs\r\n - [ ] MaskDescriptorComparer.cs\r\n - [ ] MaskDescriptorTemplate.cs\r\n - [ ] MaskDesignerDialog.cs\r\n - [ ] MaskPropertyEditor.cs\r\n - [ ] MaskedTextBoxDesigner.cs\r\n - [ ] MaskedTextBoxDesignerActionList.cs\r\n - [ ] MaskedTextBoxTextEditor.cs\r\n - [ ] MaskedTextBoxTextEditorDropDown.cs\r\n - [ ] MonthCalendarDesigner.cs\r\n","Url":"https://github.com/dotnet/winforms/issues/10773","RelatedDescription":"Open issue \"Missing unit tests coverage of public methods in Design namespace\" (#10773)"},{"Id":"2109775906","IsPullRequest":false,"CreatedAt":"2024-01-31T07:33:56","Actor":"shaoht","Number":"10774","RawContent":null,"Title":"Korean localization font issue","State":"open","Body":"### Description\n\nIn 200 dpi mode, I set default font to old font that framework used, `Application.SetDefaultFont(new Font(new FontFamily(\"Microsoft Sans Serif\"), 8.25F, FontStyle.Regular, GraphicsUnit.Point, 0))`, the font of toolstrip and datagridview is different in Korean. If set default font to \"Segoe UI\", the font of toolstrip and datagridview is same in Korean.\r\nSample code: [TestKoreanWinform.zip](https://github.com/dotnet/runtime/files/14108547/TestKoreanWinform.zip)\r\n\r\nBTW, \"Microsoft Sans Serif\" seems ok in 100 dpi mode.\r\n![image](https://github.com/dotnet/runtime/assets/42145457/94994bfc-5cc0-4cc0-91df-4bf5f085f5e8)\r\n![image](https://github.com/dotnet/runtime/assets/42145457/0f30dfb9-bfd1-4cfe-8722-84e7370d2e99)\r\n\n\n### Reproduction Steps\n\nIn 200 dpi mode, build TestKoreanWinform project and run TestKoreanWinform.exe.\n\n### Expected behavior\n\nThe font of toolstrip and datagridview is same in Korean.\n\n### Actual behavior\n\nThe font of toolstrip and datagridview is different in Korean.\n\n### Regression?\n\n_No response_\n\n### Known Workarounds\n\n_No response_\n\n### Configuration\n\n_No response_\n\n### Other information\n\n_No response_","Url":"https://github.com/dotnet/winforms/issues/10774","RelatedDescription":"Open issue \"Korean localization font issue\" (#10774)"},{"Id":"2109292356","IsPullRequest":true,"CreatedAt":"2024-01-31T05:05:57","Actor":"gpetrou","Number":"10770","RawContent":null,"Title":"Enable nullability in some PropertyGrid members","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in some PropertyGrid members.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10770)","Url":"https://github.com/dotnet/winforms/pull/10770","RelatedDescription":"Open PR \"Enable nullability in some PropertyGrid members\" (#10770)"},{"Id":"2109205749","IsPullRequest":true,"CreatedAt":"2024-01-31T03:52:41","Actor":"dotnet-maestro[bot]","Number":"10769","RawContent":null,"Title":"[release/9.0-preview1] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:37db25bc-6fad-4165-2518-08dc1750a536)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 37db25bc-6fad-4165-2518-08dc1750a536\r\n- **Build**: 20240130.6\r\n- **Date Produced**: January 31, 2024 2:54:21 AM UTC\r\n- **Commit**: 4d8029314e75924cfa7be07439bca08f0c9f3403\r\n- **Branch**: refs/heads/release/9.0-preview1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **System.CodeDom**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **System.IO.Ports**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **System.Management**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **System.Speech**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **System.Text.Json**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-preview.1.24074.8 to 9.0.0-preview.1.24080.6][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/b4aa81d9da...4d8029314e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:37db25bc-6fad-4165-2518-08dc1750a536)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10769)","Url":"https://github.com/dotnet/winforms/pull/10769","RelatedDescription":"Closed or merged PR \"[release/9.0-preview1] Update dependencies from dotnet/runtime\" (#10769)"},{"Id":"2108962035","IsPullRequest":true,"CreatedAt":"2024-01-31T01:12:06","Actor":"JeremyKuhne","Number":"10764","RawContent":null,"Title":"Add RoundedRectangle methods to System.Drawing","State":"closed","Body":"This adds simple methods for drawing rounded rectangles.\r\n\r\nAlso changes behavior of LockBits to allow passing in an empty rectangle to mean \"the whole bitmap\".\r\n\r\nI'll move the bitmap validation helper somewhere centralized.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10764)","Url":"https://github.com/dotnet/winforms/pull/10764","RelatedDescription":"Closed or merged PR \"Add RoundedRectangle methods to System.Drawing\" (#10764)"},{"Id":"2109001389","IsPullRequest":true,"CreatedAt":"2024-01-31T00:13:21","Actor":"mmitche","Number":"10765","RawContent":null,"Title":"Remove source build flags","State":"closed","Body":"These are always false.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10765)","Url":"https://github.com/dotnet/winforms/pull/10765","RelatedDescription":"Closed or merged PR \"Remove source build flags\" (#10765)"},{"Id":"2106449422","IsPullRequest":true,"CreatedAt":"2024-01-30T22:56:39","Actor":"lonitra","Number":"10759","RawContent":null,"Title":"Always Wrap Incoming Clipboard Data","State":"closed","Body":"Fixes #4555 \r\n\r\n**Background:**\r\nWinForms original clipboard behavior is that:\r\n- The original data coming in must implement `System.Runtime.InteropServices.ComTypes.IDataObject` to be taken as is. If it does not, we will wrap the data in a `DataObject`.\r\n- The original data going out must implement `System.Windows.Forms.IDataObject` to be passed out as is. If it does not, we will wrap the data in a `DataObject` before passing it out\r\n\r\nNative call to `OleGetClipboard` will always return a proxy that will forward all IDataObject method calls to the real data object, without giving out the real data object. The only time that the proxy ever gives back the real object is when we query for an interface it does not know about. WinForms `DataObject` class also implements `IComCallableWrapper` which is an internal interface meant to help indicate to us that this object is one of our CCWs. The proxy does not know about `IComCallableWrapper` meaning that when we query for it on the proxy, the proxy will give us back the real data object. This is how we have been able to give the user back the original object they placed on the clipboard (if the original object meets the 2 requirements outlined above) when they ask for it.\r\n\r\n**Issue:**\r\nWhen users create a custom data object that implements both `System.Runtime.InteropServices.ComTypes.IDataObject` and `System.Windows.Forms.IDataObject`, the expectation is that the user will be able to set their custom data object onto the clipboard and get the data object back out as is i.e. not wrapped. \r\nThis is not the case with today's code since:\r\n1. The custom data object coming in will not be wrapped due to it implementing \r\n    `System.Runtime.InteropServices.ComTypes.IDataObject`\r\n2. `OleGetClipboard` will continue to return a proxy. Since the user's custom data object does not implement an interface that WinForms knows about and the proxy does not, e.g. `IComCallableWrapper`, WinForms cannot retrieve the real data object from the proxy and will just return the proxy wrapped in a `DataObject`\r\n\r\n**Proposed Solution:**\r\nWinForms new clipboard behavior:\r\n- The original data coming will always be wrapped in a `DataObject`.\r\n- The original data must implement `System.Windows.Forms.IDataObject` to be passed out as is. If it does not, we will leave the data wrapped in a `DataObject` when passing it out\r\n\r\nHow it works:\r\n1. Always wrap the incoming data to the clipboard in a `DataObject` and flag that we've wrapped it for clipboard purposes using new property `IsWrappedForClipboard`\r\n2. When passing the data out from the clipboard, try to query for `IComCallableWrapper` per usual. If we were able to query for `IComCallableWrapper` successfully, this means that we a pointer to the data object we placed onto the clipboard, not the proxy\r\n3. Get the managed object from the pointer received from querying for `IComCallableWrapper` successfully and check if the managed object is a `DataObject` that has `IsWrappedForClipboard = true`. If so, we know we have the `DataObject` that we created in step 1 that wraps the real data object. We can now utilize new internal method `DataObject.UnwrapInnerIDataObject` to retrieve the real data object we wrapped if the real data object had implemented `System.Windows.Forms.IDataObject` and return it. \r\nImplementation for this new method is the opposite of the wrapping behavior we have in place for `DataObject` construction where we only track the real data object as is via `_innerData` if it implements `System.Windows.Forms.IDataObject`:\r\nhttps://github.com/dotnet/winforms/blob/47131cd723c596d567cd2d80480f6f64272f41aa/src/System.Windows.Forms/src/System/Windows/Forms/OLE/DataObject.cs#L104-L120\r\nNote: We must only unwrap the real data object from the `DataObject` if the real data object implements `System.Windows.Forms.IDataObject` to maintain our original heuristic. If the real data object does not implement `System.Windows.Forms.IDataObject`, we return `DataObject`, which is still inline with our original heuristic as the data is wrapped when passing it out.\r\n4. If we were not able to successfully query for `IComCallableWrapper` in step 2 or the `DataObject` on the clipboard has `IsWrappedForClipboard = false`, we did not place that data on the clipboard so we should not unwrap it. Fallback to old behavior.\r\n\r\nOther thoughts:\r\n- Looking through windows sources, native DragDrop operation does not have this same odd behavior of returning a proxy so we do not need do something similar for that scenario\r\n- Getting data via WinForms clipboard and setting clipboard data by other means should still work as expected since we fall back to old behavior if WinForms did not set the data on the clipboard\r\n- Setting the data via WinForms clipboard and getting the clipboard data by other means should also still work as expected since native call `OleGetClipboard` will continue to return a proxy that forwards `IDataObject` method calls to the underlying data, which would now be our `DataObject` and our `DataObject` forwards calls to the real data object we wrap.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10759)","Url":"https://github.com/dotnet/winforms/pull/10759","RelatedDescription":"Closed or merged PR \"Always Wrap Incoming Clipboard Data\" (#10759)"},{"Id":"2106374329","IsPullRequest":true,"CreatedAt":"2024-01-30T21:26:18","Actor":"gpetrou","Number":"10757","RawContent":null,"Title":"Enable nullability in some PropertyGrid members","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in some PropertyGrid members.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10757)","Url":"https://github.com/dotnet/winforms/pull/10757","RelatedDescription":"Closed or merged PR \"Enable nullability in some PropertyGrid members\" (#10757)"},{"Id":"2108665017","IsPullRequest":false,"CreatedAt":"2024-01-30T20:06:22","Actor":"JeremyKuhne","Number":"10763","RawContent":null,"Title":"API Proposal: Add Span overloads to System.Drawing APIs","State":"open","Body":"### Background and motivation\r\n\r\nAllocating temporary arrays contributes to the \"slowness\" of drawing with System.Drawing. To avoid allocating arrays or allow allocating them on the stack we need Span overloads. In addition, where applicable we want to add `params` to facilitate the [`params ReadOnlySpan<T>`](https://github.com/dotnet/csharplang/blob/main/proposals/params-span.md) overload pattern.\r\n\r\n### API Proposal\r\n\r\n`params` on `ReadOnlySpan<T>` is pending on the feature being implemented. APIs will be added without `params` until then.\r\n\r\n```diff\r\nnamespace System.Drawing;\r\n\r\npublic class Graphics\r\n{\r\n-   public void DrawRectangles(Pen pen, Rectangle[] rects);\r\n+   public void DrawRectangles(Pen pen, params Rectangle[] rects);\r\n+   public void DrawRectangles(Pen pen, params ReadOnlySpan<Rectangle> rects);\r\n-   public void DrawRectangles(Pen pen, RectangleF[] rects);\r\n+   public void DrawRectangles(Pen pen, params RectangleF[] rects);\r\n+   public void DrawRectangles(Pen pen, params ReadOnlySpan<RectangleF> rects);\r\n-   public void DrawPolygon(Pen pen, Point[] points);\r\n+   public void DrawPolygon(Pen pen, params Point[] points);\r\n+   public void DrawPolygon(Pen pen, params ReadOnlySpan<Point> points);\r\n-   public void DrawPolygon(Pen pen, PointF[] points);\r\n+   public void DrawPolygon(Pen pen, params PointF[] points);\r\n+   public void DrawPolygon(Pen pen, params ReadOnlySpan<PointF> points);\r\n-   public void DrawCurve(Pen pen, Point[] points);\r\n+   public void DrawCurve(Pen pen, params Point[] points);\r\n+   public void DrawCurve(Pen pen, params ReadOnlySpan<Point> points);\r\n    public void DrawCurve(Pen pen, Point[] points, float tension);\r\n+   public void DrawCurve(Pen pen, ReadOnlySpan<Point> points, float tension);\r\n    public void DrawCurve(Pen pen, Point[] points, int offset, int numberOfSegments);\r\n+   public void DrawCurve(Pen pen, ReadOnlySpan<Point> points, int offset, int numberOfSegments);\r\n    public void DrawCurve(Pen pen, Point[] points, int offset, int numberOfSegments, float tension);\r\n+   public void DrawCurve(Pen pen, ReadOnlySpan<Point> points, int offset, int numberOfSegments, float tension);\r\n-   public void DrawCurve(Pen pen, PointF[] points);\r\n+   public void DrawCurve(Pen pen, params PointF[] points);\r\n+   public void DrawCurve(Pen pen, params ReadOnlySpan<PointF> points);\r\n    public void DrawCurve(Pen pen, PointF[] points, float tension);\r\n+   public void DrawCurve(Pen pen, ReadOnlySpan<PointF> points, float tension);\r\n    public void DrawCurve(Pen pen, PointF[] points, int offset, int numberOfSegments);\r\n+   public void DrawCurve(Pen pen, ReadOnlySpan<PointF> points, int offset, int numberOfSegments);\r\n    public void DrawCurve(Pen pen, PointF[] points, int offset, int numberOfSegments, float tension);\r\n+   public void DrawCurve(Pen pen, ReadOnlySpan<PointF> points, int offset, int numberOfSegments, float tension);\r\n-   public void DrawClosedCurve(Pen pen, Point[] points);\r\n+   public void DrawClosedCurve(Pen pen, params Point[] points);\r\n+   public void DrawClosedCurve(Pen pen, params ReadOnlySpan<Point> points);\r\n    public void DrawClosedCurve(Pen pen, Point[] points, float tension, FillMode fillmode);\r\n+   public void DrawClosedCurve(Pen pen, ReadOnlySpan<Point> points, float tension, FillMode fillmode);\r\n-   public void DrawClosedCurve(Pen pen, PointF[] points);\r\n+   public void DrawClosedCurve(Pen pen, params PointF[] points);\r\n+   public void DrawClosedCurve(Pen pen, params ReadOnlySpan<PointF> points);\r\n    public void DrawClosedCurve(Pen pen, PointF[] points, float tension, FillMode fillmode);\r\n+   public void DrawClosedCurve(Pen pen, ReadOnlySpan<PointF> points, float tension, FillMode fillmode);\r\n-   public void FillRectangles(Brush brush, Rectangle[] rects);\r\n+   public void FillRectangles(Brush brush, params Rectangle[] rects);\r\n+   public void FillRectangles(Brush brush, params ReadOnlySpan<Rectangle> rects);\r\n-   public void FillPolygon(Brush brush, Point[] points);\r\n+   public void FillPolygon(Brush brush, params Point[] points);\r\n+   public void FillPolygon(Brush brush, params ReadOnlySpan<Point> points);\r\n    public void FillPolygon(Brush brush, Point[] points, FillMode fillMode);\r\n+   public void FillPolygon(Brush brush, ReadOnlySpan<Point> points, FillMode fillMode)\r\n-   public void FillRectangles(Brush brush, RectangleF[] rects)\r\n+   public void FillRectangles(Brush brush, params RectangleF[] rects)\r\n+   public void FillRectangles(Brush brush, params ReadOnlySpan<RectangleF> rects);\r\n-   public void FillPolygon(Brush brush, PointF[] points);\r\n+   public void FillPolygon(Brush brush, params PointF[] points);\r\n+   public void FillPolygon(Brush brush, params ReadOnlySpan<PointF> points);\r\n    public void FillPolygon(Brush brush, PointF[] points, FillMode fillMode);\r\n+   public void FillPolygon(Brush brush, ReadOnlySpan<PointF> points, FillMode fillMode);\r\n-   public void FillClosedCurve(Brush brush, Point[] points);\r\n+   public void FillClosedCurve(Brush brush, params Point[] points);\r\n+   public void FillClosedCurve(Brush brush, params ReadOnlySpan<Point> points);\r\n    public void FillClosedCurve(Brush brush, Point[] points, FillMode fillmode);\r\n+   public void FillClosedCurve(Brush brush, ReadOnlySpan<Point> points, FillMode fillmode);\r\n-   public void FillClosedCurve(Brush brush, PointF[] points);\r\n+   public void FillClosedCurve(Brush brush, params PointF[] points);\r\n+   public void FillClosedCurve(Brush brush, params ReadOnlySpan<PointF> points);\r\n    public void FillClosedCurve(Brush brush, PointF[] points, FillMode fillmode);\r\n+   public void FillClosedCurve(Brush brush, ReadOnlySpan<PointF> points, FillMode fillmode);\r\n-   public void DrawLines(Pen pen, Point[] points);\r\n+   public void DrawLines(Pen pen, params Point[] points);\r\n+   public void DrawLines(Pen pen, params ReadOnlySpan<Point> points);\r\n-   public void DrawLines(Pen pen, PointF[] points);\r\n+   public void DrawLines(Pen pen, params PointF[] points);\r\n+   public void DrawLines(Pen pen, params ReadOnlySpan<PointF> points);\r\n-   public void DrawBeziers(Pen pen, Point[] points);\r\n+   public void DrawBeziers(Pen pen, params Point[] points);\r\n+   public void DrawBeziers(Pen pen, params ReadOnlySpan<Point> points);\r\n-   public void DrawBeziers(Pen pen, PointF[] points);\r\n+   public void DrawBeziers(Pen pen, params PointF[] points);\r\n+   public void DrawBeziers(Pen pen, params ReadOnlySpan<PointF> points);\r\n}\r\n\r\nnamespace System.Drawing.Drawing2D;\r\n\r\npublic class GraphicsPath\r\n{\r\n    public GraphicsPath(Point[] pts, byte[] types);\r\n    public GraphicsPath(Point[] pts, byte[] types, FillMode fillMode);\r\n+   public GraphicsPath(ReadOnlySpan<Point> pts, ReadOnlySpan<byte> types, FillMode fillMode = FillMode.Alternate);\r\n    public GraphicsPath(PointF[] pts, byte[] types);\r\n    public GraphicsPath(PointF[] pts, byte[] types, FillMode fillMode);\r\n+   public GraphicsPath(ReadOnlySpan<PointF> pts, ReadOnlySpan<byte> types, FillMode fillMode = FillMode.Alternate);\r\n-   public void AddLines(Point[] points);\r\n+   public void AddLines(params Point[] points);\r\n+   public void AddLines(params ReadOnlySpan<Point> points);\r\n-   public void AddLines(PointF[] points);\r\n+   public void AddLines(params PointF[] points);\r\n+   public void AddLines(params ReadOnlySpan<PointF> points);\r\n    public void AddBeziers(params Point[] points);\r\n+   public void AddBeziers(params ReadOnlySpan<Point> points);\r\n-   public void AddBeziers(PointF[] points);\r\n+   public void AddBeziers(params PointF[] points);\r\n+   public void AddBeziers(params ReadOnlySpan<PointF> points);\r\n-   public void AddCurve(Point[] points);\r\n+   public void AddCurve(params Point[] points);\r\n+   public void AddCurve(params ReadOnlySpan<Point> points);\r\n    public void AddCurve(Point[] points, float tension);\r\n+   public void AddCurve(ReadOnlySpan<Point> points, float tension);\r\n    public void AddCurve(Point[] points, int offset, int numberOfSegments, float tension);\r\n+   public void AddCurve(ReadOnlySpan<Point> points, int offset, int numberOfSegments, float tension);\r\n-   public void AddCurve(PointF[] points);\r\n+   public void AddCurve(params PointF[] points);\r\n+   public void AddCurve(params ReadOnlySpan<PointF> points);\r\n    public void AddCurve(PointF[] points, float tension);\r\n+   public void AddCurve(ReadOnlySpan<PointF> points, float tension);\r\n    public void AddCurve(PointF[] points, int offset, int numberOfSegments, float tension);\r\n+   public void AddCurve(ReadOnlySpan<PointF> points, int offset, int numberOfSegments, float tension);\r\n-   public void AddClosedCurve(Point[] points);\r\n+   public void AddClosedCurve(params Point[] points);\r\n+   public void AddClosedCurve(params ReadOnlySpan<Point> points);\r\n    public void AddClosedCurve(Point[] points, float tension);\r\n+   public void AddClosedCurve(ReadOnlySpan<Point> points, float tension);\r\n-   public void AddRectangles(Rectangle[] rects);\r\n+   public void AddRectangles(params Rectangle[] rects);\r\n+   public void AddRectangles(params ReadOnlySpan<Rectangle> rects);\r\n-   public void AddPolygon(PointF[] points);\r\n+   public void AddPolygon(params PointF[] points);\r\n+   public void AddPolygon(params ReadOnlySpan<PointF; points);\r\n-   public void AddClosedCurve(PointF[] points);\r\n+   public void AddClosedCurve(params PointF[] points);\r\n+   public void AddClosedCurve(params ReadOnlySpan<PointF> points);\r\n    public void AddClosedCurve(PointF[] points, float tension);\r\n+   public void AddClosedCurve(ReadOnlySpan<PointF> points, float tension);\r\n-   public void AddRectangles(RectangleF[] rects);\r\n+   public void AddRectangles(params RectangleF[] rects);\r\n+   public void AddRectangles(params ReadOnlySpan<RectangleF> rects);\r\n-   public void AddPolygon(PointF[] points);\r\n+   public void AddPolygon(params PointF[] points);\r\n+   public void AddPolygon(params ReadOnlySpan<PointF; points);\r\n    public void Warp(PointF[] destPoints, RectangleF srcRect, Matrix? matrix, WarpMode warpMode, float flatness);\r\n+   public void Warp(ReadOnlySpan<PointF> destPoints, RectangleF srcRect, Matrix? matrix = default, WarpMode warpMode WarpMode.Perspective, float flatness = 0.25f);\r\n    public byte[] PathTypes { get; }\r\n+   public bool TryGetPathTypes(Span<bytes> types, out int count);\r\n    \r\n    // Everything in GDI+ is float internally, so there is no Point version of this\r\n    public PointF[] PathPoints { get; }\r\n+   public bool TryGetPathPoints(Span<PointF> points, out int count);\r\n}\r\n```\r\n\r\n\r\n### API Usage\r\n\r\n```C#\r\nGraphicsPath path = new();\r\npath.AddLines(new(0,0), new(10,10), new(32, 10), new(40, 40));\r\n\r\nusing Graphics graphics = Graphics.FromImage(image);\r\nReadOnlySpan<Rectangle> rectangles = stackalloc Rectangle\r\n[\r\n    new(10, 300, 200, 200),\r\n    new(300, 300, 200, 200),\r\n    new(10, 10, 200, 200),\r\n    new(300, 10, 200, 200)\r\n];\r\n\r\ngraphics.FillRectangles(Brushes.Red, rectangles);\r\n```","Url":"https://github.com/dotnet/winforms/issues/10763","RelatedDescription":"Open issue \"API Proposal: Add Span overloads to System.Drawing APIs\" (#10763)"},{"Id":"2107815030","IsPullRequest":true,"CreatedAt":"2024-01-30T13:32:40","Actor":"dotnet-maestro[bot]","Number":"10762","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20240129.10\r\n- **Date Produced**: January 30, 2024 9:56:48 AM UTC\r\n- **Commit**: fe51bd72fbe3948bbb895ca8788aea5fc9a6463a\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **System.CodeDom**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **System.IO.Ports**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **System.Management**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **System.Speech**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **System.Text.Json**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-preview.2.24078.2 to 9.0.0-preview.2.24079.10][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/e5d59bd65f...fe51bd72fb\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10762)","Url":"https://github.com/dotnet/winforms/pull/10762","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#10762)"},{"Id":"2107814377","IsPullRequest":true,"CreatedAt":"2024-01-30T13:32:17","Actor":"dotnet-maestro[bot]","Number":"10761","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20240130.1\r\n- **Date Produced**: January 30, 2024 9:20:03 AM UTC\r\n- **Commit**: dd50030a0278e8c82f45624446fbec120b83c26b\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.24076.5 to 9.0.0-beta.24080.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 9.0.0-beta.24076.5 to 9.0.0-beta.24080.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 9.0.0-beta.24076.5 to 9.0.0-beta.24080.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.24076.5 to 9.0.0-beta.24080.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 9.0.0-beta.24076.5 to 9.0.0-beta.24080.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.24076.5 to 9.0.0-beta.24080.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/66c9c5397d...dd50030a02\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10761)","Url":"https://github.com/dotnet/winforms/pull/10761","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10761)"},{"Id":"2106575232","IsPullRequest":true,"CreatedAt":"2024-01-30T01:43:14","Actor":"elachlan","Number":"10760","RawContent":null,"Title":"Refactor `ErrorProvider` to remove `PropertyStore`","State":"closed","Body":"Related to: #9508\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10760)","Url":"https://github.com/dotnet/winforms/pull/10760","RelatedDescription":"Closed or merged PR \"Refactor `ErrorProvider` to remove `PropertyStore`\" (#10760)"},{"Id":"2106384121","IsPullRequest":true,"CreatedAt":"2024-01-29T20:42:09","Actor":"gpetrou","Number":"10758","RawContent":null,"Title":"Enable nullability in some GridEntry members","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in some GridEntry members.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10758)","Url":"https://github.com/dotnet/winforms/pull/10758","RelatedDescription":"Open PR \"Enable nullability in some GridEntry members\" (#10758)"},{"Id":"2105451517","IsPullRequest":true,"CreatedAt":"2024-01-29T13:31:24","Actor":"dotnet-maestro[bot]","Number":"10756","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20240128.2\r\n- **Date Produced**: January 29, 2024 5:23:06 AM UTC\r\n- **Commit**: e5d59bd65f6cc9c0f00cc863542cfda91d6f8355\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **System.CodeDom**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **System.IO.Ports**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **System.Management**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **System.Speech**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **System.Text.Json**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-preview.2.24077.6 to 9.0.0-preview.2.24078.2][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/4fc943c3cb...e5d59bd65f\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10756)","Url":"https://github.com/dotnet/winforms/pull/10756","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#10756)"},{"Id":"2104542416","IsPullRequest":true,"CreatedAt":"2024-01-29T03:02:40","Actor":"SimonZhao888","Number":"10755","RawContent":null,"Title":"Add test case for WebBrowserBase","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nRelated #10453\r\n\r\n\r\n## Proposed changes\r\n\r\n- Add Unit test for WebBrowserBase\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10755)","Url":"https://github.com/dotnet/winforms/pull/10755","RelatedDescription":"Open PR \"Add test case for WebBrowserBase\" (#10755)"},{"Id":"2104319738","IsPullRequest":true,"CreatedAt":"2024-01-28T19:44:48","Actor":"weltkante","Number":"10754","RawContent":null,"Title":"ATL ActiveX control with unit test","State":"open","Body":"Contributes to #8294 and #8302\r\n\r\nThis is WIP and an early draft to get feedback. Open questions are:\r\n- where to put the controls? where to put the unit tests?\r\n- For the draft I put the control in the existing CMake \"NativeTests\" file and the tests along the other AxHost tests, however if that is the right place then the unit test project either needs the manifest reference added or an activation context needs to load the manifest dynamically.\r\n- is it ok to pull in the ATL headers into the NativeTests project? its awkward to not have a shared header (even if its not using the \"precompiled header\" feature), the way the individual headers pull in different platform headers in different orders (e.g. windows.h) means different cpp files see different configurations of the headers\r\n- currently only contains an ATL control, it might also be desireable to add an MFC control (which uses a different infrastructure and implementation on the C++ side but otherwise would be implemented similarly on the C# unit test side)\r\n\r\n/cc @JeremyKuhne for comments and suggestions\r\n\r\n## Proposed changes\r\n\r\n- add ATL ActiveX control\r\n  - test for control creation\r\n  - test for event handling\r\n- [TODO] add MFC ActiveX control, if desired?\r\n- [TODO] variations of the tests using source generated interfaces instead of classic COM interop\r\n  (might do that in a different PR)\r\n\r\n## Customer Impact\r\n\r\n- none, only increases test coverage\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- none, only unit tests are changed\r\n\r\n### Before\r\n\r\n- lacking unit tests of ATL/MFC ActiveX controls\r\n\r\n### After\r\n\r\n- add unit tests for ATL/MFC ActiveX controls hosted via AxHost\r\n\r\n## Test methodology\r\n\r\n- automated tests\r\n\r\n## Accessibility testing\r\n\r\n- not included (accessibility is not customized on native side and retains default behavior)\r\n\r\n## Test environment(s)\r\n\r\n- 9.0.0-preview.2.24077.1 (whatever is pulled in by the build.cmd/start-vs.cmd on current main branch)\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10754)","Url":"https://github.com/dotnet/winforms/pull/10754","RelatedDescription":"Open PR \"ATL ActiveX control with unit test\" (#10754)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-02-01T03:30:27.2561546Z","RunDurationInMilliseconds":396}