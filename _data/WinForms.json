{"Data":{"GitHub":{"Issues":[{"Id":"2291698883","IsPullRequest":true,"CreatedAt":"2024-05-13T02:58:30","Actor":"Zheng-Li01","Number":"11361","RawContent":null,"Title":"Add test coverage for TreeView","State":"open","Body":"related https://github.com/dotnet/winforms/issues/10453\r\n\r\n## Proposed changes\r\n- Add unit tests for TreeView to test its properties:TopNode, accessibilityObject, ItemHeight,Indent\r\n- Add unit tests for TreeView to test its methods: ConvertTo, CollapseAll, ExpandAll, GetNodeCount, ShouldSerializeIndent, shouldSerializeItemHeightMethod, ToString\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n- None\r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n-Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- Unit tests\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11361)","Url":"https://github.com/dotnet/winforms/pull/11361","RelatedDescription":"Open PR \"Add test coverage for TreeView\" (#11361)"},{"Id":"2290865014","IsPullRequest":true,"CreatedAt":"2024-05-12T12:38:55","Actor":"dotnet-maestro[bot]","Number":"11359","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20240510.2\r\n- **Date Produced**: May 10, 2024 5:18:03 PM UTC\r\n- **Commit**: 480401b003bfd2eb989c315da5d6b99ad13a968c\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.24258.1 to 9.0.0-beta.24260.2][2]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 9.0.0-beta.24258.1 to 9.0.0-beta.24260.2][2]\r\n  - **Microsoft.DotNet.GenFacades**: [from 9.0.0-beta.24258.1 to 9.0.0-beta.24260.2][2]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.24258.1 to 9.0.0-beta.24260.2][2]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 9.0.0-beta.24258.1 to 9.0.0-beta.24260.2][2]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.24258.1 to 9.0.0-beta.24260.2][2]\r\n\r\n[2]: https://github.com/dotnet/arcade/compare/a62b463919...480401b003\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11359)\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/11359","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#11359)"},{"Id":"2290865111","IsPullRequest":true,"CreatedAt":"2024-05-11T12:02:14","Actor":"dotnet-maestro[bot]","Number":"11360","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20240511.4\r\n- **Date Produced**: May 12, 2024 10:09:50 AM UTC\r\n- **Commit**: 3ffa05f77509cd4c5eb1452ff49c0254a8bed905\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **System.CodeDom**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **System.Data.Odbc**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **System.Data.OleDb**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **System.DirectoryServices**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **System.IO.Hashing**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **System.IO.Packaging**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **System.IO.Ports**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **System.Management**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **System.Reflection.Context**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **System.Resources.Extensions**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **System.Runtime.Caching**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **System.Security.Permissions**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **System.Speech**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **System.Text.Json**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **System.Windows.Extensions**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-preview.5.24259.7 to 9.0.0-preview.5.24261.4][2]\r\n\r\n[2]: https://github.com/dotnet/runtime/compare/7037516201...3ffa05f775\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11360)\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/pull/11360","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/runtime\" (#11360)"},{"Id":"2290820383","IsPullRequest":true,"CreatedAt":"2024-05-11T10:12:42","Actor":"kirsan31","Number":"11358","RawContent":null,"Title":"Fix ToolStrip memory leak due to MouseHoverTimer and #4808","State":"open","Body":"Fix #4808 and problem that was mentioned in #11334.\r\n\r\n\r\n## Proposed changes\r\nReplace `ToolStripItem? _currentItem` with `WeakReference<ToolStripItem?> _currentItem` in `MouseHoverTimer`\r\nImplement [this suggestion.](https://github.com/dotnet/winforms/issues/4808#issuecomment-1849319594)\r\n\r\n## Customer Impact\r\nNo more memory leak if `ToolStripItem` will be disposed after MouseHoverTimer start. \r\nNo more memory leak of chilled elements due to `DisplayedItems` and `OverflowItems` collections.. \r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\nMinimal.\r\n\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n`ToolStripItem` below was disposed, but remain in memory:\r\n![timer1](https://github.com/dotnet/winforms/assets/17767561/498919cf-62d9-45b1-bf4f-a1034fc73690)\r\n![timer2](https://github.com/dotnet/winforms/assets/17767561/41e32382-c1d6-4813-a8f5-71825c1fde93)\r\n\r\n\r\n## Test methodology \r\n- Existing unit tests.\r\n- New unit tests.\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11358)","Url":"https://github.com/dotnet/winforms/pull/11358","RelatedDescription":"Open PR \"Fix ToolStrip memory leak due to MouseHoverTimer and #4808\" (#11358)"},{"Id":"2290788671","IsPullRequest":true,"CreatedAt":"2024-05-11T08:41:50","Actor":"Philip-Wang01","Number":"11357","RawContent":null,"Title":"Add test coverage for LinkLabel.LinkCollection","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nRelated https://github.com/dotnet/winforms/issues/10453\r\n\r\n\r\n## Proposed changes\r\n\r\n- Add unit tests for LinkLabel.LinkCollection to test its properties: IsReadOnly, IndexOf, IndexOfKey\r\n\r\n- Add unit tests for LinkLabel.LinkCollection to test its method: Add, Contains, ContainsKey, Remove, RemoveByKey\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- None\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Unit tests\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11357)","Url":"https://github.com/dotnet/winforms/pull/11357","RelatedDescription":"Open PR \"Add test coverage for LinkLabel.LinkCollection\" (#11357)"},{"Id":"2290625478","IsPullRequest":true,"CreatedAt":"2024-05-11T03:14:41","Actor":"Epica3055","Number":"11356","RawContent":null,"Title":"fix issue 11243 TreeNodeCollection.AddRange has been broken in .NET 8…","State":"open","Body":"Fixes #11243 \r\n\r\n<!-- \r\n## Proposed changes\r\n\r\n- \r\n- \r\n- \r\n\r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes \r\n\r\n## Risk\r\n\r\n-\r\n\r\n -->\r\n\r\n## Screenshots \r\n\r\n### Before\r\n![image](https://github.com/dotnet/winforms/assets/47542151/c7285c5e-b422-4627-8d5d-620a49d5cb81)\r\n\r\n### After\r\n![image](https://github.com/dotnet/winforms/assets/135201996/f7e85eaf-c072-441d-ba68-6d3deaf33f49)\r\n\r\n\r\n## Test methodology \r\n\r\n- \r\n-  manually and unit test\r\n- \r\n","Url":"https://github.com/dotnet/winforms/pull/11356","RelatedDescription":"Open PR \"fix issue 11243 TreeNodeCollection.AddRange has been broken in .NET 8…\" (#11356)"},{"Id":"2290392647","IsPullRequest":true,"CreatedAt":"2024-05-10T21:12:53","Actor":"dotnet-maestro[bot]","Number":"11355","RawContent":null,"Title":"[release/9.0-preview4] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1791d98a-7c78-4e75-eeed-08dc64591dce)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 1791d98a-7c78-4e75-eeed-08dc64591dce\r\n- **Build**: 20240510.3\r\n- **Date Produced**: May 10, 2024 8:24:26 PM UTC\r\n- **Commit**: 2270e3185f538a1581dcf11dd5317da1bd92909c\r\n- **Branch**: refs/heads/release/9.0-preview4\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **System.CodeDom**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **System.IO.Hashing**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **System.IO.Ports**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **System.Management**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **System.Speech**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **System.Text.Json**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-preview.4.24252.19 to 9.0.0-preview.4.24260.3][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/f40749be6a...2270e3185f\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1791d98a-7c78-4e75-eeed-08dc64591dce)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11355)","Url":"https://github.com/dotnet/winforms/pull/11355","RelatedDescription":"Closed or merged PR \"[release/9.0-preview4] Update dependencies from dotnet/runtime\" (#11355)"},{"Id":"2285217552","IsPullRequest":false,"CreatedAt":"2024-05-10T12:55:47","Actor":"ViktorHofer","Number":"11332","RawContent":null,"Title":"WinForms fails to build with a nightly SDK","State":"closed","Body":"SDK: 9.0.100-preview.5.24253.16\r\n\r\nWe had to add a patch to unblock the VMR / source-build: https://github.com/dotnet/sdk/blob/main/src/SourceBuild/patches/winforms/0001-Disable-IL2055-for-a-new-callsite.patch\r\n\r\n> IL2055: Call to 'System.Type.MakeGenericType(params Type[])' can not be statically analyzed. It's not possible to guarantee the availability of requirements of the generic type.\r\n\r\ncc @JeremyKuhne ","Url":"https://github.com/dotnet/winforms/issues/11332","RelatedDescription":"Closed issue \"WinForms fails to build with a nightly SDK\" (#11332)"},{"Id":"2289598815","IsPullRequest":true,"CreatedAt":"2024-05-10T12:35:59","Actor":"dotnet-maestro[bot]","Number":"11354","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20240509.7\r\n- **Date Produced**: May 9, 2024 11:18:44 PM UTC\r\n- **Commit**: 70375162014e115dd618db7998acb8fdf477b4c1\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **System.CodeDom**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **System.IO.Hashing**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **System.IO.Ports**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **System.Management**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **System.Speech**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **System.Text.Json**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-preview.5.24258.12 to 9.0.0-preview.5.24259.7][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/de4fa45b04...7037516201\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11354)","Url":"https://github.com/dotnet/winforms/pull/11354","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#11354)"},{"Id":"2288759102","IsPullRequest":true,"CreatedAt":"2024-05-10T02:59:28","Actor":"JeremyKuhne","Number":"11352","RawContent":null,"Title":"FI from main","State":"closed","Body":"Merge in main changes\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11352)","Url":"https://github.com/dotnet/winforms/pull/11352","RelatedDescription":"Closed or merged PR \"FI from main\" (#11352)"},{"Id":"2288800511","IsPullRequest":false,"CreatedAt":"2024-05-10T02:34:59","Actor":"MelonWang1","Number":"11353","RawContent":null,"Title":"The selected control should have a solid border in the DemoConsole application","State":"open","Body":"### .NET version\r\n\r\n.Net 9.0: Main branch of Winforms repo\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNot tested/verified\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nNo, this was changed after winform designer PR [5855](https://github.com/microsoft/winforms-designer/pull/5855).\r\n\r\n### Issue description\r\n\r\nActual result in [DemoConsole](https://github.com/dotnet/winforms/tree/main/src/System.Windows.Forms/tests/IntegrationTests/DesignSurface/DemoConsole) test app:\r\nThe selected control has a dashed border in the DemoConsole application.\r\n![democonsole](https://github.com/dotnet/winforms/assets/94418985/80368c22-2deb-4210-966f-bbc7f432d529)\r\n\r\nExpected result:\r\nThe selected control should have a solid border in the DemoConsole application.\r\n![Untitled](https://github.com/dotnet/winforms/assets/94418985/afa4d3b4-82a1-4f03-b36f-f5891d693bc1)\r\n\r\n\r\n### Steps to reproduce\r\n\r\nTest sample: [DemoConsole](https://github.com/dotnet/winforms/tree/main/src/System.Windows.Forms/tests/IntegrationTests/DesignSurface/DemoConsole) in Winforms repo.","Url":"https://github.com/dotnet/winforms/issues/11353","RelatedDescription":"Open issue \"The selected control should have a solid border in the DemoConsole application\" (#11353)"},{"Id":"2288692816","IsPullRequest":true,"CreatedAt":"2024-05-10T01:49:34","Actor":"JeremyKuhne","Number":"11351","RawContent":null,"Title":"Simplify handling of pending info","State":"closed","Body":"Fix an issue where multiple objects that had dependencies completed by the same dependency would not complete successfully.\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11351)","Url":"https://github.com/dotnet/winforms/pull/11351","RelatedDescription":"Closed or merged PR \"Simplify handling of pending info\" (#11351)"},{"Id":"2288679121","IsPullRequest":false,"CreatedAt":"2024-05-10T00:34:06","Actor":"lonitra","Number":"11350","RawContent":null,"Title":"Add GetData<T> Method to Clipboard","State":"open","Body":"Currently when grabbing items off the clipboard via [Clipboard.GetData](https://github.com/dotnet/winforms/blob/main/src/System.Windows.Forms/src/System/Windows/Forms/OLE/Clipboard.cs#L207) we give back type `object`. It would be good to add typed methods to allow users to express that they are expecting a specific type from the clipboard. This allows us to prevent giving users objects that they do not intend to receive. This will also allow us to avoid fallback to [BinaryFormatter](https://github.com/dotnet/winforms/blob/main/src/System.Windows.Forms/src/System/Windows/Forms/OLE/DataObject.ComposedDataObject.NativeDataObjectToWinFormsAdapter.cs#L208) when it is not necessary since we would've checked if the requested type matches the root record and avoid the fallback if there is no match.\r\n\r\nNote that there are some slightly more specific Clipboard.GetX methods such as [GetImage()](https://github.com/dotnet/winforms/blob/main/src/System.Windows.Forms/src/System/Windows/Forms/OLE/Clipboard.cs#L231) and [GetAudioStream()](https://github.com/dotnet/winforms/blob/main/src/System.Windows.Forms/src/System/Windows/Forms/OLE/Clipboard.cs#L202) which internally calls `GetData`. We would want to update these to call the new `GetData<T>` as well.\r\n\r\nA follow up to this would be to add analyzers that notify users usings the old pattern `(SomeType)Clipboard.GetData();` to use `GetData<T>()` instead","Url":"https://github.com/dotnet/winforms/issues/11350","RelatedDescription":"Open issue \"Add GetData<T> Method to Clipboard\" (#11350)"},{"Id":"2288520224","IsPullRequest":true,"CreatedAt":"2024-05-09T21:52:43","Actor":"lonitra","Number":"11349","RawContent":null,"Title":"Merge Main to SafePayloadReader","State":"closed","Body":"Merge main -> SafePayloadReader\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11349)","Url":"https://github.com/dotnet/winforms/pull/11349","RelatedDescription":"Closed or merged PR \"Merge Main to SafePayloadReader\" (#11349)"},{"Id":"2288471548","IsPullRequest":true,"CreatedAt":"2024-05-09T21:49:47","Actor":"lonitra","Number":"11348","RawContent":null,"Title":"Add Tests for ObjectReference in EventOrderTests","State":"closed","Body":"Add tests for `IObjectReference` in EventOrderTests to ensure deserialization events relating to `IObjectReference` only fired once\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11348)","Url":"https://github.com/dotnet/winforms/pull/11348","RelatedDescription":"Closed or merged PR \"Add Tests for ObjectReference in EventOrderTests\" (#11348)"},{"Id":"2288445361","IsPullRequest":false,"CreatedAt":"2024-05-09T20:51:23","Actor":"vsfeedback","Number":"11347","RawContent":null,"Title":"GDI/BitBlt features for .NET Core?","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/t/GDIBitBlt-features-for-NET-Core/10620585)._\r\n\r\n---\r\nI have introduced myself to developing with .NET 8 - specifically, to learn web development with Blazor and .NET in particular; since it has been quite some time since I've been involved in Web projects. As I dive deeper into the rabbit hole, there is an old project that I would like to resurrect, preferably as something that I could develop cross-platform. I created a Chronometer ActiveX control back in the early 2000's using VB 6.0 and created a Winform app a few years back to utilize it. ActiveX is completely dead now, so I would like to resurrect this project completely in .NET.\r\n\r\n![Bd5bd95f1f0f24377adf056875f50dbcf638465538565816047_Stopwatch](https://github.com/dotnet/winforms/assets/5169960/b74f4674-0ef3-4011-97dd-e3256d29bb4c)\r\n\r\nThe original control was derived from a PictureBox, and used the Win32 GDI library's BitBlt to place the displays elements from a source image container. I would LOVE to port this project to a modern implementation, ideally without that dependency. I've looked around, and have only come across one possible source, which was a book on the available Canvas Bitmap operations using JavaScript. Since part of my regimen to learn Blazor/.NET 8 development has been to take fun little HTML/CSS/JavaScript projects (such as a calculator, or clock) and refactoring the JS scripts with C# code, I would rather not go that route...\r\n\r\nAre there any .NET libraries (part of .NET or 3rd party) that include bitmap operations for .NET Core? Ideally, I'm looking for the overload that allowed for taking a region from a bitmap source to paint on a specified region on the target canvas. Thanks!\r\n\r\n---\r\n### Original Comments\r\n\r\n#### Feedback Bot on 3/20/2024, 10:15 PM: \r\n\r\n(private comment, text removed)","Url":"https://github.com/dotnet/winforms/issues/11347","RelatedDescription":"Open issue \"GDI/BitBlt features for .NET Core?\" (#11347)"},{"Id":"2288435326","IsPullRequest":true,"CreatedAt":"2024-05-09T20:47:45","Actor":"JeremyKuhne","Number":"11346","RawContent":null,"Title":"Mergemain","State":"closed","Body":"Merge main back into the branch and resolve conflicts.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11346)","Url":"https://github.com/dotnet/winforms/pull/11346","RelatedDescription":"Closed or merged PR \"Mergemain\" (#11346)"},{"Id":"2288430748","IsPullRequest":true,"CreatedAt":"2024-05-09T20:41:23","Actor":"ricardobossan","Number":"11345","RawContent":null,"Title":"Visual Styles enabled or disabled, remove differentiation for border style in the left side of the row header when the style would have been set to `Outset`","State":"open","Body":"Fixes #5961\r\n\r\n## Proposed changes\r\n\r\n- If DataGridView is `RightToLeft`, with either visual styles enabled or not, remove differentiation for border style in the left side of the row header when the style would have been set to `Outset`\r\n\r\n## Customer Impact\r\n\r\n- Will be able to see left border of the row header when control is set to `RightToLeft`\r\n\r\n## Regression?\r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Screenshots\r\n\r\n### Before\r\n\r\n- Visual styles enabled\r\n\r\n![before_visual_style_on](https://github.com/dotnet/winforms/assets/30190295/2a81bc2f-aadb-4815-8f26-cac200b48ef8)\r\n- Visual styles disabled\r\n\r\n![before_visual_style_off](https://github.com/dotnet/winforms/assets/30190295/50e9e8cb-928a-4abd-bc62-e03d7aeaff53)\r\n### After\r\n\r\n- Visual styles enabled\r\n\r\n![after_visual_style_on](https://github.com/dotnet/winforms/assets/30190295/d49a050e-fd76-4dc1-ad15-8fa5e171e261)\r\n- Visual styles disabled\r\n\r\n![after_visual_style_off](https://github.com/dotnet/winforms/assets/30190295/0a30cf23-1310-4b0c-a37d-50232ef941e5)\r\n## Test methodology\r\n\r\n- Manual\r\n\r\n## Accessibility testing\r\n\r\n- Accessibility insights\r\n\r\n## Test environment(s)\r\n\r\n- `dotnet 9.0.100-preview.3.24204.13`\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11345)","Url":"https://github.com/dotnet/winforms/pull/11345","RelatedDescription":"Open PR \"Visual Styles enabled or disabled, remove differentiation for border style in the left side of the row header when the style would have been set to `Outset`\" (#11345)"},{"Id":"2288402495","IsPullRequest":true,"CreatedAt":"2024-05-09T20:40:16","Actor":"JeremyKuhne","Number":"11344","RawContent":null,"Title":"Test FI","State":"closed","Body":"Test\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11344)","Url":"https://github.com/dotnet/winforms/pull/11344","RelatedDescription":"Closed or merged PR \"Test FI\" (#11344)"},{"Id":"2288281117","IsPullRequest":true,"CreatedAt":"2024-05-09T20:21:52","Actor":"JeremyKuhne","Number":"11343","RawContent":null,"Title":"Simplify completed callbacks","State":"closed","Body":"Always hook completed callbacks in the same order that we parse the graph. This gives more predictable results and simplifies the logic a bit.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11343)","Url":"https://github.com/dotnet/winforms/pull/11343","RelatedDescription":"Closed or merged PR \"Simplify completed callbacks\" (#11343)"},{"Id":"2288118108","IsPullRequest":false,"CreatedAt":"2024-05-09T19:14:56","Actor":"Forgind","Number":"11340","RawContent":null,"Title":"[ARM64]The Form1.cs[Design] page cannot load successfully after installed the latest .NET 9.0 Preview4 or Preview5","State":"closed","Body":"---\r\n**Issue moved from dotnet/sdk#40786**\r\n- Please respond to @Zheng-Li01.\r\n\r\n---\r\n\r\n_From @Zheng-Li01 on Thursday, May 9, 2024 8:01:14 AM_\r\n\r\n<!--\r\nPlease keep in mind that the GitHub issue tracker is not intended as a general support forum, but for reporting **non-security** bugs and feature requests.\r\n\r\nIf you believe you have an issue that affects the SECURITY of the platform, please do NOT create an issue and instead email your issue details to secure@microsoft.com. Your report may be eligible for our [bug bounty](https://www.microsoft.com/en-us/msrc/bounty-dot-net-core) but ONLY if it is reported through email.\r\nFor other types of questions, consider using [StackOverflow](https://stackoverflow.com).\r\n\r\n-->\r\n\r\n**SDK Versions:**\r\nBad SDK: dotnet-sdk-9.0.100-preview.5.24258.8-win-arm64 & dotnet-sdk-9.0.100-preview.4.24258.4-win-arm64\r\nGood SDK: dotnet-sdk-9.0.100-preview.3.24204.13-win-arm64\r\n\r\n**Visual Studio Versions:**\r\n17.11.0 Preview 1.0 [34908.277.d17.11] & 17.11.0 Preview 2.0 [34908.267.main]\r\n\r\n### Describe the bug\r\nThe Form1.cs[Design] page cannot load successfully after installed the latest .NET 9.0 Preview4 & Preview5 on the ARM64 machine\r\n\r\n### To Reproduce\r\n1. Install the latest .NET 9.0 Preview4 or Preview5 Windows arm 64 from https://github.com/dotnet/installer\r\n2. Create a .NET WinForms project targeting to .NET 9.0\r\n3. Observe the Form1.cs[Design] page\r\n\r\n**Expected Result:**\r\nThe Form1.cs[Design] page can load successfully after installed the latest .NET 9.0 Preview4 & Preview5 on the ARM64 machine, \r\n![ExpectedResults](https://github.com/dotnet/sdk/assets/38325459/75a98e7d-7173-449e-9786-c8d047903609)\r\n![ExpectedResults](https://github.com/dotnet/sdk/assets/38325459/c019264f-a36a-43ae-80b0-3fb5ffc56e4e)\r\n\r\n**Actual Result:**\r\n**Preview5Results**\r\nThe Form1.cs[Design] page cannot load successfully after installed the latest .NET 9.0 Preview4 & Preview5 on the ARM64 machine, and the Visual Studio will not be responding after clicked anywhere. \r\n![Preview5Results](https://github.com/dotnet/sdk/assets/38325459/d5fbfdee-f958-468f-8aba-ef1df6a356fc)\r\n![ActualResults](https://github.com/dotnet/sdk/assets/38325459/2104e367-a4c0-4391-9600-1fdc0d8a60e0)\r\n**Preview4Results**\r\n![Preview4Results](https://github.com/dotnet/sdk/assets/38325459/b6dcc8e1-1ec5-4ceb-ad6e-a0e7c36ddd3c)\r\n\r\n**More info:**\r\n1. The issue cannot reproduce Windows x64 platform with same sdk version.\r\n2. The issue cannot reproduce after installed latest .NET 9.0 Preview3 from https://dotnet.microsoft.com/en-us/download/dotnet on the ARM64 machine\r\n3. The issue also can reproduce on the  .NET 9.0 Preview4.24257.5(arm64) which bring in PR https://devdiv.visualstudio.com/DevDiv/_git/VS/pullrequest/525045,","Url":"https://github.com/dotnet/winforms/issues/11340","RelatedDescription":"Closed issue \"[ARM64]The Form1.cs[Design] page cannot load successfully after installed the latest .NET 9.0 Preview4 or Preview5\" (#11340)"},{"Id":"2288198061","IsPullRequest":true,"CreatedAt":"2024-05-09T18:05:03","Actor":"LakshanF","Number":"11342","RawContent":null,"Title":"Rooting serializable types for TrimTestBinaryDeserialization test","State":"open","Body":"There is no reliable way for the trimmer to statically reach types that are needed for resource serialization and deserialization. The current plan is to keep all relevant library types that are serializable to get resources working with trimmed WinForms applications.\r\n\r\nThe first iteration of this effort is to root all types in runtime and `windowsdesktop `(with `WindowsForms` profile) assemblies that are serializable (except compiler generated types that are serializable). Additionally, there are couple of exceptions that are needed to be rooted for this test application to run in a trimmed mode; All of `mscorlib` assembly is rooted and a couple of additional types in the `System.Resources.Extensions` assembly (`DeserializingResourceReader`, `RuntimeResourceSet`).\r\n\r\nFuture iterations should look at more simple WinForms applications with custom resources to identify a core set of library types that need to be keep for basic WinForms applications with custom resources to be trimmed.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11342)","Url":"https://github.com/dotnet/winforms/pull/11342","RelatedDescription":"Open PR \"Rooting serializable types for TrimTestBinaryDeserialization test\" (#11342)"},{"Id":"2288194846","IsPullRequest":true,"CreatedAt":"2024-05-09T18:02:45","Actor":"adamsitnik","Number":"11341","RawContent":null,"Title":"Extend PayloadReader APIs to meet the WinForms requirements","State":"open","Body":"@JeremyKuhne I was working on the MSRCs today and managed to make only a small progress with transition to SafePayloadReader APIs. What I have here compiles, but you can revert the last revert to have a temporary state where some APIs have been transitioned and there are compiler errors.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11341)","Url":"https://github.com/dotnet/winforms/pull/11341","RelatedDescription":"Open PR \"Extend PayloadReader APIs to meet the WinForms requirements\" (#11341)"},{"Id":"2287541810","IsPullRequest":true,"CreatedAt":"2024-05-09T12:35:57","Actor":"dotnet-maestro[bot]","Number":"11339","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20240508.12\r\n- **Date Produced**: May 9, 2024 8:29:42 AM UTC\r\n- **Commit**: de4fa45b047cb1f03da9d03c4d98f7518d02cc93\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **System.CodeDom**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **System.IO.Hashing**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **System.IO.Ports**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **System.Management**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **System.Speech**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **System.Text.Json**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-preview.5.24256.1 to 9.0.0-preview.5.24258.12][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/84b3339505...de4fa45b04\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11339)","Url":"https://github.com/dotnet/winforms/pull/11339","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#11339)"},{"Id":"2286798739","IsPullRequest":true,"CreatedAt":"2024-05-09T02:59:07","Actor":"JeremyKuhne","Number":"11338","RawContent":null,"Title":"Add PayloadReader code","State":"closed","Body":"Made minor changes to get it to not fail to build in WinForms\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11338)","Url":"https://github.com/dotnet/winforms/pull/11338","RelatedDescription":"Closed or merged PR \"Add PayloadReader code\" (#11338)"},{"Id":"2286730658","IsPullRequest":true,"CreatedAt":"2024-05-09T01:32:59","Actor":"lonitra","Number":"11337","RawContent":null,"Title":"Add Deserialization Event Order Tests (#11336)","State":"closed","Body":"Take 11336 > SafePayloadReader\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11337)","Url":"https://github.com/dotnet/winforms/pull/11337","RelatedDescription":"Closed or merged PR \"Add Deserialization Event Order Tests (#11336)\" (#11337)"},{"Id":"2286702338","IsPullRequest":true,"CreatedAt":"2024-05-09T01:25:25","Actor":"lonitra","Number":"11336","RawContent":null,"Title":"Add Deserialization Event Order Tests","State":"closed","Body":"- Adds tests for BinaryFormatter and Deserializer to capture what can be observed about the deserialization state in different scenarios based on the various hooks available (`IDeserializationCallback`, `OnDeserialized`, `ISerializable`).\r\n- Flip the ordering of `OnDeserialized` and `IDeserializationCallback` in the deserializer since BinaryFormatter always fires `IDeserializationCallback` last\r\n- Fix bug where multiple callbacks to `OnDeserialized` and `IDeserializationCallback` was occuring in scenario with ISerializable value types\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11336)","Url":"https://github.com/dotnet/winforms/pull/11336","RelatedDescription":"Closed or merged PR \"Add Deserialization Event Order Tests\" (#11336)"},{"Id":"2286020122","IsPullRequest":false,"CreatedAt":"2024-05-08T16:45:51","Actor":"DhivyaBharathi-SF3890","Number":"11335","RawContent":null,"Title":"Unresponsiveness issue during Real-Time Updates in Winforms DataGridView","State":"open","Body":"### .NET version\n\n.Net 7.0\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\nIn DataGridView, while updating the values like real-time updates, the demo becomes unresponsive. Without using the Refresh() method the values are not updated.\r\n\r\n[DataGrid_Refresh.zip](https://github.com/dotnet/winforms/files/15252072/DataGrid_Refresh.zip)\r\n\n\n### Steps to reproduce\n\n1.Run the sample.\r\n2.Click the Refresh button.\r\n\r\n**Observed Behavior:**\r\nThe sample enters into the Not responding state\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/11335","RelatedDescription":"Open issue \"Unresponsiveness issue during Real-Time Updates in Winforms DataGridView\" (#11335)"},{"Id":"2285640340","IsPullRequest":false,"CreatedAt":"2024-05-08T13:42:17","Actor":"kirsan31","Number":"11334","RawContent":null,"Title":"Massive GDI (region) leak. Help needed.","State":"open","Body":"### .NET version\r\n\r\n.Net7 and .Net8\r\n\r\n### Did it work in .NET Framework?\r\n\r\nYes\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nWe didn't see these problems before .Net7.\r\n\r\n### Issue description\r\n\r\nFor several month we are trying to investigate huge GDI (regions) leak in our app. This leak is critical because can reach GDI limit (10k) in one day.\r\n\r\n- The leaking GDI objects are regions.\r\n- This is not managed leak - we have no leaking managed objects in dumps.\r\n- It's start leaking suddenly and most of the time continue to the the limit or app restart, but some time stopped.\r\n- The leak is related to elements redraw because of regions of course and most of the time it's happens around rdp connect/disconnect.\r\n- We can't repro this leak :(\r\n- We once managed to catch this behavior using [performance HUD](https://www.microsoft.com/en-us/download/details.aspx?id=100813). This is quite problematic, because HUD slows down the working PC. And what we saw was very strange, it felt like something was starting to leak that had not leak before. Unfortunately, the call stack saved in HUD (`*.hudinsight`) does not show the names of the methods when viewed (**may be some one knew how to overcome this?**) :( And even those copied manually as text also turned out to be cropped due to the large size. Therefore, I will present here what I managed to get (sorry for this).\r\n\r\n1. 479 leaked regions due to redrawing (almost all are system calls):  \r\n![1](https://github.com/dotnet/winforms/assets/17767561/48908205-b923-4569-9075-b56a6765803b)\r\n[1.csv](https://github.com/dotnet/winforms/files/15249049/1.csv)\r\n\r\n2. 84 leaked regions due to close all opened child mdi forms. Closing all windows is done through the menu, when opened, the child menu is filled with open forms (15 in our case). Big part of it is leaking in `MenuStrip`  -> `Control.SetBoundsCore` -> `SetWindowPos`.  Call stacks `ToolStripDropDownItem.OnDropDownOpened` -> `EtwWriteTransfer` and `ToolStripDropDownItem.OnDropDownClosed` -> `EtwWriteTransfer` are full.\r\n![01](https://github.com/dotnet/winforms/assets/17767561/3b89e3a0-3aea-4b69-8796-499eab7f2b56)\r\n![02](https://github.com/dotnet/winforms/assets/17767561/6948d43b-a8fb-48e3-877d-1507e44e9919)\r\n![03](https://github.com/dotnet/winforms/assets/17767561/8277ff01-1ed3-4d86-9824-214518a38023)\r\n![04](https://github.com/dotnet/winforms/assets/17767561/3c63accf-00ad-4ffe-af38-2a9e25bfeba9)\r\n[2.csv](https://github.com/dotnet/winforms/files/15249120/2.csv)\r\nThe logic in `tsmiWidow_DropDownOpened` is populate childe `DropDownItems` with 15 (in this situation) items.\r\nThe logic in `tsmiWidow_DropDownClosed` is clear all items previously added:  \r\n```cs\r\nwhile (tmi.DropDownItems.Count > 0) \r\n{\r\n    ToolStripItem ti = tmi.DropDownItems[tmi.DropDownItems.Count - 1];\r\n    ti.MouseDown -= ActivateW;\r\n    var img = ti.Image;\r\n    ti.Dispose(); // will remove on dispose\r\n    img?.Dispose();\r\n}\r\n```\r\nThere are no managed leaks, all objects were properly deleted _(this is not always 100% true I explain below)_.\r\nIt is very strange that the leak occurs both when adding and removing elements. In 99% of cases everything works completely correctly.\r\nWhile researching I found a small managed leak here:\r\n![timer1](https://github.com/dotnet/winforms/assets/17767561/498919cf-62d9-45b1-bf4f-a1034fc73690)\r\n![timer2](https://github.com/dotnet/winforms/assets/17767561/41e32382-c1d6-4813-a8f5-71825c1fde93)\r\nThis small managed leak is reproducible and can't lead to such catastrophic consequences. Can easily be fixed with `WeakReference` here _(I will open a PR later)_:\r\nhttps://github.com/dotnet/winforms/blob/7504692fbb7ba100c5b098ce5c47e161450a98e2/src/System.Windows.Forms/src/System/Windows/Forms/Input/MouseHoverTimer.cs#L10-L11\r\n\r\n3. 800+ (maybe not all of 937 are leaked) leaked regions including points 1. and 2. This is also done through the menu, and one submenu is filled and cleared with 43 items in our case, exactly the same as in point 2. These are all the regions that the performance HUD detected after closing all child windows. In this state (in normal condition) our app consume about 100 GDI objects and 10 of them are regions. And in this situation there were about 5500 GDI objects and 5400 of them are regions.\r\n![001](https://github.com/dotnet/winforms/assets/17767561/85b490ce-6cae-43e8-aed6-d823999063ee)\r\n![002](https://github.com/dotnet/winforms/assets/17767561/3d1ec66f-1f3e-4bc1-a065-683d5884b164)\r\n![003](https://github.com/dotnet/winforms/assets/17767561/70bd6bf8-68e0-46b1-bfda-2e292c3314b5)\r\n![004](https://github.com/dotnet/winforms/assets/17767561/e5ef6bf0-9578-47c1-8683-88a72200229b)\r\n[all.csv](https://github.com/dotnet/winforms/files/15249486/all.csv)\r\n\r\nOS: Windows 10 Pro for Workstations 22H2.\r\n\r\nIn conclusion, it seems to me that the problem is somewhere in Winforms, or even in the OS. Any assistance in further investigation is greatly appreciated. 🙏\r\n\r\n### Steps to reproduce\r\n\r\n--","Url":"https://github.com/dotnet/winforms/issues/11334","RelatedDescription":"Open issue \"Massive GDI (region) leak. Help needed.\" (#11334)"},{"Id":"2285426947","IsPullRequest":true,"CreatedAt":"2024-05-08T12:36:41","Actor":"dotnet-maestro[bot]","Number":"11333","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20240508.1\r\n- **Date Produced**: May 8, 2024 9:02:49 AM UTC\r\n- **Commit**: a62b4639193b96a1a848ccddaf9fe421c3d3f21b\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.24256.2 to 9.0.0-beta.24258.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 9.0.0-beta.24256.2 to 9.0.0-beta.24258.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 9.0.0-beta.24256.2 to 9.0.0-beta.24258.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.24256.2 to 9.0.0-beta.24258.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 9.0.0-beta.24256.2 to 9.0.0-beta.24258.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.24256.2 to 9.0.0-beta.24258.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/9fc042c22b...a62b463919\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11333)","Url":"https://github.com/dotnet/winforms/pull/11333","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#11333)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-05-13T03:30:25.4331159Z","RunDurationInMilliseconds":402}