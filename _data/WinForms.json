{"Data":{"GitHub":{"Issues":[{"Id":"674971708","IsPullRequest":true,"CreatedAt":"2020-08-07T12:52:29","Actor":"dotnet-maestro[bot]","Number":"3708","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200806.11\r\n- **Date Produced**: 8/7/2020 3:29 AM\r\n- **Commit**: 9b2f548c3b0da290bc57f1a0460cd0c5c408095e\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.CodeDom**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Diagnostics.EventLog**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Diagnostics.PerformanceCounter**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.DirectoryServices**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **Microsoft.NETCore.App**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **Microsoft.NETCore.ILDAsm**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **Microsoft.NETCore.Targets**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **Microsoft.NETCore.App.Internal**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **Microsoft.NETCore.App.Ref**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Drawing.Common**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Text.Encodings.Web**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Text.Json**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Threading.AccessControl**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Windows.Extensions**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Security.Principal.Windows**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.IO.FileSystem.AccessControl**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.IO.Packaging**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.IO.Pipes.AccessControl**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Reflection.MetadataLoadContext**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Resources.Extensions**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Security.AccessControl**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Security.Cryptography.Pkcs**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Security.Cryptography.ProtectedData**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Security.Cryptography.Xml**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n  - **System.Security.Permissions**: from 5.0.0-rc.1.20405.17 to 5.0.0-rc.1.20406.11\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3708)","Url":"https://github.com/dotnet/winforms/pull/3708","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3708)"},{"Id":"674890073","IsPullRequest":true,"CreatedAt":"2020-08-07T09:30:31","Actor":"Zheng-Li01","Number":"3707","RawContent":null,"Title":"Modify the AccessibilityTests App to fix the Accessibility issues","State":"open","Body":"Fixes # \r\n- Modify the AccessibilityTests App to fix the Accessibility issues:[1156469](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1156469); [1156475](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1156475);[1159875](https://dev.azure.com/devdiv/DevDiv/_workitems/edit/1159875).\r\n \r\n- Add the test scenarios to test the changes from [3549](https://github.com/dotnet/winforms/issues/3549).\r\n\r\n\r\n## Proposed changes\r\n\r\n- Setting DGVs StandardTab property as true in DataControls.cs file.\r\n- Updated the tab order for DataGridView controls in DataControls.cs file.\r\n- Change the default AccessibleName for ToolStrip_ComboBox item in ToolStripContainer.cs file.\r\n- Add the test scenarios to test the changes from [3549](https://github.com/dotnet/winforms/issues/3549) in the Binding_Data.cs file.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Fixed the Accessibility issue: [1156469](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1156469); [1156475](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1156475);[1159875](https://dev.azure.com/devdiv/DevDiv/_workitems/edit/1159875)\r\n- The CAIAcc testers can test changes around the changes from [3549](https://github.com/dotnet/winforms/issues/3549).\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n-Low\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual Testing around changes.\r\n","Url":"https://github.com/dotnet/winforms/pull/3707","RelatedDescription":"Open PR \"Modify the AccessibilityTests App to fix the Accessibility issues\" (#3707)"},{"Id":"674869711","IsPullRequest":false,"CreatedAt":"2020-08-07T08:55:46","Actor":"Zheng-Li01","Number":"3706","RawContent":null,"Title":"ListBox.DisplayMember property should be used as an accessible name for combobox items","State":"open","Body":"* .NET Core Version: \r\n.NET SDK 5.0.100.rc1.20405.13\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n* More info:\r\n1. The issue also can reproduce .NET SDK 3.1.\r\n2. Tested ListBox with items from non-data binding and data binding, the Name of list items are displayed correctly. \r\n\r\n**Problem description:**\r\nAT user does not know what items are available for selection\r\n\r\nMinimal repro:\r\n1. Open the attached project.\r\n[Project.zip](https://github.com/dotnet/winforms/files/5040304/Project.zip)\r\n2. Build & Run the application under the inspect tool.\r\n\r\n**Expected behavior:**\r\nAccessible tree should show the same strings as the drop down shows\r\n![Framework](https://user-images.githubusercontent.com/38325459/89628256-9e5d5200-d8ce-11ea-8eca-049d8ce97cd2.PNG)\r\n\r\n**Actual behavior:**\r\ntype name is used as accessible name for the ListBox list items, because a object.ToString is called:\r\n![Core](https://user-images.githubusercontent.com/38325459/89628279-a74e2380-d8ce-11ea-9870-2454456d5049.PNG)\r\n","Url":"https://github.com/dotnet/winforms/issues/3706","RelatedDescription":"Open issue \"ListBox.DisplayMember property should be used as an accessible name for combobox items\" (#3706)"},{"Id":"674814868","IsPullRequest":true,"CreatedAt":"2020-08-07T07:14:03","Actor":"KlausLoeffelmann","Number":"3705","RawContent":null,"Title":"Add HighDpiMode property and handling to WindowsFormsApplicationBase.","State":"open","Body":"For the AppDesigner for Apps written in Visual Basic based on WinForm's Application Framework, in CoreFx we need to extend the UI by an option to let the user pick the `HighDpiMode` (amongst others like `IsSingleInstance` or `EnableVisualStyles`). These settings in the VB AppDesigner (the Project Properties of a VB WinForms App) are saved to a file called _Application.MyApp_. \r\n\r\n![image](https://user-images.githubusercontent.com/9663150/89619370-b5566280-d842-11ea-875f-2250c9a0c77c.png)\r\n\r\nThis file again triggers the MyApplicationCodeGenerator which generated the partial class `Application.Designer.vb`. We need to change that code generator tool in that it generates the setting for the `HighDpiMode` into code. \r\n\r\n![image](https://user-images.githubusercontent.com/9663150/89619328-a2439280-d842-11ea-8ebe-1d305bd94dad.png)\r\n\r\nSince properties of the Application class are not written directly, but rather accessed over the inherited `WindowsFormsApplicationBase` which `MyApplication` is based on, we need to expose a `HighDpiMode` property in WindowsFormsApplicationBase. That's what this PR actually does.\r\n\r\n**NOTE:** There is also a lot of necessary cleaning up going on in this PR. \r\nSo note if you review, that the relevant changes are minor and in lines 396ff and 634ff.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\nThis PR is part of the Visual Basic template work which should go in with 16.8.\r\n\r\n## Regression? \r\n\r\nNo\r\n\r\n## Risk\r\n\r\nLow.\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3705)","Url":"https://github.com/dotnet/winforms/pull/3705","RelatedDescription":"Open PR \"Add HighDpiMode property and handling to WindowsFormsApplicationBase.\" (#3705)"},{"Id":"674042923","IsPullRequest":true,"CreatedAt":"2020-08-07T05:37:20","Actor":"gpetrou","Number":"3700","RawContent":null,"Title":"Enable nullability in VisualStyleInformation","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in VisualStyleInformation.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3700)","Url":"https://github.com/dotnet/winforms/pull/3700","RelatedDescription":"Closed or merged PR \"Enable nullability in VisualStyleInformation\" (#3700)"},{"Id":"674259523","IsPullRequest":true,"CreatedAt":"2020-08-07T00:58:20","Actor":"dotnet-maestro[bot]","Number":"3701","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20200803.5\r\n- **Date Produced**: 8/3/2020 9:14 PM\r\n- **Commit**: 7385e2722b9fa517314aa5db1fa598a8d417b3c7\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: from 5.0.0-beta.20374.1 to 5.0.0-beta.20403.5\r\n  - **Microsoft.DotNet.GenFacades**: from 5.0.0-beta.20374.1 to 5.0.0-beta.20403.5\r\n  - **Microsoft.DotNet.Arcade.Sdk**: from 5.0.0-beta.20374.1 to 5.0.0-beta.20403.5\r\n  - **Microsoft.DotNet.Helix.Sdk**: from 5.0.0-beta.20374.1 to 5.0.0-beta.20403.5\r\n  - **Microsoft.DotNet.RemoteExecutor**: from 5.0.0-beta.20374.1 to 5.0.0-beta.20403.5\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3701)","Url":"https://github.com/dotnet/winforms/pull/3701","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#3701)"},{"Id":"673811278","IsPullRequest":true,"CreatedAt":"2020-08-06T19:28:07","Actor":"wli3","Number":"3698","RawContent":null,"Title":"Update to net5.0 template with backcompact","State":"closed","Body":"Port change to preview 8 https://github.com/dotnet/winforms/pull/3690\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3698)","Url":"https://github.com/dotnet/winforms/pull/3698","RelatedDescription":"Closed or merged PR \"Update to net5.0 template with backcompact\" (#3698)"},{"Id":"672409692","IsPullRequest":true,"CreatedAt":"2020-08-06T19:27:42","Actor":"wli3","Number":"3690","RawContent":null,"Title":"Update to net5.0 template with backcompact","State":"closed","Body":"Works for\r\n\r\n```\r\n dotnet new wpf -n wpf1 -f netcoreapp3.1\r\n dotnet new wpf -n wpf2\r\n dotnet new wpf -n wpf3 -f netcoreapp3.1 --target-framework-override net461\r\n dotnet new wpf -n wpf3 -f net5.0 --target-framework-override net6.0\r\n dotnet new wpf -n wpf4 -f net5.0 --target-framework-override net6.0\r\n```\r\n-----------------------\r\n\r\nNow I have updated all existing templates. I tested with a script running the combination of all templates, c#/VB, net5.0/netcoreapp3.0/netcoreapp3.1/override with net46. And I sampled some test case manually in VS too. It is not likely to have any mistake slip through.\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3690)","Url":"https://github.com/dotnet/winforms/pull/3690","RelatedDescription":"Closed or merged PR \"Update to net5.0 template with backcompact\" (#3690)"},{"Id":"674428037","IsPullRequest":true,"CreatedAt":"2020-08-06T16:06:21","Actor":"KlausLoeffelmann","Number":"3703","RawContent":null,"Title":"Update Visual Basic Test-Template-Project","State":"open","Body":"The VbTemplate project is a minimal Visual Basic project which enables the Visual Basic Application Framework.\r\nIt is our test project, from which we want to derive the VB Application Framework Project template.\r\n\r\nThis PR addresses the following issues:\r\n\r\n* Exclude this project from Arcade build settings, so Arcade doesn't interfere with settings like `langversion`.\r\n* Restrict the project settings to the most necessary and work with the default settings where possible.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3703)","Url":"https://github.com/dotnet/winforms/pull/3703","RelatedDescription":"Open PR \"Update Visual Basic Test-Template-Project\" (#3703)"},{"Id":"674268401","IsPullRequest":true,"CreatedAt":"2020-08-06T12:42:55","Actor":"dotnet-maestro[bot]","Number":"3702","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200805.17\r\n- **Date Produced**: 8/6/2020 9:02 AM\r\n- **Commit**: 0f7370baa68c5809f93095cbce9bf614f44cc731\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.CodeDom**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Diagnostics.EventLog**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Diagnostics.PerformanceCounter**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.DirectoryServices**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **Microsoft.NETCore.App**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **Microsoft.NETCore.ILDAsm**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **Microsoft.NETCore.Targets**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **Microsoft.NETCore.App.Internal**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **Microsoft.NETCore.App.Ref**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Drawing.Common**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Text.Encodings.Web**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Text.Json**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Threading.AccessControl**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Windows.Extensions**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Security.Principal.Windows**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.IO.FileSystem.AccessControl**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.IO.Packaging**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.IO.Pipes.AccessControl**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Reflection.MetadataLoadContext**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Resources.Extensions**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Security.AccessControl**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Security.Cryptography.Pkcs**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Security.Cryptography.ProtectedData**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Security.Cryptography.Xml**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n  - **System.Security.Permissions**: from 5.0.0-rc.1.20404.16 to 5.0.0-rc.1.20405.17\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3702)","Url":"https://github.com/dotnet/winforms/pull/3702","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3702)"},{"Id":"673663458","IsPullRequest":true,"CreatedAt":"2020-08-06T07:20:01","Actor":"gpetrou","Number":"3694","RawContent":null,"Title":"Enable nullability in AmbientProperties","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in AmbientProperties.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3694)","Url":"https://github.com/dotnet/winforms/pull/3694","RelatedDescription":"Closed or merged PR \"Enable nullability in AmbientProperties\" (#3694)"},{"Id":"673689852","IsPullRequest":true,"CreatedAt":"2020-08-06T02:08:01","Actor":"gpetrou","Number":"3696","RawContent":null,"Title":"Enable nullability in some Event Handlers","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in some Event Handlers.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3696)","Url":"https://github.com/dotnet/winforms/pull/3696","RelatedDescription":"Closed or merged PR \"Enable nullability in some Event Handlers\" (#3696)"},{"Id":"673957072","IsPullRequest":false,"CreatedAt":"2020-08-06T01:58:31","Actor":"Vino-Wang","Number":"3699","RawContent":null,"Title":"There are 4 extra (null) pane in Inspect after right clicking on the form icon","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n5.0.100-rc.1.1.20405.11\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n<!-- Yes / No -->\r\n\r\n**More info:**\r\nThis is not a regression issue.\r\n\r\n**Problem description:**\r\nThere are 4 extra (null) pane in Inspect after right clicking on the form icon.\r\n![ExtraPane](https://user-images.githubusercontent.com/18568603/89481805-1e9a8f00-d7cb-11ea-8eff-06eac760a00f.png)\r\n![ExtraItem](https://user-images.githubusercontent.com/18568603/89481824-2c501480-d7cb-11ea-9e5f-51c2bd45908b.gif)\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n**Expected behavior:**\r\nThere should have no extra (null) panel.\r\n\r\n**Minimal repro:**\r\n1.\tCreate a winforms core project.\r\n2.\tBuild and run.\r\n3.\tLaunch the Inspect tool and right click on the form icon, observe the left items in Inspect.\r\nOr \r\n1.\tRun the attached project. [CustomAccessibleNameForForm.zip](https://github.com/dotnet/winforms/files/5032104/CustomAccessibleNameForForm.zip)\r\n2.\tBuild and run.\r\n3.\tLaunch the Inspect tool and right click on the form icon, observe the left items in Inspect.","Url":"https://github.com/dotnet/winforms/issues/3699","RelatedDescription":"Open issue \"There are 4 extra (null) pane in Inspect after right clicking on the form icon\" (#3699)"},{"Id":"673667002","IsPullRequest":true,"CreatedAt":"2020-08-05T22:39:34","Actor":"gpetrou","Number":"3695","RawContent":null,"Title":"Remove ExternDll class","State":"closed","Body":"## Proposed changes\r\n\r\n- Remove ExternDll class.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3695)","Url":"https://github.com/dotnet/winforms/pull/3695","RelatedDescription":"Closed or merged PR \"Remove ExternDll class\" (#3695)"},{"Id":"673698927","IsPullRequest":true,"CreatedAt":"2020-08-05T16:50:29","Actor":"gpetrou","Number":"3697","RawContent":null,"Title":"Enable and fix CA2229 warning","State":"open","Body":"## Proposed changes\r\n\r\n- Enable and fix CA2229 warning.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3697)","Url":"https://github.com/dotnet/winforms/pull/3697","RelatedDescription":"Open PR \"Enable and fix CA2229 warning\" (#3697)"},{"Id":"673488764","IsPullRequest":true,"CreatedAt":"2020-08-05T12:42:53","Actor":"dotnet-maestro[bot]","Number":"3693","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200804.16\r\n- **Date Produced**: 8/5/2020 9:55 AM\r\n- **Commit**: b497143c168c8df00f070e95a4c6fee4092d2ea6\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **System.CodeDom**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **System.Diagnostics.EventLog**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **System.Diagnostics.PerformanceCounter**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **System.DirectoryServices**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **Microsoft.NETCore.App**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **Microsoft.NETCore.ILDAsm**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **Microsoft.NETCore.Targets**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **Microsoft.NETCore.App.Internal**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **Microsoft.NETCore.App.Ref**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **System.Drawing.Common**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **System.Text.Encodings.Web**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **System.Text.Json**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **System.Threading.AccessControl**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **System.Windows.Extensions**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **System.Security.Principal.Windows**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **System.IO.FileSystem.AccessControl**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **System.IO.Packaging**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **System.IO.Pipes.AccessControl**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **System.Reflection.MetadataLoadContext**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **System.Resources.Extensions**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **System.Security.AccessControl**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **System.Security.Cryptography.Pkcs**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **System.Security.Cryptography.ProtectedData**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **System.Security.Cryptography.Xml**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n  - **System.Security.Permissions**: from 5.0.0-rc.1.20404.2 to 5.0.0-rc.1.20404.16\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3693)","Url":"https://github.com/dotnet/winforms/pull/3693","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3693)"},{"Id":"672787074","IsPullRequest":true,"CreatedAt":"2020-08-04T13:49:15","Actor":"dotnet-maestro[bot]","Number":"3692","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200804.2\r\n- **Date Produced**: 8/4/2020 12:36 PM\r\n- **Commit**: 4c0ebbdd344304e36773c01eb61b9a486b198a3c\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **System.CodeDom**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **System.Diagnostics.EventLog**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **System.Diagnostics.PerformanceCounter**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **System.DirectoryServices**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **Microsoft.NETCore.App**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **Microsoft.NETCore.ILDAsm**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **Microsoft.NETCore.Targets**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **Microsoft.NETCore.App.Internal**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **Microsoft.NETCore.App.Ref**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **System.Drawing.Common**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **System.Text.Encodings.Web**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **System.Text.Json**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **System.Threading.AccessControl**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **System.Windows.Extensions**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **System.Security.Principal.Windows**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **System.IO.FileSystem.AccessControl**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **System.IO.Packaging**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **System.IO.Pipes.AccessControl**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **System.Reflection.MetadataLoadContext**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **System.Resources.Extensions**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **System.Security.AccessControl**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **System.Security.Cryptography.Pkcs**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **System.Security.Cryptography.ProtectedData**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **System.Security.Cryptography.Xml**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n  - **System.Security.Permissions**: from 5.0.0-rc.1.20402.3 to 5.0.0-rc.1.20404.2\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3692)","Url":"https://github.com/dotnet/winforms/pull/3692","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3692)"},{"Id":"672464274","IsPullRequest":false,"CreatedAt":"2020-08-04T02:47:18","Actor":"vsfeedback","Number":"3691","RawContent":null,"Title":"MDI child windows use hard-coded Visual Style Rendering","State":"open","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity.visualstudio.com/content/problem/1130834/mdi-child-windows-use-hard-coded-visual-style-rend.html)._\n\n---\n1) Create an MDI container as the main application window (typical).  (Set IsMDIContainer to true)\n2) Via code, add MDI child window using the standard way (create, set MDIParent to \"this\", then Show).\n\nThe child windows always display with the Windows 7 Aero style, regardless of OS, the theme, or the user preferences.  Our sales folks have complained that our application doesn't look modern because they demo on Win10 and the child windows look 10 years old and inconsistent.\n\nNo reasonable workaround is available.  Several reports of the problem online and no confirmed workaround is available.\n\n---\n### Original Comments\n\n#### Feedback Bot on 7/30/2020, 02:21 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n#### Amy Li [MSFT] on 7/30/2020, 04:17 PM: \n\n<p>Hi Glenn,<br>\nThanks for sharing your problem at here. This is a nice suggestion but not a real issue. So we will convert it as a Suggestion Ticket.<br>\nThanks for help us build a better visual studio!</p>\n\n#### Glenn Wickman on 7/30/2020, 11:16 PM: \n\n<p>This isn't a suggestion, it's pretty clearly a bug.  Please review the attached screenshot that shows the incorrect non-client area painting of only MDIChild windows.  Other top-level windows paint correctly so this is inconsistency at the very minimum and, on a larger level, the MDIChild windows are completely ignoring all the Windows settings (themes, user colors, etc).  I would also point out that on certain operating systems like Windows Server 2012, the issue doesn't exist.  So it's also a bug that randomly manifests depending on the version of Windows.</p><p>I'm also not sure why you've tagged this report as \"needs more info\".  I've literally given the repro steps and screen shots.  I'm happy to provide more information if you tell me what else you'd like.</p>\n\n#### Amy Li [MSFT] on 7/31/2020, 04:20 PM: \n\n<p>Hi Glenn,<br>\nWe are sorry that our response was misleading to you. We verified the MDIChild on win10 & win8.1, the tesult result as following screenshot. So your issue is Form1 and ChildForm have different window style in win10?<br>\nWin10:</p><p><img src=\"https://developercommunity.visualstudio.com/storage/attachments/149065-childform-win10.png\"></p><p>\nWin8.1:</p><p><img src=\"https://developercommunity.visualstudio.com/storage/attachments/149066-childform-win81.png\"></p>\n\n#### Glenn Wickman on 7/31/2020, 11:52 PM: \n\n(private comment, text removed)\n#### Feedback Bot on 8/4/2020, 10:42 AM: \n\n<p>This issue is currently being investigated. Our team will get back to you if either more information is needed, a workaround is available, or the issue is resolved.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/winforms/issues/3691","RelatedDescription":"Open issue \"MDI child windows use hard-coded Visual Style Rendering\" (#3691)"},{"Id":"672126355","IsPullRequest":true,"CreatedAt":"2020-08-04T00:47:43","Actor":"dotnet-maestro[bot]","Number":"3689","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200802.3\r\n- **Date Produced**: 8/2/2020 8:22 PM\r\n- **Commit**: ca70fc9903e68d36ee16f7d10a9a491251ea8f20\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **System.CodeDom**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **System.Diagnostics.EventLog**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **System.Diagnostics.PerformanceCounter**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **System.DirectoryServices**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **Microsoft.NETCore.App**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **Microsoft.NETCore.ILDAsm**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **Microsoft.NETCore.Targets**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **Microsoft.NETCore.App.Internal**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **Microsoft.NETCore.App.Ref**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **System.Drawing.Common**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **System.Text.Encodings.Web**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **System.Text.Json**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **System.Threading.AccessControl**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **System.Windows.Extensions**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **System.Security.Principal.Windows**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **System.IO.FileSystem.AccessControl**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **System.IO.Packaging**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **System.IO.Pipes.AccessControl**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **System.Reflection.MetadataLoadContext**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **System.Resources.Extensions**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **System.Security.AccessControl**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **System.Security.Cryptography.Pkcs**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **System.Security.Cryptography.ProtectedData**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **System.Security.Cryptography.Xml**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n  - **System.Security.Permissions**: from 5.0.0-rc.1.20401.1 to 5.0.0-rc.1.20402.3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3689)","Url":"https://github.com/dotnet/winforms/pull/3689","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3689)"},{"Id":"669622009","IsPullRequest":false,"CreatedAt":"2020-08-03T12:12:43","Actor":"John-Qiao","Number":"3684","RawContent":null,"Title":"Cannot build project successfully","State":"closed","Body":"* .NET Core Version: \r\n5.0.100-rc.1.20380.12\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**More info:**\r\nThis issue does not occur in 5.0.100-rc.1.20378.11, it's a regression issue. \r\n\r\n**Problem description:**\r\nCannot build project successfully, and received the below error:\r\n![Actual](https://user-images.githubusercontent.com/45864985/89022271-52e9f780-d354-11ea-979c-1054017c2ca0.png)\r\n\r\n**Expected behavior:**\r\nCan build project successfully.\r\n\r\n**Minimal repro:**\r\n\r\n1. Create a new .NET Core Winforms project and target to .NET 5.0.\r\n2. Build this project. \r\n[WindowsFormsApp1.zip](https://github.com/dotnet/winforms/files/5006262/WindowsFormsApp1.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/3684","RelatedDescription":"Closed issue \"Cannot build project successfully\" (#3684)"},{"Id":"671866143","IsPullRequest":true,"CreatedAt":"2020-08-03T07:59:08","Actor":"RussKie","Number":"3688","RawContent":null,"Title":"Extract and clean `DataGridViewTextBoxEditingControlAccessibleObject` up","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n\r\n\r\n## Proposed changes\r\n\r\n- Extract `DataGridViewTextBoxEditingControlAccessibleObject` and nest under `DataGridViewTextBoxEditingControl`\r\n- Clean `DataGridViewTextBoxEditingControlAccessibleObject`\r\n- Apply NRT\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3688)","Url":"https://github.com/dotnet/winforms/pull/3688","RelatedDescription":"Closed or merged PR \"Extract and clean `DataGridViewTextBoxEditingControlAccessibleObject` up\" (#3688)"},{"Id":"669363616","IsPullRequest":true,"CreatedAt":"2020-08-03T01:53:25","Actor":"Tanya-Solyanik","Number":"3681","RawContent":null,"Title":"Fixed PR comment: accessible name should not refer to control type","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3663\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3681)","Url":"https://github.com/dotnet/winforms/pull/3681","RelatedDescription":"Closed or merged PR \"Fixed PR comment: accessible name should not refer to control type\" (#3681)"},{"Id":"669747928","IsPullRequest":true,"CreatedAt":"2020-08-03T01:52:33","Actor":"dotnet-maestro[bot]","Number":"3685","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20200801.1\r\n- **Date Produced**: 8/1/2020 10:40 AM\r\n- **Commit**: 6822ba3308b2ceb3eb8a88c8e02f460e171bc04a\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **System.CodeDom**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **System.Configuration.ConfigurationManager**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **System.Diagnostics.EventLog**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **System.Diagnostics.PerformanceCounter**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **System.DirectoryServices**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **Microsoft.NET.Sdk.IL**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **Microsoft.NETCore.App**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **Microsoft.NETCore.ILAsm**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **Microsoft.NETCore.ILDAsm**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **Microsoft.NETCore.Platforms**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **Microsoft.NETCore.Targets**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **Microsoft.Win32.Registry**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **Microsoft.Win32.Registry.AccessControl**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **Microsoft.Win32.SystemEvents**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **Microsoft.NETCore.App.Internal**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **Microsoft.NETCore.App.Ref**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **System.Drawing.Common**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **System.Text.Encodings.Web**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **System.Text.Json**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **System.Threading.AccessControl**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **System.Windows.Extensions**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **System.Security.Principal.Windows**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **System.IO.FileSystem.AccessControl**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **System.IO.Packaging**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **System.IO.Pipes.AccessControl**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **System.Reflection.MetadataLoadContext**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **System.Resources.Extensions**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **System.Security.AccessControl**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **System.Security.Cryptography.Cng**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **System.Security.Cryptography.Pkcs**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **System.Security.Cryptography.ProtectedData**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **System.Security.Cryptography.Xml**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n  - **System.Security.Permissions**: from 5.0.0-rc.1.20380.1 to 5.0.0-rc.1.20401.1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3685)\r\n","Url":"https://github.com/dotnet/winforms/pull/3685","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#3685)"},{"Id":"670720895","IsPullRequest":false,"CreatedAt":"2020-08-01T09:58:52","Actor":"ryancheung","Number":"3687","RawContent":null,"Title":"No TSF support?","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md -->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n\r\nI want to make a game with SharpDX(DirectX 11), which depends on WinForms. The game is going to target CJK users, which users must use a IME software to do text inputs, e.g. type Chinese characters with Microsoft PinYin.\r\n\r\nThen as for IME, Windows has two frameworks, IMM32 for WinXP and before, and then TSF for Window versions after WinXP.\r\n\r\nNow here comes the problem: \r\nDotnet winforms does not support TSF(unless you do it manually in native cpp, just like Chromim, Firefox or Microsoft Terminal). This cause a situation that if you want to render composition string and/or candidate list manually in fullscreen game, you only have IMM32 managed API. If you use IMM32 API to fetch composition string/candidate list, there will be bugs with TSF-based Input Method, such as Microsoft PinYin, you can't get candidate list most of the time. But, there's no bug for purely IMM32-based Input Methods, like Sougou PinYin. To fix that issue, you have to utilize the TSF API in native cpp, but TSF is too complicate. It's not an easy work for dotnet developers.\r\n\r\nSo I just hope dotnet winforms could provide support for TSF. Just like the work be done in WPF core:\r\n- [UnsafeNativeMethodsTextServices.cs](https://github.com/dotnet/wpf/blob/ac9d1b7a6b0ee7c44fd2875a1174b820b3940619/src/Microsoft.DotNet.Wpf/src/Shared/MS/Win32/UnsafeNativeMethodsTextServices.cs)\r\n- [DefaultTextStore.cs](https://github.com/dotnet/wpf/blob/master/src/Microsoft.DotNet.Wpf/src/PresentationCore/System/Windows/Input/DefaultTextStore.cs)\r\n\r\nWPF core has everything for TSF.\r\n\r\n**Describe the solution you'd like and alternatives you've considered**\r\n<!--\r\n    A clear and concise description of what you want to happen. This includes:\r\n    - Description of what API need to be added or changed.\r\n    - Code that shows the surface area of the API.\r\n    - Code that shows real world scenarios, and how they would otherwise be handled.\r\n    - Details showing the usage/consumption of the proposed new API, and alternatives (e.g. not having this API).\r\n    - Any other context or screenshots about the feature request here.\r\n\r\n    :exclamation: Read https://github.com/dotnet/winforms/blob/master/Documentation/issue-guide.md for more details\r\n\r\n  -->\r\n\r\n- Add TSF API just like WPF core.\r\n- Provide an unified API to support both TSF and IMM32 to support all kind of Input Methods.\r\n\r\n**Will this feature affect UI controls?**\r\n<!--\r\n    Yes / No\r\n\r\n    If yes, describe the following:\r\n\r\n        - Will VS Designer need to support the feature? If yes, describe how you expect it to funсtion.\r\n        - What impact will it have on accessibility?\r\n        - Will this feature need to be localized or be localizable?\r\n  -->\r\n\r\nNo","Url":"https://github.com/dotnet/winforms/issues/3687","RelatedDescription":"Open issue \"No TSF support?\" (#3687)"},{"Id":"670188079","IsPullRequest":false,"CreatedAt":"2020-07-31T20:19:52","Actor":"cbrit","Number":"3686","RawContent":null,"Title":"TabPageCollection.Insert(int index, TabPage page) does not work properly, bug has been around for 15 years","State":"open","Body":"* .NET Core Version: \r\n.NET 5 Preview 7 and all past .NET versions since 2.0\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**Problem description:**\r\n\r\n`TabPageCollection.Insert()` is supposed to insert a `TabPage` at the provided index in a `TabControl`. However, for a _very_ long time, there has been a bug that prevents it from working unless you force the creation of the `TabControl.Handle` before attempting, like so:\r\n\r\n`IntPtr h = tabControl1.Handle;`\r\n\r\nThis was pointed out as the undocumented answer to this same bug being [posted about on msdn in 2005](https://social.msdn.microsoft.com/Forums/windows/en-US/5d10fd0c-1aa6-4092-922e-1fd7af979663/tabpagesinsert-bug?forum=winforms) and continues to behave this way in .NET 5.\r\n\r\nI believe the underlying issue is that the `TabControl` handle is not properly created in some situations but I don't know how that works under the hood.\r\n\r\nNOTE: I have been able to use `Insert()` inside of an event handler of a `TabControl`, presumably at the point the handle already exists.\r\n\r\n**Expected behavior:**\r\n\r\n`TabPage`s should be able to be inserted into `TabControl`s without forcing handle creation.\r\n\r\n**Minimal repro:**\r\n\r\n```\r\n    public partial class Form1 : Form\r\n    {\r\n        private TabControl TabControl { get; set; }\r\n\r\n        public Form1()\r\n        {\r\n            InitializeComponent();\r\n        }\r\n\r\n        public void InitializeComponent()\r\n        {\r\n            TabControl = new TabControl();\r\n            \r\n            var page1 = new TabPage();\r\n            var page2 = new TabPage();\r\n            var page3 = new TabPage();\r\n\r\n            page1.Text = \"First works\";\r\n            TabControl.TabPages.Add(page1);\r\n\r\n            page2.Text = \"Second fails\";\r\n            TabControl.TabPages.Insert(1, page2);\r\n\r\n            IntPtr h = TabControl.Handle;\r\n            page3.Text = \"Third works\";\r\n            TabControl.TabPages.Insert(1, page3);\r\n\r\n            Controls.Add(TabControl);\r\n        }\r\n    }\r\n```\r\n\r\nResulting window:\r\n![image](https://user-images.githubusercontent.com/23322838/89073962-0f39c280-d341-11ea-9e83-7c153b60649d.png)\r\n","Url":"https://github.com/dotnet/winforms/issues/3686","RelatedDescription":"Open issue \"TabPageCollection.Insert(int index, TabPage page) does not work properly, bug has been around for 15 years\" (#3686)"},{"Id":"669439382","IsPullRequest":false,"CreatedAt":"2020-07-31T05:51:26","Actor":"Olina-Zhang","Number":"3683","RawContent":null,"Title":"[Accessibility] An element of the given ControlType must support the Text pattern for PropertyGrid: Text tree items","State":"open","Body":"* .NET Core Version: \r\n5.0.100-rc.1.20379.16\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**Problem description:**\r\nAn element of the given ControlType must support the Text pattern for PropertyGrid: Text tree items\r\n\r\n**Minimal repro:**\r\n1. Extract following attached app and open it in VS.\r\n[WindowsFormsApp50.zip](https://github.com/dotnet/winforms/files/5005553/WindowsFormsApp50.zip)\r\n\r\n2. Build and run the project.\r\n3. Open Accessibility Insights For Windows tool, select and focus on PropertyGrid control\r\n\r\n**Actual behavior:**\r\nAn error is about PropertyGrid Text tree items: An element of the given ControlType must support the Text pattern.\r\n![image](https://user-images.githubusercontent.com/26474449/89008199-d5ff5380-d33c-11ea-9a75-d19cefa15b71.png)\r\n\r\n\r\n**Expected behavior:**\r\nNo error\r\n","Url":"https://github.com/dotnet/winforms/issues/3683","RelatedDescription":"Open issue \"[Accessibility] An element of the given ControlType must support the Text pattern for PropertyGrid: Text tree items\" (#3683)"},{"Id":"669392857","IsPullRequest":false,"CreatedAt":"2020-07-31T04:15:43","Actor":"Jessie-Zhang01","Number":"3682","RawContent":null,"Title":"[Accessibility] Keyboard shortcut key is unavailable to access the buttons(One Page, Two Page...)","State":"open","Body":"* .NET Core Version: \r\n.NET SDK 5.0.100-rc.1.20377.7\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**More Info:**\r\n\r\n1. This issue can also repro on Framework project.\r\n2. There is a similar bugs: [1156785 ](https://dev.azure.com/devdiv/DevDiv/_workitems/edit/1156785?src=WorkItemMention&src-action=artifact_link)in VSO.\r\n3. We can just use ‘Enter’ key enter to buttons(One Page, Two Page...).\r\n\r\n**Minimal repro:**\r\n1. Extract “[WindowsFormsApp3.zip](https://github.com/dotnet/winforms/files/5005021/WindowsFormsApp3.zip)” and open it in VS.\r\n2. Build and run the project.\r\n3. Using Tab key to navigate to Preview button, then press Enter key to show Print preview dialog.\r\n4. Check whether any shortcut key is provided to buttons(One Page, Two Page...) to access.\r\n\r\n**Expected behavior:**\r\nKeyboard shortcut key should be available to access the buttons(One Page, Two Page...).\r\n\r\n**Actual behavior:**\r\nKeyboard shortcut key is unavailable to access the buttons(One Page, Two Page...).\r\n","Url":"https://github.com/dotnet/winforms/issues/3682","RelatedDescription":"Open issue \"[Accessibility] Keyboard shortcut key is unavailable to access the buttons(One Page, Two Page...)\" (#3682)"},{"Id":"669343231","IsPullRequest":false,"CreatedAt":"2020-07-31T02:19:12","Actor":"Olina-Zhang","Number":"3680","RawContent":null,"Title":"[Accessibility] The Name property must not include the element's control type for toolStripProgressBar","State":"open","Body":"* .NET Core Version: \r\n5.0.100-rc.1.20379.16\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n Yes\r\n* Problem description:\r\nName property must not include the element's control type for toolStripProgressBar in ToolStrip and StatusStrip controls\r\n\r\n**Minimal repro:**\r\n1. Extract following attached app and open it in VS.\r\n[WindowsFormsApp48.zip](https://github.com/dotnet/winforms/files/5004631/WindowsFormsApp48.zip)\r\n2. Build and run the project.\r\n3. Open Accessibility Insights For Windows tool, select focus on form and view result.\r\n\r\n**Actual behavior:**\r\nGet 2 errors for toolStripProgressBar in ToolStrip and StatusStrip controls\r\n![image](https://user-images.githubusercontent.com/26474449/88992833-ebfa1d80-d316-11ea-9be8-20f52d517b25.png)\r\n![image](https://user-images.githubusercontent.com/26474449/88992949-311e4f80-d317-11ea-907f-36e5586bdf70.png)\r\n\r\n**Expected behavior:**\r\nNo error","Url":"https://github.com/dotnet/winforms/issues/3680","RelatedDescription":"Open issue \"[Accessibility] The Name property must not include the element's control type for toolStripProgressBar\" (#3680)"},{"Id":"669329966","IsPullRequest":true,"CreatedAt":"2020-07-31T02:10:19","Actor":"Tanya-Solyanik","Number":"3679","RawContent":null,"Title":"Fixes #3663","State":"closed","Body":"Added accessible name property to ToolStrip combo box in the test app\r\n\r\nFixes #3663\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/3679)","Url":"https://github.com/dotnet/winforms/pull/3679","RelatedDescription":"Closed or merged PR \"Fixes #3663\" (#3679)"},{"Id":"669323211","IsPullRequest":false,"CreatedAt":"2020-07-31T01:29:57","Actor":"Tanya-Solyanik","Number":"3678","RawContent":null,"Title":"The PrintPreviewControl control have no dotted rectangle when using Keyboard focus on it","State":"open","Body":"Repro:\r\n1. create a core winforms application\r\n2. add a text box and a print preview control to a form\r\n3. run the application and TAB through the form\r\nresult: TAB key moves focus from the text box to the print preview control even though this control is not editable.\r\n\r\nLet's consider a comprehensive fix in Core 6.0 - \r\n1. set default value for TabStop property to false:\r\n```\r\n        [Browsable(false)]\r\n        [DefaultValue(false)]   << add this line\r\n        [EditorBrowsable(EditorBrowsableState.Never)]\r\n        new public bool TabStop\r\n        {\r\n            get => base.TabStop;\r\n            set => base.TabStop = value;\r\n        }\r\n```\r\n2. if the developer sets TabStop to true, we should draw the focus rectangle\r\n\r\n_Originally posted by @Tanya-Solyanik in https://github.com/dotnet/winforms/issues/3660#issuecomment-666847840_","Url":"https://github.com/dotnet/winforms/issues/3678","RelatedDescription":"Open issue \"The PrintPreviewControl control have no dotted rectangle when using Keyboard focus on it\" (#3678)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-08-08T05:30:54.2569694Z","RunDurationInMilliseconds":656}