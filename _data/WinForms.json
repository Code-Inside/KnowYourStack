{"Data":{"GitHub":{"Issues":[{"Id":"771584357","IsPullRequest":true,"CreatedAt":"2020-12-20T13:33:38","Actor":"dotnet-maestro[bot]","Number":"4399","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20201220.2\r\n- **Date Produced**: 12/20/2020 9:26 AM\r\n- **Commit**: 9277301b727bbf5d362656611a90bd36800d1935\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **System.CodeDom**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **System.Text.Json**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-alpha.1.20618.13 to 6.0.0-alpha.1.20620.2][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/6dd7b2d...9277301\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4399)","Url":"https://github.com/dotnet/winforms/pull/4399","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#4399)"},{"Id":"771582246","IsPullRequest":false,"CreatedAt":"2020-12-20T12:56:04","Actor":"clairernovotny","Number":"4398","RawContent":null,"Title":"Trouble matching StatusBar layout with StatusBarStrip controls","State":"open","Body":"Following up from twitter: https://twitter.com/clairernovotny/status/1340455330577330176\r\n\r\nI've been having trouble trying to fixi the sizing of the statusstrip labels. StatusBar was removed in .NET 3.x and the strip version's don't layout the same.\r\n\r\nTop: StatusBar\r\nBottom: strip... blank stuff isn't sized statically and setting autosize false doesn't work.\r\n\r\n![image](https://user-images.githubusercontent.com/1427284/102713719-41b86d80-4298-11eb-886f-c2ece0487252.png)\r\n\r\nThe idea is that the variable/fill-sized portion is on the left, and there are a few items that should be fixed-width that are aligned to the right. Some of those items have their text set to null/empty sometimes.\r\n\r\nIf I turn autosize off, then the item doesn't even show up.\r\n\r\nTo repro, clone https://github.com/RssBandit/RssBandit/\r\n\r\nThe relevant code is here: https://github.com/RssBandit/RssBandit/blob/main/source/RssBandit/WinGui/Forms/WinGUIMain.cs#L1223-L1273\r\n\r\nNote that the WinForms designer doesn't load.... so need to do this all by hand and run to test. Set the Package project as the startup and run that for testing.\r\n","Url":"https://github.com/dotnet/winforms/issues/4398","RelatedDescription":"Open issue \"Trouble matching StatusBar layout with StatusBarStrip controls\" (#4398)"},{"Id":"771573222","IsPullRequest":false,"CreatedAt":"2020-12-20T12:02:21","Actor":"xPaw","Number":"4397","RawContent":null,"Title":"[5.0.101] Published single file binary crashes on startup with 0x80070002","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n5.0.101\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n<!-- Yes / No -->\r\nNo\r\n\r\n**Problem description:**\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\nPublishing a single file binary produces a binary that just crashes on startup when launched from explorer. Launching cmd and then starting the exe from there, actually runs.\r\n\r\nNot publishing for single file also works correctly.\r\n\r\nThis worked on 5.0.0 release.\r\n\r\n```\r\nSystem.IO.FileNotFoundException\r\n\r\nThe system cannot find the file specified. (0x80070002)\r\n```\r\n\r\n**Expected behavior:**\r\nApp works\r\n\r\n**Minimal repro:**\r\n1. Clone https://github.com/SteamDatabase/ValveResourceFormat\r\n2. `cd GUI && dotnet publish`\r\n\r\nWe have builds on appveyor as well (GUI.zip) that are broken: https://ci.appveyor.com/project/xPaw/valveresourceformat/builds/36727211/artifacts\r\n\r\n---\r\n\r\nI created this issue in winforms because I suspect https://github.com/dotnet/winforms/pull/4177 could be the culprit. If not, could this be moved to runtime repo please.","Url":"https://github.com/dotnet/winforms/issues/4397","RelatedDescription":"Open issue \"[5.0.101] Published single file binary crashes on startup with 0x80070002\" (#4397)"},{"Id":"771540789","IsPullRequest":true,"CreatedAt":"2020-12-20T08:30:06","Actor":"gpetrou","Number":"4396","RawContent":null,"Title":"Enable nullability in Control.AmbientProperty, Control.Ime and Contro…","State":"open","Body":"…l.ThreadMethodEntry\r\n\r\n## Proposed changes\r\n\r\n- Enable nullability in Control.AmbientProperty, Control.Ime and Control.ThreadMethodEntry.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4396)","Url":"https://github.com/dotnet/winforms/pull/4396","RelatedDescription":"Open PR \"Enable nullability in Control.AmbientProperty, Control.Ime and Contro…\" (#4396)"},{"Id":"771378117","IsPullRequest":true,"CreatedAt":"2020-12-19T13:33:41","Actor":"dotnet-maestro[bot]","Number":"4395","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20201218.13\r\n- **Date Produced**: 12/19/2020 9:02 AM\r\n- **Commit**: 6dd7b2df5098a61514b13114cb5bd682dff5c71c\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **System.CodeDom**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **System.Text.Json**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-alpha.1.20618.2 to 6.0.0-alpha.1.20618.13][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/25be02c...6dd7b2d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4395)","Url":"https://github.com/dotnet/winforms/pull/4395","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#4395)"},{"Id":"770879473","IsPullRequest":true,"CreatedAt":"2020-12-18T13:37:12","Actor":"dotnet-maestro[bot]","Number":"4394","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20201218.2\r\n- **Date Produced**: 12/18/2020 11:47 AM\r\n- **Commit**: 25be02ca5554fe7d0f70583ea36db44fd825d986\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **System.CodeDom**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **System.Text.Json**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-alpha.1.20616.14 to 6.0.0-alpha.1.20618.2][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/be27e29...25be02c\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4394)","Url":"https://github.com/dotnet/winforms/pull/4394","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#4394)"},{"Id":"770869438","IsPullRequest":true,"CreatedAt":"2020-12-18T13:16:38","Actor":"dotnet-maestro[bot]","Number":"4393","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20201216.18\r\n- **Date Produced**: 12/17/2020 1:25 AM\r\n- **Commit**: 26b005488dd7ddf6356873cb01a7b763a82a9622\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.20615.4 to 6.0.0-beta.20616.18][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.20615.4 to 6.0.0-beta.20616.18][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.20615.4 to 6.0.0-beta.20616.18][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.20615.4 to 6.0.0-beta.20616.18][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.20615.4 to 6.0.0-beta.20616.18][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/7d638bb...26b0054\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4393)","Url":"https://github.com/dotnet/winforms/pull/4393","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#4393)"},{"Id":"770773170","IsPullRequest":false,"CreatedAt":"2020-12-18T10:31:05","Actor":"vladimir-krestov","Number":"4392","RawContent":null,"Title":"ListBox ScroolIntoView implementation behavior is not consistent to native ListBox behavior","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: 6.0\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: No\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\n- `ListBox` `ScrollIntoView` implementation  is more complicates than it need to be - it scrolls an item to the bottom of a ListBox\r\n![1](https://user-images.githubusercontent.com/49272759/102604299-08b3b800-4135-11eb-9aed-81c97c695523.gif)\r\n\r\n\r\n**Expected behavior:**\r\n- `ListBox` should have the same behavior as in .NET Framework or Win32 - scroll an item to the top of a ListBox\r\n![2](https://user-images.githubusercontent.com/49272759/102604308-0baea880-4135-11eb-800d-cb89a5fcbb53.gif)\r\n\r\n\r\n\r\n**Minimal repro:**\r\n- Create a .NET 6.0 app\r\n- Add a ListBox to the app\r\n- Add some items to the ListBox (e.g. 10 items)\r\n- Set a size for the ListBox to see a part of the items and see a vertical scrollbar\r\n- Run the app and use Inspect to call ScrolIntoView method\r\n- Compare with .NET Framework behavior","Url":"https://github.com/dotnet/winforms/issues/4392","RelatedDescription":"Open issue \"ListBox ScroolIntoView implementation behavior is not consistent to native ListBox behavior\" (#4392)"},{"Id":"770494801","IsPullRequest":true,"CreatedAt":"2020-12-18T06:56:48","Actor":"paul1956","Number":"4389","RawContent":null,"Title":"Fix #4385 for VB and fixed constant name from Framework","State":"closed","Body":"Fixes #4385 for VB\r\n\r\n\r\n## Proposed changes\r\n\r\n- Change Not \"Is\" tp IsNot for VB\r\n- Ignore IDE1006 for 1 constant that came from Framework\r\n- This cleans up all Code Cleanup issues for VB\r\n\r\n## Customer Impact\r\n\r\n- Cleans up issue for VB Source, no impact on Binaries\r\n- \r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal added attribute and used equivalent comparison in VB that makes code easier to understand\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Runs existing test, this is more about IDE issues not runtime\r\n-  \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- N/A All existing test should see no impact\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4389)","Url":"https://github.com/dotnet/winforms/pull/4389","RelatedDescription":"Closed or merged PR \"Fix #4385 for VB and fixed constant name from Framework\" (#4389)"},{"Id":"770597727","IsPullRequest":false,"CreatedAt":"2020-12-18T06:12:24","Actor":"Zheng-Li01","Number":"4391","RawContent":null,"Title":"An exception pops up when setting the Combobox control's InteralHieght property value is true with Inspect tool","State":"open","Body":"* .NET Core Version: \r\n.Net sdk 6.0.0-alpha.1.20570.2.\r\n\r\n* More info:\r\n1. The issue also can reproduce on .Net SDK 6.0 & 5.0 & 3.1.\r\n2. The issue also can reproduce on Accessibility Insights tool.\r\n3. The issue can reproduce Combobox control's dropdownstyle is dropdown, dropdownlist, not reproduce simple dropdown style.\r\n4. The issue can't reproduce .NET Framework 4.8.\r\n5. The issue can't reproduce if not opening the Inspect or Accessibility Insights tool.\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Minimal repro:**\r\n1. Opened the application.[[6.0]ComboBox_ScrollIntoView (2).zip](https://github.com/dotnet/winforms/files/5713963/6.0.ComboBox_ScrollIntoView.2.zip)\r\n2. Build and run it.\r\n3. Open the Inspect or Accessibility Insights tool.\r\n4. Checked the InteralHeight check box, and choose the items in the dropdown list.\r\n\r\n**Expected behavior:**\r\n[FraTesting1.zip](https://github.com/dotnet/winforms/files/5713981/FraTesting1.zip)\r\nNo exception pops up.\r\n![FraNewIssue](https://user-images.githubusercontent.com/38325459/102581058-c55c4800-413a-11eb-8fab-abd4066c39f2.gif)\r\n\r\n**Actual behavior:**\r\nAn exception pops up.\r\n![CoreNewIssue](https://user-images.githubusercontent.com/38325459/102581018-b1b0e180-413a-11eb-9362-46c5ec914b1b.gif)\r\n\r\n**Call Stack:**\r\n[CallStack.txt](https://github.com/dotnet/winforms/files/5713980/CallStack.txt)","Url":"https://github.com/dotnet/winforms/issues/4391","RelatedDescription":"Open issue \"An exception pops up when setting the Combobox control's InteralHieght property value is true with Inspect tool\" (#4391)"},{"Id":"770580628","IsPullRequest":false,"CreatedAt":"2020-12-18T05:31:02","Actor":"RussKie","Number":"4390","RawContent":null,"Title":"Do not create accessible objects until owner control is created","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently an accessibility object can be created before its owning control is materialised (i.e. have a valid `Handle`):\r\n```cs\r\n\r\n// .NET 5.0 sample\r\n\r\nvar button = new Button();                     // handle is not yet created\r\nbutton.AccessibilityObject.DoDefaultAction();  // accessible object is created\r\n\r\nform.Controls.Add(button);\r\nform.Show();                                   // button.Handle is created\r\n```\r\n\r\nSuch design places a lot of responsibility on SDK to constantly check and guard against accessing an owner control and its handle before their are fully created and live.\r\n \r\nA lot of work has been done in response to https://github.com/dotnet/winforms/issues/3062, which added a lot of code (e.g. https://github.com/dotnet/winforms/pull/3432), and has a perf impact (as negligible as it may be). However with the steady stream of accessibility-related work there is a significant overhead in implementing guards and rails against accidental handle access.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n**Describe the solution you'd like and alternatives you've considered**\r\n\r\nIt makes no sense to access an accessibility object before its owner is materialised, i.e. a non existent control can't be navigated to or inspected in any accessibility tools (e.g. Inspect or AI4Win).\r\n\r\nWe should consider the following:\r\n1. not creating an instance of accessibility object until its owner is fully materialised and has a valid `Handle`,\r\n2. removing all unnecessary null checks and handle checks in `ControlAccessibleObject` and its descendants\r\n","Url":"https://github.com/dotnet/winforms/issues/4390","RelatedDescription":"Open issue \"Do not create accessible objects until owner control is created\" (#4390)"},{"Id":"769672439","IsPullRequest":false,"CreatedAt":"2020-12-18T01:11:21","Actor":"vsfeedback","Number":"4381","RawContent":null,"Title":"strange appearance in text when Cell value start with number with text combination when Right-to-left enabled in DataGridView","State":"closed","Body":"_This issue has been moved from [a ticket on Developer Community](https://developercommunity2.visualstudio.com/t/strange-appearance-in-text-when-Cell-val/1289513)._\n\n---\n<p>Hi Team,<br><br>I have created a simple DataGrid sample contain cell values that start with numbers and text. in this case, applying the RightToLeft for DataGridView. its show strange appearance for Number start with text in cell value.<br> <br>RTL applying in DataGridView code snippet for your reference,</p><pre>dataGridView1.RightToLeft = RightToLeft.Yes;\ndataGridView1.DataSource = new ViewModel(). Orders; </pre><p></p><p>Replication procedure to reproduce the reported issue,<br><br>Step1: particular cell value set as Number start with text in DataGridViewDataSource. for example please refer to the below text,<br>Cell text like:<strong>&quot;</strong><strong>4 number and other text&quot;</strong><br><strong></strong><br>Step2: Run the Sample<br><br>Step3: The number starts with text cell value is a strange appearance. Please refer to the below screenshot for your reference,</p><p><a href=\"https://developercommunity.visualstudio.com/storage/attachments/166561-strangeappearancenumber.png\"> Image:166561-strangeappearancenumber.png</a></p><p>The cell value starts with number and text when enabling RTL mode in DataGridView should properly show as<strong> </strong><b>&quot;4 number and other text&quot;<br><br>Sample Link: </b><a href=\"https://developercommunity.visualstudio.com/storage/attachments/166562-sample.zip\">sample.zip</a></p><p>Can you please check and update the details as soon as possible?</p> <p>Regards,<br>Vijayarasan</p><p></p>\n\n---\n### Original Comments\n\n#### Feedback Bot on 12/17/2020, 02:26 PM: \n\n<p>We have directed your feedback to the appropriate engineering team for further evaluation. The team will review the feedback and notify you about the next steps.</p>\n\n\n---\n### Original Solutions\n(no solutions)","Url":"https://github.com/dotnet/winforms/issues/4381","RelatedDescription":"Closed issue \"strange appearance in text when Cell value start with number with text combination when Right-to-left enabled in DataGridView\" (#4381)"},{"Id":"769770127","IsPullRequest":true,"CreatedAt":"2020-12-17T23:47:09","Actor":"gpetrou","Number":"4385","RawContent":null,"Title":"Use 'is not null' in some System.Windows.Forms files","State":"closed","Body":"Contributes to https://github.com/dotnet/winforms/issues/3459\r\n\r\n## Proposed changes\r\n\r\n- Use 'is not null' in some System.Windows.Forms files.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4385)","Url":"https://github.com/dotnet/winforms/pull/4385","RelatedDescription":"Closed or merged PR \"Use 'is not null' in some System.Windows.Forms files\" (#4385)"},{"Id":"769722271","IsPullRequest":true,"CreatedAt":"2020-12-17T23:46:53","Actor":"gpetrou","Number":"4384","RawContent":null,"Title":"Enable nullability in ConvertEventArgs and ListControlConvertEventArgs","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ConvertEventArgs and ListControlConvertEventArgs.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4384)","Url":"https://github.com/dotnet/winforms/pull/4384","RelatedDescription":"Closed or merged PR \"Enable nullability in ConvertEventArgs and ListControlConvertEventArgs\" (#4384)"},{"Id":"769715295","IsPullRequest":true,"CreatedAt":"2020-12-17T23:04:40","Actor":"gpetrou","Number":"4383","RawContent":null,"Title":"Enable nullability in Control.ControlVersionInfo, Control.FontHandleW…","State":"closed","Body":"…rapper and Control.MetafileDCWrapper\r\n\r\n## Proposed changes\r\n\r\n- Enable nullability in Control.ControlVersionInfo, Control.FontHandleWrapper and Control.MetafileDCWrapper.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4383)","Url":"https://github.com/dotnet/winforms/pull/4383","RelatedDescription":"Closed or merged PR \"Enable nullability in Control.ControlVersionInfo, Control.FontHandleW…\" (#4383)"},{"Id":"769707325","IsPullRequest":true,"CreatedAt":"2020-12-17T23:00:39","Actor":"gpetrou","Number":"4382","RawContent":null,"Title":"Enable nullability in CompatibleIComparer and WeakHashtable","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in CompatibleIComparer and WeakHashtable.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4382)","Url":"https://github.com/dotnet/winforms/pull/4382","RelatedDescription":"Closed or merged PR \"Enable nullability in CompatibleIComparer and WeakHashtable\" (#4382)"},{"Id":"770133643","IsPullRequest":false,"CreatedAt":"2020-12-17T15:17:39","Actor":"nkastratovic","Number":"4388","RawContent":null,"Title":"ControlBox (maximize, minimize, and close button)  is not visible on MainMenu when maximizing child form","State":"open","Body":"* .NET Core Version: \r\n.NET 5.0.1\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\n No\r\n\r\n**Problem description:**\r\n\r\nI have windows desktop application where the main form is MdiParent form with IsMdiContainer = true, and MainMenuStrip = MenuStrip.\r\nWhen I open the child form and maximize it, the ControlBox (maximize, minimize, and close button) on the right side of MainForm-MainMenu is not visible, only when I move cursor on this part of MainMenu it shows very thin buttons.\r\nWith .Net Code 3.1 and the same settings, my application doesn’t have this problem, ControlBox is visible in MainMenu and normal size.\r\nAlso, this works with .Net Framework 4.8.\r\n\r\n![dotNet3 1](https://user-images.githubusercontent.com/22772163/102506385-5374f780-4083-11eb-9477-5a93760844ab.PNG)\r\n![dotNet5 0](https://user-images.githubusercontent.com/22772163/102506400-5839ab80-4083-11eb-985b-87600d7c1d71.png)\r\n\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/4388","RelatedDescription":"Open issue \"ControlBox (maximize, minimize, and close button)  is not visible on MainMenu when maximizing child form\" (#4388)"},{"Id":"770016899","IsPullRequest":true,"CreatedAt":"2020-12-17T13:46:40","Actor":"dotnet-maestro[bot]","Number":"4387","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20201216.14\r\n- **Date Produced**: 12/17/2020 8:00 AM\r\n- **Commit**: be27e294a12514638bb5337c7fe5cc72d93a443a\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **System.CodeDom**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **System.Text.Json**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-alpha.1.20616.2 to 6.0.0-alpha.1.20616.14][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/00199c5...be27e29\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4387)","Url":"https://github.com/dotnet/winforms/pull/4387","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#4387)"},{"Id":"770000447","IsPullRequest":true,"CreatedAt":"2020-12-17T13:31:52","Actor":"dotnet-maestro[bot]","Number":"4386","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20201215.4\r\n- **Date Produced**: 12/15/2020 8:39 PM\r\n- **Commit**: 7d638bb082f374f7c8ddbada79f757662df4a246\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.20614.8 to 6.0.0-beta.20615.4][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.20614.8 to 6.0.0-beta.20615.4][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.20614.8 to 6.0.0-beta.20615.4][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.20614.8 to 6.0.0-beta.20615.4][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.20614.8 to 6.0.0-beta.20615.4][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/b2d5bf0...7d638bb\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4386)","Url":"https://github.com/dotnet/winforms/pull/4386","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#4386)"},{"Id":"768853748","IsPullRequest":true,"CreatedAt":"2020-12-16T16:27:56","Actor":"dotnet-maestro[bot]","Number":"4379","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20201216.2\r\n- **Date Produced**: 12/16/2020 10:30 AM\r\n- **Commit**: 00199c56fbd7fc698057657f6df654dfb8b2a99f\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **System.CodeDom**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **System.Text.Json**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-alpha.1.20614.10 to 6.0.0-alpha.1.20616.2][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/c64861b...00199c5\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4379)","Url":"https://github.com/dotnet/winforms/pull/4379","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#4379)"},{"Id":"769003293","IsPullRequest":true,"CreatedAt":"2020-12-16T15:31:29","Actor":"SergeySmirnov-Akvelon","Number":"4380","RawContent":null,"Title":"Fixing issue with showing of the bounding rectangle for invisible items in ComboBox","State":"open","Body":"Fixes #4372\r\n\r\n## Proposed changes\r\n- Added logic that checks that the drop down list is expanded and the item is in the visible area\r\n- Added logic for supporting of the \"OffScreen\" state\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\nCASE 1:\r\nBefore:\r\n![Issue-4372-case1](https://user-images.githubusercontent.com/23376742/102372341-29163200-3fd0-11eb-801c-0c3256a82d96.gif)\r\nAfter:\r\n![Issue-4372-case1-fixed](https://user-images.githubusercontent.com/23376742/102372357-2d424f80-3fd0-11eb-8b51-103750c91252.gif)\r\n\r\nCASE 2:\r\nBefore:\r\n![Issue-4372-case2](https://user-images.githubusercontent.com/23376742/102372466-43e8a680-3fd0-11eb-8ca4-08272014624b.gif)\r\nAfter:\r\n![Issue-4372-case2-fixed](https://user-images.githubusercontent.com/23376742/102372504-4ea33b80-3fd0-11eb-8309-923fd4b9cbbb.gif)\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n-  Manually\r\n- Unit tests\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .NET Core 5.0.100-rc.2.20479.15\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4380)","Url":"https://github.com/dotnet/winforms/pull/4380","RelatedDescription":"Open PR \"Fixing issue with showing of the bounding rectangle for invisible items in ComboBox\" (#4380)"},{"Id":"768841833","IsPullRequest":true,"CreatedAt":"2020-12-16T13:21:44","Actor":"dotnet-maestro[bot]","Number":"4378","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20201214.8\r\n- **Date Produced**: 12/15/2020 5:22 AM\r\n- **Commit**: b2d5bf0342fa65d70ed2c3ddbdb3841d7ca0b382\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.20611.1 to 6.0.0-beta.20614.8][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.20611.1 to 6.0.0-beta.20614.8][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.20611.1 to 6.0.0-beta.20614.8][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.20611.1 to 6.0.0-beta.20614.8][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.20611.1 to 6.0.0-beta.20614.8][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/4e8e7e7...b2d5bf0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4378)","Url":"https://github.com/dotnet/winforms/pull/4378","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#4378)"},{"Id":"768835073","IsPullRequest":true,"CreatedAt":"2020-12-16T12:54:33","Actor":"SergeySmirnov-Akvelon","Number":"4377","RawContent":null,"Title":"Fix \"MaxDropDownItems\" property for ComboBox in the DataGridView","State":"open","Body":"Fixes #4373\r\n\r\n\r\n## Proposed changes\r\n- The issue is reproduced because \"MaxDropDownItems\" property does not work when the \"IntegralHeight\" flag has \"True\" value. As a workaround, the user can update the \"IntegralHeight\" flag themselves for the usual ComboBox and ToolStripComboBox, but the user does not have access to this flag in the DataGridViewComboBoxColumn and DataGridViewComboBoxCell. As a result, this property becomes useless for the ComboBoxes in the DataGridView. As a fix, we suggest to set \"IntegralHeight\" flag to \"False\" when the user updates \"MaxDropDownItems\" property of the DataGridViewComboBoxColumn or DataGridViewComboBoxCell. \r\n\r\n## Customer Impact\r\nThe behavior of the DataGridViewComboboxColumn, which has a \"4\" value in the \"MaxDropDownItems\" property:\r\nBefore:\r\n![issue-4373-beforefix](https://user-images.githubusercontent.com/23376742/102586088-8e763a00-411a-11eb-9e35-f275807f4ede.png)\r\nAfter:\r\n![issue-4373-afterfix](https://user-images.githubusercontent.com/23376742/102586114-97ffa200-411a-11eb-8c4a-265788f8484d.png)\r\n\r\n\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- Manual\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .NET Core 5.0.100-rc.2.20479.15\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4377)","Url":"https://github.com/dotnet/winforms/pull/4377","RelatedDescription":"Open PR \"Fix \"MaxDropDownItems\" property for ComboBox in the DataGridView\" (#4377)"},{"Id":"768607725","IsPullRequest":false,"CreatedAt":"2020-12-16T09:04:27","Actor":"Zheng-Li01","Number":"4375","RawContent":null,"Title":"[Accessibility] when using up/down arrow or mouse goes through the comboBox list items, it switches to entire 'CB1' list node every time obviously in inspect tool","State":"open","Body":"* .NET Core Version: \r\n.Net SDK 6.0.100-alpha.1.20615.5\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes \r\n\r\n* More info\r\n1.The issue can repro ComboBox, DataGridView ComboBox, ToolStripComboBox controls\r\n2.The issue can reproduce on .Net SDK 6.0, 5.0 & 3.1.\r\n3.The issue can reproduce .on NET 4.8, but can't reproduce on 4.7.2.\r\n4.The issue can reproduce on all dropdownstyles: DropDown, DropDownList, Simple.\r\n5.The issue can't reproduce ListBox & CheckedListBox controls.\r\n\r\n**Problem description:**\r\nIn inspect, when using up/down arrow or mouse goes through the comboBox list items, it switches to entire 'CB1' list node every time obviously\r\n\r\n**Minimal repro:**\r\n1. Extract the attached application([CoreTesting4.zip](https://github.com/dotnet/winforms/files/5701462/CoreTesting4.zip)), then build & run it.\r\n2. Open the Inspect tool.\r\n3. Go through the list items of comboBox by using up/down arrow or mouse.\r\n\r\n**Expected behavior:**\r\nOnly focus on the list items when  using up/down arrow or mouse goes through the comboBox list items.\r\n\r\n**Actual behavior:**\r\nwhen using up/down arrow or mouse goes through the comboBox list items, it switches to entire 'CB1' list node every time obviously in inspect tool.\r\n![NewIssue](https://user-images.githubusercontent.com/38325459/102327280-75f20c80-3fc0-11eb-9a61-ed46df2e04b1.gif)","Url":"https://github.com/dotnet/winforms/issues/4375","RelatedDescription":"Open issue \"[Accessibility] when using up/down arrow or mouse goes through the comboBox list items, it switches to entire 'CB1' list node every time obviously in inspect tool\" (#4375)"},{"Id":"767581436","IsPullRequest":true,"CreatedAt":"2020-12-16T01:57:10","Actor":"dotnet-maestro[bot]","Number":"4371","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20201214.10\r\n- **Date Produced**: 12/15/2020 8:14 AM\r\n- **Commit**: c64861b3bb0b3e31f70aabee875ded8cfd4dbaf7\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **System.CodeDom**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **System.Text.Json**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.6.0**: [from 6.0.0-alpha.1.20612.4 to 6.0.0-alpha.1.20614.10][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/60b6af1...c64861b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4371)","Url":"https://github.com/dotnet/winforms/pull/4371","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#4371)"},{"Id":"767869756","IsPullRequest":true,"CreatedAt":"2020-12-15T17:24:34","Actor":"tbolon","Number":"4374","RawContent":null,"Title":"Fix Enabled incorrect draw state for DateTimePicker","State":"open","Body":"Fixes #3533\r\n\r\n## Proposed changes\r\n\r\n- override OnEnabledChanged() to force handle recreation\r\n\r\n## Customer Impact\r\n\r\n- minimal: handle recreation is already used in other cases\r\n- will certainly have a performance impact if controls are enabled/disabled frequently\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- (TODO)\r\n\r\n## Screenshots\r\n\r\n### Before\r\n\r\n(TODO)\r\n\r\n### After\r\n\r\n(TODO)\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- manual testing\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- TODO\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4374)","Url":"https://github.com/dotnet/winforms/pull/4374","RelatedDescription":"Open PR \"Fix Enabled incorrect draw state for DateTimePicker\" (#4374)"},{"Id":"767661661","IsPullRequest":false,"CreatedAt":"2020-12-15T14:40:22","Actor":"SergeySmirnov-Akvelon","Number":"4373","RawContent":null,"Title":"ComboBox in the DataGridView does not respect \"MaxDropDownItems\" property","State":"open","Body":"Have you experienced this same bug with .NET Framework?:\r\n- Yes\r\n\r\n**Repro steps:**\r\n1. Сreate a ComboBox with 5 options\r\n2. Set DropDownStyle = DropDown or DropDownList\r\n3. Set MaxDropDownItems = 3\r\n4. Run application\r\n\r\n**Actual:**\r\nAll options are displayed. Vertical scrollbar is not displayed.\r\n![Issue-4373-actual](https://user-images.githubusercontent.com/23376742/102229609-0e26bd80-3efd-11eb-9a4f-7c4edf208c9c.png)\r\n\r\n**Expected:**\r\nOnly three options should be displayed in the visible area. Vertical scrollbar should be displayed.\r\n![Issue-4373-expected](https://user-images.githubusercontent.com/23376742/102229629-14b53500-3efd-11eb-82b9-74736a6f9b4e.png)\r\n\r\n**Note:**\r\nThe issue is reproduced for the ComboBox in the DataGridView","Url":"https://github.com/dotnet/winforms/issues/4373","RelatedDescription":"Open issue \"ComboBox in the DataGridView does not respect \"MaxDropDownItems\" property\" (#4373)"},{"Id":"767596754","IsPullRequest":false,"CreatedAt":"2020-12-15T13:32:05","Actor":"SergeySmirnov-Akvelon","Number":"4372","RawContent":null,"Title":"Bounding rectangle is displayed for invisible items in ComboBox","State":"open","Body":"Have you experienced this same bug with .NET Framework?:\r\n- Yes\r\n\r\n**Repro steps:**\r\nCASE 1:\r\n1. Сreate a ComboBox with 10 options\r\n2. Set DropDownStyle = Simple\r\n3. Set Height = 150\r\n4. Run application\r\n5. Select an item in the Inspect that is invisible in the ComboBox\r\n![Issue-4372-case1](https://user-images.githubusercontent.com/23376742/102221998-e848eb00-3ef3-11eb-84ff-c936a7c9f9fd.gif)\r\n\r\nCASE 2:\r\n1. Сreate a ComboBox with several options\r\n2. Set DropDownStyle = DropDown or DropDownList\r\n3. Run application\r\n4. Expand drop down list\r\n5. Select an item in the Inspect\r\n![Issue-4372-case2](https://user-images.githubusercontent.com/23376742/102222029-f0a12600-3ef3-11eb-9208-d4c3b378b558.gif)\r\n\r\n**Actual:**\r\nBounding rectangle is displayed for invisible items\r\n\r\n**Expected:**\r\nBounding rectangle should not be displayed for invisible items\r\n\r\n**Note:**\r\nThe issue is reproduced for the ComboBox in the DataGridView","Url":"https://github.com/dotnet/winforms/issues/4372","RelatedDescription":"Open issue \"Bounding rectangle is displayed for invisible items in ComboBox\" (#4372)"},{"Id":"767469986","IsPullRequest":false,"CreatedAt":"2020-12-15T11:05:16","Actor":"arknu","Number":"4370","RawContent":null,"Title":"NullReferenceException when instiating UserControl as ActiveX Object","State":"open","Body":"* .NET Core Version: 5.0\r\n\r\n* Have you experienced this same bug with .NET Framework?: No\r\n\r\n**Problem description:**\r\nI am experimenting with doing Office Addins without VSTO and using .NET 5. So far, I have succesfully manged to add ribbon buttons and I'm now working on a custom TaskPane, hosting a Winforms UserControl.\r\n\r\nSo far, so good. However, when instantiating the UserControl, an exception is thrown here: https://github.com/dotnet/winforms/blob/cb03d37fe73fb178d3c3827ad895bb3e7c50fe4c/src/System.Windows.Forms/src/System/Windows/Forms/Control.ActiveXImpl.cs#L841\r\n\r\n_inPlaceUiWindow is null here and there is no check for that case.\r\n\r\nComparing to .NET Framework 4.8 reference source (https://referencesource.microsoft.com/#System.Windows.Forms/winforms/Managed/System/WinForms/Control.cs,17065), the implementation is different and I suspect that a regression has snuck in.\r\n\r\n\r\n**Expected behavior:**\r\nNo NullReferenceException should be thrown.\r\n\r\n**Minimal repro:**\r\nYou can download the project here: https://1drv.ms/u/s!AkwgkpetCvCpr4JeJeZfCGlKlHs4qA?e=PeB0So\r\nYou need to manually run `regsvr32 OutlookAddinNet5.comhost.dll` in the bin folder and register the addin in outlook:\r\n\r\n```\r\nWindows Registry Editor Version 5.00\r\n\r\n[HKEY_CURRENT_USER\\SOFTWARE\\Microsoft\\Office\\Outlook\\Addins\\OutlookAddinNet5]\r\n\"CommandLineSafe\"=dword:00000001\r\n\"Description\"=\"OutlookAddinNet5 description\"\r\n\"FirendlyName\"=\"OutlookAddinNet5 name\"\r\n\"LoadBehavior\"=dword:00000003\r\n\r\n```\r\n\r\nThen Open Outlook and click the [2] button added to the ribbon.","Url":"https://github.com/dotnet/winforms/issues/4370","RelatedDescription":"Open issue \"NullReferenceException when instiating UserControl as ActiveX Object\" (#4370)"},{"Id":"767426950","IsPullRequest":true,"CreatedAt":"2020-12-15T10:20:11","Actor":"SergeySmirnov-Akvelon","Number":"4368","RawContent":null,"Title":" Fixing position of bounding rectangle for ComboBox items when drop down shows a scrollbar (port to 5.0)","State":"open","Body":"Fixes #4323\r\nBased on changes from #4354\r\n\r\n## Proposed changes\r\n- Added logic that makes an index shift, which helps to draw a bounding rectangle with the correct position \r\n\r\n## Customer Impact\r\nBefore:\r\n![Issue-4354-beforefix](https://user-images.githubusercontent.com/23376742/101778060-66784c80-3b04-11eb-95ff-f6cc42ac3638.gif)\r\n\r\nAfter:\r\n![Issue-4354-afterfix](https://user-images.githubusercontent.com/23376742/101778079-6c6e2d80-3b04-11eb-82de-6f9175c4c32d.gif)\r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- Manually\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n- Inspector\r\n- Accessibility Insights\r\n \r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .NET Core 5.0.100-rc.2.20479.15\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4368)","Url":"https://github.com/dotnet/winforms/pull/4368","RelatedDescription":"Open PR \" Fixing position of bounding rectangle for ComboBox items when drop down shows a scrollbar (port to 5.0)\" (#4368)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-12-21T05:30:47.1695824Z","RunDurationInMilliseconds":643}