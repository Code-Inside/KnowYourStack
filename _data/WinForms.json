{"Data":{"GitHub":{"Issues":[{"Id":"727754195","IsPullRequest":true,"CreatedAt":"2020-10-26T18:54:02","Actor":"JeremyKuhne","Number":"4149","RawContent":null,"Title":"Fix Application.EnableVisualStyles in single file publishing mode","State":"closed","Body":"Application.EnableVisualStyles gives Windows a manifest that enables the v6 common controls. We normally pull this manifest from a native resource in System.Windows.Forms.dll. In single file mode there is no \"dll\" to load from so this feature was not working as intended.\r\n\r\nIn the case where we can't get a Win32 HMODULE we now fall back to pulling the manifest from a managed resource and dumping it to the temp folder.\r\n\r\nMake ACTCTXW blittable.\r\n\r\nFixes #4145\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4149)","Url":"https://github.com/dotnet/winforms/pull/4149","RelatedDescription":"Closed or merged PR \"Fix Application.EnableVisualStyles in single file publishing mode\" (#4149)"},{"Id":"726763394","IsPullRequest":false,"CreatedAt":"2020-10-26T18:54:02","Actor":"marknn3","Number":"4145","RawContent":null,"Title":"Visual Styles not enabled when app published as 'Self-contained' + 'Produce Single File'","State":"closed","Body":"* .NET Core Version: \r\n5.0.100-rc.2.20479.15\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\nApplication.EnableVisualStyles() does not enable Visual Styles when the application is published as 'Self-contained' + 'Produce Single File'.\r\n\r\nThe probable root cause is that ```typeof(Application).Assembly.Location``` returns an empty string for this scenario on .NET 5.\r\nNote that on .NET Core 3.1 it returns a temporary file location.\r\n\r\n\r\n**Minimal repro:**\r\nCreate simplest WinForms .NET 5 App.\r\nIn Form1 ctor add following sample code to show the result:\r\n```Text = \"UseVisualStyles=\" + Application.UseVisualStyles.ToString() + \"; \" + typeof(Application).Assembly.Location;```\r\n\r\nPublish app:\r\n- Target Framework: net5.0-windows\r\n- Deployment mode: Self-contained\r\n- Target Runtime: win-x64\r\n- File publish options: Produce single file","Url":"https://github.com/dotnet/winforms/issues/4145","RelatedDescription":"Closed issue \"Visual Styles not enabled when app published as 'Self-contained' + 'Produce Single File'\" (#4145)"},{"Id":"729613473","IsPullRequest":true,"CreatedAt":"2020-10-26T15:04:50","Actor":"dotnet-maestro[bot]","Number":"4160","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20201025.3\r\n- **Date Produced**: 10/26/2020 5:56 AM\r\n- **Commit**: 693c1f05188330e270b01a6bce8ad22ab7b33f23\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **System.CodeDom**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **Microsoft.NETCore.App**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **System.Text.Json**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-alpha.1.20522.9 to 6.0.0-alpha.1.20525.3][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/eebeb86...693c1f0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4160)","Url":"https://github.com/dotnet/winforms/pull/4160","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#4160)"},{"Id":"729592744","IsPullRequest":true,"CreatedAt":"2020-10-26T14:25:03","Actor":"dotnet-maestro[bot]","Number":"4159","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20201022.2\r\n- **Date Produced**: 10/22/2020 8:51 PM\r\n- **Commit**: c262e0121edb7df890528bb61589d4b6e440a1f6\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.20520.8 to 6.0.0-beta.20522.2][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.20520.8 to 6.0.0-beta.20522.2][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.20520.8 to 6.0.0-beta.20522.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.20520.8 to 6.0.0-beta.20522.2][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.20520.8 to 6.0.0-beta.20522.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/7fbf2a7...c262e01\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4159)","Url":"https://github.com/dotnet/winforms/pull/4159","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#4159)"},{"Id":"729499612","IsPullRequest":false,"CreatedAt":"2020-10-26T11:55:41","Actor":"SergeySmirnov-Akvelon","Number":"4158","RawContent":null,"Title":"Redrawing doesn't work immediately when user clicks on checkboxes of items of ListView that is in virtual mode.","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n.NET Core Version:\r\n* .Net SDK 5.0.100-rc.2.20479.15\r\n* .Net SDK 3.1.7\r\n\r\nHave you experienced this same bug with .NET Framework?: \r\n* Yes\r\n\r\n**Minimal repro:**\r\n\r\n1. Create application with ListView that is in virtual mode.\r\n2. Enable checkboxes and add several items.\r\n3. Or use attached project ([ListViewVirtualMode.zip](https://github.com/dotnet/winforms/files/5438564/ListViewVirtualMode.zip))\r\n4. Run application\r\n5. Execute double click on any checkbox.\r\n![listview-redrawing](https://user-images.githubusercontent.com/23376742/97169522-44687c00-179b-11eb-9ca7-c9e12bda2865.gif)\r\n\r\n**Actaul:**\r\nCheckbox state is not updated.\r\n\r\n**Expected:**\r\nCheckbox state should be updated.\r\n\r\n**Note:**\r\nIf we enable checkboxes for an items in virtual mode (mouse click and \"space\" button), the elements are also not redrawn immediately. Moreover, we think that adding functionality that allows changing the checkbox value of ListView that is in virtual mode can create additional problems for the user. ListView in virtual mode can be mapped to DB data and thus the user gets the opportunity to edit this data what was not originally planned. We consider that it is safer if the user himself implements his own behavior for this case.\r\n\r\nI found that user can imitate check/uncheck logic for ListView that is in virtual mode using the following code:\r\n```\r\n// Updating the \"Checked\" property by \"Space\" button\r\nprivate void ListView1_KeyPress(object sender, KeyPressEventArgs e)\r\n{\r\n    if (Char.IsWhiteSpace(e.KeyChar))\r\n    {\r\n        listView1.FocusedItem.Checked = !listView1.FocusedItem.Checked;\r\n        listView1.Invalidate();\r\n    }            \r\n}\r\n\r\n// Updating the \"Checked\" property by mouse click\r\nprivate void ListView1_Click(object sender, EventArgs e)\r\n{\r\n    Point mousePosition = listView1.PointToClient(Control.MousePosition);\r\n    ListViewHitTestInfo hit = listView1.HitTest(mousePosition);\r\n    if (hit.Location == ListViewHitTestLocations.StateImage)\r\n    {\r\n        hit.Item.Checked = !hit.Item.Checked;\r\n        listView1.Invalidate();\r\n    }                      \r\n}\r\n```\r\n\r\nUnfortunately, updating of \"Checked\" property doesn't trigger \"onItemCheck\" and \"onItemChecked\" events (although these events are called when ListView is in non-virtual mode)\r\n","Url":"https://github.com/dotnet/winforms/issues/4158","RelatedDescription":"Open issue \"Redrawing doesn't work immediately when user clicks on checkboxes of items of ListView that is in virtual mode.\" (#4158)"},{"Id":"729475475","IsPullRequest":false,"CreatedAt":"2020-10-26T11:17:21","Actor":"SergeySmirnov-Akvelon","Number":"4157","RawContent":null,"Title":"StackOverflowException is possible when getting the AccessibleName for Combobox.","State":"open","Body":".NET Core Version: \r\n- .Net SDK 5.0.100-rc.2.20479.15\r\n\r\n**Problem description:**\r\nThe \"ComboBox.ComboBoxChildDropDownButtonUiaProvider\" class uses \"get_accNameInternal\" method for getting of \"Name\" property. \r\n```\r\ninternal virtual string? get_accNameInternal(object childID)\r\n{\r\n    if (IsClientObject)\r\n    {\r\n        ValidateChildID(ref childID);\r\n\r\n        Debug.WriteLineIf(CompModSwitches.MSAA.TraceInfo, \"AccessibleObject.get_accName: this = \" + ToString() +\r\n            \", childID = \" + childID.ToString());\r\n\r\n        // Return the name property if available\r\n        if (childID.Equals(NativeMethods.CHILDID_SELF))\r\n        {\r\n            return Name;\r\n        }\r\n\r\n        // If we have an accessible object collection, get the appropriate child\r\n        AccessibleObject? child = GetAccessibleChild(childID);\r\n        if (child != null)\r\n        {\r\n            return child.Name;\r\n        }\r\n    }\r\n\r\n    string? retval = systemIAccessible.get_accName(childID);\r\n\r\n    if (IsClientObject)\r\n    {\r\n        if (string.IsNullOrEmpty(retval))\r\n        {\r\n            // Name the child after its parent\r\n            retval = Name;\r\n        }\r\n    }\r\n\r\n    return retval;\r\n}\r\n```\r\n\r\nThis method in several branches uses the \"Name\" property that leads to a new attempt to get \"ComboBox.ComboBoxChildDropDownButtonUiaProvider.Name\" property and a new call of \"get_accNameInternal\" method. As a result, we can get a StackOverflowException.","Url":"https://github.com/dotnet/winforms/issues/4157","RelatedDescription":"Open issue \"StackOverflowException is possible when getting the AccessibleName for Combobox.\" (#4157)"},{"Id":"729426610","IsPullRequest":false,"CreatedAt":"2020-10-26T10:06:30","Actor":"SergeySmirnov-Akvelon","Number":"4156","RawContent":null,"Title":"Double click allows to check item in the ListView that is in virtual mode","State":"open","Body":".NET Core Version: \r\n- .Net SDK 5.0.100-rc.2.20479.15\r\n- .Net SDK 3.1.7\r\n\r\nHave you experienced this same bug with .NET Framework?: \r\n- Yes\r\n\r\n**Minimal repro**\r\n1. Create application with textbox and ListView that is in virtual mode\r\n2. Enable Checkboxes and add items to ListView.\r\n3. Or use attached project ([ListViewVirtualMode.zip](https://github.com/dotnet/winforms/files/5438099/ListViewVirtualMode.zip))\r\n4. Run application\r\n5. Execute double click on checkbox of any item\r\n6. Switch the focus to the textbox and move the focus back to the ListView.\r\n![listview-doubleclick](https://user-images.githubusercontent.com/23376742/97159454-f5ffb100-178b-11eb-96c6-90bd4287f899.gif)\r\n\r\n\r\n**Actual behavior:**\r\nCheckbox changes state\r\n\r\n**Expected behavior:**\r\nCheckbox should not change state.\r\n\r\n**Note:**\r\nWe have additional validation of virtual mode for [mouse click](https://github.com/dotnet/winforms/blob/26ee7b5fea05516d1caa83b94995c54115c148a1/src/System.Windows.Forms/src/System/Windows/Forms/ListView.cs#L5813) and [\"space\" key](https://github.com/dotnet/winforms/blob/26ee7b5fea05516d1caa83b94995c54115c148a1/src/System.Windows.Forms/src/System/Windows/Forms/ListView.cs#L6587). Looks like we forgot to add a similar validation for double click","Url":"https://github.com/dotnet/winforms/issues/4156","RelatedDescription":"Open issue \"Double click allows to check item in the ListView that is in virtual mode\" (#4156)"},{"Id":"729382227","IsPullRequest":true,"CreatedAt":"2020-10-26T10:04:16","Actor":"Zintom","Number":"4155","RawContent":null,"Title":"Fixed spelling mistake in CONTRIBUTING.MD","State":"closed","Body":"Changed \"pease note\" to \"please note\".\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4155)","Url":"https://github.com/dotnet/winforms/pull/4155","RelatedDescription":"Closed or merged PR \"Fixed spelling mistake in CONTRIBUTING.MD\" (#4155)"},{"Id":"729131470","IsPullRequest":true,"CreatedAt":"2020-10-25T22:38:38","Actor":"eriawan","Number":"4154","RawContent":null,"Title":"Fix #3985 change net5.0 to net5.0-windows and net6.0 to net6.0-windows","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #3985 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Change the option of available TFM when creating new winforms project to use `net5.0-windows` or `net6.0-windows`\r\n- Also update the base csproj and vbproj files to be adjusted as `FrameworkParameter` and `TargetFrameworkOverride` according to the TFM, therefore there should be no `FrameworkParameter-windows` and `TargetFramework-windows` anymore\r\n- \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- During new project creation, we must always specify explicit `net5.0-windows` instead of `net5.0` and `net6.0-windows` instead of `net6.0`.\r\n- \r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal, as the new winforms project creation will always specify explicit `net5.0-windows` instead of `net5.0` and `net6.0-windows` instead of `net6.0`.\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4154)","Url":"https://github.com/dotnet/winforms/pull/4154","RelatedDescription":"Open PR \"Fix #3985 change net5.0 to net5.0-windows and net6.0 to net6.0-windows\" (#4154)"},{"Id":"728527722","IsPullRequest":true,"CreatedAt":"2020-10-24T12:34:49","Actor":"AdamYoblick","Number":"4153","RawContent":null,"Title":"remove unused agent pool variables","State":"closed","Body":"Remove unused agent pool variables so we only have to change them in one place\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4153)","Url":"https://github.com/dotnet/winforms/pull/4153","RelatedDescription":"Closed or merged PR \"remove unused agent pool variables\" (#4153)"},{"Id":"725011414","IsPullRequest":true,"CreatedAt":"2020-10-23T20:14:21","Actor":"AdamYoblick","Number":"4138","RawContent":null,"Title":"Consume intellisense from internal nuget package","State":"closed","Body":"This PR removes the download from Azure blob storage in favor of consuming the official package released by the docs team. It will enables us to easily rev versions for future releases without having to do any other manual steps.\r\n\r\nThis is based off of work in the runtime repo at https://github.com/dotnet/runtime/blob/688206b76481d00a61110d9f28218cb2bc58957c/eng/restore/docs.targets\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4138)","Url":"https://github.com/dotnet/winforms/pull/4138","RelatedDescription":"Closed or merged PR \"Consume intellisense from internal nuget package\" (#4138)"},{"Id":"728290178","IsPullRequest":true,"CreatedAt":"2020-10-23T15:30:46","Actor":"dotnet-maestro[bot]","Number":"4152","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20201022.9\r\n- **Date Produced**: 10/23/2020 7:44 AM\r\n- **Commit**: eebeb86924b309a361d56ae8b96a9293cca82a75\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **System.CodeDom**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **Microsoft.NETCore.App**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **System.Text.Json**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-alpha.1.20521.2 to 6.0.0-alpha.1.20522.9][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/2c85445...eebeb86\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4152)","Url":"https://github.com/dotnet/winforms/pull/4152","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#4152)"},{"Id":"728274343","IsPullRequest":true,"CreatedAt":"2020-10-23T15:05:32","Actor":"dotnet-maestro[bot]","Number":"4151","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20201020.8\r\n- **Date Produced**: 10/21/2020 12:21 AM\r\n- **Commit**: 7fbf2a7703498067569d07a21776b91e599028e2\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.20516.5 to 6.0.0-beta.20520.8][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.20516.5 to 6.0.0-beta.20520.8][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.20516.5 to 6.0.0-beta.20520.8][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.20516.5 to 6.0.0-beta.20520.8][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.20516.5 to 6.0.0-beta.20520.8][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/e7a79ce...7fbf2a7\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4151)","Url":"https://github.com/dotnet/winforms/pull/4151","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#4151)"},{"Id":"727843460","IsPullRequest":false,"CreatedAt":"2020-10-23T02:30:45","Actor":"Olina-Zhang","Number":"4150","RawContent":null,"Title":"Accessibility: Inspect should be focus on the entire listView item row, not the first item when ListView's FullRowSelect = true ","State":"open","Body":"* .NET Core Version: \r\n.Net SDK 6.0.100-alpha.1.20522.5\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n* More Info:\r\nThis is a regression issue, cannot repro in .Net Core 3.1\r\n\r\n**Minimal repro:**\r\n1. Open the attached WinFormsApp12.zip application in VS, then build and run it.\r\n[WinFormsApp12.zip](https://github.com/dotnet/winforms/files/5426925/WinFormsApp12.zip)\r\n2. Launch Inspect to focus on ListView items\r\n\r\n**Actual behavior:**\r\nInspect focus on the first list item, not entire listView Item row when its FullRowSelect is true\r\n![image](https://user-images.githubusercontent.com/26474449/96949258-14f70c80-151a-11eb-938c-2439884a2761.png)\r\n\r\n**Expected behavior:**\r\nInspect focus on entire listView Item row when its FullRowSelect is true\r\n![image](https://user-images.githubusercontent.com/26474449/96949344-44a61480-151a-11eb-8b8e-cde87b4a8f4a.png)\r\n","Url":"https://github.com/dotnet/winforms/issues/4150","RelatedDescription":"Open issue \"Accessibility: Inspect should be focus on the entire listView item row, not the first item when ListView's FullRowSelect = true \" (#4150)"},{"Id":"727570659","IsPullRequest":false,"CreatedAt":"2020-10-23T01:18:53","Actor":"cadilhac","Number":"4148","RawContent":null,"Title":"Fresh winforms project in VS can't load the winforms designer","State":"closed","Body":"Using VS 2019 preview 16.8.0 preview 5.0\r\n\r\nI created a new winforms project (.net core 3.1). Trying to open the form in the designer, I get a VS error letting me know that details are in the activity log xml file:\r\n\r\n![forms1](https://user-images.githubusercontent.com/50608/96906283-95106a00-1467-11eb-8941-8dfe4c60600b.png)\r\n\r\nIn the xml file:\r\n\r\nCreateInstance failed for package [Windows Forms Remote Designer Hosting Package]Source: 'mscorlib' Description: Could not load type 'Microsoft.VisualStudio.Design.VSDesignPackage' from assembly 'Microsoft.VisualStudio.WinForms.Package, Version=0.3.2.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.\r\nSystem.TypeLoadException: Could not load type 'Microsoft.VisualStudio.Design.VSDesignPackage' from assembly 'Microsoft.VisualStudio.WinForms.Package, Version=0.3.2.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35'.\r\n   at System.Reflection.RuntimeAssembly.GetType(RuntimeAssembly assembly, String name, Boolean throwOnError, Boolean ignoreCase, ObjectHandleOnStack type)\r\n   at System.Reflection.RuntimeAssembly.GetType(String name, Boolean throwOnError, Boolean ignoreCase)\r\n   at System.Activator.CreateInstanceFromInternal(String assemblyFile, String typeName, Boolean ignoreCase, BindingFlags bindingAttr, Binder binder, Object[] args, CultureInfo culture, Object[] activationAttributes, Evidence securityInfo)\r\n   at System.AppDomain.CreateInstanceFrom(String assemblyFile, String typeName)\r\n\r\nVS also displays this:\r\n\r\n![forms2](https://user-images.githubusercontent.com/50608/96906218-82963080-1467-11eb-81ea-f4a9b8aa07e8.png)\r\n\r\nAny idea?","Url":"https://github.com/dotnet/winforms/issues/4148","RelatedDescription":"Closed issue \"Fresh winforms project in VS can't load the winforms designer\" (#4148)"},{"Id":"725282435","IsPullRequest":false,"CreatedAt":"2020-10-23T00:11:44","Actor":"kirsan31","Number":"4139","RawContent":null,"Title":"[Designer] Undo / Redo not working correctly.","State":"closed","Body":"* .NET Core Version: All.\r\n\r\n* Have you experienced this same bug with .NET Framework?: No.\r\n\r\n**Problem description:**\r\nAs @dreddy-work [asked](https://github.com/dotnet/winforms/issues/3047#issuecomment-712482616) this is tracking only issue.\r\nUndo / Redo not working correctly in new designer (V.S. 16.8 p4):\r\n![vsd1](https://user-images.githubusercontent.com/17767561/96553066-4c1cb200-12bd-11eb-9b7d-f4a81138918d.gif)\r\n![vsd2](https://user-images.githubusercontent.com/17767561/96553075-4f17a280-12bd-11eb-80c3-b2ada4650a1e.gif)\r\n\r\n\r\n\r\n**Expected behavior:**\r\nUndo / Redo working correctly.","Url":"https://github.com/dotnet/winforms/issues/4139","RelatedDescription":"Closed issue \"[Designer] Undo / Redo not working correctly.\" (#4139)"},{"Id":"726845766","IsPullRequest":false,"CreatedAt":"2020-10-23T00:03:38","Actor":"dreddy-work","Number":"4147","RawContent":null,"Title":"Steema.TeeChart.NETCore.WinForm control is not fully supported by current version of Windows Forms Designer for .NET Core","State":"closed","Body":"- .NET Core Version:\r\n   3.1.9\r\n\r\n\r\n- Have you experienced this same bug with .NET Framework?:\r\n   No\r\n\r\n**Problem description**:\r\nI've created .NET Core WinForms application and added **Steema.TeeChart.NETCore.WinForm** nuget-package.\r\nAs I can see Steema.TeeChart.NETCore.WinForm control is not fully supported by current version of Windows Forms Designer for .NET Core even in latest Visual Studio 2019 16.8.0 Preview 4 (some menu items are missing in .NET Core 3.1.9):\r\n\r\n![a](https://user-images.githubusercontent.com/36968667/96782759-2fa67580-13a2-11eb-8f21-f2de18f8fbfb.png)\r\n\r\nSame menu in .NET Framework 4.8 looks like:\r\n![b](https://user-images.githubusercontent.com/36968667/96782874-37661a00-13a2-11eb-9082-4addfc6402ea.png)\r\n\r\n[Some more info](https://www.steema.com/support/viewtopic.php?f=4&t=17436#p77609)\r\n[Sample repo](https://github.com/bairog/TeeChartTest)\r\n\r\nWhat is the expected timeframe for Windows Forms Designer for .NET Core to fully support third-party components? Is it finally going to be happend in Visual Studio 2019 16.8 in November 2020?\r\n\r\nP. S. I've tried to email that problem to @OliaG, but 5 days had no answer.\r\n\r\nThank you.\r\n\r\n**Expected behavior:**\r\nFunctional parity with Windows Forms Designer for .NET Framework.","Url":"https://github.com/dotnet/winforms/issues/4147","RelatedDescription":"Closed issue \"Steema.TeeChart.NETCore.WinForm control is not fully supported by current version of Windows Forms Designer for .NET Core\" (#4147)"},{"Id":"724419862","IsPullRequest":true,"CreatedAt":"2020-10-22T06:33:46","Actor":"Amy-Li03","Number":"4132","RawContent":null,"Title":"Add some codes in Accessibility sample app to work around bug 1155463","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFix bug [1155463](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1155463?src=WorkItemMention&src-action=artifact_link), add some codes on sample app to make Narrator say \"Please enter first name now\" and added dataGridView.Focus() on \"Click\" event of \"Add new\" button.\r\n\r\n## Proposed changes\r\nUpdate related codes in DataControls.Designer.cs and DataControls.cs files\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\nAfter this update, Narrator can read the status message as row added after click on Add New button.\r\n\r\n## Regression? \r\n\r\nNo\r\n\r\n## Risk\r\n\r\nNo\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n### After\r\n\r\n<!-- TODO -->\r\n![image](https://user-images.githubusercontent.com/62929087/96427487-319cf700-1231-11eb-9db6-63a39214f3a3.png)\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4132)","Url":"https://github.com/dotnet/winforms/pull/4132","RelatedDescription":"Closed or merged PR \"Add some codes in Accessibility sample app to work around bug 1155463\" (#4132)"},{"Id":"726821215","IsPullRequest":false,"CreatedAt":"2020-10-21T19:56:24","Actor":"KlausLoeffelmann","Number":"4146","RawContent":null,"Title":"Add IsRootSiteInDesignMode for Control","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\n\r\nFolks need a more reliable way to check, if a control is currently in `DesignMode`. The Problem is that the `DesignMode` property of Control does only return true, if the current control is actually sited, and then returns the `DesignMode` property of the Site. In many cases, that does not help: Whenever a control is part of a constituent control (like the `TextBox` control in `NumericUpDown`) or a UserControl, the individual controls making up the UserControl (constituent control) never get sited, and although there is a Site technically which could return `true` for `DesignMode`, from the perspective of that control, that never happens.\r\n\r\n**Describe the solution you'd like and alternatives you've considered**\r\n\r\n`IsRootSiteInDesignMode` would find the _sited_ root (parent) control, test for that being sited and return `DesignMode`, thus a rather reliable way for a control to test if it is in design mode.\r\n\r\n**Will this feature affect UI controls?**\r\n\r\nNo.\r\n\r\nPractically, it could be looking something like this:\r\n\r\n```\r\n        protected bool IsRootSiteInDesignMode =>\r\n            GetSitedParentSite(this) is ISite parentSite ? parentSite.DesignMode : false;\r\n\r\n        private ISite GetSitedParentSite(Control control) =>\r\n            control is null\r\n                ? throw new ArgumentNullException(nameof(control))\r\n                : control.Site != null || control.Parent is null\r\n                    ? control.Site\r\n                    : GetSitedParentSite(control.Parent);\r\n```","Url":"https://github.com/dotnet/winforms/issues/4146","RelatedDescription":"Open issue \"Add IsRootSiteInDesignMode for Control\" (#4146)"},{"Id":"726738707","IsPullRequest":false,"CreatedAt":"2020-10-21T17:59:14","Actor":"madelson","Number":"4144","RawContent":null,"Title":"VS should not bloat SDK project files with resx designer entries","State":"open","Body":"(Copied from https://developercommunity2.visualstudio.com/myfeedback?port=1025&fsid=9bbd6d1d-30dd-4380-b94e-af5035a8459d&entry=myfeedback where I was told to report this here instead)\r\n\r\nWith the new SDK file format, my team was excited to say goodbye to bloated csproj files using the new globbing feature. For example, to include resx files we use the following glob:\r\n\r\n```\r\n<!--Configure .resx files as embedded resources with generated . Designer.cs files.-->\r\n<ItemGroup>\r\n<Compile Update=\"**\\*. Designer.cs\">\r\n<AutoGen>True</AutoGen>\r\n<DesignTime>True</DesignTime>\r\n<DependentUpon>$([System.String]::Copy('%(FileName)'). Replace('. Designer', '.resx'))</DependentUpon>\r\n</Compile>\r\n<EmbeddedResource Update=\"**\\*.resx\">\r\n<Generator>ResXFileCodeGenerator</Generator>\r\n<LastGenOutput>$([System.String]::Copy('%(FileName)')). Designer.cs</LastGenOutput>\r\n</EmbeddedResource>\r\n</ItemGroup>\r\n<LastGenOutput>$([System.String]::Copy('%(FileName)')). Designer.cs</LastGenOutput>\r\n</EmbeddedResource>\r\n```\r\n\r\nUnfortunately, when we add new resx files to the project VS insists on still adding an entry for each designer file like:\r\n\r\n```\r\n<Compile Update=\"Globalization\\TestResx.Designer.cs\">\r\n<DesignTime>True</DesignTime>\r\n<AutoGen>True</AutoGen>\r\n<DependentUpon>TestResx.resx</DependentUpon>\r\n</Compile>\r\n```\r\n\r\nIt would be great if VS could handle this more gracefully, either by detecting that the designer file is already getting configured in the same way or by emitting a single glob entry that covers all similar designers if one is not already present (not sure how feasible the latter is if you have multiple kinds of designer files).","Url":"https://github.com/dotnet/winforms/issues/4144","RelatedDescription":"Open issue \"VS should not bloat SDK project files with resx designer entries\" (#4144)"},{"Id":"726541330","IsPullRequest":true,"CreatedAt":"2020-10-21T14:57:36","Actor":"dotnet-maestro[bot]","Number":"4143","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20201021.2\r\n- **Date Produced**: 10/21/2020 12:08 PM\r\n- **Commit**: 2c854456ede5139c4eabf21a8a76fe7ef1cedcb7\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **System.CodeDom**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **Microsoft.NETCore.App**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **System.Text.Json**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-alpha.1.20518.3 to 6.0.0-alpha.1.20521.2][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/c066931...2c85445\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4143)","Url":"https://github.com/dotnet/winforms/pull/4143","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#4143)"},{"Id":"725689506","IsPullRequest":true,"CreatedAt":"2020-10-20T15:47:07","Actor":"dotnet-maestro[bot]","Number":"4142","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20201016.5\r\n- **Date Produced**: 10/16/2020 8:31 PM\r\n- **Commit**: e7a79ce64f0703c231e6da88b5279dd0bf681b3d\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.20515.7 to 6.0.0-beta.20516.5][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.20515.7 to 6.0.0-beta.20516.5][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.20515.7 to 6.0.0-beta.20516.5][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.20515.7 to 6.0.0-beta.20516.5][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.20515.7 to 6.0.0-beta.20516.5][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/d4de3ce...e7a79ce\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4142)","Url":"https://github.com/dotnet/winforms/pull/4142","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#4142)"},{"Id":"725679179","IsPullRequest":true,"CreatedAt":"2020-10-20T15:29:04","Actor":"dotnet-maestro[bot]","Number":"4140","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:6d389ecb-0616-453a-2112-08d85e71258f)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 6d389ecb-0616-453a-2112-08d85e71258f\r\n- **Build**: 20201019.4\r\n- **Date Produced**: 10/20/2020 1:51 PM\r\n- **Commit**: cf258a14b70ad9069470a108f13765e0e5988f51\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 5.0.0 to 5.0.0][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.CodeDom**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.App**: [from 5.0.0-rtm.20517.6 to 5.0.0-rtm.20519.4][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.Targets**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.Win32.Registry**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.0-rtm.20517.6 to 5.0.0-rtm.20519.4][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Cryptography.Xml**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Permissions**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Principal.Windows**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Text.Encodings.Web**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Text.Json**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Threading.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Windows.Extensions**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Cryptography.Cng**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Diagnostics.EventLog**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.DirectoryServices**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Drawing.Common**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.IO.Packaging**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Resources.Extensions**: [from 5.0.0 to 5.0.0][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/25c7409...cf258a1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:6d389ecb-0616-453a-2112-08d85e71258f)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4140)","Url":"https://github.com/dotnet/winforms/pull/4140","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/runtime\" (#4140)"},{"Id":"724937863","IsPullRequest":false,"CreatedAt":"2020-10-19T20:06:11","Actor":"DustinCampbell","Number":"4137","RawContent":null,"Title":"ComponentActionsType is defined in the incorrect namespace","State":"open","Body":"It appears that this was completely accidental, but the `ComponentActionsType` is declared in the incorrect namespace in .NET Core. On .NET Framework, it was declared in `System.ComponentModel.Design` but is declared in `System.Windows.Forms.Design` in .NET Core. This type is intended to be used the `DesignerActionService.GetComponents(...)` method, which is correctly declared in `System.ComponentModel.Design`.","Url":"https://github.com/dotnet/winforms/issues/4137","RelatedDescription":"Open issue \"ComponentActionsType is defined in the incorrect namespace\" (#4137)"},{"Id":"724871843","IsPullRequest":false,"CreatedAt":"2020-10-19T18:22:44","Actor":"JeremyKuhne","Number":"4136","RawContent":null,"Title":"Using source generators for interop","State":"open","Body":"This issue is for tracking usage of source generators for interop.\r\n\r\nThe Runtime is considering implementing P/Invoke support through source generators: https://github.com/dotnet/runtime/blob/master/docs/design/features/source-generator-pinvokes.md\r\n\r\nWe should also be exploring is implementing common patterns via source generators. Things like:\r\n\r\n- Handling common buffer usage patterns (buffer growth, movement from stack to heap, etc.)\r\n- Generating resource scoping boilerplate (see our various scope types and how we switch between class and struct for tracking proper disposal in debug builds)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/4136","RelatedDescription":"Open issue \"Using source generators for interop\" (#4136)"},{"Id":"724859409","IsPullRequest":false,"CreatedAt":"2020-10-19T18:02:49","Actor":"JeremyKuhne","Number":"4135","RawContent":null,"Title":"Utilize function pointers for interop","State":"open","Body":"Function pointers provide better performance. Creating this issue to discuss utilizing them in Windows Forms interop.\r\n\r\nThings we should consider / look at:\r\n\r\n- Win32 callbacks\r\n- High usage COM interfaces\r\n- ?","Url":"https://github.com/dotnet/winforms/issues/4135","RelatedDescription":"Open issue \"Utilize function pointers for interop\" (#4135)"},{"Id":"724698541","IsPullRequest":true,"CreatedAt":"2020-10-19T15:22:59","Actor":"dotnet-maestro[bot]","Number":"4134","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20201018.3\r\n- **Date Produced**: 10/19/2020 2:01 AM\r\n- **Commit**: c0669313dd36189c6d3bf5c7d5e866284f98263c\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.CodeDom**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **Microsoft.NETCore.App**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Text.Json**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/722b8a6...c066931\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4134)","Url":"https://github.com/dotnet/winforms/pull/4134","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#4134)"},{"Id":"724671075","IsPullRequest":true,"CreatedAt":"2020-10-19T14:48:18","Actor":"dotnet-maestro[bot]","Number":"4133","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20201015.7\r\n- **Date Produced**: 10/15/2020 11:26 PM\r\n- **Commit**: d4de3ce701c2ba697d71cc70e2db69d7568913dc\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.20514.1 to 6.0.0-beta.20515.7][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.20514.1 to 6.0.0-beta.20515.7][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.20514.1 to 6.0.0-beta.20515.7][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.20514.1 to 6.0.0-beta.20515.7][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.20514.1 to 6.0.0-beta.20515.7][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/d3cea00...d4de3ce\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4133)","Url":"https://github.com/dotnet/winforms/pull/4133","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#4133)"},{"Id":"724204874","IsPullRequest":false,"CreatedAt":"2020-10-19T02:11:14","Actor":"Lydia-Shi","Number":"4131","RawContent":null,"Title":"A warning dialog pops up when setting SelectedImageIndex property to '(none)' in TreeNode Editor","State":"open","Body":"* .NET Core Version: \r\nNET SDK 5.0.100-rtm.20515.8\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**More info:**\r\n\r\n1. This issue also occurs when setting ImageIndex property in TreeNode Editor.\r\n2. This issue cannot repro when targeting 3.0&3.1.\r\n3. This is a regression issue, it cannot repro in .NET 5.0.100-rc.1.20452.10.\r\n\r\n**Problem description:**\r\nA warning dialog pops up when setting SelectedImageIndex property to '(none)' in TreeNode Editor. \r\n![TreeView](https://user-images.githubusercontent.com/54019172/96392839-e0204800-11ef-11eb-9515-147755055b8e.gif)\r\n![SelectedINdex](https://user-images.githubusercontent.com/54019172/96392868-f29a8180-11ef-11eb-9451-026b3d6e369c.png)\r\n\r\n**Expected behavior:**\r\nNo warning dialog pops up and SelectedImageIndex can be successfully set to '(none)'.\r\n\r\n**Minimal repro:**\r\n\r\n1. Create a winforms .Net Core application with a TreeView control\r\n2. Open smart tag of TreeView, click 'Edit Nodes' to open TreeNode Editor\r\n3. Click 'Add Root' button to add a tree node, in the right table, try to change its SelectedImageIndex property to '(none)'","Url":"https://github.com/dotnet/winforms/issues/4131","RelatedDescription":"Open issue \"A warning dialog pops up when setting SelectedImageIndex property to '(none)' in TreeNode Editor\" (#4131)"},{"Id":"724202354","IsPullRequest":false,"CreatedAt":"2020-10-19T02:01:49","Actor":"Marie-Shi","Number":"4130","RawContent":null,"Title":"[Accessibility]Inspect: The MSAA structure of NumericUpdown/DomainUpDown in Core is missing some children nodes","State":"open","Body":"* .NET Core Version: \r\n.Net 6.0.100-alpha.1.20516.5\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**More info:**\r\nThis issue cannot repro on .Net Core 3.1. \r\n\r\n**Minimal repro:**\r\n\r\n1. Create a .NET Core project with a Label control and change the text to ‘numericUpDown’.\r\n2. Add a NumericUpDown control to form.\r\n3. Build and run the core project.\r\n4. Open the Inspect tool and observe the NumericUpDown control on MSAA mode.\r\n\r\nOr \r\n\r\n1. Extract the “MSAA_Numeric&Domain.zip” and open it in VS.\r\n[MSAA_Numeric&Domain.zip](https://github.com/dotnet/winforms/files/5398625/MSAA_Numeric.Domain.zip)\r\n\r\n2. Build and run the core project.\r\n3. Open the Inspect tool and observe the NumericUpDown control on MSAA mode.\r\n\r\n**Actual behavior:**\r\nThe MSAA structure of NumericUpdown/DomainUpDown in Core is missing some children nodes.\r\n![Core_5 0](https://user-images.githubusercontent.com/45864017/96393447-b5cf8a00-11f1-11eb-806b-1490a52205a8.png)\r\n\r\n**Expected behavior:**\r\nThe MSAA structure of NumericUpdown/DomainUpDown in Core is correct, it should be like Core 3.1:\r\n![core_3 1](https://user-images.githubusercontent.com/45864017/96393454-ba943e00-11f1-11eb-8bba-92eb7dbfaf4f.png)","Url":"https://github.com/dotnet/winforms/issues/4130","RelatedDescription":"Open issue \"[Accessibility]Inspect: The MSAA structure of NumericUpdown/DomainUpDown in Core is missing some children nodes\" (#4130)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-10-27T05:30:49.8017981Z","RunDurationInMilliseconds":631}