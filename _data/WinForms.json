{"Data":{"GitHub":{"Issues":[{"Id":"725011414","IsPullRequest":true,"CreatedAt":"2020-10-19T22:08:02","Actor":"AdamYoblick","Number":"4138","RawContent":null,"Title":"Consume intellisense from internal nuget package","State":"open","Body":"This PR removes the download from Azure blob storage in favor of consuming the official package released by the docs team. It will enables us to easily rev versions for future releases without having to do any other manual steps.\r\n\r\nThis is based off of work in the runtime repo at https://github.com/dotnet/runtime/blob/688206b76481d00a61110d9f28218cb2bc58957c/eng/restore/docs.targets\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4138)","Url":"https://github.com/dotnet/winforms/pull/4138","RelatedDescription":"Open PR \"Consume intellisense from internal nuget package\" (#4138)"},{"Id":"724937863","IsPullRequest":false,"CreatedAt":"2020-10-19T20:06:11","Actor":"DustinCampbell","Number":"4137","RawContent":null,"Title":"ComponentActionsType is defined in the incorrect namespace","State":"open","Body":"It appears that this was completely accidental, but the `ComponentActionsType` is declared in the incorrect namespace in .NET Core. On .NET Framework, it was declared in `System.ComponentModel.Design` but is declared in `System.Windows.Forms.Design` in .NET Core. This type is intended to be used the `DesignerActionService.GetComponents(...)` method, which is correctly declared in `System.ComponentModel.Design`.","Url":"https://github.com/dotnet/winforms/issues/4137","RelatedDescription":"Open issue \"ComponentActionsType is defined in the incorrect namespace\" (#4137)"},{"Id":"724871843","IsPullRequest":false,"CreatedAt":"2020-10-19T18:22:44","Actor":"JeremyKuhne","Number":"4136","RawContent":null,"Title":"Using source generators for interop","State":"open","Body":"This issue is for tracking usage of source generators for interop.\r\n\r\nThe Runtime is considering implementing P/Invoke support through source generators: https://github.com/dotnet/runtime/blob/master/docs/design/features/source-generator-pinvokes.md\r\n\r\nWe should also be exploring is implementing common patterns via source generators. Things like:\r\n\r\n- Handling common buffer usage patterns (buffer growth, movement from stack to heap, etc.)\r\n- Generating resource scoping boilerplate (see our various scope types and how we switch between class and struct for tracking proper disposal in debug builds)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/4136","RelatedDescription":"Open issue \"Using source generators for interop\" (#4136)"},{"Id":"724859409","IsPullRequest":false,"CreatedAt":"2020-10-19T18:02:49","Actor":"JeremyKuhne","Number":"4135","RawContent":null,"Title":"Utilize function pointers for interop","State":"open","Body":"Function pointers provide better performance. Creating this issue to discuss utilizing them in Windows Forms interop.\r\n\r\nThings we should consider / look at:\r\n\r\n- Win32 callbacks\r\n- High usage COM interfaces\r\n- ?","Url":"https://github.com/dotnet/winforms/issues/4135","RelatedDescription":"Open issue \"Utilize function pointers for interop\" (#4135)"},{"Id":"724698541","IsPullRequest":true,"CreatedAt":"2020-10-19T15:22:59","Actor":"dotnet-maestro[bot]","Number":"4134","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20201018.3\r\n- **Date Produced**: 10/19/2020 2:01 AM\r\n- **Commit**: c0669313dd36189c6d3bf5c7d5e866284f98263c\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.CodeDom**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **Microsoft.NETCore.App**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Text.Json**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-alpha.1.20515.8 to 6.0.0-alpha.1.20518.3][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/722b8a6...c066931\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4134)","Url":"https://github.com/dotnet/winforms/pull/4134","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#4134)"},{"Id":"724671075","IsPullRequest":true,"CreatedAt":"2020-10-19T14:48:18","Actor":"dotnet-maestro[bot]","Number":"4133","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20201015.7\r\n- **Date Produced**: 10/15/2020 11:26 PM\r\n- **Commit**: d4de3ce701c2ba697d71cc70e2db69d7568913dc\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.20514.1 to 6.0.0-beta.20515.7][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.20514.1 to 6.0.0-beta.20515.7][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.20514.1 to 6.0.0-beta.20515.7][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.20514.1 to 6.0.0-beta.20515.7][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.20514.1 to 6.0.0-beta.20515.7][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/d3cea00...d4de3ce\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4133)","Url":"https://github.com/dotnet/winforms/pull/4133","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#4133)"},{"Id":"724419862","IsPullRequest":true,"CreatedAt":"2020-10-19T09:01:17","Actor":"Amy-Li03","Number":"4132","RawContent":null,"Title":"Add some codes in Accessibility sample app to work around bug 1155463","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFix bug [1155463](https://devdiv.visualstudio.com/DevDiv/_workitems/edit/1155463?src=WorkItemMention&src-action=artifact_link), add some codes on sample app to make Narrator say \"Please enter first name now\" and added dataGridView.Focus() on \"Click\" event of \"Add new\" button.\r\n\r\n## Proposed changes\r\nUpdate related codes in DataControls.Designer.cs and DataControls.cs files\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\nAfter this update, Narrator can read the status message as row added after click on Add New button.\r\n\r\n## Regression? \r\n\r\nNo\r\n\r\n## Risk\r\n\r\nNo\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n### After\r\n\r\n<!-- TODO -->\r\n![image](https://user-images.githubusercontent.com/62929087/96427487-319cf700-1231-11eb-9db6-63a39214f3a3.png)\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4132)","Url":"https://github.com/dotnet/winforms/pull/4132","RelatedDescription":"Open PR \"Add some codes in Accessibility sample app to work around bug 1155463\" (#4132)"},{"Id":"724204874","IsPullRequest":false,"CreatedAt":"2020-10-19T02:11:14","Actor":"Lydia-Shi","Number":"4131","RawContent":null,"Title":"A warning dialog pops up when setting SelectedImageIndex property to '(none)' in TreeNode Editor","State":"open","Body":"* .NET Core Version: \r\nNET SDK 5.0.100-rtm.20515.8\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**More info:**\r\n\r\n1. This issue also occurs when setting ImageIndex property in TreeNode Editor.\r\n2. This issue cannot repro when targeting 3.0&3.1.\r\n3. This is a regression issue, it cannot repro in .NET 5.0.100-rc.1.20452.10.\r\n\r\n**Problem description:**\r\nA warning dialog pops up when setting SelectedImageIndex property to '(none)' in TreeNode Editor. \r\n![TreeView](https://user-images.githubusercontent.com/54019172/96392839-e0204800-11ef-11eb-9515-147755055b8e.gif)\r\n![SelectedINdex](https://user-images.githubusercontent.com/54019172/96392868-f29a8180-11ef-11eb-9451-026b3d6e369c.png)\r\n\r\n**Expected behavior:**\r\nNo warning dialog pops up and SelectedImageIndex can be successfully set to '(none)'.\r\n\r\n**Minimal repro:**\r\n\r\n1. Create a winforms .Net Core application with a TreeView control\r\n2. Open smart tag of TreeView, click 'Edit Nodes' to open TreeNode Editor\r\n3. Click 'Add Root' button to add a tree node, in the right table, try to change its SelectedImageIndex property to '(none)'","Url":"https://github.com/dotnet/winforms/issues/4131","RelatedDescription":"Open issue \"A warning dialog pops up when setting SelectedImageIndex property to '(none)' in TreeNode Editor\" (#4131)"},{"Id":"724202354","IsPullRequest":false,"CreatedAt":"2020-10-19T02:01:49","Actor":"Marie-Shi","Number":"4130","RawContent":null,"Title":"[Accessibility]Inspect: The MSAA structure of NumericUpdown/DomainUpDown in Core is missing some children nodes","State":"open","Body":"* .NET Core Version: \r\n.Net 6.0.100-alpha.1.20516.5\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**More info:**\r\nThis issue cannot repro on .Net Core 3.1. \r\n\r\n**Minimal repro:**\r\n\r\n1. Create a .NET Core project with a Label control and change the text to ‘numericUpDown’.\r\n2. Add a NumericUpDown control to form.\r\n3. Build and run the core project.\r\n4. Open the Inspect tool and observe the NumericUpDown control on MSAA mode.\r\n\r\nOr \r\n\r\n1. Extract the “MSAA_Numeric&Domain.zip” and open it in VS.\r\n[MSAA_Numeric&Domain.zip](https://github.com/dotnet/winforms/files/5398625/MSAA_Numeric.Domain.zip)\r\n\r\n2. Build and run the core project.\r\n3. Open the Inspect tool and observe the NumericUpDown control on MSAA mode.\r\n\r\n**Actual behavior:**\r\nThe MSAA structure of NumericUpdown/DomainUpDown in Core is missing some children nodes.\r\n![Core_5 0](https://user-images.githubusercontent.com/45864017/96393447-b5cf8a00-11f1-11eb-806b-1490a52205a8.png)\r\n\r\n**Expected behavior:**\r\nThe MSAA structure of NumericUpdown/DomainUpDown in Core is correct, it should be like Core 3.1:\r\n![core_3 1](https://user-images.githubusercontent.com/45864017/96393454-ba943e00-11f1-11eb-8bba-92eb7dbfaf4f.png)","Url":"https://github.com/dotnet/winforms/issues/4130","RelatedDescription":"Open issue \"[Accessibility]Inspect: The MSAA structure of NumericUpdown/DomainUpDown in Core is missing some children nodes\" (#4130)"},{"Id":"723956901","IsPullRequest":false,"CreatedAt":"2020-10-18T08:31:13","Actor":"RioInf","Number":"4129","RawContent":null,"Title":"DataGridView Memory Leaks","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: 5.0.100 rc1\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: No\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\nWhen the app run, per cell click in DataGridView even at VerticalScrollBar, when i looked at Task Manager, the app drains memory 10 to 30 MB per click before automatic reclaim at 590 MB\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n\r\n**Expected behavior:**\r\nMemory should not leaks\r\n\r\n**Minimal repro:**\r\n1. Create a winforms app. Add to Form1 a DataGridView, a PictureBox and two Button (browse and save) control\r\n2. Form1 Load method, get data from Northwind Categories table with a DataTable using SqlDataReader and bind it to DataGridView.\r\n3. Form1 Load method, set DataGridImageColumn.ImageLayout = Zoom at picture column, DataGridView.AutoSizeRowsMode =DisplayedCellsExceptHeaders\r\n4. Button Browse Click method, using OpenFileDialog to get the image from Libraries\\Picture\\Sample Pictures such as Hydrangeas, Lighthouse etc with size < 1MB.\r\n5. Button Save Click method, add some new records using SqlCommand\r\n6. Run the app, click a cell in DataGridView or at VerticalScrollBar and take a look at Task Manager\r\n7. Memory not leaks with default image from Northwind Catagories table. It leaks when DataGridView shows data with new JPEG Image\r\n","Url":"https://github.com/dotnet/winforms/issues/4129","RelatedDescription":"Open issue \"DataGridView Memory Leaks\" (#4129)"},{"Id":"723859454","IsPullRequest":true,"CreatedAt":"2020-10-17T22:56:39","Actor":"dotnet-maestro[bot]","Number":"4128","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:6d389ecb-0616-453a-2112-08d85e71258f)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 6d389ecb-0616-453a-2112-08d85e71258f\r\n- **Build**: 20201017.6\r\n- **Date Produced**: 10/17/2020 9:54 PM\r\n- **Commit**: 25c7409c0e2a8980f09ab2e4c3ad330b633582ec\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 5.0.0 to 5.0.0][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.CodeDom**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.App**: [from 5.0.0-rtm.20515.3 to 5.0.0-rtm.20517.6][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.Targets**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.Win32.Registry**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.0-rtm.20515.3 to 5.0.0-rtm.20517.6][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Cryptography.Xml**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Permissions**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Principal.Windows**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Text.Encodings.Web**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Text.Json**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Threading.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Windows.Extensions**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Cryptography.Cng**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Diagnostics.EventLog**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.DirectoryServices**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Drawing.Common**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.IO.Packaging**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Resources.Extensions**: [from 5.0.0 to 5.0.0][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/25e8b0d...25c7409\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:6d389ecb-0616-453a-2112-08d85e71258f)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4128)","Url":"https://github.com/dotnet/winforms/pull/4128","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/runtime\" (#4128)"},{"Id":"723811985","IsPullRequest":true,"CreatedAt":"2020-10-17T17:39:56","Actor":"albertvaka","Number":"4127","RawContent":null,"Title":"DomainUpDown/NumericUpdown should be KeyboardFocusable","State":"open","Body":"Fixes #4123\r\n\r\nI tracked the current behavior to this PR: https://github.com/dotnet/winforms/pull/2382\r\n\r\n## Proposed changes\r\n\r\n- DomainUpDown/NumericUpdown should return true when queried for IsKeyboardFocusablePropertyId.\r\n\r\n## Regression? \r\n\r\n- Yes.\r\n\r\n## Risk\r\n\r\n- Someone might be relying on the current behavior.\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- I didn't test this.\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4127)","Url":"https://github.com/dotnet/winforms/pull/4127","RelatedDescription":"Open PR \"DomainUpDown/NumericUpdown should be KeyboardFocusable\" (#4127)"},{"Id":"722683323","IsPullRequest":true,"CreatedAt":"2020-10-16T21:35:03","Actor":"cristianosuzuki77","Number":"4118","RawContent":null,"Title":"Loc checkin","State":"closed","Body":"Localization of the json files.\r\nGerman files were reviewed by translators and modifications were made.\r\nAttached the translator comments:\r\n\r\n[deutranslationfromcore_Commented.xlsx](https://github.com/dotnet/winforms/files/5387860/deutranslationfromcore_Commented.xlsx)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4118)","Url":"https://github.com/dotnet/winforms/pull/4118","RelatedDescription":"Closed or merged PR \"Loc checkin\" (#4118)"},{"Id":"722774049","IsPullRequest":true,"CreatedAt":"2020-10-16T21:07:59","Actor":"JeremyKuhne","Number":"4119","RawContent":null,"Title":"Fix MSAA accessibility (#4117)","State":"closed","Body":"Port of #4117 - see for more details\r\n\r\n* Fix MSAA accessibility\r\n\r\nIAccessible wrapper class was being used in some places instead of the actual IAccessible object.\r\n\r\nBased on #4114. Narrows diff and adds an additional regression test (`TestAccessibleObjectFromPoint`).\r\n\r\nFixes #4100.\r\n\r\n* Add a second test and validate the varItem type.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4119)","Url":"https://github.com/dotnet/winforms/pull/4119","RelatedDescription":"Closed or merged PR \"Fix MSAA accessibility (#4117)\" (#4119)"},{"Id":"723404120","IsPullRequest":true,"CreatedAt":"2020-10-16T18:05:14","Actor":"dotnet-maestro[bot]","Number":"4126","RawContent":null,"Title":"[master] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: be4b0f38-c1d5-43ab-c5d9-08d76fa9c820\r\n- **Build**: 20201015.8\r\n- **Date Produced**: 10/16/2020 9:20 AM\r\n- **Commit**: 722b8a660e7e0c59419196be102784244883ff08\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **System.CodeDom**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **System.Diagnostics.EventLog**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **System.DirectoryServices**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **System.Drawing.Common**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **Microsoft.NETCore.App**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **Microsoft.NETCore.Targets**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **Microsoft.Win32.Registry**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **System.IO.Packaging**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **System.Windows.Extensions**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **System.Text.Json**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **System.Resources.Extensions**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **System.Threading.AccessControl**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **System.Security.AccessControl**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **System.Security.Cryptography.Cng**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **System.Security.Cryptography.Xml**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **System.Security.Permissions**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **System.Security.Principal.Windows**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n  - **System.Text.Encodings.Web**: [from 6.0.0-alpha.1.20513.9 to 6.0.0-alpha.1.20515.8][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/eea2256...722b8a6\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:be4b0f38-c1d5-43ab-c5d9-08d76fa9c820)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4126)","Url":"https://github.com/dotnet/winforms/pull/4126","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/runtime\" (#4126)"},{"Id":"723386699","IsPullRequest":true,"CreatedAt":"2020-10-16T17:31:30","Actor":"dotnet-maestro[bot]","Number":"4125","RawContent":null,"Title":"[master] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 4d0c844d-0758-4fc5-c1ad-08d6354da8a8\r\n- **Build**: 20201014.1\r\n- **Date Produced**: 10/14/2020 3:52 PM\r\n- **Commit**: d3cea00bba6539c68436ac9b3d9665318d76b47d\r\n- **Branch**: refs/heads/master\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.20509.12 to 6.0.0-beta.20514.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.20509.12 to 6.0.0-beta.20514.1][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.20509.12 to 6.0.0-beta.20514.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.20509.12 to 6.0.0-beta.20514.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.20509.12 to 6.0.0-beta.20514.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/f2f45f7...d3cea00\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:4d0c844d-0758-4fc5-c1ad-08d6354da8a8)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4125)","Url":"https://github.com/dotnet/winforms/pull/4125","RelatedDescription":"Closed or merged PR \"[master] Update dependencies from dotnet/arcade\" (#4125)"},{"Id":"723152612","IsPullRequest":true,"CreatedAt":"2020-10-16T11:53:19","Actor":"SergeySmirnov-Akvelon","Number":"4124","RawContent":null,"Title":"Fixing issue with getting of textbox from DataGridViewTextBoxCell  by Accessibility Insights","State":"open","Body":"Fixes #3925\r\n\r\n\r\n## Proposed changes\r\n- Restored logic for recreation of textbox handle;\r\n\r\n## Customer Impact\r\nFixed issue with hanging of Accessibility Insights during getting of data about textbox from DataGridViewTextBoxCell\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- Manually \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n- Narrator\r\n- Inspector\r\n- Accessibility Insights\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.388]\r\n- .NET Core 5.0.100-rc.1.20420.14\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4124)","Url":"https://github.com/dotnet/winforms/pull/4124","RelatedDescription":"Open PR \"Fixing issue with getting of textbox from DataGridViewTextBoxCell  by Accessibility Insights\" (#4124)"},{"Id":"723078388","IsPullRequest":false,"CreatedAt":"2020-10-16T09:55:26","Actor":"John-Qiao","Number":"4123","RawContent":null,"Title":"[Accessibility] The values of IsKeyboardFocusable and HasKeyboardFocus fields are incorrect for DomainUpDown/NumericUpdown control in Inspect UIA structure","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n.NET SDK 6.0.100-alpha.1.20514.15\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**More Info:**\r\n\r\n1. This issue does not occur in .NET Core 3.1 and .NET Framework.\r\n2. This issue occurs in NumericUpDown control too.\r\n\r\n**Problem description:**\r\n\r\nThe IsKeyboardFocusable field is **false** and the HasKeyboardFocus field is **true** in UIA structure.\r\n![Actual](https://user-images.githubusercontent.com/45864985/96246185-deca0200-0fda-11eb-9b09-b7fabd6cb970.png)\r\n\r\n**Expected behavior:**\r\n\r\nThe IsKeyboardFocusable field is **true** and the HasKeyboardFocus field is **false** in UIA structure. Like it works in .NET Core 3.1 or .NET Framework.\r\n![Expected](https://user-images.githubusercontent.com/45864985/96246194-e25d8900-0fda-11eb-8e61-a7d141ba74f7.png)\r\n\r\n**Minimal repro:**\r\n\r\n1. Open the attached [TestApp.zip](https://github.com/dotnet/winforms/files/5390801/TestApp.zip) project in VS, run it and launch the Inspect tool.\r\n2. Click on the DomainUpDown edit control and move the mouse pointer to focus on the whole DomainUpDown control.\r\n3. Observe the IsKeyboardFocusable and HasKeyboardFocus fields' value in Inspect UIA structure.\r\n![ReproSteps](https://user-images.githubusercontent.com/45864985/96246174-da9de480-0fda-11eb-8862-d374dc974239.gif)\r\n","Url":"https://github.com/dotnet/winforms/issues/4123","RelatedDescription":"Open issue \"[Accessibility] The values of IsKeyboardFocusable and HasKeyboardFocus fields are incorrect for DomainUpDown/NumericUpdown control in Inspect UIA structure\" (#4123)"},{"Id":"723004247","IsPullRequest":false,"CreatedAt":"2020-10-16T08:07:31","Actor":"kirsan31","Number":"4122","RawContent":null,"Title":"What's new documentation is missing","State":"open","Body":"There are [no single word](https://docs.microsoft.com/en-us/dotnet/core/dotnet-five) (except VB templates) about what's new for WinForms in .net 5.0 :( [1785](https://github.com/dotnet/winforms/compare/v3.1.9...v5.0.0-rc.2.20475.11) commits and absolutely nothing new? The only thing that can be found it's [breaking changes](https://docs.microsoft.com/en-us/dotnet/core/compatibility/winforms), but again no link to it form main [what's new](https://docs.microsoft.com/en-us/dotnet/core/dotnet-five) article...\r\nPeople (who don't follow this repo) are starting to think that WinForms died again before being reborn. I am actively convince my friends for switching their WinForms apps to core, telling about  future possibilities etc...\r\n\r\nAnd the first thing I always hear in response: _Are you nuts??? What's new? What benefits?_\r\nThey only know 3 things about WinForms on core:\r\n- No designer support.\r\n- Absolutely nothing new except removed old controls.\r\n- Pain migration process.","Url":"https://github.com/dotnet/winforms/issues/4122","RelatedDescription":"Open issue \"What's new documentation is missing\" (#4122)"},{"Id":"722263570","IsPullRequest":true,"CreatedAt":"2020-10-16T07:30:49","Actor":"SergeySmirnov-Akvelon","Number":"4114","RawContent":null,"Title":"Fix MSAA API for winforms controls","State":"closed","Body":"Fixes #4100 \r\n\r\n\r\n## Proposed changes\r\n- Fixed wrong conditions. \r\n- Fixed method where we return SystemIAccessibleWrapper  instead of IAccessible \r\n\r\n## Customer Impact \r\nBefore the fixing, we could not get information about the controls using MSAA API:\r\n![4100-issue](https://user-images.githubusercontent.com/23376742/96119566-d77cf880-0ef5-11eb-82f8-530bd476f0d3.png)\r\nAfter fixing, MSAA API works correctly:\r\n![4100-fixed](https://user-images.githubusercontent.com/23376742/96119612-ebc0f580-0ef5-11eb-95c1-79738cef1231.png)\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- Manual testing \r\n- CTI team\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n- Inspector\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n-Microsoft Windows [Version 10.0.19041.388]\r\n- .NET Core 5.0.100-rc.1.20420.14\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4114)","Url":"https://github.com/dotnet/winforms/pull/4114","RelatedDescription":"Closed or merged PR \"Fix MSAA API for winforms controls\" (#4114)"},{"Id":"722961692","IsPullRequest":false,"CreatedAt":"2020-10-16T06:57:08","Actor":"Zheng-Li01","Number":"4121","RawContent":null,"Title":"[Accessibility] Missing the items displayed for CheckedListBox control in the inspect tool ","State":"open","Body":"* More info\r\n\r\n1. The issue also can **reproduce on .NET 5.0 RC2.**\r\n2. The issue can't reproduce on .NET SDK 3.1 and .NET 4.8.\r\n\r\n* .NET Core Version: \r\n.NET SDK 6.0.100-alpha.1.20514.15\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\nMissing the items displayed for CheckedListBox control in the inspect tool. \r\n\r\n**Minimal repro:**\r\n\r\n1. Create a .NET Core project with a CheckedListBox control.\r\n2. Build and run the core project.\r\n3. Observe the checkedListBox1 control in the Inspect tool on UI Automation mode.\r\n\r\n**Expected behavior:**\r\nThe items displayed correctly for checkedListBox1 control in the Inspect tool.\r\n![CheckedListBoxExpected](https://user-images.githubusercontent.com/38325459/96222886-9cdf9280-0fbf-11eb-8787-a91136fec7be.PNG)\r\n\r\n**Actual Behavior:**\r\nMissing the items displayed for checkedListBox1 control in the inspect tool.\r\n![CheckedListBoxActual](https://user-images.githubusercontent.com/38325459/96222894-a1a44680-0fbf-11eb-8911-22f6ebfe3b26.PNG) ","Url":"https://github.com/dotnet/winforms/issues/4121","RelatedDescription":"Open issue \"[Accessibility] Missing the items displayed for CheckedListBox control in the inspect tool \" (#4121)"},{"Id":"722927390","IsPullRequest":false,"CreatedAt":"2020-10-16T05:55:47","Actor":"Zheng-Li01","Number":"4120","RawContent":null,"Title":"[Accessibility] Missing the \"linkLabel1 link\" level for LinkLabel control in the inspect tool ","State":"open","Body":"* More info\r\n1. The issue also can **reproduce on .NET 5.0 RC2.**\r\n2. The issue can't reproduce on .NET SDK 3.1 and .NET 4.8.\r\n\r\n* .NET Core Version: \r\n.NET SDK 6.0.100-alpha.1.20514.15\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\nMissing the 'linkLabel1' link level for LinkLabel control in the inspect tool with UI Automation mode.\r\n\r\n**Minimal repro:**\r\n1.  Create a .NET Core project with a LinkLabel control.\r\n2. Build and run the core project.\r\n3. Observe the linkLabel1 control in the Inspect tool on UI Automation mode.\r\n\r\nOr\r\n1. Open the attached project.\r\n2. Build and run the core project.\r\n3. Observe the linkLabel1 control in the Inspect tool on UI Automation mode.\r\n\r\n**Expected behavior:**\r\nHave the correct levels displayed for linkLabel1 control in the Inspect tool.\r\n![ExpectResults](https://user-images.githubusercontent.com/38325459/96218330-1921a800-0fb7-11eb-8c03-faa4575ca5c5.PNG)\r\n\r\n**Actual Behavior:**\r\nMissing the \"linkLabel1 link\" level for LinkLabel control in the inspect tool.\r\n![NewIssueActual](https://user-images.githubusercontent.com/38325459/96218338-1e7ef280-0fb7-11eb-97a2-9e34b7ac47e5.PNG)","Url":"https://github.com/dotnet/winforms/issues/4120","RelatedDescription":"Open issue \"[Accessibility] Missing the \"linkLabel1 link\" level for LinkLabel control in the inspect tool \" (#4120)"},{"Id":"722651244","IsPullRequest":true,"CreatedAt":"2020-10-16T00:04:23","Actor":"JeremyKuhne","Number":"4117","RawContent":null,"Title":"Fix MSAA accessibility","State":"closed","Body":"`IAccessible` wrapper class was being used in some places instead of the actual `IAccessible` object.\r\n\r\nBased on #4114. Narrows diff and adds an additional regression test (`TestAccessibleObjectFromPoint`).\r\n\r\nFixes #4100.\r\n\r\n## Proposed changes\r\n\r\n- Use actual `IAccessible` object instead of wrapper class\r\n\r\n## Customer Impact\r\n\r\n- MSAA does not work, preventing any accessibility tools or UI automation based on MSAA (`IAccessible`) from working\r\n- No known workaround\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Possible we're missing other issues\r\n- Moderately low outside of `IAccessible` usage, which is effectively unusable without this change.\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Automated tests\r\n- Manual testing (see #4114)\r\n- Walk through code paths to look for appropriate null checks\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4117)","Url":"https://github.com/dotnet/winforms/pull/4117","RelatedDescription":"Closed or merged PR \"Fix MSAA accessibility\" (#4117)"},{"Id":"722089782","IsPullRequest":true,"CreatedAt":"2020-10-15T21:06:06","Actor":"RussKie","Number":"4113","RawContent":null,"Title":"Attempt to reduce concurrency while accessing `ImageList`","State":"closed","Body":"`ImageList` appears to behave badly under stress and in heavy multy-threaded environments, e.g. https://github.com/dotnet/winforms/issues/3898#issuecomment-708958624.\r\nA shot from a hip in attempt to reduce concurrency.\r\n\r\nRelates to #3898\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4113)","Url":"https://github.com/dotnet/winforms/pull/4113","RelatedDescription":"Closed or merged PR \"Attempt to reduce concurrency while accessing `ImageList`\" (#4113)"},{"Id":"722597963","IsPullRequest":true,"CreatedAt":"2020-10-15T19:40:35","Actor":"dotnet-maestro[bot]","Number":"4116","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:6d389ecb-0616-453a-2112-08d85e71258f)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 6d389ecb-0616-453a-2112-08d85e71258f\r\n- **Build**: 20201015.3\r\n- **Date Produced**: 10/15/2020 6:45 PM\r\n- **Commit**: 25e8b0d01e5ad0154694b4b35c821e23bc09d412\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 5.0.0 to 5.0.0][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.CodeDom**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.App**: [from 5.0.0-rtm.20514.6 to 5.0.0-rtm.20515.3][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.Targets**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.Win32.Registry**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.0-rtm.20514.6 to 5.0.0-rtm.20515.3][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Cryptography.Xml**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Permissions**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Principal.Windows**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Text.Encodings.Web**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Text.Json**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Threading.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Windows.Extensions**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Cryptography.Cng**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Diagnostics.EventLog**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.DirectoryServices**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Drawing.Common**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.IO.Packaging**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Resources.Extensions**: [from 5.0.0 to 5.0.0][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/2d8e19f...25e8b0d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:6d389ecb-0616-453a-2112-08d85e71258f)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4116)","Url":"https://github.com/dotnet/winforms/pull/4116","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/runtime\" (#4116)"},{"Id":"722381742","IsPullRequest":false,"CreatedAt":"2020-10-15T14:20:03","Actor":"CarlosBressan","Number":"4115","RawContent":null,"Title":"Design Font Size Different From Execution","State":"open","Body":"* .NET Core Version: \r\n.NET 5.0 SDK (SDK 5.0.100-preview.7 de 21/07/2020) x86\r\nMicrosoft Visual Studio Community 2019 Version 16.7.6\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**Problem description:**\r\nThe font size appears different in the execution comparing with the designer.\r\n\r\n![image](https://user-images.githubusercontent.com/50844862/96140236-18651500-0ed6-11eb-9385-e0b50287f80c.png)\r\n\r\n**Expected behavior:**\r\nSame font size in the design and execution.\r\n\r\n**Minimal repro:**\r\n[TestUI.zip](https://github.com/dotnet/winforms/files/5385450/TestUI.zip)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/4115","RelatedDescription":"Open issue \"Design Font Size Different From Execution\" (#4115)"},{"Id":"722076222","IsPullRequest":false,"CreatedAt":"2020-10-15T07:27:43","Actor":"RussKie","Number":"4112","RawContent":null,"Title":"Replace deprecated `SHILCreateFromPath` with `SHParseDisplayName`","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/master/docs/issue-guide.md -->\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\n\r\n[`SHILCreateFromPath`](https://github.com/dotnet/winforms/blob/master/src/System.Windows.Forms.Primitives/src/Interop/Shell32/Interop.SHILCreateFromPath.cs) has been marked as [deprecated](https://docs.microsoft.com/windows/win32/shell/deprecated-api), and needs to be replaced with the [`SHParseDisplayName`](https://docs.microsoft.com/windows/desktop/api/shlobj_core/nf-shlobj_core-shparsedisplayname).\r\n\r\nAs raised in https://github.com/dotnet/winforms/pull/4108#discussion_r504969458","Url":"https://github.com/dotnet/winforms/issues/4112","RelatedDescription":"Open issue \"Replace deprecated `SHILCreateFromPath` with `SHParseDisplayName`\" (#4112)"},{"Id":"721906763","IsPullRequest":true,"CreatedAt":"2020-10-15T05:12:21","Actor":"RussKie","Number":"4111","RawContent":null,"Title":"Fix initial directory and custom places in file dialogs","State":"closed","Body":"\r\n\r\n`FileDialog.InitialDirectory` and `FileDialog.CustomPlaces` do not work as paths we're incorrectly marshalled as ANSI.\r\n\r\nWrote an interop regression test and manually validated the two scenarios.\r\n\r\nFixes #3513\r\n(cherry picked from commit 197420f37596230252e283a2debc2f938bfb0e70)\r\n\r\n\r\n## Proposed changes\r\n\r\n- Add the appropriate charset marshalling directive\r\n\r\n## Customer Impact\r\n\r\n- `InitialDirectory` and `CustomPlaces` do not work for `FileDialog`\r\n- No customer workaround\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Very low\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Wrote regression interop test\r\n- Manually tested the file dialog\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4111)","Url":"https://github.com/dotnet/winforms/pull/4111","RelatedDescription":"Closed or merged PR \"Fix initial directory and custom places in file dialogs\" (#4111)"},{"Id":"721848342","IsPullRequest":false,"CreatedAt":"2020-10-14T23:04:30","Actor":"qmgindi","Number":"4110","RawContent":null,"Title":"Winforms IAccessible broken in .NET 5 RC 1","State":"closed","Body":"AccessibleObjectFromPoint always returns error \"invalid parameter\".\r\nAccessibleChildren returns VARIANTs with invalid vt = VT_UI4 (must be VT_I4).\r\n\r\nWith .NET 5 preview 7 AccessibleObjectFromPoint works, but AccessibleChildren does not work correctly with many controls.\r\n\r\nTested on latest Windows 10 64-bit.\r\n\r\nProbably related: UI Automation cannot get children of some controls.\r\n","Url":"https://github.com/dotnet/winforms/issues/4110","RelatedDescription":"Closed issue \"Winforms IAccessible broken in .NET 5 RC 1\" (#4110)"},{"Id":"721792891","IsPullRequest":true,"CreatedAt":"2020-10-14T21:50:55","Actor":"dotnet-maestro[bot]","Number":"4109","RawContent":null,"Title":"[release/5.0] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:6d389ecb-0616-453a-2112-08d85e71258f)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 6d389ecb-0616-453a-2112-08d85e71258f\r\n- **Build**: 20201014.6\r\n- **Date Produced**: 10/14/2020 8:23 PM\r\n- **Commit**: 2d8e19f1880c655bcc0994852f41b47341e2c566\r\n- **Branch**: refs/heads/release/5.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 5.0.0 to 5.0.0][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.CodeDom**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.App**: [from 5.0.0-rtm.20514.4 to 5.0.0-rtm.20514.6][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.Targets**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.Win32.Registry**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 5.0.0 to 5.0.0][1]\r\n  - **Microsoft.NETCore.App.Internal**: [from 5.0.0-rtm.20514.4 to 5.0.0-rtm.20514.6][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Cryptography.Xml**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Permissions**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Principal.Windows**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Text.Encodings.Web**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Text.Json**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Threading.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Windows.Extensions**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.Cryptography.Cng**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Security.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Diagnostics.EventLog**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.DirectoryServices**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Drawing.Common**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.IO.FileSystem.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.IO.Packaging**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.IO.Pipes.AccessControl**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 5.0.0 to 5.0.0][1]\r\n  - **System.Resources.Extensions**: [from 5.0.0 to 5.0.0][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/78740be...2d8e19f\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:6d389ecb-0616-453a-2112-08d85e71258f)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](http://wpcp.azurewebsites.net/CodeFlowProtocolProxy2.php?pullrequest=https://github.com/dotnet/winforms/pull/4109)","Url":"https://github.com/dotnet/winforms/pull/4109","RelatedDescription":"Closed or merged PR \"[release/5.0] Update dependencies from dotnet/runtime\" (#4109)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-10-20T05:30:48.7233581Z","RunDurationInMilliseconds":656}