{"Data":{"GitHub":{"Issues":[{"Id":"2476960368","IsPullRequest":false,"CreatedAt":"2024-08-21T03:26:38","Actor":"Olina-Zhang","Number":"11949","RawContent":null,"Title":"[Dark Mode] Button with FlatStyle 'Standard' is not in dark mode on 100% dpi after enabled SystemColorMode.Dark","State":"open","Body":"### .NET version\r\n\r\n9.0.0-rc.1.24418.2 + private dlls built from winforms repo main branch\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNo\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nThis is a new feature Dark Mode: https://github.com/dotnet/winforms/pull/11857\r\n\r\n### Issue description\r\n\r\nOn 100% DPI, Button with FlatStyle 'Standard' is not in dark mode after enabled SystemColorMode.Dark, it cannot repro when monitor's dpi is greater than 100%.\r\n\r\non 100%DPI:\r\n<img width=\"61\" alt=\"image\" src=\"https://github.com/user-attachments/assets/5f344eb3-c2ec-45ea-8c0f-21915133bdb2\">\r\n\r\non 150%DPI:\r\n<img width=\"87\" alt=\"image\" src=\"https://github.com/user-attachments/assets/132bba48-8210-42a9-88f6-fb9b80494859\">\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a WinForms .NET Core application with button control, button's FlatStyle == Standard\r\n2. Enable DarkMode by Application.SetColorMode(SystemColorMode.Dark) in Program.cs file\r\n3. Run the application to observe","Url":"https://github.com/dotnet/winforms/issues/11949","RelatedDescription":"Open issue \"[Dark Mode] Button with FlatStyle 'Standard' is not in dark mode on 100% dpi after enabled SystemColorMode.Dark\" (#11949)"},{"Id":"2476930813","IsPullRequest":false,"CreatedAt":"2024-08-21T02:57:48","Actor":"LeafShi1","Number":"11948","RawContent":null,"Title":"Moving Clipboard related tests to a new class under collection Sequential ","State":"open","Body":"Moving the tests that use Clipboard to OriginalFileName.Clipboard.cs and [Collection(\"Sequential\")] for it, like PR #11606","Url":"https://github.com/dotnet/winforms/issues/11948","RelatedDescription":"Open issue \"Moving Clipboard related tests to a new class under collection Sequential \" (#11948)"},{"Id":"2474677656","IsPullRequest":true,"CreatedAt":"2024-08-21T00:38:40","Actor":"KlausLoeffelmann","Number":"11928","RawContent":null,"Title":"Adds basic ColorMode unit tests.","State":"closed","Body":"* Adds basic unit tests for setting the dark mode and ensures, that `IsDarkModeEnabled` works plausible in the context of the current system settings and for `SystemColorMode.System`.\r\n\r\n* Also aligns the ColorMode logic with .NET 9 (backed by said unit tests).\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11928)","Url":"https://github.com/dotnet/winforms/pull/11928","RelatedDescription":"Closed or merged PR \"Adds basic ColorMode unit tests.\" (#11928)"},{"Id":"2476709928","IsPullRequest":true,"CreatedAt":"2024-08-21T00:17:08","Actor":"dotnet-maestro[bot]","Number":"11947","RawContent":null,"Title":"[release/9.0-rc1] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fb1ad0c9-17b7-443b-0ffe-08dcbc30275f)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: fb1ad0c9-17b7-443b-0ffe-08dcbc30275f\r\n- **Build**: 20240820.11\r\n- **Date Produced**: August 20, 2024 11:04:52 PM UTC\r\n- **Commit**: fe0cfd55339cc2a0d745f742a48d5e880c112ec2\r\n- **Branch**: refs/heads/release/9.0-rc1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.CodeDom**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.Formats.Nrbf**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.IO.Hashing**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.IO.Ports**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.Management**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.Runtime.Serialization.Formatters**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.Speech**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.Text.Json**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-rc.1.24419.7 to 9.0.0-rc.1.24420.11][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/2a9d9bc627...fe0cfd5533\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:fb1ad0c9-17b7-443b-0ffe-08dcbc30275f)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11947)","Url":"https://github.com/dotnet/winforms/pull/11947","RelatedDescription":"Closed or merged PR \"[release/9.0-rc1] Update dependencies from dotnet/runtime\" (#11947)"},{"Id":"2474695972","IsPullRequest":true,"CreatedAt":"2024-08-20T23:35:56","Actor":"KlausLoeffelmann","Number":"11931","RawContent":null,"Title":"[release/9.0] [RC2] Revert #11520 to fix a MenuItem issue","State":"closed","Body":"Backport the Menu Item Fix (#11920) into .NET 9RC1 to fix #11909.\r\n\r\n•\t[MenuStrip highlight \"sticks\" after menu item is activated, also affects keyboard focus · Issue #11909 · dotnet/winforms (github.com)](https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fwinforms%2Fissues%2F11909&data=05%7C02%7CTatiana.Solyanik%40microsoft.com%7C36f94292375f495ee51e08dcc134fd67%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C638597680547308270%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=39FGpIQnB4NPJMw0XM67CQZP42CPl8dvsjfZmpj3Vak%3D&reserved=0)\r\n\r\n## Customer Impact\r\nThis is a breaking change, and it is specifically blocking [Rick Brewster (the maintainer of Paint .NET)](https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fblog.getpaint.net%2F&data=05%7C02%7CTatiana.Solyanik%40microsoft.com%7C36f94292375f495ee51e08dcc134fd67%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C638597680547317092%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=VqllJsu6MdxHdA14V62OY3kvzpdiOio57zOb4HeotrU%3D&reserved=0) to migrate Paint.NET to .NET 9, which is another reason why I would like this to get in into RC1 already, to unblock all folks, who have been started to migrate to .NET 9 and are blocked by this.\r\n## Workaround: There is none.\r\n\r\n## Regression?\r\n- [X] Yes from the previous release\r\n- [] No\r\n \r\n## Risk\r\n- [ ] High\r\n- [ ] Medium\r\n- [X] Low –The changes are isolated and are not affecting anything else. This PR is effectively a revert of the A11Y PR, which needs a different approach. We are not considering the A11Y issue High Prio issue, so it can be addressed again in .NET 10.\r\n## Verification\r\n- [X] Manual testing – Several manual tests made sure that this issue has been mitigated.\r\n- [ ] Automated\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11931)","Url":"https://github.com/dotnet/winforms/pull/11931","RelatedDescription":"Closed or merged PR \"[release/9.0] [RC2] Revert #11520 to fix a MenuItem issue\" (#11931)"},{"Id":"2476449253","IsPullRequest":true,"CreatedAt":"2024-08-20T20:03:16","Actor":"dotnet-maestro[bot]","Number":"11946","RawContent":null,"Title":"[release/9.0] Update dependencies from dotnet/runtime","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:417b4c89-9f23-476a-5003-08dcbc3022d8)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: 417b4c89-9f23-476a-5003-08dcbc3022d8\r\n- **Build**: 20240819.2\r\n- **Date Produced**: August 19, 2024 11:27:25 AM UTC\r\n- **Commit**: 418c3b9e2753715fa017ace6b3f1f5ec4d4d6aae\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.CodeDom**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.Formats.Nrbf**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.IO.Hashing**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.IO.Ports**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.Management**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.Runtime.Serialization.Formatters**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.Speech**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.Text.Json**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.2][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/0fbd81404d...418c3b9e27\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:417b4c89-9f23-476a-5003-08dcbc3022d8)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11946)","Url":"https://github.com/dotnet/winforms/pull/11946","RelatedDescription":"Open PR \"[release/9.0] Update dependencies from dotnet/runtime\" (#11946)"},{"Id":"2476442496","IsPullRequest":false,"CreatedAt":"2024-08-20T19:59:19","Actor":"KlausLoeffelmann","Number":"11945","RawContent":null,"Title":"Add Analyzer/CodeFix to guide the usage of the new Control.InvokeAsync API","State":"open","Body":".NET 9 introduces `Control.InvokeAsync`. It allows to asynchronous wait for both synchronous and asynchronous methods/functions to be marshalled to the UI Thread.\n\nTo that end, we are introducing the following overloads:\n\n```\npublic partial class Control\n{\n    public Task InvokeAsync(Action callback, CancellationToken cancellationToken = default);\n> public Task<T> InvokeAsync<T>(Func<TResult> callback, CancellationToken cancellationToken = default);\n    public Task InvokeAsync(Func<CancellationToken, ValueTask> callback, CancellationToken cancellationToken = default);\n    public Task<T> InvokeAsync<T>(Func<CancellationToken, ValueTask<T>> callback, CancellationToken cancellationToken = default);\n}\n```\n\nThe issue is the marked one above.\n\nWhile we CAN handle awaiting the passed `Func`, we won't of course doing this, when the user picks the just the `Func<TResult>.` And that's where it gets problematic, because this can happen by accident very quickly.\n\nThe additional Analyzer would point out, that a `Task` / `TaskValue` returning Func had been passed without a `CancellationToken`.\nAnd the confusing part is, that we always can pass a cancellation token to `InvokeAsync`, alright. But it needs to be the passed delegate, which should have the signature to get the cancellation token passed. If it does NOT have that, it would be considered a sync delegate - and if that one returns a Task, it becomes most likely an uncatchable fire-and-forget accidentally. ","Url":"https://github.com/dotnet/winforms/issues/11945","RelatedDescription":"Open issue \"Add Analyzer/CodeFix to guide the usage of the new Control.InvokeAsync API\" (#11945)"},{"Id":"2474692671","IsPullRequest":true,"CreatedAt":"2024-08-20T18:39:19","Actor":"KlausLoeffelmann","Number":"11930","RawContent":null,"Title":"[RC1/9.0] Backport MenuItemFix","State":"closed","Body":"Backport the Menu Item Fix (#11920) into .NET 9RC1 to fix #11909.\r\n\r\nSince the original bug fix used Properties-APIs, which are not available in .NET 9RC/Rel, a few adjustments had to be made here. \r\n\r\n## Customer Impact:\r\nThe original A11Y PR introduced a breaking change, and it is specifically blocking [Rick Brewster (the maintainer of Paint .NET)](https://blog.getpaint.net/) to migrate Paint.NET to .NET 9, which is another reason why I would like this to get in into RC1 already, to unblock all folks, who have been started to migrate to .NET 9 and are blocked by this.\r\n\r\nWorkaround: There is none.\r\n\r\n## Regression?\r\n- [X] Yes from the previous release\r\n- [ ] No\r\n \r\n## Risk\r\n- [ ] High\r\n- [ ] Medium\r\n- [X] Low –The changes are isolated and are not affecting anything else. This PR is effectively a revert of the A11Y PR, which needs a different approach. We are not considering the A11Y issue High Prio issue, so it can be addressed again in .NET 10.\r\n## Verification\r\n- [X] Manual testing – Several manual tests made sure that this issue has been mitigated.\r\n- [ ] Automated\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11930)","Url":"https://github.com/dotnet/winforms/pull/11930","RelatedDescription":"Closed or merged PR \"[RC1/9.0] Backport MenuItemFix\" (#11930)"},{"Id":"2474510876","IsPullRequest":true,"CreatedAt":"2024-08-20T18:38:50","Actor":"KlausLoeffelmann","Number":"11924","RawContent":null,"Title":"[RC1/9.0] Backport Dark Mode fix","State":"closed","Body":"Backport the Dark Mode Fix into .NET 9RC1.\r\nThe original bug fix (#11907) addressed a series of issues (#11910, #11898, #11897, #11895).\r\n\r\nSince the original bug fix used Properties-APIs, which are not available in .NET 9RC/Rel, a few adjustments had to be made here. To further ensure stability, I added basic unit tests for dark mode. \r\n\r\n## Customer Impact\r\n\r\nWe introduced a new experimental Feature “Dark Mode”. This accidentally regressed VB Apps, which are no longer able to enable Visual Styles. This PR would also address a couple of minor issues in Dark Mode itself, which have been found in recent testing.\r\n\r\nWorkaround: For the VB Part, there is no easy workaround, since `Application.EnableVisualStyles` is usually run in Program.cs, and in a VB App Framework App, there is no equivalent. \r\nThe issues of the new features do not have a workaround, but they also did not exist before.\r\n\r\nRegression?\r\n- [X] Yes\r\n- [ ] No\r\n \r\nRisk\r\n- [ ] High\r\n- [ ] Medium\r\n- [X] Low –The changes are isolated and are not affecting anything else.\r\n- \r\nVerification\r\n- [X] Manual testing – Several manual tests made sure, Visual Basic Apps are no longer broken.\r\n- [X] Automated – We added Dark Mode area specific Unit Tests in addition.\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11924)","Url":"https://github.com/dotnet/winforms/pull/11924","RelatedDescription":"Closed or merged PR \"[RC1/9.0] Backport Dark Mode fix\" (#11924)"},{"Id":"2474424808","IsPullRequest":true,"CreatedAt":"2024-08-20T18:05:05","Actor":"KlausLoeffelmann","Number":"11923","RawContent":null,"Title":"[RC1/9.0] Backport SecAnalyzer (11904)","State":"closed","Body":"Backport the MissingSerializationConfiguration Analyzer Fix into .NET 9RC1.\r\n(See #11904)\r\n\r\n## Customer Impact\r\n\r\nWe phased out the binary serializer in .NET 9 Preview 5 and start collecting and addressing feedback since than. One of the efforts to improve Customer's security and make the phasing out easier, was the introduction of Analyzers to guide through the process. One of the serializers/code fixes helps customers to identify Properties of Controls which could serialize their content accidentally. There were some cases, were the code fix did not work as expected, and this PR fixes those.\r\n\r\nWorkaround: You would need to make the code change manually.\r\n\r\nRegression?\r\n- [ ] Yes\r\n- [x] No - it's a new feature in .NET 9.\r\n \r\nRisk\r\n- [ ] High\r\n- [ ] Medium\r\n- [X] Low –The changes are isolated and are not affecting anything else.\r\n \r\nVerification\r\n- [X] Manual testing – We did manual testing to confirm all additional cases are handled.\r\n- [X] Automated – We extended respective unit tests.\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11923)","Url":"https://github.com/dotnet/winforms/pull/11923","RelatedDescription":"Closed or merged PR \"[RC1/9.0] Backport SecAnalyzer (11904)\" (#11923)"},{"Id":"2475826235","IsPullRequest":false,"CreatedAt":"2024-08-20T14:36:49","Actor":"SchoenGFM","Number":"11943","RawContent":null,"Title":"Is there a solution when using Microsoft.WinForms.Designer.SDK and Reflection in your Project?","State":"open","Body":"Okay, so using Microsoft.WinForms.Designer.SDK solved it for me, but required one more change to the codebase.\r\n\r\nAnd for future searchers and finders of this topic:\r\nWhile the Assembly containing the System.Windows.Forms.Design.ParentControlDesigner is available during runtime, the assembly that contains Microsoft.DotNet.DesignTools.Designers.ParentControlDesigner is not.\r\n\r\nThis means, that Reflection that resolves all included Type-dependencies ( like Assembly.GetTypes() ) on the assembly that contains the designer-class will now lead to a \"file not found\" exception during runtime.\r\n\r\n_Originally posted by @CortiWins in https://github.com/dotnet/winforms/issues/11531#issuecomment-2169282036_\r\n            ","Url":"https://github.com/dotnet/winforms/issues/11943","RelatedDescription":"Open issue \"Is there a solution when using Microsoft.WinForms.Designer.SDK and Reflection in your Project?\" (#11943)"},{"Id":"2475467350","IsPullRequest":true,"CreatedAt":"2024-08-20T12:00:46","Actor":"dotnet-maestro[bot]","Number":"11942","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20240819.6\r\n- **Date Produced**: August 19, 2024 9:00:02 PM UTC\r\n- **Commit**: 67631f58cd7c55fd57d9e281ee52163e3139bdcf\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.CodeDom**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.Formats.Nrbf**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.IO.Hashing**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.IO.Ports**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.Management**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.Runtime.Serialization.Formatters**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.Speech**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.Text.Json**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-rc.1.24414.5 to 9.0.0-rc.1.24419.6][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/0fbd81404d...67631f58cd\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11942)","Url":"https://github.com/dotnet/winforms/pull/11942","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/runtime\" (#11942)"},{"Id":"2475160955","IsPullRequest":false,"CreatedAt":"2024-08-20T09:27:26","Actor":"Syareel-Sukeri","Number":"11941","RawContent":null,"Title":"[Dark Mode] Selection highlight doesn't move when quickly checking a node's checkbox in TreeView","State":"open","Body":"### .NET version\n\n9.0.0-rc.1.24418.2 + build private dll from winforms repo main branch\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nThis is a new feature Dark Mode: https://github.com/dotnet/winforms/pull/11857\n\n### Issue description\n\nThe selection highlight does not move to the checked node if the checkbox is clicked quickly when nodes are configured as checkboxes in Dark Mode. \r\n\r\n**Dark Mode**\r\n\r\nhttps://github.com/user-attachments/assets/588c3a01-5c25-423d-8de8-f0fe11e6061b\r\n\r\n\r\n\r\n**Classic**\r\n\r\n\r\nhttps://github.com/user-attachments/assets/83bcef4a-e023-4d38-9c93-c1540cc77355\r\n\r\n\r\n\n\n### Steps to reproduce\n\n1. Create a WinForms .NET Core application with TreeView control\r\n2. Configure a TreeView control with nodes that have checkboxes enabled.\r\n3. Enable DarkMode by Application.SetColorMode(SystemColorMode.Dark) in Program.cs file\r\n4. Run the application and open the TreeView.\r\n5. Click on any node to highlight it.\r\n6. Quickly click the checkbox of a different node without pausing between actions.","Url":"https://github.com/dotnet/winforms/issues/11941","RelatedDescription":"Open issue \"[Dark Mode] Selection highlight doesn't move when quickly checking a node's checkbox in TreeView\" (#11941)"},{"Id":"2475054797","IsPullRequest":false,"CreatedAt":"2024-08-20T08:39:11","Actor":"Nora-Zhou01","Number":"11940","RawContent":null,"Title":"[Dark Mode] PrintPreviewControl does not display correctly after setting the background to black","State":"open","Body":"### .NET version\n\n9.0.0-rc.1.24415.1 + build private dll from winforms repo main branch\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nThis is a new feature Dark Mode: https://github.com/dotnet/winforms/pull/11857\n\n### Issue description\n\nDark Mode：\r\nPrintPreviewControl does not display correctly after setting the background to black\r\n![print1](https://github.com/user-attachments/assets/c14fba45-20a1-4790-8f9c-12c291c5fa6c)\r\nClassic Mode:\r\nPrintPreviewControl can be displayed correctly after the background is set to black\r\n![print2](https://github.com/user-attachments/assets/bb719e83-f69c-45fc-bda6-27d07aa22522)\r\n\n\n### Steps to reproduce\n\n1. Create a WinForms .NET Core application with PrintPreviewControl control\r\n2. PrintPreviewControl backcolor is set to black\r\n3. Enable DarkMode by Application.SetColorMode(SystemColorMode.Dark) in Program.cs file\r\n4. Run the application","Url":"https://github.com/dotnet/winforms/issues/11940","RelatedDescription":"Open issue \"[Dark Mode] PrintPreviewControl does not display correctly after setting the background to black\" (#11940)"},{"Id":"2475028394","IsPullRequest":false,"CreatedAt":"2024-08-20T08:26:00","Actor":"Liv-Goh","Number":"11939","RawContent":null,"Title":"[Dark Mode]HelpProvider text color is barely visible","State":"open","Body":"### .NET version\n\n9.0.0-rc.1.24418.2 + build private dll from winforms repo main branch\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nThis is a new feature Dark Mode: https://github.com/dotnet/winforms/pull/11857\n\n### Issue description\n\nThe text color of the helpProvider is barely visible in Dark Mode.\r\n\r\n**Dark Mode**\r\n![Screenshot 2024-08-20 160509 (1)](https://github.com/user-attachments/assets/b93a713e-3e07-4051-a56e-15a501e27a2a)\r\n\r\n**Classic Mode**\r\n![Screenshot 2024-08-20 160156 (1)](https://github.com/user-attachments/assets/4b9eda61-17a6-4f75-b0ff-6e6103b49171)\r\n\r\n\n\n### Steps to reproduce\n\n1. Create a .NET Core WinForms project\r\n2. Add button and helpProvider to the form\r\n3. Set button's properties as below\r\n- HelpString on helpProvider : testing 123\r\n- ShowHelp on helpProvider : True\r\n4. Build and run the project\r\n5. Click the button and press F1 key","Url":"https://github.com/dotnet/winforms/issues/11939","RelatedDescription":"Open issue \"[Dark Mode]HelpProvider text color is barely visible\" (#11939)"},{"Id":"2475025456","IsPullRequest":false,"CreatedAt":"2024-08-20T08:24:34","Actor":"MandiMan","Number":"11938","RawContent":null,"Title":"[Dark Mode] The BackColor of the ProgressBar control should not be changed","State":"open","Body":"### .NET version\r\n\r\n9.0.100-rc.1.24418.2 + build private dll from winforms repo main branch\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNo\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nThis is a new feature Dark Mode: https://github.com/dotnet/winforms/pull/11857\r\n\r\n### Issue description\r\n\r\nIn Dark Mode, the BackColor of the ProgressBar control will change to red when its BackColor property is set to red\r\nThe BackColor of the ProgressBar will not be changed in Classic Mode\r\n\r\n**Dark Mode**\r\n![image](https://github.com/user-attachments/assets/f43bc5bb-2875-4b5b-a68c-6398c57c69e8)\r\n\r\n**Classic Mode**\r\n![image](https://github.com/user-attachments/assets/c6edeca4-171c-4164-8f68-7a998fe124e9)\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a WinForms .NET Core application with ProgressBar control\r\n2. Enable DarkMode by Application.SetColorMode(SystemColorMode.Dark) in Program.cs file\r\n3. Set the BackColor property of the ProgressBar to red\r\n4. Run the application","Url":"https://github.com/dotnet/winforms/issues/11938","RelatedDescription":"Open issue \"[Dark Mode] The BackColor of the ProgressBar control should not be changed\" (#11938)"},{"Id":"2474971559","IsPullRequest":false,"CreatedAt":"2024-08-20T07:56:50","Actor":"Zheng-Li01","Number":"11937","RawContent":null,"Title":"[Dark Mode] The color contrast is less than 3:1 for seleted treenode","State":"open","Body":"### .NET version\n\n9.0.0-rc.1.24414.1 + build private dll form winforms repo main branch\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nThis is a new feature Dark Mode: https://github.com/dotnet/winforms/pull/11857\n\n### Issue description\n\n The color contrast is less than 3:1 for seleted treenode in the DarkMode\r\n![image](https://github.com/user-attachments/assets/15b586b3-19d2-4d32-9621-5be46bce3487)\r\n\n\n### Steps to reproduce\n\n1. Create a WinForms .NET Core application with TreeView control.\r\n2. Add some nodes for treeview1 control.\r\n3. Enable DarkMode by Application.SetColorMode(SystemColorMode.Dark) in Program.cs file.\r\n4. Run the application.\r\n5. Selected the node, and then using the Accessibility Insight tool to observe the color contrast between selected node and background. ","Url":"https://github.com/dotnet/winforms/issues/11937","RelatedDescription":"Open issue \"[Dark Mode] The color contrast is less than 3:1 for seleted treenode\" (#11937)"},{"Id":"2474964779","IsPullRequest":true,"CreatedAt":"2024-08-20T07:53:20","Actor":"LeafShi1","Number":"11936","RawContent":null,"Title":"Moving Clipboard related tests to a new class and combine the ClipboardTests class","State":"open","Body":"\r\n<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nRelated #11227\r\n\r\n## Proposed changes\r\n\r\n- Moving the tests that using Clipboard under class `RichTextBoxTests` to a new class `RichTextBoxTests.ClipboardTests.cs`\r\n- Combine the class `ClipboardTests.cs`\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11936)","Url":"https://github.com/dotnet/winforms/pull/11936","RelatedDescription":"Open PR \"Moving Clipboard related tests to a new class and combine the ClipboardTests class\" (#11936)"},{"Id":"2474961472","IsPullRequest":false,"CreatedAt":"2024-08-20T07:51:31","Actor":"Zheng-Li01","Number":"11935","RawContent":null,"Title":"[Dark Mode] Improve visual contrast of the LinkLable control in dark mode","State":"open","Body":"### .NET version\n\n9.0.0-rc.1.24414.1 + build private dll form winforms repo main branch\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nThis is a new feature Dark Mode: https://github.com/dotnet/winforms/pull/11857\n\n### Issue description\n\nThe linklable control is not clear in the DarkMode\r\n![image](https://github.com/user-attachments/assets/962fc7f6-e8ee-4346-a58a-14ce6de92e98)\r\n\n\n### Steps to reproduce\n\n1. Create a WinForms .NET Core application with LinkLable control.\r\n2. Enable DarkMode by Application.SetColorMode(SystemColorMode.Dark) in Program.cs file.\r\n3. Run the application.","Url":"https://github.com/dotnet/winforms/issues/11935","RelatedDescription":"Open issue \"[Dark Mode] Improve visual contrast of the LinkLable control in dark mode\" (#11935)"},{"Id":"2474929772","IsPullRequest":true,"CreatedAt":"2024-08-20T07:35:05","Actor":"github-actions[bot]","Number":"11934","RawContent":null,"Title":"[release/9.0] Fix OnItemChecked method throw exception when the ListViewItem is clone object.","State":"open","Body":"Backport of #11892 to release/9.0\r\n\r\n## Proposed changes\r\n\r\n- Verify that this item belongs to this ListView in OnItemChecked method.\r\n- Add test case for clones ListView item.\r\n\r\n## Customer Impact\r\n\r\n- When the ListViewItem is a clone, the OnItemChecked method does not throw an accessiblity object not created exception.\r\n\r\n## Regression?\r\n\r\n- Yes, it's a regression from .NET framework.\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![2](https://github.com/user-attachments/assets/9b07ad74-f5d0-4d52-b331-7b7bee9a72c1)\r\n\r\n### After\r\n\r\n![1](https://github.com/user-attachments/assets/30585e1f-a108-4a49-9cbe-c883145ebfe4)\r\n## Testing methodology\r\nManually \r\n\r\n## Accessibility testing\r\n\r\n- Accessibility Insights.\r\n\r\n## Test environment(s)\r\n\r\n- 9.0.100-preview.7.24407.12\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11934)","Url":"https://github.com/dotnet/winforms/pull/11934","RelatedDescription":"Open PR \"[release/9.0] Fix OnItemChecked method throw exception when the ListViewItem is clone object.\" (#11934)"},{"Id":"2474799567","IsPullRequest":false,"CreatedAt":"2024-08-20T06:11:58","Actor":"Liv-Goh","Number":"11933","RawContent":null,"Title":"[Dark Mode] Indeterminate CheckState icon barely visible","State":"open","Body":"### .NET version\r\n\r\n9.0.0-rc.1.24418.2 + build private dll from winforms repo main branch\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNot tested/verified\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nThis is a new feature Dark Mode: https://github.com/dotnet/winforms/pull/11857\r\n\r\n### Issue description\r\n\r\nThe indeterminate check state icon is barely visible in Dark Mode. Controls affected are ContextMenuStrip, MenuStrip, StatusStrip DropDownButton and ToolStrip DropDownButton\r\n\r\n**Dark Mode**\r\n![Screenshot 2024-08-20 134113 (1)](https://github.com/user-attachments/assets/43961148-8673-451e-8324-c261e2ca1912)\r\n\r\n**Classic Mode**\r\n![Screenshot 2024-08-20 134353 (1)](https://github.com/user-attachments/assets/6e83aff9-a5d9-4c35-8ac9-3df0ad98e7c1)\r\n\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a WinForms project\r\n2. Add a ContextMenuStrip to the form\r\n3. Add a toolStripMenuItem to the ContextMenuStrip\r\n4. Change the property of the toolStripMenuItem as below\r\n- Checked : True\r\n- CheckState : Indeterminate \r\n5. Set form ContextMenuStrip property to contextMenuStrip1\r\n6. Run the project and observe the indeterminate Checkstate icon","Url":"https://github.com/dotnet/winforms/issues/11933","RelatedDescription":"Open issue \"[Dark Mode] Indeterminate CheckState icon barely visible\" (#11933)"},{"Id":"2474785678","IsPullRequest":false,"CreatedAt":"2024-08-20T06:01:26","Actor":"Syareel-Sukeri","Number":"11932","RawContent":null,"Title":"[Dark Mode] Different Icon Display for Expanding Nodes with Child Items in TreeView ","State":"open","Body":"### .NET version\r\n\r\n9.0.0-rc.1.24414.1 + build private dll from winforms repo main branch\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNo\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nThis is a new feature Dark Mode: https://github.com/dotnet/winforms/pull/11857\r\n\r\n### Issue description\r\n\r\nThe icon for expanding nodes with child items in TreeView appears differently in Dark Mode compared to Classic. Please confirm if this is the expected behavior. Below are the results in Classic and Dark Mode\r\n\r\n**Classic**\r\n![Screenshot 2024-08-20 055045](https://github.com/user-attachments/assets/f8fc6fbd-5bdd-4fc0-85dc-49006728be56)\r\n\r\n**Dark Mode** \r\n![Screenshot 2024-08-20 054838](https://github.com/user-attachments/assets/f309bf0f-ee08-40c3-be56-893cac3499cd)\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a WinForms .NET Core application with TreeView control.\r\n2. Populate the TreeView with a parent node that contains several child nodes.\r\n3. Enable DarkMode by Application.SetColorMode(SystemColorMode.Dark) in Program.cs file.\r\n4. Run the application.\r\n5. Observe the expand icon\r\n","Url":"https://github.com/dotnet/winforms/issues/11932","RelatedDescription":"Open issue \"[Dark Mode] Different Icon Display for Expanding Nodes with Child Items in TreeView \" (#11932)"},{"Id":"2474680234","IsPullRequest":true,"CreatedAt":"2024-08-20T04:15:12","Actor":"KlausLoeffelmann","Number":"11929","RawContent":null,"Title":"[RC2/9.0] Backport Dark Mode fix","State":"open","Body":"Backport the Dark Mode Fix into .NET 9Rel.\r\nThe original bug fix (#11907) addressed a series of issues (#11910, #11898, #11897, #11895).\r\n\r\nSince the original bug fix used Properties-APIs, which are not available in .NET 9RC/Rel, a few adjustments had to be made here. To further ensure stability, I added basic unit tests for dark mode. \r\n\r\n## Customer Impact\r\n\r\nWe introduced a new experimental Feature “Dark Mode”. This accidentally regressed VB Apps, which are no longer able to enable Visual Styles. This PR would also address a couple of minor issues in Dark Mode itself, which have been found in recent testing.\r\n\r\nWorkaround: For the VB Part, there is no easy workaround, since `Application.EnableVisualStyles` is usually run in Program.cs, and in a VB App Framework App, there is no equivalent. \r\nThe issues of the new features do not have a workaround, but they also did not exist before.\r\n\r\nRegression?\r\n- [X] Yes\r\n- [ ] No\r\n \r\nRisk\r\n- [ ] High\r\n- [ ] Medium\r\n- [X] Low –The changes are isolated and are not affecting anything else.\r\n- \r\nVerification\r\n- [X] Manual testing – Several manual tests made sure, Visual Basic Apps are no longer broken.\r\n- [X] Automated – We added Dark Mode area specific Unit Tests in addition.\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11929)","Url":"https://github.com/dotnet/winforms/pull/11929","RelatedDescription":"Open PR \"[RC2/9.0] Backport Dark Mode fix\" (#11929)"},{"Id":"2474651086","IsPullRequest":false,"CreatedAt":"2024-08-20T03:42:26","Actor":"Olina-Zhang","Number":"11927","RawContent":null,"Title":"Cannot get correct value 'NotSet' when setting the ImageLayout value of DataGridViewImage cell with 'NotSet' value","State":"open","Body":"### .NET version\n\n9.0.100-rc.2.24419.18 + private dlls built from winforms repo main branch\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, it works in .Net previous versions and 9.0.100-rc.2.24419.18 SDK build\n\n### Issue description\n\nWhen setting the ImageLayout value of DataGridViewImageLink cell with **NotSet** value, cannot get **NotSet** value, but **Normal** value. It causes our one automation case failed recently. \r\n\r\nOther ImageLayout values: Normal/Stretch/Zoom work well.\r\n\r\n9.0.100-rc.2.24419.18 + private dlls built from winforms repo main branch:\r\n![image](https://github.com/user-attachments/assets/49bb946a-39a2-4266-a55e-52292de50bcd)\r\n\r\n9.0.100-rc.2.24419.18: \r\n![image](https://github.com/user-attachments/assets/05d5285d-b70d-4def-bac7-e056f570118f)\r\n\n\n### Steps to reproduce\n\nTest app:\r\n[WinFormsApp22.zip](https://github.com/user-attachments/files/16668567/WinFormsApp22.zip)\r\n","Url":"https://github.com/dotnet/winforms/issues/11927","RelatedDescription":"Open issue \"Cannot get correct value 'NotSet' when setting the ImageLayout value of DataGridViewImage cell with 'NotSet' value\" (#11927)"},{"Id":"2474610959","IsPullRequest":true,"CreatedAt":"2024-08-20T02:54:43","Actor":"LeafShi1","Number":"11926","RawContent":null,"Title":"Update the TextFormatFlags of the HelpTextLabel","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #11925\r\n\r\n\r\n## Proposed changes\r\n\r\n- Add  `TextFormatFlags.PreserveGraphicsClipping | TextFormatFlags.PreserveGraphicsTranslateTransform` to TextFormatFlags of the class `HelpTextLabel`\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n-  None\r\n\r\n## Regression? \r\n\r\n-  No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\nThe DemoConsole app under the Winforms repo will stop running when opening the smattag of the DataGridView and click the dropdown button of the \"Choose Data Source\"\r\n\r\n![HelpTextLabel](https://github.com/user-attachments/assets/854d3e50-6301-4c0b-af75-55a239bd1ace)\r\n\r\n### After\r\nThe DemoConsole app can be debug normally\r\n![AfterChanges](https://github.com/user-attachments/assets/eb92e944-5d6c-42d5-ac58-c37417a6ae84)\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manually\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .net 9.0.0-rc.1.24413.14\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11926)","Url":"https://github.com/dotnet/winforms/pull/11926","RelatedDescription":"Open PR \"Update the TextFormatFlags of the HelpTextLabel\" (#11926)"},{"Id":"2474569491","IsPullRequest":false,"CreatedAt":"2024-08-20T02:05:36","Actor":"LeafShi1","Number":"11925","RawContent":null,"Title":"The HelpTextLable cannot be painted in Debug mode","State":"open","Body":"### .NET version\r\n\r\nfeature/10.0 branch of Winforms repo\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNot tested/verified\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nYes\r\n\r\n### Issue description\r\n\r\nThe DemoConsole app under the Winforms repo will stop running when opening the smattag of the DataGridView and click the dropdown button of the \"Choose Data Source\"\r\n\r\n### Steps to reproduce\r\n\r\n1. Debug the DemoConsole App\r\n2. Select the DataGridView\r\n3. Open the smarttag\r\n4. Click the dropdown button of the \"Choose Data Source\"\r\n\r\n![HelpTextLabel](https://github.com/user-attachments/assets/854d3e50-6301-4c0b-af75-55a239bd1ace)","Url":"https://github.com/dotnet/winforms/issues/11925","RelatedDescription":"Open issue \"The HelpTextLable cannot be painted in Debug mode\" (#11925)"},{"Id":"2474386198","IsPullRequest":true,"CreatedAt":"2024-08-19T23:55:26","Actor":"dotnet-maestro[bot]","Number":"11921","RawContent":null,"Title":"[release/9.0-rc1] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:fb1ad0c9-17b7-443b-0ffe-08dcbc30275f)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: fb1ad0c9-17b7-443b-0ffe-08dcbc30275f\r\n- **Build**: 20240819.7\r\n- **Date Produced**: August 19, 2024 10:20:20 PM UTC\r\n- **Commit**: 2a9d9bc6274412cec94d561c999d060df0e53457\r\n- **Branch**: refs/heads/release/9.0-rc1\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.CodeDom**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.Formats.Nrbf**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.IO.Hashing**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.IO.Ports**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.Management**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.Runtime.Serialization.Formatters**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.Speech**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.Text.Json**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-rc.1.24418.3 to 9.0.0-rc.1.24419.7][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/01607d3819...2a9d9bc627\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:fb1ad0c9-17b7-443b-0ffe-08dcbc30275f)\r\n\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11921)","Url":"https://github.com/dotnet/winforms/pull/11921","RelatedDescription":"Closed or merged PR \"[release/9.0-rc1] Update dependencies from dotnet/runtime\" (#11921)"},{"Id":"2474422487","IsPullRequest":true,"CreatedAt":"2024-08-19T23:23:03","Actor":"KlausLoeffelmann","Number":"11922","RawContent":null,"Title":"[RC2/9.0] Backport SecAnalyzer (11904)","State":"open","Body":"Backport the MissingSerializationConfiguration Analyzer Fix into .NET 9Rel.\r\n(See #11904)\r\n\r\n## Customer Impact\r\n\r\nWe phased out the binary serializer in .NET 9 Preview 5 and start collecting and addressing feedback since than. One of the efforts to improve Customer's security and make the phasing out easier, was the introduction of Analyzers to guide through the process. One of the serializers/code fixes helps customers to identify Properties of Controls which could serialize their content accidentally. There were some cases, were the code fix did not work as expected, and this PR fixes those.\r\n\r\nWorkaround: You would need to make the code change manually.\r\n\r\nRegression?\r\n- [ ] Yes\r\n- [x] No - it's a new feature in .NET 9.\r\n \r\nRisk\r\n- [ ] High\r\n- [ ] Medium\r\n- [X] Low –The changes are isolated and are not affecting anything else.\r\n \r\nVerification\r\n- [X] Manual testing – We did manual testing to confirm all additional cases are handled.\r\n- [X] Automated – We extended respective unit tests.\r\n\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11922)","Url":"https://github.com/dotnet/winforms/pull/11922","RelatedDescription":"Open PR \"[RC2/9.0] Backport SecAnalyzer (11904)\" (#11922)"},{"Id":"2474363077","IsPullRequest":true,"CreatedAt":"2024-08-19T23:12:25","Actor":"KlausLoeffelmann","Number":"11920","RawContent":null,"Title":"Revert #11520 to fix a MenuItem issue.","State":"closed","Body":"Reverting this fixes #11909.\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11920)","Url":"https://github.com/dotnet/winforms/pull/11920","RelatedDescription":"Closed or merged PR \"Revert #11520 to fix a MenuItem issue.\" (#11920)"},{"Id":"2473753082","IsPullRequest":true,"CreatedAt":"2024-08-19T23:10:50","Actor":"github-actions[bot]","Number":"11919","RawContent":null,"Title":"[release/9.0] [RC2] Add clipping and transforms from Graphics to DC when repainting watermark in SplitterPanelDesigner","State":"closed","Body":"Backport of #11876 to release/9.0\r\n\r\n/cc @ricardobossan\r\n\r\nIssue [https://github.com/dotnet/winforms/issues/11790](https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fwinforms%2Fissues%2F11790&data=05%7C02%7CTatiana.Solyanik%40microsoft.com%7C99d92612794c4ff8b24e08dcc076e01e%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C638596864019425773%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C0%7C%7C%7C&sdata=%2BrTBtNBVkdo%2BNfRU%2BuRql%2BEzPRcm%2FkvjDG%2FdTDMZ79s%3D&reserved=0) \r\n\r\n## Customer Impact\r\n•\tCustomers are requesting WinForms to enable ReportDesigner and IDE-like scenarios with ControlDesigners. We shipped this designer in .NET 5 with a rendering issue, which was previously missed due to limited testing.\r\n•\tThe issue surfaces in HDPI scenarios where the splitter panel label is misplaced.\r\n•\tThe issue was found internally in a test application.\r\n•\tNo workarounds are available.\r\n\r\n## Regression\r\n•\t no\r\n\r\n## Testing\r\n•\tAdded this ControlDesigner to the test application\r\n\r\n## Risk\r\n•\tLow – this fix is already present in the out-of-process winforms designer\r\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/11919)","Url":"https://github.com/dotnet/winforms/pull/11919","RelatedDescription":"Closed or merged PR \"[release/9.0] [RC2] Add clipping and transforms from Graphics to DC when repainting watermark in SplitterPanelDesigner\" (#11919)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-08-21T03:30:27.3941558Z","RunDurationInMilliseconds":399}