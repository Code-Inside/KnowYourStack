{"Data":{"GitHub":{"Issues":[{"Id":"1086074276","IsPullRequest":true,"CreatedAt":"2021-12-21T19:57:57","Actor":"gpetrou","Number":"6385","RawContent":null,"Title":"Enable nullability in HelpInfo","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in HelpInfo.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6385)","Url":"https://github.com/dotnet/winforms/pull/6385","RelatedDescription":"Closed or merged PR \"Enable nullability in HelpInfo\" (#6385)"},{"Id":"1085676710","IsPullRequest":true,"CreatedAt":"2021-12-21T18:46:50","Actor":"gpetrou","Number":"6378","RawContent":null,"Title":"Enable nullability in ControlInformation","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ControlInformation.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6378)","Url":"https://github.com/dotnet/winforms/pull/6378","RelatedDescription":"Closed or merged PR \"Enable nullability in ControlInformation\" (#6378)"},{"Id":"1085534678","IsPullRequest":true,"CreatedAt":"2021-12-21T18:30:57","Actor":"gpetrou","Number":"6375","RawContent":null,"Title":"Enable nullability in LinkLabelLinkClickedEventHandler","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in LinkLabelLinkClickedEventHandler\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6375)","Url":"https://github.com/dotnet/winforms/pull/6375","RelatedDescription":"Closed or merged PR \"Enable nullability in LinkLabelLinkClickedEventHandler\" (#6375)"},{"Id":"1086064503","IsPullRequest":true,"CreatedAt":"2021-12-21T17:35:28","Actor":"gpetrou","Number":"6384","RawContent":null,"Title":"Enable nullability in some COM2 handlers","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in some COM2 handlers.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6384)","Url":"https://github.com/dotnet/winforms/pull/6384","RelatedDescription":"Open PR \"Enable nullability in some COM2 handlers\" (#6384)"},{"Id":"1086038825","IsPullRequest":true,"CreatedAt":"2021-12-21T17:04:20","Actor":"gpetrou","Number":"6383","RawContent":null,"Title":"Enable nullability in StyleConverter","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in StyleConverter.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6383)","Url":"https://github.com/dotnet/winforms/pull/6383","RelatedDescription":"Open PR \"Enable nullability in StyleConverter\" (#6383)"},{"Id":"1085999059","IsPullRequest":false,"CreatedAt":"2021-12-21T16:18:25","Actor":"2mik","Number":"6382","RawContent":null,"Title":"ItemHeight of ListBox is not scaled on high DPI in OwnerDrawFixed mode","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n6.0\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\nWhen using ListBox in the OwnerDrawFixed mode, item heights are not scaled.\r\nScale 100%\r\n![scale100](https://user-images.githubusercontent.com/9930867/146963072-7692bfbe-e38d-42dc-a565-525709369ef8.png)\r\nScale 150%\r\n![scale100](https://user-images.githubusercontent.com/9930867/146963091-2ce18abd-ef5b-42b6-acd0-931b7aa16c30.png)\r\n\r\n\r\n**Expected behavior:**\r\nItem heights are scaled in the OwnerDrawFixed mode.\r\n\r\n**Minimal repro:**\r\nSample app is attached. Run it with 100% and 150% scaling.\r\n[ItemHeightBug.zip](https://github.com/dotnet/winforms/files/7756694/ItemHeightBug.zip)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6382","RelatedDescription":"Open issue \"ItemHeight of ListBox is not scaled on high DPI in OwnerDrawFixed mode\" (#6382)"},{"Id":"1085978015","IsPullRequest":false,"CreatedAt":"2021-12-21T15:56:15","Actor":"2mik","Number":"6381","RawContent":null,"Title":"Anchors of user control don't work when scaling on high DPI","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n6.0\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\n\r\nWhen components are inside a user control, their anchors work incorrect when scaling. It affects a project a lot, because using docking instead of anchors for components inside a user control is difficult in some cases.\r\nScale 100%\r\n![scale100](https://user-images.githubusercontent.com/9930867/146959607-0dc9603a-ef6d-4b9f-ad77-1a8167df6f87.png)\r\nScale 150%\r\n![scale150](https://user-images.githubusercontent.com/9930867/146959627-40cfaf0e-9a22-4482-940c-1d426e154929.png)\r\n\r\n**Expected behavior:**\r\nAnchors works well like it was on classic .NET.\r\n\r\n**Minimal repro:**\r\nSample app is attached. Run it when screen is scaled 150% to reproduce the bug.\r\n[ControlScalingBug.zip](https://github.com/dotnet/winforms/files/7756538/ControlScalingBug.zip)","Url":"https://github.com/dotnet/winforms/issues/6381","RelatedDescription":"Open issue \"Anchors of user control don't work when scaling on high DPI\" (#6381)"},{"Id":"1085918322","IsPullRequest":false,"CreatedAt":"2021-12-21T14:55:27","Actor":"2mik","Number":"6380","RawContent":null,"Title":"TreeView images not scaled on high DPI","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n6.0\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNo\r\n\r\n**Problem description:**\r\nWhen a monitor is scaled, for example 150%, tree view images are still small while labels are scaled well. See the screenshots.\r\nScale 100%\r\n![scale100](https://user-images.githubusercontent.com/9930867/146950228-a72087ee-eb7f-4f2f-8ec4-ddb745172236.png)\r\nScale 150%\r\n![scale150](https://user-images.githubusercontent.com/9930867/146950263-c685ebbf-1cb4-4233-af55-38a9a2d569bb.png)\r\n\r\n\r\n**Expected behavior:**\r\nImages also scaled.\r\n\r\n**Minimal repro:**\r\nSample app attached.\r\n[TreeViewImagesBug.zip](https://github.com/dotnet/winforms/files/7756112/TreeViewImagesBug.zip)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6380","RelatedDescription":"Open issue \"TreeView images not scaled on high DPI\" (#6380)"},{"Id":"1085816091","IsPullRequest":true,"CreatedAt":"2021-12-21T13:48:52","Actor":"dotnet-maestro[bot]","Number":"6379","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20211220.2\r\n- **Date Produced**: December 20, 2021 5:56:33 PM UTC\r\n- **Commit**: 2af5dda2d48417982a6b90bf28e8b9a9b57f5ad4\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.21617.4 to 7.0.0-beta.21620.2][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21617.4 to 7.0.0-beta.21620.2][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.21617.4 to 7.0.0-beta.21620.2][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.21617.4 to 7.0.0-beta.21620.2][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.21617.4 to 7.0.0-beta.21620.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21617.4 to 7.0.0-beta.21620.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/78659a1...2af5dda\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6379)","Url":"https://github.com/dotnet/winforms/pull/6379","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6379)"},{"Id":"1085672696","IsPullRequest":true,"CreatedAt":"2021-12-21T10:22:50","Actor":"gpetrou","Number":"6377","RawContent":null,"Title":"Enable nullability in AutomationMessages","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in AutomationMessages.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6377)","Url":"https://github.com/dotnet/winforms/pull/6377","RelatedDescription":"Open PR \"Enable nullability in AutomationMessages\" (#6377)"},{"Id":"1085599419","IsPullRequest":true,"CreatedAt":"2021-12-21T09:07:49","Actor":"gpetrou","Number":"6376","RawContent":null,"Title":"Enable nullability in DataObject","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in DataObject.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6376)","Url":"https://github.com/dotnet/winforms/pull/6376","RelatedDescription":"Open PR \"Enable nullability in DataObject\" (#6376)"},{"Id":"1085527082","IsPullRequest":true,"CreatedAt":"2021-12-21T07:36:02","Actor":"gpetrou","Number":"6374","RawContent":null,"Title":"Enable nullability in SpecialFolderEnumConverter","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in SpecialFolderEnumConverter.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6374)","Url":"https://github.com/dotnet/winforms/pull/6374","RelatedDescription":"Open PR \"Enable nullability in SpecialFolderEnumConverter\" (#6374)"},{"Id":"1085523976","IsPullRequest":true,"CreatedAt":"2021-12-21T07:31:30","Actor":"gpetrou","Number":"6373","RawContent":null,"Title":"Enable nullability in ListViewGroupConverter","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in ListViewGroupConverter\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6373)","Url":"https://github.com/dotnet/winforms/pull/6373","RelatedDescription":"Open PR \"Enable nullability in ListViewGroupConverter\" (#6373)"},{"Id":"1085519484","IsPullRequest":true,"CreatedAt":"2021-12-21T07:25:17","Actor":"gpetrou","Number":"6372","RawContent":null,"Title":"Enable nullability in TreeNodeConverter","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in TreeNodeConverter.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6372)","Url":"https://github.com/dotnet/winforms/pull/6372","RelatedDescription":"Open PR \"Enable nullability in TreeNodeConverter\" (#6372)"},{"Id":"1085516996","IsPullRequest":true,"CreatedAt":"2021-12-21T07:21:44","Actor":"gpetrou","Number":"6371","RawContent":null,"Title":"Enable nullability in OpacityConverter","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in OpacityConverter.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6371)","Url":"https://github.com/dotnet/winforms/pull/6371","RelatedDescription":"Open PR \"Enable nullability in OpacityConverter\" (#6371)"},{"Id":"1085268110","IsPullRequest":true,"CreatedAt":"2021-12-20T22:46:35","Actor":"dreddy-work","Number":"6370","RawContent":null,"Title":"Targeting TFM to 7.0","State":"open","Body":"contributes to #6323\r\n\r\nUpgrading TFM for WinForms main branch to 7.0.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6370)","Url":"https://github.com/dotnet/winforms/pull/6370","RelatedDescription":"Open PR \"Targeting TFM to 7.0\" (#6370)"},{"Id":"1085121963","IsPullRequest":true,"CreatedAt":"2021-12-20T22:41:55","Actor":"dotnet-bot","Number":"6369","RawContent":null,"Title":"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 1521543","State":"closed","Body":"This is the pull request automatically created by the OneLocBuild task in the build process to check-in localized files generated based upon translation source files (.lcl files) handed-back from the downstream localization pipeline. If there are issues in translations, visit https://aka.ms/ceLocBug and log bugs for fixes. The OneLocBuild wiki is https://aka.ms/onelocbuild and the localization process in general is documented at https://aka.ms/AllAboutLoc.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6369)","Url":"https://github.com/dotnet/winforms/pull/6369","RelatedDescription":"Closed or merged PR \"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 1521543\" (#6369)"},{"Id":"1082036400","IsPullRequest":true,"CreatedAt":"2021-12-20T18:34:02","Actor":"SergeySmirnov-Akvelon","Number":"6354","RawContent":null,"Title":"Fixing NRE when the user press the left / right arrow in ListView","State":"closed","Body":"Fixes #6353\r\n\r\n## Proposed changes\r\n- The issue is reproduced because we are trying to access a `ListViewGroup` that the `ListViewItem` may not contain it.\r\n- Added a condition so that the code for working with `ListViewGroups` is called only when the `ListViewGroups` are enabled (`GroupsEnabled` property).\r\n- Fixed condition for cases when the `Group` property has `null` value. \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n**Before fix:**\r\n![Issue-6353](https://user-images.githubusercontent.com/23376742/146353359-81c3ec2f-5d81-4066-82e6-1cdc8e918861.gif)\r\n\r\n**After fix:**\r\n![Issue-6353_AfterFix](https://user-images.githubusercontent.com/23376742/146356548-d77d6290-fa60-4370-ac80-e88297e18a15.gif)\r\n\r\n## Regression? \r\n- Yes (from #5960)\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- Unit tests\r\n- CTI team\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n- Microsoft Windows [Version 10.0.19041.1348]\r\n- .NET Core SDK: 7.0.0-alpha.1.21576.4\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6354)","Url":"https://github.com/dotnet/winforms/pull/6354","RelatedDescription":"Closed or merged PR \"Fixing NRE when the user press the left / right arrow in ListView\" (#6354)"},{"Id":"1083843412","IsPullRequest":true,"CreatedAt":"2021-12-20T18:33:18","Actor":"dotnet-bot","Number":"6365","RawContent":null,"Title":"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 1519865","State":"closed","Body":"This is the pull request automatically created by the OneLocBuild task in the build process to check-in localized files generated based upon translation source files (.lcl files) handed-back from the downstream localization pipeline. If there are issues in translations, visit https://aka.ms/ceLocBug and log bugs for fixes. The OneLocBuild wiki is https://aka.ms/onelocbuild and the localization process in general is documented at https://aka.ms/AllAboutLoc.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6365)","Url":"https://github.com/dotnet/winforms/pull/6365","RelatedDescription":"Closed or merged PR \"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 1519865\" (#6365)"},{"Id":"1084507361","IsPullRequest":true,"CreatedAt":"2021-12-20T08:36:34","Actor":"ArtemTatarinov","Number":"6368","RawContent":null,"Title":"Fixing multiple adding of `ControlBox` buttons to MDI child form","State":"open","Body":"Fixes #6339\r\n\r\n## Proposed changes\r\n\r\n- The fix is based on PR #4465. Looks like something was changed in WinAPI: now not the latest build of 5.0 nor this specifically checked out commit doesn't fix the issue.\r\n- Now we need to recreate the dummy menu every time we're setting the `MainMenuStrip` property of the `Form`.\r\n\r\n## Customer Impact\r\n**Before the fix** \r\n![cloneBeforeTheFix](https://user-images.githubusercontent.com/87859299/146737047-e16a1ece-1281-4964-9bfa-df8ed478dc28.gif)\r\n\r\n**After the fix** \r\n![cloneAfterTheFix](https://user-images.githubusercontent.com/87859299/146737065-bb89a644-8008-4547-9d6d-4562800ffef6.gif)\r\n\r\n## Regression? \r\n- Yes\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n- Manual testing (see the screenshots above)\r\n- Unit tests\r\n- CTI team\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\nWindows 10 10.0.19043.1415\r\n.NET SDK 7.0.0-alpha.1.21606.7\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6368)","Url":"https://github.com/dotnet/winforms/pull/6368","RelatedDescription":"Open PR \"Fixing multiple adding of `ControlBox` buttons to MDI child form\" (#6368)"},{"Id":"1084022822","IsPullRequest":false,"CreatedAt":"2021-12-19T21:08:12","Actor":"randydejesusmarte","Number":"6366","RawContent":null,"Title":"C# need the inputBox ","State":"closed","Body":"C# You need the inputBox tool that VB had so that developers can save some time in some developments and according to some tests that I have done, it would not be difficult to implement it in this or some future version","Url":"https://github.com/dotnet/winforms/issues/6366","RelatedDescription":"Closed issue \"C# need the inputBox \" (#6366)"},{"Id":"1083829453","IsPullRequest":true,"CreatedAt":"2021-12-18T13:43:10","Actor":"dotnet-maestro[bot]","Number":"6363","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20211217.4\r\n- **Date Produced**: December 17, 2021 10:25:38 PM UTC\r\n- **Commit**: 78659a1d4831ce9d62ea817fe13e4e2e70a52961\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.21615.1 to 7.0.0-beta.21617.4][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.21615.1 to 7.0.0-beta.21617.4][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21615.1 to 7.0.0-beta.21617.4][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.21615.1 to 7.0.0-beta.21617.4][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.21615.1 to 7.0.0-beta.21617.4][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21615.1 to 7.0.0-beta.21617.4][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/943d03f...78659a1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6363)","Url":"https://github.com/dotnet/winforms/pull/6363","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6363)"},{"Id":"1083832493","IsPullRequest":false,"CreatedAt":"2021-12-18T13:24:45","Actor":"memoarfaa","Number":"6364","RawContent":null,"Title":"Windows 11  breaking Development compatibility","State":"open","Body":"\r\n\r\n* .NET Core Version: \r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?:  Yes \r\n\r\n**Problem description:**\r\n\r\n1.  MDIParent Window  that have Custom WM_NCPAINT Windows Message or  its  DWMNCRENDERINGPOLICY set to DWMNCRP_DISABLED will add then new  Snap layouts in maximize button to Mdi Child Window (how  a Child Window can layout all Desktop Windows and layout its parent in Desktop  );\r\n\r\n![2021-12-18_14-47-33](https://user-images.githubusercontent.com/12494184/146642641-b4c32095-58ea-411a-aefe-7a6b0d98dbe7.png)\r\n<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n\r\n\r\n\r\n2.  DwmExtendFrameIntoClientArea  Wrong MARGINS \r\n\r\nDwmExtendFrameIntoClientArea will Extend  Frame to both Client and Non Client area\r\n\r\n\r\n`  [DllImport(\"dwmapi.dll\")]\r\npublic static extern int DwmExtendFrameIntoClientArea(IntPtr hWnd, ref MARGINS pMarInset);\r\n\r\n   [StructLayout(LayoutKind.Sequential)]\r\n        public struct MARGINS\r\n        {\r\n            internal int cxLeftWidth;\r\n\r\n            internal int cxRightWidth;\r\n\r\n            internal int cyTopHeight;\r\n\r\n            internal int cyBottomHeight;\r\n\r\n         \r\n            public MARGINS(int cxLeftWidth, int cxRightWidth, int cyTopHeight, int cyBottomHeight) : this()\r\n            {\r\n                this.cxLeftWidth = cxRightWidth;\r\n                this.cxRightWidth = cxRightWidth;\r\n                this.cyTopHeight = cyTopHeight;\r\n                this.cyBottomHeight = cyBottomHeight;\r\n            }\r\n\r\n           \r\n        }\r\n          MARGINS m = new MARGINS(8, 8, 31, 8);\r\n            DwmExtendFrameIntoClientArea(Handle,ref m); `\r\n\r\n\r\nwindows 11 \r\n![2021-12-18_15-39-35](https://user-images.githubusercontent.com/12494184/146643316-81785e0b-c31a-45eb-bd66-f7e1a6bb6a2c.png)\r\nWindows 10 and lower\r\n![2021-12-18_15-59-28](https://user-images.githubusercontent.com/12494184/146643657-1c554194-9343-4c68-8a3b-6fe46f383221.png)\r\n\r\n**Expected behavior:**\r\n<!--\r\n \r\n -->\r\n\r\n**Minimal repro:**\r\n<!--\r\n    Provide step by step guide to repro this issue.  Incase repro steps are complex, It would be helpful if \r\n    you attach a GIF with repro actions. Attaching a sample app to repro the issue will help speed up the \r\n    resolution. \r\n -->\r\n","Url":"https://github.com/dotnet/winforms/issues/6364","RelatedDescription":"Open issue \"Windows 11  breaking Development compatibility\" (#6364)"},{"Id":"1083768405","IsPullRequest":false,"CreatedAt":"2021-12-18T07:16:58","Actor":"roland5572","Number":"6362","RawContent":null,"Title":"Long text causes ToolStripLabel not to display any text.","State":"open","Body":"If you have a long text that needs to be displayed on the ToolStripLabel control, when your form interface is not wide enough, ToolStripLabel will hide all the text instead of using ellipsis to replace the content that is not wide enough.\r\n\r\nIf no text is displayed, it looks like the entire control is missing.\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/system.windows.forms.toolstriplabel\r\n\r\nTest Code:\r\n.net 6.0\r\n\r\n```\r\nnamespace ToolStripLabelTest\r\n{\r\n    internal static class Program\r\n    {\r\n        [STAThread]\r\n        static void Main()\r\n        {\r\n            ApplicationConfiguration.Initialize();\r\n            Application.Run(CreateForm());\r\n        }\r\n\r\n        private static Form CreateForm()\r\n        {\r\n            var frm = new Form()\r\n            {\r\n                Width = 600,\r\n                Height = 400,\r\n\r\n                StartPosition = FormStartPosition.CenterScreen,\r\n            };\r\n\r\n            var toolStrip = new ToolStrip();\r\n\r\n            var label = new ToolStripLabel()\r\n            {\r\n                Text = \"long application message text long application message text long application message text long application message text long application message text\",\r\n            };\r\n\r\n            toolStrip.Items.Add(label);\r\n            frm.Controls.Add(toolStrip);\r\n\r\n            return frm;\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nTest Result:\r\n\r\n![001](https://user-images.githubusercontent.com/88176616/146634770-e45c5983-7c55-4b9b-980e-61b04e0db130.png)\r\n\r\n![002](https://user-images.githubusercontent.com/88176616/146634771-c81152e4-7713-466b-9b7e-d1285d168345.png)\r\n\r\nExpected effect:\r\n\r\nWhen the width of ToolStripLabel is not enough, this control can use ellipsis to display content that is not wide enough.\r\n\r\np.s:\r\n\r\nIf you don't see the issue, it may be that your computer font is different from the font I used. Adjust the width of the Form to 500, or 400, and it can be displayed.\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6362","RelatedDescription":"Open issue \"Long text causes ToolStripLabel not to display any text.\" (#6362)"},{"Id":"1083691776","IsPullRequest":false,"CreatedAt":"2021-12-18T00:00:18","Actor":"KnightNine","Number":"6361","RawContent":null,"Title":"Arrow navigation always prioritizes parent `DataGridView` control regardless of what child control is focused.","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n* .NET Core Version: \r\n6.0\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**Problem description:**\r\nThe issue is that I cannot use arrows for navigating through any of my controls that are children to my parent DataGridView.\r\nadding a `TextBox`, another `DataGridView`, or any control that uses the arrow keys for navigation in any way to the Controls of a `DataGridView` means that any use of the arrow keys causes that parent `DataGridView` to take priority (as if it was in focus even when it isn’t) so you cannot use the arrow keys for any children controls.\r\n\r\n\r\n\r\n**Expected behavior:**\r\nArrow keys should control the `Control` that is in focus and not the parent of that control\r\n\r\n\r\n**Minimal repro:**\r\n[Arrow Control Test.zip](https://github.com/dotnet/winforms/files/7738333/Arrow.Control.Test.zip)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6361","RelatedDescription":"Open issue \"Arrow navigation always prioritizes parent `DataGridView` control regardless of what child control is focused.\" (#6361)"},{"Id":"1083461314","IsPullRequest":false,"CreatedAt":"2021-12-17T17:15:06","Actor":"tgriff","Number":"6359","RawContent":null,"Title":"[Accessibility] Narrator announces NumericUpDown as \"edit\" instead of \"spinbutton\"","State":"open","Body":"* .NET Core Version: \r\nNone\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes, .NET Framework 4.8.1\r\n\r\n**Problem description:**\r\nNarrator announces NumericUpDown as \"edit\" instead of \"spinbutton\". I have set the AccessibleRole = SpinButton but the control is still announced as \"edit\". Note that this was reported to me by our internal accessibility test team and I am filing this issue per their guidance.\r\n\r\n**Expected behavior:**\r\nNarrator should announce NumericUpDown as \"spinbutton\".\r\n\r\n**Minimal repro:**\r\nHere is a gif of the issue, using Narrator Buddy to show what Narrator is saying (note that it's double-logging, Narrator only says each line once).\r\n![repro](https://user-images.githubusercontent.com/34492055/146582280-b13621b0-2dba-4898-b98e-6b069f6e3d72.gif)\r\n\r\nHere is a .NET Framework 4.8.1 WinForms project that produces the issue:\r\n[SpinButtonRepro.zip](https://github.com/dotnet/winforms/files/7736681/SpinButtonRepro.zip)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6359","RelatedDescription":"Open issue \"[Accessibility] Narrator announces NumericUpDown as \"edit\" instead of \"spinbutton\"\" (#6359)"},{"Id":"1082489851","IsPullRequest":true,"CreatedAt":"2021-12-16T17:58:45","Actor":"gpetrou","Number":"6358","RawContent":null,"Title":"Enable nullability in ToolStripItemAccessibleObject","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripItemAccessibleObject.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6358)","Url":"https://github.com/dotnet/winforms/pull/6358","RelatedDescription":"Open PR \"Enable nullability in ToolStripItemAccessibleObject\" (#6358)"},{"Id":"1082459564","IsPullRequest":true,"CreatedAt":"2021-12-16T17:22:32","Actor":"gpetrou","Number":"6357","RawContent":null,"Title":"Enable nullability in DomainUpDown accessible objects","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in DomainUpDown accessible objects.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6357)","Url":"https://github.com/dotnet/winforms/pull/6357","RelatedDescription":"Open PR \"Enable nullability in DomainUpDown accessible objects\" (#6357)"},{"Id":"1082281356","IsPullRequest":true,"CreatedAt":"2021-12-16T14:46:09","Actor":"jbhensley","Number":"6356","RawContent":null,"Title":"Do not attempt to cache CheckedItems if in virtual mode","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #4042 \r\n\r\n\r\n## Proposed changes\r\n\r\n`ListView` attempts to cache `CheckedItems` when setting `CheckBoxes` to `false`. This results in an `InvalidOperationException` in `CheckedItems.Count` when the `ListView` is in virtual mode. Since `CheckedItems` cannot be used in virtual mode anyway, the fix is to skip this caching logic when `VirtualMode == true`.\r\n\r\nNote: there was a unit test that ensured this behavior. It's not clear why since it seems undesirable. The error is trivial to repro. All you have to do is drop a new `ListView` into the forms designer, set `VirtualMode` to `true`,  and then try toggling `CheckBoxes` to `true` and then back to `false`, all within the properties tool window. The existing unit test was modified to ensure the error does not happen.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\nCustomer should be able to toggle `CheckBoxes` from `true` to `false` when in virtual mode.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\nCan't identify any\r\n\r\n<!-- end TELL-MODE -->\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Unit test ensures functionality \n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6356)","Url":"https://github.com/dotnet/winforms/pull/6356","RelatedDescription":"Open PR \"Do not attempt to cache CheckedItems if in virtual mode\" (#6356)"},{"Id":"1082178380","IsPullRequest":true,"CreatedAt":"2021-12-16T13:54:40","Actor":"dotnet-maestro[bot]","Number":"6355","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20211215.1\r\n- **Date Produced**: December 15, 2021 4:26:14 PM UTC\r\n- **Commit**: 943d03f62955c771825dfa1f1bdeb8f853a2d7dd\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.21614.1 to 7.0.0-beta.21615.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.21614.1 to 7.0.0-beta.21615.1][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.21614.1 to 7.0.0-beta.21615.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.21614.1 to 7.0.0-beta.21615.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.21614.1 to 7.0.0-beta.21615.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.21614.1 to 7.0.0-beta.21615.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/cc0fa94...943d03f\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6355)","Url":"https://github.com/dotnet/winforms/pull/6355","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6355)"}],"ResultType":"GitHubIssue"}},"RunOn":"2021-12-22T05:30:48.53519Z","RunDurationInMilliseconds":547}