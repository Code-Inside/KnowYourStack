{"Data":{"GitHub":{"Issues":[{"Id":"2071383948","IsPullRequest":true,"CreatedAt":"2024-01-08T23:27:09","Actor":"elachlan","Number":"10612","RawContent":null,"Title":"Fix `WinformsControlsTest` MessageBox to avoid exception","State":"open","Body":"Fixes #10513\r\n\r\n- Don't pass owner when `MessageBoxOptions.ServiceNotification | MessageBoxOptions.DefaultDesktopOnly` is specified. \r\n- Changed help file name as the old one was missing.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10612)","Url":"https://github.com/dotnet/winforms/pull/10612","RelatedDescription":"Open PR \"Fix `WinformsControlsTest` MessageBox to avoid exception\" (#10612)"},{"Id":"2071142292","IsPullRequest":true,"CreatedAt":"2024-01-08T21:03:45","Actor":"JeremyKuhne","Number":"10611","RawContent":null,"Title":"Move HTML help to CsWin32","State":"closed","Body":"Move HTML help to CsWin32. Also sort NativeMethods.txt.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10611)","Url":"https://github.com/dotnet/winforms/pull/10611","RelatedDescription":"Closed or merged PR \"Move HTML help to CsWin32\" (#10611)"},{"Id":"2071140338","IsPullRequest":false,"CreatedAt":"2024-01-08T20:06:31","Actor":"cadilhac","Number":"10610","RawContent":null,"Title":"KeyxConverter.GetStandardValues() throws an exception","State":"open","Body":"### .NET version\r\n\r\n8.0.100\r\n\r\n### Did it work in .NET Framework?\r\n\r\nYes\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nUsed to work in .Net 6 and 7.\r\n\r\n### Issue description\r\n\r\nSimply calling\r\n\r\n`var test = new KeysConverter().GetStandardValues();`\r\n\r\nthrows the exception:\r\n\r\n> System.Collections.Generic.KeyNotFoundException: 'The given key 'en-US' was not present in the dictionary.'\r\n\r\nLooking at the KeysConverter source code, it's easy to see that the CultureToKeyName property is initialized only with the invariant culture at construction time. Other cultures are added only if ConvertFrom() or ConvertTo() are called first. This is a serious breaking change.\r\n\r\nIf this was intended, is it documented? What is a workaround?\r\n\r\n### Steps to reproduce\r\n\r\nCreate a console app targetting .net 8. Simply add the code:\r\n\r\n`var test = new KeysConverter().GetStandardValues();`\r\n\r\n### Possible fix\r\n\r\nIn GetStandardValue(), this guard should be added:\r\n\r\n```\r\nif (!CultureToKeyName.ContainsKey(CultureInfo.CurrentCulture))\r\n\tAddLocalizedKeyNames(CultureInfo.CurrentCulture);\r\n```\r\n\r\nNote that I think CultureInfo.CurrentCulture was changed to CurrentUICulture in .Net 9 preview if I remember well a post that I saw previously.\r\n\r\nOn a deeper level, prior to .Net 8, ConvertTo, ConvertFrom and GetStandardValues were not using culture for localization. With .Net 8, it seems it changed but partially only. If it was working correctly, it seems that it is always expected that GetStandardValues() returns results for the current culture, although ConvertTo and ConvertFrom can adapt to any culture... ?","Url":"https://github.com/dotnet/winforms/issues/10610","RelatedDescription":"Open issue \"KeyxConverter.GetStandardValues() throws an exception\" (#10610)"},{"Id":"2068223857","IsPullRequest":true,"CreatedAt":"2024-01-08T20:01:27","Actor":"JeremyKuhne","Number":"10598","RawContent":null,"Title":"Convert the rest of System.Drawing printing to CsWin32","State":"closed","Body":"This moves the rest of System.Drawing.Printing to CsWin32.\r\n\r\n- Move now-shared API to Core assembly\r\n- Update calls to PInvokeCore for said calls\r\n- Add HdcHandle for HDCs that we have to keep in fields\r\n- Move printing DeviceContext usages to scopes\r\n- Use new printer dialog to get default printer names\r\n- Remove ScreenDC and use scope\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10598)","Url":"https://github.com/dotnet/winforms/pull/10598","RelatedDescription":"Closed or merged PR \"Convert the rest of System.Drawing printing to CsWin32\" (#10598)"},{"Id":"2066477407","IsPullRequest":true,"CreatedAt":"2024-01-08T19:49:36","Actor":"elachlan","Number":"10588","RawContent":null,"Title":"Refactoring `DesignerActionMethodItem` usage to use nameof instead of inline string","State":"closed","Body":"Stumbled onto this when investigating #10579\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10588)","Url":"https://github.com/dotnet/winforms/pull/10588","RelatedDescription":"Closed or merged PR \"Refactoring `DesignerActionMethodItem` usage to use nameof instead of inline string\" (#10588)"},{"Id":"2069358560","IsPullRequest":false,"CreatedAt":"2024-01-08T19:11:36","Actor":"ghost","Number":"10606","RawContent":null,"Title":".NET 8.0 listview SelectedItems not working","State":"closed","Body":"### .NET version\r\n\r\n.NET 8.0\r\n\r\n### Did it work in .NET Framework?\r\n\r\nYes\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\n.NET 4.8\r\n\r\n### Issue description\r\n\r\nWhen checking listviewitems in a listview , the SelectedItems  of the listview doesn't change.\r\n\r\n### Steps to reproduce\r\n\r\n1. create listview\r\n2. enable multi select for the listview and checkboxes too\r\n3. check some listviewitems with mouse\r\n4. the SelectedItems of listview is not updated after doing 3. If you check SelectedItems.Count, the value is always 0 which is impossible because you have selected more then 1 listviewitem in 3.","Url":"https://github.com/dotnet/winforms/issues/10606","RelatedDescription":"Closed issue \".NET 8.0 listview SelectedItems not working\" (#10606)"},{"Id":"2070978694","IsPullRequest":true,"CreatedAt":"2024-01-08T19:10:25","Actor":"lonitra","Number":"10609","RawContent":null,"Title":"Avoid System.Private.Windows.Core Package Reference in System.Drawing.Common","State":"closed","Body":"Helps fix build errors in https://github.com/dotnet/wpf/pull/8635\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10609)","Url":"https://github.com/dotnet/winforms/pull/10609","RelatedDescription":"Closed or merged PR \"Avoid System.Private.Windows.Core Package Reference in System.Drawing.Common\" (#10609)"},{"Id":"2069142948","IsPullRequest":true,"CreatedAt":"2024-01-08T17:23:54","Actor":"dotnet-bot","Number":"10605","RawContent":null,"Title":"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 2347685","State":"closed","Body":"This is the pull request automatically created by the OneLocBuild task in the build process to check-in localized files generated based upon translation source files (.lcl files) handed-back from the downstream localization pipeline. If there are issues in translations, visit https://aka.ms/icxLocBug and log bugs for fixes. The OneLocBuild wiki is https://aka.ms/onelocbuild and the localization process in general is documented at https://aka.ms/AllAboutLoc.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10605)","Url":"https://github.com/dotnet/winforms/pull/10605","RelatedDescription":"Closed or merged PR \"Localized file check-in by OneLocBuild Task: Build definition ID 164: Build ID 2347685\" (#10605)"},{"Id":"2070418343","IsPullRequest":true,"CreatedAt":"2024-01-08T13:29:22","Actor":"dotnet-maestro[bot]","Number":"10608","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20240107.2\r\n- **Date Produced**: January 7, 2024 8:50:14 PM UTC\r\n- **Commit**: 21b4a8585362c1bc12d545b63e62a0d9dd4e8673\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **System.CodeDom**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **System.IO.Ports**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **System.Management**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **System.Speech**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **System.Text.Json**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-alpha.1.24056.3 to 9.0.0-alpha.1.24057.2][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/445c4a0428...21b4a85853\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10608)","Url":"https://github.com/dotnet/winforms/pull/10608","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#10608)"},{"Id":"2069963971","IsPullRequest":false,"CreatedAt":"2024-01-08T08:34:07","Actor":"LeafShi1","Number":"10607","RawContent":null,"Title":"The \"InheritedGlyph\" icon cannot be show in Inherited control","State":"open","Body":"In Demo project, the `InheritedGlyph ` icon doesn't show in inherited control `CustomButton `  \r\n![image](https://github.com/dotnet/winforms/assets/132890443/1ab8f89a-299c-4eb2-be2e-9aebd2a4ffda)\r\n\r\n\r\n**Expected**:\r\n1 Create a form with a button - Form1\r\n2. Build the app\r\n3. Create a form that inherits from Form1\r\n4. The \"InheritedGlyph\" icon show on the inherited control\r\n\r\n<img width=\"241\" alt=\"image\" src=\"https://github.com/dotnet/winforms/assets/15823268/21561755-c0fe-4b31-b02e-bde0703b9f35\">\r\n","Url":"https://github.com/dotnet/winforms/issues/10607","RelatedDescription":"Open issue \"The \"InheritedGlyph\" icon cannot be show in Inherited control\" (#10607)"},{"Id":"2069122192","IsPullRequest":true,"CreatedAt":"2024-01-07T13:23:56","Actor":"dotnet-maestro[bot]","Number":"10604","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20240106.3\r\n- **Date Produced**: January 6, 2024 6:33:43 PM UTC\r\n- **Commit**: 445c4a0428679b90c55c3dc7d78ed97622d21a22\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **System.CodeDom**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **System.IO.Ports**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **System.Management**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **System.Speech**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **System.Text.Json**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-alpha.1.24055.7 to 9.0.0-alpha.1.24056.3][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/adb4c18f5b...445c4a0428\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10604)","Url":"https://github.com/dotnet/winforms/pull/10604","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#10604)"},{"Id":"2068787168","IsPullRequest":false,"CreatedAt":"2024-01-06T19:13:07","Actor":"JeremyKuhne","Number":"10603","RawContent":null,"Title":"Layering related functionality is awkward","State":"open","Body":"We have a number of assemblies that we produce where we share common static functionality that logically belongs together. Static classes contain this functionality but require naming changes and/or namespace isolation to implement. This is becoming even more awkward with the introduction of a shared interop assembly with System.Drawing.\r\n\r\nFor example, CsWin32 generates a static class for imports (defaulting to `PInvoke`). We have to have it generate different names now that we are using CsWin32 on multiple levels of the assembly dependency hierarchy. Currently we use `PInvokeCore` for the shared assembly and `PInvoke` for the upper layers.\r\n\r\nA similar thing occurs for helper classes such as `ScaleHelper`. We'll follow the same pattern (`ScaleHelperCore`) and (`ScaleHelper`) for non-shared functionality, but that only scales to two layers. For `System.Windows.Forms.Design` we have 4 layers of assemblies now.\r\n\r\nIdeally, we'd be able to \"append\" functionality to a common static base type, much like extension methods do. C# is considering something that might make this possible:\r\n\r\nhttps://github.com/dotnet/csharplang/issues/5497\r\nhttps://github.com/dotnet/csharplang/blob/1f55d3c05d549edc817589502bfee90db887d56e/proposals/extensions.md\r\n\r\nIf and when this is implemented, we should clean up our static helpers to allow using single, common names. A follow up should be made with CsWin32 to find a way to specify that we want the `PInvoke` class as an extension class.","Url":"https://github.com/dotnet/winforms/issues/10603","RelatedDescription":"Open issue \"Layering related functionality is awkward\" (#10603)"},{"Id":"2068610450","IsPullRequest":true,"CreatedAt":"2024-01-06T13:30:24","Actor":"dotnet-maestro[bot]","Number":"10602","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20240105.7\r\n- **Date Produced**: January 6, 2024 3:33:04 AM UTC\r\n- **Commit**: adb4c18f5bcf6587230afe04cc6b61e2477f8137\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **System.CodeDom**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **System.IO.Ports**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **System.Management**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **System.Speech**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **System.Text.Json**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-alpha.1.24054.18 to 9.0.0-alpha.1.24055.7][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/9325d3836d...adb4c18f5b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10602)","Url":"https://github.com/dotnet/winforms/pull/10602","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#10602)"},{"Id":"2068609670","IsPullRequest":true,"CreatedAt":"2024-01-06T13:23:54","Actor":"dotnet-maestro[bot]","Number":"10601","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20240105.2\r\n- **Date Produced**: January 5, 2024 7:12:42 PM UTC\r\n- **Commit**: bab85ba4579526962b0dbb0aa4db625c50da8859\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.24054.2 to 9.0.0-beta.24055.2][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 9.0.0-beta.24054.2 to 9.0.0-beta.24055.2][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 9.0.0-beta.24054.2 to 9.0.0-beta.24055.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.24054.2 to 9.0.0-beta.24055.2][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 9.0.0-beta.24054.2 to 9.0.0-beta.24055.2][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.24054.2 to 9.0.0-beta.24055.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/574b28f963...bab85ba457\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10601)","Url":"https://github.com/dotnet/winforms/pull/10601","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10601)"},{"Id":"2068260883","IsPullRequest":true,"CreatedAt":"2024-01-06T07:30:54","Actor":"JeremyKuhne","Number":"10599","RawContent":null,"Title":"Remove Control ActiveX TraceSwitch","State":"closed","Body":"A significant amount of the code in some areas was just trace statements. We've removed them in other places as we have had trace breakpoints for nearly 20 years. The code is significantly easier to navigate without these.\r\n\r\nIn this particular case there also was an AV in debug for our NativeHost sample.\r\n\r\nAlso some minor cleanup, including a change to just return E_NOTIMPL from ActiveXImpl.DoVerb instead of throwing it.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10599)","Url":"https://github.com/dotnet/winforms/pull/10599","RelatedDescription":"Closed or merged PR \"Remove Control ActiveX TraceSwitch\" (#10599)"},{"Id":"2068395929","IsPullRequest":false,"CreatedAt":"2024-01-06T05:26:35","Actor":"beqabeqa473","Number":"10600","RawContent":null,"Title":"Add a possibility to override AccessibleObject methods like getPropertyValue and others in third-party code","State":"open","Body":"### .NET version\n\n8.0\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\nHello.\r\n\r\nWe need to override getPropertyValue of a form at this moment to implement UIA_is_dialog_property_id in the form without showing it as a dialog, because an app, by design shouldn't be blocked, but we also need screenreader to read a label on focus as it is done when form is beeing showed as a dialog.\r\n\r\nIs there any other possiibility to do that at this moment?\r\n\r\nPlease consider making AccessibleObject methods public to make it possible for third-party developers to have more customizations in their apps.\n\n### Steps to reproduce\n\nTry to focus a form with label, progress bar and a cancel button with a screenreader\r\nIn our case label with information should be read\r\n","Url":"https://github.com/dotnet/winforms/issues/10600","RelatedDescription":"Open issue \"Add a possibility to override AccessibleObject methods like getPropertyValue and others in third-party code\" (#10600)"},{"Id":"2066397279","IsPullRequest":true,"CreatedAt":"2024-01-05T23:04:42","Actor":"halgab","Number":"10585","RawContent":null,"Title":"Fix calls to Component in ComponentDesigner.Dispose overrides","State":"closed","Body":"In #9408, we forced the `ComponentDesigner.Component` property to be non-null. We noticed this had implications in the method `ControlDesigner.Dispose`. This PR addresses all other such cases that were broken by this PR but 2 instances that will be addressed in followup PRs.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10585)","Url":"https://github.com/dotnet/winforms/pull/10585","RelatedDescription":"Closed or merged PR \"Fix calls to Component in ComponentDesigner.Dispose overrides\" (#10585)"},{"Id":"2066547321","IsPullRequest":true,"CreatedAt":"2024-01-05T20:31:10","Actor":"github-actions[bot]","Number":"10589","RawContent":null,"Title":"[release/8.0] Fix PropertyGrid.RemoveTabType method","State":"closed","Body":"Backport of #10575 to release/8.0\r\n\r\n/cc @lonitra @thomasnaletsg\r\n\r\n## Customer Impact\r\nCustomers are able to add property tabs, but are unable to remove them. This fix allows customers to remove the property tabs that they have added\r\n\r\n## Testing\r\n- Unit test added to verify property grid can be removed successfully\r\n- Manually verified property tab is successfully removed on call to `RemoveTabType` in test app\r\n\r\n## Risk\r\nMinimal\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10589)","Url":"https://github.com/dotnet/winforms/pull/10589","RelatedDescription":"Closed or merged PR \"[release/8.0] Fix PropertyGrid.RemoveTabType method\" (#10589)"},{"Id":"2067976279","IsPullRequest":true,"CreatedAt":"2024-01-05T20:10:31","Actor":"halgab","Number":"10597","RawContent":null,"Title":"Improve the NRT annotations of ToolStripPanelDesigner","State":"open","Body":"## Proposed changes\r\n\r\n- Improve the NRT annotations of `ToolStripPanelDesigner`\r\n- Fix a bug introduced in #9408 when calling the `Dispose` method twice (see #10585)\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10597)","Url":"https://github.com/dotnet/winforms/pull/10597","RelatedDescription":"Open PR \"Improve the NRT annotations of ToolStripPanelDesigner\" (#10597)"},{"Id":"2066364437","IsPullRequest":true,"CreatedAt":"2024-01-05T17:35:33","Actor":"elachlan","Number":"10584","RawContent":null,"Title":"Fix `StackOverflow` in `ControlDesigner`","State":"closed","Body":"Fixes #10580\r\nCaused by #10279\r\n\r\n![294309830-228b6d58-f9b8-44ac-be59-f73019024a3d](https://github.com/dotnet/winforms/assets/2433737/3da5c8e6-98f0-465c-bf8d-6768efabf274)\r\n![294309898-978d4797-29b5-483f-8089-bbbd568ee69b](https://github.com/dotnet/winforms/assets/2433737/cb3e1976-a50e-4cbd-858c-da8e9a7082a9)\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10584)","Url":"https://github.com/dotnet/winforms/pull/10584","RelatedDescription":"Closed or merged PR \"Fix `StackOverflow` in `ControlDesigner`\" (#10584)"},{"Id":"2067321802","IsPullRequest":true,"CreatedAt":"2024-01-05T16:32:08","Actor":"dotnet-maestro[bot]","Number":"10595","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20240104.18\r\n- **Date Produced**: January 5, 2024 9:28:49 AM UTC\r\n- **Commit**: 9325d3836d1f8af309855a4d82170d5a43f10122\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.CodeDom**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.IO.Ports**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Management**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Speech**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Text.Json**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-alpha.1.24053.7 to 9.0.0-alpha.1.24054.18][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/fac60d0e97...9325d3836d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10595)","Url":"https://github.com/dotnet/winforms/pull/10595","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#10595)"},{"Id":"2067652284","IsPullRequest":true,"CreatedAt":"2024-01-05T16:27:55","Actor":"sharwell","Number":"10596","RawContent":null,"Title":"Fix ambiguous references in cref attributes","State":"open","Body":"Restores build diagnostics which were disabled in #10525.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10596)","Url":"https://github.com/dotnet/winforms/pull/10596","RelatedDescription":"Open PR \"Fix ambiguous references in cref attributes\" (#10596)"},{"Id":"2067320020","IsPullRequest":true,"CreatedAt":"2024-01-05T13:24:00","Actor":"dotnet-maestro[bot]","Number":"10594","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20240104.2\r\n- **Date Produced**: January 4, 2024 5:10:39 PM UTC\r\n- **Commit**: 574b28f9639dbd60738c6662d44f47b4abf5bba1\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.24053.1 to 9.0.0-beta.24054.2][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 9.0.0-beta.24053.1 to 9.0.0-beta.24054.2][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 9.0.0-beta.24053.1 to 9.0.0-beta.24054.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.24053.1 to 9.0.0-beta.24054.2][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 9.0.0-beta.24053.1 to 9.0.0-beta.24054.2][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.24053.1 to 9.0.0-beta.24054.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/f4e11a15c7...574b28f963\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10594)","Url":"https://github.com/dotnet/winforms/pull/10594","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10594)"},{"Id":"2066813108","IsPullRequest":true,"CreatedAt":"2024-01-05T06:40:01","Actor":"CuteLeon","Number":"10593","RawContent":null,"Title":"https://github.com/dotnet/winforms/issues/10592","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #10592 \r\n\r\n\r\n## Proposed changes\r\n\r\n- Enhance ToolStripItem to make Renderer accessable\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- ToolStripItem's Renderer accessable\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- No\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- This modification is very tiny, and doesn't change default behavior.\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10593)","Url":"https://github.com/dotnet/winforms/pull/10593","RelatedDescription":"Open PR \"https://github.com/dotnet/winforms/issues/10592\" (#10593)"},{"Id":"2066804264","IsPullRequest":false,"CreatedAt":"2024-01-05T06:30:48","Actor":"CuteLeon","Number":"10592","RawContent":null,"Title":"Enable ToolStripItem to support specifying specific Renderer","State":"open","Body":"### Background and motivation\n\nI implemented a specified ToolStripItem class, and hope to specify a renderer for it to reuse base OnPaint logic, instead of using owner's renderer. While ToolStripItem's Renderer property was decleared as Internal and not overrideable.\n\n### API Proposal\n\n```csharp\r\npublic abstract partial class ToolStripItem\r\n{\r\n    protected virtual ToolStripRenderer? Renderer\r\n    {\r\n        get\r\n        {\r\n            if (Owner is not null)\r\n            {\r\n                return Owner.Renderer;\r\n            }\r\n\r\n            return ParentInternal?.Renderer;\r\n        }\r\n    }\r\n}\r\n```\r\n\n\n### API Usage\n\n```csharp\r\npublic class MyToolStripButton : ToolStripButton\r\n{\r\n    protected static ToolStripProfessionalRenderer OverrideRenderer = new();\r\n\r\n    protected override ToolStripRenderer? Renderer { get => OverrideRenderer; }\r\n}\r\n```\r\n\n\n### Alternative Designs\n\n_No response_\n\n### Risks\n\n_No response_\n\n### Will this feature affect UI controls?\n\n1. No\r\n2. No\r\n3. No","Url":"https://github.com/dotnet/winforms/issues/10592","RelatedDescription":"Open issue \"Enable ToolStripItem to support specifying specific Renderer\" (#10592)"},{"Id":"2066791355","IsPullRequest":false,"CreatedAt":"2024-01-05T06:17:48","Actor":"Olina-Zhang","Number":"10591","RawContent":null,"Title":"[Accessibility] Narrator cannot announce the leaf node information(level 1) for nodes in TreeView","State":"open","Body":"### .NET version\n\n9.0.100-alpha.1.24053.14 \n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, it cannot repro in .NET 6 SDK, repro from .NET7.0 to .NET 9.0\n\n### Issue description\n\nNarrator cannot announce the leaf node information for nodes in TreeView\r\n\r\n**Actual result of .Net 9.0:**\r\nNarrator:\r\n![image](https://github.com/dotnet/winforms/assets/26474449/a76f3fe1-7ad7-4e8d-8c99-474541b02379)\r\n\r\nInspect:\r\n![image](https://github.com/dotnet/winforms/assets/26474449/f494ed90-2144-43a1-8e50-b3981d8b7b0a)\r\n\r\n**Expected result of .Net 6.0:**\r\nNarrator: \r\n![image](https://github.com/dotnet/winforms/assets/26474449/82a6ec41-ceca-4b7f-ad4d-587c3d171117)\r\nInspect:\r\n![image](https://github.com/dotnet/winforms/assets/26474449/dc726fb2-6a5a-423b-a6e7-708eba00edc2)\r\n\r\n\n\n### Steps to reproduce\n\n1. Create Winforms .NET 9 application with TreeView added\r\n2. In treeView, add several nodes, one of nodes contains child nodes\r\n3. Build and run application\r\n4. Use Narrator and Inspect to test nodes in TreeView","Url":"https://github.com/dotnet/winforms/issues/10591","RelatedDescription":"Open issue \"[Accessibility] Narrator cannot announce the leaf node information(level 1) for nodes in TreeView\" (#10591)"},{"Id":"2066645497","IsPullRequest":true,"CreatedAt":"2024-01-05T04:28:31","Actor":"AustinWise","Number":"10590","RawContent":null,"Title":"Delete Build.complog","State":"closed","Body":"Delete file that should not have been included in #10525.\r\n\r\nI thought about adding `*.complog` to `.gitignore`, but I'm not aware of `.complog` being a common MSBuild binary log file extension.\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10590)","Url":"https://github.com/dotnet/winforms/pull/10590","RelatedDescription":"Closed or merged PR \"Delete Build.complog\" (#10590)"},{"Id":"2066446583","IsPullRequest":false,"CreatedAt":"2024-01-04T22:50:59","Actor":"JeremyKuhne","Number":"10587","RawContent":null,"Title":"Add more analyzer coverage for coding style guidelines","State":"open","Body":"Not all of our coding style guidelines are covered by analyzers. https://github.com/dotnet/winforms/blob/main/docs/coding-style.md Some things that currently aren't covered:\r\n\r\n- XML comments indented by a space\r\n- Line breaks start with operators: `||` at the beginning of the line for example\r\n- `=>` stays on the previous line (for better alignment of further line breaks)\r\n- `t_` for thread statics\r\n- `unsafe` on methods or classes only\r\n- No empty XML comment blocks\r\n- `=` can be aligned in some cases\r\n- `?:` should be on a single line or broken starting two lines with `?` and `:`","Url":"https://github.com/dotnet/winforms/issues/10587","RelatedDescription":"Open issue \"Add more analyzer coverage for coding style guidelines\" (#10587)"},{"Id":"2066407996","IsPullRequest":true,"CreatedAt":"2024-01-04T22:14:53","Actor":"halgab","Number":"10586","RawContent":null,"Title":"Improve the NRT annotations of DataGridViewDesigner","State":"open","Body":"## Proposed changes\r\n\r\n- Improve the NRT annotations of `DataGridViewDesigner`\r\n- Fix a bug introduced in #9408 when calling the Dispose method twice (see #10585)\r\n\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10586)","Url":"https://github.com/dotnet/winforms/pull/10586","RelatedDescription":"Open PR \"Improve the NRT annotations of DataGridViewDesigner\" (#10586)"},{"Id":"2066067383","IsPullRequest":false,"CreatedAt":"2024-01-04T17:32:28","Actor":"weltkante","Number":"10583","RawContent":null,"Title":"Support ComSourceGenerator-based ActiveX controls","State":"open","Body":"### .NET version\r\n\r\n.NET 8\r\n\r\n### Did it work in .NET Framework?\r\n\r\nYes (using classic COM interop)\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nWorks using the classic COM interop.\r\n\r\n### Issue description\r\n\r\nTLB support and tooling isn't ready yet in .NET 8 so its understandable that there has been limited attention to support the new COM source generators in WinForms, but there is still desire (https://github.com/dotnet/runtime/issues/66674#issuecomment-1856072113) to get it working eventually. I'm currently prototyping (https://github.com/Devolutions/MsRdpEx/issues/97) a hand written binding for the Microsoft RDP Client, which is apparently only provided in form of an ActiveX control, so should be a decent usecase and test scenario for ActiveX support in WinForms against the new COM source generators (besides the custom MFC based controls we previously used for testing compatibility, I might also extend those to provide test coverage, not sure how well a RDP client control is suited for unit testing)\r\n\r\nA few things to note so far, I'll probably add more as the prototype comes along:\r\n* returning a ComWrappers instance from `CreateInstanceCore` makes WinForms fail to resolve its interfaces\r\n  * according to the [docs](https://github.com/dotnet/runtime/blob/main/docs/design/libraries/ComInterfaceGenerator/Compatibility.md#interop-with-comimport) this is supported by the runtime, but its off by default and has to be opted-in and is not NativeAOT compatible, so I do not opt-in and do things manually\r\n  * it is possible to work around this by manually translating it to a classic interop COM object (__ComObject instance obtained via `Marshal.GetObjectForIUnknown` on the ComWrappers IUnknown pointer)\r\n  * ideally WinForms will support either being returned here, maybe probing which variant it is or something, I'll experiment and see what I can get to work here\r\n* passing a ComWrappers instance to `ConnectionPointCookie` makes WinForms fail to understand it\r\n  * the current `ConnectionPointCookie` API is not well-suited to custom bindings since it wants an interface type for reflection\r\n  * even if the event handler interface implements both ComWrapper and classic COM interfaces WinForms still fails\r\n\r\nMy primary goal of this issue will be tracking required changes to support getting the prototype running entirely with handwritten source generator bindings, I'll open a PR for suggested fixes once I figure out more about why WinForms fails interacting with ComWrapper based instances.\r\n\r\n### Steps to reproduce\r\n\r\nWrite COM source generator bindings against an ActiveX control and try to use it with WinForms AxHost","Url":"https://github.com/dotnet/winforms/issues/10583","RelatedDescription":"Open issue \"Support ComSourceGenerator-based ActiveX controls\" (#10583)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-01-09T03:30:29.3056524Z","RunDurationInMilliseconds":523}