{"Data":{"GitHub":{"Issues":[{"Id":"1419400614","IsPullRequest":true,"CreatedAt":"2022-10-24T01:48:03","Actor":"gpetrou","Number":"7999","RawContent":null,"Title":"Enable nullability in ToolStripTextBox","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripTextBox.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7999)","Url":"https://github.com/dotnet/winforms/pull/7999","RelatedDescription":"Closed or merged PR \"Enable nullability in ToolStripTextBox\" (#7999)"},{"Id":"1419255214","IsPullRequest":true,"CreatedAt":"2022-10-24T00:11:14","Actor":"gpetrou","Number":"7994","RawContent":null,"Title":"Enable nullability in ControlBoxMenuItem and SystemMenuItem","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ControlBoxMenuItem and SystemMenuItem.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7994)","Url":"https://github.com/dotnet/winforms/pull/7994","RelatedDescription":"Closed or merged PR \"Enable nullability in ControlBoxMenuItem and SystemMenuItem\" (#7994)"},{"Id":"1418879179","IsPullRequest":true,"CreatedAt":"2022-10-23T23:57:30","Actor":"dreddy-work","Number":"7990","RawContent":null,"Title":"Fix scaling in SplitContainer controls for high DPI machines","State":"closed","Body":"\r\n\r\nFixes #3168 in combination with https://github.com/dotnet/winforms/pull/7956\r\n\r\n\r\n## Proposed changes\r\n\r\n- Scaling SplitterDistance property when DPI changed event occurs.\r\n- Updating Panel sizes when FixedPanel property is set and DPI changed event occurs.\r\n- Add unit test for future reference.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7990)","Url":"https://github.com/dotnet/winforms/pull/7990","RelatedDescription":"Closed or merged PR \"Fix scaling in SplitContainer controls for high DPI machines\" (#7990)"},{"Id":"1419251188","IsPullRequest":true,"CreatedAt":"2022-10-23T23:57:09","Actor":"gpetrou","Number":"7993","RawContent":null,"Title":"Enable nullability in MenuStrip","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in MenuStrip.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7993)","Url":"https://github.com/dotnet/winforms/pull/7993","RelatedDescription":"Closed or merged PR \"Enable nullability in MenuStrip\" (#7993)"},{"Id":"1419650044","IsPullRequest":true,"CreatedAt":"2022-10-23T23:52:07","Actor":"gpetrou","Number":"8002","RawContent":null,"Title":"Enable nullability in ToolStripProgressBar","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripProgressBar.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8002)","Url":"https://github.com/dotnet/winforms/pull/8002","RelatedDescription":"Closed or merged PR \"Enable nullability in ToolStripProgressBar\" (#8002)"},{"Id":"1419116133","IsPullRequest":true,"CreatedAt":"2022-10-23T23:40:59","Actor":"gpetrou","Number":"7991","RawContent":null,"Title":"Enable nullability in ComponentManager","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ComponentManager.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7991)","Url":"https://github.com/dotnet/winforms/pull/7991","RelatedDescription":"Closed or merged PR \"Enable nullability in ComponentManager\" (#7991)"},{"Id":"1419646381","IsPullRequest":true,"CreatedAt":"2022-10-23T23:28:49","Actor":"gpetrou","Number":"8001","RawContent":null,"Title":"Enable nullability in ToolStripButton","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripButton.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8001)","Url":"https://github.com/dotnet/winforms/pull/8001","RelatedDescription":"Closed or merged PR \"Enable nullability in ToolStripButton\" (#8001)"},{"Id":"1419403684","IsPullRequest":true,"CreatedAt":"2022-10-23T23:26:33","Actor":"gpetrou","Number":"8000","RawContent":null,"Title":"Enable nullability in ToolStripLabel","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripLabel.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8000)","Url":"https://github.com/dotnet/winforms/pull/8000","RelatedDescription":"Closed or merged PR \"Enable nullability in ToolStripLabel\" (#8000)"},{"Id":"1419671456","IsPullRequest":true,"CreatedAt":"2022-10-23T16:54:23","Actor":"gpetrou","Number":"8003","RawContent":null,"Title":"Enable nullability in ToolStripNumericUpDown","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripNumericUpDown.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8003)","Url":"https://github.com/dotnet/winforms/pull/8003","RelatedDescription":"Closed or merged PR \"Enable nullability in ToolStripNumericUpDown\" (#8003)"},{"Id":"1419686754","IsPullRequest":true,"CreatedAt":"2022-10-23T16:35:32","Actor":"gpetrou","Number":"8005","RawContent":null,"Title":"Enable nullability in AxPerPropertyBrowsingEnum","State":"closed","Body":"## Proposed changes\r\n\r\n- Enable nullability in AxPerPropertyBrowsingEnum.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8005)","Url":"https://github.com/dotnet/winforms/pull/8005","RelatedDescription":"Closed or merged PR \"Enable nullability in AxPerPropertyBrowsingEnum\" (#8005)"},{"Id":"1419771826","IsPullRequest":true,"CreatedAt":"2022-10-23T12:33:36","Actor":"dotnet-maestro[bot]","Number":"8006","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20221022.2\r\n- **Date Produced**: October 23, 2022 2:18:16 AM UTC\r\n- **Commit**: ebf4ea7601f82cdc3f7cb9e7539a84e423d0d23a\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.22521.4 to 8.0.0-alpha.1.22522.2][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.22521.4 to 8.0.0-alpha.1.22522.2][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22521.4 to 8.0.0-alpha.1.22522.2][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22521.4 to 8.0.0-alpha.1.22522.2][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22521.4 to 8.0.0-alpha.1.22522.2][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.22521.4 to 8.0.0-alpha.1.22522.2][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22521.4 to 8.0.0-alpha.1.22522.2][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.22521.4 to 8.0.0-alpha.1.22522.2][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.22521.4 to 8.0.0-alpha.1.22522.2][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.22521.4 to 8.0.0-alpha.1.22522.2][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22521.4 to 8.0.0-alpha.1.22522.2][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22521.4 to 8.0.0-alpha.1.22522.2][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22521.4 to 8.0.0-alpha.1.22522.2][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22521.4 to 8.0.0-alpha.1.22522.2][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22521.4 to 8.0.0-alpha.1.22522.2][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.22521.4 to 8.0.0-alpha.1.22522.2][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22521.4 to 8.0.0-alpha.1.22522.2][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22521.4 to 8.0.0-alpha.1.22522.2][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22521.4 to 8.0.0-alpha.1.22522.2][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22521.4 to 8.0.0-alpha.1.22522.2][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22521.4 to 8.0.0-alpha.1.22522.2][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22521.4 to 8.0.0-alpha.1.22522.2][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.22521.4 to 8.0.0-alpha.1.22522.2][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22521.4 to 8.0.0-alpha.1.22522.2][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22521.4 to 8.0.0-alpha.1.22522.2][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22521.4 to 8.0.0-alpha.1.22522.2][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22521.4 to 8.0.0-alpha.1.22522.2][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22521.4 to 8.0.0-alpha.1.22522.2][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22521.4 to 8.0.0-alpha.1.22522.2][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22521.4 to 8.0.0-alpha.1.22522.2][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/77331bb...ebf4ea7\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8006)","Url":"https://github.com/dotnet/winforms/pull/8006","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#8006)"},{"Id":"1419676264","IsPullRequest":true,"CreatedAt":"2022-10-23T07:06:08","Actor":"gpetrou","Number":"8004","RawContent":null,"Title":"Enable nullability in ToolStripDropTargetManager","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in ToolStripDropTargetManager.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/8004)","Url":"https://github.com/dotnet/winforms/pull/8004","RelatedDescription":"Open PR \"Enable nullability in ToolStripDropTargetManager\" (#8004)"},{"Id":"1419386558","IsPullRequest":true,"CreatedAt":"2022-10-22T16:22:16","Actor":"gpetrou","Number":"7998","RawContent":null,"Title":"Enable nullability in MenuTimer","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in MenuTimer.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7998)","Url":"https://github.com/dotnet/winforms/pull/7998","RelatedDescription":"Open PR \"Enable nullability in MenuTimer\" (#7998)"},{"Id":"1419262096","IsPullRequest":true,"CreatedAt":"2022-10-22T12:35:07","Actor":"dotnet-maestro[bot]","Number":"7996","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20221021.4\r\n- **Date Produced**: October 22, 2022 2:23:33 AM UTC\r\n- **Commit**: 77331bb5ed93bbe411b93ebe053ad117b79c6590\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.22520.6 to 8.0.0-alpha.1.22521.4][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.22520.6 to 8.0.0-alpha.1.22521.4][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22520.6 to 8.0.0-alpha.1.22521.4][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22520.6 to 8.0.0-alpha.1.22521.4][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22520.6 to 8.0.0-alpha.1.22521.4][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.22520.6 to 8.0.0-alpha.1.22521.4][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22520.6 to 8.0.0-alpha.1.22521.4][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.22520.6 to 8.0.0-alpha.1.22521.4][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.22520.6 to 8.0.0-alpha.1.22521.4][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.22520.6 to 8.0.0-alpha.1.22521.4][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22520.6 to 8.0.0-alpha.1.22521.4][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22520.6 to 8.0.0-alpha.1.22521.4][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22520.6 to 8.0.0-alpha.1.22521.4][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22520.6 to 8.0.0-alpha.1.22521.4][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22520.6 to 8.0.0-alpha.1.22521.4][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.22520.6 to 8.0.0-alpha.1.22521.4][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22520.6 to 8.0.0-alpha.1.22521.4][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22520.6 to 8.0.0-alpha.1.22521.4][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22520.6 to 8.0.0-alpha.1.22521.4][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22520.6 to 8.0.0-alpha.1.22521.4][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22520.6 to 8.0.0-alpha.1.22521.4][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22520.6 to 8.0.0-alpha.1.22521.4][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.22520.6 to 8.0.0-alpha.1.22521.4][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22520.6 to 8.0.0-alpha.1.22521.4][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22520.6 to 8.0.0-alpha.1.22521.4][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22520.6 to 8.0.0-alpha.1.22521.4][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22520.6 to 8.0.0-alpha.1.22521.4][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22520.6 to 8.0.0-alpha.1.22521.4][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22520.6 to 8.0.0-alpha.1.22521.4][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22520.6 to 8.0.0-alpha.1.22521.4][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/4708ca8...77331bb\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7996)","Url":"https://github.com/dotnet/winforms/pull/7996","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#7996)"},{"Id":"1419261830","IsPullRequest":true,"CreatedAt":"2022-10-22T12:29:05","Actor":"dotnet-maestro[bot]","Number":"7995","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20221020.1\r\n- **Date Produced**: October 20, 2022 5:57:03 PM UTC\r\n- **Commit**: 7e27c0ab0fc92ec636c26442fd1663dc5714aa4b\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.22513.2 to 8.0.0-beta.22520.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 8.0.0-beta.22513.2 to 8.0.0-beta.22520.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 8.0.0-beta.22513.2 to 8.0.0-beta.22520.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.22513.2 to 8.0.0-beta.22520.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 8.0.0-beta.22513.2 to 8.0.0-beta.22520.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.22513.2 to 8.0.0-beta.22520.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/32f13f8...7e27c0a\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7995)","Url":"https://github.com/dotnet/winforms/pull/7995","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#7995)"},{"Id":"1419265215","IsPullRequest":false,"CreatedAt":"2022-10-22T12:14:42","Actor":"fiddyschmitt","Number":"7997","RawContent":null,"Title":"Form Designer not showing for .NET 6 project","State":"open","Body":"### Environment\r\n\r\nVisual Studio Enterprise 17.3.6\r\n\r\n### .NET version\r\n\r\n.NET 6\r\n\r\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\r\n\r\n_No response_\r\n\r\n### Issue description\r\n\r\nWhen I open the Form Designer, it is blank. This happens even for a new project. It happens for .NET 6 projects, but the form designer works fine if I create a .NET 4.7.2 project.\r\n\r\nI've tried all the suggestions in the [troubleshooting guide](https://github.com/dotnet/winforms/blob/main/docs/designer/troubleshooting.md) - timeout, antivirus & confirming UseLegacyPathHandling is disabled.\r\n\r\nI've also tried repairing Visual Studio using the Visual Studio Installer.\r\n\r\nUsing Task Manager, I can see that the OOP designer (`DesignToolsServer.exe`) starts, but then closes almost immediately. A while later Visual Studio shows `Timed out while connecting to named pipe` which I presume is due to DesignToolsServer.exe not being there to respond.\r\n\r\nIs there a way to see the output of DesignToolsServer.exe, to work out why it's closing?\r\n\r\nThanks!\r\n\r\n### Steps to reproduce\r\n\r\nCreate new Project: Windows Form App -> .NET 6.0 (though the same happens for .NET 5 and .NET Core 3.1)\r\nDouble-click Form1.cs\r\n\r\n### Diagnostics\r\n\r\n_No response_","Url":"https://github.com/dotnet/winforms/issues/7997","RelatedDescription":"Open issue \"Form Designer not showing for .NET 6 project\" (#7997)"},{"Id":"1419238123","IsPullRequest":true,"CreatedAt":"2022-10-22T10:51:25","Actor":"gpetrou","Number":"7992","RawContent":null,"Title":"Enable nullability in Link class","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in Link class.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7992)","Url":"https://github.com/dotnet/winforms/pull/7992","RelatedDescription":"Open PR \"Enable nullability in Link class\" (#7992)"},{"Id":"1418876528","IsPullRequest":true,"CreatedAt":"2022-10-21T21:27:38","Actor":"JeremyKuhne","Number":"7989","RawContent":null,"Title":"Do some code cleanup of COM2 interop classes","State":"open","Body":"Basic cleanup. Also a lot of removing redundant comments.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7989)","Url":"https://github.com/dotnet/winforms/pull/7989","RelatedDescription":"Open PR \"Do some code cleanup of COM2 interop classes\" (#7989)"},{"Id":"1418738935","IsPullRequest":true,"CreatedAt":"2022-10-21T21:25:01","Actor":"JeremyKuhne","Number":"7987","RawContent":null,"Title":"Break out nested classes in Control.ActiveXImpl.","State":"closed","Body":"Also do some code cleanup in the main class.\r\n\r\nAdded a couple sanity tests on VARIANT behavior with the .NET runtime.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7987)","Url":"https://github.com/dotnet/winforms/pull/7987","RelatedDescription":"Closed or merged PR \"Break out nested classes in Control.ActiveXImpl.\" (#7987)"},{"Id":"1418769569","IsPullRequest":false,"CreatedAt":"2022-10-21T19:27:21","Actor":"JeremyKuhne","Number":"7988","RawContent":null,"Title":"Remove BinaryFormatter for property bag serialization","State":"open","Body":"Our `IPropertyBag` implementations rely on `BinaryFormatter` to serialize to and from a `Hashtable`/`IStream`. `AxHost.PropertyBagStream` and `Control.ActiveXImpl.PropertyBagStream` are the implementations.\r\n\r\nIn most of the places we've removed `BinaryFormatter` we've relied on `TypeConverter` to convert to/from either `string` or `byte[]`. The idea here is to serialize to/from JSON (using System.Text.Json) with this same dependency on `TypeConverter`. If there is no such `TypeConverter` for a given type, it would be ignored. Working around this breaking change would require writing and registering a `TypeConverter` that supports one of these two formats.\r\n\r\n#7986 is a related change.\r\n\r\ncc: @GrabYourPitchforks \r\n","Url":"https://github.com/dotnet/winforms/issues/7988","RelatedDescription":"Open issue \"Remove BinaryFormatter for property bag serialization\" (#7988)"},{"Id":"1418704145","IsPullRequest":true,"CreatedAt":"2022-10-21T18:50:01","Actor":"JeremyKuhne","Number":"7986","RawContent":null,"Title":"Remove BinaryFormatter support from Control's ActiveX projection.","State":"closed","Body":"In order for properties to be exposed to `IPropertyBag` they must have a TypeConverter to and from either string (preferred) or `byte[]`.\r\n\r\nThese were always the first choice, `ISerializable` was the final fallback. This matches what we've done elsewhere when we've removed `BinaryFormatter`.\r\n\r\ncc: @GrabYourPitchforks, @merriemcgaw \n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7986)","Url":"https://github.com/dotnet/winforms/pull/7986","RelatedDescription":"Closed or merged PR \"Remove BinaryFormatter support from Control's ActiveX projection.\" (#7986)"},{"Id":"1418669604","IsPullRequest":true,"CreatedAt":"2022-10-21T17:49:01","Actor":"dreddy-work","Number":"7985","RawContent":null,"Title":"Document updated anchor calculations in .NET 8.0","State":"open","Body":"Related to #7956.\r\n\r\nDocumenting the updated Anchor calculations in .NET 8.0 for future reference.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7985)","Url":"https://github.com/dotnet/winforms/pull/7985","RelatedDescription":"Open PR \"Document updated anchor calculations in .NET 8.0\" (#7985)"},{"Id":"1418234026","IsPullRequest":true,"CreatedAt":"2022-10-21T12:32:23","Actor":"dotnet-maestro[bot]","Number":"7984","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20221020.6\r\n- **Date Produced**: October 21, 2022 9:19:22 AM UTC\r\n- **Commit**: 4708ca854089d7dcb4fef25bccaab2a1e0f818b1\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 8.0.0-alpha.1.22519.7 to 8.0.0-alpha.1.22520.6][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 8.0.0-alpha.1.22519.7 to 8.0.0-alpha.1.22520.6][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 8.0.0-alpha.1.22519.7 to 8.0.0-alpha.1.22520.6][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 8.0.0-alpha.1.22519.7 to 8.0.0-alpha.1.22520.6][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22519.7 to 8.0.0-alpha.1.22520.6][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 8.0.0-alpha.1.22519.7 to 8.0.0-alpha.1.22520.6][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 8.0.0-alpha.1.22519.7 to 8.0.0-alpha.1.22520.6][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 8.0.0-alpha.1.22519.7 to 8.0.0-alpha.1.22520.6][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 8.0.0-alpha.1.22519.7 to 8.0.0-alpha.1.22520.6][1]\r\n  - **Microsoft.Windows.Compatibility**: [from 8.0.0-alpha.1.22519.7 to 8.0.0-alpha.1.22520.6][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22519.7 to 8.0.0-alpha.1.22520.6][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 8.0.0-alpha.1.22519.7 to 8.0.0-alpha.1.22520.6][1]\r\n  - **System.CodeDom**: [from 8.0.0-alpha.1.22519.7 to 8.0.0-alpha.1.22520.6][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 8.0.0-alpha.1.22519.7 to 8.0.0-alpha.1.22520.6][1]\r\n  - **System.Diagnostics.EventLog**: [from 8.0.0-alpha.1.22519.7 to 8.0.0-alpha.1.22520.6][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 8.0.0-alpha.1.22519.7 to 8.0.0-alpha.1.22520.6][1]\r\n  - **System.DirectoryServices**: [from 8.0.0-alpha.1.22519.7 to 8.0.0-alpha.1.22520.6][1]\r\n  - **System.Drawing.Common**: [from 8.0.0-alpha.1.22519.7 to 8.0.0-alpha.1.22520.6][1]\r\n  - **System.IO.Packaging**: [from 8.0.0-alpha.1.22519.7 to 8.0.0-alpha.1.22520.6][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 8.0.0-alpha.1.22519.7 to 8.0.0-alpha.1.22520.6][1]\r\n  - **System.Resources.Extensions**: [from 8.0.0-alpha.1.22519.7 to 8.0.0-alpha.1.22520.6][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 8.0.0-alpha.1.22519.7 to 8.0.0-alpha.1.22520.6][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 8.0.0-alpha.1.22519.7 to 8.0.0-alpha.1.22520.6][1]\r\n  - **System.Security.Cryptography.Xml**: [from 8.0.0-alpha.1.22519.7 to 8.0.0-alpha.1.22520.6][1]\r\n  - **System.Security.Permissions**: [from 8.0.0-alpha.1.22519.7 to 8.0.0-alpha.1.22520.6][1]\r\n  - **System.Text.Encodings.Web**: [from 8.0.0-alpha.1.22519.7 to 8.0.0-alpha.1.22520.6][1]\r\n  - **System.Text.Json**: [from 8.0.0-alpha.1.22519.7 to 8.0.0-alpha.1.22520.6][1]\r\n  - **System.Threading.AccessControl**: [from 8.0.0-alpha.1.22519.7 to 8.0.0-alpha.1.22520.6][1]\r\n  - **System.Windows.Extensions**: [from 8.0.0-alpha.1.22519.7 to 8.0.0-alpha.1.22520.6][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.8.0**: [from 8.0.0-alpha.1.22519.7 to 8.0.0-alpha.1.22520.6][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/6eb3ccb...4708ca8\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7984)","Url":"https://github.com/dotnet/winforms/pull/7984","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#7984)"},{"Id":"1417985506","IsPullRequest":true,"CreatedAt":"2022-10-21T08:46:09","Actor":"NikitaSemenovAkvelon","Number":"7983","RawContent":null,"Title":"Fixed MaskedTextBoxAccessibleObject.Name if Owner.Mask is filled","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #7938\r\n\r\n\r\n## Proposed changes\r\n\r\n- Overriden `Name` property in `MaskedTextBoxAccessibleObject`.\r\n- Added new unit tests. \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- The `Name` of `MaskedTextBoxAccessibleObject` is more clarify.\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n![Screenshot 2022-10-21 121439](https://user-images.githubusercontent.com/109065597/197153169-8f374228-f98d-4d75-b17f-0c260f8c3305.png)\r\n\r\n### After\r\n\r\n![Screenshot 2022-10-21 120955](https://user-images.githubusercontent.com/109065597/197153188-7b791d7d-4e62-4a59-9a5c-3deb5603a3e6.png)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manually\r\n- Unit testing \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n- Inspect\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n.NET SDK:\r\n Version:   8.0.100-alpha.1.22512.5\r\n Commit:    1b80461e45\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.22621\r\n OS Platform: Windows\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7983)","Url":"https://github.com/dotnet/winforms/pull/7983","RelatedDescription":"Open PR \"Fixed MaskedTextBoxAccessibleObject.Name if Owner.Mask is filled\" (#7983)"},{"Id":"1417933919","IsPullRequest":true,"CreatedAt":"2022-10-21T08:06:21","Actor":"elachlan","Number":"7982","RawContent":null,"Title":"Fix `FolderBrowserDialog.ShowDialog`","State":"open","Body":"Fixes #7981\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7982)","Url":"https://github.com/dotnet/winforms/pull/7982","RelatedDescription":"Open PR \"Fix `FolderBrowserDialog.ShowDialog`\" (#7982)"},{"Id":"1417680653","IsPullRequest":false,"CreatedAt":"2022-10-21T03:55:56","Actor":"Olina-Zhang","Number":"7981","RawContent":null,"Title":"The original FolderBrowserDialog cannot be opened","State":"open","Body":"### .NET version\n\n8.0.100-alpha.1.22514.14 \n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nyes, cannot repro in .Net 7.0 \n\n### Issue description\n\nThe FolderBrowserDialog cannot be opened when setting AutoUpgradeEnabled as false. This issue cannot be resolved after the PR fixing: https://github.com/dotnet/winforms/pull/7978\r\n**.Net 8.0 result:**\r\n![image](https://user-images.githubusercontent.com/26474449/197107601-cf2f6dc1-80b4-468f-a1d7-d23fbede2461.png)\r\n_System.AccessViolationException\r\n  HResult=0x80004003\r\n  Message=Attempted to read or write protected memory. This is often an indication that other memory is corrupt.\r\n  Source=Cannot evaluate the exception source\r\n  StackTrace:\r\nCannot evaluate the exception stack trace_\r\n\r\n**.Net 7.0 result:**\r\n![image](https://user-images.githubusercontent.com/26474449/197107687-553518b2-767a-487e-b47e-8fb26a8de564.png)\r\n\n\n### Steps to reproduce\n\n1. Open the [TestApp.zip](https://github.com/dotnet/winforms/files/9835559/TestApp.zip) project in VS\r\n2. Build and run it\r\n3. Click the button in the form and observe the result\r\n","Url":"https://github.com/dotnet/winforms/issues/7981","RelatedDescription":"Open issue \"The original FolderBrowserDialog cannot be opened\" (#7981)"},{"Id":"1417597783","IsPullRequest":false,"CreatedAt":"2022-10-21T02:19:49","Actor":"Olina-Zhang","Number":"7980","RawContent":null,"Title":"[Accessibility]On Windows high contrast themes, disabled toolStripMenuItem should have disabled checkmark when enabled 'Checked' property ","State":"open","Body":"### .NET version\n\n8.0.100-alpha.1.22514.14 \n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo, it also repro in previous .Net versions\n\n### Issue description\n\nOn Windows high contrast themes, disabled toolStripMenuItem doesn't have disabled checkmark when enabled 'Checked' property \r\n\r\n**Windows default theme**, it is correct:\r\n![image](https://user-images.githubusercontent.com/26474449/197093467-709cf744-9fb0-41d4-85e7-ce19c0898a68.png)\r\n\r\n**Windows 10 high contrast themes:** checkmark icon is not disabled when its toolStripItem \"Options\" is disabled, it has same icon as toolStripItem is not disabled, see comparison in https://github.com/dotnet/winforms/pull/7971#issuecomment-1285723449\r\n![image](https://user-images.githubusercontent.com/26474449/197093595-0200bb5f-ee4f-4969-9f1d-406fe57d5389.png)\r\n\n\n### Steps to reproduce\n\n1. Use attached application: \r\n[WinFormsApp75.zip](https://github.com/dotnet/winforms/files/9835150/WinFormsApp75.zip)\r\n2. Set windows to different HC themes\r\n3. build and run application\r\n4. Observe the checkmark icon for disabled toolStripMenuItem \"Options_Disabled\"","Url":"https://github.com/dotnet/winforms/issues/7980","RelatedDescription":"Open issue \"[Accessibility]On Windows high contrast themes, disabled toolStripMenuItem should have disabled checkmark when enabled 'Checked' property \" (#7980)"},{"Id":"1417513193","IsPullRequest":true,"CreatedAt":"2022-10-21T02:04:56","Actor":"JeremyKuhne","Number":"7979","RawContent":null,"Title":"Update to latest CsWin32","State":"closed","Body":"Fixes #7945.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7979)","Url":"https://github.com/dotnet/winforms/pull/7979","RelatedDescription":"Closed or merged PR \"Update to latest CsWin32\" (#7979)"},{"Id":"1417475853","IsPullRequest":true,"CreatedAt":"2022-10-21T00:13:12","Actor":"JeremyKuhne","Number":"7978","RawContent":null,"Title":"Fix the original save dialog","State":"closed","Body":"I copied from the Win32 metadata directly and it had `PreserveSig = false`, which is only valid with HRESULT returns.\r\n\r\nFixes #7975\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7978)","Url":"https://github.com/dotnet/winforms/pull/7978","RelatedDescription":"Closed or merged PR \"Fix the original save dialog\" (#7978)"},{"Id":"1417125256","IsPullRequest":true,"CreatedAt":"2022-10-20T23:15:18","Actor":"JeremyKuhne","Number":"7977","RawContent":null,"Title":"Convert to CsWin32 VARIANT","State":"closed","Body":"Converts VARIANT to CsWin32. I've left the files in the original location for now to keep the diff clear, will move them later.\r\n\r\nIt didn't become clear to me until I was fixing up tests that I could leverage using the newer C# feature of returning struct fields by ref to mitigate the nasty syntactical mess of replication of unions in C#. It's a nice pattern and one that might make sense moving into CsWin32.\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/7977)","Url":"https://github.com/dotnet/winforms/pull/7977","RelatedDescription":"Closed or merged PR \"Convert to CsWin32 VARIANT\" (#7977)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-10-24T03:30:33.8546827Z","RunDurationInMilliseconds":492}