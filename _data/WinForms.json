{"Data":{"GitHub":{"Issues":[{"Id":"2008195102","IsPullRequest":true,"CreatedAt":"2023-11-23T13:23:11","Actor":"dotnet-maestro[bot]","Number":"10371","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20231122.27\r\n- **Date Produced**: November 23, 2023 8:23:51 AM UTC\r\n- **Commit**: cbc501ca196371572c38f8d12a66969864d99c08\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **System.CodeDom**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **System.IO.Ports**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **System.Management**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **System.Speech**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **System.Text.Json**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-alpha.1.23572.1 to 9.0.0-alpha.1.23572.27][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/e89fee12fe...cbc501ca19\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10371)","Url":"https://github.com/dotnet/winforms/pull/10371","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#10371)"},{"Id":"2008193717","IsPullRequest":true,"CreatedAt":"2023-11-23T13:22:24","Actor":"dotnet-maestro[bot]","Number":"10370","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20231122.2\r\n- **Date Produced**: November 23, 2023 1:42:08 AM UTC\r\n- **Commit**: c5e5051496efbcc9046b25628666377d6b97a670\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.23570.1 to 9.0.0-beta.23572.2][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 9.0.0-beta.23570.1 to 9.0.0-beta.23572.2][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 9.0.0-beta.23570.1 to 9.0.0-beta.23572.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.23570.1 to 9.0.0-beta.23572.2][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 9.0.0-beta.23570.1 to 9.0.0-beta.23572.2][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.23570.1 to 9.0.0-beta.23572.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/96e79593b4...c5e5051496\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10370)","Url":"https://github.com/dotnet/winforms/pull/10370","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10370)"},{"Id":"2007770796","IsPullRequest":true,"CreatedAt":"2023-11-23T09:11:53","Actor":"SimonZhao888","Number":"10369","RawContent":null,"Title":"[release/8.0] Add ValuePattern.Value changed event to TextBox","State":"open","Body":"Backport of https://github.com/dotnet/winforms/pull/10295 to release/8.0\r\n\r\n## Proposed changes\r\n\r\n- Add raise ValuePattern.Value property changed event to TextBoxBase.\r\n- Update TextWithoutMnemonics(string? text) method.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n## Customer Impact\r\n\r\n- ValuePattern.Value property changed event will be sent from TextBox control. \r\n- When we don't set the accessible name of the textbox or the previous label, the accessible name of the textbox will return \"\" not the value of textbox.\r\n\r\n## Regression? \r\n\r\n- Yes\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\nValuePattern.Value property changed event is not sent from TextBox.\r\n![image](https://github.com/dotnet/winforms/assets/133954995/e6e6dfb6-28dc-4867-bdbb-01f257e75c6e)\r\n\r\n### After\r\nWhen we make changes to the text in the textbox, it will send the ValuePattern.Value property changed event.\r\n![TextBox_ValuePattern1](https://github.com/dotnet/winforms/assets/133954995/6bba8076-2d7d-44f0-b434-cdc66f95a0b9)\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Manual (Insights)\r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- 8.0.0-beta.23564.4\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10369)","Url":"https://github.com/dotnet/winforms/pull/10369","RelatedDescription":"Open PR \"[release/8.0] Add ValuePattern.Value changed event to TextBox\" (#10369)"},{"Id":"2007730477","IsPullRequest":false,"CreatedAt":"2023-11-23T08:46:05","Actor":"tangfengray","Number":"10368","RawContent":null,"Title":"how about add a generic form designer, Form<T>","State":"open","Body":"### Background and motivation\n\nnow , vs designer runtime not support this way, how about add it ?\n\n### API Proposal\n\n```csharp\r\npublic partial class Form1<T> : Form\r\n{\r\n\r\n}\r\n```\r\n\n\n### API Usage\n\n```csharp\r\npublic partial class Form1<T> : Form\r\n{\r\n\r\n}\r\n```\r\n\n\n### Alternative Designs\n\n_No response_\n\n### Risks\n\n_No response_\n\n### Will this feature affect UI controls?\n\nin this way , VS Designer ned to work properly","Url":"https://github.com/dotnet/winforms/issues/10368","RelatedDescription":"Open issue \"how about add a generic form designer, Form<T>\" (#10368)"},{"Id":"2007658726","IsPullRequest":false,"CreatedAt":"2023-11-23T07:59:19","Actor":"PieterjanDeClippel","Number":"10367","RawContent":null,"Title":"Add webbrowser dialog","State":"open","Body":"### Background and motivation\n\n![image](https://github.com/dotnet/winforms/assets/9629574/08f31d61-6f10-43a3-8d7d-b5000e735b35)\r\n\r\n[Code repository](https://github.com/MintPlayer/MintPlayer.BrowserDialog)\n\n### API Proposal\n\n```csharp\r\nnamespace System.Xxx;\r\n\r\npublic interface IWebBrowserDiscovery {\r\n    Task<IEnumerable<WebBrowser>> GetInstalledBrowsers();\r\n    Task<WebBrowser> GetDefaultBrowser(EProtocolType protocol); // http, https, ftp, mailto, webcal\r\n    Task<WebBrowser> GetDefaultBrowser(string fileType); // html, htm, xml, pdf, ...\r\n}\r\n\r\ninternal class WebBrowserDiscovery {}\r\n```\n\n### API Usage\n\n```csharp\r\npublic class TestModel {\r\n    public TestModel(IWebBrowserDiscovery webBrowserDiscovery) {}\r\n\r\n    public async Task Load() {\r\n        var browsers = await webBrowserDiscovery.GetInstaledBrowsers();\r\n    }\r\n}\r\n```\r\n\n\n### Alternative Designs\n\n_No response_\n\n### Risks\n\n_No response_\n\n### Will this feature affect UI controls?\n\nNo","Url":"https://github.com/dotnet/winforms/issues/10367","RelatedDescription":"Open issue \"Add webbrowser dialog\" (#10367)"},{"Id":"2007653398","IsPullRequest":false,"CreatedAt":"2023-11-23T07:54:51","Actor":"John-Qiao","Number":"10366","RawContent":null,"Title":"[Accessibility] Narrator cannot announce the checked status for ListView item when select the checkbox by mouse click ","State":"open","Body":"### .NET version\n\n9.0.100-alpha.1.23564.26\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo, this issue also repros on .NET 6.0/7.0/8.0.\n\n### Issue description\n\nNarrator cannot announce the checked status for ListView item when select the checkbox by mouse click.\r\n\r\n**The behavior for .NET 9.0:**\r\n![Core1](https://github.com/dotnet/winforms/assets/45864985/1b4aba4f-f78a-4785-bbf5-a4fb55f7bd4a)\r\n\r\nhttps://github.com/dotnet/winforms/assets/45864985/614a0708-75de-4cc3-9605-3349aba537ee\r\n\r\n\r\n**The behavior for .Net framework:**\r\n![Framework1](https://github.com/dotnet/winforms/assets/45864985/2c35f0de-a1c1-48b1-88d2-8463992adcf3)\r\n\n\n### Steps to reproduce\n\n1. Open the [ListView-Test.zip](https://github.com/dotnet/winforms/files/13447160/ListView-Test.zip) project.\r\n2. Build and run project.\r\n3. Launch Narrator tool, try to focus on the first item of the ListView with the mouse.\r\n4. Click the item1's checkbox by left mouse click.","Url":"https://github.com/dotnet/winforms/issues/10366","RelatedDescription":"Open issue \"[Accessibility] Narrator cannot announce the checked status for ListView item when select the checkbox by mouse click \" (#10366)"},{"Id":"2007588351","IsPullRequest":false,"CreatedAt":"2023-11-23T06:56:57","Actor":"MelonWang1","Number":"10365","RawContent":null,"Title":"[Accessibility] Inconsistent display order of TabPage pane in the UIA tree","State":"open","Body":"### .NET version\r\n\r\n.NET 9.0.100-alpha.1.23564.26\r\n\r\n### Did it work in .NET Framework?\r\n\r\nYes\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nYes, this issue cannot repro in .NET 3.1/5.0, can repro in .NET 6.0/7.0/8.0.\r\n\r\n### Issue description\r\n\r\nActual result:\r\nThe TabPage1 pane is at the bottom of more/less buttons.\r\n![core9 0](https://github.com/dotnet/winforms/assets/94418985/7ec4e97a-756c-43c5-aec6-752376e5292a)\r\n\r\nExpected result:\r\nThe TabPage1 pane should be on the top of the more/less buttons.\r\n![framework](https://github.com/dotnet/winforms/assets/94418985/6cde8f7c-7643-404e-921e-fd3602ae1d7e)\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a Winforms .NET Core application\r\n2. Add a TabControl\r\n3. Add some tab to see more/less buttons\r\n4. Build and run\r\n5. Open Inspect or Accessibility Insights tool\r\n6. Focus on TabPage1 pane","Url":"https://github.com/dotnet/winforms/issues/10365","RelatedDescription":"Open issue \"[Accessibility] Inconsistent display order of TabPage pane in the UIA tree\" (#10365)"},{"Id":"2007563066","IsPullRequest":false,"CreatedAt":"2023-11-23T06:30:16","Actor":"Olina-Zhang","Number":"10364","RawContent":null,"Title":"ColumnType is disabled for Columns in EditColumns dialog","State":"open","Body":"### .NET version\n\n9.0.100-alpha.1.23564.26\n\n### Did it work in .NET Framework?\n\nNot tested/verified\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo, reproduce in previous .Net versions\n\n### Issue description\n\nAfter the PR: https://github.com/dotnet/winforms/pull/10247, we can add different Columns Type in DataGridView by \"Add Ciolumn\" dialog.\r\n In [DemoConsole](https://github.com/dotnet/winforms/tree/main/src/System.Windows.Forms/tests/IntegrationTests/DesignSurface/DemoConsole) test app of Winforms repo, find DataGridView in form designer, open \"Edit Columns\" dialog, the ColumnType property for Column is disabled, we cannot expand it to choose all supported column type. \r\n\r\n**Actual:**\r\n![image](https://github.com/dotnet/winforms/assets/26474449/3c335ca9-ccec-4595-b93a-dfa2c25f2da3)\r\n\r\n**Expected:**\r\n![image](https://github.com/dotnet/winforms/assets/26474449/55875bfa-0655-43d7-9c6d-efcb5571572e)\r\n\n\n### Steps to reproduce\n\nTest sample: [DemoConsole](https://github.com/dotnet/winforms/tree/main/src/System.Windows.Forms/tests/IntegrationTests/DesignSurface/DemoConsole) in Winforms repo","Url":"https://github.com/dotnet/winforms/issues/10364","RelatedDescription":"Open issue \"ColumnType is disabled for Columns in EditColumns dialog\" (#10364)"},{"Id":"2007548517","IsPullRequest":false,"CreatedAt":"2023-11-23T06:16:23","Actor":"Olina-Zhang","Number":"10363","RawContent":null,"Title":"[Accessibility] Narrator doesn't announce check/unchecked state for DateTimePicker with ShowCheckBox property enabled","State":"open","Body":"### .NET version\n\n9.0.100-alpha.1.23564.26\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo, reproduce in previous .Net versions\n\n### Issue description\n\nWhen dataTimePicker's ShowCheckBox property enabled, Narrator doesn't announce check/unchecked state for DateTimePicker if check/uncheck its checkbox\r\n![image](https://github.com/dotnet/winforms/assets/26474449/e5b54a87-5fc9-4fbf-a3f5-48486039464a)\r\n![DateTimePicker](https://github.com/dotnet/winforms/assets/26474449/f3579ea3-5a5f-4280-9746-448fba3bb0eb)\r\n\n\n### Steps to reproduce\n\nTest application: \r\n[DateTimePickerSample.zip](https://github.com/dotnet/winforms/files/13446509/DateTimePickerSample.zip)\r\n\r\n1. Build and run test application\r\n2. Open Narrator, tab to DateTimePicker, press space to check/uncheck state, then observe","Url":"https://github.com/dotnet/winforms/issues/10363","RelatedDescription":"Open issue \"[Accessibility] Narrator doesn't announce check/unchecked state for DateTimePicker with ShowCheckBox property enabled\" (#10363)"},{"Id":"2007534008","IsPullRequest":false,"CreatedAt":"2023-11-23T05:59:19","Actor":"Olina-Zhang","Number":"10362","RawContent":null,"Title":"[Accessibility] Narrator cannot focus on RichTextBox with scrollbar in blue rectangle","State":"open","Body":"### .NET version\n\n9.0.100-alpha.1.23564.26\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo, all reproduce in previous .Net versions\n\n### Issue description\n\nWhen tabbing a RichTextBox control with scrollbar, Narrator cannot focus on it with blue rectangle, but can announce it. It cannot repro for RichTextBox without scrollbar.\r\n\r\n![image](https://github.com/dotnet/winforms/assets/26474449/207b0a5e-1d45-4f5f-9722-9b5b0f8e8d47)\r\n![RichTextBox](https://github.com/dotnet/winforms/assets/26474449/2f4d4073-37c2-48aa-b2cb-680db286ef38)\r\n\n\n### Steps to reproduce\n\nTest application: \r\n[RichTextBoxSample.zip](https://github.com/dotnet/winforms/files/13446446/RichTextBoxSample.zip)\r\n\r\n1. Build and run test application\r\n2. Open Narrator, tab to RichTextBox with scrollbar to observe","Url":"https://github.com/dotnet/winforms/issues/10362","RelatedDescription":"Open issue \"[Accessibility] Narrator cannot focus on RichTextBox with scrollbar in blue rectangle\" (#10362)"},{"Id":"2007173519","IsPullRequest":false,"CreatedAt":"2023-11-22T22:02:26","Actor":"kirsan31","Number":"10361","RawContent":null,"Title":"Suppress finalizeation of ThreadMethodEntry class","State":"open","Body":"### Background and motivation\r\n\r\n[ThreadMethodEntry](https://github.com/dotnet/winforms/blob/d20f9c71a189693c6c3475253397665bce0a1354/src/System.Windows.Forms/src/System/Windows/Forms/Control.ThreadMethodEntry.cs#L11) class have a Finalizer but not implement an `IDisposable` interface. So, after **every** call to `BeginInvoke`/`Invoke` instance of `ThreadMethodEntry` will end up in Freachable queue:\r\n![Snipaste_2023-11-22_14-23-10](https://github.com/dotnet/winforms/assets/17767561/18e44560-5e00-4c90-a447-36f2f1faf1aa)\r\n\r\nFinalizer here to free WH:\r\nhttps://github.com/dotnet/winforms/blob/d20f9c71a189693c6c3475253397665bce0a1354/src/System.Windows.Forms/src/System/Windows/Forms/Control.ThreadMethodEntry.cs#L51-L54\r\nWe have 3 cases here (for all of them `ThreadMethodEntry` will end up in Freachable queue any way) :\r\n- We not allocate WH.\r\n- We allocate WH and use it internally (`Invoke`) - we not free it. This already violate `IAsyncResult.AsyncWaitHandle` [using rules](https://learn.microsoft.com/en-us/dotnet/api/system.iasyncresult.asyncwaithandle?view=net-8.0#notes-to-callers).\r\n- User allocate WH through `IAsyncResult.AsyncWaitHandle` (`BeginInvoke`). And even if he properly Close this WH, `ThreadMethodEntry` will end up in Freachable queue :(\r\n\r\n### Proposal\r\n\r\nSuggestions:\r\n- implement `IDisposable`?\r\n- register for finalization only when WH is allocated.\r\n- SuppressFinalize after WH disposed.\r\n\r\nIf you don't mind in principle, you can assignee this to me. I have some ideas on this matter, and will try to implement them as soon as find time.\r\n\r\n### Risks\r\n\r\nMust be minimal...\r\n\r\n### Will this feature affect UI controls?\r\n\r\nNo","Url":"https://github.com/dotnet/winforms/issues/10361","RelatedDescription":"Open issue \"Suppress finalizeation of ThreadMethodEntry class\" (#10361)"},{"Id":"2006297249","IsPullRequest":true,"CreatedAt":"2023-11-22T17:50:28","Actor":"dotnet-maestro[bot]","Number":"10358","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20231122.1\r\n- **Date Produced**: November 22, 2023 11:19:47 AM UTC\r\n- **Commit**: e89fee12fe0df3ab596611c21b1b50d8e24586e1\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **System.CodeDom**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **System.IO.Ports**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **System.Management**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **System.Speech**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **System.Text.Json**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-alpha.1.23570.20 to 9.0.0-alpha.1.23572.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/79e42f9adc...e89fee12fe\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10358)","Url":"https://github.com/dotnet/winforms/pull/10358","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#10358)"},{"Id":"2006690681","IsPullRequest":false,"CreatedAt":"2023-11-22T16:18:19","Actor":"DJm00n","Number":"10360","RawContent":null,"Title":"`Curosor.Draw` draws with broken alpha channel","State":"open","Body":"### .NET version\r\n\r\n7.0.400\r\n\r\n### Did it work in .NET Framework?\r\n\r\nNo\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\n_No response_\r\n\r\n### Issue description\r\n\r\n`Curosor.Draw` draws with broken alpha channel:\r\nResult:\r\n![image](https://github.com/dotnet/winforms/assets/1285934/727ae1e1-a75f-44fd-95bd-257b97ae75dc)\r\nExpected:\r\n![image](https://github.com/dotnet/winforms/assets/1285934/d4cd08e0-79b5-4ba3-95b5-942993deddec)\r\n\r\nAlso reported here more that 10 years ago: https://stackoverflow.com/questions/4451839/how-to-render-a-transparent-cursor-to-bitmap-preserving-alpha-channel\r\n\r\n### Steps to reproduce\r\n\r\n```cs\r\nCursor cursor = Cursors.AppStarting;\r\nBitmap bitmap = new Bitmap(cursor.Size.Width, cursor.Size.Height, PixelFormat.Format32bppArgb);\r\nGraphics g = Graphics.FromImage(bitmap);\r\ncursor.Draw(g, new Rectangle(0, 0, bitmap.Width, bitmap.Height));\r\nbitmap.Save(Path.Combine(Directory.GetCurrentDirectory(), \"cursor.png\"), ImageFormat.Png);\r\n```\r\n\r\nThis code with `Icon.ToBitmap` works as expected:\r\n```cs\r\nCursor cursor = Cursors.AppStarting;\r\nIcon icon = Icon.FromHandle(cursor.Handle);\r\nBitmap bitmap = icon.ToBitmap();\r\nbitmap.Save(Path.Combine(Directory.GetCurrentDirectory(), \"icon.png\"), ImageFormat.Png);\r\n```","Url":"https://github.com/dotnet/winforms/issues/10360","RelatedDescription":"Open issue \"`Curosor.Draw` draws with broken alpha channel\" (#10360)"},{"Id":"2006393964","IsPullRequest":false,"CreatedAt":"2023-11-22T13:52:42","Actor":"SteffenSchwaiger","Number":"10359","RawContent":null,"Title":"FolderBrowseDialog: Unexpected Positioning and Incorrect BackgroundColor of Description","State":"open","Body":"### .NET version\n\n8.0.0\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\nWhen setting the `Description` property of a `FolderBrowseDialog` instance, the configured description is displayed at an unexpected position and with an incorrect `BackgroundColor`.\r\n\r\n**Example:**\r\n![image](https://github.com/dotnet/winforms/assets/5320760/b3d8b1b4-7224-4ce7-b769-4bd8166682f1)\r\n![image](https://github.com/dotnet/winforms/assets/5320760/3f6a247f-7e53-43f6-96ce-9e264d35c267)\n\n### Steps to reproduce\n\n```csharp\r\nusing(FolderBrowserDialog dialog = new FolderBrowserDialog())\r\n{\r\n    dialog.Description = \"Test123\";\r\n    dialog.ShowDialog();\r\n}\r\n```","Url":"https://github.com/dotnet/winforms/issues/10359","RelatedDescription":"Open issue \"FolderBrowseDialog: Unexpected Positioning and Incorrect BackgroundColor of Description\" (#10359)"},{"Id":"2006176010","IsPullRequest":true,"CreatedAt":"2023-11-22T11:51:56","Actor":"FenPhoenix","Number":"10357","RawContent":null,"Title":"Add multiselect to FolderBrowserDialog","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\n## Proposed changes\r\n\r\n- Add Multiselect property to FolderBrowserDialog.\r\n- Add SelectedPaths property to FolderBrowserDialog.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Customers are able to optionally allow for multiple selection in folder browser dialogs.\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- Added unit tests for the new properties Multiselect and SelectedPaths in line with existing ones, all passed\r\n- Manually checked that the new properties work as expected with WinFormsControlsTest (integration test), and double-checked it's indeed returning the correct list of selected folders by writing a quick message box path displayer (didn't commit that code)\r\n\r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- .NET SDK: \r\n Version:           8.0.100\r\n Commit:            57efcf1350\r\n Workload version:  8.0.100-manifests.8d38d0cc\r\n\r\n- Runtime Environment: \r\n OS Name:     Windows\r\n OS Version:  10.0.19045\r\n OS Platform: Windows\r\n RID:         win-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\8.0.100\\\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10357)","Url":"https://github.com/dotnet/winforms/pull/10357","RelatedDescription":"Open PR \"Add multiselect to FolderBrowserDialog\" (#10357)"},{"Id":"2005834978","IsPullRequest":false,"CreatedAt":"2023-11-22T08:38:27","Actor":"Nora-Zhou01","Number":"10355","RawContent":null,"Title":"[Accessibility] Select ListView item with mouse, Narrator can't select whole rows","State":"open","Body":"### .NET version\n\n9.0.100-alpha.1.23564.26\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo, this issue also repro's on .NET 6.0/7.0/8.0.\n\n### Issue description\n\nNarrator does not select the entire row when the ListView item is selected with the mouse, but it selects the entire row when it is selected with the keyboard.\r\n**The behavior for .NET 9.0:**\r\n![core](https://github.com/dotnet/winforms/assets/104609169/bc2b9f4c-6ffa-4f92-a119-be1d811de93c)\r\n\r\nhttps://github.com/dotnet/winforms/assets/104609169/6ffed828-685c-44fc-aef0-0b501df4bb44\r\n\r\n**The behavior for .Net framework:**\r\n![framework](https://github.com/dotnet/winforms/assets/104609169/f6cb5ea1-2f41-40cd-ada7-cc548ba848dc)\r\n\r\nhttps://github.com/dotnet/winforms/assets/104609169/1a4ed23d-a388-4457-a458-0e0f360c83ce\r\n\r\n\r\n\n\n### Steps to reproduce\n\n1. Create a WinForms .NET Core application with ListView control.\r\n2. Add some columns and items to it and set the checkbox property to true.\r\n3. Set ListView's View as Details.\r\n4. Build and run the application.\r\n5. Launch the Narrator tool, try to focus on the item of ListView with mouse.\r\n6. Press up/down keyboard to focus on the other item.","Url":"https://github.com/dotnet/winforms/issues/10355","RelatedDescription":"Open issue \"[Accessibility] Select ListView item with mouse, Narrator can't select whole rows\" (#10355)"},{"Id":"2005772314","IsPullRequest":false,"CreatedAt":"2023-11-22T07:56:49","Actor":"Nora-Zhou01","Number":"10354","RawContent":null,"Title":"[Accessibility] After selecting ListView item with mouse and then space selected, Narrator can't display and read out the current status","State":"open","Body":"### .NET version\r\n\r\n9.0.100-alpha.1.23564.26\r\n\r\n### Did it work in .NET Framework?\r\n\r\nYes\r\n\r\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\r\n\r\nNo, this issue also repro's on .NET 6.0/7.0/8.0.\r\n\r\n### Issue description\r\n\r\nNarrator can't display and read out the current state of a ListView item when it is selected with mouse and then space-selected, but Narrator can display and read out the current state of a ListView item when it is selected with keyboard and then space-selected.\r\n\r\n**The behavior for .NET 9.0:**\r\n![space](https://github.com/dotnet/winforms/assets/104609169/a9be8f4d-78da-4351-9858-34bf407bde27)\r\n\r\nhttps://github.com/dotnet/winforms/assets/104609169/1ca4e6aa-217f-4408-9ba5-2f8de046e3a0\r\n\r\n**The behavior for .Net framework:**\r\n![framework](https://github.com/dotnet/winforms/assets/104609169/2348b3cd-b904-43ed-96d2-c61d227a97f1)\r\n\r\n\r\nhttps://github.com/dotnet/winforms/assets/104609169/8c58afaa-f865-42b3-8664-1f5dd76dbe36\r\n\r\n\r\n\r\n### Steps to reproduce\r\n[WinFormsApp28.zip](https://github.com/dotnet/winforms/files/13435385/WinFormsApp28.zip)\r\n\r\n\r\n1. Create a WinForms .NET Core application with ListView control.\r\n2. Add some columns and items to it and set the checkbox property to true.\r\n3. Set ListView's View as Details.\r\n4. Build and run the application.\r\n5. Launch the Narrator tool, try to focus on the first item of the ListView with the mouse.\r\n6. Type the space bar.\r\n7. Press up/down keyboard to focus on the next item.\r\n8. Type the space bar.","Url":"https://github.com/dotnet/winforms/issues/10354","RelatedDescription":"Open issue \"[Accessibility] After selecting ListView item with mouse and then space selected, Narrator can't display and read out the current status\" (#10354)"},{"Id":"2004877622","IsPullRequest":true,"CreatedAt":"2023-11-21T18:14:43","Actor":"gpetrou","Number":"10353","RawContent":null,"Title":"Enable nullability in some DataGridView.Methods members","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in some DataGridView.Methods members.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10353)","Url":"https://github.com/dotnet/winforms/pull/10353","RelatedDescription":"Open PR \"Enable nullability in some DataGridView.Methods members\" (#10353)"},{"Id":"2004797306","IsPullRequest":false,"CreatedAt":"2023-11-21T17:25:02","Actor":"jwilo","Number":"10352","RawContent":null,"Title":"Re-occurrence of WinForms designer failing to load","State":"open","Body":"### Environment\n\nVisual Studio Version 17.8.0\n\n### .NET version\n\n8.0.0\n\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\n\nI have had this issue in the past under .NET 5 & 6 as per https://github.com/dotnet/winforms/issues/6492\r\n\r\nHowever, .NET 8 has been working just fine since converting a project to 8 several weeks ago. I have been working on this project non stop for weeks, until this occurred just now.\n\n### Issue description\n\nExactly as per closed issue https://github.com/dotnet/winforms/issues/6492\r\n\r\nI have been working on this project for weeks, with minor occurrences of behaviour I have witness across multiple machines, and multiple VS versions for years - where jumping between code/designer views, often the designer tab will actually display the code, and closing/reloading the designer view resolves the issue.\r\n\r\nHowever, loading the project this morning I am unable to open the design. VS and the machine were shut down correctly, and nobody else has touched this (all files saved locally).\n\n### Steps to reproduce\n\nUnfortunately I have no idea how to reproduce the issue, as it has just re-occurred seemingly out of nowhere. In my case, it occurred loading the project again this morning, having been working on it for weeks.\r\n\r\nI have attempted to generate logs by following https://github.com/dotnet/winforms/issues/6492#issuecomment-1010310024 but absolutely nothing is generated.\r\n\r\nI can open a different solution (.NET 6), and the designer loads just fine.\r\n\r\nNow, most interesting - I've closing that other solution, jumped back to the problematic solution, and the designer now loads just fine? Even though before I've closed and re-opened the solution, and VS< and the machine several times. Now that he designer has loaded, the log contains many entries.\n\n### Diagnostics\n\n_No response_","Url":"https://github.com/dotnet/winforms/issues/10352","RelatedDescription":"Open issue \"Re-occurrence of WinForms designer failing to load\" (#10352)"},{"Id":"2004241540","IsPullRequest":true,"CreatedAt":"2023-11-21T13:28:11","Actor":"dotnet-maestro[bot]","Number":"10351","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20231120.20\r\n- **Date Produced**: November 21, 2023 10:07:49 AM UTC\r\n- **Commit**: 79e42f9adc3e32943b6177431e3d66d9d5b9cb19\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **System.CodeDom**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **System.IO.Ports**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **System.Management**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **System.Speech**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **System.Text.Json**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-alpha.1.23570.1 to 9.0.0-alpha.1.23570.20][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/57085686bf...79e42f9adc\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10351)","Url":"https://github.com/dotnet/winforms/pull/10351","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#10351)"},{"Id":"2004240361","IsPullRequest":true,"CreatedAt":"2023-11-21T13:27:27","Actor":"dotnet-maestro[bot]","Number":"10350","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20231120.1\r\n- **Date Produced**: November 20, 2023 11:51:44 AM UTC\r\n- **Commit**: 96e79593b458ac7aeff2571604c41fe915da5bff\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.23567.1 to 9.0.0-beta.23570.1][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 9.0.0-beta.23567.1 to 9.0.0-beta.23570.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 9.0.0-beta.23567.1 to 9.0.0-beta.23570.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.23567.1 to 9.0.0-beta.23570.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 9.0.0-beta.23567.1 to 9.0.0-beta.23570.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.23567.1 to 9.0.0-beta.23570.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/b6801170e6...96e79593b4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10350)","Url":"https://github.com/dotnet/winforms/pull/10350","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#10350)"},{"Id":"2001716812","IsPullRequest":false,"CreatedAt":"2023-11-21T05:16:42","Actor":"Philip-Wang01","Number":"10342","RawContent":null,"Title":"The default value of bindSource.SortDesciptions has been changed","State":"closed","Body":"### .NET version\n\n.NET 9.0 main branch\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes, it works in .NET 6.0/7.0/8.0. **Regression from: https://github.com/dotnet/winforms/pull/10253, this affects our automation test cases.**\n\n### Issue description\n\n.NET 9.0:\r\n![image](https://github.com/dotnet/winforms/assets/86937911/6042b1eb-acc9-457b-b323-fc5f7c9fef82)\r\n.NET 8.0:\r\n![image](https://github.com/dotnet/winforms/assets/86937911/246234b7-f345-4ebb-aa6c-0ab4ddb2380e)\r\n\n\n### Steps to reproduce\n\n1. Create a WinForms .NET Core project with a BindingSource.\r\n2. Double click Form1 and type below code in `Form1_Load` event:\r\n`bindingSource1.DataSource = new string[] { \"a\", \"b\", \"c\" };`\r\n3. Add a breakpoint to the event, build and run the application.\r\n4. Check the value of bindindSource.SortDesciptions.","Url":"https://github.com/dotnet/winforms/issues/10342","RelatedDescription":"Closed issue \"The default value of bindSource.SortDesciptions has been changed\" (#10342)"},{"Id":"2003202508","IsPullRequest":true,"CreatedAt":"2023-11-21T05:00:27","Actor":"davkean","Number":"10347","RawContent":null,"Title":"Remove unneeded catch","State":"closed","Body":"This catch is unneeded, its setting a value that never escapes in the case of an exception. This ruins debugging crashes caused by this path and I hit this trying to look at crashes tracked by 1906584 internally.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10347)","Url":"https://github.com/dotnet/winforms/pull/10347","RelatedDescription":"Closed or merged PR \"Remove unneeded catch\" (#10347)"},{"Id":"2003304841","IsPullRequest":true,"CreatedAt":"2023-11-21T02:47:53","Actor":"lonitra","Number":"10349","RawContent":null,"Title":"Fix indentation in LocProject.json","State":"closed","Body":"Following up to https://github.com/dotnet/winforms/pull/10346\r\nCI is still failing due to indentation..\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10349)","Url":"https://github.com/dotnet/winforms/pull/10349","RelatedDescription":"Closed or merged PR \"Fix indentation in LocProject.json\" (#10349)"},{"Id":"2003268036","IsPullRequest":false,"CreatedAt":"2023-11-21T01:07:50","Actor":"elachlan","Number":"10348","RawContent":null,"Title":"[Tracking] Update `TaskDialog` `HandleTaskDialogNativeCallback` code when CsWin32 is updated to use Win32MetaData v57","State":"open","Body":"Based on comment: https://github.com/dotnet/winforms/pull/9900#discussion_r1396556837\r\n\r\nhttps://github.com/dotnet/winforms/blob/7a6f7349b6c57cc74f346498df279c2078818075/src/System.Windows.Forms/src/System/Windows/Forms/Dialogs/TaskDialog/TaskDialog.cs#L262-L274","Url":"https://github.com/dotnet/winforms/issues/10348","RelatedDescription":"Open issue \"[Tracking] Update `TaskDialog` `HandleTaskDialogNativeCallback` code when CsWin32 is updated to use Win32MetaData v57\" (#10348)"},{"Id":"2002882943","IsPullRequest":true,"CreatedAt":"2023-11-20T21:13:24","Actor":"lonitra","Number":"10346","RawContent":null,"Title":"Update LocProj to include StyleCollectionEditor.xlf","State":"closed","Body":"This fixes CI failures in https://dev.azure.com/dnceng/internal/_build/results?buildId=2319748&view=logs&s=8942c932-824b-5cec-8f0c-ca2e44dadd6c . We had ported StyleCollectionEditor in https://github.com/dotnet/winforms/pull/10271, but did not updating LocProject.json to include StyleCollectionEditor.xlf\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10346)","Url":"https://github.com/dotnet/winforms/pull/10346","RelatedDescription":"Closed or merged PR \"Update LocProj to include StyleCollectionEditor.xlf\" (#10346)"},{"Id":"2002854709","IsPullRequest":true,"CreatedAt":"2023-11-20T20:05:56","Actor":"dotnet-maestro[bot]","Number":"10345","RawContent":null,"Title":"[release/6.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:84f431dc-3375-4a46-af87-08d961c59698)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 84f431dc-3375-4a46-af87-08d961c59698\r\n- **Build**: 20231017.3\r\n- **Date Produced**: October 17, 2023 4:31:01 PM UTC\r\n- **Commit**: 7c67805da0adbf4e72f2f4799b63efcf1cc8fe4c\r\n- **Branch**: refs/heads/release/6.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.23511.8 to 6.0.0-beta.23517.3][1]\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 6.0.0-beta.23511.8 to 6.0.0-beta.23517.3][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.23511.8 to 6.0.0-beta.23517.3][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.23511.8 to 6.0.0-beta.23517.3][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.23511.8 to 6.0.0-beta.23517.3][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.23511.8 to 6.0.0-beta.23517.3][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/06ccd9430e...7c67805da0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:84f431dc-3375-4a46-af87-08d961c59698)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10345)","Url":"https://github.com/dotnet/winforms/pull/10345","RelatedDescription":"Closed or merged PR \"[release/6.0] Update dependencies from dotnet/arcade\" (#10345)"},{"Id":"2002158841","IsPullRequest":true,"CreatedAt":"2023-11-20T13:27:22","Actor":"dotnet-maestro[bot]","Number":"10344","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20231120.1\r\n- **Date Produced**: November 20, 2023 10:53:25 AM UTC\r\n- **Commit**: 57085686bf7223e2305720383f4e00695321919a\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **System.CodeDom**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **System.ComponentModel.Composition**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **System.ComponentModel.Composition.Registration**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **System.Data.Odbc**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **System.Data.OleDb**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **System.Diagnostics.EventLog**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **System.DirectoryServices**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **System.DirectoryServices.AccountManagement**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **System.DirectoryServices.Protocols**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **System.IO.Packaging**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **System.IO.Ports**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **System.Management**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **System.Reflection.Context**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **System.Resources.Extensions**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **System.Runtime.Caching**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **System.Security.Cryptography.Xml**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **System.Security.Permissions**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **System.ServiceModel.Syndication**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **System.ServiceProcess.ServiceController**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **System.Speech**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **System.Text.Encoding.CodePages**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **System.Text.Encodings.Web**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **System.Text.Json**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **System.Threading.AccessControl**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **System.Windows.Extensions**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.9.0**: [from 9.0.0-alpha.1.23568.2 to 9.0.0-alpha.1.23570.1][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/47a94224e8...57085686bf\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/10344)","Url":"https://github.com/dotnet/winforms/pull/10344","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#10344)"},{"Id":"2001770008","IsPullRequest":false,"CreatedAt":"2023-11-20T09:40:45","Actor":"Olina-Zhang","Number":"10343","RawContent":null,"Title":"[Accessibility] Accessibility Insights tool keeps loading when mouse-over DataGridView ","State":"open","Body":"### .NET version\n\n9.0.100-alpha.1.23564.26\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nIt works in .Net 7.0, doesn't in .Net 8.0\n\n### Issue description\n\nIf mouse-click textBox cell in DataGridView, open AccessibilityInsight, then mouse-over DataGridView cell. It leads to AccessibilityInsight keeps loading.\r\n\r\n**.Net 9.0/.Net 8.0: AccessibilityInsight keeps loading**\r\n![DataGridView_AccessibilityInsightIssue](https://github.com/dotnet/winforms/assets/26474449/fb8ccacd-9d93-4f0d-9ddc-eeda7e2291b0)\r\n\r\n**.Net 7.0: AccessibilityInsight works well**\r\n![DataGridView_NET7 0](https://github.com/dotnet/winforms/assets/26474449/6743c7a0-1135-4be5-a728-02fb1e1f2f85)\r\n\n\n### Steps to reproduce\n\n1. Create a Winforms .Net 9.0/8.0 application\r\n2. Add a DataGridView with TextBox cell\r\n3. Build and run application\r\n4. Mouse-click in DataGridView_textBox cell\r\n5. Launch AccessibilityInsight, then mouse-over DataGridView\r\n","Url":"https://github.com/dotnet/winforms/issues/10343","RelatedDescription":"Open issue \"[Accessibility] Accessibility Insights tool keeps loading when mouse-over DataGridView \" (#10343)"},{"Id":"2000883148","IsPullRequest":false,"CreatedAt":"2023-11-19T14:53:39","Actor":"EskeRahn","Number":"10341","RawContent":null,"Title":"Scaling of list type controls fails, creeps upwards in SpliContainer","State":"open","Body":"### .NET version\n\nThis relates to .net **8.0**, **7.0** and **6.0**\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nThere are similar issues with .Net Framework, e.g. 4.8\n\n### Issue description\n\n\r\n## Description\r\n### Environment\r\nA .Net 8.0 Forms project set for PerMonitorV2\r\n\r\n### Issue\r\nWhen moving a form with a list-type control bound by a **bottom anchor** to a splitcontainer back and forth between monitors with different scaling, it usually makes the list bottom creep upwards, (Tested with 100% versus all scale-factors from 125% to 350%).  \r\n(Placed directly on a form, and not within a control, makes it collapse faster)\r\n\r\n### Known workaround:\r\nPlace the list with DockStyle.Full in a dummy panel, giving the dummy panel the same size/position/anchors as the list had.\r\n\r\n### Suspected cause\r\nAs list type controls have heights aligned with a multipla of the items, rounding errors can cause calculating the number of items there are room for to be rounded down, e.g. 10.9999 → 10, so a tiny addition to the height of say ½ or 1 pixel before dividing with the item-height and truncating might fix it.\r\n\r\n### Here an example\r\nA split container, and in one panel a ListBox, and a sub-panel with another ListBox filling that sub-panel\r\n![WinFormsAppCreepingListOnRescale_workaround](https://github.com/dotnet/winforms/assets/24905467/d1e576ab-64fa-4bf5-a878-f600bfdda723)\r\n\r\n### Code example, including the mentioned known workaround\r\n[WinFormsAppCreepingListOnRescale_workaround_source.zip](https://github.com/dotnet/winforms/files/13403226/WinFormsAppCreepingListOnRescale_workaround_source.zip)\r\n\n\n### Steps to reproduce\n\n1. Start VS 2022 17.8\r\n2. Create a new .Net 8.0 WinForm app\r\n3. Make sure the proj file has\r\n`<ApplicationHighDpiMode>PerMonitorV2</ApplicationHighDpiMode>`\r\n4. Tools DoubleClick to add a SplitContainer, covering the whole form\r\n5. Change the splitters Orientation to Horizontal\r\n6. In the upper panel, ToolBox DoubleClick ListBox (just leave at default six items height)\r\n7. Give the list a Bottom Anchor\r\n8. Run\r\n9. Move the app back and forth between monitors with 100% and non 100% scaling, e.g. 100% ↔ 125 %.\r\n10. If you by a lucky punch do not see the issue, adjust the splitter slightly and retry the move","Url":"https://github.com/dotnet/winforms/issues/10341","RelatedDescription":"Open issue \"Scaling of list type controls fails, creeps upwards in SpliContainer\" (#10341)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-11-24T03:30:27.3763075Z","RunDurationInMilliseconds":394}