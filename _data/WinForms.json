{"Data":{"GitHub":{"Issues":[{"Id":"1129314945","IsPullRequest":true,"CreatedAt":"2022-02-10T01:47:24","Actor":"RussKie","Number":"6668","RawContent":null,"Title":"Pin assembly versions to prevent revving those in servicing releases","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nRelates to #6663\r\n\r\n\r\n## Proposed changes\r\n\r\nPing assembly versions similar to https://github.com/dotnet/runtime/blob/bbc766a7c65716305919bc691d696b1e46fa6f62/eng/Versions.props#L14 and https://github.com/dotnet/aspnetcore/blob/c0575788ecadd6e5cfeb4eab635c13b5fd433d37/Directory.Build.targets#L88 to avoid revving assembly versions in servicing releases.\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6668)","Url":"https://github.com/dotnet/winforms/pull/6668","RelatedDescription":"Open PR \"Pin assembly versions to prevent revving those in servicing releases\" (#6668)"},{"Id":"1129300275","IsPullRequest":true,"CreatedAt":"2022-02-10T01:31:01","Actor":"RussKie","Number":"6667","RawContent":null,"Title":"Pin assembly versions to prevent revving those in servicing releases","State":"open","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nResolves #6663\r\n\r\n\r\n## Proposed changes\r\n\r\nPing assembly versions similar to https://github.com/dotnet/runtime/blob/bbc766a7c65716305919bc691d696b1e46fa6f62/eng/Versions.props#L14 and https://github.com/dotnet/aspnetcore/blob/c0575788ecadd6e5cfeb4eab635c13b5fd433d37/Directory.Build.targets#L88 to avoid revving assembly versions in servicing releases.\r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- Windows Forms applications built against 6.0.2 won't run on 6.0 GA or 6.0.1\r\n\r\n## Regression? \r\n\r\n- Yes \r\n\r\n## Risk\r\n\r\n- Medium. With this fix we'll stop supporting the folks that compiled against 6.0.2, and any assets compiled against 6.0.2 won't exchange and will need to be rebuilt.\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n6.0.1\r\n![image](https://user-images.githubusercontent.com/4403806/153317658-411d1444-8469-4907-9c7b-087e4cde7426.png)\r\n![image](https://user-images.githubusercontent.com/4403806/153317581-5c7b0409-4d39-4725-af5d-394173591f29.png)\r\n\r\n6.0.2\r\n![image](https://user-images.githubusercontent.com/4403806/153317450-b39ca98c-5a13-4db7-9dd0-f864dded6254.png)\r\n![image](https://user-images.githubusercontent.com/4403806/153317487-9ab16baf-708c-4caa-b8ef-16c527da7e55.png)\r\n\r\n### After\r\n\r\nA private built for this fix:\r\n![image](https://user-images.githubusercontent.com/4403806/153318436-d35ed929-b010-4961-a6c1-49dad6835162.png)\r\n![image](https://user-images.githubusercontent.com/4403806/153318627-efb797f8-f9b9-45ca-8463-7f1a200cf55d.png)\r\n\r\nwhich aligns with \r\n\r\n![image](https://user-images.githubusercontent.com/4403806/153319666-d16a5c37-5a47-41b4-8a1c-f4db878f1ba9.png)\r\n![image](https://user-images.githubusercontent.com/4403806/153319118-8b1874ab-9aa6-42d5-810c-83a60d729041.png)\r\n\r\n![image](https://user-images.githubusercontent.com/4403806/153319440-58cd1b3b-3b9b-4a23-b6cd-2128f7ad3149.png)\r\n![image](https://user-images.githubusercontent.com/4403806/153318731-b346e04e-d4af-4dd2-a597-4e03ce025703.png)\r\n\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6667)","Url":"https://github.com/dotnet/winforms/pull/6667","RelatedDescription":"Open PR \"Pin assembly versions to prevent revving those in servicing releases\" (#6667)"},{"Id":"1129279773","IsPullRequest":false,"CreatedAt":"2022-02-10T01:06:50","Actor":"ak98","Number":"6666","RawContent":null,"Title":"SendKeys Grouping fails","State":"open","Body":"\r\n\r\n* .NET Core Version: \r\n6.0\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nNO\r\n\r\n**Problem description:**\r\n\r\nSendKeys.Send(\"^(a)^(c)\") triggers exception.\r\n\r\nArgumentException\r\nException:SendKeys string '^(a)^(c)' is not valid.\r\n\r\n**Expected behavior:**\r\n Sends Ctrl-A then Ctrl-C\r\n\r\n**Minimal repro:**\r\nSendKeys.Send(\"^(a)^(c)\") \r\n","Url":"https://github.com/dotnet/winforms/issues/6666","RelatedDescription":"Open issue \"SendKeys Grouping fails\" (#6666)"},{"Id":"1129037293","IsPullRequest":true,"CreatedAt":"2022-02-09T21:28:08","Actor":"vseanreesermsft","Number":"6665","RawContent":null,"Title":"Internal merge 6.0 2022 02 08 1607","State":"closed","Body":"Merging internal commits to public repo and reverting previous squash commit.s\r\n\r\n**DO NOT SQUASH MERGE**\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6665)","Url":"https://github.com/dotnet/winforms/pull/6665","RelatedDescription":"Closed or merged PR \"Internal merge 6.0 2022 02 08 1607\" (#6665)"},{"Id":"1127889273","IsPullRequest":true,"CreatedAt":"2022-02-09T20:25:09","Actor":"vseanreesermsft","Number":"6648","RawContent":null,"Title":"Merging internal commits for release/6.0","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6648)","Url":"https://github.com/dotnet/winforms/pull/6648","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/6.0\" (#6648)"},{"Id":"1128243242","IsPullRequest":true,"CreatedAt":"2022-02-09T18:08:13","Actor":"vladimir-krestov","Number":"6655","RawContent":null,"Title":"Adding more `Skip` attributes for flaky tests","State":"closed","Body":"Related Issue #6610 and Issue #6654\r\nThese tests fail sometimes in x86 CI build, that blocks deployment of fixes into sdk.\r\n\r\n## Proposed changes\r\n\r\n- Skipped unit tests that fail sometimes in arm64 and x86 environments, that blocks fixes deployment.\r\n\r\n## Customer Impact\r\n\r\n- No\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- CI build\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6655)","Url":"https://github.com/dotnet/winforms/pull/6655","RelatedDescription":"Closed or merged PR \"Adding more `Skip` attributes for flaky tests\" (#6655)"},{"Id":"1128860059","IsPullRequest":true,"CreatedAt":"2022-02-09T18:01:15","Actor":"gpetrou","Number":"6664","RawContent":null,"Title":"Enable nullability in Panel","State":"open","Body":"## Proposed changes\r\n\r\n- Enable nullability in Panel.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6664)","Url":"https://github.com/dotnet/winforms/pull/6664","RelatedDescription":"Open PR \"Enable nullability in Panel\" (#6664)"},{"Id":"1128792538","IsPullRequest":false,"CreatedAt":"2022-02-09T16:55:06","Actor":"EatonZ","Number":"6663","RawContent":null,"Title":"6.0.2 SDK update has broken WinForms apps","State":"open","Body":"**UPDATE:** [Workaround here for those who need it.](https://github.com/dotnet/winforms/issues/6663#issuecomment-1034450165)\r\n\r\nThere appears to be a critical problem with the new 6.0.2 update which makes apps compiled with it fail to start on machines running 6.0.1.\r\n\r\nTo reproduce, do the following:\r\n1. Visit Windows Update to update the runtime on your **dev machine**, and also update Visual Studio 2022 using Visual Studio Installer.\r\n2. On a **client/test machine**, install the 6.0.1 desktop runtime. [Direct Link](https://dotnetcli.azureedge.net/dotnet/WindowsDesktop/6.0.1/windowsdesktop-runtime-6.0.1-win-x64.exe)\r\n3. On your dev machine, create a new WinForms project, build it and copy the executable files to the client/test machine.\r\n4. Run it and it will not start. Event logs show the following:\r\n```\r\nApplication: WinFormsApp1.exe\r\nCoreCLR Version: 6.0.121.56705\r\n.NET Version: 6.0.1\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: System.IO.FileLoadException: Could not load file or assembly 'System.Windows.Forms, Version=6.0.2.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'. The located assembly's manifest definition does not match the assembly reference. (0x80131040)\r\nFile name: 'System.Windows.Forms, Version=6.0.2.0, Culture=neutral, PublicKeyToken=b77a5c561934e089'\r\n   at WinFormsApp1.Program.Main()\r\n```\r\n\r\nThis problem did not happen on .NET 5. I was under the impression patch versions are generally compatible with each other, and I use `<RollForward>LatestPatch</RollForward>` in my real app, but even with that setting it still crashes.\r\n\r\nThis is a blocking issue for me because if I distribute an update for my app built on 6.0.2 and the client is still running 6.0.1, that will be bad if the app suddenly stops working.","Url":"https://github.com/dotnet/winforms/issues/6663","RelatedDescription":"Open issue \"6.0.2 SDK update has broken WinForms apps\" (#6663)"},{"Id":"1128580971","IsPullRequest":false,"CreatedAt":"2022-02-09T14:01:29","Actor":"vladimir-krestov","Number":"6661","RawContent":null,"Title":"[TextPattern] Getting incorrect rectangles for multiline TextBox","State":"open","Body":"* .NET Core Version: 7.0\r\n\r\n* Have you experienced this same bug with .NET Framework?: Yes\r\n\r\n**Problem description:**\r\n- TextPattern doesn't show empty lines (RTL and LTR modes):\r\n![image](https://user-images.githubusercontent.com/49272759/153213987-35181cfd-0e9b-4f67-9a1f-28979c8ec30a.png)\r\nIt's important, when the caret is in the empty line, Narrator announces it incorrectly:\r\n![qzQ3n0qO2M](https://user-images.githubusercontent.com/49272759/153216185-f0a34a3b-deec-4070-b191-1ca79fe7a517.gif)\r\n\r\n\r\n- In RTL mode some text ranges are not shown:\r\n![image](https://user-images.githubusercontent.com/49272759/153213632-94c515de-91bb-45f1-a088-683b8a070c2f.png)\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n\r\n**Expected behavior:**\r\n- UIA shows all text ranges correctly:\r\n![image](https://user-images.githubusercontent.com/49272759/153214778-2721c068-815c-408c-b0b7-e5e9b5239dfa.png)\r\n<!--\r\n    Provide details on expected behavior with screenshots/GIF, where ever possible.\r\n -->\r\n\r\n**Minimal repro:**\r\n- Create a .NET 7.0 app\r\n- Add a multiline TextBox to the app\r\n- Run the app and use Narrator and Inspect to check this\r\n","Url":"https://github.com/dotnet/winforms/issues/6661","RelatedDescription":"Open issue \"[TextPattern] Getting incorrect rectangles for multiline TextBox\" (#6661)"},{"Id":"1128527229","IsPullRequest":true,"CreatedAt":"2022-02-09T13:43:38","Actor":"dotnet-maestro[bot]","Number":"6660","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20220208.17\r\n- **Date Produced**: February 9, 2022 8:05:28 AM UTC\r\n- **Commit**: c4c1c3aac7c42494791aaa5b791ae3641dc2561a\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-preview.2.22107.26 to 7.0.0-preview.2.22108.17][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-preview.2.22107.26 to 7.0.0-preview.2.22108.17][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-preview.2.22107.26 to 7.0.0-preview.2.22108.17][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.2.22107.26 to 7.0.0-preview.2.22108.17][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-preview.2.22107.26 to 7.0.0-preview.2.22108.17][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.2.22107.26 to 7.0.0-preview.2.22108.17][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.2.22107.26 to 7.0.0-preview.2.22108.17][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-preview.2.22107.26 to 7.0.0-preview.2.22108.17][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.2.22107.26 to 7.0.0-preview.2.22108.17][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.2.22107.26 to 7.0.0-preview.2.22108.17][1]\r\n  - **System.CodeDom**: [from 7.0.0-preview.2.22107.26 to 7.0.0-preview.2.22108.17][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.2.22107.26 to 7.0.0-preview.2.22108.17][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.2.22107.26 to 7.0.0-preview.2.22108.17][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.2.22107.26 to 7.0.0-preview.2.22108.17][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-preview.2.22107.26 to 7.0.0-preview.2.22108.17][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.2.22107.26 to 7.0.0-preview.2.22108.17][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.2.22107.26 to 7.0.0-preview.2.22108.17][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.2.22107.26 to 7.0.0-preview.2.22108.17][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.2.22107.26 to 7.0.0-preview.2.22108.17][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-preview.2.22107.26 to 7.0.0-preview.2.22108.17][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-preview.2.22107.26 to 7.0.0-preview.2.22108.17][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.2.22107.26 to 7.0.0-preview.2.22108.17][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.2.22107.26 to 7.0.0-preview.2.22108.17][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-preview.2.22107.26 to 7.0.0-preview.2.22108.17][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.2.22107.26 to 7.0.0-preview.2.22108.17][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.2.22107.26 to 7.0.0-preview.2.22108.17][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-preview.2.22107.26 to 7.0.0-preview.2.22108.17][1]\r\n  - **System.Text.Json**: [from 7.0.0-preview.2.22107.26 to 7.0.0-preview.2.22108.17][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-preview.2.22107.26 to 7.0.0-preview.2.22108.17][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.2.22107.26 to 7.0.0-preview.2.22108.17][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/af42c8e...c4c1c3a\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6660)","Url":"https://github.com/dotnet/winforms/pull/6660","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6660)"},{"Id":"1128526391","IsPullRequest":true,"CreatedAt":"2022-02-09T13:42:47","Actor":"dotnet-maestro[bot]","Number":"6659","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\r\n- **Build**: 20220208.1\r\n- **Date Produced**: February 8, 2022 1:04:46 PM UTC\r\n- **Commit**: dda61e4601d38b5d9d972f0541ff652ba5a16ad6\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 7.0.0-beta.22103.1 to 7.0.0-beta.22108.1][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22103.1 to 7.0.0-beta.22108.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.22103.1 to 7.0.0-beta.22108.1][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 7.0.0-beta.22103.1 to 7.0.0-beta.22108.1][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 7.0.0-beta.22103.1 to 7.0.0-beta.22108.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22103.1 to 7.0.0-beta.22108.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/70831f0...dda61e4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6659)","Url":"https://github.com/dotnet/winforms/pull/6659","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6659)"},{"Id":"1128509171","IsPullRequest":true,"CreatedAt":"2022-02-09T12:57:18","Actor":"vladimir-krestov","Number":"6658","RawContent":null,"Title":"Reworking conditional `Skip` attributes","State":"open","Body":"Fixes #6653\r\n\r\n## Proposed changes\r\n\r\n- Reworked the conditional attributes to have an ability to skip tests in several architectures\r\n\r\n## Customer Impact\r\n\r\n- No\r\n\r\n## Regression? \r\n\r\n- No\r\n\r\n## Risk\r\n\r\n- Minimal\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6658)","Url":"https://github.com/dotnet/winforms/pull/6658","RelatedDescription":"Open PR \"Reworking conditional `Skip` attributes\" (#6658)"},{"Id":"1128290346","IsPullRequest":false,"CreatedAt":"2022-02-09T09:42:26","Actor":"VinoWang01","Number":"6657","RawContent":null,"Title":"[Accessibility][Win11] The color contrast of the dataGridViewCheckBox cell is less than 3:1","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n.NET Core Version: \r\n* .NET SDK 7.0.100-preview.2.22108.9\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\nHave you experienced this same bug with .NET Framework?: \r\n\r\n- Yes\r\n\r\n<!-- Yes / No -->\r\n\r\n**More Info:**\r\n1.\tThis issue can’t reproduce on Windows 10 OS.\r\n2.\tThis issue can reproduce on Windows 11 OS both for Winforms NetFX and Core projects(can reproduce with 3.1, 5.0, 6.0, 7.0).\r\n\r\n**Problem description:**\r\nThe color contrast less than 3:1 between background color of checkbox and background color of whole cell.\r\nFor Win11:\r\n![image](https://user-images.githubusercontent.com/90816462/153167561-1821bee5-225b-45f9-b6aa-b4d276c29d93.png)\r\n\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n\r\n**Expected behavior:**\r\nThe color contrast should be greater than 3:1 between background color of checkbox and background color of whole cell.\r\nFor Win10:\r\n![image](https://user-images.githubusercontent.com/90816462/153167703-49609c05-49e3-4643-9d7e-a619c0720e6f.png)\r\n\r\n<!--\r\n    Provide details on expected behavior with screenshots/GIF, where ever possible.\r\n -->\r\n\r\n**Minimal repro:**\r\n1.\tCreate a .NET Core Winforms application with DataGridView control added.\r\n2.\tAdd a DataGridViewTextBoxColumn to it.\r\n3.\tBuild and run the project.\r\n4.\tCheck the checkbox, then launch Accessibility Insights for windows tool and observe the color contrast.\r\nOr download the attached project, then execute above step 4.\r\n[CheckBoxCellColorContrast.zip](https://github.com/dotnet/winforms/files/8031403/CheckBoxCellColorContrast.zip)\r\n\r\n<!--\r\n    Provide step by step guide to repro this issue.  Incase repro steps are complex, It would be helpful if \r\n    you attach a GIF with repro actions. Attaching a sample app to repro the issue will help speed up the \r\n    resolution. \r\n -->\r\n","Url":"https://github.com/dotnet/winforms/issues/6657","RelatedDescription":"Open issue \"[Accessibility][Win11] The color contrast of the dataGridViewCheckBox cell is less than 3:1\" (#6657)"},{"Id":"1128264757","IsPullRequest":false,"CreatedAt":"2022-02-09T09:19:24","Actor":"MelonWang1","Number":"6656","RawContent":null,"Title":"[Accessibility] Narrator: It cannot announce Expanded state for such properties which drop-down control is RichEdit control after expanded them","State":"open","Body":"<!-- Read https://github.com/dotnet/winforms/blob/main/docs/issue-guide.md -->\r\n\r\n **.NET Core Version:** \r\n\r\n* Main: 7.0.100-preview.2.22108.9\r\n* Release: 7.0.100-preview.1.22108.11\r\n\r\n**Have you experienced this same bug with .NET Framework?** \r\n\r\nYes\r\n\r\n**Problem description:**\r\n\r\nNarrator doesn't announce the expanded state when pressing F4 or 'Alt + down' for such properties which drop-down control is RichEdit control after expanded them. In this case, now Narrator focus in the drop-down list: RichEdit instead of this entire property: 'Text' as following screenshot:\r\n![bug](https://user-images.githubusercontent.com/94418985/153158605-ffc7feb9-e1d8-40c0-a3e5-6724fad37a63.png)\r\n\r\nAnd check the related properties in Inspect, the ExpandCollapse.ExpandCollapseState exists and displays Expand state --- It's correct.\r\n![in](https://user-images.githubusercontent.com/94418985/153163906-25687138-3abc-419f-99f5-819a181bd0bb.png)\r\n\r\n**Expected behavior:**\r\n\r\nNarrator should announce the expanded state.\r\n\r\n**Minimal repro:**\r\n\r\n1. Create a winforms core app with PropertyGrid and Button control\r\n2. Associate the Button with PropertyGrid as a selected object\r\n3. Build and run the core project\r\n4. Start Narrator tool\r\n5. Press F4 to open the RichEdit control of Text property\r\n\r\n**More info:**\r\n\r\n1. This issue cannot repro from 7.0.100-alpha.1.21566.20 to 7.0.100-alpha.1.21568.2.\r\n2. This has been fixed and added [comment](https://github.com/dotnet/winforms/issues/3672#issuecomment-953431994) in [#3672](https://github.com/dotnet/winforms/issues/3672).","Url":"https://github.com/dotnet/winforms/issues/6656","RelatedDescription":"Open issue \"[Accessibility] Narrator: It cannot announce Expanded state for such properties which drop-down control is RichEdit control after expanded them\" (#6656)"},{"Id":"1128177069","IsPullRequest":false,"CreatedAt":"2022-02-09T07:58:15","Actor":"vladimir-krestov","Number":"6654","RawContent":null,"Title":"TabPage_IsHoveredWithMouse_IsFalse_WhenMouseIs_OutsideMainScreen is flaky in x86 CI build","State":"open","Body":"\r\n* .NET Core Version: 7.0\r\n<!-- e.g. 3.0 Preview1, or daily build number, use `dotnet --info` -->\r\n\r\n* Have you experienced this same bug with .NET Framework?: No\r\n<!-- Yes / No -->\r\n\r\n**Problem description:**\r\n- `TabPage_IsHoveredWithMouse_IsFalse_WhenMouseIs_OutsideMainScreen` unit test fails sometime in x86 release CI build for successful PRs, that blocking deployment of fixes into sdk. [System.Windows.Forms.Maui.IntegrationTests_net6.0_x86.log](https://dev.azure.com/dnceng/public/_build/results?buildId=1599672&view=artifacts&pathAsName=false&type=publishedArtifacts)\r\n\r\n**Stack trace:**\r\n```\r\nSystem.Windows.Forms.Maui.IntegrationTests.WinformsMauiTabControlTests.MauiTabControlTests(scenarioName: \"TabPage_IsHoveredWithMouse_IsFalse_WhenMouseIs_Out\"...) [FAIL]\r\n      Assert.Equal() Failure\r\n                (pos 0)\r\n      Expected: Pass\r\n      Actual:   Fail\r\n                (pos 0)\r\n      Stack Trace:\r\n           at System.Windows.Forms.Maui.IntegrationTests.MauiTestHelper.ValidateScenarioPassed(String projectName, String scenarioName, ITestOutputHelper output)\r\n        /_/src/System.Windows.Forms/tests/IntegrationTests/System.Windows.Forms.Maui.IntegrationTests/WinformsMauiTabControlTests.cs(34,0): at System.Windows.Forms.Maui.IntegrationTests.WinformsMauiTabControlTests.MauiTabControlTests(String scenarioName)\r\n```\r\n<!--\r\n    Describe the current behavior, what is wrong or not working as expected.\r\n    Provide as much information as possible, including callstack for crashes/exceptions, screenshots or animations.\r\n  -->\r\n\r\n\r\n**Expected behavior:**\r\n- All correct tests pass every time.\r\n<!--\r\n    Provide details on expected behavior with screenshots/GIF, where ever possible.\r\n -->\r\n\r\n**Minimal repro:**\r\n- Run unit tests on x86 environment (or create a PR with changes, CI build will do it)\r\n<!--\r\n    Provide step by step guide to repro this issue.  Incase repro steps are complex, It would be helpful if \r\n    you attach a GIF with repro actions. Attaching a sample app to repro the issue will help speed up the \r\n    resolution. \r\n -->\r\n","Url":"https://github.com/dotnet/winforms/issues/6654","RelatedDescription":"Open issue \"TabPage_IsHoveredWithMouse_IsFalse_WhenMouseIs_OutsideMainScreen is flaky in x86 CI build\" (#6654)"},{"Id":"1128130526","IsPullRequest":false,"CreatedAt":"2022-02-09T07:03:52","Actor":"vladimir-krestov","Number":"6653","RawContent":null,"Title":"Needs to add tests attributes with conditional skipping for UI tests ","State":"open","Body":"* .NET Core Version: 7.0\r\n\r\n**Problem description:**\r\n- Needs to add the ability to skip some tests in a specific architecture for UI tests and MAUI tests like we did it for unit tests (see [#6599](https://github.com/dotnet/winforms/pull/6599)). We can't use the attributes from unit tests utilities, because UI tests doesn't have a reference to them.\r\nBased on this [comment](https://github.com/dotnet/winforms/pull/6599#issuecomment-1031969657)\r\n\r\n**Solutions:**\r\n- Copy-paste `ConditionalWinFormsFactAttribute` and `ConditionalWinFormsTheoryAttribute`\r\n- Or add the dependency to UI tests project\r\n\r\n**Will this feature affect UI controls?** No\r\n","Url":"https://github.com/dotnet/winforms/issues/6653","RelatedDescription":"Open issue \"Needs to add tests attributes with conditional skipping for UI tests \" (#6653)"},{"Id":"1128117224","IsPullRequest":false,"CreatedAt":"2022-02-09T06:44:00","Actor":"Olina-Zhang","Number":"6652","RawContent":null,"Title":"[Accessibility] Inspect: Cannot find toolStripScrollButtons in hierarchy of toolStripDropDown menu","State":"open","Body":"* .NET Core Version: \r\n7.0.100-preview.2.22103.2\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**Repro steps:**\r\n1. Create a Winforms .Net Core application\r\n2. Add a toolStrip on the form designer\r\n3. Add a toolStripDropDownButton on the toolStrip\r\n4. Add several drop down items under toolStripDropDownButton\r\n5. In form1.cs code file, add 1 line code to define the height of the this.toolStripDropDownButton1.DropDown.MaximumSize property in order to show toolStripScrollButton in the dropdown menu\r\n\r\nOr using attached app:\r\n[WinFormsApp94.zip](https://github.com/dotnet/winforms/files/8030101/WinFormsApp94.zip)\r\n\r\n6. Build and run app, then using Inspect detects these toolStripScrollButtons in the toolStripDropDownButton dropdown menu\r\n\r\n**Actual behavior:**\r\nIn inspect, cannot find toolStripScrollButtons in hierarchy of toolStripDropDown menu, and In Narrator, it cannot focus on toolStripScrollButtons to announce.\r\n![image](https://user-images.githubusercontent.com/26474449/153136119-f266d560-54d6-4cdf-bfda-7d81f4ddf66c.png)\r\n\r\n\r\n**Expected behavior:**\r\nIn inspect, toolStripScrollButtons are in hierarchy of toolStripDropDown menu, and Narrator can focus on them to announce.\r\n","Url":"https://github.com/dotnet/winforms/issues/6652","RelatedDescription":"Open issue \"[Accessibility] Inspect: Cannot find toolStripScrollButtons in hierarchy of toolStripDropDown menu\" (#6652)"},{"Id":"1127831916","IsPullRequest":true,"CreatedAt":"2022-02-09T06:24:30","Actor":"RussKie","Number":"6647","RawContent":null,"Title":"proof of concept for running unit tests through helix","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nFixes #\r\n\r\n\r\n## Proposed changes\r\n\r\n- \r\n- \r\n- \r\n\r\n<!-- We are in TELL-MODE the following section must be completed -->\r\n\r\n## Customer Impact\r\n\r\n- \r\n- \r\n\r\n## Regression? \r\n\r\n- Yes / No\r\n\r\n## Risk\r\n\r\n-\r\n\r\n<!-- end TELL-MODE -->\r\n\r\n\r\n## Screenshots <!-- Remove this section if PR does not change UI -->\r\n\r\n### Before\r\n\r\n<!-- TODO -->\r\n\r\n### After\r\n\r\n<!-- TODO -->\r\n\r\n\r\n## Test methodology <!-- How did you ensure quality? -->\r\n\r\n- \r\n- \r\n- \r\n\r\n## Accessibility testing  <!-- Remove this section if PR does not change UI -->\r\n\r\n<!--\r\n     Microsoft prioritizes making our products accessible. \r\n     WinForms has a key role in allowing developers to create accessible apps. \r\n     \r\n     When submitting a change which impacts UI in any way, including adding new UI or\r\n     modifying existing controls the developer needs to run the Accessibility Insights\r\n     tool (https://accessibilityinsights.io/) and verify that there are no changes or\r\n     regressions. \r\n     \r\n     The developer should run the Fast Pass over the impacted control(s) and provide\r\n     a snapshot of the passing results along with before/after snapshots of the UI.\r\n     More info: (https://accessibilityinsights.io/docs/en/web/getstarted/fastpass)\r\n  -->\r\n\r\n\r\n \r\n\r\n## Test environment(s) <!-- Remove any that don't apply -->\r\n\r\n- <!-- use `dotnet --info` -->\r\n\r\n\r\n<!-- Mention language, UI scaling, or anything else that might be relevant -->\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6647)","Url":"https://github.com/dotnet/winforms/pull/6647","RelatedDescription":"Closed or merged PR \"proof of concept for running unit tests through helix\" (#6647)"},{"Id":"1128035929","IsPullRequest":true,"CreatedAt":"2022-02-09T04:23:37","Actor":"RussKie","Number":"6651","RawContent":null,"Title":"Migrate to Helix infra","State":"open","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6651)","Url":"https://github.com/dotnet/winforms/pull/6651","RelatedDescription":"Open PR \"Migrate to Helix infra\" (#6651)"},{"Id":"1128002926","IsPullRequest":false,"CreatedAt":"2022-02-09T03:21:55","Actor":"Olina-Zhang","Number":"6650","RawContent":null,"Title":"The ToolStripScrollDownButton should be disabled when displaying and focused on the last dropdown item in order to avoid an exception popping up","State":"open","Body":"* .NET Core Version: \r\n7.0.100-preview.2.22103.2\r\n\r\n* Have you experienced this same bug with .NET Framework?: \r\nYes\r\n\r\n**Repro steps:**\r\n1. Create a Winforms .Net Core application\r\n2. Add a toolStrip on the form designer\r\n3. Add a toolStripDropDownButton on the toolStrip\r\n4. Add several drop down items under toolStripDropDownButton\r\n5. In the Form.Designer.cs file, edit height of the this.toolStripDropDownButton1.DropDown.MaximumSize property in order to just display one or a part of one drop down item\r\n\r\nOr using attached app:\r\n[WinFormsApp91.zip](https://github.com/dotnet/winforms/files/8029086/WinFormsApp91.zip)\r\n\r\n6. Build and run app, then click ToolStripScrollDownButton to display the last dropdown item\r\n\r\n**Actual behavior:**\r\nThe ToolStripScrollDownButton is still enabled when displaying the last dropdown item, and in this case, an exception pops up when clicking that ToolStripScrollDownButton again\r\n![image](https://user-images.githubusercontent.com/26474449/153115438-608e4b8d-8a17-4e53-bbc8-1d1adab7b603.png)\r\n\r\n![DropDown_MaximumSize](https://user-images.githubusercontent.com/26474449/153114981-2edada1d-602d-4f10-8f07-6e8f09457173.gif)\r\n\r\n**Expected behavior:**\r\nWhen go through the last dropdown item, the ToolStripScrollDownButton is disabled\r\n![image](https://user-images.githubusercontent.com/26474449/153133080-cb2d7226-3883-4e99-a021-442f4a06aa1c.png)\r\n\r\n","Url":"https://github.com/dotnet/winforms/issues/6650","RelatedDescription":"Open issue \"The ToolStripScrollDownButton should be disabled when displaying and focused on the last dropdown item in order to avoid an exception popping up\" (#6650)"},{"Id":"1127953015","IsPullRequest":true,"CreatedAt":"2022-02-09T02:52:31","Actor":"stephentoub","Number":"6649","RawContent":null,"Title":"Delete unnecessary Regex.IsMatch usage","State":"closed","Body":"Addresses PR feedback at https://github.com/dotnet/winforms/pull/6643#pullrequestreview-876645648\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6649)","Url":"https://github.com/dotnet/winforms/pull/6649","RelatedDescription":"Closed or merged PR \"Delete unnecessary Regex.IsMatch usage\" (#6649)"},{"Id":"1127413597","IsPullRequest":true,"CreatedAt":"2022-02-08T22:31:18","Actor":"stephentoub","Number":"6643","RawContent":null,"Title":"Use RegexGenerator in WinForms","State":"closed","Body":"The regex source generator is new in .NET 7.  It does all the parsing and compilation of the regex that would have been done at run-time instead at compile time, improving startup and enabling additional optimizations that wouldn't otherwise be performed.  This updates the regexes used in winforms to use the generator.\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6643)","Url":"https://github.com/dotnet/winforms/pull/6643","RelatedDescription":"Closed or merged PR \"Use RegexGenerator in WinForms\" (#6643)"},{"Id":"1127607665","IsPullRequest":true,"CreatedAt":"2022-02-08T22:29:21","Actor":"vseanreesermsft","Number":"6644","RawContent":null,"Title":"Merging internal commits for release/6.0","State":"closed","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6644)","Url":"https://github.com/dotnet/winforms/pull/6644","RelatedDescription":"Closed or merged PR \"Merging internal commits for release/6.0\" (#6644)"},{"Id":"1127692734","IsPullRequest":false,"CreatedAt":"2022-02-08T19:51:37","Actor":"Tanya-Solyanik","Number":"6646","RawContent":null,"Title":"Add ETW events that would measure application start up time.","State":"open","Body":"This is a request from the runtime team, aligned with their Arm64 effort. Related to https://github.com/dotnet/runtime/issues/64993\r\n\r\nAs an example, here’s a pointer to how the perf lab does this.  All of the start-up tests emit an event when they have completed start-up: [https://github.com/dotnet/performance/blob/23b05253055e3c5253bf4a1c8d4d767f33c2b77b/src/tools/ScenarioMeasurement/Startup/GenericStartupParser.cs#L8](https://nam06.safelinks.protection.outlook.com/?url=https%3A%2F%2Fgithub.com%2Fdotnet%2Fperformance%2Fblob%2F23b05253055e3c5253bf4a1c8d4d767f33c2b77b%2Fsrc%2Ftools%2FScenarioMeasurement%2FStartup%2FGenericStartupParser.cs%23L8&data=04%7C01%7CTatiana.Solyanik%40microsoft.com%7Cc3e0644499224ac8f73c08d9eb2a047e%7C72f988bf86f141af91ab2d7cd011db47%7C1%7C0%7C637799387966396924%7CUnknown%7CTWFpbGZsb3d8eyJWIjoiMC4wLjAwMDAiLCJQIjoiV2luMzIiLCJBTiI6Ik1haWwiLCJXVCI6Mn0%3D%7C3000&sdata=pLz5axwT4EfpYxtAjsYiGIBarg43zoIXzRrvXOx3mdM%3D&reserved=0)","Url":"https://github.com/dotnet/winforms/issues/6646","RelatedDescription":"Open issue \"Add ETW events that would measure application start up time.\" (#6646)"},{"Id":"1127610049","IsPullRequest":true,"CreatedAt":"2022-02-08T18:23:51","Actor":"vseanreesermsft","Number":"6645","RawContent":null,"Title":"Merging internal commits for release/5.0","State":"open","Body":"null\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6645)","Url":"https://github.com/dotnet/winforms/pull/6645","RelatedDescription":"Open PR \"Merging internal commits for release/5.0\" (#6645)"},{"Id":"1127381843","IsPullRequest":true,"CreatedAt":"2022-02-08T18:07:49","Actor":"dotnet-maestro[bot]","Number":"6642","RawContent":null,"Title":"[release/6.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:84f431dc-3375-4a46-af87-08d961c59698)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 84f431dc-3375-4a46-af87-08d961c59698\r\n- **Build**: 20220207.2\r\n- **Date Produced**: February 7, 2022 11:24:16 PM UTC\r\n- **Commit**: fe5cc1841d12196d94a4ae3b276cb92d8d7ca73d\r\n- **Branch**: refs/heads/release/6.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.CMake.Sdk**: [from 6.0.0-beta.22102.3 to 6.0.0-beta.22107.2][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 6.0.0-beta.22102.3 to 6.0.0-beta.22107.2][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 6.0.0-beta.22102.3 to 6.0.0-beta.22107.2][1]\r\n  - **Microsoft.DotNet.GenFacades**: [from 6.0.0-beta.22102.3 to 6.0.0-beta.22107.2][1]\r\n  - **Microsoft.DotNet.RemoteExecutor**: [from 6.0.0-beta.22102.3 to 6.0.0-beta.22107.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 6.0.0-beta.22102.3 to 6.0.0-beta.22107.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/93e08e3...fe5cc18\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:84f431dc-3375-4a46-af87-08d961c59698)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6642)","Url":"https://github.com/dotnet/winforms/pull/6642","RelatedDescription":"Closed or merged PR \"[release/6.0] Update dependencies from dotnet/arcade\" (#6642)"},{"Id":"1127378107","IsPullRequest":true,"CreatedAt":"2022-02-08T15:06:00","Actor":"ArtemTatarinov","Number":"6641","RawContent":null,"Title":"Refactoring AutomationId at the accessible object classes","State":"open","Body":"Fixes #6603\r\n\r\n## Proposed changes\r\n- This PR is created from the branch of the base PR #6640 (which is also branched from another not merged PR) to avoid merge conflicts and isolate the changes. When PR #6640 will be reviewed, tested, and merged, this PR should be rebased on the main branch before merging.\r\n- The `AutomationId` property is moved to the `AccessibleObject` base class\r\n- This property returns `null` at `AccessibleObject`\r\n- It is returned at the `GetPropertyValue` method of `AccessibleObject` for the case `AutomationIdPropertyId`\r\n- The current implementations in the 4 classes derived from AO are kept the same way, but they are marked as overrides\r\n- Returning of the `Owner.Name` is moved to the `ControlAccessibleObjectObject` class to make it universal for all its descendants\r\n- All duplicate code with the same logic is cleaned out in the derived classes\r\n- No unit tests are added yet, but they will be after discussion these changes\r\n- Only the last commit is relevant to this PR, others are from the base PR branches.\r\n\r\n## Customer Impact\r\n- Tests based on the old implementation of AutomationId could become obsolete\r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test methodology\r\n- Unit tests\r\n- CTI testing\r\n\r\n## Test environment(s)\r\n.NET SDK 7.0.0-preview-2.22103.2\r\nMicrosoft Windows [Version 10.0.19043.1466]\r\n\r\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6641)","Url":"https://github.com/dotnet/winforms/pull/6641","RelatedDescription":"Open PR \"Refactoring AutomationId at the accessible object classes\" (#6641)"},{"Id":"1127233968","IsPullRequest":true,"CreatedAt":"2022-02-08T13:43:17","Actor":"dotnet-maestro[bot]","Number":"6639","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n## From https://github.com/dotnet/runtime\r\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\r\n- **Build**: 20220207.26\r\n- **Date Produced**: February 8, 2022 10:19:26 AM UTC\r\n- **Commit**: af42c8ee4e1f0e420605f928cded476520296ced\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.Windows.Compatibility**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **Microsoft.Win32.SystemEvents**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **Microsoft.Win32.Registry.AccessControl**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **Microsoft.NETCore.Platforms**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **Microsoft.NETCore.ILDAsm**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.Diagnostics.PerformanceCounter**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.Diagnostics.EventLog**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.Configuration.ConfigurationManager**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.CodeDom**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.DirectoryServices**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.Drawing.Common**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.Security.Cryptography.Pkcs**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.Resources.Extensions**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.Reflection.MetadataLoadContext**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.IO.Packaging**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **Microsoft.NET.Sdk.IL**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **Microsoft.NETCore.App.Ref**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.Security.Cryptography.Xml**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.Security.Cryptography.ProtectedData**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.Security.Permissions**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.Windows.Extensions**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.Threading.AccessControl**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.Text.Json**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **System.Text.Encodings.Web**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.7.0**: [from 7.0.0-preview.2.22103.2 to 7.0.0-preview.2.22107.26][1]\r\n\r\n[1]: https://github.com/dotnet/runtime/compare/0ae04e5...af42c8e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\r\n\r\n\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6639)","Url":"https://github.com/dotnet/winforms/pull/6639","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#6639)"},{"Id":"1127260750","IsPullRequest":true,"CreatedAt":"2022-02-08T13:30:01","Actor":"ArtemTatarinov","Number":"6640","RawContent":null,"Title":"Moving 3 properties at `GetPropertyValue` method to the base `AccessibleObject` class","State":"open","Body":"Fixes #6582\r\n\r\n## Proposed changes\r\n- This PR is created from the branch of the base PR #6429 to avoid merge conflicts and isolate the changes. When PR #6429 will be reviewed, tested, and merged, this PR should be rebased on the main branch before merging.\r\n- `IsPasswordPropertyId`, `FrameworkIdPropertyId` and `AccessKeyPropertyId` are refactored by moving to the base `AccessibleObject` class\r\n- `AccessKeyPropertyId` is returning an empty string now if `KeyboardShortcut` is null, I guess that's a suitable change of behavior because it allows us to clean a lot of places in the code where an empty string is returned, also the `GetPropertyValue` method is an `internal` method anyway, and UIA tools like Inspect and Accessibility Insights treat `null` and `string.Empty` the same way.\r\n\r\n## Customer Impact\r\n- None\r\n\r\n## Regression? \r\n- No\r\n\r\n## Risk\r\n- Minimal\r\n\r\n## Test methodology\r\n- Unit tests\r\n- CTI testing\r\n\r\n## Test environment(s)\r\n.NET SDK 7.0.0-preview-2.22103.2\r\nMicrosoft Windows [Version 10.0.19043.1466]\n\n###### Microsoft Reviewers: [Open in CodeFlow](https://portal.fabricbot.ms/api/codeflow?pullrequest=https://github.com/dotnet/winforms/pull/6640)","Url":"https://github.com/dotnet/winforms/pull/6640","RelatedDescription":"Open PR \"Moving 3 properties at `GetPropertyValue` method to the base `AccessibleObject` class\" (#6640)"},{"Id":"1127151766","IsPullRequest":true,"CreatedAt":"2022-02-08T11:49:03","Actor":"YuliiaKovalova","Number":"6638","RawContent":null,"Title":"test install-scripts","State":"open","Body":"","Url":"https://github.com/dotnet/winforms/pull/6638","RelatedDescription":"Open PR \"test install-scripts\" (#6638)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-02-10T03:30:32.54488Z","RunDurationInMilliseconds":544}