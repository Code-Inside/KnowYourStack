{"Data":{"GitHub":{"Issues":[{"Id":"2973510487","IsPullRequest":true,"CreatedAt":"2025-04-04T22:50:37","Actor":"Tanya-Solyanik","Number":"13238","RawContent":null,"Title":"removed unreferenced config file","State":"open","Body":"test pipeline passed\r\nhttps://dnceng.visualstudio.com/internal/_build/results?buildId=2662835&view=results\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13238)","Url":"https://github.com/dotnet/winforms/pull/13238","RelatedDescription":"Open PR \"removed unreferenced config file\" (#13238)"},{"Id":"2971278839","IsPullRequest":true,"CreatedAt":"2025-04-04T21:53:48","Actor":"dotnet-maestro[bot]","Number":"13236","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\n## From https://github.com/dotnet/arcade\n- **Subscription**: [b9a1a4bb-2302-4987-3b3d-08d8b8050dda](https://maestro.dot.net/subscriptions?search=b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\n- **Build**: [20250403.1](https://dev.azure.com/dnceng/internal/_build/results?buildId=2678399)\n- **Date Produced**: April 3, 2025 9:17:23 AM UTC\n- **Commit**: [63c161539bde4a68f27bc66598137da578331d85](https://github.com/dotnet/arcade/commit/63c161539bde4a68f27bc66598137da578331d85)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25202.1 to 10.0.0-beta.25203.1][1]\n  - **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25202.1 to 10.0.0-beta.25203.1][1]\n  - **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25202.1 to 10.0.0-beta.25203.1][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25202.1 to 10.0.0-beta.25203.1][1]\n  - **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25202.1 to 10.0.0-beta.25203.1][1]\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25202.1 to 10.0.0-beta.25203.1][1]\n\n[1]: https://github.com/dotnet/arcade/compare/3fddad170a...63c161539b\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13236)","Url":"https://github.com/dotnet/winforms/pull/13236","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#13236)"},{"Id":"2973063276","IsPullRequest":false,"CreatedAt":"2025-04-04T18:05:41","Actor":"KlausLoeffelmann","Number":"13237","RawContent":null,"Title":"WFO2001: Analyzer doesn't trigger the 'wrong async overload' warning with implicit member access.","State":"open","Body":"There are 2 ways to use `InvokeAsync` - from the outside, which always needs explicit member access, and from the inside, which can be using explicit member access (`this` or `Me` in VB), but usually, we do not do it and use it implicitly. Inside most Microsoft repos, _.editorconfig_ is even configures to make the explicit usage where implicit is possible an error (see code sample below).\n\nFor the implicit member access, the WFO2001 Analyzer is not being triggered.\n\n```CSharp\n// Example 1: Explicit member access (control.InvokeAsync)\nprivate async void UpdateButtonFromBackgroundThread()\n{\n    var result = await Task.Run(() => PerformLongRunningOperation())\n                           .ConfigureAwait(false);\n    \n    // Explicit access is necessary - we need to define the instance.\n>>> await button1.InvokeAsync(() => {\n        button1.Text = result;\n        button1.Enabled = true;\n    });\n}\n\n// Example 2: Implicit use from within a Form\nprivate async void MyForm_Load(object sender, EventArgs e)\n{\n    var data = await Task.Run(() => FetchDataFromDatabase())\n                        .ConfigureAwait(false);\n    \n    // .editorconfig is often configured to have including this/me causing an error.\n    // We have to InvokeAsync often as implicit member access.\n>>> await [this.]InvokeAsync(() => {\n        dataGridView1.DataSource = data;\n        statusLabel.Text = \"Data loaded successfully\";\n    });\n}\n```\n\n","Url":"https://github.com/dotnet/winforms/issues/13237","RelatedDescription":"Open issue \"WFO2001: Analyzer doesn't trigger the 'wrong async overload' warning with implicit member access.\" (#13237)"},{"Id":"2971278678","IsPullRequest":true,"CreatedAt":"2025-04-04T05:38:57","Actor":"dotnet-maestro[bot]","Number":"13235","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\n## From https://github.com/dotnet/runtime\n- **Subscription**: [d9f5b309-084f-43b5-02de-08d8b80548e4](https://maestro.dot.net/subscriptions?search=d9f5b309-084f-43b5-02de-08d8b80548e4)\n- **Build**: [20250403.14](https://dev.azure.com/dnceng/internal/_build/results?buildId=2678961)\n- **Date Produced**: April 4, 2025 3:18:46 AM UTC\n- **Commit**: [720f517d064d394d6862d9e121ef4664ffaca040](https://github.com/dotnet/runtime/commit/720f517d064d394d6862d9e121ef4664ffaca040)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.CodeDom**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.ComponentModel.Composition**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Data.Odbc**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Data.OleDb**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Diagnostics.EventLog**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.DirectoryServices**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Formats.Nrbf**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.IO.Hashing**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.IO.Packaging**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.IO.Ports**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Management**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Reflection.Context**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Resources.Extensions**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Runtime.Caching**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Security.Permissions**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.ServiceModel.Syndication**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Speech**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Text.Encodings.Web**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Text.Json**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Threading.AccessControl**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **System.Windows.Extensions**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-preview.4.25202.14 to 10.0.0-preview.4.25203.14][1]\n\n[1]: https://github.com/dotnet/runtime/compare/970070e3b7...720f517d06\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13235)","Url":"https://github.com/dotnet/winforms/pull/13235","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#13235)"},{"Id":"2971094261","IsPullRequest":false,"CreatedAt":"2025-04-04T02:10:55","Actor":"Liv-Goh","Number":"13234","RawContent":null,"Title":"Extra ToolStripContainer Tasks dialog pops up when running the DemoConsole application","State":"open","Body":"### .NET version\n\nBranch **Issue_12830_Multi-Target_DemoConsole** from [Ricardo WinForms Repo](https://github.com/ricardobossan/winforms.git)\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nYes\n\n### Issue description\n\n**Current Behavior (.NET Framework 4.8.1)**\nExtra ToolStripContainer Tasks dialog pops up when running the DemoConsole application \n\nhttps://github.com/user-attachments/assets/e700b96a-c596-48c9-8556-c0f89472615a\n\n**Expected Behavior (.NET 10)**\nNo extra ToolStripContainer Tasks dialog pops up when running the DemoConsole application \n\nhttps://github.com/user-attachments/assets/f8c3c5b8-7c2f-4150-96e2-22f91cf5298b\n\n### Steps to reproduce\n\nTest the sample app: [DemoConsole](src/test/integration/DesignSurface/DemoConsole) in [Ricardo WinForms Repo](https://github.com/ricardobossan/winforms.git) **Issue_12830_Multi-Target_DemoConsole** branch\n\n\n### More Info\nThis bug is created to resolve before https://github.com/dotnet/winforms/pull/12996 is merged","Url":"https://github.com/dotnet/winforms/issues/13234","RelatedDescription":"Open issue \"Extra ToolStripContainer Tasks dialog pops up when running the DemoConsole application\" (#13234)"},{"Id":"2959597058","IsPullRequest":false,"CreatedAt":"2025-04-03T20:37:33","Actor":"AngeloCresta","Number":"13210","RawContent":null,"Title":"PropertyGrid Toolstrip - ToolStripButtons Selected Border Mouse Over","State":"closed","Body":"**.NET Core Version:**\n9.0.201\n\n**Did it work in .NET Framework?**\nYes\n\n**Did it work in any of the earlier releases of .NET Core?**\nNo response\n\n\n**Environment Details:**\nApp name: .NET Core Winforms\nWindow Version: Win 11\nOS Build: 10.0.26100.3624\n\n**More info**\nThe issue is visible when focus a ToolStripButton with mouse (it draws the keyborad focus as well)\nTried to bypass via custom renderer, not working.\n\n**Repro Steps:**\n\n1. Create a form with a PropertyGrid.\n2. Select the main form as \"Selected Object\"\n3. Run the application.\n4. Set focus with the mouse on a non selected ToolStripButton.\n\n**Expected behavior:**\nOnly \"Selected\" border is visible, on mouse over\n\n![Image](https://github.com/user-attachments/assets/fa7a4130-4554-4442-bca2-6eda0e958b96)\n\n**Actual behavior:**\nSelected border and Keyboard focus are visble, on mouse over\n\n![Image](https://github.com/user-attachments/assets/b700ba0f-3f0c-4706-bb5b-b47d04fb9ce1)","Url":"https://github.com/dotnet/winforms/issues/13210","RelatedDescription":"Closed issue \"PropertyGrid Toolstrip - ToolStripButtons Selected Border Mouse Over\" (#13210)"},{"Id":"2968608924","IsPullRequest":false,"CreatedAt":"2025-04-03T18:53:21","Actor":"NagarajManimaran","Number":"13232","RawContent":null,"Title":"CustomToolStrip Not Selectable & Smart Tag not shown in .NET Core Designer","State":"closed","Body":"### Environment\n\nVisual Studio professional 2022 - version 17.13.0\n\n### .NET version\n\n.NetCore 6,7,8\n\n### Did this work in a previous version of Visual Studio and/or previous .NET release?\n\nNo, it doesn't work on previous NetCore versions.\n\n### Issue description\n\n**Description:**\n\nWe encountered an issue when using a CustomToolStrip in a .NET Core WinForms designer.\n\nWhen we drag and drop the CustomToolStrip onto the form, it appears in the designer.\n\nHowever, when we click on the control, it cannot be selected, and the smart tag menu and \"Add Controls\" dropdown do not appear.\n\nThis issue does not occur in .NET Framework, where everything works as expected.\n\n**Implementation Details:**\n\nWe created CustomToolStrip, inheriting from ToolStrip.\n\nWe also implemented CustomToolStripDesigner, which uses reflection to load System.Windows.Forms.Design.ToolStripDesigner.\n\nIn .NET Framework, the reflection mechanism works correctly, allowing the CustomToolStrip to behave the same as the standard ToolStrip (including selection, smart tags, and designer support).\n\nHowever, in .NET Core, the reflection does not seem to work properly, preventing the designer from enabling the expected functionality for CustomToolStrip.\n\n\n**Expected Behavior:**\n\n![Image](https://github.com/user-attachments/assets/387b05a9-8158-4362-bdff-7c612a7b8b56)\n\nCustomToolStrip should be selectable.\n\nThe smart tag menu and \"Add Controls\" dropdown should be visible in the designer.\n\n**Issue in .NET Core:**\n\n![Image](https://github.com/user-attachments/assets/f67aec32-d598-47cd-89bf-e7d9373fe097)\n\nThe CustomToolStrip is not selectable in the designer.\n\nThe smart tag menu and \"Add Controls\" dropdown do not appear.\n\n\n\nCould you please provide a solution or workaround for enabling proper designer support in .NET Core?\n\n[customcontrol.zip](https://github.com/user-attachments/files/19581940/customcontrol.zip)\n\n### Steps to reproduce\n\n**Steps to Reproduce:**\n\nDrag and drop CustomToolStrip onto a WinForms form in a .NET Core project.\n\nTry to select or click on CustomToolStrip in the designer.\n\n\n### Diagnostics\n\n```text\n\n```","Url":"https://github.com/dotnet/winforms/issues/13232","RelatedDescription":"Closed issue \"CustomToolStrip Not Selectable & Smart Tag not shown in .NET Core Designer\" (#13232)"},{"Id":"2970239912","IsPullRequest":false,"CreatedAt":"2025-04-03T17:23:18","Actor":"KlausLoeffelmann","Number":"13233","RawContent":null,"Title":"[API Suggestion] Consider Control/Window Cloaking During Initialization","State":"open","Body":"## TL;DR\n\nImplement a cloaking mechanism for WinForms controls during initialization to eliminate jarring visual flashes, particularly critical for dark mode users and those with photosensitivity. This approach leverages Windows DWM cloaking flags to keep controls hidden until fully themed and ready, significantly improving accessibility compliance and user experience across all applications.\n\n## Rationale\n\nThe current WinForms runtime suffers from momentary visual flashing when controls are created or initialized. This occurs because the Desktop Window Manager (DWM) applies default white rendering before the application can override with themed styling. For users with dark mode enabled or those with photosensitivity conditions, this creates an uncomfortable white flash effect. (I am target-audience here, it REALLY does!!)\n\nThis issue represents both a user-experience-problem and a significant accessibility concern. Visual flashing during UI transitions can trigger adverse reactions in users with photosensitive epilepsy, migraines, or visual processing sensitivities. Modern accessibility standards (WCAG 2.1) explicitly recommend avoiding content that flashes to prevent these issues.\n\nSimilar problems were previously resolved in Windows components like File Explorer and addressed in Chromium-based browsers, demonstrating that this issue is recognized and solvable at the platform level. The WinForms runtime should implement an equivalent solution to ensure consistent visual experiences, especially for dark mode and high-contrast scenarios.\n\n## 30,000-Feet View of the principal Approach\n\nI propose implementing a standardized cloaking mechanism in the WinForms runtime that would:\n\n1. Temporarily make controls/windows invisible during initialization using DWM cloaking flags, either by a global setting which leads to that behavior implicitly, or with a per-instance-approach by changing certain behaviors on control itself.\n2. TBD: Scope of cloaking/duration of cloaking:\n   a) Only Pre-Filling background\n      - Pre-fill the background with the appropriate theme color before rendering begins.\n      - Remove cloak.\n      \n   b) Whole initialization process:\n      - Pre-fill the background with the appropriate theme color before rendering begins.\n      - Complete all initialization, property setting, and child control population.\n      - Remove the cloak only when the control is fully ready to display.\n\n### New APIs on Application\n\nAn additional setting similar to the `SetHighDpiMode` method or the `HighDpiMode` property on Application:\n\n`Application.SetCloakControlsMode(Never|Always|TypeBased|InstanceBased)` with its default as backwards compatible: `Never`.\n\nFor the Options `CloakControlsMode.TypeBased` and `CloakControlsMode.InstanceBased` we would need a global event handler based on Application (rough idea):\n\nThe EventArgs needed:\n\n```csharp\n/// <summary>\n/// Event arguments for cloaking decisions.\n/// </summary>\npublic class CloakEventArgs : EventArgs\n{\n    /// <summary>\n    /// Initializes a new instance of this class.\n    /// </summary>\n    public CloakEventArgs(Type controlType, Control? control = null)\n    {\n        ControlType = controlType;\n        Control = control;\n        ShouldCloak = false; // Default to false\n    }\n\n    /// <summary>\n    ///  The type of control being evaluated for cloaking.\n    /// </summary>\n    public Type ControlType { get; }\n\n    /// <summary>\n    ///  The instance of the control being evaluated for cloaking (if applicable).\n    /// </summary>\n    public Control? Control { get; set; }\n\n    /// <summary>\n    ///  Gets or sets whether the control should be cloaked.\n    ///  Set to true by event handlers to enable cloaking.\n    /// </summary>\n    public bool ShouldCloak { get; set; }\n}\n```\n\nThen, the individual decision for cloaking a type for example, could look something like this:\n\n```csharp\nstatic class Program\n{\n    [STAThread]\n    static void Main()\n    {\n        Application... (Init stuff)\n        \n        // Register cloaking handlers\n        Application.CloakingRequested += OnCloakingRequested;\n        \n        Application.Run(new MainForm());\n    }\n    \n    private static void OnCloakingRequested(object sender, CloakEventArgs e)\n    {\n        // Type-level decisions\n        Type type = e.ControlType;\n        \n        // Check for specific types that should be cloaked\n        if (type == typeof(ToolStrip) || \n            type == typeof(MenuStrip) || \n            type == typeof(StatusStrip))\n        {\n            e.ShouldCloak = true;\n            return;\n        }\n        \n        // Check for types in specific namespaces\n        string ns = type.Namespace ?? \"\";\n        if (ns.StartsWith(\"MyCompany.Controls.Special\"))\n        {\n            e.ShouldCloak = true;\n            return;\n        }\n        \n        // Default is false (already set in the event args)\n    }\n}\n```\n\nBy implementing this enhancement, the .NET WinForms runtime would significantly improve the experience for users of dark mode and those with accessibility needs, bringing it in line with modern UI framework expectations and accessibility standards.\n\nThere are several approaches then for the actual cloaking approach on windows level, which are under investigation and subject for follow-ups and amendments.\n\n## Why not just having a respective `CloakOnInit` property on Control?\n\nSounds way easier right? Just implement it ambient, and we would be done.\nWell, I think the problem is the way, that the WinForms Desiger's CodeDOM serialization has been originally ... designed. Namely, the order in which properties should be set, must not matter, except where it is absolutely necessary in which cases, we'd need to use `ISupportInitialization`. And that does not fly to retro-fit on control AT ALL.\n\n## List of new APIs\n\nTBD.\n","Url":"https://github.com/dotnet/winforms/issues/13233","RelatedDescription":"Open issue \"[API Suggestion] Consider Control/Window Cloaking During Initialization\" (#13233)"},{"Id":"2968340496","IsPullRequest":true,"CreatedAt":"2025-04-03T06:59:13","Actor":"dotnet-maestro[bot]","Number":"13230","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\n## From https://github.com/dotnet/runtime\n- **Subscription**: [d9f5b309-084f-43b5-02de-08d8b80548e4](https://maestro.dot.net/subscriptions?search=d9f5b309-084f-43b5-02de-08d8b80548e4)\n- **Build**: [20250402.14](https://dev.azure.com/dnceng/internal/_build/results?buildId=2678109)\n- **Date Produced**: April 3, 2025 3:30:51 AM UTC\n- **Commit**: [970070e3b78b8cf604dabfe114e1f609c38c555d](https://github.com/dotnet/runtime/commit/970070e3b78b8cf604dabfe114e1f609c38c555d)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.CodeDom**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.ComponentModel.Composition**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.Data.Odbc**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.Data.OleDb**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.Diagnostics.EventLog**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.DirectoryServices**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.Formats.Nrbf**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.IO.Hashing**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.IO.Packaging**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.IO.Ports**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.Management**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.Reflection.Context**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.Resources.Extensions**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.Runtime.Caching**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.Security.Permissions**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.ServiceModel.Syndication**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.Speech**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.Text.Encodings.Web**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.Text.Json**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.Threading.AccessControl**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **System.Windows.Extensions**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-preview.4.25201.7 to 10.0.0-preview.4.25202.14][1]\n\n[1]: https://github.com/dotnet/runtime/compare/3dbeb51ac3...970070e3b7\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13230)","Url":"https://github.com/dotnet/winforms/pull/13230","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#13230)"},{"Id":"2968399448","IsPullRequest":false,"CreatedAt":"2025-04-03T05:41:24","Actor":"Zheng-Li01","Number":"13231","RawContent":null,"Title":"The (none) text does not display for Choose Data Source item in the DataGridView Tasks dialog in DemoConsole application","State":"open","Body":"### .NET version\n\nmain branch of Winforms repo\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo\n\n### Issue description\n\nThe **(none)** text does not display for Choose Data Source item in the DataGridView Tasks dialog in DemoConsole application\n**.NET 10:** \n![Image](https://github.com/user-attachments/assets/1a04101c-9b7d-40e8-b533-8a300e096fdf)\n\n**.NET framework 4.8.1:**\n![Image](https://github.com/user-attachments/assets/c9b83dad-2cd3-42a6-b162-43df7b9ef4bd)\n\n**.NET Application:**\n![Image](https://github.com/user-attachments/assets/e16c6025-0ad0-4032-9b41-c4a677106e25)\n\n\n### Steps to reproduce\n\nTest the sample app: [DemoConsole](https://github.com/dotnet/winforms/tree/main/src/System.Windows.Forms/tests/IntegrationTests/DesignSurface/DemoConsole) in Winforms repo","Url":"https://github.com/dotnet/winforms/issues/13231","RelatedDescription":"Open issue \"The (none) text does not display for Choose Data Source item in the DataGridView Tasks dialog in DemoConsole application\" (#13231)"},{"Id":"2968340473","IsPullRequest":true,"CreatedAt":"2025-04-03T05:39:03","Actor":"dotnet-maestro[bot]","Number":"13229","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\n## From https://github.com/dotnet/arcade\n- **Subscription**: [b9a1a4bb-2302-4987-3b3d-08d8b8050dda](https://maestro.dot.net/subscriptions?search=b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\n- **Build**: [20250402.1](https://dev.azure.com/dnceng/internal/_build/results?buildId=2677653)\n- **Date Produced**: April 2, 2025 4:49:08 PM UTC\n- **Commit**: [3fddad170a95109a19a1fee78a83a87cd2e2bb79](https://github.com/dotnet/arcade/commit/3fddad170a95109a19a1fee78a83a87cd2e2bb79)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25201.4 to 10.0.0-beta.25202.1][1]\n  - **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25201.4 to 10.0.0-beta.25202.1][1]\n  - **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25201.4 to 10.0.0-beta.25202.1][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25201.4 to 10.0.0-beta.25202.1][1]\n  - **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25201.4 to 10.0.0-beta.25202.1][1]\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25201.4 to 10.0.0-beta.25202.1][1]\n\n[1]: https://github.com/dotnet/arcade/compare/5768bb1b57...3fddad170a\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13229)","Url":"https://github.com/dotnet/winforms/pull/13229","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#13229)"},{"Id":"2968268215","IsPullRequest":false,"CreatedAt":"2025-04-03T04:04:23","Actor":"Olina-Zhang","Number":"13228","RawContent":null,"Title":"\"Use Data Bound Items\" checkbox is missing in ListBox/ComboBox's SmartTag window for DemoConsole application","State":"open","Body":"### .NET version\n\nmain branch of Winforms repo\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo\n\n### Issue description\n\nIn [DemoConsole](https://github.com/dotnet/winforms/tree/main/src/System.Windows.Forms/tests/IntegrationTests/DesignSurface/DemoConsole) test app of WinForms repo, \"Use Data Bound Items\" checkbox is missing in ListBox/ComboBox's SmartTag window \n\n.NET 10:\n\n![Image](https://github.com/user-attachments/assets/05d2e3d5-ea9d-4eff-ba61-7ccfb2eeccc9)\n\n.NET framework 4.8.1:\n\n![Image](https://github.com/user-attachments/assets/59745061-260f-4d2d-af2d-91b6de26f57e)\n\n### Steps to reproduce\n\nTest the sample app: [DemoConsole](https://github.com/dotnet/winforms/tree/main/src/System.Windows.Forms/tests/IntegrationTests/DesignSurface/DemoConsole) in Winforms repo","Url":"https://github.com/dotnet/winforms/issues/13228","RelatedDescription":"Open issue \"\"Use Data Bound Items\" checkbox is missing in ListBox/ComboBox's SmartTag window for DemoConsole application\" (#13228)"},{"Id":"2967110271","IsPullRequest":true,"CreatedAt":"2025-04-03T03:41:53","Actor":"vseanreesermsft","Number":"13224","RawContent":null,"Title":"Update branding to 9.0.5","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13224)","Url":"https://github.com/dotnet/winforms/pull/13224","RelatedDescription":"Closed or merged PR \"Update branding to 9.0.5\" (#13224)"},{"Id":"2968167333","IsPullRequest":false,"CreatedAt":"2025-04-03T03:15:55","Actor":"Olina-Zhang","Number":"13227","RawContent":null,"Title":"Name property for all controls is disabled in DemoConsole application","State":"open","Body":"### .NET version\n\nmain branch of Winforms repo\n\n### Did it work in .NET Framework?\n\nYes\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nNo\n\n### Issue description\n\nIn [DemoConsole](https://github.com/dotnet/winforms/tree/main/src/System.Windows.Forms/tests/IntegrationTests/DesignSurface/DemoConsole) test app of WinForms repo, `Name` property for all controls is disabled\n.NET 10:\n\n![Image](https://github.com/user-attachments/assets/9299cfc1-6390-4609-be1f-0b53066a18de)\n\n.NET framework 4.8.1:\n\n![Image](https://github.com/user-attachments/assets/edc2f834-0838-4b5c-af6c-939d6adbf44a)\n\n### Steps to reproduce\n\nTest the sample app: [DemoConsole](https://github.com/dotnet/winforms/tree/main/src/System.Windows.Forms/tests/IntegrationTests/DesignSurface/DemoConsole) in Winforms repo","Url":"https://github.com/dotnet/winforms/issues/13227","RelatedDescription":"Open issue \"Name property for all controls is disabled in DemoConsole application\" (#13227)"},{"Id":"2968095118","IsPullRequest":false,"CreatedAt":"2025-04-03T02:47:28","Actor":"LeafShi1","Number":"13226","RawContent":null,"Title":"The test InputLanguage_FromCulture_SupplementalInputLanguages_Expected use hardcode to verify the InputLanguage.LayoutName, and it always fail in non-English OS","State":"open","Body":"### Test\n\n [InputLanguage_FromCulture_SupplementalInputLanguages_Expected ](https://github.com/dotnet/winforms/blob/93985d0759e96f6806c2432a91e39762fd9f6914/src/test/unit/System.Windows.Forms/System/Windows/Forms/InputLanguageTests.cs#L148C17-L148C78) \n\n### Issue description\n\nThe test [InputLanguage_FromCulture_SupplementalInputLanguages_Expected ](https://github.com/dotnet/winforms/blob/93985d0759e96f6806c2432a91e39762fd9f6914/src/test/unit/System.Windows.Forms/System/Windows/Forms/InputLanguageTests.cs#L133-L148) use hardcode to verify the InputLanguage.LayoutName, and it always fail in non-English OS\n\nAlthough the [InputLanguageTests](https://github.com/dotnet/winforms/blob/6dd2256226f8a7b361757a3d97b377ba78f3d10e/src/test/unit/System.Windows.Forms/System/Windows/Forms/InputLanguageTests.cs#L12-L13) class adds the attribute `[UseDefaultXunitCulture(SetUnmanagedUiThreadCulture = true)]`, and `CultureInfo.CurrentCulture` and `CurrentUICulture` are always `en-US`, `InputLanguage.LayoutName` will still be translated into the current operating system language.\n\n\nThe operating system's display language is Chinese(Simplified):\n![image](https://github.com/user-attachments/assets/eb424758-fd29-4eb8-8263-ac0854b882b3)\n\n","Url":"https://github.com/dotnet/winforms/issues/13226","RelatedDescription":"Open issue \"The test InputLanguage_FromCulture_SupplementalInputLanguages_Expected use hardcode to verify the InputLanguage.LayoutName, and it always fail in non-English OS\" (#13226)"},{"Id":"2968085563","IsPullRequest":false,"CreatedAt":"2025-04-03T02:41:53","Actor":"LeafShi1","Number":"13225","RawContent":null,"Title":"Update the test case \"InvokeItemsDialog_ShouldThrowException“","State":"open","Body":"### Test\n\nSystem.Windows.Forms.Design.Tests.InvokeItemsDialog_ShouldThrowException\n\n### Issue description\n\nTest `InvokeItemsDialog_ShouldThrowException` makes an unreasonable assertion about the exception， different exceptions that are triggered in Debug and Release modes are not handled in the test case, and the key points of the method to be tested `ListControlUnboundActionList` are not covered.\n\nThis leads to the following problem mentioned in PR #13137\n**Process terminated. Assertion failed.**\nNeed PropertyDescriptor for ICollection property to associate collection editor with.\nat System.Windows.Forms.Design.EditorServiceContext..ctor(ComponentDesigner designer, PropertyDescriptor prop) in //src/System.Windows.Forms.Design/src/System/Windows/Forms/Design/EditorServiceContext.cs:line 34\nat System.Windows.Forms.Design.EditorServiceContext.EditValue(ComponentDesigner designer, Object objectToChange, String propName) in //src/System.Windows.Forms.Design/src/System/Windows/Forms/Design/EditorServiceContext.cs:line 48\nat System.Windows.Forms.Design.ListControlUnboundActionList.InvokeItemsDialog() in //src/System.Windows.Forms.Design/src/System/Windows/Forms/Design/ListControlUnboundActionList.cs:line 20\nat FluentAssertions.Specialized.ActionAssertions.InvokeSubject()\nat FluentAssertions.Specialized.DelegateAssertions2.InvokeSubjectWithInterception() at FluentAssertions.Specialized.DelegateAssertions2.Throw[TException](String because, Object[] becauseArgs)\nat System.Windows.Forms.Design.Tests.ListControlUnboundActionListTests.InvokeItemsDialog_ShouldThrowException() in //src/System.Windows.Forms.Design/tests/UnitTests/System/Windows/Forms/Design/ListControlUnboundActionListTests.cs:line 47","Url":"https://github.com/dotnet/winforms/issues/13225","RelatedDescription":"Open issue \"Update the test case \"InvokeItemsDialog_ShouldThrowException“\" (#13225)"},{"Id":"2959993657","IsPullRequest":true,"CreatedAt":"2025-04-03T01:17:40","Actor":"LeafShi1","Number":"13212","RawContent":null,"Title":"Add test for TableLayoutPanelCodeDomSerializer","State":"closed","Body":"<!-- Please read CONTRIBUTING.md before submitting a pull request -->\r\n\r\nRelated #10773\r\n\r\n\r\n## Proposed changes\r\n\r\n- Add unit test for `TableLayoutPanelCodeDomSerializer`\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13212)","Url":"https://github.com/dotnet/winforms/pull/13212","RelatedDescription":"Closed or merged PR \"Add test for TableLayoutPanelCodeDomSerializer\" (#13212)"},{"Id":"2967109828","IsPullRequest":true,"CreatedAt":"2025-04-03T00:59:38","Actor":"vseanreesermsft","Number":"13223","RawContent":null,"Title":"Update branding to 8.0.16","State":"closed","Body":"\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13223)","Url":"https://github.com/dotnet/winforms/pull/13223","RelatedDescription":"Closed or merged PR \"Update branding to 8.0.16\" (#13223)"},{"Id":"2965189266","IsPullRequest":true,"CreatedAt":"2025-04-02T05:43:29","Actor":"dotnet-maestro[bot]","Number":"13222","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\n## From https://github.com/dotnet/runtime\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\n- **Build**: [20250401.7](https://dev.azure.com/dnceng/internal/_build/results?buildId=2677103)\n- **Date Produced**: April 2, 2025 2:27:57 AM UTC\n- **Commit**: [3dbeb51ac384b4bf571026e3e97d8e186b2debb2](https://github.com/dotnet/runtime/commit/3dbeb51ac384b4bf571026e3e97d8e186b2debb2)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.CodeDom**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.ComponentModel.Composition**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.Data.Odbc**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.Data.OleDb**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.Diagnostics.EventLog**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.DirectoryServices**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.Formats.Nrbf**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.IO.Hashing**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.IO.Packaging**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.IO.Ports**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.Management**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.Reflection.Context**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.Resources.Extensions**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.Runtime.Caching**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.Security.Permissions**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.ServiceModel.Syndication**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.Speech**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.Text.Encodings.Web**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.Text.Json**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.Threading.AccessControl**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **System.Windows.Extensions**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-preview.4.25181.8 to 10.0.0-preview.4.25201.7][1]\n\n[1]: https://github.com/dotnet/runtime/compare/4ec72ec3c0...3dbeb51ac3\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13222)","Url":"https://github.com/dotnet/winforms/pull/13222","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#13222)"},{"Id":"2965189250","IsPullRequest":true,"CreatedAt":"2025-04-02T05:38:10","Actor":"dotnet-maestro[bot]","Number":"13221","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\n## From https://github.com/dotnet/arcade\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\n- **Build**: [20250401.4](https://dev.azure.com/dnceng/internal/_build/results?buildId=2676765)\n- **Date Produced**: April 1, 2025 5:31:51 PM UTC\n- **Commit**: [5768bb1b57dfd7d9ac9a84749da0537162277e56](https://github.com/dotnet/arcade/commit/5768bb1b57dfd7d9ac9a84749da0537162277e56)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25181.7 to 10.0.0-beta.25201.4][1]\n  - **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25181.7 to 10.0.0-beta.25201.4][1]\n  - **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25181.7 to 10.0.0-beta.25201.4][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25181.7 to 10.0.0-beta.25201.4][1]\n  - **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25181.7 to 10.0.0-beta.25201.4][1]\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25181.7 to 10.0.0-beta.25201.4][1]\n\n[1]: https://github.com/dotnet/arcade/compare/25ac07fc88...5768bb1b57\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13221)","Url":"https://github.com/dotnet/winforms/pull/13221","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#13221)"},{"Id":"2964707977","IsPullRequest":true,"CreatedAt":"2025-04-01T23:17:46","Actor":"Tanya-Solyanik","Number":"13220","RawContent":null,"Title":"checkout:self and clean are the default steps, we don't have to specify them in the script","State":"closed","Body":"test AzDO run - https://dnceng.visualstudio.com/internal/_build/results?buildId=2677006&view=results\r\n\r\nDoc reference - https://learn.microsoft.com/en-us/azure/devops/pipelines/yaml-schema/steps-checkout?view=azure-pipelines#properties\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13220)","Url":"https://github.com/dotnet/winforms/pull/13220","RelatedDescription":"Closed or merged PR \"checkout:self and clean are the default steps, we don't have to specify them in the script\" (#13220)"},{"Id":"2962819416","IsPullRequest":false,"CreatedAt":"2025-04-01T09:12:28","Actor":"xPaw","Number":"13219","RawContent":null,"Title":"ByteViewer is not DPI-aware","State":"open","Body":"### .NET version\n\n9.0.3\n\n### Did it work in .NET Framework?\n\nNot tested/verified\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\n_No response_\n\n### Issue description\n\nWhen using 150% windows scaling, the font renders bigger in ByteViewer, but the actual offsets and borders remain the same, so it draws on top of each other.\n\n![Image](https://github.com/user-attachments/assets/dd2d9d7b-450e-4cee-ac64-ad3bb6dbf516)\n\n### Steps to reproduce\n\n```csharp\nnew System.ComponentModel.Design.ByteViewer\n{\n    Dock = DockStyle.Fill,\n};\n```","Url":"https://github.com/dotnet/winforms/issues/13219","RelatedDescription":"Open issue \"ByteViewer is not DPI-aware\" (#13219)"},{"Id":"2962683517","IsPullRequest":true,"CreatedAt":"2025-04-01T08:23:19","Actor":"Zheng-Li01","Number":"13218","RawContent":null,"Title":"Add code coverage for ToolStripEditorManager","State":"open","Body":"Related https://github.com/dotnet/winforms/issues/10773\r\n\r\n## Proposed changes\r\nAdd unit test file: ToolStripEditorManagerTests.cs for public methods & Properties of the ToolStripEditorManager.cs\r\n\r\nOriginal PR: https://github.com/dotnet/winforms/pull/13094\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13218)","Url":"https://github.com/dotnet/winforms/pull/13218","RelatedDescription":"Open PR \"Add code coverage for ToolStripEditorManager\" (#13218)"},{"Id":"2962244495","IsPullRequest":true,"CreatedAt":"2025-04-01T05:44:36","Actor":"dotnet-maestro[bot]","Number":"13217","RawContent":null,"Title":"[main] Update dependencies from dotnet/runtime","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:d9f5b309-084f-43b5-02de-08d8b80548e4)\n## From https://github.com/dotnet/runtime\n- **Subscription**: d9f5b309-084f-43b5-02de-08d8b80548e4\n- **Build**: [20250331.8](https://dev.azure.com/dnceng/internal/_build/results?buildId=2676183)\n- **Date Produced**: April 1, 2025 2:11:24 AM UTC\n- **Commit**: [4ec72ec3c0639a7e3697fa94c3844e178a1088f5](https://github.com/dotnet/runtime/commit/4ec72ec3c0639a7e3697fa94c3844e178a1088f5)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.Internal.Runtime.WindowsDesktop.Transport**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **Microsoft.NET.Sdk.IL**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **Microsoft.NETCore.App.Ref**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **Microsoft.NETCore.App.Runtime.win-x64**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **Microsoft.NETCore.ILDAsm**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **Microsoft.NETCore.Platforms**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **Microsoft.Win32.Registry.AccessControl**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **Microsoft.Win32.SystemEvents**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **runtime.win-x64.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **runtime.win-x86.Microsoft.NETCore.ILAsm**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.CodeDom**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.ComponentModel.Composition**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.ComponentModel.Composition.Registration**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.Configuration.ConfigurationManager**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.Data.Odbc**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.Data.OleDb**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.Diagnostics.EventLog**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.Diagnostics.PerformanceCounter**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.DirectoryServices**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.DirectoryServices.AccountManagement**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.DirectoryServices.Protocols**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.Formats.Nrbf**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.IO.Hashing**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.IO.Packaging**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.IO.Ports**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.Management**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.Reflection.Context**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.Reflection.MetadataLoadContext**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.Resources.Extensions**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.Runtime.Caching**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.Runtime.Serialization.Formatters**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.Security.Cryptography.Pkcs**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.Security.Cryptography.ProtectedData**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.Security.Cryptography.Xml**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.Security.Permissions**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.ServiceModel.Syndication**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.ServiceProcess.ServiceController**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.Speech**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.Text.Encoding.CodePages**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.Text.Encodings.Web**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.Text.Json**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.Threading.AccessControl**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **System.Windows.Extensions**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n  - **VS.Redist.Common.NetCore.SharedFramework.x64.10.0**: [from 10.0.0-preview.4.25180.1 to 10.0.0-preview.4.25181.8][1]\n\n[1]: https://github.com/dotnet/runtime/compare/7cc32192cb...4ec72ec3c0\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:d9f5b309-084f-43b5-02de-08d8b80548e4)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13217)","Url":"https://github.com/dotnet/winforms/pull/13217","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/runtime\" (#13217)"},{"Id":"2962244479","IsPullRequest":true,"CreatedAt":"2025-04-01T05:39:14","Actor":"dotnet-maestro[bot]","Number":"13216","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\n## From https://github.com/dotnet/arcade\n- **Subscription**: b9a1a4bb-2302-4987-3b3d-08d8b8050dda\n- **Build**: [20250331.7](https://dev.azure.com/dnceng/internal/_build/results?buildId=2675958)\n- **Date Produced**: March 31, 2025 7:23:27 PM UTC\n- **Commit**: [25ac07fc888f6608dd4c26dd1adacb49b4868e42](https://github.com/dotnet/arcade/commit/25ac07fc888f6608dd4c26dd1adacb49b4868e42)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25178.2 to 10.0.0-beta.25181.7][1]\n  - **Microsoft.DotNet.CMake.Sdk**: [from 10.0.0-beta.25178.2 to 10.0.0-beta.25181.7][1]\n  - **Microsoft.DotNet.GenFacades**: [from 10.0.0-beta.25178.2 to 10.0.0-beta.25181.7][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25178.2 to 10.0.0-beta.25181.7][1]\n  - **Microsoft.DotNet.RemoteExecutor**: [from 10.0.0-beta.25178.2 to 10.0.0-beta.25181.7][1]\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25178.2 to 10.0.0-beta.25181.7][1]\n\n[1]: https://github.com/dotnet/arcade/compare/7d1967403f...25ac07fc88\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:b9a1a4bb-2302-4987-3b3d-08d8b8050dda)\n\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13216)","Url":"https://github.com/dotnet/winforms/pull/13216","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#13216)"},{"Id":"2962004802","IsPullRequest":true,"CreatedAt":"2025-04-01T02:11:15","Actor":"Zheng-Li01","Number":"13215","RawContent":null,"Title":"Add code coverage for StandardCommandToolStripMenuItem","State":"open","Body":"Related https://github.com/dotnet/winforms/issues/10773\r\n\r\n## Proposed changes\r\nAdd unit test file: StandardCommandToolStripMenuItemTests.cs for public methods of the StandardCommandToolStripMenuItem.cs\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13215)","Url":"https://github.com/dotnet/winforms/pull/13215","RelatedDescription":"Open PR \"Add code coverage for StandardCommandToolStripMenuItem\" (#13215)"},{"Id":"2961000440","IsPullRequest":false,"CreatedAt":"2025-03-31T16:37:47","Actor":"KlausLoeffelmann","Number":"13214","RawContent":null,"Title":"Address issues with this repo's Auto-Labeler","State":"open","Body":"I saw this a couple of times now, that the auto-labeler actually seemed to have put the correct label to a newly create issue, but then a minute or so later, it got changed back to:\n\n![Image](https://github.com/user-attachments/assets/db1fe251-e203-47f8-ac3f-304879d19025)\n\n@RussKie: Is that an observation which could be correct (I am not entirely sure), and if yes, any idea how to address that?","Url":"https://github.com/dotnet/winforms/issues/13214","RelatedDescription":"Open issue \"Address issues with this repo's Auto-Labeler\" (#13214)"},{"Id":"2960008383","IsPullRequest":false,"CreatedAt":"2025-03-31T16:34:15","Actor":"Zheng-Li01","Number":"13213","RawContent":null,"Title":"The VB WinForm project shows ENC0005 error while debugging in VS 2022 and using hot reload.","State":"closed","Body":"### .NET version\n\n.NET SDK 10.0.100-PREVIEW.4.25177.19\n\n### Did it work in .NET Framework?\n\nNo\n\n### Did it work in any of the earlier releases of .NET Core or .NET 5+?\n\nThe issue can reproduce from .NET 6.0 to latest .NET SDK 10.0\n\n### Issue description\n\nThe VB WinForm project shows ENC0005 error while debugging in VS 2022 and using hot reload.\n![Image](https://github.com/user-attachments/assets/d1c768ed-1dae-4936-921c-2b736770e0a6)\n\n**.NET VB:**\n\nhttps://github.com/user-attachments/assets/14408404-479d-41b0-9e05-b937c1946949\n\n**Framework VB:**\n\nhttps://github.com/user-attachments/assets/10e7f064-ad71-415f-a0e5-3e0c774de2c4\n\n### Steps to reproduce\n\n1. Create a .NET Framework 4.8, VB, WinForm project in VS 2022(17.13.3).\n2. From Toolbox, drag a Button to the Form1, double click this button and navigate to the “button.click” code.\n3. Add “Debug.Write(“Hello”)” code line and set a breakpoint on this line.\n4. Add the `<Deterministic>false</Deterministic> `in the .vbproj file, and save\n5. In Solution Explorer, click Show All Files button, expand My Project node, click to open AssemblyInfo.vb file.\n6. Scroll down, comment the <Assembly: AssemblyFileVersion(\"1.0.0.0\")> line, change the <Assembly: AssemblyVersion(\"1.0.0.0\")> to for example <Assembly: AssemblyVersion(\"2.0.*\")>. Note to use the wildcard *.\nOr use the attached reproduce application: \n[ReproApplication.zip](https://github.com/user-attachments/files/19533310/ReproApplication.zip)\n7. Save the project and navigate to the breakpoint that you set originally, in Form1.vb file. click Start to start debugging.\n8. Comment the “Debug.Write(“Hello”)” code line, and click hot reload button, you will see error message like “Updating the Handles clause of method requires restarting the application.” However, if you don’t use the wildcard * for AssemblyVersion, this issue won’t appear.\n\n**More info:**\n1. The issue cannot reproduce C# winforms type project\n2. The issue cannot reproduce VB Console type project\n3. Original feedback link: https://developercommunity.visualstudio.com/t/The-VB-WinForm-project-shows-ENC0005-err/10875798?viewtype=all","Url":"https://github.com/dotnet/winforms/issues/13213","RelatedDescription":"Closed issue \"The VB WinForm project shows ENC0005 error while debugging in VS 2022 and using hot reload.\" (#13213)"},{"Id":"2959803636","IsPullRequest":true,"CreatedAt":"2025-03-31T10:18:21","Actor":"akoeplinger","Number":"13211","RawContent":null,"Title":"Remove richnav pipeline and feed","State":"closed","Body":"The service no longer exists\r\n\n ###### Microsoft Reviewers: [Open in CodeFlow](https://microsoft.github.io/open-pr/?codeflow=https://github.com/dotnet/winforms/pull/13211)","Url":"https://github.com/dotnet/winforms/pull/13211","RelatedDescription":"Closed or merged PR \"Remove richnav pipeline and feed\" (#13211)"},{"Id":"2959159975","IsPullRequest":false,"CreatedAt":"2025-03-30T23:16:06","Actor":"KlausLoeffelmann","Number":"13208","RawContent":null,"Title":"WFO1000 Analyzer: False positives on properties of interfaces derived from IComponent","State":"open","Body":"The WFO1000 security analyzer flags public and protected properties of interfaces derived from `IComponent` which are not `System.Component.IComponent`, which are not used for serialization. This results in false positives, for example in BlazorHybrid scenarios in WinForms.\n\n**Example:**\n```csharp\npublic interface IComponent\n{\n    void NothingTodoWithComponentModelMethod();\n}\n\npublic interface ICustomInterface : IComponent \n{\n    Rectangle Bounds { get; set; }\n    Size Size { get; protected set; }\n}\n```\n\nReplaces a part of the Bug of #12476.","Url":"https://github.com/dotnet/winforms/issues/13208","RelatedDescription":"Open issue \"WFO1000 Analyzer: False positives on properties of interfaces derived from IComponent\" (#13208)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-04-05T03:30:26.3175963Z","RunDurationInMilliseconds":406}