{"Data":{"GitHub":{"Issues":[{"Id":"1609834320","IsPullRequest":false,"CreatedAt":"2023-03-04T15:42:14","Actor":"rnowling","Number":"6593","RawContent":null,"Title":"Broken Links","State":"open","Body":"The links to the Wikipedia page on N-grams and the L-p vector normalization are not being interpreted correctly on the TextFeaturizingEstimator page:\r\n\r\n```markdown\r\nThis estimator gives the user one-stop solution for doing:\r\n\r\n    Language Detection\r\n    [Tokenization](https://en.wikipedia.org/wiki/Lexical_analysis#Tokenization)\r\n    [Text normalization](https://en.wikipedia.org/wiki/Text_normalization)\r\n    [Predefined and custom stopwords removal](https://en.wikipedia.org/wiki/Stop_words)\r\n    [Word-based or character-based Ngram extraction and SkipGram extraction (through the advanced [options](https://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.transforms.text.textfeaturizingestimator?view=ml-dotnet))](https://en.wikipedia.org/wiki/N-gram)\r\n    [TF, IDF or TF-IDF](https://en.wikipedia.org/wiki/Tf%E2%80%93idf)\r\n    [L-p vector normalization](xref: Microsoft.ML.Transforms.LpNormNormalizingTransformer)\r\n```\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for learn.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: deeb31e0-6843-e9ae-e6ad-028c4ec9121b\r\n* Version Independent ID: bf1e4b11-7652-7da4-4791-aa2d9488971c\r\n* Content: [TextFeaturizingEstimator Class (Microsoft.ML.Transforms.Text)](https://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.transforms.text.textfeaturizingestimator?view=ml-dotnet)\r\n* Content Source: [dotnet/xml/Microsoft.ML.Transforms.Text/TextFeaturizingEstimator.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.Transforms.Text/TextFeaturizingEstimator.xml)\r\n* Product: **dotnet-ml-api**\r\n* GitHub Login: @natke\r\n* Microsoft Alias: **nakersha**","Url":"https://github.com/dotnet/machinelearning/issues/6593","RelatedDescription":"Open issue \"Broken Links\" (#6593)"},{"Id":"1609522930","IsPullRequest":false,"CreatedAt":"2023-03-04T01:26:08","Actor":"JeremyMahieu","Number":"6592","RawContent":null,"Title":"[Object Detection] Bounding box rotated due to image exif data","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 10\r\n - ML.NET Version: 2.0.0\r\n - .NET Version: 7.0\r\n\r\n**Describe the bug**\r\nSome images have exit data that says it's a rotated image. In those cases, the bounding boxes found by the model end up being transposed.\r\n\r\nExample: https://jimpl.com/results/X2GX3ZTHTCFKa7ZiVPag4xUP?target=exif\r\n\r\n**To Reproduce**\r\nDo object detection on an image that has exif data saying it's rotated.\r\n\r\n**Expected behavior**\r\nBounding boxes to match pixes on images.\r\n\r\n**Screenshots, Code, Sample Projects**\r\nBlue bounding boxes are the original values, green is after checking if the image is portrait, and transposing where needed.\r\n![image](https://user-images.githubusercontent.com/23409814/222867778-14bccdf2-58ec-4f66-83d7-57f4792c688e.png)\r\n![20221129_163943](https://user-images.githubusercontent.com/23409814/222868022-a28fc3c8-bed3-45bf-b298-7e503a77db62.jpg)\r\n\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6592","RelatedDescription":"Open issue \"[Object Detection] Bounding box rotated due to image exif data\" (#6592)"},{"Id":"1609084663","IsPullRequest":false,"CreatedAt":"2023-03-03T18:31:40","Actor":"RamType0","Number":"6591","RawContent":null,"Title":"Load ONNX from in-memory binary instead of file path","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently, the only way to load ONNX model is to specify concrete file path.\r\nBut the usage of concrete file path is often impossible in some platforms.(e.g. UWP without permission)\r\nLoading ONNX model from in-memory binary representation will solve this problem.\r\n\r\n**Describe the solution you'd like**\r\n\r\nProvide API to load ONNX model from `ReadOnlyMemory<byte>`, `Stream`.\r\n\r\n**Additional context**\r\n\r\n[`OnnxTransformer` has private constructor which accepts `byte[] modelBytes`.](https://github.com/dotnet/machinelearning/blob/db197154dcd924ae9a7e31074a835b86e34e33bb/src/Microsoft.ML.OnnxTransformer/OnnxTransform.cs#L232)","Url":"https://github.com/dotnet/machinelearning/issues/6591","RelatedDescription":"Open issue \"Load ONNX from in-memory binary instead of file path\" (#6591)"},{"Id":"1607943998","IsPullRequest":false,"CreatedAt":"2023-03-03T04:56:04","Actor":"mg-yolo-enterprises","Number":"6590","RawContent":null,"Title":"Improve flexibility of input types for image classification","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nThe image classifier in ML.NET currently accepts input in the form of a byte array (only certain file formats, e.g. png jpeg gif), which is flexible enough for many scenarios. However, it is sometimes the case that the source image originates in a System.Image.Bitmap, OpenCV mat, or other managed/unmanaged memory block not in png/jpeg/gif format. To perform a prediction with this sort of data, it must be converted which takes time and requires allocations for data that already exists.\r\n\r\nIn a production computer vision environment where image data is streamed in as System.Drawing.Bitmap objects whose RawFormat is MemoryBmp, it is undesirable to dedicate 25-30ms per image to save each Bitmap into a managed byte[] whose RawFormat is jpeg (80ms for png), if it can be avoided by an update to allow more direct consumption of other formats and datatypes.\r\n\r\n**Describe the solution you'd like**\r\nDirect consumption of System.Drawing.Bitmap (RawFormat=MemoryBmp) by ML.NET in a way which avoids managed allocations or format conversion would be ideal. Accepting an IntPtr to unmanaged pixel data would be fine as well, with support for bmp format. \r\n\r\n**Describe alternatives you've considered**\r\nVarious methods to convert Bitmap data into byte[] were tested and are functional, but none achieves the performance desired.\r\n\r\n**Additional context**\r\nThe general use case for this is for processing of images received via a camera which streams images in as Bitmap objects. Needing to convert this to managed memory in one of several formats is a bottleneck which would ideally be avoidable through the solution described above.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6590","RelatedDescription":"Open issue \"Improve flexibility of input types for image classification\" (#6590)"},{"Id":"1607607405","IsPullRequest":false,"CreatedAt":"2023-03-02T22:24:40","Actor":"LittleLittleCloud","Number":"6589","RawContent":null,"Title":"Create example for AutoMLExperiment in api doc.","State":"open","Body":"## Where the code example will locate\r\n\r\nMicrosoft.ML.AutoML.Example\r\n\r\n## What examples will be added\r\n- [ ] AutoMLExperiment\r\n- [ ] SearchSpace\r\n- [ ] SweepablePipeline","Url":"https://github.com/dotnet/machinelearning/issues/6589","RelatedDescription":"Open issue \"Create example for AutoMLExperiment in api doc.\" (#6589)"},{"Id":"1607191412","IsPullRequest":false,"CreatedAt":"2023-03-02T17:14:08","Actor":"genemars","Number":"6588","RawContent":null,"Title":"Error: \"Microsoft.ML currently supports 'x64' and 'x86' processor\" when target runtime is *linux-arm* or *linux-arm64*","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Linux 5.19.0-32-generic 22.04.1-Ubuntu\r\n - ML.NET Version: 2.0.1\r\n - .NET Version: 6.0\r\n\r\n\r\n**Describe the bug**\r\nUnable to build a project if target runtime is set to either `linux-arm` or `linux-arm64`.\r\nError:\r\n```\r\n~/.nuget/packages/microsoft.ml/2.0.1/build/netstandard2.0/Microsoft.ML.targets(16,5): error :\r\n     Microsoft.ML currently supports 'x64' and 'x86' processor architectures.\r\n     Please ensure your application is targeting 'x64' or 'x86'.\r\n```\r\nhttps://github.com/dotnet/machinelearning/blob/db197154dcd924ae9a7e31074a835b86e34e33bb/src/Microsoft.ML/build/netstandard2.0/Microsoft.ML.targets#L7-L20\r\n\r\n\r\n\r\n**To Reproduce**\r\nCreate a console project, add a reference to `Microsoft.ML 2.0.1` package, try to build the project with target runtime set to either `linux-arm` or `linux-arm64`.\r\n\r\n\r\n**Expected behavior**\r\nShould build without errors.\r\n\r\n\r\n**Screenshot**\r\n![Schermata del 2023-03-02 18-08-15](https://user-images.githubusercontent.com/6654265/222501243-78bd5571-f3dd-4836-8ab2-1e919f645dee.png)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6588","RelatedDescription":"Open issue \"Error: \"Microsoft.ML currently supports 'x64' and 'x86' processor\" when target runtime is *linux-arm* or *linux-arm64*\" (#6588)"},{"Id":"1607133064","IsPullRequest":false,"CreatedAt":"2023-03-02T16:36:46","Actor":"luisquintanilla","Number":"6587","RawContent":null,"Title":"Input column 'PredictedLabel' doesn't contain key values metadata ","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: \r\n - .NET Version: .NET 7\r\n \r\n**Describe the bug**\r\n\r\nWhen loading a LightGBM model for scoring, I get the following error:\r\n\r\n```text\r\nInput column 'PredictedLabel' doesn't contain key values metadata (Parameter 'inputSchema')\r\n```\r\n\r\n**Screenshots, Code, Sample Projects**\r\n\r\nStack Trace\r\n\r\n```text\r\n   at Microsoft.ML.Transforms.KeyToValueMappingEstimator.GetOutputSchema(SchemaShape inputSchema)\r\n   at Microsoft.ML.Data.EstimatorChain`1.GetOutputSchema(SchemaShape inputSchema)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Program.<Main>$(String[] args) in C:\\Dev\\LGBMLoadingSample\\LGBMLoadingSample\\Program.cs:line 22\r\n```\r\n\r\nCode that throws error:\r\n\r\n```csharp\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.Data;\r\n\r\nvar ctx = new MLContext();\r\n\r\nvar modelPath = \"iris-lgbm.txt\";\r\n\r\nvar data = new[]\r\n{\r\n    new {SepalLength=5.1f, SepalWidth=3.5f,PetalLength=1.4f, PetalWidth=0.2f}\r\n};\r\n\r\nvar dv = ctx.Data.LoadFromEnumerable(data);\r\n\r\nusing(var modelStream = new FileStream(modelPath,FileMode.Open))\r\n{\r\n    var pipeline =\r\n        ctx.Transforms.Concatenate(\"Features\", \"SepalLength\", \"SepalWidth\", \"PetalLength\", \"PetalWidth\")\r\n            .Append(ctx.MulticlassClassification.Trainers.LightGbm(modelStream), TransformerScope.Scoring)\r\n            .Append(ctx.Transforms.Conversion.MapKeyToValue(\"PredictedLabel\"));\r\n\r\n    var model = pipeline.Fit(dv);\r\n\r\n    var predictions = model.Transform(dv);\r\n\r\n    var predictionCol = predictions.GetColumn<string>(\"PredictedLabel\");\r\n\r\n    foreach(var pred in predictionCol)\r\n    {\r\n        Console.WriteLine(pred);\r\n    }\r\n};\r\n```\r\n\r\nWorking code:\r\n\r\n```csharp\r\nusing(var modelStream = new FileStream(modelPath,FileMode.Open))\r\n{\r\n    var pipeline =\r\n        ctx.Transforms.Concatenate(\"Features\", \"SepalLength\", \"SepalWidth\", \"PetalLength\", \"PetalWidth\")\r\n            .Append(ctx.MulticlassClassification.Trainers.LightGbm(modelStream), TransformerScope.Scoring);\r\n\r\n    var model = pipeline.Fit(dv);\r\n\r\n    var predictions = model.Transform(dv);\r\n\r\n    var predictionCol = predictions.GetColumn<uint>(\"PredictedLabel\");\r\n\r\n    foreach(var pred in predictionCol)\r\n    {\r\n        Console.WriteLine(pred);\r\n    }\r\n};\r\n```\r\n\r\nModel: \r\n\r\n[iris-lgbm.txt](https://github.com/dotnet/machinelearning/files/10873652/iris-lgbm.txt)\r\n\r\n\r\nOutput Schema: \r\n\r\n![image](https://user-images.githubusercontent.com/46974588/222494779-db8ebcf3-c241-42c2-922e-95af27aa5682.png)\r\n\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6587","RelatedDescription":"Open issue \"Input column 'PredictedLabel' doesn't contain key values metadata \" (#6587)"},{"Id":"1606658397","IsPullRequest":false,"CreatedAt":"2023-03-02T11:50:58","Actor":"ChickenOnBoard","Number":"6586","RawContent":null,"Title":"System.BadImageFormatException related to Microsoft.ML.CpuMath","State":"open","Body":"**System Information:**\r\n - OS & Version: Windows 11 \r\n - ML.NET Version: ML.NET v2.0.1\r\n - .NET Version: .NET 4.7.2\r\n\r\n**Describe the bug**\r\nGetting System.BadImageFormatException when running my app. Screenshot below:\r\n\r\n\r\n**Screenshots, Code, Sample Projects**\r\n![image](https://user-images.githubusercontent.com/30071522/222420199-f5d0bd93-8878-48fd-8a20-bc99a5c38fb6.png)\r\n![image](https://user-images.githubusercontent.com/30071522/222420678-5e5f81a8-37a2-439e-a1b8-94ed4a663c47.png)\r\n![image](https://user-images.githubusercontent.com/30071522/222420710-b346d615-fc3b-4383-9c82-737856c8c849.png)\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6586","RelatedDescription":"Open issue \"System.BadImageFormatException related to Microsoft.ML.CpuMath\" (#6586)"},{"Id":"1606333187","IsPullRequest":false,"CreatedAt":"2023-03-02T08:32:08","Actor":"yigit1287","Number":"6585","RawContent":null,"Title":"ML.Net not run on GPU ","State":"open","Body":"It works fine on cpu but when i add gpu related libraries i get errors.\r\n\r\n![mlnet gpu](https://user-images.githubusercontent.com/126452270/222372398-1f19a3f9-d779-4dd7-a3b6-8a232d2618a4.png)\r\n![1](https://user-images.githubusercontent.com/126452270/222373270-a2cdafbb-400c-47aa-8fc9-be089e5160f5.png)\r\n![3](https://user-images.githubusercontent.com/126452270/222374075-58214191-61ee-46ac-8c79-1e63797ea694.png)\r\n![2](https://user-images.githubusercontent.com/126452270/222374079-83709490-efbf-4ac3-bb68-782bcd1498b1.png)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6585","RelatedDescription":"Open issue \"ML.Net not run on GPU \" (#6585)"},{"Id":"1605904743","IsPullRequest":true,"CreatedAt":"2023-03-02T00:20:17","Actor":"LittleLittleCloud","Number":"6584","RawContent":null,"Title":"Add ICanSummarize and implement IEstimator.Summary for Lbfgs","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\n#6563 \r\n\r\nThis PR adds a `Summary` function to all `IEstimator<ITransformer>` which prints meta data like estimator name, hyper-parameters and other informations. This helps code generator in model builder to generate pipeline code.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6584","RelatedDescription":"Open PR \"Add ICanSummarize and implement IEstimator.Summary for Lbfgs\" (#6584)"},{"Id":"1592496191","IsPullRequest":true,"CreatedAt":"2023-03-01T21:14:44","Actor":"LittleLittleCloud","Number":"6576","RawContent":null,"Title":"Add default search space for standard trainers","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\n#6577 \r\n\r\nthe offline process of fewshot/zeroshot AutoML needs to be run on a fixed search space. This PR builds fixed search spaces for standard trainers using `Microsoft.ML.SearchSpace`","Url":"https://github.com/dotnet/machinelearning/pull/6576","RelatedDescription":"Closed or merged PR \"Add default search space for standard trainers\" (#6576)"},{"Id":"1604590637","IsPullRequest":false,"CreatedAt":"2023-03-01T09:26:13","Actor":"Ben-Pattinson","Number":"6583","RawContent":null,"Title":"Please provide examples of the vocab and merge file formats","State":"open","Body":"\r\nPlease provide examples of the vocab and merge file formats. Better yet, provide links to downloadable pre-created files for common purposes GPT3 etc. \r\n\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for learn.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: 909b9e8c-f08c-ba0a-6c31-7dd151699999\r\n* Version Independent ID: 909b9e8c-f08c-ba0a-6c31-7dd151699999\r\n* Content: [Bpe Constructor (Microsoft.ML.Tokenizers)](https://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.tokenizers.bpe.-ctor?view=ml-dotnet-preview#microsoft-ml-tokenizers-bpe-ctor(system-string-system-string-system-string-system-string-system-string))\r\n* Content Source: [dotnet/xml/Microsoft.ML.Tokenizers/Bpe.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.Tokenizers/Bpe.xml)\r\n* Product: **dotnet-ml-api**\r\n* GitHub Login: @natke\r\n* Microsoft Alias: **nakersha**","Url":"https://github.com/dotnet/machinelearning/issues/6583","RelatedDescription":"Open issue \"Please provide examples of the vocab and merge file formats\" (#6583)"},{"Id":"1604547983","IsPullRequest":false,"CreatedAt":"2023-03-01T08:59:43","Actor":"NMSAzulX","Number":"6582","RawContent":null,"Title":"There is a problem when using LbfgsMaximumEntropy to learn image classification. A continuous learning result that is not expected.","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: [Windows 11] \r\n - ML.NET Version: [v2.0.1]\r\n - .NET Version: [.NET 6.0]\r\n - Other:  \r\n       - [Microsoft.ML.ImageAnalytics 2.0.1]\r\n       - [SciSharp.TensorFlow.Redist 2.3.1]\r\n\r\n\r\n**Describe the bug**\r\n\r\nI used LbfgsMaximumEntropy and kept it learning cat/dog pictures, but produced unexpected results.\r\nAll the results are cats.\r\n\r\n**To Reproduce**\r\n\r\n1. Learning 100 cat pictures amd 1 dog picture.\r\n2. Learning 100 dog pictures.\r\n3. Predict Result.\r\n\r\n[Code ImageMulticlassTrainer](https://github.com/NMSAzulX/LbfgsMaximumEntropyTest/blob/main/ImageTest/ImageTest/ImageMulticlassTrainer.cs)\r\n\r\nReuslt:  all label is cat and score is 1.\r\n\r\n\r\n**Screenshots, Code, Sample Projects**\r\nIf you need the complete code, I will fix the code.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6582","RelatedDescription":"Open issue \"There is a problem when using LbfgsMaximumEntropy to learn image classification. A continuous learning result that is not expected.\" (#6582)"},{"Id":"1603514759","IsPullRequest":false,"CreatedAt":"2023-02-28T17:42:24","Actor":"tiger2014","Number":"6581","RawContent":null,"Title":"'SelectBestBinaryFeatures' and 'Model' can't be found","State":"open","Body":"### System information\r\n\r\n- **win11**:\r\n- **.NET Version7**: \r\n\r\n### Issue\r\n\r\nI download the code from the network, but it can't pass compiling. What can I do?\r\n\r\n![image](https://user-images.githubusercontent.com/6703612/221933868-bea19106-23a2-4617-aea1-d44013c714e7.png)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6581","RelatedDescription":"Open issue \"'SelectBestBinaryFeatures' and 'Model' can't be found\" (#6581)"},{"Id":"1599313968","IsPullRequest":false,"CreatedAt":"2023-02-24T21:43:48","Actor":"Joecadbert","Number":"6580","RawContent":null,"Title":"ResNet101 [ShapeInferenceError] Attribute pads has incorrect size","State":"open","Body":"I am using ML.NET in C# to extract features for a reverse image search.  It is based on the code sample from Microsoft's documentation at the following page: [https://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.onnxcatalog.dnnfeaturizeimage?view=ml-dotnet#microsoft-ml-onnxcatalog-dnnfeaturizeimage(microsoft-ml-transformscatalog-system-string-system-func((microsoft-ml-transforms-onnx-dnnimagefeaturizerinput-microsoft-ml-data-estimatorchain((microsoft-ml-transforms-columncopyingtransformer))))-system-string)](url)\r\n\r\nI have been successful at extracting features with ResNet18, TensorFlow, TensorFlowInceptionV3, and ONNX TinyYolo2.\r\n\r\n**Describe the bug**\r\nI get the following error when trying to use ResNet50 and ResNet101.\r\n**ResNet50**\r\n> System.InvalidOperationException: 'Error initializing model :Microsoft.ML.OnnxRuntime.OnnxRuntimeException: [ErrorCode:Fail] Load model from C:\\Users\\myname\\source\\repos\\ReverseImageSearch\\ReverseImageSearch\\bin\\Debug\\net7.0\\DnnImageModels\\ResNet50Onnx\\ResNet50.onnx failed:Node (Pooling1096) Op (AveragePool) [ShapeInferenceError] Attribute pads has incorrect size\r\n\r\n**ResNet101**\r\n> System.InvalidOperationException: 'Error initializing model :Microsoft.ML.OnnxRuntime.OnnxRuntimeException: [ErrorCode:Fail] Load model from C:\\Users\\myname\\source\\repos\\ReverseImageSearch\\ReverseImageSearch\\bin\\Debug\\net7.0\\DnnImageModels\\ResNet101Onnx\\ResNet101.onnx failed:Node (Pooling2286) Op (AveragePool) [ShapeInferenceError] Attribute pads has incorrect size\r\n\r\nThis is similar to the \"**Closed**\" issue at the following link  [https://github.com/dotnet/machinelearning/issues/4075](url)\r\n\r\nHere is the function\r\n\r\n```\r\npublic static float[] GenerateImageFeaturesResNet101(string ImagePath)\r\n{\r\n\r\n\tvar myFileName = System.IO.Path.GetFileName(ImagePath);\r\n\r\n\t// Create a new ML context, for ML.NET operations. It can be used for\r\n\t// exception tracking and logging, as well as the source of randomness.\r\n\tvar mlContext = new MLContext();\r\n\r\n\t//\r\n\tvar myImageNetData = new List<ImageNetData>\r\n\t\t{\r\n\t\t\tnew ImageNetData {ImagePath = ImagePath, Label = myFileName}\r\n\t\t};\r\n\r\n\tvar data = mlContext.Data.LoadFromEnumerable(myImageNetData);\r\n\r\n\tvar imagesFolder = Path.GetDirectoryName(ImagePath);\r\n\r\n\t// Image loading pipeline.\r\n\t// \r\n\tvar pipeline = mlContext.Transforms.LoadImages(outputColumnName: \"ImageObject\", imagesFolder, inputColumnName: \"ImagePath\")\r\n\t\t\t\t\t.Append(mlContext.Transforms.ResizeImages(outputColumnName: \"ImageObjectResized\", imageWidth:\r\n\t\t\t\t\t\t\t\t224, imageHeight: 224, inputColumnName: \"ImageObject\"))\r\n\t\t\t\t\t.Append(mlContext.Transforms.ExtractPixels(outputColumnName: \"Pixels\", inputColumnName: \"ImageObjectResized\"))\r\n\t\t\t\t\t.Append(mlContext.Transforms.DnnFeaturizeImage(outputColumnName: \"FeaturizedImage\",\r\n\t\t\t\t\t\t\t\tm => m.ModelSelector.ResNet101(mlContext, m.OutputColumn, m.InputColumn), inputColumnName: \"Pixels\"));\r\n\r\n\tvar transformedData = pipeline.Fit(data).Transform(data);\r\n\r\n\t//Extractor image features\r\n\tvar FeaturizedImageValues = transformedData.GetColumn<float[]>(\"FeaturizedImage\").ToArray();\r\n\r\n\treturn FeaturizedImageValues[0];\r\n}\r\n```\r\n\r\n\r\n\r\n\r\n**System Information** \r\n - OS & Version:Windows 10\r\n - ML.NET Version: 2.0.1\r\n - .NET Version:  .NET 7.0\r\n - microsoft.ml.dnnimagefeaturizer.resnet101 (0.20.1)\r\n - microsoft.ml.dnnimagefeaturizer.resnet50 (0.20.1)\r\n - microsoft.ml.dnnimagefeaturizer.resnet18 (0.20.1)\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6580","RelatedDescription":"Open issue \"ResNet101 [ShapeInferenceError] Attribute pads has incorrect size\" (#6580)"},{"Id":"1597840921","IsPullRequest":false,"CreatedAt":"2023-02-24T03:27:56","Actor":"tloten","Number":"6579","RawContent":null,"Title":"PredictionEngine does not Dispose all resources properly","State":"open","Body":"**System Information:**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: ML.Net 2.0.1\r\n - .NET Version: .NET 7.0\r\n\r\n**Describe the bug**\r\n`PredictionEngine.Dispose()` does not dispose of all resources, leaving hundreds of MB of memory behind.\r\nSpecifically, I suspect the `_outputRow` member in `PredictionEngineBase` is the culprit, as it is not disposed anywhere. Manually disposing of that using reflection hacks causes the expected memory to be free'd up.\r\n\r\n**To Reproduce**\r\nUnfortunately I can't give a code-based repro as I'm using a proprietary ONNX model. However I suspect it's reproducable with other models too.\r\nSteps to reproduce the behavior:\r\n1. Create a pipeline & predictionEngine - I'm using an object-detection ONNX model, being fed a 1280x720 image.\r\n2. Call `predictionEngine.Predict()`\r\n3. To ensure a clean slate, call `GC.Collect()` and `GC.WaitForPendingFinalizers()`.\r\n4. Log memory used (560MB in my case)\r\n5. Call `predictionEngine.Dispose()`, and ensure no references to the PredictionEngine exist any more\r\n6. Call `GC.Collect()` & log memory (458MB in my case). This still seems very high. Furthermore:\r\n8. Call `GC.WaitForPendingFinalizers();` & log memory (72MB in my case). This is now back to where you'd expect it, and suggests that `PredictionEngine` has left some disposables behind.\r\n\r\n\r\n**Expected behavior**\r\nI'd expect the memory usage after calling `predictionEngine.Dispose()` would drop significantly. I wouldn't expect anything to be left on the Finalizer queue.\r\n\r\n**Additional context**\r\nWhen I poked around in a memory profiler, it seemed like there were some OnnxRuntime `OrtValue` items left on the finalizer queue, and they _seem_ to be ultimately owned by the `PredictionEngineBase._outputRow` field.\r\nSo using a reflection hack, I disposed `_outputRow` myself and it appeared that all memory was being released:\r\n```\r\nvar outputRow = typeof(PredictionEngineBase<TfOdInputData, TfOdOutputData>)\r\n    .GetField(\"_outputRow\", BindingFlags.NonPublic | BindingFlags.Instance)\r\n    .GetValue(predictionEngine);\r\n\r\n((IDisposable) outputRow).Dispose();\r\npredictionEngine.Dispose();\r\n```\r\nLooking at https://github.com/dotnet/machinelearning/blob/main/src/Microsoft.ML.Data/Prediction/PredictionEngine.cs#L129 it seems like `disposer` should get rid of both inputRow and outputRow.","Url":"https://github.com/dotnet/machinelearning/issues/6579","RelatedDescription":"Open issue \"PredictionEngine does not Dispose all resources properly\" (#6579)"},{"Id":"1580852255","IsPullRequest":false,"CreatedAt":"2023-02-22T20:24:59","Actor":"superichmann","Number":"6565","RawContent":null,"Title":"System.OperationCanceledException when calling experimentResult.BestRun.Estimator.Fit","State":"closed","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Microsoft Windows 10 Pro\r\n - ML.NET Version: ML.NET 2.0.1\r\n - AutoML version:  AutoML 0.20.1\r\n - .NET Version: .NET 6.0\r\n\r\n**Describe the bug**\r\nAs outlined in [this ](https://github.com/dotnet/machinelearning-samples/tree/main/samples/csharp/getting-started/AdvancedExperiment_AutoML#step-10-re-fit-best-pipeline)tutorial, a model can be refitted to include the latest data used in the validation phase of the AutoML experiment.\r\n\r\nWhen calling this method, as in my case:\r\n`        private static ITransformer RefitBestPipeline(ExperimentResult<RegressionMetrics> experimentResult,IDataView final)\r\n        {\r\n            RunDetail<RegressionMetrics> bestRun = experimentResult.BestRun;\r\n            return bestRun.Estimator.Fit(final);\r\n        }`\r\nthe return line causes the exception.\r\n\r\n**To Reproduce**\r\n\r\n1. Create a regression automl experiment in C#.\r\n2. run the experiment on train validation data split\r\n3. After experiment finished, call the `RefitBestPipeline` function with the best model and the entire IDataView (train+validation)\r\n4. The error should occur on the return line\r\n\r\n**Expected behavior**\r\nThe function should return the new ITransformer\r\n\r\n**Screenshots, Code, Sample Projects**\r\n```\r\nSystem.OperationCanceledException\r\n  HResult=0x8013153B\r\n  Message=Operation was canceled.\r\n  Source=Microsoft.ML.Core\r\n  StackTrace:\r\n   at Microsoft.ML.Runtime.Contracts.CheckAlive(IHostEnvironment env)\r\n   at Microsoft.ML.Trainers.FastTree.DataConverter.MemImpl.InitializeBins(Int32 maxBins, IParallelTraining parallelTraining)\r\n   at Microsoft.ML.Trainers.FastTree.DataConverter.MemImpl..ctor(RoleMappedData data, IHost host, Int32 maxBins, Single maxLabel, Boolean noFlocks, Int32 minDocsPerLeaf, PredictionKind kind, IParallelTraining parallelTraining, Int32[] categoricalFeatureIndices, Boolean categoricalSplit)\r\n   at Microsoft.ML.Trainers.FastTree.DataConverter.Create(RoleMappedData data, IHost host, Int32 maxBins, Single maxLabel, Boolean diskTranspose, Boolean noFlocks, Int32 minDocsPerLeaf, PredictionKind kind, IParallelTraining parallelTraining, Int32[] categoricalFeatureIndices, Boolean categoricalSplit)\r\n   at Microsoft.ML.Trainers.FastTree.ExamplesToFastTreeBins.FindBinsAndReturnDataset(RoleMappedData data, PredictionKind kind, IParallelTraining parallelTraining, Int32[] categoricalFeaturIndices, Boolean categoricalSplit)\r\n   at Microsoft.ML.Trainers.FastTree.FastTreeTrainerBase`3.ConvertData(RoleMappedData trainData)\r\n   at Microsoft.ML.Trainers.FastTree.FastForestRegressionTrainer.TrainModelCore(TrainContext context)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at mlnet.AutoMLHelper.RefitBestPipeline(ExperimentResult`1 experimentResult, IDataView final)\r\n```\r\n\r\n\r\n**Additional context**\r\n**Note:** I have read all of the other opened issues on this exception type and none of the proposed workarounds worked.\r\nIf relevant, In my case, the `mlContext` used to load the data is different then the one performing the experiment.\r\nPerhaps the provided code example is too old now? (4 years) and irrelevant anymore?\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6565","RelatedDescription":"Closed issue \"System.OperationCanceledException when calling experimentResult.BestRun.Estimator.Fit\" (#6565)"},{"Id":"1588364090","IsPullRequest":true,"CreatedAt":"2023-02-22T20:24:58","Actor":"LittleLittleCloud","Number":"6572","RawContent":null,"Title":"fix 6565","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\nfix #6565","Url":"https://github.com/dotnet/machinelearning/pull/6572","RelatedDescription":"Closed or merged PR \"fix 6565\" (#6572)"},{"Id":"1595350643","IsPullRequest":false,"CreatedAt":"2023-02-22T15:50:10","Actor":"lindadamama","Number":"6578","RawContent":null,"Title":"Can the onnxruntime load the onnx model using GPU resources?","State":"open","Body":"Can the onnxruntime load the onnx model using GPU resources?","Url":"https://github.com/dotnet/machinelearning/issues/6578","RelatedDescription":"Open issue \"Can the onnxruntime load the onnx model using GPU resources?\" (#6578)"},{"Id":"1589029674","IsPullRequest":false,"CreatedAt":"2023-02-21T09:16:05","Actor":"NMSAzulX","Number":"6574","RawContent":null,"Title":"Model keep learning....","State":"closed","Body":"**Is your feature request related to a problem? Please describe.**\r\n\r\nI meet a problem. How does the MulticlassClassification-Model train new data continuously?\r\nTake the old model as the starting point and train the new model.\r\n\r\nI tried :\r\n```c#\r\nvar newModel = pipeline.Fit(newData);\r\n_ model = _ model.Append(newModel);\r\n```\r\nThis doesn't work.\r\n\r\n\r\n**Describe the solution you'd like**\r\n\r\n```c#\r\n_model = _model.Train(newData);\r\n```\r\n\r\n**Describe alternatives you've considered**\r\n\r\n\r\n**Additional context**\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6574","RelatedDescription":"Closed issue \"Model keep learning....\" (#6574)"},{"Id":"1592529931","IsPullRequest":false,"CreatedAt":"2023-02-20T22:43:59","Actor":"LittleLittleCloud","Number":"6577","RawContent":null,"Title":"Bring few-shot HPO into AutoML","State":"open","Body":"## What's few-shot/zero-shot HPO\r\nFew-shot HPO is a  both promising-performance and budget-friendly HPO solution. It is divided into two processes: offline processing and online processing. In offline processing, it searches on a given search space over a bunch of datasets and selects a hyper-parameter set {c} based on certain criteria. The dimension of search space and size of datasets can be very large in order to cover as many distribution of dataset as possible. In online processing, it picks N hyper-parameter configurations from {c} based on user's training dataset. If N=1, this HPO algorithm is called zero-shot as it only attempts once on training dataset. If N >1, this HPO algorithm is called few-shot.\r\n\r\nThe advantage of few-shot/zero-shot HPO is it introduces prior knowledge learned from offline process, which helps resolve cold-start problem. And with the help of prior knowledge, it also prevent exploring dead-end configurations.\r\n\r\n## What will benefit most from few-shot/zero-shot HPO\r\nDeep learning scenarios like image-classification and NLP tasks.\r\n\r\n## How will few-shot/zero-shot HPO be leveraged in ML.Net\r\nfew-shot/zero-shot HPO will be leveraged as a tuning algorithm in AutoML.Net, just like other tuning algorithms.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6577","RelatedDescription":"Open issue \"Bring few-shot HPO into AutoML\" (#6577)"},{"Id":"1588869460","IsPullRequest":false,"CreatedAt":"2023-02-17T07:19:33","Actor":"rzechu","Number":"6573","RawContent":null,"Title":"One or more errors occurred. (Schema mismatch for score column 'Score': expected vector of two or more items of type Single, got Vector<Single, 1> Arg_ParamName_Name)","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: ML.NET v0.20.0\r\n - .NET Version:  NET 6.0\r\n\r\n**Describe the bug**\r\nOne or more errors occurred. (Schema mismatch for score column 'Score': expected vector of two or more items of type Single, got Vector<Single, 1> Arg_ParamName_Name)\r\non AutoML Multiclasstraining\r\n\r\n```\r\nSELECT  \r\nCAST(DecimalColumn1 as real) as [DecimalColumn1], \r\nCAST(IntColumn2 as real) as [IntColumn2], \r\nCAST(IntColumn3 as real) as [IntColumn3], \r\nCAST(IntColumn4 as real) as [IntColumn4], \r\ncast([LongStringColumn1] as varchar(2000)) as [LongStringColumn1],  /*nvarchar(max) */\r\n[Name], /*nvarchar(128) */\r\n[ShortStringColumn3] as [ShortStringColumn3], /*nvarchar(128) */\r\ncast([LongStringColumn3] as varchar(2000)) as [LabelColumn]  /*nvarchar(max) */\r\nFROM Documents \r\n```\r\n![image](https://user-images.githubusercontent.com/45091660/219575314-5246a738-d1c2-4e42-9c2a-8f90225fdfbd.png)\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. MulticlassClassification\r\n2. Loading data from MSSQL Database\r\n```\r\nvar loader = MLContext.Data.CreateDatabaseLoader(columns.ToArray());\r\nvar dbSource = new DatabaseSource(SqlClientFactory.Instance, connectionString, sqlQuery);\r\nvar iDataView = loader.Load(dbSource);\r\n```\r\n```\r\ncolumns\r\n    [0]: \"Name=DecimalColumn1      Type=Single\"\r\n    [1]: \"Name=IntColumn2               Type=Single\"\r\n    [2]: \"Name=IntColumn3               Type=Single\"\r\n    [3]: \"Name=IntColumn4               Type=Single\"\r\n    [4]: \"Name=LongStringColumn1  Type=String\"\r\n    [5]: \"Name=Name                        Type=String\"\r\n    [6]: \"Name=ShortStringColumn3 Type=String\"\r\n    [7]: \"Name=LabelColumn             Type=String\"\r\n```\r\n\r\n```\r\niDataView\r\n    [0]: \"Index=0 Name=DecimalColumn1     Type=Single IsHidden=False\"\r\n    [1]: \"Index=1 Name=IntColumn2               Type=Single IsHidden=False\"\r\n    [2]: \"Index=2 Name=IntColumn3               Type=Single IsHidden=False\"\r\n    [3]: \"Index=3 Name=IntColumn4               Type=Single IsHidden=False\"\r\n    [4]: \"Index=4 Name=LongStringColumn1  Type=String IsHidden=False\"\r\n    [5]: \"Index=5 Name=Name                         Type=String IsHidden=False\"\r\n    [6]: \"Index=6 Name=ShortStringColumn3 Type=String IsHidden=False\"\r\n    [7]: \"Index=7 Name=LabelColumn             Type=String IsHidden=False\"\r\n```\r\niDataView.Preview()\r\n![image](https://user-images.githubusercontent.com/45091660/219575936-ee584f58-a8dd-4bcd-8b80-3d71d91994ca.png)\r\n\r\n3. \r\n![image](https://user-images.githubusercontent.com/45091660/219574125-863951d5-a87a-44cc-8ac1-ca96db0354d9.png)\r\n```\r\nvar experiment = MLContext.Auto().CreateMulticlassClassificationExperiment(multiClassExperimentSettings);\r\nvar experimentResult = experiment.Execute(trainData: iDataView, labelColumnName: runExperimentDto.LabelColumnName, progressHandler: progressHandler);\r\n```\r\n\r\nError:\r\n```\r\nSchema mismatch for score column 'Score': expected vector of two or more items of type Single, got Vector<Single, 1> (Parameter 'schema')\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)\r\n   at Microsoft.ML.AutoML.AutoMLExperiment.Run()\r\n   at Microsoft.ML.AutoML.MulticlassClassificationExperiment.Execute(IDataView trainData, ColumnInformation columnInformation, IEstimator`1 preFeaturizer, IProgress`1 progressHandler)\r\n   at AI.AutoML.Trainers.MulticlassClassification.RunExperiment(IDataView trainingDataView, RunExperimentDto runExperimentDto) in C:\\.....\\_myapp.cs:line 63\r\n```\r\n\r\nInnerException\r\n```\r\nSchema mismatch for score column 'Score': expected vector of two or more items of type Single, got Vector<Single, 1> (Parameter 'schema')\r\n\r\n   at Microsoft.ML.Data.MulticlassClassificationEvaluator.CheckScoreAndLabelTypes(RoleMappedSchema schema)\r\n   at Microsoft.ML.Data.EvaluatorBase`1.CheckColumnTypes(RoleMappedSchema schema)\r\n   at Microsoft.ML.Data.EvaluatorBase`1.Microsoft.ML.Data.IEvaluator.Evaluate(RoleMappedData data)\r\n   at Microsoft.ML.Data.MulticlassClassificationEvaluator.Evaluate(IDataView data, String label, String score, String predictedLabel)\r\n   at Microsoft.ML.MulticlassClassificationCatalog.<>c__DisplayClass6_0.<CrossValidate>b__0(CrossValidationResult x)\r\n   at System.Linq.Enumerable.SelectArrayIterator`2.ToArray()\r\n   at Microsoft.ML.AutoML.MulticlassClassificationRunner.Run(TrialSettings settings)\r\n   at System.Threading.Tasks.Task`1.InnerInvoke()\r\n   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)\r\n   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(Thread threadPoolThread, ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location ---\r\n   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(Thread threadPoolThread, ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.ML.AutoML.AutoMLExperiment.<RunAsync>d__26.MoveNext()\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/45091660/219575172-ffb91264-bc70-4493-909b-99d294078210.png)\r\n\r\n\r\n**Expected behavior**\r\nThis case should work (I am using same scenario for many other columns and only few cases gives this error - propably related to nvarchar(max) columns or some kind of mix columns\r\nI am many times using  2 varchars + 2 ints as source with  int/varchar output and work without any doubts\r\nOr should be understandable workaround","Url":"https://github.com/dotnet/machinelearning/issues/6573","RelatedDescription":"Open issue \"One or more errors occurred. (Schema mismatch for score column 'Score': expected vector of two or more items of type Single, got Vector<Single, 1> Arg_ParamName_Name)\" (#6573)"},{"Id":"1588307900","IsPullRequest":true,"CreatedAt":"2023-02-16T20:17:48","Actor":"LittleLittleCloud","Number":"6571","RawContent":null,"Title":"fix #6570","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n#6570 \r\n","Url":"https://github.com/dotnet/machinelearning/pull/6571","RelatedDescription":"Open PR \"fix #6570\" (#6571)"},{"Id":"1586517228","IsPullRequest":false,"CreatedAt":"2023-02-15T20:33:58","Actor":"CBrauer","Number":"6570","RawContent":null,"Title":"Strange error in AutoML","State":"open","Body":"**My System Information is:**\r\n-Microsoft Visual Studio Professional 2022\r\n-Version 17.5.0 Preview 6.0\r\n-VisualStudio.17.Preview/17.5.0-pre.6.0+33402.96\r\n-NET 7.0\r\n\r\n\r\n**Describe the bug**\r\nThe production code was running fine with ML.NET version 1.7.1.\r\n\r\nHere is a screen shot of the error:\r\n\r\n![AutoML Bug](https://user-images.githubusercontent.com/1317234/219145269-4981a058-7c4a-47a0-a399-82c95e145995.PNG)\r\n\r\nI have put a complete, reproducible solution with data on my GitHub account:\r\nhttps://github.com/CBrauer/Error-in-AutoML\r\n\r\nThis is a complete reproducible solution that demonstrate the error.\r\nPlease let me know if you see the same error message.\r\n\r\nCharles\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6570","RelatedDescription":"Open issue \"Strange error in AutoML\" (#6570)"},{"Id":"1582939532","IsPullRequest":true,"CreatedAt":"2023-02-13T19:34:28","Actor":"michaelgsharp","Number":"6569","RawContent":null,"Title":"Adds the ability to load a pre-trained LightGBM file and import it into ML.Net.","State":"open","Body":"Fixes #6296.\r\n\r\nAdds the ability to load a pre-trained LightGBM file and import it into ML.Net.","Url":"https://github.com/dotnet/machinelearning/pull/6569","RelatedDescription":"Open PR \"Adds the ability to load a pre-trained LightGBM file and import it into ML.Net.\" (#6569)"},{"Id":"1582724009","IsPullRequest":false,"CreatedAt":"2023-02-13T17:00:50","Actor":"michaelgsharp","Number":"6568","RawContent":null,"Title":"Survey: Repo contribution experience 2023","State":"open","Body":"A couple years ago we surveyed you the members of the community in this repo to learn how we were doing as maintainers.\r\n\r\nOne of the things we learned is that we needed to be more responsive to issues and PR’s. Since we added community triagers, updated our area ownership and added automated workflows. To offer more visibility into product planning we developed an app to view our epics and stories. To make the experience of offering a PR easier, we have added documentation, worked to increase build performance and squashed flaky tests.\r\n\r\nIt's time to repeat the same survey. Whether you've been involved for years or you're relatively new please tell us about your experience participating and contributing to the project. It should only take a few minutes, and you can answer for up to 3 repos.\r\n\r\nhttps://www.surveymonkey.com/r/8KTX9VT?Source=RepoLink","Url":"https://github.com/dotnet/machinelearning/issues/6568","RelatedDescription":"Open issue \"Survey: Repo contribution experience 2023\" (#6568)"},{"Id":"1582514359","IsPullRequest":false,"CreatedAt":"2023-02-13T15:02:02","Actor":"gbanuk2","Number":"6567","RawContent":null,"Title":"Training never returns no matter what is set for SetTrainingTimeInSeconds","State":"open","Body":"**System Information (please complete the following information):**\r\n - Windows 10 \r\n - ML 2.0.1\r\n - .Net 6.0\r\n\r\n**Describe the bug**\r\nNo matter what I set for SetTrainingTimeInSeconds, running the experiment never returns. I'm using the example from:\r\nhttps://learn.microsoft.com/en-us/dotnet/machine-learning/how-to-guides/how-to-use-the-automl-api\r\n\r\n**To Reproduce**\r\n```\r\n        public static void Train()\r\n        {\r\n            // Initialize MLContext\r\n            MLContext ctx = new MLContext();\r\n\r\n            // Define data path\r\n            var dataPath = Path.GetFullPath(@\"c:\\temp\\AutoMl\\Material.csv\");\r\n\r\n            // Infer column information\r\n            ColumnInferenceResults columnInference =\r\n                ctx.Auto().InferColumns(dataPath, labelColumnName: \"value\",\r\n                    groupColumns: false);\r\n\r\n            // Create text loader\r\n            TextLoader loader =\r\n                ctx.Data.CreateTextLoader(columnInference.TextLoaderOptions);\r\n\r\n            // Load data into IDataView\r\n            IDataView data = loader.Load(dataPath);\r\n\r\n            DataOperationsCatalog.TrainTestData trainValidationData =\r\n                ctx.Data.TrainTestSplit(data, testFraction: 0.2);\r\n\r\n            SweepablePipeline pipeline =\r\n                ctx.Auto().Featurizer(data, columnInformation: columnInference.ColumnInformation)\r\n                    .Append(ctx.Auto().Regression(labelColumnName: columnInference.ColumnInformation\r\n                            .LabelColumnName));\r\n\r\n            AutoMLExperiment experiment = ctx.Auto().CreateExperiment();\r\n\r\n            experiment\r\n                .SetPipeline(pipeline)\r\n                .SetRegressionMetric(RegressionMetric.RSquared, labelColumn: columnInference.ColumnInformation.LabelColumnName)\r\n                .SetTrainingTimeInSeconds(30)\r\n                .SetDataset(trainValidationData);\r\n\r\n            // Log experiment trials\r\n            ctx.Log += (_, e) =>\r\n            {\r\n                if (e.Source.Equals(\"AutoMLExperiment\"))\r\n                {\r\n                    Console.WriteLine(e.RawMessage);\r\n                }\r\n            };\r\n            TrialResult experimentResults =  experiment.Run();\r\n\r\n        }\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/6567","RelatedDescription":"Open issue \"Training never returns no matter what is set for SetTrainingTimeInSeconds\" (#6567)"},{"Id":"1582372431","IsPullRequest":true,"CreatedAt":"2023-02-13T13:38:42","Actor":"dotnet-maestro[bot]","Number":"6566","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1c26c342-7dbd-4e18-3778-08daa2f83374)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1c26c342-7dbd-4e18-3778-08daa2f83374\r\n- **Build**: 20230222.4\r\n- **Date Produced**: February 22, 2023 6:52:41 PM UTC\r\n- **Commit**: 2e0fab0209c66d181d93b0d03bc267db5bde75be\r\n- **Branch**: refs/heads/release/7.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.23073.6 to 7.0.0-beta.23122.4][4]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 7.0.0-beta.23073.6 to 7.0.0-beta.23122.4][4]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.23073.6 to 7.0.0-beta.23122.4][4]\r\n  - **Microsoft.DotNet.SignTool**: [from 7.0.0-beta.23073.6 to 7.0.0-beta.23122.4][4]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 7.0.0-beta.23073.6 to 7.0.0-beta.23122.4][4]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.23073.6 to 7.0.0-beta.23122.4][4]\r\n\r\n[4]: https://github.com/dotnet/arcade/compare/5f85193...2e0fab0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1c26c342-7dbd-4e18-3778-08daa2f83374)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6566","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#6566)"},{"Id":"1580322792","IsPullRequest":false,"CreatedAt":"2023-02-10T21:00:41","Actor":"LittleLittleCloud","Number":"6563","RawContent":null,"Title":"Add Summary() for ITransformer","State":"open","Body":"**Describe the solution you'd like**\r\nAn extension `Summary()` method for `ITransformer` that returns a string that contains information like the hyper-parameter/Transformer name if `ITransformer` is a single Transformer, and returns a summary of pipeline if `ITransformer` is `ITransformeChain`\r\n\r\n**Additional context**\r\nThe information can be useful for debugging purposes, and also help simplify the code generator in ModelBuilder, which currently relies on a manul-maintained wrapper for all transformers to pass such information\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6563","RelatedDescription":"Open issue \"Add Summary() for ITransformer\" (#6563)"},{"Id":"1580001262","IsPullRequest":false,"CreatedAt":"2023-02-10T16:33:06","Actor":"superichmann","Number":"6562","RawContent":null,"Title":"No comment on behavior when sending the pipeline as parameter to AutoML experiment","State":"open","Body":"When sending a `pipeline` containing `DropColumns` to a string type column to Execute of AutoML experiment as the `preFeaturizer` there is an exception `ArgumentOutOfRangeException: Could not find input column 'StringColumn' (Parameter 'inputSchema')`.\r\n\r\nPerhaps consider adding documentation to this behavior either on this page or on AutoML Execute page.\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for learn.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: f9a0f970-a53e-b319-f210-15cb90c741fe\r\n* Version Independent ID: dce66202-02e1-ce5f-b9da-a6df7dfb4950\r\n* Content: [TransformExtensionsCatalog.DropColumns(TransformsCatalog, String\\[\\]) Method (Microsoft.ML)](https://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.transformextensionscatalog.dropcolumns?view=ml-dotnet)\r\n* Content Source: [dotnet/xml/Microsoft.ML/TransformExtensionsCatalog.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML/TransformExtensionsCatalog.xml)\r\n* Product: **dotnet-ml-api**\r\n* GitHub Login: @natke\r\n* Microsoft Alias: **nakersha**","Url":"https://github.com/dotnet/machinelearning/issues/6562","RelatedDescription":"Open issue \"No comment on behavior when sending the pipeline as parameter to AutoML experiment\" (#6562)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-03-06T03:30:22.9208309Z","RunDurationInMilliseconds":525}