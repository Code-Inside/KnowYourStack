{"Data":{"GitHub":{"Issues":[{"Id":"636702783","IsPullRequest":true,"CreatedAt":"2020-06-11T04:14:47","Actor":"frank-dong-ms","Number":"5229","RawContent":null,"Title":"add random seed when create random temp folder to avoid conflict","State":"open","Body":"address issue: https://github.com/dotnet/machinelearning/issues/5210\r\n\r\nWe are create random temp folder during model load, sometimes there are file name conflict when load models in multi-threading as the random temp folder name is not seeded.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5229","RelatedDescription":"Open PR \"add random seed when create random temp folder to avoid conflict\" (#5229)"},{"Id":"636696451","IsPullRequest":true,"CreatedAt":"2020-06-11T03:53:45","Actor":"frank-dong-ms","Number":"5228","RawContent":null,"Title":"Issue 3234: use model schema type instead of class definition schema","State":"open","Body":"address issue: https://github.com/dotnet/machinelearning/issues/3234 \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5228","RelatedDescription":"Open PR \"Issue 3234: use model schema type instead of class definition schema\" (#5228)"},{"Id":"636619681","IsPullRequest":true,"CreatedAt":"2020-06-10T23:57:14","Actor":"antoniovs1029","Number":"5227","RawContent":null,"Title":"Fixed issue when running CrossValidation from an entrypoint","State":"open","Body":"Fixes #5221 . The NimbusML test mentioned there passes with the changes on this PR.\r\n\r\nTo fix the particular problem described in https://github.com/dotnet/machinelearning/issues/5221#issuecomment-642325157 the solution I implemented here was simply to create a new column by simply copying the original stratificationColumn. This way the new column can safely be dropped by the callers of the `CreateStratificationColumn` method.\r\n\r\n-----\r\n\r\n# NOTE:\r\nI'm having some issues running all the tests of NimbusML to check if this change doesn't brake anything else. I wouldn't expect it does. I'm opening this PR for review in the meantime, but I'd still need to check NimbusML tests before merging this.","Url":"https://github.com/dotnet/machinelearning/pull/5227","RelatedDescription":"Open PR \"Fixed issue when running CrossValidation from an entrypoint\" (#5227)"},{"Id":"635311962","IsPullRequest":false,"CreatedAt":"2020-06-10T22:02:14","Actor":"Vya4ik003","Number":"5219","RawContent":null,"Title":"Train a simple neural network","State":"closed","Body":"### System information\r\n\r\n- **OS Windows 7**:\r\n- **.NET 3.1.300**: \r\n\r\n### Issue\r\n\r\n- **What did you do?** - I'm trying to create a simple neural network that returns a given number\r\n- **What happened?** - I give bad prediction\r\n- **What did you expect?** - I expect to get number, which I give to model\r\n\r\n### Source code / logs\r\n\r\n```\r\n    class Program\r\n    {\r\n        static Input[] trainData;\r\n\r\n        static void CreateData(int count = 100)\r\n        {\r\n            trainData = new Input[count];\r\n\r\n            for (int i = 0; i < count; i++)\r\n            {\r\n                trainData[i] = new Input { Column1 = i, Result = i };\r\n            }\r\n        }\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            CreateData();\r\n            var mlContext = new MLContext();\r\n\r\n            var dataView = mlContext.Data.LoadFromEnumerable(trainData);\r\n            var pipeline = mlContext.Transforms.CopyColumns(\"Label\", \"Result\")\r\n                .Append(mlContext.Transforms.Concatenate(\"Features\", \"Column1\"))\r\n                .Append(mlContext.Regression.Trainers.Sdca()); \r\n\r\n            var model = pipeline.Fit(dataView);\r\n\r\n            var predictor = mlContext.Model.CreatePredictionEngine<Input, Output>(model);\r\n            var prediction = predictor.Predict(new Input { Column1 = 178, Result = 0});\r\n\r\n            Console.WriteLine(prediction.Result); //get 173\r\n            //with FastTree() train Method I get 94\r\n            Console.Beep(500, 100);\r\n            Console.Read();\r\n        }\r\n    }\r\n\r\n    class Input\r\n    {\r\n        public float Column1;\r\n\r\n        public float Result;\r\n    }\r\n    class Output\r\n    {\r\n        [ColumnName(\"Score\")]\r\n        public float Result;\r\n    }\r\n```\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5219","RelatedDescription":"Closed issue \"Train a simple neural network\" (#5219)"},{"Id":"636503402","IsPullRequest":true,"CreatedAt":"2020-06-10T21:06:53","Actor":"wangyems","Number":"5226","RawContent":null,"Title":"remove unnecessary comments in ONNX.cs","State":"closed","Body":"Remove unnecessary comments as right now there is no obvious precision difference between ML.NET model and Onnx model\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5226","RelatedDescription":"Closed or merged PR \"remove unnecessary comments in ONNX.cs\" (#5226)"},{"Id":"636319506","IsPullRequest":false,"CreatedAt":"2020-06-10T20:40:21","Actor":"Vya4ik003","Number":"5225","RawContent":null,"Title":"Find Regression Trainer that support Vector<> type of column \"Score\"","State":"closed","Body":"### System information\r\n\r\n- **OS Windows 7**:\r\n- **.NET 3.1.300**: \r\n\r\n### Issue\r\n\r\n- **What did you do?** - I'm trying to get prediction with Array type.\r\n- **What happened?** - column \"Label\" must be Single, and got Vector<Single>\r\nAre there RegressionTrainers that support Vector<> output?\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5225","RelatedDescription":"Closed issue \"Find Regression Trainer that support Vector<> type of column \"Score\"\" (#5225)"},{"Id":"631072530","IsPullRequest":true,"CreatedAt":"2020-06-10T18:13:46","Actor":"michaelgsharp","Number":"5209","RawContent":null,"Title":"Removing featurizers now in ML.Net","State":"closed","Body":"This PR depends on PR #5205. Once that is in all the featurizer functionality that belongs in ML.Net itself will have been added already. We can then remove these 3 standalone transformers as they are now duplicate functionality.","Url":"https://github.com/dotnet/machinelearning/pull/5209","RelatedDescription":"Closed or merged PR \"Removing featurizers now in ML.Net\" (#5209)"},{"Id":"631412436","IsPullRequest":true,"CreatedAt":"2020-06-10T17:39:33","Actor":"mengaims","Number":"5212","RawContent":null,"Title":"Filter anomalies according to boundaries under AnomalyAndMargin mode","State":"closed","Body":"Fixed #5224 .\r\nFilter anomalies according to boundaries under AnomalyAndMargin mode in SrCnnEntireAnomalyDetector.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5212","RelatedDescription":"Closed or merged PR \"Filter anomalies according to boundaries under AnomalyAndMargin mode\" (#5212)"},{"Id":"636089763","IsPullRequest":false,"CreatedAt":"2020-06-10T17:39:32","Actor":"mengaims","Number":"5224","RawContent":null,"Title":"Filter anomalies according to boundaries under AnomalyAndMargin mode in SrCnnEntireAnomalyDetector","State":"closed","Body":"In previous code of SrCnnEntireAnomalyDetector, under AnomalyAndMargin mode, we calculated UpperBoundary and LowerBoundary according to user’s sensitivity setting, but didn’t update the IsAnomaly field according to the boundaries since we want to allow this flexibility to user.\r\n\r\nBut considering the completeness of SrCnnEntireAnomalyDetector as a feature, the most important output should be the judgement whether a point is anomaly or not, namely IsAnomaly. It will be confused if user set different sensitivities but get the same IsAnomaly results. So we need to add anomalies filtering by boundries to the SrCnnEntireAnomalyDetector.","Url":"https://github.com/dotnet/machinelearning/issues/5224","RelatedDescription":"Closed issue \"Filter anomalies according to boundaries under AnomalyAndMargin mode in SrCnnEntireAnomalyDetector\" (#5224)"},{"Id":"633229182","IsPullRequest":false,"CreatedAt":"2020-06-10T07:04:19","Actor":"DanBrook","Number":"5213","RawContent":null,"Title":"CoreDump on LoadTensorFlowModel ","State":"closed","Body":"### System information\r\n\r\n- **Windows 10 pro/18362.836**:\r\n- **.NET 4.7.2**: \r\n\r\n### Issue\r\n\r\n- **Trying to load TensorFlow model tensorflow_inception_graph **\r\n- **Illegal error**\r\n- **model loading**\r\n\r\n### Source code / logs\r\n Microsoft.ML.Transforms.TensorFlowModel tensorFlowModel = mlContext.Model.LoadTensorFlowModel(_inceptionTensorFlowModel);\r\nError occures on this line from microsoft manual. I have managed to load the model on my laptop and it works properly. When I have tried to run the same progect on my PC I had this error. Please help me to figure out wat is wrong. The problem is not in the code, becouse the same code works fine on the other machine. I have tried different versions of all libreries, but nothing helped.\r\n\r\nPC Information:\r\n\r\nProcessor: Intel(R) Core i7 CPU Q740 1.73GHz 1.73GHz \r\nRAM: 6.00 Gb\r\nx64\r\n\r\n\"WpfApplication2.exe\" (CLR v4.0.30319: DefaultDomain). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_64\\mscorlib\\v4.0_4.0.0.0__b77a5c561934e089\\mscorlib.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: DefaultDomain). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\WpfApplication2.exe\". Symbols loaded.\r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\PresentationFramework\\v4.0_4.0.0.0__31bf3856ad364e35\\PresentationFramework.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\WindowsBase\\v4.0_4.0.0.0__31bf3856ad364e35\\WindowsBase.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.Core\\v4.0_4.0.0.0__b77a5c561934e089\\System.Core.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System\\v4.0_4.0.0.0__b77a5c561934e089\\System.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_64\\PresentationCore\\v4.0_4.0.0.0__31bf3856ad364e35\\PresentationCore.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.Xaml\\v4.0_4.0.0.0__b77a5c561934e089\\System.Xaml.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\Remote Debugger\\x64\\Runtime\\Microsoft.VisualStudio.Debugger.Runtime.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.Configuration\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\System.Configuration.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.Xml\\v4.0_4.0.0.0__b77a5c561934e089\\System.Xml.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.Drawing\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\System.Drawing.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.Windows.Forms\\v4.0_4.0.0.0__b77a5c561934e089\\System.Windows.Forms.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\WindowsFormsIntegration\\v4.0_4.0.0.0__31bf3856ad364e35\\WindowsFormsIntegration.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"c:\\program files (x86)\\microsoft visual studio\\2019\\community\\common7\\ide\\commonextensions\\microsoft\\xamldiagnostics\\Framework\\x64\\Microsoft.VisualStudio.DesignTools.WpfTap.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\Xceed.Wpf.Toolkit.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\Xceed.Wpf.AvalonDock.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.Runtime.Serialization\\v4.0_4.0.0.0__b77a5c561934e089\\System.Runtime.Serialization.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\SMDiagnostics\\v4.0_4.0.0.0__b77a5c561934e089\\SMDiagnostics.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.ServiceModel.Internals\\v4.0_4.0.0.0__31bf3856ad364e35\\System.ServiceModel.Internals.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\PresentationFramework.Aero2\\v4.0_4.0.0.0__31bf3856ad364e35\\PresentationFramework.Aero2.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\Microsoft.ML.Data.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\netstandard\\v4.0_2.0.0.0__cc7b13ffcd2ddd51\\netstandard.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\Microsoft.ML.Core.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.ValueTuple\\v4.0_4.0.0.0__cc7b13ffcd2ddd51\\System.ValueTuple.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_64\\System.Data\\v4.0_4.0.0.0__b77a5c561934e089\\System.Data.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.ServiceModel\\v4.0_4.0.0.0__b77a5c561934e089\\System.ServiceModel.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\PresentationFramework-SystemXml\\v4.0_4.0.0.0__b77a5c561934e089\\PresentationFramework-SystemXml.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\PresentationFramework-SystemData\\v4.0_4.0.0.0__b77a5c561934e089\\PresentationFramework-SystemData.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\UIAutomationTypes\\v4.0_4.0.0.0__31bf3856ad364e35\\UIAutomationTypes.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\UIAutomationProvider\\v4.0_4.0.0.0__31bf3856ad364e35\\UIAutomationProvider.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\Accessibility\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\Accessibility.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.Numerics\\v4.0_4.0.0.0__b77a5c561934e089\\System.Numerics.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\PresentationFramework-SystemCore\\v4.0_4.0.0.0__b77a5c561934e089\\PresentationFramework-SystemCore.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\Microsoft.ML.TensorFlow.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\v\\Desktop\\test\\WpfApplication2\\bin\\Debug\\Microsoft.ML.DataView.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\System.Collections.Immutable.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\Microsoft.ML.ImageAnalytics.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\Microsoft.ML.StandardTrainers.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\Newtonsoft.Json.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\System.Memory.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\TensorFlow.NET.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\Google.Protobuf.dll\". Symbols loaded.\r\nProgram \"[6780] WpfApplication2.exe\" exited with code -1073741795 (0xc000001d) 'Illegal Instruction'.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5213","RelatedDescription":"Closed issue \"CoreDump on LoadTensorFlowModel \" (#5213)"},{"Id":"635783219","IsPullRequest":false,"CreatedAt":"2020-06-10T05:35:58","Actor":"CBrauer","Number":"5222","RawContent":null,"Title":"Trouble using RobustScaler","State":"closed","Body":"### System information\r\n\r\n- Microsoft Windows 10 Enterprise, Version\t10.0.18363 Build 18363\r\n\r\n- ML.NET v1.5\r\n\r\n### Issue\r\n\r\nI'm trying to transform my dataset with the RobustScaler.  The program compiles and runs, but I get the exception:  \r\n\r\n`Unable to find an entry point named 'RobustScalerFeaturizer_float_CreateEstimator' in DLL 'Featurizers'.`\r\n\r\nHere is a segment of my code where the exception is thrown:\r\n\r\n```\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Diagnostics;\r\nusing System.IO;\r\nusing System.Linq;\r\n\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.AutoML;\r\nusing Microsoft.ML.Data;\r\nusing Microsoft.ML.Featurizers;\r\n.\r\n.\r\n.\r\n    var trainDataView = mlContext.Data.LoadFromTextFile<ModelInput>(\r\n        path: @\"../../../data/train.csv\",\r\n        hasHeader: true,\r\n        separatorChar: ',');\r\n\r\n    RobustScalerTransformer model = null;\r\n    var pipeline = mlContext.Transforms.RobustScaler(\"vwapGain\");\r\n    try {\r\n      model = pipeline.Fit(trainDataView);\r\n    } catch (EntryPointNotFoundException ex) {\r\n      Console.WriteLine(\"{0}:\\n   {1}\", ex.GetType().Name, ex.Message);\r\n    }\r\n```\r\nHere is a list of the packages in my program:\r\n\r\n![image](https://user-images.githubusercontent.com/1317234/84204754-a16bcb80-aa60-11ea-85ae-c7776b5fdccd.png)\r\n\r\nAny suggestions will be greatly appreciated.\r\n\r\nCharles\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5222","RelatedDescription":"Closed issue \"Trouble using RobustScaler\" (#5222)"},{"Id":"635914795","IsPullRequest":true,"CreatedAt":"2020-06-10T05:35:40","Actor":"michaelgsharp","Number":"5223","RawContent":null,"Title":"fixed Microsoft.MLFeaturizer version in nuget and csproj","State":"closed","Body":"Fixes issue #5222 \r\n\r\nWhen I updated the Microsoft.MLFeaturizers version in the csproj file, I didn't do it in the .nuget package. This fixes the version discrepancy and updates them from the preview they were on to the latest full release.","Url":"https://github.com/dotnet/machinelearning/pull/5223","RelatedDescription":"Closed or merged PR \"fixed Microsoft.MLFeaturizer version in nuget and csproj\" (#5223)"},{"Id":"630373972","IsPullRequest":true,"CreatedAt":"2020-06-10T04:48:18","Actor":"michaelgsharp","Number":"5205","RawContent":null,"Title":"Added in new MissingValueReplacing method.","State":"closed","Body":"Adds in the missing values replacing method of `Mode`. Replaces missing values with the most frequent value in a column. In the case that multiple values have the same count, the first one encountered is the one that is returned.\r\n\r\nThis also moves a test helping method from OnnxConverstionTest.cs into the BaseTestBaseline class so that every test class can use it.","Url":"https://github.com/dotnet/machinelearning/pull/5205","RelatedDescription":"Closed or merged PR \"Added in new MissingValueReplacing method.\" (#5205)"},{"Id":"635599857","IsPullRequest":false,"CreatedAt":"2020-06-09T16:43:30","Actor":"ganik","Number":"5221","RawContent":null,"Title":"CrossValidation Macros stops working in 1.5.0","State":"open","Body":"ML.NET 1.5.0\r\n\r\nHave NimbusML (built with ML.NET 1.5.0, here is [PR](https://dev.azure.com/aifx/public/_build/results?buildId=2988&view=results) that does this )\r\nRun the tests in [test.cv](https://github.com/microsoft/NimbusML/blob/master/src/python/nimbusml/tests/model_selection/test_cv.py) \r\ntest_default_label2  fails with error:\r\nError: *** System.InvalidOperationException: 'Column 'GroupId' not found' StackTrace:    at Microsoft.ML.EntryPoints.TrainerEntryPointsUtils.FindColumn(IExceptionContext ectx, DataViewSchema schema, Optional`1 value)\r\nat Microsoft.ML.EntryPoints.TrainerEntryPointsUtils.Train[TArg,TOut](IHost host, TArg input, Func`1 createTrainer, Func`1 getLabel, Func`1 getWeight, Func`1 getGroup, Func`1 getName, Func`1 getCustom, ICalibratorTrainerFactory calibrator, Int32 maxCalibrationExamples)\r\nat Microsoft.ML.Trainers.LightGbm.LightGbm.TrainRanking(IHostEnvironment env, Options input)\r\n\r\nThis is a regression from ML.NET 1.5.0.preview2\r\n\r\nI did some debugging, it appears that once macros is expanded ColumnSelector Transform drops GroupId. ColumnSelector appears to be added by Macros expansion.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5221","RelatedDescription":"Open issue \"CrossValidation Macros stops working in 1.5.0\" (#5221)"},{"Id":"635591558","IsPullRequest":false,"CreatedAt":"2020-06-09T16:34:45","Actor":"ganik","Number":"5220","RawContent":null,"Title":"DateTimeTransformer cant find its own json data ","State":"open","Body":"ML.NET 1.5.0\r\nML.Featurizers 0.17.0\r\nFeaturizers 0.4.1\r\n\r\nRun NimbusML test_datetimesplitter.py method test_holidays. You get Exception:\r\n\r\nRuntimeError: Error: *** System.Exception: ''Canada' is not a supported country name'\r\nStackTrace:    at Microsoft.ML.Featurizers.DateTimeTransformer.TypedColumn.CreateTransformerFromEstimatorBase(HolidayList country)\r\nat Microsoft.ML.Featurizers.DateTimeTransformer..ctor(IHostEnvironment host, String inputColumnName, String columnPrefix, HolidayList country, DataViewSchema schema)\r\nat Microsoft.ML.Featurizers.DateTimeEstimator.Fit(IDataView input)\r\nat Microsoft.ML.Featurizers.DateTimeTransformerEntrypoint.DateTimeSplit(IHostEnvironment env, Options input)\r\n\r\nThis is regression from ML.NET 1.5.0.preview2. \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5220","RelatedDescription":"Open issue \"DateTimeTransformer cant find its own json data \" (#5220)"},{"Id":"635287882","IsPullRequest":true,"CreatedAt":"2020-06-09T09:57:22","Actor":"suxi-ms","Number":"5218","RawContent":null,"Title":"add threshold for RCA","State":"open","Body":"Update Root Cause Analysis interface.\r\n\r\n\r\n\r\n- [ ] For root cause analysis interface, we added a new parameter called anomalyDeltaThreshold for users to choose. \r\n- [ ] It won't break existing interface if some users are using it.\r\n- [ ] Fixes #5188 .\r\n- [ ] Related PR #4925 \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5218","RelatedDescription":"Open PR \"add threshold for RCA\" (#5218)"},{"Id":"635209687","IsPullRequest":false,"CreatedAt":"2020-06-09T08:13:19","Actor":"IvanAntipov","Number":"5217","RawContent":null,"Title":"Output vector size of FeaturizeText does not respect MaximumNgramsCount ","State":"open","Body":"### System information\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.201\r\n Commit:    b1768b4ae7\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.201\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.3\r\n  Commit:  4a9f85e9f8\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n\r\n### Issue\r\n\r\n- I build a pipline with ```FeaturizeText``` with MaximumNgramsCount = 50\r\n```\r\n\r\nlet featureEstimator = \r\n    let wordBagOptions = WordBagEstimator.Options(MaximumNgramsCount = [|50|]) \r\n    let textFeaturizeOptions =  \r\n        TextFeaturizingEstimator.Options(\r\n            OutputTokensColumnName = \"OutputTokens\",\r\n            CaseMode = Microsoft.ML.Transforms.Text.TextNormalizingEstimator.CaseMode.Lower,\r\n            KeepNumbers = true,\r\n            KeepPunctuations = false,\r\n            WordFeatureExtractor = wordBagOptions)\r\n    EstimatorChain()\r\n        .Append(mlContext.Transforms.Text.FeaturizeText(outputColumnName = \"Features\", options = textFeaturizeOptions, inputColumnNames =  [|\"Text\"|]))\r\n```\r\n\r\n- Features vector has a size of 1266 ``` Features: Vector<Single, 1266> ```\r\n- I expect features vector to be of size 50 (MaximumNgramsCount)\r\n[BowVectorSizeRepro.zip](https://github.com/dotnet/machinelearning/files/4750750/BowVectorSizeRepro.zip)\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5217","RelatedDescription":"Open issue \"Output vector size of FeaturizeText does not respect MaximumNgramsCount \" (#5217)"},{"Id":"634993255","IsPullRequest":true,"CreatedAt":"2020-06-08T23:13:21","Actor":"ttstanley","Number":"5216","RawContent":null,"Title":"U/tevin/code gen","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5216","RelatedDescription":"Open PR \"U/tevin/code gen\" (#5216)"},{"Id":"630336084","IsPullRequest":false,"CreatedAt":"2020-06-08T19:46:11","Actor":"wangyems","Number":"5203","RawContent":null,"Title":"ApplyOnnxModel() throw runtime error in an ongoing sample for onnx conversion","State":"closed","Body":"Can reproduce using https://github.com/dotnet/machinelearning/pull/5195/commits/0b1a59c95b281eedfd2bfb723b6b8e4e33182045\r\nThe related file is OnnxConversion.cs. \r\nJust curious why ML.NET model can make through but onnx model not.","Url":"https://github.com/dotnet/machinelearning/issues/5203","RelatedDescription":"Closed issue \"ApplyOnnxModel() throw runtime error in an ongoing sample for onnx conversion\" (#5203)"},{"Id":"634796243","IsPullRequest":false,"CreatedAt":"2020-06-08T17:18:13","Actor":"LaurensVanAcker","Number":"5215","RawContent":null,"Title":"Retrain Custom TensorFlow Model Feature Request","State":"open","Body":"I designed (not trained) a siamese CNN network in Keras (python) and exported it as a SavedModel with the random weights.\r\n_Input = 4 dimensions (left/right image, height, width, RGB).\r\nOutput = change of images being equal (sigmoid)\r\n\r\nBut I don't understand how I can train this model from .NET Core?\r\n\r\nWhen I use:\r\n```csharp\r\nusing var tensorFlowModel = mlContext.Model.LoadTensorFlowModel(\"./model\");\r\nvar pipeline = tensorFlowModel.ScoreTensorFlowModel(\r\n new[] { inputComparer.Name },\r\n new[] { outputComparer.Name }, addBatchDimensionInput: true);\r\n```\r\n\r\nThen I potentially can get the output from the model, but it's untrained, so this makes no sense.\r\nSo I need a trainer. I tried with LbfgsLogisticRegression but then I get \"Schema mismatch for label column 'StatefulPartitionedCall': expected Boolean, got Vector<Single>\" which makes sense as the Tensorflow model don't output Booleans, but a Vector<Single>. Do I need another trainer?\r\n\r\nWhen I use the [ImageClassification](https://docs.microsoft.com/en-us/dotnet/machine-learning/tutorials/image-classification-api-transfer-learning) from this tutorial, I can only train one of the embedded networks from ImageClassificationTrainer.Architecture. It's a class output instead of binary, but that's OK. One class is also binary. But I want to train my own network.\r\n\r\n[This example](https://github.com/dotnet/machinelearning/blob/master/test/Microsoft.ML.Tests/ScenariosWithDirectInstantiation/TensorflowTests.cs) was the closest I could find.\r\n\r\nHow do I train my binary output Tensorflow siamese network?\r\n\r\nThe reason I want to train this network from .NET Core instead of Python is to test the speed improvements and rollout something independently of Python.","Url":"https://github.com/dotnet/machinelearning/issues/5215","RelatedDescription":"Open issue \"Retrain Custom TensorFlow Model Feature Request\" (#5215)"},{"Id":"634326757","IsPullRequest":false,"CreatedAt":"2020-06-08T08:00:35","Actor":"gagy3798","Number":"5214","RawContent":null,"Title":"Unseen labels during retraining map to value \"0\", results in System.InvalidOperationException: 'No valid training instances found, all instances have missing features.' ","State":"open","Body":"### System information\r\n\r\n- Windows Server 2016\r\n- .NET Version 3.1.300\r\n\r\n### Issue\r\nI'm trying to do MultiClass LbfgsMaximumEntropy Re-training\r\nWhen trying to Fit new data, I get System.InvalidOperationException: 'No valid training instances found, all instances have missing features.' on row\r\nITransformer _keyToValueModel1 = _mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(\"Label\", \"Features\")\r\n        .Fit(transformedData, originalModelParameters.Model);\r\n[data1.zip](https://github.com/dotnet/machinelearning/files/4744624/data1.zip)\r\n\r\n\r\nI would appreciate either help or MultiClass LbfgsMaximumEntropy Re-training code sample.\r\n\r\n### Source code / logs\r\n\r\n```c#\r\n[data1.zip](https://github.com/dotnet/machinelearning/files/4744619/data1.zip)\r\n[data2.zip](https://github.com/dotnet/machinelearning/files/4744620/data2.zip)\r\n\r\n\r\npublic class GitHubIssueClassification\r\n  {\r\n    static List<GitHubIssueTransformed> testDatas = new List<GitHubIssueTransformed>()\r\n    {\r\n      new GitHubIssueTransformed() {Area=\"11\", Title=\"WHIRLPOOL AWE 50610\", Description=\"\" },\r\n      new GitHubIssueTransformed() {Area=\"14\", Title=\"FAGOR 4CC-130 E X\", Description=\"\" },\r\n      new GitHubIssueTransformed() {Area=\"19\", Title=\"AEG T8DFE68SC\", Description=\"\" },\r\n      new GitHubIssueTransformed() {Area=\"999\", Title=\"TEST 999\", Description=\"\" }\r\n    };\r\n\r\n    private static string _appPath => Path.GetDirectoryName(Environment.GetCommandLineArgs()[0]);\r\n    private static string _mainDataPath1 => Path.Combine(_appPath, \"..\", \"..\", \"..\", \"Data\", \"data1.csv\");\r\n    private static string _mainDataPath2 => Path.Combine(_appPath, \"..\", \"..\", \"..\", \"Data\", \"data2.csv\");\r\n    private static string _mainDataPath3 => Path.Combine(_appPath, \"..\", \"..\", \"..\", \"Data\", \"data3.csv\");\r\n    private static string _modelPath => Path.Combine(_appPath, \"..\", \"..\", \"..\", \"Models\", \"trainedModel.zip\");\r\n    private static string _keyToValueModelPath => Path.Combine(_appPath, \"..\", \"..\", \"..\", \"Models\", \"keyToValueModel.zip\");\r\n\r\n    static DataOperationsCatalog.TrainTestData splittedData;\r\n\r\n    private static MLContext _mlContext;\r\n    private static PredictionEngine<GitHubIssueTransformed, IssuePrediction> _predEngine;\r\n    private static ITransformer _trainedModel { get; set; }\r\n    private static ITransformer _keyToValueModel { get; set; }\r\n    static IDataView _trainingDataView;\r\n    public static void Run()\r\n    {\r\n      _mlContext = new MLContext(seed: 0);\r\n\r\n      var allData = _mlContext.Data.LoadFromTextFile<GitHubIssue>(_mainDataPath1, hasHeader: true);\r\n      splittedData = _mlContext.Data.TrainTestSplit(allData, testFraction: 0.09);\r\n      _trainingDataView = splittedData.TrainSet;\r\n      Console.WriteLine($\"=============== Finished Loading Dataset  ===============\");\r\n\r\n      var pipeline = ProcessData();\r\n      var transformedData = BuildAndTrainModel(_trainingDataView, pipeline);\r\n      Evaluate(_trainingDataView.Schema, transformedData, splittedData.TestSet);\r\n      PredictIssue_FirstLoadModelFromDisk();\r\n\r\n      SecondLap(_mlContext);\r\n    }\r\n\r\n    public static IEstimator<ITransformer> ProcessData()\r\n    {\r\n      Console.WriteLine($\"=============== Processing Data ===============\");\r\n      var pipeline = _mlContext.Transforms.Conversion.MapValueToKey(inputColumnName: \"Area\", outputColumnName: \"Label\")\r\n                      .Append(_mlContext.Transforms.Text.FeaturizeText(inputColumnName: \"Title\", outputColumnName: \"TitleFeaturized\"))\r\n                      .Append(_mlContext.Transforms.Text.FeaturizeText(inputColumnName: \"Description\", outputColumnName: \"DescriptionFeaturized\"))\r\n                      .Append(_mlContext.Transforms.Concatenate(\"Features\", \"TitleFeaturized\", \"DescriptionFeaturized\"))\r\n                      .AppendCacheCheckpoint(_mlContext);\r\n\r\n      Console.WriteLine($\"=============== Finished Processing Data ===============\");\r\n\r\n      return pipeline;\r\n    }\r\n\r\n    public static IDataView BuildAndTrainModel(IDataView trainingDataView, IEstimator<ITransformer> pipeline)\r\n    {\r\n      //var trainingPipeline = pipeline.Append(_mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy/*.SdcaMaximumEntropy*/(\"Label\", \"Features\"))\r\n      //    .Append(_mlContext.Transforms.Conversion.MapKeyToValue(\"PredictedLabel\"));\r\n      var trainingPipeline = pipeline.Append(_mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy/*.SdcaMaximumEntropy*/(\"Label\", \"Features\"));\r\n      //var keyToValuePipeline = _mlContext.Transforms.Conversion.MapKeyToValue(\"PredictedLabel\");\r\n      var keyToValuePipeline = trainingPipeline.Append(_mlContext.Transforms.Conversion.MapKeyToValue(\"Area\", \"PredictedLabel\"));\r\n\r\n      Console.WriteLine($\"=============== Training the model  ===============\");\r\n\r\n      _trainedModel = trainingPipeline.Fit(trainingDataView);\r\n      var transformedData = _trainedModel.Transform(trainingDataView);\r\n      _keyToValueModel = keyToValuePipeline.Fit(transformedData);\r\n\r\n      _mlContext.Model.Save(_trainedModel, trainingDataView.Schema, _modelPath);\r\n      _mlContext.Model.Save(_keyToValueModel, transformedData.Schema, _keyToValueModelPath);\r\n\r\n      Console.WriteLine($\"=============== Finished Training the model Ending time: {DateTime.Now.ToString()} ===============\");\r\n\r\n      // (OPTIONAL) Try/test a single prediction with the \"just-trained model\" (Before saving the model)\r\n      Console.WriteLine($\"=============== Single Prediction just-trained-model ===============\");\r\n\r\n      _predEngine = _mlContext.Model.CreatePredictionEngine<GitHubIssueTransformed, IssuePrediction>(_keyToValueModel);\r\n      foreach (var testIssue in testDatas)\r\n      {\r\n        var prediction = _predEngine.Predict(testIssue);\r\n        if (prediction.Area.ToString() != testIssue.Area.ToString())\r\n          Console.ForegroundColor = ConsoleColor.Red;\r\n        else\r\n          Console.ForegroundColor = ConsoleColor.Blue;\r\n        Console.WriteLine($\"=============== Single Prediction just-trained-model - Result: {prediction.Area}/{testIssue.Area} {testIssue.Title} ===============\");\r\n      }\r\n      Console.ResetColor();      \r\n\r\n      return transformedData;\r\n    }\r\n\r\n    public static void Evaluate(DataViewSchema trainingDataViewSchema, IDataView transformedData, IDataView testDataView2 = null)\r\n    {\r\n      // STEP 5:  Evaluate the model in order to get the model's accuracy metrics\r\n      Console.WriteLine($\"=============== Evaluating to get model's accuracy metrics - Starting time: {DateTime.Now.ToString()} ===============\");\r\n\r\n      IDataView testDataView = testDataView2;\r\n\r\n      var testMetrics = _mlContext.MulticlassClassification.Evaluate(_trainedModel.Transform(testDataView));\r\n\r\n      Console.WriteLine($\"=============== Evaluating to get model's accuracy metrics - Ending time: {DateTime.Now.ToString()} ===============\");\r\n      Console.WriteLine($\"*************************************************************************************************************\");\r\n      Console.WriteLine($\"*       Metrics for Multi-class Classification model - Test Data     \");\r\n      Console.WriteLine($\"*------------------------------------------------------------------------------------------------------------\");\r\n      Console.WriteLine($\"*       MicroAccuracy:    {testMetrics.MicroAccuracy:0.###}\");\r\n      Console.WriteLine($\"*       MacroAccuracy:    {testMetrics.MacroAccuracy:0.###}\");\r\n      Console.WriteLine($\"*       LogLoss:          {testMetrics.LogLoss:#.###}\");\r\n      Console.WriteLine($\"*       LogLossReduction: {testMetrics.LogLossReduction:#.###}\");\r\n      Console.WriteLine($\"*************************************************************************************************************\");\r\n\r\n      SaveModelAsFile(_mlContext, trainingDataViewSchema, transformedData, _trainedModel, _keyToValueModel);\r\n    }\r\n\r\n    public static void PredictIssue_FirstLoadModelFromDisk()\r\n    {\r\n      //ITransformer loadedModel = _mlContext.Model.Load(_modelPath, out var modelInputSchema);\r\n      ITransformer loadedModel = _mlContext.Model.Load(_keyToValueModelPath, out var modelInputSchema);\r\n\r\n      foreach (var testIssue in testDatas)\r\n      {\r\n        _predEngine = _mlContext.Model.CreatePredictionEngine<GitHubIssueTransformed, IssuePrediction>(loadedModel);\r\n        var prediction = _predEngine.Predict(testIssue);\r\n        if (prediction.Area.ToString() != testIssue.Area.ToString())\r\n          Console.ForegroundColor = ConsoleColor.Red;\r\n        else\r\n          Console.ForegroundColor = ConsoleColor.Blue;\r\n        Console.WriteLine($\"=============== Single Prediction - Result: {prediction.Area}/{testIssue.Area} {testIssue.Title} ===============\");\r\n        Console.ResetColor();\r\n      }\r\n    }\r\n\r\n    private static void SaveModelAsFile(MLContext mlContext, DataViewSchema trainingDataViewSchema,\r\n      IDataView transformedData, ITransformer _trainedModel, ITransformer _keyToValueModel)\r\n    {\r\n      //mlContext.Model.Save(_trainedModel, trainingDataViewSchema, _modelPath);\r\n      //mlContext.Model.Save(_keyToValueModel, transformedData.Schema, _keyToValueModelPath);\r\n      Console.WriteLine(\"The model is saved to {0}\", _modelPath);\r\n    }\r\n\r\n    static void SecondLap(MLContext _mlContext)\r\n    {\r\n      var allData = _mlContext.Data.LoadFromTextFile<GitHubIssue>(_mainDataPath2, hasHeader: true);\r\n      splittedData = _mlContext.Data.TrainTestSplit(allData, testFraction: 0.09);\r\n      _trainingDataView = splittedData.TrainSet;\r\n\r\n      ITransformer dataPrepPipeline = _mlContext.Model.Load(_modelPath, out var dataPrepPipelineSchema);\r\n      var originalModelParameters = (dataPrepPipeline as TransformerChain<ITransformer>).LastTransformer as MulticlassPredictionTransformer<MaximumEntropyModelParameters>;      \r\n\r\n      int rowsCount = splittedData.TrainSet.Preview().RowView.Count();\r\n      //var transformedData = dataPrepPipeline.Transform(splittedData.TrainSet);\r\n      //var transformedData = _keyToValueModel.Transform(splittedData.TrainSet);\r\n      var transformedData = _trainedModel.Transform(splittedData.TrainSet);\r\n\r\n      ITransformer _keyToValueModel1 = _mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(\"Label\", \"Features\")\r\n        .Fit(transformedData, originalModelParameters.Model);\r\n    }\r\n  }\r\npublic class GitHubIssue\r\n  {\r\n    [LoadColumn(0)]\r\n    public string ID { get; set; }\r\n    [LoadColumn(1)]\r\n    public string Area { get; set; }\r\n    [LoadColumn(2)]\r\n    public string Title { get; set; }\r\n    [LoadColumn(3)]\r\n    public string Description { get; set; }\r\n  }\r\n\r\n  public class GitHubIssueTransformed: GitHubIssue\r\n  {\r\n    //[ColumnName(\"PredictedLabel\")]\r\n    //public string XX;\r\n  }\r\n\r\n  public class IssuePrediction\r\n  {\r\n    //[ColumnName(\"PredictedLabel\")]\r\n    public string Area;\r\n  }\r\n```\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5214","RelatedDescription":"Open issue \"Unseen labels during retraining map to value \"0\", results in System.InvalidOperationException: 'No valid training instances found, all instances have missing features.' \" (#5214)"},{"Id":"630685367","IsPullRequest":false,"CreatedAt":"2020-06-06T16:36:32","Actor":"Vya4ik003","Number":"5206","RawContent":null,"Title":"Fitting model with array","State":"closed","Body":"### System information\r\n\r\n- **OS Windows 7**:\r\n- **.NET Version 3.1.300**: \r\n\r\n### Issue\r\n\r\n- **What did you do?** - I try to fit pipeline with byte[ ] columns.\r\n- **What happened?** - I get \"System.ArgumentOutOfRangeException: \"Schema mismatch for feature column 'Features': expected Vector<Single>, got VarVector<Single> \"\".\r\n- **What did you expect?** - I expected my model fitting with non-float data. In general, I want to load some muscial files into a model. And I want to get some data from model in byte[ ] type.\r\n\r\n### Source code / logs\r\n\r\n```\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var mlContext = new MLContext();\r\n\r\n            var testData = new TestData { Values = new byte[] { 1, 2 }, PredictedLabel = new byte[] { 3 } };\r\n            var dataView = mlContext.Data.LoadFromEnumerable(new TestData[] { testData });\r\n            var pipeline = mlContext.Transforms\r\n                .CopyColumns(\"Label\", \"PredictedLabel\")\r\n                .Append(mlContext.Transforms.Concatenate(\"Features\", \"Values\"))\r\n                .Append(mlContext.Regression.Trainers.FastTree());\r\n\r\n            var model = pipeline.Fit(dataView);\r\n        }\r\n        class TestData\r\n        {\r\n            public byte[] Values;\r\n\r\n            public byte[] PredictedLabel;\r\n        }\r\n\r\n        class PredictedData\r\n        {\r\n            public byte[] PredictedLabel;\r\n        }\r\n    }\r\n```\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5206","RelatedDescription":"Closed issue \"Fitting model with array\" (#5206)"},{"Id":"631325524","IsPullRequest":false,"CreatedAt":"2020-06-05T05:35:47","Actor":"DFMERA","Number":"5211","RawContent":null,"Title":"MulticlassClassification.CrossValidate Arithmetic operation resulted in an overflow","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**:\r\nWindows 10 pro\r\n- **.NET Version (eg., dotnet --info)**: \r\n.Net Core 2.1.0\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI am creating a multiclass classification experiment and after de best model is selected and I try to evaluate de model but this method throws an exception\r\nvar testMetrics = mlContext.MulticlassClassification.CrossValidate(testDataViewWithBestScore, bestRun.Estimator, numberOfFolds: 5, labelColumnName: \"reservation_status\");            \r\n \r\n- **What happened?**\r\nThe mlContext.MulticlassClassification.CrossValidate throws an exception\r\n\r\n- **What did you expect?**\r\nTo recover the metrics of the model on test data\r\n\r\n### Source code / logs\r\n\r\nCODE\r\n\r\n\r\nvar tmpPath = GetAbsolutePath(TRAIN_DATA_FILEPATH);\r\n            IDataView trainingDataView = mlContext.Data.LoadFromTextFile<ModelInput>(\r\n                                            path: tmpPath,\r\n                                            hasHeader: true,\r\n                                            separatorChar: '\\t',\r\n                                            allowQuoting: true,\r\n                                            allowSparse: false);\r\n\r\n            IDataView testDataView = mlContext.Data.BootstrapSample(trainingDataView);\r\n\r\n// STEP 2: Run AutoML experiment\r\n            Console.WriteLine($\"Running AutoML Multiclass classification experiment for {ExperimentTime} seconds...\");\r\n            ExperimentResult<MulticlassClassificationMetrics> experimentResult = mlContext.Auto()\r\n                .CreateMulticlassClassificationExperiment(ExperimentTime)\r\n                .Execute(trainingDataView, labelColumnName: \"reservation_status\");\r\n\r\n            // STEP 3: Print metric from the best model\r\n            RunDetail<MulticlassClassificationMetrics> bestRun = experimentResult.BestRun;\r\n            Console.WriteLine($\"Total models produced: {experimentResult.RunDetails.Count()}\");\r\n            Console.WriteLine($\"Best model's trainer: {bestRun.TrainerName}\");\r\n            Console.WriteLine($\"Metrics of best model from validation data --\");\r\n            PrintMulticlassClassificationMetrics(bestRun.ValidationMetrics);\r\n\r\n            // STEP 4: Evaluate test data\r\n            IDataView testDataViewWithBestScore = bestRun.Model.Transform(testDataView);\r\n            var testMetrics = mlContext.MulticlassClassification.CrossValidate(testDataViewWithBestScore, bestRun.Estimator, numberOfFolds: 5, labelColumnName: \"reservation_status\");\r\n\r\nEXCEPTION\r\n\r\nUnhandled Exception: System.OverflowException: Arithmetic operation resulted in an overflow.\r\n   at Microsoft.ML.Data.VectorDataViewType.ComputeSize(ImmutableArray`1 dims)\r\n   at Microsoft.ML.Data.VectorDataViewType..ctor(PrimitiveDataViewType itemType, Int32[] dimensions)\r\n   at Microsoft.ML.Transforms.KeyToVectorMappingTransformer.Mapper..ctor(KeyToVectorMappingTransformer parent, DataViewSchema inputSchema)\r\n   at Microsoft.ML.Transforms.KeyToVectorMappingTransformer.MakeRowMapper(DataViewSchema schema)\r\n   at Microsoft.ML.Data.RowToRowTransformerBase.GetOutputSchema(DataViewSchema inputSchema)\r\n   at Microsoft.ML.Data.TrivialEstimator`1.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.Transforms.OneHotHashEncodingTransformer..ctor(HashingEstimator hash, IEstimator`1 keyToVector, IDataView input)\r\n   at Microsoft.ML.Transforms.OneHotHashEncodingEstimator.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.TrainCatalogBase.CrossValidateTrain(IDataView data, IEstimator`1 estimator, Int32 numFolds, String samplingKeyColumn, Nullable`1 seed)\r\n   at Microsoft.ML.MulticlassClassificationCatalog.CrossValidate(IDataView data, IEstimator`1 estimator, Int32 numberOfFolds, String labelColumnName, String samplingKeyColumnName, Nullable`1 seed)\r\n   at ConsoleAppML2ML.ConsoleApp.ModelBuilder.CreateExperiment() in C:\\repos\\Curso ML\\Bootcamp-Handytec\\Clasificacion_multiclase\\ConsoleAppML2\\ConsoleAppML2ML.ConsoleApp\\ModelBuilder.cs:line 77\r\n   at ConsoleAppML2ML.ConsoleApp.Program.Main(String[] args) in C:\\repos\\Curso ML\\Bootcamp-Handytec\\Clasificacion_multiclase\\ConsoleAppML2\\ConsoleAppML2ML.ConsoleApp\\Program.cs:line 20\r\n[HotelBookings.tsv.zip](https://github.com/dotnet/machinelearning/files/4734119/HotelBookings.tsv.zip)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5211","RelatedDescription":"Open issue \"MulticlassClassification.CrossValidate Arithmetic operation resulted in an overflow\" (#5211)"},{"Id":"631211457","IsPullRequest":false,"CreatedAt":"2020-06-04T23:36:42","Actor":"dasokolo","Number":"5210","RawContent":null,"Title":"File already exists error when loading LightGbmBinaryTrainer from MemoryStream","State":"open","Body":"### System information\r\nos version Windows (not sure)\r\n.net version 3.1.202\r\nmlnet version 1.3.1\r\n\r\n### Issue\r\nI am loading LightGbmBinaryTrainer from memory stream \r\n\r\n                ITransformer model = null;\r\n                using (MemoryStream ms = new MemoryStream(kv.Value))\r\n                {\r\n                    model = _mLContext.Model.Load(ms, out _inputSchema);\r\n                }\r\n\r\nNote, this code is executed in several threads in parallel over the same model. \r\n\r\nAnd I occasionally get the following exception: \r\n\r\nSystem.IO.IOException: The file 'D:\\SvcFab\\_App\\AIBuilder.Platform.Host_App157\\temp\\TLC_1CBA6C2E\\0' already exists. \r\n\r\nThis happens occasionally and I can't reliably reproduce this 100%. \r\n\r\n- **What did you expect?**\r\n1) I expected that no file operations are performed during loading from memory stream. My models are relatively small, but I can't guarantee that the filesystem is always available. I would appreciate to at least have some control over this behavior. \r\n\r\n2) But if file operations cannot be avoided, I expect to have no naming conflicts. \r\n\r\nSystem.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.IO.IOException: The file 'D:\\SvcFab\\_App\\AIBuilder.Platform.Host_App157\\temp\\TLC_1CBA6C2E\\0' already exists.\r\n   at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)\r\n   at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)\r\n   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share)\r\n   at System.IO.Compression.ZipFileExtensions.ExtractToFile(ZipArchiveEntry source, String destinationFileName, Boolean overwrite)\r\n   at Microsoft.ML.RepositoryReader.OpenEntryOrNull(String dir, String name)\r\n   at Microsoft.ML.ModelOperationsCatalog.Load(Stream stream, DataViewSchema& inputSchema)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5210","RelatedDescription":"Open issue \"File already exists error when loading LightGbmBinaryTrainer from MemoryStream\" (#5210)"},{"Id":"630938765","IsPullRequest":false,"CreatedAt":"2020-06-04T19:05:04","Actor":"Lucifer-Morning-Star","Number":"5208","RawContent":null,"Title":"Use the model designed by myself.","State":"closed","Body":"Hi\r\n\r\nI am new to ML, so this might seem like a stupid question, may be it is wrong, but when I learn the ML.NET, I found that all of the models or the way training data in ML.NET have been designed, or you should import it from tensorflow or OXXN.  However, is it possible use the model that the structure of the neural network is designed by myself which has the pooling layers , convolutional layers and so on, just like Tensorflow and Pytorch to trainging the model? Also, could I change the  loss function which designed by myself?","Url":"https://github.com/dotnet/machinelearning/issues/5208","RelatedDescription":"Closed issue \"Use the model designed by myself.\" (#5208)"},{"Id":"630815095","IsPullRequest":false,"CreatedAt":"2020-06-04T13:18:42","Actor":"IvanAntipov","Number":"5207","RawContent":null,"Title":"Make Microsoft.ML more developer friendly","State":"open","Body":"Microsoft.ML team, thank you for you job, as I can see, Microsoft.ML is the main hope for dotnet in machine learning word.\r\n\r\nI would like to express my concern about the closeness of Microsoft.ML from developer side.\r\n\r\nEach time I try to dive in the  Microsoft.ML I have the same scenario:\r\n\r\n1. I manage to run some standard code from samples\r\n\r\n2. I fail when I try to tune or discover my solution\r\n  - A year ago it was imposibility to get phi/theta matrixes https://github.com/dotnet/machinelearning/issues/3092\r\n\r\n  - This time I run text classification task: FeaturizeText -> SdcaLogisticRegression\r\n    - I try to plot ROC curve but Microsoft.ML.Data.BinaryClassifierEvaluator.EvaluateWithPRCurve   is not available (not yiet available from public API)\r\n  \r\n    - I try to get Vocabulary from FeaturizeTextExstimator to perform some sort of PFI analysis, this data is not available too.\r\n\r\n3. I fight with this closeness several days, I'm losing this battle, I'm going back to use .py libraries\r\n\r\n\r\nMy opinion: **internal is always evil** if your can't leave inner imlementation of your class private/protected, if ohter classes of yout Library require asses this methods or properties, most likely this functionality must be available to consumers of your library.\r\n\r\nI undestand, that internal classes reduce the amount of API yout should support. Maybe it makes sense to move all internall classes to '.*.Internal' namespace, with convention, that classes from this namespaces should be used 'without guarantee of compatibility between versions' ","Url":"https://github.com/dotnet/machinelearning/issues/5207","RelatedDescription":"Open issue \"Make Microsoft.ML more developer friendly\" (#5207)"},{"Id":"630343727","IsPullRequest":false,"CreatedAt":"2020-06-03T21:26:40","Actor":"luisquintanilla","Number":"5204","RawContent":null,"Title":"Records | C# 9 + F# Improved Interop","State":"open","Body":"At //Build 2020, plans for [records in C# 9](https://devblogs.microsoft.com/dotnet/welcome-to-c-9-0/#records) were announced. Referencing issue #180 which originally raised this question. While you can use records in F# to define the `DataViewSchema`,  once records support becomes available in C# 9, it could potentially be an opportunity to further improve the interop and experience with F#.","Url":"https://github.com/dotnet/machinelearning/issues/5204","RelatedDescription":"Open issue \"Records | C# 9 + F# Improved Interop\" (#5204)"},{"Id":"629871252","IsPullRequest":true,"CreatedAt":"2020-06-03T10:14:07","Actor":"guinao","Number":"5202","RawContent":null,"Title":"Add deseasonality in SrCnnEntireAnomalyDetect","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5202","RelatedDescription":"Open PR \"Add deseasonality in SrCnnEntireAnomalyDetect\" (#5202)"},{"Id":"629846689","IsPullRequest":true,"CreatedAt":"2020-06-03T09:55:33","Actor":"suxi-ms","Number":"5201","RawContent":null,"Title":"Suxi/update","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5201","RelatedDescription":"Closed or merged PR \"Suxi/update\" (#5201)"},{"Id":"629796148","IsPullRequest":true,"CreatedAt":"2020-06-03T08:21:50","Actor":"guinao","Number":"5200","RawContent":null,"Title":"Add Seasonality Detection","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5200","RelatedDescription":"Open PR \"Add Seasonality Detection\" (#5200)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-06-11T05:30:36.6702836Z","RunDurationInMilliseconds":818}