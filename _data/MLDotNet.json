{"Data":{"GitHub":{"Issues":[{"Id":"639304492","IsPullRequest":false,"CreatedAt":"2020-06-16T01:38:06","Actor":"frank-dong-ms","Number":"5242","RawContent":null,"Title":"TensorFlowTransformCifar test crash","State":"open","Body":"Test crash: https://dev.azure.com/dnceng/public/_build/results?buildId=684811&view=logs&j=d1af5113-e574-5a31-f7f3-02fc40ea7b26&t=b03e2d69-ce1a-5899-6643-e9b6085777b9&s=d654deb9-056d-50a2-1717-90c08683d50a\r\n\r\nerror message: \r\nThe active Test Run was aborted because the host process exited unexpectedly while executing following test(s):\r\nMicrosoft.ML.Scenarios.TensorFlowScenariosTests.TensorFlowTransformCifar\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5242","RelatedDescription":"Open issue \"TensorFlowTransformCifar test crash\" (#5242)"},{"Id":"636696451","IsPullRequest":true,"CreatedAt":"2020-06-15T21:21:12","Actor":"frank-dong-ms","Number":"5228","RawContent":null,"Title":"Issue 3234: use model schema type instead of class definition schema","State":"closed","Body":"address issue: https://github.com/dotnet/machinelearning/issues/3234 \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5228","RelatedDescription":"Closed or merged PR \"Issue 3234: use model schema type instead of class definition schema\" (#5228)"},{"Id":"638338576","IsPullRequest":false,"CreatedAt":"2020-06-14T12:01:42","Actor":"DanBrook","Number":"5241","RawContent":null,"Title":"Missing method exception NumSharp.Shape TensorFlow.TensorShape.op_implicit on fit","State":"open","Body":"System information\r\n\r\nWindows 10 pro/18362.836:\r\n.NET 4.7.2:\r\n\r\nIssue\r\n\r\nGot error “Missing method exception NumSharp.Shape TensorFlow.TensorShape.op_implicit” on fit, while trying to run Microsoft example for ML image classification.\r\n\r\nCode:\r\n\r\nIEstimator<ITransformer> pipeline = mlContext.Transforms.LoadImages(outputColumnName: \"input\", imageFolder: _imagesFolder, inputColumnName: nameof(ImageData.ImagePath))\r\n                // The image transforms transform the images into the model's expected format.\r\n                .Append(mlContext.Transforms.ResizeImages(outputColumnName: \"input\", imageWidth: InceptionSettings.ImageWidth, imageHeight: InceptionSettings.ImageHeight, inputColumnName: \"input\"))\r\n                .Append(mlContext.Transforms.ExtractPixels(outputColumnName: \"input\", interleavePixelColors: InceptionSettings.ChannelsLast, offsetImage: InceptionSettings.Mean))\r\n\r\n.Append(mlContext.Model.LoadTensorFlowModel(_inceptionTensorFlowModel).\r\n    ScoreTensorFlowModel(outputColumnNames: new[] { \"softmax2_pre_activation\" }, inputColumnNames: new[] { \"input\" }, addBatchDimensionInput: true))\r\n\r\n.Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \"LabelKey\", inputColumnName: \"Label\"))\r\n\r\n\r\n.Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(labelColumnName: \"LabelKey\", featureColumnName: \"softmax2_pre_activation\"))\r\n\r\n.Append(mlContext.Transforms.Conversion.MapKeyToValue(\"PredictedLabelValue\", \"PredictedLabel\"))\r\n.AppendCacheCheckpoint(mlContext);\r\n\r\nIDataView trainingData = mlContext.Data.LoadFromTextFile<ImageData>(path:  _trainTagsTsv, hasHeader: false);\r\n\r\n//code above is working properly data preview shows proper data was loaded\r\n\r\nITransformer model = pipeline.Fit(trainingData);\r\n// fit ends with error \r\n\r\n Numsharp is v0. 20. 5\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5241","RelatedDescription":"Open issue \"Missing method exception NumSharp.Shape TensorFlow.TensorShape.op_implicit on fit\" (#5241)"},{"Id":"638238233","IsPullRequest":false,"CreatedAt":"2020-06-13T21:42:55","Actor":"boyedarat","Number":"5240","RawContent":null,"Title":"DirectML support","State":"open","Body":"Are there any plans to support DirectML as an alternative to TF?\r\nHave not seen this request in the Issues list.","Url":"https://github.com/dotnet/machinelearning/issues/5240","RelatedDescription":"Open issue \"DirectML support\" (#5240)"},{"Id":"638113689","IsPullRequest":true,"CreatedAt":"2020-06-13T18:59:23","Actor":"Nishikoh","Number":"5239","RawContent":null,"Title":"Fix comment in NormalizeRobustScaling","State":"closed","Body":"Fixes #5238","Url":"https://github.com/dotnet/machinelearning/pull/5239","RelatedDescription":"Closed or merged PR \"Fix comment in NormalizeRobustScaling\" (#5239)"},{"Id":"638097545","IsPullRequest":false,"CreatedAt":"2020-06-13T18:59:23","Actor":"justinormont","Number":"5238","RawContent":null,"Title":"Spell check in NormalizeRobustScaling","State":"closed","Body":"These should say, \"Whether to center the data around 0 by removing the median. Defaults to true.\"\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/207d466f94442ed58509e9f81dd6ec2a8ed193e7/src/Microsoft.ML.Transforms/NormalizerCatalog.cs#L366\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/207d466f94442ed58509e9f81dd6ec2a8ed193e7/src/Microsoft.ML.Transforms/NormalizerCatalog.cs#L366\r\n\r\nGood first PR for any community members; no need to ask first. In the PR description, add \"fixes #5238\", to auto-close this issue.","Url":"https://github.com/dotnet/machinelearning/issues/5238","RelatedDescription":"Closed issue \"Spell check in NormalizeRobustScaling\" (#5238)"},{"Id":"637972137","IsPullRequest":false,"CreatedAt":"2020-06-13T01:57:40","Actor":"CBrauer","Number":"5237","RawContent":null,"Title":"Problem with ML.NET RobustScaler","State":"closed","Body":"### System information\r\n\r\n- Windows 10 Enterprise 10.0 18363 Built 18363\r\n- Visual Studio 2019, build 16.6.2\r\n\r\n### Source code\r\n- I have put my reproduceable project on GitHUb at: https://github.com/CBrauer/Test_RobustScaler\r\n\r\n### Program output. Notice that RobustScaler produced an extra column for \"vwapGain\"\r\n\r\n![image](https://user-images.githubusercontent.com/1317234/84540742-e4b97a80-acaa-11ea-9c8c-8f1504f7a2a6.png)\r\n\r\n### Source code\r\nMy test program looks like:\r\n```\r\nnamespace Test_RobustScaller {\r\n  internal class Program {\r\n    #region MyHead\r\n    public static void MyHead(IDataView train, int numRows) {\r\n      var trainPreview = train.Preview(maxRows: numRows);\r\n      var nColumns = trainPreview.ColumnView.Length;\r\n      var maxCharInHeaderName = 0;\r\n      for (var k = 0; k < nColumns; k++) {\r\n        var columnName = trainPreview.Schema[k].Name;\r\n        maxCharInHeaderName = Math.Max(maxCharInHeaderName, columnName.Length);\r\n      }\r\n      var nSpaces = new int[nColumns];\r\n      for (var k = 0; k < nColumns; k++) {\r\n        var columnName = trainPreview.Schema[k].Name;\r\n        for (var j = 0; j < maxCharInHeaderName - columnName.Length + 1; j++) {\r\n          Console.Write(\" \");\r\n        }\r\n        Console.Write(\"{0}\", columnName);\r\n        nSpaces[k] = maxCharInHeaderName - columnName.Length + 1;\r\n      }\r\n      Console.Write(\"\\n\");\r\n\r\n      foreach (var row in trainPreview.RowView) {\r\n        for (var k = 0; k < row.Values.Length; k++) {\r\n          var field = string.Format(\"{0}\", row.Values[k].Value);\r\n          var nSpace = maxCharInHeaderName - field.Length + 1;\r\n          for (var j = 0; j < nSpace; j++) {\r\n            Console.Write(\" \");\r\n          }\r\n          Console.Write(row.Values[k].Value);\r\n        }\r\n        Console.Write(\"\\n\");\r\n      }\r\n\r\n      Console.Write(\"\\n\");\r\n    }\r\n    #endregion\r\n    public static void Run() {\r\n      var mlContext = new MLContext(seed: 1);\r\n\r\n      var df_full = DataFrame.LoadCsv(\"../../../data/model.csv\");\r\n\r\n      var header_names = new List<string> {\r\n        \"BoxRatio\", \"Thrust\", \"Acceleration\", \"Velocity\",\r\n        \"OnBalRun\", \"vwapGain\", \"Altitude\"\r\n      };\r\n      var nColumns = header_names.Count;\r\n      var df_columns = new DataFrameColumn[nColumns];\r\n      for (var k = 0; k < nColumns; k++) {\r\n        var name = header_names[k];\r\n        df_columns[k] = df_full.Columns[name];\r\n      }\r\n\r\n      var df = new DataFrame(df_columns);\r\n      Console.WriteLine(\"Before transform:\");\r\n      Console.WriteLine(df.Head(5));\r\n\r\n      var pipeline = mlContext.Transforms.RobustScaler(\"vwapGain\");\r\n      var model = pipeline.Fit(df);\r\n      var transformed = model.Transform(df);\r\n      Console.WriteLine(\"After Transform:\");\r\n      MyHead(transformed, 5);\r\n    }\r\n\r\n    static void Main() {\r\n      Run();\r\n      Console.WriteLine(\"Hit return to exit.\");\r\n      Console.ReadKey();\r\n    }\r\n  }\r\n}\r\n```\r\nCharles","Url":"https://github.com/dotnet/machinelearning/issues/5237","RelatedDescription":"Closed issue \"Problem with ML.NET RobustScaler\" (#5237)"},{"Id":"637880186","IsPullRequest":false,"CreatedAt":"2020-06-12T20:00:27","Actor":"JakeRadMSFT","Number":"5235","RawContent":null,"Title":"AutoML - Better error message && stop inferring type for label column in regression && classification","State":"closed","Body":"I have a dataset with sparse data and I can't perform value prediction. \r\n\r\nCan't upload dataset but I can share screen - Come Chat!","Url":"https://github.com/dotnet/machinelearning/issues/5235","RelatedDescription":"Closed issue \"AutoML - Better error message && stop inferring type for label column in regression && classification\" (#5235)"},{"Id":"637960499","IsPullRequest":true,"CreatedAt":"2020-06-12T19:27:54","Actor":"klausmh","Number":"5236","RawContent":null,"Title":"Proposal for returning multiple dimensions in RCA","State":"open","Body":"Draft PR for proposal on returning multiple dimensions in RCA.","Url":"https://github.com/dotnet/machinelearning/pull/5236","RelatedDescription":"Open PR \"Proposal for returning multiple dimensions in RCA\" (#5236)"},{"Id":"637477786","IsPullRequest":true,"CreatedAt":"2020-06-12T04:37:59","Actor":"michaelgsharp","Number":"5234","RawContent":null,"Title":"Fixes DateTimeTransformer file path issue for NimbusML","State":"open","Body":"Fixes #5220. This is a regression issue that was resolved before, unless the fix only stayed in the private branch for the featurizers.","Url":"https://github.com/dotnet/machinelearning/pull/5234","RelatedDescription":"Open PR \"Fixes DateTimeTransformer file path issue for NimbusML\" (#5234)"},{"Id":"636702783","IsPullRequest":true,"CreatedAt":"2020-06-11T21:26:17","Actor":"frank-dong-ms","Number":"5229","RawContent":null,"Title":"add random seed when create random temp folder to avoid conflict","State":"closed","Body":"address issue: https://github.com/dotnet/machinelearning/issues/5210\r\n\r\nWe are create random temp folder during model load, sometimes there are file name conflict when load models in multi-threading as the random temp folder name is not seeded.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5229","RelatedDescription":"Closed or merged PR \"add random seed when create random temp folder to avoid conflict\" (#5229)"},{"Id":"637324717","IsPullRequest":true,"CreatedAt":"2020-06-11T21:17:32","Actor":"Lynx1820","Number":"5233","RawContent":null,"Title":"Adding option for custom groupId column name","State":"open","Body":"\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5233","RelatedDescription":"Open PR \"Adding option for custom groupId column name\" (#5233)"},{"Id":"635209687","IsPullRequest":false,"CreatedAt":"2020-06-11T19:23:29","Actor":"IvanAntipov","Number":"5217","RawContent":null,"Title":"Output vector size of FeaturizeText does not respect MaximumNgramsCount ","State":"closed","Body":"### System information\r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.201\r\n Commit:    b1768b4ae7\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18362\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.201\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.3\r\n  Commit:  4a9f85e9f8\r\n\r\n.NET Core SDKs installed:\r\n  3.0.100 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 2.1.17 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n```\r\n\r\n### Issue\r\n\r\n- I build a pipline with ```FeaturizeText``` with MaximumNgramsCount = 50\r\n```\r\n\r\nlet featureEstimator = \r\n    let wordBagOptions = WordBagEstimator.Options(MaximumNgramsCount = [|50|]) \r\n    let textFeaturizeOptions =  \r\n        TextFeaturizingEstimator.Options(\r\n            OutputTokensColumnName = \"OutputTokens\",\r\n            CaseMode = Microsoft.ML.Transforms.Text.TextNormalizingEstimator.CaseMode.Lower,\r\n            KeepNumbers = true,\r\n            KeepPunctuations = false,\r\n            WordFeatureExtractor = wordBagOptions)\r\n    EstimatorChain()\r\n        .Append(mlContext.Transforms.Text.FeaturizeText(outputColumnName = \"Features\", options = textFeaturizeOptions, inputColumnNames =  [|\"Text\"|]))\r\n```\r\n\r\n- Features vector has a size of 1266 ``` Features: Vector<Single, 1266> ```\r\n- I expect features vector to be of size 50 (MaximumNgramsCount)\r\n[BowVectorSizeRepro.zip](https://github.com/dotnet/machinelearning/files/4750750/BowVectorSizeRepro.zip)\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5217","RelatedDescription":"Closed issue \"Output vector size of FeaturizeText does not respect MaximumNgramsCount \" (#5217)"},{"Id":"637252975","IsPullRequest":true,"CreatedAt":"2020-06-11T19:05:45","Actor":"wangyems","Number":"5232","RawContent":null,"Title":"Improve exception msg by adding column name","State":"open","Body":"For the issue https://github.com/dotnet/machinelearning/issues/5211\r\n\r\nIn this case, when user choose a big dataset and one or more columns have more than expected unique values, the crossvalidate() method throws overflow but it's difficult for users to realize which column in the dataset cause the problem. If we append column name to the overflow message, user can quickly find where goes wrong.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5232","RelatedDescription":"Open PR \"Improve exception msg by adding column name\" (#5232)"},{"Id":"637177506","IsPullRequest":true,"CreatedAt":"2020-06-11T16:55:43","Actor":"lisahua","Number":"5231","RawContent":null,"Title":"Add DetectSeasonality as a Helper function in TimeSeries ExtensionDialog","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [X] There's a descriptive title that will make sense to other developers some time from now. \r\n- [X] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [X] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [X] You have included any necessary tests in the same PR.\r\n\r\n**This PR is part of Feature Request**:  #5230  : Add Seasonality Detection for Time-Series Data\r\n\r\n## Description\r\n\r\nIn time series data, [seasonality](https://en.wikipedia.org/wiki/Seasonality) is the presence of variations that occur at specific regular intervals less than a year, such as weekly, monthly, or quarterly. \r\n\r\nIn this PR, we propose to provide [Seasonality Detection](http://alumni.cs.ucr.edu/~mvlachos/pubs/sdm05.pdf) Support for Time-Series Data based on [fourier analysis](https://en.wikipedia.org/wiki/Fourier_analysis).\r\n\r\n- DetectSeasonality API:\r\n\r\n```\r\n        /// <summary>\r\n        /// Obtain the period by adopting techniques of spectral analysis. which is founded by\r\n        /// the fourier analysis. returns -1 means there's no significant period. otherwise, a period\r\n        /// is returned.\r\n        /// </summary>\r\n        /// <param name=\"catalog\">The detect seasonality catalog.</param>\r\n        /// <param name=\"input\">Input DataView.The data is an instance of <see cref=\"Microsoft.ML.IDataView\"/>.</param>\r\n        /// <param name=\"inputColumnName\">Name of column to process. The column data must be <see cref=\"System.Double\"/>.</param>\r\n        /// <param name=\"seasonalityWindowSize\">An upper bound on the largest relevant seasonality in the input time-series.\r\n        /// When set to -1, use the whole input to fit model, when set to a positive integer, use this number as batch size.\r\n        /// Default value is -1.</param>\r\n        /// <returns>The detected period if seasonality period exists, otherwise return -1.</returns>\r\n        public static int DetectSeasonality(this AnomalyDetectionCatalog catalog, IDataView input, string inputColumnName, int seasonalityWindowSize = -1)\r\n```\r\n\r\nThis PR introduced:\r\n1. `DetectSeasonality` API to `ExtensionDialog` in TimeSeries project\r\n2. Internal class `SeasonalityDetector` that implements the actual logic based on [fourier tranform](https://en.wikipedia.org/wiki/Fast_Fourier_transform)\r\n3. Sample `DetectSeasonality` in `docs/sample/timeseries` folder.\r\n4. Unit Tests in `TimeSeriesDirectApi` file\r\n5. Change `MedianDblAggregator` to be BestFriend and use it in `SeasonalityDetector`\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5231","RelatedDescription":"Open PR \"Add DetectSeasonality as a Helper function in TimeSeries ExtensionDialog\" (#5231)"},{"Id":"637171190","IsPullRequest":false,"CreatedAt":"2020-06-11T16:45:07","Actor":"lisahua","Number":"5230","RawContent":null,"Title":"[Feature Request] Add Seasonality Detection for Time-Series Data","State":"open","Body":"### Feature Description\r\n\r\nIn time series data, [seasonality](https://en.wikipedia.org/wiki/Seasonality) is the presence of variations that occur at specific regular intervals less than a year, such as weekly, monthly, or quarterly. With the support of seasonality and seasonality decomposition, we can improve a list of operations on time-series data:\r\n- Anomaly Detection\r\n- Forcasting\r\n- and more\r\n\r\nWe propose to provide\r\n1. [Seasonality Detection](http://alumni.cs.ucr.edu/~mvlachos/pubs/sdm05.pdf) Support for Time-Series Data based on [fourier analysis](https://en.wikipedia.org/wiki/Fourier_analysis). [PR 5231](https://github.com/dotnet/machinelearning/pull/5231)\r\n2. [Seasonality Decomposition](https://en.wikipedia.org/wiki/Decomposition_of_time_series) for Time-Series Data based on [STL](https://otexts.com/fpp2/stl.html). \r\n a. First, we support decomposition with Anomaly Detection [PR 5202](https://github.com/dotnet/machinelearning/pull/5202)\r\n b. Second, separate seasonality decomposition as a individual API as a Transformer \r\n\r\n### Detail API Proposal\r\n\r\n- DetectSeasonality\r\n\r\n```\r\n        /// <summary>\r\n        /// Obtain the period by adopting techniques of spectral analysis. which is founded by\r\n        /// the fourier analysis. returns -1 means there's no significant period. otherwise, a period\r\n        /// is returned.\r\n        /// </summary>\r\n        /// <param name=\"catalog\">The detect seasonality catalog.</param>\r\n        /// <param name=\"input\">Input DataView.The data is an instance of <see cref=\"Microsoft.ML.IDataView\"/>.</param>\r\n        /// <param name=\"inputColumnName\">Name of column to process. The column data must be <see cref=\"System.Double\"/>.</param>\r\n        /// <param name=\"seasonalityWindowSize\">An upper bound on the largest relevant seasonality in the input time-series.\r\n        /// When set to -1, use the whole input to fit model, when set to a positive integer, use this number as batch size.\r\n        /// Default value is -1.</param>\r\n        /// <returns>The detected period if seasonality period exists, otherwise return -1.</returns>\r\n        public static int DetectSeasonality(this AnomalyDetectionCatalog catalog, IDataView input, string inputColumnName, int seasonalityWindowSize = -1)\r\n```\r\n\r\n- Seasonality Decompose\r\nAdd two optional parameters to existing [DetectEntireAnomalyBySrCnn](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.timeseriescatalog.detectentireanomalybysrcnn?view=ml-dotnet) API: \r\n-- period: Seasonality Period (either from user or auto-detected by the DetectSeasonality API.\r\n-- deseasonalityMode: Median, Average, STL.\r\n\r\n```\r\npublic static IDataView DetectEntireAnomalyBySrCnn(\r\n  this AnomalyDetectionCatalog catalog,\r\n  IDataView input, string outputColumnName, \r\n  string inputColumnName,\r\n  double threshold = 0.3, \r\n   int batchSize = 1024, \r\n   double sensitivity = 99, \r\n   SrCnnDetectMode detectMode = SrCnnDetectMode.AnomalyOnly, \r\n   int period = 0, \r\n   SrCnnDeseasonalityMode deseasonalityMode = SrCnnDeseasonalityMode.Stl)\r\n```\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5230","RelatedDescription":"Open issue \"[Feature Request] Add Seasonality Detection for Time-Series Data\" (#5230)"},{"Id":"636619681","IsPullRequest":true,"CreatedAt":"2020-06-10T23:57:14","Actor":"antoniovs1029","Number":"5227","RawContent":null,"Title":"Fixed issue when running CrossValidation from an entrypoint","State":"open","Body":"Fixes #5221 . The NimbusML test mentioned there passes with the changes on this PR.\r\n\r\nTo fix the particular problem described in https://github.com/dotnet/machinelearning/issues/5221#issuecomment-642325157 the solution I implemented here was simply to create a new column by simply copying the original stratificationColumn. This way the new column can safely be dropped by the callers of the `CreateStratificationColumn` method.\r\n\r\n-----\r\n\r\n# NOTE:\r\nI'm having some issues running all the tests of NimbusML to check if this change doesn't brake anything else. I wouldn't expect it does. I'm opening this PR for review in the meantime, but I'd still need to check NimbusML tests before merging this.","Url":"https://github.com/dotnet/machinelearning/pull/5227","RelatedDescription":"Open PR \"Fixed issue when running CrossValidation from an entrypoint\" (#5227)"},{"Id":"635311962","IsPullRequest":false,"CreatedAt":"2020-06-10T22:02:14","Actor":"Vya4ik003","Number":"5219","RawContent":null,"Title":"Train a simple neural network","State":"closed","Body":"### System information\r\n\r\n- **OS Windows 7**:\r\n- **.NET 3.1.300**: \r\n\r\n### Issue\r\n\r\n- **What did you do?** - I'm trying to create a simple neural network that returns a given number\r\n- **What happened?** - I give bad prediction\r\n- **What did you expect?** - I expect to get number, which I give to model\r\n\r\n### Source code / logs\r\n\r\n```\r\n    class Program\r\n    {\r\n        static Input[] trainData;\r\n\r\n        static void CreateData(int count = 100)\r\n        {\r\n            trainData = new Input[count];\r\n\r\n            for (int i = 0; i < count; i++)\r\n            {\r\n                trainData[i] = new Input { Column1 = i, Result = i };\r\n            }\r\n        }\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            CreateData();\r\n            var mlContext = new MLContext();\r\n\r\n            var dataView = mlContext.Data.LoadFromEnumerable(trainData);\r\n            var pipeline = mlContext.Transforms.CopyColumns(\"Label\", \"Result\")\r\n                .Append(mlContext.Transforms.Concatenate(\"Features\", \"Column1\"))\r\n                .Append(mlContext.Regression.Trainers.Sdca()); \r\n\r\n            var model = pipeline.Fit(dataView);\r\n\r\n            var predictor = mlContext.Model.CreatePredictionEngine<Input, Output>(model);\r\n            var prediction = predictor.Predict(new Input { Column1 = 178, Result = 0});\r\n\r\n            Console.WriteLine(prediction.Result); //get 173\r\n            //with FastTree() train Method I get 94\r\n            Console.Beep(500, 100);\r\n            Console.Read();\r\n        }\r\n    }\r\n\r\n    class Input\r\n    {\r\n        public float Column1;\r\n\r\n        public float Result;\r\n    }\r\n    class Output\r\n    {\r\n        [ColumnName(\"Score\")]\r\n        public float Result;\r\n    }\r\n```\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5219","RelatedDescription":"Closed issue \"Train a simple neural network\" (#5219)"},{"Id":"636503402","IsPullRequest":true,"CreatedAt":"2020-06-10T21:06:53","Actor":"wangyems","Number":"5226","RawContent":null,"Title":"remove unnecessary comments in ONNX.cs","State":"closed","Body":"Remove unnecessary comments as right now there is no obvious precision difference between ML.NET model and Onnx model\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5226","RelatedDescription":"Closed or merged PR \"remove unnecessary comments in ONNX.cs\" (#5226)"},{"Id":"636319506","IsPullRequest":false,"CreatedAt":"2020-06-10T20:40:21","Actor":"Vya4ik003","Number":"5225","RawContent":null,"Title":"Find Regression Trainer that support Vector<> type of column \"Score\"","State":"closed","Body":"### System information\r\n\r\n- **OS Windows 7**:\r\n- **.NET 3.1.300**: \r\n\r\n### Issue\r\n\r\n- **What did you do?** - I'm trying to get prediction with Array type.\r\n- **What happened?** - column \"Label\" must be Single, and got Vector<Single>\r\nAre there RegressionTrainers that support Vector<> output?\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5225","RelatedDescription":"Closed issue \"Find Regression Trainer that support Vector<> type of column \"Score\"\" (#5225)"},{"Id":"636089763","IsPullRequest":false,"CreatedAt":"2020-06-10T17:39:32","Actor":"mengaims","Number":"5224","RawContent":null,"Title":"Filter anomalies according to boundaries under AnomalyAndMargin mode in SrCnnEntireAnomalyDetector","State":"closed","Body":"In previous code of SrCnnEntireAnomalyDetector, under AnomalyAndMargin mode, we calculated UpperBoundary and LowerBoundary according to user’s sensitivity setting, but didn’t update the IsAnomaly field according to the boundaries since we want to allow this flexibility to user.\r\n\r\nBut considering the completeness of SrCnnEntireAnomalyDetector as a feature, the most important output should be the judgement whether a point is anomaly or not, namely IsAnomaly. It will be confused if user set different sensitivities but get the same IsAnomaly results. So we need to add anomalies filtering by boundries to the SrCnnEntireAnomalyDetector.","Url":"https://github.com/dotnet/machinelearning/issues/5224","RelatedDescription":"Closed issue \"Filter anomalies according to boundaries under AnomalyAndMargin mode in SrCnnEntireAnomalyDetector\" (#5224)"},{"Id":"633229182","IsPullRequest":false,"CreatedAt":"2020-06-10T07:04:19","Actor":"DanBrook","Number":"5213","RawContent":null,"Title":"CoreDump on LoadTensorFlowModel ","State":"closed","Body":"### System information\r\n\r\n- **Windows 10 pro/18362.836**:\r\n- **.NET 4.7.2**: \r\n\r\n### Issue\r\n\r\n- **Trying to load TensorFlow model tensorflow_inception_graph **\r\n- **Illegal error**\r\n- **model loading**\r\n\r\n### Source code / logs\r\n Microsoft.ML.Transforms.TensorFlowModel tensorFlowModel = mlContext.Model.LoadTensorFlowModel(_inceptionTensorFlowModel);\r\nError occures on this line from microsoft manual. I have managed to load the model on my laptop and it works properly. When I have tried to run the same progect on my PC I had this error. Please help me to figure out wat is wrong. The problem is not in the code, becouse the same code works fine on the other machine. I have tried different versions of all libreries, but nothing helped.\r\n\r\nPC Information:\r\n\r\nProcessor: Intel(R) Core i7 CPU Q740 1.73GHz 1.73GHz \r\nRAM: 6.00 Gb\r\nx64\r\n\r\n\"WpfApplication2.exe\" (CLR v4.0.30319: DefaultDomain). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_64\\mscorlib\\v4.0_4.0.0.0__b77a5c561934e089\\mscorlib.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: DefaultDomain). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\WpfApplication2.exe\". Symbols loaded.\r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\PresentationFramework\\v4.0_4.0.0.0__31bf3856ad364e35\\PresentationFramework.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\WindowsBase\\v4.0_4.0.0.0__31bf3856ad364e35\\WindowsBase.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.Core\\v4.0_4.0.0.0__b77a5c561934e089\\System.Core.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System\\v4.0_4.0.0.0__b77a5c561934e089\\System.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_64\\PresentationCore\\v4.0_4.0.0.0__31bf3856ad364e35\\PresentationCore.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.Xaml\\v4.0_4.0.0.0__b77a5c561934e089\\System.Xaml.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\Remote Debugger\\x64\\Runtime\\Microsoft.VisualStudio.Debugger.Runtime.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.Configuration\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\System.Configuration.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.Xml\\v4.0_4.0.0.0__b77a5c561934e089\\System.Xml.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.Drawing\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\System.Drawing.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.Windows.Forms\\v4.0_4.0.0.0__b77a5c561934e089\\System.Windows.Forms.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\WindowsFormsIntegration\\v4.0_4.0.0.0__31bf3856ad364e35\\WindowsFormsIntegration.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"c:\\program files (x86)\\microsoft visual studio\\2019\\community\\common7\\ide\\commonextensions\\microsoft\\xamldiagnostics\\Framework\\x64\\Microsoft.VisualStudio.DesignTools.WpfTap.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\Xceed.Wpf.Toolkit.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\Xceed.Wpf.AvalonDock.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.Runtime.Serialization\\v4.0_4.0.0.0__b77a5c561934e089\\System.Runtime.Serialization.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\SMDiagnostics\\v4.0_4.0.0.0__b77a5c561934e089\\SMDiagnostics.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.ServiceModel.Internals\\v4.0_4.0.0.0__31bf3856ad364e35\\System.ServiceModel.Internals.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\PresentationFramework.Aero2\\v4.0_4.0.0.0__31bf3856ad364e35\\PresentationFramework.Aero2.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\Microsoft.ML.Data.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\netstandard\\v4.0_2.0.0.0__cc7b13ffcd2ddd51\\netstandard.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\Microsoft.ML.Core.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.ValueTuple\\v4.0_4.0.0.0__cc7b13ffcd2ddd51\\System.ValueTuple.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_64\\System.Data\\v4.0_4.0.0.0__b77a5c561934e089\\System.Data.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.ServiceModel\\v4.0_4.0.0.0__b77a5c561934e089\\System.ServiceModel.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\PresentationFramework-SystemXml\\v4.0_4.0.0.0__b77a5c561934e089\\PresentationFramework-SystemXml.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\PresentationFramework-SystemData\\v4.0_4.0.0.0__b77a5c561934e089\\PresentationFramework-SystemData.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\UIAutomationTypes\\v4.0_4.0.0.0__31bf3856ad364e35\\UIAutomationTypes.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\UIAutomationProvider\\v4.0_4.0.0.0__31bf3856ad364e35\\UIAutomationProvider.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\Accessibility\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\Accessibility.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.Numerics\\v4.0_4.0.0.0__b77a5c561934e089\\System.Numerics.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\PresentationFramework-SystemCore\\v4.0_4.0.0.0__b77a5c561934e089\\PresentationFramework-SystemCore.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\Microsoft.ML.TensorFlow.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\v\\Desktop\\test\\WpfApplication2\\bin\\Debug\\Microsoft.ML.DataView.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\System.Collections.Immutable.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\Microsoft.ML.ImageAnalytics.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\Microsoft.ML.StandardTrainers.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\Newtonsoft.Json.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\System.Memory.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\TensorFlow.NET.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\Google.Protobuf.dll\". Symbols loaded.\r\nProgram \"[6780] WpfApplication2.exe\" exited with code -1073741795 (0xc000001d) 'Illegal Instruction'.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5213","RelatedDescription":"Closed issue \"CoreDump on LoadTensorFlowModel \" (#5213)"},{"Id":"635783219","IsPullRequest":false,"CreatedAt":"2020-06-10T05:35:58","Actor":"CBrauer","Number":"5222","RawContent":null,"Title":"Trouble using RobustScaler","State":"closed","Body":"### System information\r\n\r\n- Microsoft Windows 10 Enterprise, Version\t10.0.18363 Build 18363\r\n\r\n- ML.NET v1.5\r\n\r\n### Issue\r\n\r\nI'm trying to transform my dataset with the RobustScaler.  The program compiles and runs, but I get the exception:  \r\n\r\n`Unable to find an entry point named 'RobustScalerFeaturizer_float_CreateEstimator' in DLL 'Featurizers'.`\r\n\r\nHere is a segment of my code where the exception is thrown:\r\n\r\n```\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Diagnostics;\r\nusing System.IO;\r\nusing System.Linq;\r\n\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.AutoML;\r\nusing Microsoft.ML.Data;\r\nusing Microsoft.ML.Featurizers;\r\n.\r\n.\r\n.\r\n    var trainDataView = mlContext.Data.LoadFromTextFile<ModelInput>(\r\n        path: @\"../../../data/train.csv\",\r\n        hasHeader: true,\r\n        separatorChar: ',');\r\n\r\n    RobustScalerTransformer model = null;\r\n    var pipeline = mlContext.Transforms.RobustScaler(\"vwapGain\");\r\n    try {\r\n      model = pipeline.Fit(trainDataView);\r\n    } catch (EntryPointNotFoundException ex) {\r\n      Console.WriteLine(\"{0}:\\n   {1}\", ex.GetType().Name, ex.Message);\r\n    }\r\n```\r\nHere is a list of the packages in my program:\r\n\r\n![image](https://user-images.githubusercontent.com/1317234/84204754-a16bcb80-aa60-11ea-85ae-c7776b5fdccd.png)\r\n\r\nAny suggestions will be greatly appreciated.\r\n\r\nCharles\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5222","RelatedDescription":"Closed issue \"Trouble using RobustScaler\" (#5222)"},{"Id":"635914795","IsPullRequest":true,"CreatedAt":"2020-06-10T05:35:40","Actor":"michaelgsharp","Number":"5223","RawContent":null,"Title":"fixed Microsoft.MLFeaturizer version in nuget and csproj","State":"closed","Body":"Fixes issue #5222 \r\n\r\nWhen I updated the Microsoft.MLFeaturizers version in the csproj file, I didn't do it in the .nuget package. This fixes the version discrepancy and updates them from the preview they were on to the latest full release.","Url":"https://github.com/dotnet/machinelearning/pull/5223","RelatedDescription":"Closed or merged PR \"fixed Microsoft.MLFeaturizer version in nuget and csproj\" (#5223)"},{"Id":"635599857","IsPullRequest":false,"CreatedAt":"2020-06-09T16:43:30","Actor":"ganik","Number":"5221","RawContent":null,"Title":"CrossValidation Macros stops working in 1.5.0","State":"open","Body":"ML.NET 1.5.0\r\n\r\nHave NimbusML (built with ML.NET 1.5.0, here is [PR](https://dev.azure.com/aifx/public/_build/results?buildId=2988&view=results) that does this )\r\nRun the tests in [test.cv](https://github.com/microsoft/NimbusML/blob/master/src/python/nimbusml/tests/model_selection/test_cv.py) \r\ntest_default_label2  fails with error:\r\nError: *** System.InvalidOperationException: 'Column 'GroupId' not found' StackTrace:    at Microsoft.ML.EntryPoints.TrainerEntryPointsUtils.FindColumn(IExceptionContext ectx, DataViewSchema schema, Optional`1 value)\r\nat Microsoft.ML.EntryPoints.TrainerEntryPointsUtils.Train[TArg,TOut](IHost host, TArg input, Func`1 createTrainer, Func`1 getLabel, Func`1 getWeight, Func`1 getGroup, Func`1 getName, Func`1 getCustom, ICalibratorTrainerFactory calibrator, Int32 maxCalibrationExamples)\r\nat Microsoft.ML.Trainers.LightGbm.LightGbm.TrainRanking(IHostEnvironment env, Options input)\r\n\r\nThis is a regression from ML.NET 1.5.0.preview2\r\n\r\nI did some debugging, it appears that once macros is expanded ColumnSelector Transform drops GroupId. ColumnSelector appears to be added by Macros expansion.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5221","RelatedDescription":"Open issue \"CrossValidation Macros stops working in 1.5.0\" (#5221)"},{"Id":"635591558","IsPullRequest":false,"CreatedAt":"2020-06-09T16:34:45","Actor":"ganik","Number":"5220","RawContent":null,"Title":"DateTimeTransformer cant find its own json data ","State":"open","Body":"ML.NET 1.5.0\r\nML.Featurizers 0.17.0\r\nFeaturizers 0.4.1\r\n\r\nRun NimbusML test_datetimesplitter.py method test_holidays. You get Exception:\r\n\r\nRuntimeError: Error: *** System.Exception: ''Canada' is not a supported country name'\r\nStackTrace:    at Microsoft.ML.Featurizers.DateTimeTransformer.TypedColumn.CreateTransformerFromEstimatorBase(HolidayList country)\r\nat Microsoft.ML.Featurizers.DateTimeTransformer..ctor(IHostEnvironment host, String inputColumnName, String columnPrefix, HolidayList country, DataViewSchema schema)\r\nat Microsoft.ML.Featurizers.DateTimeEstimator.Fit(IDataView input)\r\nat Microsoft.ML.Featurizers.DateTimeTransformerEntrypoint.DateTimeSplit(IHostEnvironment env, Options input)\r\n\r\nThis is regression from ML.NET 1.5.0.preview2. \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5220","RelatedDescription":"Open issue \"DateTimeTransformer cant find its own json data \" (#5220)"},{"Id":"635287882","IsPullRequest":true,"CreatedAt":"2020-06-09T09:57:22","Actor":"suxi-ms","Number":"5218","RawContent":null,"Title":"add threshold for RCA","State":"open","Body":"Update Root Cause Analysis interface.\r\n\r\n\r\n\r\n- [ ] For root cause analysis interface, we added a new parameter called anomalyDeltaThreshold for users to choose. \r\n- [ ] It won't break existing interface if some users are using it.\r\n- [ ] Fixes #5188 .\r\n- [ ] Related PR #4925 \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5218","RelatedDescription":"Open PR \"add threshold for RCA\" (#5218)"},{"Id":"634993255","IsPullRequest":true,"CreatedAt":"2020-06-08T23:13:21","Actor":"ttstanley","Number":"5216","RawContent":null,"Title":"Updated codegen to support object detection scenario.","State":"open","Body":"Issue: https://github.com/dotnet/machinelearning-modelbuilder/issues/799\r\n\r\nThe previous version of the codegen did not support the new object detection feature. I have added some small changes to templates and some transforms to allow the correct changes for Object Detection Scenario in model builder.\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5216","RelatedDescription":"Open PR \"Updated codegen to support object detection scenario.\" (#5216)"},{"Id":"634796243","IsPullRequest":false,"CreatedAt":"2020-06-08T17:18:13","Actor":"LaurensVanAcker","Number":"5215","RawContent":null,"Title":"Retrain Custom TensorFlow Model Feature Request","State":"open","Body":"I designed (not trained) a siamese CNN network in Keras (python) and exported it as a SavedModel with the random weights.\r\n_Input = 4 dimensions (left/right image, height, width, RGB).\r\nOutput = change of images being equal (sigmoid)\r\n\r\nBut I don't understand how I can train this model from .NET Core?\r\n\r\nWhen I use:\r\n```csharp\r\nusing var tensorFlowModel = mlContext.Model.LoadTensorFlowModel(\"./model\");\r\nvar pipeline = tensorFlowModel.ScoreTensorFlowModel(\r\n new[] { inputComparer.Name },\r\n new[] { outputComparer.Name }, addBatchDimensionInput: true);\r\n```\r\n\r\nThen I potentially can get the output from the model, but it's untrained, so this makes no sense.\r\nSo I need a trainer. I tried with LbfgsLogisticRegression but then I get \"Schema mismatch for label column 'StatefulPartitionedCall': expected Boolean, got Vector<Single>\" which makes sense as the Tensorflow model don't output Booleans, but a Vector<Single>. Do I need another trainer?\r\n\r\nWhen I use the [ImageClassification](https://docs.microsoft.com/en-us/dotnet/machine-learning/tutorials/image-classification-api-transfer-learning) from this tutorial, I can only train one of the embedded networks from ImageClassificationTrainer.Architecture. It's a class output instead of binary, but that's OK. One class is also binary. But I want to train my own network.\r\n\r\n[This example](https://github.com/dotnet/machinelearning/blob/master/test/Microsoft.ML.Tests/ScenariosWithDirectInstantiation/TensorflowTests.cs) was the closest I could find.\r\n\r\nHow do I train my binary output Tensorflow siamese network?\r\n\r\nThe reason I want to train this network from .NET Core instead of Python is to test the speed improvements and rollout something independently of Python.","Url":"https://github.com/dotnet/machinelearning/issues/5215","RelatedDescription":"Open issue \"Retrain Custom TensorFlow Model Feature Request\" (#5215)"},{"Id":"634326757","IsPullRequest":false,"CreatedAt":"2020-06-08T08:00:35","Actor":"gagy3798","Number":"5214","RawContent":null,"Title":"Unseen labels during retraining map to value \"0\", results in System.InvalidOperationException: 'No valid training instances found, all instances have missing features.' ","State":"open","Body":"### System information\r\n\r\n- Windows Server 2016\r\n- .NET Version 3.1.300\r\n\r\n### Issue\r\nI'm trying to do MultiClass LbfgsMaximumEntropy Re-training\r\nWhen trying to Fit new data, I get System.InvalidOperationException: 'No valid training instances found, all instances have missing features.' on row\r\nITransformer _keyToValueModel1 = _mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(\"Label\", \"Features\")\r\n        .Fit(transformedData, originalModelParameters.Model);\r\n[data1.zip](https://github.com/dotnet/machinelearning/files/4744624/data1.zip)\r\n\r\n\r\nI would appreciate either help or MultiClass LbfgsMaximumEntropy Re-training code sample.\r\n\r\n### Source code / logs\r\n\r\n```c#\r\n[data1.zip](https://github.com/dotnet/machinelearning/files/4744619/data1.zip)\r\n[data2.zip](https://github.com/dotnet/machinelearning/files/4744620/data2.zip)\r\n\r\n\r\npublic class GitHubIssueClassification\r\n  {\r\n    static List<GitHubIssueTransformed> testDatas = new List<GitHubIssueTransformed>()\r\n    {\r\n      new GitHubIssueTransformed() {Area=\"11\", Title=\"WHIRLPOOL AWE 50610\", Description=\"\" },\r\n      new GitHubIssueTransformed() {Area=\"14\", Title=\"FAGOR 4CC-130 E X\", Description=\"\" },\r\n      new GitHubIssueTransformed() {Area=\"19\", Title=\"AEG T8DFE68SC\", Description=\"\" },\r\n      new GitHubIssueTransformed() {Area=\"999\", Title=\"TEST 999\", Description=\"\" }\r\n    };\r\n\r\n    private static string _appPath => Path.GetDirectoryName(Environment.GetCommandLineArgs()[0]);\r\n    private static string _mainDataPath1 => Path.Combine(_appPath, \"..\", \"..\", \"..\", \"Data\", \"data1.csv\");\r\n    private static string _mainDataPath2 => Path.Combine(_appPath, \"..\", \"..\", \"..\", \"Data\", \"data2.csv\");\r\n    private static string _mainDataPath3 => Path.Combine(_appPath, \"..\", \"..\", \"..\", \"Data\", \"data3.csv\");\r\n    private static string _modelPath => Path.Combine(_appPath, \"..\", \"..\", \"..\", \"Models\", \"trainedModel.zip\");\r\n    private static string _keyToValueModelPath => Path.Combine(_appPath, \"..\", \"..\", \"..\", \"Models\", \"keyToValueModel.zip\");\r\n\r\n    static DataOperationsCatalog.TrainTestData splittedData;\r\n\r\n    private static MLContext _mlContext;\r\n    private static PredictionEngine<GitHubIssueTransformed, IssuePrediction> _predEngine;\r\n    private static ITransformer _trainedModel { get; set; }\r\n    private static ITransformer _keyToValueModel { get; set; }\r\n    static IDataView _trainingDataView;\r\n    public static void Run()\r\n    {\r\n      _mlContext = new MLContext(seed: 0);\r\n\r\n      var allData = _mlContext.Data.LoadFromTextFile<GitHubIssue>(_mainDataPath1, hasHeader: true);\r\n      splittedData = _mlContext.Data.TrainTestSplit(allData, testFraction: 0.09);\r\n      _trainingDataView = splittedData.TrainSet;\r\n      Console.WriteLine($\"=============== Finished Loading Dataset  ===============\");\r\n\r\n      var pipeline = ProcessData();\r\n      var transformedData = BuildAndTrainModel(_trainingDataView, pipeline);\r\n      Evaluate(_trainingDataView.Schema, transformedData, splittedData.TestSet);\r\n      PredictIssue_FirstLoadModelFromDisk();\r\n\r\n      SecondLap(_mlContext);\r\n    }\r\n\r\n    public static IEstimator<ITransformer> ProcessData()\r\n    {\r\n      Console.WriteLine($\"=============== Processing Data ===============\");\r\n      var pipeline = _mlContext.Transforms.Conversion.MapValueToKey(inputColumnName: \"Area\", outputColumnName: \"Label\")\r\n                      .Append(_mlContext.Transforms.Text.FeaturizeText(inputColumnName: \"Title\", outputColumnName: \"TitleFeaturized\"))\r\n                      .Append(_mlContext.Transforms.Text.FeaturizeText(inputColumnName: \"Description\", outputColumnName: \"DescriptionFeaturized\"))\r\n                      .Append(_mlContext.Transforms.Concatenate(\"Features\", \"TitleFeaturized\", \"DescriptionFeaturized\"))\r\n                      .AppendCacheCheckpoint(_mlContext);\r\n\r\n      Console.WriteLine($\"=============== Finished Processing Data ===============\");\r\n\r\n      return pipeline;\r\n    }\r\n\r\n    public static IDataView BuildAndTrainModel(IDataView trainingDataView, IEstimator<ITransformer> pipeline)\r\n    {\r\n      //var trainingPipeline = pipeline.Append(_mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy/*.SdcaMaximumEntropy*/(\"Label\", \"Features\"))\r\n      //    .Append(_mlContext.Transforms.Conversion.MapKeyToValue(\"PredictedLabel\"));\r\n      var trainingPipeline = pipeline.Append(_mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy/*.SdcaMaximumEntropy*/(\"Label\", \"Features\"));\r\n      //var keyToValuePipeline = _mlContext.Transforms.Conversion.MapKeyToValue(\"PredictedLabel\");\r\n      var keyToValuePipeline = trainingPipeline.Append(_mlContext.Transforms.Conversion.MapKeyToValue(\"Area\", \"PredictedLabel\"));\r\n\r\n      Console.WriteLine($\"=============== Training the model  ===============\");\r\n\r\n      _trainedModel = trainingPipeline.Fit(trainingDataView);\r\n      var transformedData = _trainedModel.Transform(trainingDataView);\r\n      _keyToValueModel = keyToValuePipeline.Fit(transformedData);\r\n\r\n      _mlContext.Model.Save(_trainedModel, trainingDataView.Schema, _modelPath);\r\n      _mlContext.Model.Save(_keyToValueModel, transformedData.Schema, _keyToValueModelPath);\r\n\r\n      Console.WriteLine($\"=============== Finished Training the model Ending time: {DateTime.Now.ToString()} ===============\");\r\n\r\n      // (OPTIONAL) Try/test a single prediction with the \"just-trained model\" (Before saving the model)\r\n      Console.WriteLine($\"=============== Single Prediction just-trained-model ===============\");\r\n\r\n      _predEngine = _mlContext.Model.CreatePredictionEngine<GitHubIssueTransformed, IssuePrediction>(_keyToValueModel);\r\n      foreach (var testIssue in testDatas)\r\n      {\r\n        var prediction = _predEngine.Predict(testIssue);\r\n        if (prediction.Area.ToString() != testIssue.Area.ToString())\r\n          Console.ForegroundColor = ConsoleColor.Red;\r\n        else\r\n          Console.ForegroundColor = ConsoleColor.Blue;\r\n        Console.WriteLine($\"=============== Single Prediction just-trained-model - Result: {prediction.Area}/{testIssue.Area} {testIssue.Title} ===============\");\r\n      }\r\n      Console.ResetColor();      \r\n\r\n      return transformedData;\r\n    }\r\n\r\n    public static void Evaluate(DataViewSchema trainingDataViewSchema, IDataView transformedData, IDataView testDataView2 = null)\r\n    {\r\n      // STEP 5:  Evaluate the model in order to get the model's accuracy metrics\r\n      Console.WriteLine($\"=============== Evaluating to get model's accuracy metrics - Starting time: {DateTime.Now.ToString()} ===============\");\r\n\r\n      IDataView testDataView = testDataView2;\r\n\r\n      var testMetrics = _mlContext.MulticlassClassification.Evaluate(_trainedModel.Transform(testDataView));\r\n\r\n      Console.WriteLine($\"=============== Evaluating to get model's accuracy metrics - Ending time: {DateTime.Now.ToString()} ===============\");\r\n      Console.WriteLine($\"*************************************************************************************************************\");\r\n      Console.WriteLine($\"*       Metrics for Multi-class Classification model - Test Data     \");\r\n      Console.WriteLine($\"*------------------------------------------------------------------------------------------------------------\");\r\n      Console.WriteLine($\"*       MicroAccuracy:    {testMetrics.MicroAccuracy:0.###}\");\r\n      Console.WriteLine($\"*       MacroAccuracy:    {testMetrics.MacroAccuracy:0.###}\");\r\n      Console.WriteLine($\"*       LogLoss:          {testMetrics.LogLoss:#.###}\");\r\n      Console.WriteLine($\"*       LogLossReduction: {testMetrics.LogLossReduction:#.###}\");\r\n      Console.WriteLine($\"*************************************************************************************************************\");\r\n\r\n      SaveModelAsFile(_mlContext, trainingDataViewSchema, transformedData, _trainedModel, _keyToValueModel);\r\n    }\r\n\r\n    public static void PredictIssue_FirstLoadModelFromDisk()\r\n    {\r\n      //ITransformer loadedModel = _mlContext.Model.Load(_modelPath, out var modelInputSchema);\r\n      ITransformer loadedModel = _mlContext.Model.Load(_keyToValueModelPath, out var modelInputSchema);\r\n\r\n      foreach (var testIssue in testDatas)\r\n      {\r\n        _predEngine = _mlContext.Model.CreatePredictionEngine<GitHubIssueTransformed, IssuePrediction>(loadedModel);\r\n        var prediction = _predEngine.Predict(testIssue);\r\n        if (prediction.Area.ToString() != testIssue.Area.ToString())\r\n          Console.ForegroundColor = ConsoleColor.Red;\r\n        else\r\n          Console.ForegroundColor = ConsoleColor.Blue;\r\n        Console.WriteLine($\"=============== Single Prediction - Result: {prediction.Area}/{testIssue.Area} {testIssue.Title} ===============\");\r\n        Console.ResetColor();\r\n      }\r\n    }\r\n\r\n    private static void SaveModelAsFile(MLContext mlContext, DataViewSchema trainingDataViewSchema,\r\n      IDataView transformedData, ITransformer _trainedModel, ITransformer _keyToValueModel)\r\n    {\r\n      //mlContext.Model.Save(_trainedModel, trainingDataViewSchema, _modelPath);\r\n      //mlContext.Model.Save(_keyToValueModel, transformedData.Schema, _keyToValueModelPath);\r\n      Console.WriteLine(\"The model is saved to {0}\", _modelPath);\r\n    }\r\n\r\n    static void SecondLap(MLContext _mlContext)\r\n    {\r\n      var allData = _mlContext.Data.LoadFromTextFile<GitHubIssue>(_mainDataPath2, hasHeader: true);\r\n      splittedData = _mlContext.Data.TrainTestSplit(allData, testFraction: 0.09);\r\n      _trainingDataView = splittedData.TrainSet;\r\n\r\n      ITransformer dataPrepPipeline = _mlContext.Model.Load(_modelPath, out var dataPrepPipelineSchema);\r\n      var originalModelParameters = (dataPrepPipeline as TransformerChain<ITransformer>).LastTransformer as MulticlassPredictionTransformer<MaximumEntropyModelParameters>;      \r\n\r\n      int rowsCount = splittedData.TrainSet.Preview().RowView.Count();\r\n      //var transformedData = dataPrepPipeline.Transform(splittedData.TrainSet);\r\n      //var transformedData = _keyToValueModel.Transform(splittedData.TrainSet);\r\n      var transformedData = _trainedModel.Transform(splittedData.TrainSet);\r\n\r\n      ITransformer _keyToValueModel1 = _mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(\"Label\", \"Features\")\r\n        .Fit(transformedData, originalModelParameters.Model);\r\n    }\r\n  }\r\npublic class GitHubIssue\r\n  {\r\n    [LoadColumn(0)]\r\n    public string ID { get; set; }\r\n    [LoadColumn(1)]\r\n    public string Area { get; set; }\r\n    [LoadColumn(2)]\r\n    public string Title { get; set; }\r\n    [LoadColumn(3)]\r\n    public string Description { get; set; }\r\n  }\r\n\r\n  public class GitHubIssueTransformed: GitHubIssue\r\n  {\r\n    //[ColumnName(\"PredictedLabel\")]\r\n    //public string XX;\r\n  }\r\n\r\n  public class IssuePrediction\r\n  {\r\n    //[ColumnName(\"PredictedLabel\")]\r\n    public string Area;\r\n  }\r\n```\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5214","RelatedDescription":"Open issue \"Unseen labels during retraining map to value \"0\", results in System.InvalidOperationException: 'No valid training instances found, all instances have missing features.' \" (#5214)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-06-16T05:30:37.7206837Z","RunDurationInMilliseconds":821}