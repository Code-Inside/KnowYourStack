{"Data":{"GitHub":{"Issues":[{"Id":"2033064887","IsPullRequest":false,"CreatedAt":"2023-12-08T17:38:18","Actor":"BartNSTCL","Number":"6903","RawContent":null,"Title":"Support for Microsoft.Data.SqlClient","State":"open","Body":"I always use the Nuget Microsoft.Data.SqlClient since it seems better and its Microsoft's recommendation.\r\n\r\nWhen using the ML.NET Model Builder, it uses System.Sql.SqlClient and that should up as an vulnerable dependency.\r\n\r\nWhile I can could just right code myself, I'd like to see the Model Builder use the new technology. \r\n\r\nI tried searching the Issues for this particular request, but I didn't see it. So if its a duplicate, it can be closed.","Url":"https://github.com/dotnet/machinelearning/issues/6903","RelatedDescription":"Open issue \"Support for Microsoft.Data.SqlClient\" (#6903)"},{"Id":"1991542117","IsPullRequest":false,"CreatedAt":"2023-12-07T21:32:45","Actor":"anrouxel","Number":"6883","RawContent":null,"Title":"French Named Entity Recognizer","State":"closed","Body":"Hello,\r\n**Is your feature request related to a problem? Please describe.**\r\nMy problem is that the Named Entity Recognizer doesn't support French. And, I'm working on a student project which is the creation of a medical application. And I need to extract information from a prescription (stored in a string) such as the name of the medicine.\r\n\r\n**Describe the solution you'd like**\r\nThe solution would be for \"Named Entity Recognizer\" to support French.\r\n\r\n**Describe alternatives you've considered**\r\n\r\n**Additional context**\r\n\r\nBest Regards,\r\n\r\nanrouxel","Url":"https://github.com/dotnet/machinelearning/issues/6883","RelatedDescription":"Closed issue \"French Named Entity Recognizer\" (#6883)"},{"Id":"2015005859","IsPullRequest":false,"CreatedAt":"2023-12-07T21:14:55","Actor":"fuszenecker","Number":"6893","RawContent":null,"Title":"Unhandled exception. System.EntryPointNotFoundException: Unable to find an entry point named 'TF_StringEncodedSize' in shared library 'tensorflow'.","State":"closed","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Ubuntu Linux 22.04 LTS\r\n - ML.NET Version: 3.0.0\r\n - .NET Version: .NET 8.0\r\n\r\n**Describe the bug**\r\nWhen I try to train a model for image classification, I receive the exception below:\r\n\r\n```\r\nUnhandled exception. System.EntryPointNotFoundException: Unable to find an entry point named 'TF_StringEncodedSize' in shared library 'tensorflow'.\r\n   at Tensorflow.c_api.TF_StringEncodedSize(UInt64 len)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.EncodeByteAsString(VBuffer`1 buffer)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.ImageProcessor.ProcessImage(VBuffer`1& imageBuffer)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.CacheFeaturizedImagesToDisk(IDataView input, String labelColumnName, String imageColumnName, ImageProcessor imageProcessor, String inputTensorName, String outputTensorName, String cacheFilePath, Dataset dataset, Action`1 metricsCallback, Nullable`1 validationFraction)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Program.<Main>$(String[] args) in /home/fuszenecker/dev/zp/Program.cs:line 25\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Update the `SciSharp.TensorFlow.Redist` package from `2.3.1` to `2.16.0`.\r\n2. See error\r\n\r\n**Expected behavior**\r\nNo exception received, the classification works as expected.\r\n\r\n**Screenshots, Code, Sample Projects**\r\n\r\n```\r\n  <ItemGroup>\r\n    <PackageReference Include=\"Microsoft.ML.Mkl.Redist\" Version=\"3.0.0\" />\r\n    <PackageReference Include=\"Microsoft.ML.ImageAnalytics\" Version=\"3.0.0\" />\r\n    <PackageReference Include=\"Microsoft.ML.Vision\" Version=\"3.0.0\" />\r\n    <PackageReference Include=\"SciSharp.TensorFlow.Redist\" Version=\"2.16.0\" />\r\n  </ItemGroup>\r\n```\r\n\r\n**Additional context**\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6893","RelatedDescription":"Closed issue \"Unhandled exception. System.EntryPointNotFoundException: Unable to find an entry point named 'TF_StringEncodedSize' in shared library 'tensorflow'.\" (#6893)"},{"Id":"2027134197","IsPullRequest":false,"CreatedAt":"2023-12-07T21:11:13","Actor":"luisquintanilla","Number":"6899","RawContent":null,"Title":"Add AMD/ROCM support to ML.NET","State":"closed","Body":"Issue originally reported in Model Builder repo by @Selbyl\r\n\r\ndotnet/machinelearning-modelbuilder#2764\r\n\r\n> ROCM is being supported more on Windows recently.\r\n> \r\n> I know AMD isn't as popular as Nvidia for AI, but is ther any future of updating ml.net to support PyTorch with ROCM?\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6899","RelatedDescription":"Closed issue \"Add AMD/ROCM support to ML.NET\" (#6899)"},{"Id":"2017016289","IsPullRequest":true,"CreatedAt":"2023-12-07T20:15:05","Actor":"taeerhebend","Number":"6895","RawContent":null,"Title":"Update release-3.0.0.md","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6895","RelatedDescription":"Closed or merged PR \"Update release-3.0.0.md\" (#6895)"},{"Id":"2031129307","IsPullRequest":false,"CreatedAt":"2023-12-07T16:39:48","Actor":"luisquintanilla","Number":"6902","RawContent":null,"Title":"Publish ML.NET 3.0 API Documentation ","State":"open","Body":"Latest API doc version is 2.0. Add 3.0\r\n\r\nhttps://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.textcatalog.applywordembedding?view=ml-dotnet\r\n\r\n![image](https://github.com/dotnet/machinelearning/assets/46974588/045f66c0-84f9-4680-ab23-56fe145b4fd4)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6902","RelatedDescription":"Open issue \"Publish ML.NET 3.0 API Documentation \" (#6902)"},{"Id":"2029350787","IsPullRequest":false,"CreatedAt":"2023-12-06T20:43:12","Actor":"shaltielshmid","Number":"6901","RawContent":null,"Title":"[Tokenizers] Add support for HuggingFace BPE Tokenizer format","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\n\r\nI'm requesting this feature after trying to use the GPT2-style tokenizer I trained using HuggingFace in my .NET code. I had trained a model and converted the model to ONNX, but the tokenizer didn't transfer. An exact description of the problem is listed down below.\r\n\r\n**Describe the solution you'd like**\r\n\r\nAdd support for a flag indicating that the tokenizer came from the HuggingFace BPE trainer, and behind the scenes handle the minor changes required. \r\n\r\n**Describe alternatives you've considered**\r\n\r\nCurrently I have a class I wrote which wraps a BPE trainer and applies the adjustments before every call to the ML.NET BPE tokenizer.\r\n\r\n**Additional context**\r\n\r\nIn the HuggingFace BPE code they have a dictionary `bytes_to_unicode()` which is list of utf-8 byte and a mapping to unicode strings. They run every byte in the string through the mapping before running the BPE encoder/decoder. Examples of where it's used can be found [here](https://github.com/huggingface/transformers/blob/main/src/transformers/models/gpt2/tokenization_gpt2.py#L185) and [here](https://github.com/huggingface/transformers/blob/main/src/transformers/models/bart/tokenization_bart.py#L213-L214) and in other places. \r\n\r\nBefore the encoding, they treat the string as bytes and map all the bytes to representative unicode strings, and the same thing during after the decoding. \r\n\r\nReal example:\r\n\r\nI trained a BPE tokenizer using HuggingFace's `tokenizers.ByteLevelBPETokenizer`. The merges.txt and vocab.json can be found here: [https://gist.github.com/shaltielshmid/58b7c1109639eefcd714eb6bfc3eb602](https://gist.github.com/shaltielshmid/58b7c1109639eefcd714eb6bfc3eb602).\r\n\r\nSample python code:\r\n```python\r\nfrom transformers import GPT2Tokenizer\r\ntokenizer = GPT2Tokenizer.from_pretrained('/path/to/tokenizer')\r\nprint(tokenizer.encode('שלום וברכה')); // [150, 662, 426, 1396]\r\nprint(tokenizer.decode([150, 662, 426, 1396])); // שלום וברכה\r\n```\r\n\r\nSample C# code:\r\n```cs\r\nvar bpe = new Bpe(\"/path/to/vocab.json\", \"/path/to/merges.txt\");\r\nstring phrase = \"שלום וברכה\";\r\nConsole.WriteLine(string.Join(\", \", bpe.Tokenize(phrase).Select(t => t.Id.ToString()))); // 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\r\nstring decoded = Bpe.Decoder.Decode(new List<int> { 150, 662, 426, 1396 }.Select(id => bpe.IdToToken(id)!)); \r\nConsole.WriteLine(decoded); // ×©×ľ×ķ×ĿĠ×ķ×ĳ×¨×Ľ×Ķ\r\n\r\n// with proposed solution from down below\r\nphrase = new string(Encoding.UTF8.GetBytes(phrase).Select(b => hf_encoder[b]).ToArray());\r\nConsole.WriteLine(string.Join(\", \", bpe.Tokenize(phrase).Select(t => t.Id.ToString()))); // 150, 662, 426, 1396\r\ndecoded = Encoding.UTF8.GetString(decoded.Select(c => (byte)hf_decoder[c]).ToArray());\r\nConsole.WriteLine(decoded); // שלום וברכה\r\n```\r\n\r\n**Proposed Solution**\r\n\r\nCreate a static dictionary in the BPE class, which is initialized once:\r\n\r\n```cs\r\nvar hf_encoder = new Dictionary<int, char>();\r\nfor (int c = '!'; c <= '~'; c++) hf_encoder.Add(c, (char)c);\r\nfor (int c = '¡'; c <= '¬'; c++) hf_encoder.Add(c, (char)c);\r\nfor (int c = '®'; c <= 'ÿ'; c++) hf_encoder.Add(c, (char)c);\r\nint n = 0;\r\nfor (int c = 0; c < 256; c++) {\r\n    if (!hf_encoder.ContainsKey(c))\r\n        hf_encoder.Add(c, (char)(256 + n++));\r\n}\r\n\r\nvar hf_decoder = hf_encoder.ToDictionary(kvp => kvp.Value, kvp => kvp.Key);\r\n```\r\n\r\nThen, in the BPE.cs class in the `Tokenize` function [here](https://github.com/dotnet/machinelearning/blob/main/src/Microsoft.ML.Tokenizers/Model/BPE.cs#L156), add the following check:\r\n\r\n```cs\r\nif (_isHFFormat) {\r\n    sequence = new string(Encoding.UTF8.GetBytes(sequence).Select(b => hf_encoder[b]).ToArray())\r\n}\r\n```\r\n\r\nAnd then in the BPEDecoder.cs file, in the `Decode` function [here](https://github.com/dotnet/machinelearning/blob/main/src/Microsoft.ML.Tokenizers/Model/BPEDecoder.cs#L35)\r\n\r\n```cs\r\nstring ret = string.Join(\"\", tokens);\r\nif (_suffix != null)\r\n{\r\n    ret = ret.Replace(_suffix, \" \");\r\n}\r\n\r\nif (_isHFFormat) {\r\n    ret = Encoding.UTF8.GetString(ret.Select(c => (byte)hf_decoder[c]).ToArray())\r\n}\r\n\r\nreturn ret;\r\n```\r\n\r\nWould be happy to compile this into a PR, if relevant.\r\n\r\n@luisquintanilla \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6901","RelatedDescription":"Open issue \"[Tokenizers] Add support for HuggingFace BPE Tokenizer format\" (#6901)"},{"Id":"2027301365","IsPullRequest":false,"CreatedAt":"2023-12-05T23:23:35","Actor":"bruno-garcia","Number":"6900","RawContent":null,"Title":"Add `source link`, `deterministic` build and symbols on release/nuget package","State":"open","Body":"The current publish flow ([as of 3.0.0](https://nuget.info/packages/Microsoft.ML/3.0.0)) isn't following the [NuGet package best practicies](https://learn.microsoft.com/en-us/nuget/create-packages/package-authoring-best-practices).\r\n\r\n![image](https://github.com/dotnet/machinelearning/assets/1633368/5a0b0283-3d9c-4b16-bce8-6daa0101dfd1)\r\n\r\nIdeally it:\r\n1. uses the compiler `deterministic` flag to allow us to match source to the compiled DLLs.\r\n2. publishes a debug symbols package to nuget.org so tools like IDEs and crash reporting services like http://sentry.io can fetch symbols and show line numbers, file paths\r\n3. Add [`sourcelink` and embed sources](https://learn.microsoft.com/en-us/dotnet/standard/library-guidance/sourcelink) so tools can fetch the source code at the exact commit published, as well as display link to open file on GitHub (Sentry can do that for example)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6900","RelatedDescription":"Open issue \"Add `source link`, `deterministic` build and symbols on release/nuget package\" (#6900)"},{"Id":"1976548312","IsPullRequest":false,"CreatedAt":"2023-12-05T20:57:48","Actor":"mvphelps","Number":"6878","RawContent":null,"Title":"Cannot cancel AutoML tasks when invoked via .Execute()","State":"closed","Body":"**Is your feature request related to a problem? Please describe.**\r\nAutoML tasks created like mlContext.Auto().CreateRegressionExperiment(), when .Execute is invoked, are not cancellable. The cancellation token passed in the the settings on the Create call is ignored. Therefore a training run cannot be cancelled gracefully.\r\n\r\n**Describe the solution you'd like**\r\n1. Add an optional parameter to AutoMLExperiment.Run() that is a cancellation token with a default (identical to .RunAsync). \r\n2. Passed the new token on to .RunAsync. \r\n3. Update the callers to pass along their settings token. For example, in RegressionExperiment.Execute, the call to _experiment.Run() would become _experiment.Run(Settings.CancellationToken).\r\n\r\n**Describe alternatives you've considered**\r\nI do not see any alternatives. \r\n\r\n**Additional context**\r\nI am prepared to offer a PR for this. It would include connecting this functionality for RegressionExperiment, BinaryClassificationExperiment, and MulticlassClassificationExperiment, all of which suffer the same issue. For test coverage it appears something similar to AutoMLExperimentTests.AutoMLExperiment_throw_timeout_exception_when_ct_is_canceled_and_no_trial_completed_Async; invoking the synchronous version via another test would cover ensuring the token is passed along. For the individual experiment types, I don't see any tests that cover running these experiments via this api style, except for GridSearchTest.TestGridSearchTrialRunner2. I can attempt to follow a similar pattern such as this for each of the three experiment types. \r\n","Url":"https://github.com/dotnet/machinelearning/issues/6878","RelatedDescription":"Closed issue \"Cannot cancel AutoML tasks when invoked via .Execute()\" (#6878)"},{"Id":"2024381976","IsPullRequest":false,"CreatedAt":"2023-12-04T17:35:32","Actor":"olkogit","Number":"6898","RawContent":null,"Title":"Exception specification is missing","State":"open","Body":"possible exceptions are not specified\r\n\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for learn.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: 3d0a0594-0375-c48f-3f80-a7ac2f71628f\r\n* Version Independent ID: 2eb389a5-d5c5-694a-5e62-ffd1c964ae4b\r\n* Content: [DataFrame.LoadCsv Method (Microsoft.Data.Analysis)](https://learn.microsoft.com/en-us/dotnet/api/microsoft.data.analysis.dataframe.loadcsv?view=ml-dotnet-preview&viewFallbackFrom=ml-dotnet&devlangs=csharp&f1url=%3FappId%3DDev16IDEF1%26l%3DEN-US%26k%3Dk(Microsoft.Data.Analysis.DataFrame.LoadCsv)%3Bk(DevLang-csharp)%26rd%3Dtrue)\r\n* Content Source: [dotnet/xml/Microsoft.Data.Analysis/DataFrame.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.Data.Analysis/DataFrame.xml)\r\n* Product: **dotnet-ml-api**\r\n* GitHub Login: @natke\r\n* Microsoft Alias: **nakersha**","Url":"https://github.com/dotnet/machinelearning/issues/6898","RelatedDescription":"Open issue \"Exception specification is missing\" (#6898)"},{"Id":"2017658732","IsPullRequest":true,"CreatedAt":"2023-12-01T01:14:51","Actor":"jeffhandley","Number":"6896","RawContent":null,"Title":"Migrate to the 'locker' GitHub action for locking closed/stale issues/PRs","State":"closed","Body":"This migrates away from the FabricBot implementation of a scheduled search over closed issues and adopts the [Locker](https://github.com/microsoft/vscode-github-triage-actions/?tab=readme-ov-file#locker) GitHub action authored by the VS Code team.\r\n\r\nThe updated fabricbot.json was generated via https://github.com/dotnet/fabricbot-config/pull/83. The workflow file was implemented and tested at https://github.com/dotnet/fabricbot-config/blob/main/.github/workflows/locker.yml.\r\n\r\nSince this workflow uses the actions/checkout action, we need to ensure the following GitHub Actions settings are enabled:\r\n\r\n1. Allow enterprise, and select non-enterprise, actions and reusable workflows\r\n2. Allow actions created by GitHub","Url":"https://github.com/dotnet/machinelearning/pull/6896","RelatedDescription":"Closed or merged PR \"Migrate to the 'locker' GitHub action for locking closed/stale issues/PRs\" (#6896)"},{"Id":"2019501895","IsPullRequest":false,"CreatedAt":"2023-11-30T21:00:19","Actor":"superichmann","Number":"6897","RawContent":null,"Title":"LightGbm Regression Trainer Multiple Unneeded Database Access","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 10\r\n - ML.NET Version: Microsot.ML 3.0.0\r\n\r\n**Describe the bug**\r\nFit method accesses the database two times instead of one time.\r\nCache was set.\r\nMaximum BatchSize was set\r\na 15 seconds delay happens between the two queries.\r\nDatabase server is in the same server with the running code, there is no load on the server.\r\n\r\n**To Reproduce**\r\n**if you dont have time to reproduce please just look at [my ipynb code](https://github.com/dotnet/machinelearning/files/13517493/ml-lgbm-access-database-twice.json)**\r\nCreate a database loader for the data, see [this ipynb](https://github.com/dotnet/machinelearning/files/13517493/ml-lgbm-access-database-twice.json) (change from json to ipynb)\r\ndownload [QDB ](https://questdb.io/get-questdb/) and install\r\nmy data is from [here](https://www.kaggle.com/competitions/store-sales-time-series-forecasting/data) but you can use your own data\r\n\r\n**Expected behavior**\r\nThe LightGbm trainer should query the database once and not twice.\r\n\r\n**Screenshots, Code, Sample Projects**\r\nDatabase log:\r\n```\r\n2023-11-30T20:35:42.275822Z I server-main os scheduled worker started [name=ilpwriter_0]\r\n2023-11-30T20:35:42.823066Z A server-main enjoy\r\n2023-11-30T20:35:51.589288Z I pg-server connected [ip=127.0.0.1, fd=3436]\r\n2023-11-30T20:35:51.591142Z I i.q.g.SqlCompilerImpl parse [fd=3436, q=xHole where date<'2017-01-01T00:00:00.000000Z']\r\n2023-11-30T20:35:51.600643Z I i.q.g.SqlCompilerImpl plan [q=`select-choose date, store_nbr, family, sfZero, id, sf, sales, onpromotion, sfOpen, sfPromotion, transactions, dcoilwtico, city, local_event, local_type, local_desc, local_transferred, state, regional_event, regional_type, regional_desc, regional_transferred, national_event, national_type, national_desc, national_transferred, type, cluster, doywoy, yearcount, monthCount, weekOfYear, DayOfWeek, DayOfMonth, daysCounter, monthProgress, dayOfYear, yearProgress, Weekend, quarter, RANAD, familysfOpen from (select [date, store_nbr, family, sfZero, id, sf, sales, onpromotion, sfOpen, sfPromotion, transactions, dcoilwtico, city, local_event, local_type, local_desc, local_transferred, state, regional_event, regional_type, regional_desc, regional_transferred, national_event, national_type, national_desc, national_transferred, type, cluster, doywoy, yearcount, monthCount, weekOfYear, DayOfWeek, DayOfMonth, daysCounter, monthProgress, dayOfYear, yearProgress, Weekend, quarter, RANAD, familysfOpen] from xHole timestamp (date) where date < '2017-01-01T00:00:00.000000Z')`, fd=3436]\r\n2023-11-30T20:35:51.605458Z I i.q.c.TableReader open partition C:\\qdbroot\\db\\xHole\\2013 [rowCount=650430, partitionNameTxn=-1, transientRowCount=433026, partitionIndex=0, partitionCount=5]\r\n2023-11-30T20:35:51.608417Z I i.q.c.TableReader open partition C:\\qdbroot\\db\\xHole\\2014 [rowCount=655776, partitionNameTxn=-1, transientRowCount=433026, partitionIndex=1, partitionCount=5]\r\n2023-11-30T20:35:51.611011Z I i.q.c.TableReader open partition C:\\qdbroot\\db\\xHole\\2015 [rowCount=650430, partitionNameTxn=-1, transientRowCount=433026, partitionIndex=2, partitionCount=5]\r\n2023-11-30T20:35:51.613647Z I i.q.c.TableReader open partition C:\\qdbroot\\db\\xHole\\2016 [rowCount=669042, partitionNameTxn=-1, transientRowCount=433026, partitionIndex=3, partitionCount=5]\r\n2023-11-30T20:36:04.985713Z I i.q.g.SqlCompilerImpl parse [fd=-1, q=DISCARD ALL]\r\n2023-11-30T20:36:04.985903Z I i.q.c.p.PGConnectionContext exec [fd=3436, q=xHole where date<'2017-01-01T00:00:00.000000Z']\r\n2023-11-30T20:36:04.985926Z I i.q.c.p.PGConnectionContext query cache used [fd=3436]\r\n2023-11-30T20:36:31.160548Z I i.q.g.SqlCompilerImpl parse [fd=-1, q=DISCARD ALL]\r\n2023-11-30T20:36:31.160893Z I i.q.g.SqlCompilerImpl parse [fd=3436, q=xHole where date<'2017-08-16T00:00:00.000000Z' AND date>='2017-01-01T00:00:00.000000Z']\r\n2023-11-30T20:36:31.163041Z I i.q.g.SqlCompilerImpl plan [q=`select-choose date, store_nbr, family, sfZero, id, sf, sales, onpromotion, sfOpen, sfPromotion, transactions, dcoilwtico, city, local_event, local_type, local_desc, local_transferred, state, regional_event, regional_type, regional_desc, regional_transferred, national_event, national_type, national_desc, national_transferred, type, cluster, doywoy, yearcount, monthCount, weekOfYear, DayOfWeek, DayOfMonth, daysCounter, monthProgress, dayOfYear, yearProgress, Weekend, quarter, RANAD, familysfOpen from (select [date, store_nbr, family, sfZero, id, sf, sales, onpromotion, sfOpen, sfPromotion, transactions, dcoilwtico, city, local_event, local_type, local_desc, local_transferred, state, regional_event, regional_type, regional_desc, regional_transferred, national_event, national_type, national_desc, national_transferred, type, cluster, doywoy, yearcount, monthCount, weekOfYear, DayOfWeek, DayOfMonth, daysCounter, monthProgress, dayOfYear, yearProgress, Weekend, quarter, RANAD, familysfOpen] from xHole timestamp (date) where date < '2017-08-16T00:00:00.000000Z' and date >= '2017-01-01T00:00:00.000000Z')`, fd=3436]\r\n2023-11-30T20:36:31.164073Z I i.q.c.TableReader open partition C:\\qdbroot\\db\\xHole\\2017 [rowCount=433026, partitionNameTxn=-1, transientRowCount=433026, partitionIndex=4, partitionCount=5]\r\n```\r\n![image](https://github.com/dotnet/machinelearning/assets/79865853/87ef46ac-19d6-4fbe-9b3c-1e34a4c0a29a)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6897","RelatedDescription":"Open issue \"LightGbm Regression Trainer Multiple Unneeded Database Access\" (#6897)"},{"Id":"2015361932","IsPullRequest":true,"CreatedAt":"2023-11-29T20:31:24","Actor":"fuszenecker","Number":"6894","RawContent":null,"Title":"Added missing TF_StringEncodedSize.","State":"closed","Body":"Fixes #6893\r\n\r\nIn the recent versions of TensorFlow, the method `TF_StringEncodedSize` was removed.\r\nI implemented the same code in C#, also added new props for separate `SciSharp.TensorFlow.Redist-Linux-GPU` and `SciSharp.TensorFlow.Redist-Windows-GPU` packages.\r\n\r\nWe are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [X] There's a descriptive title that will make sense to other developers some time from now. \r\n- [X] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [X] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [X] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6894","RelatedDescription":"Closed or merged PR \"Added missing TF_StringEncodedSize.\" (#6894)"},{"Id":"2014224901","IsPullRequest":false,"CreatedAt":"2023-11-28T11:27:05","Actor":"80LevelElf","Number":"6892","RawContent":null,"Title":"OneDAL FastForest training has an IndexOutOfRange exception for ML.net 3","State":"open","Body":"**System Information (please complete the following information):**\r\nOS & Version: mcr.microsoft.com/dotnet/sdk:5.0 docker image (Linux Alpine)\r\nML.NET Version: 3.0.0\r\n.NET Version: NET 5.0\r\n\r\n```\r\nSystem.AggregateException: One or more errors occurred. (Index was outside the bounds of the array.)\\n ---> \r\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\\n   at \r\nMicrosoft.ML.Trainers.FastTree.InternalRegressionTree.PopulateThresholds(Dataset dataset)\\n   at \r\nMicrosoft.ML.Trainers.FastTree.FastForestBinaryTrainer.TrainCoreOneDal(IChannel ch, Factory cursorFactory, Int32 featureCount)\\n   at \r\nMicrosoft.ML.Trainers.FastTree.FastForestBinaryTrainer.TrainModelCore(TrainContext context)\\n   at \r\nMicrosoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\\n   at \r\nMicrosoft.ML.Trainers.TrainerEstimatorBase`2.Fit(IDataView input)\\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\\n   at \r\nMicrosoft.ML.TrainCatalogBase.CrossValidateTrain(IDataView data, IEstimator`1 estimator, Int32 numFolds, String samplingKeyColumn, Nullable`1 seed)\\n   at\r\n Microsoft.ML.BinaryClassificationCatalog.CrossValidateNonCalibrated(IDataView data, IEstimator`1 estimator, Int32 numberOfFolds, String labelColumnName, String samplingKeyColumnName, Nullable`1 seed)\\n   at \r\nMicrosoft.ML.AutoML.BinaryClassificationRunner.Run(TrialSettings settings)\\n   at \r\nMicrosoft.ML.AutoML.BinaryClassificationRunner.RunAsync(TrialSettings settings, CancellationToken ct)\\n   at \r\nMicrosoft.ML.AutoML.AutoMLExperiment.RunAsync(CancellationToken ct)\\n   --- End of inner exception stack trace ---\\n   at \r\nSystem.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)\\n   at System.Threading.Tasks.Task`1.get_Result()\\n   at Microsoft.ML.AutoML.AutoMLExperiment.Run()\\n   at\r\n Microsoft.ML.AutoML.BinaryClassificationExperiment.Execute(IDataView trainData, ColumnInformation columnInformation, IEstimator`1 preFeaturizer, IProgress`1 progressHandler)\\n   at\r\n Microsoft.ML.AutoML.BinaryClassificationExperiment.Execute(IDataView trainData, String labelColumnName, String samplingKeyColumn, IEstimator`1 preFeaturizer, IProgress`1 progressHandler)\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/6892","RelatedDescription":"Open issue \"OneDAL FastForest training has an IndexOutOfRange exception for ML.net 3\" (#6892)"},{"Id":"2009298754","IsPullRequest":false,"CreatedAt":"2023-11-28T08:55:26","Actor":"IldarKhayrutdinov","Number":"6890","RawContent":null,"Title":"nuget packages 3.0","State":"closed","Body":"Please publish nuget packages for the latest release.","Url":"https://github.com/dotnet/machinelearning/issues/6890","RelatedDescription":"Closed issue \"nuget packages 3.0\" (#6890)"},{"Id":"2013189238","IsPullRequest":false,"CreatedAt":"2023-11-27T22:04:27","Actor":"superichmann","Number":"6891","RawContent":null,"Title":"Undocumented Behavior of FilterRowsByColumn ","State":"open","Body":"what is the exact type that the column we filter on should have?\r\nSingle?\r\nDouble?\r\nBoth?\r\n\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for learn.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: a8702f4a-4af4-3b42-53c1-7c2f9cf16a5f\r\n* Version Independent ID: 49c92237-80e4-55a0-ad26-27ecced0676a\r\n* Content: [DataOperationsCatalog.FilterRowsByColumn Method (Microsoft.ML)](https://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.dataoperationscatalog.filterrowsbycolumn?view=ml-dotnet)\r\n* Content Source: [dotnet/xml/Microsoft.ML/DataOperationsCatalog.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML/DataOperationsCatalog.xml)\r\n* Product: **dotnet-ml-api**\r\n* GitHub Login: @natke\r\n* Microsoft Alias: **nakersha**","Url":"https://github.com/dotnet/machinelearning/issues/6891","RelatedDescription":"Open issue \"Undocumented Behavior of FilterRowsByColumn \" (#6891)"},{"Id":"2008457168","IsPullRequest":false,"CreatedAt":"2023-11-23T15:32:52","Actor":"VadimPeczynski","Number":"6889","RawContent":null,"Title":"Field with type string cannot be transformed for one hot encoder","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 10 \r\n - ML.NET Version: ML.NET v3.0.0-preview.23511.1\r\n - .NET Version: .NET 7.0\r\n\r\n**Describe the bug**\r\nI'm not able to process the data which I'm providing, when I'm using in the model one hot encoder. The string can not be processed.\r\n![image](https://github.com/dotnet/machinelearning/assets/28846353/37454c0a-4201-4380-8ec9-77b03e07360e)\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\n//Define DataViewSchema for data preparation pipeline and trained model\r\nDataViewSchema dataPrepPipelineSchema, modelSchema;\r\n\r\n// Load trained model\r\nITransformer dataPrepPipeline = mlContext.Model.Load(\"data_preparation_pipeline.zip\", out dataPrepPipelineSchema);\r\nITransformer predictionPipeline = mlContext.Model.Load(\"model.zip\", out modelSchema);\r\n\r\n//Load New Data\r\nvar newData = DataFrame.LoadCsv(\"data/input.csv\");\r\n\r\n// Preprocess Data\r\nIDataView transformedNewData = dataPrepPipeline.Transform(newData);\r\n\r\nIDataView predictions = predictionPipeline.Transform(transformedNewData);\r\n```\r\n\r\n**Expected behavior**\r\nModel can load data with type string\r\n[data_preparation_pipeline.zip](https://github.com/dotnet/machinelearning/files/13451636/data_preparation_pipeline.zip)\r\n[model.zip](https://github.com/dotnet/machinelearning/files/13451637/model.zip)\r\n[input.csv](https://github.com/dotnet/machinelearning/files/13451641/input.csv)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6889","RelatedDescription":"Open issue \"Field with type string cannot be transformed for one hot encoder\" (#6889)"},{"Id":"2005958624","IsPullRequest":true,"CreatedAt":"2023-11-22T19:35:14","Actor":"michaelgsharp","Number":"6888","RawContent":null,"Title":"Release notes for 3.0","State":"closed","Body":"Final release notes for 3.0","Url":"https://github.com/dotnet/machinelearning/pull/6888","RelatedDescription":"Closed or merged PR \"Release notes for 3.0\" (#6888)"},{"Id":"1986189202","IsPullRequest":true,"CreatedAt":"2023-11-16T23:42:39","Actor":"michaelgsharp","Number":"6880","RawContent":null,"Title":"Updates LightGBM from 2.X.X to 3.X.X","State":"closed","Body":"Updates LightGBM from 2.X.X to 3.X.X and all the associated baseline test files.\r\n\r\nAlso updates the SQL nuget package for its security update.","Url":"https://github.com/dotnet/machinelearning/pull/6880","RelatedDescription":"Closed or merged PR \"Updates LightGBM from 2.X.X to 3.X.X\" (#6880)"},{"Id":"1997644840","IsPullRequest":false,"CreatedAt":"2023-11-16T19:49:11","Actor":"asmirnov82","Number":"6887","RawContent":null,"Title":"Move DataFrame into separate repo without any dependency on ML .Net libraries","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently DataFrame release cycle depends on ML .NET (major version of the DataFrame is released with ML .NET once a year) \r\nDataFrame nuget package also has depency on Microsoft.ML.DataView (which is not required for some of the users, that use DataFrame for data analysis without using ML .Net features).\r\n\r\nHaving separate DataFrame repo without dependency on ML. NET will allow to increase the speed of development  new DataFrame \r\nfeatures and decrease time to market.\r\nHaving ML .NET dependency on particular version of DataFrame nuget package instead of the latest on the other hand increases stability of ML .NET. It aslo allows ML .NET to support wider range of .Net framework, while the newest version of the DataFrame may drop support of legacy .Net standard and go on with the latest LTS only.\r\n\r\n**Describe the solution you'd like**\r\nML .Net should provide extension methods for converting the DataFrame into IDataView and backward, also it should provide ML specific columns (currently VBufferDataFrameColumn) .\r\n\r\nThe DataFrame shouldn't have any specific ML .NET columns and functionality (only Apache Arrow compatible types) and no dependencies on ML .NET packages.\r\n\r\nThe DataFrame should be moved to a separate repo.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6887","RelatedDescription":"Open issue \"Move DataFrame into separate repo without any dependency on ML .Net libraries\" (#6887)"},{"Id":"1974986500","IsPullRequest":true,"CreatedAt":"2023-11-15T05:46:16","Actor":"michaelgsharp","Number":"6875","RawContent":null,"Title":"Changes some of the CPU Math implemenation from our current version to use the new TensorPrimitives package.","State":"closed","Body":"This changes some of the CPU Math implementation from our current version to use the new TensorPrimitives package.\r\n\r\nCurrently we are pointing to the rc2 version, but the following benchmarks have been done with a local copy of the GA version.\r\n\r\nThis also changes CPUMath to target .NET 8 instead of .NET 6. Did we want that for this version? Or should I change it back to 6 for this release? @ericstj @jeffhandley\r\n\r\nThe following is a summary of the methods in CPUMath, the old vs new benchmarks, and whether I updated it to use the new TensorPrimitives package. @tannergooding @stephentoub @jeffhandley @ericstj @luisquintanilla This is where we need to discuss. Is any performance hit worth taking? Or should anything that is slower be kept on the existing code?\r\n\r\nNET 8\r\n\r\n|          Method | arrayLength | Mean - Original | Mean - New | % Faster | Comments |\r\n|---------------- |------------ |---------------- |------------|--------- | -------- |\r\n|      AddScalarU |         512 |  25.30 ns       |  20.32 ns  | 25%      | |\r\n|           Scale |         512 |  19.91 ns       |  19.29 ns  |  3%      | |\r\n|       ScaleSrcU |         512 |  27.58 ns       |  20.74 ns  | 33%      | |\r\n|       ScaleAddU |         512 |  28.46 ns       |  29.05 ns  |          | Method Unchanged, composite function so slower with new code |\r\n|       AddScaleU |         512 |  29.74 ns       |  28.59 ns  |  4%      | |\r\n|      AddScaleSU |         512 | 345.92 ns       | 327.68 ns  |  6%      | Method Unchanged, dont have Sparse in Tensor Primitives. Can simulate but is slower. |\r\n|   AddScaleCopyU |         512 |  34.01 ns       |  27.03 ns  | 26%      | |\r\n|            AddU |         512 |  29.80 ns       |  26.71 ns  | 12%      | |\r\n|           AddSU |         512 | 325.32 ns       | 349.46 ns  |          | Method Unchanged, dont have Sparse in Tensor Primitives. Can simulate but is slower. |\r\n| MulElementWiseU |         512 |  33.92 ns       |  27.29 ns  | 24%      | |\r\n|             Sum |         512 |  36.57 ns       |  34.34 ns  |  6%      | |\r\n|          SumSqU |         512 |  37.50 ns       |  39.34 ns  | -5%      | |\r\n|      SumSqDiffU |         512 |  41.23 ns       |  43.38 ns  |          | Method Unchanged, composite function so slower with new code |\r\n|         SumAbsU |         512 |  43.74 ns       |  39.27 ns  | 11%      | |\r\n|     SumAbsDiffU |         512 |  47.23 ns       |  37.48 ns  | 26%      | |\r\n|         MaxAbsU |         512 |  42.30 ns       |  43.26 ns  |          | Method Unchanged, in GA MaxMagnitude is slow, has been fixed for next release |\r\n|     MaxAbsDiffU |         512 |  46.94 ns       |  47.73 ns  |         | Method Unchanged, in GA MaxMagnitude is slow, has been fixed for next release. Is composite function. |\r\n|            DotU |         512 |  50.34 ns       |  43.20 ns  | 17%      | |\r\n|           DotSU |         512 | 212.19 ns       | 213.18 ns  |          | Method Unchanged, dont have Sparse in Tensor Primitives. Can simulate but is slower. |\r\n|           Dist2 |         512 |  55.48 ns       |  47.43 ns  | 17%      | |\r\n\r\nFramework\r\n\r\n|          Method | arrayLength | Mean - Original | Mean - New | % Faster | Comments |\r\n|---------------- |------------ |---------------- |----------- |--------- |--------- |\r\n|      AddScalarU |         256 |  48.48 ns       |  29.88 ns  |  62%     | |\r\n|           Scale |         256 |  43.45 ns       |  28.55 ns  |  52%     | |\r\n|       ScaleSrcU |         256 |  49.87 ns       |  38.13 ns  |  31%     | |\r\n|       ScaleAddU |         256 |  47.87 ns       |  45.76 ns  |          | Method Unchanged, composite function so slower with new code |\r\n|       AddScaleU |         256 |  52.63 ns       |  62.58 ns  | -16%     | Slightly slower in new code. Do we want to keep it? |\r\n|      AddScaleSU |         256 | 151.00 ns       | 152.77 ns  |          | Method Unchanged, dont have Sparse in Tensor Primitives. Can simulate but is slower. |\r\n|   AddScaleCopyU |         256 |  48.35 ns       |  63.94 ns  | -24%     | Slightly slower in new code. Do we want to keep it? |\r\n|            AddU |         256 |  49.68 ns       |  59.32 ns  | -16%     | Slightly slower in new code. Do we want to keep it? |\r\n|           AddSU |         256 | 150.34 ns       | 153.89 ns  |          | Method Unchanged, dont have Sparse in Tensor Primitives. Can simulate but is slower. |\r\n| MulElementWiseU |         256 |  48.26 ns       |  69.89 ns  | -31%     | |\r\n|             Sum |         256 |  68.05 ns       |  59.74 ns  |  14%     | |\r\n|          SumSqU |         256 |  68.21 ns       |  62.08 ns  |  10%     | |\r\n|      SumSqDiffU |         256 |  57.52 ns       |  57.64 ns  |          | Method Unchanged, composite function so slower with new code |\r\n|         SumAbsU |         256 |  72.88 ns       |  65.01 ns  |  12%     | |\r\n|     SumAbsDiffU |         256 |  59.51 ns       |  68.23 ns  | -13%     | Slightly slower in new code. Do we want to keep it? |\r\n|         MaxAbsU |         256 |  72.26 ns       |  71.48 ns  |          | Method Unchanged, in GA MaxMagnitude is slow, has been fixed for next release |\r\n|     MaxAbsDiffU |         256 |  59.30 ns       |  58.87 ns  |          | Method Unchanged, in GA MaxMagnitude is slow, has been fixed for next release. Is composite function. |\r\n|            DotU |         256 |  58.93 ns       |  68.42 ns  | -14%     | Slightly slower in new code. Do we want to keep it? |\r\n|           DotSU |         256 | 109.76 ns       | 113.78 ns  |          | Method Unchanged, dont have Sparse in Tensor Primitives. Can simulate but is slower. |\r\n|           Dist2 |         256 |  59.49 ns       |  86.97 ns  | -32%     | Slightly slower in new code. Do we want to keep it? |\r\n\r\nI think that even if we don't want to keep the TensorPrimitives code in the cases where its slower, at least for .NET Framework we should add a check and if the native code doesn't exist to run these accelerated, we should fallback to the TensorPrimitives approach. That would have to be added in though.\r\n\r\nAll this was done with AVX256.","Url":"https://github.com/dotnet/machinelearning/pull/6875","RelatedDescription":"Closed or merged PR \"Changes some of the CPU Math implemenation from our current version to use the new TensorPrimitives package.\" (#6875)"},{"Id":"1988590716","IsPullRequest":true,"CreatedAt":"2023-11-14T22:10:27","Actor":"jeffhandley","Number":"6881","RawContent":null,"Title":"FabricBot: Remove area pod project board automation","State":"closed","Body":"Generated via https://github.com/dotnet/fabricbot-config/pull/81","Url":"https://github.com/dotnet/machinelearning/pull/6881","RelatedDescription":"Closed or merged PR \"FabricBot: Remove area pod project board automation\" (#6881)"},{"Id":"1993335134","IsPullRequest":false,"CreatedAt":"2023-11-14T18:40:27","Actor":"gktval","Number":"6886","RawContent":null,"Title":"Image clasification not working for onnx model","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: 2.0.1\r\n - .NET Version: .Net 7\r\n\r\n**Describe the bug**\r\nI am loading an model trained in tensorflow and then converted to an onnx model. When making predictions, all the outputs are the first class even though they should not be. Also the prediction values vary only by a little. Here is an example of two output predictions:\r\n\r\n[1.5047534,  -0.16131932, 0.71119475]\r\n[1.5056, -0.16168906, 0.7110559]\r\n\r\nThis seems odd that there are negative values. So I don't think it is correct from that aspect. I thought it might be because the model was trained on RGBA but the MLContext transform uses ARGB/ABGR/etc. I tried switching the channels of the input images, but this did not help.  Any ideas of what I am doing wrong with my code below?\r\n\r\nThis classification model is almost identical to the model I trained with, except I am using 4 bands instead of 3: https://www.tensorflow.org/tutorials/images/classification\r\n\r\nHere is the code for loading the model: \r\n\r\n```\r\nITransformer GetPredictionPipeline(MLContext mlContext)\r\n{\r\nvar pipeline2 = mlContext\r\n.Transforms\r\n// Adjust the image to the required model input size\r\n.ResizeImages(\r\n    inputColumnName: \"sequential_input\",\r\n    imageWidth: 224,\r\n    imageHeight: 224,\r\n    outputColumnName: \"resized\"\r\n)\r\n// Extract the pixels form the image as a 1D float array, but keep them in the same order as they appear in the image.\r\n.Append(mlContext.Transforms.ExtractPixels(\r\n    inputColumnName: \"resized\",\r\n    colorsToExtract: Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits.All,\r\n    orderOfExtraction: Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorsOrder.ARGB,\r\n    outputColumnName: \"sequential_input\",\r\n    scaleImage: 1 / 255f)\r\n)\r\n// Perform the estimation\r\n.Append(mlContext.Transforms.ApplyOnnxModel(\r\n        modelFile: \"./model.onnx\",\r\n        inputColumnName: \"sequential_input\",\r\n        outputColumnName: \"dense_1,\r\n        gpuDeviceId: 0\r\n    )\r\n);\r\n\r\nvar emptyDv = mlContext.Data.LoadFromEnumerable(new OnnxInput[] { });\r\n\r\nvar model = pipeline2.Fit(emptyDv);\r\nreturn model;\r\n}\r\n```\r\n\r\nMy input/output look like this:\r\n```\r\npublic class OnnxInput\r\n{\r\n    public const int ImageWidth = 224;\r\n    public const int ImageHeight = 224;\r\n\r\n    [ColumnName(\"sequential_input\")]\r\n    [ImageType(ImageWidth, ImageHeight)]\r\n    public MLImage Image { get; set; }\r\n}\r\n\r\npublic class OnnxOutput\r\n{\r\n    [ColumnName(\"dense_1\")]\r\n    public float[] Output { get; set; }\r\n}\r\n```\r\n\r\nFinally, the prediction looks like this:\r\n```\r\nMLContext mlContext = new MLContext();\r\nvar onnxPredictionPipeline = GetPredictionPipeline(mlContext);\r\nvar onnxPredictionEngine = mlContext.Model.CreatePredictionEngine<OnnxInput, OnnxOutput>(onnxPredictionPipeline);\r\n\r\nfor (int j = 0; j < files.Length; j++)\r\n{\r\n    string pngFile = files[i];\r\n\r\n    // Create single instance of sample data from first line of dataset for model input\r\n    var mlImage = MLImage.CreateFromFile(pngFile);\r\n    var testInput = new OnnxInput\r\n    {\r\n        Image = mlImage \r\n    };\r\n    var prediction = onnxPredictionEngine.Predict(testInput);\r\n}\r\n```\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6886","RelatedDescription":"Open issue \"Image clasification not working for onnx model\" (#6886)"},{"Id":"1991865031","IsPullRequest":true,"CreatedAt":"2023-11-14T02:28:38","Actor":"tearlant","Number":"6885","RawContent":null,"Title":"Issue #6606 - Add sample variance and standard deviation to NormalizeMeanVariance","State":"open","Body":"Fixes #6606 \r\n","Url":"https://github.com/dotnet/machinelearning/pull/6885","RelatedDescription":"Open PR \"Issue #6606 - Add sample variance and standard deviation to NormalizeMeanVariance\" (#6885)"},{"Id":"1991547787","IsPullRequest":false,"CreatedAt":"2023-11-13T21:53:58","Actor":"anrouxel","Number":"6884","RawContent":null,"Title":"ONNX Named Entity Recognizer #6883 ","State":"open","Body":"Hello,\r\n**Is your feature request related to a problem? Please describe.**\r\nMy problem is that the Named Entity Recognizer doesn't support saving in ONNX. And, I'm working on a student project which is the creation of a medical application. And I need to extract information from a prescription (stored in a string) such as the name of the medicine. This model needs to be able to be used on other libraries.\r\n\r\n**Describe the solution you'd like**\r\nThe solution would be for the Named Entity Recognizer to support ONNX registration.\r\n\r\n**Describe alternatives you've considered**\r\n\r\n**Additional context**\r\n\r\nBest Regards,\r\n\r\nanrouxel","Url":"https://github.com/dotnet/machinelearning/issues/6884","RelatedDescription":"Open issue \"ONNX Named Entity Recognizer #6883 \" (#6884)"},{"Id":"1988928712","IsPullRequest":false,"CreatedAt":"2023-11-11T12:34:16","Actor":"80LevelElf","Number":"6882","RawContent":null,"Title":"AutoML Binary Classification Experiment run for few second and finished without models","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: mcr.microsoft.com/dotnet/sdk:5.0 docker image (Linux Alpine)\r\n - ML.NET Version: 3.0.0-preview.23511.1\r\n - .NET Version: NET 5.0\r\n\r\n**Describe the bug**\r\nAt this moment we use ML.net 2, but because of the bug fix of https://github.com/dotnet/machinelearning/pull/6571 we have to switch to 3 version of ML.net to train our Binary Classification models (we need Positive Recall optimization metric).\r\n\r\nBut looks like Binary Classification Experiment is somehow broken in 3 version of ML.net:\r\n\r\n            var settings = new BinaryExperimentSettings\r\n            {\r\n                MaxExperimentTimeInSeconds = 30 * 60,\r\n                //MaxModels = 10,\r\n                OptimizingMetric = BinaryClassificationMetric.PositiveRecall,\r\n                MaximumMemoryUsageInMegaByte = 7500,\r\n                UseAutoZeroTuner = false\r\n            };\r\n\r\n            ExperimentResult<BinaryClassificationMetrics> experimentResult = experiment\r\n                .Execute(trainDataView, nameof(MlModelRow.Label), nameof(MlModelRow.LearningGroup));\r\n\r\n**_We use only FastForest and LightGBM trainers._** On my local PC (Windows 10) it's working great, but in the production docker image (Alpine Linux) the learning is finished after 10-30 seconds with:\r\n\r\n> Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity\r\n\r\nI have tried to:\r\n\r\n1. Use MaxModels = 10 with MaxExperimentTimeInSeconds \r\n2. Use MaxModels = 10 insted of MaxExperimentTimeInSeconds \r\n3. Turn UseAutoZeroTuner to true\r\n\r\nBut nothing is working for me. Important point - MLNET_BACKEND is not set so we are not using OneDAL on production or test environment.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6882","RelatedDescription":"Open issue \"AutoML Binary Classification Experiment run for few second and finished without models\" (#6882)"},{"Id":"1976794108","IsPullRequest":true,"CreatedAt":"2023-11-09T19:59:54","Actor":"tearlant","Number":"6879","RawContent":null,"Title":"Issue #6606 - Add sample variance and standard deviation to NormalizeMeanVariance","State":"closed","Body":"Associated issue: https://github.com/dotnet/machinelearning/issues/6606\r\n\r\nAdding a flag so that NormalizeMeanVariance can use the sample variance/standard deviation instead of the population variance/standard deviation","Url":"https://github.com/dotnet/machinelearning/pull/6879","RelatedDescription":"Closed or merged PR \"Issue #6606 - Add sample variance and standard deviation to NormalizeMeanVariance\" (#6879)"},{"Id":"1975102129","IsPullRequest":false,"CreatedAt":"2023-11-03T15:52:50","Actor":"gktval","Number":"6876","RawContent":null,"Title":"Image Classification does not evaluate data","State":"closed","Body":"**System Information (please complete the following information):**\r\n - Windows 11\r\n - ML.NET Version: 2.0.0\r\n - .NET Version: .Net 8 rc 2.95.11\r\n\r\n**Describe the bug**\r\nRunning an image classification, the training runs through very quickly (11 sec), the Accuracy and Cross-Entropy for each epoch is Nan. Is there a reason that the data did not train or a log where I can see problems? \r\n\r\nTraining another dataset very similar runs fine, but this particular dataset does not evaluate any of the data.\r\nPerhaps there is a minimum width/height the images can be for training? The images are varying size, but they should all have a w/h > 40px.\r\n\r\nBelow is a screenshot of the data: \r\n![image](https://github.com/dotnet/machinelearning/assets/7605046/67389875-af37-44d1-948d-fd6e7345a587)\r\n\r\nAlso, here is a snippet of the training:\r\nrestore \"C:\\PROGRAM FILES\\MICROSOFT VISUAL STUDIO\\2022\\PROFESSIONAL\\COMMON7\\IDE\\COMMONEXTENSIONS\\MICROSOFT\\MODELBUILDER\\AUTOMLSERVICE\\RuntimeManager\\tensorflow.gpu.csproj\" --configfile \"C:\\PROGRAM FILES\\MICROSOFT VISUAL STUDIO\\2022\\PROFESSIONAL\\COMMON7\\IDE\\COMMONEXTENSIONS\\MICROSOFT\\MODELBUILDER\\AUTOMLSERVICE\\RuntimeManager\\NuGet.config\" -r win-x64 /p:UsingToolXliff=false /p:TorchSharpVersion=0.98.3 /p:TorchSharpCudaRuntimeVersion=1.11.0.1 /p:TensorflowRuntimeVersion=2.3.1 /p:BaseIntermediateOutputPath=\"C:\\Users\\user\\AppData\\Local\\Temp\\ModelBuilder\\tensorflow-cuda.2.3.1\\obj\"\r\npublish \"C:\\PROGRAM FILES\\MICROSOFT VISUAL STUDIO\\2022\\PROFESSIONAL\\COMMON7\\IDE\\COMMONEXTENSIONS\\MICROSOFT\\MODELBUILDER\\AUTOMLSERVICE\\RuntimeManager\\tensorflow.gpu.csproj\" -r win-x64 -c Release --no-self-contained -o C:\\Users\\user\\AppData\\Local\\Temp\\ModelBuilder\\tensorflow-cuda.2.3.1 --no-restore /p:UsingToolXliff=false /p:TorchSharpVersion=0.98.3 /p:TorchSharpCudaRuntimeVersion=1.11.0.1 /p:TensorflowRuntimeVersion=2.3.1 /p:BaseOutputPath=\"C:\\Users\\user\\AppData\\Local\\Temp\\ModelBuilder\\tensorflow-cuda.2.3.1\\bin\\\\\" /p:BaseIntermediateOutputPath=\"C:\\Users\\user\\AppData\\Local\\Temp\\ModelBuilder\\tensorflow-cuda.2.3.1\\obj\\\\\"\r\nstart installing runtime in C:\\Users\\user\\AppData\\Local\\Temp\\ModelBuilder\\tensorflow-cuda.2.3.1\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\nMSBuild version 17.8.0+6cdef4241 for .NET\r\nC:\\Program Files\\dotnet\\sdk\\8.0.100-rc.2.23502.2\\Sdks\\Microsoft.NET.Sdk\\targets\\Microsoft.NET.RuntimeIdentifierInference.targets(311,5): message NETSDK1057: You are using a preview version of .NET. See: https://aka.ms/dotnet-support-policy [C:\\PROGRAM FILES\\MICROSOFT VISUAL STUDIO\\2022\\PROFESSIONAL\\COMMON7\\IDE\\COMMONEXTENSIONS\\MICROSOFT\\MODELBUILDER\\AUTOMLSERVICE\\RuntimeManager\\tensorflow.gpu.csproj]\r\n  tensorflow.gpu -> C:\\Users\\user\\AppData\\Local\\Temp\\ModelBuilder\\tensorflow-cuda.2.3.1\\bin\\Release\\netstandard2.0\\win-x64\\tensorflow.gpu.dll\r\n  tensorflow.gpu -> C:\\Users\\user\\AppData\\Local\\Temp\\ModelBuilder\\tensorflow-cuda.2.3.1\\\r\ninstall runtime successfully\r\n[Source=AutoMLExperiment-ChildContext, Kind=Trace] [Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Channel started\r\n[Source=AutoMLExperiment-ChildContext, Kind=Trace] [Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel started\r\n[Source=AutoMLExperiment-ChildContext, Kind=Trace] [Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel finished. Elapsed 00:00:00.0037993.\r\n[Source=AutoMLExperiment-ChildContext, Kind=Trace] [Source=ImageClassificationTrainer; Ensuring meta files are present., Kind=Trace] Channel disposed\r\n[Source=AutoMLExperiment-ChildContext, Kind=Trace] [Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Phase: Training, Dataset used:      Train, Batch Processed Count:   0, Epoch:   0, Accuracy:        NaN, Cross-Entropy:        NaN, Learning Rate:       0.01\r\n[Source=AutoMLExperiment-ChildContext, Kind=Trace] [Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Phase: Training, Dataset used: Validation, Batch Processed Count:   0, Epoch:   0, Accuracy:        NaN, Cross-Entropy:        NaN\r\n[Source=AutoMLExperiment-ChildContext, Kind=Trace] [Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Phase: Training, Dataset used:      Train, Batch Processed Count:   0, Epoch:   1, Accuracy:        NaN, Cross-Entropy:        NaN, Learning Rate:       0.01\r\n[Source=AutoMLExperiment-ChildContext, Kind=Trace] [Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Phase: Training, Dataset used: Validation, Batch Processed Count:   0, Epoch:   1, Accuracy:        NaN, Cross-Entropy:        NaN\r\n[Source=AutoMLExperiment-ChildContext, Kind=Trace] [Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Phase: Training, Dataset used:      Train, Batch Processed Count:   0, Epoch:   2, Accuracy:        NaN, Cross-Entropy:        NaN, Learning Rate:       0.01\r\n[Source=AutoMLExperiment-ChildContext, Kind=Trace] [Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Phase: Training, Dataset used: Validation, Batch Processed Count:   0, Epoch:   2, Accuracy:        NaN, Cross-Entropy:        NaN\r\n[Source=AutoMLExperiment-ChildContext, Kind=Trace] [Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Phase: Training, Dataset used:      Train, Batch Processed Count:   0, Epoch:   3, Accuracy:        NaN, Cross-Entropy:        NaN, Learning Rate:       0.01\r\n[Source=AutoMLExperiment-ChildContext, Kind=Trace] [Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Phase: Training, Dataset used: Validation, Batch Processed Count:   0, Epoch:   3, Accuracy:        NaN, Cross-Entropy:        NaN\r\n[Source=AutoMLExperiment-ChildContext, Kind=Trace] [Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Phase: Training, Dataset used:      Train, Batch Processed Count:   0, Epoch:   4, Accuracy:        NaN, Cross-Entropy:        NaN, Learning Rate:       0.01\r\n[Source=AutoMLExperiment-ChildContext, Kind=Trace] [Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Phase: Training, Dataset used: Validation, Batch Processed Count:   0, Epoch:   4, Accuracy:        NaN, Cross-Entropy:        NaN\r\n[Source=AutoMLExperiment-ChildContext, Kind=Trace] [Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Phase: Training, Dataset used:      Train, Batch Processed Count:   0, Epoch:   5, Accuracy:        NaN, Cross-Entropy:        NaN, Learning Rate:       0.01\r\n[Source=AutoMLExperiment-ChildContext, Kind=Trace] [Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Phase: Training, Dataset used: Validation, Batch Processed Count:   0, Epoch:   5, Accuracy:        NaN, Cross-Entropy:        NaN\r\n[Source=AutoMLExperiment-ChildContext, Kind=Trace] [Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Phase: Training, Dataset used:      Train, Batch Processed Count:   0, Epoch:   6, Accuracy:        NaN, Cross-Entropy:        NaN, Learning Rate:       0.01\r\n[Source=AutoMLExperiment-ChildContext, Kind=Trace] [Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Phase: Training, Dataset used: Validation, Batch Processed Count:   0, Epoch:   6, Accuracy:        NaN, Cross-Entropy:        NaN\r\n[Source=AutoMLExperiment-ChildContext, Kind=Trace] [Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Phase: Training, Dataset used:      Train, Batch Processed Count:   0, Epoch:   7, Accuracy:        NaN, Cross-Entropy:        NaN, Learning Rate:       0.01\r\n[Source=AutoMLExperiment-ChildContext, Kind=Trace] [Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Phase: Training, Dataset used: Validation, Batch Processed Count:   0, Epoch:   7, Accuracy:        NaN, Cross-Entropy:        NaN\r\n[Source=AutoMLExperiment-ChildContext, Kind=Trace] [Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Phase: Training, Dataset used:      Train, Batch Processed Count:   0, Epoch:   8, Accuracy:        NaN, Cross-Entropy:        NaN, Learning Rate:       0.01\r\n[Source=AutoMLExperiment-ChildContext, Kind=Trace] [Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Phase: Training, Dataset used: Validation, Batch Processed Count:   0, Epoch:   8, Accuracy:        NaN, Cross-Entropy:        NaN\r\n[Source=AutoMLExperiment-ChildContext, Kind=Trace] [Source=ImageClassificationTrainer; ImageClassificationTrainer, Kind=Trace] Phase: Training, Dataset used:      Train, Batch Processed Count:   0, Epoch:   9, Accuracy:        NaN, Cross-Entropy:        NaN, Learning Rate:       0.01\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Image Training\r\n2. Load the data into the model\r\n3. Train with Cuda\r\n4. Notice that the data is not evaluated\r\n\r\n**Expected behavior**\r\nAccuracy and cross entropy to not be Nan\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6876","RelatedDescription":"Closed issue \"Image Classification does not evaluate data\" (#6876)"},{"Id":"1975988282","IsPullRequest":false,"CreatedAt":"2023-11-03T11:31:44","Actor":"torronen","Number":"6877","RawContent":null,"Title":"AutoML 2.0: Save intermediate models ","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nI am using AutoML 2.0. However, I want to do some re-evaluation with new data down the line. That means I would like to save the intermediate models for further analysis as zip files. At the moment, they are not stored to the checkpoint folder. \r\n\r\n**Describe the solution you'd like**\r\nWe can set checkpoint folder, so I suggest we could also set a temporary models folder. As I remember it was possible in the \"old\" AutoML API. Perhaps, it still is, I just did not find it for some reaon.\r\n\r\n**Describe alternatives you've considered**\r\nThe models are possible saved in AppData subfolders but I did not yet find them.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6877","RelatedDescription":"Open issue \"AutoML 2.0: Save intermediate models \" (#6877)"},{"Id":"1967814137","IsPullRequest":false,"CreatedAt":"2023-10-30T08:40:21","Actor":"lingo1357","Number":"6874","RawContent":null,"Title":"Chatbot scenario in scenario page","State":"open","Body":"Hi,\r\nI want to make an AI girlfriend with ML.net model builder.\r\nI use the VS community edition. In the scenario page, I can't see any chatbot or text classification.\r\nWhich scenario should I pick?\r\nIs there any Nuget package that helps me in this issue?\r\n\r\nthanks,\r\nSaeed","Url":"https://github.com/dotnet/machinelearning/issues/6874","RelatedDescription":"Open issue \"Chatbot scenario in scenario page\" (#6874)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-12-09T03:30:17.3038503Z","RunDurationInMilliseconds":445}