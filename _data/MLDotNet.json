{"Data":{"GitHub":{"Issues":[{"Id":"1716691712","IsPullRequest":true,"CreatedAt":"2023-05-19T06:20:19","Actor":"asmirnov82","Number":"6701","RawContent":null,"Title":"Remove redundant column names collection from DataFrameColumnCollection","State":"open","Body":"column names collection was used to get column name by column index. As DataFrameColumnCollection is already collection of columns that can be accessed by index - this[i].Name can be used instead to get name. Storing dedicated collection of names is excessive, \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6701","RelatedDescription":"Open PR \"Remove redundant column names collection from DataFrameColumnCollection\" (#6701)"},{"Id":"1712693446","IsPullRequest":true,"CreatedAt":"2023-05-18T21:17:45","Actor":"dotnet-maestro[bot]","Number":"6691","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 97926d79-6b8b-4d32-c8db-08d9d479971c\r\n- **Build**: 20230515.1\r\n- **Date Produced**: May 15, 2023 1:54:05 PM UTC\r\n- **Commit**: 2d8d59065b5e090584a8e90c4371fc06ed60bdc5\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.23228.7 to 8.0.0-beta.23265.1][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 7.0.0-beta.23228.7 to 8.0.0-beta.23265.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.23228.7 to 8.0.0-beta.23265.1][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 7.0.0-beta.23228.7 to 8.0.0-beta.23265.1][1]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 7.0.0-beta.23228.7 to 8.0.0-beta.23265.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.23228.7 to 8.0.0-beta.23265.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/df8799988a...2d8d59065b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates tools.dotnet to 8.0.100-preview.3.23178.7\r\n\r\n[marker]: <> (End:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6691","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6691)"},{"Id":"1716195060","IsPullRequest":false,"CreatedAt":"2023-05-18T20:05:06","Actor":"torronen","Number":"6700","RawContent":null,"Title":"Feture request: Data deduplication and  Near-deduplication","State":"open","Body":"In current Microsoft.ML developers may need to reduce size of huge datasets (#6679) or at least it might be advisable to do so: For many problems and algorithms hyperparameters tuning is important and may improve results more than increasing size of dataset. Lower datasets make it feasible to complete AutoML tuning. That many of the algorithms are not fully parallizable makes it even more important. \r\n\r\nWhen sampling a dataset I assume there are two key criteria: representability and versatility. The partial sample should represent the dataset as a whole, but it should also include edge cases. \r\n\r\nAt the moment, I am taking random subsample using SplitTrainTestSet method. I assume it is representative of the whole dataset by virtue of randomness.\r\n\r\nHowever, I would like ways make sure I am not removing edge cases by accident.\r\n\r\nFeature requests:\r\n - Method to remove duplicates from the dataset\r\n - Method to remove near duplicates (inspired by this article https://huggingface.co/blog/dedup )\r\n\r\nQuestion:\r\n - Are there ways or methods to analyze subsamples representativeness? Perhaps plotting, or auto-analyzing, the distribution of values in each column. However, this only looks at the columns individually.\r\n  - Methods to analyze edge cases not being dropped?\r\n  \r\nI expect not everything can and should be supported by Microsoft.ML so I will appreciate any ideas and insights on how to ideally complete these tasks within .NET ecosystem. I think data deduplication maybe might be a good addition for Microsoft.ML, and if so, why not near deduplication.","Url":"https://github.com/dotnet/machinelearning/issues/6700","RelatedDescription":"Open issue \"Feture request: Data deduplication and  Near-deduplication\" (#6700)"},{"Id":"1715857187","IsPullRequest":false,"CreatedAt":"2023-05-18T15:45:00","Actor":"asmirnov82","Number":"6699","RawContent":null,"Title":"DataFrame crashes on attempt to create column with size higher than 2,147,483,591 bytes","State":"open","Body":"DataFrame is said to work with columns larger than int size (Count and Length has long type).\r\n\r\nHowever it fails to create column even less than Max,Int amount of items. \r\nThis code crashes with System.OutOfMemoryException: 'Array dimensions exceeded supported range.':\r\n\r\n ```\r\nPrimitiveDataFrameColumn<byte> column = new PrimitiveDataFrameColumn<byte>(\"test\", int.MaxValue - 10);\r\n DataFrame df = new DataFrame(column);\r\n```\r\n\r\nSome investigation shows, that DataFrame internaly uses structure similar to ChunkedArray, with the size of each chunk equal to Max.Int bytes (which is 2147483647).\r\nHowever, according to MSDN (https://learn.microsoft.com/en-us/dotnet/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element) actual maximum array size is less than this value:\r\n\r\n_The maximum size in any single dimension is 2,147,483,591 (0x7FFFFFC7) for byte arrays and arrays of single-byte structures, and 2,146,435,071 (0X7FEFFFFF) for arrays containing other types._\r\n\r\nSo despite the playing around with buffers collection and chunked arrays, dataframe fails in DataFrameBuffer.EnsureCapacity method\r\n\r\n```\r\nvar newCapacity = Math.Max(newLength * Size, ReadOnlyBuffer.Length * 2);\r\nvar memory = new Memory<byte>(new byte[newCapacity]);\r\n```\r\n\r\nfor newCapacity higher than 2,147,483,591","Url":"https://github.com/dotnet/machinelearning/issues/6699","RelatedDescription":"Open issue \"DataFrame crashes on attempt to create column with size higher than 2,147,483,591 bytes\" (#6699)"},{"Id":"1715245095","IsPullRequest":false,"CreatedAt":"2023-05-18T10:23:16","Actor":"LingJunZhu","Number":"6697","RawContent":null,"Title":"Training SentenceSimilarity : pipeline.Fit()  throw exception \"Unable to load DLL 'LibTorchSharp' or one of its dependencies: 找不到指定的模块。 (0x8007007E)\"","State":"closed","Body":"var mlContext = new MLContext();\r\n// Load your data\r\n        var phrases = new[]\r\n        {\r\n            new {Source=\"ML.NET 2.0 just released\", Target=\"There's a new version of ML.NET\", Similarity=5f},\r\n            new {Source=\"ML.NET 2.0 just released\", Target=\"The rain in Spain stays mainly in the plain\", Similarity=1f},\r\n            new {Source=\"ML.NET 1.0 just released\", Target=\"There's a new version of ML.NET\", Similarity=2f},\r\n            new {Source=\"ML.NET 1.0 just released\", Target=\"The rain in Spain stays mainly in the plain\", Similarity=3f},\r\n            new {Source=\"ML.NET 2.0 just released\", Target=\"There's a new version of ML.NET\", Similarity=6f},\r\n            new {Source=\"ML.NET 2.0 just released\", Target=\"The rain in Spain stays mainly in the plain\", Similarity=7f}\r\n        };\r\n\r\n        var dataView = mlContext.Data.LoadFromEnumerable(phrases);\r\n        // Split data into 80% training, 20% testing\r\n        var dataSplit = mlContext.Data.TrainTestSplit(dataView, testFraction: 0.2);\r\n\r\n        // Define your training pipeline\r\n        var pipeline = mlContext.Regression.Trainers.SentenceSimilarity(labelColumnName: \"Similarity\", sentence1ColumnName: \"Source\", sentence2ColumnName: \"Target\");\r\n\r\n        // Train the model\r\n        var model = pipeline.Fit(dataSplit.TrainSet);","Url":"https://github.com/dotnet/machinelearning/issues/6697","RelatedDescription":"Closed issue \"Training SentenceSimilarity : pipeline.Fit()  throw exception \"Unable to load DLL 'LibTorchSharp' or one of its dependencies: 找不到指定的模块。 (0x8007007E)\"\" (#6697)"},{"Id":"1715321579","IsPullRequest":true,"CreatedAt":"2023-05-18T09:34:54","Actor":"asmirnov82","Number":"6698","RawContent":null,"Title":"Reset DataFrame.RowCount to zero, when DataFrame is empty","State":"open","Body":"Reset DataFrame.RowCount to zero after Columns collection was cleared or the last column was removed.\r\nAdd addtional unit tests on Adding, Inserting and Removing columns in DataFrame\r\n\r\nFixes #6694 \r\n","Url":"https://github.com/dotnet/machinelearning/pull/6698","RelatedDescription":"Open PR \"Reset DataFrame.RowCount to zero, when DataFrame is empty\" (#6698)"},{"Id":"1715192848","IsPullRequest":false,"CreatedAt":"2023-05-18T07:56:38","Actor":"MGabala","Number":"6696","RawContent":null,"Title":"After selecting table from MSSQL i cannot select column to predict","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: ML.NET V 17.15.0.2321402\r\n - .NET Version: .NET 7\r\n\r\n**Describe the bug**\r\nAfter selecting database and table from MSSQl i cannot select column to predict. **Value prediction**\r\n\r\n![obraz](https://github.com/dotnet/machinelearning/assets/82496006/7595e959-c2c1-4026-b2a5-9692443e829e)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6696","RelatedDescription":"Open issue \"After selecting table from MSSQL i cannot select column to predict\" (#6696)"},{"Id":"1714639038","IsPullRequest":true,"CreatedAt":"2023-05-17T20:52:30","Actor":"stephentoub","Number":"6695","RawContent":null,"Title":"Fix non-thread-safe use of Random in tokenizers","State":"open","Body":"`System.Random` is not thread-safe, but Microsoft.ML.Tokenizers.Word has a static Random instance that's used without synchronization from an instance method that could end up being used concurrently from multiple threads.  This fixes it by making the `Random` be a thread-static instead of a static.  Once this component targets .NET 6+ instead of .NET Standard 2.0, this can switch to just use `Random.Shared`.","Url":"https://github.com/dotnet/machinelearning/pull/6695","RelatedDescription":"Open PR \"Fix non-thread-safe use of Random in tokenizers\" (#6695)"},{"Id":"1714193977","IsPullRequest":false,"CreatedAt":"2023-05-17T15:45:43","Actor":"asmirnov82","Number":"6694","RawContent":null,"Title":"Adding new column to empty DataFrame fails","State":"open","Body":"**Describe the bug**\r\nEmpty DataFrame fails on adding new column with exception: \r\nSystem.ArgumentException: Column length are mismatched Parameter name; column\r\n\r\n**To Reproduce**\r\n\r\nDataFrameColumn intColumn1 = new Int32DataFrameColumn(\"IntColumn_1\", Enumerable.Range(0, 10).Select(x => x));\r\nDataFrameColumn intColumn2 = new Int32DataFrameColumn(\"IntColumn_2\", Enumerable.Range(0, 11).Select(x => x));\r\n\r\nDataFrame dataFrame = new DataFrame();\r\n\r\n//Add and remove column with length = 10\r\ndataFrame.Columns.Add(intColumn1);\r\ndataFrame.Columns.Remove(intColumn1);\r\n\r\n//Now dataframe is empty, attemp to add column with lenght = 11 leads to exception\r\ndataFrame.Columns.Add(intColumn2);\r\n\r\n**Expected behavior**\r\nColumn should be added without any exception\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6694","RelatedDescription":"Open issue \"Adding new column to empty DataFrame fails\" (#6694)"},{"Id":"1713461394","IsPullRequest":false,"CreatedAt":"2023-05-17T09:06:55","Actor":"HoaNguyen55","Number":"6693","RawContent":null,"Title":"Cannot converted to ONNX model by trained model","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Google Colab\r\n - ML.NET Version: Here is some package version\r\n```\r\n<PackageReference Include=\"Microsoft.ML.OnnxRuntime\" Version=\"1.14.1\" />\r\n<PackageReference Include=\"Microsoft.ML.OnnxConverter\" Version=\"0.20.1\" />\r\n<PackageReference Include=\"Google.Protobuf\" Version=\"3.20.3\" />\r\n<PackageReference Include=\"Microsoft.ML.OnnxTransformer\" Version=\"2.0.1\" />\r\n<PackageReference Include=\"Microsoft.ML\" Version=\"2.0.1\" />\r\n```\r\n\r\n**Describe the bug**\r\nI try to load model MLModel.zip which is generated from AutoML, then I load this trained model to convert to *.ONNX model.\r\nI face this error status:\r\n```\r\nUnhandled exception. System.InvalidOperationException: The targeted pipeline can not be fully converted into a well-defined ONNX model. Please check if all steps in that pipeline are convertible to ONNX and all necessary variables are not dropped (via command line arguments).\r\n   at Microsoft.ML.Model.OnnxConverter.SaveOnnxCommand.ConvertTransformListToOnnxModel(OnnxContextImpl ctx, IChannel ch, IDataView inputData, IDataView outputData, LinkedList`1 transforms, HashSet`1 inputColumnNamesToDrop, HashSet`1 outputColumnNamesToDrop)\r\n   at Microsoft.ML.OnnxExportExtensions.ConvertToOnnxProtobufCore(IHostEnvironment env, OnnxContextImpl ctx, ITransformer transform, IDataView inputData, String[] outputColumnNamesToKeep)\r\n   at Microsoft.ML.OnnxExportExtensions.ConvertToOnnxProtobuf(ModelOperationsCatalog catalog, ITransformer transform, IDataView inputData, String[] outputColumns)\r\n   at Microsoft.ML.OnnxExportExtensions.ConvertToOnnx(ModelOperationsCatalog catalog, ITransformer transform, IDataView inputData, Stream stream)\r\n   at consumeModelApp.Program.Main(String[] args) in /content/drive/MyDrive/hinhhoc/consumeModelApp_Onnx/Program.cs:line 56\r\n\r\n```\r\nLine:56 in Program.cs:\r\n```\r\nmlContext.Model.ConvertToOnnx(mlModel, transformedData, onnx);\r\n```\r\nThe format of my dataset in TSV file is:\r\n```\r\nLabel\tImageSource\r\none_hash_marks\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/one_hash_marks/one_hash_marks_2.png\r\none_hash_marks\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/one_hash_marks/one_hash_marks_3.png\r\none_hash_marks\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/one_hash_marks/one_hash_marks_6.png\r\none_hash_marks\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/one_hash_marks/one_hash_marks_4.png\r\ntwo_hash_marks\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/two_hash_marks/two_hash_marks_858.png\r\ntwo_hash_marks\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/two_hash_marks/two_hash_marks_528.png\r\ntwo_hash_marks\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/two_hash_marks/two_hash_marks_868.png\r\ntwo_hash_marks\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/two_hash_marks/two_hash_marks_590.png\r\ntwo_hash_marks\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/two_hash_marks/two_hash_marks_513.png\r\ntwo_hash_marks\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/two_hash_marks/two_hash_marks_429.png\r\ntwo_hash_marks\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/two_hash_marks/two_hash_marks_714.png\r\ntwo_hash_marks\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/two_hash_marks/two_hash_marks_546.png\r\none_degree\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/one_degree/one_degree_251.png\r\none_degree\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/one_degree/one_degree_35.png\r\none_degree\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/one_degree/one_degree_265.png\r\none_degree\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/one_degree/one_degree_201.png\r\none_degree\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/one_degree/one_degree_157.png\r\none_degree\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/one_degree/one_degree_289.png\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Run Google Colab and install all related library\r\n2. Convert to ONNX model by snipping code in attachments\r\n[program.txt](https://github.com/dotnet/machinelearning/files/11496163/program.txt)\r\n\r\n3. See error\r\n\r\n**Expected behavior**\r\nGenerate ONNX file and be able to load this file by using Python in Google Colab environment.\r\n\r\n**Screenshots, Code, Sample Projects**\r\nN/A\r\n**Additional context**\r\nN/A","Url":"https://github.com/dotnet/machinelearning/issues/6693","RelatedDescription":"Open issue \"Cannot converted to ONNX model by trained model\" (#6693)"},{"Id":"1713169780","IsPullRequest":false,"CreatedAt":"2023-05-17T05:51:02","Actor":"superichmann","Number":"6692","RawContent":null,"Title":"Support Multiple Threads on ML Related DB Access ","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nAccording to my tests, when trying to Execute multiple `RegressionExperiments` in parallel where data is loaded through `DatabaseSource`, some bottleneck occurs on the DB access layer, probably due to a single instance of the DB access layer (even when creating a separate `DatabaseSource` for each experiment).\r\n\r\nThis prevents accessing the full throttle of the cpu and the database.\r\n\r\nMy tests were:\r\n1. Reviewing DB logs: when running experiments, the DB access occurs sequentially and not at the same time.\r\n2. Running from separate EXE: when running each experiment from a separate process, suddenly the DB gets much more queries at the same time. all experiments end faster.\r\n\r\nStill I might miss something so correct me if I am wrong.\r\n\r\n**Describe the solution you'd like**\r\nAllow instantiation of multiple DB connections to allow running experiments in parallel.\r\n\r\n**Describe alternatives you've considered**\r\n\r\n- Tried to load the idataview with the entire db data and then dropcolumns or filter but that took very long time (loading from db)\r\n\r\n**Additional context**\r\nWindows machine, both database and ml are on the same machine.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6692","RelatedDescription":"Open issue \"Support Multiple Threads on ML Related DB Access \" (#6692)"},{"Id":"1712663856","IsPullRequest":true,"CreatedAt":"2023-05-16T20:02:46","Actor":"michaelgsharp","Number":"6690","RawContent":null,"Title":"fixing license","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/6690","RelatedDescription":"Closed or merged PR \"fixing license\" (#6690)"},{"Id":"1712662249","IsPullRequest":true,"CreatedAt":"2023-05-16T20:02:17","Actor":"michaelgsharp","Number":"6689","RawContent":null,"Title":"Fixing license","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/6689","RelatedDescription":"Closed or merged PR \"Fixing license\" (#6689)"},{"Id":"1712283331","IsPullRequest":false,"CreatedAt":"2023-05-16T15:43:36","Actor":"torronen","Number":"6688","RawContent":null,"Title":"Visualization and analysis of LightGBM and FastTree","State":"open","Body":"As I remember in some comparisons, there is a note that fastTree, LightGBM and FastForest could be converted to code. \r\nLightGBM would appear to have some methods to convert it to C++ code.\r\n\r\nI would be interested in inspecting the trees to understand the predicted issue better. There are already some ways for explainability, like PFI and GFI, but it would be interesting to dig deeper into the models.\r\n\r\nAre there tools that would allow inspecting the contents of treebased models either in simple-to-read format or even visually?\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6688","RelatedDescription":"Open issue \"Visualization and analysis of LightGBM and FastTree\" (#6688)"},{"Id":"1711560386","IsPullRequest":false,"CreatedAt":"2023-05-16T08:51:57","Actor":"torronen","Number":"6687","RawContent":null,"Title":"AutoML 2.0: setting temporary folder model ","State":"open","Body":"How to set the path where temporary models could be stored in AutoML 2.0?\r\n\r\nWhen working with big datasets, users may want to save all models generated during experiment for later analysis. For example, trying again with extended test sets, running sensitivity analysis, feature importance etc. \r\n\r\n=> It would be useful to be able to save the path of temporary models to a known location. Even better if one could set the prefix for the temporary models (for example \"mydata-Model1.zip\" where \"mydata\" is the prefix)","Url":"https://github.com/dotnet/machinelearning/issues/6687","RelatedDescription":"Open issue \"AutoML 2.0: setting temporary folder model \" (#6687)"},{"Id":"1711033879","IsPullRequest":false,"CreatedAt":"2023-05-16T00:45:38","Actor":"michaelgsharp","Number":"6686","RawContent":null,"Title":"Loading Pre-Trained LightGBM model doesn't correctly load Label metadata for key <-> value.","State":"open","Body":"Loading Pre-Trained LightGBM model doesn't correctly load Label metadata for key <-> value. Need to parse the labels out of the model file and add a new annotation for it.","Url":"https://github.com/dotnet/machinelearning/issues/6686","RelatedDescription":"Open issue \"Loading Pre-Trained LightGBM model doesn't correctly load Label metadata for key <-> value.\" (#6686)"},{"Id":"1710496188","IsPullRequest":true,"CreatedAt":"2023-05-15T21:39:18","Actor":"michaelgsharp","Number":"6683","RawContent":null,"Title":"Added in release notes for preview 3","State":"closed","Body":"Added in release notes for preview 3.","Url":"https://github.com/dotnet/machinelearning/pull/6683","RelatedDescription":"Closed or merged PR \"Added in release notes for preview 3\" (#6683)"},{"Id":"1710544567","IsPullRequest":true,"CreatedAt":"2023-05-15T20:03:01","Actor":"michaelgsharp","Number":"6685","RawContent":null,"Title":"Disable flaky test","State":"closed","Body":"Disabling MulticlassLRTest for now as its flaky on non x86/x64 devices. See #6684 for info.","Url":"https://github.com/dotnet/machinelearning/pull/6685","RelatedDescription":"Closed or merged PR \"Disable flaky test\" (#6685)"},{"Id":"1710540153","IsPullRequest":false,"CreatedAt":"2023-05-15T17:48:17","Actor":"michaelgsharp","Number":"6684","RawContent":null,"Title":"PR Validation Flaky Test","State":"open","Body":"Microsoft.ML.RunTests.TestPredictors.MulticlassLRTest is flaky on arm/arm64 devices. Disabling the test for now on non x86/x64 devices until we figure out the issue.\r\n\r\n\r\n```\r\nMicrosoft.ML.RunTests.TestPredictors.MulticlassLRTest [FAIL]\r\n[31;1m[m[37m      Assert.Equal() Failure\r\n[m[37m      Expected: 0\r\n[m[37m      Actual:   2\r\n[m[30;1m      Stack Trace:\r\n[m[37m        /__w/1/s/test/Microsoft.ML.TestFramework/BaseTestBaseline.cs(201,0): at Microsoft.ML.RunTests.BaseTestBaseline.Done()\r\n[m[37m        /__w/1/s/test/Microsoft.ML.Predictor.Tests/TestPredictors.cs(156,0): at Microsoft.ML.RunTests.TestPredictors.MulticlassLRTest()\r\n[m[30;1m      Output:\r\n[m[37m        Running 'MulticlassLogisticRegression' on 'iris'\r\n[m[37m          Running as: TrainTest tr=MulticlassLogisticRegression{l1=0.001 l2=0.1 ot=1e-3 nt=1} data=/root/helix/work/correlation/test/data/iris.txt seed=1 test=/root/helix/work/correlation/test/data/iris.txt xf=Term{col=Label} out={/root/helix/work/workitem/e/TestOutput/MulticlassLogisticRegression/MulticlassLogisticRegression-TrainTest-iris-model.zip} dout={/root/helix/work/workitem/e/TestOutput/MulticlassLogisticRegression/MulticlassLogisticRegression-TrainTest-iris.txt} norm=no\r\n[m[37m        maml.exe TrainTest test=/root/helix/work/correlation/test/data/iris.txt tr=MulticlassLogisticRegression{l1=0.001 l2=0.1 ot=1e-3 nt=1} norm=No dout=/root/helix/work/workitem/e/TestOutput/MulticlassLogisticRegression/MulticlassLogisticRegression-TrainTest-iris.txt data=/root/helix/work/correlation/test/data/iris.txt out=/root/helix/work/workitem/e/TestOutput/MulticlassLogisticRegression/MulticlassLogisticRegression-TrainTest-iris-model.zip seed=1 xf=Term{col=Label}\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Not adding a normalizer.\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Beginning optimization\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        num vars: 15\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        improvement criterion: Mean Improvement\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        L1 regularization selected 15 of 15 weights.\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Not training a calibrator because it is not needed.\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Confusion table\r\n[m[37m        \r\n[m[37m        \r\n[m[37m                  ||========================\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        PREDICTED ||     0 |     1 |     2 | Recall\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        TRUTH     ||========================\r\n[m[37m        \r\n[m[37m        \r\n[m[37m                0 ||    50 |     0 |     0 | 1.0000\r\n[m[37m        \r\n[m[37m        \r\n[m[37m                1 ||     0 |    48 |     2 | 0.9600\r\n[m[37m        \r\n[m[37m        \r\n[m[37m                2 ||     0 |     1 |    49 | 0.9800\r\n[m[37m        \r\n[m[37m        \r\n[m[37m                  ||========================\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Precision ||1.0000 |0.9796 |0.9608 |\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Accuracy(micro-avg): 0.980000\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Accuracy(macro-avg): 0.980000\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Log-loss:           0.072171\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Log-loss reduction: 0.934307\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        OVERALL RESULTS\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        ---------------------------------------\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Accuracy(micro-avg): 0.980000 (0.0000)\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Accuracy(macro-avg): 0.980000 (0.0000)\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Log-loss:           0.072171 (0.0000)\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Log-loss reduction: 0.934307 (0.0000)\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        ---------------------------------------\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Physical memory usage(MB): 120\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Virtual memory usage(MB): 3549\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        5/15/2023 5:29:00 PM\t Time elapsed(s): 0.028\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Comparing /root/helix/work/workitem/e/TestOutput/MulticlassLogisticRegression/MulticlassLogisticRegression-TrainTest-iris-out.txt and /root/helix/work/correlation/test/BaselineOutput/Common/MulticlassLogisticRegression/MulticlassLogisticRegression-TrainTest-iris-out.txt\r\n[m[37m        Output matches baseline: 'MulticlassLogisticRegression/MulticlassLogisticRegression-TrainTest-iris-out.txt'\r\n[m[37m        Comparing /root/helix/work/workitem/e/TestOutput/MulticlassLogisticRegression/MulticlassLogisticRegression-TrainTest-iris.txt and /root/helix/work/correlation/test/BaselineOutput/Common/MulticlassLogisticRegression/netcoreapp/MulticlassLogisticRegression-TrainTest-iris.txt\r\n[m[37m        Output matches baseline: 'MulticlassLogisticRegression/MulticlassLogisticRegression-TrainTest-iris.txt'\r\n[m[37m        maml.exe Test dout=/root/helix/work/workitem/e/TestOutput/MulticlassLogisticRegression/MulticlassLogisticRegression-TrainTest-iris.txt data=/root/helix/work/correlation/test/data/iris.txt in=/root/helix/work/workitem/e/TestOutput/MulticlassLogisticRegression/MulticlassLogisticRegression-TrainTest-iris-model.zip seed=1\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Confusion table\r\n[m[37m        \r\n[m[37m        \r\n[m[37m                  ||========================\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        PREDICTED ||     0 |     1 |     2 | Recall\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        TRUTH     ||========================\r\n[m[37m        \r\n[m[37m        \r\n[m[37m                0 ||    50 |     0 |     0 | 1.0000\r\n[m[37m        \r\n[m[37m        \r\n[m[37m                1 ||     0 |    48 |     2 | 0.9600\r\n[m[37m        \r\n[m[37m        \r\n[m[37m                2 ||     0 |     1 |    49 | 0.9800\r\n[m[37m        \r\n[m[37m        \r\n[m[37m                  ||========================\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Precision ||1.0000 |0.9796 |0.9608 |\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Accuracy(micro-avg): 0.980000\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Accuracy(macro-avg): 0.980000\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Log-loss:           0.072171\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Log-loss reduction: 0.934307\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        OVERALL RESULTS\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        ---------------------------------------\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Accuracy(micro-avg): 0.980000 (0.0000)\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Accuracy(macro-avg): 0.980000 (0.0000)\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Log-loss:           0.072171 (0.0000)\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Log-loss reduction: 0.934307 (0.0000)\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        ---------------------------------------\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Physical memory usage(MB): 120\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Virtual memory usage(MB): 3549\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        5/15/2023 5:29:00 PM\t Time elapsed(s): 0.008\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Suffix of length 27 compared against sequence of length 34\r\n[m[37m        Running 'MulticlassLogisticRegression' on 'iris'\r\n[m[37m          Running as: CV tr=MulticlassLogisticRegression{l1=0.001 l2=0.1 ot=1e-3 nt=1} data=/root/helix/work/correlation/test/data/iris.txt seed=1 xf=Term{col=Label} dout={/root/helix/work/workitem/e/TestOutput/MulticlassLogisticRegression/MulticlassLogisticRegression-CV-iris.txt} norm=no threads-\r\n[m[37m        maml.exe CV tr=MulticlassLogisticRegression{l1=0.001 l2=0.1 ot=1e-3 nt=1} threads=- norm=No dout=/root/helix/work/workitem/e/TestOutput/MulticlassLogisticRegression/MulticlassLogisticRegression-CV-iris.txt data=/root/helix/work/correlation/test/data/iris.txt seed=1 xf=Term{col=Label}\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Not adding a normalizer.\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Not adding a normalizer.\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Beginning optimization\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        num vars: 15\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        improvement criterion: Mean Improvement\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        L1 regularization selected 15 of 15 weights.\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Not training a calibrator because it is not needed.\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Physical memory usage(MB): 120\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Virtual memory usage(MB): 3549\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        5/15/2023 5:29:00 PM\t Time elapsed(s): 0.018\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        ***** Unexpected failure. Please refer to https://aka.ms/MLNetIssue to file an issue with details *****\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        ***** Error log has been saved to '/tmp/TLC/Error_20230515_172900_e06f381a-3a62-4df3-b493-09ff5a4df87d.log', please refer to https://aka.ms/MLNetIssue to file an issue with details *****\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        ===== Begin detailed dump =====\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        (1) Unexpected exception: One or more errors occurred. (Assert failed: Assertion Failed\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Expected: True\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Actual:   False), 'System.AggregateException'\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at System.Threading.Tasks.Task.WaitAllCore(Task[] tasks, Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at System.Threading.Tasks.Task.WaitAll(Task[] tasks)\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Data.CrossValidationCommand.FoldHelper.GetCrossValidationTasks() in /__w/1/s/src/Microsoft.ML.Data/Commands/CrossValidationCommand.cs:line 471\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Data.CrossValidationCommand.RunCore(IChannel ch, String cmd) in /__w/1/s/src/Microsoft.ML.Data/Commands/CrossValidationCommand.cs:line 202\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Data.CrossValidationCommand.Run() in /__w/1/s/src/Microsoft.ML.Data/Commands/CrossValidationCommand.cs:line 134\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Tools.Maml.MainCore(IHostEnvironment env, String args, Boolean alwaysPrintStacktrace) in /__w/1/s/src/Microsoft.ML.Maml/MAML.cs:line 130\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        (2) Unexpected exception: Assert failed: Assertion Failed\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Expected: True\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Actual:   False, 'Xunit.Sdk.TrueException'\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Xunit.Assert.True(Nullable`1 condition, String userMessage) in /_/src/xunit.assert/Asserts/BooleanAsserts.cs:line 132\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Xunit.Assert.True(Boolean condition, String userMessage) in /_/src/xunit.assert/Asserts/BooleanAsserts.cs:line 116\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Internal.Internallearn.Test.GlobalBase.AssertHandler(String msg, IExceptionContext ectx) in /__w/1/s/test/Microsoft.ML.TestFramework/GlobalBase.cs:line 80\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Runtime.Contracts.DbgFailCore(String msg, IExceptionContext ctx) in /__w/1/s/src/Microsoft.ML.Core/Utilities/Contracts.cs:line 781\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Runtime.Contracts.DbgFail(IExceptionContext ctx) in /__w/1/s/src/Microsoft.ML.Core/Utilities/Contracts.cs:line 790\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Runtime.Contracts.Assert(IExceptionContext ctx, Boolean f) in /__w/1/s/src/Microsoft.ML.Core/Utilities/Contracts.cs:line 845\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Data.CacheDataView.ColumnCache.ImplVec`1.Fetch(Int32 idx, VBuffer`1& value) in /__w/1/s/src/Microsoft.ML.Data/DataView/CacheDataView.cs:line 1389\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Data.CacheDataView.RowCursor`1.<>c__DisplayClass8_0`1.<CreateGetterDelegateCore>b__0(TValue& value) in /__w/1/s/src/Microsoft.ML.Data/DataView/CacheDataView.cs:line 496\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Trainers.FeatureFloatVectorCursor.Accept() in /__w/1/s/src/Microsoft.ML.Data/Training/TrainerUtils.cs:line 855\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Trainers.FloatLabelCursor.Accept() in /__w/1/s/src/Microsoft.ML.Data/Training/TrainerUtils.cs:line 928\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Trainers.TrainingCursorBase.MoveNext() in /__w/1/s/src/Microsoft.ML.Data/Training/TrainerUtils.cs:line 555\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Trainers.LbfgsTrainerBase`3.TrainCore(IChannel ch, RoleMappedData data) in /__w/1/s/src/Microsoft.ML.StandardTrainers/Standard/LogisticRegression/LbfgsPredictorBase.cs:line 605\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Trainers.LbfgsTrainerBase`3.TrainModelCore(TrainContext context) in /__w/1/s/src/Microsoft.ML.StandardTrainers/Standard/LogisticRegression/LbfgsPredictorBase.cs:line 458\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Trainers.TrainerEstimatorBase`2.Microsoft.ML.ITrainer<Microsoft.ML.IPredictor>.Train(TrainContext context) in /__w/1/s/src/Microsoft.ML.Data/Training/TrainerEstimatorBase.cs:line 100\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Trainers.TrainerEstimatorBase`2.Microsoft.ML.ITrainer.Train(TrainContext context) in /__w/1/s/src/Microsoft.ML.Data/Training/TrainerEstimatorBase.cs:line 168\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Data.TrainUtils.TrainCore(IHostEnvironment env, IChannel ch, RoleMappedData data, ITrainer trainer, RoleMappedData validData, IComponentFactory`1 calibrator, Int32 maxCalibrationExamples, Nullable`1 cacheData, IPredictor inputPredictor, RoleMappedData testData) in /__w/1/s/src/Microsoft.ML.Data/Commands/TrainCommand.cs:line 280\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Data.TrainUtils.Train(IHostEnvironment env, IChannel ch, RoleMappedData data, ITrainer trainer, RoleMappedData validData, IComponentFactory`1 calibrator, Int32 maxCalibrationExamples, Nullable`1 cacheData, IPredictor inputPredictor, RoleMappedData testData) in /__w/1/s/src/Microsoft.ML.Data/Commands/TrainCommand.cs:line 255\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Data.CrossValidationCommand.FoldHelper.RunFold(Int32 fold) in /__w/1/s/src/Microsoft.ML.Data/Commands/CrossValidationCommand.cs:line 523\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Data.CrossValidationCommand.FoldHelper.<>c__DisplayClass24_0.<GetCrossValidationTasks>b__0() in /__w/1/s/src/Microsoft.ML.Data/Commands/CrossValidationCommand.cs:line 463\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at System.Threading.Tasks.Task`1.InnerInvoke()\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        --- End of stack trace from previous location ---\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        ====== End detailed dump =====\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        *** Predictor returned -2\r\n[m[37m        Comparing /root/helix/work/workitem/e/TestOutput/MulticlassLogisticRegression/MulticlassLogisticRegression-CV-iris-out.txt and /root/helix/work/correlation/test/BaselineOutput/Common/MulticlassLogisticRegression/netcoreapp/MulticlassLogisticRegression-CV-iris-out.txt\r\n[m[37m        *** Failure #1: Output and baseline mismatch at line 3, expected 'Beginning optimization' but got 'Not adding a normalizer.' : 'MulticlassLogisticRegression/MulticlassLogisticRegression-CV-iris-out.txt'\r\n[m[37m        \t\tVoid Fail(System.String, System.Object[]) /__w/1/s/test/Microsoft.ML.TestFramework/BaseTestBaseline.cs 224\r\n[m[37m        \t\tBoolean CheckEqualityFromPathsCore(System.String, System.String, System.String, Int32, Int32, NumberParseOption) /__w/1/s/test/Microsoft.ML.TestFramework/BaseTestBaseline.cs 546\r\n[m[37m        \t\tBoolean CheckEqualityCore(System.String, System.String, System.String, Boolean, Int32, NumberParseOption) /__w/1/s/test/Microsoft.ML.TestFramework/BaseTestBaseline.cs 409\r\n[m[37m        \t\tBoolean CheckEqualityNormalized(System.String, System.String, System.String, Int32, NumberParseOption) /__w/1/s/test/Microsoft.ML.TestFramework/BaseTestBaseline.cs 377\r\n[m[37m        \t\tBoolean CheckEqualityNormalized(Int32, NumberParseOption) /__w/1/s/test/Microsoft.ML.TestFramework/TestCommandBase.cs 79\r\n[m[37m        \t\tVoid Run(RunContext, Int32, NumberParseOption) /__w/1/s/test/Microsoft.ML.TestFramework/BaseTestPredictorsMaml.cs 169\r\n[m[37m        \t\tVoid Run_CV(Microsoft.ML.RunTests.PredictorAndArgs, Microsoft.ML.TestFrameworkCommon.TestDataset, System.String[], System.String, Boolean, Int32, NumberParseOption) /__w/1/s/test/Microsoft.ML.TestFramework/BaseTestPredictorsMaml.cs 442\r\n[m[37m        \t\tVoid RunOneAllTests(Microsoft.ML.RunTests.PredictorAndArgs, Microsoft.ML.TestFrameworkCommon.TestDataset, System.String[], System.String, Boolean, Int32, NumberParseOption) /__w/1/s/test/Microsoft.ML.TestFramework/BaseTestPredictorsMaml.cs 363\r\n[m[37m        \t\tVoid MulticlassLRTest() /__w/1/s/test/Microsoft.ML.Predictor.Tests/TestPredictors.cs 155\r\n[m[37m        \t\tSystem.Object InvokeMethod(System.Object, System.Span`1[System.Object] ByRef, System.Signature, Boolean, Boolean)  0\r\n[m[37m        \t\tSystem.Object Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)  0\r\n[m[37m        \t\tSystem.Object CallTestMethod(System.Object) /_/src/xunit.execution/Sdk/Frameworks/Runners/TestInvoker.cs 150\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestInvoker.cs 257\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task <InvokeTestMethodAsync>b__1()  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/ExecutionTimer.cs 48\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task AggregateAsync(System.Func`1[System.Threading.Tasks.Task])  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task <InvokeTestMethodAsync>b__0() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestInvoker.cs 242\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.core/Sdk/ExceptionAggregator.cs 90\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task RunAsync(System.Func`1[System.Threading.Tasks.Task])  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestInvoker.cs 241\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[System.Decimal] InvokeTestMethodAsync(System.Object)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[System.Decimal] InvokeTestMethodAsync(System.Object) /_/src/xunit.execution/Sdk/Frameworks/Runners/XunitTestInvoker.cs 112\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestInvoker.cs 206\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[System.Decimal] <RunAsync>b__47_0()  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.core/Sdk/ExceptionAggregator.cs 107\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[T] RunAsync[T](System.Func`1[System.Threading.Tasks.Task`1[T]])  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[System.Decimal] RunAsync() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestInvoker.cs 189\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[System.Decimal] InvokeTestMethodAsync(Xunit.Sdk.ExceptionAggregator) /_/src/xunit.execution/Sdk/Frameworks/Runners/XunitTestRunner.cs 84\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/XunitTestRunner.cs 67\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[System.Tuple`2[System.Decimal,System.String]] InvokeTestAsync(Xunit.Sdk.ExceptionAggregator)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[System.Tuple`2[System.Decimal,System.String]] <RunAsync>b__0() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestRunner.cs 149\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.core/Sdk/ExceptionAggregator.cs 107\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[T] RunAsync[T](System.Func`1[System.Threading.Tasks.Task`1[T]])  0\r\n[m[37m        \t\tVoid MoveNext()  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunAsync()  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestCaseRunner.cs 82\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunAsync()  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestMethodRunner.cs 136\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunTestCasesAsync()  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestMethodRunner.cs 106\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunAsync()  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestClassRunner.cs 213\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunTestMethodsAsync()  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestClassRunner.cs 171\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunAsync()  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunTestClassAsync(Xunit.Abstractions.ITestClass, Xunit.Abstractions.IReflectionTypeInfo, System.Collections.Generic.IEnumerable`1[Xunit.Sdk.IXunitTestCase]) /_/src/xunit.execution/Sdk/Frameworks/Runners/XunitTestCollectionRunner.cs 158\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestCollectionRunner.cs 130\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunTestClassesAsync()  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestCollectionRunner.cs 101\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunAsync()  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunTestCollectionAsync(Xunit.Sdk.IMessageBus, Xunit.Abstractions.ITestCollection, System.Collections.Generic.IEnumerable`1[Xunit.Sdk.IXunitTestCase], System.Threading.CancellationTokenSource) /_/src/xunit.execution/Sdk/Frameworks/Runners/XunitTestAssemblyRunner.cs 235\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] <RunTestCollectionsAsync>b__2() /_/src/xunit.execution/Sdk/Frameworks/Runners/XunitTestAssemblyRunner.cs 184\r\n[m[37m        \t\tVoid InnerInvoke()  0\r\n[m[37m        \t\tVoid <.cctor>b__272_0(System.Object)  0\r\n[m[37m        \t\tVoid RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)  0\r\n[m[37m        \t\tVoid ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef, System.Threading.Thread)  0\r\n[m[37m        \t\tBoolean ExecuteEntry()  0\r\n[m[37m        \t\tVoid <.cctor>b__8_0(System.Object)  0\r\n[m[37m        \t\tVoid RunOnSyncContext(System.Threading.SendOrPostCallback, System.Object) /_/src/xunit.execution/Sdk/MaxConcurrencySyncContext.cs 106\r\n[m[37m        \t\tVoid <WorkerThreadProc>b__0(System.Object) /_/src/xunit.execution/Sdk/MaxConcurrencySyncContext.cs 96\r\n[m[37m        \t\tVoid RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)  0\r\n[m[37m        \t\tVoid WorkerThreadProc() /_/src/xunit.execution/Sdk/MaxConcurrencySyncContext.cs 96\r\n[m[37m        \t\tVoid <QueueUserWorkItem>b__5_0(System.Object) /_/src/common/XunitWorkerThread.cs 37\r\n[m[37m        \t\tVoid InnerInvoke()  0\r\n[m[37m        \t\tVoid <.cctor>b__272_0(System.Object)  0\r\n[m[37m        \t\tVoid RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)  0\r\n[m[37m        \t\tVoid ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef, System.Threading.Thread)  0\r\n[m[37m        \t\tVoid ExecuteEntryUnsafe(System.Threading.Thread)  0\r\n[m[37m        \t\tVoid <.cctor>b__10_0(System.Object)  0\r\n[m[37m        \t\tVoid StartCallback()  0\r\n[m[37m        *** Failure #2: Output file not found: /root/helix/work/workitem/e/TestOutput/MulticlassLogisticRegression/MulticlassLogisticRegression-CV-iris.txt\r\n[m[37m        \t\tVoid Fail(System.String, System.Object[]) /__w/1/s/test/Microsoft.ML.TestFramework/BaseTestBaseline.cs 224\r\n[m[37m        \t\tBoolean CheckOutFile(System.String) /__w/1/s/test/Microsoft.ML.TestFramework/BaseTestBaseline.cs 922\r\n[m[37m        \t\tBoolean CheckEqualityCore(System.String, System.String, System.String, Boolean, Int32, NumberParseOption) /__w/1/s/test/Microsoft.ML.TestFramework/BaseTestBaseline.cs 398\r\n[m[37m        \t\tBoolean CheckEquality(System.String, System.String, System.String, Int32, NumberParseOption) /__w/1/s/test/Microsoft.ML.TestFramework/BaseTestBaseline.cs 367\r\n[m[37m        \t\tBoolean CheckEquality(Int32, NumberParseOption) /__w/1/s/test/Microsoft.ML.TestFramework/TestCommandBase.cs 73\r\n[m[37m        \t\tVoid Run(RunContext, Int32, NumberParseOption) /__w/1/s/test/Microsoft.ML.TestFramework/BaseTestPredictorsMaml.cs 218\r\n[m[37m        \t\tVoid Run_CV(Microsoft.ML.RunTests.PredictorAndArgs, Microsoft.ML.TestFrameworkCommon.TestDataset, System.String[], System.String, Boolean, Int32, NumberParseOption) /__w/1/s/test/Microsoft.ML.TestFramework/BaseTestPredictorsMaml.cs 442\r\n[m[37m        \t\tVoid RunOneAllTests(Microsoft.ML.RunTests.PredictorAndArgs, Microsoft.ML.TestFrameworkCommon.TestDataset, System.String[], System.String, Boolean, Int32, NumberParseOption) /__w/1/s/test/Microsoft.ML.TestFramework/BaseTestPredictorsMaml.cs 363\r\n[m[37m        \t\tVoid MulticlassLRTest() /__w/1/s/test/Microsoft.ML.Predictor.Tests/TestPredictors.cs 155\r\n[m[37m        \t\tSystem.Object InvokeMethod(System.Object, System.Span`1[System.Object] ByRef, System.Signature, Boolean, Boolean)  0\r\n[m[37m        \t\tSystem.Object Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)  0\r\n[m[37m        \t\tSystem.Object CallTestMethod(System.Object) /_/src/xunit.execution/Sdk/Frameworks/Runners/TestInvoker.cs 150\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestInvoker.cs 257\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task <InvokeTestMethodAsync>b__1()  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/ExecutionTimer.cs 48\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task AggregateAsync(System.Func`1[System.Threading.Tasks.Task])  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task <InvokeTestMethodAsync>b__0() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestInvoker.cs 242\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.core/Sdk/ExceptionAggregator.cs 90\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task RunAsync(System.Func`1[System.Threading.Tasks.Task])  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestInvoker.cs 241\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[System.Decimal] InvokeTestMethodAsync(System.Object)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[System.Decimal] InvokeTestMethodAsync(System.Object) /_/src/xunit.execution/Sdk/Frameworks/Runners/XunitTestInvoker.cs 112\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestInvoker.cs 206\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[System.Decimal] <RunAsync>b__47_0()  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.core/Sdk/ExceptionAggregator.cs 107\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[T] RunAsync[T](System.Func`1[System.Threading.Tasks.Task`1[T]])  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[System.Decimal] RunAsync() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestInvoker.cs 189\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[System.Decimal] InvokeTestMethodAsync(Xunit.Sdk.ExceptionAggregator) /_/src/xunit.execution/Sdk/Frameworks/Runners/XunitTestRunner.cs 84\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/XunitTestRunner.cs 67\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[System.Tuple`2[System.Decimal,System.String]] InvokeTestAsync(Xunit.Sdk.ExceptionAggregator)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[System.Tuple`2[System.Decimal,System.String]] <RunAsync>b__0() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestRunner.cs 149\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.core/Sdk/ExceptionAggregator.cs 107\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[T] RunAsync[T](System.Func`1[System.Threading.Tasks.Task`1[T]])  0\r\n[m[37m        \t\tVoid MoveNext()  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunAsync()  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestCaseRunner.cs 82\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunAsync()  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestMethodRunner.cs 136\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunTestCasesAsync()  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestMethodRunner.cs 106\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunAsync()  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestClassRunner.cs 213\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunTestMethodsAsync()  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestClassRunner.cs 171\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunAsync()  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunTestClassAsync(Xunit.Abstractions.ITestClass, Xunit.Abstractions.IReflectionTypeInfo, System.Collections.Generic.IEnumerable`1[Xunit.Sdk.IXunitTestCase]) /_/src/xunit.execution/Sdk/Frameworks/Runners/XunitTestCollectionRunner.cs 158\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestCollectionRunner.cs 130\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunTestClassesAsync()  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestCollectionRunner.cs 101\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunAsync()  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunTestCollectionAsync(Xunit.Sdk.IMessageBus, Xunit.Abstractions.ITestCollection, System.Collections.Generic.IEnumerable`1[Xunit.Sdk.IXunitTestCase], System.Threading.CancellationTokenSource) /_/src/xunit.execution/Sdk/Frameworks/Runners/XunitTestAssemblyRunner.cs 235\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] <RunTestCollectionsAsync>b__2() /_/src/xunit.execution/Sdk/Frameworks/Runners/XunitTestAssemblyRunner.cs 184\r\n[m[37m        \t\tVoid InnerInvoke()  0\r\n[m[37m        \t\tVoid <.cctor>b__272_0(System.Object)  0\r\n[m[37m        \t\tVoid RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)  0\r\n[m[37m        \t\tVoid ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef, System.Threading.Thread)  0\r\n[m[37m        \t\tBoolean ExecuteEntry()  0\r\n[m[37m        \t\tVoid <.cctor>b__8_0(System.Object)  0\r\n[m[37m        \t\tVoid RunOnSyncContext(System.Threading.SendOrPostCallback, System.Object) /_/src/xunit.execution/Sdk/MaxConcurrencySyncContext.cs 106\r\n[m[37m        \t\tVoid <WorkerThreadProc>b__0(System.Object) /_/src/xunit.execution/Sdk/MaxConcurrencySyncContext.cs 96\r\n[m[37m        \t\tVoid RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)  0\r\n[m[37m        \t\tVoid WorkerThreadProc() /_/src/xunit.execution/Sdk/MaxConcurrencySyncContext.cs 96\r\n[m[37m        \t\tVoid <QueueUserWorkItem>b__5_0(System.Object) /_/src/common/XunitWorkerThread.cs 37\r\n[m[37m        \t\tVoid InnerInvoke()  0\r\n[m[37m        \t\tVoid <.cctor>b__272_0(System.Object)  0\r\n[m[37m        \t\tVoid RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)  0\r\n[m[37m        \t\tVoid ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef, System.Threading.Thread)  0\r\n[m[37m        \t\tVoid ExecuteEntryUnsafe(System.Threading.Thread)  0\r\n[m[37m        \t\tVoid <.cctor>b__10_0(System.Object)  0\r\n[m[37m        \t\tVoid StartCallback()  0\r\n[m[37m        Test MulticlassLRTest: completed normally: failed\r\n[m[37m        Test MulticlassLRTest is using netcoreapp configuration specific baselines.\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/6684","RelatedDescription":"Open issue \"PR Validation Flaky Test\" (#6684)"},{"Id":"1710339727","IsPullRequest":false,"CreatedAt":"2023-05-15T15:30:43","Actor":"TheJanzap","Number":"6682","RawContent":null,"Title":"DataFrameColumn.SetName() doesn't change name in internal `_columnNameToIndexDictionary`","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 10\r\n - ML.NET Version: ML.NET v2.0.1\r\n - .NET Version: .NET 7.0.1\r\n\r\n**Describe the bug**\r\nWhen renaming a DataFrameColumn with `.SetName()`, the name is not updated in the internal `_columnNameToIndexDictionary`, causing operations using it (like `.IndexOf()`) to fail\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create a new project with the ML.NET librarys and run the sample code below\r\n\r\n**Expected behavior**\r\nIn the code below, `.IndexOf()` should return 0. It instead returns -1, indicating that the column wasn't found\r\n\r\n**Screenshots, Code, Sample Projects**\r\n```\r\nvar dataFrame = new DataFrame(new SingleDataFrameColumn(\"OldName\"));\r\ndataFrame.Columns[0].SetName(\"NewName\");\r\nConsole.WriteLine(dataFrame.Columns.IndexOf(\"NewName\"));\r\n```\r\n\r\n**Additional context**\r\nUnsure if any other functions are affected, I only noticed it with `.IndexOf()`. If you take a look at the private `_columnNameToIndexDictionary`, you'll see that the column still has its old name and thus will fail when looking for the new name\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6682","RelatedDescription":"Open issue \"DataFrameColumn.SetName() doesn't change name in internal `_columnNameToIndexDictionary`\" (#6682)"},{"Id":"1710182941","IsPullRequest":true,"CreatedAt":"2023-05-15T14:05:55","Actor":"asmirnov82","Number":"6681","RawContent":null,"Title":"Fix DataFrame bounds checking on indexing elements","State":"open","Body":"As we have zero-based  indexing in C#, ArgumentOutOfRangeException should be thrown not only when index > length, but also when index == length","Url":"https://github.com/dotnet/machinelearning/pull/6681","RelatedDescription":"Open PR \"Fix DataFrame bounds checking on indexing elements\" (#6681)"},{"Id":"1709982563","IsPullRequest":false,"CreatedAt":"2023-05-15T12:17:54","Actor":"Sonu2396","Number":"6680","RawContent":null,"Title":"Need to find multiple columns for the same model for prediction","State":"open","Body":"I have been doing regression for using the taxi dataset and have got the solution worked fine, however only one column can be predictied as of now and i want to have multiple columns predicted by the system .there  is no provision for that as of now. What should be done exactly. ","Url":"https://github.com/dotnet/machinelearning/issues/6680","RelatedDescription":"Open issue \"Need to find multiple columns for the same model for prediction\" (#6680)"},{"Id":"1709833172","IsPullRequest":false,"CreatedAt":"2023-05-15T10:50:25","Actor":"torronen","Number":"6679","RawContent":null,"Title":"e06d7363 with big datasets: \"The process was terminated due to an unhandled exception.\"","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows Server 2019 & Ubuntu 22.04\r\n - ML.NET Version: Daily / nightly build\r\n - .NET Version: 7.0\r\n \r\n **Question**\r\n For FastTree.DiskTranspose: how much free disk space is needed? I have plenty, but perhaps I did not have for full copy of the dataset if it is needed.\r\n\r\n**Describe the bug**\r\nI am training a big dataset, 450 GB as binary IDV file, maybe about 2TB as uncompressed CSV. Smaller datasets (~10-20GB) work fine.\r\n\r\nLightGBM and FastTree with DiskTranspose are able to run wihtout exception, but at some point \"unhandled exception\" occurs. I have try...catch around contents of main() to print the error. Nothing shows up in console. Many other trainers give OOM.\r\n\r\nUbuntu 22.04, 128 GB RAM, 650 GB swap\r\nWindows 2019, 220 GB RAM, total of 2.8 TB paging files\r\n\r\n----\r\nFrom Windows Logs / Application I can see these 2 errors\r\n\r\n----\r\nApplication: Kwork.MLTrainer2023.exe\r\nCoreCLR Version: 7.0.523.17405\r\n.NET Version: 7.0.5\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: exception code e06d7363, exception address 00007FFB2A0049B9\r\n\r\nApplication: Kwork.MLTrainer2023.exe CoreCLR Version: 7.0.523.17405 .NET \r\nVersion: 7.0.5 Description: The process was terminated due to an unhandled \r\nexception. Exception Info: exception code e06d7363, exception address \r\n00007FFB2A0049B9 \r\n\r\n----\r\nFaulting application name: Kwork.MLTrainer2023.exe, version: 0.2100.23.26401, time stamp: 0x641de100\r\nFaulting module name: ucrtbase.dll, version: 10.0.17763.1490, time stamp: 0x48ac8393\r\nException code: 0xc0000409\r\nFault offset: 0x000000000006e77e\r\nFaulting process id: 0x15c0\r\nFaulting application start time: 0x01d98649658be43b\r\nFaulting application path: C:\\Users\\antti\\Desktop\\net7.0\\Kwork.MLTrainer2023.exe\r\nFaulting module path: C:\\Windows\\System32\\ucrtbase.dll\r\nReport Id: 316601db-768e-4398-b14a-5c958b66723d\r\nFaulting package full name: \r\nFaulting package-relative application ID: \r\n\r\nKwork.MLTrainer2023.exe \r\n   0.2100.23.26401 \r\n   641de100 \r\n   ucrtbase.dll \r\n   10.0.17763.1490 \r\n   48ac8393 \r\n   c0000409 \r\n   000000000006e77e \r\n   15c0 \r\n   01d98649658be43b \r\n   C:\\Users\\antti\\Desktop\\net7.0\\Kwork.MLTrainer2023.exe \r\n   C:\\Windows\\System32\\ucrtbase.dll \r\n   316601db-768e-4398-b14a-5c958b66723d \r\n    \r\n    \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6679","RelatedDescription":"Open issue \"e06d7363 with big datasets: \"The process was terminated due to an unhandled exception.\"\" (#6679)"},{"Id":"1709705459","IsPullRequest":true,"CreatedAt":"2023-05-15T09:37:58","Actor":"asmirnov82","Number":"6678","RawContent":null,"Title":"Fix ML.Fairlean using ToList on Row Collection with Count more than Max.Int","State":"open","Body":"Using ToList() method on DataFrame.Rows fails in case of DataFrame.Rows.Count is greater than Max.Int (and as it has Count type long - it's possible). \r\nInstead DataFrame.Append(IEnumerable<DataFrameRow> rows, bool inPlace = false) method should be used.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6678","RelatedDescription":"Open PR \"Fix ML.Fairlean using ToList on Row Collection with Count more than Max.Int\" (#6678)"},{"Id":"1708873616","IsPullRequest":true,"CreatedAt":"2023-05-14T09:12:31","Actor":"asmirnov82","Number":"6677","RawContent":null,"Title":"Fix DataFrame Merge issue","State":"open","Body":"Change Clone method to return correct ColumnType for all inheritors of PrimitiveDataFrameColumn class. Before the fix column of parent PrimitiveDataFrameColumn<T> was returned instead \r\n\r\nFixes #6127","Url":"https://github.com/dotnet/machinelearning/pull/6677","RelatedDescription":"Open PR \"Fix DataFrame Merge issue\" (#6677)"},{"Id":"1708849241","IsPullRequest":true,"CreatedAt":"2023-05-14T07:39:36","Actor":"asmirnov82","Number":"6676","RawContent":null,"Title":"Fix the behavior or column SetName method","State":"open","Body":"Add references to parent DataFrames inside the column. Column renaming updates metadata of all dataframes that this column belongs to.\r\n\r\nFixes #6129\r\nFixes #5916\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6676","RelatedDescription":"Open PR \"Fix the behavior or column SetName method\" (#6676)"},{"Id":"1707975610","IsPullRequest":true,"CreatedAt":"2023-05-12T23:22:13","Actor":"michaelgsharp","Number":"6674","RawContent":null,"Title":"License expression","State":"closed","Body":"Changed packages to use LicenseExpression instead of LicenseFile.","Url":"https://github.com/dotnet/machinelearning/pull/6674","RelatedDescription":"Closed or merged PR \"License expression\" (#6674)"},{"Id":"1708172339","IsPullRequest":true,"CreatedAt":"2023-05-12T20:29:26","Actor":"asmirnov82","Number":"6675","RawContent":null,"Title":"Add missing implementation for datetime relevant arrow type into dataframe","State":"open","Body":"Fixes #6201\r\n\r\nAdd support for converting Apache Arrow Date64 column into DataFrame DateTimePrimitiveColumn and vice versa\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6675","RelatedDescription":"Open PR \"Add missing implementation for datetime relevant arrow type into dataframe\" (#6675)"},{"Id":"1705464094","IsPullRequest":false,"CreatedAt":"2023-05-11T18:58:49","Actor":"asmirnov82","Number":"6672","RawContent":null,"Title":"DataFrame ToString() method uses incorrect padding","State":"closed","Body":"**Describe the bug**\r\nDataFrame ToString() method doesn't use separators between columns, so the output is very difficult to read.\r\n\r\nFor example for the dataframe:\r\n\r\nA     B     C\r\n3     16    26\r\n3     19    22\r\n3     11    28\r\n6     11    25\r\n6     10    23\r\n6     13    21\r\n6     17    20\r\n9     18    28\r\n\r\nThe output looks like this:\r\n![image](https://github.com/dotnet/machinelearning/assets/83237987/8e94e4ef-9552-443e-bcb5-063d085dc8eb)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6672","RelatedDescription":"Closed issue \"DataFrame ToString() method uses incorrect padding\" (#6672)"},{"Id":"1705488173","IsPullRequest":true,"CreatedAt":"2023-05-11T18:58:47","Actor":"asmirnov82","Number":"6673","RawContent":null,"Title":"Fix DataFrame ToString() method to use correct alignment for columns to produce readable output","State":"closed","Body":"fixes #6672","Url":"https://github.com/dotnet/machinelearning/pull/6673","RelatedDescription":"Closed or merged PR \"Fix DataFrame ToString() method to use correct alignment for columns to produce readable output\" (#6673)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-05-20T03:30:21.1569207Z","RunDurationInMilliseconds":542}