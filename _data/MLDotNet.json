{"Data":{"GitHub":{"Issues":[{"Id":"1282919068","IsPullRequest":true,"CreatedAt":"2022-06-23T20:41:01","Actor":"michaelgsharp","Number":"6235","RawContent":null,"Title":"Added score column. Auto count unique labels.","State":"open","Body":"This PR fixes #6227, fixes #6225, and fixes #6226.\r\n\r\nIt adds in the score column, truncates the input tokens at 512, and auto calculates the number of classes.\r\n\r\nIt also gets the row count to correctly set the Learning Rate Scheduler. In my offline testing this increased accuracy by up to 20% based on the dataset, batch size, and number of epochs. Mileage will vary per dataset, but all datasets should see an increase in accuracy.\r\n\r\nIt also adds in row caching similar to how the OnnxTransformer does row caching.","Url":"https://github.com/dotnet/machinelearning/pull/6235","RelatedDescription":"Open PR \"Added score column. Auto count unique labels.\" (#6235)"},{"Id":"1276858840","IsPullRequest":true,"CreatedAt":"2022-06-20T12:31:13","Actor":"dotnet-maestro[bot]","Number":"6234","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 97926d79-6b8b-4d32-c8db-08d9d479971c\r\n- **Build**: 20220616.2\r\n- **Date Produced**: June 16, 2022 3:06:16 PM UTC\r\n- **Commit**: ccfe6da198c5f05534863bbb1bff66e830e0c6ab\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22313.1 to 7.0.0-beta.22316.2][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 7.0.0-beta.22313.1 to 7.0.0-beta.22316.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22313.1 to 7.0.0-beta.22316.2][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 7.0.0-beta.22313.1 to 7.0.0-beta.22316.2][1]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 7.0.0-beta.22313.1 to 7.0.0-beta.22316.2][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.22313.1 to 7.0.0-beta.22316.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/569a3f0...ccfe6da\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6234","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#6234)"},{"Id":"1275370888","IsPullRequest":false,"CreatedAt":"2022-06-17T19:05:11","Actor":"vadd98","Number":"6233","RawContent":null,"Title":"Can't make image classification prediction on MacOS using a Tensorflow model","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: MacOS 12.4\r\n - ML.NET Version: Microsoft.ML 1.7.1\r\n - .NET Version: NET 6.0\r\n\r\n**Describe the bug**\r\nIt seems impossible to make prediction based on images using a Tensorflow model on Mac.\r\nI'm always getting this error:\r\n\r\n`Unhandled exception. System.IndexOutOfRangeException: Index was outside the bounds of the array.\r\n   at Microsoft.ML.Transforms.Image.ImagePixelExtractingTransformer.Mapper.<>c__DisplayClass5_0`1.<GetGetterCore>b__1(VBuffer`1& dst)\r\n   at Microsoft.ML.Transforms.TensorFlowTransformer.TensorValueGetterVec`1.GetTensor()\r\n   at Microsoft.ML.Transforms.TensorFlowTransformer.Mapper.UpdateCacheIfNeeded(Int64 position, ITensorValueGetter[] srcTensorGetters, String[] activeOutputColNames, OutputCache outputCache)\r\n   at Microsoft.ML.Transforms.TensorFlowTransformer.Mapper.<>c__DisplayClass11_0`1.<MakeGetter>b__4(VBuffer`1& dst)\r\n   at Microsoft.ML.Data.TypedCursorable`1.TypedRowBase.<>c__DisplayClass8_0`1.<CreateDirectVBufferSetter>b__0(TRow row)\r\n   at Microsoft.ML.Data.TypedCursorable`1.TypedRowBase.FillValues(TRow row)\r\n   at Microsoft.ML.Data.TypedCursorable`1.RowImplementation.FillValues(TRow row)\r\n   at Microsoft.ML.PredictionEngineBase`2.FillValues(TDst prediction)\r\n   at Microsoft.ML.PredictionEngine`2.Predict(TSrc example, TDst& prediction)\r\n   at Microsoft.ML.PredictionEngineBase`2.Predict(TSrc example)\r\n`\r\n\r\nThe exact same code with same model and same images to predict works flawlessly on Windows 10.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Train a Tensorflow Model (I trained the model using Python)\r\n2. Import the trained model in ML.NET\r\n3. Try to make a prediction starting from an image\r\n4. See error\r\n\r\n**Expected behavior**\r\nMake predictions without exceptions.\r\n\r\n**Screenshots, Code, Sample Projects**\r\nIf applicable, add screenshots, code snippets, or sample projects to help explain your problem.\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6233","RelatedDescription":"Open issue \"Can't make image classification prediction on MacOS using a Tensorflow model\" (#6233)"},{"Id":"1248645208","IsPullRequest":true,"CreatedAt":"2022-06-17T17:38:05","Actor":"LittleLittleCloud","Number":"6205","RawContent":null,"Title":"implement auto featurizer","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6205","RelatedDescription":"Closed or merged PR \"implement auto featurizer\" (#6205)"},{"Id":"1273827875","IsPullRequest":false,"CreatedAt":"2022-06-16T16:44:30","Actor":"LittleLittleCloud","Number":"6232","RawContent":null,"Title":"[Nice to have] having transformers to get date information from Datetime","State":"open","Body":"ModelBuilder just add support for `Datetime` type, in order to make the most use of this type, it would be helpful if ML.Net has API to extract specific date information from datetime column\r\n\r\n**Describe the solution you'd like**\r\n```csharp\r\nclass Input\r\n{\r\n    public Datetime date {get; set;]\r\n}\r\n\r\nvar pipeline = mlContext.Transformer.GetYearOutOfDate(\"year\", \"date\")\r\n                            .Append(mlContext.Transformer.GetDayOutOfDate(\"day\", \"date\")\r\n                            .Append(mlContext.Transformer.GetWeekdayOutOfDate(\"weekday\", \"date\")\r\n                            .Append(mlContext.Transformer.GetMonthOutOfDate(\"month\", \"date\");\r\nclass Output\r\n{\r\n    public Datetme date {get; set;}\r\n    public int Year {get; set;}\r\n    public int day {get; set;}\r\n    public string Month {get; set;} // Feb, Jan... \r\n    public string Weekday {get; set;} // Mon, Tue,..\r\n}\r\n\r\n```\r\n\r\n## What's more\r\nignore this issue if ML.Net already support that.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6232","RelatedDescription":"Open issue \"[Nice to have] having transformers to get date information from Datetime\" (#6232)"},{"Id":"1266763512","IsPullRequest":true,"CreatedAt":"2022-06-15T16:49:19","Actor":"LittleLittleCloud","Number":"6222","RawContent":null,"Title":"add SweepablePipeline","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\nThis PR implements `SweepablePipeline` according to spec in #6218 \r\n\r\nThe new `SweepablePipeline` will replace `MultiModelPipeline` and `SweepableEstimatorPipeline` and would be helpful in constructing complex sweepable pipeline as well as facilitating future optimization over sweeping method\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6222","RelatedDescription":"Closed or merged PR \"add SweepablePipeline\" (#6222)"},{"Id":"1271988059","IsPullRequest":false,"CreatedAt":"2022-06-15T10:02:51","Actor":"Arthur-Lee","Number":"6231","RawContent":null,"Title":"Dose Microsoft.ML support android?","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Android 11.0 (Simulator)\r\n - ML.NET Version:  ML.NET v1.7.1\r\n - .NET Version: [e.g. .NET 6.0]\r\n\r\n**Describe the bug**\r\nBuild MUAI project to refer Microsoft.ML library, and the ApplyOnnxModel will product onnxruntime DLLNotFoundException\r\n![image](https://user-images.githubusercontent.com/9337816/173799844-c7b08102-1e4f-4ee3-a41c-16c964b29bc3.png)\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n**Expected behavior**\r\nLoading Onnx model, and do the inference correctly.\r\n\r\n**Screenshots, Code, Sample Projects**\r\nIf applicable, add screenshots, code snippets, or sample projects to help explain your problem.\r\n\r\n**Additional context**\r\nThere seems to a big gap for me to use this library in mobile. Currently MAUI project recommends to use MauiAsset to include local resource and https://docs.microsoft.com/en-us/dotnet/maui/platform-integration/storage/file-system-helpers?tabs=windows#bundled-files method to retrieve the content.\r\n\r\nAll the methods only accept model path as input, however it's a little bit difficult for me to get model path in Android. I did a trick to read the bundle stream and write those bytes to cache folder and use the cache path as input.","Url":"https://github.com/dotnet/machinelearning/issues/6231","RelatedDescription":"Open issue \"Dose Microsoft.ML support android?\" (#6231)"},{"Id":"1269712903","IsPullRequest":true,"CreatedAt":"2022-06-14T22:26:29","Actor":"LittleLittleCloud","Number":"6228","RawContent":null,"Title":"Fix #2127 by adding \"Microsoft.ML.Transforms\" in using statement","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n- issue: https://github.com/dotnet/machinelearning-modelbuilder/issues/2127","Url":"https://github.com/dotnet/machinelearning/pull/6228","RelatedDescription":"Closed or merged PR \"Fix #2127 by adding \"Microsoft.ML.Transforms\" in using statement\" (#6228)"},{"Id":"1261773538","IsPullRequest":true,"CreatedAt":"2022-06-14T22:26:16","Actor":"dotnet-maestro[bot]","Number":"6216","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 97926d79-6b8b-4d32-c8db-08d9d479971c\r\n- **Build**: 20220613.1\r\n- **Date Produced**: June 13, 2022 8:26:39 AM UTC\r\n- **Commit**: 569a3f07467a9ebf55b78bbf92ab10b85e597819\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22276.1 to 7.0.0-beta.22313.1][2]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 7.0.0-beta.22276.1 to 7.0.0-beta.22313.1][2]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22276.1 to 7.0.0-beta.22313.1][2]\r\n  - **Microsoft.DotNet.SignTool**: [from 7.0.0-beta.22276.1 to 7.0.0-beta.22313.1][2]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 7.0.0-beta.22276.1 to 7.0.0-beta.22313.1][2]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.22276.1 to 7.0.0-beta.22313.1][2]\r\n\r\n[2]: https://github.com/dotnet/arcade/compare/b8b67b2...569a3f0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6216","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6216)"},{"Id":"1269993654","IsPullRequest":true,"CreatedAt":"2022-06-14T18:22:36","Actor":"michaelgsharp","Number":"6230","RawContent":null,"Title":"Mac CI Fixes.","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6230","RelatedDescription":"Closed or merged PR \"Mac CI Fixes.\" (#6230)"},{"Id":"1269976437","IsPullRequest":true,"CreatedAt":"2022-06-13T23:45:27","Actor":"michaelgsharp","Number":"6229","RawContent":null,"Title":"TorchSharp documentation and minor updates.","State":"closed","Body":"Adds some more documentation and updates some as well.\r\n\r\nnum classes no longer defaults to 2.\r\n\r\ntruncates text if longer than 512 tokens.","Url":"https://github.com/dotnet/machinelearning/pull/6229","RelatedDescription":"Closed or merged PR \"TorchSharp documentation and minor updates.\" (#6229)"},{"Id":"1261161287","IsPullRequest":false,"CreatedAt":"2022-06-13T18:45:59","Actor":"andrasfuchs","Number":"6214","RawContent":null,"Title":"ARM architecture support for scoring","State":"closed","Body":"**Is your feature request related to a problem? Please describe.**\r\nMicrosoft.ML currently supports 'x64' and 'x86' processor architectures.\r\n\r\n**Describe the solution you'd like**\r\nI would like to see support for ARM architectures, at least for scoring.\r\n\r\n**Additional context**\r\nThis feature was requested before (#1662, #1790) in 2018. @codemzs closed that issue, because ARM support was not on their short term roadmap back then.\r\n\r\nCould you give us an update on this? Can we anticipate ML.NET ARM support in the future?\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6214","RelatedDescription":"Closed issue \"ARM architecture support for scoring\" (#6214)"},{"Id":"1268832217","IsPullRequest":false,"CreatedAt":"2022-06-13T03:01:32","Actor":"luisquintanilla","Number":"6227","RawContent":null,"Title":"Text Classification - output score column for evaluation","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: ML.NET 2.0.0-preview.33210.1, ML.NET 0.20.0-preview.33210.1\r\n - .NET Version: .NET 6.0\r\n\r\n**Describe the bug**\r\n\r\nCurrently, the output from a model generated by the Text Classification API doesn't include a Score column which is a requirement when using the `Evaluate` method in the multiclass classification catalog. As a result, users have to manually calculate their evaluation metrics and can't leverage the `Evaluate` method. For consistency and improved user experience, output a `Score` column with the probabilities of the respective labels. \r\n\r\nUsing a pipeline like the following results in the error `scoreColumnName cannot be null or empty`:\r\n\r\n```csharp\r\n//Initialize MLContext\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.Data;\r\nusing Microsoft.ML.TorchSharp;\r\nusing System.ComponentModel;\r\n\r\nvar mlContext = new MLContext();\r\n\r\n// Load your data\r\nvar dataView = mlContext.Data.LoadFromTextFile<ModelInputYelp>(@\"C:\\Datasets\\yelp_labelled.txt\", separatorChar: '\\t');\r\n\r\nvar trainTestSplit = mlContext.Data.TrainTestSplit(dataView, testFraction: 0.2);\r\n\r\n//Define your training pipeline\r\nvar pipeline =\r\n        mlContext.Transforms.Conversion.MapValueToKey(\"Label\", \"Sentiment\")\r\n            .Append(mlContext.MulticlassClassification.Trainers.TextClassification(sentence1ColumnName: \"ReviewText\"))\r\n            .Append(mlContext.Transforms.Conversion.MapKeyToValue(\"PredictedLabel\"));\r\n\r\n// Train the model\r\n\r\nConsole.WriteLine(\"Training model...\");\r\n\r\nvar model = pipeline.Fit(trainTestSplit.TrainSet);\r\n\r\nConsole.WriteLine(\"Model trained...\");\r\n\r\n// Evaluate the model \r\nvar predictions =\r\n    model.Transform(trainTestSplit.TestSet);\r\n\r\nvar evaluationMetrics =\r\n    mlContext.MulticlassClassification.Evaluate(predictions, labelColumnName: \"Sentiment\", scoreColumnName: null);\r\n\r\npublic class ModelInputYelp\r\n{\r\n    [LoadColumn(0)]\r\n    public string ReviewText { get; set; }\r\n\r\n    [LoadColumn(1)]\r\n    public float Sentiment { get; set; }\r\n}\r\n```\r\n\r\n**Stacktrace**:\r\n\r\n```text\r\nSystem.ArgumentOutOfRangeException\r\n  HResult=0x80131502\r\n  Message=scoreColumnName cannot be null or empty (Parameter 'scoreColumnName')\r\n  Source=Microsoft.ML.Core\r\n  StackTrace:\r\n   at Microsoft.ML.Runtime.Contracts.CheckNonEmpty(IExceptionContext ctx, String s, String paramName)\r\n   at Microsoft.ML.MulticlassClassificationCatalog.Evaluate(IDataView data, String labelColumnName, String scoreColumnName, String predictedLabelColumnName, Int32 topKPredictionCount)\r\n   at Program.<Main>$(String[] args) in C:\\Users\\luquinta.REDMOND\\source\\repos\\TextClassificationAPI\\TextClassificationAPI\\Program.cs:line 32\r\n```\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6227","RelatedDescription":"Open issue \"Text Classification - output score column for evaluation\" (#6227)"},{"Id":"1268749321","IsPullRequest":false,"CreatedAt":"2022-06-13T00:38:22","Actor":"luisquintanilla","Number":"6226","RawContent":null,"Title":"Text Classification index out of range in self","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: ML.NET 2.0.0-preview.22310.1, ML.NET 0.20.0-preview.22310.1\r\n - .NET Version: .NET 6.0\r\n\r\n**Describe the bug**\r\n\r\nWhen running a training workload on the [wikipedia detox dataset](https://raw.githubusercontent.com/dotnet/machinelearning/main/test/data/wikipedia-detox-250-line-data.tsv) with the following pipeline, I get the error `index out of range in self`:\r\n\r\n**Pipeline**\r\n\r\n```csharp\r\n//Initialize MLContext\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.Data;\r\nusing Microsoft.ML.TorchSharp;\r\nusing System.ComponentModel;\r\n\r\nvar mlContext = new MLContext();\r\n\r\n// Load your data\r\nvar dataView = mlContext.Data.LoadFromTextFile<ModelInput>(@\"C:\\Datasets\\wikipedia-detox-250-line-data.tsv\", hasHeader: true);\r\n\r\n//Define your training pipeline\r\nvar pipeline =\r\n\t\tmlContext.Transforms.Conversion.MapValueToKey(\"Label\",\"Sentiment\")\r\n\t\t\t.Append(mlContext.MulticlassClassification.Trainers.TextClassification(sentence1ColumnName: \"SentimentText\", outputColumnName: \"outputColumn\"))\r\n\t\t\t.Append(mlContext.Transforms.Conversion.MapKeyToValue(\"outputColumn\"));\r\n\r\n// Train the model\r\n\r\nConsole.WriteLine(\"Training model...\");\r\n\r\nvar model = pipeline.Fit(dataView);\r\n\r\nConsole.WriteLine(\"Model trained...\");\r\n\r\npublic class ModelInput\r\n{\r\n    [LoadColumn(0)]\r\n    public float Sentiment { get; set; }\r\n\r\n    [LoadColumn(1)]\r\n    public string SentimentText { get; set; }\r\n}\r\n```\r\n\r\n**Stacktrace**\r\n```\r\nSystem.Runtime.InteropServices.ExternalException\r\n  HResult=0x80004005\r\n  Message=index out of range in self\r\nException raised from operator () at C:\\actions-runner\\_work\\pytorch\\pytorch\\builder\\windows\\pytorch\\aten\\src\\ATen\\native\\TensorAdvancedIndexing.cpp:996 (most recent call first):\r\n00007FFFA4C8A4C200007FFFA4C8A460 c10.dll!c10::Error::Error [<unknown file> @ <unknown line number>]\r\n00007FFFA4C63ED500007FFFA4C63E60 c10.dll!c10::IndexError::IndexError [<unknown file> @ <unknown line number>]\r\n00007FFF899A545200007FFF89992360 torch_cpu.dll!at::native::_bincount_cpu [<unknown file> @ <unknown line number>]\r\n00007FFF899ADA5F00007FFF89992360 torch_cpu.dll!at::native::_bincount_cpu [<unknown file> @ <unknown line number>]\r\n00007FFF8999567800007FFF89992360 torch_cpu.dll!at::native::_bincount_cpu [<unknown file> @ <unknown line number>]\r\n00007FFF98A7D8ED00007FFF98A7D7C0 libiomp5md.dll!_kmp_invoke_microtask [<unknown file> @ <unknown line number>]\r\n00007FFF98A2777C00007FFF98A26E30 libiomp5md.dll!_kmpc_threadprivate_register_vec [<unknown file> @ <unknown line number>]\r\n00007FFF989DE72C00007FFF989D4B50 libiomp5md.dll!_kmp_acquire_nested_drdpa_lock [<unknown file> @ <unknown line number>]\r\n00007FFF98A682B200007FFF98A68160 libiomp5md.dll!_kmp_launch_worker [<unknown file> @ <unknown line number>]\r\n00007FF890F754E000007FF890F754D0 KERNEL32.DLL!BaseThreadInitThunk [<unknown file> @ <unknown line number>]\r\n00007FF89296485B00007FF892964830 ntdll.dll!RtlUserThreadStart [<unknown file> @ <unknown line number>]\r\n\r\n  Source=TorchSharp\r\n  StackTrace:\r\n   at TorchSharp.torch.CheckForErrors()\r\n   at TorchSharp.Modules.Embedding.forward(Tensor input)\r\n   at Microsoft.ML.TorchSharp.NasBert.Modules.LearnedPositionalEmbedding.forward(Tensor input, Dictionary`2 param)\r\n   at Microsoft.ML.TorchSharp.NasBert.Models.TransformerEncoder.ForwardEmbedding(Tensor tokens, Tensor segmentLabels, Tensor positions)\r\n   at Microsoft.ML.TorchSharp.NasBert.Models.TransformerEncoder.forward(Tensor tokens, Tensor segmentLabels, Tensor positions)\r\n   at Microsoft.ML.TorchSharp.NasBert.Models.BaseModel.ExtractFeatures(Tensor srcTokens)\r\n   at Microsoft.ML.TorchSharp.NasBert.Models.TextClassificationModel.forward(Tensor srcTokens, Tensor tokenMask)\r\n   at Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer.Trainer.TrainStep(DataViewRowCursor cursor, ValueGetter`1 sentence1Getter, ValueGetter`1 sentence2Getter, ValueGetter`1 labelGetter, List`1& inputTensors, List`1& targets)\r\n   at Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer.Trainer.Train(IDataView input)\r\n   at Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Program.<Main>$(String[] args) in C:\\Users\\luquinta.REDMOND\\source\\repos\\TextClassificationAPI\\TextClassificationAPI\\Program.cs:line 22\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots, Code, Sample Projects**\r\nIf applicable, add screenshots, code snippets, or sample projects to help explain your problem.\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6226","RelatedDescription":"Open issue \"Text Classification index out of range in self\" (#6226)"},{"Id":"1268748216","IsPullRequest":false,"CreatedAt":"2022-06-13T00:35:07","Actor":"luisquintanilla","Number":"6225","RawContent":null,"Title":"Text Classification Target 2 is out of bounds","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: 2.0.0-preview-22310.1, 0.20.0-preview-22310.1\r\n - .NET Version: .NET 6.0\r\n\r\n**Describe the bug**\r\n\r\nWhen training a model with [GitHub Issues dataset](https://raw.githubusercontent.com/dotnet/samples/main/machine-learning/tutorials/GitHubIssueClassification/Data/issues_train.tsv) with the following pipeline I get the error `Target 2 is out of bounds`\r\n\r\n**Pipeline**:\r\n\r\n```csharp\r\n//Initialize MLContext\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.Data;\r\nusing Microsoft.ML.TorchSharp;\r\n\r\nvar mlContext = new MLContext();\r\n\r\n// Load your data\r\nvar dataView = mlContext.Data.LoadFromTextFile<ModelInput>(@\"C:\\Datasets\\issues_train.tsv\", separatorChar: '\\t', hasHeader: true);\r\n\r\n//Define your training pipeline\r\nvar pipeline =\r\n\t\tmlContext.Transforms.Conversion.MapValueToKey(\"Label\",\"Area\")\r\n\t\t\t.Append(mlContext.MulticlassClassification.Trainers.TextClassification(sentence1ColumnName: \"Title\"))\r\n\t\t\t.Append(mlContext.Transforms.Conversion.MapKeyToValue(\"PredictedLabel\"));\r\n\r\n// Train the model\r\n\r\nConsole.WriteLine(\"Training model...\");\r\n\r\nvar model = pipeline.Fit(dataView);\r\n\r\nConsole.WriteLine(\"Model trained...\");\r\n\r\npublic class ModelInput\r\n{\r\n    [LoadColumn(0)]\r\n    public int Id { get; set; }\r\n\r\n    [LoadColumn(1)]\r\n    public string Area { get; set; }\r\n\r\n    [LoadColumn(2)]\r\n    public string Title { get; set; }\r\n\r\n    [LoadColumn(3)]\r\n    public string Description { get; set; }\r\n}\r\n\r\n```\r\n\r\n**Stacktrace**\r\n\r\n```\r\nSystem.Runtime.InteropServices.ExternalException\r\n  HResult=0x80004005\r\n  Message=Target 2 is out of bounds.\r\nException raised from nll_loss_out_frame at C:\\actions-runner\\_work\\pytorch\\pytorch\\builder\\windows\\pytorch\\aten\\src\\ATen\\native\\LossNLL.cpp:230 (most recent call first):\r\n00007FFFC6DDA4C200007FFFC6DDA460 c10.dll!c10::Error::Error [<unknown file> @ <unknown line number>]\r\n00007FFFC6DB3ED500007FFFC6DB3E60 c10.dll!c10::IndexError::IndexError [<unknown file> @ <unknown line number>]\r\n00007FFF898A1FB400007FFF8989CE60 torch_cpu.dll!at::native::multi_margin_loss_cpu_out [<unknown file> @ <unknown line number>]\r\n00007FFF898A58F300007FFF8989CE60 torch_cpu.dll!at::native::multi_margin_loss_cpu_out [<unknown file> @ <unknown line number>]\r\n00007FFF898A773400007FFF898A76D0 torch_cpu.dll!at::native::structured_nll_loss_forward_out_cpu::impl [<unknown file> @ <unknown line number>]\r\n00007FFF8A0EC3DE00007FFF8A0DB710 torch_cpu.dll!at::cpu::zero_ [<unknown file> @ <unknown line number>]\r\n00007FFF8A0B19AE00007FFF8A086730 torch_cpu.dll!at::cpu::bucketize_outf [<unknown file> @ <unknown line number>]\r\n00007FFF89CEB89000007FFF89C974F0 torch_cpu.dll!at::_ops::zeros_out::redispatch [<unknown file> @ <unknown line number>]\r\n00007FFF89E7308300007FFF89E72FE0 torch_cpu.dll!at::_ops::nll_loss_forward::redispatch [<unknown file> @ <unknown line number>]\r\n00007FFF8AC0AFA300007FFF8AA8A050 torch_cpu.dll!torch::autograd::GraphRoot::apply [<unknown file> @ <unknown line number>]\r\n00007FFF8ABD60F200007FFF8AA8A050 torch_cpu.dll!torch::autograd::GraphRoot::apply [<unknown file> @ <unknown line number>]\r\n00007FFF89E2698C00007FFF89E26800 torch_cpu.dll!at::_ops::nll_loss_forward::call [<unknown file> @ <unknown line number>]\r\n00007FFF898A7F0F00007FFF898A7E90 torch_cpu.dll!at::native::nll_loss [<unknown file> @ <unknown line number>]\r\n00007FFF8A26B6B200007FFF8A267680 torch_cpu.dll!at::compositeimplicitautograd::where [<unknown file> @ <unknown line number>]\r\n00007FFF8A24AA5D00007FFF8A21FD00 torch_cpu.dll!at::compositeimplicitautograd::broadcast_to [<unknown file> @ <unknown line number>]\r\n00007FFF89EF0C6F00007FFF89EF0AE0 torch_cpu.dll!at::_ops::nll_loss::call [<unknown file> @ <unknown line number>]\r\n00007FFF898A888F00007FFF898A7F80 torch_cpu.dll!at::native::nll_loss_nd [<unknown file> @ <unknown line number>]\r\n00007FFF8A26B6E200007FFF8A267680 torch_cpu.dll!at::compositeimplicitautograd::where [<unknown file> @ <unknown line number>]\r\n00007FFF8A24AACD00007FFF8A21FD00 torch_cpu.dll!at::compositeimplicitautograd::broadcast_to [<unknown file> @ <unknown line number>]\r\n00007FFF89D3142F00007FFF89D312A0 torch_cpu.dll!at::_ops::nll_loss_nd::call [<unknown file> @ <unknown line number>]\r\n00007FFF898A653F00007FFF898A6250 torch_cpu.dll!at::native::cross_entropy_loss [<unknown file> @ <unknown line number>]\r\n00007FFF8A26968100007FFF8A267680 torch_cpu.dll!at::compositeimplicitautograd::where [<unknown file> @ <unknown line number>]\r\n00007FFF8A24AB5200007FFF8A21FD00 torch_cpu.dll!at::compositeimplicitautograd::broadcast_to [<unknown file> @ <unknown line number>]\r\n00007FFF89ED6B2300007FFF89ED6980 torch_cpu.dll!at::_ops::cross_entropy_loss::call [<unknown file> @ <unknown line number>]\r\n00007FFF895CFC7100007FFF895CFC40 torch_cpu.dll!at::cross_entropy_loss [<unknown file> @ <unknown line number>]\r\n00007FFF9C2C008500007FFF9C2BFEE0 LibTorchSharp.DLL!THSNN_cross_entropy [<unknown file> @ <unknown line number>]\r\n00007FFF436CE068 <unknown symbol address> !<unknown symbol> [<unknown file> @ <unknown line number>]\r\n\r\n  Source=TorchSharp\r\n  StackTrace:\r\n   at TorchSharp.torch.CheckForErrors()\r\n   at TorchSharp.torch.nn.functional.<>c__DisplayClass100_0.<cross_entropy_loss>b__0(Tensor src, Tensor target)\r\n   at Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer.Trainer.TrainStep(DataViewRowCursor cursor, ValueGetter`1 sentence1Getter, ValueGetter`1 sentence2Getter, ValueGetter`1 labelGetter, List`1& inputTensors, List`1& targets)\r\n   at Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer.Trainer.Train(IDataView input)\r\n   at Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Program.<Main>$(String[] args) in C:\\Users\\luquinta.REDMOND\\source\\repos\\TextClassificationAPI\\TextClassificationAPI\\Program.cs:line 22\r\n\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/6225","RelatedDescription":"Open issue \"Text Classification Target 2 is out of bounds\" (#6225)"},{"Id":"1267810988","IsPullRequest":true,"CreatedAt":"2022-06-10T23:24:43","Actor":"tarekgh","Number":"6223","RawContent":null,"Title":"Rename SentenceClassification to TextClassification","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/6223","RelatedDescription":"Closed or merged PR \"Rename SentenceClassification to TextClassification\" (#6223)"},{"Id":"1267847728","IsPullRequest":false,"CreatedAt":"2022-06-10T17:50:39","Actor":"luisquintanilla","Number":"6224","RawContent":null,"Title":"[DataFrame] Can't load wiki-detox dataset","State":"open","Body":"When I tried to load the [wikidetox dataset](https://raw.githubusercontent.com/dotnet/machinelearning/main/test/data/wikipedia-detox-250-line-data.tsv) using both `LoadCsv` and `LoadCsvFromString` I'm not able to because of the following error:\r\n\r\n```text\r\nSystem.Exception: Line 83 cannot be parsed with the current Delimiters.\r\n   at Microsoft.Data.Analysis.TextFieldParser.ParseDelimitedLine()\r\n   at Microsoft.Data.Analysis.DataFrame.ReadCsvLinesIntoDataFrame(WrappedStreamReaderOrStringReader wrappedReader, Char separator, Boolean header, String[] columnNames, Type[] dataTypes, Int64 numberOfRowsToRead, Int32 guessRows, Boolean addIndexColumn)\r\n   at Microsoft.Data.Analysis.DataFrame.LoadCsv(Stream csvStream, Char separator, Boolean header, String[] columnNames, Type[] dataTypes, Int64 numberOfRowsToRead, Int32 guessRows, Boolean addIndexColumn, Encoding encoding)\r\n   at Microsoft.Data.Analysis.DataFrame.LoadCsv(String filename, Char separator, Boolean header, String[] columnNames, Type[] dataTypes, Int32 numRows, Int32 guessRows, Boolean addIndexColumn, Encoding encoding)\r\n   at Submission#16.<<Initialize>>d__0.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.CodeAnalysis.Scripting.ScriptExecutionState.RunSubmissionsAsync[TResult](ImmutableArray`1 precedingExecutors, Func`2 currentExecutor, StrongBox`1 exceptionHolderOpt, Func`2 catchExceptionOpt, CancellationToken cancellationToken)\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/46974588/173123143-40766624-aa28-4fbd-a51c-f6bd04f88727.png)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6224","RelatedDescription":"Open issue \"[DataFrame] Can't load wiki-detox dataset\" (#6224)"},{"Id":"1262496009","IsPullRequest":true,"CreatedAt":"2022-06-09T23:26:59","Actor":"LittleLittleCloud","Number":"6217","RawContent":null,"Title":"Add AutoMLExperimentSetting to CreateAutoMLExperiment","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6217","RelatedDescription":"Closed or merged PR \"Add AutoMLExperimentSetting to CreateAutoMLExperiment\" (#6217)"},{"Id":"1262566169","IsPullRequest":true,"CreatedAt":"2022-06-09T16:21:29","Actor":"LittleLittleCloud","Number":"6218","RawContent":null,"Title":"add spec for sweepable pipeline","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6218","RelatedDescription":"Closed or merged PR \"add spec for sweepable pipeline\" (#6218)"},{"Id":"1265580257","IsPullRequest":false,"CreatedAt":"2022-06-09T04:35:42","Actor":"jirapongse-refinitiv","Number":"6221","RawContent":null,"Title":"DataFrame.LoadCSV converts 289203891 to System.Single and the data is rounded to 289203900.","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 10\r\n - ML.NET Version: Microsoft.Data.Analysis 0.19.1\r\n - .NET Version: .NET 5.0\r\n\r\n**Describe the bug**\r\nDataFrame.LoadCSV converts 289203891 to System.Single and the data is rounded to 289203900.\r\n\r\nI use the DataFrame.LoadCSV function to load the CSV file to create a data frame. The content in the CSV file is:\r\n\r\n```\r\nInstrument,Value,Date\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/16/2022 12:00:00 AM\r\nTEST,289203891,5/13/2022 12:00:00 AM\r\n```\r\nRun the following code:\r\n\r\n```\r\nvar df = DataFrame.LoadCsv(\"test.csv\");\r\n            Console.WriteLine(df);\r\n            Console.WriteLine(df.Info());\r\n```\r\nThe output is:\r\n```\r\nnstrumentValue     Date\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/16/2022 12:00:00 AM\r\nTEST      289203900 5/13/2022 12:00:00 AM\r\n\r\nInfo      InstrumentValue     Date\r\nDataType  System.StringSystem.SingleSystem.DateTime\r\nLength (excluding null values)20        20        20\r\n```\r\n\r\nFrom the output, DataFrame.LoadCSV uses Single.System to store the 289203891 which causes the data to be rounded to 289203900.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create the test.csv file that contains the following data\r\n\r\n```\r\nInstrument,Value,Date\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/16/2022 12:00:00 AM\r\nTEST,289203891,5/13/2022 12:00:00 AM\r\n```\r\n3. Run the following code with .NET 5.0\r\n\r\n```\r\nusing System;\r\nusing Microsoft.Data.Analysis;\r\nnamespace ConsoleApp18\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Hello World!\");\r\n            var df = DataFrame.LoadCsv(\"test.csv\");\r\n            Console.WriteLine(df);\r\n            Console.WriteLine(df.Info());\r\n        }\r\n    }\r\n}\r\n```\r\n5. Check the output the 289203891 is rounded to 289203900\r\n\r\n```\r\nHello World!\r\nInstrumentValue     Date\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/16/2022 12:00:00 AM\r\nTEST      289203900 5/13/2022 12:00:00 AM\r\n\r\nInfo      InstrumentValue     Date\r\nDataType  System.StringSystem.SingleSystem.DateTime\r\nLength (excluding null values)20        20        20\r\n\r\n```\r\n\r\n\r\n\r\n**Expected behavior**\r\nThe data in the DataFrame must not be rounded. \r\n\r\n\r\n**Screenshots, Code, Sample Projects**\r\n```\r\nusing System;\r\nusing Microsoft.Data.Analysis;\r\nnamespace ConsoleApp18\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Hello World!\");\r\n            var df = DataFrame.LoadCsv(\"test.csv\");\r\n            Console.WriteLine(df);\r\n            Console.WriteLine(df.Info());\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n**Additional context**\r\nThe application can load many CSV content so it is unable to determine the data types of columns in advance. I need to use the guessing feature in the DataFrame.LoadCSV to determine the correct data types. \r\n","Url":"https://github.com/dotnet/machinelearning/issues/6221","RelatedDescription":"Open issue \"DataFrame.LoadCSV converts 289203891 to System.Single and the data is rounded to 289203900.\" (#6221)"},{"Id":"1264535200","IsPullRequest":false,"CreatedAt":"2022-06-08T10:31:58","Actor":"landonzeng","Number":"6219","RawContent":null,"Title":"How do I use the ML.NET API to implement something like the model builder effect in VS2022？","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nHow can I use the ML.NET API to achieve a model generator effect similar to the one in VS2022. I did not find in the relevant documentation\r\n\r\n**Describe the solution you'd like**\r\nI want to dynamically implement a web page like the UI of the .mbconfig window created by the model builder in VS2022 or VS2019, where the user selects the data in the business database for forecasting operations.\r\n\r\n**Describe alternatives you've considered**\r\n\r\n\r\n**Additional context**\r\nLike this UI, is it possible for the developer to implement the content of the interface by means of API calls?\r\n![1](https://user-images.githubusercontent.com/7336781/172595403-8824135b-e9ad-4607-a101-74fcc0608c4c.png)\r\n![2](https://user-images.githubusercontent.com/7336781/172595414-c9762b2d-059c-469b-b3f0-57f096a29073.png)\r\n![3](https://user-images.githubusercontent.com/7336781/172595427-bfeb122f-d5e4-4136-8582-8c7abbcab914.png)\r\n![4](https://user-images.githubusercontent.com/7336781/172595434-70576b34-f24f-4206-8f67-6c9975efdce8.png)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6219","RelatedDescription":"Open issue \"How do I use the ML.NET API to implement something like the model builder effect in VS2022？\" (#6219)"},{"Id":"1261170081","IsPullRequest":false,"CreatedAt":"2022-06-05T21:57:38","Actor":"sretz","Number":"6215","RawContent":null,"Title":"FastForest multithreading","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 10 19044.1706\r\n - ML.NET Version: 1.7.1 x64\r\n - .NET Version: v4.8 x64\r\n\r\n**Describe the bug**\r\nI'm running tests with FastForest on machine with 2 processors with 12 cores each with a total of 48 threads, the program running the test is using 48 threads, but the highest CPU the program gets is 14%, which 7 maybe 8 threads. This leads me to believe the FastForest training algo is doing some locking.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create as many threads as the machine has\r\n2. var trainer = context.BinaryClassification.Trainers.FastForest(label, numberOfTrees: trees);\r\n3. var trained = trainer.Fit(inputs);\r\n4. look at CPU usage\r\n\r\n**Expected behavior**\r\nCPU usage at 100% not significantly less\r\n\r\n**Screenshots, Code, Sample Projects**\r\n![image](https://user-images.githubusercontent.com/80936576/172072254-e8693ed3-8464-48f7-af76-763f6bada752.png)\r\n![image](https://user-images.githubusercontent.com/80936576/172072281-c7294eee-4174-4199-afd7-f27c72d4c711.png)\r\n\r\n\r\n**Additional context**\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6215","RelatedDescription":"Open issue \"FastForest multithreading\" (#6215)"},{"Id":"1258909814","IsPullRequest":false,"CreatedAt":"2022-06-02T22:55:10","Actor":"beccamc","Number":"6213","RawContent":null,"Title":"Cannot run Transform on DataFrame with DateTime type","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: [e.g. Windows 10] \r\n - ML.NET Version: 1.7.1\r\n - .NET Version: [e.g. .NET 5.0]\r\n\r\n**Describe the bug**\r\nI'm adding the DateTime type to Model Builder, but unfortunately a few features are broken because of DataFrame support. DataFrame doesn't support the DateTime type directly. However I can add a PrimitiveDataFrameColumn of type DateTime. This displays correctly but breaks when I try to use the DataFrame for a prediction \r\n\r\n```\r\nSystem.NotSupportedException: Specified method is not supported.\r\n   at Microsoft.Data.Analysis.PrimitiveDataFrameColumn`1.GetDataViewType()\r\n   at Microsoft.Data.Analysis.PrimitiveDataFrameColumn`1.AddDataViewColumn(Builder builder)\r\n   at Microsoft.Data.Analysis.DataFrame.get_DataViewSchema()\r\n   at Microsoft.Data.Analysis.DataFrame.Microsoft.ML.IDataView.get_Schema()\r\n   at Microsoft.ML.Data.TransformerChain`1.Transform(IDataView input)\r\n   at Submission#8.<<Initialize>>d__0.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.CodeAnalysis.Scripting.ScriptExecutionState.RunSubmissionsAsync[TResult](ImmutableArray`1 precedingExecutors, Func`2 currentExecutor, StrongBox`1 exceptionHolderOpt, Func`2 catchExceptionOpt, CancellationToken cancellationToken)\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n`var resultDataView = model.Transform(dataFrame /*DataFrame with DateTime*/);`\r\n\r\nI have a notebook with the problem here [DateTimeDF.zip](https://github.com/dotnet/machinelearning/files/8828238/DateTimeDF.zip)\r\n\r\n**Expected behavior**\r\nSince IDataView supports the DateTime type, I expect DataFrame to support it as well. \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6213","RelatedDescription":"Open issue \"Cannot run Transform on DataFrame with DateTime type\" (#6213)"},{"Id":"1250218750","IsPullRequest":true,"CreatedAt":"2022-06-02T22:50:53","Actor":"LittleLittleCloud","Number":"6206","RawContent":null,"Title":"Add cancellation token to AutoMLExperiment.RunAsync","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6206","RelatedDescription":"Closed or merged PR \"Add cancellation token to AutoMLExperiment.RunAsync\" (#6206)"},{"Id":"1256145428","IsPullRequest":false,"CreatedAt":"2022-06-01T14:27:09","Actor":"turowicz","Number":"6212","RawContent":null,"Title":"TensorRT support","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nCurrently the fastest way of executing models for Computer Vision inference is by running a TensorRT-optimised model. It is widely available in C/C++ but you cannot really use it in C#.\r\n\r\n**Describe the solution you'd like**\r\nI would like to be able to load the TensorRT engine into C# memory and call it from there using OpenCVSharp's `Mat` structures.\r\n\r\n**Describe alternatives you've considered**\r\nWe are currently using Triton Inference Server but it adds overhead time for data serialisation and transmission.\r\n\r\n**Additional context**\r\nThere are certain scenarios that would benefit greatly from calling a TensorRT model in-process such as Quality Control.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6212","RelatedDescription":"Open issue \"TensorRT support\" (#6212)"},{"Id":"1253541064","IsPullRequest":false,"CreatedAt":"2022-05-31T09:47:48","Actor":"maheshlokhande","Number":"6211","RawContent":null,"Title":"Unable to extract weights from binary classifier","State":"closed","Body":"ML.NET 1.7.0\r\n\r\nI have defined data processing pipeline as below:\r\n\r\n`var pipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName: \"FC1\", \"Col1\")\r\n\r\n               .Append(mlContext.Transforms.Text.FeaturizeText(outputColumnName: \"FC2\", \"Col2\"))\r\n\r\n               .Append(mlContext.Transforms.Text.FeaturizeText(outputColumnName: \"FC3\", \"Col3\"))\r\n\r\n               .Append(mlContext.Transforms.Text.FeaturizeText(outputColumnName: \"FC4\", \"Col4\"))\r\n\r\n               .Append(mlContext.Transforms.Concatenate(\"Features\", \"FC1\", \"FC2\", \"FC3\", \"FC4\"))\r\n\r\n               .Append(mlContext.BinaryClassification.Trainers.LbfgsLogisticRegression(labelColumnName: \"Label\", featureColumnName: \"Features\", l1Regularization: 0.01f, l2Regularization: 0.01f))\r\n\r\n               .Append(mlContext.Transforms.NormalizeMinMax(outputColumnName: \"NormalizeScore\", inputColumnName: \"Score\"));`\r\n\r\nThen model is built and saved to disk. Later on, in a new process that model is loaded from disk and consumed as below.\r\n\r\n`var model = mlContext.Model.Load(filePath, out var outputSchema)`\r\n\r\nAt this point I want to extract weights from binary classification trainer but unable to do so since model is of type TransformerChain and I didn't find any way to extract binary classification trainer out of it. I am able to see weights in Visual Studio Debugger window but for that it does some casting which I am not sure if should be in actual code. \r\n\r\n`((Microsoft.ML.Data.PredictionTransformerBase<Microsoft.ML.Calibrators.CalibratedModelParametersBase<Microsoft.ML.Trainers.LinearBinaryModelParameters, Microsoft.ML.Calibrators.PlattCalibrator>>)(new System.Linq.SystemCore_EnumerableDebugView<Microsoft.ML.ITransformer>(model).Items[5])).Model.SubModel.Weights`\r\n\r\nPlease let me know if there is better way to extract weights from this.","Url":"https://github.com/dotnet/machinelearning/issues/6211","RelatedDescription":"Closed issue \"Unable to extract weights from binary classifier\" (#6211)"},{"Id":"1252762611","IsPullRequest":false,"CreatedAt":"2022-05-30T13:42:42","Actor":"nick1941","Number":"6210","RawContent":null,"Title":"Typo in Definition of Calibrators Property","State":"open","Body":"\r\n[Enter feedback here]\r\nI believe the definition should say: \"This list of calibrators...\", not \"trainers\".  The next property is about Trainers.\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: 0f5b0bf3-4da2-c89b-f98d-240c95a9ac1b\r\n* Version Independent ID: 16bef152-3cf0-f76d-daa2-18f3f1fd9202\r\n* Content: [BinaryClassificationCatalog.Calibrators Property (Microsoft.ML)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.binaryclassificationcatalog.calibrators?view=ml-dotnet)\r\n* Content Source: [dotnet/xml/Microsoft.ML/BinaryClassificationCatalog.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML/BinaryClassificationCatalog.xml)\r\n* Product: **dotnet-ml-api**\r\n* GitHub Login: @natke\r\n* Microsoft Alias: **nakersha**","Url":"https://github.com/dotnet/machinelearning/issues/6210","RelatedDescription":"Open issue \"Typo in Definition of Calibrators Property\" (#6210)"},{"Id":"1252760375","IsPullRequest":false,"CreatedAt":"2022-05-30T13:40:50","Actor":"fwaris","Number":"6209","RawContent":null,"Title":"SchemaDefinition.Create picks up internal fields instead of just public only - affects F#","State":"open","Body":"This used to work before but now I cannot use CreateFromEnumerable<T> in F# now.\r\n\r\nIn  F#, we define mutable classes by annotating F# 'record' types with CLIMutable:\r\n\r\n```F#\r\n[<CLIMutable>]\r\ntype D = \r\n   { \r\n         Data :  float[]\r\n   }\r\n```\r\nF# compiler generates IL that looks as follows:\r\n\r\n```C#\r\npublic class D  [ interface list  ] \r\n{\r\n        internal Data@ = Double[];\r\n\r\n  \tpublic Double[] Data\r\n\t{\r\n\t\tget\r\n\t\t{\r\n\t\t\treturn Data@;\r\n\t\t}\r\n\t\tset\r\n\t\t{\r\n\t\t\tData@ = value;\r\n\t\t}\r\n\t}\r\n\r\n     [ more methods including a default constructor ]\r\n}\r\n```\r\nThe SchemaDefinition.Create method picks up both \"Data@\" and \"Data\" as fields required by the schema. It should only pickup the public fields.\r\n\r\nPlease add unit tests for F# as well so these issues are caught earlier.\r\n\r\n@dsyme \r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6209","RelatedDescription":"Open issue \"SchemaDefinition.Create picks up internal fields instead of just public only - affects F#\" (#6209)"},{"Id":"1251941137","IsPullRequest":false,"CreatedAt":"2022-05-29T17:04:47","Actor":"luisquintanilla","Number":"6208","RawContent":null,"Title":"[AutoML] Can't manually fit AutoML pipeline after training","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: Microsoft.ML.AutoML 0.20.0-preview.22226.2\r\n - .NET Version: .NET 6.0\r\n \r\n**Describe the bug**\r\n\r\nI've configured and run an AutoML experiment with the following pipeline:\r\n\r\n```csharp\r\nvar pipeline = \r\n\tmlContext.Transforms.Categorical.OneHotEncoding(new[] { new InputOutputColumnPair(@\"vendor_id\", @\"vendor_id\"), new InputOutputColumnPair(@\"payment_type\", @\"payment_type\")},outputKind: OutputKind.Binary)\r\n            .Append(mlContext.Transforms.ReplaceMissingValues(new[] { new InputOutputColumnPair(@\"rate_code\", @\"rate_code\"), new InputOutputColumnPair(@\"passenger_count\", @\"passenger_count\"), new InputOutputColumnPair(@\"trip_time_in_secs\", @\"trip_time_in_secs\"), new InputOutputColumnPair(@\"trip_distance\", @\"trip_distance\") }))\r\n            .Append(mlContext.Transforms.Concatenate(@\"Features\", new[] { @\"vendor_id\", @\"payment_type\", @\"rate_code\", @\"passenger_count\", @\"trip_time_in_secs\", @\"trip_distance\" }))\r\n            .Append(mlContext.Auto().Regression(labelColumnName: \"fare_amount\"));\r\n\r\nvar experiment = \r\n\tmlContext.Auto().CreateExperiment()\r\n\t    .SetPipeline(pipeline)\r\n            .SetTrainingTimeInSeconds(60)\r\n            .SetDataset(trainSet, validationSet)\r\n            .SetEvaluateMetric(RegressionMetric.RSquared, \"fare_amount\", \"Score\");\r\n```\r\n\r\nTraining is successful. I then use the `BuildPipeline` method to get the transforms and trainer used by AutoML to train my model. When I try to call `Fit` to fit the pipeline to my data, I get the following error:\r\n\r\n```text\r\nSystem.OperationCanceledException: Operation was canceled.\r\n   at Microsoft.ML.Runtime.Contracts.CheckAlive(IHostEnvironment env)\r\n   at Microsoft.ML.Transforms.ValueToKeyMappingTransformer.Train(IHostEnvironment env, IChannel ch, ColInfo[] infos, IDataView keyData, ColumnOptionsBase[] columns, IDataView trainingData, Boolean autoConvert)\r\n   at Microsoft.ML.Transforms.ValueToKeyMappingTransformer..ctor(IHostEnvironment env, IDataView input, ColumnOptionsBase[] columns, IDataView keyData, Boolean autoConvert)\r\n   at Microsoft.ML.Transforms.ValueToKeyMappingEstimator.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.Transforms.OneHotEncodingTransformer..ctor(ValueToKeyMappingEstimator term, IEstimator`1 toVector, IDataView input)\r\n   at Microsoft.ML.Transforms.OneHotEncodingEstimator.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Submission#32.<<Initialize>>d__0.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.CodeAnalysis.Scripting.ScriptExecutionState.RunSubmissionsAsync[TResult](ImmutableArray`1 precedingExecutors, Func`2 currentExecutor, StrongBox`1 exceptionHolderOpt, Func`2 catchExceptionOpt, CancellationToken cancellationToken)\r\n```\r\n\r\nHowever, when I create a new instance of `MLContext` and manually recreate the pipeline (replacing the AutoML sweeping estimator with the actual trainer) the model trains successfully. \r\n\r\n![image](https://user-images.githubusercontent.com/46974588/170882532-37e67f60-cf51-49c6-9e93-5182c8a2be49.png)\r\n\r\n\r\n**Expected result**\r\n\r\nModel trains successfully.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6208","RelatedDescription":"Open issue \"[AutoML] Can't manually fit AutoML pipeline after training\" (#6208)"},{"Id":"1251384648","IsPullRequest":false,"CreatedAt":"2022-05-28T00:35:01","Actor":"luisquintanilla","Number":"6207","RawContent":null,"Title":"[AutoML] Can't create AutoML pipeline in F#","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: ML.NET AutoML 0.20.0-preview.22226.2\r\n - .NET Version: .NET 6.0\r\n\r\nIn F#, the way to define an `IEstimator` is through `EstimatorChain`. An `EstimatorChain` is not compatible with an `IEstimator<ITransformer>` which is what the extension method to add AutoML SweepableEstimators expects.\r\n\r\nGiven the following pipeline \r\n\r\n```fsharp\r\nlet pipeline =\r\n    EstimatorChain()\r\n        .Append(ctx.Transforms.Categorical.OneHotEncoding(\r\n                [|\r\n                    InputOutputColumnPair(@\"vendor_id\", @\"vendor_id\")\r\n                    InputOutputColumnPair(@\"payment_type\", @\"payment_type\")|], \r\n                outputKind=OutputKind.Binary))\r\n        .Append(ctx.Transforms.ReplaceMissingValues(\r\n            [|\r\n                InputOutputColumnPair(@\"rate_code\", @\"rate_code\")\r\n                InputOutputColumnPair(@\"passenger_count\", @\"passenger_count\")\r\n                InputOutputColumnPair(@\"trip_time_in_secs\", @\"trip_time_in_secs\")\r\n                InputOutputColumnPair(@\"trip_distance\", @\"trip_distance\")\r\n            |]))\r\n        .Append(ctx.Transforms.Concatenate(\r\n            \"Features\", \r\n            [|\r\n                @\"vendor_id\"\r\n                @\"payment_type\"\r\n                @\"rate_code\"\r\n                @\"passenger_count\"\r\n                @\"trip_time_in_secs\"\r\n                @\"trip_distance\" |]))\r\n        .Append(estimators=ctx.Auto().Regression(labelColumnName=\"fare_amount\"))\r\n```\r\n\r\nI get the following message:\r\n\r\n```text\r\nType constraint mismatch. The type \r\n    'EstimatorChain<ColumnConcatenatingTransformer>'    \r\nis not compatible with type\r\n    'IEstimator<ITransformer>' \r\n```\r\n\r\n`EstimatorChain` can't be cast to `IEstimator<ITransformer>` either so I can't split up the pipeline, cast, and add the `SweepableEstimators` after.\r\n\r\ncc: @LittleLittleCloud ","Url":"https://github.com/dotnet/machinelearning/issues/6207","RelatedDescription":"Open issue \"[AutoML] Can't create AutoML pipeline in F#\" (#6207)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-06-24T03:30:22.9535873Z","RunDurationInMilliseconds":542}