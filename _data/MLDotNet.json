{"Data":{"GitHub":{"Issues":[{"Id":"1725133890","IsPullRequest":true,"CreatedAt":"2023-06-05T19:53:09","Actor":"asmirnov82","Number":"6709","RawContent":null,"Title":"Clean dataframe math","State":"closed","Body":"1) Remove redundant code from PrimitiveDataFrameColumn.BinaryOperations  and PrimitiveDataFrameColumnArithmetic to make it more readable\r\n2) Remove extra cast to slightly improve performance in PrimitiveDataFrameColumn.BinaryOperations\r\n3) Remove converting to mutable buffers (involves memory coping) for operations where it's not necessary to increase performance in PrimitiveDataFrameColumnArithmetic\r\n\r\nThis is preliminary work for #6110\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6709","RelatedDescription":"Closed or merged PR \"Clean dataframe math\" (#6709)"},{"Id":"1716691712","IsPullRequest":true,"CreatedAt":"2023-06-05T19:52:49","Actor":"asmirnov82","Number":"6701","RawContent":null,"Title":"Remove redundant column names collection from DataFrameColumnCollection","State":"closed","Body":"column names collection was used to get column name by column index. As DataFrameColumnCollection is already collection of columns that can be accessed by index - this[i].Name can be used instead to get name. Storing dedicated collection of names is excessive, \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6701","RelatedDescription":"Closed or merged PR \"Remove redundant column names collection from DataFrameColumnCollection\" (#6701)"},{"Id":"1735326522","IsPullRequest":false,"CreatedAt":"2023-06-02T20:14:20","Actor":"tcaivano","Number":"6718","RawContent":null,"Title":"System.ArgumentOutOfRangeException: 'Score column 'Score' not found (Parameter 'schema')'","State":"closed","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 10\r\n - ML.NET Version: ML.NET 2.0.1\r\n - .NET Version: .NET Framework 4.8.04084, .NET 7.0\r\n\r\n**Describe the bug**\r\nWhen calling `mlContext.BinaryClassification.Evaluate()` without the Score parameter, I get an exception: \r\n`System.ArgumentOutOfRangeException: 'Score column 'Score' not found (Parameter 'schema')'`\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\npublic class AuthEventTransform\r\n    {\r\n        [LoadColumn(0)]\r\n        public int TimeStamp { get; set; }\r\n        [LoadColumn(1)]\r\n        public string? SourceUser { get; set; }\r\n        [LoadColumn(2)]\r\n        public string? DestinationUser { get; set; }\r\n        [LoadColumn(3)]\r\n        public string? SourceComputer { get; set; }\r\n        [LoadColumn(4)]\r\n        public string? DestinationComputer { get; set; }\r\n        [LoadColumn(5)]\r\n        public string? LogonType { get; set; }\r\n        [LoadColumn(6)]\r\n        public bool AuthenticationOrientation { get; set; }\r\n        [LoadColumn(7)]\r\n        public bool IsSuccessful { get; set; }\r\n        [LoadColumn(8)]\r\n        public bool IsRedTeam { get; set; }\r\n}\r\n            MLContext mlContext = new MLContext();\r\n            IDataView trainingdata = mlContext.Data.LoadFromTextFile<AuthEventTransform>(truthFileLocation, hasHeader: false, separatorChar: ',');\r\n            IDataView testDataView = mlContext.Data.LoadFromTextFile<AuthEventTransform>(testFileLocation, hasHeader: false, separatorChar: ';');\r\n            var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(new[] {\r\n                new InputOutputColumnPair(nameof(AuthEventTransform.SourceUser), nameof(AuthEventTransform.SourceUser)),\r\n                new InputOutputColumnPair(nameof(AuthEventTransform.DestinationUser), nameof(AuthEventTransform.DestinationUser)),\r\n                new InputOutputColumnPair(nameof(AuthEventTransform.SourceComputer), nameof(AuthEventTransform.SourceComputer)),\r\n                new InputOutputColumnPair(nameof(AuthEventTransform.DestinationComputer), nameof(AuthEventTransform.DestinationComputer)),\r\n                new InputOutputColumnPair(nameof(AuthEventTransform.LogonType), nameof(AuthEventTransform.LogonType)),\r\n                new InputOutputColumnPair(nameof(AuthEventTransform.AuthenticationOrientation), nameof(AuthEventTransform.AuthenticationOrientation)),\r\n                new InputOutputColumnPair(nameof(AuthEventTransform.IsSuccessful), nameof(AuthEventTransform.IsSuccessful))\r\n            });\r\n            pipeline.Append(mlContext.Transforms.Concatenate(\"Features\",\r\n                nameof(AuthEventTransform.SourceUser),\r\n                nameof(AuthEventTransform.DestinationUser),\r\n                nameof(AuthEventTransform.SourceComputer),\r\n                nameof(AuthEventTransform.DestinationComputer),\r\n                nameof(AuthEventTransform.LogonType),\r\n                nameof(AuthEventTransform.AuthenticationOrientation),\r\n                nameof(AuthEventTransform.IsSuccessful)));\r\n            pipeline.Append(mlContext.BinaryClassification.Trainers.FastTree(new FastTreeBinaryTrainer.Options() { NumberOfLeaves = 4, MinimumExampleCountPerLeaf = 20, NumberOfTrees = 4, MaximumBinCountPerFeature = 254, FeatureFraction = 1, LearningRate = 0.1, LabelColumnName = @\"IsRedTeam\", FeatureColumnName = @\"Features\" }));\r\n            pipeline.AppendCacheCheckpoint(mlContext);\r\n\r\n            ITransformer trainedModel = pipeline.Fit(trainingdata);\r\n\r\n\r\n            var predictions = trainedModel.Transform(testDataView);\r\n            var metrics = mlContext.BinaryClassification.Evaluate(predictions, \"IsRedTeam\");\r\n```\r\n\r\n\r\n**Expected behavior**\r\nScore is not required","Url":"https://github.com/dotnet/machinelearning/issues/6718","RelatedDescription":"Closed issue \"System.ArgumentOutOfRangeException: 'Score column 'Score' not found (Parameter 'schema')'\" (#6718)"},{"Id":"1737061969","IsPullRequest":true,"CreatedAt":"2023-06-01T20:43:57","Actor":"michaelgsharp","Number":"6721","RawContent":null,"Title":"helix testing","State":"open","Body":"Helix testing for correct LightGBM loading.","Url":"https://github.com/dotnet/machinelearning/pull/6721","RelatedDescription":"Open PR \"helix testing\" (#6721)"},{"Id":"1736654260","IsPullRequest":false,"CreatedAt":"2023-06-01T16:09:48","Actor":"superichmann","Number":"6720","RawContent":null,"Title":"Clarifications Regarding ForeCastBySsa","State":"open","Body":"**Note:** This is not a direct feature request but some questions, feature requests can be derived from those. I am posting them here since it is the only place I know where actual experienced contributors will answer.\r\n\r\n1. How can I call the functionality of `mlnet forecasting` from a C# codefile (something like `RegressionExperiment` but for `ForeCastBySsa`).\r\n2. How can I pass several features (columns) to `ForeCastBySsa`? do I just put them in the `IDataView` when I call `Fit`? what do I specify in the `inputColumnName` parameter? _I have tried adding more columns to the IDataView but the results are exactly the same as without the new columns_\r\n3. How do I specify which columns are which type in the same manner we do in `ColumnInformation`? Categorical, etc.\r\n4. Where can I find detailed non scientific documentation on what is the functionality of each parameter in `ForeCastBySsa` and how is it actually affects the prediction. I have already searched the official documentation, All-Samples and the source code of TimeSeries class but couldn't find detailed data.\r\nThanks!\r\n\r\nAny help is appreciated :)","Url":"https://github.com/dotnet/machinelearning/issues/6720","RelatedDescription":"Open issue \"Clarifications Regarding ForeCastBySsa\" (#6720)"},{"Id":"1735905269","IsPullRequest":false,"CreatedAt":"2023-06-01T09:44:04","Actor":"LittleLittleCloud","Number":"6719","RawContent":null,"Title":"Bring HNSW for fast approximate nearest Neighbour search","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nLLM uses cosine-similarity to retrieve relevant corpus as memory. While `KNN` is most commonly used to get `k` similar items, it's time-consuming on high-dimension vectors.\r\n\r\n HNSW will be much efficient in finding approximate k nearest neighbor on high-dimension dataset. There's a csharp implementation we can probably leverage [HNSW](https://github.com/curiosity-ai/hnsw-sharp)\r\n\r\n**Describe the solution you'd like**\r\nA clear and concise description of what you want to happen.\r\n\r\n**Describe alternatives you've considered**\r\nA clear and concise description of any alternative solutions or features you've considered.\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6719","RelatedDescription":"Open issue \"Bring HNSW for fast approximate nearest Neighbour search\" (#6719)"},{"Id":"1733175296","IsPullRequest":false,"CreatedAt":"2023-05-30T23:56:43","Actor":"userr2232","Number":"6717","RawContent":null,"Title":"Constructor for Microsoft.Data.Analysis.DataFrame that takes Microsoft.Spark.Sql.DataFrame as param.","State":"open","Body":"It just would be nice to be able to switch between spark and the analysis package. I'm trying to do some plotting that I'm not sure how to do with spark.\r\n\r\nA constructor like:\r\n`public DataFrame(Microsoft.Spark.Sql.DataFrame dataframe)`\r\n\r\nor a static function like:\r\n`public DataFrame FromSparkDataFrame(Microsoft.Spark.Sql.DataFrame dataframe)`\r\n\r\n**Describe alternatives you've considered**\r\nI've been looking for ways to convert a spark DataFrame into a RecordBatch in order to be able to use the method FromRecordBatch, but hadn't found any relevant documentation either.\r\n\r\n**Additional context**\r\nI don't know if it's relevant, but I'm running my code on Synapse Analytics.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6717","RelatedDescription":"Open issue \"Constructor for Microsoft.Data.Analysis.DataFrame that takes Microsoft.Spark.Sql.DataFrame as param.\" (#6717)"},{"Id":"1731495398","IsPullRequest":false,"CreatedAt":"2023-05-30T04:43:56","Actor":"ETG77","Number":"6716","RawContent":null,"Title":"Microsoft.ML.Model.OnnxConverter- System.InvalidOperationException: 'Unsupported type: Microsoft.ML.Data.MLImage'","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Win 11 Enterprise\r\n - .NET Version: .NET 6.0\r\n - Microsoft.ML v3.0.0-preview.23266.6\r\n - Microsoft.ML.ImageAnalytics v3.0.0-preview.23266.6\r\n- Microsoft.ML.OnnxConverter v0.21.0-preview.23266.6\r\n\r\n**Describe the bug**\r\nMicrosoft.ML.Data.MLImage unsupported in Microsoft.ML.Model.OnnxConverter.OnnxUtils.ConvertToTensorProtoType(Type rawType)\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Generate an (Object Detection) ML.NET model using VS Modelbuilder (Local GPU)\r\n2. Run mlContext.Model.ConvertToOnnx(loadedModel, inputData, stream);\r\n3. OnnxConverter will throw the following error \r\nMessage=Unsupported type: Microsoft.ML.Data.MLImage\r\n  Source=Microsoft.ML.OnnxConverter\r\n  StackTrace:\r\n   at Microsoft.ML.Model.OnnxConverter.OnnxUtils.ConvertToTensorProtoType(Type rawType)\r\n\r\n**Expected behavior**\r\nGenerate an ONNX model from a .MLNET model\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6716","RelatedDescription":"Open issue \"Microsoft.ML.Model.OnnxConverter- System.InvalidOperationException: 'Unsupported type: Microsoft.ML.Data.MLImage'\" (#6716)"},{"Id":"1730588298","IsPullRequest":false,"CreatedAt":"2023-05-29T11:20:03","Actor":"asmirnov82","Number":"6715","RawContent":null,"Title":"DataFrame GetMutableBuffer method and ReadOnlyBuffer issues","State":"open","Body":"As it was mentioned in #6642 DataFrame has a lot of boilerplate code like:\r\n\r\n```\r\nDataFrameBuffer<TResult> resultMutableBuffer = DataFrameBuffer<TResult>.GetMutableBuffer(resultBuffer);\r\nresultContainer.Buffers[b] = resultMutableBuffer;\r\nSpan<TResult> resultSpan = resultMutableBuffer.Span;\r\nDataFrameBuffer<byte> resultMutableNullBitMapBuffer = DataFrameBuffer<byte>.GetMutableBuffer(resultContainer.NullBitMapBuffers[b]);\r\nresultContainer.NullBitMapBuffers[b] = resultMutableNullBitMapBuffer;\r\nSpan<byte> resultNullBitMapSpan = resultMutableNullBitMapBuffer.Span;\r\n```\r\n\r\nIt looks like it's used for working with readonly memory, when dataframe column is created from the Apache Arrow RecordBatch in\r\n\r\n`public static DataFrame FromArrowRecordBatch(RecordBatch recordBatch)`\r\n\r\nIt's also used in constructor of PrimitiveDataFrameColumn:\r\n\r\n`public PrimitiveDataFrameColumn(string name, ReadOnlyMemory<byte> buffer, ReadOnlyMemory<byte> nullBitMap, int length = 0, int nullCount = 0) `\r\n\r\nwhich I think shouldn't be public, as it highly depends on internal implementation of PrimitiveColumn.\r\n\r\nThere is an issue with FromArrowRecordBatch factory method:\r\n\r\nRecordBatch is a disposable object. Apache Arrow by default uses NativeMemoryAllocator to allocate unmanaged memory (for example, this default allocator is used in Spark.Net to create RecorBatch and pass it to DataFrame.FromArrowRecordBatch factory method).\r\nSo it's up to a DataFrame to hold the link to the RecordBatch and correctly Dispose it. Or it has to copy the unmanaged readonly memory from the RecordBatch into managed buffers (that exactly what is happening in GetMutableBuffer on attempt to edit data), but in this case we can avoid using ReadOnlyBuffers at all or at least limit it usage to ReadOnlyDataFrame class.\r\n\r\nThe suggestion is:\r\n1) Avoid using GetMutableBuffer and ReadOnlyBuffers in the DataFrame, copy memory from Apache Arrow Record Batch on DataFrame creation (anyway we have to do on any attempt to edit DataFrame)\r\n2) Introduce ReadOnlyDataFrame with limit set of operation (only readonly like Sort, GroupBy, Filter and etc and other with inPlace set to false). ReadOnlyDataFrame will also implement ML.IDataView. So it will be the way to create ReadOnlyDataFrame from Apache Arrow RecordsBatch without copy operation and use it in ML .Net\r\n3) Make ReadOnlyDataFrameBuffer to implement IDisposable interface. For example, similar to Apache ArrowBuffer:\r\n\r\n```\r\npublic readonly partial struct ArrowBuffer : IEquatable<ArrowBuffer>, IDisposable\r\n{\r\n    private readonly IMemoryOwner<byte> _memoryOwner;\r\n    private readonly ReadOnlyMemory<byte> _memory;\r\n\r\n    public static ArrowBuffer Empty => new ArrowBuffer(Memory<byte>.Empty);\r\n\r\n    public ArrowBuffer(ReadOnlyMemory<byte> data)\r\n    {\r\n        _memoryOwner = null;\r\n        _memory = data;\r\n    }\r\n\r\n    internal ArrowBuffer(IMemoryOwner<byte> memoryOwner)\r\n    {\r\n        // When wrapping an IMemoryOwner, don't cache the Memory<byte>\r\n        // since the owner may be disposed, and the cached Memory would\r\n        // be invalid.\r\n\r\n        _memoryOwner = memoryOwner;\r\n        _memory = Memory<byte>.Empty;\r\n    }\r\n\r\n    public ReadOnlyMemory<byte> Memory =>\r\n        _memoryOwner != null ? _memoryOwner.Memory : _memory;\r\n...\r\n\r\npublic void Dispose()\r\n{\r\n    _memoryOwner?.Dispose();\r\n}\r\n```\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6715","RelatedDescription":"Open issue \"DataFrame GetMutableBuffer method and ReadOnlyBuffer issues\" (#6715)"},{"Id":"1728046407","IsPullRequest":true,"CreatedAt":"2023-05-26T18:12:50","Actor":"LittleLittleCloud","Number":"6714","RawContent":null,"Title":"Continue training on OOM error && add subsampling support for trainValidationDatasetManager","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\nTraining on a sub-set of train dataset will help mitigate `OOM` error.\r\nThis will be helpful if the training dataset is huge, in which case subsampling won't hurt metric a lot.\r\nBecause this feature is mostly useful for massive training dataset, crossValidationDatasetManger won't need it so the subsampling strategy is only added to trainValidationDatasetManager.\r\n\r\nfix #https://github.com/dotnet/machinelearning-modelbuilder/issues/2645\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6714","RelatedDescription":"Open PR \"Continue training on OOM error && add subsampling support for trainValidationDatasetManager\" (#6714)"},{"Id":"1726066492","IsPullRequest":false,"CreatedAt":"2023-05-25T15:40:09","Actor":"xxlxiong","Number":"6713","RawContent":null,"Title":"Result of PCA transform not correct","State":"open","Body":"Here is my PCA test code.\r\n`    public class TestData `\r\n `   {`\r\n`        [VectorType(2)]`\r\n`        public float[] datas { get; set; }`\r\n `   }`\r\n\r\n` //init test datas`\r\n`TestData[] testDatas = new TestData[]`\r\n`{`\r\n`    new TestData {`\r\n`        datas = new float[] {-1,1}`\r\n`   },`\r\n`    new TestData {`\r\n`        datas = new float[] {-2,-1}`\r\n`    },`\r\n`    new TestData {`\r\n`       datas = new float[] {-3,-2}`\r\n`    },`\r\n`    new TestData {`\r\n`        datas = new float[] {1,1}`\r\n`    },`\r\n`    new TestData {`\r\n`        datas = new float[] {2,1}`\r\n`    },`\r\n`    new TestData {`\r\n`        datas = new float[] {3,2}`\r\n`    },`\r\n`};`\r\n\r\n`//PCA Transform`\r\n`var mlContext = new MLContext();`\r\n`var dataView = mlContext.Data.LoadFromEnumerable(testDatas);`\r\n`var transformedDataView = mlContext.Transforms.ProjectToPrincipalComponents(\"datas\",rank:1).Fit(dataView).Transform(dataView);`\r\n`var transformedDatas = transformedDataView.GetColumn<float[]>(\"datas\");`\r\n\r\n`foreach(var data in transformedDatas)`\r\n`{`\r\n`    Console.WriteLine(data[0]);`\r\n`}`\r\n\r\nRunning result  was:\r\n0.5410613\r\n2.429873\r\n3.8025246\r\n-1.171923\r\n-2.0284152\r\n-3.4010673\r\n\r\nBut the result of PCA transform by accords.framework or sklearn was：\r\n0.50917706\r\n2.40151069\r\n3.7751606\r\n-1.20075534\r\n-2.05572155\r\n-3.42937146\r\n\r\nSo,any problem with this test program ?\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6713","RelatedDescription":"Open issue \"Result of PCA transform not correct\" (#6713)"},{"Id":"1725837611","IsPullRequest":false,"CreatedAt":"2023-05-25T13:30:49","Actor":"luisquintanilla","Number":"6712","RawContent":null,"Title":"Add Evaluate option for Object Detection","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/issues/6712","RelatedDescription":"Open issue \"Add Evaluate option for Object Detection\" (#6712)"},{"Id":"1725759616","IsPullRequest":false,"CreatedAt":"2023-05-25T12:48:03","Actor":"maxschwendeler","Number":"6711","RawContent":null,"Title":"MissingValueReplacingEstimator fill with preceiding values","State":"open","Body":"Is there a option to fill missing values with the preceding value similar to `pandas.fillna(method = ffill)` method for the MissingValueReplacingEstimator? How would that be achieved?\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6711","RelatedDescription":"Open issue \"MissingValueReplacingEstimator fill with preceiding values\" (#6711)"},{"Id":"1725542421","IsPullRequest":true,"CreatedAt":"2023-05-25T10:26:54","Actor":"asmirnov82","Number":"6710","RawContent":null,"Title":"Fix DataFrame to allow to store columns with size more than 2 Gb","State":"open","Body":"Fixes #6699 \r\n\r\n1) Decrease limit from Int.Max value on buffer size to the maximum amount of bytes supported by .Net Arrays\r\n2) Fix calculation of items amount for filling remaining capacity of fully allocated chunk\r\n3) Fix calculation of buffer size during default growing strategy (double the initial size)\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6710","RelatedDescription":"Open PR \"Fix DataFrame to allow to store columns with size more than 2 Gb\" (#6710)"},{"Id":"1724032327","IsPullRequest":false,"CreatedAt":"2023-05-24T13:40:47","Actor":"superichmann","Number":"6708","RawContent":null,"Title":"Insufficient documentation on ExampleWeightColumnName","State":"open","Body":"`ExampleWeightColumnName` is not sufficiently explained.\r\nFrom the information in the page I cannot deduce what is this actually doing.\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for learn.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: ff1457c6-de1c-ae4d-ae76-c083de96a4d5\r\n* Version Independent ID: ab18e9b7-70e7-2991-c50c-03dbb2728848\r\n* Content: [ColumnInformation Class (Microsoft.ML.AutoML)](https://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.automl.columninformation?view=ml-dotnet-preview)\r\n* Content Source: [dotnet/xml/Microsoft.ML.AutoML/ColumnInformation.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.AutoML/ColumnInformation.xml)\r\n* Product: **dotnet-ml-api**\r\n* GitHub Login: @natke\r\n* Microsoft Alias: **nakersha**","Url":"https://github.com/dotnet/machinelearning/issues/6708","RelatedDescription":"Open issue \"Insufficient documentation on ExampleWeightColumnName\" (#6708)"},{"Id":"1722002345","IsPullRequest":false,"CreatedAt":"2023-05-23T12:40:12","Actor":"NiPersson","Number":"6706","RawContent":null,"Title":"AutoML: 'System.OperationCanceledException' after upgrade to  AutoML 0.20.1","State":"open","Body":" - Windows 10 \r\n - ML.NET 2.0 AutoML 0.20.1 (NuGet)\r\n - .NET 7.0\r\n - Visual Basic\r\n\r\nAfter upgrading to 0.20.1 I get an \"Operation was canceled\" exception after a while during training. I tried tweaking the code but could not get rid of it and it persisted when I tried a simple example as shown below:   \r\n\r\n        ' Create MLContext\r\n        Dim dataPath As String = \"C:\\taxi-fare-train.csv\"\r\n        Dim ctx As MLContext = New MLContext()\r\n\r\n        ' Infer column information\r\n        Dim columnInference As ColumnInferenceResults = ctx.Auto().InferColumns(dataPath, labelColumnName:=\"fare_amount\", groupColumns:=False)\r\n\r\n        ' Create text loader\r\n        Dim loader As TextLoader = ctx.Data.CreateTextLoader(columnInference.TextLoaderOptions)\r\n\r\n        ' Load data into IDataView\r\n        Dim data As IDataView = loader.Load(dataPath)\r\n\r\n        ' Split into train (80%), validation (20%) sets\r\n        Dim trainValidationData As TrainTestData = ctx.Data.TrainTestSplit(data, testFraction:=0.2)\r\n\r\n        'Define pipeline\r\n        Dim Pipeline As SweepablePipeline = ctx.Auto().Featurizer(data, columnInformation:=columnInference.ColumnInformation).Append(ctx.Auto().Regression(labelColumnName:=columnInference.ColumnInformation.LabelColumnName))\r\n\r\n        ' Create AutoML experiment\r\n        Dim experiment As AutoMLExperiment = ctx.Auto().CreateExperiment()\r\n\r\n        ' Configure experiment\r\n        experiment.SetPipeline(Pipeline).SetRegressionMetric(RegressionMetric.RSquared, labelColumn:=columnInference.ColumnInformation.LabelColumnName).SetTrainingTimeInSeconds(60).SetDataset(trainValidationData)\r\n\r\n        ' Run experiment\r\n        Dim experimentResults As TrialResult = experiment.Run\r\n        Dim model = experimentResults.Model\r\n\r\nThe exceptions comes at \"Dim experimentResults As TrialResult = experiment.Run\".\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6706","RelatedDescription":"Open issue \"AutoML: 'System.OperationCanceledException' after upgrade to  AutoML 0.20.1\" (#6706)"},{"Id":"1720530477","IsPullRequest":false,"CreatedAt":"2023-05-22T20:59:49","Actor":"luisquintanilla","Number":"6705","RawContent":null,"Title":"Add option to add validation dataset for Object Detection","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/issues/6705","RelatedDescription":"Open issue \"Add option to add validation dataset for Object Detection\" (#6705)"},{"Id":"1720226516","IsPullRequest":false,"CreatedAt":"2023-05-22T18:36:11","Actor":"torronen","Number":"6704","RawContent":null,"Title":"AutoML 2.0: Should Seed be a tunable param?","State":"open","Body":"One of the tunable parameters is FeatureFraction. Per my understanding this drops randomly the specified portion of columns for each tree. Further, I understand that random seed is used to decide which columns to drop.\r\n\r\nIn small forests with few trees the specific feature columns that are dropped may have bigger impact than how many features are dropped. One of the columns may lead to overfit and dropping it may improve the results on validation and test sets. However, it is crucial that the correct columns is dropped.\r\n\r\nIf my understanding is correct, then I believe seed should be one of the tunable parameters. This should be the case at least for algorithms where FeatureFraction is present (FastTree and LightGBM at least). At the moment, it is not present in e.g. FastTreeOption class.\r\n\r\nAgree/disagree?","Url":"https://github.com/dotnet/machinelearning/issues/6704","RelatedDescription":"Open issue \"AutoML 2.0: Should Seed be a tunable param?\" (#6704)"},{"Id":"1719604083","IsPullRequest":true,"CreatedAt":"2023-05-22T12:36:40","Actor":"dotnet-maestro[bot]","Number":"6703","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 97926d79-6b8b-4d32-c8db-08d9d479971c\r\n- **Build**: 20230602.3\r\n- **Date Produced**: June 2, 2023 4:16:52 PM UTC\r\n- **Commit**: 234e0726c7384ee84bf08550f2d16a1ff2d5c543\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23265.1 to 8.0.0-beta.23302.3][3]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 8.0.0-beta.23265.1 to 8.0.0-beta.23302.3][3]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23265.1 to 8.0.0-beta.23302.3][3]\r\n  - **Microsoft.DotNet.SignTool**: [from 8.0.0-beta.23265.1 to 8.0.0-beta.23302.3][3]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 8.0.0-beta.23265.1 to 8.0.0-beta.23302.3][3]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23265.1 to 8.0.0-beta.23302.3][3]\r\n\r\n[3]: https://github.com/dotnet/arcade/compare/2d8d59065b...234e0726c7\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6703","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#6703)"},{"Id":"1718649730","IsPullRequest":false,"CreatedAt":"2023-05-21T21:43:28","Actor":"torronen","Number":"6702","RawContent":null,"Title":"Parallelism: trouble saturating CPU when making predictions","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows Server 2019\r\n - ML.NET Version: ML.NET 1.6.\r\n - .NET Version: .NET 7.0\r\n\r\n**Describe the bug**\r\nI run prediction in Parallel.ForEach loop on 16 core machine. The CPU consumption usually stabilizes near 10-12% even is max parallelism would be 16.\r\n\r\nI would like to understand what is might be the bottleneck. Are there some parts of Microsoft.ML that may be limiting, such as locks(?) or parallel data structures that do it internally?\r\n\r\nMemory hard Faults usually <10, max < 100. I am caching models and dataset, about 90% RAM used. Disk 0-20% Highest active time.","Url":"https://github.com/dotnet/machinelearning/issues/6702","RelatedDescription":"Open issue \"Parallelism: trouble saturating CPU when making predictions\" (#6702)"},{"Id":"1712693446","IsPullRequest":true,"CreatedAt":"2023-05-18T21:17:45","Actor":"dotnet-maestro[bot]","Number":"6691","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 97926d79-6b8b-4d32-c8db-08d9d479971c\r\n- **Build**: 20230515.1\r\n- **Date Produced**: May 15, 2023 1:54:05 PM UTC\r\n- **Commit**: 2d8d59065b5e090584a8e90c4371fc06ed60bdc5\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.23228.7 to 8.0.0-beta.23265.1][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 7.0.0-beta.23228.7 to 8.0.0-beta.23265.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.23228.7 to 8.0.0-beta.23265.1][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 7.0.0-beta.23228.7 to 8.0.0-beta.23265.1][1]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 7.0.0-beta.23228.7 to 8.0.0-beta.23265.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.23228.7 to 8.0.0-beta.23265.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/df8799988a...2d8d59065b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates tools.dotnet to 8.0.100-preview.3.23178.7\r\n\r\n[marker]: <> (End:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6691","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6691)"},{"Id":"1716195060","IsPullRequest":false,"CreatedAt":"2023-05-18T20:05:06","Actor":"torronen","Number":"6700","RawContent":null,"Title":"Feture request: Data deduplication and  Near-deduplication","State":"open","Body":"In current Microsoft.ML developers may need to reduce size of huge datasets (#6679) or at least it might be advisable to do so: For many problems and algorithms hyperparameters tuning is important and may improve results more than increasing size of dataset. Lower datasets make it feasible to complete AutoML tuning. That many of the algorithms are not fully parallizable makes it even more important. \r\n\r\nWhen sampling a dataset I assume there are two key criteria: representability and versatility. The partial sample should represent the dataset as a whole, but it should also include edge cases. \r\n\r\nAt the moment, I am taking random subsample using SplitTrainTestSet method. I assume it is representative of the whole dataset by virtue of randomness.\r\n\r\nHowever, I would like ways make sure I am not removing edge cases by accident.\r\n\r\nFeature requests:\r\n - Method to remove duplicates from the dataset\r\n - Method to remove near duplicates (inspired by this article https://huggingface.co/blog/dedup )\r\n\r\nQuestion:\r\n - Are there ways or methods to analyze subsamples representativeness? Perhaps plotting, or auto-analyzing, the distribution of values in each column. However, this only looks at the columns individually.\r\n  - Methods to analyze edge cases not being dropped?\r\n  \r\nI expect not everything can and should be supported by Microsoft.ML so I will appreciate any ideas and insights on how to ideally complete these tasks within .NET ecosystem. I think data deduplication maybe might be a good addition for Microsoft.ML, and if so, why not near deduplication.","Url":"https://github.com/dotnet/machinelearning/issues/6700","RelatedDescription":"Open issue \"Feture request: Data deduplication and  Near-deduplication\" (#6700)"},{"Id":"1715857187","IsPullRequest":false,"CreatedAt":"2023-05-18T15:45:00","Actor":"asmirnov82","Number":"6699","RawContent":null,"Title":"DataFrame crashes on attempt to create column with size higher than 2,147,483,591 bytes","State":"open","Body":"DataFrame is said to work with columns larger than int size (Count and Length has long type).\r\n\r\nHowever it fails to create column even less than Max,Int amount of items. \r\nThis code crashes with System.OutOfMemoryException: 'Array dimensions exceeded supported range.':\r\n\r\n ```\r\nPrimitiveDataFrameColumn<byte> column = new PrimitiveDataFrameColumn<byte>(\"test\", int.MaxValue - 10);\r\n DataFrame df = new DataFrame(column);\r\n```\r\n\r\nSome investigation shows, that DataFrame internaly uses structure similar to ChunkedArray, with the size of each chunk equal to Max.Int bytes (which is 2147483647).\r\nHowever, according to MSDN (https://learn.microsoft.com/en-us/dotnet/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element) actual maximum array size is less than this value:\r\n\r\n_The maximum size in any single dimension is 2,147,483,591 (0x7FFFFFC7) for byte arrays and arrays of single-byte structures, and 2,146,435,071 (0X7FEFFFFF) for arrays containing other types._\r\n\r\nSo despite the playing around with buffers collection and chunked arrays, dataframe fails in DataFrameBuffer.EnsureCapacity method\r\n\r\n```\r\nvar newCapacity = Math.Max(newLength * Size, ReadOnlyBuffer.Length * 2);\r\nvar memory = new Memory<byte>(new byte[newCapacity]);\r\n```\r\n\r\nfor newCapacity higher than 2,147,483,591","Url":"https://github.com/dotnet/machinelearning/issues/6699","RelatedDescription":"Open issue \"DataFrame crashes on attempt to create column with size higher than 2,147,483,591 bytes\" (#6699)"},{"Id":"1715245095","IsPullRequest":false,"CreatedAt":"2023-05-18T10:23:16","Actor":"LingJunZhu","Number":"6697","RawContent":null,"Title":"Training SentenceSimilarity : pipeline.Fit()  throw exception \"Unable to load DLL 'LibTorchSharp' or one of its dependencies: 找不到指定的模块。 (0x8007007E)\"","State":"closed","Body":"var mlContext = new MLContext();\r\n// Load your data\r\n        var phrases = new[]\r\n        {\r\n            new {Source=\"ML.NET 2.0 just released\", Target=\"There's a new version of ML.NET\", Similarity=5f},\r\n            new {Source=\"ML.NET 2.0 just released\", Target=\"The rain in Spain stays mainly in the plain\", Similarity=1f},\r\n            new {Source=\"ML.NET 1.0 just released\", Target=\"There's a new version of ML.NET\", Similarity=2f},\r\n            new {Source=\"ML.NET 1.0 just released\", Target=\"The rain in Spain stays mainly in the plain\", Similarity=3f},\r\n            new {Source=\"ML.NET 2.0 just released\", Target=\"There's a new version of ML.NET\", Similarity=6f},\r\n            new {Source=\"ML.NET 2.0 just released\", Target=\"The rain in Spain stays mainly in the plain\", Similarity=7f}\r\n        };\r\n\r\n        var dataView = mlContext.Data.LoadFromEnumerable(phrases);\r\n        // Split data into 80% training, 20% testing\r\n        var dataSplit = mlContext.Data.TrainTestSplit(dataView, testFraction: 0.2);\r\n\r\n        // Define your training pipeline\r\n        var pipeline = mlContext.Regression.Trainers.SentenceSimilarity(labelColumnName: \"Similarity\", sentence1ColumnName: \"Source\", sentence2ColumnName: \"Target\");\r\n\r\n        // Train the model\r\n        var model = pipeline.Fit(dataSplit.TrainSet);","Url":"https://github.com/dotnet/machinelearning/issues/6697","RelatedDescription":"Closed issue \"Training SentenceSimilarity : pipeline.Fit()  throw exception \"Unable to load DLL 'LibTorchSharp' or one of its dependencies: 找不到指定的模块。 (0x8007007E)\"\" (#6697)"},{"Id":"1715321579","IsPullRequest":true,"CreatedAt":"2023-05-18T09:34:54","Actor":"asmirnov82","Number":"6698","RawContent":null,"Title":"Reset DataFrame.RowCount to zero, when DataFrame is empty","State":"open","Body":"Reset DataFrame.RowCount to zero after Columns collection was cleared or the last column was removed.\r\nAdd addtional unit tests on Adding, Inserting and Removing columns in DataFrame\r\n\r\nFixes #6694 \r\n","Url":"https://github.com/dotnet/machinelearning/pull/6698","RelatedDescription":"Open PR \"Reset DataFrame.RowCount to zero, when DataFrame is empty\" (#6698)"},{"Id":"1715192848","IsPullRequest":false,"CreatedAt":"2023-05-18T07:56:38","Actor":"MGabala","Number":"6696","RawContent":null,"Title":"After selecting table from MSSQL i cannot select column to predict","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: ML.NET V 17.15.0.2321402\r\n - .NET Version: .NET 7\r\n\r\n**Describe the bug**\r\nAfter selecting database and table from MSSQl i cannot select column to predict. **Value prediction**\r\n\r\n![obraz](https://github.com/dotnet/machinelearning/assets/82496006/7595e959-c2c1-4026-b2a5-9692443e829e)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6696","RelatedDescription":"Open issue \"After selecting table from MSSQL i cannot select column to predict\" (#6696)"},{"Id":"1714639038","IsPullRequest":true,"CreatedAt":"2023-05-17T20:52:30","Actor":"stephentoub","Number":"6695","RawContent":null,"Title":"Fix non-thread-safe use of Random in tokenizers","State":"open","Body":"`System.Random` is not thread-safe, but Microsoft.ML.Tokenizers.Word has a static Random instance that's used without synchronization from an instance method that could end up being used concurrently from multiple threads.  This fixes it by making the `Random` be a thread-static instead of a static.  Once this component targets .NET 6+ instead of .NET Standard 2.0, this can switch to just use `Random.Shared`.","Url":"https://github.com/dotnet/machinelearning/pull/6695","RelatedDescription":"Open PR \"Fix non-thread-safe use of Random in tokenizers\" (#6695)"},{"Id":"1714193977","IsPullRequest":false,"CreatedAt":"2023-05-17T15:45:43","Actor":"asmirnov82","Number":"6694","RawContent":null,"Title":"Adding new column to empty DataFrame fails","State":"open","Body":"**Describe the bug**\r\nEmpty DataFrame fails on adding new column with exception: \r\nSystem.ArgumentException: Column length are mismatched Parameter name; column\r\n\r\n**To Reproduce**\r\n\r\nDataFrameColumn intColumn1 = new Int32DataFrameColumn(\"IntColumn_1\", Enumerable.Range(0, 10).Select(x => x));\r\nDataFrameColumn intColumn2 = new Int32DataFrameColumn(\"IntColumn_2\", Enumerable.Range(0, 11).Select(x => x));\r\n\r\nDataFrame dataFrame = new DataFrame();\r\n\r\n//Add and remove column with length = 10\r\ndataFrame.Columns.Add(intColumn1);\r\ndataFrame.Columns.Remove(intColumn1);\r\n\r\n//Now dataframe is empty, attemp to add column with lenght = 11 leads to exception\r\ndataFrame.Columns.Add(intColumn2);\r\n\r\n**Expected behavior**\r\nColumn should be added without any exception\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6694","RelatedDescription":"Open issue \"Adding new column to empty DataFrame fails\" (#6694)"},{"Id":"1713461394","IsPullRequest":false,"CreatedAt":"2023-05-17T09:06:55","Actor":"HoaNguyen55","Number":"6693","RawContent":null,"Title":"Cannot converted to ONNX model by trained model","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Google Colab\r\n - ML.NET Version: Here is some package version\r\n```\r\n<PackageReference Include=\"Microsoft.ML.OnnxRuntime\" Version=\"1.14.1\" />\r\n<PackageReference Include=\"Microsoft.ML.OnnxConverter\" Version=\"0.20.1\" />\r\n<PackageReference Include=\"Google.Protobuf\" Version=\"3.20.3\" />\r\n<PackageReference Include=\"Microsoft.ML.OnnxTransformer\" Version=\"2.0.1\" />\r\n<PackageReference Include=\"Microsoft.ML\" Version=\"2.0.1\" />\r\n```\r\n\r\n**Describe the bug**\r\nI try to load model MLModel.zip which is generated from AutoML, then I load this trained model to convert to *.ONNX model.\r\nI face this error status:\r\n```\r\nUnhandled exception. System.InvalidOperationException: The targeted pipeline can not be fully converted into a well-defined ONNX model. Please check if all steps in that pipeline are convertible to ONNX and all necessary variables are not dropped (via command line arguments).\r\n   at Microsoft.ML.Model.OnnxConverter.SaveOnnxCommand.ConvertTransformListToOnnxModel(OnnxContextImpl ctx, IChannel ch, IDataView inputData, IDataView outputData, LinkedList`1 transforms, HashSet`1 inputColumnNamesToDrop, HashSet`1 outputColumnNamesToDrop)\r\n   at Microsoft.ML.OnnxExportExtensions.ConvertToOnnxProtobufCore(IHostEnvironment env, OnnxContextImpl ctx, ITransformer transform, IDataView inputData, String[] outputColumnNamesToKeep)\r\n   at Microsoft.ML.OnnxExportExtensions.ConvertToOnnxProtobuf(ModelOperationsCatalog catalog, ITransformer transform, IDataView inputData, String[] outputColumns)\r\n   at Microsoft.ML.OnnxExportExtensions.ConvertToOnnx(ModelOperationsCatalog catalog, ITransformer transform, IDataView inputData, Stream stream)\r\n   at consumeModelApp.Program.Main(String[] args) in /content/drive/MyDrive/hinhhoc/consumeModelApp_Onnx/Program.cs:line 56\r\n\r\n```\r\nLine:56 in Program.cs:\r\n```\r\nmlContext.Model.ConvertToOnnx(mlModel, transformedData, onnx);\r\n```\r\nThe format of my dataset in TSV file is:\r\n```\r\nLabel\tImageSource\r\none_hash_marks\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/one_hash_marks/one_hash_marks_2.png\r\none_hash_marks\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/one_hash_marks/one_hash_marks_3.png\r\none_hash_marks\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/one_hash_marks/one_hash_marks_6.png\r\none_hash_marks\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/one_hash_marks/one_hash_marks_4.png\r\ntwo_hash_marks\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/two_hash_marks/two_hash_marks_858.png\r\ntwo_hash_marks\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/two_hash_marks/two_hash_marks_528.png\r\ntwo_hash_marks\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/two_hash_marks/two_hash_marks_868.png\r\ntwo_hash_marks\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/two_hash_marks/two_hash_marks_590.png\r\ntwo_hash_marks\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/two_hash_marks/two_hash_marks_513.png\r\ntwo_hash_marks\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/two_hash_marks/two_hash_marks_429.png\r\ntwo_hash_marks\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/two_hash_marks/two_hash_marks_714.png\r\ntwo_hash_marks\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/two_hash_marks/two_hash_marks_546.png\r\none_degree\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/one_degree/one_degree_251.png\r\none_degree\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/one_degree/one_degree_35.png\r\none_degree\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/one_degree/one_degree_265.png\r\none_degree\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/one_degree/one_degree_201.png\r\none_degree\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/one_degree/one_degree_157.png\r\none_degree\t/content/drive/MyDrive/hinhhoc/train_kyhieu_1/one_degree/one_degree_289.png\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Run Google Colab and install all related library\r\n2. Convert to ONNX model by snipping code in attachments\r\n[program.txt](https://github.com/dotnet/machinelearning/files/11496163/program.txt)\r\n\r\n3. See error\r\n\r\n**Expected behavior**\r\nGenerate ONNX file and be able to load this file by using Python in Google Colab environment.\r\n\r\n**Screenshots, Code, Sample Projects**\r\nN/A\r\n**Additional context**\r\nN/A","Url":"https://github.com/dotnet/machinelearning/issues/6693","RelatedDescription":"Open issue \"Cannot converted to ONNX model by trained model\" (#6693)"},{"Id":"1713169780","IsPullRequest":false,"CreatedAt":"2023-05-17T05:51:02","Actor":"superichmann","Number":"6692","RawContent":null,"Title":"Support Multiple Threads on ML Related DB Access ","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nAccording to my tests, when trying to Execute multiple `RegressionExperiments` in parallel where data is loaded through `DatabaseSource`, some bottleneck occurs on the DB access layer, probably due to a single instance of the DB access layer (even when creating a separate `DatabaseSource` for each experiment).\r\n\r\nThis prevents accessing the full throttle of the cpu and the database.\r\n\r\nMy tests were:\r\n1. Reviewing DB logs: when running experiments, the DB access occurs sequentially and not at the same time.\r\n2. Running from separate EXE: when running each experiment from a separate process, suddenly the DB gets much more queries at the same time. all experiments end faster.\r\n\r\nStill I might miss something so correct me if I am wrong.\r\n\r\n**Describe the solution you'd like**\r\nAllow instantiation of multiple DB connections to allow running experiments in parallel.\r\n\r\n**Describe alternatives you've considered**\r\n\r\n- Tried to load the idataview with the entire db data and then dropcolumns or filter but that took very long time (loading from db)\r\n\r\n**Additional context**\r\nWindows machine, both database and ml are on the same machine.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6692","RelatedDescription":"Open issue \"Support Multiple Threads on ML Related DB Access \" (#6692)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-06-06T03:30:21.0398392Z","RunDurationInMilliseconds":527}