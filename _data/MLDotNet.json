{"Data":{"GitHub":{"Issues":[{"Id":"3226465258","IsPullRequest":false,"CreatedAt":"2025-07-13T12:24:59","Actor":"RehanSaeed","Number":"7488","RawContent":null,"Title":"New Text Classification Model on ARM Fails to Train","State":"open","Body":"**System Information (please complete the following information):**\n - OS & Version: Windows 11 for ARM on a Surface Laptop 7 \n - ML.NET Version: ML.NET Model Builder 2022 v17.19.2.2511501\n - .NET Version: v9\n\n**Describe the bug**\nWhen creating a new ML.NET Text Classification Model in Visual Studio. The wizard errors when trying to train the model.\n\n**To Reproduce**\nSteps to reproduce the behavior:\n1. File -> New Model on a blank .NET 9 project.\n2. Select Text Classification\n3. Enter a CSV file.\n4. Click on train\n\n**Expected behavior**\nI should be able to train the model. ARM is supposed to work.\n\n**Screenshots, Code, Sample Projects**\n\n<img width=\"2493\" height=\"1592\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/455235d7-10f8-42f0-9cff-739ca9ff9926\" />\n\n**Additional context**\n\nFull logs below:\n[MLModel1-67B6PD.txt](https://github.com/user-attachments/files/21204354/MLModel1-67B6PD.txt)","Url":"https://github.com/dotnet/machinelearning/issues/7488","RelatedDescription":"Open issue \"New Text Classification Model on ARM Fails to Train\" (#7488)"},{"Id":"3224085207","IsPullRequest":false,"CreatedAt":"2025-07-11T20:06:26","Actor":"fritzjoostenz","Number":"7487","RawContent":null,"Title":"Quo vadis for ml.net?","State":"open","Body":"My apologies in advance for logging my message here as an issue but I know of no other way to get in touch with the  Microsoft team dealing with ML.NET. I have picked ML.NET as a machine learning technology in my application but given that the last new releases and updates on important features and issues (such as #5895) seems to have stalled around two years ago (last blog post was in Nov 2023), I am wondering if this initiative has stalled and may be abandoned down the line? \nWould you please consider posting an update on the blog with an honest appraisal of the situation and whether new features will be forthcoming or not? There are many ML techniques such as KNN that can still be added. For me, the fact that you have to use predefined classes to make predictions is almost a show stopper.\nLooking forward to seeing an update on this excellent framework.","Url":"https://github.com/dotnet/machinelearning/issues/7487","RelatedDescription":"Open issue \"Quo vadis for ml.net?\" (#7487)"},{"Id":"3155822626","IsPullRequest":false,"CreatedAt":"2025-07-09T20:36:44","Actor":"williamlzw","Number":"7483","RawContent":null,"Title":"Naming error: c# Phi3ForCasualLM  ,   python Phi3ForCausalLM","State":"closed","Body":"Naming error: c# Phi3ForCasualLM  ,   python Phi3ForCausalLM\n\n`from transformers import  Phi3ForCausalLM`","Url":"https://github.com/dotnet/machinelearning/issues/7483","RelatedDescription":"Closed issue \"Naming error: c# Phi3ForCasualLM  ,   python Phi3ForCausalLM\" (#7483)"},{"Id":"3166845805","IsPullRequest":true,"CreatedAt":"2025-07-09T20:36:43","Actor":"feiyun0112","Number":"7484","RawContent":null,"Title":"Rename Casual to Causal","State":"closed","Body":"fix #7483 \r\n","Url":"https://github.com/dotnet/machinelearning/pull/7484","RelatedDescription":"Closed or merged PR \"Rename Casual to Causal\" (#7484)"},{"Id":"3209863641","IsPullRequest":true,"CreatedAt":"2025-07-09T19:14:48","Actor":"ericstj","Number":"7486","RawContent":null,"Title":"Enable dependabot.","State":"closed","Body":"Configure dependabot for public dependency updates.  This will help this repo stay up to date with public dependencies.\r\n\r\nWe'll still need to review dependency PRs, and mirror packages to our feeds, but this will help ensure we stay up to date.","Url":"https://github.com/dotnet/machinelearning/pull/7486","RelatedDescription":"Closed or merged PR \"Enable dependabot.\" (#7486)"},{"Id":"3138102792","IsPullRequest":true,"CreatedAt":"2025-07-07T18:04:07","Actor":"Copilot","Number":"7482","RawContent":null,"Title":"Convert repository to NuGet Central Package Management","State":"closed","Body":"This PR converts the entire repository to use NuGet Central Package Management as requested in issue #7479. This centralizes all package version management in a single `Directory.Packages.props` file while ensuring the same packages and versions are restored.\n\n## Changes Made\n\n### Core Implementation\n- **Created `Directory.Packages.props`** with 89 PackageVersion items organized by category:\n  - Product dependencies (Apache.Arrow, Newtonsoft.Json, System.* packages, etc.)\n  - Test-only dependencies (MSTest, XUnit, coverlet, etc.) \n  - Build/infrastructure dependencies (MicroBuild, Arcade tools, etc.)\n- **Enabled `ManagePackageVersionsCentrally=true`** property to activate central package management\n- **Removed Version attributes** from all PackageReference items across:\n  - 64 .csproj files\n  - 4 .props/.targets files (test/Directory.Build.props, Directory.Build.targets, etc.)\n\n### Version Management\n- All package versions use existing properties from `eng/Versions.props` (e.g., `$(NewtonsoftJsonVersion)`, `$(SystemCollectionsImmutableVersion)`)\n- Maintains consistency with current version management approach\n- No changes to actual package versions - only centralized the management\n\n### Package Resolution Validation\n- ✅ Core projects restore successfully (Microsoft.ML.Core, Microsoft.ML.Data, Microsoft.ML.DataView)\n- ✅ Test projects restore successfully (Microsoft.ML.Tests, Microsoft.ML.Core.Tests)  \n- ✅ Sample projects restore successfully (Microsoft.ML.Samples, Microsoft.ML.Samples.OneDal)\n- ✅ Production projects restore successfully (Microsoft.ML.AutoML, Microsoft.ML.ImageAnalytics)\n- ✅ Package versions resolve correctly (verified via project.assets.json files)\n\n## Benefits\n\n1. **Centralized Management**: All package versions now managed in single location\n2. **Consistency**: Eliminates version conflicts across projects\n3. **Maintainability**: Easier to update package versions repository-wide\n4. **Transitive Pinning**: Enables better control over transitive dependencies\n\n## Validation\n\nThe conversion was validated by:\n- Individual project restore testing across core, test, and sample projects\n- Verification that resolved package versions match expected versions from Versions.props\n- Confirmation that no PackageReference Version attributes remain in project files\n\n**Note**: Some GenAI projects have temporary restore failures due to network issues with `JsonSchema.Net.Generation` package from Azure DevOps feeds, but this is unrelated to the central package management conversion and will resolve when the feed is accessible.\n\nFixes #7479.\n\n> [!WARNING]\n>\n> <details>\n> <summary>Firewall rules blocked me from connecting to one or more addresses</summary>\n>\n> #### I tried to connect to the following addresses, but was blocked by firewall rules:\n>\n> - `dnceng.pkgs.visualstudio.com`\n>   - Triggering command: `dotnet restore Microsoft.ML.sln ` (dns block)\n>   - Triggering command: `dotnet restore src/Microsoft.ML.GenAI.LLaMA/Microsoft.ML.GenAI.LLaMA.csproj ` (dns block)\n>\n> If you need me to access, download, or install something from one of these locations, you can either:\n>\n> - Configure [Actions setup steps](https://gh.io/copilot/actions-setup-steps) to set up my environment, which run before the firewall is enabled\n> - Add the appropriate URLs or hosts to my [firewall allow list](https://gh.io/copilot/firewall-config)\n>\n> </details>\n\n\n<!-- START COPILOT CODING AGENT TIPS -->\n---\n\n💬 Share your feedback on Copilot coding agent for the chance to win a $200 gift card! Click [here](https://survey.alchemer.com/s3/8343779/Copilot-Coding-agent) to start the survey.","Url":"https://github.com/dotnet/machinelearning/pull/7482","RelatedDescription":"Closed or merged PR \"Convert repository to NuGet Central Package Management\" (#7482)"},{"Id":"3137999567","IsPullRequest":false,"CreatedAt":"2025-07-07T18:04:07","Actor":"ericstj","Number":"7479","RawContent":null,"Title":"Convert this repository to central package management","State":"closed","Body":"Convert this repository to use NuGet CentralPackageManagement with transitive pinning enabled.\nhttps://learn.microsoft.com/en-us/nuget/consume-packages/Central-Package-Management\n\nCreate a root Directory.Packages.props with PackageVersion items for all packages used by this repository.  Those should use the properties defined in Versions.props if present.\n\nRemove the Version attribute from all PackageReference items.  If any projects have a different version used than then centrally specified version, then preserve that version by using a VersionOverride attribute.\n\nIf possible, remove extraneous PackageReferences if those are already referenced by the package indirectly.  Indirect package references can be seen by examining the `project.assets.json` after restoring the project.  If a package is listed as a `dependency` of another package in this file, then the direct reference may be removed.  The project.assets.json for a project is located under `./artifacts/obj` followed by the project name without extension.  For example, the `project.assets.json` for `Microsoft.ML.csproj` is in `./artfiacts/obj/Microsoft.ML/project.assets.json`.\n\nProjects can be restored by running `dotnet restore` directly on the project, or using `./eng/common/build.sh -restore` to restore all projects at once.\n\nOnce done with this work, compare the libraries resolved before and after for every `project.assets.json`.  The same libraries and versions should be restored after the change as were restored before the change. ","Url":"https://github.com/dotnet/machinelearning/issues/7479","RelatedDescription":"Closed issue \"Convert this repository to central package management\" (#7479)"},{"Id":"3196495034","IsPullRequest":false,"CreatedAt":"2025-07-02T16:32:28","Actor":"ogo-adp","Number":"7485","RawContent":null,"Title":"Slow model loading performance after version 3.0.1","State":"open","Body":"**System Information**\n - OS & Version: Windows 10, Windows 2016\n - ML.NET Version: ML.NET > 3.01 (including 5.0 preview)\n - .NET Version: .NET 8.0\n\n**Describe the bug**\nWe use ML.NET on a large application with approx 20 models using only ML.NET FastTree regression.\nFor all ML.NET versions after 3.0.1 the time to load a model from a MLContext has increased dramatically\n\n**To Reproduce**\nCreate a regression model using FastTree\nLoad the model from a MLContext with version 3.0.1. Note the loading time\nLoad the same model with version 4.0.2. The loading time should be much higher\nWe observed between 7 and 50 times increased in loading times\n\n**Expected behavior**\nThe loading time should not be different\n\n**Screenshots, Code, Sample Projects**\nvar mlContext = new MLContext(seed: 0);\nvar loadedModel = mlContext.Model.Load(\"path_of_model.zip\", out _); \n-> loading time 111ms with 3.0.1, 1100ms with 4.0.2\n\n**Additional context**A\nLoading a model produced with version 4.0.2 using ML.NET 3.0.1 is fast\nLoading a model produced with version 4.0.2 using ML.NET 4.0.2 is slow\nOur model zip file range from 1000ko to 3000ko\n\n","Url":"https://github.com/dotnet/machinelearning/issues/7485","RelatedDescription":"Open issue \"Slow model loading performance after version 3.0.1\" (#7485)"},{"Id":"3122814975","IsPullRequest":true,"CreatedAt":"2025-06-16T18:59:09","Actor":"gewarren","Number":"7476","RawContent":null,"Title":"Random doc updates","State":"closed","Body":"Follow up to https://github.com/dotnet/ml-api-docs/pull/175 and other grammar improvements.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7476","RelatedDescription":"Closed or merged PR \"Random doc updates\" (#7476)"},{"Id":"3122318356","IsPullRequest":false,"CreatedAt":"2025-06-12T20:11:05","Actor":"vsarakhan","Number":"7474","RawContent":null,"Title":"Incorrect behavior of ElementwiseGreaterThanOrEqual with DateTime – acts as equality check","State":"closed","Body":"**System Information (please complete the following information):**\n - OS & Version: MacOs 15.3.2\n - Microsoft.Data.Analysis Version: 0.22.2\n - .NET Version: 9.0\n\n**Describe the bug**\nI’ve found a bug in the ElementwiseGreaterThanOrEqual implementation for DateTimeDataFrameColumn. It performs an equality check instead of checking for “greater than or equal”.\n\n\n**To Reproduce**\nSteps to reproduce the behavior:\n1. Create a DateTimeDataFrameColumn with some sample DateTime values\n2. Call the ElementwiseGreaterThanOrEqual method using a value that is less than some of the values in the column\n3. Observe that only values equal to the given value are marked as true\n\n**Expected behavior**\n`ElementwiseGreaterThanOrEqual` should return `true` for values that are either equal to or greater than the comparison value.\n\nFor example:\n- Input: [2020-01-01, 2021-01-01, 2022-01-01]\n- Comparison value: 2021-01-01\n- Expected result: [false, true, true]\n\n**Screenshots, Code, Sample Projects**\n```csharp\nusing Microsoft.Data.Analysis;\nusing System;\n\nvar dates = new DateTimeDataFrameColumn(\"Dates\", new[]\n{\n    new DateTime(2020, 1, 1),\n    new DateTime(2021, 1, 1),\n    new DateTime(2022, 1, 1),\n});\nvar result = dates.ElementwiseGreaterThanOrEqual(new DateTime(2021, 1, 1));\nConsole.WriteLine(result); // Expected: [false, true, true], Actual: [false, true, false]\n\n**Additional context**\n-\n","Url":"https://github.com/dotnet/machinelearning/issues/7474","RelatedDescription":"Closed issue \"Incorrect behavior of ElementwiseGreaterThanOrEqual with DateTime – acts as equality check\" (#7474)"},{"Id":"3122342504","IsPullRequest":true,"CreatedAt":"2025-06-12T20:11:04","Actor":"vsarakhan","Number":"7475","RawContent":null,"Title":"Fix ElementwiseGreaterThanOrEqual to use >= instead of ==","State":"closed","Body":"Fixes [#7474](https://github.com/dotnet/machinelearning/issues/7474)\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7475","RelatedDescription":"Closed or merged PR \"Fix ElementwiseGreaterThanOrEqual to use >= instead of ==\" (#7475)"},{"Id":"3138005873","IsPullRequest":true,"CreatedAt":"2025-06-11T20:52:48","Actor":"ericstj","Number":"7481","RawContent":null,"Title":"Add copilot-setup-steps.yml","State":"closed","Body":"This will enable us to use Copilot agent in this repo.\r\n\r\nTest results -- https://github.com/dotnet/machinelearning/actions/runs/15594105366\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7481","RelatedDescription":"Closed or merged PR \"Add copilot-setup-steps.yml\" (#7481)"},{"Id":"3138000227","IsPullRequest":true,"CreatedAt":"2025-06-11T20:21:42","Actor":"Copilot","Number":"7480","RawContent":null,"Title":"[WIP] Convert this repository to central package management","State":"closed","Body":"Thanks for assigning this issue to me. I'm starting to work on it and will keep this PR's description up to date as I form a plan and make progress.\n\nOriginal issue description:\n\n> Convert this repository to use NuGet CentralPackageManagement with transitive pinning enabled.\n> https://learn.microsoft.com/en-us/nuget/consume-packages/Central-Package-Management\n> \n> Create a root Directory.Packages.props with PackageVersion items for all packages used by this repository.  Those should use the properties defined in Versions.props if present.\n> \n> Remove the Version attribute from all PackageReference items.  If any projects have a different version used than then centrally specified version, then preserve that version by using a VersionOverride attribute.\n> \n> If possible, remove extraneous PackageReferences if those are already referenced by the package indirectly.  Indirect package references can be seen by examining the `project.assets.json` after restoring the project.  If a package is listed as a `dependency` of another package in this file, then the direct reference may be removed.  The project.assets.json for a project is located under `./artifacts/obj` followed by the project name without extension.  For example, the `project.assets.json` for `Microsoft.ML.csproj` is in `./artfiacts/obj/Microsoft.ML/project.assets.json`.\n> \n> Once done with this work, compare the libraries resolved before and after for every `project.assets.json`.  The same libraries and versions should be restored after the change as were restored before the change. \n\n\nFixes #7479.\n\n<!-- START COPILOT CODING AGENT TIPS -->\n---\n\n💬 Share your feedback on Copilot coding agent for the chance to win a $200 gift card! Click [here](https://survey.alchemer.com/s3/8343779/Copilot-Coding-agent) to start the survey.","Url":"https://github.com/dotnet/machinelearning/pull/7480","RelatedDescription":"Closed or merged PR \"[WIP] Convert this repository to central package management\" (#7480)"},{"Id":"3137763511","IsPullRequest":true,"CreatedAt":"2025-06-11T19:02:21","Actor":"ericstj","Number":"7478","RawContent":null,"Title":"Create copilot-setup-steps.yml","State":"closed","Body":"Create a workflow for copilot agent to build the repo.","Url":"https://github.com/dotnet/machinelearning/pull/7478","RelatedDescription":"Closed or merged PR \"Create copilot-setup-steps.yml\" (#7478)"},{"Id":"3137422984","IsPullRequest":false,"CreatedAt":"2025-06-11T16:17:52","Actor":"mikeKuester","Number":"7477","RawContent":null,"Title":"KMeansTrainer.Options NumberOfThreads has no effect? Low CPU load during .Fit()","State":"open","Body":"**System Information:**\n - Windows 11 22H2\n - ML.NET Version: Microsoft.ML 4.0.2\n - .NET Version: .NET 9.0\n\n**Describe the bug**\nI have a large dataset with approx. 500,000 spectras with 200 data points each. I use the kMeansTrainer for the clustering. It works - but during the \"training\" (which takes ~75 s) ...\n\n```csharp\nvar model = pipeline.Fit(trainingData);\n```\n... the CPU load is less than 20% on a i7-11850H @ 2.5 GHz CPU with 16 threads. If I got the ML.Net code right, it allows max. 16 / 2 = 8 threads. But I can set the `NumberOfThreads` in the trainer options from 1 to 8 - it doesn't change anything.\n\n```csharp\n            var options = new KMeansTrainer.Options\n            {\n                NumberOfClusters = numberOfClusters,\n                // InitializationAlgorithm = KMeansTrainer.InitializationAlgorithm.KMeansYinyang,\n                // OptimizationTolerance = 1e-7f, // default 1e-7f\n                NumberOfThreads = 8,  // default 8                \n                // MaximumNumberOfIterations = 1000\n            };\n            var pipeline = mlContext.Clustering.Trainers.KMeans(options);\n```\nThe consumed time doesn't change and the CPU load is also low.\n\nIf I reduce e.g. the `MaximumNumberOfIterations` or the `OptimizationTolerance`  I can see an effect on the training time (and on the results).\n\nFor the normalization of the data I use Parallel.For loops and during this loops, I can clearly see that all thread ramp up to ~80% load for a short time. \n\nIf I dig into the code: [KMeansLloydsYinYangTrain.Train](https://github.com/dotnet/machinelearning/blob/aea5651f13e18c4387266e830224abe25f7e9bf1/src/Microsoft.ML.KMeansClustering/KMeansPlusPlusTrainer.cs#L1351)  in every iteration the [chunks should be processes in parallel](https://github.com/dotnet/machinelearning/blob/aea5651f13e18c4387266e830224abe25f7e9bf1/src/Microsoft.ML.KMeansClustering/KMeansPlusPlusTrainer.cs#L1394), right? If I select the maximum of the 8 threads, I would expect that 8 threads should run at max. load.\n\n**Expected behavior**\nI expect that the KMeans training should use the maximum allowed CPU power in order to reduce time.\n\n**Additional context**\nWe compared our C# app with MatLab kMeans with the same data: ML.Net is faster than the MatLab implementation, but if I see that the cpu has 80 % idle time during the training, it could be even faster. ;)\n\n\nThanks,\nMike","Url":"https://github.com/dotnet/machinelearning/issues/7477","RelatedDescription":"Open issue \"KMeansTrainer.Options NumberOfThreads has no effect? Low CPU load during .Fit()\" (#7477)"},{"Id":"3090010205","IsPullRequest":true,"CreatedAt":"2025-05-26T05:02:20","Actor":"dotnet-maestro[bot]","Number":"7473","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:c692823c-b896-437f-4f57-08dc434cc8f6)\n## From https://github.com/dotnet/arcade\n- **Subscription**: [c692823c-b896-437f-4f57-08dc434cc8f6](https://maestro.dot.net/subscriptions?search=c692823c-b896-437f-4f57-08dc434cc8f6)\n- **Build**: [20250708.3](https://dev.azure.com/dnceng/internal/_build/results?buildId=2745289)\n- **Date Produced**: July 8, 2025 4:05:20 PM UTC\n- **Commit**: [4e526204e83e615efe8eb5743be7fbccfa4e492a](https://github.com/dotnet/arcade/commit/4e526204e83e615efe8eb5743be7fbccfa4e492a)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - From [10.0.0-beta.25268.1 to 10.0.0-beta.25358.3][8]\n    - Microsoft.DotNet.Arcade.Sdk\n    - Microsoft.DotNet.Build.Tasks.Feed\n    - Microsoft.DotNet.Helix.Sdk\n    - Microsoft.DotNet.SignTool\n    - Microsoft.DotNet.SwaggerGenerator.MSBuild\n    - Microsoft.DotNet.XliffTasks\n    - Microsoft.DotNet.XUnitExtensions\n\n[8]: https://github.com/dotnet/arcade/compare/35a34fa5ab...4e526204e8\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:c692823c-b896-437f-4f57-08dc434cc8f6)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","Url":"https://github.com/dotnet/machinelearning/pull/7473","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#7473)"},{"Id":"3085963107","IsPullRequest":true,"CreatedAt":"2025-05-23T10:41:43","Actor":"Crichen","Number":"7472","RawContent":null,"Title":"Updated Tensorflow.Net to 0.70.2 with Tensorflow 2.7.0.","State":"open","Body":"Fixes #7471 \r\n\r\nNumSharp replaced with Tensorflow.NumPy.\r\nTensorShape replaced with Shape, Shape object has dimensions as 64 bit long, check added for casting to 32 bit int alsoTensor constructor using SafeTensorHandle/DangerousGetHandle and TF_DataType not required when casting.\r\n\r\nAdded StringTensorFactory to wrap addition tensorflow.dll methods required to create Tensors from string based input.\r\n\r\nWe are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7472","RelatedDescription":"Open PR \"Updated Tensorflow.Net to 0.70.2 with Tensorflow 2.7.0.\" (#7472)"},{"Id":"3083683413","IsPullRequest":false,"CreatedAt":"2025-05-22T14:59:39","Actor":"Crichen","Number":"7471","RawContent":null,"Title":"NVidia GPU cards with architectures later than Turing do not properly infer image classification when using transpiled/cached models. This requires updating of Tensorflow to 2.7 to resolve.","State":"open","Body":"Current release of ML.Net is fixed to Tensorflow 2.3.1 with CUDA and Cudnn support at 10. and 7.6 respectively. Models trained with this set up work natively with Turing based cards. Newer GPU cards transpile and cache the trained model to run on their specific architectures, Ampere, Ada, Hopper, etc. Although the trained models will load with newer architectures the outputs give fixed results irrespective of the inputs.\n\nTo be compatible with the newer Ampere based architecture the Tensorflow.Net dependency needs to be raised to 0.70.2, using Tensorflow 2.7. This allows support of CUDA 11.2 and Cudnn 8.1 and for the trained models to run natively on Ampere without the need for transpiling.\n\nThese updates are tested and ready to clean up and commit for code review.","Url":"https://github.com/dotnet/machinelearning/issues/7471","RelatedDescription":"Open issue \"NVidia GPU cards with architectures later than Turing do not properly infer image classification when using transpiled/cached models. This requires updating of Tensorflow to 2.7 to resolve.\" (#7471)"},{"Id":"3054380980","IsPullRequest":true,"CreatedAt":"2025-05-21T21:41:47","Actor":"jeffhandley","Number":"7462","RawContent":null,"Title":"Bump Microsoft.Extensions.AI to 9.4.4-preview.1.25259.16","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/7462","RelatedDescription":"Closed or merged PR \"Bump Microsoft.Extensions.AI to 9.4.4-preview.1.25259.16\" (#7462)"},{"Id":"3055638501","IsPullRequest":true,"CreatedAt":"2025-05-21T21:40:44","Actor":"dotnet-maestro[bot]","Number":"7463","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:c692823c-b896-437f-4f57-08dc434cc8f6)\n## From https://github.com/dotnet/arcade\n- **Subscription**: [c692823c-b896-437f-4f57-08dc434cc8f6](https://maestro.dot.net/subscriptions?search=c692823c-b896-437f-4f57-08dc434cc8f6)\n- **Build**: [20250518.1](https://dev.azure.com/dnceng/internal/_build/results?buildId=2711910)\n- **Date Produced**: May 18, 2025 8:50:18 AM UTC\n- **Commit**: [35a34fa5ab9b2f97d3f7bdf48a7c2100727308b3](https://github.com/dotnet/arcade/commit/35a34fa5ab9b2f97d3f7bdf48a7c2100727308b3)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25253.1 to 10.0.0-beta.25268.1][2]\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 10.0.0-beta.25253.1 to 10.0.0-beta.25268.1][2]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25253.1 to 10.0.0-beta.25268.1][2]\n  - **Microsoft.DotNet.SignTool**: [from 10.0.0-beta.25253.1 to 10.0.0-beta.25268.1][2]\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 10.0.0-beta.25253.1 to 10.0.0-beta.25268.1][2]\n  - **Microsoft.DotNet.XliffTasks**: [from 10.0.0-beta.25253.1 to 10.0.0-beta.25268.1][2]\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25253.1 to 10.0.0-beta.25268.1][2]\n\n[2]: https://github.com/dotnet/arcade/compare/cdf9c56320...35a34fa5ab\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:c692823c-b896-437f-4f57-08dc434cc8f6)\n\n\n\n\n\n","Url":"https://github.com/dotnet/machinelearning/pull/7463","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#7463)"},{"Id":"3081473543","IsPullRequest":true,"CreatedAt":"2025-05-21T21:40:19","Actor":"dotnet-maestro[bot]","Number":"7470","RawContent":null,"Title":"[release/4.0] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:a547de0d-c7ea-4682-b0d2-c8a549cede14)\n## From https://github.com/dotnet/arcade\n- **Subscription**: [a547de0d-c7ea-4682-b0d2-c8a549cede14](https://maestro.dot.net/subscriptions?search=a547de0d-c7ea-4682-b0d2-c8a549cede14)\n- **Build**: [20250625.4](https://dev.azure.com/dnceng/internal/_build/results?buildId=2737323)\n- **Date Produced**: June 25, 2025 4:32:11 PM UTC\n- **Commit**: [13b20849f8294593bf150a801cab639397e6c29d](https://github.com/dotnet/arcade/commit/13b20849f8294593bf150a801cab639397e6c29d)\n- **Branch**: refs/heads/release/9.0\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - From [9.0.0-beta.25111.5 to 9.0.0-beta.25325.4][4]\n    - Microsoft.DotNet.Arcade.Sdk\n    - Microsoft.DotNet.Build.Tasks.Feed\n    - Microsoft.DotNet.Helix.Sdk\n    - Microsoft.DotNet.SignTool\n    - Microsoft.DotNet.SwaggerGenerator.MSBuild\n    - Microsoft.DotNet.XliffTasks\n    - Microsoft.DotNet.XUnitExtensions\n\n[4]: https://github.com/dotnet/arcade/compare/5da211e1c4...13b20849f8\n\n[DependencyUpdate]: <> (End)\n\n- **Updates to .NET SDKs:**\n  - Updates tools.dotnet to 9.0.107\n\n[marker]: <> (End:a547de0d-c7ea-4682-b0d2-c8a549cede14)\n\n\n\n\n\n\n\n\n\n\n\n\n\n","Url":"https://github.com/dotnet/machinelearning/pull/7470","RelatedDescription":"Open PR \"[release/4.0] Update dependencies from dotnet/arcade\" (#7470)"},{"Id":"3075132241","IsPullRequest":true,"CreatedAt":"2025-05-19T23:20:18","Actor":"ericstj","Number":"7469","RawContent":null,"Title":"Updating OnnxRuntime","State":"closed","Body":"Attempting to update just OnnxRuntime to see if that repros the issue seen in https://github.com/dotnet/machinelearning/pull/7457","Url":"https://github.com/dotnet/machinelearning/pull/7469","RelatedDescription":"Closed or merged PR \"Updating OnnxRuntime\" (#7469)"},{"Id":"3074573265","IsPullRequest":false,"CreatedAt":"2025-05-19T17:36:05","Actor":"ericstj","Number":"7468","RawContent":null,"Title":"AutoML.SourceGenerator needs to convert to incremental source generator","State":"open","Body":"With the latest roslyn implementation of ISourceGenerator results in a RS1042 warning as error.  \n\nThese need to switch to using https://github.com/dotnet/roslyn/blob/main/docs/features/incremental-generators.md","Url":"https://github.com/dotnet/machinelearning/issues/7468","RelatedDescription":"Open issue \"AutoML.SourceGenerator needs to convert to incremental source generator\" (#7468)"},{"Id":"3071014716","IsPullRequest":false,"CreatedAt":"2025-05-17T19:30:00","Actor":"torronen","Number":"7467","RawContent":null,"Title":"Build instructions: CMake < 4.0 and spectre-mitigation","State":"open","Body":"**System Information (please complete the following information):**\n - OS & Version: Windows 11, VS2022\n - ML.NET Version: main from github 17th May 2025\n\n**Describe the bug**\nTo compile the project on Windows:\nCMake 4.0.2 return error \"path not found\" \nSpectre-mitigated libraries are needed in VS2022\n\n**To Reproduce**\nSteps to reproduce the behavior:\n1. Clean machine\n2. Install VS2022 and follow instructions on developer page\n3. Install latest CMake\n4. Observe errors trying to build Native libraries\n\n**Additional context**\nMinor update needed https://github.com/dotnet/machinelearning/blob/main/docs/building/windows-instructions.md on Individual Components needed and probably a notice on using CMake <4.0.0\n","Url":"https://github.com/dotnet/machinelearning/issues/7467","RelatedDescription":"Open issue \"Build instructions: CMake < 4.0 and spectre-mitigation\" (#7467)"},{"Id":"3067870041","IsPullRequest":true,"CreatedAt":"2025-05-17T01:12:04","Actor":"stephentoub","Number":"7466","RawContent":null,"Title":"Update to stable Microsoft.Extensions.AI.Abstractions","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/7466","RelatedDescription":"Closed or merged PR \"Update to stable Microsoft.Extensions.AI.Abstractions\" (#7466)"},{"Id":"3063680748","IsPullRequest":true,"CreatedAt":"2025-05-16T16:21:48","Actor":"jozkee","Number":"7465","RawContent":null,"Title":"Update to M.E.AI 9.5.0-preview","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/7465","RelatedDescription":"Closed or merged PR \"Update to M.E.AI 9.5.0-preview\" (#7465)"},{"Id":"3063331565","IsPullRequest":false,"CreatedAt":"2025-05-14T14:29:55","Actor":"verdie-g","Number":"7464","RawContent":null,"Title":"Async Inference","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\n\nI'd like to use [NVIDIA Triton](https://github.com/triton-inference-server/server) for my inferences. Since it's a remote gRPC server, I would need to use async. I'm not super familiar with ML.NET yet, but it seems like it currently does not support that.\n\n**Describe the solution you'd like**\n\nAsync APIs to do an inference (e.g. PredictionEngine.PredictAsync).\n\nWould that make sense?","Url":"https://github.com/dotnet/machinelearning/issues/7464","RelatedDescription":"Open issue \"Async Inference\" (#7464)"},{"Id":"3052526729","IsPullRequest":false,"CreatedAt":"2025-05-10T09:13:26","Actor":"largeprob","Number":"7461","RawContent":null,"Title":"Yolo11 onnx model prediction error","State":"closed","Body":"![Image](https://github.com/user-attachments/assets/0d636ebc-0cc4-40f2-8dca-16f443b23cce)\n\n![Image](https://github.com/user-attachments/assets/e2a13a54-1714-4be1-8547-8971ebff5007)\n\n![Image](https://github.com/user-attachments/assets/11cac3f2-9032-4155-866d-17b58a7ca292)\n\nMy problem is that when I interpret the array obtained from yoloModelOutput as the confidence level for each category, there seems to be a problem with the confidence level for each category, which is significantly different from the confidence level returned by using yolo's official model prediction interface in Python. Even if the result is incorrect, was it because I analyzed the credibility of this category incorrectly?","Url":"https://github.com/dotnet/machinelearning/issues/7461","RelatedDescription":"Closed issue \"Yolo11 onnx model prediction error\" (#7461)"},{"Id":"3043442925","IsPullRequest":true,"CreatedAt":"2025-05-09T19:24:44","Actor":"jozkee","Number":"7459","RawContent":null,"Title":"Update to M.E.AI 9.4.3-preview.1.25230.7","State":"closed","Body":"@stephentoub @jeffhandley @MackinnonBuck \r\n","Url":"https://github.com/dotnet/machinelearning/pull/7459","RelatedDescription":"Closed or merged PR \"Update to M.E.AI 9.4.3-preview.1.25230.7\" (#7459)"},{"Id":"3044818429","IsPullRequest":false,"CreatedAt":"2025-05-07T06:18:14","Actor":"ysanada12","Number":"7460","RawContent":null,"Title":"When an object detection model created with ML.net Model builder is run on Maui (iOS), the model fails to load.","State":"open","Body":"Description: I have created a machine learning model for object detection using ML.net Model Builder (MLModel1.zip). The model was successfully tested using the automatically generated project by ML.net Model Builder.\n\nI then added the model as an embedded resource in a .NET MAUI project and implemented the model loading. Below is the source code:\n\n```csharp\n        public static readonly Lazy<PredictionEngine<ModelInput, ModelOutput>> PredictEngine = new Lazy<PredictionEngine<ModelInput, ModelOutput>>(() => CreatePredictEngine(), true);\n\n        private static PredictionEngine<ModelInput, ModelOutput>CreatePredictEngine()\n        {\n            var mlContext = new MLContext();\n            ITransformer mlModel = LoadModel();\n            return mlContext.Model.CreatePredictionEngine<ModelInput, ModelOutput>(mlModel);\n        }\n        public static ITransformer LoadModel()\n        {\n            var assembly = typeof(MLModel1).GetTypeInfo().Assembly;\n            System.IO.Stream stream = assembly.GetManifestResourceStream(\"MauiProject.MLModel1.zip\");\n\n            if (stream == null)\n            {\n                throw new FileNotFoundException(\"Resource not found\");\n            }\n\n            using (var fileStream = new MemoryStream())\n            {\n                stream.CopyTo(fileStream);\n                fileStream.Position = 0;\n\n                var mlContext = new MLContext();\n                return mlContext.Model.Load(fileStream, out _);\n            }\n        }\n```\nIf you build this code in the Ios simulator, you will get an error that libtorch-cpu-any does not exist when you reach mlContext.Model.Load.\nlibtorch-cpuのパッケージを確認したところ、この名称のdllが存在しないようです。\nhttps://www.nuget.org/packages?q=libtorch-cpu\n<details><summary>Error Message</summary>\n\n<pre>\nThis application or script uses TorchSharp but doesn't contain a reference to libtorch-cpu-any, Version=2.2.1.1.\n\nConsider referencing one of the combination packages TorchSharp-cpu, TorchSharp-cuda-linux, TorchSharp-cuda-windows or call System.Runtime.InteropServices.NativeLibrary.Load(path-to-libLibTorchSharp.so) explicitly for a Python install of pytorch. See https://github.com/dotnet/TorchSharp/issues/169.\".\n\nFor CUDA, you may need to call 'TorchSharp.torch.InitializeDeviceType(TorchSharp.DeviceType.CUDA)' before any use of TorchSharp CUDA packages from scripts or notebooks.\n\nTrace from LoadNativeBackend:\n\nTorchSharp: LoadNativeBackend: Initialising native backend, useCudaBackend = False\n\nStep 1 - First try regular load of native libtorch binaries.\n\n    Trying to load native component torch_cpu relative to /Users/devadmin/Library/Developer/CoreSimulator/Devices/2027A329-FB06-4053-AB75-3F1DB97EE874/data/Containers/Bundle/Application/74E75385-2642-4E2C-8105-E9C1107CECCF/calouselTest.app/TorchSharp.dll\n    Failed to load native component torch_cpu relative to /Users/devadmin/Library/Developer/CoreSimulator/Devices/2027A329-FB06-4053-AB75-3F1DB97EE874/data/Containers/Bundle/Application/74E75385-2642-4E2C-8105-E9C1107CECCF/calouselTest.app/TorchSharp.dll\n    Trying to load native component LibTorchSharp relative to /Users/devadmin/Library/Developer/CoreSimulator/Devices/2027A329-FB06-4053-AB75-3F1DB97EE874/data/Containers/Bundle/Application/74E75385-2642-4E2C-8105-E9C1107CECCF/calouselTest.app/TorchSharp.dll\n    Failed to load native component LibTorchSharp relative to /Users/devadmin/Library/Developer/CoreSimulator/Devices/2027A329-FB06-4053-AB75-3F1DB97EE874/data/Containers/Bundle/Application/74E75385-2642-4E2C-8105-E9C1107CECCF/calouselTest.app/TorchSharp.dll\n    Result from regular native load of LibTorchSharp is False\n\nStep 3 - Alternative load from consolidated directory of native binaries from nuget packages\n\n    torchsharpLoc = /Users/devadmin/Library/Developer/CoreSimulator/Devices/2027A329-FB06-4053-AB75-3F1DB97EE874/data/Containers/Bundle/Application/74E75385-2642-4E2C-8105-E9C1107CECCF/calouselTest.app\n    packagesDir = /Users/devadmin/Library/Developer/CoreSimulator/Devices/2027A329-FB06-4053-AB75-3F1DB97EE874/data/Containers\n    torchsharpHome = /Users/devadmin/Library/Developer/CoreSimulator/Devices/2027A329-FB06-4053-AB75-3F1DB97EE874/data/Containers/Bundle/Application\n    Giving up, TorchSharp.dll does not appear to have been loaded from package directories\n</pre>\n\n\n\n</details> Could anyone help me resolve this issue?","Url":"https://github.com/dotnet/machinelearning/issues/7460","RelatedDescription":"Open issue \"When an object detection model created with ML.net Model builder is run on Maui (iOS), the model fails to load.\" (#7460)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-07-16T03:30:19.098867Z","RunDurationInMilliseconds":631}