{"Data":{"GitHub":{"Issues":[{"Id":"3403171990","IsPullRequest":true,"CreatedAt":"2025-09-10T16:56:04","Actor":"asp2286","Number":"7501","RawContent":null,"Title":"CI(macOS x64): install libomp from Homebrew Core (drop local libomp.rb)","State":"open","Body":"# Fix macOS x64 CI: install `libomp` via Homebrew tap (no local formula)\r\n\r\n**Branch:** `fix-macos-libomp`  \r\n**Scope:** CI only – changes limited to `build/ci/job-template.yml` (macOS x64 job)\r\n\r\n---\r\n\r\n## What & Why\r\n\r\nOn **macOS x64** jobs, our pipeline tries to install OpenMP via a *local* Homebrew formula:\r\n\r\n```bash\r\nbrew install $(Build.SourcesDirectory)/build/libomp.rb --build-from-source --formula\r\n```\r\n\r\nRecent Homebrew (4.6+) rejects local, untapped formulae and fails with:\r\n\r\n```\r\nHomebrew requires formulae to be in a tap, rejecting:\r\n  /Users/runner/work/1/s/build/libomp.rb\r\nTo create a tap, run e.g. brew tap-new <user|org>/<repository>\r\n```\r\n\r\nThis does **not** affect `macOS_cross_arm64` jobs because they already use the official `homebrew/core` formula (`brew install libomp`).\r\n\r\n### The fix\r\n\r\nFor **macOS x64** only, switch to the official tap-hosted formula and force a link so the headers and libs are discoverable by our native builds:\r\n\r\n```yaml\r\n# Before (failing; local .rb file)\r\nexport HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK=TRUE && brew install $(Build.SourcesDirectory)/build/libomp.rb --build-from-source --formula\r\n\r\n# After (working; official tap)\r\nbrew update && brew install libomp && brew link libomp --force\r\n```\r\n\r\nNo product/code changes; **CI infra-only**.\r\n\r\n---\r\n\r\n## Validation\r\n\r\n- ✅ Verified the failing step is isolated to `macOS_x64` with the error above.\r\n- ✅ `macOS_cross_arm64` continues to use the official tap and succeeds.\r\n- ✅ Local repro on a GitHub-hosted macOS runner using the new commands installs `libomp` and exposes headers (`/usr/local/opt/libomp/include`) and libs (`/usr/local/opt/libomp/lib`).\r\n\r\n> Note: Homebrew marks `libomp` as *keg-only*. The `brew link ... --force` step ensures the toolchain sees it without extra flags. If we ever want to avoid `--force`, we can export:\r\n>\r\n> ```bash\r\n> export CPPFLAGS=\"-I/usr/local/opt/libomp/include\"\r\n> export LDFLAGS=\"-L/usr/local/opt/libomp/lib\"\r\n> ```\r\n\r\n---\r\n\r\n## Risk & Impact\r\n\r\n- **Risk:** Low. The change only affects the CI macOS x64 dependency-install step.\r\n- **Impact:** Unblocks native builds on macOS x64 by ensuring OpenMP is available.\r\n- **No Changes** to shipping packages, versioning, public APIs, or runtime behavior.\r\n\r\n---\r\n\r\n## Alternative considered\r\n\r\n- Creating and maintaining a custom Homebrew tap for `libomp.rb`. Rejected to avoid long‑term maintenance overhead when the official formula suffices.\r\n\r\n---\r\n\r\n## Change summary\r\n\r\n- Update `build/ci/job-template.yml` macOS x64 path:\r\n  - Replace local formula install with `brew update && brew install libomp && brew link libomp --force`.\r\n  - **No changes** to the ARM cross path (already uses official tap).\r\n\r\n---\r\n\r\n## How to verify in CI\r\n\r\n1. Queue the pipeline for `macOS_x64 Debug_Build`.\r\n2. Confirm the step **Install MacOS build dependencies** succeeds, showing:\r\n   - *“Pouring libomp…”, “Linking … 6 symlinks created”*\r\n3. Validate native build succeeds (CpuMathNative, FastTreeNative, etc.).\r\n4. Ensure no downstream targets rely on `OneDalNative` on macOS unless explicitly provided (unrelated to this PR).\r\n\r\n---\r\n\r\n## Notes for maintainers\r\n\r\n- This PR **does not** modify any source under `src/` or packaging. It is safe to service‑merge.\r\n- If future runners transition to Apple Silicon-only, this step remains valid (Homebrew tap still provides `libomp`).\r\n\r\n---\r\n\r\n## Checklist (author)\r\n\r\n- [x] CI-only change; no product code.\r\n- [x] macOS x64 path updated; ARM path unchanged.\r\n- [x] Verified the new commands succeed on a runner.\r\n- [x] Added rationale & reproduction details in this PR description.\r\n\r\n<!--\r\nMaintainer checklist (adapted from Reviewer_Checklist.md). Keep collapsed in the PR body.\r\n\r\n- [ ] CI is green on all required legs.\r\n- [ ] Affected area scoped to CI; no shipping assets changed.\r\n- [ ] No public API changes; no breaking changes.\r\n- [ ] Build/install steps use supported, tap-hosted Homebrew formulae (no local .rb files).\r\n- [ ] Windows/Linux pipelines unaffected.\r\n- [ ] No additional credentials, secrets, or taps required.\r\n- [ ] If later backported, the YAML path exists in the target branch.\r\n- [ ] PR title and labels reflect “infra/CI” nature.\r\n-->\r\n\r\n---\r\n\r\n### Screenshots / logs (for context)\r\n\r\n**Failure (before):**\r\n```\r\nError: Homebrew requires formulae to be in a tap, rejecting:\r\n  /Users/runner/work/1/s/build/libomp.rb\r\n```\r\n\r\n**Success (after):**\r\n```\r\n==> Fetching downloads for: libomp\r\n==> Pouring libomp--<version>.ventura.bottle.tar.gz\r\nLinking /usr/local/Cellar/libomp/<version>... 6 symlinks created.\r\n```\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7501","RelatedDescription":"Open PR \"CI(macOS x64): install libomp from Homebrew Core (drop local libomp.rb)\" (#7501)"},{"Id":"3401672315","IsPullRequest":true,"CreatedAt":"2025-09-10T09:24:14","Actor":"asp2286","Number":"7500","RawContent":null,"Title":"macOS: Only build OneDalNative when oneDAL headers & libs are configured (fixes macOS x64 build)","State":"open","Body":"# macOS: Only build OneDalNative when oneDAL headers & libs are configured (fixes macOS x64 build)\r\n\r\n**Problem**\r\nOn macOS x64, building `src/Native` fails with:\r\n```\r\nfatal error: 'daal.h' file not found\r\n```\r\nThe oneDAL “devel” (headers) package is not available via NuGet for `osx-x64`, so locally `ONEDAL_DEVEL_PATH` is not present and `OneDalNative` cannot compile. Today the native CMake unconditionally includes `OneDalNative` on x64, which makes a default macOS developer build fail.\r\n\r\n**What this PR changes**\r\n- Gate `add_subdirectory(OneDalNative)` behind explicit configuration:\r\n  - Only include `OneDalNative` when both `ONEDAL_DEVEL_PATH` and `ONEDAL_REDIST_PATH` are defined **and** `${ONEDAL_DEVEL_PATH}/include/daal.h` exists.\r\n  - Otherwise, print an informative `message(STATUS ...)` and skip `OneDalNative`.\r\n\r\n**Why this is safe**\r\n- Windows/Linux CI builds that pass `ONEDAL_*` continue to build `OneDalNative` unchanged.\r\n- macOS builds (where oneDAL headers aren’t available via NuGet by default) no longer fail—they build the rest of the native components and skip `OneDalNative`.\r\n- No changes to `build.sh` are required. The script already sets `-DONEDAL_*` only when callers pass the corresponding command-line switches.\r\n\r\n**Repro (before)**\r\n```\r\n# macOS x64 without oneDAL headers\r\ncmake ... && make\r\n# -> OneDalNative/OneDalAlgorithms.cpp: fatal error: 'daal.h' file not found\r\n```\r\n\r\n**Behavior (after)**\r\n- If `ONEDAL_*` not provided: CMake prints `Skipping OneDalNative: ONEDAL_DEVEL_PATH/ONEDAL_REDIST_PATH not set` and the rest builds fine.\r\n- If `ONEDAL_*` provided and `${ONEDAL_DEVEL_PATH}/include/daal.h` exists: `OneDalNative` builds as before.\r\n\r\n**Test matrix**\r\n- ✅ macOS x64 (Intel): builds successfully; `OneDalNative` skipped by default; other native targets build.\r\n- ✅ macOS arm64 (Apple Silicon): previously didn’t include `OneDalNative` (arch guard); behavior unchanged.\r\n- ✅ Linux/Windows (CI): when `ONEDAL_*` are set (as in existing pipelines), behavior unchanged and `OneDalNative` builds.\r\n\r\n**Notes**\r\n- This PR intentionally doesn’t alter OpenMP handling or `SymSgdNative`. On macOS x64, developers who need `SymSgdNative` can use Homebrew LLVM (`brew install llvm libomp`) or provide appropriate OpenMP flags; that is orthogonal to oneDAL headers availability.\r\n- We can later add an explicit `-DMLNET_BUILD_ONEDAL=ON/OFF` flag for stricter control if maintainers prefer.","Url":"https://github.com/dotnet/machinelearning/pull/7500","RelatedDescription":"Open PR \"macOS: Only build OneDalNative when oneDAL headers & libs are configured (fixes macOS x64 build)\" (#7500)"},{"Id":"3396447200","IsPullRequest":true,"CreatedAt":"2025-09-09T03:41:34","Actor":"JoshuaSloan","Number":"7499","RawContent":null,"Title":"Added NumberOfLeaves to FastForestRegression and FastForestOva options","State":"open","Body":"`Fixes #7498`\r\n\r\nThe NumberOfLeaves hyperparameter was not updating in FastForest AutoML experiments for regression and multiclass classification tasks (see regression example in the associated [issue](https://github.com/dotnet/machinelearning/issues/7498), which was trained on the California Housing [dataset](https://www.kaggle.com/datasets/camnugent/california-housing-prices) and optimizing for root mean squared error).\r\n\r\nConsequently, the trial parameters reported via an experiment monitor's final ReportBestTrial() method were not aligning with the actual model produced by the experiment. Additionally, model performance was hurt due to the static hyperparameter constraint.\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7499","RelatedDescription":"Open PR \"Added NumberOfLeaves to FastForestRegression and FastForestOva options\" (#7499)"},{"Id":"3396378196","IsPullRequest":false,"CreatedAt":"2025-09-09T03:07:34","Actor":"JoshuaSloan","Number":"7498","RawContent":null,"Title":"FastForest NumberOfLeaves hyperparameter not updating in Regression/MulticlassClassification SweepablePipeline","State":"open","Body":"**System Information (please complete the following information):**\n - OS & Version: Windows 11\n - ML.NET Version: ML.NET v4.0.2\n - .NET Version: .NET 9.0\n\n**Describe the bug**\nFastForestRegression and FastForestOva (unlike FastForestBinary) do not modify the NumberOfLeaves hyperparameter despite being defined in the associated [search space](https://github.com/dotnet/machinelearning/blob/fb39755f143b1a2969f20b0597e58083dc306e5a/src/Microsoft.ML.AutoML/CodeGen/fast_forest_search_space.json?plain=1#L16). Consequently, while performance for BinaryClassification is on par with comparable AutoML frameworks (e.g. [FLAML](https://github.com/microsoft/FLAML) using exclusively RandomForest), it falls behind for the other task types.\n\n**To Reproduce**\nSteps to reproduce the behavior:\n1. Train an AutoML experiment using a SweepablePipeline for either Regression or MulticlassClassification\n2. Set all non-FastForest trainers to false (such that only FastForest remains)\n3. Append an experiment monitor and log the TrialResult.TrialSettings.Parameters\n4. Compare the best model to the reported parameters\n\n**Expected behavior**\nI would expect the model hyperparameters logged from the experiment monitor's final ReportBestTrial() method to match the best model obtained from the experiment. However, while other model hyperparameters are in alignment, the NumberOfLeaves looks suspiciously like the [default](https://github.com/dotnet/machinelearning/blob/fb39755f143b1a2969f20b0597e58083dc306e5a/src/Microsoft.ML.FastTree/FastTreeArguments.cs?plain=1#L340) FastTree value. \n\n**Screenshots, Code, Sample Projects**\n*Trial 31 obtained new best model with (loss: 63689.36950302901, metric: 63689.36950302901)\n{\"_pipeline_\":{\"_SCHEMA_\":\"e0 * e2 * e3 * e4\",\"e0\":{\"OutputColumnNames\":[\"longitude\",\"latitude\",\"housing_median_age\",\"total_rooms\",\"total_bedrooms\",\"population\",\"households\",\"median_income\"],\"InputColumnNames\":[\"longitude\",\"latitude\",\"housing_median_age\",\"total_rooms\",\"total_bedrooms\",\"population\",\"households\",\"median_income\"]},\"e2\":{\"OutputColumnNames\":[\"ocean_proximity\"],\"InputColumnNames\":[\"ocean_proximity\"]},\"e3\":{\"InputColumnNames\":[\"longitude\",\"latitude\",\"housing_median_age\",\"total_rooms\",\"total_bedrooms\",\"population\",\"households\",\"median_income\",\"ocean_proximity\"],\"OutputColumnName\":\"Features\"},\"e4\":{<mark>\"NumberOfTrees\":15,\"NumberOfLeaves\":81</mark>,\"FeatureFraction\":0.8326445,\"LabelColumnName\":\"median_house_value\",\"FeatureColumnName\":\"Features\"}},\"_SCHEMA_\":\"e0 * e1 * e3 * e4\",\"e0\":{\"OutputColumnNames\":[\"longitude\",\"latitude\",\"housing_median_age\",\"total_rooms\",\"total_bedrooms\",\"population\",\"households\",\"median_income\"],\"InputColumnNames\":[\"longitude\",\"latitude\",\"housing_median_age\",\"total_rooms\",\"total_bedrooms\",\"population\",\"households\",\"median_income\"]},\"e1\":{\"OutputColumnNames\":[\"ocean_proximity\"],\"InputColumnNames\":[\"ocean_proximity\"]},\"e2\":{\"OutputColumnNames\":[\"ocean_proximity\"],\"InputColumnNames\":[\"ocean_proximity\"]},\"e3\":{\"InputColumnNames\":[\"longitude\",\"latitude\",\"housing_median_age\",\"total_rooms\",\"total_bedrooms\",\"population\",\"households\",\"median_income\",\"ocean_proximity\"],\"OutputColumnName\":\"Features\"},\"e4\":{\"NumberOfTrees\":100,\"NumberOfLeaves\":100,\"FeatureFraction\":1,\"LabelColumnName\":\"median_house_value\",\"FeatureColumnName\":\"Features\"}}*\n\n<img width=\"1696\" height=\"894\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/2547b614-ddfd-47af-9481-c2c18fc13e52\" />\n","Url":"https://github.com/dotnet/machinelearning/issues/7498","RelatedDescription":"Open issue \"FastForest NumberOfLeaves hyperparameter not updating in Regression/MulticlassClassification SweepablePipeline\" (#7498)"},{"Id":"3384268007","IsPullRequest":true,"CreatedAt":"2025-09-04T15:28:23","Actor":"asp2286","Number":"7497","RawContent":null,"Title":"Add experimental IsolationForest trainer for ML.NET","State":"open","Body":"## Related issues\r\nFixes #3043\r\n\r\n# Add Isolation Forest Anomaly Detection Trainer (Experimental)\r\n\r\nThis PR adds an **Isolation Forest** anomaly detection trainer for ML.NET.  \r\nIsolation Forest (Liu, Ting, Zhou, 2008) is a tree-ensemble algorithm for unsupervised anomaly detection that isolates outliers via random partitioning. It complements existing ML.NET anomaly detectors (e.g., SR-CNN, IID) with a density-agnostic approach.\r\n\r\n---\r\n\r\n## Motivation\r\n- Provide a widely-used, general-purpose anomaly detection method.  \r\n- Works without strong distribution assumptions.  \r\n- Produces both a continuous anomaly score and a binary label.  \r\n- Achieves parity with popular libraries like scikit-learn.\r\n\r\n---\r\n\r\n## Design (v1, Experimental)\r\n- **Core engine**: `IsolationForestModel` (pure C#) implements random partitioning trees, scoring, and SHAP-like path contributions.  \r\n- **Pipeline integration**: `IsolationForestTrainer : IEstimator<ITransformer>` appends:\r\n  - `Score` (float, scaled 0–100; higher = more anomalous),\r\n  - `PredictedLabel` (bool), thresholded by `Contamination` or explicit override.  \r\n- **Options**:\r\n  - `Trees`\r\n  - `SampleSize (psi)`\r\n  - `Seed`\r\n  - `Contamination`\r\n  - `ParallelBuild`\r\n  - `ThresholdOverride`\r\n\r\n> ⚠️ **Experimental note**: v1 uses `CustomMapping` internally. Models trained with this trainer cannot currently be persisted with `mlContext.Model.Save()`. A follow-up will introduce a proper `IsolationForestTransformer` with save/load and efficient row-mapping.\r\n\r\n---\r\n\r\n## Usage\r\n```csharp\r\nvar pipeline = ml.Transforms.Concatenate(\"Features\", \"X1\", \"X2\")\r\n    .Append(new IsolationForestTrainer(new IsolationForestTrainer.Options\r\n    {\r\n        Trees = 200,\r\n        SampleSize = 256,\r\n        Contamination = 0.02\r\n    }));\r\n\r\nvar model = pipeline.Fit(data);\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7497","RelatedDescription":"Open PR \"Add experimental IsolationForest trainer for ML.NET\" (#7497)"},{"Id":"3328117397","IsPullRequest":true,"CreatedAt":"2025-08-17T08:31:30","Actor":"KM5075","Number":"7496","RawContent":null,"Title":"Fix minor typo in BinFinder.cs","State":"open","Body":"Fix a minor typo in a comment within BinFinder.cs. No functional changes.","Url":"https://github.com/dotnet/machinelearning/pull/7496","RelatedDescription":"Open PR \"Fix minor typo in BinFinder.cs\" (#7496)"},{"Id":"3320905110","IsPullRequest":false,"CreatedAt":"2025-08-14T07:58:05","Actor":"games","Number":"7495","RawContent":null,"Title":"Microsoft.ML.LightGbm not supported on Mac M1 – 'lib_lightgbm' (no such file)","State":"closed","Body":"**System Information (please complete the following information):**\n - OS & Version: macOS 15.6\n - ML.NET Version: ML.NET v4.0.2\n - .NET Version: .NET 9.0\n\n**Describe the bug**\nWhen attempting to use Microsoft.ML.LightGbm on an Apple Silicon Mac (M1), the package fails to load due to a missing native library dependency. The error message is:\n\nUnhandled exception. System.DllNotFoundException: Unable to load shared library 'lib_lightgbm' or one of its dependencies. In order to help diagnose loading problems, consider setting the DYLD_PRINT_LIBRARIES environment variable\n\n**To Reproduce**\nSteps to reproduce the behavior:\n1. dotnet new console\n2. add packages \n4. copy the sample code from here (https://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.lightgbmextensions.lightgbm?view=ml-dotnet-preview)\n5. dotnet run\n6. see error: unhandled exception. System.DllNotFoundException: Unable to load shared library 'lib_lightgbm' or one of its dependencies. In order to help diagnose loading problems, consider setting the DYLD_PRINT_LIBRARIES environment variable:\n\n**Expected behavior**\nLightGBM should run on Mac M1\n\n**Screenshots, Code, Sample Projects**\npackages version\n```xml\n    <PackageReference Include=\"Microsoft.ML\" Version=\"4.0.2\" />\n    <PackageReference Include=\"Microsoft.ML.LightGbm\" Version=\"4.0.2\" />\n```\n\n**Additional context**\n\nlib_lightgbm.dylib is missing in `osx-arm64`\n\n<img width=\"736\" height=\"742\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0c890d9d-256c-4b66-8451-25558d01e35e\" />\n","Url":"https://github.com/dotnet/machinelearning/issues/7495","RelatedDescription":"Closed issue \"Microsoft.ML.LightGbm not supported on Mac M1 – 'lib_lightgbm' (no such file)\" (#7495)"},{"Id":"3298376543","IsPullRequest":false,"CreatedAt":"2025-08-11T15:17:21","Actor":"stephentoub","Number":"7491","RawContent":null,"Title":"Incorporate new harmony tiktoken vocabulary","State":"closed","Body":"The recently released OSS openai models come with a new vocabulary. The TiktokenTokenizer should be updated accordingly.\n\nhttps://github.com/openai/tiktoken/commit/3591ff175d6a80efbe4fcc7f0e219ddd4b8c52f1\n\ncc: @tarekgh","Url":"https://github.com/dotnet/machinelearning/issues/7491","RelatedDescription":"Closed issue \"Incorporate new harmony tiktoken vocabulary\" (#7491)"},{"Id":"3307004234","IsPullRequest":true,"CreatedAt":"2025-08-11T15:17:20","Actor":"tarekgh","Number":"7494","RawContent":null,"Title":"Support OpenAI OSS Models with Tiktoken tokenizer","State":"closed","Body":"Fixes https://github.com/dotnet/machinelearning/issues/7491","Url":"https://github.com/dotnet/machinelearning/pull/7494","RelatedDescription":"Closed or merged PR \"Support OpenAI OSS Models with Tiktoken tokenizer\" (#7494)"},{"Id":"3301258241","IsPullRequest":true,"CreatedAt":"2025-08-07T17:02:50","Actor":"JoshuaSloan","Number":"7493","RawContent":null,"Title":"Fix PositiveRecall optimization in AutoMLExperiment","State":"open","Body":"BinaryClassificationMetric.PositiveRecall incorrectly returns PositivePrecision.\r\n\r\nI noticed this when testing an early stopping pipeline and found that the logged best trial metric did not align with the final model results. This is a self-evident fix (akin to a small typo), so I did not open a new issue for it.\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.","Url":"https://github.com/dotnet/machinelearning/pull/7493","RelatedDescription":"Open PR \"Fix PositiveRecall optimization in AutoMLExperiment\" (#7493)"},{"Id":"3299593152","IsPullRequest":false,"CreatedAt":"2025-08-07T08:45:15","Actor":"williamlzw","Number":"7492","RawContent":null,"Title":".NET BUG: Ġ' was wrongly split","State":"open","Body":"C# is incorrectly split, while python does not.\n```\nfrom transformers import AutoTokenizer\n\n#tokenizer_dir = 'D:\\\\model\\\\Qwen3-Reranker-0.6B-ONNX'\ntokenizer_dir = 'Qwen/Qwen3-Reranker-0.6B'\ntokenizer = AutoTokenizer.from_pretrained(tokenizer_dir, padding_side=\"left\")\nprefix = \"<|im_start|>system\\nJudge whether the Document meets the requirements based on the Query and the Instruct provided. Note that the answer can only be '<|im_end|>\\n<|im_start|>user\\n\"\nsuffix = \"<|im_end|>\\n<|im_start|>assistant\\n<think>\\n\\n</think>\\n\\n\"\nprefix_tokens = tokenizer.encode(prefix, add_special_tokens=False)\nfor token in prefix_tokens:\n    print(token, tokenizer.decode(token))\n```\n\noutput:\n151644 <|im_start|>\n8948 system\n198\n\n60256 Judge\n3425  whether\n279  the\n11789  Document\n20027  meets\n279  the\n8502  requirements\n3118  based\n389  on\n279  the\n11361  Query\n323  and\n279  the\n758  In\n1235 struct\n3897  provided\n13 .\n7036  Note\n429  that\n279  the\n4226  answer\n646  can\n1172  only\n387  be\n364  '\n151645 <|im_end|>\n198\n\n151644 <|im_start|>\n872 user\n198\n\n=========================\n```\nusing Microsoft.ML.Tokenizers;\nusing System.Text.Json;\n\nclass program\n{\n    const string IMStart = \"<|im_start|>\";\n    const string IMEnd = \"<|im_end|>\";\n\n    public static void Main()\n    {\n        string text = $\"{IMEnd}\\n{IMStart}assistant\\n<think>\\n\\n</think>\\n\\n\";\n        string text1 = \"<|im_start|>system\\nJudge whether the Document meets the requirements based on the Query and the Instruct provided. Note that the answer can only be '<|im_end|>\\n<|im_start|>user\\n\";\n        text1 = text1.Replace(\" \", \"\\u0120\").Replace(\"\\n\", \"\\u010A\");\n        using Stream vocabStream = File.OpenRead(\"D:\\\\model\\\\Qwen3-Reranker-0.6B-ONNX\\\\vocab.json\");\n        using Stream mergesStream = File.OpenRead(\"D:\\\\model\\\\Qwen3-Reranker-0.6B-ONNX\\\\merges.txt\");\n        string configPath = \"D:\\\\model\\\\Qwen3-Reranker-0.6B-ONNX\\\\tokenizer_config.json\";\n        var specialTokens = LoadSpecialTokens(configPath);\n\n        var bpe = BpeTokenizer.Create(vocabStream, mergesStream, PreTokenizer.CreateWordOrNonWord(specialTokens), specialTokens:specialTokens);\n        var encoding = bpe.EncodeToTokens(text1, out _);\n        Console.WriteLine(\"\\nEncoded IDs:\");\n        foreach (var id in encoding)\n        {\n            Console.WriteLine($\"{id.Id} -> {id.Value.Replace(\"\\u010A\", \"\\n\").Replace(\"\\u0120\", \" \")}\");\n        }\n    }\n\n    private static Dictionary<string, int> LoadSpecialTokens(string configPath)\n    {\n        if (!File.Exists(configPath))\n        {\n            throw new FileNotFoundException($\"Config file not found: {configPath}\");\n        }\n\n        var json = File.ReadAllText(configPath);\n        using JsonDocument doc = JsonDocument.Parse(json);\n        JsonElement root = doc.RootElement;\n\n        // 创建特殊标记字典\n        var specialTokens = new Dictionary<string, int>();\n\n        // 1. 首先添加 additional_special_tokens\n        if (root.TryGetProperty(\"additional_special_tokens\", out JsonElement additionalTokens))\n        {\n            foreach (JsonElement token in additionalTokens.EnumerateArray())\n            {\n                string content = token.GetString();\n                if (!string.IsNullOrEmpty(content))\n                {\n                    // 查找在 added_tokens_decoder 中对应的 ID\n                    int? tokenId = FindTokenIdInDecoder(root, content);\n\n                    if (tokenId.HasValue)\n                    {\n                        // 使用 added_tokens_decoder 中的 ID\n                        specialTokens[content] = tokenId.Value;\n                    }\n                    else\n                    {\n                        // 分配新 ID（在原有最大ID基础上增加）\n                        int newId = specialTokens.Count > 0\n                            ? specialTokens.Values.Max() + 1\n                            : 1000000;\n                        specialTokens[content] = newId;\n                    }\n                }\n            }\n        }\n\n        // 2. 添加 added_tokens_decoder 中的其他标记（不在 additional_special_tokens 中的）\n        if (root.TryGetProperty(\"added_tokens_decoder\", out JsonElement addedTokens))\n        {\n            foreach (JsonProperty prop in addedTokens.EnumerateObject())\n            {\n                if (int.TryParse(prop.Name, out int tokenId))\n                {\n                    string content = prop.Value.GetProperty(\"content\").GetString();\n                    if (!string.IsNullOrEmpty(content)\n                        && !specialTokens.ContainsKey(content))\n                    {\n                        specialTokens[content] = tokenId;\n                    }\n                }\n            }\n        }\n\n        // 3. 确保关键标记存在\n        EnsureSpecialToken(specialTokens, \"<|endoftext|>\", 151643);\n        EnsureSpecialToken(specialTokens, \"<|im_start|>\", 151644);\n        EnsureSpecialToken(specialTokens, \"<|im_end|>\", 151645);\n\n        //Console.WriteLine(\"Loaded special tokens:\");\n        //foreach (var kvp in specialTokens)\n        //{\n        //    Console.WriteLine($\"{kvp.Value}: {kvp.Key}\");\n        //}\n\n        return specialTokens;\n    }\n\n    private static int? FindTokenIdInDecoder(JsonElement root, string tokenContent)\n    {\n        if (root.TryGetProperty(\"added_tokens_decoder\", out JsonElement addedTokens))\n        {\n            foreach (JsonProperty prop in addedTokens.EnumerateObject())\n            {\n                if (int.TryParse(prop.Name, out int tokenId))\n                {\n                    string content = prop.Value.GetProperty(\"content\").GetString();\n                    if (content == tokenContent)\n                    {\n                        return tokenId;\n                    }\n                }\n            }\n        }\n        return null;\n    }\n\n    private static void EnsureSpecialToken(Dictionary<string, int> specialTokens, string token, int defaultId)\n    {\n        if (!specialTokens.ContainsKey(token))\n        {\n            specialTokens[token] = defaultId;\n        }\n    }\n}\n```\noutput:\n151644 -> <|im_start|>\n8948 -> system\n198 ->\n\n60256 -> Judge\n3425 ->  whether\n279 ->  the\n11789 ->  Document\n20027 ->  meets\n279 ->  the\n8502 ->  requirements\n3118 ->  based\n389 ->  on\n279 ->  the\n11361 ->  Query\n323 ->  and\n279 ->  the\n758 ->  In\n1235 -> struct\n3897 ->  provided\n13 -> .\n7036 ->  Note\n429 ->  that\n279 ->  the\n4226 ->  answer\n646 ->  can\n1172 ->  only\n387 ->  be\n220 ->\n6 -> '\n151645 -> <|im_end|>\n198 ->\n\n151644 -> <|im_start|>\n872 -> user\n198 ->\n","Url":"https://github.com/dotnet/machinelearning/issues/7492","RelatedDescription":"Open issue \".NET BUG: Ġ' was wrongly split\" (#7492)"},{"Id":"3289292470","IsPullRequest":false,"CreatedAt":"2025-08-04T12:43:00","Actor":"krwq","Number":"7490","RawContent":null,"Title":"dotnet/machine learning should allow localizing exception messages","State":"open","Body":"Currently `dotnet/machine-learning` is using hard-coded exception messages. It should adopt resx files used in other `dotnet/*` repos and allow for their localization","Url":"https://github.com/dotnet/machinelearning/issues/7490","RelatedDescription":"Open issue \"dotnet/machine learning should allow localizing exception messages\" (#7490)"},{"Id":"3268488733","IsPullRequest":false,"CreatedAt":"2025-07-28T07:20:10","Actor":"SingleKey","Number":"7489","RawContent":null,"Title":"How to export ML.NET models for use in other programming languages?","State":"open","Body":"Description\nI'm looking for guidance on how to export ML.NET models for use in other programming languages. While I understand that ONNX format is one option, I've encountered some ML.NET models that don't support ONNX export.\n\nQuestion\nBesides ONNX export, what are the alternative approaches to make ML.NET models available for use in other programming languages? Are there any other standardized formats or methods that ML.NET supports for cross-language model deployment?\n\nAdditional Context\nI'm particularly interested in solutions that would work for models that currently don't have ONNX export capability, and I'd appreciate any documentation or examples that demonstrate these alternative approaches.\n\nThank you for your time and assistance!","Url":"https://github.com/dotnet/machinelearning/issues/7489","RelatedDescription":"Open issue \"How to export ML.NET models for use in other programming languages?\" (#7489)"},{"Id":"3085963107","IsPullRequest":true,"CreatedAt":"2025-07-23T16:46:12","Actor":"Crichen","Number":"7472","RawContent":null,"Title":"Updated Tensorflow.Net to 0.70.2 with Tensorflow 2.7.0.","State":"closed","Body":"Fixes #7471 \r\n\r\nNumSharp replaced with Tensorflow.NumPy.\r\nTensorShape replaced with Shape, Shape object has dimensions as 64 bit long, check added for casting to 32 bit int alsoTensor constructor using SafeTensorHandle/DangerousGetHandle and TF_DataType not required when casting.\r\n\r\nAdded StringTensorFactory to wrap addition tensorflow.dll methods required to create Tensors from string based input.\r\n\r\nWe are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7472","RelatedDescription":"Closed or merged PR \"Updated Tensorflow.Net to 0.70.2 with Tensorflow 2.7.0.\" (#7472)"},{"Id":"3226465258","IsPullRequest":false,"CreatedAt":"2025-07-13T12:24:59","Actor":"RehanSaeed","Number":"7488","RawContent":null,"Title":"New Text Classification Model on ARM Fails to Train","State":"open","Body":"**System Information (please complete the following information):**\n - OS & Version: Windows 11 for ARM on a Surface Laptop 7 \n - ML.NET Version: ML.NET Model Builder 2022 v17.19.2.2511501\n - .NET Version: v9\n\n**Describe the bug**\nWhen creating a new ML.NET Text Classification Model in Visual Studio. The wizard errors when trying to train the model.\n\n**To Reproduce**\nSteps to reproduce the behavior:\n1. File -> New Model on a blank .NET 9 project.\n2. Select Text Classification\n3. Enter a CSV file.\n4. Click on train\n\n**Expected behavior**\nI should be able to train the model. ARM is supposed to work.\n\n**Screenshots, Code, Sample Projects**\n\n<img width=\"2493\" height=\"1592\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/455235d7-10f8-42f0-9cff-739ca9ff9926\" />\n\n**Additional context**\n\nFull logs below:\n[MLModel1-67B6PD.txt](https://github.com/user-attachments/files/21204354/MLModel1-67B6PD.txt)","Url":"https://github.com/dotnet/machinelearning/issues/7488","RelatedDescription":"Open issue \"New Text Classification Model on ARM Fails to Train\" (#7488)"},{"Id":"3224085207","IsPullRequest":false,"CreatedAt":"2025-07-11T20:06:26","Actor":"fritzjoostenz","Number":"7487","RawContent":null,"Title":"Quo vadis for ml.net?","State":"open","Body":"My apologies in advance for logging my message here as an issue but I know of no other way to get in touch with the  Microsoft team dealing with ML.NET. I have picked ML.NET as a machine learning technology in my application but given that the last new releases and updates on important features and issues (such as #5895) seems to have stalled around two years ago (last blog post was in Nov 2023), I am wondering if this initiative has stalled and may be abandoned down the line? \nWould you please consider posting an update on the blog with an honest appraisal of the situation and whether new features will be forthcoming or not? There are many ML techniques such as KNN that can still be added. For me, the fact that you have to use predefined classes to make predictions is almost a show stopper.\nLooking forward to seeing an update on this excellent framework.","Url":"https://github.com/dotnet/machinelearning/issues/7487","RelatedDescription":"Open issue \"Quo vadis for ml.net?\" (#7487)"},{"Id":"3155822626","IsPullRequest":false,"CreatedAt":"2025-07-09T20:36:44","Actor":"williamlzw","Number":"7483","RawContent":null,"Title":"Naming error: c# Phi3ForCasualLM  ,   python Phi3ForCausalLM","State":"closed","Body":"Naming error: c# Phi3ForCasualLM  ,   python Phi3ForCausalLM\n\n`from transformers import  Phi3ForCausalLM`","Url":"https://github.com/dotnet/machinelearning/issues/7483","RelatedDescription":"Closed issue \"Naming error: c# Phi3ForCasualLM  ,   python Phi3ForCausalLM\" (#7483)"},{"Id":"3166845805","IsPullRequest":true,"CreatedAt":"2025-07-09T20:36:43","Actor":"feiyun0112","Number":"7484","RawContent":null,"Title":"Rename Casual to Causal","State":"closed","Body":"fix #7483 \r\n","Url":"https://github.com/dotnet/machinelearning/pull/7484","RelatedDescription":"Closed or merged PR \"Rename Casual to Causal\" (#7484)"},{"Id":"3209863641","IsPullRequest":true,"CreatedAt":"2025-07-09T19:14:48","Actor":"ericstj","Number":"7486","RawContent":null,"Title":"Enable dependabot.","State":"closed","Body":"Configure dependabot for public dependency updates.  This will help this repo stay up to date with public dependencies.\r\n\r\nWe'll still need to review dependency PRs, and mirror packages to our feeds, but this will help ensure we stay up to date.","Url":"https://github.com/dotnet/machinelearning/pull/7486","RelatedDescription":"Closed or merged PR \"Enable dependabot.\" (#7486)"},{"Id":"3138102792","IsPullRequest":true,"CreatedAt":"2025-07-07T18:04:07","Actor":"Copilot","Number":"7482","RawContent":null,"Title":"Convert repository to NuGet Central Package Management","State":"closed","Body":"This PR converts the entire repository to use NuGet Central Package Management as requested in issue #7479. This centralizes all package version management in a single `Directory.Packages.props` file while ensuring the same packages and versions are restored.\n\n## Changes Made\n\n### Core Implementation\n- **Created `Directory.Packages.props`** with 89 PackageVersion items organized by category:\n  - Product dependencies (Apache.Arrow, Newtonsoft.Json, System.* packages, etc.)\n  - Test-only dependencies (MSTest, XUnit, coverlet, etc.) \n  - Build/infrastructure dependencies (MicroBuild, Arcade tools, etc.)\n- **Enabled `ManagePackageVersionsCentrally=true`** property to activate central package management\n- **Removed Version attributes** from all PackageReference items across:\n  - 64 .csproj files\n  - 4 .props/.targets files (test/Directory.Build.props, Directory.Build.targets, etc.)\n\n### Version Management\n- All package versions use existing properties from `eng/Versions.props` (e.g., `$(NewtonsoftJsonVersion)`, `$(SystemCollectionsImmutableVersion)`)\n- Maintains consistency with current version management approach\n- No changes to actual package versions - only centralized the management\n\n### Package Resolution Validation\n- ✅ Core projects restore successfully (Microsoft.ML.Core, Microsoft.ML.Data, Microsoft.ML.DataView)\n- ✅ Test projects restore successfully (Microsoft.ML.Tests, Microsoft.ML.Core.Tests)  \n- ✅ Sample projects restore successfully (Microsoft.ML.Samples, Microsoft.ML.Samples.OneDal)\n- ✅ Production projects restore successfully (Microsoft.ML.AutoML, Microsoft.ML.ImageAnalytics)\n- ✅ Package versions resolve correctly (verified via project.assets.json files)\n\n## Benefits\n\n1. **Centralized Management**: All package versions now managed in single location\n2. **Consistency**: Eliminates version conflicts across projects\n3. **Maintainability**: Easier to update package versions repository-wide\n4. **Transitive Pinning**: Enables better control over transitive dependencies\n\n## Validation\n\nThe conversion was validated by:\n- Individual project restore testing across core, test, and sample projects\n- Verification that resolved package versions match expected versions from Versions.props\n- Confirmation that no PackageReference Version attributes remain in project files\n\n**Note**: Some GenAI projects have temporary restore failures due to network issues with `JsonSchema.Net.Generation` package from Azure DevOps feeds, but this is unrelated to the central package management conversion and will resolve when the feed is accessible.\n\nFixes #7479.\n\n> [!WARNING]\n>\n> <details>\n> <summary>Firewall rules blocked me from connecting to one or more addresses</summary>\n>\n> #### I tried to connect to the following addresses, but was blocked by firewall rules:\n>\n> - `dnceng.pkgs.visualstudio.com`\n>   - Triggering command: `dotnet restore Microsoft.ML.sln ` (dns block)\n>   - Triggering command: `dotnet restore src/Microsoft.ML.GenAI.LLaMA/Microsoft.ML.GenAI.LLaMA.csproj ` (dns block)\n>\n> If you need me to access, download, or install something from one of these locations, you can either:\n>\n> - Configure [Actions setup steps](https://gh.io/copilot/actions-setup-steps) to set up my environment, which run before the firewall is enabled\n> - Add the appropriate URLs or hosts to my [firewall allow list](https://gh.io/copilot/firewall-config)\n>\n> </details>\n\n\n<!-- START COPILOT CODING AGENT TIPS -->\n---\n\n💬 Share your feedback on Copilot coding agent for the chance to win a $200 gift card! Click [here](https://survey.alchemer.com/s3/8343779/Copilot-Coding-agent) to start the survey.","Url":"https://github.com/dotnet/machinelearning/pull/7482","RelatedDescription":"Closed or merged PR \"Convert repository to NuGet Central Package Management\" (#7482)"},{"Id":"3137999567","IsPullRequest":false,"CreatedAt":"2025-07-07T18:04:07","Actor":"ericstj","Number":"7479","RawContent":null,"Title":"Convert this repository to central package management","State":"closed","Body":"Convert this repository to use NuGet CentralPackageManagement with transitive pinning enabled.\nhttps://learn.microsoft.com/en-us/nuget/consume-packages/Central-Package-Management\n\nCreate a root Directory.Packages.props with PackageVersion items for all packages used by this repository.  Those should use the properties defined in Versions.props if present.\n\nRemove the Version attribute from all PackageReference items.  If any projects have a different version used than then centrally specified version, then preserve that version by using a VersionOverride attribute.\n\nIf possible, remove extraneous PackageReferences if those are already referenced by the package indirectly.  Indirect package references can be seen by examining the `project.assets.json` after restoring the project.  If a package is listed as a `dependency` of another package in this file, then the direct reference may be removed.  The project.assets.json for a project is located under `./artifacts/obj` followed by the project name without extension.  For example, the `project.assets.json` for `Microsoft.ML.csproj` is in `./artfiacts/obj/Microsoft.ML/project.assets.json`.\n\nProjects can be restored by running `dotnet restore` directly on the project, or using `./eng/common/build.sh -restore` to restore all projects at once.\n\nOnce done with this work, compare the libraries resolved before and after for every `project.assets.json`.  The same libraries and versions should be restored after the change as were restored before the change. ","Url":"https://github.com/dotnet/machinelearning/issues/7479","RelatedDescription":"Closed issue \"Convert this repository to central package management\" (#7479)"},{"Id":"3196495034","IsPullRequest":false,"CreatedAt":"2025-07-02T16:32:28","Actor":"ogo-adp","Number":"7485","RawContent":null,"Title":"Slow model loading performance after version 3.0.1","State":"open","Body":"**System Information**\n - OS & Version: Windows 10, Windows 2016\n - ML.NET Version: ML.NET > 3.01 (including 5.0 preview)\n - .NET Version: .NET 8.0\n\n**Describe the bug**\nWe use ML.NET on a large application with approx 20 models using only ML.NET FastTree regression.\nFor all ML.NET versions after 3.0.1 the time to load a model from a MLContext has increased dramatically\n\n**To Reproduce**\nCreate a regression model using FastTree\nLoad the model from a MLContext with version 3.0.1. Note the loading time\nLoad the same model with version 4.0.2. The loading time should be much higher\nWe observed between 7 and 50 times increased in loading times\n\n**Expected behavior**\nThe loading time should not be different\n\n**Screenshots, Code, Sample Projects**\nvar mlContext = new MLContext(seed: 0);\nvar loadedModel = mlContext.Model.Load(\"path_of_model.zip\", out _); \n-> loading time 111ms with 3.0.1, 1100ms with 4.0.2\n\n**Additional context**A\nLoading a model produced with version 4.0.2 using ML.NET 3.0.1 is fast\nLoading a model produced with version 4.0.2 using ML.NET 4.0.2 is slow\nOur model zip file range from 1000ko to 3000ko\n\n","Url":"https://github.com/dotnet/machinelearning/issues/7485","RelatedDescription":"Open issue \"Slow model loading performance after version 3.0.1\" (#7485)"},{"Id":"3122814975","IsPullRequest":true,"CreatedAt":"2025-06-16T18:59:09","Actor":"gewarren","Number":"7476","RawContent":null,"Title":"Random doc updates","State":"closed","Body":"Follow up to https://github.com/dotnet/ml-api-docs/pull/175 and other grammar improvements.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7476","RelatedDescription":"Closed or merged PR \"Random doc updates\" (#7476)"},{"Id":"3122318356","IsPullRequest":false,"CreatedAt":"2025-06-12T20:11:05","Actor":"vsarakhan","Number":"7474","RawContent":null,"Title":"Incorrect behavior of ElementwiseGreaterThanOrEqual with DateTime – acts as equality check","State":"closed","Body":"**System Information (please complete the following information):**\n - OS & Version: MacOs 15.3.2\n - Microsoft.Data.Analysis Version: 0.22.2\n - .NET Version: 9.0\n\n**Describe the bug**\nI’ve found a bug in the ElementwiseGreaterThanOrEqual implementation for DateTimeDataFrameColumn. It performs an equality check instead of checking for “greater than or equal”.\n\n\n**To Reproduce**\nSteps to reproduce the behavior:\n1. Create a DateTimeDataFrameColumn with some sample DateTime values\n2. Call the ElementwiseGreaterThanOrEqual method using a value that is less than some of the values in the column\n3. Observe that only values equal to the given value are marked as true\n\n**Expected behavior**\n`ElementwiseGreaterThanOrEqual` should return `true` for values that are either equal to or greater than the comparison value.\n\nFor example:\n- Input: [2020-01-01, 2021-01-01, 2022-01-01]\n- Comparison value: 2021-01-01\n- Expected result: [false, true, true]\n\n**Screenshots, Code, Sample Projects**\n```csharp\nusing Microsoft.Data.Analysis;\nusing System;\n\nvar dates = new DateTimeDataFrameColumn(\"Dates\", new[]\n{\n    new DateTime(2020, 1, 1),\n    new DateTime(2021, 1, 1),\n    new DateTime(2022, 1, 1),\n});\nvar result = dates.ElementwiseGreaterThanOrEqual(new DateTime(2021, 1, 1));\nConsole.WriteLine(result); // Expected: [false, true, true], Actual: [false, true, false]\n\n**Additional context**\n-\n","Url":"https://github.com/dotnet/machinelearning/issues/7474","RelatedDescription":"Closed issue \"Incorrect behavior of ElementwiseGreaterThanOrEqual with DateTime – acts as equality check\" (#7474)"},{"Id":"3122342504","IsPullRequest":true,"CreatedAt":"2025-06-12T20:11:04","Actor":"vsarakhan","Number":"7475","RawContent":null,"Title":"Fix ElementwiseGreaterThanOrEqual to use >= instead of ==","State":"closed","Body":"Fixes [#7474](https://github.com/dotnet/machinelearning/issues/7474)\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7475","RelatedDescription":"Closed or merged PR \"Fix ElementwiseGreaterThanOrEqual to use >= instead of ==\" (#7475)"},{"Id":"3138005873","IsPullRequest":true,"CreatedAt":"2025-06-11T20:52:48","Actor":"ericstj","Number":"7481","RawContent":null,"Title":"Add copilot-setup-steps.yml","State":"closed","Body":"This will enable us to use Copilot agent in this repo.\r\n\r\nTest results -- https://github.com/dotnet/machinelearning/actions/runs/15594105366\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7481","RelatedDescription":"Closed or merged PR \"Add copilot-setup-steps.yml\" (#7481)"},{"Id":"3138000227","IsPullRequest":true,"CreatedAt":"2025-06-11T20:21:42","Actor":"Copilot","Number":"7480","RawContent":null,"Title":"[WIP] Convert this repository to central package management","State":"closed","Body":"Thanks for assigning this issue to me. I'm starting to work on it and will keep this PR's description up to date as I form a plan and make progress.\n\nOriginal issue description:\n\n> Convert this repository to use NuGet CentralPackageManagement with transitive pinning enabled.\n> https://learn.microsoft.com/en-us/nuget/consume-packages/Central-Package-Management\n> \n> Create a root Directory.Packages.props with PackageVersion items for all packages used by this repository.  Those should use the properties defined in Versions.props if present.\n> \n> Remove the Version attribute from all PackageReference items.  If any projects have a different version used than then centrally specified version, then preserve that version by using a VersionOverride attribute.\n> \n> If possible, remove extraneous PackageReferences if those are already referenced by the package indirectly.  Indirect package references can be seen by examining the `project.assets.json` after restoring the project.  If a package is listed as a `dependency` of another package in this file, then the direct reference may be removed.  The project.assets.json for a project is located under `./artifacts/obj` followed by the project name without extension.  For example, the `project.assets.json` for `Microsoft.ML.csproj` is in `./artfiacts/obj/Microsoft.ML/project.assets.json`.\n> \n> Once done with this work, compare the libraries resolved before and after for every `project.assets.json`.  The same libraries and versions should be restored after the change as were restored before the change. \n\n\nFixes #7479.\n\n<!-- START COPILOT CODING AGENT TIPS -->\n---\n\n💬 Share your feedback on Copilot coding agent for the chance to win a $200 gift card! Click [here](https://survey.alchemer.com/s3/8343779/Copilot-Coding-agent) to start the survey.","Url":"https://github.com/dotnet/machinelearning/pull/7480","RelatedDescription":"Closed or merged PR \"[WIP] Convert this repository to central package management\" (#7480)"},{"Id":"3137763511","IsPullRequest":true,"CreatedAt":"2025-06-11T19:02:21","Actor":"ericstj","Number":"7478","RawContent":null,"Title":"Create copilot-setup-steps.yml","State":"closed","Body":"Create a workflow for copilot agent to build the repo.","Url":"https://github.com/dotnet/machinelearning/pull/7478","RelatedDescription":"Closed or merged PR \"Create copilot-setup-steps.yml\" (#7478)"},{"Id":"3137422984","IsPullRequest":false,"CreatedAt":"2025-06-11T16:17:52","Actor":"mikeKuester","Number":"7477","RawContent":null,"Title":"KMeansTrainer.Options NumberOfThreads has no effect? Low CPU load during .Fit()","State":"open","Body":"**System Information:**\n - Windows 11 22H2\n - ML.NET Version: Microsoft.ML 4.0.2\n - .NET Version: .NET 9.0\n\n**Describe the bug**\nI have a large dataset with approx. 500,000 spectras with 200 data points each. I use the kMeansTrainer for the clustering. It works - but during the \"training\" (which takes ~75 s) ...\n\n```csharp\nvar model = pipeline.Fit(trainingData);\n```\n... the CPU load is less than 20% on a i7-11850H @ 2.5 GHz CPU with 16 threads. If I got the ML.Net code right, it allows max. 16 / 2 = 8 threads. But I can set the `NumberOfThreads` in the trainer options from 1 to 8 - it doesn't change anything.\n\n```csharp\n            var options = new KMeansTrainer.Options\n            {\n                NumberOfClusters = numberOfClusters,\n                // InitializationAlgorithm = KMeansTrainer.InitializationAlgorithm.KMeansYinyang,\n                // OptimizationTolerance = 1e-7f, // default 1e-7f\n                NumberOfThreads = 8,  // default 8                \n                // MaximumNumberOfIterations = 1000\n            };\n            var pipeline = mlContext.Clustering.Trainers.KMeans(options);\n```\nThe consumed time doesn't change and the CPU load is also low.\n\nIf I reduce e.g. the `MaximumNumberOfIterations` or the `OptimizationTolerance`  I can see an effect on the training time (and on the results).\n\nFor the normalization of the data I use Parallel.For loops and during this loops, I can clearly see that all thread ramp up to ~80% load for a short time. \n\nIf I dig into the code: [KMeansLloydsYinYangTrain.Train](https://github.com/dotnet/machinelearning/blob/aea5651f13e18c4387266e830224abe25f7e9bf1/src/Microsoft.ML.KMeansClustering/KMeansPlusPlusTrainer.cs#L1351)  in every iteration the [chunks should be processes in parallel](https://github.com/dotnet/machinelearning/blob/aea5651f13e18c4387266e830224abe25f7e9bf1/src/Microsoft.ML.KMeansClustering/KMeansPlusPlusTrainer.cs#L1394), right? If I select the maximum of the 8 threads, I would expect that 8 threads should run at max. load.\n\n**Expected behavior**\nI expect that the KMeans training should use the maximum allowed CPU power in order to reduce time.\n\n**Additional context**\nWe compared our C# app with MatLab kMeans with the same data: ML.Net is faster than the MatLab implementation, but if I see that the cpu has 80 % idle time during the training, it could be even faster. ;)\n\n\nThanks,\nMike","Url":"https://github.com/dotnet/machinelearning/issues/7477","RelatedDescription":"Open issue \"KMeansTrainer.Options NumberOfThreads has no effect? Low CPU load during .Fit()\" (#7477)"},{"Id":"3090010205","IsPullRequest":true,"CreatedAt":"2025-05-26T05:02:20","Actor":"dotnet-maestro[bot]","Number":"7473","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:c692823c-b896-437f-4f57-08dc434cc8f6)\n## From https://github.com/dotnet/arcade\n- **Subscription**: [c692823c-b896-437f-4f57-08dc434cc8f6](https://maestro.dot.net/subscriptions?search=c692823c-b896-437f-4f57-08dc434cc8f6)\n- **Build**: [20250907.1](https://dev.azure.com/dnceng/internal/_build/results?buildId=2787964) ([282232](https://maestro.dot.net/channel/2/github:dotnet:arcade/build/282232))\n- **Date Produced**: September 7, 2025 9:44:49 AM UTC\n- **Commit**: [d7585e79b1397fe8783ac30c81bf5be4d250bcb1](https://github.com/dotnet/arcade/commit/d7585e79b1397fe8783ac30c81bf5be4d250bcb1)\n- **Branch**: [main](https://github.com/dotnet/arcade/tree/main)\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - From [10.0.0-beta.25268.1 to 11.0.0-beta.25457.1][16]\n    - Microsoft.DotNet.Arcade.Sdk\n    - Microsoft.DotNet.Build.Tasks.Feed\n    - Microsoft.DotNet.Helix.Sdk\n    - Microsoft.DotNet.SignTool\n    - Microsoft.DotNet.SwaggerGenerator.MSBuild\n    - Microsoft.DotNet.XliffTasks\n    - Microsoft.DotNet.XUnitExtensions\n\n[16]: https://github.com/dotnet/arcade/compare/35a34fa5ab...d7585e79b1\n\n[DependencyUpdate]: <> (End)\n\n- **Updates to .NET SDKs:**\n  - Updates tools.dotnet to 10.0.100-rc.1.25420.111\n\n[marker]: <> (End:c692823c-b896-437f-4f57-08dc434cc8f6)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","Url":"https://github.com/dotnet/machinelearning/pull/7473","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#7473)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-09-13T03:30:18.074307Z","RunDurationInMilliseconds":691}