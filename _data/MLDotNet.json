{"Data":{"GitHub":{"Issues":[{"Id":"1446626405","IsPullRequest":false,"CreatedAt":"2022-11-12T22:17:35","Actor":"deiruch","Number":"6450","RawContent":null,"Title":"Document default values of TrainerOptions","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nLooking up the default value of `LightGbmMulticlassTrainer.Options.NumberOfIterations` just took me way too long. The default values should be stated in the documentation.\r\n\r\n**Describe the solution you'd like**\r\nThe documentation should mention the default values.\r\n\r\n**Describe alternatives you've considered**\r\nCreate an application, instantiate the object there and print out the values.\r\n\r\n**Additional context**\r\nI reported this before in #4311. There, instead of updating the documentation, I was provided the answer. That's nice, but not scalable, and wasn't my suggestion. To be clear: I suggest you include all default values in the documentation.","Url":"https://github.com/dotnet/machinelearning/issues/6450","RelatedDescription":"Open issue \"Document default values of TrainerOptions\" (#6450)"},{"Id":"1446521036","IsPullRequest":true,"CreatedAt":"2022-11-12T16:46:58","Actor":"FranklinWhale","Number":"6449","RawContent":null,"Title":"Add `DataViewSchema` overloads to `ConvertToOnnx`","State":"open","Body":"Fixes #6448 ","Url":"https://github.com/dotnet/machinelearning/pull/6449","RelatedDescription":"Open PR \"Add `DataViewSchema` overloads to `ConvertToOnnx`\" (#6449)"},{"Id":"1446265698","IsPullRequest":false,"CreatedAt":"2022-11-12T05:28:53","Actor":"FranklinWhale","Number":"6448","RawContent":null,"Title":"`ConvertToOnnx` should also accept `DataViewSchema`","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nCurrently, [saving a model to zip file](https://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.modeloperationscatalog.save?view=ml-dotnet) only requires a `DataViewSchema`, but [saving a model to ONNX](https://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.onnxexportextensions.converttoonnx?view=ml-dotnet-preview) requires `IDataView`.\r\n\r\nInside [`ConvertToOnnxProtobufCore`](https://github.com/dotnet/machinelearning/blob/main/src/Microsoft.ML.OnnxConverter/OnnxExportExtensions.cs#L18), a prediction was performed (`transform.Transform(inputData)`), which may be expensive if the training data set is large.\r\n\r\n**Describe the solution you'd like**\r\n`ConvertToOnnx` should have overloads that accept `DataViewSchema`, then convert the `DataViewSchema` to an [empty `IDataView`](https://github.com/dotnet/machinelearning/blob/main/src/Microsoft.ML.Data/DataView/EmptyDataView.cs), and pass the empty `IDataView` to the methods accepting `IDataView`.\r\n\r\nThe performance of methods accepting `IDataView` may be improved if `EmptyDataView` is created from the [Schema of the IDataView](https://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.idataview.schema?view=ml-dotnet) and passed to `ConvertToOnnxProtobuf`, instead of full data.\r\n\r\n**Describe alternatives you've considered**\r\nNil\r\n\r\n**Additional context**\r\nI have implemented the proposed solution and that seems working well. It is unfortunate that [`EmptyDataView`](https://github.com/dotnet/machinelearning/blob/main/src/Microsoft.ML.Data/DataView/EmptyDataView.cs) is an `internal` class, so I have to implement my own `EmptyDataView`.\r\n\r\n```cs\r\nsealed record EmptyDataView(DataViewSchema Schema) : IDataView {\r\n\tpublic bool CanShuffle => true;\r\n\r\n\tpublic long? GetRowCount() => 0L;\r\n\r\n\tpublic DataViewRowCursor GetRowCursor(IEnumerable<DataViewSchema.Column> columnsNeeded, Random? rand = null)\r\n\t\t=> new EmptyDataViewRowCursor(Schema);\r\n\r\n\tpublic DataViewRowCursor[] GetRowCursorSet(IEnumerable<DataViewSchema.Column> columnsNeeded, int n, Random? rand = null)\r\n\t\t=> Array.Empty<DataViewRowCursor>();\r\n}\r\n\r\nsealed class EmptyDataViewRowCursor : DataViewRowCursor {\r\n\tprivate readonly DataViewSchema schema;\r\n\r\n\tpublic EmptyDataViewRowCursor(DataViewSchema Schema) {\r\n\t\tschema = Schema;\r\n\t}\r\n\r\n\tpublic override DataViewSchema Schema => schema;\r\n\r\n\tpublic override long Position => -1L;\r\n\r\n\tpublic override bool IsColumnActive(DataViewSchema.Column column) => false;\r\n\r\n\tpublic override bool MoveNext() => false;\r\n\r\n\tpublic override long Batch => 0L;\r\n\r\n\tpublic override ValueGetter<TValue> GetGetter<TValue>(DataViewSchema.Column column)\r\n\t\t=> throw new InvalidOperationException();\r\n\r\n\tpublic override ValueGetter<DataViewRowId> GetIdGetter()\r\n\t\t=> throw new InvalidOperationException();\r\n}\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/6448","RelatedDescription":"Open issue \"`ConvertToOnnx` should also accept `DataViewSchema`\" (#6448)"},{"Id":"1446207805","IsPullRequest":true,"CreatedAt":"2022-11-12T03:11:12","Actor":"LittleLittleCloud","Number":"6447","RawContent":null,"Title":"fix #6446","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\nfix #6446","Url":"https://github.com/dotnet/machinelearning/pull/6447","RelatedDescription":"Open PR \"fix #6446\" (#6447)"},{"Id":"1438377178","IsPullRequest":true,"CreatedAt":"2022-11-11T15:22:40","Actor":"dotnet-maestro[bot]","Number":"6439","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1c26c342-7dbd-4e18-3778-08daa2f83374)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1c26c342-7dbd-4e18-3778-08daa2f83374\r\n- **Build**: 20221108.4\r\n- **Date Produced**: November 8, 2022 7:03:36 PM UTC\r\n- **Commit**: 3f3c360819c5c092d0e4505a67dfe59a33fba557\r\n- **Branch**: refs/heads/release/7.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22514.3 to 7.0.0-beta.22558.4][2]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 7.0.0-beta.22514.3 to 7.0.0-beta.22558.4][2]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22514.3 to 7.0.0-beta.22558.4][2]\r\n  - **Microsoft.DotNet.SignTool**: [from 7.0.0-beta.22514.3 to 7.0.0-beta.22558.4][2]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 7.0.0-beta.22514.3 to 7.0.0-beta.22558.4][2]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.22514.3 to 7.0.0-beta.22558.4][2]\r\n\r\n[2]: https://github.com/dotnet/arcade/compare/3083cc9...3f3c360\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates tools.dotnet to 7.0.100\r\n\r\n[marker]: <> (End:1c26c342-7dbd-4e18-3778-08daa2f83374)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6439","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6439)"},{"Id":"1437394713","IsPullRequest":false,"CreatedAt":"2022-11-11T08:36:06","Actor":"andrasfuchs","Number":"6437","RawContent":null,"Title":"R-squared calculated incorrectly for some FastTreeRegression trials","State":"closed","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11 [Version 10.0.22621.675]\r\n - ML.NET Version: ML.NT v2.0.0-preview.22551.1\r\n - .NET Version: .NET 6.0.401\r\n\r\n**Describe the bug**\r\nI use Fast Tree and Fast Forest algorithms for regression training. My metric is set to R-squared. As far as I understand the value range of R-squared is between 0% and 100% by definition. ([see here](https://statisticsbyjim.com/regression/interpret-r-squared-regression/))\r\nSometimes I get strange values outside of this range, typically negative numbers. I might be wrong, but I think this should not happen.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create an regression experiment and set its metric to R-squared\r\n2. Run a few trials until you get a metric score outside of the [0.00..1.00] range\r\n\r\n**Expected behavior**\r\nI would expect all metric values to be in the [0.00..1.00] range. Having values outside of this range indicates that something is calculated incorrectly, and it potentially mean that I lose a good trial just because of this miscalculation.\r\n\r\n**Screenshots, Code, Sample Projects**\r\n```\r\nvar pipeline =\r\n  mlContext.Auto().Featurizer(trainTestData.TrainSet, numericColumns: new[] { \"Features\" })\r\n      .Append(mlContext.Auto().Regression(useFastTree: true, useLbfgs: false, useSdca: false, useFastForest: true, useLgbm: false));\r\n\r\nvar experiment = mlContext.Auto().CreateExperiment();\r\n\r\nexperiment\r\n    .SetPipeline(pipeline)\r\n    .SetTrainingTimeInSeconds(trainingTimeInSeconds)\r\n    .SetRegressionMetric(RegressionMetric.RSquared, labelColumn: \"Label\")\r\n    .SetDataset(trainTestData.TrainSet, trainTestData.TestSet)\r\n    .SetMonitor(monitor)\r\n    .SetMaximumMemoryUsageInMegaByte(20 * 1024);\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/910321/200171214-2093a1e9-a829-42a0-aece-ecc467d8fa81.png)\r\n\r\n**Additional context**\r\nI can provide the source code and data on request, as usual.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6437","RelatedDescription":"Closed issue \"R-squared calculated incorrectly for some FastTreeRegression trials\" (#6437)"},{"Id":"1443669460","IsPullRequest":false,"CreatedAt":"2022-11-10T10:49:09","Actor":"thoron","Number":"6446","RawContent":null,"Title":"AutoML experiments in non declarative style not working","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: 2.0\r\n - .NET Version: .NET6\r\n\r\n**Describe the bug**\r\nRunning the \"old\" AutoML experiments does not work for all trainers. Using `CreateMulticlassClassificationExperiment` or `CreateRegressionExperiment` instead of the new declarative style will result in an exception (possibly due to custom schemas).\r\n\r\nAn exception will be raised in the new SweepablePipeline:\r\n```stacktrace\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Microsoft.ML.AutoML.SweepablePipeline..ctor(Dictionary`2 estimators, Entity schema, String currentSchema)\r\n   at Microsoft.ML.AutoML.SweepablePipeline.AppendEntity(Boolean allowSkip, Entity entity)\r\n   at Microsoft.ML.AutoML.AutoCatalog.MultiClassification(String labelColumnName, String featureColumnName, String exampleWeightColumnName, Boolean useFastForest, Boolean useLgbm, Boolean useFastTree, Boolean useLbfgs, Boolean useSdca, FastTreeOption fastTreeOption, LgbmOption lgbmOption, FastForestOption fastForestOption, LbfgsOption lbfgsOption, SdcaOption sdcaOption, SearchSpace`1 fastTreeSearchSpace, SearchSpace`1 lgbmSearchSpace, SearchSpace`1 fastForestSearchSpace, SearchSpace`1 lbfgsSearchSpace, SearchSpace`1 sdcaSearchSpace)\r\n   at Microsoft.ML.AutoML.MulticlassClassificationExperiment.CreateMulticlassClassificationPipeline(IDataView trainData, ColumnInformation columnInformation, IEstimator`1 preFeaturizer)\r\n   at Microsoft.ML.AutoML.MulticlassClassificationExperiment.Execute(IDataView trainData, ColumnInformation columnInformation, IEstimator`1 preFeaturizer, IProgress`1 progressHandler)\r\n   at Microsoft.ML.AutoML.MulticlassClassificationExperiment.Execute(IDataView trainData, String labelColumnName, String samplingKeyColumn, IEstimator`1 preFeaturizer, IProgress`1 progressHandler)\r\n```\r\n\r\n\r\n**To Reproduce**\r\n```csharp\r\nvar experimentSettings = new MulticlassExperimentSettings\r\n{\r\n  MaxExperimentTimeInSeconds = 30,\r\n  OptimizingMetric = MulticlassClassificationMetric.MacroAccuracy\r\n};\r\nexperimentSettings.Trainers.Clear();\r\nexperimentSettings.Trainers.Add(MulticlassClassificationTrainer.LbfgsMaximumEntropy);\r\nctx.Auto().CreateMulticlassClassificationExperiment(experimentSettings).Execute(trainDv);\r\n```\r\nWhere the schema is of a custom type:\r\n```csharp\r\nvar schemaDef = SchemaDefinition.Create(typeof(ModelInput));\r\nschemaDef[\"Features\"].ColumnType = new VectorDataViewType(NumberDataViewType.Single, numberOfFeatures);\r\nschemaDef.Remove(schemaDef[\"LabelFeaturized\"]); // removed when not applicable\r\n```\r\n\r\n```csharp\r\npublic class ModelInput\r\n{\r\n  public uint Label;\r\n  public float LabelFeaturized;\r\n  public float[] Features;\r\n}\r\n```\r\n\r\n**Expected behavior**\r\nNo regression expected for `CreateMulticlassClassificationExperiment` and `CreateRegressionExperiment`.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6446","RelatedDescription":"Open issue \"AutoML experiments in non declarative style not working\" (#6446)"},{"Id":"1443360551","IsPullRequest":true,"CreatedAt":"2022-11-10T06:59:05","Actor":"LittleLittleCloud","Number":"6445","RawContent":null,"Title":"add SentenceSimilarity sweepable estimator in AutoML","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\nhttps://github.com/dotnet/machinelearning-modelbuilder/issues/2338#issuecomment-1309452701\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6445","RelatedDescription":"Open PR \"add SentenceSimilarity sweepable estimator in AutoML\" (#6445)"},{"Id":"1442557583","IsPullRequest":true,"CreatedAt":"2022-11-09T18:26:56","Actor":"luisquintanilla","Number":"6444","RawContent":null,"Title":"2023 roadmap outline","State":"open","Body":"We are excited to review your PR.\n\nSo we can do the best job, please check:\n\n- [x] There's a descriptive title that will make sense to other developers some time from now. \n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\n- [x] You have included any necessary tests in the same PR.\n\nThis PR updates the roadmap with goals through November 2023.\n","Url":"https://github.com/dotnet/machinelearning/pull/6444","RelatedDescription":"Open PR \"2023 roadmap outline\" (#6444)"},{"Id":"1441702779","IsPullRequest":false,"CreatedAt":"2022-11-09T09:05:35","Actor":"AsimZaid","Number":"6443","RawContent":null,"Title":"DataFrame.OrderBy(string columnName) does not perform stable sorting!","State":"open","Body":"Stable sorting preserves the order of entries in the input when their sorting keys are same. Please see the below link:\r\nhttps://stackoverflow.com/questions/1517793/what-is-stability-in-sorting-algorithms-and-why-is-it-important\r\n\r\nAs an example:\r\nBefore sorting...\r\n\r\n```\r\ndf\r\nA     B     C\r\n9     18    28\r\n6     11    25\r\n6     10    23\r\n3     16    26\r\n6     13    21\r\n3     19    22\r\n3     11    28\r\n6     17    20\r\n```\r\n\r\nAfter sorting...\r\n\r\n```\r\ndf.OrderBy(\"A\")\r\nA     B     C\r\n3     16    26\r\n3     11    28\r\n3     19    22\r\n6     11    25\r\n6     10    23\r\n6     17    20\r\n6     13    21\r\n9     18    28\r\n```\r\n\r\nThe three rows where column `A` = `3`, should be ordered with column `B` as `16,19,11` (not `16,11,19`).\r\nThe four rows where column `A` = `6`, should be ordered with column `B` as `11,10,13,17` (not `11,10,17,13`).\r\n\r\nIf we get a stable sorting with `OrderBy` function, we would have a work-around for multi-column sorting which is not yet available according to [#5758](https://github.com/dotnet/machinelearning/issues/5758) and [#5649](https://github.com/dotnet/machinelearning/issues/5649). For those interested in the workaround, please see [this question on stackoverflow](https://stackoverflow.com/questions/24573337/c-sharp-deedle-sort-by-multiple-columns).\r\n\r\nThanks!\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6443","RelatedDescription":"Open issue \"DataFrame.OrderBy(string columnName) does not perform stable sorting!\" (#6443)"},{"Id":"1439384313","IsPullRequest":true,"CreatedAt":"2022-11-08T03:05:53","Actor":"ericstj","Number":"6442","RawContent":null,"Title":"Attempting to fix M1 tests","State":"open","Body":"We were ignoring failures, remove that and introduce some logging to try to determine what's happening in M1 tests.","Url":"https://github.com/dotnet/machinelearning/pull/6442","RelatedDescription":"Open PR \"Attempting to fix M1 tests\" (#6442)"},{"Id":"1439306925","IsPullRequest":false,"CreatedAt":"2022-11-08T01:52:09","Actor":"ericstj","Number":"6441","RawContent":null,"Title":"PR validation failures on Mac M1","State":"open","Body":"Tests on M1 that require loading native binaries built in the repo are failing with \r\n`System.DllNotFoundException : Unable to load shared library 'LdaNative' or one of its dependencies. In order to help diagnose loading problems, consider setting the DYLD_PRINT_LIBRARIES environment variable: dlopen(libLdaNative, 1): image not found`\r\n`System.DllNotFoundException : Unable to load shared library 'MatrixFactorizationNative' or one of its dependencies. In order to help diagnose loading problems, consider setting the DYLD_PRINT_LIBRARIES environment variable: dlopen(libMatrixFactorizationNative, 1): image not found`\r\n\r\nThese are not being reported as failures because we're ignoring failures on M1 right now:\r\nhttps://github.com/dotnet/machinelearning/blob/17c061acd1cc87a84b9a821ff95f235d836a3737/build/ci/job-template.yml#L169-L171\r\n\r\nWe should fix this issue and remove this continueOnError setting.","Url":"https://github.com/dotnet/machinelearning/issues/6441","RelatedDescription":"Open issue \"PR validation failures on Mac M1\" (#6441)"},{"Id":"1439123277","IsPullRequest":true,"CreatedAt":"2022-11-08T01:33:25","Actor":"ericstj","Number":"6440","RawContent":null,"Title":"Rebrand release/2.0 to 2.0.1","State":"closed","Body":"Getting us ready for the next build out of the release/2.0 branch.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6440","RelatedDescription":"Closed or merged PR \"Rebrand release/2.0 to 2.0.1\" (#6440)"},{"Id":"1433980327","IsPullRequest":false,"CreatedAt":"2022-11-07T22:19:40","Actor":"luisquintanilla","Number":"6428","RawContent":null,"Title":"Upgrade to TorchSharp 0.98.3","State":"closed","Body":"No expected code changes, just changes in Protobuf dependency.\r\n\r\nhttps://github.com/dotnet/TorchSharp/discussions/479#discussioncomment-4042671","Url":"https://github.com/dotnet/machinelearning/issues/6428","RelatedDescription":"Closed issue \"Upgrade to TorchSharp 0.98.3\" (#6428)"},{"Id":"1436697000","IsPullRequest":true,"CreatedAt":"2022-11-07T22:19:39","Actor":"JakeRadMSFT","Number":"6436","RawContent":null,"Title":"Update TorchSharp to 0.98.3","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\nFixes: #6428 \r\n","Url":"https://github.com/dotnet/machinelearning/pull/6436","RelatedDescription":"Closed or merged PR \"Update TorchSharp to 0.98.3\" (#6436)"},{"Id":"1436573326","IsPullRequest":true,"CreatedAt":"2022-11-07T15:32:08","Actor":"luisquintanilla","Number":"6435","RawContent":null,"Title":"ML.NET 2.0 Release Notes","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\nThis change introduces release notes for ML.NET 2.0 release.","Url":"https://github.com/dotnet/machinelearning/pull/6435","RelatedDescription":"Closed or merged PR \"ML.NET 2.0 Release Notes\" (#6435)"},{"Id":"1437747364","IsPullRequest":true,"CreatedAt":"2022-11-07T04:25:23","Actor":"KKghub","Number":"6438","RawContent":null,"Title":"Fixed typo for calibrators","State":"open","Body":"Fixes #6210\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6438","RelatedDescription":"Open PR \"Fixed typo for calibrators\" (#6438)"},{"Id":"1436491580","IsPullRequest":true,"CreatedAt":"2022-11-04T18:40:10","Actor":"MattGal","Number":"6434","RawContent":null,"Title":"Use -Svc pool providers in release/* branches for billing purposes","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is  merged.  (N/A: Trivial, self-evident change)\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR. (n/a; just changing pool for build agents)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6434","RelatedDescription":"Open PR \"Use -Svc pool providers in release/* branches for billing purposes\" (#6434)"},{"Id":"1436442589","IsPullRequest":false,"CreatedAt":"2022-11-04T17:55:21","Actor":"asheesh1996","Number":"6433","RawContent":null,"Title":"Multi-output regression using ML.NET","State":"open","Body":"Hi, [flaml ](https://microsoft.github.io/FLAML/)has a implementation of doing  ([Multi-output regression](https://microsoft.github.io/FLAML/docs/Examples/AutoML-Regression#multi-output-regression)).\r\n\r\nIs there any implementation of same available in [ModelBuilder ](https://dotnet.microsoft.com/en-us/apps/machinelearning-ai/ml-dotnet/model-builder), [ML.NET CLI ](https://learn.microsoft.com/en-us/dotnet/machine-learning/automate-training-with-cli) or [Microsoft.ML.AutoML](https://www.nuget.org/packages/Microsoft.ML.AutoML/0.20.0-preview.22313.1)?\r\nIf there are any existing examples, please share.\r\n\r\nIt will be really nice if this can be implemented in Model Builder in Visual Studio.","Url":"https://github.com/dotnet/machinelearning/issues/6433","RelatedDescription":"Open issue \"Multi-output regression using ML.NET\" (#6433)"},{"Id":"1433406367","IsPullRequest":true,"CreatedAt":"2022-11-04T16:05:46","Actor":"ericstj","Number":"6424","RawContent":null,"Title":"Update version to 3.0.0","State":"closed","Body":"This rebrands `main` to 3.0.  I've created the release/2.0 branch as https://github.com/dotnet/machinelearning/tree/release/2.0 from commit https://github.com/dotnet/machinelearning/commit/1a83389bbd9c2f3ae27de30d10209ca9321adb7d.\r\n\r\nFrom here on out we can cherry-pick changes into release/2.0 as necessary.","Url":"https://github.com/dotnet/machinelearning/pull/6424","RelatedDescription":"Closed or merged PR \"Update version to 3.0.0\" (#6424)"},{"Id":"1436307047","IsPullRequest":false,"CreatedAt":"2022-11-04T16:03:47","Actor":"greenpau","Number":"6432","RawContent":null,"Title":"Custom WordEmbeddingEstimator with ApplyWordEmbedding","State":"open","Body":"I am using  `WordEmbeddingEstimator.PretrainedModelKind.GloVe300D` that comes with `Microsoft.ML`.\r\n\r\n```cs\r\n            var gloVe300DPipeline = mlContext.Transforms.Text.NormalizeText(\"Text\")\r\n                .Append(mlContext.Transforms.Text.TokenizeIntoWords(\"Tokens\", \"Text\"))\r\n                .Append(mlContext.Transforms.Text.ApplyWordEmbedding(\r\n                    \"Features\",\r\n                    \"Tokens\",\r\n                    WordEmbeddingEstimator.PretrainedModelKind.GloVe300D\r\n                ));\r\n```\r\n\r\nThere is a way to apply custom \r\n\r\nhttps://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.textcatalog.applywordembedding?view=ml-dotnet#microsoft-ml-textcatalog-applywordembedding(microsoft-ml-transformscatalog-texttransforms-system-string-system-string-system-string)\r\n\r\n```\r\n            var pathToCustomModel = @\".\\custommodel.txt\";\r\n            using (StreamWriter file = new StreamWriter(pathToCustomModel, false))\r\n            {\r\n                file.WriteLine(\"great 1.0 2.0 3.0\");\r\n                file.WriteLine(\"product -1.0 -2.0 -3.0\");\r\n                file.WriteLine(\"like -1 100.0 -100\");\r\n                file.WriteLine(\"buy 0 0 20\");\r\n            }\r\n            var textPipeline = mlContext.Transforms.Text.NormalizeText(\"Text\")\r\n                .Append(mlContext.Transforms.Text.TokenizeIntoWords(\"Tokens\",\r\n                    \"Text\"))\r\n                .Append(mlContext.Transforms.Text.ApplyWordEmbedding(\"Features\",\r\n                    pathToCustomModel, \"Tokens\"));\r\n```\r\n\r\nSay I have MPNet model here: https://huggingface.co/microsoft/mpnet-base/tree/main\r\n\r\nHow do I convert it to be used with the `ApplyWordEmbedding`?","Url":"https://github.com/dotnet/machinelearning/issues/6432","RelatedDescription":"Open issue \"Custom WordEmbeddingEstimator with ApplyWordEmbedding\" (#6432)"},{"Id":"1435605570","IsPullRequest":false,"CreatedAt":"2022-11-04T06:07:01","Actor":"crazyoutlook","Number":"6431","RawContent":null,"Title":"ML.Net ONNX Runtime not working on ARM CPU (Linux OS)","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version:  Linux 20\r\n - ML.NET Version: ML.NET v1.6, ML.OnnxRuntime v1.7, ML.OnnxRuntime.Gpu v1.13\r\n - .NET Version: NET 6.0\r\n -  Processor: ARM (Nvidia Jetson Nano) with Linux 20 as OS\r\n\r\n**Describe the bug**\r\nML.NET and ONNX runtime is not working on ARM processor (Nvidia Jetson Nano edge device) which is running on Linux 20 OS. I am trying to build the solution in Visual Studio 2022 with target as ARM CPU but the ARM nugget binaries/dll are not getting generated for ONNX Runtime. Only nugget for windows and Linux are getting generated while installing from nugget package\r\n\r\n**To Reproduce**\r\n\r\n1. Build solution suing Visual Studio 2022 on a windows machine with ARM as target\r\n2. ONNX runtime nugget binaries/dll are not generated for ARM\r\n\r\n**Expected behavior**\r\nML.Net with ONNX should run on ARM CPU\r\n\r\n**Screenshots, Code, Sample Projects**\r\nScreenshots attached \r\n![nugget-1](https://user-images.githubusercontent.com/67651625/199903116-3edb0e0c-3d36-4cca-b078-dc2342790a85.PNG)\r\n![nugget-2](https://user-images.githubusercontent.com/67651625/199903146-3b895370-e338-4b4b-ae01-c3ff35cbf785.PNG)\r\n\r\n**Additional context**\r\nI have installed nugget packages: ML.NET v1.6, ML.OnnxRuntime v1.7, ML.OnnxRuntime.Gpu v1.13 from nugget package manager in Visual Studio 2022 but it's not generating ARM files for Linux\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6431","RelatedDescription":"Open issue \"ML.Net ONNX Runtime not working on ARM CPU (Linux OS)\" (#6431)"},{"Id":"1435218293","IsPullRequest":true,"CreatedAt":"2022-11-03T20:25:21","Actor":"LittleLittleCloud","Number":"6430","RawContent":null,"Title":"set trial to unsuccess if trial loss is nan/inf","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\nplus fix spell error in text classification\r\n\r\nrelated issue\r\n- #6429 \r\n- https://github.com/dotnet/machinelearning-modelbuilder/issues/2294\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6430","RelatedDescription":"Open PR \"set trial to unsuccess if trial loss is nan/inf\" (#6430)"},{"Id":"1435079572","IsPullRequest":false,"CreatedAt":"2022-11-03T18:12:50","Actor":"LittleLittleCloud","Number":"6429","RawContent":null,"Title":"TextClassification function name spell error in AutoML.Net CodeGen file","State":"open","Body":"https://github.com/dotnet/machinelearning/blob/1a83389bbd9c2f3ae27de30d10209ca9321adb7d/src/Microsoft.ML.AutoML/CodeGen/trainer-estimators.json#L515\r\n\r\nShould be `TextClassification`","Url":"https://github.com/dotnet/machinelearning/issues/6429","RelatedDescription":"Open issue \"TextClassification function name spell error in AutoML.Net CodeGen file\" (#6429)"},{"Id":"1433738981","IsPullRequest":false,"CreatedAt":"2022-11-02T20:24:30","Actor":"luisquintanilla","Number":"6427","RawContent":null,"Title":"Add ARIMA to ML.NET","State":"open","Body":"Related to dotnet/machinelearning-modelbuilder#2193","Url":"https://github.com/dotnet/machinelearning/issues/6427","RelatedDescription":"Open issue \"Add ARIMA to ML.NET\" (#6427)"},{"Id":"1433703433","IsPullRequest":false,"CreatedAt":"2022-11-02T19:51:43","Actor":"andrasfuchs","Number":"6426","RawContent":null,"Title":"LightGBM - repeating \"bad allocation\" warning during trial","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11 [Version 10.0.22621.675] \r\n - ML.NET Version: ML.NT v2.0.0-preview.22551.1\r\n - .NET Version: .NET 6.0.9\r\n\r\n**Describe the bug**\r\n`LightGBM` trials fail with \"bad allocation\" error message and they cause `OutOfMemoryException` even if `SetMaximumMemoryUsageInMegaByte()` is used.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create a pipeline that includes LightGBM, for example:\r\n```\r\nvar pipeline =\r\n  mlContext.Auto().Featurizer(trainTestData.TrainSet, numericColumns: new[] { \"Features\" })\r\n      .Append(mlContext.Auto().Regression(useFastTree: false, useLbfgs: true, useSdca: true, useFastForest: false, useLgbm: true));\r\n\r\n```\r\n2. Create an ML.NET experiment and set its memory limit. I set it to 20 GB, because I usually have ~24 GB available when I start the training.\r\n```\r\nvar experiment = mlContext.Auto().CreateExperiment();\r\n\r\nexperiment\r\n    .SetPipeline(pipeline)\r\n    .SetTrainingTimeInSeconds(trainingTimeInSeconds)\r\n    .SetRegressionMetric(RegressionMetric.RSquared, labelColumn: \"Label\")\r\n    .SetDataset(trainTestData.TrainSet, trainTestData.TestSet)\r\n    .SetMonitor(monitor)\r\n    .SetMaximumMemoryUsageInMegaByte(20 * 1024);\r\n```\r\n4. Run the experiment for an hour\r\n5. The experiment will end with `OutOfMemoryException`\r\n\r\n**Expected behavior**\r\nI would expect the AutoML stops the trial if it exceeds the memory limit and/or there is an exception during its run. It should not about the whole experiment.\r\n\r\n**Screenshots, Code, Sample Projects**\r\nHere are the logs of three runs I had today:\r\n```\r\n15:23:11.3 info: Bio Balance Detector Body Monitor v0.9.1.3\r\n15:23:11.3 info: (The current UTC time is 2022-11-02 14:23:11)\r\n15:23:11.6 info: Now listening on: https://0.0.0.0:7061\r\n15:23:11.6 info: Now listening on: http://localhost:5061\r\n15:23:11.6 info: Microsoft.Hosting.Lifetime[0] Application started. Press Ctrl+C to shut down.\r\n15:23:11.6 info: Microsoft.Hosting.Lifetime[0] Hosting environment: Development\r\n15:23:11.6 info: Microsoft.Hosting.Lifetime[0] Content root path: C:\\Work\\BioBalanceDetector\\Software\\Source\\BBDProto08\\BBD.BodyMonitor\\BBD.BodyMonitor.API\\\r\n15:23:38.1 info: Starting model training for 3600 seconds, using 'BBD_20221102_2022-11-02_MLP14_0p25Hz-6250Hz_IsSession.SegmentedData.Sleep.Level_1098rows.csv' as data source with the 'MLP14' profile.\r\n15:23:51.5 info: Completed Trial #   0 - Pipeline: ReplaceMissingValues=>Concatenate=>FastForestRegression             - Metric:    0,15 - Duration:     13 seconds\r\n15:23:51.5 info:  New Best Trial #   0 - Pipeline: ReplaceMissingValues=>Concatenate=>FastForestRegression             - Metric:    0,15\r\n15:24:01.2 info: Completed Trial #   1 - Pipeline: ReplaceMissingValues=>Concatenate=>LightGbmRegression               - Metric:    0,05 - Duration:     10 seconds\r\n15:24:11.1 info: Completed Trial #   2 - Pipeline: ReplaceMissingValues=>Concatenate=>FastTreeRegression               - Metric:   -2,20 - Duration:     10 seconds\r\n15:50:15.5 info: Completed Trial #   3 - Pipeline: ReplaceMissingValues=>Concatenate=>SdcaRegression                   - Metric:    0,03 - Duration:     1564 seconds\r\n15:50:32.2 info: Completed Trial #   4 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression - Metric:    0,41 - Duration:     17 seconds\r\n15:50:32.2 info:  New Best Trial #   4 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression - Metric:    0,41\r\n15:50:44.3 info: Completed Trial #   5 - Pipeline: ReplaceMissingValues=>Concatenate=>FastForestRegression             - Metric:    0,16 - Duration:     12 seconds\r\n15:50:50.0 info: Completed Trial #   6 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression - Metric:    0,40 - Duration:     6 seconds\r\n15:51:15.3 info: Completed Trial #   7 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression - Metric:    0,43 - Duration:     25 seconds\r\n15:51:15.3 info:  New Best Trial #   7 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression - Metric:    0,43\r\n15:51:43.3 info: Completed Trial #   8 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression - Metric:    0,43 - Duration:     28 seconds\r\n15:51:43.3 info:  New Best Trial #   8 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression - Metric:    0,43\r\n15:51:54.4 info: Completed Trial #   9 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression - Metric:    0,14 - Duration:     11 seconds\r\n[LightGBM] [Warning] bad allocation\r\n[LightGBM] [Warning] bad allocation\r\n[LightGBM] [Warning] bad allocation\r\n[LightGBM] [Warning] bad allocation\r\n[LightGBM] [Warning] bad allocation\r\n```\r\n\r\n```\r\n17:49:52.6 info: BBD.BodyMonitor.API[0] Bio Balance Detector Body Monitor v0.9.1.3\r\n17:49:52.6 info: BBD.BodyMonitor.API[0] (The current UTC time is 2022-11-02 16:49:52)\r\n17:49:52.9 info: Microsoft.Hosting.Lifetime[14] Now listening on: https://0.0.0.0:7061\r\n17:49:52.9 info: Microsoft.Hosting.Lifetime[14] Now listening on: http://localhost:5061\r\n17:49:52.9 info: Microsoft.Hosting.Lifetime[0] Application started. Press Ctrl+C to shut down.\r\n17:49:52.9 info: Microsoft.Hosting.Lifetime[0] Hosting environment: Development\r\n17:49:52.9 info: Microsoft.Hosting.Lifetime[0] Content root path: C:\\Work\\BioBalanceDetector\\Software\\Source\\BBDProto08\\BBD.BodyMonitor\\BBD.BodyMonitor.API\\\r\n17:50:07.6 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Starting model training for 3600 seconds, using 'BBD_20221102_2022-11-02_MLP14_0p25Hz-6250Hz_IsSession.SegmentedData.Sleep.Level_1098rows.csv' as data source with the 'MLP14' profile.\r\n17:50:08.0 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #   0 - Pipeline: ReplaceMissingValues=>Concatenate=>FastTreeRegression\r\n17:50:20.6 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #   0 - Pipeline: ReplaceMissingValues=>Concatenate=>FastForestRegression                - Metric:    0,15 - Duration:     13 seconds\r\n17:50:20.6 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]  New Best Trial #   0 - Pipeline: ReplaceMissingValues=>Concatenate=>FastForestRegression                - Metric:    0,15\r\n17:50:20.6 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #   1 - Pipeline: ReplaceMissingValues=>Concatenate=>FastForestRegression\r\n17:50:30.5 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #   1 - Pipeline: ReplaceMissingValues=>Concatenate=>FastTreeRegression                  - Metric:   -2,20 - Duration:     10 seconds\r\n17:50:30.6 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #   2 - Pipeline: ReplaceMissingValues=>Concatenate=>FastTreeRegression\r\n17:50:40.1 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #   2 - Pipeline: ReplaceMissingValues=>Concatenate=>LightGbmRegression                  - Metric:    0,05 - Duration:     10 seconds\r\n17:50:40.1 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #   3 - Pipeline: ReplaceMissingValues=>Concatenate=>LightGbmRegression\r\n18:16:49.1 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #   3 - Pipeline: ReplaceMissingValues=>Concatenate=>SdcaRegression                      - Metric:    0,03 - Duration:     1569 seconds\r\n18:16:49.1 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #   4 - Pipeline: ReplaceMissingValues=>Concatenate=>SdcaRegression\r\n18:17:05.9 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #   4 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression    - Metric:    0,41 - Duration:     17 seconds\r\n18:17:05.9 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]  New Best Trial #   4 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression    - Metric:    0,41\r\n18:17:05.9 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #   5 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression\r\n18:17:17.9 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #   5 - Pipeline: ReplaceMissingValues=>Concatenate=>FastForestRegression                - Metric:    0,21 - Duration:     12 seconds\r\n18:17:17.9 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #   6 - Pipeline: ReplaceMissingValues=>Concatenate=>FastForestRegression\r\n18:17:22.7 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #   6 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression    - Metric:    0,41 - Duration:     5 seconds\r\n18:17:22.7 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #   7 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression\r\n18:17:34.3 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #   7 - Pipeline: ReplaceMissingValues=>Concatenate=>FastForestRegression                - Metric:    0,23 - Duration:     12 seconds\r\n18:17:34.3 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #   8 - Pipeline: ReplaceMissingValues=>Concatenate=>FastForestRegression\r\n18:17:50.1 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #   8 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression    - Metric:    0,36 - Duration:     16 seconds\r\n18:17:50.1 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #   9 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression\r\n18:19:58.1 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #   9 - Pipeline: ReplaceMissingValues=>Concatenate=>FastForestRegression                - Metric:    0,28 - Duration:     128 seconds\r\n18:19:58.1 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #  10 - Pipeline: ReplaceMissingValues=>Concatenate=>FastForestRegression\r\n18:21:04.9 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #  10 - Pipeline: ReplaceMissingValues=>Concatenate=>FastForestRegression                - Metric:    0,26 - Duration:     67 seconds\r\n18:21:04.9 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #  11 - Pipeline: ReplaceMissingValues=>Concatenate=>FastForestRegression\r\n18:21:18.5 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #  11 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression    - Metric:    0,22 - Duration:     14 seconds\r\n18:21:18.5 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #  12 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression\r\n18:21:23.6 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #  12 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression    - Metric:    0,36 - Duration:     5 seconds\r\n18:21:23.6 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #  13 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression\r\n18:21:35.5 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #  13 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression    - Metric:    0,40 - Duration:     12 seconds\r\n18:21:35.5 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #  14 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression\r\n18:21:58.2 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #  14 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression    - Metric:    0,43 - Duration:     23 seconds\r\n18:21:58.2 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]  New Best Trial #  14 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression    - Metric:    0,43\r\n18:21:58.2 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #  15 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression\r\n18:22:14.5 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #  15 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression    - Metric:    0,27 - Duration:     16 seconds\r\n18:22:14.5 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #  16 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression\r\n18:25:06.4 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #  16 - Pipeline: ReplaceMissingValues=>Concatenate=>FastForestRegression                - Metric:    0,28 - Duration:     172 seconds\r\n18:25:06.4 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #  17 - Pipeline: ReplaceMissingValues=>Concatenate=>FastForestRegression\r\n18:25:11.2 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #  17 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression    - Metric:    0,39 - Duration:     5 seconds\r\n18:25:11.2 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #  18 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression\r\n18:25:16.2 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #  18 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression    - Metric:    0,38 - Duration:     5 seconds\r\n18:25:16.2 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #  19 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression\r\n18:25:22.0 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #  19 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression    - Metric:    0,03 - Duration:     6 seconds\r\n18:25:22.0 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #  20 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression\r\n18:25:32.3 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #  20 - Pipeline: ReplaceMissingValues=>Concatenate=>LightGbmRegression                  - Metric:    0,02 - Duration:     10 seconds\r\n18:25:32.3 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #  21 - Pipeline: ReplaceMissingValues=>Concatenate=>LightGbmRegression\r\n18:25:37.4 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #  21 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression    - Metric:    0,37 - Duration:     5 seconds\r\n18:25:37.4 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #  22 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression\r\n18:26:03.1 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #  22 - Pipeline: ReplaceMissingValues=>Concatenate=>FastForestRegression                - Metric:    0,29 - Duration:     26 seconds\r\n18:26:03.1 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #  23 - Pipeline: ReplaceMissingValues=>Concatenate=>FastForestRegression\r\n18:26:07.4 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #  23 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression    - Metric:    0,04 - Duration:     4 seconds\r\n18:26:07.4 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #  24 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression\r\n[LightGBM] [Warning] bad allocation\r\n[LightGBM] [Warning] bad allocation\r\n[LightGBM] [Warning] bad allocation\r\n[LightGBM] [Warning] bad allocation\r\n[LightGBM] [Warning] bad allocation\r\n[LightGBM] [Warning] bad allocation\r\n[LightGBM] [Warning] bad allocation\r\n[LightGBM] [Warning] bad allocation\r\n[LightGBM] [Warning] bad allocation\r\n[LightGBM] [Warning] bad allocation\r\n[LightGBM] [Warning] bad allocation\r\n[LightGBM] [Warning] bad allocation\r\n[LightGBM] [Warning] bad allocation\r\n[LightGBM] [Warning] bad allocation\r\n[LightGBM] [Warning] bad allocation\r\n```\r\n\r\n```\r\n18:53:28.1 info: BBD.BodyMonitor.API[0] Bio Balance Detector Body Monitor v0.9.1.3\r\n18:53:28.1 info: BBD.BodyMonitor.API[0] (The current UTC time is 2022-11-02 17:53:28)\r\n18:53:28.6 info: Microsoft.Hosting.Lifetime[14] Now listening on: https://0.0.0.0:7061\r\n18:53:28.6 info: Microsoft.Hosting.Lifetime[14] Now listening on: http://localhost:5061\r\n18:53:28.6 info: Microsoft.Hosting.Lifetime[0] Application started. Press Ctrl+C to shut down.\r\n18:53:28.6 info: Microsoft.Hosting.Lifetime[0] Hosting environment: Development\r\n18:53:28.6 info: Microsoft.Hosting.Lifetime[0] Content root path: C:\\Work\\BioBalanceDetector\\Software\\Source\\BBDProto08\\BBD.BodyMonitor\\BBD.BodyMonitor.API\\\r\n18:53:44.2 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Starting model training for 3600 seconds, using 'BBD_20221102_2022-11-02_MLP14_0p25Hz-6250Hz_IsSession.SegmentedData.Sleep.Level_1098rows.csv' as data source with the 'MLP14' profile.\r\n18:53:44.6 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #   0 - Pipeline: ReplaceMissingValues=>Concatenate=>FastTreeRegression\r\n18:53:58.7 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #   0 - Pipeline: ReplaceMissingValues=>Concatenate=>FastForestRegression                - Metric:    0,15 - Duration:     14 seconds\r\n18:53:58.7 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]  New Best Trial #   0 - Pipeline: ReplaceMissingValues=>Concatenate=>FastForestRegression                - Metric:    0,15\r\n18:53:58.7 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #   1 - Pipeline: ReplaceMissingValues=>Concatenate=>FastForestRegression\r\n18:54:08.8 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #   1 - Pipeline: ReplaceMissingValues=>Concatenate=>LightGbmRegression                  - Metric:    0,05 - Duration:     10 seconds\r\n18:54:08.8 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #   2 - Pipeline: ReplaceMissingValues=>Concatenate=>LightGbmRegression\r\n19:19:50.5 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #   2 - Pipeline: ReplaceMissingValues=>Concatenate=>SdcaRegression                      - Metric:    0,03 - Duration:     1542 seconds\r\n19:19:50.5 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #   3 - Pipeline: ReplaceMissingValues=>Concatenate=>SdcaRegression\r\n19:20:00.8 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #   3 - Pipeline: ReplaceMissingValues=>Concatenate=>FastTreeRegression                  - Metric:   -2,20 - Duration:     10 seconds\r\n19:20:00.8 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #   4 - Pipeline: ReplaceMissingValues=>Concatenate=>FastTreeRegression\r\n19:20:17.6 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #   4 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression    - Metric:    0,41 - Duration:     17 seconds\r\n19:20:17.6 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]  New Best Trial #   4 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression    - Metric:    0,41\r\n19:20:17.6 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #   5 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression\r\n19:20:32.2 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #   5 - Pipeline: ReplaceMissingValues=>Concatenate=>FastForestRegression                - Metric:    0,25 - Duration:     15 seconds\r\n19:20:32.2 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #   6 - Pipeline: ReplaceMissingValues=>Concatenate=>FastForestRegression\r\n19:21:19.0 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #   6 - Pipeline: ReplaceMissingValues=>Concatenate=>FastForestRegression                - Metric:    0,26 - Duration:     47 seconds\r\n19:21:19.0 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #   7 - Pipeline: ReplaceMissingValues=>Concatenate=>FastForestRegression\r\n19:21:41.8 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #   7 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression    - Metric:    0,39 - Duration:     23 seconds\r\n19:21:41.8 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #   8 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression\r\n19:21:46.4 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #   8 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression    - Metric:    0,37 - Duration:     5 seconds\r\n19:21:46.4 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #   9 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression\r\n19:22:04.2 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #   9 - Pipeline: ReplaceMissingValues=>Concatenate=>FastForestRegression                - Metric:    0,23 - Duration:     18 seconds\r\n19:22:04.2 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #  10 - Pipeline: ReplaceMissingValues=>Concatenate=>FastForestRegression\r\n19:22:08.9 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #  10 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression    - Metric:    0,41 - Duration:     5 seconds\r\n19:22:08.9 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #  11 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression\r\n19:22:26.4 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #  11 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression    - Metric:    0,31 - Duration:     18 seconds\r\n19:22:26.4 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #  12 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression\r\n19:22:31.2 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #  12 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression    - Metric:    0,36 - Duration:     5 seconds\r\n19:22:31.2 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #  13 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression\r\n19:22:58.5 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #  13 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression    - Metric:    0,35 - Duration:     27 seconds\r\n19:22:58.5 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #  14 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression\r\n19:23:04.3 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #  14 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression    - Metric:    0,40 - Duration:     6 seconds\r\n19:23:04.3 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #  15 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression\r\n19:23:20.4 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #  15 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression    - Metric:    0,24 - Duration:     16 seconds\r\n19:23:20.4 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #  16 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression\r\n19:23:37.6 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #  16 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression    - Metric:    0,41 - Duration:     17 seconds\r\n19:23:37.6 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #  17 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression\r\n19:23:46.7 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #  17 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression    - Metric:    0,39 - Duration:     9 seconds\r\n19:23:46.7 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #  18 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression\r\n19:24:14.6 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #  18 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression    - Metric:    0,43 - Duration:     28 seconds\r\n19:24:14.6 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]  New Best Trial #  18 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression    - Metric:    0,43\r\n19:24:14.6 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #  19 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression\r\n19:24:46.8 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #  19 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression    - Metric:    0,43 - Duration:     32 seconds\r\n19:24:46.8 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #  20 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression\r\n19:24:57.1 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #  20 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression    - Metric:    0,41 - Duration:     10 seconds\r\n19:24:57.1 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #  21 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression\r\n19:25:14.3 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #  21 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression    - Metric:    0,29 - Duration:     17 seconds\r\n19:25:14.3 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #  22 - Pipeline: ReplaceMissingValues=>Concatenate=>LbfgsPoissonRegressionRegression\r\n19:26:55.5 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #  22 - Pipeline: ReplaceMissingValues=>Concatenate=>FastForestRegression                - Metric:    0,27 - Duration:     101 seconds\r\n19:26:55.5 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #  23 - Pipeline: ReplaceMissingValues=>Concatenate=>FastForestRegression\r\n19:27:05.0 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0] Completed Trial #  23 - Pipeline: ReplaceMissingValues=>Concatenate=>LightGbmRegression                  - Metric:    0,13 - Duration:     10 seconds\r\n19:27:05.0 info: BBD.BodyMonitor.API.Controllers.MachineLearningController[0]   Running Trial #  24 - Pipeline: ReplaceMissingValues=>Concatenate=>LightGbmRegression\r\n[LightGBM] [Warning] bad allocation\r\n[LightGBM] [Warning] bad allocation\r\n[LightGBM] [Warning] bad allocation\r\n```\r\n\r\n**Additional context**\r\nMy project is open-source so both the source and the data are available. Let me know if you need them for testing.","Url":"https://github.com/dotnet/machinelearning/issues/6426","RelatedDescription":"Open issue \"LightGBM - repeating \"bad allocation\" warning during trial\" (#6426)"},{"Id":"1433524092","IsPullRequest":false,"CreatedAt":"2022-11-02T17:27:17","Actor":"andrasfuchs","Number":"6425","RawContent":null,"Title":"IMonitor.ReportRunningTrial reports incorrect pipeline","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11 [Version 10.0.22621.675]\r\n - ML.NET Version: ML.NT v2.0.0-preview.22525.3\r\n - .NET Version: .NET 6.0.9\r\n\r\n**Describe the bug**\r\nI created a custom class that implements the `Microsoft.ML.AutoML.IMonitor` to monitor my training. It's `ReportRunningTrial` method has the following simple implementation:\r\n`_logger.LogInformation($\"{\"Running\".PadLeft(9)} Trial #{setting.TrialId.ToString().PadLeft(4)} - Pipeline: {_pipeline.ToString(setting.Parameter).PadRight(70)}\");`\r\n\r\nThe other, `ReportBestTrial`, `ReportCompletedTrial` and `ReportFailTrial` methods look very similar.\r\n\r\nWhen I run my training it looks like that the `ReportRunningTrial` method's pipeline object wasn't updated, so it doesn't show the pipeline of the current trial.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create [a custom class](https://github.com/andrasfuchs/BioBalanceDetector/blob/master/Software/Source/BBDProto08/BBD.BodyMonitor/BBD.BodyMonitor.API/Models/MLContextLoggerMonitor.cs) that implements IMonitor\r\n2. Create an ML.NET experiment, and use that monitor class, like this:\r\n```\r\nvar experiment = mlContext.Auto().CreateExperiment();\r\n\r\nexperiment\r\n    .SetPipeline(pipeline)\r\n    .SetTrainingTimeInSeconds(trainingTimeInSeconds)\r\n    .SetRegressionMetric(RegressionMetric.RSquared, labelColumn: \"Label\")\r\n    .SetDataset(trainTestData.TrainSet, trainTestData.TestSet)\r\n    .SetMonitor(monitor)\r\n    .SetMaximumMemoryUsageInMegaByte(20 * 1024);\r\n```\r\n3. Make sure that you allow more than one type of (regression) algorithms\r\n4. Run the experiment\r\n5. Check the output: you will see that the `settings.TrialId` property values look good, but the `_pipeline.ToString(setting.Parameter)` returns an invalid value in the `ReportRunningTrial` method.\r\n\r\n**Expected behavior**\r\nThe `_pipeline.ToString(setting.Parameter)` should return the just-started trial's pipeline.\r\n\r\n**Screenshots, Code, Sample Projects**\r\n![image](https://user-images.githubusercontent.com/910321/199558208-64c383b5-0c10-4fc2-a5bd-79ddf07f7275.png)\r\n\r\n**Additional context**\r\nYou can see the problem on the screenshot:\r\nRunning Trial 0's pipeline looks like it was `FastTreeRegression`, but in reality it's `FastForestRegression`.\r\nRunning Trial 1's pipeline looks like it was `FastForestRegression`, but it's `FastTreeRegression`.\r\nRunning Trial 2's pipeline looks like it was `FastForestRegression`, but it's `LightGbmRegression`.\r\netc.\r\n\r\nEdit: After testing a little more I'm not sure anymore which methods of the `IMonitor` interface report the pipeline wrong, it is possible that `ReportRunningTrial` is the correct one and the others are incorrect.","Url":"https://github.com/dotnet/machinelearning/issues/6425","RelatedDescription":"Open issue \"IMonitor.ReportRunningTrial reports incorrect pipeline\" (#6425)"},{"Id":"1432243548","IsPullRequest":true,"CreatedAt":"2022-11-02T15:53:22","Actor":"ericstj","Number":"6423","RawContent":null,"Title":"Updates to official build pipeline","State":"closed","Body":"We were using the wrong values for the TSA tool (we were using Arcade's rather than our own).  This has been fixed and tested with https://dev.azure.com/dnceng/internal/_build/results?buildId=2034373&view=results.\r\n\r\nI also updated the link to nightly packages, now that we use Arcade templates / darc we're publishing to the dotnet-libraries feed.","Url":"https://github.com/dotnet/machinelearning/pull/6423","RelatedDescription":"Closed or merged PR \"Updates to official build pipeline\" (#6423)"},{"Id":"1432096595","IsPullRequest":false,"CreatedAt":"2022-11-01T21:04:20","Actor":"luisquintanilla","Number":"6422","RawContent":null,"Title":"Performance Tracking Issue","State":"open","Body":"## Summary\r\n\r\nThis work items is intended to track performance related improvements to ML.NET.\r\n\r\n## Work Items\r\n\r\n- [ ] IDataView batch support\r\n- [ ] #6360\r\n\r\n## Related Issues","Url":"https://github.com/dotnet/machinelearning/issues/6422","RelatedDescription":"Open issue \"Performance Tracking Issue\" (#6422)"},{"Id":"1432058763","IsPullRequest":false,"CreatedAt":"2022-11-01T20:35:30","Actor":"luisquintanilla","Number":"6421","RawContent":null,"Title":"Doc Updates Tracking Issue","State":"open","Body":"This issue is created to track documentation updates planned for the .NET docs repo.\r\n\r\n## Docs tracking issue\r\n\r\n- dotnet/docs#32112","Url":"https://github.com/dotnet/machinelearning/issues/6421","RelatedDescription":"Open issue \"Doc Updates Tracking Issue\" (#6421)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-11-13T03:30:24.131862Z","RunDurationInMilliseconds":543}