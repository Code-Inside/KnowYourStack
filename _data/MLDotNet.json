{"Data":{"GitHub":{"Issues":[{"Id":"3043442925","IsPullRequest":true,"CreatedAt":"2025-05-06T16:48:35","Actor":"jozkee","Number":"7459","RawContent":null,"Title":"Update to M.E.AI 9.4.3-preview.1.25230.7","State":"open","Body":"@stephentoub @jeffhandley @MackinnonBuck \r\n","Url":"https://github.com/dotnet/machinelearning/pull/7459","RelatedDescription":"Open PR \"Update to M.E.AI 9.4.3-preview.1.25230.7\" (#7459)"},{"Id":"3043098119","IsPullRequest":true,"CreatedAt":"2025-05-06T14:46:31","Actor":"feiyun0112","Number":"7458","RawContent":null,"Title":"ImageClassificationTrainer PredictedLabelColumnName bug when the name is not default ","State":"open","Body":"fix #7452 ","Url":"https://github.com/dotnet/machinelearning/pull/7458","RelatedDescription":"Open PR \"ImageClassificationTrainer PredictedLabelColumnName bug when the name is not default \" (#7458)"},{"Id":"3041045565","IsPullRequest":true,"CreatedAt":"2025-05-05T23:12:16","Actor":"michaelgsharp","Number":"7457","RawContent":null,"Title":"Dependency version updates","State":"open","Body":"Update most dependency versions.","Url":"https://github.com/dotnet/machinelearning/pull/7457","RelatedDescription":"Open PR \"Dependency version updates\" (#7457)"},{"Id":"3038608207","IsPullRequest":true,"CreatedAt":"2025-05-05T16:38:11","Actor":"dotnet-maestro[bot]","Number":"7455","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:c692823c-b896-437f-4f57-08dc434cc8f6)\n## From https://github.com/dotnet/arcade\n- **Subscription**: [c692823c-b896-437f-4f57-08dc434cc8f6](https://maestro.dot.net/subscriptions?search=c692823c-b896-437f-4f57-08dc434cc8f6)\n- **Build**: [20250503.1](https://dev.azure.com/dnceng/internal/_build/results?buildId=2701059)\n- **Date Produced**: May 3, 2025 8:23:26 AM UTC\n- **Commit**: [cdf9c563205c673b7df205e24564aa48dbc341c3](https://github.com/dotnet/arcade/commit/cdf9c563205c673b7df205e24564aa48dbc341c3)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25225.4 to 10.0.0-beta.25253.1][1]\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 10.0.0-beta.25225.4 to 10.0.0-beta.25253.1][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25225.4 to 10.0.0-beta.25253.1][1]\n  - **Microsoft.DotNet.SignTool**: [from 10.0.0-beta.25225.4 to 10.0.0-beta.25253.1][1]\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 10.0.0-beta.25225.4 to 10.0.0-beta.25253.1][1]\n  - **Microsoft.DotNet.XliffTasks**: [from 10.0.0-beta.25225.4 to 10.0.0-beta.25253.1][1]\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25225.4 to 10.0.0-beta.25253.1][1]\n\n[1]: https://github.com/dotnet/arcade/compare/5fb72aaffe...cdf9c56320\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:c692823c-b896-437f-4f57-08dc434cc8f6)\n\n","Url":"https://github.com/dotnet/machinelearning/pull/7455","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#7455)"},{"Id":"3011819767","IsPullRequest":false,"CreatedAt":"2025-05-05T16:21:25","Actor":"dgxhubbard","Number":"7446","RawContent":null,"Title":"Remove Newtonsoft.Json dependency and use System.Text.Json","State":"closed","Body":"Microsoft.ML uses Newtonsoft.Json, and when run without it  causes an exception. Then we need to import Newtonsoft.Json, that has been replaced by System.Text.Json.\nSystem.Text.Json is faster, why is Newtonsoft.Json still required","Url":"https://github.com/dotnet/machinelearning/issues/7446","RelatedDescription":"Closed issue \"Remove Newtonsoft.Json dependency and use System.Text.Json\" (#7446)"},{"Id":"3039371639","IsPullRequest":false,"CreatedAt":"2025-05-05T11:26:30","Actor":"dfengpo","Number":"7456","RawContent":null,"Title":"ML.NET how to handle data classification for extra-long texts？","State":"open","Body":"1. Now I have a large number of conversation recordings between staff and customers and get long text data in the following (original conversation example) format through ASR. \n2. The beginning of the sample data is the beginning and end time of each sentence, followed by the role, and the colon starts with the sentence content. \n3. During the reception of the staff throughout the day, we will have a dialogue with multiple groups of customers. Each batch of customers may be one person or multiple people.\n4. I need to train a 'session boundary detection' model with multiple dialogue sentence paragraphs as input.\n5. Predicts whether the current input dialog segment has a boundary point for the start or end of the session, and returns the start time and boundary label value of the corresponding sentence as 1 or 0. The model needs to be able to segment the dialogue between the staff and each customer.\n6. The following is an example of the data.\n11:03:42-11:03:42 ：Hello, do you need help?\n........\n........\n........\n12:03:42-12:03:42 ：Please walk slowly and welcome to the next visit.\n","Url":"https://github.com/dotnet/machinelearning/issues/7456","RelatedDescription":"Open issue \"ML.NET how to handle data classification for extra-long texts？\" (#7456)"},{"Id":"3031788650","IsPullRequest":false,"CreatedAt":"2025-05-02T16:35:06","Actor":"fanyang-mono","Number":"7450","RawContent":null,"Title":"Add GPT 4.1 to Tiktoken Tokenizer","State":"closed","Body":"\nI would like to see GPT 4.1 being added to Tiktoken Tokenizer.","Url":"https://github.com/dotnet/machinelearning/issues/7450","RelatedDescription":"Closed issue \"Add GPT 4.1 to Tiktoken Tokenizer\" (#7450)"},{"Id":"3034947059","IsPullRequest":true,"CreatedAt":"2025-05-02T16:35:05","Actor":"tarekgh","Number":"7453","RawContent":null,"Title":"Support Tiktoken Gpt-4.1 Model","State":"closed","Body":"Fixes https://github.com/dotnet/machinelearning/issues/7450","Url":"https://github.com/dotnet/machinelearning/pull/7453","RelatedDescription":"Closed or merged PR \"Support Tiktoken Gpt-4.1 Model\" (#7453)"},{"Id":"3035709253","IsPullRequest":false,"CreatedAt":"2025-05-02T10:40:00","Actor":"Laoujin","Number":"7454","RawContent":null,"Title":"DOCS: LightGbm in Linux Container (System.DllNotFoundException: Unable to load shared library 'lib_lightgbm' or one of its dependencies.)","State":"open","Body":"Hey!\n\nThere was an issue about this before: https://github.com/dotnet/machinelearning/issues/4600\n\nWhen using ML.NET and wanting to train a model with LightGBM, you get this error when deploying with Docker to a linux container.  \nI'm posting this here for posterity because I'm a total noob and spent 4-6 hours on this or something...\n\nThere are also docs at: https://github.com/dotnet/machinelearning/blob/main/docs/building/unix-instructions.md  \nBut they are somewhat outdated...\n\nThe error is:\n\n```\nUnhandled exception. System.DllNotFoundException: Unable to load shared library 'lib_lightgbm' or one of its dependencies.\nIn order to help diagnose loading problems, consider setting the LD_DEBUG environment variable:\nliblib_lightgbm: cannot open shared object file: No such file or directory\nat Microsoft.ML.Trainers.LightGbm.WrappedLightGbmInterface.DatasetCreateFromSampledColumn(IntPtr sampleValuePerColumn, IntPtr sampleIndicesPerColumn, Int32 numCol, Int32[] sampleNonZeroCntPerColumn, Int32 numSampleRow, Int32 numTotalRow, String parameters, IntPtr& ret)\n```\n\nThe solution is to build LightGBM in the container, which then failed with:\n\n```\nCMake 3.28 or higher is required.  You are running version 3.25.1\n```\n\nMy final Dockerfile:\n\n```docker\nFROM mcr.microsoft.com/dotnet/aspnet:8.0 as runtime\n\nRUN apt-get update\nRUN apt-get install git clang-3.9 libunwind8 curl libomp-dev -y\n\nRUN apt-get install python3-pip -y\nRUN pip install cmake --upgrade --break-system-packages\n#RUN cmake --version\n\nRUN git clone --recursive https://github.com/microsoft/LightGBM.git\nRUN cd LightGBM && mkdir build && cd build && cmake .. && make -j && make install\n#RUN find / -name 'lib_lightgbm.so' 2>/dev/null\n```\n\nThis is not great, see for example the `--break-system-packages` which would've been OK in the build step only. And I don't clean the stuff I no longer need at the end.\n\nThe `--break-system-packages`, for that ChatGPT said to do the following instead -- but I haven't tested it:\n\n```docker\nRUN apt-get update && apt-get install -y python3-venv\nRUN python3 -m venv /opt/venv\nENV PATH=\"/opt/venv/bin:$PATH\"\nRUN pip install --upgrade pip cmake\n```\n\n\n\nI tried to do this from a build step too.\n\n```\nFROM mcr.microsoft.com/dotnet/sdk:8.0 AS build\n# same code as above\nCOPY --from=build /usr/local/lib/lib_lightgbm.so /app\n```\n\nAnd maybe that could have worked if I did an extra copy of `libgomp.so`, (or maybe just an install of libomp-dev) but, as I said, 5 hours wasted.\n\n","Url":"https://github.com/dotnet/machinelearning/issues/7454","RelatedDescription":"Open issue \"DOCS: LightGbm in Linux Container (System.DllNotFoundException: Unable to load shared library 'lib_lightgbm' or one of its dependencies.)\" (#7454)"},{"Id":"3032685989","IsPullRequest":false,"CreatedAt":"2025-04-30T22:26:31","Actor":"Lavshyak","Number":"7452","RawContent":null,"Title":"ImageClassificationTrainer PredictedLabelColumnName bug when the name is not default","State":"open","Body":"**System Information (please complete the following information):**\n - OS & Version: Windows 11\n - ML.NET Version: ML.NET v4.0.2\n - .NET Version: .NET 9.0\n - Microsoft.ML.Vision 4.0.2\n - SciSharp.TensorFlow.Redist 2.3.1 (or Windows GPU 2.3.1)\n\n**Describe the bug**\nIf ImageClassificationTrainer.Options PredictedLabelColumnName = \"PredictedLabel\" (default), no bugs.\nBut if ImageClassificationTrainer.Options PredictedLabelColumnName = \"PredictedLabelKey\" (not default), i get exception \"Could not find input column 'PredictedLabelKey' (Parameter 'inputSchema')\" from KeyToValueMappingTransformer (inputColumnName: \"PredictedLabelKey\") when Fit().\n\n**Expected behavior**\nNo exception\n\n**Screenshots, Code, Sample Projects**\nProject with reproduction and xunit: https://github.com/Lavshyak/MLNetImageClassificationTrainerPredictedColumnNameProblem/blob/master/MLNetImageClassificationTrainerPredictedColumnNameProblem/UnitTest1.cs\n","Url":"https://github.com/dotnet/machinelearning/issues/7452","RelatedDescription":"Open issue \"ImageClassificationTrainer PredictedLabelColumnName bug when the name is not default\" (#7452)"},{"Id":"3032496632","IsPullRequest":false,"CreatedAt":"2025-04-30T20:58:28","Actor":"MoodieG","Number":"7451","RawContent":null,"Title":"[Question] Is it possible to create a tokenizer from a config file?","State":"open","Body":"Hey,\n\nIs it possible to create a tokenizer from a config file similar to the [rust library tokenizers](https://docs.rs/crate/tokenizers/latest). Example code in rust:\n\n```\nuse tokenizers::Tokenizer;\nuse clap::Parser;\n\n/// Simple CLI to tokenize input text using a Hugging Face tokenizer.json\n#[derive(Parser, Debug)]\n#[command(author, version, about, long_about = None)]\nstruct Args {\n    /// Path to tokenizer.json\n    #[arg(short, long)]\n    tokenizer: String,\n\n    /// Text to tokenize\n    #[arg(short, long)]\n    text: String,\n}\n\nfn main() {\n    let args = Args::parse();\n\n    // Load tokenizer\n    let tokenizer = Tokenizer::from_file(&args.tokenizer)\n        .expect(\"Failed to load tokenizer.json\");\n\n    // Encode text\n    let encoding = tokenizer.encode(args.text, true)\n        .expect(\"Failed to encode text\");\n\n    // Output token IDs\n    println!(\"{:?}\", encoding.get_ids());\n}\n```\n\nThe config file has all the stages and parameters configured, such as added tokens, normalizers, pre_tokenizers, vocab, merges and so on.  \n\nAt first glance this does not seem possible in `Microsoft.ML.Tokenizers`. It may be possible to create the tokenizer in code with the correct configuration using this [Create method](https://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.tokenizers.bpetokenizer.create?view=ml-dotnet-preview#microsoft-ml-tokenizers-bpetokenizer-create(system-string-system-string-microsoft-ml-tokenizers-pretokenizer-microsoft-ml-tokenizers-normalizer-system-collections-generic-ireadonlydictionary((system-string-system-int32))-system-string-system-string-system-string-system-boolean)) however it is not clear as the config has an array of normalizers and pretokenizers while the create method only expects one of each. Seems like I will need to implement my own normalizers and pretokenizers if I were to move forward with the `Microsoft.ML.Tokenizers`. I am new to this domain, so just wanted to confirm with experts if this is the case or if there are any suggestions. \n\nThank you. ","Url":"https://github.com/dotnet/machinelearning/issues/7451","RelatedDescription":"Open issue \"[Question] Is it possible to create a tokenizer from a config file?\" (#7451)"},{"Id":"3008739816","IsPullRequest":true,"CreatedAt":"2025-04-28T19:44:18","Actor":"luisquintanilla","Number":"7445","RawContent":null,"Title":"Update Tokenizer conceptual doc link in package docs","State":"closed","Body":"Replaces placeholder with link to tokens documentation in Learn docs.\r\n\r\nWe are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [X] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [X] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7445","RelatedDescription":"Closed or merged PR \"Update Tokenizer conceptual doc link in package docs\" (#7445)"},{"Id":"3018328490","IsPullRequest":false,"CreatedAt":"2025-04-28T15:55:02","Actor":"dgxhubbard","Number":"7448","RawContent":null,"Title":"Remove Newtonsoft.Json dependency and use System.Text.Json","State":"closed","Body":"**System Information (please complete the following information):**\n - Windows 11\n - ML.NET Version: 4.0.2\n - .NET Version: 8\n\n**Describe the bug**\nWhen running with ML.Net and trying to run model generation method, get the error that \nNewtonSoft.Json version 13.0.0.0 is required. I am using 13.0.3. Version 13.0.0 cannot be downloaded.\nIs there a way to fix this. One way I would suggest is to replace NewtonSoft.Json with System.Text.Json, because\nit is faster.\n\n**To Reproduce**\nSteps to reproduce the behavior:\n1. Go to '...'\n2. Click on '....'\n3. Scroll down to '....'\n4. See error\n\n**Expected behavior**\nBeing able to run my code\n\n","Url":"https://github.com/dotnet/machinelearning/issues/7448","RelatedDescription":"Closed issue \"Remove Newtonsoft.Json dependency and use System.Text.Json\" (#7448)"},{"Id":"3022205862","IsPullRequest":false,"CreatedAt":"2025-04-26T18:37:06","Actor":"Lavshyak","Number":"7449","RawContent":null,"Title":"Add docs (tutorial) about transfer image from RAM to pipeline (model)","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\nWhen I started learning ML.NET, it was hard to understand how to adequately transfer an image from RAM (byte[], SKImage, MLImage) to a pipeline (model) (which automatically resizes the image and classifies it). I couldn't find this in the documentation, and I couldn't find any clear ways on the Internet.\n\n**Describe the solution you'd like**\nMaybe you could add information about this to the documentation?\nI have some code that just needs to be adapted for use in documentation: https://github.com/Lavshyak/MLNetImageFromRamStrange/tree/master/ImageFromRamStrange\nAnd it's worth mentioning, it was a non-intuitive moment: https://github.com/Lavshyak/MLNetImageFromRamStrange/blob/788d67d05e0ebb00d4db0753ac3298a9507a5805/ImageFromRamStrange/DataModels.cs#L12\nAnd may be you can copy some code from there: https://github.com/Lavshyak/MLNetImageDisposingProblem/blob/master/MLNetImageDisposingProblem/Reproduction.cs\n\nAnd don't forget about that): https://github.com/dotnet/machinelearning/issues/7444","Url":"https://github.com/dotnet/machinelearning/issues/7449","RelatedDescription":"Open issue \"Add docs (tutorial) about transfer image from RAM to pipeline (model)\" (#7449)"},{"Id":"3015910221","IsPullRequest":false,"CreatedAt":"2025-04-24T04:09:23","Actor":"richlander","Number":"7447","RawContent":null,"Title":"Legacy images need to be updated","State":"open","Body":"This repo has references to CentOS 8, Ubuntu 18.04, and Ubuntu 20.04. We don't support any of those versions any longer.\n\nPlease consider moving to CentOS Stream 10 and Ubuntu 24.04.\n\nWe don't produce the `mlnet` images any longer. It would be good to understand what the need is for that image flavor.\n\n@ilyas1974 @ericstj ","Url":"https://github.com/dotnet/machinelearning/issues/7447","RelatedDescription":"Open issue \"Legacy images need to be updated\" (#7447)"},{"Id":"2989435708","IsPullRequest":true,"CreatedAt":"2025-04-23T16:52:13","Actor":"michaelgsharp","Number":"7443","RawContent":null,"Title":"update cmake mac","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/7443","RelatedDescription":"Closed or merged PR \"update cmake mac\" (#7443)"},{"Id":"2975056786","IsPullRequest":false,"CreatedAt":"2025-04-21T17:27:53","Actor":"geoionescu","Number":"7436","RawContent":null,"Title":"NLP Question Answering - How to use another pretrained model?","State":"closed","Body":"Hello everyone,\n\nPlaying with the Question Answering scenario, I noticed that you're using [pretrained_Roberta_encoder.tsm](https://aka.ms/mlnet-resources/models/pretrained_Roberta_encoder.tsm) file; I guess this is the English model (but cannot tell for sure).\n\nMy question is twofold:\n1. What is that tsm file (I didn't see any tsm files in the 'usual' models from Hugging Face, for example)\n2. How can one produce a tsm file from a RoBERTa model (e.g. the one from here: https://huggingface.co/FacebookAI/xlm-roberta-large)?","Url":"https://github.com/dotnet/machinelearning/issues/7436","RelatedDescription":"Closed issue \"NLP Question Answering - How to use another pretrained model?\" (#7436)"},{"Id":"2975058970","IsPullRequest":false,"CreatedAt":"2025-04-21T17:25:10","Actor":"geoionescu","Number":"7437","RawContent":null,"Title":"NLP Question Answering - Creating a pretrained RoBERTa model from scratch.","State":"closed","Body":"I know this is a huge task, but I'll ask it anyhow.\n\nPresuming I do have a large text corpus for a language, how does one train a new model from scratch?\nAny current code doing this in the existing codebase, or should I try to search for [some](https://medium.com/analytics-vidhya/create-a-tokenizer-and-train-a-huggingface-roberta-model-from-scratch-f3ed1138180c) [python](https://huggingface.co/blog/how-to-train) [sources](https://github.com/sv-v5/train-roberta-ua) to do that?","Url":"https://github.com/dotnet/machinelearning/issues/7437","RelatedDescription":"Closed issue \"NLP Question Answering - Creating a pretrained RoBERTa model from scratch.\" (#7437)"},{"Id":"2980968470","IsPullRequest":true,"CreatedAt":"2025-04-21T17:01:12","Actor":"jozkee","Number":"7439","RawContent":null,"Title":"Update to M.E.AI 9.4.0-preview.1.25207.5","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/7439","RelatedDescription":"Closed or merged PR \"Update to M.E.AI 9.4.0-preview.1.25207.5\" (#7439)"},{"Id":"2993059874","IsPullRequest":false,"CreatedAt":"2025-04-14T13:19:49","Actor":"Lavshyak","Number":"7444","RawContent":null,"Title":"MLImage disposes in some cases after CreateEnumerable .ToArray() if there is ResizeImages in the pipeline","State":"open","Body":"**System Information:**\n - OS & Version: Windows 11\n - ML.NET Version: ML.NET v4.0.2\n - .NET Version: .NET 9.0\n\n**Describe the bug**\nIn some cases MLImage disposes after CreateEnumerable .ToArray() if there is ResizeImages in the pipeline.\nIf SourceImage size == ResizedImage size, after CreateEnumerable .ToArray() SourceImage disposes.\nIf SourceImage size != ResizedImage size, after CreateEnumerable .ToArray() SourceImage doesn't dispose.\n\n**To Reproduce**\nProject with xUnit and reproduction:\nhttps://github.com/Lavshyak/MLNetImageDisposingProblem\n\n**Expected behavior**\nProvide a choice whether to dispose or not. If not, then SourceImage doesn't dispose. \nOr just never dispose.\nOr just write about it in red text in the documentation.\n\n**Screenshots, Code, Sample Projects**\nProject with xUnit and reproduction:\nhttps://github.com/Lavshyak/MLNetImageDisposingProblem\n","Url":"https://github.com/dotnet/machinelearning/issues/7444","RelatedDescription":"Open issue \"MLImage disposes in some cases after CreateEnumerable .ToArray() if there is ResizeImages in the pipeline\" (#7444)"},{"Id":"2984505791","IsPullRequest":false,"CreatedAt":"2025-04-10T07:13:52","Actor":"Lavshyak","Number":"7442","RawContent":null,"Title":"Do not validate MLImage height and width in mlContext.Transforms.ExtractPixels if no values ​​are specified in ImageTypeAttribute","State":"closed","Body":"**Is your feature request related to a problem? Please describe.**\nWhen i use mlContext.Transforms.LoadImages, mlContext.Transforms.ResizeImages and mlContext.Transforms.ExtractPixels, it is not need to specify ResizedImage property and ImageTypeAttribute with height and width:\n```\n[ImageType(Constants.Height, Constants.Width)]\npublic MLImage ResizedImage { get; set; } = null!;\n```\nI just specify height and width in mlContext.Transforms.ResizeImages, i take height and width from appsettings.json.\n\nBut when i want to load image from RAM, i exclude mlContext.Transforms.LoadImages and mlContext.Transforms.ResizeImages from pipeline, i create property ResizedImage in my input class and create instanse of MLImage myself. And mlContext.Transforms.ExtractPixels throw exception if i did not specify ImageTypeAttribute with height and width.\nSo if i want to use another model (with another image sizes), it is not enough to simply change the configuration, i also need to rebuild my project with different Constants.Height and Constants.Width.\n\n**Describe the solution you'd like**\nDo not do this `Host.Check(src.Height == height && src.Width == width);` in 349 line in ImagePixelExtractor.cs (in GetGetterCore in Mapper in ImagePixelExtractingTransformer) if height and width are not specified in ImageTypeAttribute.\nAnd do not do this in other classes in the same situation.\n","Url":"https://github.com/dotnet/machinelearning/issues/7442","RelatedDescription":"Closed issue \"Do not validate MLImage height and width in mlContext.Transforms.ExtractPixels if no values ​​are specified in ImageTypeAttribute\" (#7442)"},{"Id":"2981989932","IsPullRequest":false,"CreatedAt":"2025-04-09T08:23:01","Actor":"williamlzw","Number":"7441","RawContent":null,"Title":"Phi3Model support phi4 and phi4-mini","State":"open","Body":"Phi3Model support phi4 and phi4-mini\nhttps://github.com/dotnet/machinelearning/blob/main/src/Microsoft.ML.GenAI.Phi/Module/Phi3Model.cs","Url":"https://github.com/dotnet/machinelearning/issues/7441","RelatedDescription":"Open issue \"Phi3Model support phi4 and phi4-mini\" (#7441)"},{"Id":"2981986536","IsPullRequest":false,"CreatedAt":"2025-04-09T08:21:38","Actor":"williamlzw","Number":"7440","RawContent":null,"Title":"Phi3Tokenizer Chinese garbled code","State":"open","Body":"Microsoft.ML.GenAI.Phi  0.23.0-preview.1.25127.4\nMicrosoft.ML.Tokenizers  2.0.0-preview.1.25127.4\nMicrosoft.ML.Tokenizers.Data.Cl100kBase 2.0.0-preview.1.25127.4\n\n```\npublic async static void Test2()\n{\n    string device = \"cuda\";\n    var weightFolder = @\"D:\\model\\Phi-3-mini-128k-instruct\";\n    var model = Phi3ForCasualLM.FromPretrained(weightFolder, \"config.json\", layersOnTargetDevice: -1, quantizeToInt4: true, targetDevice: device);\n\n    var modelPath = Path.Join(weightFolder, \"tokenizer.model\");\n    var tokenizer = Phi3TokenizerHelper.FromPretrained(modelPath);\n\n    var pipeline = new CausalLMPipeline<Tokenizer, Phi3ForCasualLM>(tokenizer, model, device);\n    var client = new Phi3CausalLMChatClient(pipeline);\n    var task = \"\"\"\n        你能讲一个有趣的笑话吗?\n        \"\"\";\n   \n    List<ChatMessage> _chatHistory = new();\n    _chatHistory.Add(new ChatMessage(ChatRole.System, \"你是一个助手,用中文回答用户的问题\"));\n    _chatHistory.Add(new ChatMessage(ChatRole.User, task));\n    var options = new ChatOptions\n    {\n        StopSequences = [\"<|end_of_text|>\"],//phi3\n        AdditionalProperties = new() { { \"max_length\", 2048 } },\n    };\n\n    await foreach (var response in client.GetStreamingResponseAsync(_chatHistory, options))\n    {\n        Console.Write(response.Text);\n    }\n\n    Console.WriteLine();\n    Console.WriteLine(\"End!\");\n    \n}\n```\noutput:\n当然可以。有一位老???问一个小???：“???子们","Url":"https://github.com/dotnet/machinelearning/issues/7440","RelatedDescription":"Open issue \"Phi3Tokenizer Chinese garbled code\" (#7440)"},{"Id":"2967087060","IsPullRequest":true,"CreatedAt":"2025-04-07T17:54:08","Actor":"carlossanlop","Number":"7433","RawContent":null,"Title":"Update maintenance-dependencies","State":"closed","Body":"These are the latest package versions.\r\n\r\n@michaelgsharp These dependencies are weird enough that I think we should have them separated from the rest. But please let me know if you prefer to have a single property group and have the maintenance-packages sections divided by comments instead.","Url":"https://github.com/dotnet/machinelearning/pull/7433","RelatedDescription":"Closed or merged PR \"Update maintenance-dependencies\" (#7433)"},{"Id":"2970920152","IsPullRequest":true,"CreatedAt":"2025-04-07T16:41:08","Actor":"GrabYourPitchforks","Number":"7434","RawContent":null,"Title":"Fix incorrect IntPtr null check in FftUtils","State":"closed","Body":"Caught by prototype CodeQL rule.\r\n\r\nWe should not compare an IntPtr value to null since it will always result as _not equal_. We should compare to `IntPtr.Zero` instead.","Url":"https://github.com/dotnet/machinelearning/pull/7434","RelatedDescription":"Closed or merged PR \"Fix incorrect IntPtr null check in FftUtils\" (#7434)"},{"Id":"2975615732","IsPullRequest":false,"CreatedAt":"2025-04-07T04:52:41","Actor":"superichmann","Number":"7438","RawContent":null,"Title":"Expose all LightGbm Metrics","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\nno\n\n**Describe the solution you'd like**\nAdd all metrics as stated [here](https://lightgbm.readthedocs.io/en/latest/Parameters.html#metric)\n\n\n**Describe alternatives you've considered**\nmigrate to python\n\n**Additional context**\nAdd any other context or screenshots about the feature request here.\n","Url":"https://github.com/dotnet/machinelearning/issues/7438","RelatedDescription":"Open issue \"Expose all LightGbm Metrics\" (#7438)"},{"Id":"2974806364","IsPullRequest":false,"CreatedAt":"2025-04-06T08:48:54","Actor":"superichmann","Number":"7435","RawContent":null,"Title":"FastTreeRegressionTrainer leaves memory allocation happens before actually yes knowing how many leaves are actually yes needed by the model","State":"open","Body":"my purpose is to allow the model to create as many leaves as it wants. is there a way to achieve that without allocating 8gb of memory for each tree trainer?\n```\nvar options = new FastTreeRegressionTrainer.Options\n{\nNumberOfLeaves=int.MaxValue\n}\n```\n```\nSystem.OutOfMemoryException: Array dimensions exceeded supported range.\n   at Microsoft.ML.Trainers.FastTree.DocumentPartitioning..ctor(Int32 numDocuments, Int32 maxLeaves)\n   at Microsoft.ML.Trainers.FastTree.TreeLearner..ctor(Dataset trainData, Int32 numLeaves)\n   at Microsoft.ML.Trainers.FastTree.LeastSquaresRegressionTreeLearner..ctor(Dataset trainData, Int32 numLeaves, Int32 minDocsInLeaf, Double entropyCoefficient, Double featureFirstUsePenalty, Double featureReusePenalty, Double softmaxTemperature, Int32 histogramPoolSize, Int32 randomSeed, Double splitFraction, Boolean filterZeros, Boolean allowEmptyTrees, Double gainConfidenceLevel, Int32 maxCategoricalGroupsPerNode, Int32 maxCategoricalSplitPointPerNode, Double bsrMaxTreeOutput, IParallelTraining parallelTraining, Double minDocsPercentageForCategoricalSplit, Bundle bundling, Int32 minDocsForCategoricalSplit, Double bias, IHost host)\n   at Microsoft.ML.Trainers.FastTree.BoostingFastTreeTrainerBase`3.ConstructTreeLearner(IChannel ch)\n   at Microsoft.ML.Trainers.FastTree.BoostingFastTreeTrainerBase`3.ConstructOptimizationAlgorithm(IChannel ch)\n   at Microsoft.ML.Trainers.FastTree.FastTreeRegressionTrainer.ConstructOptimizationAlgorithm(IChannel ch)\n   at Microsoft.ML.Trainers.FastTree.FastTreeTrainerBase`3.Initialize(IChannel ch)\n   at Microsoft.ML.Trainers.FastTree.FastTreeTrainerBase`3.TrainCore(IChannel ch)\n   at Microsoft.ML.Trainers.FastTree.FastTreeRegressionTrainer.TrainModelCore(TrainContext context)\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.Fit(IDataView input)\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\n```","Url":"https://github.com/dotnet/machinelearning/issues/7435","RelatedDescription":"Open issue \"FastTreeRegressionTrainer leaves memory allocation happens before actually yes knowing how many leaves are actually yes needed by the model\" (#7435)"},{"Id":"2964657904","IsPullRequest":true,"CreatedAt":"2025-04-01T21:56:21","Actor":"michaelgsharp","Number":"7432","RawContent":null,"Title":"Build analysis testing","State":"open","Body":"additional logging and forced failed test.","Url":"https://github.com/dotnet/machinelearning/pull/7432","RelatedDescription":"Open PR \"Build analysis testing\" (#7432)"},{"Id":"2962450528","IsPullRequest":true,"CreatedAt":"2025-04-01T19:46:07","Actor":"michaelgsharp","Number":"7431","RawContent":null,"Title":"Fixed light gbm update","State":"closed","Body":"Fixes #7320.\r\nFixes #7045.\r\nUpdated light GBM to the latest version.","Url":"https://github.com/dotnet/machinelearning/pull/7431","RelatedDescription":"Closed or merged PR \"Fixed light gbm update\" (#7431)"},{"Id":"2953234386","IsPullRequest":false,"CreatedAt":"2025-03-31T17:21:25","Actor":"andreak-sdl","Number":"7430","RawContent":null,"Title":"Known vulnerability in LightGBM (CVE-2024-43598)","State":"closed","Body":"There is a known vulnerability in LightGBM <= 4.5.0 (see microsoft/LightGBM#6750), which is fixed with version 4.6.0. As it seems that the current version of Microsoft.ML.LightGbm is not compatible with newer versions of LightGBM (see https://github.com/dotnet/machinelearning/issues/7320), it would be good to handle this ticket with high priority. ","Url":"https://github.com/dotnet/machinelearning/issues/7430","RelatedDescription":"Closed issue \"Known vulnerability in LightGBM (CVE-2024-43598)\" (#7430)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-05-07T03:30:17.7603181Z","RunDurationInMilliseconds":480}