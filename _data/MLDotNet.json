{"Data":{"GitHub":{"Issues":[{"Id":"1157792092","IsPullRequest":true,"CreatedAt":"2022-03-02T23:21:02","Actor":"LittleLittleCloud","Number":"6108","RawContent":null,"Title":"Add serializble pipeline && titanic example for sweepable api","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n\r\n#5992 ","Url":"https://github.com/dotnet/machinelearning/pull/6108","RelatedDescription":"Open PR \"Add serializble pipeline && titanic example for sweepable api\" (#6108)"},{"Id":"1157788861","IsPullRequest":true,"CreatedAt":"2022-03-02T23:19:55","Actor":"LittleLittleCloud","Number":"6107","RawContent":null,"Title":"U/xiaoyun/add searializable pipeline","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6107","RelatedDescription":"Closed or merged PR \"U/xiaoyun/add searializable pipeline\" (#6107)"},{"Id":"1155668396","IsPullRequest":true,"CreatedAt":"2022-03-02T22:23:21","Actor":"ericstj","Number":"6104","RawContent":null,"Title":"Updating to build '20220222.7' of 'https://github.com/dotnet/arcade'","State":"closed","Body":"Darc update of \".NET 6 Eng\" channel","Url":"https://github.com/dotnet/machinelearning/pull/6104","RelatedDescription":"Closed or merged PR \"Updating to build '20220222.7' of 'https://github.com/dotnet/arcade'\" (#6104)"},{"Id":"1140503013","IsPullRequest":true,"CreatedAt":"2022-03-02T22:15:52","Actor":"LittleLittleCloud","Number":"6090","RawContent":null,"Title":"Add source generator to generate search space class for all trainers/transformers","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\n#5993 \r\n\r\nThis PR adds a source generator that generates `SearchSpace` classes for all estimators used in AutoML.Net and associated search space configurations which is in Json format.\r\n\r\nThe generated `SearchSpace` class looks like this (following is SearchSpace for LGBM)\r\n\r\n``` csharp\r\n\r\nusing Microsoft.ML.SearchSpace;\r\nusing OptionAttribute = Microsoft.ML.SearchSpace.OptionAttribute;\r\nusing ColorsOrder = Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorsOrder;\r\nusing ColorBits = Microsoft.ML.Transforms.Image.ImagePixelExtractingEstimator.ColorBits;\r\nusing ResizingKind = Microsoft.ML.Transforms.Image.ImageResizingEstimator.ResizingKind;\r\nusing Anchor = Microsoft.ML.Transforms.Image.ImageResizingEstimator.Anchor;\r\n\r\n#nullable enable\r\n\r\nnamespace Microsoft.ML.AutoML.CodeGen\r\n{\r\n    public class LgbmOption\r\n    {\r\n        [Range((int)4, (int)32768, init: (int)4, logBase: true)]\r\n        [System.Diagnostics.CodeAnalysis.SuppressMessage(\"Declaration\", \"MSML_NoInstanceInitializers:No initializers on instance fields or properties\")]\r\n        public int NumberOfLeaves {get; set;} = 4;\r\n        [Range((int)20, (int)1024, init: (int)20, logBase: true)]\r\n        [System.Diagnostics.CodeAnalysis.SuppressMessage(\"Declaration\", \"MSML_NoInstanceInitializers:No initializers on instance fields or properties\")]\r\n        public int MinimumExampleCountPerLeaf {get; set;} = 20;\r\n        [Range((double)2E-10, (double)1, init: (double)1, logBase: true)]\r\n        [System.Diagnostics.CodeAnalysis.SuppressMessage(\"Declaration\", \"MSML_NoInstanceInitializers:No initializers on instance fields or properties\")]\r\n        public double LearningRate {get; set;} = 1;\r\n        [Range((int)4, (int)32768, init: (int)4, logBase: true)]\r\n        [System.Diagnostics.CodeAnalysis.SuppressMessage(\"Declaration\", \"MSML_NoInstanceInitializers:No initializers on instance fields or properties\")]\r\n        public int NumberOfTrees {get; set;} = 4;\r\n        [Range((double)2E-10, (double)1, init: (double)1, logBase: true)]\r\n        [System.Diagnostics.CodeAnalysis.SuppressMessage(\"Declaration\", \"MSML_NoInstanceInitializers:No initializers on instance fields or properties\")]\r\n        public double SubsampleFraction {get; set;} = 1;\r\n        [Range((int)8, (int)1024, init: (int)256, logBase: true)]\r\n        [System.Diagnostics.CodeAnalysis.SuppressMessage(\"Declaration\", \"MSML_NoInstanceInitializers:No initializers on instance fields or properties\")]\r\n        public int MaximumBinCountPerFeature {get; set;} = 256;\r\n        [Range((double)2E-10, (double)1, init: (double)1, logBase: false)]\r\n        [System.Diagnostics.CodeAnalysis.SuppressMessage(\"Declaration\", \"MSML_NoInstanceInitializers:No initializers on instance fields or properties\")]\r\n        public double FeatureFraction {get; set;} = 1;\r\n        [Range((double)2E-10, (double)1, init: (double)2E-10, logBase: true)]\r\n        [System.Diagnostics.CodeAnalysis.SuppressMessage(\"Declaration\", \"MSML_NoInstanceInitializers:No initializers on instance fields or properties\")]\r\n        public double L1Regularization {get; set;} = 2E-10;\r\n        [Range((double)2E-10, (double)1, init: (double)1, logBase: true)]\r\n        [System.Diagnostics.CodeAnalysis.SuppressMessage(\"Declaration\", \"MSML_NoInstanceInitializers:No initializers on instance fields or properties\")]\r\n        public double L2Regularization {get; set;} = 1;\r\n        \r\n        [System.Diagnostics.CodeAnalysis.SuppressMessage(\"Declaration\", \"MSML_NoInstanceInitializers:No initializers on instance fields or properties\")]\r\n        public string LabelColumnName {get; set;} = \"Label\";\r\n        \r\n        [System.Diagnostics.CodeAnalysis.SuppressMessage(\"Declaration\", \"MSML_NoInstanceInitializers:No initializers on instance fields or properties\")]\r\n        public string FeatureColumnName {get; set;} = \"Feature\";\r\n        \r\n        public string? ExampleWeightColumnName {get; set;}\r\n\r\n    }\r\n}\r\n```","Url":"https://github.com/dotnet/machinelearning/pull/6090","RelatedDescription":"Closed or merged PR \"Add source generator to generate search space class for all trainers/transformers\" (#6090)"},{"Id":"1157216714","IsPullRequest":false,"CreatedAt":"2022-03-02T13:40:53","Actor":"TusharMalap","Number":"6106","RawContent":null,"Title":"is it possible to perform prediction on output of multiclass-classification prediction?","State":"open","Body":"hierarchical classification in ml.net. \r\nLike I want to predict like this \r\nAnimal- -cat--breed\r\n  \r\n","Url":"https://github.com/dotnet/machinelearning/issues/6106","RelatedDescription":"Open issue \"is it possible to perform prediction on output of multiclass-classification prediction?\" (#6106)"},{"Id":"1145809718","IsPullRequest":true,"CreatedAt":"2022-03-02T00:59:11","Actor":"dotnet-maestro[bot]","Number":"6095","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 97926d79-6b8b-4d32-c8db-08d9d479971c\r\n- **Build**: 20220224.4\r\n- **Date Produced**: February 24, 2022 11:36:45 PM UTC\r\n- **Commit**: f7136626d0109856df867481219eb7366951985d\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 7.0.0-beta.22111.10 to 7.0.0-beta.22124.4][2]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22111.10 to 7.0.0-beta.22124.4][2]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 7.0.0-beta.22111.10 to 7.0.0-beta.22124.4][2]\r\n  - **Microsoft.DotNet.SignTool**: [from 7.0.0-beta.22111.10 to 7.0.0-beta.22124.4][2]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22111.10 to 7.0.0-beta.22124.4][2]\r\n\r\n[2]: https://github.com/dotnet/arcade/compare/ff6cc4e...f713662\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6095","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6095)"},{"Id":"1154083361","IsPullRequest":false,"CreatedAt":"2022-03-02T00:50:55","Actor":"AbhayGaur","Number":"6102","RawContent":null,"Title":"Analysis of score given as output by binary classification algorithms","State":"closed","Body":"Binary classification algorithm like Lbfgs, fasttree etc produce score generated by trained model for test cases but the range of score seems to be often very wide resulting in probability either showing as very close to 0 or very close to 1. Is there a way that range of the score function can be estimated before evaluating the results. Really helps with scenarios where threshold can be a variable and a custom calibration needs to be used. \r\n","Url":"https://github.com/dotnet/machinelearning/issues/6102","RelatedDescription":"Closed issue \"Analysis of score given as output by binary classification algorithms\" (#6102)"},{"Id":"1150097318","IsPullRequest":false,"CreatedAt":"2022-03-02T00:39:48","Actor":"TusharMalap","Number":"6097","RawContent":null,"Title":"How can perform percentage predication in ml.net? ","State":"closed","Body":"I want my features percentage on targeted variable/label.\r\nFor example Movie -is my targeted variable and I want to predict genre of that movie like Romantic=99.98% Comedy=00.01% thriller=00.01\r\ni.e.. Romantic + comedy + Thriller =100%\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6097","RelatedDescription":"Closed issue \"How can perform percentage predication in ml.net? \" (#6097)"},{"Id":"1155843983","IsPullRequest":true,"CreatedAt":"2022-03-02T00:01:36","Actor":"LittleLittleCloud","Number":"6105","RawContent":null,"Title":"enable final newline for json file","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6105","RelatedDescription":"Closed or merged PR \"enable final newline for json file\" (#6105)"},{"Id":"1154790712","IsPullRequest":true,"CreatedAt":"2022-03-01T07:40:38","Actor":"michaelgsharp","Number":"6103","RawContent":null,"Title":"New build pools for official builds","State":"closed","Body":"New build pools for official build and any changes required for that.\r\n\r\nUpdated the api compat to the latest version.","Url":"https://github.com/dotnet/machinelearning/pull/6103","RelatedDescription":"Closed or merged PR \"New build pools for official builds\" (#6103)"},{"Id":"1150989358","IsPullRequest":true,"CreatedAt":"2022-02-26T00:23:03","Actor":"jeffhandley","Number":"6101","RawContent":null,"Title":"Test PR board automation","State":"closed","Body":"A blank line was added to create a test PR for testing our project board automation. Please ignore this PR.","Url":"https://github.com/dotnet/machinelearning/pull/6101","RelatedDescription":"Closed or merged PR \"Test PR board automation\" (#6101)"},{"Id":"1150979343","IsPullRequest":false,"CreatedAt":"2022-02-26T00:21:28","Actor":"jeffhandley","Number":"6100","RawContent":null,"Title":"Testing issue triage automation","State":"closed","Body":"This issue is being used to test the issue triage automation that has been added to the repository. Please ignore.","Url":"https://github.com/dotnet/machinelearning/issues/6100","RelatedDescription":"Closed issue \"Testing issue triage automation\" (#6100)"},{"Id":"1150933845","IsPullRequest":true,"CreatedAt":"2022-02-25T22:29:34","Actor":"colombod","Number":"6099","RawContent":null,"Title":"create a data frame from tabular data resource","State":"open","Body":"Adding api to create DataFrame objects from .NET Interactive tabular data resource","Url":"https://github.com/dotnet/machinelearning/pull/6099","RelatedDescription":"Open PR \"create a data frame from tabular data resource\" (#6099)"},{"Id":"1149981150","IsPullRequest":true,"CreatedAt":"2022-02-25T22:15:01","Actor":"jeffhandley","Number":"6096","RawContent":null,"Title":"Add the generated fabricbot config","State":"closed","Body":"Based on dotnet/runtime#65875. This adds a fabricbot config to the repo to set up automation for issue and PR boards.","Url":"https://github.com/dotnet/machinelearning/pull/6096","RelatedDescription":"Closed or merged PR \"Add the generated fabricbot config\" (#6096)"},{"Id":"1150824752","IsPullRequest":false,"CreatedAt":"2022-02-25T20:12:06","Actor":"gjiremadzeBECKMAN","Number":"6098","RawContent":null,"Title":"Protobuf Parsing Failed when loading Keras model with custom layer","State":"open","Body":"Hey all I'm having an error when trying to load a keras model with a custom layer. When trying to call Transforms.ApplyOnnxModel(modelFile) I'm receiving an exception:\r\n\r\nMicrosoft.ML.OnnxRuntime.OnnxRuntimeException: '[ErrorCode:InvalidProtobuf] Protobuf parsing failed.'\r\n\r\nHas anyone tried loading models with custom layers with onnxruntime and have you had any success?\r\n\r\nDoes anyone know which ONNX opsets are supported in the current ML.NET? Or where I can find this information?\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6098","RelatedDescription":"Open issue \"Protobuf Parsing Failed when loading Keras model with custom layer\" (#6098)"},{"Id":"1143799501","IsPullRequest":true,"CreatedAt":"2022-02-18T23:41:23","Actor":"LittleLittleCloud","Number":"6093","RawContent":null,"Title":"Update MicrosoftCodeAnalysisCSharpVersion to 3.9.0","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6093","RelatedDescription":"Closed or merged PR \"Update MicrosoftCodeAnalysisCSharpVersion to 3.9.0\" (#6093)"},{"Id":"1141274245","IsPullRequest":false,"CreatedAt":"2022-02-17T12:26:51","Actor":"JulianusIV","Number":"6092","RawContent":null,"Title":"CL with Binary Logistic Regression","State":"open","Body":"Hello,\r\nI am currently testing some stuff with ML.NET, specifically Binary Logistic Regression, and trying to get CL to work on that.\r\nTo do that I found a few different articles, mainly [this one](https://docs.microsoft.com/en-us/dotnet/machine-learning/how-to-guides/retrain-model-ml-net), which I followed as closely as the algorithm allowed.\r\nHowever when trying to get the parameters from a loaded model, and matching that to ``LinearRegressionModelParameters``, it just returns ``null`` despite previously having data.\r\n\r\nThis is how I save my model and pipeline:\r\n```cs\r\nMLContext mLContext = new MLContext();\r\n\r\nvar dataPrepEstimator = mLContext.Transforms.Text.FeaturizeText(inputColumnName: @\"comment_text\", outputColumnName: @\"comment_text\")\r\n  .Append(mLContext.Transforms.Concatenate(@\"Features\", new[] { @\"comment_text\" }))\r\n  .Append(mLContext.Transforms.NormalizeMinMax(@\"Features\", @\"Features\"));\r\n\r\nvar _data = GetData(mLContext);\r\n\r\nvar transformer = dataPrepEstimator.Fit(_data);\r\n\r\nvar lbfgs = mLContext.BinaryClassification.Trainers.LbfgsLogisticRegression(\"toxic\", \"Features\");\r\n\r\nvar transformedData = transformer.Transform(_data);\r\n\r\nvar trainedModel = lbfgs.Fit(transformedData);\r\n\r\nmLContext.Model.Save(transformer, _data.Schema, \"data_prep_pipeline.zip\");\r\nmLContext.Model.Save(trainedModel, _data.Schema, \"model.zip\");\r\n```\r\n\r\nAnd this is how I load them again:\r\n```cs\r\nvar dataPrepPipeline = mLContext.Model.Load(\"data_prep_pipeline.zip\", out _);\r\nvar _trainedModel = mLContext.Model.Load(\"model.zip\", out _);\r\n\r\n//This next line assigns a object of type Microsoft.ML.Calibrators.ParameterMixingCalibratedModelParameters<Microsoft.ML.Trainers.LinearBinaryModelParameters, Microsoft.ML.Calibrators.PlattCalibrator> to originalParams (according to the debugger)\r\nvar originalParams = ((ISingleFeaturePredictionTransformer<object>)_trainedModel).Model;\r\n//this next line just results in originalParamsAsLMP being null\r\nvar originalParamsAsLMP = originalParams as LinearModelParameters;\r\n\r\nvar newData = GetData(mLContext);\r\n\r\nvar transformedNewData = dataPrepPipeline.Transform(newData);\r\n\r\nvar retrainedModel = mLContext.BinaryClassification.Trainers.LbfgsLogisticRegression(\"toxic\", \"Features\").Fit(transformedNewData, originalParamsAsLMP);\r\n```\r\n\r\nI have seen in the article I mentioned that the algorithms have different parameter outputs, but cant seem to find the correct one for ``LbfgsLogisticRegression`` \r\nonly thing I found was the one I am currently using, which doesn't work for me, so it seems like I either missed something, or made a mistake in my implementation. Can anyone help me with this?","Url":"https://github.com/dotnet/machinelearning/issues/6092","RelatedDescription":"Open issue \"CL with Binary Logistic Regression\" (#6092)"},{"Id":"1139238156","IsPullRequest":true,"CreatedAt":"2022-02-17T04:06:07","Actor":"colombod","Number":"6089","RawContent":null,"Title":"upgrade to .NET Interactive 1.0.0-beta.22103.1","State":"closed","Body":"Upgrade .NET Interactive dependencies to version 1.0.0-beta.22103.1, the latest available in nuget feed.\nFix workaround in tests by updating test dependency to System.Text.Encodings.Web 6.0.0\n","Url":"https://github.com/dotnet/machinelearning/pull/6089","RelatedDescription":"Closed or merged PR \"upgrade to .NET Interactive 1.0.0-beta.22103.1\" (#6089)"},{"Id":"1140605667","IsPullRequest":true,"CreatedAt":"2022-02-16T21:31:00","Actor":"rgesteve","Number":"6091","RawContent":null,"Title":"OneDAL integration -- WIP: includes LBFGS/OLS-driven algorithms","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x ] You have included any necessary tests in the same PR.\r\n\r\n(a detailed description of the changes in this PR, as well as how to build and test it are included in `README-onedal.md`\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6091","RelatedDescription":"Open PR \"OneDAL integration -- WIP: includes LBFGS/OLS-driven algorithms\" (#6091)"},{"Id":"1138991051","IsPullRequest":false,"CreatedAt":"2022-02-15T17:22:59","Actor":"GKrivosheev-rms","Number":"6088","RawContent":null,"Title":"DataFrame enhancements","State":"open","Body":"I see dozens of issues and enhancement suggestions for DataFrame in Microsoft.Data.Analysis namespace untouched for almost a year.\r\nAre there any resources allocated to address those?\r\nIs the project dead? \r\nAre there any plans to fund the work on those features in the future?\r\nShould we base any future development on these?\r\n\r\nSpecific enhancements desired:\r\n- Array/VBuffer column types\r\n- Sort by multiple columns\r\n- GroupBy by multiple columns\r\n- Parquet read/Write (currently the [ParquetSharp.DataFrame](https://github.com/G-Research/ParquetSharp.DataFrame) has some limited support)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6088","RelatedDescription":"Open issue \"DataFrame enhancements\" (#6088)"},{"Id":"1138863477","IsPullRequest":false,"CreatedAt":"2022-02-15T15:42:12","Actor":"luisquintanilla","Number":"6087","RawContent":null,"Title":"SlotNames behave differently based on column type","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: 1.7.0\r\n - .NET Version: .NET 6.0\r\n\r\n**Describe the bug**\r\n\r\nFor multiclass classification problems, SlotNames are only available when the columns are of type `string`. Even though, the value and meaning of that value are the same, the SlotName behavior is different based on the data type. \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Train a multiclass classification model\r\n2. Map labels to scores. You can do it with code similar to the following:\r\n\r\n```csharp\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.Data;\r\nusing myMLApp;\r\n\r\n// Add input data\r\nvar sampleData = new SentimentModel.ModelInput()\r\n{\r\n    Col0 = \"This restaurant was wonderful.\"\r\n};\r\n\r\n// Load model and predict output of sample data\r\nvar result = SentimentModel.Predict(sampleData);\r\n\r\n// If PredictedLabel is 1, sentiment is \"Positive\"; otherwise, sentiment is \"Negative\"\r\nstring sentiment = result.PredictedLabel == \"1\" ? \"Positive\" : \"Negative\";\r\nConsole.WriteLine($\"Text: {sampleData.Col0}\\nSentiment: {sentiment}\");\r\n\r\nvar sortedLabels = GetScoresWithLabelsSorted(SentimentModel.PredictEngine.Value.OutputSchema, nameof(result.Score), result.Score);\r\n\r\nforeach(var (k,v) in sortedLabels)\r\n{\r\n\tConsole.WriteLine($\"{k}: {v}\");\r\n}\r\n\r\nstatic Dictionary<string, float> GetScoresWithLabelsSorted(DataViewSchema schema, string name, float[] scores)\r\n{\r\n\tDictionary<string, float> result = new Dictionary<string, float>();\r\n\r\n\tvar column = schema.GetColumnOrNull(name);\r\n\r\n\tvar slotNames = new VBuffer<ReadOnlyMemory<char>>();\r\n\tcolumn.Value.GetSlotNames(ref slotNames);\r\n\tvar names = new string[slotNames.Length];\r\n\tvar num = 0;\r\n\tforeach (var denseValue in slotNames.DenseValues())\r\n\t{\r\n\t\tresult.Add(denseValue.ToString(), scores[num++]);\r\n\t}\r\n\r\n\treturn result.OrderByDescending(c => c.Value).ToDictionary(i => i.Key, i => i.Value);\r\n}\r\n```\r\n\r\n**Expected behavior**\r\n\r\nNot sure? I would think that if the value and \"meaning\" of that value are the same, the type shouldn't matter and SlotNames are made available.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6087","RelatedDescription":"Open issue \"SlotNames behave differently based on column type\" (#6087)"},{"Id":"1138108920","IsPullRequest":true,"CreatedAt":"2022-02-15T06:22:40","Actor":"michaelgsharp","Number":"6086","RawContent":null,"Title":"Version update to 2.0.0","State":"closed","Body":"Updated ML.NET version to 2.0.0 which is the next big release for November of this year.","Url":"https://github.com/dotnet/machinelearning/pull/6086","RelatedDescription":"Closed or merged PR \"Version update to 2.0.0\" (#6086)"},{"Id":"1138006114","IsPullRequest":true,"CreatedAt":"2022-02-15T03:00:26","Actor":"michaelgsharp","Number":"6085","RawContent":null,"Title":"Fixed PFI bug with transformer chains","State":"closed","Body":"Fixes #6027 \r\n\r\nThe new pfi APi we added to make it easier for users has an issue with handling Transformer chains incorrectly. This PR fixes that and adds a test using Transformer chains.","Url":"https://github.com/dotnet/machinelearning/pull/6085","RelatedDescription":"Closed or merged PR \"Fixed PFI bug with transformer chains\" (#6085)"},{"Id":"1137304532","IsPullRequest":true,"CreatedAt":"2022-02-15T02:53:48","Actor":"dotnet-maestro[bot]","Number":"6081","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 97926d79-6b8b-4d32-c8db-08d9d479971c\r\n- **Build**: 20220211.10\r\n- **Date Produced**: February 12, 2022 2:40:37 AM UTC\r\n- **Commit**: ff6cc4e9c3eef575f62a33a642ca80e79d27c9bb\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 7.0.0-beta.22111.9 to 7.0.0-beta.22111.10][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22111.9 to 7.0.0-beta.22111.10][1]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 7.0.0-beta.22111.9 to 7.0.0-beta.22111.10][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 7.0.0-beta.22111.9 to 7.0.0-beta.22111.10][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22111.9 to 7.0.0-beta.22111.10][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/a50e5e6...ff6cc4e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6081","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6081)"},{"Id":"1137948448","IsPullRequest":true,"CreatedAt":"2022-02-15T02:19:10","Actor":"ericstj","Number":"6083","RawContent":null,"Title":"Add call to SBOM template to official builds","State":"closed","Body":"Adopt template added in https://github.com/dotnet/machinelearning/commit/4e716f91bd4d962aeec5cea3a76243cc7af624e1.\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6083","RelatedDescription":"Closed or merged PR \"Add call to SBOM template to official builds\" (#6083)"},{"Id":"1137901676","IsPullRequest":true,"CreatedAt":"2022-02-15T00:46:10","Actor":"luisquintanilla","Number":"6082","RawContent":null,"Title":"Automatically add enhancement label to issue template","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [X] There's a descriptive title that will make sense to other developers some time from now. \r\n- [X] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [X] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [X] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6082","RelatedDescription":"Closed or merged PR \"Automatically add enhancement label to issue template\" (#6082)"},{"Id":"1137982502","IsPullRequest":false,"CreatedAt":"2022-02-14T23:44:58","Actor":"ericjohannsen","Number":"6084","RawContent":null,"Title":"Exception Retrieving PFI from AutoML Model","State":"open","Body":"**System Information (please complete the following information):**\r\n - Windows 11\r\n - ML.NET Version 1.7, AutoML 0.19.0\r\n - .NET Version: .NET Core 3.1\r\n \r\n**Describe the bug**\r\nArgumentNullException while attempting to retrieve PFI\r\nThe model provided does not have a compatible predictor (Parameter 'lastTransformer')\r\n\r\nStack trace\r\n   at Microsoft.ML.Runtime.Contracts.CheckValue[T](IExceptionContext ctx, T val, String paramName, String msg)\r\n   at Microsoft.ML.PermutationFeatureImportanceExtensions.PermutationFeatureImportance[TMetric,TResult](IHostEnvironment env, ITransformer model, IDataView data, Func`1 resultInitializer, Func`2 evaluationFunc, Func`3 deltaFunc, Int32 permutationCount, Boolean useFeatureWeightFilter, Nullable`1 numberOfExamplesToUse)\r\n   at Microsoft.ML.PermutationFeatureImportanceExtensions.PermutationFeatureImportance(RegressionCatalog catalog, ITransformer model, IDataView data, String labelColumnName, Boolean useFeatureWeightFilter, Nullable`1 numberOfExamplesToUse, Int32 permutationCount)\r\n\r\n**To Reproduce**\r\n\r\nNot sure how best to create a minimal reproducible example including data, but here's the core of what I did (based on https://github.com/dotnet/machinelearning/pull/5934)\r\n\r\n```\r\nMLContext mlContext = new MLContext();\r\n\r\nColumnInferenceResults columnInference = mlContext.Auto().InferColumns(trainDataPath, \"Label\", groupColumns: false);\r\n\r\nTextLoader textLoader = mlContext.Data.CreateTextLoader(columnInference.TextLoaderOptions);\r\nIDataView trainDataView = textLoader.Load(trainDataPath);\r\nIDataView testDataView = textLoader.Load(testDataPath);\r\n\r\nIEstimator<ITransformer> preFeaturizer = \r\n\tmlContext.Transforms.Categorical.OneHotEncoding(\r\n\t\tnew T().GetOneHotInputColumnNames().Select(_ => new InputOutputColumnPair(_)).ToArray()\r\n\t\t);\r\n\r\nColumnInformation columnInformation = columnInference.ColumnInformation;\r\ncolumnInformation.IgnoredColumnNames.AddIfMissing(\"Foo\");\r\ncolumnInformation.CategoricalColumnNames.Remove(\"Foo\");\r\ncolumnInformation.NumericColumnNames.Remove(\"Foo\");\r\n\r\nBinaryExperimentSettings experimentSettings = new BinaryExperimentSettings()\r\n{\r\n\tMaxExperimentTimeInSeconds = experimentTime,\r\n\tOptimizingMetric = BinaryClassificationMetric.F1Score\r\n};\r\n\r\nvar experiment = mlContext.Auto().CreateBinaryClassificationExperiment(experimentSettings);\r\n\r\nExperimentResult<BinaryClassificationMetrics> experimentResult = experiment.Execute(trainDataView, columnInformation, preFeaturizer, progress);\r\n\r\nRunDetail<BinaryClassificationMetrics> bestRun = experimentResult.BestRun;\r\n\r\n// Exception thrown here\r\nvar permutationFeatureImportance = mlContext\r\n\t   .Regression\r\n\t   .PermutationFeatureImportance(bestRun.Model, testDataViewWithBestScore, permutationCount: 3);\r\n```\r\nThe `LastTransformer` of `bestRun.Model` is `BinaryPredictionTransformer<Microsoft.ML.Calibrators.CalibratedModelParametersBase<Microsoft.ML.Trainers.lightGbm.LightGbmBinaryModelParameters, ...>>`\r\n\r\n**Expected behavior**\r\nRetrieve the PFI information.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6084","RelatedDescription":"Open issue \"Exception Retrieving PFI from AutoML Model\" (#6084)"},{"Id":"1129142765","IsPullRequest":true,"CreatedAt":"2022-02-09T22:57:33","Actor":"michaelgsharp","Number":"6080","RawContent":null,"Title":"Fixing nuget packages to hardlink.","State":"open","Body":"Making nuget package also hardlink for space saving.","Url":"https://github.com/dotnet/machinelearning/pull/6080","RelatedDescription":"Open PR \"Fixing nuget packages to hardlink.\" (#6080)"},{"Id":"1127838390","IsPullRequest":false,"CreatedAt":"2022-02-08T22:46:42","Actor":"ChadMGeek","Number":"6079","RawContent":null,"Title":"Unable to load KMeans model as original data type","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 10 \r\n - ML.NET Version: ML.Net 1.7.0\r\n - .NET Version: .Net 6.0\r\n\r\n**Describe the bug**\r\nAfter fitting a KMeans model, the trained model is of type TransformerChain<ClusteringPredictionTransformer<KMeansModelParameters>>.  After saving the model to a file using mlContext.Model.Save and reloading it using mlContext.Model.Load, there is no way to get the model back to TransformerChain<ClusteringPredictionTransformer<KMeansModelParameters>>. The initial object loaded is of type TransformerChain<ITransformer>. If you look at the object.LastTransformer, it is of type ClusteringPredictionTransformer<IPredictorProducing<Vector<float>>>. Casting either the loaded object or the LastTransformer gives a System.InvalidCastException. Using mlContext.Model.Load(...) as ... gives you null. Leaving LastTransformer as ITransformer does not provide you with the \"Model\" property.\r\n\r\n**To Reproduce**\r\n\r\nCode below for simple Console app, based on MS KMeans example.\r\n\r\n```\r\nusing System;\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.Data;\r\nusing Microsoft.ML.Trainers;\r\nusing System.Collections.Generic;\r\nusing System.IO;\r\n\r\nnamespace KMeansSample\r\n{\r\n    internal class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            // Create a new context for ML.NET operations. It can be used for\r\n            // exception tracking and logging, as a catalog of available operations\r\n            // and as the source of randomness. Setting the seed to a fixed number\r\n            // in this example to make outputs deterministic.\r\n            var mlContext = new MLContext(seed: 0);\r\n\r\n            // Create a list of training data points.\r\n            var dataPoints = GenerateRandomDataPoints(1000, 0);\r\n\r\n            var _model = mlContext.Clustering.Trainers.KMeans(numberOfClusters: 3, featureColumnName: \"Features\");\r\n\r\n            // Convert the list of data points to an IDataView object, which is\r\n            // consumable by ML.NET API.\r\n            IDataView trainingData = mlContext.Data.LoadFromEnumerable(dataPoints);\r\n            var dataProcessPipeline = mlContext.Transforms.Concatenate(\"Features\", nameof(DataPoint.val1),\r\n                nameof(DataPoint.val2),\r\n                nameof(DataPoint.val3),\r\n                nameof(DataPoint.val4)).AppendCacheCheckpoint(mlContext);\r\n            var trainingPipeline = dataProcessPipeline.Append(_model);\r\n\r\n            var trainedModel = trainingPipeline.Fit(trainingData);\r\n\r\n            mlContext.Model.Save(trainedModel, trainingData.Schema, \"C:\\\\temp\\\\trainedModel.ms\");\r\n\r\n            //This version will produce a System.InvalidCastException\r\n           using (var stream = new FileStream(\"C:\\\\temp\\\\trainedModel.ms\", FileMode.Open, FileAccess.Read, FileShare.Read))\r\n            { \r\n                var loadedModel = (TransformerChain<ClusteringPredictionTransformer<KMeansModelParameters>>)(mlContext.Model.Load(stream, out var modelInputSchema1));\r\n                var lastTransformer = loadedModel.LastTransformer;\r\n                var modelParameters = lastTransformer.Model;\r\n            }\r\n\r\n           //This version will produce a null reference exception\r\n            using (var stream = new FileStream(\"C:\\\\temp\\\\trainedModel.ms\", FileMode.Open, FileAccess.Read, FileShare.Read))\r\n            {\r\n                var loadedModel = mlContext.Model.Load(stream, out var modelInputSchema1) as TransformerChain<ClusteringPredictionTransformer<KMeansModelParameters>>;\r\n                var lastTransformer = loadedModel.LastTransformer;\r\n                var modelParameters = lastTransformer.Model;\r\n            }\r\n\r\n            //This version gives a compiler error\r\n            \r\n            using (var stream = new FileStream(\"C:\\\\temp\\\\trainedModel.ms\", FileMode.Open, FileAccess.Read, FileShare.Read))\r\n            {\r\n                var loadedModel = mlContext.Model.Load(stream, out var modelInputSchema1) as TransformerChain<ITransformer> ;\r\n                var lastTransformer = loadedModel.LastTransformer;\r\n                var modelParameters = lastTransformer.Model;\r\n            }\r\n\r\n            //This version also gives a compiler error\r\n            using (var stream = new FileStream(\"C:\\\\temp\\\\trainedModel.ms\", FileMode.Open, FileAccess.Read, FileShare.Read))\r\n            {\r\n                var loadedModel = mlContext.Model.Load(stream, out var modelInputSchema1);\r\n                var lastTransformer = loadedModel.LastTransformer;\r\n                var modelParameters = lastTransformer.Model;\r\n            }\r\n            \r\n        }\r\n\r\n    \r\n\r\n        private static IEnumerable<DataPoint> GenerateRandomDataPoints(int count,\r\n            int seed = 0)\r\n        {\r\n            var random = new Random(seed);\r\n            float randomFloat() => (float)random.NextDouble();\r\n            for (int i = 0; i < count; i++)\r\n            {\r\n               \r\n                yield return new DataPoint\r\n                {\r\n                 val1 = randomFloat(),\r\n                 val2 = randomFloat(),\r\n                 val3 = randomFloat(),\r\n                 val4 = randomFloat()\r\n                   \r\n                };\r\n            }\r\n        }\r\n\r\n        // Example with label and 50 feature values. A data set is a collection of\r\n        // such examples.\r\n        private class DataPoint\r\n        {\r\n         \r\n            public float val1 { get; set; }\r\n            public float val2 { get; set; }\r\n            public float val3 { get; set; }\r\n            public float val4 { get; set; }\r\n\r\n      \r\n        }\r\n\r\n        // Class used to capture predictions.\r\n        private class Prediction\r\n        {\r\n            // Original label (not used during training, just for comparison).\r\n            public uint Label { get; set; }\r\n            // Predicted label from the trainer.\r\n            public uint PredictedLabel { get; set; }\r\n        }\r\n\r\n        // Pretty-print of ClusteringMetrics object.\r\n        private static void PrintMetrics(ClusteringMetrics metrics)\r\n        {\r\n            Console.WriteLine($\"Normalized Mutual Information: \" +\r\n                $\"{metrics.NormalizedMutualInformation:F2}\");\r\n\r\n            Console.WriteLine($\"Average Distance: \" +\r\n                $\"{metrics.AverageDistance:F2}\");\r\n\r\n            Console.WriteLine($\"Davies Bouldin Index: \" +\r\n                $\"{metrics.DaviesBouldinIndex:F2}\");\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\n\r\n**Expected behavior**\r\nAble to load object back into the same type as the object that was saved.\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6079","RelatedDescription":"Open issue \"Unable to load KMeans model as original data type\" (#6079)"},{"Id":"1126977706","IsPullRequest":false,"CreatedAt":"2022-02-08T09:09:36","Actor":"stamen-petrov","Number":"6078","RawContent":null,"Title":"The example ApplyCustomWordEmbedding is not correct, \"product\" is not found.","State":"open","Body":"The example ApplyCustomWordEmbedding is not correct, because the method NormalizeText in ML 1.6, has by default keepPunctuation = true, which leads to extracting \"product.\", not \"product\". The output is as shown, but the explanation is not, because the 2nd position of the output should be -2, if \"product\" is considered. I suggest either to remove the \"product\" row from the custom embeddings, or modify the example accordingly.\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: 80b1e2db-bc79-cead-9e39-ff830d8b211b\r\n* Version Independent ID: c6b67859-e2d9-2b15-8ace-973a164c8ff3\r\n* Content: [TextCatalog.ApplyWordEmbedding Method (Microsoft.ML)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.textcatalog.applywordembedding?view=ml-dotnet)\r\n* Content Source: [dotnet/xml/Microsoft.ML/TextCatalog.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML/TextCatalog.xml)\r\n* Product: **dotnet-ml-api**\r\n* GitHub Login: @natke\r\n* Microsoft Alias: **nakersha**","Url":"https://github.com/dotnet/machinelearning/issues/6078","RelatedDescription":"Open issue \"The example ApplyCustomWordEmbedding is not correct, \"product\" is not found.\" (#6078)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-03-03T03:30:20.8068593Z","RunDurationInMilliseconds":517}