{"Data":{"GitHub":{"Issues":[{"Id":"2143402003","IsPullRequest":true,"CreatedAt":"2024-02-20T02:14:21","Actor":"stephentoub","Number":"7016","RawContent":null,"Title":"Avoid LruCache in Tiktoken when cacheSize specified is 0","State":"open","Body":"cc: @tarekgh ","Url":"https://github.com/dotnet/machinelearning/pull/7016","RelatedDescription":"Open PR \"Avoid LruCache in Tiktoken when cacheSize specified is 0\" (#7016)"},{"Id":"2143381151","IsPullRequest":true,"CreatedAt":"2024-02-20T01:47:58","Actor":"stephentoub","Number":"7015","RawContent":null,"Title":"Tweak CreateByModelNameAsync","State":"open","Body":"- Add a CancellationToken to CreateByModelNameAsync, allowing the download and parsing to be canceled.\r\n- Use ReadLineAsync(cancellationToken), which not only allows it to be canceled, but avoids ~100K task allocations\r\n- Fix Helpers.FromBase64String to support lines longer than 300 chars\r\n\r\ncc: @tarekgh ","Url":"https://github.com/dotnet/machinelearning/pull/7015","RelatedDescription":"Open PR \"Tweak CreateByModelNameAsync\" (#7015)"},{"Id":"2139509642","IsPullRequest":false,"CreatedAt":"2024-02-18T22:25:57","Actor":"stephentoub","Number":"7009","RawContent":null,"Title":"Split struct should not be readonly","State":"closed","Body":"Doing so prohibits desirable optimizations, like making the TokenString property lazily initialized from the original string (otherwise, we end up allocating a new string for every split even if the string isn't used).","Url":"https://github.com/dotnet/machinelearning/issues/7009","RelatedDescription":"Closed issue \"Split struct should not be readonly\" (#7009)"},{"Id":"2139776942","IsPullRequest":true,"CreatedAt":"2024-02-18T20:28:17","Actor":"stephentoub","Number":"7012","RawContent":null,"Title":"First round of perf improvements for tiktoken","State":"closed","Body":"Before:\r\n| Method              | Mean    | Allocated |\r\n|-------------------- |--------:|----------:|\r\n| CountTokensCached   | 3.677 s |   4.82 GB |\r\n| CountTokensUncached | 2.309 s |   3.03 GB |\r\n\r\nAfter:\r\n| Method              | Mean    | Allocated |\r\n|-------------------- |--------:|----------:|\r\n| CountTokensCached   | 2.545 s | 637.63 MB |\r\n| CountTokensUncached | 1.627 s | 408.34 MB |\r\n\r\n```C#\r\nusing BenchmarkDotNet.Attributes;\r\nusing BenchmarkDotNet.Running;\r\nusing Microsoft.ML.Tokenizers;\r\n\r\nBenchmarkSwitcher.FromAssembly(typeof(Tests).Assembly).Run(args);\r\n\r\n[MemoryDiagnoser(false)]\r\n[HideColumns(\"Job\", \"Error\", \"StdDev\", \"Median\", \"RatioSD\")]\r\npublic class Tests\r\n{\r\n    private Tokenizer _tokenizer;\r\n    private string[] _tests;\r\n\r\n    [GlobalSetup]\r\n    public async Task Setup()\r\n    {\r\n        _tokenizer = await Tokenizer.CreateByModelNameAsync(\"gpt-3.5-turbo\");\r\n        using HttpClient client = new HttpClient();\r\n        string text = string.Concat(Enumerable.Repeat(Poem, 8));\r\n        _tests = new string[8192]; // LruCache size\r\n        for (int i = 0; i < _tests.Length; i++)\r\n        {\r\n            _tests[i] = text.Substring(0, text.Length - i);\r\n        }\r\n    }\r\n\r\n    [Benchmark]\r\n    public int CountTokensCached()\r\n    {\r\n        int sum = 0;\r\n        for (int i = 0; i < _tests.Length; i++)\r\n        {\r\n            sum += _tokenizer.CountTokens(_tests[0]); // reuse same input each time\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    [Benchmark]\r\n    public int CountTokensUncached()\r\n    {\r\n        int sum = 0;\r\n        for (int i = 0; i < _tests.Length; i++)\r\n        {\r\n            sum += _tokenizer.CountTokens(_tests[i]); // change the input to defeat the cache\r\n        }\r\n        return sum;\r\n    }\r\n\r\n    private const string Poem = \"\"\"\r\n        **Paws of Joy**\r\n\r\n        In the morning's tender light,\r\n        When dew-kissed grass awaits the sun,\r\n        There stirs a creature, full of might,\r\n        A friend whose loyalty is never undone.\r\n\r\n        **The Dog**, with eyes like galaxies,\r\n        Wags its tail, a metronome of glee,\r\n        Its heart a map of boundless territories,\r\n        Guiding us through life's vast sea.\r\n\r\n        **Furry sentinels**, guardians of our hearth,\r\n        They chase their tails in playful mirth,\r\n        Their barks a symphony of love and merriment,\r\n        Echoing through the quiet moments we've spent.\r\n\r\n        **Nose to ground**, they follow scents,\r\n        Unraveling mysteries with fervent intent,\r\n        From squirrel trails to forgotten dreams,\r\n        They lead us to places we've never seen.\r\n\r\n        **Golden retrievers** with hearts of gold,\r\n        **Dachshunds** with determination untold,\r\n        **Greyhounds** racing against the wind,\r\n        Each breed a chapter in the story they've pinned.\r\n\r\n        **Labradors** dive into lakes with glee,\r\n        **Chihuahuas** strut like tiny royalty,\r\n        **Huskies** howl at the moon's silver glow,\r\n        And **puppies**, oh sweet puppies, steal the show.\r\n\r\n        Their eyes speak of trust, unwavering and true,\r\n        Their fur holds secrets whispered by the dew,\r\n        In their presence, worries seem to fade,\r\n        As they teach us the art of living unafraid.\r\n\r\n        So here's to the dogs, our steadfast friends,\r\n        Who mend our hearts and heal life's bends,\r\n        May their tails forever wag, their noses explore,\r\n        For in their love, we find solace evermore.\r\n        \"\"\";\r\n}\r\n```\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7012","RelatedDescription":"Closed or merged PR \"First round of perf improvements for tiktoken\" (#7012)"},{"Id":"2141079387","IsPullRequest":false,"CreatedAt":"2024-02-18T16:38:11","Actor":"amitchaudhary","Number":"7014","RawContent":null,"Title":"Add metrices calculation for model performance review.  ","State":"open","Body":"Especially, the key metrices like -\r\n1) Mean Absolute Error (MAE)\r\n2) Mean Squared Error (MSE)\r\n3) Root Mean Squared Error (RMSE) etc. ","Url":"https://github.com/dotnet/machinelearning/issues/7014","RelatedDescription":"Open issue \"Add metrices calculation for model performance review.  \" (#7014)"},{"Id":"2140259172","IsPullRequest":false,"CreatedAt":"2024-02-17T16:23:07","Actor":"stephentoub","Number":"7013","RawContent":null,"Title":"More API feedback on Tokenizer and friends","State":"open","Body":"Tokenizer:\r\n- Tokenizer is mutable after creation? e.g. you can set its PreTokenizer, Normalizer, and Decoder after it's created. If the intent is for a Tokenizer to be created once for a process and shared, is that mutability warranted / wise? Should the constructor accept a Decoder (it doesn't today) and then the properties made get-only? Or at a minimum should the properties be made init instead of set?\r\n- There are a bunch of parameters named \"sequence\", with XML comments then describing them as \"text\". Would \"text\" be a more obvious name for the parameter?\r\n- I find the double-negative of \"bool skipSpecialTokens = false\" confusing: that being false means special tokens should be considered. Would it be better as \"bool considerSpecialTokens = true\" or something similar? I also don't know what it means to \"skip special tokens\"... they're not actually being skipped, right? They might still be returned as tokens, they're just not treated any differently from all other tokens. If we were actually \"skipping special tokens\", I'd expect that the implementation would always be looking for them and just not yielding / counting / etc. them when discovered, and I don't believe that's what's happening.\r\n- Tokenizer supports both Encode and Decode, but the result from Encode is a TokenizerResult type. Shouldn't that type be named something specific to encoding, since it's not relevant to other operations Tokenizer exposes?\r\n- What is the purpose of TrainFromFiles? It seems to produce an IReadOnlyList<AddedToken> that's then entirely ignored. Should this method be deleted entirely?\r\n\r\nToken:\r\n- Why is this mutable?\r\n- Typically in .NET APIs that deal with slices of things specify an offset and a length, typically as separate properties. These APIs are specifying starting and ending indices, as a tuple, named Index and End. That feels very inconsistent. I'd have expected an Offset/Index property and a Length property. Same feedback for Split and any other similar types.\r\n\r\nPreTokenizer:\r\n- The parameter to PreTokenizer is called \"sentence\". Why is it called \"sentence\" here, \"sequence\" in other places, \"text\" or \"input\" in various comments, etc. Must this actually be a \"sentence\"?\r\n\r\nNormalizedString:\r\n- It's not clear to me what the `int[]` mapping is. I see the description in the comment, but it's not clear enough. I'm guessing that mapping[i] for i being a position in original is the corresponding index into normalizedString?\r\n- The constructor parameters' names don't match the property names, e.g. ctor parameter is normalizedString but the property is Normalized, ctor parameter is mapping but property is NormalizedToOriginalMapping, etc.\r\n\r\nTrainer:\r\n- Does anyone use this Trainer stuff? Can it be deleted?\r\n- All the Progress stuff seems only relevant to that.  Can it be deleted, too?\r\n\r\nModel:\r\n- Methods should start with a verb. TokenToId and IdToToken don't follow the typical guidance.\r\n- Why is GetVocabSize needed? Can't someone just use GetVocab().Count? Seems like that's what all the implementations do.\r\n- Why is GetVocab a method rather than a Vocab (or Vocabulary) property?\r\n- Are Save and GetTrainer needed?\r\n\r\nTikToken:\r\n- tikTokenBpeFile parameter should be bpeFilePath or something like that. If it's just called file, folks might infer that to mean it's the contents of the file.\r\n- specialTokensEncoder is a strange name. It's just a dictionary and doesn't do any encoding. Should it just be specialTokens?\r\n- tikTokenBpeFileStream parameter suggests this must be a \"FileStream\"... it needn't be. This should just be bpeStream or something like that.\r\n\r\nI suggest we take the surface area of Microsoft.ML.Tokenizers through an API review to get more eyes on it.\r\ncc: @terrajobst, @tarekgh ","Url":"https://github.com/dotnet/machinelearning/issues/7013","RelatedDescription":"Open issue \"More API feedback on Tokenizer and friends\" (#7013)"},{"Id":"2139730970","IsPullRequest":false,"CreatedAt":"2024-02-17T01:42:21","Actor":"stephentoub","Number":"7011","RawContent":null,"Title":"CreateByModelNameAsync should recognize text-embedding-3-small/large","State":"open","Body":"https://openai.com/blog/new-embedding-models-and-api-updates\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/7011","RelatedDescription":"Open issue \"CreateByModelNameAsync should recognize text-embedding-3-small/large\" (#7011)"},{"Id":"2139539018","IsPullRequest":false,"CreatedAt":"2024-02-16T21:54:10","Actor":"stephentoub","Number":"7010","RawContent":null,"Title":"Tokenizer.Decode special-cases EnglishRoberta","State":"open","Body":"This suggests there's something wrong with the Model abstraction, and it means that any other model of a similar ilk to EnglishRoberta could not be supported (or not supported efficiently, or whatever reason caused this to be special-cased here). The special-casing should be removed and the abstraction fixed to make the special-casing unnecessary.\r\nhttps://github.com/dotnet/machinelearning/blob/4635a862ddd21b3e7de0404f73a897fecb2011a1/src/Microsoft.ML.Tokenizers/Tokenizer.cs#L203-L216","Url":"https://github.com/dotnet/machinelearning/issues/7010","RelatedDescription":"Open issue \"Tokenizer.Decode special-cases EnglishRoberta\" (#7010)"},{"Id":"2139505439","IsPullRequest":false,"CreatedAt":"2024-02-16T21:21:49","Actor":"stephentoub","Number":"7008","RawContent":null,"Title":"Tiktoken should support being created without synchronous I/O and with user supplied data","State":"open","Body":"If a developer wants to create a Tiktoken from something other than CreateByModelNameAsync, they're forced to use the Tiktoken constructor, which does synchronous I/O. There should be a factory equivalent to its constructors that use async I/O. There should likely also be a constructor that accepts the data already in memory rather than needing to load it separately.","Url":"https://github.com/dotnet/machinelearning/issues/7008","RelatedDescription":"Open issue \"Tiktoken should support being created without synchronous I/O and with user supplied data\" (#7008)"},{"Id":"2139503732","IsPullRequest":true,"CreatedAt":"2024-02-16T21:20:36","Actor":"zewditu","Number":"7007","RawContent":null,"Title":"Match  SweepableEstimatorFactory name with Ml.net name.","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7007","RelatedDescription":"Open PR \"Match  SweepableEstimatorFactory name with Ml.net name.\" (#7007)"},{"Id":"2139502144","IsPullRequest":false,"CreatedAt":"2024-02-16T21:19:05","Actor":"stephentoub","Number":"7006","RawContent":null,"Title":"Bpe.UnknownToken is mutable","State":"open","Body":"Should it be? Changing it post construction can change the results of tokenizing. If this is supposed to be something created as a singleton and shared, UnknownToken should likely not be allowed to be changed post construction (either only as a ctor argument or at least making the property's setter instead be init).","Url":"https://github.com/dotnet/machinelearning/issues/7006","RelatedDescription":"Open issue \"Bpe.UnknownToken is mutable\" (#7006)"},{"Id":"2139497487","IsPullRequest":false,"CreatedAt":"2024-02-16T21:14:44","Actor":"stephentoub","Number":"7005","RawContent":null,"Title":"EnglishRoberta is not thread-safe","State":"open","Body":"_mergeRanks is mutated as part of encoding:\r\nhttps://github.com/dotnet/machinelearning/blob/4635a862ddd21b3e7de0404f73a897fecb2011a1/src/Microsoft.ML.Tokenizers/Model/EnglishRoberta.cs#L591","Url":"https://github.com/dotnet/machinelearning/issues/7005","RelatedDescription":"Open issue \"EnglishRoberta is not thread-safe\" (#7005)"},{"Id":"2139495984","IsPullRequest":false,"CreatedAt":"2024-02-16T21:13:21","Actor":"stephentoub","Number":"7004","RawContent":null,"Title":"EnglishRoberta.TokenizeToIds only populates the accumulatedIds if found in cache","State":"open","Body":"If the data isn't found in the cache, nothing is added to the list.\r\nhttps://github.com/dotnet/machinelearning/blob/4635a862ddd21b3e7de0404f73a897fecb2011a1/src/Microsoft.ML.Tokenizers/Model/EnglishRoberta.cs#L262-L305","Url":"https://github.com/dotnet/machinelearning/issues/7004","RelatedDescription":"Open issue \"EnglishRoberta.TokenizeToIds only populates the accumulatedIds if found in cache\" (#7004)"},{"Id":"2135458580","IsPullRequest":true,"CreatedAt":"2024-02-16T19:48:38","Actor":"tarekgh","Number":"7001","RawContent":null,"Title":"Tokenizer's Interfaces Cleanup","State":"closed","Body":"This update encompasses the following:\r\n\r\n- Introduction of the `Tokenizer.GetEncodedIdsCount` API, essential for supporting crucial scenarios and implemented it in all supported tokenizers.\r\n- The implementation of `EncodeToIds` and `GetEncodedIdsCount` has been customized for other tokenizer models like `Bpe` and `EnglishRoberta`. This adaptation aims to enhance the performance of these APIs specifically when invoked from those respective tokenizers.\r\n- Removal of a couple of APIs that did not align well with our interfaces.\r\n- Conducted cleanup and performance optimizations in various sections across the supported tokenizers.","Url":"https://github.com/dotnet/machinelearning/pull/7001","RelatedDescription":"Closed or merged PR \"Tokenizer's Interfaces Cleanup\" (#7001)"},{"Id":"2135855609","IsPullRequest":false,"CreatedAt":"2024-02-15T07:49:16","Actor":"SyntaxEvg","Number":"7003","RawContent":null,"Title":"Please make a simple way using the local gguf model, thanks","State":"open","Body":"add a simple feature in one line\r\nload the model into memory like python does\r\nwhat is your problem create a simple way to download\r\nmodels from huggingface? quantized up to 4 or 5 Q\r\nfor example mistralai/Mistral-7B-v0.1\r\ngguf extensions\r\nCan you explain the difficulties, why you are not addressing this issue, for example, I don’t like python and I don’t want to use it, but due to the fact that you do not support the way of loading a model and communicating with it in ml net, I have to use it\r\nPlease make a simple way using the local gguf model, thanks","Url":"https://github.com/dotnet/machinelearning/issues/7003","RelatedDescription":"Open issue \"Please make a simple way using the local gguf model, thanks\" (#7003)"},{"Id":"2135546529","IsPullRequest":true,"CreatedAt":"2024-02-15T03:01:02","Actor":"zewditu","Number":"7002","RawContent":null,"Title":"U/zewd/normalized text","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7002","RelatedDescription":"Closed or merged PR \"U/zewd/normalized text\" (#7002)"},{"Id":"2135056596","IsPullRequest":true,"CreatedAt":"2024-02-14T19:32:57","Actor":"dotnet-maestro[bot]","Number":"7000","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:45c6fd49-3a4f-4675-f3da-08dc0c527e17)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 45c6fd49-3a4f-4675-f3da-08dc0c527e17\r\n- **Build**: 20240213.2\r\n- **Date Produced**: February 13, 2024 8:30:17 PM UTC\r\n- **Commit**: da98edc4c3ea539f109ea320672136ceb32591a7\r\n- **Branch**: refs/heads/release/8.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.24075.5 to 8.0.0-beta.24113.2][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 8.0.0-beta.24075.5 to 8.0.0-beta.24113.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.24075.5 to 8.0.0-beta.24113.2][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 8.0.0-beta.24075.5 to 8.0.0-beta.24113.2][1]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 8.0.0-beta.24075.5 to 8.0.0-beta.24113.2][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.24075.5 to 8.0.0-beta.24113.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/07cf24f27e...da98edc4c3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:45c6fd49-3a4f-4675-f3da-08dc0c527e17)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7000","RelatedDescription":"Open PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#7000)"},{"Id":"2125840282","IsPullRequest":false,"CreatedAt":"2024-02-14T00:06:15","Actor":"mjanulaitis","Number":"6994","RawContent":null,"Title":"Sample Project does not trigger anomalies with v3","State":"closed","Body":"**System Information:**\r\n - OS & Version: Windows 10\r\n - ML.NET Version: ML.NET v3.0.1\r\n - .NET Version: .NET 7.0\r\n\r\n**Describe the bug**\r\nI have successfully downloaded Microsoft's sample projects and run the AnomalyDetection_PhoneCalls sample with one change.  That is, I upgraded from .Net Core 3.1 to .Net 7.  Then after learning 3.x was released, I upgraded to the latest NuGet Package.  Now when I run the sample it successfully runs however no anomalies are detected.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Download the samples from here: https://github.com/dotnet/machinelearning-samples/\r\n2. Open the AnomalyDetection_PhoneCalls sample.\r\n3. Modify the project file to use net7.0\r\n4. Run.  Verify several items are flagged as anomalies.\r\n5. Using NuGet Package Manager upgrade Microsoft.ML and Microsoft.ML.TimeSeries to v3.0.1\r\n6. Run.  Notice the same items are no longer flagged as anomalies.\r\n\r\n**Expected behavior**\r\nThe same items should be flagged as anomalies.","Url":"https://github.com/dotnet/machinelearning/issues/6994","RelatedDescription":"Closed issue \"Sample Project does not trigger anomalies with v3\" (#6994)"},{"Id":"2133321680","IsPullRequest":false,"CreatedAt":"2024-02-13T23:58:24","Actor":"mjanulaitis","Number":"6999","RawContent":null,"Title":"The type initializer for 'Microsoft.ML.Transforms.TimeSeries.FftUtils' threw an exception.","State":"open","Body":"**System Information:**\r\n - Windows 10\r\n - ML.NET 3.0.1\r\n - .NET 4.7.2\r\n\r\n**Describe the bug**\r\nI am unable to use this library when my project is built with .Net 4.7.2.  The same code is working for .net7.0-windows v7.0.15\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create a project then call MLContext.AnomalyDetection.DetectSeasonality\r\n2. See error: The type initializer for 'Microsoft.ML.Transforms.TimeSeries.FftUtils' threw an exception.  Inner exception: BadImageFormatException: An attempt was made to load a program with an incorrect format. (Exception from HRESULT: 0x8007000B)\r\n\r\n**Expected behavior**\r\nThe function should not throw an exception.\r\n\r\n**Sample Snipet**\r\n```\r\n            var mlContext = new MLContext();\r\n\r\n            var dataView = mlContext.Data.LoadFromTextFile<DataModel>(path: i, hasHeader: true, separatorChar: ',');\r\n\r\n            string inputColumnName = nameof(DataModel.value);\r\n\r\n            int period = mlContext.AnomalyDetection.DetectSeasonality(dataView, inputColumnName);\r\n```\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6999","RelatedDescription":"Open issue \"The type initializer for 'Microsoft.ML.Transforms.TimeSeries.FftUtils' threw an exception.\" (#6999)"},{"Id":"2131367865","IsPullRequest":true,"CreatedAt":"2024-02-13T23:41:41","Actor":"zewditu","Number":"6998","RawContent":null,"Title":"Add text normalizer transformer to AutoML","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6998","RelatedDescription":"Closed or merged PR \"Add text normalizer transformer to AutoML\" (#6998)"},{"Id":"2131236243","IsPullRequest":false,"CreatedAt":"2024-02-13T00:36:07","Actor":"thomasd3","Number":"6997","RawContent":null,"Title":"Can't use LoadFromEnumerable in F#","State":"open","Body":"Using a BinaryClassifier, with AutoML in F#, I have my data structured at this type:\r\n\r\n    myData: float32 array list\r\n\r\nSo, each row is a float32 array and I've a list of rows.\r\nThe first column is the label, all other columns are the features\r\n\r\nUsing context.Data.LoadFromEnumerable () does not work on this data type.\r\nWhile the list implements IEnumerable, I can't use that function.\r\n\r\nFor now, I'm using something very ugly: I write the data to a csv and I load it from disk:\r\n\r\nthe row is defined as:\r\n```\r\n    [<CLIMutable>]\r\n    type DataRow =\r\n        {\r\n            [<ColumnName \"Label\"; LoadColumn(0)>]\r\n            Label: bool\r\n            [<ColumnName \"Features\"; LoadColumn(\r\n                [|\r\n                    001; 002; 003; 004; 005; 006; 007; 008; 009\r\n                    011; 012; 013; 014; 015; 016; 017; 018; 019\r\n                    021; 022; 023; 024; 025; 026; 027; 028; 029\r\n                    031; 032; 033; 034; 035; 036; 037; 038; 039\r\n                    041; 042; 043; 044; 045; 046; 047; 048; 049\r\n                    051; 052; 053; 054; 055; 056; 057; 058; 059\r\n                    061; 062; 063; 064; 065; 066; 067; 068; 069\r\n                    071; 072; 073; 074; 075; 076; 077; 078; 079\r\n                    081; 082; 083; 084; 085; 086; 087; 088; 089\r\n                    091; 092; 093; 094; 095; 096; 097; 098; 099\r\n                    101; 102; 103; 104; 105; 106; 107; 108; 109\r\n                    111; 112; 113; 114; 115; 116; 117; 118; 119\r\n                    121; 122; 123; 124; 125; 126; 127; 128; 129\r\n                    131; 132; 133; 134; 135; 136; 137; 138; 139\r\n                    141; 142; 143; 144; 145; 146; 147; 148; 149\r\n                    151; 152; 153; 154; 155; 156; 157; 158; 159\r\n                    161; 162; 163; 164; 165; 166; 167; 168; 169\r\n                    171; 172; 173; 174; 175; 176; 177; 178; 179\r\n                    181; 182; 183; 184; 185; 186; 187; 188; 189\r\n                    191; 192; 193; 194; 195; 196; 197; 198; 199\r\n                    201; 202; 203; 204; 205; 206; 207; 208; 209\r\n                    211; 212; 213; 214; 215; 216; 217; 218; 219\r\n                    221; 222; 223; 224; 225; 226; 227; 228; 229\r\n                    231; 232; 233; 234; 235; 236; 237; 238; 239\r\n                    241; 242; 243; 244; 245; 246; 247; 248; 249\r\n                |]\r\n            )>]\r\n            Features: float32 array\r\n        }\r\n```\r\nwhich makes very little sense...\r\n\r\nand the loading code is even worse:\r\n\r\n```\r\n    let trainModel (l: float32 array list) =\r\n\r\n        // create the MLContext\r\n        let context = MLContext()\r\n\r\n        // add logging\r\n        context.Log.Add (fun m -> if m.Kind <> ChannelMessageKind.Trace then info m.RawMessage)\r\n\r\n        // build a filename\r\n        let filename = nanoGuid()\r\n\r\n        // build the data as text\r\n        let text =\r\n            l\r\n            |> List.map (fun r -> r |> Array.map string |> String.concat \",\")\r\n            |> String.concat \"\\n\"\r\n\r\n        // write it to a file\r\n        File.WriteAllText(filename, text)\r\n\r\n        // load the data\r\n        let loadedData = context.Data.LoadFromTextFile<DataRow> (filename, hasHeader = false, separatorChar = ',')\r\n\r\n        // shuffle the data\r\n        let shuffledData = context.Data.ShuffleRows (loadedData)\r\n```\r\n\r\nhow can I use LoadFromEnumerable from a list to avoid this?\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6997","RelatedDescription":"Open issue \"Can't use LoadFromEnumerable in F#\" (#6997)"},{"Id":"2130517788","IsPullRequest":false,"CreatedAt":"2024-02-12T16:36:47","Actor":"ericstj","Number":"6996","RawContent":null,"Title":"Possible deadlock when running Microsoft.ML.Tests","State":"open","Body":"## Build Information\r\nBuild: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=561198\r\nBuild error leg or test failing: Microsoft.ML.Tests.WorkItemExecution\r\nPull request: https://github.com/dotnet/machinelearning/pull/6983\r\n<!-- Error message template  -->\r\n## Error Message\r\n\r\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssues.md#how-to-fill-out-a-known-issue-error-section).\r\n\r\n<!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. -->\r\n\r\n```json\r\n{\r\n  \"ErrorMessage\": [ \"[Long Running Test] 'Microsoft.ML.Tests.Scenarios.Api.CookbookSamples.CookbookSamplesDynamicApi.TextFeaturization'\", \"[Long Running Test] 'Microsoft.ML.Tests.Transformers.WordEmbeddingsTests.TestWordEmbeddings'\" ],\r\n  \"ErrorPattern\": \"\",\r\n  \"BuildRetry\": false,\r\n  \"ExcludeConsoleLog\": false\r\n}\r\n```\r\n\r\nsample output\r\n```\r\n[Long Running Test] 'Microsoft.ML.Tests.Scenarios.Api.CookbookSamples.CookbookSamplesDynamicApi.TextFeaturization', Elapsed: 00:58:09\r\n[Long Running Test] 'Microsoft.ML.Tests.Transformers.WordEmbeddingsTests.TestWordEmbeddings', Elapsed: 00:58:08\r\n```\r\n\r\n<!-- Known issue validation start -->\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=561198\r\n**Error message validated:** `[[Long Running Test] 'Microsoft.ML.Tests.Scenarios.Api.CookbookSamples.CookbookSamplesDynamicApi.TextFeaturization' [Long Running Test] 'Microsoft.ML.Tests.Transformers.WordEmbeddingsTests.TestWordEmbeddings'`]\r\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\r\n**Validation performed at:** 2/12/2024 4:36:55 PM UTC\r\n<!-- Known issue validation end -->\r\n<!--Known issue error report start -->\r\n### Report\r\n\r\n|Build|Definition|Test|Pull Request|\r\n|---|---|---|---|\r\n|[568440](https://dev.azure.com/dnceng-public/public/_build/results?buildId=568440)|dotnet/machinelearning|[Microsoft.ML.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=568440&view=ms.vss-test-web.build-test-results-tab&runId=13599132&resultId=101449)|dotnet/machinelearning#7001|\r\n|[566318](https://dev.azure.com/dnceng-public/public/_build/results?buildId=566318)|dotnet/machinelearning|[Microsoft.ML.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=566318&view=ms.vss-test-web.build-test-results-tab&runId=13535336&resultId=101401)|dotnet/machinelearning#6939|\r\n|[565386](https://dev.azure.com/dnceng-public/public/_build/results?buildId=565386)|dotnet/machinelearning|[Microsoft.ML.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=565386&view=ms.vss-test-web.build-test-results-tab&runId=13509808&resultId=101401)||\r\n|[565334](https://dev.azure.com/dnceng-public/public/_build/results?buildId=565334)|dotnet/machinelearning|[Microsoft.ML.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=565334&view=ms.vss-test-web.build-test-results-tab&runId=13507000&resultId=101401)|dotnet/machinelearning#6939|\r\n|[564718](https://dev.azure.com/dnceng-public/public/_build/results?buildId=564718)|dotnet/machinelearning|[Microsoft.ML.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=564718&view=ms.vss-test-web.build-test-results-tab&runId=13492854&resultId=101449)|dotnet/machinelearning#6939|\r\n|[562601](https://dev.azure.com/dnceng-public/public/_build/results?buildId=562601)|dotnet/machinelearning|[Microsoft.ML.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=562601&view=ms.vss-test-web.build-test-results-tab&runId=13434292&resultId=101401)|dotnet/machinelearning#6995|\r\n|[561198](https://dev.azure.com/dnceng-public/public/_build/results?buildId=561198)|dotnet/machinelearning|[Microsoft.ML.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=561198&view=ms.vss-test-web.build-test-results-tab&runId=13391146&resultId=101401)|dotnet/machinelearning#6983|\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|5|7|\r\n<!--Known issue error report end -->","Url":"https://github.com/dotnet/machinelearning/issues/6996","RelatedDescription":"Open issue \"Possible deadlock when running Microsoft.ML.Tests\" (#6996)"},{"Id":"2130143115","IsPullRequest":true,"CreatedAt":"2024-02-12T13:29:42","Actor":"dotnet-maestro[bot]","Number":"6995","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 97926d79-6b8b-4d32-c8db-08d9d479971c\r\n- **Build**: 20240214.1\r\n- **Date Produced**: February 14, 2024 4:13:48 PM UTC\r\n- **Commit**: d5b02a4900c4d521cb48b8f0d7e3f28175268f7c\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.24102.4 to 9.0.0-beta.24114.1][2]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 9.0.0-beta.24102.4 to 9.0.0-beta.24114.1][2]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.24102.4 to 9.0.0-beta.24114.1][2]\r\n  - **Microsoft.DotNet.SignTool**: [from 9.0.0-beta.24102.4 to 9.0.0-beta.24114.1][2]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 9.0.0-beta.24102.4 to 9.0.0-beta.24114.1][2]\r\n  - **Microsoft.DotNet.XliffTasks**: [from 9.0.0-beta.24102.4 to 9.0.0-beta.24114.1][2]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.24102.4 to 9.0.0-beta.24114.1][2]\r\n\r\n[2]: https://github.com/dotnet/arcade/compare/2fb543a455...d5b02a4900\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6995","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#6995)"},{"Id":"2125810179","IsPullRequest":false,"CreatedAt":"2024-02-08T18:20:03","Actor":"ericstj","Number":"6993","RawContent":null,"Title":"[Tokenizers] Port CLIP Tokenizer ","State":"open","Body":"Port CLIP tokenizer which leverages byte-level BPE. This tokenizer enables scenarios like StableDiffusion\r\n\r\nMay be dependent on https://github.com/dotnet/machinelearning/issues/6992.\r\n\r\nReference:\r\nhttps://huggingface.co/docs/transformers/main/en/model_doc/clip\r\nhttps://github.com/huggingface/transformers/blob/0549000c5bf6c7249f411917f2a6f0b6d0f06da1/src/transformers/models/codegen/tokenization_codegen.py#L98\r\nhttps://onnxruntime.ai/docs/tutorials/csharp/stable-diffusion-csharp.html#tokenization-with-onnx-runtime-extensions\r\n\r\nPaper:\r\nhttps://arxiv.org/abs/2103.00020\r\nhttps://arxiv.org/pdf/2103.00020.pdf","Url":"https://github.com/dotnet/machinelearning/issues/6993","RelatedDescription":"Open issue \"[Tokenizers] Port CLIP Tokenizer \" (#6993)"},{"Id":"2125793917","IsPullRequest":false,"CreatedAt":"2024-02-08T18:09:52","Actor":"ericstj","Number":"6992","RawContent":null,"Title":"[Tokenizers] Port CodeGenTokenizer & byte-level BPE algorithm","State":"open","Body":"Port Codegen Tokenizer to enable Phi-2 models\r\n\r\nReference:\r\nhttps://huggingface.co/docs/transformers/main/en/model_doc/codegen\r\nhttps://github.com/huggingface/transformers/blob/0549000c5bf6c7249f411917f2a6f0b6d0f06da1/src/transformers/models/codegen/tokenization_codegen.py#L98\r\n\r\nPaper:\r\nhttps://arxiv.org/abs/2203.13474\r\nhttps://arxiv.org/pdf/2203.13474.pdf","Url":"https://github.com/dotnet/machinelearning/issues/6992","RelatedDescription":"Open issue \"[Tokenizers] Port CodeGenTokenizer & byte-level BPE algorithm\" (#6992)"},{"Id":"2125777956","IsPullRequest":false,"CreatedAt":"2024-02-08T17:59:58","Actor":"ericstj","Number":"6991","RawContent":null,"Title":"[Tokenizers] Port BERTTokenizers","State":"open","Body":"Porting BERTTokenizers enables several text embedding generation models.  Requires https://github.com/dotnet/machinelearning/issues/6988.\r\n\r\nhttps://github.com/huggingface/text-embeddings-inference?tab=readme-ov-file#text-embeddings.\r\nhttps://github.com/huggingface/transformers/blob/v4.37.0/src/transformers/models/bert/tokenization_bert.py#L137\r\n\r\ncc @luisquintanilla\r\n\r\nWe already have some BERT implementation which may be sufficient.","Url":"https://github.com/dotnet/machinelearning/issues/6991","RelatedDescription":"Open issue \"[Tokenizers] Port BERTTokenizers\" (#6991)"},{"Id":"2122643810","IsPullRequest":false,"CreatedAt":"2024-02-07T10:03:02","Actor":"hannespreishuber","Number":"6990","RawContent":null,"Title":"Auto ML Model Builder Object detection - bad or no results","State":"open","Body":"Windows 11 Surface Pro 8 \r\n - ML.NET Version 3.01\r\n -NET 8\r\n\r\nI have a selfmade training set of free hand drawn simple objects - black on white - circle, rect, triangle. Training with AutoML image classification works fast and detection results are very good.\r\n\r\nI did a dataset vott image tagging. Created a single json file and ~150 images. Training with AutoML and Object Detection. Takes ~25minutes and results are unusable.\r\nMAP50_95: 0,1258\r\nModell: ObjectDetectionMulti\r\n\r\nExpected results is a better/good detection rate. I have no idea whats going on with my dataset. And how optimize it.\r\nSide effect: Error Message from Visual Studio \"no bbox detected\" have to restart VS to rerun..\r\n\r\nattached Json and sample image\r\n[916a019c0896a9c18f5b7b2540b8014b-asset.json](https://github.com/dotnet/machinelearning/files/14191867/916a019c0896a9c18f5b7b2540b8014b-asset.json)\r\n![dreieck0](https://github.com/dotnet/machinelearning/assets/3587156/af685623-d45a-431c-a074-e35f08055382)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6990","RelatedDescription":"Open issue \"Auto ML Model Builder Object detection - bad or no results\" (#6990)"},{"Id":"2119550185","IsPullRequest":false,"CreatedAt":"2024-02-05T22:12:15","Actor":"tarekgh","Number":"6989","RawContent":null,"Title":"Track optimizing Tiktoken","State":"open","Body":"This issue is tracking addressing the optimization feedback in the PR https://github.com/dotnet/machinelearning/pull/6981\r\n\r\n- https://github.com/dotnet/machinelearning/pull/6981#pullrequestreview-1860350976\r\n- https://github.com/dotnet/machinelearning/pull/6981#pullrequestreview-1860358344\r\n- https://github.com/dotnet/machinelearning/pull/6981#pullrequestreview-1860371153\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6989","RelatedDescription":"Open issue \"Track optimizing Tiktoken\" (#6989)"},{"Id":"2119092962","IsPullRequest":false,"CreatedAt":"2024-02-05T17:32:31","Actor":"ericstj","Number":"6988","RawContent":null,"Title":"[Tokenizers] Implement WordPiece algorithm","State":"open","Body":"The WordPiece algorithm should be added to Microsoft.ML.Tokenizers.  WordPiece algorithm is the basis for BERTTokenizer-based models.\r\n\r\nWe can see reference implementations in \r\nhttps://github.com/microsoft/BlingFire (MIT license)\r\nhttps://github.com/huggingface/tokenizers (Apache license)\r\n\r\nThe paper which it's based on:\r\nhttps://arxiv.org/abs/1609.08144\r\nhttps://arxiv.org/pdf/1609.08144.pdf","Url":"https://github.com/dotnet/machinelearning/issues/6988","RelatedDescription":"Open issue \"[Tokenizers] Implement WordPiece algorithm\" (#6988)"},{"Id":"2119011342","IsPullRequest":false,"CreatedAt":"2024-02-05T16:49:50","Actor":"ericstj","Number":"6987","RawContent":null,"Title":"[Tokenizers] Port LLaMA Tokenizer and SentencePiece algorithm","State":"open","Body":"The SentencePiece algorithm should be added to Microsoft.ML.Tokenizers.  This is a dependency of LLaMATokenizer which we also wish to enable.\r\n\r\nWe can see reference implementations in \r\nhttps://github.com/microsoft/BlingFire (MIT license)\r\nhttps://github.com/google/sentencepiece (Apache license)\r\nhttps://github.com/huggingface/tokenizers (Apache license)\r\nhttps://huggingface.co/docs/transformers/main/en/model_doc/llama\r\n\r\nHugging face also has Llama2 - might be interesting to understand if that's also worth including or designing for later inclusion.\r\n\r\nLLaMA Tokenizer:\r\nhttps://arxiv.org/abs/2203.13474\r\nhttps://arxiv.org/pdf/2203.13474.pdf\r\n\r\nSentence Piece:\r\nhttps://arxiv.org/abs/1808.06226\r\nhttps://arxiv.org/pdf/1808.06226.pdf","Url":"https://github.com/dotnet/machinelearning/issues/6987","RelatedDescription":"Open issue \"[Tokenizers] Port LLaMA Tokenizer and SentencePiece algorithm\" (#6987)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-02-20T03:30:16.637701Z","RunDurationInMilliseconds":415}