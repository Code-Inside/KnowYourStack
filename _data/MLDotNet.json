{"Data":{"GitHub":{"Issues":[{"Id":"1462691545","IsPullRequest":false,"CreatedAt":"2022-11-24T03:14:27","Actor":"triandco","Number":"6469","RawContent":null,"Title":"Onnx input and output data type","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nI was trying to follow [a guide on how to use Onnx model with dotnet](https://learn.microsoft.com/en-us/azure/machine-learning/how-to-use-automl-onnx-model-dotnet). I find it difficult to understand how to translate the data type of input and output into C#. The type as display on Netron seems to be python but not quite. From the example I understand that something like ```int32[n,1]``` would be a single int32 value, however, in one of my model, I found the type ```float32[batch, sequence,768]``` which is harder to translate. \r\n\r\n**Describe the solution you'd like**\r\nIs there any further documentation on what these types are?\r\n\r\n**Describe alternatives you've considered**\r\nI opened an issue on Netron's repo asking if there is any documentation on the type and he suggested that I post an issue on MS side.\r\n\r\nI appreciate that there is already [an opening issue](https://github.com/dotnet/machinelearning/issues/5918) about improving on this documentation. However, is there any quick pointer on this particular issue?\r\n\r\nMuch appreciated\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6469","RelatedDescription":"Open issue \"Onnx input and output data type\" (#6469)"},{"Id":"1462462929","IsPullRequest":true,"CreatedAt":"2022-11-23T22:03:19","Actor":"michaelgsharp","Number":"6468","RawContent":null,"Title":"Cherry picking PR that fixes official build.","State":"closed","Body":"Cherry picking PR that fixes official build.","Url":"https://github.com/dotnet/machinelearning/pull/6468","RelatedDescription":"Closed or merged PR \"Cherry picking PR that fixes official build.\" (#6468)"},{"Id":"1462459543","IsPullRequest":true,"CreatedAt":"2022-11-23T22:01:00","Actor":"michaelgsharp","Number":"6467","RawContent":null,"Title":"new os image for official builds.","State":"closed","Body":"Fixing os image for official builds. Already been validated.","Url":"https://github.com/dotnet/machinelearning/pull/6467","RelatedDescription":"Closed or merged PR \"new os image for official builds.\" (#6467)"},{"Id":"1462232605","IsPullRequest":true,"CreatedAt":"2022-11-23T18:43:03","Actor":"michaelgsharp","Number":"6466","RawContent":null,"Title":"Cherry picking ngram into 2.0","State":"closed","Body":"Cherry picking ngram into 2.0 for the servicing release.","Url":"https://github.com/dotnet/machinelearning/pull/6466","RelatedDescription":"Closed or merged PR \"Cherry picking ngram into 2.0\" (#6466)"},{"Id":"1461323927","IsPullRequest":false,"CreatedAt":"2022-11-23T09:03:45","Actor":"andrasfuchs","Number":"6465","RawContent":null,"Title":"Long running AutoML experiment freezes Windows","State":"open","Body":"**System Information:**\r\n - OS & Version: Windows 11 [Version 10.0.22621.819]\r\n - ML.NET Version: ML.NET v2.0.0\r\n - .NET Version: .NET 7.0.100\r\n\r\n**Describe the bug**\r\nI run an ML.NET experiment for 10 hours. I limited the training for FastTree and FastForest algorithms and I made sure that every new best model is saved even if the whole run fails. I locked Windows and let it run during the night.\r\nWhen I checked it in the morning (12 hours after the experiment started) I couldn't even log in, I had to do a power off-power on to get access. When I checked the logs it looked like the last experiment was saved after ~5 hours of running. \r\nThe dataset wasn't particularly big this time, it was only a 205 MB CSV file. My system has 32 GB RAM, and I set the maximum memory usage for the experiment to 20 GB.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create a pipeline that includes only FastTree and FastForest, for example:\r\n```\r\nvar pipeline =\r\n  mlContext.Auto().Featurizer(trainTestData.TrainSet, numericColumns: new[] { \"Features\" })\r\n      .Append(mlContext.Auto().Regression(useFastTree: true, useLbfgs: false, useSdca: false, useFastForest: true, useLgbm: false));\r\n\r\n```\r\n2. Create an ML.NET experiment and set its memory limit. I set it to 20 GB, because I usually have ~24 GB available when I start the training.\r\n```\r\nvar experiment = mlContext.Auto().CreateExperiment();\r\n\r\nexperiment\r\n    .SetPipeline(pipeline)\r\n    .SetTrainingTimeInSeconds(trainingTimeInSeconds)\r\n    .SetRegressionMetric(RegressionMetric.RSquared, labelColumn: \"Label\")\r\n    .SetDataset(trainTestData.TrainSet, trainTestData.TestSet)\r\n    .SetMonitor(monitor)\r\n    .SetMaximumMemoryUsageInMegaByte(20 * 1024);\r\n```\r\n4. Run the experiment for at least 10 hours\r\n5. Check if you can still use the system after 5+ hours of running\r\n\r\n**Expected behavior**\r\nI would expect the experiment to run without a system-freezing halt.\r\n\r\n**Screenshots, Code, Sample Projects**\r\nThe 205 MB CSV dataset can be downloaded from here:\r\n[BBD_20221122__TrainingData.Sleep.MLP12__MLP12_0p25Hz-250Hz__Session_SegmentedData_Sleep_Level__15782rows.zip](https://drive.google.com/file/d/1FIE9Qqmt44WEmqFpZESjrIbL-sEafigX/view?usp=sharing)\r\n\r\n**Additional context**\r\nMy project is open-source so both the source and the data are available. Let me know if you need them for testing.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6465","RelatedDescription":"Open issue \"Long running AutoML experiment freezes Windows\" (#6465)"},{"Id":"1461260339","IsPullRequest":false,"CreatedAt":"2022-11-23T08:18:40","Actor":"kimhegg","Number":"6464","RawContent":null,"Title":"Is it really neccessary to annotate ImageSource with [Microsoft.ML.Transforms.Image.ImageType(x, x)] ?","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nIt's very frustrating that we need to annotate the ModelInput imagesource with [Microsoft.ML.Transforms.Image.ImageType(800, 600)]. It should be possible to set these values in runtime.\r\nI thought that Ml 2.0 would fix this, but unfortunately it doesn't seem so.\r\n\r\n\r\n**Describe the solution you'd like**\r\nIs it not possible to just remove the neccessity of the annotation and just get height and width from the image, or any other way?  \r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6464","RelatedDescription":"Open issue \"Is it really neccessary to annotate ImageSource with [Microsoft.ML.Transforms.Image.ImageType(x, x)] ?\" (#6464)"},{"Id":"1453973523","IsPullRequest":true,"CreatedAt":"2022-11-23T06:11:47","Actor":"michaelgsharp","Number":"6458","RawContent":null,"Title":"Add in ability to have pre-defined weights for ngrams.","State":"closed","Body":"Add in ability to have pre-defined weights for ngrams.","Url":"https://github.com/dotnet/machinelearning/pull/6458","RelatedDescription":"Closed or merged PR \"Add in ability to have pre-defined weights for ngrams.\" (#6458)"},{"Id":"1460649096","IsPullRequest":false,"CreatedAt":"2022-11-22T22:34:10","Actor":"caseyeasterday","Number":"6463","RawContent":null,"Title":"Expand Model Builder to support probabilistic and density-based clustering?","State":"open","Body":"I'm frustrated that K-means clustering is the only clustering method available. A hard clustering approach like this really limits the applications of a clustering model for use cases like anomaly detection and exploratory analytics. In addition, K-means tends to limit solutions to globular clusters, and does not accommodate clusters of other (hyper)shapes.\r\n\r\nI would like to see support for Gaussian Mixture Models (GMM), and density-based clustering like DBSCAN. Implementations of these approaches would need to provide probabilities of membership to all clusters. It would also be helpful to have support for metrics including Silhouette coefficient and SSE.\r\n\r\nI've consider K-Means, but it won't suffice. ","Url":"https://github.com/dotnet/machinelearning/issues/6463","RelatedDescription":"Open issue \"Expand Model Builder to support probabilistic and density-based clustering?\" (#6463)"},{"Id":"1460639921","IsPullRequest":false,"CreatedAt":"2022-11-22T22:25:34","Actor":"caseyeasterday","Number":"6462","RawContent":null,"Title":"Is ARIMA time series modeling/forecasting on the ML.NET roadmap?","State":"open","Body":"I feel very limited that SSA is the only method available for time series modeling. Of course, other parametric and non-parametric models are capable of forecasting, but a parametric approach like ARIMA that can incorporate MA, AR, seasonality is powerful, fast, and scalable.\r\n\r\nI would like ML.NET to add ARIMA to be added to Model Builder. Ideally this would include support for ACF/PACF/EACF analysis, differencing, and auto-ARIMA.\r\n\r\nThe existing SSA algorithm and other parametric (e.g., linear regression, etc.) and non-parametric (e.g., trees, ensembles, etc.) models for forecasting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6462","RelatedDescription":"Open issue \"Is ARIMA time series modeling/forecasting on the ML.NET roadmap?\" (#6462)"},{"Id":"1459959711","IsPullRequest":false,"CreatedAt":"2022-11-22T14:17:11","Actor":"schmik","Number":"6461","RawContent":null,"Title":"Tag/Release for ML.NET 2.0.0","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nThere is neither a [release](https://github.com/dotnet/machinelearning/releases) nor a [tag](https://github.com/dotnet/machinelearning/tags) for Version 2.0.0 (latest: 1.7.1)\r\n\r\n**Describe the solution you'd like**\r\nUnless this is deliberate: Continue flagging/tagging releases.","Url":"https://github.com/dotnet/machinelearning/issues/6461","RelatedDescription":"Open issue \"Tag/Release for ML.NET 2.0.0\" (#6461)"},{"Id":"1458719438","IsPullRequest":false,"CreatedAt":"2022-11-21T22:59:41","Actor":"whitmark","Number":"6460","RawContent":null,"Title":"Target .NET Framework 4.8 app unable to load one or more of the requested types ","State":"open","Body":"Under ML.Net 2.0.0-preview.22313.1, I was able to create a custom class library that targets the .NET Framework 4.8 to identify which dlls I need to use in a 3rd-party app that loaded just fine.  When I update to ML.Net 2.0.0 under .Net 7, I am getting several errors of the following kind where xxxxxx is the 3rd-party app.\r\n\r\nUnable to retrieve type info for 'xxxxxx.AddOnBase' from assembly 'Microsoft.ML.Core': Unable to load one or more of the requested types. Retrieve the LoaderExceptions property for more information.\r\nFailed load vendor assembly 'xxxxx\\Microsoft.ML.Core.dll': The given key was not present in the dictionary.\r\n\r\nUnable to retrieve type info for 'xxxxxx.AddOnBase' from assembly 'Microsoft.ML.Data': Unable to load one or more of the requested types. Retrieve the LoaderExceptions property for more information.\r\nFailed load vendor assembly 'xxxxxx\\Microsoft.ML.Data.dll': The given key was not present in the dictionary.\r\n\r\nUnable to retrieve type info for 'xxxxxx.AddOnBase' from assembly 'Microsoft.ML.DataView': Unable to load one or more of the requested types. Retrieve the LoaderExceptions property for more information.\r\nFailed load vendor assembly 'xxxxx\\Microsoft.ML.DataView.dll': The given key was not present in the dictionary.\r\n\r\nUnable to retrieve type info for 'xxxxxx.AddOnBase' from assembly 'Microsoft.ML.FastTree': Unable to load one or more of the requested types. Retrieve the LoaderExceptions property for more information.\r\nFailed load vendor assembly 'xxxxxx\\Microsoft.ML.FastTree.dll': The given key was not present in the dictionary.\r\n\r\nUnable to retrieve type info for 'xxxxxx.AddOnBase' from assembly 'Microsoft.ML.StandardTrainers': Unable to load one or more of the requested types. Retrieve the LoaderExceptions property for more information.\r\nFailed load vendor assembly 'xxxxxx\\Microsoft.ML.StandardTrainers.dll': The given key was not present in the dictionary.\r\n\r\nUnable to retrieve type info for 'xxxxxx.AddOnBase' from assembly 'Microsoft.ML.Transforms': Unable to load one or more of the requested types. Retrieve the LoaderExceptions property for more information.\r\nFailed load vendor assembly 'xxxxx\\Microsoft.ML.Transforms.dll': The given key was not present in the dictionary.\r\n\r\nAlthough ML.Net 2.0.0 went GA with .Net 7, I don't believe my simple inference custom class library project is using anything beyond netstandard2.0 per the frameworks listed in NuGet .  The target app is a popular closed-code trading platform that links in dlls.  The tactic of creating a custom class that targets .Net 4.8 has worked well in the past to identify and output the necessary dlls to copy over and reference for this trading application.   It would seem since the ML.Net preview, these type are located elsewhere to be determined.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6460","RelatedDescription":"Open issue \"Target .NET Framework 4.8 app unable to load one or more of the requested types \" (#6460)"},{"Id":"1454266280","IsPullRequest":false,"CreatedAt":"2022-11-18T01:12:07","Actor":"totalgit74","Number":"6459","RawContent":null,"Title":"Additional constructor methods for Microsoft.Data.Analysis.DataFrame","State":"open","Body":"**Describe the solution you'd like**\r\nI would like to see additional constructor methods implemented to standardise construction from objects rather than have users implement their own external creations which could be less than optimal. \r\n\r\nI notice that there is a **FromArrowRecordBatch** static method so this design pattern is not a new one.\r\n\r\n**Additional context**\r\nThere are various implementations on the Extreme Optimization library\r\n[DataFrame.FromObjects](https://www.extremeoptimization.com/Documentation/Reference/Extreme.DataAnalysis.DataFrame.FromObjects-Overloads.aspx)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6459","RelatedDescription":"Open issue \"Additional constructor methods for Microsoft.Data.Analysis.DataFrame\" (#6459)"},{"Id":"1452863619","IsPullRequest":false,"CreatedAt":"2022-11-17T07:38:58","Actor":"ADD-eNavarro","Number":"6456","RawContent":null,"Title":"Sentence Similarity for other languages","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nSentence Similarity uses a pretrained NAS-BERT, which in my understanding has been trained in english, restricting the usage of this feature to this language.\r\n\r\n**Describe the solution you'd like**\r\nI'd love to be able to choose a different language when using Sentence Similarity.\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6456","RelatedDescription":"Open issue \"Sentence Similarity for other languages\" (#6456)"},{"Id":"1450044391","IsPullRequest":false,"CreatedAt":"2022-11-15T16:18:39","Actor":"samliu319","Number":"6455","RawContent":null,"Title":"Is there a deep neural network for tabular data (like TabNet)?","State":"open","Body":"I've just started machine learning, but I reject learning with python. I am interested in deep learning of tabular data, but I can't find .Net related resources. I hope I can get some guidance here, thanks!","Url":"https://github.com/dotnet/machinelearning/issues/6455","RelatedDescription":"Open issue \"Is there a deep neural network for tabular data (like TabNet)?\" (#6455)"},{"Id":"1449329198","IsPullRequest":false,"CreatedAt":"2022-11-15T07:51:23","Actor":"johandanforth","Number":"6454","RawContent":null,"Title":"Sample with face recognition and training?","State":"open","Body":"I'm missing a sample for face recognition, with both training and consumption, implemented with ML.Net. It seems that @MatiKingloom had something going there, a couple of years ago. ","Url":"https://github.com/dotnet/machinelearning/issues/6454","RelatedDescription":"Open issue \"Sample with face recognition and training?\" (#6454)"},{"Id":"1448735598","IsPullRequest":false,"CreatedAt":"2022-11-14T20:55:00","Actor":"beccamc","Number":"6453","RawContent":null,"Title":"Multi-GPU support","State":"open","Body":"Reported by @torronen in tools repo - [original issue](https://github.com/dotnet/machinelearning-modelbuilder/issues/2364). Coping the request for Multi-GPU support here. \r\n\r\nNew Text Classification can efficiently use GPU, almost 100% according to task manager. Need for CPU is also quite high, so it probably would be the next bottleneck, but multi-gpu support would be nice to lower temperatures and at least some speed up.\r\n\r\n![image](https://user-images.githubusercontent.com/26261427/201221706-df2c20ab-1d7f-4efe-893f-7a4036142f7a.png)\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6453","RelatedDescription":"Open issue \"Multi-GPU support\" (#6453)"},{"Id":"1448533410","IsPullRequest":true,"CreatedAt":"2022-11-14T18:21:00","Actor":"dotnet-maestro[bot]","Number":"6451","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1c26c342-7dbd-4e18-3778-08daa2f83374)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1c26c342-7dbd-4e18-3778-08daa2f83374\r\n- **Build**: 20221111.2\r\n- **Date Produced**: November 11, 2022 6:35:12 PM UTC\r\n- **Commit**: f36ea231c234560514ede4c2747897a737ced28f\r\n- **Branch**: refs/heads/release/7.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22558.4 to 7.0.0-beta.22561.2][3]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 7.0.0-beta.22558.4 to 7.0.0-beta.22561.2][3]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22558.4 to 7.0.0-beta.22561.2][3]\r\n  - **Microsoft.DotNet.SignTool**: [from 7.0.0-beta.22558.4 to 7.0.0-beta.22561.2][3]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 7.0.0-beta.22558.4 to 7.0.0-beta.22561.2][3]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.22558.4 to 7.0.0-beta.22561.2][3]\r\n\r\n[3]: https://github.com/dotnet/arcade/compare/3f3c360...f36ea23\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1c26c342-7dbd-4e18-3778-08daa2f83374)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6451","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#6451)"},{"Id":"1446626405","IsPullRequest":false,"CreatedAt":"2022-11-12T22:17:35","Actor":"deiruch","Number":"6450","RawContent":null,"Title":"Document default values of TrainerOptions","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nLooking up the default value of `LightGbmMulticlassTrainer.Options.NumberOfIterations` just took me way too long. The default values should be stated in the documentation.\r\n\r\n**Describe the solution you'd like**\r\nThe documentation should mention the default values.\r\n\r\n**Describe alternatives you've considered**\r\nCreate an application, instantiate the object there and print out the values.\r\n\r\n**Additional context**\r\nI reported this before in #4311. There, instead of updating the documentation, I was provided the answer. That's nice, but not scalable, and wasn't my suggestion. To be clear: I suggest you include all default values in the documentation.","Url":"https://github.com/dotnet/machinelearning/issues/6450","RelatedDescription":"Open issue \"Document default values of TrainerOptions\" (#6450)"},{"Id":"1446521036","IsPullRequest":true,"CreatedAt":"2022-11-12T16:46:58","Actor":"FranklinWhale","Number":"6449","RawContent":null,"Title":"Add `DataViewSchema` overloads to `ConvertToOnnx`","State":"open","Body":"Fixes #6448 ","Url":"https://github.com/dotnet/machinelearning/pull/6449","RelatedDescription":"Open PR \"Add `DataViewSchema` overloads to `ConvertToOnnx`\" (#6449)"},{"Id":"1446265698","IsPullRequest":false,"CreatedAt":"2022-11-12T05:28:53","Actor":"FranklinWhale","Number":"6448","RawContent":null,"Title":"`ConvertToOnnx` should also accept `DataViewSchema`","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nCurrently, [saving a model to zip file](https://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.modeloperationscatalog.save?view=ml-dotnet) only requires a `DataViewSchema`, but [saving a model to ONNX](https://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.onnxexportextensions.converttoonnx?view=ml-dotnet-preview) requires `IDataView`.\r\n\r\nInside [`ConvertToOnnxProtobufCore`](https://github.com/dotnet/machinelearning/blob/main/src/Microsoft.ML.OnnxConverter/OnnxExportExtensions.cs#L18), a prediction was performed (`transform.Transform(inputData)`), which may be expensive if the training data set is large.\r\n\r\n**Describe the solution you'd like**\r\n`ConvertToOnnx` should have overloads that accept `DataViewSchema`, then convert the `DataViewSchema` to an [empty `IDataView`](https://github.com/dotnet/machinelearning/blob/main/src/Microsoft.ML.Data/DataView/EmptyDataView.cs), and pass the empty `IDataView` to the methods accepting `IDataView`.\r\n\r\nThe performance of methods accepting `IDataView` may be improved if `EmptyDataView` is created from the [Schema of the IDataView](https://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.idataview.schema?view=ml-dotnet) and passed to `ConvertToOnnxProtobuf`, instead of full data.\r\n\r\n**Describe alternatives you've considered**\r\nNil\r\n\r\n**Additional context**\r\nI have implemented the proposed solution and that seems working well. It is unfortunate that [`EmptyDataView`](https://github.com/dotnet/machinelearning/blob/main/src/Microsoft.ML.Data/DataView/EmptyDataView.cs) is an `internal` class, so I have to implement my own `EmptyDataView`.\r\n\r\n```cs\r\nsealed record EmptyDataView(DataViewSchema Schema) : IDataView {\r\n\tpublic bool CanShuffle => true;\r\n\r\n\tpublic long? GetRowCount() => 0L;\r\n\r\n\tpublic DataViewRowCursor GetRowCursor(IEnumerable<DataViewSchema.Column> columnsNeeded, Random? rand = null)\r\n\t\t=> new EmptyDataViewRowCursor(Schema);\r\n\r\n\tpublic DataViewRowCursor[] GetRowCursorSet(IEnumerable<DataViewSchema.Column> columnsNeeded, int n, Random? rand = null)\r\n\t\t=> Array.Empty<DataViewRowCursor>();\r\n}\r\n\r\nsealed class EmptyDataViewRowCursor : DataViewRowCursor {\r\n\tprivate readonly DataViewSchema schema;\r\n\r\n\tpublic EmptyDataViewRowCursor(DataViewSchema Schema) {\r\n\t\tschema = Schema;\r\n\t}\r\n\r\n\tpublic override DataViewSchema Schema => schema;\r\n\r\n\tpublic override long Position => -1L;\r\n\r\n\tpublic override bool IsColumnActive(DataViewSchema.Column column) => false;\r\n\r\n\tpublic override bool MoveNext() => false;\r\n\r\n\tpublic override long Batch => 0L;\r\n\r\n\tpublic override ValueGetter<TValue> GetGetter<TValue>(DataViewSchema.Column column)\r\n\t\t=> throw new InvalidOperationException();\r\n\r\n\tpublic override ValueGetter<DataViewRowId> GetIdGetter()\r\n\t\t=> throw new InvalidOperationException();\r\n}\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/6448","RelatedDescription":"Open issue \"`ConvertToOnnx` should also accept `DataViewSchema`\" (#6448)"},{"Id":"1446207805","IsPullRequest":true,"CreatedAt":"2022-11-12T03:11:12","Actor":"LittleLittleCloud","Number":"6447","RawContent":null,"Title":"fix #6446","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\nfix #6446","Url":"https://github.com/dotnet/machinelearning/pull/6447","RelatedDescription":"Open PR \"fix #6446\" (#6447)"},{"Id":"1438377178","IsPullRequest":true,"CreatedAt":"2022-11-11T15:22:40","Actor":"dotnet-maestro[bot]","Number":"6439","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1c26c342-7dbd-4e18-3778-08daa2f83374)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1c26c342-7dbd-4e18-3778-08daa2f83374\r\n- **Build**: 20221108.4\r\n- **Date Produced**: November 8, 2022 7:03:36 PM UTC\r\n- **Commit**: 3f3c360819c5c092d0e4505a67dfe59a33fba557\r\n- **Branch**: refs/heads/release/7.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22514.3 to 7.0.0-beta.22558.4][2]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 7.0.0-beta.22514.3 to 7.0.0-beta.22558.4][2]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22514.3 to 7.0.0-beta.22558.4][2]\r\n  - **Microsoft.DotNet.SignTool**: [from 7.0.0-beta.22514.3 to 7.0.0-beta.22558.4][2]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 7.0.0-beta.22514.3 to 7.0.0-beta.22558.4][2]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.22514.3 to 7.0.0-beta.22558.4][2]\r\n\r\n[2]: https://github.com/dotnet/arcade/compare/3083cc9...3f3c360\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates tools.dotnet to 7.0.100\r\n\r\n[marker]: <> (End:1c26c342-7dbd-4e18-3778-08daa2f83374)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6439","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6439)"},{"Id":"1448728241","IsPullRequest":false,"CreatedAt":"2022-11-11T10:29:27","Actor":"torronen","Number":"6452","RawContent":null,"Title":"Text Classification: auto-concat multiple text fields ","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nAt the moment, Text Classification accepts only one text field.\r\n\r\nMany of my datasets include multiple columns, each with some text.  My understanding is that dataset creators typically want to put each part in separate column so the data can be used in databases, so I believe this is the case with others, too. Typical example might be: Title, Contents, Tags, Author. \r\n\r\nI would like to use at least Title and Contents as input for Text Classification. Title might be the most valuable field, but contents are sometimes very important, too. One example like this can be news articles: sometimes title is good, but sometimes it can \"click-bait title\" and the contents are more important.\r\n\r\n**Describe the solution you'd like**\r\nA simple solution might be concatenate all text fields user has selected.\r\n\r\nQ: If this would be implemented, does the order of concatenation matter?\r\n\r\n**Describe alternatives you've considered**\r\nOnly other alternative I know of is to re-create the dataset with all data in one field.\r\nI could also ask the data team to add one column \"AllText\" but it will almost double the size of the file.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6452","RelatedDescription":"Open issue \"Text Classification: auto-concat multiple text fields \" (#6452)"},{"Id":"1443669460","IsPullRequest":false,"CreatedAt":"2022-11-10T10:49:09","Actor":"thoron","Number":"6446","RawContent":null,"Title":"AutoML experiments in non declarative style not working","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: 2.0\r\n - .NET Version: .NET6\r\n\r\n**Describe the bug**\r\nRunning the \"old\" AutoML experiments does not work for all trainers. Using `CreateMulticlassClassificationExperiment` or `CreateRegressionExperiment` instead of the new declarative style will result in an exception (possibly due to custom schemas).\r\n\r\nAn exception will be raised in the new SweepablePipeline:\r\n```stacktrace\r\nSystem.NullReferenceException: Object reference not set to an instance of an object.\r\n   at Microsoft.ML.AutoML.SweepablePipeline..ctor(Dictionary`2 estimators, Entity schema, String currentSchema)\r\n   at Microsoft.ML.AutoML.SweepablePipeline.AppendEntity(Boolean allowSkip, Entity entity)\r\n   at Microsoft.ML.AutoML.AutoCatalog.MultiClassification(String labelColumnName, String featureColumnName, String exampleWeightColumnName, Boolean useFastForest, Boolean useLgbm, Boolean useFastTree, Boolean useLbfgs, Boolean useSdca, FastTreeOption fastTreeOption, LgbmOption lgbmOption, FastForestOption fastForestOption, LbfgsOption lbfgsOption, SdcaOption sdcaOption, SearchSpace`1 fastTreeSearchSpace, SearchSpace`1 lgbmSearchSpace, SearchSpace`1 fastForestSearchSpace, SearchSpace`1 lbfgsSearchSpace, SearchSpace`1 sdcaSearchSpace)\r\n   at Microsoft.ML.AutoML.MulticlassClassificationExperiment.CreateMulticlassClassificationPipeline(IDataView trainData, ColumnInformation columnInformation, IEstimator`1 preFeaturizer)\r\n   at Microsoft.ML.AutoML.MulticlassClassificationExperiment.Execute(IDataView trainData, ColumnInformation columnInformation, IEstimator`1 preFeaturizer, IProgress`1 progressHandler)\r\n   at Microsoft.ML.AutoML.MulticlassClassificationExperiment.Execute(IDataView trainData, String labelColumnName, String samplingKeyColumn, IEstimator`1 preFeaturizer, IProgress`1 progressHandler)\r\n```\r\n\r\n\r\n**To Reproduce**\r\n```csharp\r\nvar experimentSettings = new MulticlassExperimentSettings\r\n{\r\n  MaxExperimentTimeInSeconds = 30,\r\n  OptimizingMetric = MulticlassClassificationMetric.MacroAccuracy\r\n};\r\nexperimentSettings.Trainers.Clear();\r\nexperimentSettings.Trainers.Add(MulticlassClassificationTrainer.LbfgsMaximumEntropy);\r\nctx.Auto().CreateMulticlassClassificationExperiment(experimentSettings).Execute(trainDv);\r\n```\r\nWhere the schema is of a custom type:\r\n```csharp\r\nvar schemaDef = SchemaDefinition.Create(typeof(ModelInput));\r\nschemaDef[\"Features\"].ColumnType = new VectorDataViewType(NumberDataViewType.Single, numberOfFeatures);\r\nschemaDef.Remove(schemaDef[\"LabelFeaturized\"]); // removed when not applicable\r\n```\r\n\r\n```csharp\r\npublic class ModelInput\r\n{\r\n  public uint Label;\r\n  public float LabelFeaturized;\r\n  public float[] Features;\r\n}\r\n```\r\n\r\n**Expected behavior**\r\nNo regression expected for `CreateMulticlassClassificationExperiment` and `CreateRegressionExperiment`.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6446","RelatedDescription":"Open issue \"AutoML experiments in non declarative style not working\" (#6446)"},{"Id":"1443360551","IsPullRequest":true,"CreatedAt":"2022-11-10T06:59:05","Actor":"LittleLittleCloud","Number":"6445","RawContent":null,"Title":"add SentenceSimilarity sweepable estimator in AutoML","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\nhttps://github.com/dotnet/machinelearning-modelbuilder/issues/2338#issuecomment-1309452701\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6445","RelatedDescription":"Open PR \"add SentenceSimilarity sweepable estimator in AutoML\" (#6445)"},{"Id":"1442557583","IsPullRequest":true,"CreatedAt":"2022-11-09T18:26:56","Actor":"luisquintanilla","Number":"6444","RawContent":null,"Title":"2023 roadmap outline","State":"open","Body":"We are excited to review your PR.\n\nSo we can do the best job, please check:\n\n- [x] There's a descriptive title that will make sense to other developers some time from now. \n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\n- [x] You have included any necessary tests in the same PR.\n\nThis PR updates the roadmap with goals through November 2023.\n","Url":"https://github.com/dotnet/machinelearning/pull/6444","RelatedDescription":"Open PR \"2023 roadmap outline\" (#6444)"},{"Id":"1441702779","IsPullRequest":false,"CreatedAt":"2022-11-09T09:05:35","Actor":"AsimZaid","Number":"6443","RawContent":null,"Title":"DataFrame.OrderBy(string columnName) does not perform stable sorting!","State":"open","Body":"Stable sorting preserves the order of entries in the input when their sorting keys are same. Please see the below link:\r\nhttps://stackoverflow.com/questions/1517793/what-is-stability-in-sorting-algorithms-and-why-is-it-important\r\n\r\nAs an example:\r\nBefore sorting...\r\n\r\n```\r\ndf\r\nA     B     C\r\n9     18    28\r\n6     11    25\r\n6     10    23\r\n3     16    26\r\n6     13    21\r\n3     19    22\r\n3     11    28\r\n6     17    20\r\n```\r\n\r\nAfter sorting...\r\n\r\n```\r\ndf.OrderBy(\"A\")\r\nA     B     C\r\n3     16    26\r\n3     11    28\r\n3     19    22\r\n6     11    25\r\n6     10    23\r\n6     17    20\r\n6     13    21\r\n9     18    28\r\n```\r\n\r\nThe three rows where column `A` = `3`, should be ordered with column `B` as `16,19,11` (not `16,11,19`).\r\nThe four rows where column `A` = `6`, should be ordered with column `B` as `11,10,13,17` (not `11,10,17,13`).\r\n\r\nIf we get a stable sorting with `OrderBy` function, we would have a work-around for multi-column sorting which is not yet available according to [#5758](https://github.com/dotnet/machinelearning/issues/5758) and [#5649](https://github.com/dotnet/machinelearning/issues/5649). For those interested in the workaround, please see [this question on stackoverflow](https://stackoverflow.com/questions/24573337/c-sharp-deedle-sort-by-multiple-columns).\r\n\r\nThanks!\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6443","RelatedDescription":"Open issue \"DataFrame.OrderBy(string columnName) does not perform stable sorting!\" (#6443)"},{"Id":"1439384313","IsPullRequest":true,"CreatedAt":"2022-11-08T03:05:53","Actor":"ericstj","Number":"6442","RawContent":null,"Title":"Attempting to fix M1 tests","State":"open","Body":"We were ignoring failures, remove that and introduce some logging to try to determine what's happening in M1 tests.","Url":"https://github.com/dotnet/machinelearning/pull/6442","RelatedDescription":"Open PR \"Attempting to fix M1 tests\" (#6442)"},{"Id":"1439306925","IsPullRequest":false,"CreatedAt":"2022-11-08T01:52:09","Actor":"ericstj","Number":"6441","RawContent":null,"Title":"PR validation failures on Mac M1","State":"open","Body":"Tests on M1 that require loading native binaries built in the repo are failing with \r\n`System.DllNotFoundException : Unable to load shared library 'LdaNative' or one of its dependencies. In order to help diagnose loading problems, consider setting the DYLD_PRINT_LIBRARIES environment variable: dlopen(libLdaNative, 1): image not found`\r\n`System.DllNotFoundException : Unable to load shared library 'MatrixFactorizationNative' or one of its dependencies. In order to help diagnose loading problems, consider setting the DYLD_PRINT_LIBRARIES environment variable: dlopen(libMatrixFactorizationNative, 1): image not found`\r\n\r\nThese are not being reported as failures because we're ignoring failures on M1 right now:\r\nhttps://github.com/dotnet/machinelearning/blob/17c061acd1cc87a84b9a821ff95f235d836a3737/build/ci/job-template.yml#L169-L171\r\n\r\nWe should fix this issue and remove this continueOnError setting.","Url":"https://github.com/dotnet/machinelearning/issues/6441","RelatedDescription":"Open issue \"PR validation failures on Mac M1\" (#6441)"},{"Id":"1439123277","IsPullRequest":true,"CreatedAt":"2022-11-08T01:33:25","Actor":"ericstj","Number":"6440","RawContent":null,"Title":"Rebrand release/2.0 to 2.0.1","State":"closed","Body":"Getting us ready for the next build out of the release/2.0 branch.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6440","RelatedDescription":"Closed or merged PR \"Rebrand release/2.0 to 2.0.1\" (#6440)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-11-24T03:30:23.7031373Z","RunDurationInMilliseconds":584}