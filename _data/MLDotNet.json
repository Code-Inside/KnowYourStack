{"Data":{"GitHub":{"Issues":[{"Id":"651919403","IsPullRequest":true,"CreatedAt":"2020-07-07T01:26:03","Actor":"mstfbl","Number":"5289","RawContent":null,"Title":"Added ONNX export support for {FixedPlatt, Isotonic, Naive}CalibratorEstimators","State":"open","Body":"Fix #5277 \r\n\r\nWIP PR to add ONNX export support for the three yet-unsupported calibrator estimators.","Url":"https://github.com/dotnet/machinelearning/pull/5289","RelatedDescription":"Open PR \"Added ONNX export support for {FixedPlatt, Isotonic, Naive}CalibratorEstimators\" (#5289)"},{"Id":"650129012","IsPullRequest":false,"CreatedAt":"2020-07-06T21:34:10","Actor":"LittleLittleCloud","Number":"5278","RawContent":null,"Title":"Usabilla Feedback: User is facing dependency issue","State":"closed","Body":"@v-mepa commented on [Tue Jun 30 2020](https://github.com/dotnet/machinelearning-modelbuilder/issues/874)\n\n**User Comment:** There is a dependency problem with Microsoft.ML and Microsoft.ML.DataView needing System.Collections.Immutable 1.2.3.0. Not sure how System.Collections.Immutable 1.7 (newest version) got in the packages directory but I can't change it to the old version so can please update Microsoft.ML.DataView and Microsoft.ML to use any version higher than 1.2.3.0?\r\n**URL:** https://dotnet.microsoft.com/apps/machinelearning-ai/ml-dotnet\r\n**OS:** MacOSX\r\n**Browser:** Safari 13.1\r\n**Device:** Desktop\r\n\r\n![image](https://user-images.githubusercontent.com/42360097/86171588-cbe5fd00-bad1-11ea-82ae-caddb4d5e322.png)\r\n\n\n","Url":"https://github.com/dotnet/machinelearning/issues/5278","RelatedDescription":"Closed issue \"Usabilla Feedback: User is facing dependency issue\" (#5278)"},{"Id":"651825022","IsPullRequest":true,"CreatedAt":"2020-07-06T21:18:11","Actor":"wangyems","Number":"5288","RawContent":null,"Title":"[Issue4484] Support specifying command timeout while using the database loader","State":"open","Body":"fix issue [4484](https://github.com/dotnet/machinelearning/issues/4484)\r\n\r\n-add option to set db command timeout in db loader\r\n-add corresponding test\r\nthis pr partially refers to a hanging [PR](https://github.com/dotnet/machinelearning/pull/4494).\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5288","RelatedDescription":"Open PR \"[Issue4484] Support specifying command timeout while using the database loader\" (#5288)"},{"Id":"651709754","IsPullRequest":true,"CreatedAt":"2020-07-06T19:29:47","Actor":"frank-dong-ms","Number":"5287","RawContent":null,"Title":"fix test can_reload_model","State":"closed","Body":"Fix below test failure by increase wait time:\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=716174&view=logs&j=41509eb4-74ce-5e57-61b4-bdf74b39e7c1&t=522d178a-829f-5bff-ccb9-04bea054b64d\r\n\r\nerror message is like:\r\n\r\nX Microsoft.Extensions.ML.FileLoaderTests.can_reload_model [2s 11ms]\r\n  Error Message:\r\n   FileLoader ChangeToken didn't fire before the allotted time.\r\n\r\n\r\nthis failure is tracked at #5266\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5287","RelatedDescription":"Closed or merged PR \"fix test can_reload_model\" (#5287)"},{"Id":"649426349","IsPullRequest":true,"CreatedAt":"2020-07-06T18:12:41","Actor":"frank-dong-ms","Number":"5275","RawContent":null,"Title":"Issue 5051 - ignore duplicate header when load data","State":"closed","Body":"address #5051 \r\n1. ignore extra header in line reader of text loader \r\n2. enhance logging\r\n3. corresponding test\r\n4. fix existing text loader test bugs, data file \"breast-cancer.txt\" don't have header but many tests use this data file with hasHeader settting to true which is wrong.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5275","RelatedDescription":"Closed or merged PR \"Issue 5051 - ignore duplicate header when load data\" (#5275)"},{"Id":"651371898","IsPullRequest":false,"CreatedAt":"2020-07-06T09:03:26","Actor":"VinuthaRaghavendra","Number":"5286","RawContent":null,"Title":"Input shape mismatch: Input 'image_tensor' has shape (-1, -1, -1, 3), but input data is of length 2160000.'","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**:\r\nWindows 10\r\n- **.NET Version (eg., dotnet --info)**: \r\n.NET Core 2.1\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI created my own TensorFlow object detection model and tried to load it in a C# console application.\r\n- **What happened?**\r\nWhen I tried to create a model by using pipeline.fit I get this error System.ArgumentOutOfRangeException: ‚ÄùSystem.InvalidOperationException: 'Input shape mismatch: Input 'image_tensor' has shape (-1, -1, -1, 3), but input data is of length 2160000.'\r\n\r\n- **What did you expect?**\r\nI would have been able to create the model and continue to create the prediction engine and test my TensorFlow.\r\n\r\n### Source code / logs\r\n\r\nHere is how I am loading the pipeline\r\n\r\nvar pipeline = mlContext.Transforms\r\n                .LoadImages(\"image_tensor\", @\"E:\\output_original_image\", nameof(ImageData.ImagePath))\r\n                .Append(mlContext.Transforms.ResizeImages(outputColumnName: \"image_tensor\", imageWidth: 1200, imageHeight: 600, inputColumnName: \"image_tensor\"))\r\n                .Append(mlContext.Transforms.ExtractPixels(outputColumnName: \"image_tensor\", interleavePixelColors: true, outputAsFloatArray: false))\r\n                .Append(mlContext.Model.LoadTensorFlowModel(modelLocation)\r\n              .ScoreTensorFlowModel(outputColumnNames: new[] { \"detection_boxes\", \"detection_classes\", \"detection_scores\", \"num_detections\" }, inputColumnNames: new[] { \"image_tensor\" }, addBatchDimensionInput: true));\r\n\r\n\r\n\r\n\r\nWhen I try to load the model inPython like so it works just fine.\r\n\r\nimage_tensor = detection_graph.get_tensor_by_name('image_tensor:0')\r\ndetection_boxes = detection_graph.get_tensor_by_name('detection_boxes:0')\r\ndetection_scores = detection_graph.get_tensor_by_name('detection_scores:0')\r\ndetection_classes = detection_graph.get_tensor_by_name('detection_classes:0')\r\nnum_detections = detection_graph.get_tensor_by_name('num_detections:0')\r\n\r\n\r\nimage = cv2.imread(PATH_TO_IMAGE)\r\nimage_expanded = np.expand_dims(image, axis=0)\r\n\r\nprint(\"going to run the model now\")\r\n\r\n(boxes, scores, classes, num) = sess.run(\r\n    [detection_boxes, detection_scores, detection_classes, num_detections],\r\n    feed_dict={image_tensor: image_expanded})\r\nAny ideas on how to find the input column that ML.NET wants?\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.","Url":"https://github.com/dotnet/machinelearning/issues/5286","RelatedDescription":"Open issue \"Input shape mismatch: Input 'image_tensor' has shape (-1, -1, -1, 3), but input data is of length 2160000.'\" (#5286)"},{"Id":"651127529","IsPullRequest":false,"CreatedAt":"2020-07-05T19:09:48","Actor":"petropolitana","Number":"5285","RawContent":null,"Title":"System.MissingMethodException: 'Method not found: 'System.Threading.Tasks.Task`1<ResourceDownloadResults> ","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**:\r\nWindows 10\r\n- **.NET Version (eg., dotnet --info)**: \r\n.NET Framework 4.7\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nTried to train a model with InceptionV3\r\n- **What happened?**\r\nCrashed with MissingMethod\r\n- **What did you expect?**\r\nExpected no errors\r\n\r\n### Source code / logs\r\n\r\n            var options = new ImageClassificationTrainer.Options()\r\n            {\r\n                FeatureColumnName = \"Image\",\r\n                LabelColumnName = \"LabelAsKey\",\r\n                Arch = ImageClassificationTrainer.Architecture.InceptionV3,\r\n                Epoch = 50,       //100\r\n                BatchSize = 10,\r\n                LearningRate = 0.01f,\r\n                MetricsCallback = (metrics) => Console.WriteLine(metrics),\r\n                ValidationSet = testDataView\r\n            };\r\n\r\n\r\nSystem.MissingMethodException: 'Method not found: 'System.Threading.Tasks.Task`1 ResourceDownloadResults Microsoft.ML.Internal.Utilities.ResourceManagerUtils.EnsureResource(Microsoft.ML.Runtime.IHostEnvironment, Microsoft.ML.Runtime.IChannel, System.String, System.String, System.String, Int32)'.'\r\n\r\n\r\nHello, I was tring to train a model with ImageClassificationTrainer and tried to user InceptionV3 in .NetFramework4.7 and it gave me MissingMethodException. \r\nTried the same code in .NetCore 3.1 and the problem wasn't there \r\nIs there a fast WA or a Fix for this kind of problem? Can someone advise?","Url":"https://github.com/dotnet/machinelearning/issues/5285","RelatedDescription":"Open issue \"System.MissingMethodException: 'Method not found: 'System.Threading.Tasks.Task`1<ResourceDownloadResults> \" (#5285)"},{"Id":"651016624","IsPullRequest":false,"CreatedAt":"2020-07-05T07:11:59","Actor":"boyedarat","Number":"5284","RawContent":null,"Title":"ML.NET CLI support for F#","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: `Microsoft Windows [Version 10.0.19041.329]`\r\n- **.NET Version (eg., dotnet --info)**: \r\n```\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.301\r\n Commit:    7feb845744\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19041\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.301\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.5\r\n  Commit:  65cd789777\r\n\r\n.NET Core SDKs installed:\r\n  3.1.301 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n```\r\n### Issue\r\n\r\n- **What did you do?**\r\nTried to generate F# project using mlnet CLI tool.\r\n- **What happened?**\r\nNo such option, only C# projects.\r\n- **What did you expect?**\r\nAn option to generate F# code.\r\n\r\n### Source code / logs\r\n```\r\nmlnet --version\r\n16.1.1+acd4a98c2ef0dd6575de234c00ddc4f48d1d4f75\r\n```\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5284","RelatedDescription":"Open issue \"ML.NET CLI support for F#\" (#5284)"},{"Id":"650751508","IsPullRequest":false,"CreatedAt":"2020-07-03T23:53:51","Actor":"darren-zdc","Number":"5283","RawContent":null,"Title":"Averaged Perceptron in MultiClass classification","State":"closed","Body":"Hi,\r\n\r\nI am trying to use the AveragedPerceptron trainer in a multiclass scenario with labeled columns like \"1\", \"2\" or \"3\", but I only found an example in a binary classification problem, which is not what I want.\r\n\r\nIs there a document mentioned AveragedPerceptron in Multiclass problem? \r\nOr how can I approach it?\r\n\r\nI originally used the ModelBuilder to training my multiclass data, and I got an AveragedPerceptron model. Now, I want to customize the training process.\r\n\r\nThanks\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5283","RelatedDescription":"Closed issue \"Averaged Perceptron in MultiClass classification\" (#5283)"},{"Id":"650436345","IsPullRequest":true,"CreatedAt":"2020-07-03T18:17:12","Actor":"mstfbl","Number":"5280","RawContent":null,"Title":"Properly normalize column names in Utils.GetSampleData() for duplicate cases","State":"closed","Body":"Fix #5267 \r\n\r\nThis PR fixes the bug where columns generated from inline data were normalized directly through `Utils.Normalize()`, which only fixes the naming of a given column name, but **does not** take into account duplicate column names that may exist in a dataset.\r\n\r\nPR #5177 introduced a way to fix these duplicate column names by adding the differentiator suffix '_col_x' where 'x' represents the the dataset load order for a given column. In this PR I have separated this generation of distinct and unique column names from `Utils.GenerateClassLabels()` and made it into its own function to `Utils.GenerateColumnNames()`. This is so that this generation of distinct and unique column names can also be used in `Utils.GenerateSampleData`, which before this PR resulted in exceptions. Now, column names from inline data are properly normalized, and duplicate column names are handled.\r\n\r\nThis PR also adds a unit test to test the case of duplicate column names with `Utils.GenerateSampleData`.","Url":"https://github.com/dotnet/machinelearning/pull/5280","RelatedDescription":"Closed or merged PR \"Properly normalize column names in Utils.GetSampleData() for duplicate cases\" (#5280)"},{"Id":"647696050","IsPullRequest":false,"CreatedAt":"2020-07-03T18:17:12","Actor":"mstfbl","Number":"5267","RawContent":null,"Title":"Property names generated in AutoML's GenerateSampleData() differ from those generated by GenerateClassLabels()","State":"closed","Body":"As @LittleLittleCloud noted in [this comment](https://github.com/dotnet/machinelearning/pull/5177#discussion_r446314964) in PR #5177 for fixing Issue #3902, columns generated from inline data are currently named in the following way:\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/33f5f32a71cbe6f7a8fb03d75fbdb091d15b8fe8/src/Microsoft.ML.CodeGenerator/Utils.cs#L49-L68\r\n\r\nThis method of directly using `Utils.Normalize` is different from using `GenerateClassLabels` instead to obtain normalized and sanitized column names. `GenerateClassLabels` can accommodate conflicting/duplicate column names, whereas in `GenerateSampleData()` this situation results in exceptions.\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/33f5f32a71cbe6f7a8fb03d75fbdb091d15b8fe8/src/Microsoft.ML.CodeGenerator/Utils.cs#L246-L318\r\n\r\nTo-do:\r\n\r\n- Ensure `GenerateSampleData()` can accomodate conflicting/duplicate column names by using `Utils.GenerateClassLabels()`.","Url":"https://github.com/dotnet/machinelearning/issues/5267","RelatedDescription":"Closed issue \"Property names generated in AutoML's GenerateSampleData() differ from those generated by GenerateClassLabels()\" (#5267)"},{"Id":"650685408","IsPullRequest":false,"CreatedAt":"2020-07-03T16:23:30","Actor":"FunBobby1956","Number":"5282","RawContent":null,"Title":"Problems when loading CSV files","State":"open","Body":"Firstly, header row cannot contain any special characters such as a '/'. Documentation or tutorials do not mention this. Secondly, I would expect that any string found in the source CSV file would be transformed into a single for me before training. I think that this defeats the purpose of the ML automation built into the Model Builder. I would expect to have to perform some data normalization in code but not in the VS Model Builder.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5282","RelatedDescription":"Open issue \"Problems when loading CSV files\" (#5282)"},{"Id":"650497540","IsPullRequest":false,"CreatedAt":"2020-07-03T10:15:14","Actor":"ErwanL08","Number":"5281","RawContent":null,"Title":"Request : Apply Lemma / stemming in FeaturizeText options ","State":"open","Body":"Hi\r\nFirst Thank you for all the work done, i know that FeaturizeText apply NLP preprocessing like skipword with a specifique language : \r\n![image](https://user-images.githubusercontent.com/16559628/86459192-bddcea00-bd26-11ea-8274-d3ad23a55eeb.png)\r\n\r\nBut is there a way to apply lemma / stemming in this function ? \r\n","Url":"https://github.com/dotnet/machinelearning/issues/5281","RelatedDescription":"Open issue \"Request : Apply Lemma / stemming in FeaturizeText options \" (#5281)"},{"Id":"650141899","IsPullRequest":true,"CreatedAt":"2020-07-02T18:57:32","Actor":"Lynx1820","Number":"5279","RawContent":null,"Title":"StopWordsRemovingEstimator export to Onnx","State":"open","Body":"- Exporting StopWordsRemovingEstimator/CustomStopWordsRemovingEstimator to Onnx. \r\n- Note: A test which currently fails is the edge case where all the words in the text get removed. While Ml.net produces an empty array, Onnx produces an array of length 1 with the empty string. Suggestions for how handle this case? ","Url":"https://github.com/dotnet/machinelearning/pull/5279","RelatedDescription":"Open PR \"StopWordsRemovingEstimator export to Onnx\" (#5279)"},{"Id":"650115290","IsPullRequest":false,"CreatedAt":"2020-07-02T18:04:57","Actor":"mstfbl","Number":"5277","RawContent":null,"Title":"No ONNX model export support for {FixedPlatt, Isotonic, Naive}CalibratorEstimator(s)","State":"open","Body":"For tracking purposes. The following CalibratorEstimators do not have ONNX model conversion support:\r\n- `FixedPlattCalibratorEstimator`\r\n- `IsotonicCalibratorEstimator`\r\n- `NaiveCalibratorEstimator`\r\n\r\n`PlattCalibratorEstimator` does have ONNX export support. This issue will be closed when the remaining calibrator estimators have ONNX export support, and are being tested for ONNX conversion in the manner below as `PlattCalibratorEstimator` is being tested: \r\nhttps://github.com/dotnet/machinelearning/blob/81357ba85f1410d81f92e8b1e0632e41a0f10b02/test/Microsoft.ML.Tests/OnnxConversionTest.cs#L265-L300\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5277","RelatedDescription":"Open issue \"No ONNX model export support for {FixedPlatt, Isotonic, Naive}CalibratorEstimator(s)\" (#5277)"},{"Id":"650024649","IsPullRequest":false,"CreatedAt":"2020-07-02T15:31:02","Actor":"Luk164","Number":"5276","RawContent":null,"Title":"Request: Support Image segmentation","State":"open","Body":"Is there, or will there be a way to use ML.net for object instance segmentation in an image? Or do I have to use tensorflow wrapper directly for that?","Url":"https://github.com/dotnet/machinelearning/issues/5276","RelatedDescription":"Open issue \"Request: Support Image segmentation\" (#5276)"},{"Id":"649092041","IsPullRequest":false,"CreatedAt":"2020-07-02T03:31:17","Actor":"lisahua","Number":"5274","RawContent":null,"Title":"[TimeSeries Explanation] Score is NaN","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: .Net 4.8\r\n- **.NET Version (eg., dotnet --info)**: ML.Net 1.5.0\r\n\r\n### Issue\r\n\r\n- **What did you do?**  Invoke `var prediction = this.mlContext.AnomalyDetection.LocalizeRootCause(input);`\r\n- **What happened?** `rootCauseItem.Score = double.NaN`\r\n- **What did you expect?** Should return a meaningful score (either 0 or 1)\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n```\r\nstring jsonString = \"\"{\\\"AnomalyTimestamp\\\":\\\"1997-05-19T00:00:00\\\",\\\"AnomalyDimension\\\":{\\\"__Sandbox.Categories.CategoryName__\\\":\\\"\\\"},\\\"Slices\\\":[{\\\"TimeStamp\\\":\\\"1997-05-19T00:00:00\\\",\\\"Points\\\":[{\\\"Value\\\":8995.35,\\\"ExpectedValue\\\":-120.28187410606782,\\\"IsAnomaly\\\":true,\\\"Dimension\\\":{\\\"__Sandbox.Categories.CategoryName__\\\":\\\"Beverages\\\"},\\\"Delta\\\":9115.6318741060677},{\\\"Value\\\":1282.02,\\\"ExpectedValue\\\":1374.808978001977,\\\"IsAnomaly\\\":false,\\\"Dimension\\\":{\\\"__Sandbox.Categories.CategoryName__\\\":\\\"Condiments\\\"},\\\"Delta\\\":-92.788978001977057},{\\\"Value\\\":1686.7,\\\"ExpectedValue\\\":2014.8946291211198,\\\"IsAnomaly\\\":false,\\\"Dimension\\\":{\\\"__Sandbox.Categories.CategoryName__\\\":\\\"Confections\\\"},\\\"Delta\\\":-328.19462912111976},{\\\"Value\\\":174.15,\\\"ExpectedValue\\\":215.02809847811903,\\\"IsAnomaly\\\":false,\\\"Dimension\\\":{\\\"__Sandbox.Categories.CategoryName__\\\":\\\"Dairy Products\\\"},\\\"Delta\\\":-40.878098478119028},{\\\"Value\\\":12138.22,\\\"ExpectedValue\\\":9066.203,\\\"IsAnomaly\\\":true,\\\"Dimension\\\":{\\\"__Sandbox.Categories.CategoryName__\\\":\\\"\\\"},\\\"Delta\\\r\n\":3072.017}]}],\\\"AggregateType\\\":0,\\\"AggregateSymbol\\\":\\\"\\\"}\"\r\n\";\r\nvar input = JsonConvert.DeserializeObject<RootCauseLocalizationInput>(jsonString); // using Newtonsoft.Json\r\nvar prediction = this.mlContext.AnomalyDetection.LocalizeRootCause(input);\r\n```\r\nThe input is like:\r\n```\r\n{\r\n\t\"AnomalyTimestamp\": \"1997-05-19T00:00:00\",\r\n\t\"AnomalyDimension\": {\r\n\t\t\"__Sandbox.Categories.CategoryName__\": \"\"\r\n\t},\r\n\t\"Slices\": [\r\n\t\t{\r\n\t\t\t\"TimeStamp\": \"1997-05-19T00:00:00\",\r\n\t\t\t\"Points\": [\r\n\t\t\t\t{\r\n\t\t\t\t\t\"Value\": 8995.35,\r\n\t\t\t\t\t\"ExpectedValue\": -120.28187410606782,\r\n\t\t\t\t\t\"IsAnomaly\": true,\r\n\t\t\t\t\t\"Dimension\": {\r\n\t\t\t\t\t\t\"__Sandbox.Categories.CategoryName__\": \"Beverages\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"Delta\": 9115.631874106068\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"Value\": 1282.02,\r\n\t\t\t\t\t\"ExpectedValue\": 1374.808978001977,\r\n\t\t\t\t\t\"IsAnomaly\": false,\r\n\t\t\t\t\t\"Dimension\": {\r\n\t\t\t\t\t\t\"__Sandbox.Categories.CategoryName__\": \"Condiments\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"Delta\": -92.78897800197706\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"Value\": 1686.7,\r\n\t\t\t\t\t\"ExpectedValue\": 2014.8946291211199,\r\n\t\t\t\t\t\"IsAnomaly\": false,\r\n\t\t\t\t\t\"Dimension\": {\r\n\t\t\t\t\t\t\"__Sandbox.Categories.CategoryName__\": \"Confections\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"Delta\": -328.19462912111978\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"Value\": 174.15,\r\n\t\t\t\t\t\"ExpectedValue\": 215.02809847811904,\r\n\t\t\t\t\t\"IsAnomaly\": false,\r\n\t\t\t\t\t\"Dimension\": {\r\n\t\t\t\t\t\t\"__Sandbox.Categories.CategoryName__\": \"Dairy Products\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"Delta\": -40.87809847811903\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\t\"Value\": 12138.22,\r\n\t\t\t\t\t\"ExpectedValue\": 9066.203,\r\n\t\t\t\t\t\"IsAnomaly\": true,\r\n\t\t\t\t\t\"Dimension\": {\r\n\t\t\t\t\t\t\"__Sandbox.Categories.CategoryName__\": \"\"\r\n\t\t\t\t\t},\r\n\t\t\t\t\t\"Delta\": 3072.017\r\n\t\t\t\t}\r\n\t\t\t]\r\n\t\t}\r\n\t],\r\n\t\"AggregateType\": 0,\r\n\t\"AggregateSymbol\": \"\"\r\n}\r\n```\r\nAnd the output:\r\n\r\n```\r\n{\r\n\t\"Items\": [\r\n\t\t{\r\n\t\t\t\"Score\": \"NaN\",\r\n\t\t\t\"Path\": [\r\n\t\t\t\t\"__Sandbox.Categories.CategoryName__\"\r\n\t\t\t],\r\n\t\t\t\"Dimension\": {\r\n\t\t\t\t\"__Sandbox.Categories.CategoryName__\": \"Beverages\"\r\n\t\t\t},\r\n\t\t\t\"Direction\": 0\r\n\t\t}\r\n\t]\r\n}\r\n```\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5274","RelatedDescription":"Closed issue \"[TimeSeries Explanation] Score is NaN\" (#5274)"},{"Id":"646129970","IsPullRequest":true,"CreatedAt":"2020-07-01T22:33:11","Actor":"mstfbl","Number":"5261","RawContent":null,"Title":"Fixed score column name and order bugs in CalibratorTransformer","State":"closed","Body":"Fix #4700 \r\n\r\nAs explained in #4700, the column order in which the Score column is given to `PlattCalibratorTransformer` exposes a bug in `CalibratorTransformer` where the name and the location of the score column is hard-coded. This PR fixes this hard-coding, where now the name and order of the score column given to `CalibratorTransformer` can be different than the default values.\r\n\r\nI have also added unit tests to confirm these changes with respect to direct non-standard column name tests and Onnx Conversions.","Url":"https://github.com/dotnet/machinelearning/pull/5261","RelatedDescription":"Closed or merged PR \"Fixed score column name and order bugs in CalibratorTransformer\" (#5261)"},{"Id":"647414442","IsPullRequest":false,"CreatedAt":"2020-07-01T20:14:08","Actor":"Ellyster","Number":"5264","RawContent":null,"Title":"Using \"nameof\" in \"outputColumnName\" of \"MapKeyToValue\"","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10 Enterprise\r\n- **.NET Version (eg., dotnet --info)**: .NET Core 3.1\r\n\r\n### Issue\r\n- **What did you do?**\r\nAdapted the Iris as a canary model for our company internal ML platform based on ML.Net.\r\n\r\n- **What happened?**\r\nUsing to `nameof(IrisModelOutput.Species)`  select the output column name doesn't work.\r\n\r\n```cs\r\npublic class IrisModelOutput\r\n    {\r\n        [ColumnName(\"PredictedLabel\")]\r\n        public string Species { get; set; }\r\n\r\n        public float[] Score { get; set; }\r\n    }\r\n```\r\n\r\nIf the prediction result DTO `Species` is annotated with `[ColumnName(\"PredictedLabel\")]` if gives an error; if it isn't annotated, it comes empty in the prediction.\r\n\r\n- **What did you expect?**\r\nThat the predicted species is mapped back to `Species`.\r\n\r\n### Source code / logs\r\nIn this pipeline's `MapKeyToValue` doesn't work as expected:\r\n```cs\r\nPipeline = MlContext.Transforms.Concatenate(outputColumnName: \"Features\", inputColumnNames: new[]\r\n                {\r\n                    nameof(IrisModelInput.SepalLength),\r\n                    nameof(IrisModelInput.SepalWidth),\r\n                    nameof(IrisModelInput.PetalLength),\r\n                    nameof(IrisModelInput.PetalWidth)\r\n                })\r\n                .Append(MlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \"Label\", inputColumnName: nameof(IrisModelInput.Species)))\r\n                .Append(MlContext.MulticlassClassification.Trainers.SdcaNonCalibrated(labelColumnName: \"Label\", featureColumnName: \"Features\"))\r\n                .Append(MlContext.Transforms.Conversion.MapKeyToValue(outputColumnName: nameof(IrisModelOutput.Species), inputColumnName: \"Label\"));\r\n```\r\nBut using the following alternative sintaxis for the last append works correctly:\r\n```csharp\r\n.Append(MlContext.Transforms.Conversion.MapKeyToValue(\"PredictedLabel\"));\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/5264","RelatedDescription":"Closed issue \"Using \"nameof\" in \"outputColumnName\" of \"MapKeyToValue\"\" (#5264)"},{"Id":"646008734","IsPullRequest":true,"CreatedAt":"2020-07-01T19:54:02","Actor":"frank-dong-ms","Number":"5260","RawContent":null,"Title":"fix issue 4322, enable lda summary output","State":"closed","Body":"fix issue 4322: https://github.com/dotnet/machinelearning/issues/4322\r\n1. output topic summary to model file when OutputTopicWordSummary is set to true\r\n2. open public API from lda transformer to get topic summary\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5260","RelatedDescription":"Closed or merged PR \"fix issue 4322, enable lda summary output\" (#5260)"},{"Id":"648588680","IsPullRequest":true,"CreatedAt":"2020-07-01T17:20:32","Actor":"frank-dong-ms","Number":"5272","RawContent":null,"Title":"remove test data clean up step","State":"closed","Body":"see below error during test data clean up stage, try to remove this stage as this might be unnecessary we already fine tune disk usage:\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=710808&view=logs&j=f50056e9-8f98-53f0-451e-59b00a9fd1aa&t=c630d711-0b9f-5f2b-2dc5-62892e1fb5ae\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5272","RelatedDescription":"Closed or merged PR \"remove test data clean up step\" (#5272)"},{"Id":"648948335","IsPullRequest":false,"CreatedAt":"2020-07-01T12:37:55","Actor":"ladodc","Number":"5273","RawContent":null,"Title":"Error on prediction with LSTM Model in ONNX Format in ML.Net","State":"open","Body":"### System information\r\n\r\n- Windows 10\r\n- .NET Core 3.1, Microsoft.ML 1.5.0, Microsoft.ML.OnnxRuntime 1.3.0, Microsoft.ML.OnnxTransformer 1.5.0\r\n\r\n### Issue\r\nI would like to predict Values with my LSTM Model in ONNX Format. I am struggling on data input for my ONNX Model in my ML.NET project. When I run my code, I get an Exception: _System.NullReferenceException: 'Object reference not set to an instance of an object.'_ on prediction. The input data is just dummy. I am trying to find out, how to input data in form (None,3,7) as expected from LSTM Model. LSTM Model ist attached. Can someone help me, what I am doing wrong?\r\nWhy I get exception or how to deliver data for my ONNX Model. \r\n\r\n```C#\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.Data;\r\nusing System;\r\nusing System.Data.SqlClient;\r\n\r\nnamespace InQu.ML.Test.ONNX.FehlerAbsch√§tzungLSTM\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var mlContext = new MLContext();\r\n            \r\n            var x = new InputData[] { \r\n                        new InputData() { X = new float[,] { { 1, 2, 3, 4, 5, 6, 7 }, { 1, 2, 3, 4, 5, 6, 7 }, { 1, 2, 3, 4, 5, 6, 7 } } }                       \r\n                    };\r\n\r\n            IDataView dataView = mlContext.Data.LoadFromEnumerable<InputData>(x);\r\n\r\n            var pipeline = mlContext.Transforms.ApplyOnnxModel(modelFile: @\".\\scikit-learn\\AbschatzungFehlerLSTM.onnx\", \r\n                            inputColumnNames: new[] { \"input_layer\",  }, \r\n                            outputColumnNames: new[] { \"dense_3\" });\r\n\r\n            var model = pipeline.Fit(dataView);\r\n            \r\n            var predEngine = mlContext.Model.CreatePredictionEngine<InputData, OutputData>(model);\r\n\r\n            OutputData prediction = new OutputData() { y = new float[0] };\r\n            predEngine.Predict(x[0], ref prediction);\r\n        }\r\n    }\r\n\r\n    public class InputData\r\n    {\r\n        [ColumnName(\"input_layer\")]\r\n        [VectorType(3,7)]\r\n        public float[,] X { get; set; }        \r\n    }\r\n\r\n    public class OutputData\r\n    {\r\n        [ColumnName(\"dense_3\")]\r\n        [VectorType(1)]\r\n        public float[] y { get; set; }\r\n    }\r\n}\r\n\r\n```\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5273","RelatedDescription":"Open issue \"Error on prediction with LSTM Model in ONNX Format in ML.Net\" (#5273)"},{"Id":"648578397","IsPullRequest":false,"CreatedAt":"2020-07-01T09:09:15","Actor":"go2ready","Number":"5270","RawContent":null,"Title":"CreateEnumerable from key column","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: 4.7\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nTrying to create Enumerable from IDataView which contains Column with Type Key<UInt32, 0-1059>, into a uint type.\r\n- **What happened?**\r\nEncountered error:\r\n\"Can't bind the IDataView column 'ImpressionIdKey' of type 'Key<UInt32, 0-1059>' to field or property 'ImpressionIdKey' of type 'System.UInt32'.\"\r\n- **What did you expect?**\r\nI want to be able to export key value in its uint format as enumerable\r\n\r\n### Source code / logs\r\n\r\n```\r\n        var a = mlContext.Data.CreateEnumerable<ProcessedData>(\r\n            colSelTrainingData, reuseRowObject: false);\r\n\r\n...\r\n\r\n        private class ProcessedData\r\n        {\r\n            public float[] Feature { get; set; }\r\n\r\n            public float BackProClick { get; set; }\r\n\r\n            public uint ImpressionIdKey { get; set; }\r\n        }\r\n```\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5270","RelatedDescription":"Closed issue \"CreateEnumerable from key column\" (#5270)"},{"Id":"648483511","IsPullRequest":true,"CreatedAt":"2020-07-01T01:41:15","Actor":"klausmh","Number":"5269","RawContent":null,"Title":"Fix for conditional error in root cause analysis additions","State":"closed","Body":"Fix for error in refactoring RCA code. This establishes the same logic in the `OrderDimensions` code as in the previous version, cf. https://github.com/dotnet/machinelearning/blob/1c2469fb8c99afa45531fa9ecca67598291a2288/src/Microsoft.ML.TimeSeries/RootCauseAnalyzer.cs#L460\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5269","RelatedDescription":"Closed or merged PR \"Fix for conditional error in root cause analysis additions\" (#5269)"},{"Id":"648582534","IsPullRequest":false,"CreatedAt":"2020-07-01T00:23:24","Actor":"go2ready","Number":"5271","RawContent":null,"Title":"ConvertToOnnx options to exclude the data generation pipeline","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: 4.7\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nCalling `mlContext.Model.ConvertToOnnx(model, colSelTrainingData2, fs);`\r\n\r\nOf which `model ` involved data transformations pipeline like encoding, concatenating and column manipulation.\r\n\r\n- **What happened?**\r\n\r\nAll the data transformation pipeline is included in the final ONNX model, which I do not want. \r\n\r\n- **What did you expect?**\r\n\r\nI want the model to tramsformed into an ONNX model where the InputColumn is the InputColumn that is fit to the model, excluding all the data transformations pipeline like encoding, concatenating and column manipulation before fitted to the model.\r\n\r\n### Source code / logs\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5271","RelatedDescription":"Open issue \"ConvertToOnnx options to exclude the data generation pipeline\" (#5271)"},{"Id":"647891976","IsPullRequest":true,"CreatedAt":"2020-06-30T19:40:58","Actor":"frank-dong-ms","Number":"5268","RawContent":null,"Title":"address build version issue and enhance logging","State":"closed","Body":"part of issue #5266\r\n\r\n1. address issue \"error CS7035: The specified version string does not conform to the recommended format - major.minor.build.revision\", one build definition sample of similar issue: https://dev.azure.com/dnceng/public/_build/results?buildId=656357&view=logs&j=28859320-f5de-51e0-1fd2-7bea8c11cf7a&t=ed8fb6c3-76d9-56ef-25a2-06e3456edf43\r\n\r\nThis issue looks like a bug in msbuild versioning. This only happens when the build is crossing 2 days as msbuild versioning is generating versioning file each day so when some project starts to build when the system time is crossing to new day, seems msbuild versioning can't handle this case and read empty BuildNumberMajor and BuildNumberMinor sometimes which cause the assembly version number to be a invalid format.\r\n\r\nI can repro this issue by set system time to a time very close to midnight, say 11:58 PM then start build from cmd, there is pretty good chance to repro the build version issue. Since we don't have a way to upgrade build tools now I will use default value of BuildNumberMajor and BuildNumberMinor to mitigate this issue.\r\n\r\n2. enhance logging","Url":"https://github.com/dotnet/machinelearning/pull/5268","RelatedDescription":"Closed or merged PR \"address build version issue and enhance logging\" (#5268)"},{"Id":"647580293","IsPullRequest":true,"CreatedAt":"2020-06-29T21:29:13","Actor":"frank-dong-ms","Number":"5265","RawContent":null,"Title":"make timeout larger as we are seeing timeouts in CI","State":"closed","Body":"we start to seeing timeouts in CI build so make the timeout larger, this is caused by sometimes download tensorflow meta files are slow(takes more than 10 minutes but normally this takes less than 1 minute), also CI tests runs slow than before:\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=689649&view=logs&j=dd8eddb6-ecc6-5f65-73e6-df90e5693b94\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=706453&view=logs&j=87172896-2df6-55a2-04c3-60b48f00f19f\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5265","RelatedDescription":"Closed or merged PR \"make timeout larger as we are seeing timeouts in CI\" (#5265)"},{"Id":"647594596","IsPullRequest":false,"CreatedAt":"2020-06-29T18:58:31","Actor":"frank-dong-ms","Number":"5266","RawContent":null,"Title":"recent CI failure","State":"open","Body":"we are start seeing some ci failure recently:\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=709641&view=results\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=706523&view=results\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=706453&view=results\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=699015&view=results\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=689649&view=results\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=656357&view=results\r\n\r\nthere are several issues here:\r\n1. error CS7035: The specified version string does not conform to the recommended format - major.minor.build.revision\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=656357&view=results\r\n\r\nthis also happens on local randomly\r\n\r\n2. fatal: unable to access 'https://github.com/mongodb/homebrew-brew/': Failed to connect to github.com port 443: Operation timed out\r\n\r\nError: Fetching /usr/local/Homebrew/Library/Taps/mongodb/homebrew-brew failed!\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=709641&view=logs&j=4b233af4-7b14-5f68-27c6-9c4d7ac87519&t=6c4d0d4f-93f4-59fe-bb3a-eecc956920fe\r\n\r\nlooks like random failure related to github authentication\r\n\r\n3. SavePipePValue failure, new random failure\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=706523&view=logs&j=41509eb4-74ce-5e57-61b4-bdf74b39e7c1&t=522d178a-829f-5bff-ccb9-04bea054b64d\r\n\r\n4. benchmark failure, new random failure\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=706453&view=logs&j=4b233af4-7b14-5f68-27c6-9c4d7ac87519&t=c45ec5f3-1036-5f06-ba3b-dc6ad6175c22\r\n\r\n[xUnit.net 00:02:08.63]     Microsoft.ML.Benchmarks.Tests.BenchmarksTest.BenchmarksProjectIsNotBroken(type: typeof(Microsoft.ML.Benchmarks.StochasticDualCoordinateAscentClassifierBench)) [FAIL]\r\n// ***** BenchmarkRunner: Start   *****\r\n// ***** Found 2 benchmark(s) in total *****\r\n// ***** Building 1 exe(s) in Parallel: Start   *****\r\n  X Microsoft.ML.Benchmarks.Tests.BenchmarksTest.BenchmarksProjectIsNotBroken(type: typeof(Microsoft.ML.Benchmarks.StochasticDualCoordinateAscentClassifierBench)) [1m 8s]\r\n  Error Message:\r\n   All reports should have at least one \"ExecuteResult\" with \"FoundExecutable\" = true and at least one \"Data\" item\r\nExpected: True\r\nActual:   False\r\n  Stack Trace:\r\n     at Microsoft.ML.Benchmarks.Tests.BenchmarksTest.BenchmarksProjectIsNotBroken(Type type) in /Users/runner/runners/2.170.1/work/1/s/test/Microsoft.ML.Benchmarks.Tests/BenchmarksTest.cs:line 69\r\n\r\n5. some timeouts failure\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=689649&view=logs&j=dd8eddb6-ecc6-5f65-73e6-df90e5693b94\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=706453&view=logs&j=87172896-2df6-55a2-04c3-60b48f00f19f\r\n\r\n6. TestCancellation hanging again\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=699015&view=logs&j=9d6f93fc-7103-540d-abb9-b79bad552b0d&t=febb8f43-1f98-59b4-5544-6955325789bd\r\n\r\n7. Microsoft.Extensions.ML.FileLoaderTests.can_reload_model: FileLoader ChangeToken didn't fire before the allotted time.\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=716174&view=logs&j=41509eb4-74ce-5e57-61b4-bdf74b39e7c1&t=522d178a-829f-5bff-ccb9-04bea054b64d","Url":"https://github.com/dotnet/machinelearning/issues/5266","RelatedDescription":"Open issue \"recent CI failure\" (#5266)"},{"Id":"646544444","IsPullRequest":true,"CreatedAt":"2020-06-26T22:34:33","Actor":"Lynx1820","Number":"5263","RawContent":null,"Title":"Enabling Ranking Cross Validation","State":"open","Body":"- Enabled Ranking Cross Validation \r\n- Fixed some syntax errors in the ranking CodeGen generated code\r\n\r\n**Issue**:  Cross Validation is needed in order to integrate the AutoML Ranking Experiment with ModelBuilder. \r\n**Resolves:** #2685 ","Url":"https://github.com/dotnet/machinelearning/pull/5263","RelatedDescription":"Open PR \"Enabling Ranking Cross Validation\" (#5263)"},{"Id":"646240897","IsPullRequest":false,"CreatedAt":"2020-06-26T12:50:35","Actor":"yousiftouma","Number":"5262","RawContent":null,"Title":"Using OnnxTransformer throws TypeInitializationException","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 7\r\n- **.NET Version (eg., dotnet --info)**: core 3.1\r\n\r\n### Issue\r\nWhen trying to use OnnxTransformer, the native libraries aren't loaded properly. I can see them under bin\\Debug\\netcoreapp3.1\\runtimes\\(platform)\\native.\r\nIf I use package version 1.4.0 of OnnxTransformer, without installing the runtime myself, it works.\r\nI couldn't find any docs regarding the requirement to install the runtime manually (I figured it out by browsing all over the place, but not through docs really). I suppose this should be clear when you're not using the onnxruntime package explicitly, but rather the higher level API of OnnxTransformer?\r\n\r\nOn a separate note: Is it sufficient to install the GPU natives and use the `fallbackToCpu` flag of `ApplyOnnxModel` to be able to run inferencing on both CPU and GPU? I'm having a hard time finding this documented.\r\n\r\n- **What did you do?**\r\nInstalled `Microsoft.ML.OnnxTransformer` 1.5.0 and `Microsoft.ML.OnnxRuntime` 1.3.0 and used `ApplyOnnxModel` in a pipeline.\r\n\r\n- **What happened?**\r\nCalling `ApplyOnnxModel` throws `System.TypeInitializationException`.\r\n\r\n- **What did you expect?**\r\nThat my ONNX model can be used.\r\n\r\n### Source code / logs\r\nInner exception message:\r\n\r\n\"Unable to load DLL 'onnxruntime' or one of its dependencies: The specified module could not be found. (0x8007007E)\"\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5262","RelatedDescription":"Open issue \"Using OnnxTransformer throws TypeInitializationException\" (#5262)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-07-07T05:30:37.8919449Z","RunDurationInMilliseconds":687}