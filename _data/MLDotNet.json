{"Data":{"GitHub":{"Issues":[{"Id":"644194064","IsPullRequest":false,"CreatedAt":"2020-06-23T22:41:30","Actor":"frank-dong-ms","Number":"5254","RawContent":null,"Title":"DnnFeaturizeImage for Resnet18 should return Vector<Single, 512> instead of Vector<Single, 1, 512, 1, 1>","State":"open","Body":"related to issue: https://github.com/dotnet/machinelearning/issues/4226\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5254","RelatedDescription":"Open issue \"DnnFeaturizeImage for Resnet18 should return Vector<Single, 512> instead of Vector<Single, 1, 512, 1, 1>\" (#5254)"},{"Id":"638338576","IsPullRequest":false,"CreatedAt":"2020-06-23T22:06:53","Actor":"DanBrook","Number":"5241","RawContent":null,"Title":"Missing method exception NumSharp.Shape TensorFlow.TensorShape.op_implicit on fit","State":"closed","Body":"System information\r\n\r\nWindows 10 pro/18362.836:\r\n.NET 4.7.2:\r\n\r\nIssue\r\n\r\nGot error “Missing method exception NumSharp.Shape TensorFlow.TensorShape.op_implicit” on fit, while trying to run Microsoft example for ML image classification.\r\n\r\nCode:\r\n\r\nIEstimator<ITransformer> pipeline = mlContext.Transforms.LoadImages(outputColumnName: \"input\", imageFolder: _imagesFolder, inputColumnName: nameof(ImageData.ImagePath))\r\n                // The image transforms transform the images into the model's expected format.\r\n                .Append(mlContext.Transforms.ResizeImages(outputColumnName: \"input\", imageWidth: InceptionSettings.ImageWidth, imageHeight: InceptionSettings.ImageHeight, inputColumnName: \"input\"))\r\n                .Append(mlContext.Transforms.ExtractPixels(outputColumnName: \"input\", interleavePixelColors: InceptionSettings.ChannelsLast, offsetImage: InceptionSettings.Mean))\r\n\r\n.Append(mlContext.Model.LoadTensorFlowModel(_inceptionTensorFlowModel).\r\n    ScoreTensorFlowModel(outputColumnNames: new[] { \"softmax2_pre_activation\" }, inputColumnNames: new[] { \"input\" }, addBatchDimensionInput: true))\r\n\r\n.Append(mlContext.Transforms.Conversion.MapValueToKey(outputColumnName: \"LabelKey\", inputColumnName: \"Label\"))\r\n\r\n\r\n.Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(labelColumnName: \"LabelKey\", featureColumnName: \"softmax2_pre_activation\"))\r\n\r\n.Append(mlContext.Transforms.Conversion.MapKeyToValue(\"PredictedLabelValue\", \"PredictedLabel\"))\r\n.AppendCacheCheckpoint(mlContext);\r\n\r\nIDataView trainingData = mlContext.Data.LoadFromTextFile<ImageData>(path:  _trainTagsTsv, hasHeader: false);\r\n\r\n//code above is working properly data preview shows proper data was loaded\r\n\r\nITransformer model = pipeline.Fit(trainingData);\r\n// fit ends with error \r\n\r\n Numsharp is v0. 20. 5\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5241","RelatedDescription":"Closed issue \"Missing method exception NumSharp.Shape TensorFlow.TensorShape.op_implicit on fit\" (#5241)"},{"Id":"641576086","IsPullRequest":true,"CreatedAt":"2020-06-23T17:32:55","Actor":"Lynx1820","Number":"5249","RawContent":null,"Title":"Testing #4309 failure ","State":"closed","Body":"Do not review \r\n","Url":"https://github.com/dotnet/machinelearning/pull/5249","RelatedDescription":"Closed or merged PR \"Testing #4309 failure \" (#5249)"},{"Id":"637177506","IsPullRequest":true,"CreatedAt":"2020-06-22T19:51:32","Actor":"lisahua","Number":"5231","RawContent":null,"Title":"Add DetectSeasonality as a Helper function in TimeSeries ExtensionDialog","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [X] There's a descriptive title that will make sense to other developers some time from now. \r\n- [X] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [X] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [X] You have included any necessary tests in the same PR.\r\n\r\n**This PR is part of Feature Request**:  #5230  : Add Seasonality Detection for Time-Series Data\r\n\r\n## Description\r\n\r\nIn time series data, [seasonality](https://en.wikipedia.org/wiki/Seasonality) is the presence of variations that occur at specific regular intervals less than a year, such as weekly, monthly, or quarterly. \r\n\r\nIn this PR, we propose to provide [Seasonality Detection](http://alumni.cs.ucr.edu/~mvlachos/pubs/sdm05.pdf) Support for Time-Series Data based on [fourier analysis](https://en.wikipedia.org/wiki/Fourier_analysis).\r\n\r\n- DetectSeasonality API:\r\n\r\n```\r\n        /// <summary>\r\n        /// Obtain the period by adopting techniques of spectral analysis. which is founded by\r\n        /// the fourier analysis. returns -1 means there's no significant period. otherwise, a period\r\n        /// is returned.\r\n        /// </summary>\r\n        /// <param name=\"catalog\">The detect seasonality catalog.</param>\r\n        /// <param name=\"input\">Input DataView.The data is an instance of <see cref=\"Microsoft.ML.IDataView\"/>.</param>\r\n        /// <param name=\"inputColumnName\">Name of column to process. The column data must be <see cref=\"System.Double\"/>.</param>\r\n        /// <param name=\"seasonalityWindowSize\">An upper bound on the largest relevant seasonality in the input time-series.\r\n        /// When set to -1, use the whole input to fit model, when set to a positive integer, use this number as batch size.\r\n        /// Default value is -1.</param>\r\n        /// <returns>The detected period if seasonality period exists, otherwise return -1.</returns>\r\n        public static int DetectSeasonality(this AnomalyDetectionCatalog catalog, IDataView input, string inputColumnName, int seasonalityWindowSize = -1)\r\n```\r\n\r\nThis PR introduced:\r\n1. `DetectSeasonality` API to `ExtensionDialog` in TimeSeries project\r\n2. Internal class `SeasonalityDetector` that implements the actual logic based on [fourier tranform](https://en.wikipedia.org/wiki/Fast_Fourier_transform)\r\n3. Sample `DetectSeasonality` in `docs/sample/timeseries` folder.\r\n4. Unit Tests in `TimeSeriesDirectApi` file\r\n5. Change `MedianDblAggregator` to be BestFriend and use it in `SeasonalityDetector`\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5231","RelatedDescription":"Closed or merged PR \"Add DetectSeasonality as a Helper function in TimeSeries ExtensionDialog\" (#5231)"},{"Id":"637171190","IsPullRequest":false,"CreatedAt":"2020-06-22T19:51:32","Actor":"lisahua","Number":"5230","RawContent":null,"Title":"[Feature Request] Add Seasonality Detection for Time-Series Data","State":"closed","Body":"### Feature Description\r\n\r\nIn time series data, [seasonality](https://en.wikipedia.org/wiki/Seasonality) is the presence of variations that occur at specific regular intervals less than a year, such as weekly, monthly, or quarterly. With the support of seasonality and seasonality decomposition, we can improve a list of operations on time-series data:\r\n- Anomaly Detection\r\n- Forcasting\r\n- and more\r\n\r\nWe propose to provide\r\n1. [Seasonality Detection](http://alumni.cs.ucr.edu/~mvlachos/pubs/sdm05.pdf) Support for Time-Series Data based on [fourier analysis](https://en.wikipedia.org/wiki/Fourier_analysis). [PR 5231](https://github.com/dotnet/machinelearning/pull/5231)\r\n2. [Seasonality Decomposition](https://en.wikipedia.org/wiki/Decomposition_of_time_series) for Time-Series Data based on [STL](https://otexts.com/fpp2/stl.html). \r\n a. First, we support decomposition with Anomaly Detection [PR 5202](https://github.com/dotnet/machinelearning/pull/5202)\r\n b. Second, separate seasonality decomposition as a individual API as a Transformer \r\n\r\n### Detail API Proposal\r\n\r\n- DetectSeasonality\r\n\r\n```\r\n        /// <summary>\r\n        /// Obtain the period by adopting techniques of spectral analysis. which is founded by\r\n        /// the fourier analysis. returns -1 means there's no significant period. otherwise, a period\r\n        /// is returned.\r\n        /// </summary>\r\n        /// <param name=\"catalog\">The detect seasonality catalog.</param>\r\n        /// <param name=\"input\">Input DataView.The data is an instance of <see cref=\"Microsoft.ML.IDataView\"/>.</param>\r\n        /// <param name=\"inputColumnName\">Name of column to process. The column data must be <see cref=\"System.Double\"/>.</param>\r\n        /// <param name=\"seasonalityWindowSize\">An upper bound on the largest relevant seasonality in the input time-series.\r\n        /// When set to -1, use the whole input to fit model, when set to a positive integer, use this number as batch size.\r\n        /// Default value is -1.</param>\r\n        /// <returns>The detected period if seasonality period exists, otherwise return -1.</returns>\r\n        public static int DetectSeasonality(this AnomalyDetectionCatalog catalog, IDataView input, string inputColumnName, int seasonalityWindowSize = -1)\r\n```\r\n\r\n- Seasonality Decompose\r\nAdd two optional parameters to existing [DetectEntireAnomalyBySrCnn](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.timeseriescatalog.detectentireanomalybysrcnn?view=ml-dotnet) API: \r\n-- period: Seasonality Period (either from user or auto-detected by the DetectSeasonality API.\r\n-- deseasonalityMode: Median, Average, STL.\r\n\r\n```\r\npublic static IDataView DetectEntireAnomalyBySrCnn(\r\n  this AnomalyDetectionCatalog catalog,\r\n  IDataView input, string outputColumnName, \r\n  string inputColumnName,\r\n  double threshold = 0.3, \r\n   int batchSize = 1024, \r\n   double sensitivity = 99, \r\n   SrCnnDetectMode detectMode = SrCnnDetectMode.AnomalyOnly, \r\n   int period = 0, \r\n   SrCnnDeseasonalityMode deseasonalityMode = SrCnnDeseasonalityMode.Stl)\r\n```\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5230","RelatedDescription":"Closed issue \"[Feature Request] Add Seasonality Detection for Time-Series Data\" (#5230)"},{"Id":"638238233","IsPullRequest":false,"CreatedAt":"2020-06-22T17:44:37","Actor":"boyedarat","Number":"5240","RawContent":null,"Title":"DirectML support","State":"closed","Body":"Are there any plans to support DirectML as an alternative to TF?\r\nHave not seen this request in the Issues list.","Url":"https://github.com/dotnet/machinelearning/issues/5240","RelatedDescription":"Closed issue \"DirectML support\" (#5240)"},{"Id":"643067639","IsPullRequest":false,"CreatedAt":"2020-06-22T15:33:37","Actor":"oscarjaergren","Number":"5253","RawContent":null,"Title":"Exporting Custom Vision models no longer work","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**:\r\n\r\n\r\n- **.NET Version (eg., dotnet --info)**: \r\n.net framework 4.8\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nDownloaded new exported model and replaced old one\r\n\r\n\r\n- **What happened?**\r\nGot exception \"\"Model variable data, expects Float[-1,3,416,416,], but binding was attempted with an incompatible type Image[544x480].'\"\"\r\n\r\n\"'The binding is incomplete or does not match the input/output description.\"\r\n\r\n- **What did you expect?**\r\n\r\nExpect: Model working\r\n\r\n\r\n\r\n### Source code / logs\r\n\r\nI would attach the models but cannot do so in this ticket \r\n\r\nStack overflow post (not from me) that has the same issue, so this is not only by me. \r\nhttps://stackoverflow.com/questions/62486386/custom-vision-onnx-models-stopped-working-with-windows-10-ml\r\n\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5253","RelatedDescription":"Closed issue \"Exporting Custom Vision models no longer work\" (#5253)"},{"Id":"642841584","IsPullRequest":true,"CreatedAt":"2020-06-22T07:51:12","Actor":"xiaoyan-ms","Number":"5252","RawContent":null,"Title":"ignore this","State":"closed","Body":"testing for PR ","Url":"https://github.com/dotnet/machinelearning/pull/5252","RelatedDescription":"Closed or merged PR \"ignore this\" (#5252)"},{"Id":"640799263","IsPullRequest":false,"CreatedAt":"2020-06-19T22:54:05","Actor":"jacobthamblett","Number":"5247","RawContent":null,"Title":"PermutationFeatureImportance not working with AutoML API","State":"closed","Body":"### System information\r\n\r\n- Windows 10 Pro, build 18363\r\n- Visual Studio 2019 Professional\r\n- C# Console Application, in .NET Core 3.1\r\n\r\n### Issue\r\n\r\n- Using the AutoML API to generate ML multiclassification model from large network datasets stored in CSV file. The model produced by the API provides accurate prediction, with reasonable results in the following metrics: MicroAccuracy, MacroAccuracy, LogLoss & LogLossReduction. Trying to get metrics on what feature selection was implemented by the API is proving impossible however. \r\n\r\n- Following all direction & [documentation ](https://docs.microsoft.com/en-us/dotnet/machine-learning/how-to-guides/explain-machine-learning-model-permutation-feature-importance-ml-net#explain-the-model-with-permutation-feature-importance-pfi) on implementing the PermutationFeatureImportance method has no success. It is possible to extract the pipeline from the AutoML BestRun model, and putting together the list of features in the custom class type it is using is not a problem either. However, there would appear to be no LastTransformer attribute for the BestRun model produced by the API. According to the official documentation on how to execute the PFI method on multiclass model, this is one of the main hurdles. \r\n\r\n- Attempting to follow the specific Multiclassification PFI [documentation](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.permutationfeatureimportanceextensions.permutationfeatureimportance?view=ml-dotnet#Microsoft_ML_PermutationFeatureImportanceExtensions_PermutationFeatureImportance__1_Microsoft_ML_MulticlassClassificationCatalog_Microsoft_ML_ISingleFeaturePredictionTransformer___0__Microsoft_ML_IDataView_System_String_System_Boolean_System_Nullable_System_Int32__System_Int32_) more exact, and defining a new pipeline with single multiclassification algorithm still throws an error. This is not ideal, as the new pipeline definition with single multiclassification algorithm does not necessarily match that used by the AutoML API's model, which is the model the PFI metrics are needed for.\r\n\r\n\r\n### Source code / logs\r\n\r\n**Example code following Multiclassification PFI Implementation from [ML.Net Documentation](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.permutationfeatureimportanceextensions.permutationfeatureimportance?view=ml-dotnet#Microsoft_ML_PermutationFeatureImportanceExtensions_PermutationFeatureImportance__1_Microsoft_ML_MulticlassClassificationCatalog_Microsoft_ML_ISingleFeaturePredictionTransformer___0__Microsoft_ML_IDataView_System_String_System_Boolean_System_Nullable_System_Int32__System_Int32_), using pipeline extracted from AutoML bestRun Model:** \r\n```\r\n//PFI code attempting to extract and use pipeline from AutoML bestRun model\r\n            var featureColumns =\r\n                new string[] { \"Unnamed0\",\"FlowID\",\"SourceIP\",\"SourcePort\",\"DestinationIP\",\"DestinationPort\",\"Protocol\",\"Timestamp\",\"FlowDuration\",\"TotalFwdPackets\",\"TotalBackwardPackets\",\"TotalLengthofFwdPackets\",\"TotalLengthofBwdPackets\",\"FwdPacketLengthMax\",\"FwdPacketLengthMin\",\"FwdPacketLengthMean\",\"FwdPacketLengthStd\",\"BwdPacketLengthMax\",\"BwdPacketLengthMin\",\"BwdPacketLengthMean\",\"BwdPacketLengthStd\",\"FlowBytes\",\"FlowPackets\",\"FlowIATMean\",\"FlowIATStd\",\"FlowIATMax\",\"FlowIATMin\",\"FwdIATTotal\",\"FwdIATMean\",\"FwdIATStd\",\"FwdIATMax\",\"FwdIATMin\",\"BwdIATTotal\",\"BwdIATMean\",\"BwdIATStd\",\"BwdIATMax\",\"BwdIATMin\",\"FwdPSHFlags\",\"BwdPSHFlags\",\"FwdURGFlags\",\"BwdURGFlags\",\"FwdHeaderLength\",\"BwdHeaderLength\",\"FwdPackets\",\"BwdPackets\",\"MinPacketLength\",\"MaxPacketLength\",\"PacketLengthMean\",\"PacketLengthStd\",\"PacketLengthVariance\",\"FINFlagCount\",\"SYNFlagCount\",\"RSTFlagCount\",\"PSHFlagCount\",\"ACKFlagCount\",\"URGFlagCount\",\"CWEFlagCount\",\"ECEFlagCount\",\"DownUpRatio\",\"AveragePacketSize\",\"AvgFwdSegmentSize\",\"AvgBwdSegmentSize\",\"FwdHeaderLength1\",\"FwdAvgBytesBulk\",\"FwdAvgPacketsBulk\",\"FwdAvgBulkRate\",\"BwdAvgBytesBulk\",\"BwdAvgPacketsBulk\",\"BwdAvgBulkRate\",\"SubflowFwdPackets\",\"SubflowFwdBytes\",\"SubflowBwdPackets\",\"SubflowBwdBytes\",\"Init_Win_bytes_forward\",\"Init_Win_bytes_backward\",\"act_data_pkt_fwd\",\"min_seg_size_forward\",\"ActiveMean\",\"ActiveStd\",\"ActiveMax\",\"ActiveMin\",\"IdleMean\",\"IdleStd\",\"IdleMax\",\"IdleMin\",\"SimillarHTTP\",\"Inbound\" };\r\n\r\n            // Fit the pipeline to the data.\r\n            var PFI_model = bestRun.Estimator.Fit(trainDataView);\r\n\r\n            // Transform the dataset.\r\n            var transformedData = PFI_model.Transform(trainDataView);\r\n\r\n            // Extract the predictor.\r\n            var linearPredictor = PFI_model.LastTransformer;\r\n\r\n            // Compute the permutation metrics for the linear model using the\r\n            // normalized data.\r\n            var permutationMetrics = mlContext.MulticlassClassification\r\n                .PermutationFeatureImportance(linearPredictor, transformedData,\r\n                permutationCount: 30);\r\n\r\n            // Now let's look at which features are most important to the model\r\n            // overall. Get the feature indices sorted by their impact on\r\n            // microaccuracy.\r\n            var sortedIndices = permutationMetrics\r\n                .Select((metrics, index) => new { index, metrics.MicroAccuracy })\r\n                .OrderByDescending(feature => Math.Abs(feature.MicroAccuracy.Mean))\r\n                .Select(feature => feature.index);\r\n\r\n            Console.WriteLine(\"Feature\\tChange in MicroAccuracy\\t95% Confidence in \"\r\n                + \"the Mean Change in MicroAccuracy\");\r\n\r\n            var microAccuracy = permutationMetrics.Select(x => x.MicroAccuracy)\r\n                .ToArray();\r\n\r\n            foreach (int i in sortedIndices)\r\n            {\r\n                Console.WriteLine(\"{0}\\t{1:G4}\\t{2:G4}\",\r\n                    featureColumns[i],\r\n                    microAccuracy[i].Mean,\r\n                    1.96 * microAccuracy[i].StandardError);\r\n            }\r\n```\r\nError Produced: _Severity\tCode\tDescription\tProject\tFile\tLine\tSuppression State\r\nError\tCS1061\t'ITransformer' does not contain a definition for 'LastTransformer' and no accessible extension method 'LastTransformer' accepting a first argument of type 'ITransformer' could be found (are you missing a using directive or an assembly reference?)_\r\n\r\n\r\n**Example code also following Multiclassification PFI Implementation from [ML.Net Documentation](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.permutationfeatureimportanceextensions.permutationfeatureimportance?view=ml-dotnet#Microsoft_ML_PermutationFeatureImportanceExtensions_PermutationFeatureImportance__1_Microsoft_ML_MulticlassClassificationCatalog_Microsoft_ML_ISingleFeaturePredictionTransformer___0__Microsoft_ML_IDataView_System_String_System_Boolean_System_Nullable_System_Int32__System_Int32_), using a newly created pipeline and single multiclassification algorithm:** \r\n```\r\n//PFI code with new pipeline using single multiclassification algorithm\r\n            var featureColumns =\r\n                new string[] { \"Unnamed0\",\"FlowID\",\"SourceIP\",\"SourcePort\",\"DestinationIP\",\"DestinationPort\",\"Protocol\",\"Timestamp\",\"FlowDuration\",\"TotalFwdPackets\",\"TotalBackwardPackets\",\"TotalLengthofFwdPackets\",\"TotalLengthofBwdPackets\",\"FwdPacketLengthMax\",\"FwdPacketLengthMin\",\"FwdPacketLengthMean\",\"FwdPacketLengthStd\",\"BwdPacketLengthMax\",\"BwdPacketLengthMin\",\"BwdPacketLengthMean\",\"BwdPacketLengthStd\",\"FlowBytes\",\"FlowPackets\",\"FlowIATMean\",\"FlowIATStd\",\"FlowIATMax\",\"FlowIATMin\",\"FwdIATTotal\",\"FwdIATMean\",\"FwdIATStd\",\"FwdIATMax\",\"FwdIATMin\",\"BwdIATTotal\",\"BwdIATMean\",\"BwdIATStd\",\"BwdIATMax\",\"BwdIATMin\",\"FwdPSHFlags\",\"BwdPSHFlags\",\"FwdURGFlags\",\"BwdURGFlags\",\"FwdHeaderLength\",\"BwdHeaderLength\",\"FwdPackets\",\"BwdPackets\",\"MinPacketLength\",\"MaxPacketLength\",\"PacketLengthMean\",\"PacketLengthStd\",\"PacketLengthVariance\",\"FINFlagCount\",\"SYNFlagCount\",\"RSTFlagCount\",\"PSHFlagCount\",\"ACKFlagCount\",\"URGFlagCount\",\"CWEFlagCount\",\"ECEFlagCount\",\"DownUpRatio\",\"AveragePacketSize\",\"AvgFwdSegmentSize\",\"AvgBwdSegmentSize\",\"FwdHeaderLength1\",\"FwdAvgBytesBulk\",\"FwdAvgPacketsBulk\",\"FwdAvgBulkRate\",\"BwdAvgBytesBulk\",\"BwdAvgPacketsBulk\",\"BwdAvgBulkRate\",\"SubflowFwdPackets\",\"SubflowFwdBytes\",\"SubflowBwdPackets\",\"SubflowBwdBytes\",\"Init_Win_bytes_forward\",\"Init_Win_bytes_backward\",\"act_data_pkt_fwd\",\"min_seg_size_forward\",\"ActiveMean\",\"ActiveStd\",\"ActiveMax\",\"ActiveMin\",\"IdleMean\",\"IdleStd\",\"IdleMax\",\"IdleMin\",\"SimillarHTTP\",\"Inbound\" };\r\n\r\n            var pipeline = mlContext.Transforms\r\n                .Concatenate(\"Features\", featureColumns)\r\n                .Append(mlContext.Transforms.Conversion.MapValueToKey(\"Label\"))\r\n                .Append(mlContext.Transforms.NormalizeMinMax(\"Features\"))\r\n                .Append(mlContext.MulticlassClassification.Trainers\r\n                .SdcaMaximumEntropy());\r\n\r\n            // Fit the pipeline to the data.\r\n            var PFI_model = pipeline.Fit(trainDataView);\r\n\r\n            // Transform the dataset.\r\n            var transformedData = PFI_model.Transform(trainDataView);\r\n\r\n            // Extract the predictor.\r\n            var linearPredictor = PFI_model.LastTransformer;\r\n\r\n            // Compute the permutation metrics for the linear model using the\r\n            // normalized data.\r\n            var permutationMetrics = mlContext.MulticlassClassification\r\n                .PermutationFeatureImportance(linearPredictor, transformedData,\r\n                permutationCount: 30);\r\n\r\n            // Now let's look at which features are most important to the model\r\n            // overall. Get the feature indices sorted by their impact on\r\n            // microaccuracy.\r\n            var sortedIndices = permutationMetrics\r\n                .Select((metrics, index) => new { index, metrics.MicroAccuracy })\r\n                .OrderByDescending(feature => Math.Abs(feature.MicroAccuracy.Mean))\r\n                .Select(feature => feature.index);\r\n\r\n            Console.WriteLine(\"Feature\\tChange in MicroAccuracy\\t95% Confidence in \"\r\n                + \"the Mean Change in MicroAccuracy\");\r\n\r\n            var microAccuracy = permutationMetrics.Select(x => x.MicroAccuracy)\r\n                .ToArray();\r\n\r\n            foreach (int i in sortedIndices)\r\n            {\r\n                Console.WriteLine(\"{0}\\t{1:G4}\\t{2:G4}\",\r\n                    featureColumns[i],\r\n                    microAccuracy[i].Mean,\r\n                    1.96 * microAccuracy[i].StandardError);\r\n            }\r\n```\r\nCode builds but also fails at PFI_model definition: _System.ArgumentOutOfRangeException\r\n  HResult=0x80131502\r\n  Message=Schema mismatch for input column 'Features': expected vector or scalar of Single or Double, got Vector<String> \r\n  Source=Microsoft.ML.Data\r\n  StackTrace:\r\n   at Microsoft.ML.Transforms.NormalizingEstimator.GetOutputSchema(SchemaShape inputSchema)\r\n   at Microsoft.ML.Data.EstimatorChain`1.GetOutputSchema(SchemaShape inputSchema)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)_","Url":"https://github.com/dotnet/machinelearning/issues/5247","RelatedDescription":"Closed issue \"PermutationFeatureImportance not working with AutoML API\" (#5247)"},{"Id":"641380864","IsPullRequest":true,"CreatedAt":"2020-06-18T16:45:07","Actor":"michaelgsharp","Number":"5248","RawContent":null,"Title":"Made FastTree work better with sparse data.","State":"open","Body":"This is part of the work for #4749, other PR's will follow to split the work up. When the default value for NGrams was changed from 1 to 2, we discovered that memory was exploding for FastTree training and was causing test failures in some x86 tests.  This PR changes the the default value for NGramLength from 1 to 2 and also changes FastTree so it handles sparse data better.\r\n\r\nThe main portion of the sparse data change is changing from an array to a dictionary so that memory is only allocated when its needed instead of all up front. When running the previously failing test, it now passes with less memory usage and is actually faster due to less GC running.\r\n\r\nThe slowdown to dense data appears to be very small. Running the benchmark for ranking before the change gives this result:\r\n |                                                     Method |    Mean |    Error |   StdDev | Extra Metric |\r\n|----------------------------------------------------------- |--------:|---------:|---------:|-------------:|\r\n| Test_Ranking_MSLRWeb10K_RawNumericFeatures_FastTreeRanking | 1.263 s | 0.0517 s | 0.0595 s |          - |\r\n\r\nAfter the change gives this result:\r\n|                                                     Method |    Mean |    Error |   StdDev | Extra Metric |\r\n|----------------------------------------------------------- |--------:|---------:|---------:|-------------:|\r\n| Test_Ranking_MSLRWeb10K_RawNumericFeatures_FastTreeRanking | 1.381 s | 0.0397 s | 0.0457 s |            - |\r\n\r\nThis is about a 10% slowdown. In return, the memory used is lower. In one example NGram test with NGramLength = 2 the memory before the change was 3.4 GB. After this change was 400 MB.","Url":"https://github.com/dotnet/machinelearning/pull/5248","RelatedDescription":"Open PR \"Made FastTree work better with sparse data.\" (#5248)"},{"Id":"640703745","IsPullRequest":true,"CreatedAt":"2020-06-18T00:17:48","Actor":"wangyems","Number":"5245","RawContent":null,"Title":"Fix sample tests results preview","State":"closed","Body":"Since LoadFeaturizedAdultDataset() has been modified by https://github.com/dotnet/machinelearning/commit/9244e683d85f1c1c16eef4fcd2a5af42d56ac048#diff-eb95ea0c54ebcf8d695d8d73d5849b0cR138, any other sample tests that references LoadFeaturizedAdultDataset() will result in a different score. Change score preview to match.\r\nAlso remove unnecessary spaces.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5245","RelatedDescription":"Closed or merged PR \"Fix sample tests results preview\" (#5245)"},{"Id":"640777004","IsPullRequest":true,"CreatedAt":"2020-06-17T22:18:11","Actor":"Lynx1820","Number":"5246","RawContent":null,"Title":"Enabling custom groupId column in the Ranking AutoML experiment","State":"open","Body":"\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5246","RelatedDescription":"Open PR \"Enabling custom groupId column in the Ranking AutoML experiment\" (#5246)"},{"Id":"637324717","IsPullRequest":true,"CreatedAt":"2020-06-17T20:52:47","Actor":"Lynx1820","Number":"5233","RawContent":null,"Title":"Adding option for custom groupId column name","State":"closed","Body":"\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5233","RelatedDescription":"Closed or merged PR \"Adding option for custom groupId column name\" (#5233)"},{"Id":"640695418","IsPullRequest":true,"CreatedAt":"2020-06-17T19:43:29","Actor":"wangyems","Number":"5244","RawContent":null,"Title":"Fix sample test results ","State":"closed","Body":"Since LoadFeaturizedAdultDataset() has been modified by [https://github.com/dotnet/machinelearning/commit/9244e683d85f1c1c16eef4fcd2a5af42d56ac048#diff-eb95ea0c54ebcf8d695d8d73d5849b0cR138](url), any other sample tests that references LoadFeaturizedAdultDataset() will result in a different score. Change score preview to match.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5244","RelatedDescription":"Closed or merged PR \"Fix sample test results \" (#5244)"},{"Id":"637252975","IsPullRequest":true,"CreatedAt":"2020-06-17T04:56:46","Actor":"wangyems","Number":"5232","RawContent":null,"Title":"Improve exception msg by adding column name","State":"closed","Body":"For the issue https://github.com/dotnet/machinelearning/issues/5211\r\n\r\nIn this case, when user choose a big dataset and one or more columns have more than expected unique values, the crossvalidate() method throws overflow but it's difficult for users to realize which column in the dataset cause the problem. If we append column name to the overflow message, user can quickly find where goes wrong.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5232","RelatedDescription":"Closed or merged PR \"Improve exception msg by adding column name\" (#5232)"},{"Id":"639850720","IsPullRequest":true,"CreatedAt":"2020-06-16T17:36:09","Actor":"michaelgsharp","Number":"5243","RawContent":null,"Title":"Changed default NGrams for FeaturizerText from 1 to 2","State":"open","Body":"This fixes #4749. All the other changes in that issue have been done, this was the only one that was left, which will now allow us to close this issue.\r\n\r\n@justinormont can you just verify that is the correct NGramLength to change? Based on the issue, and the other linked issue, this is what I believe is the correct spot. The standard error does go down in the tests with this, which is the expected behavior based on the linked issues.","Url":"https://github.com/dotnet/machinelearning/pull/5243","RelatedDescription":"Open PR \"Changed default NGrams for FeaturizerText from 1 to 2\" (#5243)"},{"Id":"637477786","IsPullRequest":true,"CreatedAt":"2020-06-16T16:38:12","Actor":"michaelgsharp","Number":"5234","RawContent":null,"Title":"Fixes DateTimeTransformer file path issue for NimbusML","State":"closed","Body":"Fixes #5220. This is a regression issue that was resolved before, unless the fix only stayed in the private branch for the featurizers.","Url":"https://github.com/dotnet/machinelearning/pull/5234","RelatedDescription":"Closed or merged PR \"Fixes DateTimeTransformer file path issue for NimbusML\" (#5234)"},{"Id":"639304492","IsPullRequest":false,"CreatedAt":"2020-06-16T01:38:06","Actor":"frank-dong-ms","Number":"5242","RawContent":null,"Title":"TensorFlowTransformCifar test crash","State":"open","Body":"Test crash: https://dev.azure.com/dnceng/public/_build/results?buildId=684811&view=logs&j=d1af5113-e574-5a31-f7f3-02fc40ea7b26&t=b03e2d69-ce1a-5899-6643-e9b6085777b9&s=d654deb9-056d-50a2-1717-90c08683d50a\r\n\r\nerror message: \r\nThe active Test Run was aborted because the host process exited unexpectedly while executing following test(s):\r\nMicrosoft.ML.Scenarios.TensorFlowScenariosTests.TensorFlowTransformCifar\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5242","RelatedDescription":"Open issue \"TensorFlowTransformCifar test crash\" (#5242)"},{"Id":"636696451","IsPullRequest":true,"CreatedAt":"2020-06-15T21:21:12","Actor":"frank-dong-ms","Number":"5228","RawContent":null,"Title":"Issue 3234: use model schema type instead of class definition schema","State":"closed","Body":"address issue: https://github.com/dotnet/machinelearning/issues/3234 \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5228","RelatedDescription":"Closed or merged PR \"Issue 3234: use model schema type instead of class definition schema\" (#5228)"},{"Id":"638113689","IsPullRequest":true,"CreatedAt":"2020-06-13T18:59:23","Actor":"Nishikoh","Number":"5239","RawContent":null,"Title":"Fix comment in NormalizeRobustScaling","State":"closed","Body":"Fixes #5238","Url":"https://github.com/dotnet/machinelearning/pull/5239","RelatedDescription":"Closed or merged PR \"Fix comment in NormalizeRobustScaling\" (#5239)"},{"Id":"638097545","IsPullRequest":false,"CreatedAt":"2020-06-13T18:59:23","Actor":"justinormont","Number":"5238","RawContent":null,"Title":"Spell check in NormalizeRobustScaling","State":"closed","Body":"These should say, \"Whether to center the data around 0 by removing the median. Defaults to true.\"\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/207d466f94442ed58509e9f81dd6ec2a8ed193e7/src/Microsoft.ML.Transforms/NormalizerCatalog.cs#L366\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/207d466f94442ed58509e9f81dd6ec2a8ed193e7/src/Microsoft.ML.Transforms/NormalizerCatalog.cs#L366\r\n\r\nGood first PR for any community members; no need to ask first. In the PR description, add \"fixes #5238\", to auto-close this issue.","Url":"https://github.com/dotnet/machinelearning/issues/5238","RelatedDescription":"Closed issue \"Spell check in NormalizeRobustScaling\" (#5238)"},{"Id":"637972137","IsPullRequest":false,"CreatedAt":"2020-06-13T01:57:40","Actor":"CBrauer","Number":"5237","RawContent":null,"Title":"Problem with ML.NET RobustScaler","State":"closed","Body":"### System information\r\n\r\n- Windows 10 Enterprise 10.0 18363 Built 18363\r\n- Visual Studio 2019, build 16.6.2\r\n\r\n### Source code\r\n- I have put my reproduceable project on GitHUb at: https://github.com/CBrauer/Test_RobustScaler\r\n\r\n### Program output. Notice that RobustScaler produced an extra column for \"vwapGain\"\r\n\r\n![image](https://user-images.githubusercontent.com/1317234/84540742-e4b97a80-acaa-11ea-9c8c-8f1504f7a2a6.png)\r\n\r\n### Source code\r\nMy test program looks like:\r\n```\r\nnamespace Test_RobustScaller {\r\n  internal class Program {\r\n    #region MyHead\r\n    public static void MyHead(IDataView train, int numRows) {\r\n      var trainPreview = train.Preview(maxRows: numRows);\r\n      var nColumns = trainPreview.ColumnView.Length;\r\n      var maxCharInHeaderName = 0;\r\n      for (var k = 0; k < nColumns; k++) {\r\n        var columnName = trainPreview.Schema[k].Name;\r\n        maxCharInHeaderName = Math.Max(maxCharInHeaderName, columnName.Length);\r\n      }\r\n      var nSpaces = new int[nColumns];\r\n      for (var k = 0; k < nColumns; k++) {\r\n        var columnName = trainPreview.Schema[k].Name;\r\n        for (var j = 0; j < maxCharInHeaderName - columnName.Length + 1; j++) {\r\n          Console.Write(\" \");\r\n        }\r\n        Console.Write(\"{0}\", columnName);\r\n        nSpaces[k] = maxCharInHeaderName - columnName.Length + 1;\r\n      }\r\n      Console.Write(\"\\n\");\r\n\r\n      foreach (var row in trainPreview.RowView) {\r\n        for (var k = 0; k < row.Values.Length; k++) {\r\n          var field = string.Format(\"{0}\", row.Values[k].Value);\r\n          var nSpace = maxCharInHeaderName - field.Length + 1;\r\n          for (var j = 0; j < nSpace; j++) {\r\n            Console.Write(\" \");\r\n          }\r\n          Console.Write(row.Values[k].Value);\r\n        }\r\n        Console.Write(\"\\n\");\r\n      }\r\n\r\n      Console.Write(\"\\n\");\r\n    }\r\n    #endregion\r\n    public static void Run() {\r\n      var mlContext = new MLContext(seed: 1);\r\n\r\n      var df_full = DataFrame.LoadCsv(\"../../../data/model.csv\");\r\n\r\n      var header_names = new List<string> {\r\n        \"BoxRatio\", \"Thrust\", \"Acceleration\", \"Velocity\",\r\n        \"OnBalRun\", \"vwapGain\", \"Altitude\"\r\n      };\r\n      var nColumns = header_names.Count;\r\n      var df_columns = new DataFrameColumn[nColumns];\r\n      for (var k = 0; k < nColumns; k++) {\r\n        var name = header_names[k];\r\n        df_columns[k] = df_full.Columns[name];\r\n      }\r\n\r\n      var df = new DataFrame(df_columns);\r\n      Console.WriteLine(\"Before transform:\");\r\n      Console.WriteLine(df.Head(5));\r\n\r\n      var pipeline = mlContext.Transforms.RobustScaler(\"vwapGain\");\r\n      var model = pipeline.Fit(df);\r\n      var transformed = model.Transform(df);\r\n      Console.WriteLine(\"After Transform:\");\r\n      MyHead(transformed, 5);\r\n    }\r\n\r\n    static void Main() {\r\n      Run();\r\n      Console.WriteLine(\"Hit return to exit.\");\r\n      Console.ReadKey();\r\n    }\r\n  }\r\n}\r\n```\r\nCharles","Url":"https://github.com/dotnet/machinelearning/issues/5237","RelatedDescription":"Closed issue \"Problem with ML.NET RobustScaler\" (#5237)"},{"Id":"637880186","IsPullRequest":false,"CreatedAt":"2020-06-12T20:00:27","Actor":"JakeRadMSFT","Number":"5235","RawContent":null,"Title":"AutoML - Better error message && stop inferring type for label column in regression && classification","State":"closed","Body":"I have a dataset with sparse data and I can't perform value prediction. \r\n\r\nCan't upload dataset but I can share screen - Come Chat!","Url":"https://github.com/dotnet/machinelearning/issues/5235","RelatedDescription":"Closed issue \"AutoML - Better error message && stop inferring type for label column in regression && classification\" (#5235)"},{"Id":"637960499","IsPullRequest":true,"CreatedAt":"2020-06-12T19:27:54","Actor":"klausmh","Number":"5236","RawContent":null,"Title":"Proposal for returning multiple dimensions in RCA","State":"open","Body":"Draft PR for proposal on returning multiple dimensions in RCA.","Url":"https://github.com/dotnet/machinelearning/pull/5236","RelatedDescription":"Open PR \"Proposal for returning multiple dimensions in RCA\" (#5236)"},{"Id":"636702783","IsPullRequest":true,"CreatedAt":"2020-06-11T21:26:17","Actor":"frank-dong-ms","Number":"5229","RawContent":null,"Title":"add random seed when create random temp folder to avoid conflict","State":"closed","Body":"address issue: https://github.com/dotnet/machinelearning/issues/5210\r\n\r\nWe are create random temp folder during model load, sometimes there are file name conflict when load models in multi-threading as the random temp folder name is not seeded.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5229","RelatedDescription":"Closed or merged PR \"add random seed when create random temp folder to avoid conflict\" (#5229)"},{"Id":"636619681","IsPullRequest":true,"CreatedAt":"2020-06-10T23:57:14","Actor":"antoniovs1029","Number":"5227","RawContent":null,"Title":"Combined methods related to splitting data into one single method. Also fixed related issues.","State":"open","Body":"Fixes #5221 . The NimbusML test mentioned there passes with the changes on this PR.\r\nAlso addressed the issues mentioned on this threads: \r\nhttps://github.com/dotnet/machinelearning/pull/5227#discussion_r438552643\r\nhttps://github.com/dotnet/machinelearning/pull/5227#discussion_r441994977\r\n\r\nTo fix the particular problem described in https://github.com/dotnet/machinelearning/issues/5221#issuecomment-642325157 the solution I implemented here was simply to create a new column by simply copying the original stratificationColumn. This way the new column can safely be dropped by the callers of the `CreateStratificationColumn` method.","Url":"https://github.com/dotnet/machinelearning/pull/5227","RelatedDescription":"Open PR \"Combined methods related to splitting data into one single method. Also fixed related issues.\" (#5227)"},{"Id":"636503402","IsPullRequest":true,"CreatedAt":"2020-06-10T21:06:53","Actor":"wangyems","Number":"5226","RawContent":null,"Title":"remove unnecessary comments in ONNX.cs","State":"closed","Body":"Remove unnecessary comments as right now there is no obvious precision difference between ML.NET model and Onnx model\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5226","RelatedDescription":"Closed or merged PR \"remove unnecessary comments in ONNX.cs\" (#5226)"},{"Id":"636319506","IsPullRequest":false,"CreatedAt":"2020-06-10T20:40:21","Actor":"Vya4ik003","Number":"5225","RawContent":null,"Title":"Find Regression Trainer that support Vector<> type of column \"Score\"","State":"closed","Body":"### System information\r\n\r\n- **OS Windows 7**:\r\n- **.NET 3.1.300**: \r\n\r\n### Issue\r\n\r\n- **What did you do?** - I'm trying to get prediction with Array type.\r\n- **What happened?** - column \"Label\" must be Single, and got Vector<Single>\r\nAre there RegressionTrainers that support Vector<> output?\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5225","RelatedDescription":"Closed issue \"Find Regression Trainer that support Vector<> type of column \"Score\"\" (#5225)"},{"Id":"636089763","IsPullRequest":false,"CreatedAt":"2020-06-10T17:39:32","Actor":"mengaims","Number":"5224","RawContent":null,"Title":"Filter anomalies according to boundaries under AnomalyAndMargin mode in SrCnnEntireAnomalyDetector","State":"closed","Body":"In previous code of SrCnnEntireAnomalyDetector, under AnomalyAndMargin mode, we calculated UpperBoundary and LowerBoundary according to user’s sensitivity setting, but didn’t update the IsAnomaly field according to the boundaries since we want to allow this flexibility to user.\r\n\r\nBut considering the completeness of SrCnnEntireAnomalyDetector as a feature, the most important output should be the judgement whether a point is anomaly or not, namely IsAnomaly. It will be confused if user set different sensitivities but get the same IsAnomaly results. So we need to add anomalies filtering by boundries to the SrCnnEntireAnomalyDetector.","Url":"https://github.com/dotnet/machinelearning/issues/5224","RelatedDescription":"Closed issue \"Filter anomalies according to boundaries under AnomalyAndMargin mode in SrCnnEntireAnomalyDetector\" (#5224)"},{"Id":"635914795","IsPullRequest":true,"CreatedAt":"2020-06-10T05:35:40","Actor":"michaelgsharp","Number":"5223","RawContent":null,"Title":"fixed Microsoft.MLFeaturizer version in nuget and csproj","State":"closed","Body":"Fixes issue #5222 \r\n\r\nWhen I updated the Microsoft.MLFeaturizers version in the csproj file, I didn't do it in the .nuget package. This fixes the version discrepancy and updates them from the preview they were on to the latest full release.","Url":"https://github.com/dotnet/machinelearning/pull/5223","RelatedDescription":"Closed or merged PR \"fixed Microsoft.MLFeaturizer version in nuget and csproj\" (#5223)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-06-24T05:30:38.2592125Z","RunDurationInMilliseconds":828}