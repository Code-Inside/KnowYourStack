{"Data":{"GitHub":{"Issues":[{"Id":"1580614172","IsPullRequest":false,"CreatedAt":"2023-02-11T02:56:13","Actor":"cyberkoolman","Number":"6564","RawContent":null,"Title":"ignore-cols for mlnet not working as it includes all other input columns to features","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 10 & Windows 11\r\n - ML.NET Version: ML.NET v2.0.1\r\n - .NET Version: .NET 7.0\r\n\r\n**Describe the bug**\r\nUsing the mlnet cli on wikiDetoxAnnotated40kRows.tsv which has the columns of Label, rev_id, comment, year, logged_in, ns, sample, split, wanted to pick only **comment** as the input feature.  Currently, through CLI, have to use --ignore-cols parameter and resulted the training pipeline to include all the columns to feature.  I had to resort to VS ModelBuilder for go around this issue for now.\r\n\r\n**To Reproduce**\r\nExecute cli as below\r\n`mlnet classification --dataset .\\wikiDetoxAnnotated40kRows.tsv --label-col Label --has-header true --ignore-cols rev_id year logged_in ns sample split --name Sentiment`\r\n\r\n**Expected behavior**\r\nI would expect the features only contain \"comment\" field\r\n\r\n**Screenshots, Code, Sample Projects**\r\nResulting training pipeline as below\r\n![image](https://user-images.githubusercontent.com/5167152/218235616-a709eb17-a060-409a-8f2e-588696feb703.png)\r\n\r\n**Additional context**\r\n1. Shouldn't this be easier if providing the option to choose only relevant column, instead of long list of ignore-columns.\r\n2. Documentation says ignore-columns, not matching to ignore-cols.  [https://learn.microsoft.com/en-us/dotnet/machine-learning/reference/ml-net-cli-reference#ignore-columns]\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6564","RelatedDescription":"Open issue \"ignore-cols for mlnet not working as it includes all other input columns to features\" (#6564)"},{"Id":"1580322792","IsPullRequest":false,"CreatedAt":"2023-02-10T21:00:41","Actor":"LittleLittleCloud","Number":"6563","RawContent":null,"Title":"Add Summary() for ITransformer","State":"open","Body":"**Describe the solution you'd like**\r\nAn extension `Summary()` method for `ITransformer` that returns a string that contains information like the hyper-parameter/Transformer name if `ITransformer` is a single Transformer, and returns a summary of pipeline if `ITransformer` is `ITransformeChain`\r\n\r\n**Additional context**\r\nThe information can be useful for debugging purposes, and also help simplify the code generator in ModelBuilder, which currently relies on a manul-maintained wrapper for all transformers to pass such information\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6563","RelatedDescription":"Open issue \"Add Summary() for ITransformer\" (#6563)"},{"Id":"1579482458","IsPullRequest":false,"CreatedAt":"2023-02-10T17:40:59","Actor":"Terrance-Whitehurst","Number":"6561","RawContent":null,"Title":"Does ML.NET support multi-label classification","State":"closed","Body":"I am currently using ML.net for multi-class text classification. I was wondering is their a way to do multi-label text classification in ML.NET","Url":"https://github.com/dotnet/machinelearning/issues/6561","RelatedDescription":"Closed issue \"Does ML.NET support multi-label classification\" (#6561)"},{"Id":"1580001262","IsPullRequest":false,"CreatedAt":"2023-02-10T16:33:06","Actor":"superichmann","Number":"6562","RawContent":null,"Title":"No comment on behavior when sending the pipeline as parameter to AutoML experiment","State":"open","Body":"When sending a `pipeline` containing `DropColumns` to a string type column to Execute of AutoML experiment as the `preFeaturizer` there is an exception `ArgumentOutOfRangeException: Could not find input column 'StringColumn' (Parameter 'inputSchema')`.\r\n\r\nPerhaps consider adding documentation to this behavior either on this page or on AutoML Execute page.\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for learn.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: f9a0f970-a53e-b319-f210-15cb90c741fe\r\n* Version Independent ID: dce66202-02e1-ce5f-b9da-a6df7dfb4950\r\n* Content: [TransformExtensionsCatalog.DropColumns(TransformsCatalog, String\\[\\]) Method (Microsoft.ML)](https://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.transformextensionscatalog.dropcolumns?view=ml-dotnet)\r\n* Content Source: [dotnet/xml/Microsoft.ML/TransformExtensionsCatalog.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML/TransformExtensionsCatalog.xml)\r\n* Product: **dotnet-ml-api**\r\n* GitHub Login: @natke\r\n* Microsoft Alias: **nakersha**","Url":"https://github.com/dotnet/machinelearning/issues/6562","RelatedDescription":"Open issue \"No comment on behavior when sending the pipeline as parameter to AutoML experiment\" (#6562)"},{"Id":"1578931887","IsPullRequest":true,"CreatedAt":"2023-02-10T03:38:35","Actor":"LittleLittleCloud","Number":"6560","RawContent":null,"Title":"fix cancellation bug in SweepablePipelineRunner","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6560","RelatedDescription":"Open PR \"fix cancellation bug in SweepablePipelineRunner\" (#6560)"},{"Id":"1578543500","IsPullRequest":false,"CreatedAt":"2023-02-09T20:24:29","Actor":"luisquintanilla","Number":"6559","RawContent":null,"Title":"Expose Cosine Similarity","State":"open","Body":"Expose cosine similarity publicly.\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/510f0112d4fbb4d3ee233b9ca95c83fae1f9da91/src/Microsoft.ML.Core/Utilities/MathUtils.cs#L735","Url":"https://github.com/dotnet/machinelearning/issues/6559","RelatedDescription":"Open issue \"Expose Cosine Similarity\" (#6559)"},{"Id":"1574878356","IsPullRequest":false,"CreatedAt":"2023-02-07T19:05:34","Actor":"superichmann","Number":"6558","RawContent":null,"Title":"NullReferenceException when trying to run AutoML regression experiment from code","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Microsoft Windows 10 Pro 10.0.19045 N/A Build 19045\r\n - ML.NET Version: 2.0.1\r\n - microsoft.ml.automl: 0.20.1\r\n - .NET Version: .NET 6.0\r\n\r\n**Describe the bug**\r\nWhen trying to run AutoML regression experiment on a table with data of 30 rows in QuestDB (implements Postgresql) the following exception occurs:\r\n\r\n\t\tMessage\t\"`Object reference not set to an instance of an object.`\"\tstring\r\n\t\tSource\t\"`Microsoft.ML.AutoML`\"\tstring\r\n\t\tStackTrace\t\" `  at Microsoft.ML.AutoML.AutoMLExperiment.<RunAsync>d__26.MoveNext()`\"\tstring\r\n\t\tTargetSite\t`{Void MoveNext()}\tSystem.Reflection.MethodBase {System.Reflection.RuntimeMethodInfo}`\r\n\t\tDeclaringType\t{Name = \"`<RunAsync>d__26\" FullName = \"Microsoft.ML.AutoML.AutoMLExperiment+<RunAsync>d__26`\"}\tSystem.Type {System.RuntimeType}\r\n\r\n\r\n**To Reproduce**\r\nDownload [QuestDB](https://questdb.io/)\r\nCreate table `\"CREATE TABLE 'tests' (Ticker SYMBOL, H FLOAT, P_T FLOAT,timestamp TIMESTAMP) timestamp (timestamp) PARTITION BY MONTH;\"`\r\nInsert 30 rows to the table\r\nIN C#: get the table data into IDataView with `mlContext.Data.CreateDatabaseLoader` and `using Npgsql;`\r\nrun the following code:\r\n`ExperimentResult<RegressionMetrics> experimentResult = mlContext.Auto().CreateRegressionExperiment(20).Execute(dataview, \"P_T\");`\r\n**Expected behavior**\r\nThe code should not throw an Exception and finish the experiment. **This code works perfectly on a large table with 28000 rows and 30 columns**\r\n\r\n**Additional context**\r\nI Tried running the experiment from the modelbuilder on csv and it works.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6558","RelatedDescription":"Open issue \"NullReferenceException when trying to run AutoML regression experiment from code\" (#6558)"},{"Id":"1557139193","IsPullRequest":false,"CreatedAt":"2023-02-07T07:50:31","Actor":"pjsgsy","Number":"6550","RawContent":null,"Title":"Unhandled exception. System.Exception: col7 column not found. Make sure the name searched for matches the name in the schema.","State":"closed","Body":"\r\nWin11\r\nML.net is the latest stable release from nuget\r\n.net 6.0 console app\r\n\r\n**Describe the bug**\r\nUsing the generated code from a simple tabular scenario with 1 label column with 3 possible values results in an exception.\r\n\r\nThis is the exact code offered by the model maker\r\n\r\n\"//Load sample data\r\nvar sampleData = new MLModel1.ModelInput()\r\n{\r\n    Col0 = -1.833333F,\r\n    Col1 = -0.9662699F,\r\n    Col2 = -0.8599034F,\r\n    Col3 = -0.2951389F,\r\n    Col4 = 4.972222F,\r\n    Col5 = -0.422619F,\r\n    Col6 = -0.1358025F,\r\n};\r\n\r\n//Load model and predict output\r\nvar result = MLModel1.Predict(sampleData);\r\n\"\r\nEven the plain sample project generated will not run and causing this exception.\r\n\r\nAsking for a prediction will cause the exception, and it always complains that the label column is missing, which does not make sense to me. I have also replicated this in a completely new project, from scratch. The source data feed consists of the 7 data columns, and the label column.\r\n\r\nThe exception will always be \r\nUnhandled exception. System.Exception: col7 column not found. Make sure the name searched for matches the name in the schema.\r\n\r\nNot sure what is happening here as I have done this in the past without issue (though at least a few months back!)","Url":"https://github.com/dotnet/machinelearning/issues/6550","RelatedDescription":"Closed issue \"Unhandled exception. System.Exception: col7 column not found. Make sure the name searched for matches the name in the schema.\" (#6550)"},{"Id":"1573140008","IsPullRequest":true,"CreatedAt":"2023-02-06T20:28:37","Actor":"michaelgsharp","Number":"6557","RawContent":null,"Title":"fixes doc typo","State":"closed","Body":"Fixes #6311","Url":"https://github.com/dotnet/machinelearning/pull/6557","RelatedDescription":"Closed or merged PR \"fixes doc typo\" (#6557)"},{"Id":"1555552449","IsPullRequest":false,"CreatedAt":"2023-02-06T20:19:12","Actor":"zyw400","Number":"6548","RawContent":null,"Title":"Limiting CPU usage for ML.NET using SSA for timeseries forecasting","State":"closed","Body":"We are using the SSA Forecaster for our ML training pipeline in C#. However, we observe high CPU spikes in the front-end machine that executes this program periodically. We are looking for ways to limit CPU usage but are unable to find good solutions. Please kindly suggest any methods that we can reduce the CPU usage ideally by limiting the max number of vcores to use.\r\n\r\n        /// <inheritdoc/>\r\n        public override void Train(IEnumerable<DataPoint> trainData)\r\n        {\r\n            int trainSize = trainData.Count();\r\n            var forecastingPipeline = this.BuildSSAForecaster(trainSize);\r\n            this.forecaster = forecastingPipeline.Fit(this.GetDataViewForEnumerable(trainData));\r\n        }","Url":"https://github.com/dotnet/machinelearning/issues/6548","RelatedDescription":"Closed issue \"Limiting CPU usage for ML.NET using SSA for timeseries forecasting\" (#6548)"},{"Id":"1572812618","IsPullRequest":false,"CreatedAt":"2023-02-06T15:43:58","Actor":"superichmann","Number":"6556","RawContent":null,"Title":"See for example - no link for example","State":"open","Body":"The article contains the text _See for example._ but no link is provided to actually see the example.\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for learn.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: ff1457c6-de1c-ae4d-ae76-c083de96a4d5\r\n* Version Independent ID: ab18e9b7-70e7-2991-c50c-03dbb2728848\r\n* Content: [ColumnInformation Class (Microsoft.ML.AutoML)](https://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.automl.columninformation?view=ml-dotnet-preview)\r\n* Content Source: [dotnet/xml/Microsoft.ML.AutoML/ColumnInformation.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.AutoML/ColumnInformation.xml)\r\n* Product: **dotnet-ml-api**\r\n* GitHub Login: @natke\r\n* Microsoft Alias: **nakersha**","Url":"https://github.com/dotnet/machinelearning/issues/6556","RelatedDescription":"Open issue \"See for example - no link for example\" (#6556)"},{"Id":"1571152346","IsPullRequest":false,"CreatedAt":"2023-02-04T22:33:49","Actor":"dgorti","Number":"6555","RawContent":null,"Title":"DataFrame and PowerQuery Tables","State":"open","Body":"I used PowerQuery quite a bit. What is awesome about PowerQuery is that it has a very rich API for Tables.\r\nFor example\r\n`Table.AddColumn(table, \"name\", Func)` allows you to supply a function that generates values and add the column\r\n```\r\nTable.Pivot\r\nTable.RenameColumns\r\nTable.Distinct\r\nTable.Group\r\n```\r\nallow you to manipulate tables in a very efficient and easy way.\r\n\r\nI really would like to see a .NET version of PowerQuery or PowerQuery type API in DataFrame ","Url":"https://github.com/dotnet/machinelearning/issues/6555","RelatedDescription":"Open issue \"DataFrame and PowerQuery Tables\" (#6555)"},{"Id":"1562947899","IsPullRequest":true,"CreatedAt":"2023-01-30T18:17:13","Actor":"michaelgsharp","Number":"6554","RawContent":null,"Title":"Servicing 2.0 branch","State":"closed","Body":"Recreating PR since last time I accidentally squashed and merged and not just merged.\r\n\r\nAlready approved and tests already passed in #6551","Url":"https://github.com/dotnet/machinelearning/pull/6554","RelatedDescription":"Closed or merged PR \"Servicing 2.0 branch\" (#6554)"},{"Id":"1562943795","IsPullRequest":true,"CreatedAt":"2023-01-30T18:14:35","Actor":"michaelgsharp","Number":"6553","RawContent":null,"Title":"Revert \"Servicing for 2.0 branch\"","State":"closed","Body":"Reverts dotnet/machinelearning#6551 because I didn't want to squash and merge, just merge.","Url":"https://github.com/dotnet/machinelearning/pull/6553","RelatedDescription":"Closed or merged PR \"Revert \"Servicing for 2.0 branch\"\" (#6553)"},{"Id":"1557231422","IsPullRequest":true,"CreatedAt":"2023-01-30T18:13:47","Actor":"michaelgsharp","Number":"6551","RawContent":null,"Title":"Servicing for 2.0 branch","State":"closed","Body":"Servicing for 2.0 branch. Includes the bug fix for passing dynamic strings into onnx, as well as the fix for the official build machines.","Url":"https://github.com/dotnet/machinelearning/pull/6551","RelatedDescription":"Closed or merged PR \"Servicing for 2.0 branch\" (#6551)"},{"Id":"1561001536","IsPullRequest":false,"CreatedAt":"2023-01-28T20:30:22","Actor":"TT-Dev1","Number":"6552","RawContent":null,"Title":"AutoML 2 is way worse than 1.7.1 (for me)","State":"open","Body":"Win10 / **ML.NET 1.7.1 vs. 2.0.0** / .NET Framework 4.8\r\n\r\nAutoML 2.0 is way worse for me than the previous 1.7.1 release.  I tried using the Featurizer or even removing completely and doing it all by hand -- in 2 days of fiddling I can not create a model that is anywhere close to that created with the old CreateRegressionExperiment() version of the previous release.\r\n![image](https://user-images.githubusercontent.com/10066158/215285187-78616615-cc02-4aac-9f33-8c5162b269e0.png)\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\nFor 2.0 (where the problem is) I used the same code as this sample (but with my objects):  https://github.com/dotnet/machinelearning-samples/tree/main/samples/csharp/getting-started/MLNET2/AutoMLAdvanced\r\n\r\n```\r\n//Define pipeline\r\nSweepablePipeline pipeline =\r\n    ctx.Auto().Featurizer(data, columnInformation: columnInference.ColumnInformation)\r\n        .Append(ctx.Auto().Regression(labelColumnName: columnInference.ColumnInformation.LabelColumnName, useLgbm: false));\r\n\r\n// Create AutoML experiment\r\nAutoMLExperiment experiment = ctx.Auto().CreateExperiment();\r\n\r\n// Configure experiment\r\nexperiment\r\n    .SetPipeline(pipeline)\r\n    .SetRegressionMetric(RegressionMetric.RSquared, labelColumn: columnInference.ColumnInformation.LabelColumnName)\r\n    .SetTrainingTimeInSeconds(60)\r\n    .SetGridSearchTuner()\r\n    .SetDataset(trainValidationData);\r\n\r\n// Run experiment\r\nvar cts = new CancellationTokenSource();\r\nTrialResult experimentResults = await experiment.RunAsync(cts.Token);\r\n```\r\n\r\nI also unwound the featurizer and did all the same steps by hand and they worked with 1.7.1.\r\n\r\n**Expected behavior**\r\nTo be able to train a model that works as well as the last version.\r\n\r\n**Additional context**\r\nNOTE:  I had all kinds of different versions on my machine and completely uninstalled Visual Studio, deleted the directory, etc.\r\n\r\n_Maybe relevant?_\r\n\r\n* Now, after re-installing VS and adding ML.net, I no longer have the ability to edit notebooks (.ipynb).\r\n\r\n* Sometimes, when playing with the ML.NET Model Builder 2022 (16.13.9.2235601) and the same data, I don't get a Next button with my data.  [maybe there's something with my data that causes a problem with the 2.0 code?]\r\n![image](https://user-images.githubusercontent.com/10066158/215289551-df437b02-26c8-48d4-a5f0-243a5f59de2f.png)\r\n\r\n**ANY IDEAS WHERE I CAN DEBUG MORE?  OR TELL ME WHAT YOU WOULD LIKE TO HAVE ME CAN SHARE SO THAT I CAN BE MORE HELPFUL.**","Url":"https://github.com/dotnet/machinelearning/issues/6552","RelatedDescription":"Open issue \"AutoML 2 is way worse than 1.7.1 (for me)\" (#6552)"},{"Id":"1555695854","IsPullRequest":true,"CreatedAt":"2023-01-24T21:29:57","Actor":"michaelgsharp","Number":"6549","RawContent":null,"Title":"mac python fix","State":"closed","Body":"Official build is having issues in the mac setup step again. Seems to be caused by a machine change. We used to remove python 3.8 cause it was causing problems, now 3.8 is no longer installed so removing the step to remove it.\r\n\r\nAlready tested/validated with the official build.","Url":"https://github.com/dotnet/machinelearning/pull/6549","RelatedDescription":"Closed or merged PR \"mac python fix\" (#6549)"},{"Id":"1553777319","IsPullRequest":true,"CreatedAt":"2023-01-24T19:52:56","Actor":"michaelgsharp","Number":"6547","RawContent":null,"Title":"fixes one dal dispatching issues","State":"closed","Body":"Fixes the onedal dispatching issues by using dynamic checking instead of static.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6547","RelatedDescription":"Closed or merged PR \"fixes one dal dispatching issues\" (#6547)"},{"Id":"1553589068","IsPullRequest":true,"CreatedAt":"2023-01-23T20:47:48","Actor":"LittleLittleCloud","Number":"6546","RawContent":null,"Title":"add checkAlive in NasBertTrainer","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n#6525 \r\n","Url":"https://github.com/dotnet/machinelearning/pull/6546","RelatedDescription":"Closed or merged PR \"add checkAlive in NasBertTrainer\" (#6546)"},{"Id":"1553118094","IsPullRequest":false,"CreatedAt":"2023-01-23T13:38:43","Actor":"DevLob-zz","Number":"6545","RawContent":null,"Title":"Document processing AI model using Ml.net","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nA clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\r\nDocument Processing AI Model is currently popular and very important \r\n\r\n**Describe the solution you'd like**\r\nA clear and concise description of what you want to happen.\r\nMicrosoft already has it \r\nhttps://learn.microsoft.com/en-us/ai-builder/form-processing-train\r\nwhat if we can use our own models and integrate it using our existing applications \r\n\r\n**Describe alternatives you've considered**\r\nA clear and concise description of any alternative solutions or features you've considered.\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6545","RelatedDescription":"Open issue \"Document processing AI model using Ml.net\" (#6545)"},{"Id":"1551629106","IsPullRequest":false,"CreatedAt":"2023-01-21T01:02:37","Actor":"LanceElCamino","Number":"6544","RawContent":null,"Title":"Schema mismatch using AutoML API","State":"open","Body":"Windows 10\r\nMicrosoft.Ml 2.0\r\nMicorsoft.Ml.AutoML 0.20.0\r\n\r\nI receive this error :\r\n\r\nSystem.ArgumentOutOfRangeException: 'Schema mismatch for label column 'NextDayClose': expected Single, got Boolean (Parameter 'labelCol')'\r\n\r\nwhen running this code copied and pasted from the AutoML QuickStart sample:\r\n\r\n```\r\n// Initialize MLContext\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.AutoML;\r\nusing Microsoft.ML.Data;\r\nusing static Microsoft.ML.DataOperationsCatalog;\r\n\r\n// Initialize MLContext\r\nMLContext ctx = new MLContext();\r\n\r\n// Define data path\r\nvar dataPath = Path.GetFullPath(@\"CSATest.csv\");\r\n\r\n// Infer column information\r\nColumnInferenceResults columnInference =\r\n    ctx.Auto().InferColumns(dataPath, labelColumnName: \"NextDayClose\", groupColumns: false);\r\n\r\n// Create text loader\r\nTextLoader loader = ctx.Data.CreateTextLoader(columnInference.TextLoaderOptions);\r\n\r\n// Load data into IDataView\r\nIDataView data = loader.Load(dataPath);\r\n\r\n// Split into train (80%), validation (20%) sets\r\nTrainTestData trainValidationData = ctx.Data.TrainTestSplit(data, testFraction: 0.2);\r\n\r\n//Define pipeline\r\nSweepablePipeline pipeline =\r\n    ctx.Auto().Featurizer(data, columnInformation: columnInference.ColumnInformation)\r\n        .Append(ctx.Auto().MultiClassification(labelColumnName: columnInference.ColumnInformation.LabelColumnName));\r\n\r\n// Create AutoML experiment\r\nAutoMLExperiment experiment = ctx.Auto().CreateExperiment();\r\n\r\n// Configure experiment\r\nexperiment\r\n    .SetPipeline(pipeline)\r\n    .SetMulticlassClassificationMetric(MulticlassClassificatioMetric.MicroAccuracy, labelColumn:columnInference.ColumnInformation.LabelColumnName)\r\n    .SetTrainingTimeInSeconds(10)\r\n    .SetDataset(trainValidationData);\r\n\r\n// Log experiment trials\r\nctx.Log += (_, e) => {\r\n    if (e.Source.Equals(\"AutoMLExperiment\"))\r\n    {\r\n        Console.WriteLine(e.RawMessage);\r\n    }\r\n};\r\n\r\n// Run experiment\r\nTrialResult experimentResults = await experiment.RunAsync();\r\n\r\n// Get best model\r\nvar model = experimentResults.Model;\r\n```\r\nAttached is the csv file being called.\r\n\r\n[CSATest.csv](https://github.com/dotnet/machinelearning/files/10471206/CSATest.csv)\r\n\r\nIs there a way to override the data type that InferColumns is inferring? Looks like it's expecting a bool yet it's a single.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6544","RelatedDescription":"Open issue \"Schema mismatch using AutoML API\" (#6544)"},{"Id":"1550890008","IsPullRequest":false,"CreatedAt":"2023-01-20T13:58:20","Actor":"rzechu","Number":"6543","RawContent":null,"Title":"ML.NET Anomaly detection of missing values or gaps in data. ex. missing montly invoices ","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nI am looking for an easy way to implement ML.NET (or another? solution for finding missing data/gaps in data.\r\nWith current methods I am able to find spikes (upside/downside) but If there will be slight decreasing overtime to zero (zero or missing value won't be flagged as anomaly)\r\n\r\nFew potential scenarios\r\n1. Webservice receives requests and there's gaps indicating service was offline.\r\n2. I am receiving many invoices but for example I am receiving 1 phone bill monthly. If i don't get it (missing in my data). I'd like to find that in months between 05.2022-07.2022 is a gap and invoice is missing (I know I can implement manual checking for each month but looking for more complex solution to avoid manually checking or selecting for seconds/minutes/months/years a period. \r\n3. Same as above but more complex I am receiving 3-5 invoices and received none In some period of data (propably existing solutions can partially fit it)\r\n4. I have invoices and each should have 3-10 positions but I have few with only 1 (potentially some integrations broken and data is missing)","Url":"https://github.com/dotnet/machinelearning/issues/6543","RelatedDescription":"Open issue \"ML.NET Anomaly detection of missing values or gaps in data. ex. missing montly invoices \" (#6543)"},{"Id":"1548910140","IsPullRequest":false,"CreatedAt":"2023-01-19T10:43:50","Actor":"rzechu","Number":"6541","RawContent":null,"Title":"AutoML ExperimentResult plain TrainerName instead of \"ReplaceMissingValues=>OneHotHashEncoding=>Concatenate=>Unknown=>SdcaMaximumEntropyMulti=>Unknown\"","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version:  0.20\r\n - .NET Version: .NET 6.0\r\n\r\n**Describe the bug**\r\nResult of \r\nMicrosoft.ML.AutoML.MulticlassClassificationExperiment\r\npublic override ExperimentResult<MulticlassClassificationMetrics> Execute(IDataView trainData, string labelColumnName = \"Label\", string samplingKeyColumn = null, IEstimator<ITransformer> preFeaturizer = null, IProgress<RunDetail<MulticlassClassificationMetrics>> progressHandler = null)\r\n\r\n\r\n**Expected behavior**\r\nTrainer name should be used trainer name not this \"concatated long value\"\r\n\r\n**Screenshots, Code, Sample Projects**\r\nPrevious valid (0.17)\r\n![image](https://user-images.githubusercontent.com/45091660/213421504-046b5a63-d337-4b98-8f5c-fab80576d392.png)\r\n\r\nNew version (0.20)\r\n![image](https://user-images.githubusercontent.com/45091660/213421656-0b376edf-dcc8-4e90-bc83-cc8088c7ba27.png)\r\n![image](https://user-images.githubusercontent.com/45091660/213421752-e11a77a6-a542-4469-8cb1-c9000bb57cb0.png)","Url":"https://github.com/dotnet/machinelearning/issues/6541","RelatedDescription":"Open issue \"AutoML ExperimentResult plain TrainerName instead of \"ReplaceMissingValues=>OneHotHashEncoding=>Concatenate=>Unknown=>SdcaMaximumEntropyMulti=>Unknown\"\" (#6541)"},{"Id":"1532868557","IsPullRequest":true,"CreatedAt":"2023-01-13T20:23:31","Actor":"LittleLittleCloud","Number":"6539","RawContent":null,"Title":"Fairlearn","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6539","RelatedDescription":"Open PR \"Fairlearn\" (#6539)"},{"Id":"1531479375","IsPullRequest":true,"CreatedAt":"2023-01-13T04:37:52","Actor":"rgesteve","Number":"6538","RawContent":null,"Title":"Bail to default implementation upon any unforeseen situation","State":"closed","Body":"Upon any unanticipated circumstance, bail to default implementation of an algorithm.   \r\n\r\nMost likely the dispatch logic will need to become more sophisticated as accelerated alternative implementations are added.\r\n\r\nWe are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6538","RelatedDescription":"Closed or merged PR \"Bail to default implementation upon any unforeseen situation\" (#6538)"},{"Id":"1529856912","IsPullRequest":true,"CreatedAt":"2023-01-12T23:38:33","Actor":"michaelgsharp","Number":"6537","RawContent":null,"Title":"fixing bug with multi-threaded access for variable length string arrays for onnx models.","State":"closed","Body":"Fixes bug where multiple threads would change the same variable resulting in corrupted values.","Url":"https://github.com/dotnet/machinelearning/pull/6537","RelatedDescription":"Closed or merged PR \"fixing bug with multi-threaded access for variable length string arrays for onnx models.\" (#6537)"},{"Id":"1526854396","IsPullRequest":false,"CreatedAt":"2023-01-10T06:48:40","Actor":"zewditu","Number":"6536","RawContent":null,"Title":"Validate the similarity between training dataset and validation dataset Schema","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\n\r\n\r\n**Describe the solution you'd like**\r\nWhen the user wants to pass a separate validation dataset file. The two-dataset schema (train & validate) should be the same before we proceed to train.\r\n\r\n**Describe alternatives you've considered**\r\nA clear and concise description of any alternative solutions or features you've considered.\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6536","RelatedDescription":"Open issue \"Validate the similarity between training dataset and validation dataset Schema\" (#6536)"},{"Id":"1521500514","IsPullRequest":true,"CreatedAt":"2023-01-06T22:24:22","Actor":"LittleLittleCloud","Number":"6535","RawContent":null,"Title":"add addKeyValueAnnotationsAsText flag in AutoML","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\nhttps://github.com/dotnet/machinelearning-modelbuilder/issues/2418\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6535","RelatedDescription":"Closed or merged PR \"add addKeyValueAnnotationsAsText flag in AutoML\" (#6535)"},{"Id":"1521263465","IsPullRequest":false,"CreatedAt":"2023-01-05T19:24:14","Actor":"LittleLittleCloud","Number":"6534","RawContent":null,"Title":"Text classification : Target 4294967295 is out of bounds","State":"open","Body":"**System Information (please complete the following information):**\r\n - ML.NET Version: 2.0\r\n\r\n**Describe the bug**\r\n\r\nDetailed info can be found in\r\n#https://github.com/dotnet/machinelearning-modelbuilder/issues/2369","Url":"https://github.com/dotnet/machinelearning/issues/6534","RelatedDescription":"Open issue \"Text classification : Target 4294967295 is out of bounds\" (#6534)"},{"Id":"1519561735","IsPullRequest":false,"CreatedAt":"2023-01-04T20:57:22","Actor":"luisquintanilla","Number":"6533","RawContent":null,"Title":"oneDAL Binary Classification LBFGS - Index was outside the bounds of the array.","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: ML.NET 3.0 prerelease\r\n - .NET Version: .NET 6 & .NET 6\r\n\r\n**Describe the bug**\r\n\r\nTraining a binary classification model using the Lbfgs trainer and setting the MLNET_BACKEND environment variable to ONEDAL produces the following error:\r\n\r\n```text\r\nUnhandled exception. System.IndexOutOfRangeException: Index was outside the bounds of the array.\r\n   at Microsoft.ML.Trainers.LbfgsTrainerBase`3.TrainCoreOneDal(IChannel ch, RoleMappedData data)\r\n   at Microsoft.ML.Trainers.LbfgsTrainerBase`3.TrainModelCore(TrainContext context)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.Fit(IDataView input)\r\nat Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\nat Program.<Main>$(String[] args) in C:\\Dev\\OneDalTest\\OneDalTest\\Program.cs:line 31\r\n```\r\n\r\n**To Reproduce**\r\n\r\n1. Create a C# console application\r\n2. Install the latest prerelease versions of Microsoft.ML and Microsoft.ML.OneDAL packages.\r\n3. Paste the following code into the *Program.cs* file.\r\n\r\n```csharp\r\n// Initialize MLContext\r\nvar ctx = new MLContext();\r\n\r\n// Define data\r\nvar trainingData = new [] \r\n{\r\n    new {Arch=\"ARM\", Trainer=\"LightGBM\", oneDALSupport=false},\r\n    new {Arch=\"x86\", Trainer=\"FastTree\", oneDALSupport=true},\r\n    new {Arch=\"x86\", Trainer=\"LbfgsLogisticRegression\", oneDALSupport=true},\r\n    new {Arch=\"ARM\", Trainer=\"FastTree\", oneDALSupport=false}\r\n};\r\n\r\n// Load data into IDataView\r\nvar trainingDv = ctx.Data.LoadFromEnumerable(trainingData);\r\n\r\n// Define data processing pipeline & trainer\r\nvar pipeline = \r\n    ctx.Transforms.Categorical.OneHotEncoding(new [] {\r\n            new InputOutputColumnPair(\"ArchEncoded\", \"Arch\"),\r\n            new InputOutputColumnPair(\"TrainerEncoded\", \"Trainer\")})\r\n        .Append(ctx.Transforms.Concatenate(\"Features\", \"ArchEncoded\", \"TrainerEncoded\"))\r\n        .Append(ctx.BinaryClassification.Trainers.LbfgsLogisticRegression(labelColumnName:\"oneDALSupport\"));\r\n\r\n// Train model\r\nvar model = pipeline.Fit(trainingDv);\r\n```\r\n\r\n4. Set the `MLNET_BACKEND` environment variable to `ONEDAL` \r\n5. Run the application.\r\n\r\n**Expected behavior**\r\nThe model trains successfully. \r\n\r\n**Additional context**\r\n\r\nThe same code using the FastTree trainer trains the model successfully. \r\n","Url":"https://github.com/dotnet/machinelearning/issues/6533","RelatedDescription":"Open issue \"oneDAL Binary Classification LBFGS - Index was outside the bounds of the array.\" (#6533)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-02-11T03:30:22.1070538Z","RunDurationInMilliseconds":549}