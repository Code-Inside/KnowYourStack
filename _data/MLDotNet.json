{"Data":{"GitHub":{"Issues":[{"Id":"1403618036","IsPullRequest":true,"CreatedAt":"2022-10-10T19:29:01","Actor":"ericstj","Number":"6367","RawContent":null,"Title":"Attempt to retarget tests to .NET 6.0","State":"open","Body":"Trying out retargeting our tests to .NET 6.0.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6367","RelatedDescription":"Open PR \"Attempt to retarget tests to .NET 6.0\" (#6367)"},{"Id":"1403548408","IsPullRequest":false,"CreatedAt":"2022-10-10T18:15:58","Actor":"luisquintanilla","Number":"6366","RawContent":null,"Title":"Custom weight criteria for NGramExtractingEstimator","State":"open","Body":"## Problem\r\n\r\nToday, the [`NGramExtractingEstimator`](https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.text.ngramextractingestimator?view=ml-dotnet) is used by the [ProduceWordBags](https://learn.microsoft.com/dotnet/api/microsoft.ml.textcatalog.producewordbags?view=ml-dotnet) and [ProduceNGrams](https://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.textcatalog.producengrams?view=ml-dotnet) estimators. \r\n\r\nBoth estimators allow you to choose how the weight of the NGram vector is calculated using either:\r\n\r\n- Term Frequency (TF)\r\n- Inverse Document Frequency (IDF)\r\n- Term Frequency-Inverse Document Frequency (TF-IDF)\r\n\r\nAlthough these are common ways to calculate NGram weight, there are scenarios where users want to provide custom weights. In its current implementation, ProduceWordBags and ProduceNGrams don't allow for users to provide custom weights. \r\n\r\n## Suggested solution\r\n\r\nProvide a method overload for ProduceWordBags and ProduceNGrams that allows users to pass in custom weights alongside the text inputs. \r\n\r\n## Open questions\r\n\r\n- What format does ML.NET expect the input to be in when providing custom weights?\r\n- How are custom weights provided for NGrams of length > 1?","Url":"https://github.com/dotnet/machinelearning/issues/6366","RelatedDescription":"Open issue \"Custom weight criteria for NGramExtractingEstimator\" (#6366)"},{"Id":"1403454773","IsPullRequest":true,"CreatedAt":"2022-10-10T16:45:53","Actor":"adiaaida","Number":"6365","RawContent":null,"Title":"Use latest docker containers","State":"open","Body":"This change moves all of the docker images to the latest tag as part of https://github.com/dotnet/arcade/issues/10377.\r\n\r\nAlso updates EOL containers to newer versions.\r\n\r\nWe are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6365","RelatedDescription":"Open PR \"Use latest docker containers\" (#6365)"},{"Id":"1402521463","IsPullRequest":true,"CreatedAt":"2022-10-10T02:48:27","Actor":"rgesteve","Number":"6364","RawContent":null,"Title":"Random forest onedal","State":"open","Body":"We are excited to review your PR.\r\n\r\nIncludes acceleration (based on OneDAL) for RandomForest Trainers.  To engage, enable `MLNET_BACKEND` environment variable.  No further change is necessary at the user level.   At the developer level, these improvements require a copy of the OneDAL Data Analytics Library from Intel, against which a stub library is built and P/Invoked into.  Tests and benchmarks are to follow in this PR.\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] (N/A) There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6364","RelatedDescription":"Open PR \"Random forest onedal\" (#6364)"},{"Id":"1402396831","IsPullRequest":true,"CreatedAt":"2022-10-09T21:03:08","Actor":"tarekgh","Number":"6363","RawContent":null,"Title":"Remove the System.Drawing dependency","State":"open","Body":"**Description**\r\n\r\nThe change here is removing the dependency on System.Drawing and provide abstraction for the image handling. It allow users to use the abstraction directly for image handling and optionally introduce extensibility to plug a custom image handlers. It is important to note that this is a `breaking change`.\r\nThe change contains update to the samples code too.\r\n\r\n**Public Abstraction Interfaces**\r\n```C#\r\n    /// <summary>\r\n    /// Base class provide all interfaces for imaging operations.\r\n    /// </summary>\r\n    public abstract class ImageBase : IDisposable\r\n    {\r\n        /// <summary>\r\n        /// Gets or sets the image tag.\r\n        /// </summary>\r\n        public string Tag { get; set; }\r\n\r\n        /// <summary>\r\n        /// Gets the image width in pixels.\r\n        /// </summary>\r\n        public abstract int Width { get; }\r\n\r\n        /// <summary>\r\n        /// Gets the image height in pixels.\r\n        /// </summary>\r\n        public abstract int Height { get; }\r\n\r\n        /// <summary>\r\n        /// Gets how many bits per pixel used by current image object.\r\n        /// </summary>\r\n        public abstract int BitsPerPixel { get; }\r\n\r\n        /// <summary>\r\n        /// Create image object from a stream.\r\n        /// </summary>\r\n        /// <param name=\"imageStream\">The stream to create the image from.</param>\r\n        /// <returns>Image object.</returns>\r\n        public static ImageBase CreateFromStream(Stream imageStream)\r\n\r\n        /// <summary>\r\n        /// Create BRGA32 pixel format image object from the pixel data buffer span.\r\n        /// </summary>\r\n        /// <param name=\"width\">The width of the image in pixels.</param>\r\n        /// <param name=\"height\">The height of the image in pixels.</param>\r\n        /// <param name=\"imagePixelData\">The pixels data to create the image from.</param>\r\n        /// <returns>Image object.</returns>\r\n        public static ImageBase CreateBgra32Image(int width, int height, Span<byte> imagePixelData)\r\n\r\n        /// <summary>\r\n        /// Clones the current image with resizing it.\r\n        /// </summary>\r\n        /// <param name=\"width\">The new width of the image.</param>\r\n        /// <param name=\"height\">The new height of the image.</param>\r\n        /// <param name=\"mode\">How to resize the image.</param>\r\n        /// <returns>The new cloned image.</returns>\r\n        public abstract ImageBase CloneWithResizing(int width, int height, ImageResizeMode mode);\r\n\r\n        /// <summary>\r\n        /// Clones the current image with grayscale.\r\n        /// </summary>\r\n        /// <returns>The new cloned image.</returns>\r\n        public abstract ImageBase CloneWithGrayscale();\r\n\r\n        /// <summary>\r\n        /// Gets the image pixel data and how the colors are ordered in the used pixel format.\r\n        /// </summary>\r\n        /// <param name=\"alphaIndex\">The index of the alpha in the pixel format.</param>\r\n        /// <param name=\"redIndex\">The index of the red color in the pixel format.</param>\r\n        /// <param name=\"greenIndex\">The index of the green color in the pixel format.</param>\r\n        /// <param name=\"blueIndex\">The index of the blue color in the pixel format.</param>\r\n        /// <returns>The buffer containing the image pixel data.</returns>\r\n        public abstract ReadOnlySpan<byte> Get32bbpImageData(out int alphaIndex, out int redIndex, out int greenIndex, out int blueIndex);\r\n\r\n        /// <summary>\r\n        /// Save the current image to a file.\r\n        /// </summary>\r\n        /// <param name=\"imagePath\">The path of the file to save the image to.</param>\r\n        /// <remarks>The saved image encoding will be detected from the file extension.</remarks>\r\n        public abstract void Save(string imagePath);\r\n\r\n        /// <summary>\r\n        /// Releases the unmanaged resources used by the image object and optionally releases the managed resources.\r\n        /// </summary>\r\n        /// <param name=\"disposing\">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>\r\n        protected virtual void Dispose(bool disposing)\r\n\r\n        /// <summary>\r\n        /// Releases all resources used by the image object.\r\n        /// </summary>\r\n        public void Dispose()\r\n    }\r\n\r\n\r\n    /// <summary>\r\n    /// The mode to decide how the image should be resized.\r\n    /// </summary>\r\n    public enum ImageResizeMode\r\n    {\r\n        /// <summary>\r\n        /// Pads the resized image to fit the bounds of its container.\r\n        /// </summary>\r\n        Pad,\r\n\r\n        /// <summary>\r\n        /// Ignore aspect ratio and squeeze/stretch into target dimensions.\r\n        /// </summary>\r\n        Fill,\r\n\r\n        /// <summary>\r\n        /// Resized image to fit the bounds of its container using cropping with top anchor.\r\n        /// </summary>\r\n        CropAnchorTop,\r\n\r\n        /// <summary>\r\n        /// Resized image to fit the bounds of its container using cropping with bottom anchor.\r\n        /// </summary>\r\n        CropAnchorBottom,\r\n\r\n        /// <summary>\r\n        /// Resized image to fit the bounds of its container using cropping with left anchor.\r\n        /// </summary>\r\n        CropAnchorLeft,\r\n\r\n        /// <summary>\r\n        /// Resized image to fit the bounds of its container using cropping with right anchor.\r\n        /// </summary>\r\n        CropAnchorRight,\r\n\r\n        /// <summary>\r\n        /// Resized image to fit the bounds of its container using cropping with central anchor.\r\n        /// </summary>\r\n        CropAnchorCentral\r\n    }\r\n```\r\n\r\n**Examples**\r\n\r\n*Load Image*\r\n```C#\r\nusing Stream stream = new FileStream(@\"tomato.bmp\", FileMode.Open);\r\nImageBase image = CreateFromStream(stream);\r\n```\r\n\r\n*Load from pixel data*\r\n```C#\r\nbyte[] imageData = new byte[width * height * 4]; // 4 for the red, green, blue and alpha colors\r\nfor (int i = 0; i < imageData.Length; i += 4)\r\n{\r\n    // Fill the buffer with the Bgra32 format\r\n    imageData[i] = blue;\r\n    imageData[i + 1] = green;\r\n    imageData[i + 2] = red;\r\n    imageData[i + 3] = alpha;\r\n}\r\n\r\nImageBase image = ImageBase.CreateBgra32Image(width, height, imageData);\r\n```\r\n\r\n*Cloning with Resizing*\r\n```C#\r\nImageBase resizedImage = image.CloneWithResizing(100, 100, ImageResizeMode.Fill);\r\n```\r\n\r\n*Grayscaling*\r\n```C#\r\nImageBase grayScaleImage = image.CloneWithGrayscale();\r\n```\r\n\r\n*Access the image pixel data*\r\n```C#\r\nReadOnlySpan<byte> pixelData = image.Get32bbpImageData(out alphaIndex, out redIndex, out greenIndex, out  blueIndex);\r\n```\r\n\r\n*Save the image*\r\n```C#\r\nimage.Save(@\"foo.png\");\r\n```\r\n\r\n**Breaking Change*\r\nThe breaking change mostly about the used data with the Image analytic transformers. Previously, `System.Drawing.Bitmap` type is used. Now this is replaced with the `ImageBase` type. Here is example:\r\n\r\n```diff\r\n-var image = Image.FromFile(imagePath) as Bitmap;\r\n+var image = ImageBase.CreateFromStream(imageStream);\r\n```\r\n\r\nand then ise the created image object, something like:\r\n\r\n```C#\r\nvar prediction = transformer.Predict(image);\r\n```\r\n\r\nIt is a good idea to look at the samples code changes in this PR which give a better idea how users can migrate from using `System.Drawing` to `ImageBase` abstraction.\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6363","RelatedDescription":"Open PR \"Remove the System.Drawing dependency\" (#6363)"},{"Id":"1401670564","IsPullRequest":true,"CreatedAt":"2022-10-07T23:37:22","Actor":"LittleLittleCloud","Number":"6362","RawContent":null,"Title":"add text classification in sweepable estimator","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6362","RelatedDescription":"Closed or merged PR \"add text classification in sweepable estimator\" (#6362)"},{"Id":"1398252094","IsPullRequest":true,"CreatedAt":"2022-10-07T20:54:39","Actor":"ericstj","Number":"6355","RawContent":null,"Title":"Remove Microsoft.ML.Featurizers","State":"closed","Body":"This component was built on https://github.com/microsoft/featurizerslibrary which is no longer actively developed.","Url":"https://github.com/dotnet/machinelearning/pull/6355","RelatedDescription":"Closed or merged PR \"Remove Microsoft.ML.Featurizers\" (#6355)"},{"Id":"1401571459","IsPullRequest":false,"CreatedAt":"2022-10-07T19:10:24","Actor":"LittleLittleCloud","Number":"6361","RawContent":null,"Title":"RegressionEvaluator return 0 for MSE && RMSE if all scores are NaN","State":"open","Body":"It seems that RegressionEvaluator filters out all `NaN` scores when calculating metrics. So if a predictor produces `NaN` only for the entire evaluation dataset, the RMSE and MSE from RegressionEvaluator would be 0, which is ironically the best result it can get. \r\n\r\nWhile it may need further discussion, I wonder if it's necessary to _FILTER_ out the `NaN` value when calculating metrics, as `NaN` in prediction result usually indicates a model is not well-trained, and thus should be reflected in evaluation metrics.","Url":"https://github.com/dotnet/machinelearning/issues/6361","RelatedDescription":"Open issue \"RegressionEvaluator return 0 for MSE && RMSE if all scores are NaN\" (#6361)"},{"Id":"1401469700","IsPullRequest":false,"CreatedAt":"2022-10-07T17:17:13","Actor":"luisquintanilla","Number":"6360","RawContent":null,"Title":"ONNX Tracking Issue","State":"open","Body":"Issue to track bugs / requests related to ONNX\r\n\r\n## Increased export coverage\r\n\r\n- [ ] #6317\r\n- [ ] #4615\r\n\r\n## Performance improvements\r\n\r\n- [ ] #6264 \r\n- [ ] #5240\r\n- [ ] #6212 \r\n- [ ] #5928\r\n- [ ] #5597\r\n\r\n## UX improvements\r\n\r\n- [ ] #4335\r\n- [ ] #5976\r\n\r\n## Result discrepancies\r\n\r\n- [ ] #6324\r\n- [ ] #6067\r\n- [ ] #5830\r\n- [ ] #5549\r\n\r\n## Still relevant?\r\n\r\n- [ ] #5985 (Maybe done since you can now save the useGPU flag or pass it in the MLContext)?\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6360","RelatedDescription":"Open issue \"ONNX Tracking Issue\" (#6360)"},{"Id":"1397293297","IsPullRequest":false,"CreatedAt":"2022-10-07T16:30:18","Actor":"KyGurasz","Number":"6351","RawContent":null,"Title":"Monotonic constraints for Regressors, especially LightGBM","State":"closed","Body":"Would love to see monotonic constraints in ML.net, it's something gradient boosters have had for a while. ","Url":"https://github.com/dotnet/machinelearning/issues/6351","RelatedDescription":"Closed issue \"Monotonic constraints for Regressors, especially LightGBM\" (#6351)"},{"Id":"1397301600","IsPullRequest":false,"CreatedAt":"2022-10-07T16:27:49","Actor":"KyGurasz","Number":"6352","RawContent":null,"Title":"Update to latest LightGBM version","State":"closed","Body":"The current version in use with ML.net seems to be 2.3.1, which is from November 2019.  An updated version would bring functionality more in line to what we see in other environments. Also, see issue [#6296](https://github.com/dotnet/machinelearning/issues/6296).","Url":"https://github.com/dotnet/machinelearning/issues/6352","RelatedDescription":"Closed issue \"Update to latest LightGBM version\" (#6352)"},{"Id":"1401368741","IsPullRequest":true,"CreatedAt":"2022-10-07T15:38:42","Actor":"FranklinWhale","Number":"6359","RawContent":null,"Title":"Add option to skip PrintMemoryStats in FastTree","State":"open","Body":"Fixes #2444\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6359","RelatedDescription":"Open PR \"Add option to skip PrintMemoryStats in FastTree\" (#6359)"},{"Id":"1400547870","IsPullRequest":false,"CreatedAt":"2022-10-07T02:48:07","Actor":"alisalih1","Number":"6358","RawContent":null,"Title":"DataFrame.LoadCsv method should allow selection of columns","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\n**DataFrame.LoadCsv** method currently doesn't allow the selection of columns while processing a CSV file, and loads all the columns and rows into the df object. This may cause inefficiencies in processing in large datasets, if the user needs to work with subsection of the data. \r\n\r\n**Describe the solution you'd like**\r\nThe method should have a parameter for \"Selecting\" columns while loading a CSV file into the df object. This improvement is inline with how python Pandas library is structured and helps tremendously. A new parameter named **useColumns** would help to load only selected columns into the df object, thus reducing the unnecessary footprint.\r\n\r\n**Describe alternatives you've considered**\r\nTried columnNames but didn't work as it renames all the columns in order, not working as expected to 'select' only the columns one may need.\r\n\r\n**Additional context**\r\nNone. \r\n","Url":"https://github.com/dotnet/machinelearning/issues/6358","RelatedDescription":"Open issue \"DataFrame.LoadCsv method should allow selection of columns\" (#6358)"},{"Id":"1396853337","IsPullRequest":true,"CreatedAt":"2022-10-06T21:43:52","Actor":"dakersnar","Number":"6349","RawContent":null,"Title":"Update name of DataFrame.WriteCsv to SaveCsv","State":"closed","Body":"It seems like there was [general agreement](https://github.com/dotnet/machinelearning/issues/5883) to update the name about a year ago, but it has been a while, so I want to resurface this and ask the following questions:\r\n\r\n1. Do we still want to go ahead with this change?\r\n2. Is this considered a \"breaking change\"? If yes, are there any repercussions we should be aware of?\r\n3. Is there anything else I'm missing that might need to be updated (documentation, other files, etc)?","Url":"https://github.com/dotnet/machinelearning/pull/6349","RelatedDescription":"Closed or merged PR \"Update name of DataFrame.WriteCsv to SaveCsv\" (#6349)"},{"Id":"1399857862","IsPullRequest":false,"CreatedAt":"2022-10-06T15:23:13","Actor":"kretovd","Number":"6357","RawContent":null,"Title":"Apply VectorTypeAttribute to data array of unknown length","State":"open","Body":"I'm new to ML.NET \r\nI have data array of unknown length, how to correctly apply the VectorTypeAttribute to solve the Binary classifier problem\r\n```\r\n1\t[1,2,3],[0,4,5],[1,9,8],[0,0,0] \r\n1\t[0,8,3],[1,5,8]\r\n0\t[1,1,1]\r\n0\t[1,2,3],[0,4,5],[1,9,8],[0,0,0],[1,1,1],[0,0,0],[1,1,1],[0,0,0],[1,1,1],[0,0,0],[1,1,1],[0,0,0],[1,1,1]\r\n0\t[0,8,3],[1,5,8],[1,1,1]\r\n```\r\nmy data class is\r\n\r\n```\r\npublic class Data\r\n{\r\n    [LoadColumn(0)]\r\n    public bool Selection;\r\n\r\n    [LoadColumn(1)]\r\n    [VectorType]\r\n    public List<int[]> Data;\r\n}\r\n```\r\nIs it correct?\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6357","RelatedDescription":"Open issue \"Apply VectorTypeAttribute to data array of unknown length\" (#6357)"},{"Id":"1399201342","IsPullRequest":false,"CreatedAt":"2022-10-06T09:27:27","Actor":"JeroenMBooij","Number":"6356","RawContent":null,"Title":"Microsoft.Data.Analysis update value in Dataframe column ","State":"open","Body":"Not sure if this the right place, but I want to request a feature for the Microsoft.Data.Analysis library. When I am working with a DataFrame in C# and I want to update a value in a specific value in a column I need the row index, but the rowIndex is a private field. So the only way to update a specific value is to hard code it if you know the rowIndex.\r\n\r\nI would like to update a specific row in a dataframe like in the example below, so that _index becomes accessible with an Index property:\r\n\r\n```\r\n        public void UpdateBatch(List<TestExtractionl> testExtractions)\r\n        {\r\n            DataFrame testDataframe = DataFrame.LoadCsv(_storageLocation, ';');\r\n\r\n            foreach(TechExtractionModel testExtraction in testExtractions)\r\n            {\r\n                var test = testDataframe.Filter(testDataframe[\"foo\"].ElementwiseEquals(testExtraction.Name));\r\n                testDataframe[\"bar\"][test.Rows.FirstOrDefault()._index] == testExtraction.Description;\r\n\r\n           }\r\n        }\r\n\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/6356","RelatedDescription":"Open issue \"Microsoft.Data.Analysis update value in Dataframe column \" (#6356)"},{"Id":"1398172851","IsPullRequest":true,"CreatedAt":"2022-10-05T18:08:38","Actor":"dotnet-maestro[bot]","Number":"6354","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1c26c342-7dbd-4e18-3778-08daa2f83374)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1c26c342-7dbd-4e18-3778-08daa2f83374\r\n- **Build**: 20221007.2\r\n- **Date Produced**: October 7, 2022 2:17:06 PM UTC\r\n- **Commit**: c4f77b4e80e942941e73d70cec045eddbfd7b4eb\r\n- **Branch**: refs/heads/release/7.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22327.2 to 7.0.0-beta.22507.2][2]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 7.0.0-beta.22327.2 to 7.0.0-beta.22507.2][2]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22327.2 to 7.0.0-beta.22507.2][2]\r\n  - **Microsoft.DotNet.SignTool**: [from 7.0.0-beta.22327.2 to 7.0.0-beta.22507.2][2]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 7.0.0-beta.22327.2 to 7.0.0-beta.22507.2][2]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.22327.2 to 7.0.0-beta.22507.2][2]\r\n\r\n[2]: https://github.com/dotnet/arcade/compare/a264eb1...c4f77b4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1c26c342-7dbd-4e18-3778-08daa2f83374)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6354","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#6354)"},{"Id":"1398103400","IsPullRequest":false,"CreatedAt":"2022-10-05T17:04:05","Actor":"nhirschey","Number":"6353","RawContent":null,"Title":"CreateEnumerable code fails in Visual Studio FSI but works in .NET Interactive notebook?","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11 \r\n - ML.NET Version: Microsoft.ML.AutoML, 0.20.0-preview.22356.1\r\n - .NET Version: failed on both 6.0.400 and 7.0.100-rc.1.22431.12\r\n\r\n**Describe the bug**\r\nI am trying to create an F# IEnumerable from predictions. The code works in .NET Interactive notebooks, but it does not work in Visual Studio 2022 17.3.2 via F# interactive. I have also tried pasting the code into F# interactive by running `dotnet fsi` at the command line, but I get the same error.\r\n\r\nWhen I run it in a notebook, I get predictions as expected. When I run it in a FSX script file in Visual Studio, I get the error \"Could not find  column 'Predicted@' (Parameter 'Schema')\", yet the schema has a parameter named \"Predicted\".\r\n\r\n**To Reproduce**\r\nCode\r\n```fsharp\r\n#i \"nuget:https://pkgs.dev.azure.com/dnceng/public/_packaging/MachineLearning/nuget/v3/index.json\"\r\n#r \"nuget: Microsoft.ML.AutoML, 0.20.0-preview.22356.1\"\r\n\r\nopen System\r\nopen Microsoft.ML\r\nopen Microsoft.ML.Data\r\n\r\nlet mlContext = new MLContext()\r\n\r\n[<CLIMutable>]\r\ntype Predictors =\r\n    {\r\n        Date: DateTime\r\n        Return: single\r\n        DividendPrice: single\r\n    }\r\n\r\nlet predictors =\r\n    [{ Date = DateTime(1872,2,1)\r\n       Return = 0.008688271977f\r\n       DividendPrice = 0.05482897535f };\r\n     { Date = DateTime(1872,3,1)\r\n       Return = 0.03739754111f\r\n       DividendPrice = 0.05333504081f };\r\n     { Date = DateTime(1872,4,1)\r\n       Return = 0.03229662776f\r\n       DividendPrice = 0.05175264552f};\r\n     { Date = DateTime(1872,5,1)\r\n       Return = 0.004451415502f\r\n       DividendPrice = 0.05051480234f }]\r\n\r\nlet mlData = mlContext.Data.LoadFromEnumerable(predictors)\r\n\r\nlet modelFit =\r\n    let model =\r\n        EstimatorChain()\r\n            .Append(mlContext.Transforms.CopyColumns(\"Label\",\"Return\"))\r\n            .Append(mlContext.Transforms.Concatenate(\"Features\",\"DividendPrice\"))\r\n            .Append(mlContext.Regression.Trainers.Ols())\r\n    model.Fit(mlData)\r\n\r\n[<CLIMutable>]\r\ntype Prediction =\r\n    {\r\n        Predicted: single\r\n        Date: DateTime\r\n    }\r\n\r\nlet pred = modelFit.Transform(mlData)\r\nlet renamePipeline = mlContext.Transforms.CopyColumns(\"Predicted\",\"Score\")\r\nlet renamed = renamePipeline.Fit(pred).Transform(pred)\r\nmlContext.Data.CreateEnumerable<Prediction>(renamed,reuseRowObject=false)\r\n```\r\n\r\n### Output in .NET interactive:\r\n<html>\r\n<body>\r\n<!--StartFragment-->\r\n\r\nindex | Predicted | Date\r\n-- | -- | --\r\n0 | 0.022715298 | 1872-02-01 00:00:00Z\r\n1 | 0.021365488 | 1872-03-01 00:00:00Z\r\n2 | 0.019935748 | 1872-04-01 00:00:00Z\r\n3 | 0.018817322 | 1872-05-01 00:00:00Z\r\n\r\n<!--EndFragment-->\r\n</body>\r\n</html>\r\n\r\n### Output in Visual Studio:\r\n```\r\nSystem.ArgumentOutOfRangeException: Could not find  column 'Predicted@' (Parameter 'Schema')\r\n   at Microsoft.ML.Data.TypedCursorable`1..ctor(IHostEnvironment env, IDataView data, Boolean ignoreMissingColumns, InternalSchemaDefinition schemaDefn)\r\n   at Microsoft.ML.Data.TypedCursorable`1.Create(IHostEnvironment env, IDataView data, Boolean ignoreMissingColumns, SchemaDefinition schemaDefinition)\r\n   at Microsoft.ML.Data.CursoringUtils.AsCursorable[TRow](IHostEnvironment env, IDataView data, Boolean ignoreMissingColumns, SchemaDefinition schemaDefinition)\r\n   at Microsoft.ML.PipeEngine`1..ctor(IHostEnvironment env, IDataView pipe, Boolean ignoreMissingColumns, SchemaDefinition schemaDefinition)\r\n   at Microsoft.ML.DataOperationsCatalog.CreateEnumerable[TRow](IDataView data, Boolean reuseRowObject, Boolean ignoreMissingColumns, SchemaDefinition schemaDefinition)\r\n   at <StartupCode$FSI_0004>.$FSI_0004.main@() in C:\\test.fsx:line 52\r\nStopped due to error\r\n```\r\n\r\nHere is the schema\r\n```fsharp\r\n> renamed.Schema |> Seq.toArray\r\nval it: DataViewSchema.Column[] =\r\n  [|Date@: DateTime {Annotations = ;\r\n                     Index = 0;\r\n                     IsHidden = false;\r\n                     Name = \"Date@\";\r\n                     Type = DateTime;}; Return@: Single {Annotations = ;\r\n                                                         Index = 1;\r\n                                                         IsHidden = false;\r\n                                                         Name = \"Return@\";\r\n                                                         Type = Single;};\r\n    DividendPrice@: Single {Annotations = ;\r\n                            Index = 2;\r\n                            IsHidden = false;\r\n                            Name = \"DividendPrice@\";\r\n                            Type = Single;}; Date: DateTime {Annotations = ;\r\n                                                             Index = 3;\r\n                                                             IsHidden = false;\r\n                                                             Name = \"Date\";\r\n                                                             Type = DateTime;};\r\n    Return: Single {Annotations = ;\r\n                    Index = 4;\r\n                    IsHidden = false;\r\n                    Name = \"Return\";\r\n                    Type = Single;};\r\n    DividendPrice: Single {Annotations = ;\r\n                           Index = 5;\r\n                           IsHidden = false;\r\n                           Name = \"DividendPrice\";\r\n                           Type = Single;}; Label: Single {Annotations = ;\r\n                                                           Index = 6;\r\n                                                           IsHidden = false;\r\n                                                           Name = \"Label\";\r\n                                                           Type = Single;};\r\n    Features: Vector<Single, 1> {SlotNames} {Annotations = SlotNames;\r\n                                             Index = 7;\r\n                                             IsHidden = false;\r\n                                             Name = \"Features\";\r\n                                             Type = Vector<Single, 1>;};\r\n    Score: Single {ScoreColumnSetId, ScoreColumnKind, ScoreValueKind}\r\n      {Annotations = ScoreColumnSetId, ScoreColumnKind, ScoreValueKind;\r\n       Index = 8;\r\n       IsHidden = false;\r\n       Name = \"Score\";\r\n       Type = Single;};\r\n    Predicted: Single {ScoreColumnSetId, ScoreColumnKind, ScoreValueKind}\r\n      {Annotations = ScoreColumnSetId, ScoreColumnKind, ScoreValueKind;\r\n       Index = 9;\r\n       IsHidden = false;\r\n       Name = \"Predicted\";\r\n       Type = Single;}|]\r\n```\r\n\r\n**Expected behavior**\r\nI expect the code to work in fsharp interactive\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6353","RelatedDescription":"Open issue \"CreateEnumerable code fails in Visual Studio FSI but works in .NET Interactive notebook?\" (#6353)"},{"Id":"1389972336","IsPullRequest":true,"CreatedAt":"2022-10-05T05:29:59","Actor":"michaelgsharp","Number":"6343","RawContent":null,"Title":"testing pool change for PR","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/6343","RelatedDescription":"Closed or merged PR \"testing pool change for PR\" (#6343)"},{"Id":"1396886089","IsPullRequest":true,"CreatedAt":"2022-10-04T21:53:21","Actor":"ericstj","Number":"6350","RawContent":null,"Title":"Add CodeQL to build","State":"open","Body":"Refactor build variables to avoid duplication.\r\n\r\nEnable CodeQL on Windows_x64\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6350","RelatedDescription":"Open PR \"Add CodeQL to build\" (#6350)"},{"Id":"1388489286","IsPullRequest":true,"CreatedAt":"2022-10-04T21:02:09","Actor":"dakersnar","Number":"6340","RawContent":null,"Title":"Fix problems with DataFrame WriteCsv when quotes are present in data","State":"closed","Body":"Fixes #6238, continuation of https://github.com/dotnet/machinelearning/pull/6303\r\n\r\nThere were no issues with Load, but Writing back to CSV didn't properly escape quotation marks within the data, preventing the CSV from being correctly loaded again.","Url":"https://github.com/dotnet/machinelearning/pull/6340","RelatedDescription":"Closed or merged PR \"Fix problems with DataFrame WriteCsv when quotes are present in data\" (#6340)"},{"Id":"1389889685","IsPullRequest":true,"CreatedAt":"2022-10-03T19:53:59","Actor":"michaelgsharp","Number":"6342","RawContent":null,"Title":"mac os 12 fix","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/6342","RelatedDescription":"Closed or merged PR \"mac os 12 fix\" (#6342)"},{"Id":"1392564946","IsPullRequest":false,"CreatedAt":"2022-09-30T14:54:09","Actor":"lbitton93","Number":"6347","RawContent":null,"Title":"Precision loss When Reading in CSV data","State":"open","Body":"### Summary\r\nCSV fields not auto- reading In values correctly (losing precision)\r\n\r\n### Scenario\r\nI want to automatically read some Integer Id's into my dataframe. These integers are quite large and are losing precision.\r\n\r\n### Cause\r\nhttps://github.com/dotnet/machinelearning/blob/main/src/Microsoft.Data.Analysis/DataFrame.IO.cs\r\n***Method: GuessType()***\r\nWe don't make any attempt to read Int, Long or Double Types here. Hence the code-flow is truncating the long integers.\r\nI guess since this is primarily a ML framework, we favour floats, and therefore want to avoid the performance overhead of more complex type inference?\r\n\r\n### Suggestions\r\n**Numeric Preference**\r\nIt may be nice if the dev can specify a preferred numerical type to the Read_Csv method. i.e double, long, float, int. I suppose the disadvantage maybe unnecessary precision in some columns, however the default value could still be float. This would probably be the simplest change.\r\n\r\n**Enhance Dtypes Parameter**\r\nAlternatively it would be nice to modify the Dtypes[] parameter in Read_Csv to be a dictionary such that we can specify the particular type we want for a given column name. This will make it a little more robust. (I have customer data with the column names in different orders/ shifted in excel etc. It would be nicer to not have to rely on indexing). The disadvantage here is that we would have to check that column names exist etc.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6347","RelatedDescription":"Open issue \"Precision loss When Reading in CSV data\" (#6347)"},{"Id":"1391793672","IsPullRequest":false,"CreatedAt":"2022-09-30T04:09:22","Actor":"crazyoutlook","Number":"6346","RawContent":null,"Title":"Using Variables as parameters instead of constant in ML.NET","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: [e.g. Windows 10] - Windows 10\r\n - ML.NET Version: [e.g. ML.NET v1.5.5] - ML.Net 1.4\r\n - .NET Version: [e.g. .NET 5.0] - .Net 6.0\r\n\r\n**Describe the bug**\r\nA clear and concise description of what the bug is.\r\nI have some attribute value in code which is being used in ML.Net code. Ml.Net is accepting constants for these attributes. I need to use variables so that I can supply it at runtime.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\nHave attached source code. Below class is used in ML.Net - public class ImageInput, public class ImagePredictions\r\nAbove class is used to initialize ML.Net as below :\r\n //Initialize MLContext\r\n MLContext mlContext = new MLContext();\r\n //Load Data      \r\nList<ImageInput> emptyData = new List<ImageInput>();\r\nvar data = mlContext.Data.LoadFromEnumerable(emptyData);\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\nI should be able to use variables when initializing ML.Net\r\n\r\n**Screenshots, Code, Sample Projects**\r\nIf applicable, add screenshots, code snippets, or sample projects to help explain your problem.\r\nCode sample attached. \r\n\r\n public struct ImageSettings\r\n    {      \r\n        public const int imageHeight = 416;\r\n        public const int imageWidth = 416;\r\n    }\r\n\r\n    public class ImageInput\r\n    {\r\n        [ImageType(ImageSettings.imageHeight, ImageSettings.imageWidth)]\r\n        public Bitmap Image { get; set; }\r\n    }\r\n\r\n    public class ImagePredictions\r\n    {\r\n        [ColumnName(\"model_outputs0\")]\r\n        public float[] PredictedLabels { get; set; }\r\n    }\r\n\t\r\n\t\r\n\t //Initialize MLContext\r\n     MLContext mlContext = new MLContext();\r\n\r\n     //Load Data\r\n                \r\n\tList<ImageInput> emptyData = new List<ImageInput>();\r\n    var data = mlContext.Data.LoadFromEnumerable(emptyData);\r\n\t\r\n\t var pipeline = mlContext.Transforms.ResizeImages(resizing: ImageResizingEstimator.ResizingKind.Fill, outputColumnName: \"data\", imageWidth: ImageSettings.imageWidth, imageHeight: ImageSettings.imageHeight, inputColumnName: nameof(ImageInput.Image))\r\n             .Append(mlContext.Transforms.ExtractPixels(outputColumnName: \"data\", orderOfExtraction: ImagePixelExtractingEstimator.ColorsOrder.ARGB))\r\n             .Append(mlContext.Transforms.ApplyOnnxModel(modelFile: modeltoInfer.ModelPath, outputColumnName: \"model_outputs0\", inputColumnName: \"data\"));\r\n                            \r\n     var model = pipeline.Fit(data);\r\n     predictionEngine = mlContext.Model.CreatePredictionEngine<ImageInput, ImagePredictions>(model);\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6346","RelatedDescription":"Open issue \"Using Variables as parameters instead of constant in ML.NET\" (#6346)"},{"Id":"1386573881","IsPullRequest":true,"CreatedAt":"2022-09-29T20:56:38","Actor":"LittleLittleCloud","Number":"6338","RawContent":null,"Title":"Improve RegressionExpeirment using AutoMLExperiment","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\n- https://github.com/dotnet/machinelearning/issues/6145\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6338","RelatedDescription":"Closed or merged PR \"Improve RegressionExpeirment using AutoMLExperiment\" (#6338)"},{"Id":"1390801244","IsPullRequest":true,"CreatedAt":"2022-09-29T12:38:37","Actor":"rgesteve","Number":"6345","RawContent":null,"Title":"XGBoost integration infrastructure (still temporarily using Estimator rather than Trainer)","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\nStrictly this is independent of OneDAL (XGBoost and OneDAL are separate libraries), but adding to this feature branch for convenience.  This payload includes the PInvoke infrastructure to call XGBoost (version 1.5 and above... current version is 1.7).  It mimics the design of the LightGBM integration as much as possible.  Most notable difference is that it does not serialize to `InternalEnsembleTree`, but uses its own model (also it uses the JSON dump to build such a model, but that's an implementation detail).   The actual Estimator/Transformer pair is preliminary, as it looks more like a standard transformation than a learner (in that the Model is not an independent entity).  This most likely will need to change.","Url":"https://github.com/dotnet/machinelearning/pull/6345","RelatedDescription":"Open PR \"XGBoost integration infrastructure (still temporarily using Estimator rather than Trainer)\" (#6345)"},{"Id":"1389489761","IsPullRequest":false,"CreatedAt":"2022-09-29T09:26:57","Actor":"JJJWD","Number":"6341","RawContent":null,"Title":"Robust Scaling result is different in ML.NET compared to scikit-learn","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10 \r\n- **.NET Version (eg., dotnet --info)**:  .NET Framework 4.7.2\r\n- ML.NET v1.7.1\r\n- python v 3.8.10\r\n- scikit-learn v1.1.2\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI'm trying to convert my ML code in python using scikit-learn to C# using ML.NET\r\n- **What happened?**\r\nI noticed that the result with robust scaling in the pipeline using ML.NET did not match the results from python. The difference seems to be due to a different 'scale' value and the used function.\r\n- **What did you expect?**\r\nI have checked  the scale and offset of the data in EXCEL using the QUARTILE.INC() function and these results suggest that the values from python are correct. \r\nI've also derived from the [documentation ](https://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.transforms.normalizingtransformer.affinenormalizermodelparameters-1?view=ml-dotnet#properties) that ML.NET seems to use the `(input - offset) * scale` function to calculate the normalized value while the python code uses `(input - offset) \\ scale`\r\n\r\n- I would like to know why this result is so different and whether this is bug or not.\r\n\r\nBelow you can find an example code to demonstrate the difference\r\n### Source code C#\r\n```\r\nprivate class TestInput\r\n{\r\n\t[ColumnName(@\"Test\")]\r\n\tpublic float Test { get; set; }\r\n}\r\n\r\n[TestMethod]\r\npublic void NormalizedTest()\r\n{\r\n\tList<TestInput> testInputs = new List<TestInput>()\r\n\t{\r\n\t\tnew TestInput(){Test = 2.114265f },\r\n\t\tnew TestInput(){Test = 2.837738f },\r\n\t\tnew TestInput(){Test = 2.909677f },\r\n\t\tnew TestInput(){Test = 3.769787f },\r\n\t};\r\n\r\n\tvar mlContext = new MLContext();\r\n\tIDataView dataView = mlContext.Data.LoadFromEnumerable<TestInput>(testInputs);\r\n\r\n\t//normalize\r\n\tvar normalize = mlContext.Transforms.NormalizeRobustScaling(new[] {\r\n\t\t\tnew InputOutputColumnPair(@\"Test\", @\"Test\") });\r\n\tvar normalizeTransform = normalize.Fit(dataView);\r\n\tvar transformedData = normalizeTransform.Transform(dataView);\r\n\tvar affineParams = normalizeTransform.GetNormalizerModelParameters(0) as AffineNormalizerModelParameters<float>;\r\n\tvar offset = affineParams.Offset;\r\n\tvar scale = affineParams.Scale;\r\n\tConsole.WriteLine($\"Offset: {offset}\");\r\n\tConsole.WriteLine($\"Scale: {scale}\");\r\n\tList<TestInput> vals = mlContext.Data.CreateEnumerable<TestInput>(\r\n\ttransformedData, reuseRowObject: false).ToList();\r\n\tfor (int i = 0; i < vals.Count; i++) {\r\n\t\t//y = (x - ({ offset})) * { scale}\r\n\t\tConsole.WriteLine($\"{(testInputs[i].Test - offset) * scale} \\t  {vals[i].Test}\");\r\n\t}\r\n}\r\n```\r\n\r\n**Output**\r\n```\r\nOffset: 2.873708\r\nScale: 1.208078\r\n-0.917466 \t  -0.917466\r\n-0.04345396  \t  -0.04345396\r\n0.04345396 \t  0.04345396\r\n1.082534 \t  1.082534\r\n```\r\n\r\n### Source code python\r\n```\r\nimport numpy as np\r\nfrom sklearn.preprocessing import RobustScaler\r\n\r\nvals= [2.114265, 2.837738,2.909677,3.769787]\r\nX = np.array(vals)\r\nscaler = RobustScaler()\r\ny= scaler.fit_transform(X.reshape(-1, 1))\r\nprint(f'Offset {scaler.center_}')\r\nprint(f'Scale {scaler.scale_}')\r\n\r\nprint(y)\r\nfor val in vals:\r\n    print((val-scaler.center_)/scaler.scale_)\r\n```\r\n\r\n**Output**\r\n```\r\nOffset [2.8737075]\r\nScale [0.46783475]\r\n[[-1.62331357]\r\n [-0.07688505]\r\n [ 0.07688505]\r\n [ 1.9153761 ]]\r\n[-1.62331357]\r\n[-0.07688505]\r\n[0.07688505]\r\n[1.9153761]\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/6341","RelatedDescription":"Closed issue \"Robust Scaling result is different in ML.NET compared to scikit-learn\" (#6341)"},{"Id":"1389986371","IsPullRequest":false,"CreatedAt":"2022-09-28T21:54:02","Actor":"LittleLittleCloud","Number":"6344","RawContent":null,"Title":"Add LDRandom tuner","State":"open","Body":"LDRandom to generate sobol sequence, which can cover the search space more evenly than random tuner\r\n\r\nsee details: \r\nhttps://github.com/dotnet/machinelearning/pull/6339#discussion_r981827891","Url":"https://github.com/dotnet/machinelearning/issues/6344","RelatedDescription":"Open issue \"Add LDRandom tuner\" (#6344)"},{"Id":"1388401112","IsPullRequest":true,"CreatedAt":"2022-09-27T21:27:15","Actor":"LittleLittleCloud","Number":"6339","RawContent":null,"Title":"add smac tuner in AutoMLExperiment","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\nThis PR makes `Smac` as a public-avaliable sweeper.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6339","RelatedDescription":"Open PR \"add smac tuner in AutoMLExperiment\" (#6339)"},{"Id":"1384157125","IsPullRequest":false,"CreatedAt":"2022-09-23T18:20:32","Actor":"luisquintanilla","Number":"6337","RawContent":null,"Title":"LightGBM Tracking Issue","State":"open","Body":"Issue to track LightGBM related bugs / requests.\r\n\r\n## Upgrade version\r\n\r\n- [ ] #5447\r\n\r\n## Load LightGBM model\r\n\r\n- [ ] #6328\r\n- [ ] #6296\r\n\r\n## Retrain LightGBM model\r\n\r\n- [ ] #6328\r\n\r\n## Expose additional parameters / functionality\r\n\r\n- [ ] #1651\r\n  - PR closed providing monotonic support #2330\r\n- [ ] #1992\r\n- [ ] #1997\r\n\r\n## Bugs\r\n\r\n- [ ] #5549\r\n\r\n## Still relevant?\r\n\r\n#512\r\n\r\n## Related conversations\r\n\r\n#6065","Url":"https://github.com/dotnet/machinelearning/issues/6337","RelatedDescription":"Open issue \"LightGBM Tracking Issue\" (#6337)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-10-11T03:30:26.2271419Z","RunDurationInMilliseconds":597}