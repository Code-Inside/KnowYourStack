{"Data":{"GitHub":{"Issues":[{"Id":"634993255","IsPullRequest":true,"CreatedAt":"2020-06-08T23:13:21","Actor":"ttstanley","Number":"5216","RawContent":null,"Title":"U/tevin/code gen","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5216","RelatedDescription":"Open PR \"U/tevin/code gen\" (#5216)"},{"Id":"630336084","IsPullRequest":false,"CreatedAt":"2020-06-08T19:46:11","Actor":"wangyems","Number":"5203","RawContent":null,"Title":"ApplyOnnxModel() throw runtime error in an ongoing sample for onnx conversion","State":"closed","Body":"Can reproduce using https://github.com/dotnet/machinelearning/pull/5195/commits/0b1a59c95b281eedfd2bfb723b6b8e4e33182045\r\nThe related file is OnnxConversion.cs. \r\nJust curious why ML.NET model can make through but onnx model not.","Url":"https://github.com/dotnet/machinelearning/issues/5203","RelatedDescription":"Closed issue \"ApplyOnnxModel() throw runtime error in an ongoing sample for onnx conversion\" (#5203)"},{"Id":"629575172","IsPullRequest":true,"CreatedAt":"2020-06-08T19:24:59","Actor":"wangyems","Number":"5195","RawContent":null,"Title":"Add a sample for Onnx conversion","State":"closed","Body":"\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5195","RelatedDescription":"Closed or merged PR \"Add a sample for Onnx conversion\" (#5195)"},{"Id":"634796243","IsPullRequest":false,"CreatedAt":"2020-06-08T17:18:13","Actor":"LaurensVanAcker","Number":"5215","RawContent":null,"Title":"Train a Tensorflow model","State":"open","Body":"I designed (not trained) a siamese CNN network in Keras (python) and exported it as a SavedModel with the random weights.\r\n_Input = 4 dimensions (left/right image, height, width, RGB).\r\nOutput = change of images being equal (sigmoid)\r\n\r\nBut I don't understand how I can train this model from .NET Core?\r\n\r\nWhen I use:\r\n```csharp\r\nusing var tensorFlowModel = mlContext.Model.LoadTensorFlowModel(\"./model\");\r\nvar pipeline = tensorFlowModel.ScoreTensorFlowModel(\r\n new[] { inputComparer.Name },\r\n new[] { outputComparer.Name }, addBatchDimensionInput: true);\r\n```\r\n\r\nThen I potentially can get the output from the model, but it's untrained, so this makes no sense.\r\nSo I need a trainer. I tried with LbfgsLogisticRegression but then I get \"Schema mismatch for label column 'StatefulPartitionedCall': expected Boolean, got Vector<Single>\" which makes sense as the Tensorflow model don't output Booleans, but a Vector<Single>. Do I need another trainer?\r\n\r\nWhen I use the [ImageClassification](https://docs.microsoft.com/en-us/dotnet/machine-learning/tutorials/image-classification-api-transfer-learning) from this tutorial, I can only train one of the embedded networks from ImageClassificationTrainer.Architecture. It's a class output instead of binary, but that's OK. One class is also binary. But I want to train my own network.\r\n\r\n[This example](https://github.com/dotnet/machinelearning/blob/master/test/Microsoft.ML.Tests/ScenariosWithDirectInstantiation/TensorflowTests.cs) was the closest I could find.\r\n\r\nHow do I train my binary output Tensorflow siamese network?\r\n\r\nThe reason I want to train this network from .NET Core instead of Python is to test the speed improvements and rollout something independently of Python.","Url":"https://github.com/dotnet/machinelearning/issues/5215","RelatedDescription":"Open issue \"Train a Tensorflow model\" (#5215)"},{"Id":"634326757","IsPullRequest":false,"CreatedAt":"2020-06-08T08:00:35","Actor":"gagy3798","Number":"5214","RawContent":null,"Title":"System.InvalidOperationException: 'No valid training instances found, all instances have missing features.' ","State":"open","Body":"### System information\r\n\r\n- Windows Server 2016\r\n- .NET Version 3.1.300\r\n\r\n### Issue\r\nI'm trying to do MultiClass LbfgsMaximumEntropy Re-training\r\nWhen trying to Fit new data, I get System.InvalidOperationException: 'No valid training instances found, all instances have missing features.' on row\r\nITransformer _keyToValueModel1 = _mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(\"Label\", \"Features\")\r\n        .Fit(transformedData, originalModelParameters.Model);\r\n[data1.zip](https://github.com/dotnet/machinelearning/files/4744624/data1.zip)\r\n\r\n\r\nI would appreciate either help or MultiClass LbfgsMaximumEntropy Re-training code sample.\r\n\r\n### Source code / logs\r\n\r\n```c#\r\n[data1.zip](https://github.com/dotnet/machinelearning/files/4744619/data1.zip)\r\n[data2.zip](https://github.com/dotnet/machinelearning/files/4744620/data2.zip)\r\n\r\n\r\npublic class GitHubIssueClassification\r\n  {\r\n    static List<GitHubIssueTransformed> testDatas = new List<GitHubIssueTransformed>()\r\n    {\r\n      new GitHubIssueTransformed() {Area=\"11\", Title=\"WHIRLPOOL AWE 50610\", Description=\"\" },\r\n      new GitHubIssueTransformed() {Area=\"14\", Title=\"FAGOR 4CC-130 E X\", Description=\"\" },\r\n      new GitHubIssueTransformed() {Area=\"19\", Title=\"AEG T8DFE68SC\", Description=\"\" },\r\n      new GitHubIssueTransformed() {Area=\"999\", Title=\"TEST 999\", Description=\"\" }\r\n    };\r\n\r\n    private static string _appPath => Path.GetDirectoryName(Environment.GetCommandLineArgs()[0]);\r\n    private static string _mainDataPath1 => Path.Combine(_appPath, \"..\", \"..\", \"..\", \"Data\", \"data1.csv\");\r\n    private static string _mainDataPath2 => Path.Combine(_appPath, \"..\", \"..\", \"..\", \"Data\", \"data2.csv\");\r\n    private static string _mainDataPath3 => Path.Combine(_appPath, \"..\", \"..\", \"..\", \"Data\", \"data3.csv\");\r\n    private static string _modelPath => Path.Combine(_appPath, \"..\", \"..\", \"..\", \"Models\", \"trainedModel.zip\");\r\n    private static string _keyToValueModelPath => Path.Combine(_appPath, \"..\", \"..\", \"..\", \"Models\", \"keyToValueModel.zip\");\r\n\r\n    static DataOperationsCatalog.TrainTestData splittedData;\r\n\r\n    private static MLContext _mlContext;\r\n    private static PredictionEngine<GitHubIssueTransformed, IssuePrediction> _predEngine;\r\n    private static ITransformer _trainedModel { get; set; }\r\n    private static ITransformer _keyToValueModel { get; set; }\r\n    static IDataView _trainingDataView;\r\n    public static void Run()\r\n    {\r\n      _mlContext = new MLContext(seed: 0);\r\n\r\n      var allData = _mlContext.Data.LoadFromTextFile<GitHubIssue>(_mainDataPath1, hasHeader: true);\r\n      splittedData = _mlContext.Data.TrainTestSplit(allData, testFraction: 0.09);\r\n      _trainingDataView = splittedData.TrainSet;\r\n      Console.WriteLine($\"=============== Finished Loading Dataset  ===============\");\r\n\r\n      var pipeline = ProcessData();\r\n      var transformedData = BuildAndTrainModel(_trainingDataView, pipeline);\r\n      Evaluate(_trainingDataView.Schema, transformedData, splittedData.TestSet);\r\n      PredictIssue_FirstLoadModelFromDisk();\r\n\r\n      SecondLap(_mlContext);\r\n    }\r\n\r\n    public static IEstimator<ITransformer> ProcessData()\r\n    {\r\n      Console.WriteLine($\"=============== Processing Data ===============\");\r\n      var pipeline = _mlContext.Transforms.Conversion.MapValueToKey(inputColumnName: \"Area\", outputColumnName: \"Label\")\r\n                      .Append(_mlContext.Transforms.Text.FeaturizeText(inputColumnName: \"Title\", outputColumnName: \"TitleFeaturized\"))\r\n                      .Append(_mlContext.Transforms.Text.FeaturizeText(inputColumnName: \"Description\", outputColumnName: \"DescriptionFeaturized\"))\r\n                      .Append(_mlContext.Transforms.Concatenate(\"Features\", \"TitleFeaturized\", \"DescriptionFeaturized\"))\r\n                      .AppendCacheCheckpoint(_mlContext);\r\n\r\n      Console.WriteLine($\"=============== Finished Processing Data ===============\");\r\n\r\n      return pipeline;\r\n    }\r\n\r\n    public static IDataView BuildAndTrainModel(IDataView trainingDataView, IEstimator<ITransformer> pipeline)\r\n    {\r\n      //var trainingPipeline = pipeline.Append(_mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy/*.SdcaMaximumEntropy*/(\"Label\", \"Features\"))\r\n      //    .Append(_mlContext.Transforms.Conversion.MapKeyToValue(\"PredictedLabel\"));\r\n      var trainingPipeline = pipeline.Append(_mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy/*.SdcaMaximumEntropy*/(\"Label\", \"Features\"));\r\n      //var keyToValuePipeline = _mlContext.Transforms.Conversion.MapKeyToValue(\"PredictedLabel\");\r\n      var keyToValuePipeline = trainingPipeline.Append(_mlContext.Transforms.Conversion.MapKeyToValue(\"Area\", \"PredictedLabel\"));\r\n\r\n      Console.WriteLine($\"=============== Training the model  ===============\");\r\n\r\n      _trainedModel = trainingPipeline.Fit(trainingDataView);\r\n      var transformedData = _trainedModel.Transform(trainingDataView);\r\n      _keyToValueModel = keyToValuePipeline.Fit(transformedData);\r\n\r\n      _mlContext.Model.Save(_trainedModel, trainingDataView.Schema, _modelPath);\r\n      _mlContext.Model.Save(_keyToValueModel, transformedData.Schema, _keyToValueModelPath);\r\n\r\n      Console.WriteLine($\"=============== Finished Training the model Ending time: {DateTime.Now.ToString()} ===============\");\r\n\r\n      // (OPTIONAL) Try/test a single prediction with the \"just-trained model\" (Before saving the model)\r\n      Console.WriteLine($\"=============== Single Prediction just-trained-model ===============\");\r\n\r\n      _predEngine = _mlContext.Model.CreatePredictionEngine<GitHubIssueTransformed, IssuePrediction>(_keyToValueModel);\r\n      foreach (var testIssue in testDatas)\r\n      {\r\n        var prediction = _predEngine.Predict(testIssue);\r\n        if (prediction.Area.ToString() != testIssue.Area.ToString())\r\n          Console.ForegroundColor = ConsoleColor.Red;\r\n        else\r\n          Console.ForegroundColor = ConsoleColor.Blue;\r\n        Console.WriteLine($\"=============== Single Prediction just-trained-model - Result: {prediction.Area}/{testIssue.Area} {testIssue.Title} ===============\");\r\n      }\r\n      Console.ResetColor();      \r\n\r\n      return transformedData;\r\n    }\r\n\r\n    public static void Evaluate(DataViewSchema trainingDataViewSchema, IDataView transformedData, IDataView testDataView2 = null)\r\n    {\r\n      // STEP 5:  Evaluate the model in order to get the model's accuracy metrics\r\n      Console.WriteLine($\"=============== Evaluating to get model's accuracy metrics - Starting time: {DateTime.Now.ToString()} ===============\");\r\n\r\n      IDataView testDataView = testDataView2;\r\n\r\n      var testMetrics = _mlContext.MulticlassClassification.Evaluate(_trainedModel.Transform(testDataView));\r\n\r\n      Console.WriteLine($\"=============== Evaluating to get model's accuracy metrics - Ending time: {DateTime.Now.ToString()} ===============\");\r\n      Console.WriteLine($\"*************************************************************************************************************\");\r\n      Console.WriteLine($\"*       Metrics for Multi-class Classification model - Test Data     \");\r\n      Console.WriteLine($\"*------------------------------------------------------------------------------------------------------------\");\r\n      Console.WriteLine($\"*       MicroAccuracy:    {testMetrics.MicroAccuracy:0.###}\");\r\n      Console.WriteLine($\"*       MacroAccuracy:    {testMetrics.MacroAccuracy:0.###}\");\r\n      Console.WriteLine($\"*       LogLoss:          {testMetrics.LogLoss:#.###}\");\r\n      Console.WriteLine($\"*       LogLossReduction: {testMetrics.LogLossReduction:#.###}\");\r\n      Console.WriteLine($\"*************************************************************************************************************\");\r\n\r\n      SaveModelAsFile(_mlContext, trainingDataViewSchema, transformedData, _trainedModel, _keyToValueModel);\r\n    }\r\n\r\n    public static void PredictIssue_FirstLoadModelFromDisk()\r\n    {\r\n      //ITransformer loadedModel = _mlContext.Model.Load(_modelPath, out var modelInputSchema);\r\n      ITransformer loadedModel = _mlContext.Model.Load(_keyToValueModelPath, out var modelInputSchema);\r\n\r\n      foreach (var testIssue in testDatas)\r\n      {\r\n        _predEngine = _mlContext.Model.CreatePredictionEngine<GitHubIssueTransformed, IssuePrediction>(loadedModel);\r\n        var prediction = _predEngine.Predict(testIssue);\r\n        if (prediction.Area.ToString() != testIssue.Area.ToString())\r\n          Console.ForegroundColor = ConsoleColor.Red;\r\n        else\r\n          Console.ForegroundColor = ConsoleColor.Blue;\r\n        Console.WriteLine($\"=============== Single Prediction - Result: {prediction.Area}/{testIssue.Area} {testIssue.Title} ===============\");\r\n        Console.ResetColor();\r\n      }\r\n    }\r\n\r\n    private static void SaveModelAsFile(MLContext mlContext, DataViewSchema trainingDataViewSchema,\r\n      IDataView transformedData, ITransformer _trainedModel, ITransformer _keyToValueModel)\r\n    {\r\n      //mlContext.Model.Save(_trainedModel, trainingDataViewSchema, _modelPath);\r\n      //mlContext.Model.Save(_keyToValueModel, transformedData.Schema, _keyToValueModelPath);\r\n      Console.WriteLine(\"The model is saved to {0}\", _modelPath);\r\n    }\r\n\r\n    static void SecondLap(MLContext _mlContext)\r\n    {\r\n      var allData = _mlContext.Data.LoadFromTextFile<GitHubIssue>(_mainDataPath2, hasHeader: true);\r\n      splittedData = _mlContext.Data.TrainTestSplit(allData, testFraction: 0.09);\r\n      _trainingDataView = splittedData.TrainSet;\r\n\r\n      ITransformer dataPrepPipeline = _mlContext.Model.Load(_modelPath, out var dataPrepPipelineSchema);\r\n      var originalModelParameters = (dataPrepPipeline as TransformerChain<ITransformer>).LastTransformer as MulticlassPredictionTransformer<MaximumEntropyModelParameters>;      \r\n\r\n      int rowsCount = splittedData.TrainSet.Preview().RowView.Count();\r\n      //var transformedData = dataPrepPipeline.Transform(splittedData.TrainSet);\r\n      //var transformedData = _keyToValueModel.Transform(splittedData.TrainSet);\r\n      var transformedData = _trainedModel.Transform(splittedData.TrainSet);\r\n\r\n      ITransformer _keyToValueModel1 = _mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(\"Label\", \"Features\")\r\n        .Fit(transformedData, originalModelParameters.Model);\r\n    }\r\n  }\r\npublic class GitHubIssue\r\n  {\r\n    [LoadColumn(0)]\r\n    public string ID { get; set; }\r\n    [LoadColumn(1)]\r\n    public string Area { get; set; }\r\n    [LoadColumn(2)]\r\n    public string Title { get; set; }\r\n    [LoadColumn(3)]\r\n    public string Description { get; set; }\r\n  }\r\n\r\n  public class GitHubIssueTransformed: GitHubIssue\r\n  {\r\n    //[ColumnName(\"PredictedLabel\")]\r\n    //public string XX;\r\n  }\r\n\r\n  public class IssuePrediction\r\n  {\r\n    //[ColumnName(\"PredictedLabel\")]\r\n    public string Area;\r\n  }\r\n```\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5214","RelatedDescription":"Open issue \"System.InvalidOperationException: 'No valid training instances found, all instances have missing features.' \" (#5214)"},{"Id":"633229182","IsPullRequest":false,"CreatedAt":"2020-06-07T09:19:53","Actor":"DanBrook","Number":"5213","RawContent":null,"Title":"CoreDump on LoadTensorFlowModel ","State":"open","Body":"### System information\r\n\r\n- **Windows 10 pro/18362.836**:\r\n- **.NET 4.7.2**: \r\n\r\n### Issue\r\n\r\n- **Trying to load TensorFlow model tensorflow_inception_graph **\r\n- **Illegal error**\r\n- **model loading**\r\n\r\n### Source code / logs\r\n Microsoft.ML.Transforms.TensorFlowModel tensorFlowModel = mlContext.Model.LoadTensorFlowModel(_inceptionTensorFlowModel);\r\nError occures on this line from microsoft manual. I have managed to load the model on my laptop and it works properly. When I have tried to run the same progect on my PC I had this error. Please help me to figure out wat is wrong. The problem is not in the code, becouse the same code works fine on the other machine. I have tried different versions of all libreries, but nothing helped.\r\n\r\nPC Information:\r\n\r\nProcessor: Intel(R) Core i7 CPU Q740 1.73GHz 1.73GHz \r\nRAM: 6.00 Gb\r\nx64\r\n\r\n\"WpfApplication2.exe\" (CLR v4.0.30319: DefaultDomain). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_64\\mscorlib\\v4.0_4.0.0.0__b77a5c561934e089\\mscorlib.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: DefaultDomain). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\WpfApplication2.exe\". Symbols loaded.\r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\PresentationFramework\\v4.0_4.0.0.0__31bf3856ad364e35\\PresentationFramework.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\WindowsBase\\v4.0_4.0.0.0__31bf3856ad364e35\\WindowsBase.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.Core\\v4.0_4.0.0.0__b77a5c561934e089\\System.Core.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System\\v4.0_4.0.0.0__b77a5c561934e089\\System.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_64\\PresentationCore\\v4.0_4.0.0.0__31bf3856ad364e35\\PresentationCore.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.Xaml\\v4.0_4.0.0.0__b77a5c561934e089\\System.Xaml.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\Common7\\IDE\\Remote Debugger\\x64\\Runtime\\Microsoft.VisualStudio.Debugger.Runtime.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.Configuration\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\System.Configuration.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.Xml\\v4.0_4.0.0.0__b77a5c561934e089\\System.Xml.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.Drawing\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\System.Drawing.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.Windows.Forms\\v4.0_4.0.0.0__b77a5c561934e089\\System.Windows.Forms.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\WindowsFormsIntegration\\v4.0_4.0.0.0__31bf3856ad364e35\\WindowsFormsIntegration.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"c:\\program files (x86)\\microsoft visual studio\\2019\\community\\common7\\ide\\commonextensions\\microsoft\\xamldiagnostics\\Framework\\x64\\Microsoft.VisualStudio.DesignTools.WpfTap.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\Xceed.Wpf.Toolkit.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\Xceed.Wpf.AvalonDock.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.Runtime.Serialization\\v4.0_4.0.0.0__b77a5c561934e089\\System.Runtime.Serialization.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\SMDiagnostics\\v4.0_4.0.0.0__b77a5c561934e089\\SMDiagnostics.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.ServiceModel.Internals\\v4.0_4.0.0.0__31bf3856ad364e35\\System.ServiceModel.Internals.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\PresentationFramework.Aero2\\v4.0_4.0.0.0__31bf3856ad364e35\\PresentationFramework.Aero2.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\Microsoft.ML.Data.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\netstandard\\v4.0_2.0.0.0__cc7b13ffcd2ddd51\\netstandard.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\Microsoft.ML.Core.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.ValueTuple\\v4.0_4.0.0.0__cc7b13ffcd2ddd51\\System.ValueTuple.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_64\\System.Data\\v4.0_4.0.0.0__b77a5c561934e089\\System.Data.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.ServiceModel\\v4.0_4.0.0.0__b77a5c561934e089\\System.ServiceModel.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\PresentationFramework-SystemXml\\v4.0_4.0.0.0__b77a5c561934e089\\PresentationFramework-SystemXml.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\PresentationFramework-SystemData\\v4.0_4.0.0.0__b77a5c561934e089\\PresentationFramework-SystemData.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\UIAutomationTypes\\v4.0_4.0.0.0__31bf3856ad364e35\\UIAutomationTypes.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\UIAutomationProvider\\v4.0_4.0.0.0__31bf3856ad364e35\\UIAutomationProvider.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\Accessibility\\v4.0_4.0.0.0__b03f5f7f11d50a3a\\Accessibility.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\System.Numerics\\v4.0_4.0.0.0__b77a5c561934e089\\System.Numerics.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\WINDOWS\\Microsoft.Net\\assembly\\GAC_MSIL\\PresentationFramework-SystemCore\\v4.0_4.0.0.0__b77a5c561934e089\\PresentationFramework-SystemCore.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\Microsoft.ML.TensorFlow.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\v\\Desktop\\test\\WpfApplication2\\bin\\Debug\\Microsoft.ML.DataView.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\System.Collections.Immutable.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\Microsoft.ML.ImageAnalytics.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\Microsoft.ML.StandardTrainers.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\Newtonsoft.Json.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\System.Memory.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\TensorFlow.NET.dll\". \r\n\"WpfApplication2.exe\" (CLR v4.0.30319: WpfApplication2.exe). Loaded \"C:\\Users\\MyPC\\Desktop\\test\\WpfApplication2\\bin\\Debug\\Google.Protobuf.dll\". Symbols loaded.\r\nProgram \"[6780] WpfApplication2.exe\" exited with code -1073741795 (0xc000001d) 'Illegal Instruction'.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5213","RelatedDescription":"Open issue \"CoreDump on LoadTensorFlowModel \" (#5213)"},{"Id":"630685367","IsPullRequest":false,"CreatedAt":"2020-06-06T16:36:32","Actor":"Vya4ik003","Number":"5206","RawContent":null,"Title":"Fitting model with array","State":"closed","Body":"### System information\r\n\r\n- **OS Windows 7**:\r\n- **.NET Version 3.1.300**: \r\n\r\n### Issue\r\n\r\n- **What did you do?** - I try to fit pipeline with byte[ ] columns.\r\n- **What happened?** - I get \"System.ArgumentOutOfRangeException: \"Schema mismatch for feature column 'Features': expected Vector<Single>, got VarVector<Single> \"\".\r\n- **What did you expect?** - I expected my model fitting with non-float data. In general, I want to load some muscial files into a model. And I want to get some data from model in byte[ ] type.\r\n\r\n### Source code / logs\r\n\r\n```\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var mlContext = new MLContext();\r\n\r\n            var testData = new TestData { Values = new byte[] { 1, 2 }, PredictedLabel = new byte[] { 3 } };\r\n            var dataView = mlContext.Data.LoadFromEnumerable(new TestData[] { testData });\r\n            var pipeline = mlContext.Transforms\r\n                .CopyColumns(\"Label\", \"PredictedLabel\")\r\n                .Append(mlContext.Transforms.Concatenate(\"Features\", \"Values\"))\r\n                .Append(mlContext.Regression.Trainers.FastTree());\r\n\r\n            var model = pipeline.Fit(dataView);\r\n        }\r\n        class TestData\r\n        {\r\n            public byte[] Values;\r\n\r\n            public byte[] PredictedLabel;\r\n        }\r\n\r\n        class PredictedData\r\n        {\r\n            public byte[] PredictedLabel;\r\n        }\r\n    }\r\n```\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5206","RelatedDescription":"Closed issue \"Fitting model with array\" (#5206)"},{"Id":"631412436","IsPullRequest":true,"CreatedAt":"2020-06-05T08:29:05","Actor":"mengaims","Number":"5212","RawContent":null,"Title":"Filter anomalies according to boundaries under AnomalyAndMargin mode","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5212","RelatedDescription":"Open PR \"Filter anomalies according to boundaries under AnomalyAndMargin mode\" (#5212)"},{"Id":"631325524","IsPullRequest":false,"CreatedAt":"2020-06-05T05:35:47","Actor":"DFMERA","Number":"5211","RawContent":null,"Title":"MulticlassClassification.CrossValidate Arithmetic operation resulted in an overflow","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**:\r\nWindows 10 pro\r\n- **.NET Version (eg., dotnet --info)**: \r\n.Net Core 2.1.0\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI am creating a multiclass classification experiment and after de best model is selected and I try to evaluate de model but this method throws an exception\r\nvar testMetrics = mlContext.MulticlassClassification.CrossValidate(testDataViewWithBestScore, bestRun.Estimator, numberOfFolds: 5, labelColumnName: \"reservation_status\");            \r\n \r\n- **What happened?**\r\nThe mlContext.MulticlassClassification.CrossValidate throws an exception\r\n\r\n- **What did you expect?**\r\nTo recover the metrics of the model on test data\r\n\r\n### Source code / logs\r\n\r\nCODE\r\n\r\n\r\nvar tmpPath = GetAbsolutePath(TRAIN_DATA_FILEPATH);\r\n            IDataView trainingDataView = mlContext.Data.LoadFromTextFile<ModelInput>(\r\n                                            path: tmpPath,\r\n                                            hasHeader: true,\r\n                                            separatorChar: '\\t',\r\n                                            allowQuoting: true,\r\n                                            allowSparse: false);\r\n\r\n            IDataView testDataView = mlContext.Data.BootstrapSample(trainingDataView);\r\n\r\n// STEP 2: Run AutoML experiment\r\n            Console.WriteLine($\"Running AutoML Multiclass classification experiment for {ExperimentTime} seconds...\");\r\n            ExperimentResult<MulticlassClassificationMetrics> experimentResult = mlContext.Auto()\r\n                .CreateMulticlassClassificationExperiment(ExperimentTime)\r\n                .Execute(trainingDataView, labelColumnName: \"reservation_status\");\r\n\r\n            // STEP 3: Print metric from the best model\r\n            RunDetail<MulticlassClassificationMetrics> bestRun = experimentResult.BestRun;\r\n            Console.WriteLine($\"Total models produced: {experimentResult.RunDetails.Count()}\");\r\n            Console.WriteLine($\"Best model's trainer: {bestRun.TrainerName}\");\r\n            Console.WriteLine($\"Metrics of best model from validation data --\");\r\n            PrintMulticlassClassificationMetrics(bestRun.ValidationMetrics);\r\n\r\n            // STEP 4: Evaluate test data\r\n            IDataView testDataViewWithBestScore = bestRun.Model.Transform(testDataView);\r\n            var testMetrics = mlContext.MulticlassClassification.CrossValidate(testDataViewWithBestScore, bestRun.Estimator, numberOfFolds: 5, labelColumnName: \"reservation_status\");\r\n\r\nEXCEPTION\r\n\r\nUnhandled Exception: System.OverflowException: Arithmetic operation resulted in an overflow.\r\n   at Microsoft.ML.Data.VectorDataViewType.ComputeSize(ImmutableArray`1 dims)\r\n   at Microsoft.ML.Data.VectorDataViewType..ctor(PrimitiveDataViewType itemType, Int32[] dimensions)\r\n   at Microsoft.ML.Transforms.KeyToVectorMappingTransformer.Mapper..ctor(KeyToVectorMappingTransformer parent, DataViewSchema inputSchema)\r\n   at Microsoft.ML.Transforms.KeyToVectorMappingTransformer.MakeRowMapper(DataViewSchema schema)\r\n   at Microsoft.ML.Data.RowToRowTransformerBase.GetOutputSchema(DataViewSchema inputSchema)\r\n   at Microsoft.ML.Data.TrivialEstimator`1.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.Transforms.OneHotHashEncodingTransformer..ctor(HashingEstimator hash, IEstimator`1 keyToVector, IDataView input)\r\n   at Microsoft.ML.Transforms.OneHotHashEncodingEstimator.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.TrainCatalogBase.CrossValidateTrain(IDataView data, IEstimator`1 estimator, Int32 numFolds, String samplingKeyColumn, Nullable`1 seed)\r\n   at Microsoft.ML.MulticlassClassificationCatalog.CrossValidate(IDataView data, IEstimator`1 estimator, Int32 numberOfFolds, String labelColumnName, String samplingKeyColumnName, Nullable`1 seed)\r\n   at ConsoleAppML2ML.ConsoleApp.ModelBuilder.CreateExperiment() in C:\\repos\\Curso ML\\Bootcamp-Handytec\\Clasificacion_multiclase\\ConsoleAppML2\\ConsoleAppML2ML.ConsoleApp\\ModelBuilder.cs:line 77\r\n   at ConsoleAppML2ML.ConsoleApp.Program.Main(String[] args) in C:\\repos\\Curso ML\\Bootcamp-Handytec\\Clasificacion_multiclase\\ConsoleAppML2\\ConsoleAppML2ML.ConsoleApp\\Program.cs:line 20\r\n[HotelBookings.tsv.zip](https://github.com/dotnet/machinelearning/files/4734119/HotelBookings.tsv.zip)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5211","RelatedDescription":"Open issue \"MulticlassClassification.CrossValidate Arithmetic operation resulted in an overflow\" (#5211)"},{"Id":"631211457","IsPullRequest":false,"CreatedAt":"2020-06-04T23:36:42","Actor":"dasokolo","Number":"5210","RawContent":null,"Title":"File already exists error when loading LightGbmBinaryTrainer from MemoryStream","State":"open","Body":"### System information\r\nos version Windows (not sure)\r\n.net version 3.1.202\r\nmlnet version 1.3.1\r\n\r\n### Issue\r\nI am loading LightGbmBinaryTrainer from memory stream \r\n\r\n                ITransformer model = null;\r\n                using (MemoryStream ms = new MemoryStream(kv.Value))\r\n                {\r\n                    model = _mLContext.Model.Load(ms, out _inputSchema);\r\n                }\r\n\r\nNote, this code is executed in several threads in parallel over the same model. \r\n\r\nAnd I occasionally get the following exception: \r\n\r\nSystem.IO.IOException: The file 'D:\\SvcFab\\_App\\AIBuilder.Platform.Host_App157\\temp\\TLC_1CBA6C2E\\0' already exists. \r\n\r\nThis happens occasionally and I can't reliably reproduce this 100%. \r\n\r\n- **What did you expect?**\r\n1) I expected that no file operations are performed during loading from memory stream. My models are relatively small, but I can't guarantee that the filesystem is always available. I would appreciate to at least have some control over this behavior. \r\n\r\n2) But if file operations cannot be avoided, I expect to have no naming conflicts. \r\n\r\nSystem.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.IO.IOException: The file 'D:\\SvcFab\\_App\\AIBuilder.Platform.Host_App157\\temp\\TLC_1CBA6C2E\\0' already exists.\r\n   at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)\r\n   at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)\r\n   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share)\r\n   at System.IO.Compression.ZipFileExtensions.ExtractToFile(ZipArchiveEntry source, String destinationFileName, Boolean overwrite)\r\n   at Microsoft.ML.RepositoryReader.OpenEntryOrNull(String dir, String name)\r\n   at Microsoft.ML.ModelOperationsCatalog.Load(Stream stream, DataViewSchema& inputSchema)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5210","RelatedDescription":"Open issue \"File already exists error when loading LightGbmBinaryTrainer from MemoryStream\" (#5210)"},{"Id":"630938765","IsPullRequest":false,"CreatedAt":"2020-06-04T19:05:04","Actor":"Lucifer-Morning-Star","Number":"5208","RawContent":null,"Title":"Use the model designed by myself.","State":"closed","Body":"Hi\r\n\r\nI am new to ML, so this might seem like a stupid question, may be it is wrong, but when I learn the ML.NET, I found that all of the models or the way training data in ML.NET have been designed, or you should import it from tensorflow or OXXN.  However, is it possible use the model that the structure of the neural network is designed by myself which has the pooling layers , convolutional layers and so on, just like Tensorflow and Pytorch to trainging the model? Also, could I change the  loss function which designed by myself?","Url":"https://github.com/dotnet/machinelearning/issues/5208","RelatedDescription":"Closed issue \"Use the model designed by myself.\" (#5208)"},{"Id":"631072530","IsPullRequest":true,"CreatedAt":"2020-06-04T18:56:45","Actor":"michaelgsharp","Number":"5209","RawContent":null,"Title":"Removing featurizers now in ML.Net","State":"open","Body":"This PR depends on PR #5205. Once that is in all the featurizer functionality that belongs in ML.Net itself will have been added already. We can then remove these 3 standalone transformers as they are now duplicate functionality.","Url":"https://github.com/dotnet/machinelearning/pull/5209","RelatedDescription":"Open PR \"Removing featurizers now in ML.Net\" (#5209)"},{"Id":"630815095","IsPullRequest":false,"CreatedAt":"2020-06-04T13:18:42","Actor":"IvanAntipov","Number":"5207","RawContent":null,"Title":"Make Microsoft.ML more developer friendly","State":"open","Body":"Microsoft.ML team, thank you for you job, as I can see, Microsoft.ML is the main hope for dotnet in machine learning word.\r\n\r\nI would like to express my concern about the closeness of Microsoft.ML from developer side.\r\n\r\nEach time I try to dive in the  Microsoft.ML I have the same scenario:\r\n\r\n1. I manage to run some standard code from samples\r\n\r\n2. I fail when I try to tune or discover my solution\r\n  - A year ago it was imposibility to get phi/theta matrixes https://github.com/dotnet/machinelearning/issues/3092\r\n\r\n  - This time I run text classification task: FeaturizeText -> SdcaLogisticRegression\r\n    - I try to plot ROC curve but Microsoft.ML.Data.BinaryClassifierEvaluator.EvaluateWithPRCurve   is not available (not yiet available from public API)\r\n  \r\n    - I try to get Vocabulary from FeaturizeTextExstimator to perform some sort of PFI analysis, this data is not available too.\r\n\r\n3. I fight with this closeness several days, I'm losing this battle, I'm going back to use .py libraries\r\n\r\n\r\nMy opinion: **internal is always evil** if your can't leave inner imlementation of your class private/protected, if ohter classes of yout Library require asses this methods or properties, most likely this functionality must be available to consumers of your library.\r\n\r\nI undestand, that internal classes reduce the amount of API yout should support. Maybe it makes sense to move all internall classes to '.*.Internal' namespace, with convention, that classes from this namespaces should be used 'without guarantee of compatibility between versions' ","Url":"https://github.com/dotnet/machinelearning/issues/5207","RelatedDescription":"Open issue \"Make Microsoft.ML more developer friendly\" (#5207)"},{"Id":"630373972","IsPullRequest":true,"CreatedAt":"2020-06-03T22:27:35","Actor":"michaelgsharp","Number":"5205","RawContent":null,"Title":"Added in new MissingValueReplacing method.","State":"open","Body":"Adds in the missing values replacing method of `Mode`. Replaces missing values with the most frequent value in a column. In the case that multiple values have the same count, the first one encountered is the one that is returned.\r\n\r\nThis also moves a test helping method from OnnxConverstionTest.cs into the BaseTestBaseline class so that every test class can use it.","Url":"https://github.com/dotnet/machinelearning/pull/5205","RelatedDescription":"Open PR \"Added in new MissingValueReplacing method.\" (#5205)"},{"Id":"630343727","IsPullRequest":false,"CreatedAt":"2020-06-03T21:26:40","Actor":"luisquintanilla","Number":"5204","RawContent":null,"Title":"Records | C# 9 + F# Improved Interop","State":"open","Body":"At //Build 2020, plans for [records in C# 9](https://devblogs.microsoft.com/dotnet/welcome-to-c-9-0/#records) were announced. Referencing issue #180 which originally raised this question. While you can use records in F# to define the `DataViewSchema`,  once records support becomes available in C# 9, it could potentially be an opportunity to further improve the interop and experience with F#.","Url":"https://github.com/dotnet/machinelearning/issues/5204","RelatedDescription":"Open issue \"Records | C# 9 + F# Improved Interop\" (#5204)"},{"Id":"629466054","IsPullRequest":true,"CreatedAt":"2020-06-03T19:20:26","Actor":"michaelgsharp","Number":"5192","RawContent":null,"Title":"Fixed OnnxTransformer output column mapping.","State":"closed","Body":"Our OnnxTransformer has overrides that let you specify a subset of output columns, all the output columns, or let it figure it out from the onnx model. The issue was that if you manually specified either a subset of the columns, or all the columns, and did it in an order different then the onnx model, our transformer would not do the mapping correctly and it would try and access the wrong column. This usually resulted in an error that the types didn't match, but when types matched it just returned wrong data.\r\n\r\nThis PR fixes that issue by doing the correct mapping regardless of the order they are provided in.","Url":"https://github.com/dotnet/machinelearning/pull/5192","RelatedDescription":"Closed or merged PR \"Fixed OnnxTransformer output column mapping.\" (#5192)"},{"Id":"629601154","IsPullRequest":true,"CreatedAt":"2020-06-03T17:49:09","Actor":"harishsk","Number":"5197","RawContent":null,"Title":"Fixed version format of built packages","State":"closed","Body":"Since we are no longer using the pre-release tag, our package versions at the daily build have had an improper version string with two hyphens in a row. This PR fixes that issue. \r\nOur version format is not SemVer 2.0.0 compatible because according SemVer v2, the build metadata has to be separated by +. However this causes build warnings and attempting to fix the warnings causes the msbuild Pack task to not include build number in the package name. \r\nThat issue has to be resolved separately. ","Url":"https://github.com/dotnet/machinelearning/pull/5197","RelatedDescription":"Closed or merged PR \"Fixed version format of built packages\" (#5197)"},{"Id":"629871252","IsPullRequest":true,"CreatedAt":"2020-06-03T10:14:07","Actor":"guinao","Number":"5202","RawContent":null,"Title":"Add deseasonality in SrCnnEntireAnomalyDetect","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5202","RelatedDescription":"Open PR \"Add deseasonality in SrCnnEntireAnomalyDetect\" (#5202)"},{"Id":"629846689","IsPullRequest":true,"CreatedAt":"2020-06-03T09:55:33","Actor":"suxi-ms","Number":"5201","RawContent":null,"Title":"Suxi/update","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5201","RelatedDescription":"Closed or merged PR \"Suxi/update\" (#5201)"},{"Id":"628869856","IsPullRequest":true,"CreatedAt":"2020-06-03T09:53:03","Actor":"suxi-ms","Number":"5187","RawContent":null,"Title":"Add anomalyDeltaThreshold for RCA","State":"closed","Body":"Update Root Cause Analysis interface.\r\n\r\n\r\n\r\n- [ ] For root cause analysis interface, we added a new parameter called anomalyDeltaThreshold for users to choose. \r\n- [ ] It won't break existing interface if some users are using it.\r\n- [ ] Fixes #5188 .\r\n- [ ] Related PR #4925 \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5187","RelatedDescription":"Closed or merged PR \"Add anomalyDeltaThreshold for RCA\" (#5187)"},{"Id":"629796148","IsPullRequest":true,"CreatedAt":"2020-06-03T08:21:50","Actor":"guinao","Number":"5200","RawContent":null,"Title":"Add Seasonality Detection","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5200","RelatedDescription":"Open PR \"Add Seasonality Detection\" (#5200)"},{"Id":"629733250","IsPullRequest":false,"CreatedAt":"2020-06-03T06:37:30","Actor":"MahdiKarimipour","Number":"5199","RawContent":null,"Title":"Loading ML Model from a Stream","State":"open","Body":"Trying to load a ML model from a stream (having the model as an embedded resource in the project), I get the below exception at mlContext.Model.Load() line. \r\n\r\nSame code snippet works if I load the model using the absolute filepath for the model.\r\n\r\nPackage Version: 1.5\r\n\r\n`\"System.ArgumentException: Illegal characters in path. (Parameter 'path')\\r\\n   at System.IO.Path.GetFullPath(String path)\\r\\n   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options)\\r\\n   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share)\\r\\n   at System.IO.File.OpenRead(String path)\\r\\n   at Microsoft.ML.ModelOperationsCatalog.Load(String filePath, DataViewSchema& inputSchema)\\r\\n   at PassionFruit.ML.Engines.SentimentPrediction.CreatePredictionEngine()`\r\n\r\n\r\n                // Create new MLContext\r\n                MLContext mlContext = new MLContext();\r\n                string modelName = \"PassionFruit.ML.MLModel.zip\";\r\n                var assembly = Assembly.GetExecutingAssembly();\r\n\r\n                using (var stream = assembly.GetManifestResourceStream(modelName))\r\n                using (StreamReader reader = new StreamReader(stream))\r\n                {\r\n                    var modelStream = reader.ReadToEnd();\r\n                    ITransformer mlModel = mlContext.Model.Load(modelStream, out DataViewSchema inputSchema);\r\n                    var predEngine = mlContext.Model.CreatePredictionEngine<ModelInput, ModelOutput>(mlModel);\r\n                    return predEngine;\r\n                }\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/5199","RelatedDescription":"Open issue \"Loading ML Model from a Stream\" (#5199)"},{"Id":"629693692","IsPullRequest":true,"CreatedAt":"2020-06-03T05:02:07","Actor":"antoniovs1029","Number":"5198","RawContent":null,"Title":"Allow TextLoader to load empty float/double fields as NaN instead of 0","State":"open","Body":"Fixes #4132 by implementing a new option on TextLoader that will allow it to impute missing float/doubles as NaN instead of the default `0`.\r\nBuilds on #5154 ","Url":"https://github.com/dotnet/machinelearning/pull/5198","RelatedDescription":"Open PR \"Allow TextLoader to load empty float/double fields as NaN instead of 0\" (#5198)"},{"Id":"629599006","IsPullRequest":true,"CreatedAt":"2020-06-03T00:18:18","Actor":"frank-dong-ms","Number":"5196","RawContent":null,"Title":"upgrade tensorflow and tf.net version","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5196","RelatedDescription":"Open PR \"upgrade tensorflow and tf.net version\" (#5196)"},{"Id":"629554295","IsPullRequest":true,"CreatedAt":"2020-06-02T22:24:23","Actor":"ttstanley","Number":"5194","RawContent":null,"Title":"Updated Codegen to support ObjectDetection for ModelBuilder","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5194","RelatedDescription":"Open PR \"Updated Codegen to support ObjectDetection for ModelBuilder\" (#5194)"},{"Id":"628926763","IsPullRequest":true,"CreatedAt":"2020-06-02T21:45:35","Actor":"frank-dong-ms","Number":"5189","RawContent":null,"Title":"Issue 4047, improve error message give expected type","State":"closed","Body":"address https://github.com/dotnet/machinelearning/issues/4047\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5189","RelatedDescription":"Closed or merged PR \"Issue 4047, improve error message give expected type\" (#5189)"},{"Id":"629473390","IsPullRequest":false,"CreatedAt":"2020-06-02T19:56:05","Actor":"rjhornby2","Number":"5193","RawContent":null,"Title":"Error running experiment when specifying validationDataSet that contains a vector","State":"open","Body":"### System information\r\n\r\n- OS: Windows 10.0.18363\r\n- .NET Version 3.1.101\r\n\r\n### Issue\r\n\r\n- Running classification experiment with training/validation datasets the same, but containing:\r\n\r\n        [VectorType(10)]\r\n        public float[] d_hist{ get; set; }\r\n\r\n- Exception: Training data and validation data schemas do not match. Column 'd_hist' is of type Vector<Single, 10> in train data, and type Vector<Single, 10> in validation data. (Parameter 'validationData').\r\n- When not specifying the validation dataset I can build the model and validate manually after but cannot pass the validation dataset directly to the experiment.\r\n\r\n### Source code / logs\r\nSeems to be failing in UserInputValidation:\r\n\r\n```\r\nif (trainCol.Type != validCol.Value.Type)\r\n                {\r\n                    throw new ArgumentException($\"{schemaMismatchError} Column '{trainCol.Name}' is of type {trainCol.Type} in train data, and type \" +\r\n                        $\"{validCol.Value.Type} in validation data.\", nameof(validationData));\r\n                }\r\n```\r\n\r\nI wonder if the comparison should be:\r\n\r\n`trainCol.Type.Equals(validCol.Value.Type)`","Url":"https://github.com/dotnet/machinelearning/issues/5193","RelatedDescription":"Open issue \"Error running experiment when specifying validationDataSet that contains a vector\" (#5193)"},{"Id":"629137873","IsPullRequest":false,"CreatedAt":"2020-06-02T11:46:59","Actor":"MCPx","Number":"5191","RawContent":null,"Title":"Race condition with named model pool initialization.","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows\r\n- **.NET Version (eg., dotnet --info)**: .NET Core 3.1\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\n\r\nChanged my call to AddPredictionEnginePool in my ASP.net Core app to use a model name and updated my Predict function to load the named model.\r\n\r\n- **What happened?**\r\n\r\nCalling the API with more than one prediction request at once started causing the API to crash.\r\n\r\n- **What did you expect?**\r\n\r\nThe PredictionEnginePool should have been able to handle multiple requests at once, as it did with the default pool. Adding a call on API startup to get the prediction engine for that name and returning works as a workaround (or adding a lock around the Predict call), but should the named pools not be initialized on startup like the default pool is? Or provide the option to perform that initialization automatically or warn in the documentation that the named pools aren't thread safe on the first call.\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5191","RelatedDescription":"Open issue \"Race condition with named model pool initialization.\" (#5191)"},{"Id":"628972165","IsPullRequest":false,"CreatedAt":"2020-06-02T07:34:34","Actor":"pockiez","Number":"5190","RawContent":null,"Title":"Attempted to read or write protected memory. This is often an indication that other memory is corrupt","State":"open","Body":"### System information\r\n\r\n- Windows 10 10.0.18363.836\r\n- .NET Core 3.1\r\n- Microsoft.ML 1.5\r\n\r\n### Issue\r\n\r\n- How to fix this.\r\n\r\n![image](https://user-images.githubusercontent.com/11924335/83492875-22194d80-a4de-11ea-9d0d-4066d8a132b2.png)","Url":"https://github.com/dotnet/machinelearning/issues/5190","RelatedDescription":"Open issue \"Attempted to read or write protected memory. This is often an indication that other memory is corrupt\" (#5190)"},{"Id":"628878114","IsPullRequest":false,"CreatedAt":"2020-06-02T03:47:36","Actor":"suxi-ms","Number":"5188","RawContent":null,"Title":"Add  a threshold parameter for root cause analysis","State":"open","Body":"### Issue\r\n\r\n- **Users want a threshold to determin whether the selected is a root cause, so we add a new parameter in the interface. The default value is 0.95**\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5188","RelatedDescription":"Open issue \"Add  a threshold parameter for root cause analysis\" (#5188)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-06-09T05:30:35.4745728Z","RunDurationInMilliseconds":790}