{"Data":{"GitHub":{"Issues":[{"Id":"1772090172","IsPullRequest":true,"CreatedAt":"2023-06-23T20:15:36","Actor":"JakeRadMSFT","Number":"6744","RawContent":null,"Title":"Update build templates to handle feature branches","State":"open","Body":"Updating build templates to handle feature branches. ","Url":"https://github.com/dotnet/machinelearning/pull/6744","RelatedDescription":"Open PR \"Update build templates to handle feature branches\" (#6744)"},{"Id":"1772069793","IsPullRequest":true,"CreatedAt":"2023-06-23T20:03:35","Actor":"JakeRadMSFT","Number":"6743","RawContent":null,"Title":"(WIP) Update version to 4.0 for feature branch","State":"open","Body":"Please don't merge PR until I've updated build templates and PR Validation things","Url":"https://github.com/dotnet/machinelearning/pull/6743","RelatedDescription":"Open PR \"(WIP) Update version to 4.0 for feature branch\" (#6743)"},{"Id":"1770583638","IsPullRequest":true,"CreatedAt":"2023-06-23T09:25:08","Actor":"LittleLittleCloud","Number":"6742","RawContent":null,"Title":"stop shuffle rows in ITrainValidationDatasetManager","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\nShuffleRows transformer will drop non-cacheable columns, which causes [this issue](https://github.com/dotnet/machinelearning-modelbuilder/issues/2730)\r\n\r\nIn the meantime, user can always shuffle rows before sending dataset to AutoML. So in that aspect, shuffling rows in AutoML might not be necessary as well.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6742","RelatedDescription":"Closed or merged PR \"stop shuffle rows in ITrainValidationDatasetManager\" (#6742)"},{"Id":"1769302243","IsPullRequest":false,"CreatedAt":"2023-06-22T09:32:21","Actor":"Mike-CineonTraining","Number":"6741","RawContent":null,"Title":"Integration of ML.Net 2.0.1 into Unity 2022.3.2f1 causes \"DllNotFoundExeption: CpuMathNative\" error","State":"open","Body":"**System Information (please complete the following information):**\r\n - Windows 10 Home 22H2\r\n - ML.Net 2.0.1\r\n - .NET Standard 2.1 & .NET Framework (Set via Unity's \"Project Settings->Player->Api Compatibility Level\")\r\n\r\n**Describe the bug**\r\nWhen trying to call 'SentimentModel.Predict(sampleData)' Unity console produces \"DllNotFoundException: CpuMathNative <unknown assembly> error.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Install Unity 2022.3.2f1.\r\n2. Download the list of dll's in Appendix A (from attached zip or NuGet packages), and place in \"\\Assets\\Plugins\" of the Unity project.  A zip of the plugins is included in aforementioned Appendix.\r\n3. Create a \"sentiment model\" by working through the basic tutorial for ML.Net found [here](https://dotnet.microsoft.com/en-us/learn/ml-dotnet/get-started-tutorial/intro).\r\n4. Copy the \"SentimentModel.consumption.cs\" and \"SentimentModel.training.cs\" files (found under \"SentimentModel.mbconfig\" in the solution explorer) to the Unity project.\r\n5. Create a test script and call the sentiment model as per the instructions found in the \"Consume\" step of the models creation.  Please note, you will have to use a 'using' statement at the beginning of your test script, or explicitly use the namespace of the SentimentModel.  Snippet from my test project is in Appendix B.\r\n\r\n**Expected behaviour**\r\nThe model should provide either a '0' or a '1' to indicate whether the input text contained a negative or positive sentiment (respectively)\r\n\r\n**Actual behaviour**\r\n(In Editor)\r\nError occurs, citing \"DllNotFoundExceptionL CpuMathNative <unknown assembly>... \" - please see screenshot below for stack trace.\r\n\r\n(In standalone build)\r\nError occurs, contents are as follows:\r\n> WindowsPlayer \"[My Computer name]\" InvalidOperationException: Can't instantiate loadable class 'IDataTransform' with name 'ValueMappingTransformer'\r\n\r\n**Screenshots, Code, Sample Projects**\r\nError produced in Unity (pasting text might cause a parsing error, so screencapped instead)\r\n![MLNetError](https://github.com/dotnet/machinelearning/assets/104988222/4346950e-cecf-4bf6-96c0-660cef43cca3)\r\n\r\nImport settings (same for all DLL's)\r\n![Import1](https://github.com/dotnet/machinelearning/assets/104988222/dc331664-43c2-4e62-9ab9-9c40eeed79f8)\r\n![Import2](https://github.com/dotnet/machinelearning/assets/104988222/f6d53f15-1a4b-4912-b709-b68c6b740934)\r\n\r\n**Additional context**\r\nA similar error was reported previously for version 1.4 (issues #3919, #3764 and more).  However, despite building for x64 only, and setting the import settings for all the .DLL's as x64 only (unticking x86, see in second screenshot above) does not change the result.\r\nTrying all combos of \"API compatibility Level\" and \"Scripting Backend\" does not change the outcome.\r\n\r\nPublishing the C# project into single EXE with embedded model .zip is possible, but still wanting to explore Unity native option (no need for remote application calls).\r\n\r\nFull disclosure - my C# knowledge is self taught, and from a Unity perspective.  However I am trying to expand my understanding of the .NET ecosystem in general.  Apologies if I'm missing key fundamentals.\r\n\r\nP.S. Yes, I spelt SentimentModel with a capital 'O'.  I fat fingered it, and am living with it for now - please forgive me...\r\n\r\n**Appendix A:**\r\n[Plugins.zip](https://github.com/dotnet/machinelearning/files/11832242/Plugins.zip)\r\nMicrosoft.Bcl.AsyncInterfaces (2.0.1)\r\nMicrosoft.ML (2.0.1)\r\nMicrosoft.ML.Core (2.0.1)\r\nMicrosoft.ML.CpuMath (2.0.1)\r\nMicrosoft.ML.Data (2.0.1)\r\nMicrosoft.ML.DataView (2.0.1)\r\nMicrosoft.ML.KMeansClustering (2.0.1)\r\nMicrosoft.ML.PCA (2.0.1)\r\nMicrosoft.ML.StandardTrainers (2.0.1)\r\nMicrosoft.ML.Transforms (2.0.1)\r\nSystem.Collections.Immutable (7.0.0)\r\nSystem.Runtime.CompilerServices.Unsafe (7.0.0 Preview)\r\nSystem.Text.Encodings.Web (8.0.0 preview)\r\nSystem.Text.Json (8.0.0 preview)\r\nSystem.Threading.Channels (8.0.0 preview)\r\n\r\n**Appendix B:**\r\nSnippet of code used to call SentimentModel:\r\n```\r\nusing System.Collections;\r\nusing System.Collections.Generic;\r\nusing UnityEngine;\r\nusing MLCoreTest;\r\n\r\npublic class MLTest : MonoBehaviour\r\n{\r\n    [ContextMenu(\"Test the Model\")]\r\n    private void Test()\r\n    {\r\n        SentimentMOdel.ModelInput _model = new SentimentMOdel.ModelInput()\r\n        {\r\n            Col0 = \"I had a whale of a time\",\r\n        };\r\n\r\n        Debug.Log($\"{SentimentMOdel.Predict(_model).PredictedLabel}\");\r\n    }\r\n}\r\n```\r\n\r\nAny assistance is greatly appreciated.  If ML.Net just isn't usable with Unity (any version), any pointers for alternative solutions would be greatly appreciated.\r\n\r\nMany thanks,\r\n\r\nMichael\r\n\r\n[Edited 22/06/2023: Removing unnecessary code]","Url":"https://github.com/dotnet/machinelearning/issues/6741","RelatedDescription":"Open issue \"Integration of ML.Net 2.0.1 into Unity 2022.3.2f1 causes \"DllNotFoundExeption: CpuMathNative\" error\" (#6741)"},{"Id":"1764087230","IsPullRequest":true,"CreatedAt":"2023-06-21T17:33:27","Actor":"LittleLittleCloud","Number":"6738","RawContent":null,"Title":"smac - ignore fail trial during initialize","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\nfix #https://github.com/dotnet/machinelearning-modelbuilder/issues/2721\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6738","RelatedDescription":"Closed or merged PR \"smac - ignore fail trial during initialize\" (#6738)"},{"Id":"1767329532","IsPullRequest":false,"CreatedAt":"2023-06-21T10:59:35","Actor":"engilas","Number":"6740","RawContent":null,"Title":"Retrain existing model issue","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 10\r\n - ML.NET Version: ML.NET v2.0.1\r\n - .NET Version: .NET 7.0\r\n\r\n**Describe the bug**\r\nI have an existing model with about 500k weights.\r\nWhen I try to retrain it according to [this ](https://learn.microsoft.com/en-us/dotnet/machine-learning/how-to-guides/retrain-model-ml-net) tutorial, my new model has a vector of zero weights and makes the same prediction for any input data.\r\nI use only new records in for my retrain data, about 100 records. The original train data contains 100k records.\r\n\r\nWhat data should I pass to the Fit method while retraining? Should it contain only new data or the previous set + new data?\r\n\r\nTrainer: LbfgsLogisticRegressionBinaryTrainer\r\n\r\n**To Reproduce**\r\nI tried to reporoduce it using samples code from [here](https://github.com/dotnet/machinelearning/blob/main/docs/samples/Microsoft.ML.Samples/Dynamic/Trainers/BinaryClassification/LbfgsLogisticRegression.cs)\r\nI created a new small dataset using GenerateRandomDataPoints(10);\r\nThen I created another model using Fit(newSmallData, oldParameters)\r\nBehavior was the same.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6740","RelatedDescription":"Open issue \"Retrain existing model issue\" (#6740)"},{"Id":"1764198941","IsPullRequest":true,"CreatedAt":"2023-06-20T17:48:17","Actor":"michaelgsharp","Number":"6739","RawContent":null,"Title":"Fix OSX official build.","State":"closed","Body":"Fixes OSX official build.","Url":"https://github.com/dotnet/machinelearning/pull/6739","RelatedDescription":"Closed or merged PR \"Fix OSX official build.\" (#6739)"},{"Id":"1763144278","IsPullRequest":false,"CreatedAt":"2023-06-19T09:36:44","Actor":"sheldor173","Number":"6737","RawContent":null,"Title":"Segmentation Fault","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Linux 20.04.5 LTS (Focal Fossa)\r\n - Microsoft.ML Version: 3.0.0-preview.23266.6\r\n - Microsoft.ML.TimeSeries Version: 3.0.0-preview.23266.6\r\n - .NET Version: .NET 6.0\r\n\r\n**Describe the bug**\r\nThe C# application crashes giving a **segmentation fault (core dumped)** error. \r\nThe kernel logs show this thing, \"**motadata992 kernel: [2321935.184101] aiopsengine[1265920]: segfault at 10 ip 00007f00fb38143d sp 00007f014f4fc0a8 error 4 in libMklImports.so[7f00fa469000+5888000]**\".\r\n\r\n**To Reproduce**\r\nNo reproduce steps.\r\n\r\n**Expected behavior**\r\nThe C# application should run without crashing.\r\n\r\n**Screenshots, Code, Sample Projects**\r\n\r\n**Additional context**\r\nBelow is the Anomaly Detector Code which uses SR-CNN approach provided by ML-Net to detect anomalies.\r\n\r\n`using System.Text;\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.TimeSeries;\r\n\r\nnamespace ML.Tasks;\r\n\r\npublic class AnomalyDetector\r\n{\r\n    private readonly MLContext _mlContext;\r\n\r\n    public AnomalyDetector(MLContext mlContext)\r\n    {\r\n        _mlContext = mlContext;\r\n    }\r\n\r\n    public List<Prediction>? Predict(IDataView dataView, StringBuilder errors)\r\n    {\r\n        try\r\n        {\r\n            var period = Util.CalculatePeriodicity(_mlContext, dataView, nameof(Input.Value));\r\n\r\n            var configOptions = new SrCnnEntireAnomalyDetectorOptions\r\n            {\r\n                DetectMode = SrCnnDetectMode.AnomalyAndMargin,\r\n            };\r\n\r\n            if (period != Constants.NotAvailable)\r\n            {\r\n                configOptions.Period = period;\r\n            }\r\n\r\n            return _mlContext.Data.CreateEnumerable<Prediction>(\r\n                _mlContext.AnomalyDetection.DetectEntireAnomalyBySrCnn(dataView, nameof(Prediction.Output),\r\n                    nameof(Input.Value),\r\n                    options: configOptions), false).ToList();\r\n        }\r\n        catch (Exception e)\r\n        {\r\n            Bootstrap.Logger.Error(e);\r\n\r\n            errors.Append($\"error {e.Message} occurred while detecting anomalies, stack: {e.StackTrace}\");\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n    public class Prediction\r\n    {\r\n        public double[] Output { get; set; } = null!;\r\n    }\r\n\r\n    public class Input\r\n    {\r\n        public double Value { get; set; }\r\n    }\r\n}`","Url":"https://github.com/dotnet/machinelearning/issues/6737","RelatedDescription":"Open issue \"Segmentation Fault\" (#6737)"},{"Id":"1763017793","IsPullRequest":false,"CreatedAt":"2023-06-19T08:25:19","Actor":"ClaraGard","Number":"6736","RawContent":null,"Title":"How to get model builder's efficiency in my code","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: e.g. Windows 10\r\n - ML.NET Version: v2.0.1\r\n - .NET Version: .NET 6.0\r\n\r\n**Describe the bug**\r\nI am trying to make a regression model using autoML, when I am using the model builder it goes through a lot of models quickly (about 300 in 100 seconds) and when I am using an autoML experiment it tries about 10 models in 100 seconds, resulting in a much less efficient model and I would like to use autoML experiements to get several models automaticaly\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Load data.csv with Model2.cs\r\n2. use the pipeline I made\r\n3. It is slow and goes through 10 models, R² = 0.02\r\n4. Load the data with model builder\r\n5. create a regression model and train it\r\n6. it is fast and goes through 300 models R²=0.06\r\n\r\n**Additional context**\r\n[FirstMLProject.zip](https://github.com/dotnet/machinelearning/files/11785933/FirstMLProject.zip)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6736","RelatedDescription":"Open issue \"How to get model builder's efficiency in my code\" (#6736)"},{"Id":"1757714009","IsPullRequest":false,"CreatedAt":"2023-06-14T22:07:13","Actor":"luisquintanilla","Number":"6735","RawContent":null,"Title":"MaxSkipNgramLength hard-coded to 10","State":"open","Body":"When trying to produce N-Grams larger than 10, a message is thrown.\r\n\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/22342df7fb6d7e42e0d4089c137bf43e8dec7ee9/src/Microsoft.ML.Transforms/Text/NgramTransform.cs#L1043\r\n\r\nThis is because the `MaxSkipNgramLength` is hard-coded to 10\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/22342df7fb6d7e42e0d4089c137bf43e8dec7ee9/src/Microsoft.ML.Transforms/Text/NgramUtils.cs#L43\r\n\r\nIs there a reason why this is the case? Should this be another parameter that the user can set?","Url":"https://github.com/dotnet/machinelearning/issues/6735","RelatedDescription":"Open issue \"MaxSkipNgramLength hard-coded to 10\" (#6735)"},{"Id":"1757646832","IsPullRequest":true,"CreatedAt":"2023-06-14T21:04:21","Actor":"asmirnov82","Number":"6734","RawContent":null,"Title":"Fix incorrect DataFrame min max computation with NULL","State":"open","Body":"Fixes #6733 \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6734","RelatedDescription":"Open PR \"Fix incorrect DataFrame min max computation with NULL\" (#6734)"},{"Id":"1756972866","IsPullRequest":false,"CreatedAt":"2023-06-14T13:56:38","Actor":"asmirnov82","Number":"6733","RawContent":null,"Title":"DataFrame DateTime column Min and Max calculation doesn't support NULL","State":"open","Body":"Similar to #6659, but for Max(), Min() and Sum().\r\n\r\nNew Unit tests for Max and Min:\r\n\r\n```\r\n[Fact]\r\npublic void TestDateTimeComputations_MaxMin_WithNulls()\r\n{\r\n    var dateTimeColumn = new DateTimeDataFrameColumn(\"DateTime\", new DateTime?[]\r\n        {\r\n            null,\r\n            new DateTime(2022, 1, 1),\r\n            new DateTime(2020, 1, 1),\r\n            new DateTime(2023, 1, 1),\r\n            new DateTime(2021, 1, 1),\r\n            null\r\n        });\r\n\r\n         Assert.Equal(new DateTime(2020, 1, 1), dateTimeColumn.Min());\r\n         Assert.Equal(new DateTime(2023, 1, 1), dateTimeColumn.Max());\r\n}\r\n\r\n[Fact]\r\npublic void TestIntComputations_MaxMin_WithNulls()\r\n{\r\n    var column = new Int32DataFrameColumn(\"Int\", new int?[]\r\n        {\r\n            null,\r\n            2,\r\n            1,\r\n            4,\r\n            3,\r\n            null\r\n        });\r\n\r\n    Assert.Equal(1, column.Min());\r\n    Assert.Equal(4, column.Max());\r\n}\r\n```\r\nfail with Messages: \r\n\r\n_Assert.Equal() Failure\r\nExpected: 1\r\nActual:   0_\r\n\r\nand\r\n\r\n_Assert.Equal() Failure\r\nExpected: 2020-01-01T00:00:00.0000000\r\nActual:   0001-01-01T00:00:00.0000000_\r\n\r\nUnit Test:\r\n\r\n```\r\n[Fact]\r\npublic void TestComputations_MaxMin_OnEmptyColumn()\r\n{\r\n    var column = new Int32DataFrameColumn(\"Int\");\r\n\r\n    Assert.Null(column.Min());\r\n    Assert.Null(column.Max());\r\n}\r\n```\r\n\r\ncrashes with \r\n\r\n_System.ArgumentOutOfRangeException : Index was out of range. Must be non-negative and less than the size of the collection. (Parameter 'index')_\r\n\r\nNew Unit tests for Sum:\r\n\r\n```\r\n[Fact]\r\npublic void TestIntSum_OnColumnWithNullsOnly()\r\n{\r\n    var column = new Int32DataFrameColumn(\"Int\", new int?[] { null, null });\r\n    Assert.Null(column.Sum());\r\n}\r\n\r\n[Fact]\r\npublic void TestIntSum_OnEmptyColumn()\r\n{\r\n    var column = new Int32DataFrameColumn(\"Int\");\r\n    Assert.Null(column.Sum());\r\n}\r\n```\r\n\r\ncrashes with \r\n\r\n_System.ArgumentOutOfRangeException : Index was out of range. Must be non-negative and less than the size of the collection. (Parameter 'index')","Url":"https://github.com/dotnet/machinelearning/issues/6733","RelatedDescription":"Open issue \"DataFrame DateTime column Min and Max calculation doesn't support NULL\" (#6733)"},{"Id":"1756659500","IsPullRequest":false,"CreatedAt":"2023-06-14T11:19:34","Actor":"superichmann","Number":"6732","RawContent":null,"Title":"LossFunction Clarification Needed","State":"open","Body":"It is stated in the article that: \"_This is the average of a loss function **defined by the user**, computed over all the instances in the test set._\"\r\n\r\nCould you please clarify how exactly the user can define the Loss Function? for example to calculate RMSLE value.\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for learn.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: eb3d3648-6535-679e-73ba-e8d530cb5c4a\r\n* Version Independent ID: 29c2deb3-934e-d802-0232-44d5627b9243\r\n* Content: [RegressionMetrics.LossFunction Property (Microsoft.ML.Data)](https://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.data.regressionmetrics.lossfunction?view=ml-dotnet)\r\n* Content Source: [dotnet/xml/Microsoft.ML.Data/RegressionMetrics.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.Data/RegressionMetrics.xml)\r\n* Product: **dotnet-ml-api**\r\n* GitHub Login: @natke\r\n* Microsoft Alias: **nakersha**","Url":"https://github.com/dotnet/machinelearning/issues/6732","RelatedDescription":"Open issue \"LossFunction Clarification Needed\" (#6732)"},{"Id":"1755881176","IsPullRequest":false,"CreatedAt":"2023-06-14T01:31:26","Actor":"kennywangjin","Number":"6731","RawContent":null,"Title":"unknown feature with suffix listed in calculated PFI results","State":"open","Body":"I'm using AutoML cli to do ML and use generated c# projects to calculate PFI. However, the PFI results look strange. There are many unkonwn features with strange suffix listed in the results. \r\n\r\n![屏幕截图 2023-06-14 092429](https://github.com/dotnet/machinelearning/assets/3364218/2a367f95-b1b4-4c52-a79f-e8e2ab388eb2)\r\n\r\nAs the screenshot shows, there are many features like 'COMPONENT.Char.<?>|j|0\". But we just have \"COMPONENT\" feature.\r\nHow could I get a clean PFI list with only my raw features (no such suffix).\r\n\r\nOr is this an intended behavior? \r\n","Url":"https://github.com/dotnet/machinelearning/issues/6731","RelatedDescription":"Open issue \"unknown feature with suffix listed in calculated PFI results\" (#6731)"},{"Id":"1737061969","IsPullRequest":true,"CreatedAt":"2023-06-13T18:43:15","Actor":"michaelgsharp","Number":"6721","RawContent":null,"Title":"helix testing","State":"closed","Body":"Helix testing for correct LightGBM loading.","Url":"https://github.com/dotnet/machinelearning/pull/6721","RelatedDescription":"Closed or merged PR \"helix testing\" (#6721)"},{"Id":"1754618783","IsPullRequest":false,"CreatedAt":"2023-06-13T11:01:47","Actor":"thoron","Number":"6730","RawContent":null,"Title":"'Label' not found","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: ML.NET v2.0.1\r\n - .NET Version: NET 7\r\n\r\n**Describe the bug**\r\n\r\nAn error for missing Label in Schema when trying to load text (csv) without header row.\r\n\r\nRow example:\r\n```\r\n5;0.968795895576477;0.8838793039321899;1.0125187635421753;1.0380022525787354;1.003713607788086;0.8773788213729858;0.7508044838905334;0.7412265539169312;0.7468504905700684;0.7589845061302185;0.7755808234214783;0.7674760818481445;0.6741359829902649;0.6582905054092407;0.6679562926292419;0.6805443167686462;0.6613132357597351;0.48050951957702637;0.5232967138290405;0.5599182844161987;0.522437334060669;0.5111487507820129;0.5027106404304504\r\n```\r\n\r\n**To Reproduce**\r\n\r\n```csharp\r\nvar ctx = new MLContext(1);\r\nvar opts = new TextLoader.Options\r\n{\r\n    HasHeader = false,\r\n    Columns = new[]\r\n    {\r\n        new TextLoader.Column(\"Label\", DataKind.UInt32, 0),\r\n        new TextLoader.Column(\"Features\", DataKind.Single, 1, 29)\r\n    },\r\n    Separators = new[] {';'},\r\n};\r\nvar loader = ctx.Data.CreateTextLoader(opts);\r\nvar data = loader.Load(@\"C:\\test.csv\");\r\nvar trainValidationData = ctx.Data.TrainTestSplit(data, testFraction: 0.2);\r\nvar pipeline = ctx.Auto()\r\n    .Featurizer(data)\r\n    .Append(ctx.Transforms.Conversion.MapValueToKey(\"Label\"))\r\n    .Append(ctx.Auto().MultiClassification());\r\nvar xx = ctx.Auto()\r\n    .CreateExperiment()\r\n    .SetPipeline(pipeline)\r\n    .SetMulticlassClassificationMetric(MulticlassClassificationMetric.MacroAccuracy)\r\n    .SetTrainingTimeInSeconds(60)\r\n    .SetDataset(trainValidationData)\r\n    .Run();\r\n```\r\n\r\nRemoving `Featurizer` does not produce any different result, same error.\r\n```csharp\r\nvar pipeline = ctx.Transforms.Conversion.MapValueToKey(\"Label\")\r\n            .Append(ctx.Auto().MultiClassification());\r\n```\r\n\r\nGenerates error:\r\n\r\n```stacktrace\r\nSystem.AggregateException : One or more errors occurred. (label column 'Label' not found (Parameter 'schema'))\r\n  ----> System.ArgumentOutOfRangeException : label column 'Label' not found (Parameter 'schema')\r\nData:\r\n  ML_IsMarked: 1\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)\r\n   at Microsoft.ML.AutoML.AutoMLExperiment.Run()\r\n```\r\n\r\nLoaded data looks as expected:\r\n![image](https://github.com/dotnet/machinelearning/assets/1374642/595ee738-6423-408c-9dbb-9dad16858f6e)\r\n\r\n**Expected behavior**\r\n\r\nLoading schema for AutoML when Label has been specified.\r\n\r\nMight be due to missing header row and/or not using `InferColumns`. Schema looks fine on runtime manual inspection, am I missing something?","Url":"https://github.com/dotnet/machinelearning/issues/6730","RelatedDescription":"Open issue \"'Label' not found\" (#6730)"},{"Id":"1743032452","IsPullRequest":true,"CreatedAt":"2023-06-13T00:21:49","Actor":"jeffhandley","Number":"6722","RawContent":null,"Title":"[fabricbot] Do not add needs-further-triage to issues still marked as untriaged","State":"closed","Body":"Per suggestion from @ManickaP and logged in dotnet/fabricbot-config#76, if an issue is still marked as https://github.com/dotnet/machinelearning/labels/untriaged, we should not add the https://github.com/dotnet/machinelearning/labels/needs-further-triage label to it when an author replies to the https://github.com/dotnet/machinelearning/labels/needs-author-action label.","Url":"https://github.com/dotnet/machinelearning/pull/6722","RelatedDescription":"Closed or merged PR \"[fabricbot] Do not add needs-further-triage to issues still marked as untriaged\" (#6722)"},{"Id":"1753419819","IsPullRequest":false,"CreatedAt":"2023-06-12T19:22:58","Actor":"claudiaregio","Number":"6729","RawContent":null,"Title":"Data preview view column blocked","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n \r\n![image](https://github.com/dotnet/machinelearning/assets/19276747/b39cf29f-0140-45b2-b933-1e4383b5a0c1)\r\n\r\n\r\n\r\n**Describe the bug**\r\nPreviewing table while going through tutorial does not show columns properly/column header and values are not aligned + a small white box appears in top left when I scroll all the way to the right. \r\n\r\n![image](https://github.com/dotnet/machinelearning/assets/19276747/6aabfa8f-84dd-47a3-a7d3-c7d0628fd488) \r\n![image](https://github.com/dotnet/machinelearning/assets/19276747/840ce300-780d-4554-b129-fcb7ab3f6ab8)\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Following steps through this tutorial: https://dotnet.microsoft.com/en-us/learn/ml-dotnet/get-started-tutorial/data\r\n2. Go to \"Download and add data\" step\r\n3. Go to \"Add data\" section\r\n4. Data Preview section does not look like image \r\n\r\n**Expected behavior**\r\nA table where I can scroll and see the columns and values. \r\n\r\n**Additional context**\r\nI am able to see/things align properly when I expand the width of the VS window but I would expect the scroll of the data preview to work properly regardless of my VS window width ","Url":"https://github.com/dotnet/machinelearning/issues/6729","RelatedDescription":"Open issue \"Data preview view column blocked\" (#6729)"},{"Id":"1751118365","IsPullRequest":false,"CreatedAt":"2023-06-10T21:00:45","Actor":"torronen","Number":"6728","RawContent":null,"Title":"AutoML 2.0: Label column from training data in output schema","State":"open","Body":"Nightly build in use on .NET 7.0\r\n\r\nQ: Should AutoML 2.0 drop the original label to predict and sampling key column ?\r\n\r\n###\r\nI am using one of the apps from machinelearning-samples repo for AutoML2.0\r\n\r\nI set a column \"Person\" as sampling key. Then I set \"Result\" as the label to predict.\r\nAfter training the model and inspecting the output, I can see there are columns PredictedLabel and Resulted, as well as Person.\r\n\r\nI believe the Resulted and Person maybe should be dropped from output schema so users of the model will not be confused.\r\n\r\nShould it by done by AutoML? I do not know, but old version of AutoML dropped these colums","Url":"https://github.com/dotnet/machinelearning/issues/6728","RelatedDescription":"Open issue \"AutoML 2.0: Label column from training data in output schema\" (#6728)"},{"Id":"1745392822","IsPullRequest":false,"CreatedAt":"2023-06-07T08:55:32","Actor":"superichmann","Number":"6727","RawContent":null,"Title":"RMLSE Metric for Regression","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/issues/6727","RelatedDescription":"Open issue \"RMLSE Metric for Regression\" (#6727)"},{"Id":"1745388956","IsPullRequest":false,"CreatedAt":"2023-06-07T08:53:30","Actor":"superichmann","Number":"6726","RawContent":null,"Title":"Create Multivariate Forecasting Mechanism","State":"open","Body":"Currently ForecastBySsa is univariate and is capable of receiving one time series with only one column (value) and output predictions for this one column.\n\nIt would be great to have something that can receive multiple related time series (such as multiple stock prices across the same time) and as well it can recieve supplementery data columns that will also be incorporated into the prediction.\n\nthis way the predictions could be enriched by parallel time series and by other features.\n\nI would love to see the ColumnInformation class passed to this (same as current situation in regression)","Url":"https://github.com/dotnet/machinelearning/issues/6726","RelatedDescription":"Open issue \"Create Multivariate Forecasting Mechanism\" (#6726)"},{"Id":"1745378337","IsPullRequest":false,"CreatedAt":"2023-06-07T08:46:56","Actor":"superichmann","Number":"6725","RawContent":null,"Title":"AutoML Forecasting Experiment Programaticaly","State":"open","Body":"Create a way to call the same functionallity exposed through 'mlnet forecasting' with automl Experiment programable api.","Url":"https://github.com/dotnet/machinelearning/issues/6725","RelatedDescription":"Open issue \"AutoML Forecasting Experiment Programaticaly\" (#6725)"},{"Id":"1743771966","IsPullRequest":true,"CreatedAt":"2023-06-06T12:30:01","Actor":"asmirnov82","Number":"6724","RawContent":null,"Title":"Fix dataframe arithmetics for columns having several value buffers (column size is more than 2 Gb)","State":"open","Body":"Arithmetics for columns containg multiple buffers (actualy with size more than 2 Gb) was incorrect. Buffer number was not taken into account\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6724","RelatedDescription":"Open PR \"Fix dataframe arithmetics for columns having several value buffers (column size is more than 2 Gb)\" (#6724)"},{"Id":"1743742879","IsPullRequest":true,"CreatedAt":"2023-06-06T12:16:15","Actor":"asmirnov82","Number":"6723","RawContent":null,"Title":"Provide ability to filter dataframe column by null via ElementWise Methods","State":"open","Body":"Fixes #6110 \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6723","RelatedDescription":"Open PR \"Provide ability to filter dataframe column by null via ElementWise Methods\" (#6723)"},{"Id":"1735326522","IsPullRequest":false,"CreatedAt":"2023-06-02T20:14:20","Actor":"tcaivano","Number":"6718","RawContent":null,"Title":"System.ArgumentOutOfRangeException: 'Score column 'Score' not found (Parameter 'schema')'","State":"closed","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 10\r\n - ML.NET Version: ML.NET 2.0.1\r\n - .NET Version: .NET Framework 4.8.04084, .NET 7.0\r\n\r\n**Describe the bug**\r\nWhen calling `mlContext.BinaryClassification.Evaluate()` without the Score parameter, I get an exception: \r\n`System.ArgumentOutOfRangeException: 'Score column 'Score' not found (Parameter 'schema')'`\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n```\r\npublic class AuthEventTransform\r\n    {\r\n        [LoadColumn(0)]\r\n        public int TimeStamp { get; set; }\r\n        [LoadColumn(1)]\r\n        public string? SourceUser { get; set; }\r\n        [LoadColumn(2)]\r\n        public string? DestinationUser { get; set; }\r\n        [LoadColumn(3)]\r\n        public string? SourceComputer { get; set; }\r\n        [LoadColumn(4)]\r\n        public string? DestinationComputer { get; set; }\r\n        [LoadColumn(5)]\r\n        public string? LogonType { get; set; }\r\n        [LoadColumn(6)]\r\n        public bool AuthenticationOrientation { get; set; }\r\n        [LoadColumn(7)]\r\n        public bool IsSuccessful { get; set; }\r\n        [LoadColumn(8)]\r\n        public bool IsRedTeam { get; set; }\r\n}\r\n            MLContext mlContext = new MLContext();\r\n            IDataView trainingdata = mlContext.Data.LoadFromTextFile<AuthEventTransform>(truthFileLocation, hasHeader: false, separatorChar: ',');\r\n            IDataView testDataView = mlContext.Data.LoadFromTextFile<AuthEventTransform>(testFileLocation, hasHeader: false, separatorChar: ';');\r\n            var pipeline = mlContext.Transforms.Categorical.OneHotEncoding(new[] {\r\n                new InputOutputColumnPair(nameof(AuthEventTransform.SourceUser), nameof(AuthEventTransform.SourceUser)),\r\n                new InputOutputColumnPair(nameof(AuthEventTransform.DestinationUser), nameof(AuthEventTransform.DestinationUser)),\r\n                new InputOutputColumnPair(nameof(AuthEventTransform.SourceComputer), nameof(AuthEventTransform.SourceComputer)),\r\n                new InputOutputColumnPair(nameof(AuthEventTransform.DestinationComputer), nameof(AuthEventTransform.DestinationComputer)),\r\n                new InputOutputColumnPair(nameof(AuthEventTransform.LogonType), nameof(AuthEventTransform.LogonType)),\r\n                new InputOutputColumnPair(nameof(AuthEventTransform.AuthenticationOrientation), nameof(AuthEventTransform.AuthenticationOrientation)),\r\n                new InputOutputColumnPair(nameof(AuthEventTransform.IsSuccessful), nameof(AuthEventTransform.IsSuccessful))\r\n            });\r\n            pipeline.Append(mlContext.Transforms.Concatenate(\"Features\",\r\n                nameof(AuthEventTransform.SourceUser),\r\n                nameof(AuthEventTransform.DestinationUser),\r\n                nameof(AuthEventTransform.SourceComputer),\r\n                nameof(AuthEventTransform.DestinationComputer),\r\n                nameof(AuthEventTransform.LogonType),\r\n                nameof(AuthEventTransform.AuthenticationOrientation),\r\n                nameof(AuthEventTransform.IsSuccessful)));\r\n            pipeline.Append(mlContext.BinaryClassification.Trainers.FastTree(new FastTreeBinaryTrainer.Options() { NumberOfLeaves = 4, MinimumExampleCountPerLeaf = 20, NumberOfTrees = 4, MaximumBinCountPerFeature = 254, FeatureFraction = 1, LearningRate = 0.1, LabelColumnName = @\"IsRedTeam\", FeatureColumnName = @\"Features\" }));\r\n            pipeline.AppendCacheCheckpoint(mlContext);\r\n\r\n            ITransformer trainedModel = pipeline.Fit(trainingdata);\r\n\r\n\r\n            var predictions = trainedModel.Transform(testDataView);\r\n            var metrics = mlContext.BinaryClassification.Evaluate(predictions, \"IsRedTeam\");\r\n```\r\n\r\n\r\n**Expected behavior**\r\nScore is not required","Url":"https://github.com/dotnet/machinelearning/issues/6718","RelatedDescription":"Closed issue \"System.ArgumentOutOfRangeException: 'Score column 'Score' not found (Parameter 'schema')'\" (#6718)"},{"Id":"1736654260","IsPullRequest":false,"CreatedAt":"2023-06-01T16:09:48","Actor":"superichmann","Number":"6720","RawContent":null,"Title":"Clarifications Regarding ForeCastBySsa","State":"open","Body":"**Note:** This is not a direct feature request but some questions, feature requests can be derived from those. I am posting them here since it is the only place I know where actual experienced contributors will answer.\r\n\r\n1. How can I call the functionality of `mlnet forecasting` from a C# codefile (something like `RegressionExperiment` but for `ForeCastBySsa`).\r\n2. How can I pass several features (columns) to `ForeCastBySsa`? do I just put them in the `IDataView` when I call `Fit`? what do I specify in the `inputColumnName` parameter? _I have tried adding more columns to the IDataView but the results are exactly the same as without the new columns_\r\n3. How do I specify which columns are which type in the same manner we do in `ColumnInformation`? Categorical, etc.\r\n4. Where can I find detailed non scientific documentation on what is the functionality of each parameter in `ForeCastBySsa` and how is it actually affects the prediction. I have already searched the official documentation, All-Samples and the source code of TimeSeries class but couldn't find detailed data.\r\nThanks!\r\n\r\nAny help is appreciated :)","Url":"https://github.com/dotnet/machinelearning/issues/6720","RelatedDescription":"Open issue \"Clarifications Regarding ForeCastBySsa\" (#6720)"},{"Id":"1735905269","IsPullRequest":false,"CreatedAt":"2023-06-01T09:44:04","Actor":"LittleLittleCloud","Number":"6719","RawContent":null,"Title":"Bring HNSW for fast approximate nearest Neighbour search","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nLLM uses cosine-similarity to retrieve relevant corpus as memory. While `KNN` is most commonly used to get `k` similar items, it's time-consuming on high-dimension vectors.\r\n\r\n HNSW will be much efficient in finding approximate k nearest neighbor on high-dimension dataset. There's a csharp implementation we can probably leverage [HNSW](https://github.com/curiosity-ai/hnsw-sharp)\r\n\r\n**Describe the solution you'd like**\r\nA clear and concise description of what you want to happen.\r\n\r\n**Describe alternatives you've considered**\r\nA clear and concise description of any alternative solutions or features you've considered.\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6719","RelatedDescription":"Open issue \"Bring HNSW for fast approximate nearest Neighbour search\" (#6719)"},{"Id":"1733175296","IsPullRequest":false,"CreatedAt":"2023-05-30T23:56:43","Actor":"userr2232","Number":"6717","RawContent":null,"Title":"Constructor for Microsoft.Data.Analysis.DataFrame that takes Microsoft.Spark.Sql.DataFrame as param.","State":"open","Body":"It just would be nice to be able to switch between spark and the analysis package. I'm trying to do some plotting that I'm not sure how to do with spark.\r\n\r\nA constructor like:\r\n`public DataFrame(Microsoft.Spark.Sql.DataFrame dataframe)`\r\n\r\nor a static function like:\r\n`public DataFrame FromSparkDataFrame(Microsoft.Spark.Sql.DataFrame dataframe)`\r\n\r\n**Describe alternatives you've considered**\r\nI've been looking for ways to convert a spark DataFrame into a RecordBatch in order to be able to use the method FromRecordBatch, but hadn't found any relevant documentation either.\r\n\r\n**Additional context**\r\nI don't know if it's relevant, but I'm running my code on Synapse Analytics.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6717","RelatedDescription":"Open issue \"Constructor for Microsoft.Data.Analysis.DataFrame that takes Microsoft.Spark.Sql.DataFrame as param.\" (#6717)"},{"Id":"1731495398","IsPullRequest":false,"CreatedAt":"2023-05-30T04:43:56","Actor":"ETG77","Number":"6716","RawContent":null,"Title":"Microsoft.ML.Model.OnnxConverter- System.InvalidOperationException: 'Unsupported type: Microsoft.ML.Data.MLImage'","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Win 11 Enterprise\r\n - .NET Version: .NET 6.0\r\n - Microsoft.ML v3.0.0-preview.23266.6\r\n - Microsoft.ML.ImageAnalytics v3.0.0-preview.23266.6\r\n- Microsoft.ML.OnnxConverter v0.21.0-preview.23266.6\r\n\r\n**Describe the bug**\r\nMicrosoft.ML.Data.MLImage unsupported in Microsoft.ML.Model.OnnxConverter.OnnxUtils.ConvertToTensorProtoType(Type rawType)\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Generate an (Object Detection) ML.NET model using VS Modelbuilder (Local GPU)\r\n2. Run mlContext.Model.ConvertToOnnx(loadedModel, inputData, stream);\r\n3. OnnxConverter will throw the following error \r\nMessage=Unsupported type: Microsoft.ML.Data.MLImage\r\n  Source=Microsoft.ML.OnnxConverter\r\n  StackTrace:\r\n   at Microsoft.ML.Model.OnnxConverter.OnnxUtils.ConvertToTensorProtoType(Type rawType)\r\n\r\n**Expected behavior**\r\nGenerate an ONNX model from a .MLNET model\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6716","RelatedDescription":"Open issue \"Microsoft.ML.Model.OnnxConverter- System.InvalidOperationException: 'Unsupported type: Microsoft.ML.Data.MLImage'\" (#6716)"},{"Id":"1730588298","IsPullRequest":false,"CreatedAt":"2023-05-29T11:20:03","Actor":"asmirnov82","Number":"6715","RawContent":null,"Title":"DataFrame GetMutableBuffer method and ReadOnlyBuffer issues","State":"open","Body":"As it was mentioned in #6642 DataFrame has a lot of boilerplate code like:\r\n\r\n```\r\nDataFrameBuffer<TResult> resultMutableBuffer = DataFrameBuffer<TResult>.GetMutableBuffer(resultBuffer);\r\nresultContainer.Buffers[b] = resultMutableBuffer;\r\nSpan<TResult> resultSpan = resultMutableBuffer.Span;\r\nDataFrameBuffer<byte> resultMutableNullBitMapBuffer = DataFrameBuffer<byte>.GetMutableBuffer(resultContainer.NullBitMapBuffers[b]);\r\nresultContainer.NullBitMapBuffers[b] = resultMutableNullBitMapBuffer;\r\nSpan<byte> resultNullBitMapSpan = resultMutableNullBitMapBuffer.Span;\r\n```\r\n\r\nIt looks like it's used for working with readonly memory, when dataframe column is created from the Apache Arrow RecordBatch in\r\n\r\n`public static DataFrame FromArrowRecordBatch(RecordBatch recordBatch)`\r\n\r\nIt's also used in constructor of PrimitiveDataFrameColumn:\r\n\r\n`public PrimitiveDataFrameColumn(string name, ReadOnlyMemory<byte> buffer, ReadOnlyMemory<byte> nullBitMap, int length = 0, int nullCount = 0) `\r\n\r\nwhich I think shouldn't be public, as it highly depends on internal implementation of PrimitiveColumn.\r\n\r\nThere is an issue with FromArrowRecordBatch factory method:\r\n\r\nRecordBatch is a disposable object. Apache Arrow by default uses NativeMemoryAllocator to allocate unmanaged memory (for example, this default allocator is used in Spark.Net to create RecorBatch and pass it to DataFrame.FromArrowRecordBatch factory method).\r\nSo it's up to a DataFrame to hold the link to the RecordBatch and correctly Dispose it. Or it has to copy the unmanaged readonly memory from the RecordBatch into managed buffers (that exactly what is happening in GetMutableBuffer on attempt to edit data), but in this case we can avoid using ReadOnlyBuffers at all or at least limit it usage to ReadOnlyDataFrame class.\r\n\r\nThe suggestion is:\r\n1) Avoid using GetMutableBuffer and ReadOnlyBuffers in the DataFrame, copy memory from Apache Arrow Record Batch on DataFrame creation (anyway we have to do on any attempt to edit DataFrame)\r\n2) Introduce ReadOnlyDataFrame with limit set of operation (only readonly like Sort, GroupBy, Filter and etc and other with inPlace set to false). ReadOnlyDataFrame will also implement ML.IDataView. So it will be the way to create ReadOnlyDataFrame from Apache Arrow RecordsBatch without copy operation and use it in ML .Net\r\n3) Make ReadOnlyDataFrameBuffer to implement IDisposable interface. For example, similar to Apache ArrowBuffer:\r\n\r\n```\r\npublic readonly partial struct ArrowBuffer : IEquatable<ArrowBuffer>, IDisposable\r\n{\r\n    private readonly IMemoryOwner<byte> _memoryOwner;\r\n    private readonly ReadOnlyMemory<byte> _memory;\r\n\r\n    public static ArrowBuffer Empty => new ArrowBuffer(Memory<byte>.Empty);\r\n\r\n    public ArrowBuffer(ReadOnlyMemory<byte> data)\r\n    {\r\n        _memoryOwner = null;\r\n        _memory = data;\r\n    }\r\n\r\n    internal ArrowBuffer(IMemoryOwner<byte> memoryOwner)\r\n    {\r\n        // When wrapping an IMemoryOwner, don't cache the Memory<byte>\r\n        // since the owner may be disposed, and the cached Memory would\r\n        // be invalid.\r\n\r\n        _memoryOwner = memoryOwner;\r\n        _memory = Memory<byte>.Empty;\r\n    }\r\n\r\n    public ReadOnlyMemory<byte> Memory =>\r\n        _memoryOwner != null ? _memoryOwner.Memory : _memory;\r\n...\r\n\r\npublic void Dispose()\r\n{\r\n    _memoryOwner?.Dispose();\r\n}\r\n```\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6715","RelatedDescription":"Open issue \"DataFrame GetMutableBuffer method and ReadOnlyBuffer issues\" (#6715)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-06-27T03:30:21.3060759Z","RunDurationInMilliseconds":550}