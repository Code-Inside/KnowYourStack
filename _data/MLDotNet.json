{"Data":{"GitHub":{"Issues":[{"Id":"2115668516","IsPullRequest":false,"CreatedAt":"2024-02-02T19:55:44","Actor":"ericstj","Number":"6984","RawContent":null,"Title":"Improve Microsoft.ML.Tokenizers and drive complete 1.0 API","State":"open","Body":"**Goal**: Enable .NET developers to use tokenizers in their data pre-processing pipelines as part of their embedding and token generation tasks using language models. \r\n\r\n- [ ] Add support for more commonly used Tokenizers\r\n  - [ ] TikToken https://github.com/dotnet/machinelearning/pull/6981\r\n  - [ ] WordPiece\r\n  - [ ] SentencePiece\r\n  - [ ] WordLevel\r\n  - [ ] Unigram\r\n  - [ ] Bert\r\n- [ ] Measure and improve performance of Tokenizers API - making breaking changes where necessary. (https://github.com/dotnet/machinelearning/issues/6982)\r\n- [ ] Explore existing construction patterns to improve usability - both in factory API and load from configuration.\r\n- [ ] Drive adoption of Microsoft.ML.Tokenizers in other libraries","Url":"https://github.com/dotnet/machinelearning/issues/6984","RelatedDescription":"Open issue \"Improve Microsoft.ML.Tokenizers and drive complete 1.0 API\" (#6984)"},{"Id":"2115620232","IsPullRequest":true,"CreatedAt":"2024-02-02T19:26:18","Actor":"dotnet-policy-service[bot]","Number":"6983","RawContent":null,"Title":"FabricBot: Onboarding to GitOps.ResourceManagement because of FabricBot decommissioning","State":"open","Body":"Add prIssueManagement.yml to onboard repo to GitOps.ResourceManagement as FabricBot replacement\n\n Details on the replacement service and the syntax of the new yaml configuration file is available publicly at: https://microsoft.github.io/GitOps/policies/resource-management.html\n\nPlease review and merge this PR to complete the process of onboarding to the new service.","Url":"https://github.com/dotnet/machinelearning/pull/6983","RelatedDescription":"Open PR \"FabricBot: Onboarding to GitOps.ResourceManagement because of FabricBot decommissioning\" (#6983)"},{"Id":"2113707765","IsPullRequest":false,"CreatedAt":"2024-02-01T23:28:41","Actor":"tarekgh","Number":"6982","RawContent":null,"Title":"Track Tokenizers design feedback","State":"open","Body":"This issue to track investigating and address the feedback we got regarding the tokenizers design \r\n\r\n### @stephentoub Feedback\r\nIf we’re able to make such breaking changes, we should also be reconsidering other aspects of the library then I think, in particular for perf, for example:\r\n\r\n- Token is class, which means allocation per token, plus the design effectively forces the string Value of the Token to be materialized even if it’s never used.\r\n- I don’t see any way to get just a token count without materializing the list of tokens, even though just the count is a commonly needed thing in these scenarios. Presumably such an API could get away with a lot less overhead / allocation.\r\n- Should there be support for spans baked in?","Url":"https://github.com/dotnet/machinelearning/issues/6982","RelatedDescription":"Open issue \"Track Tokenizers design feedback\" (#6982)"},{"Id":"2113590117","IsPullRequest":true,"CreatedAt":"2024-02-01T22:07:53","Actor":"tarekgh","Number":"6981","RawContent":null,"Title":"Introducing Tiktoken Tokenizer","State":"open","Body":"This modification introduces support for the Tiktoken tokenizer into the Microsoft ML tokenizers library. The logic is largely derived from the Microsoft Tokenizers Library, and the update includes optimizations and adjustments to the public APIs. Further refinements for the APIs are pending and are being tracked through issue #6982.\r\n\r\n#### Usage \r\n\r\n```C#\r\nTokenizer tokenizer = await Tokenizer.CreateByModelNameAsync(\"gpt-4\");\r\n\r\n    // Encoding to Ids\r\n    string text = \"Hello World\";\r\n    IReadOnlyList<int> encoded = tokenizer.EncodeToIds(text);\r\n    Assert.Equal(new List<int>() { 9906, 4435 }, encoded);\r\n    Assert.Equal(text, tokenizer. Decode(encoded)!);\r\n\r\n    // Full encoding to tokens, Ids, and offsets\r\n    TokenizerResult result = tokenizer.Encode(text);\r\n    Assert.Equal(new List<int>() { 9906, 4435 }, result.Ids);\r\n    Assert.Equal(new string[] { \"Hello\", \" World\" }, result.Tokens);\r\n    Assert.Equal(new List<(int, int)> { (0, 5), (5, 11) }, result.Offsets);\r\n```\r\n\r\n#### APIs changes\r\n\r\n```diff\r\n\r\nnamespace Microsoft.ML.Tokenizers\r\n{\r\n    public class Tokenizer\r\n    {\r\n+        /// <summary>\r\n+        /// Encodes input text to object has the tokens list, tokens Ids, tokens offset mapping.\r\n+        /// </summary>\r\n+        /// <param name=\"sequence\">The text to tokenize.</param>\r\n+        /// <param name=\"skipSpecialTokens\">Indicate if want to skip the special tokens during the encoding.</param>\r\n+        /// <returns>The tokenization result includes the tokens list, tokens Ids, tokens offset mapping.</returns>\r\n+        public TokenizerResult Encode(string sequence, bool skipSpecialTokens); // overload adding skipSpecialTokens parameter.\r\n\r\n+        /// <summary>\r\n+        /// Encodes input text to tokens Ids.\r\n+        /// </summary>\r\n+        /// <param name=\"sequence\">The text to tokenize.</param>\r\n+        /// <param name=\"skipSpecialTokens\">Indicate if want to skip the special tokens during the encoding.</param>\r\n+        /// <returns>The tokenization result includes the tokens list, tokens Ids, tokens offset mapping.</returns>\r\n+        public IReadOnlyList<int> EncodeToIds(string sequence, bool skipSpecialTokens = false);\r\n\r\n+        /// <summary>\r\n+        /// Create tokenizer based on model name\r\n+        /// </summary>\r\n+        /// <param name=\"modelName\">Model name</param>\r\n+        /// <param name=\"extraSpecialTokens\">Extra special tokens other than the built-in ones for the model</param>\r\n+        /// <param name=\"normalizer\">To normalize the text before tokenization</param>\r\n+        /// <returns>The tokenizer</returns>\r\n+        public static async Task<Tokenizer> CreateByModelNameAsync(\r\n+                                                string modelName,\r\n+                                                IReadOnlyDictionary<string, int>? extraSpecialTokens = null,\r\n+                                                Normalizer? normalizer = null)\r\n    }\r\n\r\n-    public class Split : IEquatable<Split>\r\n+    public readonly struct Split : IEquatable<Split>\r\n     {\r\n-        public Split(string token, (int Index, int End) offset)\r\n+        public Split(string token, (int Index, int End) offset, bool isSpecialToken = false)\r\n\r\n+        /// <summary>\r\n+        /// Gets if the current Split is a special token.\r\n+        /// </summary>\r\n+        public bool IsSpecialToken { get; }\r\n    }\r\n\r\n    public abstract class PreTokenizer\r\n    {\r\n+        // Primarily focused on optimizing to minimize memory allocations and enable the enumeration of one item at a time,\r\n+        // rather than holding a large list in a collection.\r\n+        // This change will reflect in all public classes which implementing this interface.\r\n-        public abstract IReadOnlyLIst<Split> PreTokenize(string sentence);\r\n+        public abstract IEnumerable<Split> PreTokenize(string sentence, bool skipSpecialTokens = false);\r\n    }\r\n\r\n    public sealed class TokenizerResult\r\n    {\r\n-        public TokenizerResult(string originalString, string normalizedString, IReadOnlyList<Split> splits, bool offsetsMappedToOriginalString);\r\n+        public TokenizerResult(string originalString, string normalizedString, IEnumerable<Split> splits, bool offsetsMappedToOriginalString);\r\n    }\r\n\r\n\r\n    public abstract class Model\r\n    {\r\n+        public virtual IReadOnlyList<Token> Tokenize(string sequence, bool isSpecialToken); // overload to add isSpecialToken parameter.\r\n\r\n+        public virtual bool TokenizeToIds(string sequence, bool isSpecialToken, List<int> accumulatedIds); // To be consumed by Tokenizer.EncodeToIds\r\n\r\n+        public virtual int? TokenToId(string token, bool skipSpecialTokens); // overload to add isSpecialToken parameter.\r\n   }\r\n\r\n\r\n+    public sealed class Tiktoken : Model\r\n+    {\r\n+        public Tiktoken(string tikTokenBpeFile, IReadOnlyDictionary<string, int>? specialTokensEncoder = null, int cacheSize = DefaultCacheSize);\r\n+        public Tiktoken(Stream tikTokenBpeFileStream, IReadOnlyDictionary<string, int>? specialTokensEncoder = null, int cacheSize = DefaultCacheSize);\r\n\r\n+        public IReadOnlyDictionary<string, int>? SpecialTokens { get; }\r\n\r\n+        // Implement the Model abstract methods\r\n+    }\r\n\r\n+   public sealed class TikTokenPreTokenizer : PreTokenizer\r\n+   {\r\n+       public TikTokenPreTokenizer(string regexPattern, IReadOnlyDictionary<string, int>? specialTokensEncoder);\r\n\r\n+       // Implement the Model abstract methods\r\n+   }\r\n\r\n```\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6981","RelatedDescription":"Open PR \"Introducing Tiktoken Tokenizer\" (#6981)"},{"Id":"2080571988","IsPullRequest":false,"CreatedAt":"2024-02-01T15:17:59","Actor":"tianweimol","Number":"6955","RawContent":null,"Title":"Generative Adversarial Network","State":"closed","Body":"how can i use GAN(Generative Adversarial Network) by ml.net\r\nthanks for your answer","Url":"https://github.com/dotnet/machinelearning/issues/6955","RelatedDescription":"Closed issue \"Generative Adversarial Network\" (#6955)"},{"Id":"2081036913","IsPullRequest":false,"CreatedAt":"2024-01-31T20:53:49","Actor":"jackpotcityco","Number":"6956","RawContent":null,"Title":"How much faster could this GPU be on AutoML \"BinaryClassificationExperiment\" than this CPU","State":"closed","Body":"Hello!\r\n\r\nI have a question about if GPU is supported for AutoML \"BinaryClassificationExperiment\" as seen in my code below.\r\n\r\nIf so, I wonder in general to get a rough idéa how much faster for example below GPU would be. Notice that I would run the experiment on a dataset with more than 200,000 rows and 100 columns as Training Data. So it is long training times like 20 minutes or longer.\r\n**(I just took this GPU as an example. If there is better GPUs to use, where I also are interested to use many GPUs as a cluster. Please advice me on that. I would be more than happy)**\r\n\r\n_Memory Type: GDDR6X\r\nChipset/GPU Model: NVIDIA GeForce RTX 3090\r\nMemory Size: 24 GB_\r\n\r\nCompared to if the experiment would run on my current CPU which is:\r\n\r\n_i7 - 12800h\r\nTotal Cores 14\r\nPerformance-cores 6\r\nEfficient-cores 8\r\nTotal Threads 20\r\nMax Turbo Frequency 4.80 GHz\r\nIntel® Turbo Boost Max Technology 3.0 Frequency ‡ 4.80 GHz\r\nPerformance-core Max Turbo Frequency 4.80 GHz\r\nEfficient-core Max Turbo Frequency 3.70 GHz\r\nCache 24 MB Intel® Smart Cache_\r\n\r\nI use: 32 GB RAM\r\n```\r\nvar experiment = mlContext.Auto().CreateBinaryClassificationExperiment(new BinaryExperimentSettings\r\n                {\r\n                    MaxExperimentTimeInSeconds = 1000,\r\n                    CacheBeforeTrainer = CacheBeforeTrainer.On,\r\n                    MaximumMemoryUsageInMegaByte = 8192, \r\n                    OptimizingMetric = BinaryClassificationMetric.PositivePrecision\r\n                });\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/6956","RelatedDescription":"Closed issue \"How much faster could this GPU be on AutoML \"BinaryClassificationExperiment\" than this CPU\" (#6956)"},{"Id":"2086430791","IsPullRequest":false,"CreatedAt":"2024-01-31T20:52:08","Actor":"amirvenus","Number":"6959","RawContent":null,"Title":"[Enhancement] support Apple's SoC GPU M1/M2/M3","State":"closed","Body":"**Is your feature request related to a problem? Please describe.**\r\nI'm always frustrated when I hear that despite the portability of dotnet and availability of large amounts of GPU memory thanks to recent Apple SoC machines, ml.net only support nvidia GPUs\r\n\r\n**Describe the solution you'd like**\r\nSupport for Apple's SoC integrated GPU in M series \r\n\r\n**Describe alternatives you've considered**\r\nThere is currently no other viable dotnet alternative \r\n\r\n**Additional context**\r\nOpen source models such as Ollama and Mistral can be loaded on the Apple's SoC GPU so it would be great to add support for Apple's GPU (i.e. Metal, etc.) and/or the neural's engine \r\n","Url":"https://github.com/dotnet/machinelearning/issues/6959","RelatedDescription":"Closed issue \"[Enhancement] support Apple's SoC GPU M1/M2/M3\" (#6959)"},{"Id":"2109119432","IsPullRequest":false,"CreatedAt":"2024-01-31T01:44:29","Actor":"ericstj","Number":"6980","RawContent":null,"Title":"ResourceManagerUtils.DownloadResource aquires mutex on one thread and releases from antother","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: [e.g. Windows 10] Win 11\r\n - ML.NET Version: [e.g. ML.NET v1.5.5] latest\r\n - .NET Version: [e.g. .NET 5.0] .NET 6.0\r\n\r\n**Describe the bug**\r\nI noticed an exception during local testing.   The error from the test was `DownloadFailed with exception One or more errors occurred. (Object synchronization method was called from an unsynchronized block of code.)`  This is happening because we are using a Mutex within an async method.\r\n\r\nMutex's have thread affinity.  They must be released from the same thread that they were acquired from:\r\nhttps://learn.microsoft.com/en-us/dotnet/api/system.threading.mutex.releasemutex?view=net-8.0\r\n\r\nHowever an async method that uses ConfigureAwait(false) will not necessarily resume on the same thread.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Delete local copies of ML.NET resources (eg from %TEMP%\\mlnet)\r\n2. Run `dotnet test` on `Microsoft.ML.TorchSharp.Tests`\r\n3. Observe failure, if not observed then repeat from step 1.\r\n\r\n**Expected behavior**\r\nTests run to completion.\r\n\r\n**Screenshots, Code, Sample Projects**\r\n```\r\nSystem.InvalidOperationException : Error downloading resource from 'https://aka.ms/mlnet-resources/models/pretrained_Roberta_encoder.tsm': DownloadFailed with exception One or more errors occurred. (Object synchronization method was called from an unsynchronized block of code.)\\\\nDownloadFailed with exception One or more errors occurred. (A task was canceled.)\\\\nDownloadFailed with exception One or more errors occurred. (The wait completed due to an abandoned mutex.)\\\\nDownloadFailed with exception One or more errors occurred. (A task was canceled.)\\\\nDownloadFailed with exception One or more errors occurred. (The wait completed due to an abandoned mutex.)\\\\n\\nmodel file could not be downloaded!\r\n   at Microsoft.ML.TorchSharp.Roberta.QATrainer.Trainer.GetModelPath() in C:\\src\\dotnet\\machinelearning\\src\\Microsoft.ML.TorchSharp\\Roberta\\QATrainer.cs:line 260\r\n```\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6980","RelatedDescription":"Open issue \"ResourceManagerUtils.DownloadResource aquires mutex on one thread and releases from antother\" (#6980)"},{"Id":"2109052001","IsPullRequest":false,"CreatedAt":"2024-01-31T00:30:57","Actor":"boneatjp","Number":"6979","RawContent":null,"Title":"Problem with IMonitor with Microsoft.ML.AutoML Version 0.21.0 and 0.21.1","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows11 Pro 23H2 64GB\r\n - ML.NET Version: ML.NET 3.0.1\r\n - .NET Version: .NET 8.0\r\n\r\n**Describe the bug**\r\nWriting windows form application using ML.NET 3.0.1:\r\n\r\nNuGet\r\nMicrosoft.ML Version 3.0.1\r\nMicrosoft.ML.AutoML Version 0.20.1\r\nMicrosoft.ML.CpuMath Version 3.0.1\r\nMicrosoft.ML.DataView Version 3.0.1\r\nMicrosoft.ML.FastTree Version 3.0.1\r\nMicrosoft.ML.LightGbm Version 3.0.1\r\nMicrosoft.ML.Mkl.Components Version 3.0.1\r\nMicrosoft.ML.Mkl.Redist Version 3.0.1\r\n\r\n**To Reproduce**\r\nInstalling Microsoft.ML.AutoML Version 0.21.0 or 0.21.1, my Monitor class does not behave the way it does with Microsoft.ML.AutoML Version 0.20.1.\r\n\r\n```\r\n// this class display trial information\r\npublic class AutoMLMonitor : IMonitor\r\n{\r\n    public AutoMLMonitor()\r\n    {\r\n        :\r\n    }\r\n    public void ReportBestTrial(TrialResult result)\r\n    {\r\n        :\r\n    }\r\n    public void ReportCompletedTrial(TrialResult result)\r\n    {\r\n        :\r\n    }\r\n    public void ReportFailTrial(TrialSettings settings, Exception exception = null)\r\n    {\r\n        :\r\n    }\r\n    public void ReportRunningTrial(TrialSettings settings)\r\n    {\r\n        :\r\n    }\r\n}\r\n\r\n// to cancel the experiment\r\nCancellationTokenSource cts;\r\nprivate void btnCancel_Click(object sender, EventArgs e)\r\n{\r\n    cts.Cancel();\r\n}\r\n\r\n// when running\r\nprivate async void ExecAutoML()\r\n{\r\n    // Set neccesarry options\r\n    :\r\n    //\r\n    AutoMLExperiment experiment = mlContext.Auto().CreateExperiment();\r\n    var monitor = new AutoMLMonitor();\r\n    experiment.SetMonitor(monitor);\r\n    cts = new CancellationTokenSource();\r\n    TrialResult experimentResults = await experiment.RunAsync(cts.Token);\r\n}\r\n\r\n```\r\n**Expected behavior**\r\nBy clicking btnCancel, experiment stops.  It works fine with version 0.20.1, but would not work with version 0.21.0 or 0.21.1.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6979","RelatedDescription":"Open issue \"Problem with IMonitor with Microsoft.ML.AutoML Version 0.21.0 and 0.21.1\" (#6979)"},{"Id":"2105523811","IsPullRequest":true,"CreatedAt":"2024-01-30T19:36:24","Actor":"dotnet-maestro[bot]","Number":"6976","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 97926d79-6b8b-4d32-c8db-08d9d479971c\r\n- **Build**: 20240126.5\r\n- **Date Produced**: January 26, 2024 11:54:14 PM UTC\r\n- **Commit**: 66c9c5397d599af40f2a94989241944f5a73442a\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.24069.2 to 9.0.0-beta.24076.5][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 9.0.0-beta.24069.2 to 9.0.0-beta.24076.5][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.24069.2 to 9.0.0-beta.24076.5][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 9.0.0-beta.24069.2 to 9.0.0-beta.24076.5][1]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 9.0.0-beta.24069.2 to 9.0.0-beta.24076.5][1]\r\n  - **Microsoft.DotNet.XliffTasks**: [from 9.0.0-beta.24069.2 to 9.0.0-beta.24076.5][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.24069.2 to 9.0.0-beta.24076.5][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/abddd0bd51...66c9c5397d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6976","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6976)"},{"Id":"2108613240","IsPullRequest":false,"CreatedAt":"2024-01-30T19:35:40","Actor":"ericstj","Number":"6978","RawContent":null,"Title":" Microsoft.ML.TorchSharp.Tests.QATests.TestSimpleQA followed by process killed / return 137","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Ubuntu 18.04\r\n - ML.NET Version: latest\r\n - .NET Version: .NET 6.0\r\n\r\n**Describe the bug**\r\nThis test is failing in CI somewhat regularly.  The error pattern looks like the following:\r\n```\r\nStarting test: Microsoft.ML.TorchSharp.Tests.QATests.TestSimpleQA\r\nKilled\r\n+ export _commandExitCode=137\r\n````\r\nHere are a few instances:\r\nhttps://helixre107v0xd1eu3ibi6ka.blob.core.windows.net/dotnet-machinelearning-refs-pull-6974-merge-f61a125156aa4af1bd/Microsoft.ML.TorchSharp.Tests/1/console.83a6fa6c.log?helixlogtype=result\r\nhttps://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-machinelearning-refs-pull-6976-merge-0a13c2cd41724c3483/Microsoft.ML.TorchSharp.Tests/1/console.ff57f777.log?helixlogtype=result\r\n\r\nI can't currently capture this failure in a known issue because there is no unique line logged.  I've seen this failure numerous times - always when `TestSimpleQA` is running.","Url":"https://github.com/dotnet/machinelearning/issues/6978","RelatedDescription":"Open issue \" Microsoft.ML.TorchSharp.Tests.QATests.TestSimpleQA followed by process killed / return 137\" (#6978)"},{"Id":"2101177179","IsPullRequest":true,"CreatedAt":"2024-01-30T19:26:31","Actor":"dotnet-maestro[bot]","Number":"6974","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:45c6fd49-3a4f-4675-f3da-08dc0c527e17)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 45c6fd49-3a4f-4675-f3da-08dc0c527e17\r\n- **Build**: 20240125.5\r\n- **Date Produced**: January 25, 2024 9:33:03 PM UTC\r\n- **Commit**: 07cf24f27ee58b5d1a9662334a101d84bd1e07e5\r\n- **Branch**: refs/heads/release/8.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.24059.4 to 8.0.0-beta.24075.5][7]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 8.0.0-beta.24059.4 to 8.0.0-beta.24075.5][7]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.24059.4 to 8.0.0-beta.24075.5][7]\r\n  - **Microsoft.DotNet.SignTool**: [from 8.0.0-beta.24059.4 to 8.0.0-beta.24075.5][7]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 8.0.0-beta.24059.4 to 8.0.0-beta.24075.5][7]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.24059.4 to 8.0.0-beta.24075.5][7]\r\n\r\n[7]: https://github.com/dotnet/arcade/compare/61ae141d2b...07cf24f27e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:45c6fd49-3a4f-4675-f3da-08dc0c527e17)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6974","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#6974)"},{"Id":"2105749553","IsPullRequest":false,"CreatedAt":"2024-01-29T15:24:59","Actor":"80LevelElf","Number":"6977","RawContent":null,"Title":"Is it possible to define custom optimization metric for AutoML?","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/issues/6977","RelatedDescription":"Open issue \"Is it possible to define custom optimization metric for AutoML?\" (#6977)"},{"Id":"2098961578","IsPullRequest":true,"CreatedAt":"2024-01-26T22:49:31","Actor":"zewditu","Number":"6973","RawContent":null,"Title":"Add new type to key-value converter","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6973","RelatedDescription":"Closed or merged PR \"Add new type to key-value converter\" (#6973)"},{"Id":"2101319468","IsPullRequest":true,"CreatedAt":"2024-01-25T23:16:20","Actor":"michaelgsharp","Number":"6975","RawContent":null,"Title":"Update OnnxRuntime to 1.16.3","State":"open","Body":"Updates OnnxRuntime to 1.16.3 and fixes the breaking change.","Url":"https://github.com/dotnet/machinelearning/pull/6975","RelatedDescription":"Open PR \"Update OnnxRuntime to 1.16.3\" (#6975)"},{"Id":"2089977739","IsPullRequest":false,"CreatedAt":"2024-01-25T10:50:56","Actor":"gijs-koehorst","Number":"6966","RawContent":null,"Title":"LightGBM.Fit() exits with 139 on osx-arm64","State":"closed","Body":"**System Information:**\r\n - OS & Version: MacOS (M3) Sonoma 14.2.1\r\n - ML.NET Version: ML.NET 3.0.1\r\n - .NET Version: 7.0\r\n - ML.LightGbm 3.0.1\r\n - LightGBM 4.2.0\r\n\r\n**Describe the bug**\r\nML.LightGBM by default does not include a binary for osx-arm64. To circumvent this we manually built a `lib_lightgbm.dylib` binary for arm and copied it to `/bin/Debug/net7.0/runtimes/osx-arm64/native`. This worked for ML.NET 2.0.0 and ML.LightGBM 2.0.0. However, after upgrading to the above versions and manually adding the `lib_lightgbm.dylib` of LightGBM 4.2.0, calling `BinaryClassificationModel.Trainers.LightGbm.Fit()` exits with exit code 139 without any error message. \r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Add `lib_lightgbm.dylib` of LightGBM 4.2.0 to `/bin/Debug/net7.0/runtimes/osx-arm64/native`\r\n2. Create a `BinaryClassificationModel.Trainers.LightGbm`\r\n3. Call `Fit()` with some data\r\n\r\n**Expected behavior**\r\nI would expect the LightGBM model to simply train on the data.","Url":"https://github.com/dotnet/machinelearning/issues/6966","RelatedDescription":"Closed issue \"LightGBM.Fit() exits with 139 on osx-arm64\" (#6966)"},{"Id":"2093939435","IsPullRequest":true,"CreatedAt":"2024-01-24T21:14:24","Actor":"dotnet-maestro[bot]","Number":"6969","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 97926d79-6b8b-4d32-c8db-08d9d479971c\r\n- **Build**: 20240119.2\r\n- **Date Produced**: January 19, 2024 1:45:17 PM UTC\r\n- **Commit**: abddd0bd5145578246dcadda264c7557f2a935a9\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.24062.5 to 9.0.0-beta.24069.2][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 9.0.0-beta.24062.5 to 9.0.0-beta.24069.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.24062.5 to 9.0.0-beta.24069.2][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 9.0.0-beta.24062.5 to 9.0.0-beta.24069.2][1]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 9.0.0-beta.24062.5 to 9.0.0-beta.24069.2][1]\r\n  - **Microsoft.DotNet.XliffTasks**: [from 9.0.0-beta.24062.5 to 9.0.0-beta.24069.2][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.24062.5 to 9.0.0-beta.24069.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/d731f58a50...abddd0bd51\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6969","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6969)"},{"Id":"2097218157","IsPullRequest":false,"CreatedAt":"2024-01-24T00:51:59","Actor":"michaelgsharp","Number":"6972","RawContent":null,"Title":"SymSgdNative depends on libiomp and libiomp5 in linux-x64","State":"open","Body":"It should only depend on libiomp5 for linux-x64. Will need to adjust the native linux build to fix that.","Url":"https://github.com/dotnet/machinelearning/issues/6972","RelatedDescription":"Open issue \"SymSgdNative depends on libiomp and libiomp5 in linux-x64\" (#6972)"},{"Id":"2097111953","IsPullRequest":false,"CreatedAt":"2024-01-23T22:45:42","Actor":"ericstj","Number":"6971","RawContent":null,"Title":"SqlException Timeout when running DatabaseLoaderTests","State":"open","Body":"## Build Information\r\nBuild: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=537554\r\nBuild error leg or test failing: Microsoft.ML.Tests.DatabaseLoaderTests.IrisLightGbmWithLoadColumnName\r\nPull request: N/A\r\n<!-- Error message template  -->\r\n## Error Message\r\n\r\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssues.md#how-to-fill-out-a-known-issue-error-section).\r\n\r\n<!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. -->\r\n\r\n```json\r\n{\r\n  \"ErrorMessage\": \"System.Data.SqlClient.SqlException : Connection Timeout Expired.  The timeout period elapsed while attempting to consume the pre-login handshake acknowledgement.  This could be because the pre-login handshake failed or the server was unable to respond back in time.\",\r\n  \"ErrorPattern\": \"\",\r\n  \"BuildRetry\": false,\r\n  \"ExcludeConsoleLog\": true\r\n}\r\n```\r\n\r\nException:\r\n> System.Data.SqlClient.SqlException : Connection Timeout Expired.  The timeout period elapsed while attempting to consume the pre-login handshake acknowledgement.  This could be because the pre-login handshake failed or the server was unable to respond back in time.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=149012; handshake=16; \\r\\n---- System.ComponentModel.Win32Exception : The wait operation timed out.\r\n\r\n\r\n<!-- Known issue validation start -->\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=537554\r\n**Error message validated:** `System.Data.SqlClient.SqlException : Connection Timeout Expired.  The timeout period elapsed while attempting to consume the pre-login handshake acknowledgement.  This could be because the pre-login handshake failed or the server was unable to respond back in time.`\r\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\r\n**Validation performed at:** 1/23/2024 10:45:57 PM UTC\r\n<!-- Known issue validation end -->\r\n<!--Known issue error report start -->\r\n### Report\r\n\r\n|Build|Definition|Test|Pull Request|\r\n|---|---|---|---|\r\n|[551373](https://dev.azure.com/dnceng-public/public/_build/results?buildId=551373)|dotnet/machinelearning|[Microsoft.ML.Tests.DatabaseLoaderTests.IrisVectorLightGbmWithLoadColumnName](https://dev.azure.com/dnceng-public/public/_build/results?buildId=551373&view=ms.vss-test-web.build-test-results-tab&runId=13114980&resultId=101414)|dotnet/machinelearning#6983|\r\n|[546343](https://dev.azure.com/dnceng-public/public/_build/results?buildId=546343)|dotnet/machinelearning|[Microsoft.ML.Tests.DatabaseLoaderTests.IrisVectorLightGbmWithLoadColumnName](https://dev.azure.com/dnceng-public/public/_build/results?buildId=546343&view=ms.vss-test-web.build-test-results-tab&runId=12979198&resultId=101378)||\r\n|[541238](https://dev.azure.com/dnceng-public/public/_build/results?buildId=541238)|dotnet/machinelearning|[Microsoft.ML.Tests.DatabaseLoaderTests.IrisVectorLightGbmWithLoadColumnName](https://dev.azure.com/dnceng-public/public/_build/results?buildId=541238&view=ms.vss-test-web.build-test-results-tab&runId=12823196&resultId=101427)|dotnet/machinelearning#6975|\r\n|[539475](https://dev.azure.com/dnceng-public/public/_build/results?buildId=539475)|dotnet/machinelearning|[Microsoft.ML.Tests.DatabaseLoaderTests.IrisVectorLightGbmWithLoadColumnName](https://dev.azure.com/dnceng-public/public/_build/results?buildId=539475&view=ms.vss-test-web.build-test-results-tab&runId=12775058&resultId=101449)||\r\n|[537554](https://dev.azure.com/dnceng-public/public/_build/results?buildId=537554)|dotnet/machinelearning|[Microsoft.ML.Tests.DatabaseLoaderTests.IrisVectorLightGbmWithLoadColumnName](https://dev.azure.com/dnceng-public/public/_build/results?buildId=537554&view=ms.vss-test-web.build-test-results-tab&runId=12716992&resultId=101492)||\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|1|2|5|\r\n<!--Known issue error report end -->","Url":"https://github.com/dotnet/machinelearning/issues/6971","RelatedDescription":"Open issue \"SqlException Timeout when running DatabaseLoaderTests\" (#6971)"},{"Id":"2091233934","IsPullRequest":true,"CreatedAt":"2024-01-23T17:32:40","Actor":"michaelgsharp","Number":"6968","RawContent":null,"Title":"Testing light gbm bad allocation","State":"closed","Body":"Changes some of the LightGBM tests to run sequentially to try and fix the bad allocation issue.\r\n\r\nThis is in regards to issue #6961. I'll leave that issue open so we can continue to monitor after this goes in.","Url":"https://github.com/dotnet/machinelearning/pull/6968","RelatedDescription":"Closed or merged PR \"Testing light gbm bad allocation\" (#6968)"},{"Id":"2094297910","IsPullRequest":true,"CreatedAt":"2024-01-23T03:50:08","Actor":"ericstj","Number":"6970","RawContent":null,"Title":"Update branding for 3.0.2","State":"closed","Body":"As soon as we finish a servicing release we should update the version to prepare for the next release.","Url":"https://github.com/dotnet/machinelearning/pull/6970","RelatedDescription":"Closed or merged PR \"Update branding for 3.0.2\" (#6970)"},{"Id":"2091230244","IsPullRequest":true,"CreatedAt":"2024-01-22T16:27:42","Actor":"github-actions[bot]","Number":"6967","RawContent":null,"Title":"[release/3.0] Update .NET Runtimes to latest version","State":"closed","Body":"Backport of #6964 to release/3.0\r\n\r\n/cc @ericstj\r\n\r\nTest only infrastructure change.","Url":"https://github.com/dotnet/machinelearning/pull/6967","RelatedDescription":"Closed or merged PR \"[release/3.0] Update .NET Runtimes to latest version\" (#6967)"},{"Id":"2089855947","IsPullRequest":true,"CreatedAt":"2024-01-19T19:36:36","Actor":"zewditu","Number":"6965","RawContent":null,"Title":"Add sweepable estimator  to NER","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6965","RelatedDescription":"Closed or merged PR \"Add sweepable estimator  to NER\" (#6965)"},{"Id":"2089338079","IsPullRequest":true,"CreatedAt":"2024-01-19T19:32:29","Actor":"ericstj","Number":"6964","RawContent":null,"Title":"Update .NET Runtimes to latest version","State":"closed","Body":"This version is used for testing and needs to be kept up-to-date with latest.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6964","RelatedDescription":"Closed or merged PR \"Update .NET Runtimes to latest version\" (#6964)"},{"Id":"2088799591","IsPullRequest":true,"CreatedAt":"2024-01-18T20:20:41","Actor":"github-actions[bot]","Number":"6963","RawContent":null,"Title":"[release/3.0] Added in release notes for 3.0.1","State":"closed","Body":"Backport of #6962 to release/3.0\r\n\r\n/cc @michaelgsharp\r\n\r\n## Customer Impact\r\nNone, just release note documentation.\r\n\r\n## Testing\r\nNone, just a documentation file change.\r\n\r\n## Risk\r\nNone, just a documentation file change.","Url":"https://github.com/dotnet/machinelearning/pull/6963","RelatedDescription":"Closed or merged PR \"[release/3.0] Added in release notes for 3.0.1\" (#6963)"},{"Id":"2088761085","IsPullRequest":true,"CreatedAt":"2024-01-18T18:00:07","Actor":"michaelgsharp","Number":"6962","RawContent":null,"Title":"Added in release notes for 3.0.1","State":"closed","Body":"Adding in release notes for 3.0.1","Url":"https://github.com/dotnet/machinelearning/pull/6962","RelatedDescription":"Closed or merged PR \"Added in release notes for 3.0.1\" (#6962)"},{"Id":"2087218394","IsPullRequest":false,"CreatedAt":"2024-01-18T00:05:53","Actor":"ericstj","Number":"6961","RawContent":null,"Title":"Microsoft.ML.Tests crashing after `[LightGBM] [Warning] bad allocation`","State":"open","Body":"## Build Information\r\nBuild: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=530980\r\nBuild error leg or test failing: Microsoft.ML.Tests.WorkItemExecution\r\nRolling build\r\n\r\n<!-- Error message template  -->\r\n## Error Message\r\n\r\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssues.md#how-to-fill-out-a-known-issue-error-section).\r\n\r\n<!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. -->\r\n\r\n```json\r\n{\r\n  \"ErrorMessage\": \"[LightGBM] [Warning] bad allocation\",\r\n  \"ErrorPattern\": \"\",\r\n  \"BuildRetry\": false,\r\n  \"ExcludeConsoleLog\": false\r\n}\r\n```\r\n\r\nFailing log: \r\n[https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-machinelearning-refs-heads-main-ceec46ab558849c4a3/Microsoft.ML.Tests/1/console.b4e5afef.log?helixlogtype=result](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-machinelearning-refs-heads-main-ceec46ab558849c4a3/Microsoft.ML.Tests/1/console.b4e5afef.log?helixlogtype=result)\r\n\r\nDump: https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-machinelearning-refs-heads-main-ceec46ab558849c4a3/Microsoft.ML.Tests/1/xunit.console.exe.5364.dmp?helixlogtype=result\r\n\r\nSample log spew before the crash:\r\n```\r\nStarting test: Microsoft.ML.Tests.OnnxConversionTest.NonDefaultColNamesBinaryClassificationOnnxConversionTest\r\n[LightGBM] [Warning] bad allocation\r\n[LightGBM] [Warning] bad allocation\r\n...\r\n\r\nC:\\h\\w\\B7EB099A\\w\\9FF809A0\\e>set _commandExitCode=-1073740940\r\n```\r\n\r\nWill have a look at the dump to see if there's more information about the test that was running when this happened.\r\n<!-- Known issue validation start -->\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=530980\r\n**Error message validated:** `[LightGBM] [Warning] bad allocation`\r\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\r\n**Validation performed at:** 1/18/2024 12:06:13 AM UTC\r\n<!-- Known issue validation end -->\r\n<!--Known issue error report start -->\r\n### Report\r\n\r\n|Build|Definition|Test|Pull Request|\r\n|---|---|---|---|\r\n|[541070](https://dev.azure.com/dnceng-public/public/_build/results?buildId=541070)|dotnet/machinelearning|[Microsoft.ML.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=541070&view=ms.vss-test-web.build-test-results-tab&runId=12814840&resultId=101439)|dotnet/machinelearning#6974|\r\n|[537526](https://dev.azure.com/dnceng-public/public/_build/results?buildId=537526)|dotnet/machinelearning|[Microsoft.ML.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=537526&view=ms.vss-test-web.build-test-results-tab&runId=12712162&resultId=100809)|dotnet/machinelearning#6969|\r\n|[535806](https://dev.azure.com/dnceng-public/public/_build/results?buildId=535806)|dotnet/machinelearning|[Microsoft.ML.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=535806&view=ms.vss-test-web.build-test-results-tab&runId=12662582&resultId=101439)||\r\n|[533766](https://dev.azure.com/dnceng-public/public/_build/results?buildId=533766)|dotnet/machinelearning|[Microsoft.ML.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=533766&view=ms.vss-test-web.build-test-results-tab&runId=12600162&resultId=100905)|dotnet/machinelearning#6967|\r\n|[533000](https://dev.azure.com/dnceng-public/public/_build/results?buildId=533000)|dotnet/machinelearning|[Microsoft.ML.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=533000&view=ms.vss-test-web.build-test-results-tab&runId=12578182&resultId=101382)|dotnet/machinelearning#6965|\r\n|[532248](https://dev.azure.com/dnceng-public/public/_build/results?buildId=532248)|dotnet/machinelearning|[Microsoft.ML.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=532248&view=ms.vss-test-web.build-test-results-tab&runId=12556412&resultId=101439)|dotnet/machinelearning#6963|\r\n|[530980](https://dev.azure.com/dnceng-public/public/_build/results?buildId=530980)|dotnet/machinelearning|[Microsoft.ML.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=530980&view=ms.vss-test-web.build-test-results-tab&runId=12523138&resultId=100376)||\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|0|7|\r\n<!--Known issue error report end -->","Url":"https://github.com/dotnet/machinelearning/issues/6961","RelatedDescription":"Open issue \"Microsoft.ML.Tests crashing after `[LightGBM] [Warning] bad allocation`\" (#6961)"},{"Id":"2087180908","IsPullRequest":false,"CreatedAt":"2024-01-17T23:27:52","Actor":"michaelgsharp","Number":"6960","RawContent":null,"Title":"AccessViolationException when running Microsoft.ML.Scenarios.ScenariosTests.TestRegressionScenario","State":"open","Body":"## Build Information\r\nBuild: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=529419\r\nBuild error leg or test failing: Microsoft.ML.Tests.WorkItemExecution\r\nPull request: https://github.com/dotnet/machinelearning/pull/6954\r\n<!-- Error message template  -->\r\n## Error Message\r\n\r\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssues.md#how-to-fill-out-a-known-issue-error-section).\r\n\r\n<!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. -->\r\n\r\n```json\r\n{\r\n  \"ErrorMessage\": \"Microsoft.ML.Trainers.SdcaTrainerBase`3.TrainWithoutLock\",\r\n  \"ErrorPattern\": \"\",\r\n  \"BuildRetry\": false,\r\n  \"ExcludeConsoleLog\": false\r\n}\r\n```\r\nTest is failing with the following exception.\r\n[https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-machinelearning-refs-pull-6954-merge-cc648714fbed40e1bb/Microsoft.ML.Tests/1/console.34966131.log?helixlogtype=result](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-machinelearning-refs-pull-6954-merge-cc648714fbed40e1bb/Microsoft.ML.Tests/1/console.34966131.log?helixlogtype=result)\r\n\r\n```\r\nStarting test: Microsoft.ML.Scenarios.ScenariosTests.TestRegressionScenario\r\n\r\nUnhandled Exception: System.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.\r\n   at System.Numerics.Tensors.TensorPrimitives.<Aggregate>g__Vectorized|53_1[TBinaryOperator,TAggregationOperator](Single& xRef, Single& yRef, UIntPtr remainder, TBinaryOperator binaryOp, TAggregationOperator aggregationOp)\r\n   at System.Numerics.Tensors.TensorPrimitives.Aggregate[TBinaryOperator,TAggregationOperator](ReadOnlySpan`1 x, ReadOnlySpan`1 y, TBinaryOperator binaryOp, TAggregationOperator aggregationOp)\r\n   at System.Numerics.Tensors.TensorPrimitives.Dot(ReadOnlySpan`1 x, ReadOnlySpan`1 y)\r\n   at Microsoft.ML.Internal.CpuMath.CpuMathUtils.DotProductDense(ReadOnlySpan`1 left, ReadOnlySpan`1 right, Int32 count) in D:\\a\\_work\\1\\s\\src\\Microsoft.ML.CpuMath\\CpuMathUtils.cs:line 194\r\n   at Microsoft.ML.Numeric.VectorUtils.DotProduct(VBuffer`1& a, VBuffer`1& b) in D:\\a\\_work\\1\\s\\src\\Microsoft.ML.Data\\Depricated\\Vector\\VectorUtils.cs:line 53\r\n   at Microsoft.ML.Trainers.SdcaTrainerBase`3.WDot(VBuffer`1& features, VBuffer`1& weights, Single bias) in D:\\a\\_work\\1\\s\\src\\Microsoft.ML.StandardTrainers\\Standard\\SdcaBinary.cs:line 319\r\n   at Microsoft.ML.Trainers.SdcaTrainerBase`3.TrainWithoutLock(IProgressChannelProvider progress, Factory cursorFactory, Random rand, IdToIdxLookup idToIdx, Int32 numThreads, DualsTableBase duals, Single[] biasReg, Single[] invariants, Single lambdaNInv, VBuffer`1[] weights, Single[] biasUnreg, VBuffer`1[] l1IntermediateWeights, Single[] l1IntermediateBias, Single[] featureNormSquared) in D:\\a\\_work\\1\\s\\src\\Microsoft.ML.StandardTrainers\\Standard\\SdcaBinary.cs:line 839\r\n   at Microsoft.ML.Trainers.SdcaTrainerBase`3.<>c__DisplayClass13_3.<TrainCore>b__5(Int32 j) in D:\\a\\_work\\1\\s\\src\\Microsoft.ML.StandardTrainers\\Standard\\SdcaBinary.cs:line 639\r\n   at System.Threading.Tasks.Parallel.<>c__DisplayClass17_0`1.<ForWorker>b__1()\r\n   at System.Threading.Tasks.Task.InnerInvokeWithArg(Task childTask)\r\n   at System.Threading.Tasks.Task.<>c__DisplayClass176_0.<ExecuteSelfReplicating>b__0(Object )\r\n   at System.Threading.Tasks.Task.Execute()\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)\r\n   at System.Threading.Tasks.Task.ExecuteEntry(Boolean bPreventDoubleExecution)\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n```\r\n<!--Known issue error report start -->\r\n### Report\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|0|0|\r\n<!--Known issue error report end -->","Url":"https://github.com/dotnet/machinelearning/issues/6960","RelatedDescription":"Open issue \"AccessViolationException when running Microsoft.ML.Scenarios.ScenariosTests.TestRegressionScenario\" (#6960)"},{"Id":"2082058236","IsPullRequest":true,"CreatedAt":"2024-01-17T21:51:50","Actor":"dotnet-maestro[bot]","Number":"6957","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 97926d79-6b8b-4d32-c8db-08d9d479971c\r\n- **Build**: 20240112.5\r\n- **Date Produced**: January 12, 2024 10:34:01 PM UTC\r\n- **Commit**: d731f58a502086842739a358ab490bec08fdb8a7\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.23628.1 to 9.0.0-beta.24062.5][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 9.0.0-beta.23628.1 to 9.0.0-beta.24062.5][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.23628.1 to 9.0.0-beta.24062.5][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 9.0.0-beta.23628.1 to 9.0.0-beta.24062.5][1]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 9.0.0-beta.23628.1 to 9.0.0-beta.24062.5][1]\r\n  - **Microsoft.DotNet.XliffTasks**: [from 9.0.0-beta.23628.1 to 9.0.0-beta.24062.5][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.23628.1 to 9.0.0-beta.24062.5][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/9e5fd26c0d...d731f58a50\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6957","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6957)"},{"Id":"2085343597","IsPullRequest":true,"CreatedAt":"2024-01-17T18:57:39","Actor":"github-actions[bot]","Number":"6958","RawContent":null,"Title":"[release/3.0] Torch sharp version updates and test fixes","State":"closed","Body":"Backport of #6954 to release/3.0\r\n\r\n/cc @michaelgsharp\r\n\r\n## Customer Impact\r\nThe older version of TorchSharp has a bug when a TorchSharp model is cleared with a finalizer. Updating to the latest version of TorchSharp resolves this issue.\r\n\r\n## Testing\r\nAll CI tests as well as full test passes of the large/full datatest were run to validate this.\r\n\r\n## Risk\r\nLow-Mid. This is a dependency update and that always has a bit of risk.","Url":"https://github.com/dotnet/machinelearning/pull/6958","RelatedDescription":"Closed or merged PR \"[release/3.0] Torch sharp version updates and test fixes\" (#6958)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-02-03T03:30:15.9183044Z","RunDurationInMilliseconds":385}