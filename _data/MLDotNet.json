{"Data":{"GitHub":{"Issues":[{"Id":"1599313968","IsPullRequest":false,"CreatedAt":"2023-02-24T21:43:48","Actor":"Joecadbert","Number":"6580","RawContent":null,"Title":"ResNet101 [ShapeInferenceError] Attribute pads has incorrect size","State":"open","Body":"I am using ML.NET in C# to extract features for a reverse image search.  It is based on the code sample from Microsoft's documentation at the following page: [https://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.onnxcatalog.dnnfeaturizeimage?view=ml-dotnet#microsoft-ml-onnxcatalog-dnnfeaturizeimage(microsoft-ml-transformscatalog-system-string-system-func((microsoft-ml-transforms-onnx-dnnimagefeaturizerinput-microsoft-ml-data-estimatorchain((microsoft-ml-transforms-columncopyingtransformer))))-system-string)](url)\r\n\r\nI have been successful at extracting features with ResNet18, TensorFlow, TensorFlowInceptionV3, and ONNX TinyYolo2.\r\n\r\n**Describe the bug**\r\nI get the following error when trying to use ResNet50 and ResNet101.\r\n**ResNet50**\r\n> System.InvalidOperationException: 'Error initializing model :Microsoft.ML.OnnxRuntime.OnnxRuntimeException: [ErrorCode:Fail] Load model from C:\\Users\\myname\\source\\repos\\ReverseImageSearch\\ReverseImageSearch\\bin\\Debug\\net7.0\\DnnImageModels\\ResNet50Onnx\\ResNet50.onnx failed:Node (Pooling1096) Op (AveragePool) [ShapeInferenceError] Attribute pads has incorrect size\r\n\r\n**ResNet101**\r\n> System.InvalidOperationException: 'Error initializing model :Microsoft.ML.OnnxRuntime.OnnxRuntimeException: [ErrorCode:Fail] Load model from C:\\Users\\myname\\source\\repos\\ReverseImageSearch\\ReverseImageSearch\\bin\\Debug\\net7.0\\DnnImageModels\\ResNet101Onnx\\ResNet101.onnx failed:Node (Pooling2286) Op (AveragePool) [ShapeInferenceError] Attribute pads has incorrect size\r\n\r\nThis is similar to the \"**Closed**\" issue at the following link  [https://github.com/dotnet/machinelearning/issues/4075](url)\r\n\r\nHere is the function\r\n\r\n```\r\npublic static float[] GenerateImageFeaturesResNet101(string ImagePath)\r\n{\r\n\r\n\tvar myFileName = System.IO.Path.GetFileName(ImagePath);\r\n\r\n\t// Create a new ML context, for ML.NET operations. It can be used for\r\n\t// exception tracking and logging, as well as the source of randomness.\r\n\tvar mlContext = new MLContext();\r\n\r\n\t//\r\n\tvar myImageNetData = new List<ImageNetData>\r\n\t\t{\r\n\t\t\tnew ImageNetData {ImagePath = ImagePath, Label = myFileName}\r\n\t\t};\r\n\r\n\tvar data = mlContext.Data.LoadFromEnumerable(myImageNetData);\r\n\r\n\tvar imagesFolder = Path.GetDirectoryName(ImagePath);\r\n\r\n\t// Image loading pipeline.\r\n\t// \r\n\tvar pipeline = mlContext.Transforms.LoadImages(outputColumnName: \"ImageObject\", imagesFolder, inputColumnName: \"ImagePath\")\r\n\t\t\t\t\t.Append(mlContext.Transforms.ResizeImages(outputColumnName: \"ImageObjectResized\", imageWidth:\r\n\t\t\t\t\t\t\t\t224, imageHeight: 224, inputColumnName: \"ImageObject\"))\r\n\t\t\t\t\t.Append(mlContext.Transforms.ExtractPixels(outputColumnName: \"Pixels\", inputColumnName: \"ImageObjectResized\"))\r\n\t\t\t\t\t.Append(mlContext.Transforms.DnnFeaturizeImage(outputColumnName: \"FeaturizedImage\",\r\n\t\t\t\t\t\t\t\tm => m.ModelSelector.ResNet101(mlContext, m.OutputColumn, m.InputColumn), inputColumnName: \"Pixels\"));\r\n\r\n\tvar transformedData = pipeline.Fit(data).Transform(data);\r\n\r\n\t//Extractor image features\r\n\tvar FeaturizedImageValues = transformedData.GetColumn<float[]>(\"FeaturizedImage\").ToArray();\r\n\r\n\treturn FeaturizedImageValues[0];\r\n}\r\n```\r\n\r\n\r\n\r\n\r\n**System Information** \r\n - OS & Version:Windows 10\r\n - ML.NET Version: 2.0.1\r\n - .NET Version:  .NET 7.0\r\n - microsoft.ml.dnnimagefeaturizer.resnet101 (0.20.1)\r\n - microsoft.ml.dnnimagefeaturizer.resnet50 (0.20.1)\r\n - microsoft.ml.dnnimagefeaturizer.resnet18 (0.20.1)\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6580","RelatedDescription":"Open issue \"ResNet101 [ShapeInferenceError] Attribute pads has incorrect size\" (#6580)"},{"Id":"1597840921","IsPullRequest":false,"CreatedAt":"2023-02-24T03:27:56","Actor":"tloten","Number":"6579","RawContent":null,"Title":"PredictionEngine does not Dispose all resources properly","State":"open","Body":"**System Information:**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: ML.Net 2.0.1\r\n - .NET Version: .NET 7.0\r\n\r\n**Describe the bug**\r\n`PredictionEngine.Dispose()` does not dispose of all resources, leaving hundreds of MB of memory behind.\r\nSpecifically, I suspect the `_outputRow` member in `PredictionEngineBase` is the culprit, as it is not disposed anywhere. Manually disposing of that using reflection hacks causes the expected memory to be free'd up.\r\n\r\n**To Reproduce**\r\nUnfortunately I can't give a code-based repro as I'm using a proprietary ONNX model. However I suspect it's reproducable with other models too.\r\nSteps to reproduce the behavior:\r\n1. Create a pipeline & predictionEngine - I'm using an object-detection ONNX model, being fed a 1280x720 image.\r\n2. Call `predictionEngine.Predict()`\r\n3. To ensure a clean slate, call `GC.Collect()` and `GC.WaitForPendingFinalizers()`.\r\n4. Log memory used (560MB in my case)\r\n5. Call `predictionEngine.Dispose()`, and ensure no references to the PredictionEngine exist any more\r\n6. Call `GC.Collect()` & log memory (458MB in my case). This still seems very high. Furthermore:\r\n8. Call `GC.WaitForPendingFinalizers();` & log memory (72MB in my case). This is now back to where you'd expect it, and suggests that `PredictionEngine` has left some disposables behind.\r\n\r\n\r\n**Expected behavior**\r\nI'd expect the memory usage after calling `predictionEngine.Dispose()` would drop significantly. I wouldn't expect anything to be left on the Finalizer queue.\r\n\r\n**Additional context**\r\nWhen I poked around in a memory profiler, it seemed like there were some OnnxRuntime `OrtValue` items left on the finalizer queue, and they _seem_ to be ultimately owned by the `PredictionEngineBase._outputRow` field.\r\nSo using a reflection hack, I disposed `_outputRow` myself and it appeared that all memory was being released:\r\n```\r\nvar outputRow = typeof(PredictionEngineBase<TfOdInputData, TfOdOutputData>)\r\n    .GetField(\"_outputRow\", BindingFlags.NonPublic | BindingFlags.Instance)\r\n    .GetValue(predictionEngine);\r\n\r\n((IDisposable) outputRow).Dispose();\r\npredictionEngine.Dispose();\r\n```\r\nLooking at https://github.com/dotnet/machinelearning/blob/main/src/Microsoft.ML.Data/Prediction/PredictionEngine.cs#L129 it seems like `disposer` should get rid of both inputRow and outputRow.","Url":"https://github.com/dotnet/machinelearning/issues/6579","RelatedDescription":"Open issue \"PredictionEngine does not Dispose all resources properly\" (#6579)"},{"Id":"1580852255","IsPullRequest":false,"CreatedAt":"2023-02-22T20:24:59","Actor":"superichmann","Number":"6565","RawContent":null,"Title":"System.OperationCanceledException when calling experimentResult.BestRun.Estimator.Fit","State":"closed","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Microsoft Windows 10 Pro\r\n - ML.NET Version: ML.NET 2.0.1\r\n - AutoML version:  AutoML 0.20.1\r\n - .NET Version: .NET 6.0\r\n\r\n**Describe the bug**\r\nAs outlined in [this ](https://github.com/dotnet/machinelearning-samples/tree/main/samples/csharp/getting-started/AdvancedExperiment_AutoML#step-10-re-fit-best-pipeline)tutorial, a model can be refitted to include the latest data used in the validation phase of the AutoML experiment.\r\n\r\nWhen calling this method, as in my case:\r\n`        private static ITransformer RefitBestPipeline(ExperimentResult<RegressionMetrics> experimentResult,IDataView final)\r\n        {\r\n            RunDetail<RegressionMetrics> bestRun = experimentResult.BestRun;\r\n            return bestRun.Estimator.Fit(final);\r\n        }`\r\nthe return line causes the exception.\r\n\r\n**To Reproduce**\r\n\r\n1. Create a regression automl experiment in C#.\r\n2. run the experiment on train validation data split\r\n3. After experiment finished, call the `RefitBestPipeline` function with the best model and the entire IDataView (train+validation)\r\n4. The error should occur on the return line\r\n\r\n**Expected behavior**\r\nThe function should return the new ITransformer\r\n\r\n**Screenshots, Code, Sample Projects**\r\n```\r\nSystem.OperationCanceledException\r\n  HResult=0x8013153B\r\n  Message=Operation was canceled.\r\n  Source=Microsoft.ML.Core\r\n  StackTrace:\r\n   at Microsoft.ML.Runtime.Contracts.CheckAlive(IHostEnvironment env)\r\n   at Microsoft.ML.Trainers.FastTree.DataConverter.MemImpl.InitializeBins(Int32 maxBins, IParallelTraining parallelTraining)\r\n   at Microsoft.ML.Trainers.FastTree.DataConverter.MemImpl..ctor(RoleMappedData data, IHost host, Int32 maxBins, Single maxLabel, Boolean noFlocks, Int32 minDocsPerLeaf, PredictionKind kind, IParallelTraining parallelTraining, Int32[] categoricalFeatureIndices, Boolean categoricalSplit)\r\n   at Microsoft.ML.Trainers.FastTree.DataConverter.Create(RoleMappedData data, IHost host, Int32 maxBins, Single maxLabel, Boolean diskTranspose, Boolean noFlocks, Int32 minDocsPerLeaf, PredictionKind kind, IParallelTraining parallelTraining, Int32[] categoricalFeatureIndices, Boolean categoricalSplit)\r\n   at Microsoft.ML.Trainers.FastTree.ExamplesToFastTreeBins.FindBinsAndReturnDataset(RoleMappedData data, PredictionKind kind, IParallelTraining parallelTraining, Int32[] categoricalFeaturIndices, Boolean categoricalSplit)\r\n   at Microsoft.ML.Trainers.FastTree.FastTreeTrainerBase`3.ConvertData(RoleMappedData trainData)\r\n   at Microsoft.ML.Trainers.FastTree.FastForestRegressionTrainer.TrainModelCore(TrainContext context)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at mlnet.AutoMLHelper.RefitBestPipeline(ExperimentResult`1 experimentResult, IDataView final)\r\n```\r\n\r\n\r\n**Additional context**\r\n**Note:** I have read all of the other opened issues on this exception type and none of the proposed workarounds worked.\r\nIf relevant, In my case, the `mlContext` used to load the data is different then the one performing the experiment.\r\nPerhaps the provided code example is too old now? (4 years) and irrelevant anymore?\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6565","RelatedDescription":"Closed issue \"System.OperationCanceledException when calling experimentResult.BestRun.Estimator.Fit\" (#6565)"},{"Id":"1588364090","IsPullRequest":true,"CreatedAt":"2023-02-22T20:24:58","Actor":"LittleLittleCloud","Number":"6572","RawContent":null,"Title":"fix 6565","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\nfix #6565","Url":"https://github.com/dotnet/machinelearning/pull/6572","RelatedDescription":"Closed or merged PR \"fix 6565\" (#6572)"},{"Id":"1595350643","IsPullRequest":false,"CreatedAt":"2023-02-22T15:50:10","Actor":"lindadamama","Number":"6578","RawContent":null,"Title":"Can the onnxruntime load the onnx model using GPU resources?","State":"open","Body":"Can the onnxruntime load the onnx model using GPU resources?","Url":"https://github.com/dotnet/machinelearning/issues/6578","RelatedDescription":"Open issue \"Can the onnxruntime load the onnx model using GPU resources?\" (#6578)"},{"Id":"1589029674","IsPullRequest":false,"CreatedAt":"2023-02-21T09:16:05","Actor":"NMSAzulX","Number":"6574","RawContent":null,"Title":"Model keep learning....","State":"closed","Body":"**Is your feature request related to a problem? Please describe.**\r\n\r\nI meet a problem. How does the MulticlassClassification-Model train new data continuously?\r\nTake the old model as the starting point and train the new model.\r\n\r\nI tried :\r\n```c#\r\nvar newModel = pipeline.Fit(newData);\r\n_ model = _ model.Append(newModel);\r\n```\r\nThis doesn't work.\r\n\r\n\r\n**Describe the solution you'd like**\r\n\r\n```c#\r\n_model = _model.Train(newData);\r\n```\r\n\r\n**Describe alternatives you've considered**\r\n\r\n\r\n**Additional context**\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6574","RelatedDescription":"Closed issue \"Model keep learning....\" (#6574)"},{"Id":"1592529931","IsPullRequest":false,"CreatedAt":"2023-02-20T22:43:59","Actor":"LittleLittleCloud","Number":"6577","RawContent":null,"Title":"Bring few-shot HPO into AutoML","State":"open","Body":"## What's few-shot/zero-shot HPO\r\nFew-shot HPO is a  both promising-performance and budget-friendly HPO solution. It is divided into two processes: offline processing and online processing. In offline processing, it searches on a given search space over a bunch of datasets and selects a hyper-parameter set {c} based on certain criteria. The dimension of search space and size of datasets can be very large in order to cover as many distribution of dataset as possible. In online processing, it picks N hyper-parameter configurations from {c} based on user's training dataset. If N=1, this HPO algorithm is called zero-shot as it only attempts once on training dataset. If N >1, this HPO algorithm is called few-shot.\r\n\r\nThe advantage of few-shot/zero-shot HPO is it introduces prior knowledge learned from offline process, which helps resolve cold-start problem. And with the help of prior knowledge, it also prevent exploring dead-end configurations.\r\n\r\n## What will benefit most from few-shot/zero-shot HPO\r\nDeep learning scenarios like image-classification and NLP tasks.\r\n\r\n## How will few-shot/zero-shot HPO be leveraged in ML.Net\r\nfew-shot/zero-shot HPO will be leveraged as a tuning algorithm in AutoML.Net, just like other tuning algorithms.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6577","RelatedDescription":"Open issue \"Bring few-shot HPO into AutoML\" (#6577)"},{"Id":"1592496191","IsPullRequest":true,"CreatedAt":"2023-02-20T22:05:08","Actor":"LittleLittleCloud","Number":"6576","RawContent":null,"Title":"Add default search space for standard trainers","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\n#6577 \r\n\r\nthe offline process of fewshot/zeroshot AutoML needs to be run on a fixed search space. This PR builds fixed search spaces for standard trainers using `Microsoft.ML.SearchSpace`","Url":"https://github.com/dotnet/machinelearning/pull/6576","RelatedDescription":"Open PR \"Add default search space for standard trainers\" (#6576)"},{"Id":"1588869460","IsPullRequest":false,"CreatedAt":"2023-02-17T07:19:33","Actor":"rzechu","Number":"6573","RawContent":null,"Title":"One or more errors occurred. (Schema mismatch for score column 'Score': expected vector of two or more items of type Single, got Vector<Single, 1> Arg_ParamName_Name)","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: ML.NET v0.20.0\r\n - .NET Version:  NET 6.0\r\n\r\n**Describe the bug**\r\nOne or more errors occurred. (Schema mismatch for score column 'Score': expected vector of two or more items of type Single, got Vector<Single, 1> Arg_ParamName_Name)\r\non AutoML Multiclasstraining\r\n\r\n```\r\nSELECT  \r\nCAST(DecimalColumn1 as real) as [DecimalColumn1], \r\nCAST(IntColumn2 as real) as [IntColumn2], \r\nCAST(IntColumn3 as real) as [IntColumn3], \r\nCAST(IntColumn4 as real) as [IntColumn4], \r\ncast([LongStringColumn1] as varchar(2000)) as [LongStringColumn1],  /*nvarchar(max) */\r\n[Name], /*nvarchar(128) */\r\n[ShortStringColumn3] as [ShortStringColumn3], /*nvarchar(128) */\r\ncast([LongStringColumn3] as varchar(2000)) as [LabelColumn]  /*nvarchar(max) */\r\nFROM Documents \r\n```\r\n![image](https://user-images.githubusercontent.com/45091660/219575314-5246a738-d1c2-4e42-9c2a-8f90225fdfbd.png)\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. MulticlassClassification\r\n2. Loading data from MSSQL Database\r\n```\r\nvar loader = MLContext.Data.CreateDatabaseLoader(columns.ToArray());\r\nvar dbSource = new DatabaseSource(SqlClientFactory.Instance, connectionString, sqlQuery);\r\nvar iDataView = loader.Load(dbSource);\r\n```\r\n```\r\ncolumns\r\n    [0]: \"Name=DecimalColumn1      Type=Single\"\r\n    [1]: \"Name=IntColumn2               Type=Single\"\r\n    [2]: \"Name=IntColumn3               Type=Single\"\r\n    [3]: \"Name=IntColumn4               Type=Single\"\r\n    [4]: \"Name=LongStringColumn1  Type=String\"\r\n    [5]: \"Name=Name                        Type=String\"\r\n    [6]: \"Name=ShortStringColumn3 Type=String\"\r\n    [7]: \"Name=LabelColumn             Type=String\"\r\n```\r\n\r\n```\r\niDataView\r\n    [0]: \"Index=0 Name=DecimalColumn1     Type=Single IsHidden=False\"\r\n    [1]: \"Index=1 Name=IntColumn2               Type=Single IsHidden=False\"\r\n    [2]: \"Index=2 Name=IntColumn3               Type=Single IsHidden=False\"\r\n    [3]: \"Index=3 Name=IntColumn4               Type=Single IsHidden=False\"\r\n    [4]: \"Index=4 Name=LongStringColumn1  Type=String IsHidden=False\"\r\n    [5]: \"Index=5 Name=Name                         Type=String IsHidden=False\"\r\n    [6]: \"Index=6 Name=ShortStringColumn3 Type=String IsHidden=False\"\r\n    [7]: \"Index=7 Name=LabelColumn             Type=String IsHidden=False\"\r\n```\r\niDataView.Preview()\r\n![image](https://user-images.githubusercontent.com/45091660/219575936-ee584f58-a8dd-4bcd-8b80-3d71d91994ca.png)\r\n\r\n3. \r\n![image](https://user-images.githubusercontent.com/45091660/219574125-863951d5-a87a-44cc-8ac1-ca96db0354d9.png)\r\n```\r\nvar experiment = MLContext.Auto().CreateMulticlassClassificationExperiment(multiClassExperimentSettings);\r\nvar experimentResult = experiment.Execute(trainData: iDataView, labelColumnName: runExperimentDto.LabelColumnName, progressHandler: progressHandler);\r\n```\r\n\r\nError:\r\n```\r\nSchema mismatch for score column 'Score': expected vector of two or more items of type Single, got Vector<Single, 1> (Parameter 'schema')\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)\r\n   at Microsoft.ML.AutoML.AutoMLExperiment.Run()\r\n   at Microsoft.ML.AutoML.MulticlassClassificationExperiment.Execute(IDataView trainData, ColumnInformation columnInformation, IEstimator`1 preFeaturizer, IProgress`1 progressHandler)\r\n   at AI.AutoML.Trainers.MulticlassClassification.RunExperiment(IDataView trainingDataView, RunExperimentDto runExperimentDto) in C:\\.....\\_myapp.cs:line 63\r\n```\r\n\r\nInnerException\r\n```\r\nSchema mismatch for score column 'Score': expected vector of two or more items of type Single, got Vector<Single, 1> (Parameter 'schema')\r\n\r\n   at Microsoft.ML.Data.MulticlassClassificationEvaluator.CheckScoreAndLabelTypes(RoleMappedSchema schema)\r\n   at Microsoft.ML.Data.EvaluatorBase`1.CheckColumnTypes(RoleMappedSchema schema)\r\n   at Microsoft.ML.Data.EvaluatorBase`1.Microsoft.ML.Data.IEvaluator.Evaluate(RoleMappedData data)\r\n   at Microsoft.ML.Data.MulticlassClassificationEvaluator.Evaluate(IDataView data, String label, String score, String predictedLabel)\r\n   at Microsoft.ML.MulticlassClassificationCatalog.<>c__DisplayClass6_0.<CrossValidate>b__0(CrossValidationResult x)\r\n   at System.Linq.Enumerable.SelectArrayIterator`2.ToArray()\r\n   at Microsoft.ML.AutoML.MulticlassClassificationRunner.Run(TrialSettings settings)\r\n   at System.Threading.Tasks.Task`1.InnerInvoke()\r\n   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)\r\n   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(Thread threadPoolThread, ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location ---\r\n   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(Thread threadPoolThread, ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.ML.AutoML.AutoMLExperiment.<RunAsync>d__26.MoveNext()\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/45091660/219575172-ffb91264-bc70-4493-909b-99d294078210.png)\r\n\r\n\r\n**Expected behavior**\r\nThis case should work (I am using same scenario for many other columns and only few cases gives this error - propably related to nvarchar(max) columns or some kind of mix columns\r\nI am many times using  2 varchars + 2 ints as source with  int/varchar output and work without any doubts\r\nOr should be understandable workaround","Url":"https://github.com/dotnet/machinelearning/issues/6573","RelatedDescription":"Open issue \"One or more errors occurred. (Schema mismatch for score column 'Score': expected vector of two or more items of type Single, got Vector<Single, 1> Arg_ParamName_Name)\" (#6573)"},{"Id":"1588307900","IsPullRequest":true,"CreatedAt":"2023-02-16T20:17:48","Actor":"LittleLittleCloud","Number":"6571","RawContent":null,"Title":"fix #6570","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n#6570 \r\n","Url":"https://github.com/dotnet/machinelearning/pull/6571","RelatedDescription":"Open PR \"fix #6570\" (#6571)"},{"Id":"1574878356","IsPullRequest":false,"CreatedAt":"2023-02-16T05:33:17","Actor":"superichmann","Number":"6558","RawContent":null,"Title":"NullReferenceException when trying to run AutoML regression experiment from code","State":"closed","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Microsoft Windows 10 Pro 10.0.19045 N/A Build 19045\r\n - ML.NET Version: 2.0.1\r\n - microsoft.ml.automl: 0.20.1\r\n - .NET Version: .NET 6.0\r\n\r\n**Describe the bug**\r\nWhen trying to run AutoML regression experiment on a table with data of 30 rows in QuestDB (implements Postgresql) the following exception occurs:\r\n\r\n\t\tMessage\t\"`Object reference not set to an instance of an object.`\"\tstring\r\n\t\tSource\t\"`Microsoft.ML.AutoML`\"\tstring\r\n\t\tStackTrace\t\" `  at Microsoft.ML.AutoML.AutoMLExperiment.<RunAsync>d__26.MoveNext()`\"\tstring\r\n\t\tTargetSite\t`{Void MoveNext()}\tSystem.Reflection.MethodBase {System.Reflection.RuntimeMethodInfo}`\r\n\t\tDeclaringType\t{Name = \"`<RunAsync>d__26\" FullName = \"Microsoft.ML.AutoML.AutoMLExperiment+<RunAsync>d__26`\"}\tSystem.Type {System.RuntimeType}\r\n\r\n\r\n**To Reproduce**\r\nDownload [QuestDB](https://questdb.io/)\r\nCreate table `\"CREATE TABLE 'tests' (Ticker SYMBOL, H FLOAT, P_T FLOAT,timestamp TIMESTAMP) timestamp (timestamp) PARTITION BY MONTH;\"`\r\nInsert 30 rows to the table\r\nIN C#: get the table data into IDataView with `mlContext.Data.CreateDatabaseLoader` and `using Npgsql;`\r\nrun the following code:\r\n`ExperimentResult<RegressionMetrics> experimentResult = mlContext.Auto().CreateRegressionExperiment(20).Execute(dataview, \"P_T\");`\r\n**Expected behavior**\r\nThe code should not throw an Exception and finish the experiment. **This code works perfectly on a large table with 28000 rows and 30 columns**\r\n\r\n**Additional context**\r\nI Tried running the experiment from the modelbuilder on csv and it works.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6558","RelatedDescription":"Closed issue \"NullReferenceException when trying to run AutoML regression experiment from code\" (#6558)"},{"Id":"1578931887","IsPullRequest":true,"CreatedAt":"2023-02-16T05:33:11","Actor":"LittleLittleCloud","Number":"6560","RawContent":null,"Title":"fix cancellation bug in SweepablePipelineRunner && fix object null exception in AutoML v1.0 regression API","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\n# why cancellation doesn't work for SweepablePipelineRunner\r\n\r\nSweepablePipelineRunner cancels running trial by calling `context.CancelExecution()`. When starting a trial, SweepablePipelineRunner first registers a `context.CancelExecution()` callback on cancellationtoken which will be triggered if cancellationtoken get cancelled. Then blocking on the running task until trial completed.The register callback will be unregistered after running trial completed through `using` statement.\r\n\r\nThe cause of cancellation doesn't work is SweepablePipelineRunner doesn't actually block on running trial. It simply create a wrapped task that kick off a trial, and return that task immediately. After the wrapped task is returned, the `context.CancelExecution()` will be unregistered and the running trial won't be cancelled any more.\r\n\r\nThe fix is simply change SweepablePipelineRunner to wait until the trial task is completed before return.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6560","RelatedDescription":"Closed or merged PR \"fix cancellation bug in SweepablePipelineRunner && fix object null exception in AutoML v1.0 regression API\" (#6560)"},{"Id":"1586517228","IsPullRequest":false,"CreatedAt":"2023-02-15T20:33:58","Actor":"CBrauer","Number":"6570","RawContent":null,"Title":"Strange error in AutoML","State":"open","Body":"**My System Information is:**\r\n-Microsoft Visual Studio Professional 2022\r\n-Version 17.5.0 Preview 6.0\r\n-VisualStudio.17.Preview/17.5.0-pre.6.0+33402.96\r\n-NET 7.0\r\n\r\n\r\n**Describe the bug**\r\nThe production code was running fine with ML.NET version 1.7.1.\r\n\r\nHere is a screen shot of the error:\r\n\r\n![AutoML Bug](https://user-images.githubusercontent.com/1317234/219145269-4981a058-7c4a-47a0-a399-82c95e145995.PNG)\r\n\r\nI have put a complete, reproducible solution with data on my GitHub account:\r\nhttps://github.com/CBrauer/Error-in-AutoML\r\n\r\nThis is a complete reproducible solution that demonstrate the error.\r\nPlease let me know if you see the same error message.\r\n\r\nCharles\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6570","RelatedDescription":"Open issue \"Strange error in AutoML\" (#6570)"},{"Id":"1582939532","IsPullRequest":true,"CreatedAt":"2023-02-13T19:34:28","Actor":"michaelgsharp","Number":"6569","RawContent":null,"Title":"Adds the ability to load a pre-trained LightGBM file and import it into ML.Net.","State":"open","Body":"Fixes #6296.\r\n\r\nAdds the ability to load a pre-trained LightGBM file and import it into ML.Net.","Url":"https://github.com/dotnet/machinelearning/pull/6569","RelatedDescription":"Open PR \"Adds the ability to load a pre-trained LightGBM file and import it into ML.Net.\" (#6569)"},{"Id":"1582724009","IsPullRequest":false,"CreatedAt":"2023-02-13T17:00:50","Actor":"michaelgsharp","Number":"6568","RawContent":null,"Title":"Survey: Repo contribution experience 2023","State":"open","Body":"A couple years ago we surveyed you the members of the community in this repo to learn how we were doing as maintainers.\r\n\r\nOne of the things we learned is that we needed to be more responsive to issues and PR’s. Since we added community triagers, updated our area ownership and added automated workflows. To offer more visibility into product planning we developed an app to view our epics and stories. To make the experience of offering a PR easier, we have added documentation, worked to increase build performance and squashed flaky tests.\r\n\r\nIt's time to repeat the same survey. Whether you've been involved for years or you're relatively new please tell us about your experience participating and contributing to the project. It should only take a few minutes, and you can answer for up to 3 repos.\r\n\r\nhttps://www.surveymonkey.com/r/8KTX9VT?Source=RepoLink","Url":"https://github.com/dotnet/machinelearning/issues/6568","RelatedDescription":"Open issue \"Survey: Repo contribution experience 2023\" (#6568)"},{"Id":"1582514359","IsPullRequest":false,"CreatedAt":"2023-02-13T15:02:02","Actor":"gbanuk2","Number":"6567","RawContent":null,"Title":"Training never returns no matter what is set for SetTrainingTimeInSeconds","State":"open","Body":"**System Information (please complete the following information):**\r\n - Windows 10 \r\n - ML 2.0.1\r\n - .Net 6.0\r\n\r\n**Describe the bug**\r\nNo matter what I set for SetTrainingTimeInSeconds, running the experiment never returns. I'm using the example from:\r\nhttps://learn.microsoft.com/en-us/dotnet/machine-learning/how-to-guides/how-to-use-the-automl-api\r\n\r\n**To Reproduce**\r\n```\r\n        public static void Train()\r\n        {\r\n            // Initialize MLContext\r\n            MLContext ctx = new MLContext();\r\n\r\n            // Define data path\r\n            var dataPath = Path.GetFullPath(@\"c:\\temp\\AutoMl\\Material.csv\");\r\n\r\n            // Infer column information\r\n            ColumnInferenceResults columnInference =\r\n                ctx.Auto().InferColumns(dataPath, labelColumnName: \"value\",\r\n                    groupColumns: false);\r\n\r\n            // Create text loader\r\n            TextLoader loader =\r\n                ctx.Data.CreateTextLoader(columnInference.TextLoaderOptions);\r\n\r\n            // Load data into IDataView\r\n            IDataView data = loader.Load(dataPath);\r\n\r\n            DataOperationsCatalog.TrainTestData trainValidationData =\r\n                ctx.Data.TrainTestSplit(data, testFraction: 0.2);\r\n\r\n            SweepablePipeline pipeline =\r\n                ctx.Auto().Featurizer(data, columnInformation: columnInference.ColumnInformation)\r\n                    .Append(ctx.Auto().Regression(labelColumnName: columnInference.ColumnInformation\r\n                            .LabelColumnName));\r\n\r\n            AutoMLExperiment experiment = ctx.Auto().CreateExperiment();\r\n\r\n            experiment\r\n                .SetPipeline(pipeline)\r\n                .SetRegressionMetric(RegressionMetric.RSquared, labelColumn: columnInference.ColumnInformation.LabelColumnName)\r\n                .SetTrainingTimeInSeconds(30)\r\n                .SetDataset(trainValidationData);\r\n\r\n            // Log experiment trials\r\n            ctx.Log += (_, e) =>\r\n            {\r\n                if (e.Source.Equals(\"AutoMLExperiment\"))\r\n                {\r\n                    Console.WriteLine(e.RawMessage);\r\n                }\r\n            };\r\n            TrialResult experimentResults =  experiment.Run();\r\n\r\n        }\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/6567","RelatedDescription":"Open issue \"Training never returns no matter what is set for SetTrainingTimeInSeconds\" (#6567)"},{"Id":"1582372431","IsPullRequest":true,"CreatedAt":"2023-02-13T13:38:42","Actor":"dotnet-maestro[bot]","Number":"6566","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1c26c342-7dbd-4e18-3778-08daa2f83374)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1c26c342-7dbd-4e18-3778-08daa2f83374\r\n- **Build**: 20230214.3\r\n- **Date Produced**: February 14, 2023 11:41:01 PM UTC\r\n- **Commit**: 4625a29565a94d3b8c5c680c8f1f1d53b2f216f5\r\n- **Branch**: refs/heads/release/7.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.23073.6 to 7.0.0-beta.23114.3][3]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 7.0.0-beta.23073.6 to 7.0.0-beta.23114.3][3]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.23073.6 to 7.0.0-beta.23114.3][3]\r\n  - **Microsoft.DotNet.SignTool**: [from 7.0.0-beta.23073.6 to 7.0.0-beta.23114.3][3]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 7.0.0-beta.23073.6 to 7.0.0-beta.23114.3][3]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.23073.6 to 7.0.0-beta.23114.3][3]\r\n\r\n[3]: https://github.com/dotnet/arcade/compare/5f85193...4625a29\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1c26c342-7dbd-4e18-3778-08daa2f83374)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6566","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#6566)"},{"Id":"1580322792","IsPullRequest":false,"CreatedAt":"2023-02-10T21:00:41","Actor":"LittleLittleCloud","Number":"6563","RawContent":null,"Title":"Add Summary() for ITransformer","State":"open","Body":"**Describe the solution you'd like**\r\nAn extension `Summary()` method for `ITransformer` that returns a string that contains information like the hyper-parameter/Transformer name if `ITransformer` is a single Transformer, and returns a summary of pipeline if `ITransformer` is `ITransformeChain`\r\n\r\n**Additional context**\r\nThe information can be useful for debugging purposes, and also help simplify the code generator in ModelBuilder, which currently relies on a manul-maintained wrapper for all transformers to pass such information\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6563","RelatedDescription":"Open issue \"Add Summary() for ITransformer\" (#6563)"},{"Id":"1579482458","IsPullRequest":false,"CreatedAt":"2023-02-10T17:40:59","Actor":"Terrance-Whitehurst","Number":"6561","RawContent":null,"Title":"Does ML.NET support multi-label classification","State":"closed","Body":"I am currently using ML.net for multi-class text classification. I was wondering is their a way to do multi-label text classification in ML.NET","Url":"https://github.com/dotnet/machinelearning/issues/6561","RelatedDescription":"Closed issue \"Does ML.NET support multi-label classification\" (#6561)"},{"Id":"1580001262","IsPullRequest":false,"CreatedAt":"2023-02-10T16:33:06","Actor":"superichmann","Number":"6562","RawContent":null,"Title":"No comment on behavior when sending the pipeline as parameter to AutoML experiment","State":"open","Body":"When sending a `pipeline` containing `DropColumns` to a string type column to Execute of AutoML experiment as the `preFeaturizer` there is an exception `ArgumentOutOfRangeException: Could not find input column 'StringColumn' (Parameter 'inputSchema')`.\r\n\r\nPerhaps consider adding documentation to this behavior either on this page or on AutoML Execute page.\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for learn.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: f9a0f970-a53e-b319-f210-15cb90c741fe\r\n* Version Independent ID: dce66202-02e1-ce5f-b9da-a6df7dfb4950\r\n* Content: [TransformExtensionsCatalog.DropColumns(TransformsCatalog, String\\[\\]) Method (Microsoft.ML)](https://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.transformextensionscatalog.dropcolumns?view=ml-dotnet)\r\n* Content Source: [dotnet/xml/Microsoft.ML/TransformExtensionsCatalog.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML/TransformExtensionsCatalog.xml)\r\n* Product: **dotnet-ml-api**\r\n* GitHub Login: @natke\r\n* Microsoft Alias: **nakersha**","Url":"https://github.com/dotnet/machinelearning/issues/6562","RelatedDescription":"Open issue \"No comment on behavior when sending the pipeline as parameter to AutoML experiment\" (#6562)"},{"Id":"1578543500","IsPullRequest":false,"CreatedAt":"2023-02-09T20:24:29","Actor":"luisquintanilla","Number":"6559","RawContent":null,"Title":"Expose Math Utils","State":"open","Body":"Expose cosine similarity, softmax, and other math utilities publicly.\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/510f0112d4fbb4d3ee233b9ca95c83fae1f9da91/src/Microsoft.ML.Core/Utilities/MathUtils.cs#L735","Url":"https://github.com/dotnet/machinelearning/issues/6559","RelatedDescription":"Open issue \"Expose Math Utils\" (#6559)"},{"Id":"1557139193","IsPullRequest":false,"CreatedAt":"2023-02-07T07:50:31","Actor":"pjsgsy","Number":"6550","RawContent":null,"Title":"Unhandled exception. System.Exception: col7 column not found. Make sure the name searched for matches the name in the schema.","State":"closed","Body":"\r\nWin11\r\nML.net is the latest stable release from nuget\r\n.net 6.0 console app\r\n\r\n**Describe the bug**\r\nUsing the generated code from a simple tabular scenario with 1 label column with 3 possible values results in an exception.\r\n\r\nThis is the exact code offered by the model maker\r\n\r\n\"//Load sample data\r\nvar sampleData = new MLModel1.ModelInput()\r\n{\r\n    Col0 = -1.833333F,\r\n    Col1 = -0.9662699F,\r\n    Col2 = -0.8599034F,\r\n    Col3 = -0.2951389F,\r\n    Col4 = 4.972222F,\r\n    Col5 = -0.422619F,\r\n    Col6 = -0.1358025F,\r\n};\r\n\r\n//Load model and predict output\r\nvar result = MLModel1.Predict(sampleData);\r\n\"\r\nEven the plain sample project generated will not run and causing this exception.\r\n\r\nAsking for a prediction will cause the exception, and it always complains that the label column is missing, which does not make sense to me. I have also replicated this in a completely new project, from scratch. The source data feed consists of the 7 data columns, and the label column.\r\n\r\nThe exception will always be \r\nUnhandled exception. System.Exception: col7 column not found. Make sure the name searched for matches the name in the schema.\r\n\r\nNot sure what is happening here as I have done this in the past without issue (though at least a few months back!)","Url":"https://github.com/dotnet/machinelearning/issues/6550","RelatedDescription":"Closed issue \"Unhandled exception. System.Exception: col7 column not found. Make sure the name searched for matches the name in the schema.\" (#6550)"},{"Id":"1573140008","IsPullRequest":true,"CreatedAt":"2023-02-06T20:28:37","Actor":"michaelgsharp","Number":"6557","RawContent":null,"Title":"fixes doc typo","State":"closed","Body":"Fixes #6311","Url":"https://github.com/dotnet/machinelearning/pull/6557","RelatedDescription":"Closed or merged PR \"fixes doc typo\" (#6557)"},{"Id":"1572812618","IsPullRequest":false,"CreatedAt":"2023-02-06T15:43:58","Actor":"superichmann","Number":"6556","RawContent":null,"Title":"See for example - no link for example","State":"open","Body":"The article contains the text _See for example._ but no link is provided to actually see the example.\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for learn.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: ff1457c6-de1c-ae4d-ae76-c083de96a4d5\r\n* Version Independent ID: ab18e9b7-70e7-2991-c50c-03dbb2728848\r\n* Content: [ColumnInformation Class (Microsoft.ML.AutoML)](https://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.automl.columninformation?view=ml-dotnet-preview)\r\n* Content Source: [dotnet/xml/Microsoft.ML.AutoML/ColumnInformation.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.AutoML/ColumnInformation.xml)\r\n* Product: **dotnet-ml-api**\r\n* GitHub Login: @natke\r\n* Microsoft Alias: **nakersha**","Url":"https://github.com/dotnet/machinelearning/issues/6556","RelatedDescription":"Open issue \"See for example - no link for example\" (#6556)"},{"Id":"1571152346","IsPullRequest":false,"CreatedAt":"2023-02-04T22:33:49","Actor":"dgorti","Number":"6555","RawContent":null,"Title":"DataFrame and PowerQuery Tables","State":"open","Body":"I used PowerQuery quite a bit. What is awesome about PowerQuery is that it has a very rich API for Tables.\r\nFor example\r\n`Table.AddColumn(table, \"name\", Func)` allows you to supply a function that generates values and add the column\r\n```\r\nTable.Pivot\r\nTable.RenameColumns\r\nTable.Distinct\r\nTable.Group\r\n```\r\nallow you to manipulate tables in a very efficient and easy way.\r\n\r\nI really would like to see a .NET version of PowerQuery or PowerQuery type API in DataFrame ","Url":"https://github.com/dotnet/machinelearning/issues/6555","RelatedDescription":"Open issue \"DataFrame and PowerQuery Tables\" (#6555)"},{"Id":"1562947899","IsPullRequest":true,"CreatedAt":"2023-01-30T18:17:13","Actor":"michaelgsharp","Number":"6554","RawContent":null,"Title":"Servicing 2.0 branch","State":"closed","Body":"Recreating PR since last time I accidentally squashed and merged and not just merged.\r\n\r\nAlready approved and tests already passed in #6551","Url":"https://github.com/dotnet/machinelearning/pull/6554","RelatedDescription":"Closed or merged PR \"Servicing 2.0 branch\" (#6554)"},{"Id":"1562943795","IsPullRequest":true,"CreatedAt":"2023-01-30T18:14:35","Actor":"michaelgsharp","Number":"6553","RawContent":null,"Title":"Revert \"Servicing for 2.0 branch\"","State":"closed","Body":"Reverts dotnet/machinelearning#6551 because I didn't want to squash and merge, just merge.","Url":"https://github.com/dotnet/machinelearning/pull/6553","RelatedDescription":"Closed or merged PR \"Revert \"Servicing for 2.0 branch\"\" (#6553)"},{"Id":"1557231422","IsPullRequest":true,"CreatedAt":"2023-01-30T18:13:47","Actor":"michaelgsharp","Number":"6551","RawContent":null,"Title":"Servicing for 2.0 branch","State":"closed","Body":"Servicing for 2.0 branch. Includes the bug fix for passing dynamic strings into onnx, as well as the fix for the official build machines.","Url":"https://github.com/dotnet/machinelearning/pull/6551","RelatedDescription":"Closed or merged PR \"Servicing for 2.0 branch\" (#6551)"},{"Id":"1561001536","IsPullRequest":false,"CreatedAt":"2023-01-28T20:30:22","Actor":"TT-Dev1","Number":"6552","RawContent":null,"Title":"AutoML 2 is way worse than 1.7.1 (for me)","State":"open","Body":"Win10 / **ML.NET 1.7.1 vs. 2.0.0** / .NET Framework 4.8\r\n\r\nAutoML 2.0 is way worse for me than the previous 1.7.1 release.  I tried using the Featurizer or even removing completely and doing it all by hand -- in 2 days of fiddling I can not create a model that is anywhere close to that created with the old CreateRegressionExperiment() version of the previous release.\r\n![image](https://user-images.githubusercontent.com/10066158/215285187-78616615-cc02-4aac-9f33-8c5162b269e0.png)\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\nFor 2.0 (where the problem is) I used the same code as this sample (but with my objects):  https://github.com/dotnet/machinelearning-samples/tree/main/samples/csharp/getting-started/MLNET2/AutoMLAdvanced\r\n\r\n```\r\n//Define pipeline\r\nSweepablePipeline pipeline =\r\n    ctx.Auto().Featurizer(data, columnInformation: columnInference.ColumnInformation)\r\n        .Append(ctx.Auto().Regression(labelColumnName: columnInference.ColumnInformation.LabelColumnName, useLgbm: false));\r\n\r\n// Create AutoML experiment\r\nAutoMLExperiment experiment = ctx.Auto().CreateExperiment();\r\n\r\n// Configure experiment\r\nexperiment\r\n    .SetPipeline(pipeline)\r\n    .SetRegressionMetric(RegressionMetric.RSquared, labelColumn: columnInference.ColumnInformation.LabelColumnName)\r\n    .SetTrainingTimeInSeconds(60)\r\n    .SetGridSearchTuner()\r\n    .SetDataset(trainValidationData);\r\n\r\n// Run experiment\r\nvar cts = new CancellationTokenSource();\r\nTrialResult experimentResults = await experiment.RunAsync(cts.Token);\r\n```\r\n\r\nI also unwound the featurizer and did all the same steps by hand and they worked with 1.7.1.\r\n\r\n**Expected behavior**\r\nTo be able to train a model that works as well as the last version.\r\n\r\n**Additional context**\r\nNOTE:  I had all kinds of different versions on my machine and completely uninstalled Visual Studio, deleted the directory, etc.\r\n\r\n_Maybe relevant?_\r\n\r\n* Now, after re-installing VS and adding ML.net, I no longer have the ability to edit notebooks (.ipynb).\r\n\r\n* Sometimes, when playing with the ML.NET Model Builder 2022 (16.13.9.2235601) and the same data, I don't get a Next button with my data.  [maybe there's something with my data that causes a problem with the 2.0 code?]\r\n![image](https://user-images.githubusercontent.com/10066158/215289551-df437b02-26c8-48d4-a5f0-243a5f59de2f.png)\r\n\r\n**ANY IDEAS WHERE I CAN DEBUG MORE?  OR TELL ME WHAT YOU WOULD LIKE TO HAVE ME CAN SHARE SO THAT I CAN BE MORE HELPFUL.**","Url":"https://github.com/dotnet/machinelearning/issues/6552","RelatedDescription":"Open issue \"AutoML 2 is way worse than 1.7.1 (for me)\" (#6552)"},{"Id":"1555695854","IsPullRequest":true,"CreatedAt":"2023-01-24T21:29:57","Actor":"michaelgsharp","Number":"6549","RawContent":null,"Title":"mac python fix","State":"closed","Body":"Official build is having issues in the mac setup step again. Seems to be caused by a machine change. We used to remove python 3.8 cause it was causing problems, now 3.8 is no longer installed so removing the step to remove it.\r\n\r\nAlready tested/validated with the official build.","Url":"https://github.com/dotnet/machinelearning/pull/6549","RelatedDescription":"Closed or merged PR \"mac python fix\" (#6549)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-02-25T03:30:24.2038511Z","RunDurationInMilliseconds":1675}