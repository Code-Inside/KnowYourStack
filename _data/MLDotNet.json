{"Data":{"GitHub":{"Issues":[{"Id":"617917257","IsPullRequest":true,"CreatedAt":"2020-05-14T04:36:26","Actor":"frank-dong-ms","Number":"5124","RawContent":null,"Title":"test on OneClassMatrixFactorizationInMemoryDataZeroBaseIndex","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5124","RelatedDescription":"Open PR \"test on OneClassMatrixFactorizationInMemoryDataZeroBaseIndex\" (#5124)"},{"Id":"616311940","IsPullRequest":true,"CreatedAt":"2020-05-14T04:36:07","Actor":"frank-dong-ms","Number":"5119","RawContent":null,"Title":"test os specific tests","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5119","RelatedDescription":"Closed or merged PR \"test os specific tests\" (#5119)"},{"Id":"617262411","IsPullRequest":true,"CreatedAt":"2020-05-14T02:38:23","Actor":"mstfbl","Number":"5121","RawContent":null,"Title":"Updated libmf and corresponding MatrixFactorizationSimpleTrainAndPredict() baselines per build","State":"closed","Body":"Fixes #4874 \r\n\r\nThis PR updates the libmf submodule, where its recent changes in libmf [PR #41](https://github.com/cjlin1/libmf/pull/41) and [PR #42](https://github.com/cjlin1/libmf/pull/42) address the shuffling of values in a given matrix. \r\n\r\nThe C++ function `void random_shuffle(_RanIt _First, _RanIt _Last)` is implemented differently on Windows vs. MacOS vs. Linux. This resulted in inconsistent results on MacOS and more-predictable yet still inconsistent results on Linux. As a result, a given matrix factorization problem, even with a constant seed, produced differing MSEs between each run on each system. The libmf codebase has been updated to prevent this, and baseline MSE values in the unit test `MatrixFactorizationSimpleTrainAndPredict()` have been updated to reflect this.","Url":"https://github.com/dotnet/machinelearning/pull/5121","RelatedDescription":"Closed or merged PR \"Updated libmf and corresponding MatrixFactorizationSimpleTrainAndPredict() baselines per build\" (#5121)"},{"Id":"614974792","IsPullRequest":false,"CreatedAt":"2020-05-13T23:45:30","Actor":"ibebbs","Number":"5109","RawContent":null,"Title":"Training / Predicting from in-memory Bitmap","State":"closed","Body":"Hi,\r\n\r\nJust started playing with Microsoft.ML and am pretty impressed. I followed [this tutorial](https://devblogs.microsoft.com/dotnet/train-image-classification-model-azure-mlnet-model-builder/) to build an image classifier model that works reasonably well (limited training data). I now want to put this model to use but have hit an issue:\r\n\r\nThe images I want to classify will be in-memory (as a Bitmap) but the trained model seems to need the images on disk. Obviously I could save the image to a temporary file but this seems wasteful when the model will need to read it back in again. From what I can see in the source code, the \"LoadRawImageBytes\" transform from the [Model Builder generated] pipeline shown below doesn't have any kind of overload for loading in-memory data:\r\n\r\n```c#\r\nvar pipeline = context.Transforms.Conversion.MapValueToKey(\"Label\", \"Label\")\r\n    .Append(context.Transforms.LoadRawImageBytes(\"ImageSource_featurized\", null, \"Image\"))\r\n    .Append(context.Transforms.CopyColumns(\"Features\", \"ImageSource_featurized\"));\r\n```\r\n\r\nAfter a lot of searching I found [this issue](https://github.com/dotnet/machinelearning/issues/4944) in which @huy-lv asks how to do pretty much exactly what I want to do. @Lynx1820 replied pointing to [this sample](https://github.com/dotnet/machinelearning-samples/tree/e43e429cce06f246a38053e01f1a8e9392f2d36f/samples/csharp/end-to-end-apps/DeepLearning_ImageClassification_TensorFlow) which I have endeavoured to follow.\r\n\r\nI now have the following pipeline:\r\n\r\n```c#\r\nvar pipeline = context.Transforms.Conversion.MapValueToKey(\"Label\", \"Label\")\r\n    .Append(context.Transforms.ResizeImages(outputColumnName: \"ScaledImage\", imageWidth: 227, imageHeight: 227, inputColumnName: \"Image\"))\r\n    .Append(context.Transforms.ExtractPixels(outputColumnName: \"ImageSource_featurized\", inputColumnName: \"ScaledImage\", outputAsFloatArray: false))\r\n    .Append(context.Transforms.CopyColumns(\"Features\", \"ImageSource_featurized\"));\r\n\r\nvar trainer = context.MulticlassClassification.Trainers.ImageClassification(new ImageClassificationTrainer.Options() { LabelColumnName = \"Label\", FeatureColumnName = \"Features\" })\r\n    .Append(context.Transforms.Conversion.MapKeyToValue(\"PredictedLabel\", \"PredictedLabel\"));\r\n\r\nvar trainingPipeline = pipeline.Append(trainer);\r\n```\r\n\r\nBut when I try to train the model (with `trainingPipeline.Fit(trainingData)`) I receive the error:\r\n\r\n`Schema mismatch for feature column 'Features': expected VarVector<Byte>, got Vector<Byte> '`\r\n\r\nCould you provide an example of how to use `Transforms.ExtractPixels` with `MulticlassClassification.Trainers.ImageClassification` or suggestions on how to train/predict from an in-memory `Bitmap` source?\r\n\r\nThanks!","Url":"https://github.com/dotnet/machinelearning/issues/5109","RelatedDescription":"Closed issue \"Training / Predicting from in-memory Bitmap\" (#5109)"},{"Id":"617805132","IsPullRequest":true,"CreatedAt":"2020-05-13T22:54:20","Actor":"jwood803","Number":"5123","RawContent":null,"Title":"Use Channel Instead of BufferBlock","State":"open","Body":"Updates for #4482.\r\n\r\n@eerhardt I took a shot at a single replacement to make sure it looks good before continuing. Does this look good or am I missing anything?","Url":"https://github.com/dotnet/machinelearning/pull/5123","RelatedDescription":"Open PR \"Use Channel Instead of BufferBlock\" (#5123)"},{"Id":"617793842","IsPullRequest":true,"CreatedAt":"2020-05-13T22:26:10","Actor":"frank-dong-ms","Number":"5122","RawContent":null,"Title":"enable build step timeout also some code cleanup","State":"open","Body":"1. set the build steps to timeout at 20 minutes\r\n2. remove MatrixFactorizationFact\r\n3. remove RetryFact and related class\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5122","RelatedDescription":"Open PR \"enable build step timeout also some code cleanup\" (#5122)"},{"Id":"613641823","IsPullRequest":false,"CreatedAt":"2020-05-13T16:52:06","Actor":"kik3r","Number":"5101","RawContent":null,"Title":"Negative scores evalauate for LightGBMMulti model","State":"closed","Body":"I have a multi class classification model trained to classify to 3 values (-1,0,1) looking at 26 feature columns which are RGB color values as float.\r\nwhen predicting, score values returned are sometimes negative. From my basic understanding, the score values are confidence on each class and they should add up to 1 and each value should be between 0 and 1.\r\n\r\nModel was created using AutoML.\r\nMulticlassExperimentSettings settings = new MulticlassExperimentSettings\r\n{\r\n    MaxExperimentTimeInSeconds = (uint)(trainer.TrainingDuration * 60),\r\n    CacheDirectory = new DirectoryInfo(ModelCache),\r\n    OptimizingMetric = MulticlassClassificationMetric.MicroAccuracy\r\n};\r\n\r\nvar experiment = mlContext.Auto().CreateMulticlassClassificationExperiment(settings);\r\nvar progress = new Progress<RunDetail<MulticlassClassificationMetrics>>(p =>{});\r\nvar result = experiment.Execute(trainSet, testSet, labelColumnName: \"Classification\", progressHandler: progress);\r\n\r\n\r\n![vs](https://user-images.githubusercontent.com/31455766/81232882-eceb0f80-8fb2-11ea-9686-acba9c57b898.jpg)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5101","RelatedDescription":"Closed issue \"Negative scores evalauate for LightGBMMulti model\" (#5101)"},{"Id":"617142500","IsPullRequest":true,"CreatedAt":"2020-05-13T06:20:21","Actor":"frank-dong-ms","Number":"5120","RawContent":null,"Title":"move tf meta file download to build stage","State":"closed","Body":"recently observe several test fail due to meta file download fail, move download to build stage which has 2 advantage,\r\n1. if download fail, fail fast at build stage\r\n2. we used to download large benchmark data (over 800 MB) and this download is quite stable, try download here\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=637938&view=logs&j=5aa5c7df-492a-5eaf-973a-62b7b0f0ee3b&t=ffdbd604-f3e2-5332-cf61-c8dd00799b47\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=639940&view=logs&j=4e8eb92e-b635-5c96-398c-05943bacd8c5&t=cf6d66af-7fee-5841-f0be-a4bf6642a2ae\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=640227&view=logs&j=c54dae93-d956-5713-8cb2-8e90b1d124e1&t=87b64192-025a-5709-ee76-220b68eba827","Url":"https://github.com/dotnet/machinelearning/pull/5120","RelatedDescription":"Closed or merged PR \"move tf meta file download to build stage\" (#5120)"},{"Id":"616277104","IsPullRequest":true,"CreatedAt":"2020-05-12T03:21:13","Actor":"frank-dong-ms","Number":"5117","RawContent":null,"Title":"ensure benchmark dataset is downloaded before using","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5117","RelatedDescription":"Closed or merged PR \"ensure benchmark dataset is downloaded before using\" (#5117)"},{"Id":"616279268","IsPullRequest":true,"CreatedAt":"2020-05-12T02:03:02","Actor":"frank-dong-ms","Number":"5118","RawContent":null,"Title":"move nightly build pipeline and outer pipeline back to hosted","State":"closed","Body":"move nightly build pipeline and outer loop pipeline back to hosted\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5118","RelatedDescription":"Closed or merged PR \"move nightly build pipeline and outer pipeline back to hosted\" (#5118)"},{"Id":"613625073","IsPullRequest":true,"CreatedAt":"2020-05-11T22:34:05","Actor":"frank-dong-ms","Number":"5099","RawContent":null,"Title":"disable test that are hanging and failing","State":"closed","Body":"Due to some recent CI failing, disable some test to unblock:\r\n\r\nHanging: \r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=632387&view=logs&j=fbb2cc91-8ee3-5485-dfe8-a5681da76491&t=12433ff8-7284-5589-30ac-02bd5974b6ad\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=631965&view=logs&j=32952595-30e7-56fa-9b86-c4579b87f5d1&t=4390109a-3c77-5b7c-bf35-d176b654cd3c\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=631033&view=logs&j=d1af5113-e574-5a31-f7f3-02fc40ea7b26&t=167d9e7d-b609-5b0a-7efa-d26b0dafb88f\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=630228&view=logs&j=32952595-30e7-56fa-9b86-c4579b87f5d1&s=b15d9194-8f26-5328-b47f-5968c76b37e7\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=628376&view=logs&j=9dffbc46-9322-5a58-fb37-6d66c044e90d&t=11098bf6-eb78-583b-8eab-f14f48444a6b\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=628134&view=logs&j=41509eb4-74ce-5e57-61b4-bdf74b39e7c1&t=dbdc2969-5b98-5c39-1328-31d4a2fdc45e\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=626424&view=logs&j=d1af5113-e574-5a31-f7f3-02fc40ea7b26&t=167d9e7d-b609-5b0a-7efa-d26b0dafb88f\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=620750&view=logs&j=32952595-30e7-56fa-9b86-c4579b87f5d1&s=d654deb9-056d-50a2-1717-90c08683d50a\r\n\r\nFail:\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=614989&view=logs&j=4b233af4-7b14-5f68-27c6-9c4d7ac87519&t=6e2e87e8-8c33-50e6-544b-c271638494a5","Url":"https://github.com/dotnet/machinelearning/pull/5099","RelatedDescription":"Closed or merged PR \"disable test that are hanging and failing\" (#5099)"},{"Id":"613776008","IsPullRequest":true,"CreatedAt":"2020-05-11T22:34:01","Actor":"frank-dong-ms","Number":"5103","RawContent":null,"Title":"troubleshoot hanging","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5103","RelatedDescription":"Closed or merged PR \"troubleshoot hanging\" (#5103)"},{"Id":"616188351","IsPullRequest":false,"CreatedAt":"2020-05-11T21:07:28","Actor":"JulioAlbinatiCortez","Number":"5116","RawContent":null,"Title":"FileNotFound error when saving the model.zip file on AML","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Not sure, running on AML Compute.\r\n- **.NET Version (eg., dotnet --info)**: .NET Core 2.0\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI have an AML pipeline where I use ML.NET to train a LightGBM model and save results on a blob storage. This pipeline reads data from ADLS.\r\n- **What happened?**\r\nThe training stage failed with an exception that suggests an I/O error (file not found).\r\n- **What did you expect?**\r\nThis same pipeline have worked in the recent past. This is the first time I'm seeing this error.\r\n\r\n### Source code / logs\r\n\r\nLogs from the training stage:\r\n_[1] 'Loading data for LightGBM' finished in 00:27:01.1484891.\r\n[2] 'Training with LightGBM' started.\r\n.***** Unexpected failure. Please refer to https://aka.ms/MLNetIssue to file an issue with details *****\r\n***** Error log has been saved to '/tmp/TLC/Error_20200511_192219_facb0cb4-1e59-4354-b1c2-870a44ba1ca4.log', please refer to https://aka.ms/MLNetIssue to file an issue with details *****\r\n===== Begin detailed dump =====\r\n(1) Unexpected exception: Could not find file '/mnt/batch/tasks/shared/LS_root/jobs/devexperimentation/azureml/bdaad31a-ef2f-47cd-b99b-85119e487d7c/mounts/workspaceblobstore/azureml/bdaad31a-ef2f-47cd-b99b-85119e487d7c/ModelOutput/model.zip'., 'System.IO.FileNotFoundException'\r\n   at Interop.ThrowExceptionForIoErrno(ErrorInfo errorInfo, String path, Boolean isDirectory, Func`2 errorRewriter)\r\n   at Microsoft.Win32.SafeHandles.SafeFileHandle.Open(String path, OpenFlags flags, Int32 mode)\r\n   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options)\r\n   at Microsoft.ML.Data.SimpleFileHandle.OpenReadStream() in /machinelearning/src/Microsoft.ML.Core/Data/IFileHandle.cs:line 193\r\n   at Microsoft.ML.Tools.SavePredictorCommand.Run() in /machinelearning/src/Microsoft.ML.Data/Commands/SavePredictorCommand.cs:line 82\r\n   at Microsoft.ML.Tools.Maml.MainCore(IHostEnvironment env, String args, Boolean alwaysPrintStacktrace) in /machinelearning/src/Microsoft.ML.Maml/MAML.cs:line 142\r\n====== End detailed dump =====_\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5116","RelatedDescription":"Open issue \"FileNotFound error when saving the model.zip file on AML\" (#5116)"},{"Id":"616105156","IsPullRequest":false,"CreatedAt":"2020-05-11T18:53:04","Actor":"terrajobst","Number":"5115","RawContent":null,"Title":"Survey: repo contribution experience","State":"open","Body":"We’ve been working as a team, and community, for five years in the dotnet org on the .NET Core project. Many of the same GitHub handles have remained constant over that time, some are new, and others have come and gone. Thanks to everyone that has contributed! We normally focus on how to improve the product, but we’re turning our focus to improving the open source project. We’ve created a survey to better understand your individual experience of participating and contributing in this project.\r\n\r\nWe would appreciate your feedback so we can work to address shortcomings and missed opportunities. If you don’t supply contact details, then responses will be anonymous.\r\n\r\n[Survey](https://www.surveymonkey.com/r/ZLPVNX9?SourceRepo=dotnet%2Fmachinelearning)\r\n\r\nThank you for your time!\r\n\r\n### Discussion\r\n\r\nFor discussion, please go to https://github.com/dotnet/runtime/issues/36235.","Url":"https://github.com/dotnet/machinelearning/issues/5115","RelatedDescription":"Open issue \"Survey: repo contribution experience\" (#5115)"},{"Id":"616072768","IsPullRequest":true,"CreatedAt":"2020-05-11T18:00:06","Actor":"wangyems","Number":"5114","RawContent":null,"Title":"Improve error message when defining custom type for variables","State":"open","Body":"resolve https://github.com/dotnet/machinelearning/issues/4122\r\n\r\nThe unhelpful message stuff is a bit different from the above link's description. ML.NET throws unhelpful message not because the customer uses the wrong type(different from the type defined in onnx), but defining the variable using the same type as OnnxSequenceType. However, the correct type should be IEnumerable<OnnxSequenceType>.\r\n\r\nThis change adds more information to existing exception message and adds a special error message for errors like this when customer carelessly defines a container variable without using container type\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5114","RelatedDescription":"Open PR \"Improve error message when defining custom type for variables\" (#5114)"},{"Id":"615403389","IsPullRequest":false,"CreatedAt":"2020-05-10T14:29:31","Actor":"adriansd27","Number":"5113","RawContent":null,"Title":"Evaluating model that loads images from disk throws an exception in ASP.NET core","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: ASP.NET Core 3.1\r\n\r\n### Issue\r\n\r\nI'm running ASP.NET Core 3.1. Training the model works fine. PredictionEnginePool predicts fine. However if I try to get the metrics of the trained model I'm getting the below exception. Is it that ASP.NET Core doesn't support System.Drawing.Bitmap? If so, is there any alternative option to evaluate a model in ASP.NET Core?\r\n\r\n### Source code / logs\r\n\r\n     var trainingData = _mlContext.Data.LoadFromEnumerable(imageDataTags);\r\n     var model = pipeline.Fit(trainingData);\r\n     var testingData = _mlContext.Data.LoadFromEnumerable(testImageDataTags);\r\n     var predictions = model.Transform(testingData);\r\n     var metrics = _mlContext.MulticlassClassification.Evaluate(predictions,\"LabelKey\");\r\n\r\n```System.InvalidOperationException: Splitter/consolidator worker encountered exception while consuming source data\r\n ---> System.ArgumentException: Parameter is not valid.\r\n   at System.Drawing.Bitmap..ctor(String filename, Boolean useIcm)\r\n   at System.Drawing.Bitmap..ctor(String filename)\r\n   at Microsoft.ML.Data.ImageLoadingTransformer.Mapper.<>c__DisplayClass4_0.<MakeGetterImageDataViewType>b__0(Bitmap& dst)\r\n   at Microsoft.ML.Transforms.Image.ImageResizingTransformer.Mapper.<>c__DisplayClass3_0.<MakeGetter>b__1(Bitmap& dst)\r\n   at Microsoft.ML.Transforms.Image.ImagePixelExtractingTransformer.Mapper.<>c__DisplayClass5_0`1.<GetGetterCore>b__1(VBuffer`1& dst)\r\n   at Microsoft.ML.Transforms.TensorFlowTransformer.TensorValueGetterVec`1.GetTensor()\r\n   at Microsoft.ML.Transforms.TensorFlowTransformer.Mapper.UpdateCacheIfNeeded(Int64 position, ITensorValueGetter[] srcTensorGetters, String[] activeOutputColNames, OutputCache outputCache)\r\n   at Microsoft.ML.Transforms.TensorFlowTransformer.Mapper.<>c__DisplayClass9_0`1.<MakeGetter>b__4(VBuffer`1& dst)\r\n   at Microsoft.ML.Data.SchemaBindablePredictorWrapperBase.<>c__DisplayClass18_0`2.<GetValueGetter>b__0(TDst& dst)\r\n   at Microsoft.ML.Data.DataViewUtils.Splitter.InPipe.Impl`1.Fill()\r\n   at Microsoft.ML.Data.DataViewUtils.Splitter.<>c__DisplayClass5_1.<ConsolidateCore>b__2()\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.ML.Data.DataViewUtils.Splitter.Batch.SetAll(OutPipe[] pipes)\r\n   at Microsoft.ML.Data.DataViewUtils.Splitter.Cursor.MoveNextCore()\r\n   at Microsoft.ML.Data.RootCursorBase.MoveNext()\r\n   at Microsoft.ML.Data.EvaluatorBase`1.ProcessData(IDataView data, RoleMappedSchema schema, Func`2 activeColsIndices, TAgg aggregator, AggregatorDictionaryBase[] dictionaries)\r\n   at Microsoft.ML.Data.EvaluatorBase`1.Microsoft.ML.Data.IEvaluator.Evaluate(RoleMappedData data)\r\n   at Microsoft.ML.Data.MulticlassClassificationEvaluator.Evaluate(IDataView data, String label, String score, String predictedLabel)\r\n   at Microsoft.ML.MulticlassClassificationCatalog.Evaluate(IDataView data, String labelColumnName, String scoreColumnName, String predictedLabelColumnName, Int32 topKPredictionCount)\r\n   at PDCSBE.Services.Implementation.PredictionService.TrainModel() in D:\\...\\Services\\Implementation\\PredictionService.cs:line 91\r\n   at PDCSBE.Api.Controllers.PredictController.TrainModel(ModelTrainerDataInputDto input) in D:\\...\\Controllers\\PredictController.cs:line 26\r\n   at lambda_method(Closure , Object , Object[] )\r\n   at Microsoft.Extensions.Internal.ObjectMethodExecutor.Execute(Object target, Object[] parameters)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Routing.EndpointRoutingMiddleware.<Invoke>g__AwaitMatcher|8_0(EndpointRoutingMiddleware middleware, HttpContext httpContext, Task`1 matcherTask)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)\r\n\r\nHEADERS\r\n=======\r\nAccept: */*\r\nAccept-Encoding: gzip, deflate, br\r\nCache-Control: no-cache\r\nConnection: keep-alive\r\nContent-Length: 214\r\nContent-Type: application/json\r\nHost: localhost:44370\r\nUser-Agent: PostmanRuntime/7.24.1\r\nPostman-Token: ced1eca6-9e0b-4292-9887-f46a6d1c57d5\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/5113","RelatedDescription":"Open issue \"Evaluating model that loads images from disk throws an exception in ASP.NET core\" (#5113)"},{"Id":"615394321","IsPullRequest":false,"CreatedAt":"2020-05-10T13:41:21","Actor":"ddobric","Number":"5112","RawContent":null,"Title":"Training ImageClassification in parallel throws when trying to use the same WorkspacePath","State":"open","Body":"Using ImageClassification (ImageClassificationTrainer) on the machine as a job.\r\nThe job is implemented as a Azure Function, which is triggered by message in the storage queue. Every time the job receive a message the training process is calculated. The training runs for different data sets. That means, the function can observe multiple requests \r\n\r\nUnfortunately, when two training are running simultaneously on the same machine, we get following error:\r\n```\r\n\r\n2020-05-10T13:27:27  PID[11748] Information  ---> System.IO.IOException: Could not open file 'C:\\DWASFiles\\Sites\\#1prodidentweb-training-webjob\\LocalAppData\\cache\\bottleneck_train_cache.cac'. Error is: The process cannot access the file 'C:\\DWASFiles\\Sites\\#1prodidentweb-training-webjob\\LocalAppData\\cache\\bottleneck_train_cache.cac' because it is being used by another process.\r\n2020-05-10T13:27:27  PID[11748] Information  ---> System.IO.IOException: The process cannot access the file '***\\LocalAppData\\cache\\bottleneck_train_cache.cac' because it is being used by another process.\r\n2020-05-10T13:27:27  PID[11748] Information    at System.IO.FileStream.ValidateFileHandle(SafeFileHandle fileHandle)\r\n2020-05-10T13:27:27  PID[11748] Information    at System.IO.FileStream.CreateFileOpenHandle(FileMode mode, FileShare share, FileOptions options)\r\n2020-05-10T13:27:27  PID[11748] Information    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options)\r\n2020-05-10T13:27:27  PID[11748] Information    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share)\r\n2020-05-10T13:27:27  PID[11748] Information    at Microsoft.ML.Internal.Utilities.StreamUtils.OpenInStream(String fileName)\r\n2020-05-10T13:27:27  PID[11748] Information    at Microsoft.ML.Data.MultiFileSource.Open(Int32 index)\r\n2020-05-10T13:27:27  PID[11748] Information    --- End of inner exception stack trace ---\r\n```\r\n\r\nBy following the error shown above, it looks as trainer uses internal a local file(s), which should not be touched by multiple threads.\r\nI guess, this can be solved by providing a different 'WorkspacePath' for every request? In any case, such internal details, should be transparent for developers. Moreover, ML algorithms, at least in the .NET ecosystem should not internal create any kind of singleton inside of process and also machine.\r\nThis is very untypical for .NET. \r\n\r\nIn my opinion this is a not best design and it should should be fixed. ","Url":"https://github.com/dotnet/machinelearning/issues/5112","RelatedDescription":"Open issue \"Training ImageClassification in parallel throws when trying to use the same WorkspacePath\" (#5112)"},{"Id":"615265479","IsPullRequest":false,"CreatedAt":"2020-05-09T21:42:00","Actor":"ddobric","Number":"5111","RawContent":null,"Title":"Issue with image classification trainer creating files (such as TrainingSetSize.txt) on WebJobs","State":"open","Body":"Running the ML.NET image classification inside of WebJob (windows platform/.NET Core 3.1)\r\nAll works fine when executed locally. Unfortunately, when running as job it fails with the following error: \r\n\r\n> 2020-05-09T19:30:04  PID[9552] Information       The building model process has failed.\r\n> 2020-05-09T19:30:04  PID[9552] Information System.IO.FileNotFoundException: Could not find file 'C:\\DWASFiles\\Sites\\#1prodidentweb-training-webjob\\cache\\TrainingSetSize.txt'.\r\n> 2020-05-09T19:30:04  PID[9552] Information File name: 'C:\\DWASFiles\\Sites\\#1prodidentweb-training-webjob\\cache\\TrainingSetSize.txt'\r\n> 2020-05-09T19:30:04  PID[9552] Information    at System.IO.FileStream.ValidateFileHandle(SafeFileHandle fileHandle)\r\n> 2020-05-09T19:30:04  PID[9552] Information    at System.IO.FileStream.CreateFileOpenHandle(FileMode mode, FileShare share, FileOptions options)\r\n> 2020-05-09T19:30:04  PID[9552] Information    at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options)\r\n> 2020-05-09T19:30:04  PID[9552] Information    at System.IO.StreamReader.ValidateArgsAndOpenPath(String path, Encoding encoding, Int32 bufferSize)\r\n> 2020-05-09T19:30:04  PID[9552] Information    at System.IO.StreamReader..ctor(String path)\r\n> 2020-05-09T19:30:04  PID[9552] Information    at System.IO.File.OpenText(String path)\r\n> 2020-05-09T19:30:04  PID[9552] Information    at Microsoft.ML.Vision.ImageClassificationTrainer.GetNumSamples(String path)\r\n> 2020-05-09T19:30:04  PID[9552] Information    at Microsoft.ML.Vision.ImageClassificationTrainer.TrainAndEvaluateClassificationLayer(String trainBottleneckFilePath, Options options, String validationSetBottleneckFilePath, Int32 trainingsetSize)\r\n> 2020-05-09T19:30:04  PID[9552] Information    at Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n> 2020-05-09T19:30:04  PID[9552] Information    at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n> 2020-05-09T19:30:04  PID[9552] Information    at Microsoft.ML.Trainers.TrainerEstimatorBase`2.Fit(IDataView input)\r\n> 2020-05-09T19:30:04  PID[9552] Information    at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n> 2020-05-09T19:30:04  PID[9552] Information    at Microsoft.ML.TrainCatalogBase.CrossValidateTrain(IDataView data, IEstimator`1 estimator, Int32 numFolds, String samplingKeyColumn, Nullable`1 seed)\r\n> 2020-05-09T19:30:04  PID[9552] Information    at Microsoft.ML.MulticlassClassificationCatalog.CrossValidate(IDataView data, IEstimator`1 estimator, Int32 numberOfFolds, String labelColumnName, String samplingKeyColumnName, Nullable`1 seed)\r\n\r\nCreating of the text file seems not to be correctly implemented. If the path is not set to the permitted location, the required text file will not be created. In that case another error message should be created. \r\nFor example, following path is in WebJob (hosted in IIS) not allowed:\r\n\r\n`C:\\DWASFiles\\Sites\\#1prodidentweb-training-webjob`\r\n\r\nIt corresponds to %AppData% of the local machine. It is the working folder of IIS in context of an Azure Job. By changing the path to following one, all will work fine:\r\n\r\n`C:\\DWASFiles\\Sites\\#1prodidentweb-training-webjob\\Local`\r\n \r\nIn the code, this can be achieved by following:\r\n~~~\r\nWorkspacePath = Environment.GetFolderPath(Environment.SpecialFolder.LocalApplicationData),\r\n~~~\r\n\r\n### Recap\r\nTrainer creates internally many files. One of them is *TrainingSetSize.txt*. If the *options.WorkspacePath* is set to location on which the process has no write permission, the correct exception should be thrown. \r\n\r\nThis might also be a security issue is one chose path like \"WorkspacePath = \"..\\..\\xy\". That would lead the job process to touch the path, which possibly belongs to the job owned by some other customer. At the moment of writing of this, I didn't see security issue here, but who know what might happen in the future.","Url":"https://github.com/dotnet/machinelearning/issues/5111","RelatedDescription":"Open issue \"Issue with image classification trainer creating files (such as TrainingSetSize.txt) on WebJobs\" (#5111)"},{"Id":"613705654","IsPullRequest":true,"CreatedAt":"2020-05-09T07:46:45","Actor":"frank-dong-ms","Number":"5102","RawContent":null,"Title":"address TF test download fail, use resource manager with retry download","State":"closed","Body":"address below exception on OSX:\r\n\r\nX Microsoft.ML.Scenarios.TensorFlowScenariosTests.TensorFlowTransforCifarEndToEndTest2 [1ms]\r\n  Error Message:\r\n   System.Net.WebException : Device not configured Device not configured\r\n---- System.Net.Http.HttpRequestException : Device not configured\r\n-------- System.Net.Sockets.SocketException : Device not configured\r\n  Stack Trace:\r\n     at System.Net.HttpWebRequest.GetResponse()\r\n   at System.Net.WebClient.GetWebResponse(WebRequest request)\r\n   at System.Net.WebClient.DownloadBits(WebRequest request, Stream writeStream)\r\n   at System.Net.WebClient.DownloadFile(Uri address, String fileName)\r\n   at System.Net.WebClient.DownloadFile(String address, String fileName)\r\n   at Microsoft.ML.Scenarios.TensorFlowScenariosTests.Download(String url, String destDir, String destFileName) \r\n\r\n\r\naccording to below issue and suggestion (The OSX resolve seems more fragile than other implementation), we retry download:\r\nhttps://github.com/dotnet/runtime/issues/30678 ","Url":"https://github.com/dotnet/machinelearning/pull/5102","RelatedDescription":"Closed or merged PR \"address TF test download fail, use resource manager with retry download\" (#5102)"},{"Id":"614426575","IsPullRequest":true,"CreatedAt":"2020-05-09T06:39:10","Actor":"frank-dong-ms","Number":"5108","RawContent":null,"Title":"test move back to host see if still hangs","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5108","RelatedDescription":"Closed or merged PR \"test move back to host see if still hangs\" (#5108)"},{"Id":"614980242","IsPullRequest":true,"CreatedAt":"2020-05-09T05:47:37","Actor":"mstfbl","Number":"5110","RawContent":null,"Title":"Disabled BinaryClassifierSymSgdTest for test stability","State":"closed","Body":"\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5110","RelatedDescription":"Closed or merged PR \"Disabled BinaryClassifierSymSgdTest for test stability\" (#5110)"},{"Id":"613586028","IsPullRequest":true,"CreatedAt":"2020-05-09T04:54:17","Actor":"Lynx1820","Number":"5098","RawContent":null,"Title":"Adding OneHotHashEncoding Test","State":"closed","Body":"Test that uses OneHotEncoding and MurmurHash transformers\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5098","RelatedDescription":"Closed or merged PR \"Adding OneHotHashEncoding Test\" (#5098)"},{"Id":"614424101","IsPullRequest":true,"CreatedAt":"2020-05-08T00:38:22","Actor":"frank-dong-ms","Number":"5107","RawContent":null,"Title":"try use other agent pool","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5107","RelatedDescription":"Closed or merged PR \"try use other agent pool\" (#5107)"},{"Id":"614309686","IsPullRequest":true,"CreatedAt":"2020-05-07T20:02:57","Actor":"michaelgsharp","Number":"5106","RawContent":null,"Title":"added in standard conversions from types to ReadOnlyMemory<char>","State":"open","Body":"Currently in the standard transformations we don't support converting types to a string representation. Since all C# types support `ToString()` functionality, this PR adds in standard transformations to type `ReadOnlyMemory<char>` into the `TypeConvertingTransformer`.","Url":"https://github.com/dotnet/machinelearning/pull/5106","RelatedDescription":"Open PR \"added in standard conversions from types to ReadOnlyMemory<char>\" (#5106)"},{"Id":"613630404","IsPullRequest":true,"CreatedAt":"2020-05-07T17:02:29","Actor":"frank-dong-ms","Number":"5100","RawContent":null,"Title":"pipeline configuration change","State":"closed","Body":"1. make code coverage timeout to 90 minutes due to frequent timeout at code coverage pipeline\r\n2. move nightly build pipeline to netcore app agent pool as we see disk out of space error\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5100","RelatedDescription":"Closed or merged PR \"pipeline configuration change\" (#5100)"},{"Id":"614199695","IsPullRequest":false,"CreatedAt":"2020-05-07T16:47:22","Actor":"Neoplayer","Number":"5105","RawContent":null,"Title":"Regression with image","State":"closed","Body":"How to concatenate image with some Single values? I was trying to convert image to `ExtractPixels` and `LoadRawImageBytes` but I can't find any way to concatenate this with single values. ","Url":"https://github.com/dotnet/machinelearning/issues/5105","RelatedDescription":"Closed issue \"Regression with image\" (#5105)"},{"Id":"614171721","IsPullRequest":true,"CreatedAt":"2020-05-07T16:02:46","Actor":"wangyems","Number":"5104","RawContent":null,"Title":"Support more types for HashEstimator","State":"open","Body":"-Verified compatibility between ORT(https://github.com/microsoft/onnxruntime/pull/3827) and ML.NET\r\n-Some changes made in a couple of 64-bit hash function because the existed implementation is not exactly the same as MurmurHash3_x86_32\r\n-No merging until ort PR goes in and bump ort version.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5104","RelatedDescription":"Open PR \"Support more types for HashEstimator\" (#5104)"},{"Id":"613037668","IsPullRequest":true,"CreatedAt":"2020-05-07T06:19:06","Actor":"suxi-ms","Number":"5095","RawContent":null,"Title":"Suxi/no transformer","State":"closed","Body":"This is a tempory PR to review root cause analysis's implemention by using no transformer. Original one is [here](https://github.com/dotnet/machinelearning/pull/4925)\r\n\r\n\r\n- [ ] Fixes #4960 .\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5095","RelatedDescription":"Closed or merged PR \"Suxi/no transformer\" (#5095)"},{"Id":"613577783","IsPullRequest":true,"CreatedAt":"2020-05-07T00:12:44","Actor":"harishsk","Number":"5097","RawContent":null,"Title":"Changed Dictionary to ConcurrentDictionary","State":"closed","Body":"We are seeing new test failure sporadically with the following call stack:\r\n\r\n```\r\n[xUnit.net 00:00:05.18]     Microsoft.ML.Functional.Tests.Debugging.ViewTrainingOutput [FAIL]\r\n\r\n  X Microsoft.ML.Functional.Tests.Debugging.ViewTrainingOutput [16ms]\r\n  Error Message:\r\n   System.InvalidOperationException : Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.\r\n  Stack Trace:\r\n     at System.Collections.Generic.Dictionary`2.FindEntry(TKey key)\r\n   at System.Collections.Generic.Dictionary`2.ContainsKey(TKey key)\r\n   at Microsoft.ML.Functional.Tests.Debugging.LogWatcher.ObserveEvent(Object sender, LoggingEventArgs e) in /Users/runner/runners/2.166.3/work/1/s/test/Microsoft.ML.Functional.Tests/Debugging.cs:line 204\r\n   at Microsoft.ML.MLContext.ProcessMessage(IMessageSource source, ChannelMessage message) in /Users/runner/runners/2.166.3/work/1/s/src/Microsoft.ML.Data/MLContext.cs:line 135\r\n   at Microsoft.ML.Runtime.HostEnvironmentBase`1.Dispatcher`1.DispatchCore(IMessageSource sender, TMessage message) in /Users/runner/runners/2.166.3/work/1/s/src/Microsoft.ML.Core/Environment/HostEnvironmentBase.cs:line 314\r\n```\r\n\r\nSince the dictionary is being modified by multiple threads, I am changing this to a ConcurrentDictionary.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5097","RelatedDescription":"Closed or merged PR \"Changed Dictionary to ConcurrentDictionary\" (#5097)"},{"Id":"613253035","IsPullRequest":false,"CreatedAt":"2020-05-06T11:38:21","Actor":"iluveu28","Number":"5096","RawContent":null,"Title":"Add new models in prediction pool during runtime","State":"open","Body":"I have two separate .NET Core Web API projects deployed to Kubernetes as separate Docker containers. One for training and the other for predictions. The users can upload a training file into the training API to create a new model and the filename and path of the model.zip file are saved into a table in SQL Server DB and the model.zip file is saved in PersistentVolume. \r\n\r\nIn the prediction service, I create the PredictionEnginePool in ConfigureServices in Startup.cs. \r\n\r\nHow can I lookup a model by name to check if my models have been loaded into the pool and if not, how can I dynamically add the newly trained models that had just been created by the separate training API without having to restart the prediction API ? Is there any way I can do this outside of the Startup.cs e.g. in the controller so that I can take control of the pool at runtime?\r\n\r\nCan you provide sample codes that dynamically read .zip files from a folder, check if they're already in the pool and if not then add it into the prediction pool, all done inside a controller?","Url":"https://github.com/dotnet/machinelearning/issues/5096","RelatedDescription":"Open issue \"Add new models in prediction pool during runtime\" (#5096)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-05-14T05:30:37.7046135Z","RunDurationInMilliseconds":1016}