{"Data":{"GitHub":{"Issues":[{"Id":"2098961578","IsPullRequest":true,"CreatedAt":"2024-01-26T22:49:31","Actor":"zewditu","Number":"6973","RawContent":null,"Title":"Add new type to key-value converter","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6973","RelatedDescription":"Closed or merged PR \"Add new type to key-value converter\" (#6973)"},{"Id":"2101319468","IsPullRequest":true,"CreatedAt":"2024-01-25T23:16:20","Actor":"michaelgsharp","Number":"6975","RawContent":null,"Title":"Update OnnxRuntime to 1.16.3","State":"open","Body":"Updates OnnxRuntime to 1.16.3 and fixes the breaking change.","Url":"https://github.com/dotnet/machinelearning/pull/6975","RelatedDescription":"Open PR \"Update OnnxRuntime to 1.16.3\" (#6975)"},{"Id":"2101177179","IsPullRequest":true,"CreatedAt":"2024-01-25T21:11:51","Actor":"dotnet-maestro[bot]","Number":"6974","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:45c6fd49-3a4f-4675-f3da-08dc0c527e17)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 45c6fd49-3a4f-4675-f3da-08dc0c527e17\r\n- **Build**: 20240125.5\r\n- **Date Produced**: January 25, 2024 9:33:03 PM UTC\r\n- **Commit**: 07cf24f27ee58b5d1a9662334a101d84bd1e07e5\r\n- **Branch**: refs/heads/release/8.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.24059.4 to 8.0.0-beta.24075.5][7]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 8.0.0-beta.24059.4 to 8.0.0-beta.24075.5][7]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.24059.4 to 8.0.0-beta.24075.5][7]\r\n  - **Microsoft.DotNet.SignTool**: [from 8.0.0-beta.24059.4 to 8.0.0-beta.24075.5][7]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 8.0.0-beta.24059.4 to 8.0.0-beta.24075.5][7]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.24059.4 to 8.0.0-beta.24075.5][7]\r\n\r\n[7]: https://github.com/dotnet/arcade/compare/61ae141d2b...07cf24f27e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:45c6fd49-3a4f-4675-f3da-08dc0c527e17)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6974","RelatedDescription":"Open PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#6974)"},{"Id":"2089977739","IsPullRequest":false,"CreatedAt":"2024-01-25T10:50:56","Actor":"gijs-koehorst","Number":"6966","RawContent":null,"Title":"LightGBM.Fit() exits with 139 on osx-arm64","State":"closed","Body":"**System Information:**\r\n - OS & Version: MacOS (M3) Sonoma 14.2.1\r\n - ML.NET Version: ML.NET 3.0.1\r\n - .NET Version: 7.0\r\n - ML.LightGbm 3.0.1\r\n - LightGBM 4.2.0\r\n\r\n**Describe the bug**\r\nML.LightGBM by default does not include a binary for osx-arm64. To circumvent this we manually built a `lib_lightgbm.dylib` binary for arm and copied it to `/bin/Debug/net7.0/runtimes/osx-arm64/native`. This worked for ML.NET 2.0.0 and ML.LightGBM 2.0.0. However, after upgrading to the above versions and manually adding the `lib_lightgbm.dylib` of LightGBM 4.2.0, calling `BinaryClassificationModel.Trainers.LightGbm.Fit()` exits with exit code 139 without any error message. \r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Add `lib_lightgbm.dylib` of LightGBM 4.2.0 to `/bin/Debug/net7.0/runtimes/osx-arm64/native`\r\n2. Create a `BinaryClassificationModel.Trainers.LightGbm`\r\n3. Call `Fit()` with some data\r\n\r\n**Expected behavior**\r\nI would expect the LightGBM model to simply train on the data.","Url":"https://github.com/dotnet/machinelearning/issues/6966","RelatedDescription":"Closed issue \"LightGBM.Fit() exits with 139 on osx-arm64\" (#6966)"},{"Id":"2093939435","IsPullRequest":true,"CreatedAt":"2024-01-24T21:14:24","Actor":"dotnet-maestro[bot]","Number":"6969","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 97926d79-6b8b-4d32-c8db-08d9d479971c\r\n- **Build**: 20240119.2\r\n- **Date Produced**: January 19, 2024 1:45:17 PM UTC\r\n- **Commit**: abddd0bd5145578246dcadda264c7557f2a935a9\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.24062.5 to 9.0.0-beta.24069.2][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 9.0.0-beta.24062.5 to 9.0.0-beta.24069.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.24062.5 to 9.0.0-beta.24069.2][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 9.0.0-beta.24062.5 to 9.0.0-beta.24069.2][1]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 9.0.0-beta.24062.5 to 9.0.0-beta.24069.2][1]\r\n  - **Microsoft.DotNet.XliffTasks**: [from 9.0.0-beta.24062.5 to 9.0.0-beta.24069.2][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.24062.5 to 9.0.0-beta.24069.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/d731f58a50...abddd0bd51\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6969","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6969)"},{"Id":"2097218157","IsPullRequest":false,"CreatedAt":"2024-01-24T00:51:59","Actor":"michaelgsharp","Number":"6972","RawContent":null,"Title":"SymSgdNative depends on libiomp and libiomp5 in linux-x64","State":"open","Body":"It should only depend on libiomp5 for linux-x64. Will need to adjust the native linux build to fix that.","Url":"https://github.com/dotnet/machinelearning/issues/6972","RelatedDescription":"Open issue \"SymSgdNative depends on libiomp and libiomp5 in linux-x64\" (#6972)"},{"Id":"2097111953","IsPullRequest":false,"CreatedAt":"2024-01-23T22:45:42","Actor":"ericstj","Number":"6971","RawContent":null,"Title":"SqlException Timeout when running DatabaseLoaderTests","State":"open","Body":"## Build Information\r\nBuild: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=537554\r\nBuild error leg or test failing: Microsoft.ML.Tests.DatabaseLoaderTests.IrisLightGbmWithLoadColumnName\r\nPull request: N/A\r\n<!-- Error message template  -->\r\n## Error Message\r\n\r\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssues.md#how-to-fill-out-a-known-issue-error-section).\r\n\r\n<!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. -->\r\n\r\n```json\r\n{\r\n  \"ErrorMessage\": \"System.Data.SqlClient.SqlException : Connection Timeout Expired.  The timeout period elapsed while attempting to consume the pre-login handshake acknowledgement.  This could be because the pre-login handshake failed or the server was unable to respond back in time.\",\r\n  \"ErrorPattern\": \"\",\r\n  \"BuildRetry\": false,\r\n  \"ExcludeConsoleLog\": true\r\n}\r\n```\r\n\r\nException:\r\n> System.Data.SqlClient.SqlException : Connection Timeout Expired.  The timeout period elapsed while attempting to consume the pre-login handshake acknowledgement.  This could be because the pre-login handshake failed or the server was unable to respond back in time.  The duration spent while attempting to connect to this server was - [Pre-Login] initialization=149012; handshake=16; \\r\\n---- System.ComponentModel.Win32Exception : The wait operation timed out.\r\n\r\n\r\n<!-- Known issue validation start -->\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=537554\r\n**Error message validated:** `System.Data.SqlClient.SqlException : Connection Timeout Expired.  The timeout period elapsed while attempting to consume the pre-login handshake acknowledgement.  This could be because the pre-login handshake failed or the server was unable to respond back in time.`\r\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\r\n**Validation performed at:** 1/23/2024 10:45:57 PM UTC\r\n<!-- Known issue validation end -->\r\n<!--Known issue error report start -->\r\n### Report\r\n\r\n|Build|Definition|Test|Pull Request|\r\n|---|---|---|---|\r\n|[541238](https://dev.azure.com/dnceng-public/public/_build/results?buildId=541238)|dotnet/machinelearning|[Microsoft.ML.Tests.DatabaseLoaderTests.IrisVectorLightGbmWithLoadColumnName](https://dev.azure.com/dnceng-public/public/_build/results?buildId=541238&view=ms.vss-test-web.build-test-results-tab&runId=12823196&resultId=101427)|dotnet/machinelearning#6975|\r\n|[539475](https://dev.azure.com/dnceng-public/public/_build/results?buildId=539475)|dotnet/machinelearning|[Microsoft.ML.Tests.DatabaseLoaderTests.IrisVectorLightGbmWithLoadColumnName](https://dev.azure.com/dnceng-public/public/_build/results?buildId=539475&view=ms.vss-test-web.build-test-results-tab&runId=12775058&resultId=101449)||\r\n|[537554](https://dev.azure.com/dnceng-public/public/_build/results?buildId=537554)|dotnet/machinelearning|[Microsoft.ML.Tests.DatabaseLoaderTests.IrisVectorLightGbmWithLoadColumnName](https://dev.azure.com/dnceng-public/public/_build/results?buildId=537554&view=ms.vss-test-web.build-test-results-tab&runId=12716992&resultId=101492)||\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|3|3|\r\n<!--Known issue error report end -->","Url":"https://github.com/dotnet/machinelearning/issues/6971","RelatedDescription":"Open issue \"SqlException Timeout when running DatabaseLoaderTests\" (#6971)"},{"Id":"2091233934","IsPullRequest":true,"CreatedAt":"2024-01-23T17:32:40","Actor":"michaelgsharp","Number":"6968","RawContent":null,"Title":"Testing light gbm bad allocation","State":"closed","Body":"Changes some of the LightGBM tests to run sequentially to try and fix the bad allocation issue.\r\n\r\nThis is in regards to issue #6961. I'll leave that issue open so we can continue to monitor after this goes in.","Url":"https://github.com/dotnet/machinelearning/pull/6968","RelatedDescription":"Closed or merged PR \"Testing light gbm bad allocation\" (#6968)"},{"Id":"2094297910","IsPullRequest":true,"CreatedAt":"2024-01-23T03:50:08","Actor":"ericstj","Number":"6970","RawContent":null,"Title":"Update branding for 3.0.2","State":"closed","Body":"As soon as we finish a servicing release we should update the version to prepare for the next release.","Url":"https://github.com/dotnet/machinelearning/pull/6970","RelatedDescription":"Closed or merged PR \"Update branding for 3.0.2\" (#6970)"},{"Id":"2091230244","IsPullRequest":true,"CreatedAt":"2024-01-22T16:27:42","Actor":"github-actions[bot]","Number":"6967","RawContent":null,"Title":"[release/3.0] Update .NET Runtimes to latest version","State":"closed","Body":"Backport of #6964 to release/3.0\r\n\r\n/cc @ericstj\r\n\r\nTest only infrastructure change.","Url":"https://github.com/dotnet/machinelearning/pull/6967","RelatedDescription":"Closed or merged PR \"[release/3.0] Update .NET Runtimes to latest version\" (#6967)"},{"Id":"2089855947","IsPullRequest":true,"CreatedAt":"2024-01-19T19:36:36","Actor":"zewditu","Number":"6965","RawContent":null,"Title":"Add sweepable estimator  to NER","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6965","RelatedDescription":"Closed or merged PR \"Add sweepable estimator  to NER\" (#6965)"},{"Id":"2089338079","IsPullRequest":true,"CreatedAt":"2024-01-19T19:32:29","Actor":"ericstj","Number":"6964","RawContent":null,"Title":"Update .NET Runtimes to latest version","State":"closed","Body":"This version is used for testing and needs to be kept up-to-date with latest.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6964","RelatedDescription":"Closed or merged PR \"Update .NET Runtimes to latest version\" (#6964)"},{"Id":"2088799591","IsPullRequest":true,"CreatedAt":"2024-01-18T20:20:41","Actor":"github-actions[bot]","Number":"6963","RawContent":null,"Title":"[release/3.0] Added in release notes for 3.0.1","State":"closed","Body":"Backport of #6962 to release/3.0\r\n\r\n/cc @michaelgsharp\r\n\r\n## Customer Impact\r\nNone, just release note documentation.\r\n\r\n## Testing\r\nNone, just a documentation file change.\r\n\r\n## Risk\r\nNone, just a documentation file change.","Url":"https://github.com/dotnet/machinelearning/pull/6963","RelatedDescription":"Closed or merged PR \"[release/3.0] Added in release notes for 3.0.1\" (#6963)"},{"Id":"2074794556","IsPullRequest":true,"CreatedAt":"2024-01-18T18:01:05","Actor":"dotnet-maestro[bot]","Number":"6952","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:45c6fd49-3a4f-4675-f3da-08dc0c527e17)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 45c6fd49-3a4f-4675-f3da-08dc0c527e17\r\n- **Build**: 20240109.4\r\n- **Date Produced**: January 9, 2024 10:20:28 PM UTC\r\n- **Commit**: 61ae141d2bf3534619265c8f691fd55dc3e75147\r\n- **Branch**: refs/heads/release/8.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23620.2 to 8.0.0-beta.24059.4][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 8.0.0-beta.23620.2 to 8.0.0-beta.24059.4][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23620.2 to 8.0.0-beta.24059.4][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 8.0.0-beta.23620.2 to 8.0.0-beta.24059.4][1]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 8.0.0-beta.23620.2 to 8.0.0-beta.24059.4][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23620.2 to 8.0.0-beta.24059.4][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/8412932517...61ae141d2b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates tools.dotnet to 8.0.101\r\n\r\n[marker]: <> (End:45c6fd49-3a4f-4675-f3da-08dc0c527e17)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6952","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#6952)"},{"Id":"2088761085","IsPullRequest":true,"CreatedAt":"2024-01-18T18:00:07","Actor":"michaelgsharp","Number":"6962","RawContent":null,"Title":"Added in release notes for 3.0.1","State":"closed","Body":"Adding in release notes for 3.0.1","Url":"https://github.com/dotnet/machinelearning/pull/6962","RelatedDescription":"Closed or merged PR \"Added in release notes for 3.0.1\" (#6962)"},{"Id":"2087218394","IsPullRequest":false,"CreatedAt":"2024-01-18T00:05:53","Actor":"ericstj","Number":"6961","RawContent":null,"Title":"Microsoft.ML.Tests crashing after `[LightGBM] [Warning] bad allocation`","State":"open","Body":"## Build Information\r\nBuild: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=530980\r\nBuild error leg or test failing: Microsoft.ML.Tests.WorkItemExecution\r\nRolling build\r\n\r\n<!-- Error message template  -->\r\n## Error Message\r\n\r\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssues.md#how-to-fill-out-a-known-issue-error-section).\r\n\r\n<!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. -->\r\n\r\n```json\r\n{\r\n  \"ErrorMessage\": \"[LightGBM] [Warning] bad allocation\",\r\n  \"ErrorPattern\": \"\",\r\n  \"BuildRetry\": false,\r\n  \"ExcludeConsoleLog\": false\r\n}\r\n```\r\n\r\nFailing log: \r\n[https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-machinelearning-refs-heads-main-ceec46ab558849c4a3/Microsoft.ML.Tests/1/console.b4e5afef.log?helixlogtype=result](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-machinelearning-refs-heads-main-ceec46ab558849c4a3/Microsoft.ML.Tests/1/console.b4e5afef.log?helixlogtype=result)\r\n\r\nDump: https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-machinelearning-refs-heads-main-ceec46ab558849c4a3/Microsoft.ML.Tests/1/xunit.console.exe.5364.dmp?helixlogtype=result\r\n\r\nSample log spew before the crash:\r\n```\r\nStarting test: Microsoft.ML.Tests.OnnxConversionTest.NonDefaultColNamesBinaryClassificationOnnxConversionTest\r\n[LightGBM] [Warning] bad allocation\r\n[LightGBM] [Warning] bad allocation\r\n...\r\n\r\nC:\\h\\w\\B7EB099A\\w\\9FF809A0\\e>set _commandExitCode=-1073740940\r\n```\r\n\r\nWill have a look at the dump to see if there's more information about the test that was running when this happened.\r\n<!-- Known issue validation start -->\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=530980\r\n**Error message validated:** `[LightGBM] [Warning] bad allocation`\r\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\r\n**Validation performed at:** 1/18/2024 12:06:13 AM UTC\r\n<!-- Known issue validation end -->\r\n<!--Known issue error report start -->\r\n### Report\r\n\r\n|Build|Definition|Test|Pull Request|\r\n|---|---|---|---|\r\n|[541070](https://dev.azure.com/dnceng-public/public/_build/results?buildId=541070)|dotnet/machinelearning|[Microsoft.ML.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=541070&view=ms.vss-test-web.build-test-results-tab&runId=12814840&resultId=101439)|dotnet/machinelearning#6974|\r\n|[537526](https://dev.azure.com/dnceng-public/public/_build/results?buildId=537526)|dotnet/machinelearning|[Microsoft.ML.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=537526&view=ms.vss-test-web.build-test-results-tab&runId=12712162&resultId=100809)|dotnet/machinelearning#6969|\r\n|[535806](https://dev.azure.com/dnceng-public/public/_build/results?buildId=535806)|dotnet/machinelearning|[Microsoft.ML.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=535806&view=ms.vss-test-web.build-test-results-tab&runId=12662582&resultId=101439)||\r\n|[533766](https://dev.azure.com/dnceng-public/public/_build/results?buildId=533766)|dotnet/machinelearning|[Microsoft.ML.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=533766&view=ms.vss-test-web.build-test-results-tab&runId=12600162&resultId=100905)|dotnet/machinelearning#6967|\r\n|[533000](https://dev.azure.com/dnceng-public/public/_build/results?buildId=533000)|dotnet/machinelearning|[Microsoft.ML.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=533000&view=ms.vss-test-web.build-test-results-tab&runId=12578182&resultId=101382)|dotnet/machinelearning#6965|\r\n|[532248](https://dev.azure.com/dnceng-public/public/_build/results?buildId=532248)|dotnet/machinelearning|[Microsoft.ML.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=532248&view=ms.vss-test-web.build-test-results-tab&runId=12556412&resultId=101439)|dotnet/machinelearning#6963|\r\n|[530980](https://dev.azure.com/dnceng-public/public/_build/results?buildId=530980)|dotnet/machinelearning|[Microsoft.ML.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=530980&view=ms.vss-test-web.build-test-results-tab&runId=12523138&resultId=100376)||\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|3|7|\r\n<!--Known issue error report end -->","Url":"https://github.com/dotnet/machinelearning/issues/6961","RelatedDescription":"Open issue \"Microsoft.ML.Tests crashing after `[LightGBM] [Warning] bad allocation`\" (#6961)"},{"Id":"2087180908","IsPullRequest":false,"CreatedAt":"2024-01-17T23:27:52","Actor":"michaelgsharp","Number":"6960","RawContent":null,"Title":"AccessViolationException when running Microsoft.ML.Scenarios.ScenariosTests.TestRegressionScenario","State":"open","Body":"## Build Information\r\nBuild: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=529419\r\nBuild error leg or test failing: Microsoft.ML.Tests.WorkItemExecution\r\nPull request: https://github.com/dotnet/machinelearning/pull/6954\r\n<!-- Error message template  -->\r\n## Error Message\r\n\r\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssues.md#how-to-fill-out-a-known-issue-error-section).\r\n\r\n<!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. -->\r\n\r\n```json\r\n{\r\n  \"ErrorMessage\": \"Microsoft.ML.Trainers.SdcaTrainerBase`3.TrainWithoutLock\",\r\n  \"ErrorPattern\": \"\",\r\n  \"BuildRetry\": false,\r\n  \"ExcludeConsoleLog\": false\r\n}\r\n```\r\nTest is failing with the following exception.\r\n[https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-machinelearning-refs-pull-6954-merge-cc648714fbed40e1bb/Microsoft.ML.Tests/1/console.34966131.log?helixlogtype=result](https://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-machinelearning-refs-pull-6954-merge-cc648714fbed40e1bb/Microsoft.ML.Tests/1/console.34966131.log?helixlogtype=result)\r\n\r\n```\r\nStarting test: Microsoft.ML.Scenarios.ScenariosTests.TestRegressionScenario\r\n\r\nUnhandled Exception: System.AccessViolationException: Attempted to read or write protected memory. This is often an indication that other memory is corrupt.\r\n   at System.Numerics.Tensors.TensorPrimitives.<Aggregate>g__Vectorized|53_1[TBinaryOperator,TAggregationOperator](Single& xRef, Single& yRef, UIntPtr remainder, TBinaryOperator binaryOp, TAggregationOperator aggregationOp)\r\n   at System.Numerics.Tensors.TensorPrimitives.Aggregate[TBinaryOperator,TAggregationOperator](ReadOnlySpan`1 x, ReadOnlySpan`1 y, TBinaryOperator binaryOp, TAggregationOperator aggregationOp)\r\n   at System.Numerics.Tensors.TensorPrimitives.Dot(ReadOnlySpan`1 x, ReadOnlySpan`1 y)\r\n   at Microsoft.ML.Internal.CpuMath.CpuMathUtils.DotProductDense(ReadOnlySpan`1 left, ReadOnlySpan`1 right, Int32 count) in D:\\a\\_work\\1\\s\\src\\Microsoft.ML.CpuMath\\CpuMathUtils.cs:line 194\r\n   at Microsoft.ML.Numeric.VectorUtils.DotProduct(VBuffer`1& a, VBuffer`1& b) in D:\\a\\_work\\1\\s\\src\\Microsoft.ML.Data\\Depricated\\Vector\\VectorUtils.cs:line 53\r\n   at Microsoft.ML.Trainers.SdcaTrainerBase`3.WDot(VBuffer`1& features, VBuffer`1& weights, Single bias) in D:\\a\\_work\\1\\s\\src\\Microsoft.ML.StandardTrainers\\Standard\\SdcaBinary.cs:line 319\r\n   at Microsoft.ML.Trainers.SdcaTrainerBase`3.TrainWithoutLock(IProgressChannelProvider progress, Factory cursorFactory, Random rand, IdToIdxLookup idToIdx, Int32 numThreads, DualsTableBase duals, Single[] biasReg, Single[] invariants, Single lambdaNInv, VBuffer`1[] weights, Single[] biasUnreg, VBuffer`1[] l1IntermediateWeights, Single[] l1IntermediateBias, Single[] featureNormSquared) in D:\\a\\_work\\1\\s\\src\\Microsoft.ML.StandardTrainers\\Standard\\SdcaBinary.cs:line 839\r\n   at Microsoft.ML.Trainers.SdcaTrainerBase`3.<>c__DisplayClass13_3.<TrainCore>b__5(Int32 j) in D:\\a\\_work\\1\\s\\src\\Microsoft.ML.StandardTrainers\\Standard\\SdcaBinary.cs:line 639\r\n   at System.Threading.Tasks.Parallel.<>c__DisplayClass17_0`1.<ForWorker>b__1()\r\n   at System.Threading.Tasks.Task.InnerInvokeWithArg(Task childTask)\r\n   at System.Threading.Tasks.Task.<>c__DisplayClass176_0.<ExecuteSelfReplicating>b__0(Object )\r\n   at System.Threading.Tasks.Task.Execute()\r\n   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)\r\n   at System.Threading.Tasks.Task.ExecuteEntry(Boolean bPreventDoubleExecution)\r\n   at System.Threading.ThreadPoolWorkQueue.Dispatch()\r\n```\r\n<!--Known issue error report start -->\r\n### Report\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|0|0|\r\n<!--Known issue error report end -->","Url":"https://github.com/dotnet/machinelearning/issues/6960","RelatedDescription":"Open issue \"AccessViolationException when running Microsoft.ML.Scenarios.ScenariosTests.TestRegressionScenario\" (#6960)"},{"Id":"2082058236","IsPullRequest":true,"CreatedAt":"2024-01-17T21:51:50","Actor":"dotnet-maestro[bot]","Number":"6957","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 97926d79-6b8b-4d32-c8db-08d9d479971c\r\n- **Build**: 20240112.5\r\n- **Date Produced**: January 12, 2024 10:34:01 PM UTC\r\n- **Commit**: d731f58a502086842739a358ab490bec08fdb8a7\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.23628.1 to 9.0.0-beta.24062.5][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 9.0.0-beta.23628.1 to 9.0.0-beta.24062.5][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.23628.1 to 9.0.0-beta.24062.5][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 9.0.0-beta.23628.1 to 9.0.0-beta.24062.5][1]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 9.0.0-beta.23628.1 to 9.0.0-beta.24062.5][1]\r\n  - **Microsoft.DotNet.XliffTasks**: [from 9.0.0-beta.23628.1 to 9.0.0-beta.24062.5][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.23628.1 to 9.0.0-beta.24062.5][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/9e5fd26c0d...d731f58a50\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6957","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6957)"},{"Id":"2085343597","IsPullRequest":true,"CreatedAt":"2024-01-17T18:57:39","Actor":"github-actions[bot]","Number":"6958","RawContent":null,"Title":"[release/3.0] Torch sharp version updates and test fixes","State":"closed","Body":"Backport of #6954 to release/3.0\r\n\r\n/cc @michaelgsharp\r\n\r\n## Customer Impact\r\nThe older version of TorchSharp has a bug when a TorchSharp model is cleared with a finalizer. Updating to the latest version of TorchSharp resolves this issue.\r\n\r\n## Testing\r\nAll CI tests as well as full test passes of the large/full datatest were run to validate this.\r\n\r\n## Risk\r\nLow-Mid. This is a dependency update and that always has a bit of risk.","Url":"https://github.com/dotnet/machinelearning/pull/6958","RelatedDescription":"Closed or merged PR \"[release/3.0] Torch sharp version updates and test fixes\" (#6958)"},{"Id":"2086430791","IsPullRequest":false,"CreatedAt":"2024-01-17T15:26:57","Actor":"amirvenus","Number":"6959","RawContent":null,"Title":"[Enhancement] support Apple's SoC GPU M1/M2/M3","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nI'm always frustrated when I hear that despite the portability of dotnet and availability of large amounts of GPU memory thanks to recent Apple SoC machines, ml.net only support nvidia GPUs\r\n\r\n**Describe the solution you'd like**\r\nSupport for Apple's SoC integrated GPU in M series \r\n\r\n**Describe alternatives you've considered**\r\nThere is currently no other viable dotnet alternative \r\n\r\n**Additional context**\r\nOpen source models such as Ollama and Mistral can be loaded on the Apple's SoC GPU so it would be great to add support for Apple's GPU (i.e. Metal, etc.) and/or the neural's engine \r\n","Url":"https://github.com/dotnet/machinelearning/issues/6959","RelatedDescription":"Open issue \"[Enhancement] support Apple's SoC GPU M1/M2/M3\" (#6959)"},{"Id":"2080059395","IsPullRequest":true,"CreatedAt":"2024-01-17T03:59:18","Actor":"michaelgsharp","Number":"6954","RawContent":null,"Title":"Torch sharp version updates and test fixes","State":"closed","Body":"This PR updates the version of TorchSharp to the latest version to take advantage of some of the bug fixes it has that have been reported to us by some of our users.\r\n\r\nIt also fixes some test issues (makes the memory intensive ones actually run sequentially, they weren't doing it correctly before), and fixes the test namespace in the new test projects.","Url":"https://github.com/dotnet/machinelearning/pull/6954","RelatedDescription":"Closed or merged PR \"Torch sharp version updates and test fixes\" (#6954)"},{"Id":"2081036913","IsPullRequest":false,"CreatedAt":"2024-01-15T00:33:05","Actor":"jackpotcityco","Number":"6956","RawContent":null,"Title":"How much faster could this GPU be on AutoML \"BinaryClassificationExperiment\" than this CPU","State":"open","Body":"Hello!\r\n\r\nI have a question about if GPU is supported for AutoML \"BinaryClassificationExperiment\" as seen in my code below.\r\n\r\nIf so, I wonder in general to get a rough idéa how much faster for example below GPU would be. Notice that I would run the experiment on a dataset with more than 200,000 rows and 100 columns as Training Data. So it is long training times like 20 minutes or longer.\r\n**(I just took this GPU as an example. If there is better GPUs to use, where I also are interested to use many GPUs as a cluster. Please advice me on that. I would be more than happy)**\r\n\r\n_Memory Type: GDDR6X\r\nChipset/GPU Model: NVIDIA GeForce RTX 3090\r\nMemory Size: 24 GB_\r\n\r\nCompared to if the experiment would run on my current CPU which is:\r\n\r\n_i7 - 12800h\r\nTotal Cores 14\r\nPerformance-cores 6\r\nEfficient-cores 8\r\nTotal Threads 20\r\nMax Turbo Frequency 4.80 GHz\r\nIntel® Turbo Boost Max Technology 3.0 Frequency ‡ 4.80 GHz\r\nPerformance-core Max Turbo Frequency 4.80 GHz\r\nEfficient-core Max Turbo Frequency 3.70 GHz\r\nCache 24 MB Intel® Smart Cache_\r\n\r\nI use: 32 GB RAM\r\n```\r\nvar experiment = mlContext.Auto().CreateBinaryClassificationExperiment(new BinaryExperimentSettings\r\n                {\r\n                    MaxExperimentTimeInSeconds = 1000,\r\n                    CacheBeforeTrainer = CacheBeforeTrainer.On,\r\n                    MaximumMemoryUsageInMegaByte = 8192, \r\n                    OptimizingMetric = BinaryClassificationMetric.PositivePrecision\r\n                });\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/6956","RelatedDescription":"Open issue \"How much faster could this GPU be on AutoML \"BinaryClassificationExperiment\" than this CPU\" (#6956)"},{"Id":"2080571988","IsPullRequest":false,"CreatedAt":"2024-01-14T04:05:08","Actor":"tianweimol","Number":"6955","RawContent":null,"Title":"Generative Adversarial Network","State":"open","Body":"how can i use GAN(Generative Adversarial Network) by ml.net\r\nthanks for your answer","Url":"https://github.com/dotnet/machinelearning/issues/6955","RelatedDescription":"Open issue \"Generative Adversarial Network\" (#6955)"},{"Id":"2075249680","IsPullRequest":true,"CreatedAt":"2024-01-13T04:12:00","Actor":"github-actions[bot]","Number":"6953","RawContent":null,"Title":"[release/3.0] fix #6949","State":"closed","Body":"Backport of #6951 to release/3.0\r\n\r\n/cc @michaelgsharp @LittleLittleCloud\r\n\r\n## Customer Impact\r\nThere is no workaround an end user could do to avoid this issue if they do hit it.\r\n\r\n## Testing\r\nThis exposed a testing hole that we have. We are going to add in \"package testing\" in order to catch situations like this before they are released.\r\n\r\n## Risk\r\nMid level risk. We are adding a new public type that could potentially have collisions with user.","Url":"https://github.com/dotnet/machinelearning/pull/6953","RelatedDescription":"Closed or merged PR \"[release/3.0] fix #6949\" (#6953)"},{"Id":"2072809789","IsPullRequest":false,"CreatedAt":"2024-01-10T20:02:32","Actor":"ericstj","Number":"6949","RawContent":null,"Title":"Microsoft.ML.StandardTrainers references Microsoft.ML.SearchSpace but it's not included in Microsoft.ML package","State":"closed","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Any\r\n - ML.NET Version: 3.0\r\n - .NET Version: Any\r\n\r\n**Describe the bug**\r\nMicrosoft.ML.StandardTrainers.dll references Microsoft.ML.SearchSpace.dll but the latter is not included in the Microsoft.ML package, but the Microsoft.ML.AutoML package.\r\n\r\nI haven't noticed any side-effects from this _yet_ since the usage of Microsoft.ML.SearchSpace is only in attributes, but it's possible that anything trying to enumerate other attributes on these types would see `FileLoadException`s.\r\n\r\nI discussed it with @LittleLittleCloud and suggested a couple options, _if_ we decide we need to fix this.\r\n1. Just include Microsoft.ML.SearchSpace.dll in Microsoft.ML.  While this is possible it may add dependencies to Microsoft.ML - one in particular is `System.Text.Json` which may be odd next to `Newtonsoft.Json` which it already references.  Eventually we should try to move away from Newtonsoft to STJ, but that's not planned yet.\r\n2. Refactor the implementation of the attributes in SearchSpace to be pure attributes that merely expose their parameters (see [guidelines](https://learn.microsoft.com/en-us/dotnet/standard/design-guidelines/attributes) for inspiration) and typeforward those down into Microsoft.ML.Core without any of the options types they internally reference.","Url":"https://github.com/dotnet/machinelearning/issues/6949","RelatedDescription":"Closed issue \"Microsoft.ML.StandardTrainers references Microsoft.ML.SearchSpace but it's not included in Microsoft.ML package\" (#6949)"},{"Id":"2073393450","IsPullRequest":true,"CreatedAt":"2024-01-10T20:02:31","Actor":"LittleLittleCloud","Number":"6951","RawContent":null,"Title":"fix #6949","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\nFix #6949 ","Url":"https://github.com/dotnet/machinelearning/pull/6951","RelatedDescription":"Closed or merged PR \"fix #6949\" (#6951)"},{"Id":"2072907915","IsPullRequest":true,"CreatedAt":"2024-01-10T17:10:10","Actor":"michaelgsharp","Number":"6950","RawContent":null,"Title":"[release/3.0] Split out non concurrent test collections.","State":"closed","Body":"Backport of #6937 to release/3.0. Fixed version of closed pr #6947\r\n\r\n/cc @michaelgsharp\r\n\r\n## Customer Impact\r\nImproves the testing process for PR's to better facilitate us getting PR's out.\r\n\r\n## Testing\r\nAll tests pass with new changes and only test assemblies are changed.\r\n\r\n## Risk\r\nNone, only test assemblies are changed.","Url":"https://github.com/dotnet/machinelearning/pull/6950","RelatedDescription":"Closed or merged PR \"[release/3.0] Split out non concurrent test collections.\" (#6950)"},{"Id":"2071444731","IsPullRequest":true,"CreatedAt":"2024-01-09T17:09:41","Actor":"github-actions[bot]","Number":"6947","RawContent":null,"Title":"[release/3.0] Split out non concurrent test collections.","State":"closed","Body":"Backport of #6937 to release/3.0\r\n\r\n/cc @michaelgsharp\r\n\r\n## Customer Impact\r\nImproves the testing process for PR's to better facilitate us getting PR's out.\r\n\r\n## Testing\r\nAll tests pass with new changes and only test assemblies are changed.\r\n\r\n## Risk\r\nNone, only test assemblies are changed.","Url":"https://github.com/dotnet/machinelearning/pull/6947","RelatedDescription":"Closed or merged PR \"[release/3.0] Split out non concurrent test collections.\" (#6947)"},{"Id":"2072268420","IsPullRequest":false,"CreatedAt":"2024-01-09T12:20:24","Actor":"boneatjp","Number":"6948","RawContent":null,"Title":"large models loading with mlcontext.model.load ends up OutOfMemoryException","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11 Pro 23H2 64GB RAM\r\n - ML.NET Version: Microsoft.ML Ver3.0.0, Microosft.ML.AutoML Ver0.21.0\r\n - .NET Version: .NET 8\r\n\r\n**Describe the bug**\r\nWhen loading models which size are over 100MB, mlcontext.model.load throws Exception.\r\n\r\nViewing stack tace,  'System.Reflection.TargetInvocationException' (Microsoft.ML.Core.dll)\r\n\r\nSystem.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.\r\n ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.\r\n ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.\r\n ---> System.OutOfMemoryException: Exception of type 'System.OutOfMemoryException' was thrown.\r\n\r\n**Additional context**\r\nWhen loading models which size are less than 100MB, no problem.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6948","RelatedDescription":"Open issue \"large models loading with mlcontext.model.load ends up OutOfMemoryException\" (#6948)"},{"Id":"2071340434","IsPullRequest":true,"CreatedAt":"2024-01-09T00:45:32","Actor":"github-actions[bot]","Number":"6946","RawContent":null,"Title":"[release/3.0] Fixes NER to correctly expand/shrink the labels","State":"closed","Body":"Backport of #6928 to release/3.0\r\n\r\n/cc @michaelgsharp\r\n\r\n## Customer Impact\r\nInitially, when a work was split into multiple tokens, the user had to figure that out and expand the labels as well. This PR fixes that by auto expanding/contracting the labels as needed.\r\n\r\n## Testing\r\nThere are automated tests that have examples that were problematic during testing, as well as a complete run was done on a GPU machine (75k lines in the test file).\r\n\r\n## Risk\r\nWith the automated tests and full GPU machine test run, minimal to no risk.","Url":"https://github.com/dotnet/machinelearning/pull/6946","RelatedDescription":"Closed or merged PR \"[release/3.0] Fixes NER to correctly expand/shrink the labels\" (#6946)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-01-29T03:30:15.5550945Z","RunDurationInMilliseconds":419}