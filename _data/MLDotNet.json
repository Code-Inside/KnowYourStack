{"Data":{"GitHub":{"Issues":[{"Id":"2553951619","IsPullRequest":false,"CreatedAt":"2024-09-28T02:02:59","Actor":"YoungYuFlex","Number":"7249","RawContent":null,"Title":"Error inferring columns with AutoML in Blazor WASM","State":"open","Body":"I am trying to use AutoML in Blazor WASM and I am receiving this error message no matter what data source file I am using:Â \r\n`Unable to split the file provided into multiple, consistent columns. Readable formats include delimited files such as CSV/TSV. Check for a consistent number of columns and proper escaping and quoting.`\r\n\r\nI tried different csv/tsv files and same error everytime. I also tried basically same code and same data file running in a console application and it worked fine.\r\nAnd I also tried downloading the file after uploading it, and examined it in vscode, nothing seemed to be wrong, no issue for linebreaking...\r\n\r\nThis is my code and the error is popping when trying to infercolumns...\r\n```\r\npublic async Task LoadFiles(InputFileChangeEventArgs e)\r\n{\r\n    var file = e.File;\r\n    var fileName = file.Name;\r\n    \r\n    // Saving file\r\n    await using FileStream fs = new(fileName, FileMode.Create);\r\n    await file.OpenReadStream(1024*1024*1024).CopyToAsync(fs);\r\n    \r\n    // Initialize MLContext\r\n    MLContext ctx = new MLContext();\r\n\r\n    // Define data path\r\n    var dataPath = Path.GetFullPath(fileName);\r\n\r\n    // Infer column information\r\n    ColumnInferenceResults columnInference = ctx.Auto().InferColumns(\r\n        dataPath,\r\n        labelColumnIndex: 0,\r\n        hasHeader: true,\r\n        // separatorChar: ',',\r\n        groupColumns: false,\r\n        allowQuoting: true,\r\n        trimWhitespace: true\r\n    );\r\n}\r\n```\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/7249","RelatedDescription":"Open issue \"Error inferring columns with AutoML in Blazor WASM\" (#7249)"},{"Id":"2553873915","IsPullRequest":true,"CreatedAt":"2024-09-27T23:18:43","Actor":"tarekgh","Number":"7248","RawContent":null,"Title":"Move the Tokenizer's data into separate packages.","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/7248","RelatedDescription":"Open PR \"Move the Tokenizer's data into separate packages.\" (#7248)"},{"Id":"2553275147","IsPullRequest":true,"CreatedAt":"2024-09-27T20:10:31","Actor":"LittleLittleCloud","Number":"7246","RawContent":null,"Title":"[GenAI] pack GenAI core package","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\n#7169 \r\n","Url":"https://github.com/dotnet/machinelearning/pull/7246","RelatedDescription":"Closed or merged PR \"[GenAI] pack GenAI core package\" (#7246)"},{"Id":"2553592883","IsPullRequest":true,"CreatedAt":"2024-09-27T19:22:29","Actor":"ericstj","Number":"7247","RawContent":null,"Title":"Enable SDL tools","State":"open","Body":"I'll schedule an internal build to validate this.\r\n\r\nInternal build https://dev.azure.com/dnceng/internal/_build/results?buildId=2548168&view=results","Url":"https://github.com/dotnet/machinelearning/pull/7247","RelatedDescription":"Open PR \"Enable SDL tools\" (#7247)"},{"Id":"2551465408","IsPullRequest":true,"CreatedAt":"2024-09-26T20:21:09","Actor":"LittleLittleCloud","Number":"7245","RawContent":null,"Title":"[GenAI] Support Llama 3.2 1B and 3B model","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\n#7169 ","Url":"https://github.com/dotnet/machinelearning/pull/7245","RelatedDescription":"Open PR \"[GenAI] Support Llama 3.2 1B and 3B model\" (#7245)"},{"Id":"2551002648","IsPullRequest":false,"CreatedAt":"2024-09-26T16:03:45","Actor":"rposener","Number":"7244","RawContent":null,"Title":"Timeseries SrCNN blocking use on ARM64","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nI am developing on a new Surface device (ARM64 chipset) and I'm currently blocked by the lack of support of SrCnn support to use this for anomaly detection in data.\r\n\r\n**Describe the solution you'd like**\r\nI'd love to see this included and added for ARM64 support in version 4.\r\n\r\n**Describe alternatives you've considered**\r\nIf there is a major impediment here, I'd love your recommendations.  I am looking at other statistical analysis as a work-around for my specific use-case.\r\n\r\n**Additional context**\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/7244","RelatedDescription":"Open issue \"Timeseries SrCNN blocking use on ARM64\" (#7244)"},{"Id":"2503771575","IsPullRequest":true,"CreatedAt":"2024-09-26T03:16:00","Actor":"LittleLittleCloud","Number":"7231","RawContent":null,"Title":"[GenAI] Add Mistral 7B Instruction V0.3","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\n#7169 \r\n","Url":"https://github.com/dotnet/machinelearning/pull/7231","RelatedDescription":"Closed or merged PR \"[GenAI] Add Mistral 7B Instruction V0.3\" (#7231)"},{"Id":"2544095428","IsPullRequest":false,"CreatedAt":"2024-09-24T01:56:31","Actor":"chuongmep","Number":"7243","RawContent":null,"Title":"How to Group By with multiple columns? ","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nI want can use `GroupBy `with list input column for dataframe\r\n\r\n**Describe the solution you'd like**\r\nA clear and concise description of what you want to happen.\r\n\r\nIt could be good like this and allow return with new dataframe \r\n```\r\nvar groupBy = df.GroupBy(new string[] { \"Area\", \"Level\" });\r\n```\r\nOr  : \r\n```\r\ndf.GroupBy(\"Level\", \"Building Name\").Select(\"Source File\", \"Area\", \"Level\", \"Building Name\");\r\n```\r\nThis is python : \r\n```\r\ndf_report_grouped = df_report.groupby(['Building Name', 'Level'])['Area'].sum().reset_index()\r\n```\r\n**Describe alternatives you've considered**\r\nA clear and concise description of any alternative solutions or features you've considered.\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/7243","RelatedDescription":"Open issue \"How to Group By with multiple columns? \" (#7243)"},{"Id":"2538660347","IsPullRequest":true,"CreatedAt":"2024-09-20T12:15:12","Actor":"asmirnov82","Number":"7242","RawContent":null,"Title":"Fix dataframe incorrectly parse CSV when renameDuplicatedColumns is true","State":"open","Body":"Fixes #7240\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7242","RelatedDescription":"Open PR \"Fix dataframe incorrectly parse CSV when renameDuplicatedColumns is true\" (#7242)"},{"Id":"2537154328","IsPullRequest":false,"CreatedAt":"2024-09-19T19:01:31","Actor":"luisquintanilla","Number":"7241","RawContent":null,"Title":"Update Microsoft.ML.Tokenizers - o1 models","State":"open","Body":"Add o1 as a tokenizer option in Microsoft.ML.Tokenizers","Url":"https://github.com/dotnet/machinelearning/issues/7241","RelatedDescription":"Open issue \"Update Microsoft.ML.Tokenizers - o1 models\" (#7241)"},{"Id":"2535896486","IsPullRequest":false,"CreatedAt":"2024-09-19T10:12:19","Actor":"tudor-turcu","Number":"7240","RawContent":null,"Title":"DataFrame when parsing a CSV incorrectly detects a column type when renameDuplicatedColumns is true ","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11, Linux \r\n - ML.NET Version: 3.0.1 (Microsoft.Data.Analysis 0.21.1)\r\n - .NET Version: .NET 8.0\r\n\r\n**Describe the bug**\r\nDataFrame.LoadCsv() or LoadCsvFromString() incorrectly detects a column type when renameDuplicatedColumns = true and dataTypes = null or empty.\r\n\r\n**To Reproduce**\r\nCall DataFrame.LoadCsv() or LoadCsvFromString() with renameDuplicatedColumns = true and dataTypes = null or empty,\r\nwith CultureInfo.CurrentCulture = CultureInfo.InvariantCulture; // or en-US\r\nIf a column in the CSV contains on a row a valid date value, \r\nand in a subsequent row appear two or more empty string values, one of which appears in a previous column,\r\nthe column containing a date is not considered as having a date type, but a single/float type.\r\nParsing the date values on that column will fail with an exception.\r\nProbably the same issue appears for boolean columns or other types.\r\nSample CSV:\r\n```\r\n\"Col1\",\"Col2\",\"Col3\",\"Col4\"\r\n\"v1.1\",\"5/7/2017\",\"v3.1\",\"v4.1\"\r\n\"\",\"\",\"v3.2\",\"v4.2\"\r\n```\r\n\r\n**Expected behavior**\r\nThe column type should considered to be Date type, even if it contains a few empty string values.\r\n\r\n**Screenshots, Code, Sample Projects**\r\n\r\n```csharp\r\nusing Microsoft.Data.Analysis;\r\nusing System.Globalization;\r\n\r\nnamespace DataFrameColumnTypeDetectionBug\r\n{\r\n    internal class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            CultureInfo.CurrentCulture = CultureInfo.InvariantCulture; // or en-US\r\n\r\n            string csv =\r\n@\"\"\"Col1\"\",\"\"Col2\"\",\"\"Col3\"\",\"\"Col4\"\"\r\n\"\"v1.1\"\",\"\"5/7/2017\"\",\"\"v3.1\"\",\"\"v4.1\"\"\r\n\"\"\"\",\"\"\"\",\"\"v3.2\"\",\"\"v4.2\"\"\r\n\";\r\n\r\n            var dataFrame = DataFrame.LoadCsvFromString(csv, separator: ',', header: true, \r\n                dataTypes: null, // guess the column types\r\n                renameDuplicatedColumns: true, // try to rename the duplicated columns, if any\r\n                cultureInfo: CultureInfo.InvariantCulture);\r\n\r\n            // when renameDuplicatedColumns: true will crash with:\r\n            // System.FormatException: The input string '5/7/2017' was not in a correct format.\r\n            // at System.Number.ThrowFormatException[TChar](ReadOnlySpan`1 value)\r\n            //at System.String.System.IConvertible.ToSingle(IFormatProvider provider)\r\n            //at System.Convert.ChangeType(Object value, Type conversionType, IFormatProvider provider)\r\n            //at Microsoft.Data.Analysis.DataFrame.Append(IEnumerable`1 row, Boolean inPlace, CultureInfo cultureInfo)\r\n            //at Microsoft.Data.Analysis.DataFrame.ReadCsvLinesIntoDataFrame(...)\r\n\r\n            // no crash if renameDuplicatedColumns: false\r\n            // or if dataTypes is set (no 'column type guessing')\r\n            // or if CultureInfo.CurrentCulture has other format for DateTime (like dd.mm.yyyy) ==> the column will not be considered as DateTime, but string\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n**Additional context**\r\nNo crash if renameDuplicatedColumns: false\r\nor if dataTypes is set (no 'column type guessing')\r\nor if CultureInfo.CurrentCulture has other format for DateTime (like dd.mm.yyyy) ==> the column will not be considered as DateTime, but string.\r\n\r\n**Possible root cause:**\r\nThis seems to be a bug in Microosft.Data.Analysis.DataFrame - in ReadCsvLinesIntoDataFrame() function, only if renameDuplicatedColumns param is true, **not only the duplicated column names are renamed, but also 'duplicated' row values are 'renamed'**:\r\nex.: \"345\", \"345.1\", \"345.2\"...\r\nSeveral empty string values become: \"\", \".1\", \".2\", \".3\".\r\nThe code that tries to guess the column types will consider these former empty strings as float/single values under en-US culture, marking the entire column a having a single/float data type, even if no float values really exist on that column.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/7240","RelatedDescription":"Open issue \"DataFrame when parsing a CSV incorrectly detects a column type when renameDuplicatedColumns is true \" (#7240)"},{"Id":"2534238807","IsPullRequest":true,"CreatedAt":"2024-09-18T16:56:33","Actor":"LittleLittleCloud","Number":"7239","RawContent":null,"Title":"[GenAI] Add FlashAttention","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n#7169 ","Url":"https://github.com/dotnet/machinelearning/pull/7239","RelatedDescription":"Open PR \"[GenAI] Add FlashAttention\" (#7239)"},{"Id":"2529411329","IsPullRequest":true,"CreatedAt":"2024-09-18T16:54:41","Actor":"LittleLittleCloud","Number":"7238","RawContent":null,"Title":"[GenAI] Add FlashAttention","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n#7169 ","Url":"https://github.com/dotnet/machinelearning/pull/7238","RelatedDescription":"Closed or merged PR \"[GenAI] Add FlashAttention\" (#7238)"},{"Id":"2527179376","IsPullRequest":true,"CreatedAt":"2024-09-16T18:53:04","Actor":"LittleLittleCloud","Number":"7237","RawContent":null,"Title":"[GenAI] Enable pack","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n#7169 \r\n","Url":"https://github.com/dotnet/machinelearning/pull/7237","RelatedDescription":"Closed or merged PR \"[GenAI] Enable pack\" (#7237)"},{"Id":"2509076954","IsPullRequest":true,"CreatedAt":"2024-09-09T22:02:38","Actor":"tarekgh","Number":"7233","RawContent":null,"Title":"Fix decoding special tokens in SentencePiece tokenizer","State":"closed","Body":"There was corner case while decoding special tokens Ids in Sentence Piece tokenizer and the special tokens ids show up in the beginning of the decoding list. The change here addresses that and ensures the special tokens will get decoded as expected. ","Url":"https://github.com/dotnet/machinelearning/pull/7233","RelatedDescription":"Closed or merged PR \"Fix decoding special tokens in SentencePiece tokenizer\" (#7233)"},{"Id":"2513948053","IsPullRequest":true,"CreatedAt":"2024-09-09T13:17:30","Actor":"WeihanLi","Number":"7236","RawContent":null,"Title":"docs: update nuget package badge","State":"open","Body":"update nuget package badge\r\n\r\n- link to the absolute latest version for the preview package\r\n- add stable version","Url":"https://github.com/dotnet/machinelearning/pull/7236","RelatedDescription":"Open PR \"docs: update nuget package badge\" (#7236)"},{"Id":"2513903268","IsPullRequest":true,"CreatedAt":"2024-09-09T12:58:58","Actor":"dotnet-maestro[bot]","Number":"7235","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c692823c-b896-437f-4f57-08dc434cc8f6)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: c692823c-b896-437f-4f57-08dc434cc8f6\r\n- **Build**: 20240917.1\r\n- **Date Produced**: September 17, 2024 3:46:00 PM UTC\r\n- **Commit**: 34138f08e2c9c3c41a0ac8af583a57ea953e3821\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.24459.1 to 10.0.0-beta.24467.1][2]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 10.0.0-beta.24459.1 to 10.0.0-beta.24467.1][2]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.24459.1 to 10.0.0-beta.24467.1][2]\r\n  - **Microsoft.DotNet.SignTool**: [from 10.0.0-beta.24459.1 to 10.0.0-beta.24467.1][2]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 10.0.0-beta.24459.1 to 10.0.0-beta.24467.1][2]\r\n  - **Microsoft.DotNet.XliffTasks**: [from 10.0.0-beta.24459.1 to 10.0.0-beta.24467.1][2]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.24459.1 to 10.0.0-beta.24467.1][2]\r\n\r\n[2]: https://github.com/dotnet/arcade/compare/8260f289b9...34138f08e2\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates tools.dotnet to 9.0.100-rc.1.24452.12\r\n\r\n[marker]: <> (End:c692823c-b896-437f-4f57-08dc434cc8f6)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7235","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#7235)"},{"Id":"2512081073","IsPullRequest":false,"CreatedAt":"2024-09-07T21:15:45","Actor":"80LevelElf","Number":"7234","RawContent":null,"Title":"OneDAL support for LightGBM","State":"open","Body":"According to [Intel site LightGBM should already have OneDAL support](https://www.intel.com/content/www/us/en/developer/articles/technical/improve-performance-xgboost-lightgbm-inference.html).\r\n\r\nBut right now [ML.net supports OneDAL](https://devblogs.microsoft.com/dotnet/accelerate-ml-net-training-with-intel-onedal/) only for:\r\nOrdinary Least Squares | Regression\r\nL-BGFS | Classification\r\nFastTree | Regression & Classification\r\nFastForest | Regression & Classification\r\n\r\nCould you provide OneDAL support for LightGBM too?","Url":"https://github.com/dotnet/machinelearning/issues/7234","RelatedDescription":"Open issue \"OneDAL support for LightGBM\" (#7234)"},{"Id":"2506956562","IsPullRequest":false,"CreatedAt":"2024-09-05T07:09:38","Actor":"bbhxwl","Number":"7232","RawContent":null,"Title":"How can the coordinates of YOLOv5 post-processing data be displayed on the original graph?","State":"open","Body":"https://github.com/bbhxwl/AiHelper\r\n\r\nI want to create a public project for everyone to use, but I found that the x, y, width, and height values I detected are not the original coordinates, and there seems to be duplicate data in the detection?\r\n\r\nHow should I modify my code?\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/7232","RelatedDescription":"Open issue \"How can the coordinates of YOLOv5 post-processing data be displayed on the original graph?\" (#7232)"},{"Id":"2495569548","IsPullRequest":true,"CreatedAt":"2024-08-30T17:30:46","Actor":"LittleLittleCloud","Number":"7227","RawContent":null,"Title":"[GenAI] Add generateEmbedding API to CausalLMPipeline","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n#7169 ","Url":"https://github.com/dotnet/machinelearning/pull/7227","RelatedDescription":"Closed or merged PR \"[GenAI] Add generateEmbedding API to CausalLMPipeline\" (#7227)"},{"Id":"2495785765","IsPullRequest":true,"CreatedAt":"2024-08-30T17:30:32","Actor":"LittleLittleCloud","Number":"7228","RawContent":null,"Title":"Directly refer sql data client 4.8.6 package in GenAI tests to fix security vulnerable package","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\nhttps://dnceng.visualstudio.com/internal/_componentGovernance/dotnet-machinelearning/alert/9167777?typeId=13269444\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7228","RelatedDescription":"Closed or merged PR \"Directly refer sql data client 4.8.6 package in GenAI tests to fix security vulnerable package\" (#7228)"},{"Id":"2496127778","IsPullRequest":false,"CreatedAt":"2024-08-30T03:24:44","Actor":"jalin168","Number":"7230","RawContent":null,"Title":"ML.NET ObjectDetection vs YOLOv4","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nWhy is ML.NET significantly worse than YOLOv4(AlexeyAB) in accuracy?\r\nIs the ability of the AutoFormer algorithm used by ML.NET to detect objects inherently weaker than YOLOv4(AlexeyAB)?\r\nIn the ML.NET training parameter Epoch, the accuracy will not be better with more times. Is there any way to improve the accuracy of ML.NET?\r\n\r\n**Describe the solution you'd like**\r\nMy training dataset has 16 images and my test dataset has 4 images.\r\nThe purpose is to identify specific mark in grayscale images, such as the cross mark in the picture below.\r\nComparing object detection ML.NET(Version: 16.18 for VS2019) and YOLOv4(AlexeyAB).\r\n\r\n**Describe alternatives you've considered**\r\nYOLOv4(AlexeyAB) can detect the mark correctly in all 4 images of the test dataset.\r\nThe ML.NET training parameters use the default value Epoch 5. Only 2 images can be detected correctly. \r\nIf the Epoch is changed to 50 or 500, 4 images cannot be detected.\r\n\r\n**Additional context**\r\n![mark_sample](https://github.com/user-attachments/assets/2104a7a8-6c3a-4f4e-b811-bcbb85332699)\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/7230","RelatedDescription":"Open issue \"ML.NET ObjectDetection vs YOLOv4\" (#7230)"},{"Id":"2495972349","IsPullRequest":false,"CreatedAt":"2024-08-30T02:00:50","Actor":"thomasd3","Number":"7229","RawContent":null,"Title":"Unable to load shared library 'MklImports' on MacOS with CLI","State":"open","Body":"I am using the CLI tool, on MacOS.\r\n\r\nMy command line is:\r\n> mlnet forecasting --dataset training.csv --validation-dataset testing.csv --train-time 100 --label-col 1 --time-col 0 --horizon 1 --has-header true\r\n\r\nI went to:\r\nhttps://learn.microsoft.com/en-us/dotnet/machine-learning/how-to-guides/install-extra-dependencies\r\n\r\nand installed the dependency with:\r\n> wget https://raw.githubusercontent.com/Homebrew/homebrew-core/fb8323f2b170bd4ae97e1bac9bf3e2983af3fdb0/Formula/libomp.rb && brew install ./libomp.rb && brew link libomp --force\r\n\r\nlibomp is installed, I've also installed the MKL lib from Intel just in case, but I keep getting a crash:\r\n\r\n```\r\nSystem.DllNotFoundException: Unable to load shared library 'MklImports' or one of its dependencies. In order to help diagnose loading problems, consider setting the DYLD_PRINT_LIBRARIES environment variable:                                               dlopen(/Users/thomas/.dotnet/tools/.store/mlnet-osx-x64/16.18.2/mlnet-osx-x64/16.18.2/tools/net8.0/any/MklImports.dylib, 0x0001): tried: '/Users/thomas/.dotnet/tools/.store/mlnet-osx-x64/16.18.2/mlnet-osx-x64/16.18.2/tools/net8.0/any/MklImports.dylib' (no such file), '/System/Volumes/Preboot/Cryptexes/OS/Users/thomas/.dotnet/tools/.store/mlnet-osx-x64/16.18.2/mlnet-osx-x64/16.18.2/tools/net8.0/any/MklImports.dylib' (no such file), '/Users/thomas/.dotnet/tools/.store/mlnet-osx-x64/16.18.2/mlnet-osx-x64/16.18.2/tools/net8.0/any/MklImports.dylib' (no such file)\r\n```\r\n\r\nWhat am I missing?","Url":"https://github.com/dotnet/machinelearning/issues/7229","RelatedDescription":"Open issue \"Unable to load shared library 'MklImports' on MacOS with CLI\" (#7229)"},{"Id":"2487654395","IsPullRequest":true,"CreatedAt":"2024-08-29T21:09:44","Actor":"mhshahmoradi","Number":"7223","RawContent":null,"Title":"Refactor Namespace and Seald Classes in Microsoft.ML.AutoML.SourceGenerator Project","State":"closed","Body":"### Summary\r\nThis PR refactors the namespace for the `Microsoft.ML.ModelBuilder.SweepableEstimator.CodeGenerator` to `Microsoft.ML.AutoML.SourceGenerator`. This change aligns the namespace with the new project structure and organizational conventions.\r\n\r\n### Changes\r\n- Updated the namespace from `Microsoft.ML.ModelBuilder.SweepableEstimator.CodeGenerator` to `Microsoft.ML.AutoML.SourceGenerator` across all files in the project.\r\n\r\n### Justification\r\nThe namespace change is intended to better reflect the purpose and context of the code within the `Microsoft.ML.AutoML.SourceGenerator` project. By aligning the namespace with the project's new structure, we improve code organization and maintain consistency with other parts of the codebase.\r\n\r\n### Impact\r\n- This change will require updating references to the affected namespace in other parts of the codebase and any related documentation or tests.\r\n- Ensure that any dependent projects or modules are updated to use the new namespace.\r\n\r\n### Testing\r\n- All existing tests have been run to ensure that the namespace change does not introduce any issues or regressions.\r\n- Verify that all references and imports in the codebase are updated accordingly.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7223","RelatedDescription":"Closed or merged PR \"Refactor Namespace and Seald Classes in Microsoft.ML.AutoML.SourceGenerator Project\" (#7223)"},{"Id":"2493794661","IsPullRequest":false,"CreatedAt":"2024-08-29T08:32:46","Actor":"Tatyana-Stoyanova","Number":"7226","RawContent":null,"Title":"Integrating ML.Net 3.0.1 into Unity 2022.3.28f1 causes \"DllNotFoundExeption: CpuMathNative\"","State":"open","Body":"**System Information (please complete the following information):**\r\n - Windows 10\r\n - ML.NET Version: 3.0.1\r\n - Api Compatibility Level - .Net FrameWork\r\n - VS 2022 17.11.2\r\n - NuGet for Unity 4.1.1\r\n\r\n**Describe the bug**\r\nTrying to fit the model causes DllNotFoundException: CpuMathNative error in the console.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Install Microsoft.ML(3.0.1) and System.Runtime.CompilerServices.Unsafe(6.0.0) using NuGet for Unity. (other dependencies are automatically installed - such as Microsoft.ML.CpuMath.3.0.1, Microsoft.ML.DataView.3.0.1, System.Memory.4.5.5, System.Numerics.Tensors.8.0.0) \r\n2. Create TextLoader to read data from csv file, make a pipeline to preprocess data and fit the model\r\n4. See error\r\n\r\n**Expected behavior**\r\nThe fiting must create a model that is ready to be used for evaluetion and prediction.\r\n\r\n**Actual behaviour**\r\n(In Editor)\r\n\"DllNotFoundExceptionL CpuMathNative ... \"\r\n\r\n**Screenshots, Code, Sample Projects**\r\n![image](https://github.com/user-attachments/assets/03386ff6-2f94-4eaf-961a-4891c62167ca)\r\nDlls import settings\r\n![image](https://github.com/user-attachments/assets/74831d70-b896-4399-8d2e-dd19f53e44be)\r\n\r\n**Additional context**\r\nThe bug is duplicate of #6741. The proposed solution https://github.com/dotnet/machinelearning/issues/6741#issuecomment-1612111915 by @luisquintanilla does not fix the issue, because in the Microsoft.ML.CpuMath package that was importet as Nuget there was no CPUMathNative.dll, only Microsoft.ML.CPUMath.dll.\r\nActually the problem was solved with copying of the missing dll from the Minimal ML Test example posted on following issue: [MLContext.Data.LoadFromEnumerable() not working in Unity for netstandard2.0 api](https://github.com/dotnet/machinelearning/issues/5760#issue-865040147), but the CpuMathNative.dll is actually missing in the last version of Microsoft.ML.CpuMath.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/7226","RelatedDescription":"Open issue \"Integrating ML.Net 3.0.1 into Unity 2022.3.28f1 causes \"DllNotFoundExeption: CpuMathNative\"\" (#7226)"},{"Id":"2493230417","IsPullRequest":false,"CreatedAt":"2024-08-29T00:42:40","Actor":"xqiu","Number":"7225","RawContent":null,"Title":"Onnx with single float output throws exception during MLContext predict","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: [Windows 11] \r\n - ML.NET Version: [ML.NET v3.0.1]\r\n - .NET Version: [.NET 8.0]\r\n - Microsoft.ML.OnnxRuntime Version: [1.1.9.1]\r\n - Microsoft.ML.OnnxTransformer Version: [1.1.9.1]\r\n - \r\n**Describe the bug**\r\nI have an onnx file with only a single float32 output.  By using the following class  to map the output with mlContext.Transforms.ApplyOnnxModel, and CreatePredictionEngine, predict function will report System.ArgumentNullException: Value cannot be null. (Parameter 'source') at Microsoft.ML.Transforms.Onnx.OnnxTransformer.Mapper.<>c__DisplayClass16_0`1.<MakeObjectGetter>\r\n\r\nI can use InferenceSession to run it without problem. \r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Clone https://github.com/xqiu/ml_onnx_output_error\r\n2. Run the program to see the bug appearance\r\n\r\nCode is:\r\n\r\n~~~\r\n    public class ModelInput\r\n    {\r\n        [ColumnName(\"input\")]\r\n        [VectorType(1, 1, 40, 40)]  // Adjust dimensions to match your model input\r\n        public float[] Features { get; set; } = new float[1 * 1 * 40 * 40];  // Flattened 4D array for ONNX input\r\n    }\r\n\r\n    public class ModelOutput\r\n    {\r\n        [ColumnName(\"output\")]\r\n        public float Prediction { get; set; }\r\n    }\r\n\r\n        public static void PredictWithMLContextSingle(string modelPath)\r\n        {\r\n            Console.WriteLine(\"\\r\\nRun PredictWithMLContext:\");\r\n\r\n            var mlContext = new MLContext();\r\n\r\n            // Define the ONNX pipeline\r\n            var pipeline = mlContext.Transforms.ApplyOnnxModel(\r\n                modelFile: modelPath,\r\n                outputColumnNames: new[] { \"output\" },\r\n                inputColumnNames: new[] { \"input\" });\r\n            // Prepare input data (replace this with your actual input data)\r\n            var input = new ModelInput();\r\n            for (int i = 0; i < input.Features.Length; i++)\r\n            {\r\n                input.Features[i] = 0.1f; // Example value, replace with your actual data\r\n            }\r\n\r\n            // Create the data view with a single item wrapped in a list\r\n            var emptyDataView = mlContext.Data.LoadFromEnumerable(new[] { input });\r\n\r\n            // Fit the pipeline\r\n            var mlModel = pipeline.Fit(emptyDataView);\r\n\r\n            // Load the model\r\n            var predictionEngine = mlContext.Model.CreatePredictionEngine<ModelInput, ModelOutput>(mlModel);\r\n\r\n            // Perform prediction\r\n            var output = predictionEngine.Predict(input);\r\n\r\n            Console.WriteLine(\"Using MLContext Prediction result:\");\r\n            Console.WriteLine($\"Output: {output}\");\r\n        }\r\n\r\n~~~\r\n\r\n**Expected behavior**\r\nPrediction works with MLContext.\r\n\r\n**Screenshots, Code, Sample Projects**\r\nSample code in  https://github.com/xqiu/ml_onnx_output_error \r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/7225","RelatedDescription":"Open issue \"Onnx with single float output throws exception during MLContext predict\" (#7225)"},{"Id":"2471294751","IsPullRequest":true,"CreatedAt":"2024-08-28T22:35:31","Actor":"LittleLittleCloud","Number":"7220","RawContent":null,"Title":"[GenAI] Add LLaMA support","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\n#7169 ","Url":"https://github.com/dotnet/machinelearning/pull/7220","RelatedDescription":"Closed or merged PR \"[GenAI] Add LLaMA support\" (#7220)"},{"Id":"2490650726","IsPullRequest":false,"CreatedAt":"2024-08-28T01:04:08","Actor":"Eddie-Hartman","Number":"7224","RawContent":null,"Title":"Blazor WASM and byte[] ONNX Support","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nI would like to be able to run ML.NET with ONNX Runtime in Blazor WASM. ML.NET should also support ONNX models using byte[] in addition to file references.\r\n\r\n**Describe the solution you'd like**\r\nI forked the repo and made an example of changes here: https://github.com/dotnet/machinelearning/compare/main...Eddie-Hartman:machinelearning:main\r\n\r\nHowever, after compiling and updating references in my own example application, I still get errors an error:\r\n```\r\nUnhandled exception rendering component: The type initializer for 'Microsoft.ML.OnnxRuntime.NativeMethods' threw an exception.\r\nSystem.TypeInitializationException: The type initializer for 'Microsoft.ML.OnnxRuntime.NativeMethods' threw an exception.\r\n ---> System.DllNotFoundException: onnxruntime\r\n   at Microsoft.ML.OnnxRuntime.NativeMethods..cctor()\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.ML.OnnxRuntime.SessionOptions..ctor()\r\n   at Microsoft.ML.Transforms.Onnx.OnnxModel..ctor(String modelFile, Nullable`1 gpuDeviceId, Boolean fallbackToCpu, Boolean ownModelFile, IDictionary`2 shapeDictionary, Int32 recursionLimit, Nullable`1 interOpNumThreads, Nullable`1 intraOpNumThreads, Byte[] modelBytes) in C:\\Users\\EddieHartman\\source\\repos\\machinelearning\\src\\Microsoft.ML.OnnxTransformer\\OnnxUtils.cs:line 219\r\n   at Microsoft.ML.Transforms.Onnx.OnnxModel.CreateFromBytes(Byte[] modelBytes, IHostEnvironment env, Nullable`1 gpuDeviceId, Boolean fallbackToCpu, IDictionary`2 shapeDictionary, Int32 recursionLimit) in C:\\Users\\EddieHartman\\source\\repos\\machinelearning\\src\\Microsoft.ML.OnnxTransformer\\OnnxUtils.cs:line 396\r\n   at Microsoft.ML.Transforms.Onnx.OnnxTransformer..ctor(IHostEnvironment env, Options options, Byte[] modelBytes) in C:\\Users\\EddieHartman\\source\\repos\\machinelearning\\src\\Microsoft.ML.OnnxTransformer\\OnnxTransform.cs:line 265\r\n   at Microsoft.ML.Transforms.Onnx.OnnxTransformer..ctor(IHostEnvironment env, String[] outputColumnNames, String[] inputColumnNames, String modelFile, Nullable`1 gpuDeviceId, Boolean fallbackToCpu, IDictionary`2 shapeDictionary, Int32 recursionLimit, Nullable`1 interOpNumThreads, Nullable`1 intraOpNumThreads, Byte[] modelBytes) in C:\\Users\\EddieHartman\\source\\repos\\machinelearning\\src\\Microsoft.ML.OnnxTransformer\\OnnxTransform.cs:line 330\r\n   at Microsoft.ML.Transforms.Onnx.OnnxScoringEstimator..ctor(IHostEnvironment env, String[] outputColumnNames, String[] inputColumnNames, String modelFile, Nullable`1 gpuDeviceId, Boolean fallbackToCpu, IDictionary`2 shapeDictionary, Int32 recursionLimit, Nullable`1 interOpNumThreads, Nullable`1 intraOpNumThreads, Byte[] modelBytes) in C:\\Users\\EddieHartman\\source\\repos\\machinelearning\\src\\Microsoft.ML.OnnxTransformer\\OnnxTransform.cs:line 927\r\n   at Microsoft.ML.OnnxCatalog.ApplyOnnxModel(TransformsCatalog catalog, OnnxOptions options, Byte[] modelBytes) in C:\\Users\\EddieHartman\\source\\repos\\machinelearning\\src\\Microsoft.ML.OnnxTransformer\\OnnxCatalog.cs:line 142\r\n   at AppFramework.ImageProcessing.ImageProcessor.ProcessImage(Stream onnxModelStream) in C:\\Users\\EddieHartman\\source\\repos\\ONNX App POC\\AppFramework\\ImageProcessing\\ImageProcessor.cs:line 41\r\n   at AppFramework.Pages.Multimedia.ProcessFile(SavedFile file) in C:\\Users\\EddieHartman\\source\\repos\\ONNX App POC\\AppFramework\\Pages\\Multimedia.razor:line 111\r\n   at Microsoft.AspNetCore.Components.ComponentBase.CallStateHasChangedOnAsyncCompletion(Task task)\r\n   at MudBlazor.MudBaseButton.OnClickHandler(MouseEventArgs ev)\r\n   at Microsoft.AspNetCore.Components.RenderTree.Renderer.GetErrorHandledTask(Task taskToHandle, ComponentState owningComponentState)\r\n```\r\n\r\n**Additional context**\r\nMy fork above is simply a proof of concept since one of the first obstacles that I ran into was calling `mlContext.Transformers.ApplyOnnxModel` without being able to point to a file. The ONNX runtime for C# supports using byte arrays, so I added a proof of concept of support above. This code generally around this also seems like it could use cleaned up in general. For example, I removed creating a temporary copy of saving the byte[] to a file since the runtime can just use it directly. Therefore, the code around owning the model and cleaning up temporary files and holding streams open can likely all get cleaned up as well.\r\n\r\nSo once this gets fleshed out and implemented, what is the actual limitation for getting this running in Blazor WASM?\r\n\r\nI also found this issue: https://github.com/microsoft/onnxruntime/issues/14962 and would like some help to better understand why it's an actual issue and what it would take to get running.\r\n\r\nIn terms of the actual byte[] feature, I wouldn't mind spending more time fleshing it out, but I'm trying to accomplish something specific here and would like to better understand if it's at all possible and what kind of effort needs to go into getting it working between the two projects before spending a lot more time on it.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/7224","RelatedDescription":"Open issue \"Blazor WASM and byte[] ONNX Support\" (#7224)"},{"Id":"2483805824","IsPullRequest":false,"CreatedAt":"2024-08-23T20:00:31","Actor":"thomasd3","Number":"7222","RawContent":null,"Title":"mlnet cli will not run binary classification, but always multiclass despite label having 2 values only.","State":"open","Body":"I have a data set that has a label made of 0 and 1, but the classification always runs as multiclass.\r\n\r\nThe command line is:\r\n> mlnet classification --dataset output.csv --label-col 7 --ignore-cols 0 5 6 8 9 10 11 12 13 14 15 16 --has-header true --name wl\r\n\r\nand I have attached the data:\r\n[output.csv](https://github.com/user-attachments/files/16733138/output.csv)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/7222","RelatedDescription":"Open issue \"mlnet cli will not run binary classification, but always multiclass despite label having 2 values only.\" (#7222)"},{"Id":"2478185220","IsPullRequest":false,"CreatedAt":"2024-08-21T14:27:14","Actor":"schalke046","Number":"7221","RawContent":null,"Title":"Documentation of question and answer models","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nCurrently, I'm trying to understand and use question aber models, but somehow I'm unable to find information about it.\r\n\r\n**Describe the solution you'd like**\r\nAn example of using this kind of model by ML.Net\r\n\r\n**Describe alternatives you've considered**\r\nDocumentation page with examples to train and use\r\n\r\n**Additional context**\r\n-","Url":"https://github.com/dotnet/machinelearning/issues/7221","RelatedDescription":"Open issue \"Documentation of question and answer models\" (#7221)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-09-29T03:30:19.9931934Z","RunDurationInMilliseconds":510}