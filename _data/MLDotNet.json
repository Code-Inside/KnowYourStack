{"Data":{"GitHub":{"Issues":[{"Id":"1310481162","IsPullRequest":true,"CreatedAt":"2022-07-22T21:40:08","Actor":"feiyun0112","Number":"6255","RawContent":null,"Title":"fix Dead link in FastTreeRegressionTrainerClass Documentation","State":"closed","Body":"#6254","Url":"https://github.com/dotnet/machinelearning/pull/6255","RelatedDescription":"Closed or merged PR \"fix Dead link in FastTreeRegressionTrainerClass Documentation\" (#6255)"},{"Id":"1313141549","IsPullRequest":false,"CreatedAt":"2022-07-21T11:55:22","Actor":"rzechu","Number":"6257","RawContent":null,"Title":"CreateEnumerable - ystem.IndexOutOfRangeException","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 10\r\n - ML.NET Version: ML.NET v1.7.1\r\n - .NET Version: Framework 4.8\r\n\r\n**Describe the bug**\r\nI am receiving Index out of range exception after trying convert transformedData into enumerable.\r\nSame line of code works fine for same code but using method  - DetectIidSpike and its parameters\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n```\r\n    internal class LogsPrediction\r\n    {\r\n        //vector to hold alert,score,p-value values\r\n        [VectorType(3)]\r\n        public double[] Prediction { get; set; }\r\n    }\r\n```\r\n\r\n\r\nSent parameters\r\nList<SourceRequestData> SourceDatas /*12025 records but filtered inside loop to 517 records*/, \r\nint windowSize = 6, \r\nint backAddWindowSize = 5,\r\n int lookaheadWindowSize = 5, \r\nint averagingWindowSize = 5,\r\n int judgementWindowSize = 6, \r\ndouble threshold = 0.01\r\n```\r\npublic void DetectanAnomalyEnumerable(ref List<SourceRequestData> SourceDatas, int windowSize = 64, int backAddWindowSize = 5, int lookaheadWindowSize = 5, int averagingWindowSize = 5, int judgementWindowSize = 21, double threshold = 0.3)\r\n        {\r\n            try\r\n            {\r\n                var lambdaWorkAround = SourceDatas;\r\n                var differentDefinitions = SourceDatas.Select(s => new { RdMethodType = s.Rd_MethodType, RdMethodID = s.Rd_MethodId }).Distinct().ToList();\r\n\r\n                Parallel.ForEach(differentDefinitions, definitionID =>\r\n                {\r\n                    if (windowSize < 5)\r\n                        return;\r\n\r\n                    var dataToCheck = lambdaWorkAround.Where(w => w.Rd_MethodType == definitionID.RdMethodType && w.Rd_MethodId == definitionID.RdMethodID).OrderBy(o => o.Rd_ID).ToList();\r\n\r\n                    IDataView dataView = mlContext.Data.LoadFromEnumerable<SourceRequestData>(dataToCheck);\r\n\r\n                    lookaheadWindowSize = lookaheadWindowSize> windowSize  ? windowSize : lookaheadWindowSize;\r\n                    averagingWindowSize = averagingWindowSize > windowSize  ? windowSize : averagingWindowSize;\r\n                    judgementWindowSize = judgementWindowSize > windowSize  ? windowSize : judgementWindowSize;\r\n                    threshold = threshold == 0 ? 0.01 : threshold;\r\n                    threshold = threshold == 1 ? 0.99 : threshold;\r\n\r\n                    var iidSpikeEstimator = mlContext.Transforms.DetectAnomalyBySrCnn(\r\n                        outputColumnName: nameof(LogsPrediction.Prediction),\r\n                        inputColumnName: nameof(SourceRequestData.Rd_DurationPerObject),\r\n                        windowSize: windowSize,\r\n                        backAddWindowSize: backAddWindowSize,\r\n                        lookaheadWindowSize: lookaheadWindowSize,\r\n                        averagingWindowSize: averagingWindowSize,\r\n                        judgementWindowSize: judgementWindowSize,\r\n                        threshold: threshold);\r\n                    ITransformer iidSpikeTransform = iidSpikeEstimator.Fit(dataView);\r\n\r\n                    IDataView transformedData = iidSpikeTransform.Transform(dataView);\r\n//EXCEPTION HERE VVVVV\r\n                    var predictions = mlContext.Data.CreateEnumerable<LogsPrediction>(transformedData, reuseRowObject: false).ToList();\r\n//EXCEPTION HERE ^^^^^^^\r\n\r\n                    var objectID = dataView.GetColumn<float>(nameof(SourceRequestData.Rd_ID)).ToArray();\r\n\r\n                    for (int i = 0; i < predictions.Count(); i++)\r\n                    {\r\n                        if (predictions[i].Prediction[0] == 1)\r\n                        {\r\n                            var recordToChange = dataToCheck.Where(w => w.Rd_ID == objectID[i]).FirstOrDefault();\r\n                            recordToChange.IsSpike = true;\r\n                        }\r\n                    }\r\n                });\r\n                SourceDatas = lambdaWorkAround;\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                Console.WriteLine(ex);\r\n            }\r\n```\r\n\r\n\r\n   at Microsoft.ML.Transforms.TimeSeries.SrCnnAnomalyDetectionBase.SrCnnAnomalyDetectionBaseCore.State.BackAdd(FixedSizeQueue`1 data)\r\n   at Microsoft.ML.Transforms.TimeSeries.SrCnnAnomalyDetectionBase.SrCnnAnomalyDetectionBaseCore.State.SpectralResidual(Single input, FixedSizeQueue`1 data, VBufferEditor`1& result)\r\n   at Microsoft.ML.Transforms.TimeSeries.SrCnnTransformBase`2.SrCnnStateBase.TransformCore(TInput& input, FixedSizeQueue`1 windowedBuffer, Int64 iteration, VBuffer`1& dst)\r\n   at Microsoft.ML.Transforms.TimeSeries.SequentialTransformerBase`3.StateBase.Process(TInput& input, TOutput& output)\r\n   at Microsoft.ML.Transforms.LambdaTransform.<>c__DisplayClass5_0`3.<CreateMap>b__0(TSrc src, TDst dst, TState state)\r\n   at Microsoft.ML.Transforms.StatefulFilterTransform`3.Cursor.RunLambda(Boolean& isRowAccepted)\r\n   at Microsoft.ML.Transforms.StatefulFilterTransform`3.Cursor.MoveNextCore()\r\n   at Microsoft.ML.Data.RootCursorBase.MoveNext()\r\n   at Microsoft.ML.Data.TypedCursorable`1.RowCursorImplementation.MoveNext()\r\n   at Microsoft.ML.PipeEngine`1.<RunPipe>d__2.MoveNext()\r\n   at System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)\r\n   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)\r\n   at MLNet.AnomalyDetection.<>c__DisplayClass5_1.<DetectanAnomalyEnumerable>b__1(<>f__AnonymousType0`2 definitionID) in C:\\Users\\xyz.zys\\Desktop\\ML_NET\\Common\\MLNet\\AnomalyDetection.cs:line 178\r\n   at System.Threading.Tasks.Parallel.<>c__DisplayClass17_0`1.<ForWorker>b__1()\r\n```\r\n\r\n**Expected behavior**\r\nEnumerable object is returned (same code works for same method with DetectIidSpike and its own parameters)","Url":"https://github.com/dotnet/machinelearning/issues/6257","RelatedDescription":"Open issue \"CreateEnumerable - ystem.IndexOutOfRangeException\" (#6257)"},{"Id":"1311850878","IsPullRequest":false,"CreatedAt":"2022-07-20T20:22:32","Actor":"luisquintanilla","Number":"6256","RawContent":null,"Title":"[Azure ML] Azure training environment for supported training scenarios","State":"closed","Body":"Currently in Model Builder, we support the following scenarios and environments:\r\n\r\n| Scenarios | Local | Azure |\r\n| --- | --- | --- |\r\n| Data classification | ✅ | ❌|\r\n| Value Prediction | ✅ | ❌|\r\n| Recommendation | ✅ | ❌|\r\n| Forecasting | ✅ | ❌|\r\n| Image classification | ✅ | ✅ |\r\n| Object detection | ❌| ✅ |\r\n\r\n\r\nEnable Azure as a training environment for all supported scenarios:\r\n\r\n- [ ] Data classification\r\n- [ ] Value prediction\r\n- [ ] Recommendation\r\n- [ ] Forecasting","Url":"https://github.com/dotnet/machinelearning/issues/6256","RelatedDescription":"Closed issue \"[Azure ML] Azure training environment for supported training scenarios\" (#6256)"},{"Id":"1296319728","IsPullRequest":true,"CreatedAt":"2022-07-18T22:57:21","Actor":"LittleLittleCloud","Number":"6246","RawContent":null,"Title":"reimplement binary experiment using AutoMLExperiment","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\nThis PR reimplements binary classification experiment using AutoMLExperiment, while keeping all the API unchanged so the existing documents don't need to be updated.","Url":"https://github.com/dotnet/machinelearning/pull/6246","RelatedDescription":"Closed or merged PR \"reimplement binary experiment using AutoMLExperiment\" (#6246)"},{"Id":"1308355241","IsPullRequest":false,"CreatedAt":"2022-07-18T18:27:45","Actor":"avcarr2","Number":"6254","RawContent":null,"Title":"Dead link in FastTreeRegressionTrainerClass Documentation","State":"open","Body":"The link to an article describing greedy function evaluation is broken: https://projecteuclid.org/DPubS?service=UI&version=1.0&verb=Display&handle=euclid.aos/1013203451. \r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: 9f7b4cf1-c7bf-8141-180b-ea4474964153\r\n* Version Independent ID: 6ba65d38-7383-fdfb-ada4-12caf50f71ab\r\n* Content: [FastTreeRegressionTrainer Class (Microsoft.ML.Trainers.FastTree)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.trainers.fasttree.fasttreeregressiontrainer?view=ml-dotnet)\r\n* Content Source: [dotnet/xml/Microsoft.ML.Trainers.FastTree/FastTreeRegressionTrainer.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.Trainers.FastTree/FastTreeRegressionTrainer.xml)\r\n* Product: **dotnet-ml-api**\r\n* GitHub Login: @natke\r\n* Microsoft Alias: **nakersha**","Url":"https://github.com/dotnet/machinelearning/issues/6254","RelatedDescription":"Open issue \"Dead link in FastTreeRegressionTrainerClass Documentation\" (#6254)"},{"Id":"1307132928","IsPullRequest":false,"CreatedAt":"2022-07-17T15:45:29","Actor":"CBrauer","Number":"6253","RawContent":null,"Title":"Error in code on this web page","State":"open","Body":"\r\nWhy am I getting this error?\r\n![error](https://user-images.githubusercontent.com/1317234/179406005-8a411a21-07a4-4c76-9bd2-edbaa9013e36.PNG)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6253","RelatedDescription":"Open issue \"Error in code on this web page\" (#6253)"},{"Id":"1305043379","IsPullRequest":false,"CreatedAt":"2022-07-17T15:27:58","Actor":"torronen","Number":"6252","RawContent":null,"Title":"KMeansTrainer can not be set single-threaded (NumberOfThreads=1)","State":"closed","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows Server 2022\r\n - ML.NET Version: 1.7.1\r\n - .NET Version: .NET 6\r\n\r\n\r\n_Sorry, I do not have more details at this time, but I will file this because I probably will forget about this otherwise._\r\nMy immediate issue is resolved by setting NumnberOfThreads = 2.\r\n\r\n**Describe the bug**\r\nI have a parallel app (Parallel.ForEach as main loop).\r\nInside it I do clustering. I try to set to only use on thread:\r\n\r\n```\r\n      var options = new KMeansTrainer.Options\r\n            {\r\n                NumberOfClusters = NumberOfClusters,\r\n                OptimizationTolerance = 1e-6f,\r\n                NumberOfThreads = 1, \r\n            };\r\n\r\n```\r\n\r\nHowever, I see spike in CPU usage on every clustering call when running only one thread from main app. The performance is very low if I enable multithreading on main app with low (5-10%) CPU consumption. There is also some deadlock or infinte loop etc. which, when inspected, shows lots of threads doing some sub-tasks of clustering but I could not find the root cause yet.\r\n\r\nAfter I set NumberOfThreads = 2, I see much smaller spike on CPU consumpition (in debug) and much better performance with 16 threads from the main loop. I still only reach about 18% CPU consumption, though, but it may be due to other issues. I can not yet confirm the deadlocks (or infinite loops etc) are gone.\r\n\r\nMy suspect is that for whichever reason NumberOfThreads = 1 may be considered same as NumberOfThread=null (automatic). \r\n","Url":"https://github.com/dotnet/machinelearning/issues/6252","RelatedDescription":"Closed issue \"KMeansTrainer can not be set single-threaded (NumberOfThreads=1)\" (#6252)"},{"Id":"1271988059","IsPullRequest":false,"CreatedAt":"2022-07-15T19:31:18","Actor":"Arthur-Lee","Number":"6231","RawContent":null,"Title":"Dose Microsoft.ML support android?","State":"closed","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Android 11.0 (Simulator)\r\n - ML.NET Version:  ML.NET v1.7.1\r\n - .NET Version: [e.g. .NET 6.0]\r\n\r\n**Describe the bug**\r\nBuild MUAI project to refer Microsoft.ML library, and the ApplyOnnxModel will product onnxruntime DLLNotFoundException\r\n![image](https://user-images.githubusercontent.com/9337816/173799844-c7b08102-1e4f-4ee3-a41c-16c964b29bc3.png)\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n**Expected behavior**\r\nLoading Onnx model, and do the inference correctly.\r\n\r\n**Screenshots, Code, Sample Projects**\r\nIf applicable, add screenshots, code snippets, or sample projects to help explain your problem.\r\n\r\n**Additional context**\r\nThere seems to a big gap for me to use this library in mobile. Currently MAUI project recommends to use MauiAsset to include local resource and https://docs.microsoft.com/en-us/dotnet/maui/platform-integration/storage/file-system-helpers?tabs=windows#bundled-files method to retrieve the content.\r\n\r\nAll the methods only accept model path as input, however it's a little bit difficult for me to get model path in Android. I did a trick to read the bundle stream and write those bytes to cache folder and use the cache path as input.","Url":"https://github.com/dotnet/machinelearning/issues/6231","RelatedDescription":"Closed issue \"Dose Microsoft.ML support android?\" (#6231)"},{"Id":"1288383209","IsPullRequest":false,"CreatedAt":"2022-07-14T08:00:22","Actor":"IzzyHibbert","Number":"6240","RawContent":null,"Title":"Could not load file or assembly 'System.Runtime.CompilerServices.Unsafe, Version=4.0.4.1","State":"closed","Body":"System Info :\r\n - OS : Win 2019\r\n - ML.NET Version: 1.5, tried already 1.7.1\r\n - .NET Version: 4.7.2\r\n\r\nIssue : \r\nI am trying to use ML in my .NET 4.7.2 class library project. \r\nI imported ML with Nuget, created the model, and when I use the dll I get the following error :\r\n\r\n```\r\nSystem.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.IO.FileLoadException: Could not load file or assembly 'System.Runtime.CompilerServices.Unsafe, Version=4.0.4.1, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)\r\nat System.MemoryExtensions.AsSpan(String text)\r\n```\r\nthe app.config file has the entry:\r\n\r\n```\r\n        <dependentAssembly>\r\n            <assemblyIdentity name=\"System.Runtime.CompilerServices.Unsafe\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n            <bindingRedirect oldVersion=\"0.0.0.0-4.0.4.1\" newVersion=\"4.0.4.1\" />\r\n        </dependentAssembly>\r\n```\r\n\r\nand the installed unsafe package is 4.5.3 \r\nI also tried to solve this by using other versions of ML.net, but still getting the same error.\r\nAlso, running a unit test on this was fine without any error.\r\n\r\nIs there anything more that could be done ?\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6240","RelatedDescription":"Closed issue \"Could not load file or assembly 'System.Runtime.CompilerServices.Unsafe, Version=4.0.4.1\" (#6240)"},{"Id":"1303935379","IsPullRequest":false,"CreatedAt":"2022-07-13T20:54:07","Actor":"80LevelElf","Number":"6251","RawContent":null,"Title":"Memory leak by Auto ML","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 10\r\n - ML.NET Version: ML.NET 2.0 preview (but have the same results when using 1.7.1 versions)\r\n - .NET Version: NET 5.0\r\n\r\n**Describe the bug**\r\nI have noticed that time to time my kubernetas pod faced Out of memory exception. Regarding to Grafana it starts with 500 Mb and reach 6 Gb after some times of processing of queue of learning.\r\n\r\nThen I have tried to reproduce the problem on my local machine and looks like I have found a problem by memory profiling:\r\n\r\n    // Call AutoML learning inside\r\n    await container.Resolve<IMlModelLearningPartTrainer>().Learn(Guid.Parse(\"43f60690-a594-4e8a-93bd-a91a2d836139\"));\r\n    \r\n    // After learning finishing forcely call the garbage collector\r\n    GC.Collect();\r\n\r\n    // Here I make a memory profiling\r\n\r\nAnd this is what I found:\r\n\r\n![Leak](https://user-images.githubusercontent.com/3397048/178831225-d3c95eb4-c1ba-4e72-8ba2-549206f9d598.jpg)\r\n\r\nLooks like AutoML use some timer callback inside to stop the learning. But for some reason it's not disposing event after learning is already finished. This timer lambda catch the outer context of learning and this is why GC can't dispose learning data.\r\n\r\nAnd after 1 hour after end of the learning - this learning data are still in the memory. It's a memory leak.\r\n\r\nHope this snapshots of our code help you. This is how we start the learning:\r\n\r\n            var settings = new BinaryExperimentSettings\r\n            {\r\n                MaxExperimentTimeInSeconds = (uint) maxExperimentTime,\r\n                OptimizingMetric = trainerAndMetric.Metric\r\n            };\r\n            \r\n            settings.Trainers.Clear();\r\n            settings.Trainers.Add(trainerAndMetric.Trainer);\r\n\r\n            var experiment = mlContext.Auto().CreateBinaryClassificationExperiment(settings);\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Start an AutoML learning for 5-10 minutes\r\n2. Whait the end of the learning\r\n3. Call GC.Collect\r\n4. Take a memory snapshot\r\n5. Check the data. Learning data are still in the memory\r\n\r\n**Expected behavior**\r\nNo data leak :)\r\n\r\n**Additional context**\r\nI reproduce the problem in 2.0 preview version of ML.NET and AutoML. But we upgrade the version tomorrow tring to solve the memory problem. We have the same out of memory problem at 2.0 preview and 1.7.1 versions. So I assume that the 1.7.1 version have the same memory leak problem.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6251","RelatedDescription":"Open issue \"Memory leak by Auto ML\" (#6251)"},{"Id":"1292208303","IsPullRequest":false,"CreatedAt":"2022-07-12T15:57:00","Actor":"QuinnDamerell","Number":"6244","RawContent":null,"Title":"Exception When Doing Image Prediction On Ubuntu","State":"closed","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Ubuntu 20.04.4 LTS\r\n - ML.NET Version: ML 1.7.1\r\n - .NET Version: NET 6.0\r\n\r\n**Describe the bug**\r\n\r\nI'm running a quite standard version of Ubuntu, using the latest dotnet 6.0 and latest ML libs, but for some reason, I'm getting this exception while trying to do an image clarification prediction on Linux. This logic work just fine on Windows. \r\n\r\nI looked up the issue and found this old bug from before dotnet 3.0. \r\nhttps://github.com/dotnet/runtime/issues/27200\r\n\r\nI did however still ran `apt-get install libgdiplus libc6-dev` and make sure the .so was in the /usr/lib dir where it should have been, yet I still get this issue.\r\n\r\nError: Exception throw in GadgetMl perdict.; TypeInitializationException - The type initializer for 'Gdip' threw an exception. -    at System.Drawing.SafeNa>\r\n    at System.Drawing.Image.InitializeFromStream(Stream stream)\r\n    at System.Drawing.Image.LoadFromStream(Stream stream, Boolean keepAlive)\r\n    at System.Drawing.Image.FromStream(Stream stream, Boolean useEmbeddedColorManagement, Boolean validateImageData)\r\n    at System.Drawing.Image.FromStream(Stream stream, Boolean useEmbeddedColorManagement)\r\n    at System.Drawing.Image.FromStream(Stream stream)\r\n    at Microsoft.ML.Data.ImageLoadingTransformer.Mapper.<>c__DisplayClass4_0.<MakeGetterImageDataViewType>b__1(Bitmap& dst)\r\n    at Microsoft.ML.Transforms.Image.ImageResizingTransformer.Mapper.<>c__DisplayClass3_0.<MakeGetter>b__1(Bitmap& dst)\r\n    at Microsoft.ML.Transforms.Image.ImagePixelExtractingTransformer.Mapper.<>c__DisplayClass5_0`1.<GetGetterCore>b__1(VBuffer`1& dst)\r\n    at Microsoft.ML.Transforms.Onnx.OnnxTransformer.Mapper.NamedOnnxValueGetterVec`1.GetNamedOnnxValue()\r\n    at Microsoft.ML.Transforms.Onnx.OnnxTransformer.Mapper.UpdateCacheIfNeeded(Int64 position, INamedOnnxValueGetter[] srcNamedOnnxValueGetters, List`1 activ>\r\n    at Microsoft.ML.Transforms.Onnx.OnnxTransformer.Mapper.<>c__DisplayClass14_0`1.<MakeTensorGetter>b__0(VBuffer`1& dst)\r\n    at Microsoft.ML.Data.TypedCursorable`1.TypedRowBase.<>c__DisplayClass8_0`1.<CreateDirectVBufferSetter>b__0(TRow row)\r\n    at Microsoft.ML.Data.TypedCursorable`1.TypedRowBase.FillValues(TRow row)\r\n    at Microsoft.ML.Data.TypedCursorable`1.RowImplementation.FillValues(TRow row)\r\n    at Microsoft.ML.PredictionEngineBase`2.FillValues(TDst prediction)\r\n    at Microsoft.ML.PredictionEngine`2.Predict(TSrc example, TDst& prediction)\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots, Code, Sample Projects**\r\nIf applicable, add screenshots, code snippets, or sample projects to help explain your problem.\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6244","RelatedDescription":"Closed issue \"Exception When Doing Image Prediction On Ubuntu\" (#6244)"},{"Id":"1301582401","IsPullRequest":false,"CreatedAt":"2022-07-12T06:07:01","Actor":"elisaho","Number":"6250","RawContent":null,"Title":"Prediction engine outputs only one class","State":"open","Body":"**System Information (please complete the following information):**\r\n - Windows 10 build 19044.1766\r\n - ML.NET v1.7.1\r\n - .NET 6.0\r\n\r\n**Describe the bug**\r\nFor a given image input to the prediction engine, the output schema only allows for one output detected class (and a single corresponding score). However, I would like for all detected classes to be returned. \r\nI am working on consuming the tensorflow model for object detection (exported from Custom Vision as GeneralCompactS1) in .Net using ML.NET. I have closely referenced:  \r\n[https://github.com/dotnet/machinelearning-samples/tree/main/samples/csharp/end-to-end-apps/DeepLearning_ImageClassification_TF/TFImageClassification ](url)\r\nI know the model can return multiple detected classes as I have consumed the same tensorflow model with python, tensorflowsharp, and tensorflow.net. I have tried appending column names with ':0' and ':1'(e.g. detected_classes:0) and changing the output tensor types (e.g. for detected_classes, change long to long[]), both to no avail. \r\n\r\n**Expected behavior**\r\nI expect all detected classes and their corresponding scores to be returned. \r\n\r\n**Screenshots, Code, Sample Projects**\r\n![image](https://user-images.githubusercontent.com/82560572/178418379-6fa91a35-5518-47b6-af35-c5f2fc2c89f4.png)\r\n![image](https://user-images.githubusercontent.com/82560572/178418911-2ffebbb3-aa80-48ca-890f-eec5362cc251.png)\r\n![image](https://user-images.githubusercontent.com/82560572/178419006-30a660f7-0f7e-487b-b6a9-77b0ccc928ef.png)\r\n![image](https://user-images.githubusercontent.com/82560572/178419132-3d1d4a47-7514-4b63-96ad-a63df6314c6b.png)\r\n![image](https://user-images.githubusercontent.com/82560572/178419196-bf0bfe97-fd83-4dec-aa61-50f9beb13b61.png)\r\n![image](https://user-images.githubusercontent.com/82560572/178419998-148f837e-8884-4643-9217-7101974259ea.png)\r\n<img width=\"766\" alt=\"Screenshot 2022-07-12 160630\" src=\"https://user-images.githubusercontent.com/82560572/178420335-968c8ae3-6dbd-42b9-9507-027de7675011.png\">\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6250","RelatedDescription":"Open issue \"Prediction engine outputs only one class\" (#6250)"},{"Id":"1299623466","IsPullRequest":false,"CreatedAt":"2022-07-11T17:20:59","Actor":"wangLinWuYing","Number":"6248","RawContent":null,"Title":"Tensorflow's hardware CPu requirements, such as the minimum REQUIRED CPu configuration, do not use the GPU ","State":"closed","Body":"Tensorflow's hardware CPu requirements, such as the minimum REQUIRED CPu configuration, do not use the GPU ","Url":"https://github.com/dotnet/machinelearning/issues/6248","RelatedDescription":"Closed issue \"Tensorflow's hardware CPu requirements, such as the minimum REQUIRED CPu configuration, do not use the GPU \" (#6248)"},{"Id":"1300656056","IsPullRequest":true,"CreatedAt":"2022-07-11T12:40:54","Actor":"dotnet-maestro[bot]","Number":"6249","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 97926d79-6b8b-4d32-c8db-08d9d479971c\r\n- **Build**: 20220717.1\r\n- **Date Produced**: July 18, 2022 5:29:25 AM UTC\r\n- **Commit**: f7951a64db920ea599bd6819065b661d88d26b23\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22327.2 to 7.0.0-beta.22367.1][2]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 7.0.0-beta.22327.2 to 7.0.0-beta.22367.1][2]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22327.2 to 7.0.0-beta.22367.1][2]\r\n  - **Microsoft.DotNet.SignTool**: [from 7.0.0-beta.22327.2 to 7.0.0-beta.22367.1][2]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 7.0.0-beta.22327.2 to 7.0.0-beta.22367.1][2]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.22327.2 to 7.0.0-beta.22367.1][2]\r\n\r\n[2]: https://github.com/dotnet/arcade/compare/a264eb1...f7951a6\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6249","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#6249)"},{"Id":"1293104884","IsPullRequest":true,"CreatedAt":"2022-07-06T23:58:50","Actor":"dotnet-maestro[bot]","Number":"6245","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 97926d79-6b8b-4d32-c8db-08d9d479971c\r\n- **Build**: 20220627.2\r\n- **Date Produced**: June 27, 2022 5:10:02 PM UTC\r\n- **Commit**: a264eb13fea14125f3ef8d4056586cd66fa55309\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22327.1 to 7.0.0-beta.22327.2][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 7.0.0-beta.22327.1 to 7.0.0-beta.22327.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22327.1 to 7.0.0-beta.22327.2][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 7.0.0-beta.22327.1 to 7.0.0-beta.22327.2][1]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 7.0.0-beta.22327.1 to 7.0.0-beta.22327.2][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.22327.1 to 7.0.0-beta.22327.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/640c1cc...a264eb1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6245","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6245)"},{"Id":"1289422403","IsPullRequest":true,"CreatedAt":"2022-07-06T18:55:22","Actor":"JakeRadMSFT","Number":"6243","RawContent":null,"Title":"Add AutoML Interactive Extension","State":"closed","Body":"This PR is going to add a Visualizer for AutoML experiments to track AutoML progress while it's running in a Notebook.\r\n\r\nIt's not perfect but it's a start:\r\n\r\n<img width=\"1005\" alt=\"image\" src=\"https://user-images.githubusercontent.com/31937616/176798313-5d58be4f-3326-4ca9-8b2a-5ed9cac05e29.png\">\r\n\r\n\r\n----------------------\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6243","RelatedDescription":"Closed or merged PR \"Add AutoML Interactive Extension\" (#6243)"},{"Id":"1289416461","IsPullRequest":true,"CreatedAt":"2022-06-30T21:50:27","Actor":"michaelgsharp","Number":"6242","RawContent":null,"Title":"Fixes Onnx Export for Column Copy Transformer.","State":"closed","Body":"Fixes #6237. Column Copy Transformer was checking the wrong thing during the onnx export. It was checking if the intermediate variable exists in the input dataset when it needed to check if the original column name existed in the original dataset.\r\n\r\nWhen Column Copy Transformer is using a column that hasn't been used by another transformer this bug was not encountered. It only shows up when a column (with the same name) is used by a previews transformer. Because this change only affects the internal onnx state, not really a good way to test it automatically.","Url":"https://github.com/dotnet/machinelearning/pull/6242","RelatedDescription":"Closed or merged PR \"Fixes Onnx Export for Column Copy Transformer.\" (#6242)"},{"Id":"1283873717","IsPullRequest":false,"CreatedAt":"2022-06-30T21:50:26","Actor":"jonathanpeppers","Number":"6237","RawContent":null,"Title":"Issue saving model to .onnx format","State":"closed","Body":"**System Information (please complete the following information):**\r\n - OS & Version:  Windows 10\r\n - ML.NET Version: 1.7.1\r\n - .NET Version: .NET 6\r\n\r\n**Describe the bug**\r\n\r\nI trained a model with:\r\n\r\n```\r\nmlnet classification --dataset classified.csv --label-col 1 --has-header true --train-time 60\r\n```\r\n\r\nOpened the resulting project, and tried to change it to save the model file as `.onnx` format:\r\n\r\n[SampleClassification.zip](https://github.com/dotnet/machinelearning/files/8977193/SampleClassification.zip)\r\n\r\nInstalled the NuGet:\r\n\r\n```xml\r\n<PackageReference Include=\"Microsoft.ML.OnnxConverter\" Version=\"0.19.1\" />\r\n```\r\n\r\nTrying something like:\r\n\r\n```csharp\r\nprivate static void SaveModel(MLContext mlContext, IDataView dataView, ITransformer mlModel, string modelRelativePath, DataViewSchema modelInputSchema)\r\n{\r\n    // Save/persist the trained model to a .ZIP file\r\n    Console.WriteLine($\"=============== Saving the model  ===============\");\r\n    //mlContext.Model.Save(mlModel, modelInputSchema, GetAbsolutePath(modelRelativePath));\r\n    using var fileStream = File.Create(modelRelativePath);\r\n    mlContext.Model.ConvertToOnnx(mlModel, dataView, fileStream);\r\n\r\n    Console.WriteLine(\"The model is saved to {0}\", GetAbsolutePath(modelRelativePath));\r\n}\r\n```\r\n\r\nThrows an exception:\r\n```\r\nSystem.Collections.Generic.KeyNotFoundException\r\n  HResult=0x80131577\r\n  Message=The given key 'text_TextNormalizer' was not present in the dictionary.\r\n  Source=System.Private.CoreLib\r\n  StackTrace:\r\n   at System.ThrowHelper.ThrowKeyNotFoundException[T](T key)\r\n   at System.Collections.Generic.Dictionary`2.get_Item(TKey key)\r\n   at Microsoft.ML.Model.OnnxConverter.OnnxContextImpl.GetVariableName(String colName)\r\n   at Microsoft.ML.Transforms.Text.WordTokenizingTransformer.Mapper.SaveAsOnnx(OnnxContext ctx)\r\n   at Microsoft.ML.Data.RowToRowMapperTransform.Microsoft.ML.Model.OnnxConverter.ISaveAsOnnx.SaveAsOnnx(OnnxContext ctx)\r\n   at Microsoft.ML.Model.OnnxConverter.SaveOnnxCommand.ConvertTransformListToOnnxModel(OnnxContextImpl ctx, IChannel ch, IDataView inputData, IDataView outputData, LinkedList`1 transforms, HashSet`1 inputColumnNamesToDrop, HashSet`1 outputColumnNamesToDrop)\r\n   at Microsoft.ML.OnnxExportExtensions.ConvertToOnnxProtobufCore(IHostEnvironment env, OnnxContextImpl ctx, ITransformer transform, IDataView inputData, String[] outputColumnNamesToKeep)\r\n   at Microsoft.ML.OnnxExportExtensions.ConvertToOnnxProtobuf(ModelOperationsCatalog catalog, ITransformer transform, IDataView inputData, String[] outputColumns)\r\n   at Microsoft.ML.OnnxExportExtensions.ConvertToOnnx(ModelOperationsCatalog catalog, ITransformer transform, IDataView inputData, Stream stream)\r\n   at SampleClassification.ConsoleApp.ModelBuilder.SaveModel(MLContext mlContext, IDataView dataView, ITransformer mlModel, String modelRelativePath, DataViewSchema modelInputSchema) in C:\\Users\\jopepper\\Downloads\\SampleClassification (2)\\SampleClassification.ConsoleApp\\ModelBuilder.cs:line 92\r\n   at SampleClassification.ConsoleApp.ModelBuilder.CreateModel() in C:\\Users\\jopepper\\Downloads\\SampleClassification (2)\\SampleClassification.ConsoleApp\\ModelBuilder.cs:line 47\r\n   at SampleClassification.ConsoleApp.Program.Main(String[] args) in C:\\Users\\jopepper\\Downloads\\SampleClassification (2)\\SampleClassification.ConsoleApp\\Program.cs:line 16\r\n```\r\n\r\n**To Reproduce**\r\n\r\n1. Open the above project in VS\r\n2. Run it\r\n\r\n**Expected behavior**\r\n\r\nWe need to convert our model to `.onnx` format, to be able to use it from JavaScript, and I think this is the best option? Let me know otherwise.\r\n\r\n**Screenshots, Code, Sample Projects**\r\n\r\nSample above.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6237","RelatedDescription":"Closed issue \"Issue saving model to .onnx format\" (#6237)"},{"Id":"1276858840","IsPullRequest":true,"CreatedAt":"2022-06-30T16:03:33","Actor":"dotnet-maestro[bot]","Number":"6234","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 97926d79-6b8b-4d32-c8db-08d9d479971c\r\n- **Build**: 20220627.1\r\n- **Date Produced**: June 27, 2022 8:28:47 AM UTC\r\n- **Commit**: 640c1cc2a140b322c4f30f6d6b85f35f0c4c7313\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22313.1 to 7.0.0-beta.22327.1][2]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 7.0.0-beta.22313.1 to 7.0.0-beta.22327.1][2]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22313.1 to 7.0.0-beta.22327.1][2]\r\n  - **Microsoft.DotNet.SignTool**: [from 7.0.0-beta.22313.1 to 7.0.0-beta.22327.1][2]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 7.0.0-beta.22313.1 to 7.0.0-beta.22327.1][2]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.22313.1 to 7.0.0-beta.22327.1][2]\r\n\r\n[2]: https://github.com/dotnet/arcade/compare/569a3f0...640c1cc\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6234","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6234)"},{"Id":"1288741302","IsPullRequest":false,"CreatedAt":"2022-06-29T13:37:39","Actor":"zhangfeibao","Number":"6241","RawContent":null,"Title":"load ONNX model(RNN[LSTM]) can not work ","State":"open","Body":"**System Information**\r\n - OS & Version: Windows 10]\r\n - ML.NET Version: ML.NET v1.5.5\r\n - .NET Version: NET 6.0\r\n\r\nI got the onnx model from tf2.\r\nThe model infomation is:\r\n![image](https://user-images.githubusercontent.com/12379132/176447293-f3e6f9f2-cba6-4dfc-a53f-f3a6f7932c08.png)\r\nI load the onnx model follow the [document.](https://docs.microsoft.com/en-us/azure/machine-learning/how-to-use-automl-onnx-model-dotnet)\r\n\r\n```c#\r\nprivate static ITransformer GetPredictionPipeline(MLContext mlContext)\r\n{\r\n    var inputColumns = new string[]\r\n    {\r\n        \"model\"\r\n    };\r\n\r\n    var outputColumns = new string[] { \"dense\" };\r\n\r\n    var onnxPredictionPipeline =\r\n        mlContext\r\n        .Transforms\r\n        .ApplyOnnxModel(\r\n        outputColumnNames: outputColumns,\r\n        inputColumnNames: inputColumns,\r\n        ONNX_MODEL_PATH);\r\n\r\n    var emptyDv = mlContext.Data.LoadFromEnumerable(new OnnxInput[] {});    //the line will throw the exception\r\n\r\n    return onnxPredictionPipeline.Fit(emptyDv);\r\n}\r\n\r\n```\r\n\r\n\r\nwhen i ran the app,I got the exception at the line.\r\n> **System.InvalidOperationException:“Input** shape mismatch: Input 'model' has shape 1,50,4, but input data is of length 1.”\r\n\r\nI have tryed many time to resove the problem.but it just can't work!\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6241","RelatedDescription":"Open issue \"load ONNX model(RNN[LSTM]) can not work \" (#6241)"},{"Id":"1286604130","IsPullRequest":false,"CreatedAt":"2022-06-28T00:30:46","Actor":"luisquintanilla","Number":"6238","RawContent":null,"Title":"[DataFrame] Allow quote escaping","State":"open","Body":"Loading data from a column containing quotes inside a string shouldn't break. \r\n\r\n```text\r\n\"this is one column value which includes a \"\" character\" \r\n```","Url":"https://github.com/dotnet/machinelearning/issues/6238","RelatedDescription":"Open issue \"[DataFrame] Allow quote escaping\" (#6238)"},{"Id":"1283467806","IsPullRequest":false,"CreatedAt":"2022-06-27T06:36:51","Actor":"paul1610","Number":"6236","RawContent":null,"Title":"Can´t make prediction with code trained model","State":"closed","Body":"**System Information (please complete the following information):**\r\n - Windows 10\r\n - ML.NET Version: ML.NET v1.7.1\r\n - .NET Version: .NET 6.0\r\n\r\n**Describe the bug**\r\nWhen I tried to get a prediction from a new trained model, the error \r\n```\r\nSystem.ArgumentOutOfRangeException: 'Could not find input column 'ImagePath'\r\nParameter name: inputSchema'\r\n```\r\n**Expected behavior**\r\nThe final model should be saved & used for prediction.\r\n\r\n**Additional context**\r\nGitHub Repository: https://github.com/paul1610/csharp-faceid\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6236","RelatedDescription":"Closed issue \"Can´t make prediction with code trained model\" (#6236)"},{"Id":"1282919068","IsPullRequest":true,"CreatedAt":"2022-06-24T15:28:18","Actor":"michaelgsharp","Number":"6235","RawContent":null,"Title":"Added score column. Auto count unique labels.","State":"closed","Body":"This PR fixes #6227, fixes #6225, and fixes #6226.\r\n\r\nIt adds in the score column, truncates the input tokens at 512, and auto calculates the number of classes.\r\n\r\nIt also gets the row count to correctly set the Learning Rate Scheduler. In my offline testing this increased accuracy by up to 20% based on the dataset, batch size, and number of epochs. Mileage will vary per dataset, but all datasets should see an increase in accuracy.\r\n\r\nIt also adds in row caching similar to how the OnnxTransformer does row caching.","Url":"https://github.com/dotnet/machinelearning/pull/6235","RelatedDescription":"Closed or merged PR \"Added score column. Auto count unique labels.\" (#6235)"},{"Id":"1268832217","IsPullRequest":false,"CreatedAt":"2022-06-24T15:28:17","Actor":"luisquintanilla","Number":"6227","RawContent":null,"Title":"Text Classification - output score column for evaluation","State":"closed","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: ML.NET 2.0.0-preview.33210.1, ML.NET 0.20.0-preview.33210.1\r\n - .NET Version: .NET 6.0\r\n\r\n**Describe the bug**\r\n\r\nCurrently, the output from a model generated by the Text Classification API doesn't include a Score column which is a requirement when using the `Evaluate` method in the multiclass classification catalog. As a result, users have to manually calculate their evaluation metrics and can't leverage the `Evaluate` method. For consistency and improved user experience, output a `Score` column with the probabilities of the respective labels. \r\n\r\nUsing a pipeline like the following results in the error `scoreColumnName cannot be null or empty`:\r\n\r\n```csharp\r\n//Initialize MLContext\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.Data;\r\nusing Microsoft.ML.TorchSharp;\r\nusing System.ComponentModel;\r\n\r\nvar mlContext = new MLContext();\r\n\r\n// Load your data\r\nvar dataView = mlContext.Data.LoadFromTextFile<ModelInputYelp>(@\"C:\\Datasets\\yelp_labelled.txt\", separatorChar: '\\t');\r\n\r\nvar trainTestSplit = mlContext.Data.TrainTestSplit(dataView, testFraction: 0.2);\r\n\r\n//Define your training pipeline\r\nvar pipeline =\r\n        mlContext.Transforms.Conversion.MapValueToKey(\"Label\", \"Sentiment\")\r\n            .Append(mlContext.MulticlassClassification.Trainers.TextClassification(sentence1ColumnName: \"ReviewText\"))\r\n            .Append(mlContext.Transforms.Conversion.MapKeyToValue(\"PredictedLabel\"));\r\n\r\n// Train the model\r\n\r\nConsole.WriteLine(\"Training model...\");\r\n\r\nvar model = pipeline.Fit(trainTestSplit.TrainSet);\r\n\r\nConsole.WriteLine(\"Model trained...\");\r\n\r\n// Evaluate the model \r\nvar predictions =\r\n    model.Transform(trainTestSplit.TestSet);\r\n\r\nvar evaluationMetrics =\r\n    mlContext.MulticlassClassification.Evaluate(predictions, labelColumnName: \"Sentiment\", scoreColumnName: null);\r\n\r\npublic class ModelInputYelp\r\n{\r\n    [LoadColumn(0)]\r\n    public string ReviewText { get; set; }\r\n\r\n    [LoadColumn(1)]\r\n    public float Sentiment { get; set; }\r\n}\r\n```\r\n\r\n**Stacktrace**:\r\n\r\n```text\r\nSystem.ArgumentOutOfRangeException\r\n  HResult=0x80131502\r\n  Message=scoreColumnName cannot be null or empty (Parameter 'scoreColumnName')\r\n  Source=Microsoft.ML.Core\r\n  StackTrace:\r\n   at Microsoft.ML.Runtime.Contracts.CheckNonEmpty(IExceptionContext ctx, String s, String paramName)\r\n   at Microsoft.ML.MulticlassClassificationCatalog.Evaluate(IDataView data, String labelColumnName, String scoreColumnName, String predictedLabelColumnName, Int32 topKPredictionCount)\r\n   at Program.<Main>$(String[] args) in C:\\Users\\luquinta.REDMOND\\source\\repos\\TextClassificationAPI\\TextClassificationAPI\\Program.cs:line 32\r\n```\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6227","RelatedDescription":"Closed issue \"Text Classification - output score column for evaluation\" (#6227)"},{"Id":"1268749321","IsPullRequest":false,"CreatedAt":"2022-06-24T15:28:17","Actor":"luisquintanilla","Number":"6226","RawContent":null,"Title":"Text Classification index out of range in self","State":"closed","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: ML.NET 2.0.0-preview.22310.1, ML.NET 0.20.0-preview.22310.1\r\n - .NET Version: .NET 6.0\r\n\r\n**Describe the bug**\r\n\r\nWhen running a training workload on the [wikipedia detox dataset](https://raw.githubusercontent.com/dotnet/machinelearning/main/test/data/wikipedia-detox-250-line-data.tsv) with the following pipeline, I get the error `index out of range in self`:\r\n\r\n**Pipeline**\r\n\r\n```csharp\r\n//Initialize MLContext\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.Data;\r\nusing Microsoft.ML.TorchSharp;\r\nusing System.ComponentModel;\r\n\r\nvar mlContext = new MLContext();\r\n\r\n// Load your data\r\nvar dataView = mlContext.Data.LoadFromTextFile<ModelInput>(@\"C:\\Datasets\\wikipedia-detox-250-line-data.tsv\", hasHeader: true);\r\n\r\n//Define your training pipeline\r\nvar pipeline =\r\n\t\tmlContext.Transforms.Conversion.MapValueToKey(\"Label\",\"Sentiment\")\r\n\t\t\t.Append(mlContext.MulticlassClassification.Trainers.TextClassification(sentence1ColumnName: \"SentimentText\", outputColumnName: \"outputColumn\"))\r\n\t\t\t.Append(mlContext.Transforms.Conversion.MapKeyToValue(\"outputColumn\"));\r\n\r\n// Train the model\r\n\r\nConsole.WriteLine(\"Training model...\");\r\n\r\nvar model = pipeline.Fit(dataView);\r\n\r\nConsole.WriteLine(\"Model trained...\");\r\n\r\npublic class ModelInput\r\n{\r\n    [LoadColumn(0)]\r\n    public float Sentiment { get; set; }\r\n\r\n    [LoadColumn(1)]\r\n    public string SentimentText { get; set; }\r\n}\r\n```\r\n\r\n**Stacktrace**\r\n```\r\nSystem.Runtime.InteropServices.ExternalException\r\n  HResult=0x80004005\r\n  Message=index out of range in self\r\nException raised from operator () at C:\\actions-runner\\_work\\pytorch\\pytorch\\builder\\windows\\pytorch\\aten\\src\\ATen\\native\\TensorAdvancedIndexing.cpp:996 (most recent call first):\r\n00007FFFA4C8A4C200007FFFA4C8A460 c10.dll!c10::Error::Error [<unknown file> @ <unknown line number>]\r\n00007FFFA4C63ED500007FFFA4C63E60 c10.dll!c10::IndexError::IndexError [<unknown file> @ <unknown line number>]\r\n00007FFF899A545200007FFF89992360 torch_cpu.dll!at::native::_bincount_cpu [<unknown file> @ <unknown line number>]\r\n00007FFF899ADA5F00007FFF89992360 torch_cpu.dll!at::native::_bincount_cpu [<unknown file> @ <unknown line number>]\r\n00007FFF8999567800007FFF89992360 torch_cpu.dll!at::native::_bincount_cpu [<unknown file> @ <unknown line number>]\r\n00007FFF98A7D8ED00007FFF98A7D7C0 libiomp5md.dll!_kmp_invoke_microtask [<unknown file> @ <unknown line number>]\r\n00007FFF98A2777C00007FFF98A26E30 libiomp5md.dll!_kmpc_threadprivate_register_vec [<unknown file> @ <unknown line number>]\r\n00007FFF989DE72C00007FFF989D4B50 libiomp5md.dll!_kmp_acquire_nested_drdpa_lock [<unknown file> @ <unknown line number>]\r\n00007FFF98A682B200007FFF98A68160 libiomp5md.dll!_kmp_launch_worker [<unknown file> @ <unknown line number>]\r\n00007FF890F754E000007FF890F754D0 KERNEL32.DLL!BaseThreadInitThunk [<unknown file> @ <unknown line number>]\r\n00007FF89296485B00007FF892964830 ntdll.dll!RtlUserThreadStart [<unknown file> @ <unknown line number>]\r\n\r\n  Source=TorchSharp\r\n  StackTrace:\r\n   at TorchSharp.torch.CheckForErrors()\r\n   at TorchSharp.Modules.Embedding.forward(Tensor input)\r\n   at Microsoft.ML.TorchSharp.NasBert.Modules.LearnedPositionalEmbedding.forward(Tensor input, Dictionary`2 param)\r\n   at Microsoft.ML.TorchSharp.NasBert.Models.TransformerEncoder.ForwardEmbedding(Tensor tokens, Tensor segmentLabels, Tensor positions)\r\n   at Microsoft.ML.TorchSharp.NasBert.Models.TransformerEncoder.forward(Tensor tokens, Tensor segmentLabels, Tensor positions)\r\n   at Microsoft.ML.TorchSharp.NasBert.Models.BaseModel.ExtractFeatures(Tensor srcTokens)\r\n   at Microsoft.ML.TorchSharp.NasBert.Models.TextClassificationModel.forward(Tensor srcTokens, Tensor tokenMask)\r\n   at Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer.Trainer.TrainStep(DataViewRowCursor cursor, ValueGetter`1 sentence1Getter, ValueGetter`1 sentence2Getter, ValueGetter`1 labelGetter, List`1& inputTensors, List`1& targets)\r\n   at Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer.Trainer.Train(IDataView input)\r\n   at Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Program.<Main>$(String[] args) in C:\\Users\\luquinta.REDMOND\\source\\repos\\TextClassificationAPI\\TextClassificationAPI\\Program.cs:line 22\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots, Code, Sample Projects**\r\nIf applicable, add screenshots, code snippets, or sample projects to help explain your problem.\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6226","RelatedDescription":"Closed issue \"Text Classification index out of range in self\" (#6226)"},{"Id":"1275370888","IsPullRequest":false,"CreatedAt":"2022-06-17T19:05:11","Actor":"vadd98","Number":"6233","RawContent":null,"Title":"Can't make image classification prediction on MacOS using a Tensorflow model","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: MacOS 12.4\r\n - ML.NET Version: Microsoft.ML 1.7.1\r\n - .NET Version: NET 6.0\r\n\r\n**Describe the bug**\r\nIt seems impossible to make prediction based on images using a Tensorflow model on Mac.\r\nI'm always getting this error:\r\n\r\n`Unhandled exception. System.IndexOutOfRangeException: Index was outside the bounds of the array.\r\n   at Microsoft.ML.Transforms.Image.ImagePixelExtractingTransformer.Mapper.<>c__DisplayClass5_0`1.<GetGetterCore>b__1(VBuffer`1& dst)\r\n   at Microsoft.ML.Transforms.TensorFlowTransformer.TensorValueGetterVec`1.GetTensor()\r\n   at Microsoft.ML.Transforms.TensorFlowTransformer.Mapper.UpdateCacheIfNeeded(Int64 position, ITensorValueGetter[] srcTensorGetters, String[] activeOutputColNames, OutputCache outputCache)\r\n   at Microsoft.ML.Transforms.TensorFlowTransformer.Mapper.<>c__DisplayClass11_0`1.<MakeGetter>b__4(VBuffer`1& dst)\r\n   at Microsoft.ML.Data.TypedCursorable`1.TypedRowBase.<>c__DisplayClass8_0`1.<CreateDirectVBufferSetter>b__0(TRow row)\r\n   at Microsoft.ML.Data.TypedCursorable`1.TypedRowBase.FillValues(TRow row)\r\n   at Microsoft.ML.Data.TypedCursorable`1.RowImplementation.FillValues(TRow row)\r\n   at Microsoft.ML.PredictionEngineBase`2.FillValues(TDst prediction)\r\n   at Microsoft.ML.PredictionEngine`2.Predict(TSrc example, TDst& prediction)\r\n   at Microsoft.ML.PredictionEngineBase`2.Predict(TSrc example)\r\n`\r\n\r\nThe exact same code with same model and same images to predict works flawlessly on Windows 10.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Train a Tensorflow Model (I trained the model using Python)\r\n2. Import the trained model in ML.NET\r\n3. Try to make a prediction starting from an image\r\n4. See error\r\n\r\n**Expected behavior**\r\nMake predictions without exceptions.\r\n\r\n**Screenshots, Code, Sample Projects**\r\nIf applicable, add screenshots, code snippets, or sample projects to help explain your problem.\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6233","RelatedDescription":"Open issue \"Can't make image classification prediction on MacOS using a Tensorflow model\" (#6233)"},{"Id":"1273827875","IsPullRequest":false,"CreatedAt":"2022-06-16T16:44:30","Actor":"LittleLittleCloud","Number":"6232","RawContent":null,"Title":"[Nice to have] having transformers to get date information from Datetime","State":"open","Body":"ModelBuilder just add support for `Datetime` type, in order to make the most use of this type, it would be helpful if ML.Net has API to extract specific date information from datetime column\r\n\r\n**Describe the solution you'd like**\r\n```csharp\r\nclass Input\r\n{\r\n    public Datetime date {get; set;]\r\n}\r\n\r\nvar pipeline = mlContext.Transformer.GetYearOutOfDate(\"year\", \"date\")\r\n                            .Append(mlContext.Transformer.GetDayOutOfDate(\"day\", \"date\")\r\n                            .Append(mlContext.Transformer.GetWeekdayOutOfDate(\"weekday\", \"date\")\r\n                            .Append(mlContext.Transformer.GetMonthOutOfDate(\"month\", \"date\");\r\nclass Output\r\n{\r\n    public Datetme date {get; set;}\r\n    public int Year {get; set;}\r\n    public int day {get; set;}\r\n    public string Month {get; set;} // Feb, Jan... \r\n    public string Weekday {get; set;} // Mon, Tue,..\r\n}\r\n\r\n```\r\n\r\n## What's more\r\nignore this issue if ML.Net already support that.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6232","RelatedDescription":"Open issue \"[Nice to have] having transformers to get date information from Datetime\" (#6232)"},{"Id":"1269712903","IsPullRequest":true,"CreatedAt":"2022-06-14T22:26:29","Actor":"LittleLittleCloud","Number":"6228","RawContent":null,"Title":"Fix #2127 by adding \"Microsoft.ML.Transforms\" in using statement","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n- issue: https://github.com/dotnet/machinelearning-modelbuilder/issues/2127","Url":"https://github.com/dotnet/machinelearning/pull/6228","RelatedDescription":"Closed or merged PR \"Fix #2127 by adding \"Microsoft.ML.Transforms\" in using statement\" (#6228)"},{"Id":"1269993654","IsPullRequest":true,"CreatedAt":"2022-06-14T18:22:36","Actor":"michaelgsharp","Number":"6230","RawContent":null,"Title":"Mac CI Fixes.","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6230","RelatedDescription":"Closed or merged PR \"Mac CI Fixes.\" (#6230)"},{"Id":"1269976437","IsPullRequest":true,"CreatedAt":"2022-06-13T23:45:27","Actor":"michaelgsharp","Number":"6229","RawContent":null,"Title":"TorchSharp documentation and minor updates.","State":"closed","Body":"Adds some more documentation and updates some as well.\r\n\r\nnum classes no longer defaults to 2.\r\n\r\ntruncates text if longer than 512 tokens.","Url":"https://github.com/dotnet/machinelearning/pull/6229","RelatedDescription":"Closed or merged PR \"TorchSharp documentation and minor updates.\" (#6229)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-07-24T03:30:21.4316605Z","RunDurationInMilliseconds":563}