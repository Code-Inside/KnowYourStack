{"Data":{"GitHub":{"Issues":[{"Id":"1707975610","IsPullRequest":true,"CreatedAt":"2023-05-12T23:22:13","Actor":"michaelgsharp","Number":"6674","RawContent":null,"Title":"License expression","State":"closed","Body":"Changed packages to use LicenseExpression instead of LicenseFile.","Url":"https://github.com/dotnet/machinelearning/pull/6674","RelatedDescription":"Closed or merged PR \"License expression\" (#6674)"},{"Id":"1708172339","IsPullRequest":true,"CreatedAt":"2023-05-12T20:29:26","Actor":"asmirnov82","Number":"6675","RawContent":null,"Title":"Add missing implementation for datetime relevant arrow type into dataframe","State":"open","Body":"#fixes 6201\r\n\r\nAdd support for converting Apache Arrow Date64 column into DataFrame DateTimePrimitiveColumn and vice versa\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6675","RelatedDescription":"Open PR \"Add missing implementation for datetime relevant arrow type into dataframe\" (#6675)"},{"Id":"1704543098","IsPullRequest":true,"CreatedAt":"2023-05-11T21:26:28","Actor":"LittleLittleCloud","Number":"6668","RawContent":null,"Title":"add epsilon to eci inverse probability","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\nfix #6644 \r\n","Url":"https://github.com/dotnet/machinelearning/pull/6668","RelatedDescription":"Closed or merged PR \"add epsilon to eci inverse probability\" (#6668)"},{"Id":"1705464094","IsPullRequest":false,"CreatedAt":"2023-05-11T18:58:49","Actor":"asmirnov82","Number":"6672","RawContent":null,"Title":"DataFrame ToString() method uses incorrect padding","State":"closed","Body":"**Describe the bug**\r\nDataFrame ToString() method doesn't use separators between columns, so the output is very difficult to read.\r\n\r\nFor example for the dataframe:\r\n\r\nA     B     C\r\n3     16    26\r\n3     19    22\r\n3     11    28\r\n6     11    25\r\n6     10    23\r\n6     13    21\r\n6     17    20\r\n9     18    28\r\n\r\nThe output looks like this:\r\n![image](https://github.com/dotnet/machinelearning/assets/83237987/8e94e4ef-9552-443e-bcb5-063d085dc8eb)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6672","RelatedDescription":"Closed issue \"DataFrame ToString() method uses incorrect padding\" (#6672)"},{"Id":"1705488173","IsPullRequest":true,"CreatedAt":"2023-05-11T18:58:47","Actor":"asmirnov82","Number":"6673","RawContent":null,"Title":"Fix DataFrame ToString() method to use correct alignment for columns to produce readable output","State":"closed","Body":"fixes #6672","Url":"https://github.com/dotnet/machinelearning/pull/6673","RelatedDescription":"Closed or merged PR \"Fix DataFrame ToString() method to use correct alignment for columns to produce readable output\" (#6673)"},{"Id":"1705069782","IsPullRequest":false,"CreatedAt":"2023-05-11T05:01:51","Actor":"maheshlokhande","Number":"6671","RawContent":null,"Title":"Split TextClassification API","State":"open","Body":"TextClassification API was introduced in ML.NET 2.0 release. As per documentation it internally uses BERT to generate embeddings and deep learning for classification. Is there a way to train BERT model with our own data and generate embeddings and then eventually use some deep learning technique to do classification (both in ML.NET). It will enable developers to try the combination that works best for their use case.","Url":"https://github.com/dotnet/machinelearning/issues/6671","RelatedDescription":"Open issue \"Split TextClassification API\" (#6671)"},{"Id":"1704654851","IsPullRequest":false,"CreatedAt":"2023-05-10T21:29:34","Actor":"LittleLittleCloud","Number":"6670","RawContent":null,"Title":"Object detection: Enable loading from checkpoint ","State":"open","Body":"It would be nice if I can pass a checkpoint folder to the object detection trainer option, which can be used to save and load intermediate weight for every N epoch/step/epic. In that case I don't have to retrain the model from the beginning everytime.\r\n\r\nIn the meantime, It would also be nice if object detection trainer will return instead of throw a cancellationException when `mlcontext.CancelExcute` get called.\r\n\r\nBoth features will allow user to pause training process whenever they want and restart training from preivous progress. This would be super useful for deep learning scenarios.\r\n\r\n**Describe the solution you'd like**\r\n- in training option, accept a checkpoint folder\r\n- when cancelling, don't throw error, just return current result\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6670","RelatedDescription":"Open issue \"Object detection: Enable loading from checkpoint \" (#6670)"},{"Id":"1698561347","IsPullRequest":false,"CreatedAt":"2023-05-10T21:17:16","Actor":"simonthum","Number":"6659","RawContent":null,"Title":"Please support NULL values","State":"closed","Body":"**Describe the bug**\r\nNull is basically unsupported. It is hard to filter nulls and much harder to grasp when exactly null is being substituted by default(T).\r\n\r\n**To Reproduce**\r\nNuget Micorsoft.Data.Analysis 0.20.1:\r\n````\r\nvar coln = new Int32DataFrameColumn(\"test\", new int?[] { -2, null });\r\nvar colp = new Int32DataFrameColumn(\"test2\", new int?[] { 2, null });\r\n\r\nConsole.WriteLine($\"linq max: {Enumerable.Max(coln)} mda column max: {coln.Max()}\");\r\nConsole.WriteLine($\"linq avg: {Enumerable.Average(coln)} mda column avg: {coln.Mean()}\");\r\nConsole.WriteLine($\"linq min: {Enumerable.Min(colp)} mda column min: {colp.Min()}\");\r\n\r\n// output\r\nlinq max: -2 mda column max: 0\r\nlinq avg: -2 mda column avg: -1\r\nlinq min: 2 mda column min: 0\r\n````\r\n\r\n**Expected behavior**\r\nI would expect most of Dataframe, here Min/Max/Mean, to behave like SQL and LINQ do with regard to NULL values.\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6659","RelatedDescription":"Closed issue \"Please support NULL values\" (#6659)"},{"Id":"1701987732","IsPullRequest":false,"CreatedAt":"2023-05-10T21:15:40","Actor":"maheshlokhande","Number":"6665","RawContent":null,"Title":"Microsoft.ML.TorchSharp TextClassification trainer throwing System.TypeLoadException","State":"closed","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows Server 2019\r\n - ML.NET Version: 2.0.1\r\n - .NET Version: .NET 7\r\n\r\n**Describe the bug**\r\nI am trying to use TextClassification trainer which is part of Microsoft.ML.TorchSharp package as per example here: https://devblogs.microsoft.com/dotnet/introducing-the-ml-dotnet-text-classification-api-preview/\r\n\r\nI have added all the required packages as per above guide.\r\nMicrosoft.ML - 2.0.1\r\nMicrosoft.ML.TorchSharp - 0.20.1\r\nTorchSharp-cpu - 0.99.6\r\n\r\nOn calling Fit method, it is throwing below exception:\r\n\r\nSystem.TypeLoadException\r\n  HResult=0x80131522\r\n  Message=Method 'call' in type 'Microsoft.ML.TorchSharp.NasBert.Models.TransformerEncoder' from assembly 'Microsoft.ML.TorchSharp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' does not have an implementation.\r\n  Source=Microsoft.ML.TorchSharp\r\n  StackTrace:\r\n   at Microsoft.ML.TorchSharp.NasBert.NasBertTrainer`2.TrainerBase..ctor(NasBertTrainer`2 parent, IChannel ch, IDataView input)\r\n   at Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer.Trainer..ctor(NasBertTrainer`2 parent, IChannel ch, IDataView input)\r\n   at Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer.CreateTrainer(NasBertTrainer`2 parent, IChannel ch, IDataView input)\r\n   at Microsoft.ML.TorchSharp.NasBert.NasBertTrainer`2.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create pipeline as below and call Fit method on it\r\n`var pipeline = mlContext.Transforms.Conversion.MapValueToKey(\"Key\", \"Class\")\r\n                .Append(mlContext.MulticlassClassification.Trainers.TextClassification(\"Key\", sentence1ColumnName: \"text\"))\r\n                .Append(mlContext.Transforms.Conversion.MapKeyToValue(\"PredictedLabel\", \"Key\"));\r\n\t\t\t\t\r\nvar transformer = pipeline.Fit(trainSet)`","Url":"https://github.com/dotnet/machinelearning/issues/6665","RelatedDescription":"Closed issue \"Microsoft.ML.TorchSharp TextClassification trainer throwing System.TypeLoadException\" (#6665)"},{"Id":"1704638937","IsPullRequest":false,"CreatedAt":"2023-05-10T21:13:56","Actor":"luisquintanilla","Number":"6669","RawContent":null,"Title":"Document TorchSharp versions ","State":"open","Body":"Add documentation for APIs that depend on TorchSharp which version they target.\r\n\r\n| ML.NET Version | TorchSharp Package Version |\r\n| --- | --- |\r\n| 2.0.0 | 0.98.1 |\r\n| 2.0.1 | 0.98.1 |\r\n| 3.0.0-preview | 0.98.3 | \r\n| Next preview | 0.99.5 |","Url":"https://github.com/dotnet/machinelearning/issues/6669","RelatedDescription":"Open issue \"Document TorchSharp versions \" (#6669)"},{"Id":"1704128052","IsPullRequest":false,"CreatedAt":"2023-05-10T14:57:47","Actor":"sublunar84","Number":"6667","RawContent":null,"Title":"Support for multiple models","State":"open","Body":"I try to add two different models with AddPredictionEnginePool like below:\r\n`s.AddPredictionEnginePool<MLxxxData, MLxxxPrediction>()\r\n\t.FromFile(modelName: \"mlNetxxxModel\", filePath: GetModelFilePath(CheckType.xxx), watchForChanges: false);\r\n\r\ns.AddPredictionEnginePool<MLyyyData, MLyyyPrediction>()\r\n\t.FromFile(modelName: \"mlNetyyyModel\", filePath: GetModelFilePath(CheckType.yyy), watchForChanges: false);`\r\n\r\nOnly the last model is added though. If I try to use the first one I get an error. Shouldn't you be able to load more than one model? Instead of having to make one application for each model. Cannot find any information on this problem.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6667","RelatedDescription":"Open issue \"Support for multiple models\" (#6667)"},{"Id":"1702436396","IsPullRequest":false,"CreatedAt":"2023-05-09T17:23:11","Actor":"torronen","Number":"6666","RawContent":null,"Title":"LightGBM GPU switch (res[\"device_type\"] == \"gpu\")","State":"open","Body":"**System Information (please complete the following information):**\r\ndaily build \r\n\r\n**Feature request**\r\nLightGBM support GPU for the 2nd part of the algorithm. However, the binary for GPU support needs to be built manually (  https://lightgbm.readthedocs.io/en/latest/GPU-Tutorial.html ) and AFAIK it is not distributed officially or unofficial ATM.\r\n\r\nGPU support can be easily enabled:\r\n1) compile LightGBM GPU (take note to use same version as Microsoft.ML)\r\n2) update res[\"device_type\"]=\"gpu\" array in *.LightGBM\r\n3) update library dll name in source to use your compiled version, mine is lightgbm_gpu, same file as above\r\n\r\nMy experience is on Windows platform with 1080Ti and 3090. GPU becomes helpful with huge datasets (10+ GB). In small datasets I did not see as much a big difference due to the 1st part still being CPU bound.\r\n\r\nI've seen a few requests here and in modelbuilders repo. \r\n\r\n**Discussion and suggestion**\r\nIf the device_type switch would be exposed then users could use unmodified Microsoft.ML library with custom GPU binary. \r\n\r\nHowever, because this requires a custom binary (unless it would be included in nuget.org) so putting it together with all other LightGBM parameters could cause confusion with users who expect it to work just by setting it. 2nd, the AutoML pipelines need also some changes.\r\n\r\nDo you think it would be reasonable to expose this parameter, and what would be the best way to do it?\r\n\r\nAfter a short while of thinking the best I could come up with is putting it as a static method. For example LightGBMTrainer.SetGPUBinary(\"lightgbm_gpu.dll\"); If user sets this binary, then device_type would also be changed. The change would be global. This interface would also let users know they must provide a custom binary for it to work as they can not call the method without.\r\n\r\nOpinions on this? \r\n\r\nIf there is a good plan I can work on this because I would really prefer to use the daily feed instead of a custom build Microsoft.ML. It is the remaining feature I would need to upgrade to the daily build from our modified 1.x version. However, I am not sure if this is something you would like to include in the library considering the absence of GPU binaries, and if there is a good way to implement it. Any advice appreciated.","Url":"https://github.com/dotnet/machinelearning/issues/6666","RelatedDescription":"Open issue \"LightGBM GPU switch (res[\"device_type\"] == \"gpu\")\" (#6666)"},{"Id":"1701263700","IsPullRequest":true,"CreatedAt":"2023-05-09T03:42:17","Actor":"JakeRadMSFT","Number":"6664","RawContent":null,"Title":"(WIP) Generic DataFrame Math","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/6664","RelatedDescription":"Open PR \"(WIP) Generic DataFrame Math\" (#6664)"},{"Id":"1700765725","IsPullRequest":true,"CreatedAt":"2023-05-08T21:09:19","Actor":"LittleLittleCloud","Number":"6663","RawContent":null,"Title":"Expose ExperimentSettings.MaxModel as public","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6663","RelatedDescription":"Closed or merged PR \"Expose ExperimentSettings.MaxModel as public\" (#6663)"},{"Id":"1698760871","IsPullRequest":true,"CreatedAt":"2023-05-08T20:58:10","Actor":"JakeRadMSFT","Number":"6661","RawContent":null,"Title":"Fix DataFrame Null Math","State":"closed","Body":"Update Math logic to filter out `null` instead of treating it as `default`.\r\n\r\nRelated Issue:\r\n\r\nhttps://github.com/dotnet/machinelearning/issues/6659","Url":"https://github.com/dotnet/machinelearning/pull/6661","RelatedDescription":"Closed or merged PR \"Fix DataFrame Null Math\" (#6661)"},{"Id":"1697393560","IsPullRequest":true,"CreatedAt":"2023-05-08T19:55:14","Actor":"JakeRadMSFT","Number":"6656","RawContent":null,"Title":"Clean up PrimitiveColumnContainer","State":"closed","Body":"I was inspired by a community members PR (https://github.com/dotnet/machinelearning/pull/6642) to try and clean up PrimitiveColumnContainer.\r\n\r\nI'd say this is Part 1 of a few part series for improving DataFrame.\r\n\r\n- Updates the code to be more consistent with the Buffer and nullBufferBitMap usage\r\n- Updated all the PrimitiveColumn related things that used to be T : struct and move to T : unmanaged.\r\n- Hopefully improved readability\r\n\r\nNot Fixed:\r\n- It's still not thread safe","Url":"https://github.com/dotnet/machinelearning/pull/6656","RelatedDescription":"Closed or merged PR \"Clean up PrimitiveColumnContainer\" (#6656)"},{"Id":"1699794140","IsPullRequest":true,"CreatedAt":"2023-05-08T08:33:07","Actor":"rgesteve","Number":"6662","RawContent":null,"Title":"Update to XGBoost 1.7.4 (WIP)","State":"open","Body":"Fixes to #6383 that use `LibImport` instead of `DllImport`, includes Regression and binary classification.  Exposes optimized `tree_method` `hist` for Intel CPUs.\r\n- needs xgboost installed on system (this is not documented, instructions forthcoming)\r\n- needs sample (forthcoming)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6662","RelatedDescription":"Open PR \"Update to XGBoost 1.7.4 (WIP)\" (#6662)"},{"Id":"1698655611","IsPullRequest":false,"CreatedAt":"2023-05-06T14:36:11","Actor":"ly303550688","Number":"6660","RawContent":null,"Title":"train应该翻译为训练，而不是火车","State":"open","Body":"\r\n[在此处输入反馈]\r\n\r\n\r\n---\r\n#### 文档详细信息\r\n\r\n⚠ *请勿编辑此部分。 learn.microsoft.com ➟ GitHub 问题链接必须具有此部分。*\r\n\r\n* ID: d93c6f58-e726-7734-06ed-c3b8f87c6a6e\r\n* Version Independent ID: bcd37e78-d924-c5c2-f5d5-745a8d586330\r\n* Content: [KMeansTrainer 类 (Microsoft.ML.Trainers)](https://learn.microsoft.com/zh-cn/dotnet/api/microsoft.ml.trainers.kmeanstrainer?view=ml-dotnet)\r\n* Content Source: [dotnet/xml/Microsoft.ML.Trainers/KMeansTrainer.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.Trainers/KMeansTrainer.xml)\r\n* Product: **dotnet-ml-api**\r\n* GitHub Login: @natke\r\n* Microsoft Alias: **nakersha**","Url":"https://github.com/dotnet/machinelearning/issues/6660","RelatedDescription":"Open issue \"train应该翻译为训练，而不是火车\" (#6660)"},{"Id":"1698100156","IsPullRequest":true,"CreatedAt":"2023-05-05T21:12:08","Actor":"michaelgsharp","Number":"6658","RawContent":null,"Title":"Removing MSIL check for TorchSharp for now","State":"closed","Body":"Currently the TorchSharp nuget is targetting x64 only while we are targeting AnyCPU. TorchSharp is targetting x64 because right now they only package the x64 binaries. We are targeting AnyCPU because in theory if someone compiled their own native code for non x64 and dropped it in it should still work.\r\n\r\nDisabling the check for `MSB3270` for now to resolve the issue. Will need to address this again when TorchSharp changes.","Url":"https://github.com/dotnet/machinelearning/pull/6658","RelatedDescription":"Closed or merged PR \"Removing MSIL check for TorchSharp for now\" (#6658)"},{"Id":"1697999010","IsPullRequest":false,"CreatedAt":"2023-05-05T18:09:16","Actor":"bmp02050","Number":"6657","RawContent":null,"Title":"GPU Performance non functional","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: 1.7.0\r\n - .NET Version: 6.0\r\n\r\n**Describe the bug**\r\nFollowing all available documentation here (https://learn.microsoft.com/en-us/dotnet/machine-learning/tutorials/image-classification-api-transfer-learning) and resources available using SciSharp.Tensorflow.Redist-Windows-GPU V2.3.1 to utilize a 2060 TI using the images within the documentation of concrete as a base for training I am getting absolutely useless and terrible predictions and data coming back.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Open the solution folder\r\n2. Run the API\r\n3. Send a post request in postman to (http://localhost:5267/api/Trainer/buildModels with the path to the top level folder to build the model\r\n4. Send a Postman request to http://localhost:5267/api/Trainer/predict with a form-data\r\nKey: file, Value: image\r\nKey: modelPath, Value: path to model folder, (sans the models.zip)\r\n\r\n**Expected behavior**\r\nTraining results in the following:\r\n\r\nPhase: Training, Dataset used: Validation, Batch Processed Count: 1124, Epoch:   0, Accuracy: 0.071183994, Cross-Entropy:   18.97249\r\nPhase: Training, Dataset used: Validation, Batch Processed Count: 1124, Epoch:   1, Accuracy: 0.071183994, Cross-Entropy:  15.170444\r\nPhase: Training, Dataset used: Validation, Batch Processed Count: 1124, Epoch:   2, Accuracy: 0.071183994, Cross-Entropy:  30.240627\r\nPhase: Training, Dataset used: Validation, Batch Processed Count: 1124, Epoch:   3, Accuracy: 0.38297707, Cross-Entropy:  26.751282\r\nPhase: Training, Dataset used: Validation, Batch Processed Count: 1124, Epoch:   4, Accuracy: 0.20089968, Cross-Entropy:  34.458427\r\nPhase: Training, Dataset used: Validation, Batch Processed Count: 1124, Epoch:   5, Accuracy: 0.38297707, Cross-Entropy:  26.768661\r\nPhase: Training, Dataset used: Validation, Batch Processed Count: 1124, Epoch:   6, Accuracy: 0.071183994, Cross-Entropy:  31.264683\r\nPhase: Training, Dataset used: Validation, Batch Processed Count: 1124, Epoch:   7, Accuracy: 0.38297707, Cross-Entropy:  16.774061\r\nPhase: Training, Dataset used: Validation, Batch Processed Count: 1124, Epoch:   8, Accuracy: 0.20089968, Cross-Entropy:   23.46656\r\n\r\nAnd predictions lead to a 0 or 1 in one of 6 categories and always comes up the same regardless of what image is sent.\r\n\r\n**Screenshots, Code, Sample Projects**\r\nThe entire program will be zipped and attached\r\n\r\n**Additional context**\r\nUsing NVIDIA 10.1 and CUDNN 7.6.4 as required\r\n\r\n[New Compressed (zipped) Folder.zip](https://github.com/dotnet/machinelearning/files/11409001/New.Compressed.zipped.Folder.zip)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6657","RelatedDescription":"Open issue \"GPU Performance non functional\" (#6657)"},{"Id":"1694890062","IsPullRequest":true,"CreatedAt":"2023-05-04T22:06:43","Actor":"torronen","Number":"6649","RawContent":null,"Title":"Add SamplingKeyColumnName to AutoMLExperiment API","State":"closed","Body":"Fixes #6643\r\n\r\nAdd sampling key column name to SetDataset method in new AutoML API to easily set sampling key.\r\n\r\nUsage:\r\n```\r\n   experiment\r\n                .SetPipeline(pipeline)\r\n                .SetBinaryClassificationMetric(BinaryClassificationMetric.Accuracy, labelColumn: columnInference.ColumnInformation.LabelColumnName)\r\n                .SetTrainingTimeInSeconds(trainingTimeSeconds)\r\n                .SetDataset(data, fold: NumFolds, samplingKeyColumnName: SamplingKeyColumn);\r\n```\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6649","RelatedDescription":"Closed or merged PR \"Add SamplingKeyColumnName to AutoMLExperiment API\" (#6649)"},{"Id":"1694956335","IsPullRequest":false,"CreatedAt":"2023-05-04T19:59:37","Actor":"LittleLittleCloud","Number":"6650","RawContent":null,"Title":"Should use a different source name for object detection trainer","State":"closed","Body":"![image](https://user-images.githubusercontent.com/16876986/236064448-bc35de01-f066-448a-b9e9-9286c6274608.png)\r\n\r\nShould be `ObjectDetectionTrainer` or something","Url":"https://github.com/dotnet/machinelearning/issues/6650","RelatedDescription":"Closed issue \"Should use a different source name for object detection trainer\" (#6650)"},{"Id":"1694471114","IsPullRequest":true,"CreatedAt":"2023-05-04T19:59:18","Actor":"michaelgsharp","Number":"6646","RawContent":null,"Title":"Added more logging to OBJ-DET","State":"closed","Body":"Added more logging to object detection.","Url":"https://github.com/dotnet/machinelearning/pull/6646","RelatedDescription":"Closed or merged PR \"Added more logging to OBJ-DET\" (#6646)"},{"Id":"1694491089","IsPullRequest":true,"CreatedAt":"2023-05-04T16:27:55","Actor":"michaelgsharp","Number":"6647","RawContent":null,"Title":"Change code coverage build pool to correct pool","State":"closed","Body":"Changed code coverage build pool to the correct pool. These machines are more powerful so hopefully code coverage runs faster and is less flaky.","Url":"https://github.com/dotnet/machinelearning/pull/6647","RelatedDescription":"Closed or merged PR \"Change code coverage build pool to correct pool\" (#6647)"},{"Id":"1696235201","IsPullRequest":false,"CreatedAt":"2023-05-04T15:22:06","Actor":"torronen","Number":"6655","RawContent":null,"Title":"Compiling on Ubuntu 22.04 ( CXX compiler: /usr/bin/clang++ - broken)","State":"open","Body":"Ubuntu 22.04 / Latest main\r\n\r\nI am following the Developer page instructions (https://github.com/dotnet/machinelearning/blob/main/docs/building/unix-instructions.md). However, I get some errors on compiling with c++. As you may guess I mostly work on Windows so it could be just some obvious thing missing.\r\n\r\nCould be clang version, but even if I remove it, then\r\nsudo apt-get install clang-3.9\r\n\r\nclang --version gives:\r\nUbuntu clang version 14.0.0-1ubuntu1\r\nTarget: x86_64-pc-linux-gnu\r\nThread model: posix\r\n\r\n\r\n```\r\n  -- Check for working CXX compiler: /usr/bin/clang++\r\n  -- Check for working CXX compiler: /usr/bin/clang++ - broken\r\n  -- Configuring incomplete, errors occurred!\r\n  CMake Error at /usr/local/lib/python3.10/dist-packages/cmake/data/share/cmake-3.26/Modules/CMakeTestCXXCompiler.cmake:60 (message):\r\n    The C++ compiler\r\n\r\n      \"/usr/bin/clang++\"\r\n\r\n    is not able to compile a simple test program.\r\n```\r\n\r\n\r\n\r\n**Full**\r\n```\r\nroot@Ubuntu-2204-jammy-amd64-base ~/torronen/Kwork.Microsoft.ML2023 # ./build.sh\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\nAttempting to install dotnet from public_location.\r\ndotnet-install: Note that the intended use of this script is for Continuous Integration (CI) scenarios, where:\r\ndotnet-install: - The SDK needs to be installed without user interaction and without admin rights.\r\ndotnet-install: - The SDK installation doesn't need to persist across multiple CI runs.\r\ndotnet-install: To set up a development environment or to run apps, use installers rather than this script. Visit https://dotnet.microsoft.com/download to get the installer.\r\ndotnet-install: .NET Core Runtime with version '6.0.9' is already installed.\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  Determining projects to restore...\r\n  All projects are up-to-date for restore.\r\n  /root/torronen/Kwork.Microsoft.ML2023/src/Native/build.sh --configuration Debug --arch x64  --mkllibpath /root/.nuget/packages/mlnetmkldeps/0.0.0.12/runtimes/linux-x64/native --onedalredistpath /root/.nuget/packages/inteldal.redist.linux-x64/2023.0.0.23046/build/native/daal/latest --onedaldevelpath /root/.nuget/packages/inteldal.devel.win-x64/2023.0.0.23189/build/native/daal/latest --onetbbredistpath /root/.nuget/packages/inteltbb.devel.linux/2021.7.1.15005/runtimes/linux-x64/native\r\n  Building Machine Learning native components from /root/torronen/Kwork.Microsoft.ML2023/src/Native to /root/torronen/Kwork.Microsoft.ML2023/artifacts/obj/Native/x64.Debug\r\n  + cmake /root/torronen/Kwork.Microsoft.ML2023/src/Native -G 'Unix Makefiles' -DCMAKE_BUILD_TYPE=Debug -DMKL_LIB_PATH=/root/.nuget/packages/mlnetmkldeps/0.0.0.12/runtimes/linux-x64/native -DONEDAL_REDIST_PATH=/root/.nuget/packages/inteldal.redist.linux-x64/2023.0.0.23046/build/native/daal/latest -DONEDAL_DEVEL_PATH=/root/.nuget/packages/inteldal.devel.win-x64/2023.0.0.23189/build/native/daal/latest -DONETBB_REDIST_PATH=/root/.nuget/packages/inteltbb.devel.linux/2021.7.1.15005/runtimes/linux-x64/native -DVERSION_FILE_PATH:STRING=/root/torronen/Kwork.Microsoft.ML2023/src/Native/../../artifacts/obj/version.c -DARCHITECTURE=x64\r\n  -- The CXX compiler identification is Clang 14.0.0\r\n  -- Detecting CXX compiler ABI info\r\n  -- Detecting CXX compiler ABI info - failed\r\n  -- Check for working CXX compiler: /usr/bin/clang++\r\n  -- Check for working CXX compiler: /usr/bin/clang++ - broken\r\n  -- Configuring incomplete, errors occurred!\r\n  CMake Error at /usr/local/lib/python3.10/dist-packages/cmake/data/share/cmake-3.26/Modules/CMakeTestCXXCompiler.cmake:60 (message):\r\n    The C++ compiler\r\n\r\n      \"/usr/bin/clang++\"\r\n\r\n    is not able to compile a simple test program.\r\n\r\n    It fails with the following output:\r\n\r\n      Change Dir: /root/torronen/Kwork.Microsoft.ML2023/artifacts/obj/Native/x64.Debug/CMakeFiles/CMakeScratch/TryCompile-PaojQZ\r\n\r\n      Run Build Command(s):/usr/local/lib/python3.10/dist-packages/cmake/data/bin/cmake -E env VERBOSE=1 /usr/bin/gmake -f Makefile cmTC_819f1/fast && /usr/bin/gmake  -f CMakeFiles/cmTC_819f1.dir/build.make CMakeFiles/cmTC_819f1.dir/build\r\n      gmake[1]: Entering directory '/root/torronen/Kwork.Microsoft.ML2023/artifacts/obj/Native/x64.Debug/CMakeFiles/CMakeScratch/TryCompile-PaojQZ'\r\n      Building CXX object CMakeFiles/cmTC_819f1.dir/testCXXCompiler.cxx.o\r\n      /usr/bin/clang++    -MD -MT CMakeFiles/cmTC_819f1.dir/testCXXCompiler.cxx.o -MF CMakeFiles/cmTC_819f1.dir/testCXXCompiler.cxx.o.d -o CMakeFiles/cmTC_819f1.dir/testCXXCompiler.cxx.o -c /root/torronen/Kwork.Microsoft.ML2023/artifacts/obj/Native/x64.Debug/CMakeFiles/CMakeScratch/TryCompile-PaojQZ/testCXXCompiler.cxx\r\n      Linking CXX executable cmTC_819f1\r\n      /usr/local/lib/python3.10/dist-packages/cmake/data/bin/cmake -E cmake_link_script CMakeFiles/cmTC_819f1.dir/link.txt --verbose=1\r\n      /usr/bin/clang++ -rdynamic CMakeFiles/cmTC_819f1.dir/testCXXCompiler.cxx.o -o cmTC_819f1\r\n      /usr/bin/ld: cannot find -lstdc++: No such file or directory\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation) [/root/torronen/Kwork.Microsoft.ML2023/src/Native/Native.proj]\r\n      gmake[1]: *** [CMakeFiles/cmTC_819f1.dir/build.make:100: cmTC_819f1] Error 1\r\n      gmake[1]: Leaving directory '/root/torronen/Kwork.Microsoft.ML2023/artifacts/obj/Native/x64.Debug/CMakeFiles/CMakeScratch/TryCompile-PaojQZ'\r\n      gmake: *** [Makefile:127: cmTC_819f1/fast] Error 2\r\n\r\n\r\n\r\n\r\n\r\n    CMake will not be able to correctly generate this project.\r\n  Call Stack (most recent call first):\r\n    CMakeLists.txt:3 (project)\r\n\r\n\r\n/root/torronen/Kwork.Microsoft.ML2023/src/Native/Native.proj(117,5): error MSB3073: The command \"\"/root/torronen/Kwork.Microsoft.ML2023/src/Native/build.sh\" --configuration Debug --arch x64  --mkllibpath /root/.nuget/packages/mlnetmkldeps/0.0.0.12/runtimes/linux-x64/native --onedalredistpath /root/.nuget/packages/inteldal.redist.linux-x64/2023.0.0.23046/build/native/daal/latest --onedaldevelpath /root/.nuget/packages/inteldal.devel.win-x64/2023.0.0.23189/build/native/daal/latest --onetbbredistpath /root/.nuget/packages/inteltbb.devel.linux/2021.7.1.15005/runtimes/linux-x64/native\" exited with code 1.\r\n  Microsoft.ML.InternalCodeAnalyzer -> /root/torronen/Kwork.Microsoft.ML2023/artifacts/bin/Microsoft.ML.InternalCodeAnalyzer/Debug/netstandard2.0/Microsoft.ML.InternalCodeAnalyzer.dll\r\n  Microsoft.ML.AutoML.SourceGenerator -> /root/torronen/Kwork.Microsoft.ML2023/artifacts/bin/Microsoft.ML.AutoML.SourceGenerator/Debug/netstandard2.0/Microsoft.ML.AutoML.SourceGenerator.dll\r\n  Microsoft.ML.SearchSpace -> /root/torronen/Kwork.Microsoft.ML2023/artifacts/bin/Microsoft.ML.SearchSpace/Debug/netstandard2.0/Microsoft.ML.SearchSpace.dll\r\n  RemoteExecutorConsoleApp -> /root/torronen/Kwork.Microsoft.ML2023/artifacts/bin/RemoteExecutorConsoleApp/Debug/net6.0/RemoteExecutorConsoleApp.dll\r\n  Microsoft.ML.Mkl.Redist -> /root/torronen/Kwork.Microsoft.ML2023/artifacts/bin/Microsoft.ML.Mkl.Redist/Debug/netstandard2.0/Microsoft.ML.Mkl.Redist.dll\r\n  Microsoft.ML.CpuMath -> /root/torronen/Kwork.Microsoft.ML2023/artifacts/bin/Microsoft.ML.CpuMath/Debug/netcoreapp3.1/Microsoft.ML.CpuMath.dll\r\n  Microsoft.ML.CpuMath -> /root/torronen/Kwork.Microsoft.ML2023/artifacts/bin/Microsoft.ML.CpuMath/Debug/netstandard2.0/Microsoft.ML.CpuMath.dll\r\n  Microsoft.ML.Tokenizers -> /root/torronen/Kwork.Microsoft.ML2023/artifacts/bin/Microsoft.ML.Tokenizers/Debug/netstandard2.0/Microsoft.ML.Tokenizers.dll\r\n  Microsoft.ML.DataView -> /root/torronen/Kwork.Microsoft.ML2023/artifacts/bin/Microsoft.ML.DataView/Debug/netstandard2.0/Microsoft.ML.DataView.dll\r\n  Microsoft.ML.CpuMath.PerformanceTests -> /root/torronen/Kwork.Microsoft.ML2023/artifacts/bin/Microsoft.ML.CpuMath.PerformanceTests/Debug/net6.0/Microsoft.ML.CpuMath.PerformanceTests.dll\r\n/root/torronen/Kwork.Microsoft.ML2023/Directory.Build.targets(54,3): error MSB3030: Could not copy the file \"/root/torronen/Kwork.Microsoft.ML2023/artifacts/bin/Native/x64.Debug/libCpuMathNative.so\" because it was not found. [/root/torronen/Kwork.Microsoft.ML2023/test/Microsoft.ML.CpuMath.PerformanceTests/Microsoft.ML.CpuMath.PerformanceTests.csproj::TargetFramework=net6.0]\r\n  Microsoft.ML.Tokenizers.Tests -> /root/torronen/Kwork.Microsoft.ML2023/artifacts/bin/Microsoft.ML.Tokenizers.Tests/Debug/net6.0/Microsoft.ML.Tokenizers.Tests.dll\r\n  Microsoft.ML.NugetPackageVersionUpdater -> /root/torronen/Kwork.Microsoft.ML2023/artifacts/bin/Microsoft.ML.NugetPackageVersionUpdater/Debug/net6.0/Microsoft.ML.NugetPackageVersionUpdater.dll\r\n  Microsoft.ML.Core -> /root/torronen/Kwork.Microsoft.ML2023/artifacts/bin/Microsoft.ML.Core/Debug/netstandard2.0/Microsoft.ML.Core.dll\r\n  Microsoft.ML.Maml -> /root/torronen/Kwork.Microsoft.ML2023/artifacts/bin/Microsoft.ML.Maml/Debug/netstandard2.0/Microsoft.ML.Maml.dll\r\n  Microsoft.Data.Analysis -> /root/torronen/Kwork.Microsoft.ML2023/artifacts/bin/Microsoft.Data.Analysis/Debug/netstandard2.0/Microsoft.Data.Analysis.dll\r\n  Microsoft.ML.Data -> /root/torronen/Kwork.Microsoft.ML2023/artifacts/bin/Microsoft.ML.Data/Debug/netstandard2.0/Microsoft.ML.Data.dll\r\n  Microsoft.Data.Analysis.Interactive -> /root/torronen/Kwork.Microsoft.ML2023/artifacts/bin/Microsoft.Data.Analysis.Interactive/Debug/netcoreapp3.1/Microsoft.Data.Analysis.Interactive.dll\r\n  Microsoft.ML.Transforms -> /root/torronen/Kwork.Microsoft.ML2023/artifacts/bin/Microsoft.ML.Transforms/Debug/netstandard2.0/Microsoft.ML.Transforms.dll\r\n  Microsoft.ML.ResultProcessor -> /root/torronen/Kwork.Microsoft.ML2023/artifacts/bin/Microsoft.ML.ResultProcessor/Debug/netstandard2.0/Microsoft.ML.ResultProcessor.dll\r\n  Microsoft.ML.PCA -> /root/torronen/Kwork.Microsoft.ML2023/artifacts/bin/Microsoft.ML.PCA/Debug/netstandard2.0/Microsoft.ML.PCA.dll\r\n  Microsoft.ML.TestFrameworkCommon -> /root/torronen/Kwork.Microsoft.ML2023/artifacts/bin/Microsoft.ML.TestFrameworkCommon/Debug/net6.0/Microsoft.ML.TestFrameworkCommon.dll\r\n  Microsoft.Data.Analysis.Interactive.Tests -> /root/torronen/Kwork.Microsoft.ML2023/artifacts/bin/Microsoft.Data.Analysis.Interactive.Tests/Debug/net6.0/Microsoft.Data.Analysis.Interactive.Tests.dll\r\n  Microsoft.ML.StandardTrainers -> /root/torronen/Kwork.Microsoft.ML2023/artifacts/bin/Microsoft.ML.StandardTrainers/Debug/netstandard2.0/Microsoft.ML.StandardTrainers.dll\r\n  Microsoft.ML.KMeansClustering -> /root/torronen/Kwork.Microsoft.ML2023/artifacts/bin/Microsoft.ML.KMeansClustering/Debug/netstandard2.0/Microsoft.ML.KMeansClustering.dll\r\n  Microsoft.ML -> /root/torronen/Kwork.Microsoft.ML2023/artifacts/bin/Microsoft.ML/Debug/netstandard2.0/Microsoft.ML.dll\r\n/root/torronen/Kwork.Microsoft.ML2023/Directory.Build.targets(54,3): error MSB3030: Could not copy the file \"/root/torronen/Kwork.Microsoft.ML2023/artifacts/bin/Native/x64.Debug/libLdaNative.so\" because it was not found. [/root/torronen/Kwork.Microsoft.ML2023/src/Microsoft.ML/Microsoft.ML.csproj]\r\n\r\nBuild FAILED.\r\n\r\nclang : error : linker command failed with exit code 1 (use -v to see invocation) [/root/torronen/Kwork.Microsoft.ML2023/src/Native/Native.proj]\r\n/root/torronen/Kwork.Microsoft.ML2023/src/Native/Native.proj(117,5): error MSB3073: The command \"\"/root/torronen/Kwork.Microsoft.ML2023/src/Native/build.sh\" --configuration Debug --arch x64  --mkllibpath /root/.nuget/packages/mlnetmkldeps/0.0.0.12/runtimes/linux-x64/native --onedalredistpath /root/.nuget/packages/inteldal.redist.linux-x64/2023.0.0.23046/build/native/daal/latest --onedaldevelpath /root/.nuget/packages/inteldal.devel.win-x64/2023.0.0.23189/build/native/daal/latest --onetbbredistpath /root/.nuget/packages/inteltbb.devel.linux/2021.7.1.15005/runtimes/linux-x64/native\" exited with code 1.\r\n/root/torronen/Kwork.Microsoft.ML2023/Directory.Build.targets(54,3): error MSB3030: Could not copy the file \"/root/torronen/Kwork.Microsoft.ML2023/artifacts/bin/Native/x64.Debug/libCpuMathNative.so\" because it was not found. [/root/torronen/Kwork.Microsoft.ML2023/test/Microsoft.ML.CpuMath.PerformanceTests/Microsoft.ML.CpuMath.PerformanceTests.csproj::TargetFramework=net6.0]\r\n/root/torronen/Kwork.Microsoft.ML2023/Directory.Build.targets(54,3): error MSB3030: Could not copy the file \"/root/torronen/Kwork.Microsoft.ML2023/artifacts/bin/Native/x64.Debug/libLdaNative.so\" because it was not found. [/root/torronen/Kwork.Microsoft.ML2023/src/Microsoft.ML/Microsoft.ML.csproj]\r\n    0 Warning(s)\r\n    4 Error(s)\r\n\r\nTime Elapsed 00:00:05.14\r\nBuild failed with exit code 1. Check errors above.\r\nroot@Ubuntu-2204-jammy-amd64-base ~/torronen/Kwork.Microsoft.ML2023 #\r\n\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/6655","RelatedDescription":"Open issue \"Compiling on Ubuntu 22.04 ( CXX compiler: /usr/bin/clang++ - broken)\" (#6655)"},{"Id":"1696189456","IsPullRequest":false,"CreatedAt":"2023-05-04T14:55:14","Actor":"superichmann","Number":"6654","RawContent":null,"Title":"AutoML Regression Experiment Ends Unsuccessfully","State":"open","Body":"**System Information:**\r\n - OS & Version: Windows 10\r\n**microsoft.ml**\\3.0.0-preview.23229.2\r\n**microsoft.ml.automl**\\0.21.0-preview.23229.2\r\n**microsoft.ml.onedal**\\0.21.0-preview.23229.2\r\nupdated from https://pkgs.dev.azure.com/dnceng/public/_packaging/dotnet-libraries/nuget/v3/index.json\r\n - .NET Version: e.g. .NET 6.0\r\n\r\n**Describe the bug**\r\nAfter updating to latest build through dotnet-libraries nuget in order to apply the fix for #6565 the same AutoML regression experiments that were completed in a 10 seconds are now incomplete, I have increased to 800 seconds and still receive the error :\\\r\n`RegressionMetric.MeanAbsoluteError`\r\ntrain: 1667 rows\r\ntest: 16 rows\r\n **Message**: \r\n```\r\n    System.AggregateException: One or more errors occurred. (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) (One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity)) ---> System.AggregateException: One or more errors occurred. (Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity) ---> System.TimeoutException: Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity\r\n\r\n  Stack Trace: \r\n    AutoMLExperiment.RunAsync(CancellationToken ct)\r\n    --- End of inner exception stack trace ---\r\n    Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n    Task`1.GetResultCore(Boolean waitCompletionNotification)\r\n    AutoMLExperiment.Run()\r\n    RegressionExperiment.Execute(IDataView trainData, IDataView validationData, ColumnInformation columnInformation, IEstimator`1 preFeaturizer, IProgress`1 progressHandler)\r\n```\r\nIf there are best practices for the new version please tell me what they are. maybe I am doing something wrong\r\n**Expected behavior**\r\nAt least one model should be found?\r\n\r\n**Additional context**\r\nThe long exception message is due to the fact that the trials are sent from Parallel.ForEach\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6654","RelatedDescription":"Open issue \"AutoML Regression Experiment Ends Unsuccessfully\" (#6654)"},{"Id":"1695553242","IsPullRequest":false,"CreatedAt":"2023-05-04T08:47:23","Actor":"torronen","Number":"6653","RawContent":null,"Title":"AutoML 2.0: Get columnInformation from binary IDV file","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version:Windows 11\r\n - ML.NET Version: latest from main\r\n - .NET Version: .NET 7.0\r\n\r\nThis is also just to point out a \"pain point\". I have a temporary solution. There probably exists a better way, but I could not find it.\r\n\r\nColumnInformation is needed by ctx.Auto().Featurizer(data, columnInformation: columnInference.ColumnInformation)\r\n\r\nSamples use ctx.Auto().InferColumns but this method only accepts CSV files.\r\n\r\nHow to get ColumnInformation if user reads the data from IDV binary file, or perhaps SQL Server, or uses custom data objects?\r\nfor example, \r\n```\r\nvar data = ctx.Data.LoadFromBinary(source);\r\n....\r\n SweepablePipeline pipeline = ctx.Transforms.SelectColumns(columnsToKeep) \r\n                .Append(ctx.Auto().Featurizer(data, columnInformation: columnInference.ColumnInformation)) **<<--- How to get ColumnInformation from data ?**\r\n                .Append(ctx.Auto().BinaryClassification(labelColumnName: columnInference.ColumnInformation.LabelColumnName\r\n```\r\n\r\nTemporary workaround:\r\nI will save column inference results as json from orginal CSV together with IDV file, then deserialize to get the matchin column information for said CSV file. \r\n\r\nThoughts:\r\nIDataView has a Schema, just not inside a correct class. Is there a method to convert?\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6653","RelatedDescription":"Open issue \"AutoML 2.0: Get columnInformation from binary IDV file\" (#6653)"},{"Id":"1695337488","IsPullRequest":false,"CreatedAt":"2023-05-04T06:27:05","Actor":"torronen","Number":"6652","RawContent":null,"Title":"AutoML 2.0: Trying to serializing params from TrialResult fails","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: latest from [main]\r\n - .NET Version: .NET 7.0\r\n\r\n**Describe the bug**\r\nAt end of AutoML experiment I want to log the parameters used. \r\nThis fails:      \r\n```\r\n             var json = JsonConvert.SerializeObject(result.TrialSettings.Parameter);\r\n            System.IO.File.WriteAllText(saveTo + \".param\", json);\r\n```\r\n            \r\nI can still get them with help of .ToString() method and that will be enough for me.\r\nSerializing just would be a easier way.\r\n\r\nAny possible code updates should probably also address #6651\r\n\r\n\r\n(this line also fails due to null from paramData[data]?.Keys == null, just a possible hint:\r\n        foreach (var paramKey in result.TrialSettings.Parameter.Keys)\r\n            {\r\n                if (paramData.Keys.Count() < 50)\r\n                {\r\n                    foreach (var data in paramData.Keys)\r\n                    {\r\nif (paramData[data] != null && (paramData[data]?.Keys == null || paramData[data].Keys.Count() < 50))\r\n\r\n            ","Url":"https://github.com/dotnet/machinelearning/issues/6652","RelatedDescription":"Open issue \"AutoML 2.0: Trying to serializing params from TrialResult fails\" (#6652)"},{"Id":"1695296351","IsPullRequest":false,"CreatedAt":"2023-05-04T05:41:32","Actor":"torronen","Number":"6651","RawContent":null,"Title":"AutoML 2.0: How to get trainer used for best model","State":"open","Body":"I am using latest version from [main] per today. At end of the trial, I want to log parameters and trainer used. I also want to get global feature index. My code* for global feature index relies on knowing which trainer is used. \r\n\r\nFor now, I intend to \"hack\" it this way. I believe this will be adequate for my need (not yet tested):\r\nvar pipelineString = pipeline.ToString(experimentResults.TrialSettings.Parameter);\r\nif(pipelineString.Contains(\"FastTree\")\r\n\r\nHowever, it would be good to have documentation or implementation, if needed, to read the parameters in a structured format. I have not looked at the source, so maybe it just needs a sample or documentation.\r\n\r\n\r\n\r\n*my code for GFI uses this code, and I have different lines for each tree trainer. If there are better ways it would make my life easier...\r\n```\r\nMicrosoft.ML.Data.TransformerChain<Microsoft.ML.IPredictionTransformer<object>> transformerchain = (model as Microsoft.ML.Data.TransformerChain<Microsoft.ML.IPredictionTransformer<object>>);\r\n                    Microsoft.ML.Data.BinaryPredictionTransformer<**Microsoft.ML.Calibrators.CalibratedModelParametersBase<Microsoft.ML.Trainers.FastTree.FastTreeBinaryModelParameters, Microsoft.ML.Calibrators.PlattCalibrator>**>\r\nlastTransformer = (BinaryPredictionTransformer<CalibratedModelParametersBase<FastTreeBinaryModelParameters, PlattCalibrator>>)transformerchain.LastTransformer;\r\n\r\nlastTransformer.Model.SubModel.GetFeatureWeights(ref weights);\r\nfloat[] weightsValues = weights.DenseValues().ToArray();\r\n\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/6651","RelatedDescription":"Open issue \"AutoML 2.0: How to get trainer used for best model\" (#6651)"},{"Id":"1694593223","IsPullRequest":false,"CreatedAt":"2023-05-03T18:36:00","Actor":"torronen","Number":"6648","RawContent":null,"Title":"AutoML 2.0: Distributes learning / potential \"hack\" using checkpoints CSV on a network drive?","State":"open","Body":"I could not find docs or plans about distributed learning. If that is correct, any ideas for how it could be implemented or links to common approaches? \r\n\r\nAutoML 2.0 seems to have a nice checkpoint CSV file. \r\nWould it be possible to make a \"hack\" using the checkpoint file? Would there a tuner that would allow me to use it for distributed tuning? Or, perhaps setting different MLContext seed on each machine would do it?\r\n\r\nI am thinking something like this might work with minimal source editing:\r\n1. Checkpoint file to a network drive\r\n2. Make each experiment run only 1 trial, then restart (so the current status gets read) - or edit source to re-read the checkpoint file\r\n3. Multiple clients would run simultaneously\r\n\r\nPotential problems I could expect:\r\n 1. Some type of randomity is probably needed from tuner, otherwise all clients might run the trial on same parameters\r\n 2. Probably needs to add locks for saving to CSV\r\n \r\n","Url":"https://github.com/dotnet/machinelearning/issues/6648","RelatedDescription":"Open issue \"AutoML 2.0: Distributes learning / potential \"hack\" using checkpoints CSV on a network drive?\" (#6648)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-05-13T03:30:21.9060316Z","RunDurationInMilliseconds":510}