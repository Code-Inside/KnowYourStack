{"Data":{"GitHub":{"Issues":[{"Id":"1712693446","IsPullRequest":true,"CreatedAt":"2023-05-16T20:26:09","Actor":"dotnet-maestro[bot]","Number":"6691","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 97926d79-6b8b-4d32-c8db-08d9d479971c\r\n- **Build**: 20230515.1\r\n- **Date Produced**: May 15, 2023 1:54:05 PM UTC\r\n- **Commit**: 2d8d59065b5e090584a8e90c4371fc06ed60bdc5\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.23228.7 to 8.0.0-beta.23265.1][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 7.0.0-beta.23228.7 to 8.0.0-beta.23265.1][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.23228.7 to 8.0.0-beta.23265.1][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 7.0.0-beta.23228.7 to 8.0.0-beta.23265.1][1]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 7.0.0-beta.23228.7 to 8.0.0-beta.23265.1][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.23228.7 to 8.0.0-beta.23265.1][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/df8799988a...2d8d59065b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates tools.dotnet to 8.0.100-preview.3.23178.7\r\n\r\n[marker]: <> (End:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6691","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#6691)"},{"Id":"1712663856","IsPullRequest":true,"CreatedAt":"2023-05-16T20:02:46","Actor":"michaelgsharp","Number":"6690","RawContent":null,"Title":"fixing license","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/6690","RelatedDescription":"Closed or merged PR \"fixing license\" (#6690)"},{"Id":"1712662249","IsPullRequest":true,"CreatedAt":"2023-05-16T20:02:17","Actor":"michaelgsharp","Number":"6689","RawContent":null,"Title":"Fixing license","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/6689","RelatedDescription":"Closed or merged PR \"Fixing license\" (#6689)"},{"Id":"1712283331","IsPullRequest":false,"CreatedAt":"2023-05-16T15:43:36","Actor":"torronen","Number":"6688","RawContent":null,"Title":"Visualization and analysis of LightGBM and FastTree","State":"open","Body":"As I remember in some comparisons, there is a note that fastTree, LightGBM and FastForest could be converted to code. \r\nLightGBM would appear to have some methods to convert it to C++ code.\r\n\r\nI would be interested in inspecting the trees to understand the predicted issue better. There are already some ways for explainability, like PFI and GFI, but it would be interesting to dig deeper into the models.\r\n\r\nAre there tools that would allow inspecting the contents of treebased models either in simple-to-read format or even visually?\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6688","RelatedDescription":"Open issue \"Visualization and analysis of LightGBM and FastTree\" (#6688)"},{"Id":"1711560386","IsPullRequest":false,"CreatedAt":"2023-05-16T08:51:57","Actor":"torronen","Number":"6687","RawContent":null,"Title":"AutoML 2.0: setting temporary folder model ","State":"open","Body":"How to set the path where temporary models could be stored in AutoML 2.0?\r\n\r\nWhen working with big datasets, users may want to save all models generated during experiment for later analysis. For example, trying again with extended test sets, running sensitivity analysis, feature importance etc. \r\n\r\n=> It would be useful to be able to save the path of temporary models to a known location. Even better if one could set the prefix for the temporary models (for example \"mydata-Model1.zip\" where \"mydata\" is the prefix)","Url":"https://github.com/dotnet/machinelearning/issues/6687","RelatedDescription":"Open issue \"AutoML 2.0: setting temporary folder model \" (#6687)"},{"Id":"1711033879","IsPullRequest":false,"CreatedAt":"2023-05-16T00:45:38","Actor":"michaelgsharp","Number":"6686","RawContent":null,"Title":"Loading Pre-Trained LightGBM model doesn't correctly load Label metadata for key <-> value.","State":"open","Body":"Loading Pre-Trained LightGBM model doesn't correctly load Label metadata for key <-> value. Need to parse the labels out of the model file and add a new annotation for it.","Url":"https://github.com/dotnet/machinelearning/issues/6686","RelatedDescription":"Open issue \"Loading Pre-Trained LightGBM model doesn't correctly load Label metadata for key <-> value.\" (#6686)"},{"Id":"1710496188","IsPullRequest":true,"CreatedAt":"2023-05-15T21:39:18","Actor":"michaelgsharp","Number":"6683","RawContent":null,"Title":"Added in release notes for preview 3","State":"closed","Body":"Added in release notes for preview 3.","Url":"https://github.com/dotnet/machinelearning/pull/6683","RelatedDescription":"Closed or merged PR \"Added in release notes for preview 3\" (#6683)"},{"Id":"1710544567","IsPullRequest":true,"CreatedAt":"2023-05-15T20:03:01","Actor":"michaelgsharp","Number":"6685","RawContent":null,"Title":"Disable flaky test","State":"closed","Body":"Disabling MulticlassLRTest for now as its flaky on non x86/x64 devices. See #6684 for info.","Url":"https://github.com/dotnet/machinelearning/pull/6685","RelatedDescription":"Closed or merged PR \"Disable flaky test\" (#6685)"},{"Id":"1710540153","IsPullRequest":false,"CreatedAt":"2023-05-15T17:48:17","Actor":"michaelgsharp","Number":"6684","RawContent":null,"Title":"PR Validation Flaky Test","State":"open","Body":"Microsoft.ML.RunTests.TestPredictors.MulticlassLRTest is flaky on arm/arm64 devices. Disabling the test for now on non x86/x64 devices until we figure out the issue.\r\n\r\n\r\n```\r\nMicrosoft.ML.RunTests.TestPredictors.MulticlassLRTest [FAIL]\r\n[31;1m[m[37m      Assert.Equal() Failure\r\n[m[37m      Expected: 0\r\n[m[37m      Actual:   2\r\n[m[30;1m      Stack Trace:\r\n[m[37m        /__w/1/s/test/Microsoft.ML.TestFramework/BaseTestBaseline.cs(201,0): at Microsoft.ML.RunTests.BaseTestBaseline.Done()\r\n[m[37m        /__w/1/s/test/Microsoft.ML.Predictor.Tests/TestPredictors.cs(156,0): at Microsoft.ML.RunTests.TestPredictors.MulticlassLRTest()\r\n[m[30;1m      Output:\r\n[m[37m        Running 'MulticlassLogisticRegression' on 'iris'\r\n[m[37m          Running as: TrainTest tr=MulticlassLogisticRegression{l1=0.001 l2=0.1 ot=1e-3 nt=1} data=/root/helix/work/correlation/test/data/iris.txt seed=1 test=/root/helix/work/correlation/test/data/iris.txt xf=Term{col=Label} out={/root/helix/work/workitem/e/TestOutput/MulticlassLogisticRegression/MulticlassLogisticRegression-TrainTest-iris-model.zip} dout={/root/helix/work/workitem/e/TestOutput/MulticlassLogisticRegression/MulticlassLogisticRegression-TrainTest-iris.txt} norm=no\r\n[m[37m        maml.exe TrainTest test=/root/helix/work/correlation/test/data/iris.txt tr=MulticlassLogisticRegression{l1=0.001 l2=0.1 ot=1e-3 nt=1} norm=No dout=/root/helix/work/workitem/e/TestOutput/MulticlassLogisticRegression/MulticlassLogisticRegression-TrainTest-iris.txt data=/root/helix/work/correlation/test/data/iris.txt out=/root/helix/work/workitem/e/TestOutput/MulticlassLogisticRegression/MulticlassLogisticRegression-TrainTest-iris-model.zip seed=1 xf=Term{col=Label}\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Not adding a normalizer.\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Beginning optimization\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        num vars: 15\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        improvement criterion: Mean Improvement\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        L1 regularization selected 15 of 15 weights.\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Not training a calibrator because it is not needed.\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Confusion table\r\n[m[37m        \r\n[m[37m        \r\n[m[37m                  ||========================\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        PREDICTED ||     0 |     1 |     2 | Recall\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        TRUTH     ||========================\r\n[m[37m        \r\n[m[37m        \r\n[m[37m                0 ||    50 |     0 |     0 | 1.0000\r\n[m[37m        \r\n[m[37m        \r\n[m[37m                1 ||     0 |    48 |     2 | 0.9600\r\n[m[37m        \r\n[m[37m        \r\n[m[37m                2 ||     0 |     1 |    49 | 0.9800\r\n[m[37m        \r\n[m[37m        \r\n[m[37m                  ||========================\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Precision ||1.0000 |0.9796 |0.9608 |\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Accuracy(micro-avg): 0.980000\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Accuracy(macro-avg): 0.980000\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Log-loss:           0.072171\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Log-loss reduction: 0.934307\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        OVERALL RESULTS\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        ---------------------------------------\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Accuracy(micro-avg): 0.980000 (0.0000)\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Accuracy(macro-avg): 0.980000 (0.0000)\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Log-loss:           0.072171 (0.0000)\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Log-loss reduction: 0.934307 (0.0000)\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        ---------------------------------------\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Physical memory usage(MB): 120\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Virtual memory usage(MB): 3549\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        5/15/2023 5:29:00 PM\t Time elapsed(s): 0.028\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Comparing /root/helix/work/workitem/e/TestOutput/MulticlassLogisticRegression/MulticlassLogisticRegression-TrainTest-iris-out.txt and /root/helix/work/correlation/test/BaselineOutput/Common/MulticlassLogisticRegression/MulticlassLogisticRegression-TrainTest-iris-out.txt\r\n[m[37m        Output matches baseline: 'MulticlassLogisticRegression/MulticlassLogisticRegression-TrainTest-iris-out.txt'\r\n[m[37m        Comparing /root/helix/work/workitem/e/TestOutput/MulticlassLogisticRegression/MulticlassLogisticRegression-TrainTest-iris.txt and /root/helix/work/correlation/test/BaselineOutput/Common/MulticlassLogisticRegression/netcoreapp/MulticlassLogisticRegression-TrainTest-iris.txt\r\n[m[37m        Output matches baseline: 'MulticlassLogisticRegression/MulticlassLogisticRegression-TrainTest-iris.txt'\r\n[m[37m        maml.exe Test dout=/root/helix/work/workitem/e/TestOutput/MulticlassLogisticRegression/MulticlassLogisticRegression-TrainTest-iris.txt data=/root/helix/work/correlation/test/data/iris.txt in=/root/helix/work/workitem/e/TestOutput/MulticlassLogisticRegression/MulticlassLogisticRegression-TrainTest-iris-model.zip seed=1\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Confusion table\r\n[m[37m        \r\n[m[37m        \r\n[m[37m                  ||========================\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        PREDICTED ||     0 |     1 |     2 | Recall\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        TRUTH     ||========================\r\n[m[37m        \r\n[m[37m        \r\n[m[37m                0 ||    50 |     0 |     0 | 1.0000\r\n[m[37m        \r\n[m[37m        \r\n[m[37m                1 ||     0 |    48 |     2 | 0.9600\r\n[m[37m        \r\n[m[37m        \r\n[m[37m                2 ||     0 |     1 |    49 | 0.9800\r\n[m[37m        \r\n[m[37m        \r\n[m[37m                  ||========================\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Precision ||1.0000 |0.9796 |0.9608 |\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Accuracy(micro-avg): 0.980000\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Accuracy(macro-avg): 0.980000\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Log-loss:           0.072171\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Log-loss reduction: 0.934307\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        OVERALL RESULTS\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        ---------------------------------------\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Accuracy(micro-avg): 0.980000 (0.0000)\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Accuracy(macro-avg): 0.980000 (0.0000)\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Log-loss:           0.072171 (0.0000)\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Log-loss reduction: 0.934307 (0.0000)\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        ---------------------------------------\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Physical memory usage(MB): 120\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Virtual memory usage(MB): 3549\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        5/15/2023 5:29:00 PM\t Time elapsed(s): 0.008\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Suffix of length 27 compared against sequence of length 34\r\n[m[37m        Running 'MulticlassLogisticRegression' on 'iris'\r\n[m[37m          Running as: CV tr=MulticlassLogisticRegression{l1=0.001 l2=0.1 ot=1e-3 nt=1} data=/root/helix/work/correlation/test/data/iris.txt seed=1 xf=Term{col=Label} dout={/root/helix/work/workitem/e/TestOutput/MulticlassLogisticRegression/MulticlassLogisticRegression-CV-iris.txt} norm=no threads-\r\n[m[37m        maml.exe CV tr=MulticlassLogisticRegression{l1=0.001 l2=0.1 ot=1e-3 nt=1} threads=- norm=No dout=/root/helix/work/workitem/e/TestOutput/MulticlassLogisticRegression/MulticlassLogisticRegression-CV-iris.txt data=/root/helix/work/correlation/test/data/iris.txt seed=1 xf=Term{col=Label}\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Not adding a normalizer.\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Not adding a normalizer.\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Beginning optimization\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        num vars: 15\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        improvement criterion: Mean Improvement\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        L1 regularization selected 15 of 15 weights.\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Not training a calibrator because it is not needed.\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Physical memory usage(MB): 120\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Virtual memory usage(MB): 3549\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        5/15/2023 5:29:00 PM\t Time elapsed(s): 0.018\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        \r\n[m[37m        ***** Unexpected failure. Please refer to https://aka.ms/MLNetIssue to file an issue with details *****\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        ***** Error log has been saved to '/tmp/TLC/Error_20230515_172900_e06f381a-3a62-4df3-b493-09ff5a4df87d.log', please refer to https://aka.ms/MLNetIssue to file an issue with details *****\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        ===== Begin detailed dump =====\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        (1) Unexpected exception: One or more errors occurred. (Assert failed: Assertion Failed\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Expected: True\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Actual:   False), 'System.AggregateException'\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at System.Threading.Tasks.Task.WaitAllCore(Task[] tasks, Int32 millisecondsTimeout, CancellationToken cancellationToken)\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at System.Threading.Tasks.Task.WaitAll(Task[] tasks)\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Data.CrossValidationCommand.FoldHelper.GetCrossValidationTasks() in /__w/1/s/src/Microsoft.ML.Data/Commands/CrossValidationCommand.cs:line 471\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Data.CrossValidationCommand.RunCore(IChannel ch, String cmd) in /__w/1/s/src/Microsoft.ML.Data/Commands/CrossValidationCommand.cs:line 202\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Data.CrossValidationCommand.Run() in /__w/1/s/src/Microsoft.ML.Data/Commands/CrossValidationCommand.cs:line 134\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Tools.Maml.MainCore(IHostEnvironment env, String args, Boolean alwaysPrintStacktrace) in /__w/1/s/src/Microsoft.ML.Maml/MAML.cs:line 130\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        (2) Unexpected exception: Assert failed: Assertion Failed\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Expected: True\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Actual:   False, 'Xunit.Sdk.TrueException'\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Xunit.Assert.True(Nullable`1 condition, String userMessage) in /_/src/xunit.assert/Asserts/BooleanAsserts.cs:line 132\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Xunit.Assert.True(Boolean condition, String userMessage) in /_/src/xunit.assert/Asserts/BooleanAsserts.cs:line 116\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Internal.Internallearn.Test.GlobalBase.AssertHandler(String msg, IExceptionContext ectx) in /__w/1/s/test/Microsoft.ML.TestFramework/GlobalBase.cs:line 80\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Runtime.Contracts.DbgFailCore(String msg, IExceptionContext ctx) in /__w/1/s/src/Microsoft.ML.Core/Utilities/Contracts.cs:line 781\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Runtime.Contracts.DbgFail(IExceptionContext ctx) in /__w/1/s/src/Microsoft.ML.Core/Utilities/Contracts.cs:line 790\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Runtime.Contracts.Assert(IExceptionContext ctx, Boolean f) in /__w/1/s/src/Microsoft.ML.Core/Utilities/Contracts.cs:line 845\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Data.CacheDataView.ColumnCache.ImplVec`1.Fetch(Int32 idx, VBuffer`1& value) in /__w/1/s/src/Microsoft.ML.Data/DataView/CacheDataView.cs:line 1389\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Data.CacheDataView.RowCursor`1.<>c__DisplayClass8_0`1.<CreateGetterDelegateCore>b__0(TValue& value) in /__w/1/s/src/Microsoft.ML.Data/DataView/CacheDataView.cs:line 496\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Trainers.FeatureFloatVectorCursor.Accept() in /__w/1/s/src/Microsoft.ML.Data/Training/TrainerUtils.cs:line 855\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Trainers.FloatLabelCursor.Accept() in /__w/1/s/src/Microsoft.ML.Data/Training/TrainerUtils.cs:line 928\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Trainers.TrainingCursorBase.MoveNext() in /__w/1/s/src/Microsoft.ML.Data/Training/TrainerUtils.cs:line 555\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Trainers.LbfgsTrainerBase`3.TrainCore(IChannel ch, RoleMappedData data) in /__w/1/s/src/Microsoft.ML.StandardTrainers/Standard/LogisticRegression/LbfgsPredictorBase.cs:line 605\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Trainers.LbfgsTrainerBase`3.TrainModelCore(TrainContext context) in /__w/1/s/src/Microsoft.ML.StandardTrainers/Standard/LogisticRegression/LbfgsPredictorBase.cs:line 458\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Trainers.TrainerEstimatorBase`2.Microsoft.ML.ITrainer<Microsoft.ML.IPredictor>.Train(TrainContext context) in /__w/1/s/src/Microsoft.ML.Data/Training/TrainerEstimatorBase.cs:line 100\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Trainers.TrainerEstimatorBase`2.Microsoft.ML.ITrainer.Train(TrainContext context) in /__w/1/s/src/Microsoft.ML.Data/Training/TrainerEstimatorBase.cs:line 168\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Data.TrainUtils.TrainCore(IHostEnvironment env, IChannel ch, RoleMappedData data, ITrainer trainer, RoleMappedData validData, IComponentFactory`1 calibrator, Int32 maxCalibrationExamples, Nullable`1 cacheData, IPredictor inputPredictor, RoleMappedData testData) in /__w/1/s/src/Microsoft.ML.Data/Commands/TrainCommand.cs:line 280\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Data.TrainUtils.Train(IHostEnvironment env, IChannel ch, RoleMappedData data, ITrainer trainer, RoleMappedData validData, IComponentFactory`1 calibrator, Int32 maxCalibrationExamples, Nullable`1 cacheData, IPredictor inputPredictor, RoleMappedData testData) in /__w/1/s/src/Microsoft.ML.Data/Commands/TrainCommand.cs:line 255\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Data.CrossValidationCommand.FoldHelper.RunFold(Int32 fold) in /__w/1/s/src/Microsoft.ML.Data/Commands/CrossValidationCommand.cs:line 523\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at Microsoft.ML.Data.CrossValidationCommand.FoldHelper.<>c__DisplayClass24_0.<GetCrossValidationTasks>b__0() in /__w/1/s/src/Microsoft.ML.Data/Commands/CrossValidationCommand.cs:line 463\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at System.Threading.Tasks.Task`1.InnerInvoke()\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        --- End of stack trace from previous location ---\r\n[m[37m        \r\n[m[37m        \r\n[m[37m           at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        ====== End detailed dump =====\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        *** Predictor returned -2\r\n[m[37m        Comparing /root/helix/work/workitem/e/TestOutput/MulticlassLogisticRegression/MulticlassLogisticRegression-CV-iris-out.txt and /root/helix/work/correlation/test/BaselineOutput/Common/MulticlassLogisticRegression/netcoreapp/MulticlassLogisticRegression-CV-iris-out.txt\r\n[m[37m        *** Failure #1: Output and baseline mismatch at line 3, expected 'Beginning optimization' but got 'Not adding a normalizer.' : 'MulticlassLogisticRegression/MulticlassLogisticRegression-CV-iris-out.txt'\r\n[m[37m        \t\tVoid Fail(System.String, System.Object[]) /__w/1/s/test/Microsoft.ML.TestFramework/BaseTestBaseline.cs 224\r\n[m[37m        \t\tBoolean CheckEqualityFromPathsCore(System.String, System.String, System.String, Int32, Int32, NumberParseOption) /__w/1/s/test/Microsoft.ML.TestFramework/BaseTestBaseline.cs 546\r\n[m[37m        \t\tBoolean CheckEqualityCore(System.String, System.String, System.String, Boolean, Int32, NumberParseOption) /__w/1/s/test/Microsoft.ML.TestFramework/BaseTestBaseline.cs 409\r\n[m[37m        \t\tBoolean CheckEqualityNormalized(System.String, System.String, System.String, Int32, NumberParseOption) /__w/1/s/test/Microsoft.ML.TestFramework/BaseTestBaseline.cs 377\r\n[m[37m        \t\tBoolean CheckEqualityNormalized(Int32, NumberParseOption) /__w/1/s/test/Microsoft.ML.TestFramework/TestCommandBase.cs 79\r\n[m[37m        \t\tVoid Run(RunContext, Int32, NumberParseOption) /__w/1/s/test/Microsoft.ML.TestFramework/BaseTestPredictorsMaml.cs 169\r\n[m[37m        \t\tVoid Run_CV(Microsoft.ML.RunTests.PredictorAndArgs, Microsoft.ML.TestFrameworkCommon.TestDataset, System.String[], System.String, Boolean, Int32, NumberParseOption) /__w/1/s/test/Microsoft.ML.TestFramework/BaseTestPredictorsMaml.cs 442\r\n[m[37m        \t\tVoid RunOneAllTests(Microsoft.ML.RunTests.PredictorAndArgs, Microsoft.ML.TestFrameworkCommon.TestDataset, System.String[], System.String, Boolean, Int32, NumberParseOption) /__w/1/s/test/Microsoft.ML.TestFramework/BaseTestPredictorsMaml.cs 363\r\n[m[37m        \t\tVoid MulticlassLRTest() /__w/1/s/test/Microsoft.ML.Predictor.Tests/TestPredictors.cs 155\r\n[m[37m        \t\tSystem.Object InvokeMethod(System.Object, System.Span`1[System.Object] ByRef, System.Signature, Boolean, Boolean)  0\r\n[m[37m        \t\tSystem.Object Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)  0\r\n[m[37m        \t\tSystem.Object CallTestMethod(System.Object) /_/src/xunit.execution/Sdk/Frameworks/Runners/TestInvoker.cs 150\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestInvoker.cs 257\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task <InvokeTestMethodAsync>b__1()  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/ExecutionTimer.cs 48\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task AggregateAsync(System.Func`1[System.Threading.Tasks.Task])  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task <InvokeTestMethodAsync>b__0() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestInvoker.cs 242\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.core/Sdk/ExceptionAggregator.cs 90\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task RunAsync(System.Func`1[System.Threading.Tasks.Task])  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestInvoker.cs 241\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[System.Decimal] InvokeTestMethodAsync(System.Object)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[System.Decimal] InvokeTestMethodAsync(System.Object) /_/src/xunit.execution/Sdk/Frameworks/Runners/XunitTestInvoker.cs 112\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestInvoker.cs 206\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[System.Decimal] <RunAsync>b__47_0()  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.core/Sdk/ExceptionAggregator.cs 107\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[T] RunAsync[T](System.Func`1[System.Threading.Tasks.Task`1[T]])  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[System.Decimal] RunAsync() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestInvoker.cs 189\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[System.Decimal] InvokeTestMethodAsync(Xunit.Sdk.ExceptionAggregator) /_/src/xunit.execution/Sdk/Frameworks/Runners/XunitTestRunner.cs 84\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/XunitTestRunner.cs 67\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[System.Tuple`2[System.Decimal,System.String]] InvokeTestAsync(Xunit.Sdk.ExceptionAggregator)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[System.Tuple`2[System.Decimal,System.String]] <RunAsync>b__0() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestRunner.cs 149\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.core/Sdk/ExceptionAggregator.cs 107\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[T] RunAsync[T](System.Func`1[System.Threading.Tasks.Task`1[T]])  0\r\n[m[37m        \t\tVoid MoveNext()  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunAsync()  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestCaseRunner.cs 82\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunAsync()  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestMethodRunner.cs 136\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunTestCasesAsync()  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestMethodRunner.cs 106\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunAsync()  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestClassRunner.cs 213\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunTestMethodsAsync()  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestClassRunner.cs 171\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunAsync()  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunTestClassAsync(Xunit.Abstractions.ITestClass, Xunit.Abstractions.IReflectionTypeInfo, System.Collections.Generic.IEnumerable`1[Xunit.Sdk.IXunitTestCase]) /_/src/xunit.execution/Sdk/Frameworks/Runners/XunitTestCollectionRunner.cs 158\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestCollectionRunner.cs 130\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunTestClassesAsync()  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestCollectionRunner.cs 101\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunAsync()  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunTestCollectionAsync(Xunit.Sdk.IMessageBus, Xunit.Abstractions.ITestCollection, System.Collections.Generic.IEnumerable`1[Xunit.Sdk.IXunitTestCase], System.Threading.CancellationTokenSource) /_/src/xunit.execution/Sdk/Frameworks/Runners/XunitTestAssemblyRunner.cs 235\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] <RunTestCollectionsAsync>b__2() /_/src/xunit.execution/Sdk/Frameworks/Runners/XunitTestAssemblyRunner.cs 184\r\n[m[37m        \t\tVoid InnerInvoke()  0\r\n[m[37m        \t\tVoid <.cctor>b__272_0(System.Object)  0\r\n[m[37m        \t\tVoid RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)  0\r\n[m[37m        \t\tVoid ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef, System.Threading.Thread)  0\r\n[m[37m        \t\tBoolean ExecuteEntry()  0\r\n[m[37m        \t\tVoid <.cctor>b__8_0(System.Object)  0\r\n[m[37m        \t\tVoid RunOnSyncContext(System.Threading.SendOrPostCallback, System.Object) /_/src/xunit.execution/Sdk/MaxConcurrencySyncContext.cs 106\r\n[m[37m        \t\tVoid <WorkerThreadProc>b__0(System.Object) /_/src/xunit.execution/Sdk/MaxConcurrencySyncContext.cs 96\r\n[m[37m        \t\tVoid RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)  0\r\n[m[37m        \t\tVoid WorkerThreadProc() /_/src/xunit.execution/Sdk/MaxConcurrencySyncContext.cs 96\r\n[m[37m        \t\tVoid <QueueUserWorkItem>b__5_0(System.Object) /_/src/common/XunitWorkerThread.cs 37\r\n[m[37m        \t\tVoid InnerInvoke()  0\r\n[m[37m        \t\tVoid <.cctor>b__272_0(System.Object)  0\r\n[m[37m        \t\tVoid RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)  0\r\n[m[37m        \t\tVoid ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef, System.Threading.Thread)  0\r\n[m[37m        \t\tVoid ExecuteEntryUnsafe(System.Threading.Thread)  0\r\n[m[37m        \t\tVoid <.cctor>b__10_0(System.Object)  0\r\n[m[37m        \t\tVoid StartCallback()  0\r\n[m[37m        *** Failure #2: Output file not found: /root/helix/work/workitem/e/TestOutput/MulticlassLogisticRegression/MulticlassLogisticRegression-CV-iris.txt\r\n[m[37m        \t\tVoid Fail(System.String, System.Object[]) /__w/1/s/test/Microsoft.ML.TestFramework/BaseTestBaseline.cs 224\r\n[m[37m        \t\tBoolean CheckOutFile(System.String) /__w/1/s/test/Microsoft.ML.TestFramework/BaseTestBaseline.cs 922\r\n[m[37m        \t\tBoolean CheckEqualityCore(System.String, System.String, System.String, Boolean, Int32, NumberParseOption) /__w/1/s/test/Microsoft.ML.TestFramework/BaseTestBaseline.cs 398\r\n[m[37m        \t\tBoolean CheckEquality(System.String, System.String, System.String, Int32, NumberParseOption) /__w/1/s/test/Microsoft.ML.TestFramework/BaseTestBaseline.cs 367\r\n[m[37m        \t\tBoolean CheckEquality(Int32, NumberParseOption) /__w/1/s/test/Microsoft.ML.TestFramework/TestCommandBase.cs 73\r\n[m[37m        \t\tVoid Run(RunContext, Int32, NumberParseOption) /__w/1/s/test/Microsoft.ML.TestFramework/BaseTestPredictorsMaml.cs 218\r\n[m[37m        \t\tVoid Run_CV(Microsoft.ML.RunTests.PredictorAndArgs, Microsoft.ML.TestFrameworkCommon.TestDataset, System.String[], System.String, Boolean, Int32, NumberParseOption) /__w/1/s/test/Microsoft.ML.TestFramework/BaseTestPredictorsMaml.cs 442\r\n[m[37m        \t\tVoid RunOneAllTests(Microsoft.ML.RunTests.PredictorAndArgs, Microsoft.ML.TestFrameworkCommon.TestDataset, System.String[], System.String, Boolean, Int32, NumberParseOption) /__w/1/s/test/Microsoft.ML.TestFramework/BaseTestPredictorsMaml.cs 363\r\n[m[37m        \t\tVoid MulticlassLRTest() /__w/1/s/test/Microsoft.ML.Predictor.Tests/TestPredictors.cs 155\r\n[m[37m        \t\tSystem.Object InvokeMethod(System.Object, System.Span`1[System.Object] ByRef, System.Signature, Boolean, Boolean)  0\r\n[m[37m        \t\tSystem.Object Invoke(System.Object, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)  0\r\n[m[37m        \t\tSystem.Object CallTestMethod(System.Object) /_/src/xunit.execution/Sdk/Frameworks/Runners/TestInvoker.cs 150\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestInvoker.cs 257\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task <InvokeTestMethodAsync>b__1()  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/ExecutionTimer.cs 48\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task AggregateAsync(System.Func`1[System.Threading.Tasks.Task])  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task <InvokeTestMethodAsync>b__0() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestInvoker.cs 242\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.core/Sdk/ExceptionAggregator.cs 90\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task RunAsync(System.Func`1[System.Threading.Tasks.Task])  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestInvoker.cs 241\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[System.Decimal] InvokeTestMethodAsync(System.Object)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[System.Decimal] InvokeTestMethodAsync(System.Object) /_/src/xunit.execution/Sdk/Frameworks/Runners/XunitTestInvoker.cs 112\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestInvoker.cs 206\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[System.Decimal] <RunAsync>b__47_0()  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.core/Sdk/ExceptionAggregator.cs 107\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[T] RunAsync[T](System.Func`1[System.Threading.Tasks.Task`1[T]])  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[System.Decimal] RunAsync() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestInvoker.cs 189\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[System.Decimal] InvokeTestMethodAsync(Xunit.Sdk.ExceptionAggregator) /_/src/xunit.execution/Sdk/Frameworks/Runners/XunitTestRunner.cs 84\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/XunitTestRunner.cs 67\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[System.Tuple`2[System.Decimal,System.String]] InvokeTestAsync(Xunit.Sdk.ExceptionAggregator)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[System.Tuple`2[System.Decimal,System.String]] <RunAsync>b__0() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestRunner.cs 149\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.core/Sdk/ExceptionAggregator.cs 107\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[T] RunAsync[T](System.Func`1[System.Threading.Tasks.Task`1[T]])  0\r\n[m[37m        \t\tVoid MoveNext()  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunAsync()  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestCaseRunner.cs 82\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunAsync()  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestMethodRunner.cs 136\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunTestCasesAsync()  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestMethodRunner.cs 106\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunAsync()  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestClassRunner.cs 213\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunTestMethodsAsync()  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestClassRunner.cs 171\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunAsync()  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunTestClassAsync(Xunit.Abstractions.ITestClass, Xunit.Abstractions.IReflectionTypeInfo, System.Collections.Generic.IEnumerable`1[Xunit.Sdk.IXunitTestCase]) /_/src/xunit.execution/Sdk/Frameworks/Runners/XunitTestCollectionRunner.cs 158\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestCollectionRunner.cs 130\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunTestClassesAsync()  0\r\n[m[37m        \t\tVoid MoveNext() /_/src/xunit.execution/Sdk/Frameworks/Runners/TestCollectionRunner.cs 101\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tVoid Start[TStateMachine](TStateMachine ByRef)  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunAsync()  0\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] RunTestCollectionAsync(Xunit.Sdk.IMessageBus, Xunit.Abstractions.ITestCollection, System.Collections.Generic.IEnumerable`1[Xunit.Sdk.IXunitTestCase], System.Threading.CancellationTokenSource) /_/src/xunit.execution/Sdk/Frameworks/Runners/XunitTestAssemblyRunner.cs 235\r\n[m[37m        \t\tSystem.Threading.Tasks.Task`1[Xunit.Sdk.RunSummary] <RunTestCollectionsAsync>b__2() /_/src/xunit.execution/Sdk/Frameworks/Runners/XunitTestAssemblyRunner.cs 184\r\n[m[37m        \t\tVoid InnerInvoke()  0\r\n[m[37m        \t\tVoid <.cctor>b__272_0(System.Object)  0\r\n[m[37m        \t\tVoid RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)  0\r\n[m[37m        \t\tVoid ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef, System.Threading.Thread)  0\r\n[m[37m        \t\tBoolean ExecuteEntry()  0\r\n[m[37m        \t\tVoid <.cctor>b__8_0(System.Object)  0\r\n[m[37m        \t\tVoid RunOnSyncContext(System.Threading.SendOrPostCallback, System.Object) /_/src/xunit.execution/Sdk/MaxConcurrencySyncContext.cs 106\r\n[m[37m        \t\tVoid <WorkerThreadProc>b__0(System.Object) /_/src/xunit.execution/Sdk/MaxConcurrencySyncContext.cs 96\r\n[m[37m        \t\tVoid RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)  0\r\n[m[37m        \t\tVoid WorkerThreadProc() /_/src/xunit.execution/Sdk/MaxConcurrencySyncContext.cs 96\r\n[m[37m        \t\tVoid <QueueUserWorkItem>b__5_0(System.Object) /_/src/common/XunitWorkerThread.cs 37\r\n[m[37m        \t\tVoid InnerInvoke()  0\r\n[m[37m        \t\tVoid <.cctor>b__272_0(System.Object)  0\r\n[m[37m        \t\tVoid RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object)  0\r\n[m[37m        \t\tVoid ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef, System.Threading.Thread)  0\r\n[m[37m        \t\tVoid ExecuteEntryUnsafe(System.Threading.Thread)  0\r\n[m[37m        \t\tVoid <.cctor>b__10_0(System.Object)  0\r\n[m[37m        \t\tVoid StartCallback()  0\r\n[m[37m        Test MulticlassLRTest: completed normally: failed\r\n[m[37m        Test MulticlassLRTest is using netcoreapp configuration specific baselines.\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/6684","RelatedDescription":"Open issue \"PR Validation Flaky Test\" (#6684)"},{"Id":"1710339727","IsPullRequest":false,"CreatedAt":"2023-05-15T15:30:43","Actor":"TheJanzap","Number":"6682","RawContent":null,"Title":"DataFrameColumn.SetName() doesn't change name in internal `_columnNameToIndexDictionary`","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 10\r\n - ML.NET Version: ML.NET v2.0.1\r\n - .NET Version: .NET 7.0.1\r\n\r\n**Describe the bug**\r\nWhen renaming a DataFrameColumn with `.SetName()`, the name is not updated in the internal `_columnNameToIndexDictionary`, causing operations using it (like `.IndexOf()`) to fail\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create a new project with the ML.NET librarys and run the sample code below\r\n\r\n**Expected behavior**\r\nIn the code below, `.IndexOf()` should return 0. It instead returns -1, indicating that the column wasn't found\r\n\r\n**Screenshots, Code, Sample Projects**\r\n```\r\nvar dataFrame = new DataFrame(new SingleDataFrameColumn(\"OldName\"));\r\ndataFrame.Columns[0].SetName(\"NewName\");\r\nConsole.WriteLine(dataFrame.Columns.IndexOf(\"NewName\"));\r\n```\r\n\r\n**Additional context**\r\nUnsure if any other functions are affected, I only noticed it with `.IndexOf()`. If you take a look at the private `_columnNameToIndexDictionary`, you'll see that the column still has its old name and thus will fail when looking for the new name\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6682","RelatedDescription":"Open issue \"DataFrameColumn.SetName() doesn't change name in internal `_columnNameToIndexDictionary`\" (#6682)"},{"Id":"1710182941","IsPullRequest":true,"CreatedAt":"2023-05-15T14:05:55","Actor":"asmirnov82","Number":"6681","RawContent":null,"Title":"Fix DataFrame bounds checking on indexing elements","State":"open","Body":"As we have zero-based  indexing in C#, ArgumentOutOfRangeException should be thrown not only when index > length, but also when index == length","Url":"https://github.com/dotnet/machinelearning/pull/6681","RelatedDescription":"Open PR \"Fix DataFrame bounds checking on indexing elements\" (#6681)"},{"Id":"1709982563","IsPullRequest":false,"CreatedAt":"2023-05-15T12:17:54","Actor":"Sonu2396","Number":"6680","RawContent":null,"Title":"Need to find multiple columns for the same model for prediction","State":"open","Body":"I have been doing regression for using the taxi dataset and have got the solution worked fine, however only one column can be predictied as of now and i want to have multiple columns predicted by the system .there  is no provision for that as of now. What should be done exactly. ","Url":"https://github.com/dotnet/machinelearning/issues/6680","RelatedDescription":"Open issue \"Need to find multiple columns for the same model for prediction\" (#6680)"},{"Id":"1709833172","IsPullRequest":false,"CreatedAt":"2023-05-15T10:50:25","Actor":"torronen","Number":"6679","RawContent":null,"Title":"\"The process was terminated due to an unhandled exception.\"","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows Server 2019 & Ubuntu 22.04\r\n - ML.NET Version: Daily / nightly build\r\n - .NET Version: 7.0\r\n \r\n **Question**\r\n For FastTree.DiskTranspose: how much free disk space is needed? I have plenty, but perhaps I did not have for full copy of the dataset if it is needed.\r\n\r\n**Describe the bug**\r\nI am training a big dataset, 450 GB as binary IDV file, maybe about 2TB as uncompressed CSV. Smaller datasets (~10-20GB) work fine.\r\n\r\nLightGBM and FastTree with DiskTranspose are able to run wihtout exception, but at some point \"unhandled exception\" occurs. I have try...catch around contents of main() to print the error. Nothing shows up in console. Many other trainers give OOM.\r\n\r\nUbuntu 22.04, 128 GB RAM, 650 GB swap\r\nWindows 2019, 220 GB RAM, total of 2.8 TB paging files\r\n\r\n----\r\nFrom Windows Logs / Application I can see these 2 errors\r\n\r\n----\r\nApplication: Kwork.MLTrainer2023.exe\r\nCoreCLR Version: 7.0.523.17405\r\n.NET Version: 7.0.5\r\nDescription: The process was terminated due to an unhandled exception.\r\nException Info: exception code e06d7363, exception address 00007FFB2A0049B9\r\n\r\nApplication: Kwork.MLTrainer2023.exe CoreCLR Version: 7.0.523.17405 .NET \r\nVersion: 7.0.5 Description: The process was terminated due to an unhandled \r\nexception. Exception Info: exception code e06d7363, exception address \r\n00007FFB2A0049B9 \r\n\r\n----\r\nFaulting application name: Kwork.MLTrainer2023.exe, version: 0.2100.23.26401, time stamp: 0x641de100\r\nFaulting module name: ucrtbase.dll, version: 10.0.17763.1490, time stamp: 0x48ac8393\r\nException code: 0xc0000409\r\nFault offset: 0x000000000006e77e\r\nFaulting process id: 0x15c0\r\nFaulting application start time: 0x01d98649658be43b\r\nFaulting application path: C:\\Users\\antti\\Desktop\\net7.0\\Kwork.MLTrainer2023.exe\r\nFaulting module path: C:\\Windows\\System32\\ucrtbase.dll\r\nReport Id: 316601db-768e-4398-b14a-5c958b66723d\r\nFaulting package full name: \r\nFaulting package-relative application ID: \r\n\r\nKwork.MLTrainer2023.exe \r\n   0.2100.23.26401 \r\n   641de100 \r\n   ucrtbase.dll \r\n   10.0.17763.1490 \r\n   48ac8393 \r\n   c0000409 \r\n   000000000006e77e \r\n   15c0 \r\n   01d98649658be43b \r\n   C:\\Users\\antti\\Desktop\\net7.0\\Kwork.MLTrainer2023.exe \r\n   C:\\Windows\\System32\\ucrtbase.dll \r\n   316601db-768e-4398-b14a-5c958b66723d \r\n    \r\n    \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6679","RelatedDescription":"Open issue \"\"The process was terminated due to an unhandled exception.\"\" (#6679)"},{"Id":"1709705459","IsPullRequest":true,"CreatedAt":"2023-05-15T09:37:58","Actor":"asmirnov82","Number":"6678","RawContent":null,"Title":"Fix ML.Fairlean using ToList on Row Collection with Count more than Max.Int","State":"open","Body":"Using ToList() method on DataFrame.Rows fails in case of DataFrame.Rows.Count is greater than Max.Int (and as it has Count type long - it's possible). \r\nInstead DataFrame.Append(IEnumerable<DataFrameRow> rows, bool inPlace = false) method should be used.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6678","RelatedDescription":"Open PR \"Fix ML.Fairlean using ToList on Row Collection with Count more than Max.Int\" (#6678)"},{"Id":"1708873616","IsPullRequest":true,"CreatedAt":"2023-05-14T09:12:31","Actor":"asmirnov82","Number":"6677","RawContent":null,"Title":"Fix DataFrame Merge issue","State":"open","Body":"Change Clone method to return correct ColumnType for all inheritors of PrimitiveDataFrameColumn class. Before the fix column of parent PrimitiveDataFrameColumn<T> was returned instead \r\n\r\nFixes #6127","Url":"https://github.com/dotnet/machinelearning/pull/6677","RelatedDescription":"Open PR \"Fix DataFrame Merge issue\" (#6677)"},{"Id":"1708849241","IsPullRequest":true,"CreatedAt":"2023-05-14T07:39:36","Actor":"asmirnov82","Number":"6676","RawContent":null,"Title":"Fix the behavior or column SetName method","State":"open","Body":"Add references to parent DataFrames inside the column. Column renaming updates metadata of all dataframes that this column belongs to.\r\n\r\nFixes #6129\r\nFixes #5916\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6676","RelatedDescription":"Open PR \"Fix the behavior or column SetName method\" (#6676)"},{"Id":"1707975610","IsPullRequest":true,"CreatedAt":"2023-05-12T23:22:13","Actor":"michaelgsharp","Number":"6674","RawContent":null,"Title":"License expression","State":"closed","Body":"Changed packages to use LicenseExpression instead of LicenseFile.","Url":"https://github.com/dotnet/machinelearning/pull/6674","RelatedDescription":"Closed or merged PR \"License expression\" (#6674)"},{"Id":"1708172339","IsPullRequest":true,"CreatedAt":"2023-05-12T20:29:26","Actor":"asmirnov82","Number":"6675","RawContent":null,"Title":"Add missing implementation for datetime relevant arrow type into dataframe","State":"open","Body":"Fixes #6201\r\n\r\nAdd support for converting Apache Arrow Date64 column into DataFrame DateTimePrimitiveColumn and vice versa\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6675","RelatedDescription":"Open PR \"Add missing implementation for datetime relevant arrow type into dataframe\" (#6675)"},{"Id":"1704543098","IsPullRequest":true,"CreatedAt":"2023-05-11T21:26:28","Actor":"LittleLittleCloud","Number":"6668","RawContent":null,"Title":"add epsilon to eci inverse probability","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\nfix #6644 \r\n","Url":"https://github.com/dotnet/machinelearning/pull/6668","RelatedDescription":"Closed or merged PR \"add epsilon to eci inverse probability\" (#6668)"},{"Id":"1705464094","IsPullRequest":false,"CreatedAt":"2023-05-11T18:58:49","Actor":"asmirnov82","Number":"6672","RawContent":null,"Title":"DataFrame ToString() method uses incorrect padding","State":"closed","Body":"**Describe the bug**\r\nDataFrame ToString() method doesn't use separators between columns, so the output is very difficult to read.\r\n\r\nFor example for the dataframe:\r\n\r\nA     B     C\r\n3     16    26\r\n3     19    22\r\n3     11    28\r\n6     11    25\r\n6     10    23\r\n6     13    21\r\n6     17    20\r\n9     18    28\r\n\r\nThe output looks like this:\r\n![image](https://github.com/dotnet/machinelearning/assets/83237987/8e94e4ef-9552-443e-bcb5-063d085dc8eb)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6672","RelatedDescription":"Closed issue \"DataFrame ToString() method uses incorrect padding\" (#6672)"},{"Id":"1705488173","IsPullRequest":true,"CreatedAt":"2023-05-11T18:58:47","Actor":"asmirnov82","Number":"6673","RawContent":null,"Title":"Fix DataFrame ToString() method to use correct alignment for columns to produce readable output","State":"closed","Body":"fixes #6672","Url":"https://github.com/dotnet/machinelearning/pull/6673","RelatedDescription":"Closed or merged PR \"Fix DataFrame ToString() method to use correct alignment for columns to produce readable output\" (#6673)"},{"Id":"1705069782","IsPullRequest":false,"CreatedAt":"2023-05-11T05:01:51","Actor":"maheshlokhande","Number":"6671","RawContent":null,"Title":"Split TextClassification API","State":"open","Body":"TextClassification API was introduced in ML.NET 2.0 release. As per documentation it internally uses BERT to generate embeddings and deep learning for classification. Is there a way to train BERT model with our own data and generate embeddings and then eventually use some deep learning technique to do classification (both in ML.NET). It will enable developers to try the combination that works best for their use case.","Url":"https://github.com/dotnet/machinelearning/issues/6671","RelatedDescription":"Open issue \"Split TextClassification API\" (#6671)"},{"Id":"1704654851","IsPullRequest":false,"CreatedAt":"2023-05-10T21:29:34","Actor":"LittleLittleCloud","Number":"6670","RawContent":null,"Title":"Object detection: Enable loading from checkpoint ","State":"open","Body":"It would be nice if I can pass a checkpoint folder to the object detection trainer option, which can be used to save and load intermediate weight for every N epoch/step/epic. In that case I don't have to retrain the model from the beginning everytime.\r\n\r\nIn the meantime, It would also be nice if object detection trainer will return instead of throw a cancellationException when `mlcontext.CancelExcute` get called.\r\n\r\nBoth features will allow user to pause training process whenever they want and restart training from preivous progress. This would be super useful for deep learning scenarios.\r\n\r\n**Describe the solution you'd like**\r\n- in training option, accept a checkpoint folder\r\n- when cancelling, don't throw error, just return current result\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6670","RelatedDescription":"Open issue \"Object detection: Enable loading from checkpoint \" (#6670)"},{"Id":"1701987732","IsPullRequest":false,"CreatedAt":"2023-05-10T21:15:40","Actor":"maheshlokhande","Number":"6665","RawContent":null,"Title":"Microsoft.ML.TorchSharp TextClassification trainer throwing System.TypeLoadException","State":"closed","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows Server 2019\r\n - ML.NET Version: 2.0.1\r\n - .NET Version: .NET 7\r\n\r\n**Describe the bug**\r\nI am trying to use TextClassification trainer which is part of Microsoft.ML.TorchSharp package as per example here: https://devblogs.microsoft.com/dotnet/introducing-the-ml-dotnet-text-classification-api-preview/\r\n\r\nI have added all the required packages as per above guide.\r\nMicrosoft.ML - 2.0.1\r\nMicrosoft.ML.TorchSharp - 0.20.1\r\nTorchSharp-cpu - 0.99.6\r\n\r\nOn calling Fit method, it is throwing below exception:\r\n\r\nSystem.TypeLoadException\r\n  HResult=0x80131522\r\n  Message=Method 'call' in type 'Microsoft.ML.TorchSharp.NasBert.Models.TransformerEncoder' from assembly 'Microsoft.ML.TorchSharp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51' does not have an implementation.\r\n  Source=Microsoft.ML.TorchSharp\r\n  StackTrace:\r\n   at Microsoft.ML.TorchSharp.NasBert.NasBertTrainer`2.TrainerBase..ctor(NasBertTrainer`2 parent, IChannel ch, IDataView input)\r\n   at Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer.Trainer..ctor(NasBertTrainer`2 parent, IChannel ch, IDataView input)\r\n   at Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer.CreateTrainer(NasBertTrainer`2 parent, IChannel ch, IDataView input)\r\n   at Microsoft.ML.TorchSharp.NasBert.NasBertTrainer`2.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create pipeline as below and call Fit method on it\r\n`var pipeline = mlContext.Transforms.Conversion.MapValueToKey(\"Key\", \"Class\")\r\n                .Append(mlContext.MulticlassClassification.Trainers.TextClassification(\"Key\", sentence1ColumnName: \"text\"))\r\n                .Append(mlContext.Transforms.Conversion.MapKeyToValue(\"PredictedLabel\", \"Key\"));\r\n\t\t\t\t\r\nvar transformer = pipeline.Fit(trainSet)`","Url":"https://github.com/dotnet/machinelearning/issues/6665","RelatedDescription":"Closed issue \"Microsoft.ML.TorchSharp TextClassification trainer throwing System.TypeLoadException\" (#6665)"},{"Id":"1704638937","IsPullRequest":false,"CreatedAt":"2023-05-10T21:13:56","Actor":"luisquintanilla","Number":"6669","RawContent":null,"Title":"Document TorchSharp versions ","State":"open","Body":"Add documentation for APIs that depend on TorchSharp which version they target.\r\n\r\n| ML.NET Version | TorchSharp Package Version |\r\n| --- | --- |\r\n| 2.0.0 | 0.98.1 |\r\n| 2.0.1 | 0.98.1 |\r\n| 3.0.0-preview | 0.98.3 | \r\n| Next preview | 0.99.5 |","Url":"https://github.com/dotnet/machinelearning/issues/6669","RelatedDescription":"Open issue \"Document TorchSharp versions \" (#6669)"},{"Id":"1704128052","IsPullRequest":false,"CreatedAt":"2023-05-10T14:57:47","Actor":"sublunar84","Number":"6667","RawContent":null,"Title":"Support for multiple models","State":"open","Body":"I try to add two different models with AddPredictionEnginePool like below:\r\n`s.AddPredictionEnginePool<MLxxxData, MLxxxPrediction>()\r\n\t.FromFile(modelName: \"mlNetxxxModel\", filePath: GetModelFilePath(CheckType.xxx), watchForChanges: false);\r\n\r\ns.AddPredictionEnginePool<MLyyyData, MLyyyPrediction>()\r\n\t.FromFile(modelName: \"mlNetyyyModel\", filePath: GetModelFilePath(CheckType.yyy), watchForChanges: false);`\r\n\r\nOnly the last model is added though. If I try to use the first one I get an error. Shouldn't you be able to load more than one model? Instead of having to make one application for each model. Cannot find any information on this problem.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6667","RelatedDescription":"Open issue \"Support for multiple models\" (#6667)"},{"Id":"1702436396","IsPullRequest":false,"CreatedAt":"2023-05-09T17:23:11","Actor":"torronen","Number":"6666","RawContent":null,"Title":"LightGBM GPU switch (res[\"device_type\"] == \"gpu\")","State":"open","Body":"**System Information (please complete the following information):**\r\ndaily build \r\n\r\n**Feature request**\r\nLightGBM support GPU for the 2nd part of the algorithm. However, the binary for GPU support needs to be built manually (  https://lightgbm.readthedocs.io/en/latest/GPU-Tutorial.html ) and AFAIK it is not distributed officially or unofficial ATM.\r\n\r\nGPU support can be easily enabled:\r\n1) compile LightGBM GPU (take note to use same version as Microsoft.ML)\r\n2) update res[\"device_type\"]=\"gpu\" array in *.LightGBM\r\n3) update library dll name in source to use your compiled version, mine is lightgbm_gpu, same file as above\r\n\r\nMy experience is on Windows platform with 1080Ti and 3090. GPU becomes helpful with huge datasets (10+ GB). In small datasets I did not see as much a big difference due to the 1st part still being CPU bound.\r\n\r\nI've seen a few requests here and in modelbuilders repo. \r\n\r\n**Discussion and suggestion**\r\nIf the device_type switch would be exposed then users could use unmodified Microsoft.ML library with custom GPU binary. \r\n\r\nHowever, because this requires a custom binary (unless it would be included in nuget.org) so putting it together with all other LightGBM parameters could cause confusion with users who expect it to work just by setting it. 2nd, the AutoML pipelines need also some changes.\r\n\r\nDo you think it would be reasonable to expose this parameter, and what would be the best way to do it?\r\n\r\nAfter a short while of thinking the best I could come up with is putting it as a static method. For example LightGBMTrainer.SetGPUBinary(\"lightgbm_gpu.dll\"); If user sets this binary, then device_type would also be changed. The change would be global. This interface would also let users know they must provide a custom binary for it to work as they can not call the method without.\r\n\r\nOpinions on this? \r\n\r\nIf there is a good plan I can work on this because I would really prefer to use the daily feed instead of a custom build Microsoft.ML. It is the remaining feature I would need to upgrade to the daily build from our modified 1.x version. However, I am not sure if this is something you would like to include in the library considering the absence of GPU binaries, and if there is a good way to implement it. Any advice appreciated.","Url":"https://github.com/dotnet/machinelearning/issues/6666","RelatedDescription":"Open issue \"LightGBM GPU switch (res[\"device_type\"] == \"gpu\")\" (#6666)"},{"Id":"1701263700","IsPullRequest":true,"CreatedAt":"2023-05-09T03:42:17","Actor":"JakeRadMSFT","Number":"6664","RawContent":null,"Title":"(WIP) Generic DataFrame Math","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/6664","RelatedDescription":"Open PR \"(WIP) Generic DataFrame Math\" (#6664)"},{"Id":"1700765725","IsPullRequest":true,"CreatedAt":"2023-05-08T21:09:19","Actor":"LittleLittleCloud","Number":"6663","RawContent":null,"Title":"Expose ExperimentSettings.MaxModel as public","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6663","RelatedDescription":"Closed or merged PR \"Expose ExperimentSettings.MaxModel as public\" (#6663)"},{"Id":"1699794140","IsPullRequest":true,"CreatedAt":"2023-05-08T08:33:07","Actor":"rgesteve","Number":"6662","RawContent":null,"Title":"Update to XGBoost 1.7.4 (WIP)","State":"open","Body":"Fixes to #6383 that use `LibImport` instead of `DllImport`, includes Regression and binary classification.  Exposes optimized `tree_method` `hist` for Intel CPUs.\r\n- needs xgboost installed on system (this is not documented, instructions forthcoming)\r\n- needs sample (forthcoming)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6662","RelatedDescription":"Open PR \"Update to XGBoost 1.7.4 (WIP)\" (#6662)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-05-17T03:30:22.1125661Z","RunDurationInMilliseconds":548}