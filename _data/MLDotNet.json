{"Data":{"GitHub":{"Issues":[{"Id":"2082058236","IsPullRequest":true,"CreatedAt":"2024-01-15T13:40:22","Actor":"dotnet-maestro[bot]","Number":"6957","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 97926d79-6b8b-4d32-c8db-08d9d479971c\r\n- **Build**: 20240112.5\r\n- **Date Produced**: January 12, 2024 10:34:01 PM UTC\r\n- **Commit**: d731f58a502086842739a358ab490bec08fdb8a7\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.23628.1 to 9.0.0-beta.24062.5][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 9.0.0-beta.23628.1 to 9.0.0-beta.24062.5][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.23628.1 to 9.0.0-beta.24062.5][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 9.0.0-beta.23628.1 to 9.0.0-beta.24062.5][1]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 9.0.0-beta.23628.1 to 9.0.0-beta.24062.5][1]\r\n  - **Microsoft.DotNet.XliffTasks**: [from 9.0.0-beta.23628.1 to 9.0.0-beta.24062.5][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.23628.1 to 9.0.0-beta.24062.5][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/9e5fd26c0d...d731f58a50\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6957","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#6957)"},{"Id":"2081036913","IsPullRequest":false,"CreatedAt":"2024-01-15T00:33:05","Actor":"jackpotcityco","Number":"6956","RawContent":null,"Title":"How much faster could this GPU be on AutoML \"BinaryClassificationExperiment\" than this CPU","State":"open","Body":"Hello!\r\n\r\nI have a question about if GPU is supported for AutoML \"BinaryClassificationExperiment\" as seen in my code below.\r\n\r\nIf so, I wonder in general to get a rough idéa how much faster for example below GPU would be. Notice that I would run the experiment on a dataset with more than 200,000 rows and 100 columns as Training Data. So it is long training times like 20 minutes or longer.\r\n**(I just took this GPU as an example. If there is better GPUs to use, where I also are interested to use many GPUs as a cluster. Please advice me on that. I would be more than happy)**\r\n\r\n_Memory Type: GDDR6X\r\nChipset/GPU Model: NVIDIA GeForce RTX 3090\r\nMemory Size: 24 GB_\r\n\r\nCompared to if the experiment would run on my current CPU which is:\r\n\r\n_i7 - 12800h\r\nTotal Cores 14\r\nPerformance-cores 6\r\nEfficient-cores 8\r\nTotal Threads 20\r\nMax Turbo Frequency 4.80 GHz\r\nIntel® Turbo Boost Max Technology 3.0 Frequency ‡ 4.80 GHz\r\nPerformance-core Max Turbo Frequency 4.80 GHz\r\nEfficient-core Max Turbo Frequency 3.70 GHz\r\nCache 24 MB Intel® Smart Cache_\r\n\r\nI use: 32 GB RAM\r\n```\r\nvar experiment = mlContext.Auto().CreateBinaryClassificationExperiment(new BinaryExperimentSettings\r\n                {\r\n                    MaxExperimentTimeInSeconds = 1000,\r\n                    CacheBeforeTrainer = CacheBeforeTrainer.On,\r\n                    MaximumMemoryUsageInMegaByte = 8192, \r\n                    OptimizingMetric = BinaryClassificationMetric.PositivePrecision\r\n                });\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/6956","RelatedDescription":"Open issue \"How much faster could this GPU be on AutoML \"BinaryClassificationExperiment\" than this CPU\" (#6956)"},{"Id":"2080571988","IsPullRequest":false,"CreatedAt":"2024-01-14T04:05:08","Actor":"tianweimol","Number":"6955","RawContent":null,"Title":"Generative Adversarial Network","State":"open","Body":"how can i use GAN(Generative Adversarial Network) by ml.net\r\nthanks for your answer","Url":"https://github.com/dotnet/machinelearning/issues/6955","RelatedDescription":"Open issue \"Generative Adversarial Network\" (#6955)"},{"Id":"2080059395","IsPullRequest":true,"CreatedAt":"2024-01-13T04:13:54","Actor":"michaelgsharp","Number":"6954","RawContent":null,"Title":"Torch sharp version updates and test fixes","State":"open","Body":"This PR updates the version of TorchSharp to the latest version to take advantage of some of the bug fixes it has that have been reported to us by some of our users.\r\n\r\nIt also fixes some test issues (makes the memory intensive ones actually run sequentially, they weren't doing it correctly before), and fixes the test namespace in the new test projects.","Url":"https://github.com/dotnet/machinelearning/pull/6954","RelatedDescription":"Open PR \"Torch sharp version updates and test fixes\" (#6954)"},{"Id":"2075249680","IsPullRequest":true,"CreatedAt":"2024-01-13T04:12:00","Actor":"github-actions[bot]","Number":"6953","RawContent":null,"Title":"[release/3.0] fix #6949","State":"closed","Body":"Backport of #6951 to release/3.0\r\n\r\n/cc @michaelgsharp @LittleLittleCloud\r\n\r\n## Customer Impact\r\nThere is no workaround an end user could do to avoid this issue if they do hit it.\r\n\r\n## Testing\r\nThis exposed a testing hole that we have. We are going to add in \"package testing\" in order to catch situations like this before they are released.\r\n\r\n## Risk\r\nMid level risk. We are adding a new public type that could potentially have collisions with user.","Url":"https://github.com/dotnet/machinelearning/pull/6953","RelatedDescription":"Closed or merged PR \"[release/3.0] fix #6949\" (#6953)"},{"Id":"2072809789","IsPullRequest":false,"CreatedAt":"2024-01-10T20:02:32","Actor":"ericstj","Number":"6949","RawContent":null,"Title":"Microsoft.ML.StandardTrainers references Microsoft.ML.SearchSpace but it's not included in Microsoft.ML package","State":"closed","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Any\r\n - ML.NET Version: 3.0\r\n - .NET Version: Any\r\n\r\n**Describe the bug**\r\nMicrosoft.ML.StandardTrainers.dll references Microsoft.ML.SearchSpace.dll but the latter is not included in the Microsoft.ML package, but the Microsoft.ML.AutoML package.\r\n\r\nI haven't noticed any side-effects from this _yet_ since the usage of Microsoft.ML.SearchSpace is only in attributes, but it's possible that anything trying to enumerate other attributes on these types would see `FileLoadException`s.\r\n\r\nI discussed it with @LittleLittleCloud and suggested a couple options, _if_ we decide we need to fix this.\r\n1. Just include Microsoft.ML.SearchSpace.dll in Microsoft.ML.  While this is possible it may add dependencies to Microsoft.ML - one in particular is `System.Text.Json` which may be odd next to `Newtonsoft.Json` which it already references.  Eventually we should try to move away from Newtonsoft to STJ, but that's not planned yet.\r\n2. Refactor the implementation of the attributes in SearchSpace to be pure attributes that merely expose their parameters (see [guidelines](https://learn.microsoft.com/en-us/dotnet/standard/design-guidelines/attributes) for inspiration) and typeforward those down into Microsoft.ML.Core without any of the options types they internally reference.","Url":"https://github.com/dotnet/machinelearning/issues/6949","RelatedDescription":"Closed issue \"Microsoft.ML.StandardTrainers references Microsoft.ML.SearchSpace but it's not included in Microsoft.ML package\" (#6949)"},{"Id":"2073393450","IsPullRequest":true,"CreatedAt":"2024-01-10T20:02:31","Actor":"LittleLittleCloud","Number":"6951","RawContent":null,"Title":"fix #6949","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\nFix #6949 ","Url":"https://github.com/dotnet/machinelearning/pull/6951","RelatedDescription":"Closed or merged PR \"fix #6949\" (#6951)"},{"Id":"2067053627","IsPullRequest":false,"CreatedAt":"2024-01-10T17:49:50","Actor":"kicaj29","Number":"6941","RawContent":null,"Title":"mlContext.Model.Load throws System.InvalidOperationException: Tensor invalid -- empty handle.","State":"closed","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 10\r\n - ML.NET Version:  ML.NET v3.0.0\r\n - .NET Version: .NET 8.0\r\n\r\n**Describe the bug**\r\nThe following code throws exception: `System.InvalidOperationException: Tensor invalid -- empty handle.` when `mlContext.Model.Load` is called second time.\r\n\r\n**To Reproduce**\r\nSave model by calling `ctx.Model.Save` and next try to load this model twice - one by one using `mlContext.Model.Load` where `mlContext` are separate instances.\r\n\r\n**Expected behavior**\r\nIt is possible to load second time the same model file when previous processing is finished.\r\n\r\n**Screenshots, Code, Sample Projects**\r\n```\r\n    public class ModelInput\r\n    {\r\n        [LoadColumn(0)]\r\n        [ColumnName(@\"Words\")]\r\n        public string Words { get; set; }\r\n\r\n        [LoadColumn(1)]\r\n        [ColumnName(@\"ClassId\")]\r\n        public float ClassId { get; set; }\r\n\r\n    }\r\n```\r\n```\r\n    public static class TestModelLoading\r\n    {\r\n        public static void Run()\r\n        {\r\n            ModelInput modelInput = new ModelInput()\r\n            {\r\n                Words = \"This is first example C\",\r\n                ClassId = -1,\r\n            };\r\n            MLContext mlContext = new MLContext();\r\n            DataViewSchema modelSchema;\r\n            Console.WriteLine(\"Before Load\");\r\n            ITransformer trainedModel = mlContext.Model.Load($\"DocumentClassificationTest.zip\", out modelSchema);\r\n            Console.WriteLine(\"After Load\");\r\n            IDataView testDataView = mlContext.Data.LoadFromEnumerable<ModelInput>(new ModelInput[] { modelInput }, modelSchema);\r\n            // Define text transform estimator\r\n            var textEstimator = mlContext.Transforms.Text.FeaturizeText(\"Words\");\r\n            // Fit data to estimator\r\n            // Fitting generates a transformer that applies the operations of defined by estimator\r\n            ITransformer textTransformer = textEstimator.Fit(testDataView);\r\n            IDataView testDataViewForPrediction = textTransformer.Transform(testDataView);\r\n            IDataView result = trainedModel.Transform(testDataViewForPrediction);\r\n        }\r\n    }\r\n```\r\n```\r\nusing Microsoft.ML.AutoML;\r\nusing Microsoft.ML;\r\nusing TextClassificationError;\r\nusing static Microsoft.ML.DataOperationsCatalog;\r\nusing Microsoft.ML.TorchSharp.NasBert;\r\nusing Microsoft.ML.TorchSharp;\r\nusing Microsoft.ML.Data;\r\n\r\nConsole.WriteLine(\"Starting...\");\r\n\r\nList<ModelInput> modelInput = new List<ModelInput>();\r\nmodelInput.Add(new ModelInput()\r\n{\r\n    ClassId = 1,\r\n    Words = \"This is first example A\"\r\n});\r\nmodelInput.Add(new ModelInput()\r\n{\r\n    ClassId = 1,\r\n    Words = \"This is first example B\"\r\n});\r\nmodelInput.Add(new ModelInput()\r\n{\r\n    ClassId = 2,\r\n    Words = \"This is second example A\"\r\n});\r\nmodelInput.Add(new ModelInput()\r\n{\r\n    ClassId = 2,\r\n    Words = \"This is second example B\"\r\n});\r\nmodelInput.Add(new ModelInput()\r\n{\r\n    ClassId = 3,\r\n    Words = \"This is third example A\"\r\n});\r\nmodelInput.Add(new ModelInput()\r\n{\r\n    ClassId = 3,\r\n    Words = \"This is third example B\"\r\n});\r\n\r\nMLContext ctx = new MLContext();\r\n\r\nIDataView data = ctx.Data.LoadFromEnumerable<ModelInput>(modelInput);\r\nTrainTestData trainValidationData = ctx.Data.TrainTestSplit(data, testFraction: 0.3);\r\n\r\nColumnInformation colInfo = new ColumnInformation();\r\ncolInfo.TextColumnNames.Add(\"Words\");\r\ncolInfo.NumericColumnNames.Add(\"DocId\");\r\ncolInfo.LabelColumnName = \"ClassId\";\r\n\r\n// Define text classification pipeline\r\n// Create a pipeline for training the model\r\nvar pipeline = ctx.Transforms.Conversion.MapValueToKey(outputColumnName: \"ClassId\", inputColumnName: \"ClassId\")\r\n                        .Append(ctx.MulticlassClassification.Trainers.TextClassification(\r\n                            labelColumnName: \"ClassId\",\r\n                            sentence1ColumnName: \"Words\",\r\n                            architecture: BertArchitecture.Roberta))\r\n                        .Append(ctx.Transforms.Conversion.MapKeyToValue(outputColumnName: \"PredictedLabel\", inputColumnName: \"PredictedLabel\"));\r\n\r\n// Train the model using the pipeline\r\nConsole.WriteLine(\"Training model...\");\r\nITransformer model = pipeline.Fit(trainValidationData.TrainSet);\r\n\r\n// Evaluate the model's performance against the TEST data set\r\nConsole.WriteLine(\"Evaluating model performance...\");\r\n// We need to apply the same transformations to our test set so it can be evaluated via the resulting model\r\nIDataView transformedTest = model.Transform(trainValidationData.TestSet);\r\nMulticlassClassificationMetrics metrics = ctx.MulticlassClassification.Evaluate(transformedTest, labelColumnName: \"ClassId\");\r\n\r\nConsole.WriteLine(metrics.ConfusionMatrix.GetFormattedConfusionTable());\r\n\r\nctx.Model.Save(model, trainValidationData.TrainSet.Schema, $\"DocumentClassificationTest.zip\");\r\n\r\nConsole.WriteLine(\"Run1 start\");\r\nTestModelLoading.Run();\r\nConsole.WriteLine(\"Run1 end\");\r\nConsole.WriteLine(\"Run2 start\");\r\nTestModelLoading.Run(); // Second run throws exception.\r\nConsole.WriteLine(\"Run2 end\");\r\n\r\nConsole.WriteLine(\"Finished.\");\r\n\r\n```\r\ncsproj (these are the same version which are used here https://github.com/dotnet/machinelearning/blob/main/eng/Versions.props#L65-L66)\r\n```\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\t<PropertyGroup>\r\n\t\t<OutputType>Exe</OutputType>\r\n\t\t<TargetFramework>net8.0</TargetFramework>\r\n\t\t<ImplicitUsings>enable</ImplicitUsings>\r\n\t\t<Nullable>enable</Nullable>\r\n\t</PropertyGroup>\r\n\t<ItemGroup>\r\n\t\t<PackageReference Include=\"Microsoft.Extensions.ML\" Version=\"3.0.0\" />\r\n\t\t<PackageReference Include=\"Microsoft.ML\" Version=\"3.0.0\" />\r\n\t\t<PackageReference Include=\"Microsoft.ML.AutoML\" Version=\"0.21.0\" />\r\n\t\t<PackageReference Include=\"Microsoft.ML.TorchSharp\" Version=\"0.21.0\" />\r\n\t\t<PackageReference Include=\"TorchSharp\" Version=\"0.99.5\" />\r\n\t\t<PackageReference Include=\"libtorch-cpu-win-x64\" Version=\"1.13.0.1\" />\r\n\t</ItemGroup>\r\n</Project>\r\n```\r\n\r\nSource code which can be used to reproduce this problem:\r\n[TextClassificationError.zip](https://github.com/dotnet/machinelearning/files/13840442/TextClassificationError.zip)\r\n\r\n![image](https://github.com/dotnet/machinelearning/assets/4730532/81ba6157-3324-4654-a334-070ad25357a8)\r\n\r\n\r\n**Additional context**\r\nn/a\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6941","RelatedDescription":"Closed issue \"mlContext.Model.Load throws System.InvalidOperationException: Tensor invalid -- empty handle.\" (#6941)"},{"Id":"2072907915","IsPullRequest":true,"CreatedAt":"2024-01-10T17:10:10","Actor":"michaelgsharp","Number":"6950","RawContent":null,"Title":"[release/3.0] Split out non concurrent test collections.","State":"closed","Body":"Backport of #6937 to release/3.0. Fixed version of closed pr #6947\r\n\r\n/cc @michaelgsharp\r\n\r\n## Customer Impact\r\nImproves the testing process for PR's to better facilitate us getting PR's out.\r\n\r\n## Testing\r\nAll tests pass with new changes and only test assemblies are changed.\r\n\r\n## Risk\r\nNone, only test assemblies are changed.","Url":"https://github.com/dotnet/machinelearning/pull/6950","RelatedDescription":"Closed or merged PR \"[release/3.0] Split out non concurrent test collections.\" (#6950)"},{"Id":"2074794556","IsPullRequest":true,"CreatedAt":"2024-01-10T17:01:32","Actor":"dotnet-maestro[bot]","Number":"6952","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:45c6fd49-3a4f-4675-f3da-08dc0c527e17)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 45c6fd49-3a4f-4675-f3da-08dc0c527e17\r\n- **Build**: 20240109.4\r\n- **Date Produced**: January 9, 2024 10:20:28 PM UTC\r\n- **Commit**: 61ae141d2bf3534619265c8f691fd55dc3e75147\r\n- **Branch**: refs/heads/release/8.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23620.2 to 8.0.0-beta.24059.4][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 8.0.0-beta.23620.2 to 8.0.0-beta.24059.4][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23620.2 to 8.0.0-beta.24059.4][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 8.0.0-beta.23620.2 to 8.0.0-beta.24059.4][1]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 8.0.0-beta.23620.2 to 8.0.0-beta.24059.4][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23620.2 to 8.0.0-beta.24059.4][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/8412932517...61ae141d2b\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates tools.dotnet to 8.0.101\r\n\r\n[marker]: <> (End:45c6fd49-3a4f-4675-f3da-08dc0c527e17)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6952","RelatedDescription":"Open PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#6952)"},{"Id":"2071444731","IsPullRequest":true,"CreatedAt":"2024-01-09T17:09:41","Actor":"github-actions[bot]","Number":"6947","RawContent":null,"Title":"[release/3.0] Split out non concurrent test collections.","State":"closed","Body":"Backport of #6937 to release/3.0\r\n\r\n/cc @michaelgsharp\r\n\r\n## Customer Impact\r\nImproves the testing process for PR's to better facilitate us getting PR's out.\r\n\r\n## Testing\r\nAll tests pass with new changes and only test assemblies are changed.\r\n\r\n## Risk\r\nNone, only test assemblies are changed.","Url":"https://github.com/dotnet/machinelearning/pull/6947","RelatedDescription":"Closed or merged PR \"[release/3.0] Split out non concurrent test collections.\" (#6947)"},{"Id":"2066393337","IsPullRequest":true,"CreatedAt":"2024-01-09T17:08:05","Actor":"dotnet-maestro[bot]","Number":"6938","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:45c6fd49-3a4f-4675-f3da-08dc0c527e17)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 45c6fd49-3a4f-4675-f3da-08dc0c527e17\r\n- **Build**: 20231220.2\r\n- **Date Produced**: December 20, 2023 12:15:53 PM UTC\r\n- **Commit**: 84129325171e65373edef24019e1171feeb19cbc\r\n- **Branch**: refs/heads/release/8.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.23265.1 to 8.0.0-beta.23620.2][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 8.0.0-beta.23265.1 to 8.0.0-beta.23620.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.23265.1 to 8.0.0-beta.23620.2][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 8.0.0-beta.23265.1 to 8.0.0-beta.23620.2][1]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 8.0.0-beta.23265.1 to 8.0.0-beta.23620.2][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.23265.1 to 8.0.0-beta.23620.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/2d8d59065b...8412932517\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n- **Updates to .NET SDKs:**\r\n  - Updates tools.dotnet to 8.0.100\r\n\r\n[marker]: <> (End:45c6fd49-3a4f-4675-f3da-08dc0c527e17)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6938","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#6938)"},{"Id":"2072268420","IsPullRequest":false,"CreatedAt":"2024-01-09T12:20:24","Actor":"boneatjp","Number":"6948","RawContent":null,"Title":"large models loading with mlcontext.model.load ends up OutOfMemoryException","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11 Pro 23H2 64GB RAM\r\n - ML.NET Version: Microsoft.ML Ver3.0.0, Microosft.ML.AutoML Ver0.21.0\r\n - .NET Version: .NET 8\r\n\r\n**Describe the bug**\r\nWhen loading models which size are over 100MB, mlcontext.model.load throws Exception.\r\n\r\nViewing stack tace,  'System.Reflection.TargetInvocationException' (Microsoft.ML.Core.dll)\r\n\r\nSystem.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.\r\n ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.\r\n ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation.\r\n ---> System.OutOfMemoryException: Exception of type 'System.OutOfMemoryException' was thrown.\r\n\r\n**Additional context**\r\nWhen loading models which size are less than 100MB, no problem.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6948","RelatedDescription":"Open issue \"large models loading with mlcontext.model.load ends up OutOfMemoryException\" (#6948)"},{"Id":"2061626053","IsPullRequest":false,"CreatedAt":"2024-01-09T08:05:57","Actor":"evolcano","Number":"6933","RawContent":null,"Title":"GPU cann't be used after deploy with Microsoft.ML.OnnxRuntime.Gpu","State":"closed","Body":"**System Information (please complete the following information):**\r\n - OS & Version: [Windows 11 23H2] \r\n - Microsoft.ML.OnnxRuntime.Gpu Version: [Version=\"1.16.3]\r\n - .NET Version: [NET 8]\r\n - Visual studio 2022\r\n\r\n**Describe the bug**\r\nI download a demo for object detection. My laptop has two GPU: 0 intel & 1 Nvidia, so I have set \"\"Environment.SetEnvironmentVariable(\"CUDA_VISIBLE_DEVICES\", \"1\"); (Source code: \r\n[yolov5-net-master.zip](https://github.com/dotnet/machinelearning/files/13805078/yolov5-net-master.zip)\r\n )\r\nWhen in debug mode, GPU is used, it's seems good.\r\nBut after deploy without any change just change to release model, GPU is not used.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Open sloution;\r\n2. Debug, Gpu is used\r\n3. Delopy to local file system in release win-x64, net8.0-windows\r\n4. Click exe to execute, GPU cann't be used\r\n\r\n**Expected behavior**\r\nGPU should be used after deploy and consist with debug.\r\n\r\n**Screenshots, Code, Sample Projects**\r\n1、When debug, GPU is used\r\n![image](https://github.com/dotnet/machinelearning/assets/18514981/ca6b7c29-ad9f-4910-b95b-3260d0596194)\r\n\r\n2、Deploy setting\r\n![image](https://github.com/dotnet/machinelearning/assets/18514981/3fb2c19d-79e0-4128-a5d6-1ef89079dcd7)\r\n\r\n3、When deployed, GPU cann't use\r\n![image](https://github.com/dotnet/machinelearning/assets/18514981/2ff35899-9f49-44d5-bf90-4ac1ae76fb81)\r\n\r\n**Additional context**\r\n NVIDIA-SMI 546.33                 Driver Version: 546.33\r\ncuda_11.6.2_511.65_windows\r\ncudnn-windows-x86_64-8.9.6.50_cuda11\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6933","RelatedDescription":"Closed issue \"GPU cann't be used after deploy with Microsoft.ML.OnnxRuntime.Gpu\" (#6933)"},{"Id":"2071340434","IsPullRequest":true,"CreatedAt":"2024-01-09T00:45:32","Actor":"github-actions[bot]","Number":"6946","RawContent":null,"Title":"[release/3.0] Fixes NER to correctly expand/shrink the labels","State":"closed","Body":"Backport of #6928 to release/3.0\r\n\r\n/cc @michaelgsharp\r\n\r\n## Customer Impact\r\nInitially, when a work was split into multiple tokens, the user had to figure that out and expand the labels as well. This PR fixes that by auto expanding/contracting the labels as needed.\r\n\r\n## Testing\r\nThere are automated tests that have examples that were problematic during testing, as well as a complete run was done on a GPU machine (75k lines in the test file).\r\n\r\n## Risk\r\nWith the automated tests and full GPU machine test run, minimal to no risk.","Url":"https://github.com/dotnet/machinelearning/pull/6946","RelatedDescription":"Closed or merged PR \"[release/3.0] Fixes NER to correctly expand/shrink the labels\" (#6946)"},{"Id":"2071238078","IsPullRequest":true,"CreatedAt":"2024-01-08T22:40:37","Actor":"github-actions[bot]","Number":"6945","RawContent":null,"Title":"[release/3.0] Rename NameEntity to NamedEntity","State":"closed","Body":"Backport of #6917 to release/3.0\r\n\r\n/cc @ericstj\r\n\r\n## Customer Impact\r\n\r\nExisting API _NameEntityRecognition_ did not match customer expectations.  Adjusting to _Name**d**EntityRecognition_\r\n\r\n## Testing\r\n\r\nUnit tests, API Compat.\r\n\r\n## Risk\r\n\r\nLow, change is additive\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6945","RelatedDescription":"Closed or merged PR \"[release/3.0] Rename NameEntity to NamedEntity\" (#6945)"},{"Id":"2071232372","IsPullRequest":true,"CreatedAt":"2024-01-08T21:15:52","Actor":"ericstj","Number":"6944","RawContent":null,"Title":"Add Backport github workflow","State":"closed","Body":"Add github backport workflow to be triggered by `/backport to` in PRs.","Url":"https://github.com/dotnet/machinelearning/pull/6944","RelatedDescription":"Closed or merged PR \"Add Backport github workflow\" (#6944)"},{"Id":"2070747552","IsPullRequest":true,"CreatedAt":"2024-01-08T18:30:41","Actor":"ericstj","Number":"6943","RawContent":null,"Title":"Branding for 3.0.1","State":"closed","Body":"Making version changes for 3.0.1\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6943","RelatedDescription":"Closed or merged PR \"Branding for 3.0.1\" (#6943)"},{"Id":"2064519085","IsPullRequest":true,"CreatedAt":"2024-01-08T17:00:50","Actor":"michaelgsharp","Number":"6937","RawContent":null,"Title":"Split out non concurrent test collections.","State":"closed","Body":"Split out non-concurrent test collections to improve performance.","Url":"https://github.com/dotnet/machinelearning/pull/6937","RelatedDescription":"Closed or merged PR \"Split out non concurrent test collections.\" (#6937)"},{"Id":"2068629856","IsPullRequest":false,"CreatedAt":"2024-01-06T13:29:19","Actor":"NofAssiri","Number":"6942","RawContent":null,"Title":"support for aot (ahead of time) to deal with ml.net models","State":"open","Body":"is there api  to load ml.net model and predict with no dynamic code generation (reflection)? \r\n\r\n**Describe the solution you'd like**\r\nml.net api that is compatible with aot principles.\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6942","RelatedDescription":"Open issue \"support for aot (ahead of time) to deal with ml.net models\" (#6942)"},{"Id":"2054999934","IsPullRequest":true,"CreatedAt":"2024-01-06T00:52:18","Actor":"michaelgsharp","Number":"6928","RawContent":null,"Title":"Fixes NER to correctly expand/shrink the labels","State":"closed","Body":"NER now will correctly expand/shrink the labels when a word is split into multiple tokens.","Url":"https://github.com/dotnet/machinelearning/pull/6928","RelatedDescription":"Closed or merged PR \"Fixes NER to correctly expand/shrink the labels\" (#6928)"},{"Id":"2066780517","IsPullRequest":false,"CreatedAt":"2024-01-05T06:04:57","Actor":"shipitfaster","Number":"6940","RawContent":null,"Title":"\"tokenizes\" should be \"tokenized\" I think","State":"open","Body":"\r\n[Enter feedback here]\r\nGrammar is wrong, assuming `tokenizes `should be `tokenized`.\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for learn.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: 14b02d21-066a-41e7-7b5e-31617c12ea27\r\n* Version Independent ID: 1686b2f0-882e-bc2a-cc6b-fa002a35bc53\r\n* Content: [WordBagEstimator Class (Microsoft.ML.Transforms.Text)](https://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.transforms.text.wordbagestimator?view=ml-dotnet)\r\n* Content Source: [dotnet/xml/Microsoft.ML.Transforms.Text/WordBagEstimator.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.Transforms.Text/WordBagEstimator.xml)\r\n* Product: **dotnet-ml-api**\r\n* GitHub Login: @natke\r\n* Microsoft Alias: **nakersha**","Url":"https://github.com/dotnet/machinelearning/issues/6940","RelatedDescription":"Open issue \"\"tokenizes\" should be \"tokenized\" I think\" (#6940)"},{"Id":"2066521025","IsPullRequest":true,"CreatedAt":"2024-01-05T00:03:00","Actor":"ericstj","Number":"6939","RawContent":null,"Title":"Packaging cleanup","State":"open","Body":"Originally I was just trying to remove mentions of snupkg, but then things got a bit carried away. :)\r\n\r\nThis is trying to remove as much duplication and dead code related to packaging that I can.\r\n\r\nI'll be validating these changes with diffs and refining a bit more but wanted to get this up and see if CI is happy.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6939","RelatedDescription":"Open PR \"Packaging cleanup\" (#6939)"},{"Id":"2063212454","IsPullRequest":false,"CreatedAt":"2024-01-03T03:54:38","Actor":"tearlant","Number":"6936","RawContent":null,"Title":"PredictionPool will not let me have an MLImage member of an input or output type","State":"open","Body":"**System Information (please complete the following information):**\r\n - Windows 10\r\n - ML.NET 3.0.0\r\n - .NET 7.0\r\n\r\n**Describe the bug**\r\nThere are a number of examples that use a PredictionEngine with an input type or output type that has a member of MLImage type, for example https://github.com/dotnet/machinelearning/issues/6886\r\n\r\nHowever, my code is breaking when I call\r\n\r\n```\r\nvar prePredictionEngine = mlContext.Model.CreatePredictionEngine<InputType, OutputType>(model);\r\n\r\n```\r\n\r\n```\r\n    public class InputType\r\n    {\r\n        public string Label;\r\n\r\n        [ColumnName(\"Image\")]\r\n        [ImageType(224, 224)]\r\n        public MLImage Image { get; set; }\r\n    }\r\n\r\n```\r\n\r\nThis is the error that comes up\r\n![image](https://github.com/dotnet/machinelearning/assets/105062729/37455f84-8def-47b5-88f5-2bff0edc342d)\r\n\r\n\r\nHere's the console output\r\n\r\n```\r\nEXCEPTION\r\n#########\r\nSystem.NotImplementedException: Type 'Microsoft.ML.Data.MLImage' is not yet supported.\r\n   at Microsoft.ML.Data.TypedCursorable`1.TypedRowBase.GenerateSetter(DataViewRow input, Int32 index, Column column, Delegate poke, Delegate peek)\r\n   at Microsoft.ML.Data.TypedCursorable`1.TypedRowBase..ctor(TypedCursorable`1 parent, DataViewRow input, String channelMessage)\r\n   at Microsoft.ML.Data.TypedCursorable`1.TypedRow..ctor(TypedCursorable`1 parent, DataViewRow input)\r\n   at Microsoft.ML.Data.TypedCursorable`1.GetRow(DataViewRow input)\r\n   at Microsoft.ML.PredictionEngineBase`2.PredictionEngineCore(IHostEnvironment env, InputRow`1 inputRow, IRowToRowMapper mapper, Boolean ignoreMissingColumns, SchemaDefinition outputSchemaDefinition, Action& disposer, IRowReadableAs`1& outputRow)\r\n   at Microsoft.ML.PredictionEngineBase`2..ctor(IHostEnvironment env, ITransformer transformer, Boolean ignoreMissingColumns, SchemaDefinition inputSchemaDefinition, SchemaDefinition outputSchemaDefinition, Boolean ownsTransformer)\r\n   at Microsoft.ML.PredictionEngine`2..ctor(IHostEnvironment env, ITransformer transformer, Boolean ignoreMissingColumns, SchemaDefinition inputSchemaDefinition, SchemaDefinition outputSchemaDefinition, Boolean ownsTransformer)\r\n   at Microsoft.ML.PredictionEngineExtensions.CreatePredictionEngine[TSrc,TDst](ITransformer transformer, IHostEnvironment env, Boolean ignoreMissingColumns, SchemaDefinition inputSchemaDefinition, SchemaDefinition outputSchemaDefinition, Boolean ownsTransformer)\r\n   at Microsoft.ML.ModelOperationsCatalog.CreatePredictionEngine[TSrc,TDst](ITransformer transformer, Boolean ignoreMissingColumns, SchemaDefinition inputSchemaDefinition, SchemaDefinition outputSchemaDefinition)\r\n   at ImageClassification.ModelScorer.TFModelScorer.PredictDataUsingModelFromStructuredDirectory(IDataView testDataView) in C:\\MLsamples\\machinelearning-samples\\samples\\csharp\\getting-started\\DeepLearning_ImageClassification_TensorFlow\\ImageClassification\\ModelScorer\\TFModelScorer.cs:line 181\r\n   at ImageClassification.ModelScorer.TFModelScorer.ScoreUsingStructuredDirectory() in C:\\MLsamples\\machinelearning-samples\\samples\\csharp\\getting-started\\DeepLearning_ImageClassification_TensorFlow\\ImageClassification\\ModelScorer\\TFModelScorer.cs:line 67\r\n   at ImageClassification.Program.Main(String[] args) in C:\\MLsamples\\machinelearning-samples\\samples\\csharp\\getting-started\\DeepLearning_ImageClassification_TensorFlow\\ImageClassification\\Program.cs:line 32\r\n```\r\n\r\nI can make things work straight up by wrapping the data in a `IDataView` and calling `.Transform()`, but that defeats the point of having a `PredictionEngine`","Url":"https://github.com/dotnet/machinelearning/issues/6936","RelatedDescription":"Open issue \"PredictionPool will not let me have an MLImage member of an input or output type\" (#6936)"},{"Id":"2063112706","IsPullRequest":true,"CreatedAt":"2024-01-03T02:02:13","Actor":"ericstj","Number":"6935","RawContent":null,"Title":"Only use semi-colons for NoWarn - fixes build break","State":"closed","Body":"Turns out that using a mix of semi-colons and commas doesn't work correctly.  The NoWarn value I added for NETSDK1206 was being ignored due to the way this property was split.\r\n\r\nFix this by standardizing on `;`\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6935","RelatedDescription":"Closed or merged PR \"Only use semi-colons for NoWarn - fixes build break\" (#6935)"},{"Id":"2062874307","IsPullRequest":false,"CreatedAt":"2024-01-02T19:53:13","Actor":"ericstj","Number":"6934","RawContent":null,"Title":"Symbols misssing from symbol servers for ML.NET 3.0","State":"open","Body":"**Describe the bug**\r\nUsing the latest Microsoft.ML packages, I can't resolve symbols.\r\n\r\n**To Reproduce**\r\n1. Build a project using ML.NET 3.0.  (or use attached [ml-example.zip](https://github.com/dotnet/machinelearning/files/13813395/ml-example.zip))\r\n2. Run symchk to check for symbols.\r\n\r\nOutput with public server:\r\n```\r\n\\debuggers\\SymChk.exe /s https://msdl.microsoft.com/download/symbols *.dll\r\nSYMCHK: CpuMathNative.dll    FAILED  - CpuMathNative.pdb mismatched or not found\r\nSYMCHK: FastTreeNative.dll   FAILED  - FastTreeNative.pdb mismatched or not found\r\nSYMCHK: LdaNative.dll        FAILED  - LdaNative.pdb mismatched or not found\r\nSYMCHK: Microsoft.ML.Core.dll FAILED  - /_/artifacts/obj/Microsoft.ML.Core/Release/netstandard2.0/Microsoft.ML.Core.pdb mismatched or not found\r\nSYMCHK: Microsoft.ML.CpuMath.dll FAILED  - /_/artifacts/obj/Microsoft.ML.CpuMath/Release/netstandard2.0/Microsoft.ML.CpuMath.pdb mismatched or not found\r\nSYMCHK: Microsoft.ML.Data.dll FAILED  - /_/artifacts/obj/Microsoft.ML.Data/Release/netstandard2.0/Microsoft.ML.Data.pdb mismatched or not found\r\nSYMCHK: Microsoft.ML.DataView.dll FAILED  - /_/artifacts/obj/Microsoft.ML.DataView/Release/netstandard2.0/Microsoft.ML.DataView.pdb mismatched or not found\r\nSYMCHK: Microsoft.ML.dll     FAILED  - /_/artifacts/obj/Microsoft.ML/Release/netstandard2.0/Microsoft.ML.pdb mismatched or not found\r\nSYMCHK: Microsoft.ML.FastTree.dll FAILED  - /_/artifacts/obj/Microsoft.ML.FastTree/Release/netstandard2.0/Microsoft.ML.FastTree.pdb mismatched or not found\r\nSYMCHK: Microsoft.ML.KMeansClustering.dll FAILED  - /_/artifacts/obj/Microsoft.ML.KMeansClustering/Release/netstandard2.0/Microsoft.ML.KMeansClustering.pdb mismatched or not found\r\nSYMCHK: Microsoft.ML.PCA.dll FAILED  - /_/artifacts/obj/Microsoft.ML.PCA/Release/netstandard2.0/Microsoft.ML.PCA.pdb mismatched or not found\r\nSYMCHK: Microsoft.ML.StandardTrainers.dll FAILED  - /_/artifacts/obj/Microsoft.ML.StandardTrainers/Release/netstandard2.0/Microsoft.ML.StandardTrainers.pdb mismatched or not found\r\nSYMCHK: Microsoft.ML.Transforms.dll FAILED  - /_/artifacts/obj/Microsoft.ML.Transforms/Release/netstandard2.0/Microsoft.ML.Transforms.pdb mismatched or not found\r\nSYMCHK: Newtonsoft.Json.dll  FAILED  - /_/Src/Newtonsoft.Json/obj/Release/net45/Newtonsoft.Json.pdb mismatched or not found\r\nSYMCHK: System.Memory.dll    FAILED  - System.Memory.pdb mismatched or not found\r\n\r\nSYMCHK: FAILED files = 15\r\nSYMCHK: PASSED + IGNORED files = 9\r\n```\r\n\r\nOutput with internal server:\r\n```\r\nC:\\scratch\\ml-example\\bin\\Debug\\net4.8>\\debuggers\\SymChk.exe /s http://symweb *.dll\r\nSYMCHK: CpuMathNative.dll    FAILED  - CpuMathNative.pdb mismatched or not found\r\nSYMCHK: FastTreeNative.dll   FAILED  - FastTreeNative.pdb mismatched or not found\r\nSYMCHK: LdaNative.dll        FAILED  - LdaNative.pdb mismatched or not found\r\nSYMCHK: Microsoft.ML.Core.dll FAILED  - /_/artifacts/obj/Microsoft.ML.Core/Release/netstandard2.0/Microsoft.ML.Core.pdb mismatched or not found\r\nSYMCHK: Microsoft.ML.CpuMath.dll FAILED  - /_/artifacts/obj/Microsoft.ML.CpuMath/Release/netstandard2.0/Microsoft.ML.CpuMath.pdb mismatched or not found\r\nSYMCHK: Microsoft.ML.Data.dll FAILED  - /_/artifacts/obj/Microsoft.ML.Data/Release/netstandard2.0/Microsoft.ML.Data.pdb mismatched or not found\r\nSYMCHK: Microsoft.ML.DataView.dll FAILED  - /_/artifacts/obj/Microsoft.ML.DataView/Release/netstandard2.0/Microsoft.ML.DataView.pdb mismatched or not found\r\nSYMCHK: Microsoft.ML.dll     FAILED  - /_/artifacts/obj/Microsoft.ML/Release/netstandard2.0/Microsoft.ML.pdb mismatched or not found\r\nSYMCHK: Microsoft.ML.FastTree.dll FAILED  - /_/artifacts/obj/Microsoft.ML.FastTree/Release/netstandard2.0/Microsoft.ML.FastTree.pdb mismatched or not found\r\nSYMCHK: Microsoft.ML.KMeansClustering.dll FAILED  - /_/artifacts/obj/Microsoft.ML.KMeansClustering/Release/netstandard2.0/Microsoft.ML.KMeansClustering.pdb mismatched or not found\r\nSYMCHK: Microsoft.ML.PCA.dll FAILED  - /_/artifacts/obj/Microsoft.ML.PCA/Release/netstandard2.0/Microsoft.ML.PCA.pdb mismatched or not found\r\nSYMCHK: Microsoft.ML.StandardTrainers.dll FAILED  - /_/artifacts/obj/Microsoft.ML.StandardTrainers/Release/netstandard2.0/Microsoft.ML.StandardTrainers.pdb mismatched or not found\r\nSYMCHK: Microsoft.ML.Transforms.dll FAILED  - /_/artifacts/obj/Microsoft.ML.Transforms/Release/netstandard2.0/Microsoft.ML.Transforms.pdb mismatched or not found\r\nSYMCHK: System.Memory.dll    FAILED  - System.Memory.pdb mismatched or not found\r\n\r\nSYMCHK: FAILED files = 14\r\nSYMCHK: PASSED + IGNORED files = 10\r\n```\r\n\r\nSample verbose output for a single assembly:\r\n```\r\n\\debuggers\\SymChk.exe /s https://msdl.microsoft.com/download/symbols Microsoft.ML.Core.dll\r\nSYMCHK: Microsoft.ML.Core.dll FAILED  - /_/artifacts/obj/Microsoft.ML.Core/Release/netstandard2.0/Microsoft.ML.Core.pdb mismatched or not found\r\n\r\nSYMCHK: FAILED files = 1\r\nSYMCHK: PASSED + IGNORED files = 0\r\n\r\nC:\\scratch\\ml-example\\bin\\Debug\\net4.8>\\debuggers\\SymChk.exe /s https://msdl.microsoft.com/download/symbols Microsoft.ML.Core.dll /v\r\n[SYMCHK] Searching for symbols to C:\\scratch\\ml-example\\bin\\Debug\\net4.8\\Microsoft.ML.Core.dll in path https://msdl.microsoft.com/download/symbols\r\nDBGHELP: Symbol Search Path: https://msdl.microsoft.com/download/symbols\r\n[SYMCHK] Using search path \"https://msdl.microsoft.com/download/symbols\"\r\nDBGHELP: No header for C:\\scratch\\ml-example\\bin\\Debug\\net4.8\\Microsoft.ML.Core.dll.  Searching for image on disk\r\nDBGHELP: C:\\scratch\\ml-example\\bin\\Debug\\net4.8\\Microsoft.ML.Core.dll - OK\r\nSYMSRV:  BYINDEX: 0x1\r\n         https://msdl.microsoft.com/download/symbols\r\n         Microsoft.ML.Core.pdb\r\n         CC84F9CEA3EC4F749E7CFCAEEA342D8A1\r\nSYMSRV:  UNC: C:\\debuggers\\sym\\Microsoft.ML.Core.pdb\\CC84F9CEA3EC4F749E7CFCAEEA342D8A1\\Microsoft.ML.Core.pdb - path not found\r\nSYMSRV:  UNC: C:\\debuggers\\sym\\Microsoft.ML.Core.pdb\\CC84F9CEA3EC4F749E7CFCAEEA342D8A1\\Microsoft.ML.Core.pd_ - path not found\r\nSYMSRV:  UNC: C:\\debuggers\\sym\\Microsoft.ML.Core.pdb\\CC84F9CEA3EC4F749E7CFCAEEA342D8A1\\file.ptr - path not found\r\nSYMSRV:  HTTPGET: /download/symbols/index2.txt\r\nSYMSRV:  HttpQueryInfo: 80190194 - HTTP_STATUS_NOT_FOUND\r\nSYMSRV:  HTTPGET: /download/symbols/Microsoft.ML.Core.pdb/CC84F9CEA3EC4F749E7CFCAEEA342D8A1/Microsoft.ML.Core.pdb\r\nSYMSRV:  HttpQueryInfo: 80190194 - HTTP_STATUS_NOT_FOUND\r\nSYMSRV:  HTTPGET: /download/symbols/Microsoft.ML.Core.pdb/CC84F9CEA3EC4F749E7CFCAEEA342D8A1/Microsoft.ML.Core.pd_\r\nSYMSRV:  HttpQueryInfo: 80190194 - HTTP_STATUS_NOT_FOUND\r\nSYMSRV:  HTTPGET: /download/symbols/Microsoft.ML.Core.pdb/CC84F9CEA3EC4F749E7CFCAEEA342D8A1/file.ptr\r\nSYMSRV:  HttpQueryInfo: 80190194 - HTTP_STATUS_NOT_FOUND\r\nSYMSRV:  RESULT: 0x80190194\r\nSYMSRV:  BYINDEX: 0x2\r\n         https://msdl.microsoft.com/download/symbols\r\n         Microsoft.ML.Core.pdb\r\n         CC84F9CEA3EC4F749E7CFCAEEA342D8Affffffff\r\nSYMSRV:  UNC: C:\\debuggers\\sym\\Microsoft.ML.Core.pdb\\CC84F9CEA3EC4F749E7CFCAEEA342D8Affffffff\\Microsoft.ML.Core.pdb - path not found\r\nSYMSRV:  UNC: C:\\debuggers\\sym\\Microsoft.ML.Core.pdb\\CC84F9CEA3EC4F749E7CFCAEEA342D8Affffffff\\Microsoft.ML.Core.pd_ - path not found\r\nSYMSRV:  UNC: C:\\debuggers\\sym\\Microsoft.ML.Core.pdb\\CC84F9CEA3EC4F749E7CFCAEEA342D8Affffffff\\file.ptr - path not found\r\nSYMSRV:  HTTPGET: /download/symbols/Microsoft.ML.Core.pdb/CC84F9CEA3EC4F749E7CFCAEEA342D8Affffffff/Microsoft.ML.Core.pdb\r\nSYMSRV:  HttpQueryInfo: 80190194 - HTTP_STATUS_NOT_FOUND\r\nSYMSRV:  HTTPGET: /download/symbols/Microsoft.ML.Core.pdb/CC84F9CEA3EC4F749E7CFCAEEA342D8Affffffff/Microsoft.ML.Core.pd_\r\nSYMSRV:  HttpQueryInfo: 80190194 - HTTP_STATUS_NOT_FOUND\r\nSYMSRV:  HTTPGET: /download/symbols/Microsoft.ML.Core.pdb/CC84F9CEA3EC4F749E7CFCAEEA342D8Affffffff/file.ptr\r\nSYMSRV:  HttpQueryInfo: 80190194 - HTTP_STATUS_NOT_FOUND\r\nSYMSRV:  RESULT: 0x80190194\r\nDBGHELP: Microsoft.ML.Core - no symbols loaded\r\n[SYMCHK] MODULE64 Info ----------------------\r\n[SYMCHK] Struct size: 1680 bytes\r\n[SYMCHK] Base: 0x10000000\r\n[SYMCHK] Image size: 434176 bytes\r\n[SYMCHK] Date: 0xed43a25e\r\n[SYMCHK] Checksum: 0x00070a89\r\n[SYMCHK] NumSyms: 0\r\n[SYMCHK] SymType: SymNone\r\n[SYMCHK] ModName: Microsoft.ML.Core\r\n[SYMCHK] ImageName: C:\\scratch\\ml-example\\bin\\Debug\\net4.8\\Microsoft.ML.Core.dll\r\n[SYMCHK] LoadedImage: C:\\scratch\\ml-example\\bin\\Debug\\net4.8\\Microsoft.ML.Core.dll\r\n[SYMCHK] PDB: \"\"\r\n[SYMCHK] CV: RSDS\r\n[SYMCHK] CV DWORD: 0x53445352\r\n[SYMCHK] CV Data:  /_/artifacts/obj/Microsoft.ML.Core/Release/netstandard2.0/Microsoft.ML.Core.pdb\r\n[SYMCHK] PDB Sig:  0\r\n[SYMCHK] PDB7 Sig: {CC84F9CE-A3EC-4F74-9E7C-FCAEEA342D8A}\r\n[SYMCHK] Age: 1\r\n[SYMCHK] PDB Matched:  TRUE\r\n[SYMCHK] DBG Matched:  TRUE\r\n[SYMCHK] Line numbers: FALSE\r\n[SYMCHK] Global syms:  FALSE\r\n[SYMCHK] Type Info:    FALSE\r\n[SYMCHK] ------------------------------------\r\nSymbolCheckVersion  0x00000002\r\nResult              0x00010001\r\nDbgFilename         Microsoft.ML.Core.dbg\r\nDbgTimeDateStamp    0x00000000\r\nDbgSizeOfImage      0x00000000\r\nDbgChecksum         0x00000000\r\nPdbFilename         /_/artifacts/obj/Microsoft.ML.Core/Release/netstandard2.0/Microsoft.ML.Core.pdb\r\nPdbSignature        {CC84F9CE-A3EC-4F74-9E7C-FCAEEA342D8A}\r\nPdbDbiAge           0x00000001\r\n[SYMCHK] [ 0x00000000 - 0x00010001 ] Checked \"C:\\scratch\\ml-example\\bin\\Debug\\net4.8\\Microsoft.ML.Core.dll\"\r\nSYMCHK: Microsoft.ML.Core.dll FAILED  - /_/artifacts/obj/Microsoft.ML.Core/Release/netstandard2.0/Microsoft.ML.Core.pdb mismatched or not found\r\n\r\nSYMCHK: FAILED files = 1\r\nSYMCHK: PASSED + IGNORED files = 0\r\n```\r\n\r\n**Expected behavior**\r\nAll ML assembly's symbols are published to both internal and public symbol servers.\r\n\r\nI suspect at some point our symbol publishing broke.  I spot checked 2.0.1 and it was working, but only for managed assemblies.  Modifying the above sample to use 2.0.1 instead of 3.0.0 I get:\r\n```\r\nC:\\scratch\\ml-example\\bin\\Debug\\net4.8>\\debuggers\\SymChk.exe /s https://msdl.microsoft.com/download/symbols *.dll\r\nSYMCHK: CpuMathNative.dll    FAILED  - CpuMathNative.pdb mismatched or not found\r\nSYMCHK: FastTreeNative.dll   FAILED  - FastTreeNative.pdb mismatched or not found\r\nSYMCHK: LdaNative.dll        FAILED  - LdaNative.pdb mismatched or not found\r\n\r\nSYMCHK: FAILED files = 3\r\nSYMCHK: PASSED + IGNORED files = 19\r\n```\r\n\r\nGoing back we had this same problem with native binaries in previous releases as well.  We should make sure we fix that as part of this.","Url":"https://github.com/dotnet/machinelearning/issues/6934","RelatedDescription":"Open issue \"Symbols misssing from symbol servers for ML.NET 3.0\" (#6934)"},{"Id":"2060823856","IsPullRequest":false,"CreatedAt":"2023-12-30T18:38:39","Actor":"NofAssiri","Number":"6932","RawContent":null,"Title":"converted onnx model takes much more load time and memory size.","State":"open","Body":"### System information\r\n- processor:\r\n    12th Gen Intel Core i7-12800HX\r\n- chip Type:\r\n    AMD Software: Pro Edition 0x73E1 VRAM 8GB\r\n- Ram:\r\n    32GB\r\n\r\n- **OS version/distro**:\r\n- windows  : 11 pro 64-bit build 22621\r\n\r\n- **.NET Version (eg., dotnet --info)**: \r\n  .NET8 \r\n\r\n### Issue\r\ni have ml.net model of size 47MB (zipped) it loads in 1 second and takes about 100, 150MB of memory, but when i convert it to onnx format using ConvertToOnnx function and empty list of input data type, \r\nnow the model size 112MB, loads in 6 seconds and takes about 2GB of memory \r\n\r\n- **What did you do?**\r\n- convert it to onnx format using ConvertToOnnx function and empty list of input data type\r\n- **What happened?**\r\n- the model size 112MB, loads in 6 seconds and takes about 2GB of memory\r\n- **What did you expect?**\r\n- expected the onnx model to take less memory and load time than the ml.net model\r\n\r\n\r\n### Source code / logs\r\nconversion code \r\nvar dummy = new List<InputData>();\r\nvar dummyData = _ctx.Data.LoadFromEnumerable(dummy);\r\nusing (var onnx = File.Open(\"C:\\\\models\\\\onnModel.onnx\", FileMode.OpenOrCreate, FileAccess.ReadWrite))\r\n{\r\n    _ctx.Model.ConvertToOnnx(transformer, dummyData, onnx);\r\n}\r\n\r\nload code\r\nvar ctx =new MLContext();\r\nvar model = ctx.transform.ApplyOnnxModel(\"C:\\\\models\\\\onnxModel.onnx\");\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6932","RelatedDescription":"Open issue \"converted onnx model takes much more load time and memory size.\" (#6932)"},{"Id":"2059676461","IsPullRequest":false,"CreatedAt":"2023-12-29T12:38:39","Actor":"SyntaxEvg","Number":"6931","RawContent":null,"Title":"ML .Net integration with ef core","State":"open","Body":"ML .Net integration with ef core for data generation based on msSql, and building models, так как ваш подход с ado net выдает иногда ошибки, котоые котоые котоые не пропустить не исправить, How do you convert what is the system or how do you know about dnSpy?\r\nMy friend, how to realize the data of the ef core and train the model, based on this Each connection is more than 10 ml per line","Url":"https://github.com/dotnet/machinelearning/issues/6931","RelatedDescription":"Open issue \"ML .Net integration with ef core\" (#6931)"},{"Id":"2055973462","IsPullRequest":false,"CreatedAt":"2023-12-26T03:03:06","Actor":"thomasd3","Number":"6930","RawContent":null,"Title":"Can I get an example for AutoML with in memory data in F#","State":"closed","Body":"I'm trying to do this:\r\n\r\n> mlnet classification --dataset output.csv --label-col 0 --has-header true --name test --train-time 300\r\n\r\nfrom F#\r\n\r\nAnd I find contradicting samples, depending on the ML.net version, but nothing comprehensive.\r\n\r\nI have a custom type with one column being the label and the rest being features. Every field is a float32 but the label which is a bool.\r\n\r\nI have the following code:\r\n\r\n```\r\n    // Initialize MLContext\r\n    let ctx = MLContext()\r\n\r\n    // Load data into IDataView\r\n    let data = ctx.Data.LoadFromEnumerable<ModelInput> (b)\r\n\r\n    // Split data into training and validation sets\r\n    let trainValidationData = ctx.Data.TrainTestSplit(data,0.2)\r\n\r\n    let header =\r\n        \"outcome,side,open0,high0,low0,close0,volume0,open1,high1,low1,close1,volume1,open2,high2,low2,close2,volume2,open3,high3,low3,close3,volume3,open4,high4,low4,close4,volume4,open5,high5,low5,close5,volume5,open6,high6,low6,close6,volume6,open7,high7,low7,close7,volume7,open8,high8,low8,close8,volume8,open9,high9,low9,close9,volume9,open10,high10,low10,close10,volume10,open11,high11,low11,close11,volume11,open12,high12,low12,close12,volume12,open13,high13,low13,close13,volume13,open14,high14,low14,close14,volume14,open15,high15,low15,close15,volume15,open16,high16,low16,close16,volume16,open17,high17,low17,close17,volume17,open18,high18,low18,close18,volume18,open19,high19,low19,close19,volume19,fairPrice,lgH0,lgL0,lgH1,lgL1,obH0,obL0,obH1,obL1,hh0,lh0,hl0,ll0,hh1,lh1,hl1,ll1,bosi0,bose0,coc0,mss0,bosi1,bose1,coc1,mss1\"\r\n            .Split ','\r\n\r\n    let preprocessingPipeline =\r\n        EstimatorChain()\r\n            .Append(ctx.Transforms.Concatenate(\"Features\", header))\r\n\r\n    let autoMLEstimator: SweepablePipeline =\r\n        ctx.Auto().Regression(\"outcome\")\r\n\r\n    let toIEstimator (est: 'a) =\r\n        est :> obj :?> IEstimator<ITransformer>\r\n\r\n    let pipeline =\r\n         (preprocessingPipeline |> toIEstimator)\r\n             .Append(autoMLEstimator)\r\n\r\n    let experiment = ctx.Auto().CreateExperiment()\r\n\r\n    experiment\r\n        .SetPipeline(pipeline)\r\n        .SetRegressionMetric(RegressionMetric.RSquared) //, columnInference.ColumnInformation.LabelColumnName)\r\n        .SetTrainingTimeInSeconds(60u)\r\n        .SetDataset(trainValidationData)\r\n        |> ignore\r\n\r\n    ctx.Log.Add (fun e -> if (e.Source.Equals(\"AutoMLExperiment\")) then info e.RawMessage)\r\n\r\n    let experimentResults = experiment.RunAsync() |> Async.AwaitTask |> Async.RunSynchronously\r\n\r\n```\r\n\r\nBut it tells me it can't find the 'outcome' column.\r\n\r\nThe lack of F# examples is really an issue for me. I spent an entire day trying to load data from memory.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6930","RelatedDescription":"Closed issue \"Can I get an example for AutoML with in memory data in F#\" (#6930)"},{"Id":"2055112609","IsPullRequest":false,"CreatedAt":"2023-12-24T14:07:13","Actor":"joegoldman2","Number":"6929","RawContent":null,"Title":"TrainTestSplit does not seem to split the dataset according to the given fraction","State":"open","Body":"## Describe the bug\r\nI'm following this tutorial: https://learn.microsoft.com/dotnet/machine-learning/tutorials/image-classification-api-transfer-learning. The assert directory I used contains 24 images.\r\n\r\n```cs\r\nconst string AssetsRelativePath = \"assets\";\r\n\r\nMLContext mlContext = new MLContext();\r\n\r\nIEnumerable<ImageData> images = LoadImagesFromDirectory(folder: AssetsRelativePath, useFolderNameAsLabel: true);\r\nIDataView imageData = mlContext.Data.LoadFromEnumerable(images);\r\nIDataView shuffledData = mlContext.Data.ShuffleRows(imageData);\r\n\r\nvar preprocessingPipeline = mlContext.Transforms.Conversion.MapValueToKey(\r\n        inputColumnName: \"Label\",\r\n        outputColumnName: \"LabelAsKey\")\r\n    .Append(mlContext.Transforms.LoadRawImageBytes(\r\n        outputColumnName: \"Image\",\r\n        imageFolder: AssetsRelativePath,\r\n        inputColumnName: \"ImagePath\"));\r\n\r\nIDataView preProcessedData = preprocessingPipeline\r\n    .Fit(shuffledData)\r\n    .Transform(shuffledData);\r\n\r\nDataDebuggerPreview dataCount = preProcessedData.Preview(); // RowView = 24, correct!\r\n\r\nTrainTestData trainSplit = mlContext.Data.TrainTestSplit(data: preProcessedData, testFraction: 0.3); // Split train data 70%/30%\r\nTrainTestData validationTestSplit = mlContext.Data.TrainTestSplit(trainSplit.TestSet, testFraction: 0.1); // Rest of 30% into 90%/10%\r\n\r\nDataDebuggerPreview trainSplitTrainSetCount = trainSplit.TrainSet.Preview(); // RowView = 19 <= Should be 16 or 17 depending on rounding (70% of 24 images = 16.799999999999997%)\r\nDataDebuggerPreview trainSplitTestSetCount = trainSplit.TestSet.Preview(); // RowView = 5 <= Should be 6 or 7 depending on rounding (30% of 24 images = 7.199999999999999%)\r\nDataDebuggerPreview validationTrainSetCount = validationTestSplit.TrainSet.Preview(); // RowView = 5\r\nDataDebuggerPreview validationTestSetCount = validationTestSplit.TestSet.Preview(); // RowView = 0 <= Not sure to understand why 0 here\r\n```\r\n\r\nFollowing the preprocessing phase, the number of images is correct (24). However, following the various `TrainTestSplit()`, the data doesn't seem to be split correctly according to the fraction requested. Finally, I end up with an empty test dataset. You can find the details of each count at the end of the sample.\r\n\r\nIs this the expected behaviour or did I misunderstand something?\r\n\r\n## System Information (please complete the following information)\r\n - OS & Version: Windows 11\r\n - ML.NET Version: 3.0.0\r\n - .NET Version: .NET 8\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6929","RelatedDescription":"Open issue \"TrainTestSplit does not seem to split the dataset according to the given fraction\" (#6929)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-01-17T03:30:17.078464Z","RunDurationInMilliseconds":441}