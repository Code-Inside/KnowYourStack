{"Data":{"GitHub":{"Issues":[{"Id":"676413342","IsPullRequest":false,"CreatedAt":"2020-08-10T21:00:22","Actor":"LittleLittleCloud","Number":"5341","RawContent":null,"Title":"Image classification can't run on CPU that doesn't support AVX instruction","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Window10\r\n- **.NET Version (eg., dotnet --info)**:  3.1.302\r\n\r\n### Issue\r\n\r\nWe have a few users from Model Builder report on image classification failure because of loading error.\r\n- https://github.com/dotnet/machinelearning-modelbuilder/issues/915\r\n- https://github.com/dotnet/machinelearning-modelbuilder/issues/920\r\n\r\nAfter some investigation, I think it is because their CPU is too old and doesn't support AVX instruction, which is used to build tensorflow after v1.6. **But I'm not too sure about it, and that conclusion need double check**.\r\n\r\nIn the meanwhile, it would be great if we can catch the instruction not support error from exception thrown by mlnet. Right now the error message is \"Tensorflow exception triggered while loading model\", which is not really helpful in debugging. Is it possible to have a new exception, or a specific error message to highlight the avx not support exception?\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5341","RelatedDescription":"Open issue \"Image classification can't run on CPU that doesn't support AVX instruction\" (#5341)"},{"Id":"673929369","IsPullRequest":true,"CreatedAt":"2020-08-10T17:39:37","Actor":"harishsk","Number":"5338","RawContent":null,"Title":"Removed ability to save filters from legacy filter code","State":"closed","Body":"Fixes #5335 \r\n\r\nThe offending code in ResultProcessor wasn't being used at all. So I have deleted that.\r\n\r\nAnd as per @yaeldekel the StatefulFilterTransform is a legacy filter from TLC and is not part of the ML.NET public API. It is being used internally in some time series code. But it doesn't need the ability to be saved. \r\n\r\nWe should at some point, upgrade the time series code to use the new CustomMappingTransform and delete the StatefulFilterTransform. \r\n\r\nUntil then I have deleted the SerializableLambdaTransform and the associated functionality in LambdaTransformBase.","Url":"https://github.com/dotnet/machinelearning/pull/5338","RelatedDescription":"Closed or merged PR \"Removed ability to save filters from legacy filter code\" (#5338)"},{"Id":"670008383","IsPullRequest":false,"CreatedAt":"2020-08-10T17:39:37","Actor":"JakeRadMSFT","Number":"5335","RawContent":null,"Title":"SerializationBinder must be set for BinaryFormatter","State":"closed","Body":"https://github.com/dotnet/machinelearning/blob/master/src/Microsoft.ML.ResultProcessor/ResultProcessor.cs#L1150-L1151\r\nhttps://github.com/dotnet/machinelearning/blob/master/src/Microsoft.ML.Transforms/SerializableLambdaTransform.cs#L135\r\nhttps://github.com/dotnet/machinelearning/blob/master/src/Microsoft.ML.Transforms/SerializableLambdaTransform.cs#L142\r\n\r\nPlease see tracking bug for more details:\r\nhttps://devdiv.visualstudio.com/DevDiv/_workitems/edit/1110054","Url":"https://github.com/dotnet/machinelearning/issues/5335","RelatedDescription":"Closed issue \"SerializationBinder must be set for BinaryFormatter\" (#5335)"},{"Id":"676165493","IsPullRequest":false,"CreatedAt":"2020-08-10T14:08:43","Actor":"ladodc","Number":"5340","RawContent":null,"Title":"How to re-train onnx model in ml.net","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Win10\r\n\r\n\r\n- **.NET Version (eg., dotnet --info)**: .Net Core 3.1\r\n\r\n### Issue\r\n\r\nHi I am trying to re-train model saved in onnx format. I can inference this model with onnxruntime in .net but retraining without success. What I am doing wrong? Is this in .net possible? Here is my model:[logres_scikit_pipeline.zip](https://github.com/dotnet/machinelearning/files/5051258/logres_scikit_pipeline.zip)\r\n\r\n### Source code\r\n`\r\nvar MODEL_PATH = @\"..\\..\\..\\Model\\logres_scikit_pipeline.onnx\";\r\n                \r\n                var pipeline = mlContext.Transforms.ApplyOnnxModel(modelFile: MODEL_PATH, inputColumnNames: inputColumnNames,\r\n                    outputColumnNames: new[] { \"output_probability\", \"output_label\" });\r\n\r\n                var model = pipeline.Fit(newData);\r\n              \r\n                using (var stream = File.Create(MODEL_PATH))\r\n                {\r\n                    mlContext.Model.ConvertToOnnx(model, newData, stream);\r\n                }\r\n`\r\n\r\n> On ConvertToOnnx, I got following Exception: The targeted pipeline can not be fully converted into a well-defined ONNX model. Please check if all steps in that pipeline are convertible to ONNX and all necessary variables are not dropped (via command line arguments).","Url":"https://github.com/dotnet/machinelearning/issues/5340","RelatedDescription":"Open issue \"How to re-train onnx model in ml.net\" (#5340)"},{"Id":"674625047","IsPullRequest":false,"CreatedAt":"2020-08-06T21:59:22","Actor":"LittleLittleCloud","Number":"5339","RawContent":null,"Title":"AutoML.Net: CrossValSummaryRunner can't handle all-infinity metrics value.","State":"open","Body":"CrossValSummaryRunner picks up the best model and score from cross validation in the following logic:\r\n- get results from all validation runs\r\n- if all run succeed, get the index of model with best score as return model, if all run's score is NaN or Infinity, uses the first model\r\n- if all run succeed, get the score which is closest to the average score as return training score, if average score is NaN, use the first score (**BUG**)\r\n\r\nThe possible place that causes the bug is sometimes the average score can be Infinity, in which case the following function will return -1 and causes an index out of error exception\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/37af3f9db86414f4ec5b16a8734c90b498946caa/src/Microsoft.ML.AutoML/Experiment/Runners/CrossValSummaryRunner.cs#L84\r\n\r\n### Related issue\r\n(The label column for this user's dataset is all empty, which is the root cause for this error) \r\n- https://github.com/dotnet/machinelearning-modelbuilder/issues/929","Url":"https://github.com/dotnet/machinelearning/issues/5339","RelatedDescription":"Open issue \"AutoML.Net: CrossValSummaryRunner can't handle all-infinity metrics value.\" (#5339)"},{"Id":"667361943","IsPullRequest":true,"CreatedAt":"2020-08-05T20:54:45","Actor":"harishsk","Number":"5329","RawContent":null,"Title":"Changed component governance scan type to Register","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/5329","RelatedDescription":"Closed or merged PR \"Changed component governance scan type to Register\" (#5329)"},{"Id":"673245637","IsPullRequest":false,"CreatedAt":"2020-08-05T18:40:34","Actor":"pthinh14","Number":"5337","RawContent":null,"Title":"ONNX model performs wrongly and Normalization for Image","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: Window \r\n- **.NET Version (eg., dotnet --info)**: .NET Core 3.1\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\n I use pre-trained ONNX in my application\r\n- **What happened?** \r\nThe ONNX model performs worse in ML.NET than in other platforms (pytorch, tensorflow) in term of accuracy. They give the same results for some images while some are not. I think the problem might be on the preprocessing stage. In Pytorch, I have normalization step while I cannot produce the same method in ML.NET.\r\nI tried NormalizeMeanVariance and NormalizeMinMax but the result is all 0 so I wonder if they are applicable for image.\r\n- **What did you expect?** \r\nNormalization for image or allowing custom preprocessing transform. I would love to have sample for this problem. Actually it would be nice to have document about how to map Tensorflow, Pytorch functions to ML.NET functions.\r\n\r\n### Source code / logs\r\nML.NET code which can produce some good results:\r\n```\r\nvar pipeline = mlContext.Transforms\r\n                .LoadImages(\r\n                    outputColumnName: \"image_object\",\r\n                    imageFolder: null,\r\n                    inputColumnName: nameof(ImageData.ImagePath))\r\n            .Append(mlContext.Transforms.ResizeImages(\r\n                outputColumnName: \"image_object_resized\",\r\n                imageWidth: ImageSettings.imageWidth,\r\n                imageHeight: ImageSettings.imageHeight,\r\n                inputColumnName: \"image_object\"\r\n               ))\r\n            .Append(mlContext.Transforms.ExtractPixels(\r\n                outputColumnName: \"image_object_scale\",\r\n                inputColumnName: \"image_object_resized\",\r\n                offsetImage:117,\r\n                scaleImage:1/255f))\r\n.Append(mlContext.Transforms.ApplyOnnxModel(modelFile: _modelFilePath, outputColumnName: ModelSettings.outputTensorName, inputColumnName:  ModelSettings.inputTensorName));\r\n```\r\n\r\n**ML.NET normalize code:**\r\n```\r\nvar pipeline = mlContext.Transforms\r\n                .LoadImages(\r\n                    outputColumnName: \"image_object\",\r\n                    imageFolder: null,\r\n                    inputColumnName: nameof(ImageData.ImagePath))\r\n            .Append(mlContext.Transforms.ResizeImages(\r\n                outputColumnName: \"image_object_resized\",\r\n                imageWidth: ImageSettings.imageWidth,\r\n                imageHeight: ImageSettings.imageHeight,\r\n                inputColumnName: \"image_object\"\r\n               ))\r\n            .Append(mlContext.Transforms.ExtractPixels(\r\n                outputColumnName: \"image_object_scale\",\r\n                inputColumnName: \"image_object_resized\"))\r\n            .Append(mlContext.Transforms.NormalizeLogMeanVariance(inputColumnName: \"image_object_scale\", outputColumnName: \"image_normalized\", fixZero:true));\r\n\r\n            var normalizeTransform = pipeline.Fit(dataView);\r\n            var transformedData = normalizeTransform.Transform(dataView);\r\n            var column = transformedData.GetColumn<float[]>(\"image_normalized\").ToArray();\r\n            foreach (var row in column)\r\n                    Console.WriteLine(string.Join(\", \", row.Select(x => x.ToString())));\r\n```\r\n\r\n**Pytorch transformation:**\r\n```data_transforms = transforms.Compose([\r\ntransforms.Resize(224),\r\ntransforms.ToTensor(),\r\ntransforms.Normalize([0.5,0.5,0.5], [0.5,0.5,0.5])\r\n])```","Url":"https://github.com/dotnet/machinelearning/issues/5337","RelatedDescription":"Closed issue \"ONNX model performs wrongly and Normalization for Image\" (#5337)"},{"Id":"671940805","IsPullRequest":false,"CreatedAt":"2020-08-03T09:35:17","Actor":"rs22","Number":"5336","RawContent":null,"Title":"Passing serialized TensorFlow Example to TF Serving SavedModel","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: macOS 10.15\r\n- **.NET Version (eg., dotnet --info)**: 3.1.301\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\n  I would like to use the PredictionEnginePool (eventually) in combination with a pretrained Tensorflow Model that I exported using the [Estimator.export_saved_model](https://www.tensorflow.org/guide/saved_model?hl=en#savedmodels_from_estimators) function in combination with [`build_parsing_serving_input_receiver_fn`](https://www.tensorflow.org/api_docs/python/tf/estimator/export/build_parsing_serving_input_receiver_fn).\r\n\r\n  Specifically, I went through this tutorial: https://www.tensorflow.org/tfx/tutorials/transform/census. Below, you can find the Tensorflow Serving signature definition according to `saved_model_cli`. \r\n\r\n- **What happened?**\r\n  The `input_example_tensor` input expects a serialized [Example](https://github.com/tensorflow/tensorflow/blob/r2.3/tensorflow/core/example/example.proto) message (a binary buffer, not a text string). This does not work using the ML.NET library because it [re-encodes the data](https://github.com/dotnet/machinelearning/blob/release/1.5.1/src/Microsoft.ML.TensorFlow/TensorflowTransform.cs#L837) that I'm providing as the model input.\r\n- **What did you expect?**\r\n  There should be the option in ML.NET to pass raw binary data as a TFString to the model (maybe as a `byte[]` or `ReadOnlyMemory<byte>`?).\r\n\r\n### Source code / logs\r\nSaved model signature:\r\n```bash\r\n$ saved_model_cli show --dir ./my_saved_model --tag_set serve --signature_def serving_default\r\nThe given SavedModel SignatureDef contains the following input(s):\r\n  inputs['inputs'] tensor_info:\r\n      dtype: DT_STRING\r\n      shape: (-1)\r\n      name: input_example_tensor:0\r\nThe given SavedModel SignatureDef contains the following output(s):\r\n  outputs['classes'] tensor_info:\r\n      dtype: DT_STRING\r\n      shape: (-1, 2)\r\n      name: head/Tile:0\r\n  outputs['scores'] tensor_info:\r\n      dtype: DT_FLOAT\r\n      shape: (-1, 2)\r\n      name: head/predictions/probabilities:0\r\nMethod name is: tensorflow/serving/classify\r\n```\r\n\r\nMy code:\r\n```csharp\r\nclass ModelInput {\r\n    [ColumnName(\"input_example_tensor\"), VectorType(1)]\r\n    public string[] InputExampleTensor { get; set; }\r\n}\r\nclass ModelPrediction {\r\n    [ColumnName(\"head/Tile:0\"), VectorType(2)]\r\n    public string[] Classes { get; set; }\r\n\r\n    [ColumnName(\"head/predictions/probabilities:0\"), VectorType(2)]\r\n    public float[] Prediction { get; set; }\r\n}\r\n\r\nvar mlContext = new MLContext();\r\n\r\nvar pipeline = mlContext.Model.LoadTensorFlowModel(\"my_saved_model\")\r\n    .ScoreTensorFlowModel(\r\n        outputColumnNames: new[] { \"head/Tile:0\", \"head/predictions/probabilities:0\" },\r\n        inputColumnNames: new[] { \"input_example_tensor\" }\r\n    );\r\n\r\n// Train the model\r\n// Since we are simply using a pre-trained TensorFlow model,\r\n// we can \"train\" it against an empty dataset\r\nvar emptyTrainingSet = mlContext.Data.LoadFromEnumerable(new List<ModelInput>());\r\nvar mlModel = pipeline.Fit(emptyTrainingSet);\r\nvar engine = mlContext.Model.CreatePredictionEngine<ModelInput, ModelPrediction>(mlModel);\r\n\r\n// Example is a Protobuf-Class, generated from example.proto\r\nvar example = new Example();\r\n// filling the example with features omitted\r\n\r\nvar input = new ModelInput {\r\n    InputExampleTensor = new[] { new string(example.ToByteArray().Select(x => (char)x).ToArray()) }\r\n};\r\n\r\nvar prediction = engine.Predict(input);\r\n```\r\n\r\nWhich fails with:\r\n```\r\nW tensorflow/core/framework/op_kernel.cc:1767] OP_REQUIRES failed at example_parsing_ops.cc:92 : Invalid argument: Could not parse example input, value: '<omitted binary data>'\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/5336","RelatedDescription":"Open issue \"Passing serialized TensorFlow Example to TF Serving SavedModel\" (#5336)"},{"Id":"669978515","IsPullRequest":false,"CreatedAt":"2020-07-31T16:16:15","Actor":"antoniovs1029","Number":"5334","RawContent":null,"Title":"Running FxCop on ML.NET","State":"open","Body":"Running the FxCop analyzers with the `Sdl.Required.Warning.ruleset` as done on #5331 raises some errors. Please note that ML.NET already had a ruleset defined on [Source.ruleset](https://github.com/dotnet/machinelearning/blob/dd318d89ca6e97a46ce84ae37f091b69dc6ebca5/src/Source.ruleset#L1-L3) but it turns out that since the FxCop analyzers weren't installed before, several of those rules were _never_ actually enforced. After installing the FxCop most of the errors detected come from this preexisting ruleset, but they're not to be considered security-related since they aren't part of the Sdl ruleset.\r\n\r\n### Rules related to security\r\n- [x] CA2301 - Raised on a couple of places of ML.NET. This is actually the only error coming from the Sdl ruleset.\r\n- [ ] CA2100 - This doesn't come from the Sdl ruleset (it comes from the preexisting ruleset) but seems to be security related.\r\n\r\n### Rules not related to security\r\nThe other error codes thrown by the analyzers are the following. As per @sharwell recommendation, it might just be best to disable all of these, but it might also be preferable to address and solve some of them in order to reenable the rules. PR #5331 disables all of this, until they might be addressed in the future.\r\n\r\n**Rules we might want to address after disabling:**\r\n- [ ] CA1060\r\n- [ ] CA1065\r\n- [ ] CA2002\r\n- [ ] CA2101\r\n- [ ] CA2231\r\n\r\n**Rules we might simply want to disable and not address:**\r\n- [ ] CA1001\r\n- [ ] CA1033\r\n- [ ] CA1063\r\n- [ ] CA2213\r\n- [ ] CA2214\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5334","RelatedDescription":"Open issue \"Running FxCop on ML.NET\" (#5334)"},{"Id":"669008003","IsPullRequest":false,"CreatedAt":"2020-07-30T17:33:16","Actor":"jessewinkler","Number":"5333","RawContent":null,"Title":"Image Classification Infinite Training Loop","State":"open","Body":"### System information\r\n\r\n- Windows 10 Enterprise\r\n- .NET 4.7.03190\r\n- Visual Studio Professional 2019 16.6.2\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI am attempting to run training for image classification for the first time with about 5000 images in 5 sub-folders for tagging as required. My pc does not have a real GPU if that matters, the training uses my CPU cores at 100% during the \"bottleneck\" phase.\r\n\r\n- **What happened?**\r\nThe training runs through a loop that repeats over and over. The loop repeated over 12 times in the longest run over 3 hours before I cancelled it. I will attach the output log. I tried making a new solution entirely and got the same behavior. I tried reducing the training set to 2000 images in 2 sub-folders but that had the same behavior.\r\n\r\n- **What did you expect?**\r\nI expected the training to complete after one loop through the images, since this is what the documentation seems to say.\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n[image classifier log](https://github.com/dotnet/machinelearning/files/5002843/image.classifier.log)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5333","RelatedDescription":"Open issue \"Image Classification Infinite Training Loop\" (#5333)"},{"Id":"668367592","IsPullRequest":true,"CreatedAt":"2020-07-30T04:46:27","Actor":"antoniovs1029","Number":"5332","RawContent":null,"Title":"[Reference] Sample on how to solve FxCop errors","State":"open","Body":"This draft PR is meant for reference, and it's not meant to be merged on the main repo, only show case how the workflow will be for working with FxCop issues.\r\n\r\nNotice in the commit history of this PR that FxCop analyzers are enabled first to see the errors they raise, then they're addressed on following commits, and finally the FxCop analyzers are disabled again because they shouldn't be part of a PR solving FxCop issues (enabling FxCop Analyzer on the main repo will only be done after all its issues are addressed, in order to enable us to create single PRs addressing each issue).\r\n\r\nThis PR also contains some tips and tricks by @sharwell about how to deal with the errors that appear when running FxCop.","Url":"https://github.com/dotnet/machinelearning/pull/5332","RelatedDescription":"Open PR \"[Reference] Sample on how to solve FxCop errors\" (#5332)"},{"Id":"668301001","IsPullRequest":true,"CreatedAt":"2020-07-30T02:10:03","Actor":"antoniovs1029","Number":"5331","RawContent":null,"Title":"Enable FxCop on all projects","State":"open","Body":"This PR enables de FxCop Analyzers on all projects of ML.NET using the `Sdl.Required.Warning.ruleset` recommended to us offline.\r\n\r\n**NOTE:** Right after enabling the FxCop Analyzers (i.e. when syncing with this branch), I've found necessary to Clean, Close, Clean and Rebuild the ML.NET Visual Studio solution to make the changes effective and see an updated error list on VS.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5331","RelatedDescription":"Open PR \"Enable FxCop on all projects\" (#5331)"},{"Id":"660923423","IsPullRequest":true,"CreatedAt":"2020-07-29T18:46:46","Actor":"jwood803","Number":"5313","RawContent":null,"Title":"Channels await fix","State":"closed","Body":"Fix for #5312\r\n\r\nSetting as a draft to add a test.","Url":"https://github.com/dotnet/machinelearning/pull/5313","RelatedDescription":"Closed or merged PR \"Channels await fix\" (#5313)"},{"Id":"660740597","IsPullRequest":false,"CreatedAt":"2020-07-29T18:46:46","Actor":"jwood803","Number":"5312","RawContent":null,"Title":"Async operation has not completed error","State":"closed","Body":"It seems some scenarios cause this error after looking at this [StackOverflow question](https://stackoverflow.com/questions/62976568/system-invalidoperationexception-the-asynchronous-operation-has-not-completed).\r\n\r\n```\r\nat System.Threading.Channels.AsyncOperation.ThrowIncompleteOperationException() at System.Threading.Channels.AsyncOperation1.GetResult(Int16 token)   at Microsoft.ML.Transforms.RowShufflingTransformer.Cursor.MoveNextCore()\r\n```\r\n\r\nThis seems to be caused by a change I added in #5123. \r\n\r\nTagging @eerhardt @harishsk for visibility. I'll work on a fix for this.","Url":"https://github.com/dotnet/machinelearning/issues/5312","RelatedDescription":"Closed issue \"Async operation has not completed error\" (#5312)"},{"Id":"667988521","IsPullRequest":false,"CreatedAt":"2020-07-29T16:48:54","Actor":"nsingal","Number":"5330","RawContent":null,"Title":"ML.NET Is unable to export model in Text format as MAML used to do","State":"open","Body":"I was using TLC/MAML to create my LR model and would then export it to a text file which would show the weights and the bias value. Our subsequent pipeline consumes this file.\r\nWe are trying to switch over to ML.NET and are noticing that it doesn't have an option to export the same format.\r\nCan we please get this functionality?\r\n\r\n\r\n### System information\r\n\r\n- **OS version/distro**:\r\n- **.NET Version (eg., dotnet --info)**: \r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\n\r\n- **What happened?**\r\n- **What did you expect?**\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5330","RelatedDescription":"Open issue \"ML.NET Is unable to export model in Text format as MAML used to do\" (#5330)"},{"Id":"663225973","IsPullRequest":false,"CreatedAt":"2020-07-28T21:02:35","Actor":"LeoAlario","Number":"5316","RawContent":null,"Title":"Unable to load DLL 'MklImports' or one of its dependencies: The specified module could not be found. (0x8007007E)","State":"closed","Body":"### System information\r\n\r\n- **Windows server 2019 IIS / Docker Windows Container**:\r\n- **.NET Version 3.1.3**: \r\n\r\n**Project references**\r\nMicrosoft.ML 1.5.0 - 1.5.1 \r\nMicrosoft.ML.TimeSeries 1.5.0 - 1.5.1\r\nMicrosoft.ML.Mkl.Components 1.5.0 - 1.5.1 \r\n\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\n\r\n I was trying to train the model in a .NET standard 2.0 library\r\n\r\n ITransformer trainedModel = dataProcessPipeline.Fit(trainingDataView);\r\n\r\nIt doesn't work on IIS production environment (VM on Azure)  as well in a Docker Windows Container used from my development machine.\r\n\r\nI've performed several attempts in order to solve the  issue, including manual installation of the Intel Math Kernel Library through the installer.   \r\n\r\n- **What happened?**\r\n Dll not found exception\r\n\r\n- **What did you expect?**\r\n\r\nIt should work fine like on my development environment (IIS Express).\r\n\r\n### Source code / logs\r\n\r\nUnable to load DLL 'MklImports' or one of its dependencies: The specified module could not be found. (0x8007007E)    at Microsoft.ML.Transforms.TimeSeries.EigenUtils.Dsytrd(Layout matrixLayout, Uplo uplo, Int32 n, Double[] a, Int32 lda, Double[] d, Double[] e, Double[] tau)\r\n   at Microsoft.ML.Transforms.TimeSeries.EigenUtils.MklSymmetricEigenDecomposition(Single[] input, Int32 size, Single[]& eigenValues, Single[]& eigenVectors)\r\n   at Microsoft.ML.Transforms.TimeSeries.TrajectoryMatrix.ComputeSvd(Single[]& singularValues, Single[]& leftSingularvectors)\r\n   at Microsoft.ML.Transforms.TimeSeries.AdaptiveSingularSpectrumSequenceModelerInternal.TrainCore(Single[] dataArray, Int32 originalSeriesLength)\r\n   at Microsoft.ML.Transforms.TimeSeries.AdaptiveSingularSpectrumSequenceModelerInternal.Train(RoleMappedData data)\r\n   at Microsoft.ML.Transforms.TimeSeries.SsaForecastingEstimator.Fit(IDataView input)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5316","RelatedDescription":"Closed issue \"Unable to load DLL 'MklImports' or one of its dependencies: The specified module could not be found. (0x8007007E)\" (#5316)"},{"Id":"666660128","IsPullRequest":true,"CreatedAt":"2020-07-28T05:30:58","Actor":"LetticiaNicoli","Number":"5328","RawContent":null,"Title":"Replace whitelist terminology to allow list","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/5328","RelatedDescription":"Closed or merged PR \"Replace whitelist terminology to allow list\" (#5328)"},{"Id":"666653854","IsPullRequest":true,"CreatedAt":"2020-07-28T01:30:57","Actor":"harishsk","Number":"5327","RawContent":null,"Title":"Added build step for component governance","State":"closed","Body":"As per security compliance guidelines.","Url":"https://github.com/dotnet/machinelearning/pull/5327","RelatedDescription":"Closed or merged PR \"Added build step for component governance\" (#5327)"},{"Id":"664584785","IsPullRequest":false,"CreatedAt":"2020-07-27T20:32:40","Actor":"Babadinier","Number":"5321","RawContent":null,"Title":"System.ArgumentException: Destination is too short. (Parameter 'destination')","State":"closed","Body":"### System information\r\n\r\n.NET Core SDK (reflecting any global.json):\r\nVersion: 3.1.301\r\nCommit: 7feb845744\r\n\r\n \r\n\r\nRuntime Environment:\r\n\r\nOS Name: Windows\r\n\r\nOS Version: 10.0.14393\r\n\r\nOS Platform: Windows\r\n\r\nRID: win10-x86\r\n\r\nBase Path: D:\\Program Files (x86)\\dotnet\\sdk\\3.1.301\\\r\n\r\n \r\n\r\nHost (useful for support):\r\n\r\nVersion: 3.1.5\r\n\r\nCommit: 65cd789777\r\n\r\n \r\n\r\n.NET Core SDKs installed:\r\n\r\n1.1.14 [D:\\Program Files (x86)\\dotnet\\sdk]\r\n\r\n2.1.514 [D:\\Program Files (x86)\\dotnet\\sdk]\r\n\r\n2.1.515 [D:\\Program Files (x86)\\dotnet\\sdk]\r\n\r\n2.2.109 [D:\\Program Files (x86)\\dotnet\\sdk]\r\n\r\n3.1.202 [D:\\Program Files (x86)\\dotnet\\sdk]\r\n\r\n3.1.301 [D:\\Program Files (x86)\\dotnet\\sdk]\r\n\r\n \r\n\r\n.NET Core runtimes installed:\r\n\r\nMicrosoft.AspNetCore.All 2.1.17 [D:\\Program Files (x86)\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n\r\nMicrosoft.AspNetCore.All 2.1.19 [D:\\Program Files (x86)\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n\r\nMicrosoft.AspNetCore.All 2.2.8 [D:\\Program Files (x86)\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n\r\nMicrosoft.AspNetCore.App 2.1.17 [D:\\Program Files (x86)\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\nMicrosoft.AspNetCore.App 2.1.19 [D:\\Program Files (x86)\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\nMicrosoft.AspNetCore.App 2.2.8 [D:\\Program Files (x86)\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\nMicrosoft.AspNetCore.App 3.0.3 [D:\\Program Files (x86)\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\nMicrosoft.AspNetCore.App 3.1.3 [D:\\Program Files (x86)\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\nMicrosoft.AspNetCore.App 3.1.5 [D:\\Program Files (x86)\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n\r\nMicrosoft.NETCore.App 1.0.16 [D:\\Program Files (x86)\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nMicrosoft.NETCore.App 1.1.13 [D:\\Program Files (x86)\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nMicrosoft.NETCore.App 2.0.9 [D:\\Program Files (x86)\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nMicrosoft.NETCore.App 2.1.19 [D:\\Program Files (x86)\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nMicrosoft.NETCore.App 2.2.8 [D:\\Program Files (x86)\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nMicrosoft.NETCore.App 3.0.3 [D:\\Program Files (x86)\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\nMicrosoft.NETCore.App 3.1.5 [D:\\Program Files (x86)\\dotnet\\shared\\Microsoft.NETCore.App]\r\n\r\n### Issue\r\n\r\n- We have implemented a service using ML.Net to analyze email messages.  In certain cases, when sending a request to analyze we get the following error, which results in a 400 status reply from our service.  When trying the same payload a couple of minutes later we get a correct 200 reply without error.\r\nWe would expect that ML always returns the same result when provided with the same payload?\r\n\r\nSystem.ArgumentException: Destination is too short. (Parameter 'destination')\r\n   at Microsoft.ML.Data.BufferBuilder`1.GetResult(VBuffer`1& buffer)\r\n   at Microsoft.ML.Transforms.Text.NgramExtractingTransformer.Mapper.<>c__DisplayClass10_0.<MakeGetter>b__2(VBuffer`1& dst)\r\n   at Microsoft.ML.Transforms.LpNormNormalizingTransformer.Mapper.<>c__DisplayClass8_0.<MakeGetter>b__5(VBuffer`1& dst)\r\n   at Microsoft.ML.Data.ColumnConcatenatingTransformer.Mapper.BoundColumn.<>c__DisplayClass18_0`1.<MakeGetter>b__0(VBuffer`1& dst)\r\n   at Microsoft.ML.Data.ColumnConcatenatingTransformer.Mapper.BoundColumn.<>c__DisplayClass18_0`1.<MakeGetter>b__0(VBuffer`1& dst)\r\n   at Microsoft.ML.Data.SchemaBindablePredictorWrapperBase.<>c__DisplayClass18_0`2.<GetValueGetter>b__0(TDst& dst)\r\n   at Microsoft.ML.Data.PredictedLabelScorerBase.EnsureCachedPosition[TScore](Int64& cachedPosition, TScore& score, DataViewRow boundRow, ValueGetter`1 scoreGetter)\r\n   at Microsoft.ML.Data.MulticlassClassificationScorer.<>c__DisplayClass16_0.<GetPredictedLabelGetter>b__0(UInt32& dst)\r\n   at Microsoft.ML.Transforms.KeyToValueMappingTransformer.Mapper.KeyToValueMap`2.<>c__DisplayClass8_0.<GetMappingGetter>b__0(TValue& dst)\r\n   at Microsoft.ML.Data.TypedCursorable`1.TypedRowBase.<>c__DisplayClass9_0`2.<CreateConvertingActionSetter>b__0(TRow row)\r\n   at Microsoft.ML.Data.TypedCursorable`1.TypedRowBase.FillValues(TRow row)\r\n   at Microsoft.ML.Data.TypedCursorable`1.RowImplementation.FillValues(TRow row)\r\n   at Microsoft.ML.PredictionEngineBase`2.FillValues(TDst prediction)\r\n   at Microsoft.ML.PredictionEngine`2.Predict(TSrc example, TDst& prediction)\r\n   at sar.svc.ml.alex.business.services.MailPredictionService.GetIntents(Mail mail) in D:\\a\\1\\s\\sar.svc.ml.alex.business\\services\\MailPredictionService.cs:line 26\r\n\r\n\r\n```csharp      \r\npublic Dictionary<string, float> GetIntents(Mail mail)\r\n        {\r\n            if (mail == null)\r\n            {\r\n                throw new ArgumentNullException(nameof(mail));\r\n            }\r\n\r\n            var prediction = predictionEngine.Engine.Predict(mail);\r\n\r\n            return BuildIntents(predictionEngine.Engine.OutputSchema, prediction.Score);\r\n        }\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/5321","RelatedDescription":"Closed issue \"System.ArgumentException: Destination is too short. (Parameter 'destination')\" (#5321)"},{"Id":"665762853","IsPullRequest":false,"CreatedAt":"2020-07-27T19:35:02","Actor":"Aleksey1555","Number":"5325","RawContent":null,"Title":"Pause the Training process?","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10 x64\r\n- **.NET Version (eg., dotnet --info)**:  .Net Core 3.1\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\n- **What happened?**\r\n- **What did you expect?**\r\n\r\n### Source code / logs\r\n\r\nHello!\r\nQuestion - Can I with ML.net  stop training process, save results to the disk and resume process of training later?\r\nTask - Multiclass classification\r\nTrainer - ImageClassificationTrainer\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5325","RelatedDescription":"Closed issue \"Pause the Training process?\" (#5325)"},{"Id":"665632649","IsPullRequest":false,"CreatedAt":"2020-07-27T17:41:36","Actor":"Aleksey1555","Number":"5324","RawContent":null,"Title":"Transform Vector<Byte> to Vector<width,height,3>","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10 x64\r\n- **.NET Version (eg., dotnet --info)**: .Net Core 3.1\r\n\r\n### Issue\r\n\r\n- **What did you do?** Creating pipeline for image loading \r\n- **What happened?**  'Schema mismatch for input column 'Data': expected Vector<Byte, 45, 45, 3>, got Vector<Byte> \r\n- **What did you expect?** i don't , i want to known - how covert Vector's\r\n\r\n### Source code / logs\r\n\r\nHow to Convert Vectors?\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5324","RelatedDescription":"Closed issue \"Transform Vector<Byte> to Vector<width,height,3>\" (#5324)"},{"Id":"666339046","IsPullRequest":false,"CreatedAt":"2020-07-27T14:28:06","Actor":"kanadaj","Number":"5326","RawContent":null,"Title":"[Documentation] LpNormNormalizingEstimator equations display as plain text","State":"open","Body":"\r\nEquations don't seem to work as intended in the documentation. I assume this isn't meant to be how it's displayed:\r\n\r\n![image](https://user-images.githubusercontent.com/3247357/88553903-b951db80-d01d-11ea-89fc-e32a4a5ac3fd.png)\r\n\r\n\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: 71dcdd76-b41e-d01e-3a03-e26415d0339a\r\n* Version Independent ID: 1b166fb2-85e0-0378-a467-d84d7435f491\r\n* Content: [LpNormNormalizingEstimator Class (Microsoft.ML.Transforms)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.transforms.lpnormnormalizingestimator?view=ml-dotnet)\r\n* Content Source: [dotnet/xml/Microsoft.ML.Transforms/LpNormNormalizingEstimator.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.Transforms/LpNormNormalizingEstimator.xml)\r\n* Product: **dotnet-ml-api**\r\n* GitHub Login: @natke\r\n* Microsoft Alias: **nakersha**","Url":"https://github.com/dotnet/machinelearning/issues/5326","RelatedDescription":"Open issue \"[Documentation] LpNormNormalizingEstimator equations display as plain text\" (#5326)"},{"Id":"663435689","IsPullRequest":true,"CreatedAt":"2020-07-26T16:56:06","Actor":"mstfbl","Number":"5319","RawContent":null,"Title":"Aded catch in R^2 calculation for case with few samples","State":"closed","Body":"This PR fixes #5306 by adding a catch for the calculation of `R^2` during metric calculation. When there is less than two rows of data used for the calculation of `R^2`, the returned value becomes `-Infinity`, whereas it should be returning `NaN`.\r\n\r\nAn example of this behavior in another ML framework is in scikit-learn, in the following lines:\r\n\r\nhttps://github.com/scikit-learn/scikit-learn/blob/fd237278e895b42abe8d8d09105cbb82dc2cbba7/sklearn/metrics/_regression.py#L587-L590","Url":"https://github.com/dotnet/machinelearning/pull/5319","RelatedDescription":"Closed or merged PR \"Aded catch in R^2 calculation for case with few samples\" (#5319)"},{"Id":"664736428","IsPullRequest":false,"CreatedAt":"2020-07-26T11:24:26","Actor":"Aleksey1555","Number":"5323","RawContent":null,"Title":": 'Schema mismatch for input column 'data': expected Vector<Byte, 45, 45, 3>, got Vector<Byte> '","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10 64\r\n- **.NET Version (eg., dotnet --info)**:  Net Core 3.1\r\n\r\n### Issue\r\n\r\n- **What did you do?** :  Try to load images from folder as byte [], then load data into Bitmap and then  createEnumareable\r\n- **What happened?** : Error  Type 'System.Drawing.Bitmap' is not yet supported.   in ConvertToImage\r\n- **What did you expect?** Expect to make array of abjects with Bitmap field\r\n\r\n### Source code / logs\r\ni Have class:\r\npublic class MyImage\r\n    {\r\n        public string Label { get; set; }\r\n        public string path { get; set; }\r\n        [VectorType(45, 45, 3)]\r\n        public byte[] data { get; set; }\r\n        [ImageType(3, 4)]\r\n        public Bitmap im { get; set; }\r\n    }\r\n\r\nand the code:\r\n\r\n```\r\nMLContext ml = new MLContext();\r\n string folder = @\"here my path to folder with images\";\r\n\r\n// Simple function to load images and populate MyImage class (Label and path properties)\r\n IEnumerable<MyImage> images = LoadImagesFromDirectory3(folder: folder, useFolderNameAsLabel: true);\r\n IDataView data = ml.Data.LoadFromEnumerable<MyImage>(images);\r\n IDataView data2 = ml.Transforms.LoadRawImageBytes(\"data\", folder, \"path\")\r\n                                    .Fit(data).Transform(data);\r\n \r\n // And here i want to from data2 make data3 ( with im field)\r\n// but here i get error:'Schema mismatch for input column 'data': expected Vector<Byte, 45, 45, 3>, got Vector<Byte> '\r\n  IDataView data3 = ml.Transforms.ConvertToImage(45, 45, \"im\", \"data\")\r\n                                     .Fit(data2).Transform(data2);\r\n  // And now i want to convert from data3 of type IDataView to List<MyImage>\r\n  // And here\r\n  IEnumerable<MyImage> res=ml.Data.CreateEnumerable<MyImage>(data3, false)\r\n // and after that, i want to save images to the disk\r\n```\r\n`\r\n\r\nPlease help.\r\nWhat i do wrong?","Url":"https://github.com/dotnet/machinelearning/issues/5323","RelatedDescription":"Closed issue \": 'Schema mismatch for input column 'data': expected Vector<Byte, 45, 45, 3>, got Vector<Byte> '\" (#5323)"},{"Id":"661228371","IsPullRequest":false,"CreatedAt":"2020-07-24T01:11:53","Actor":"sereal96","Number":"5314","RawContent":null,"Title":"My confusion trying to use EAST text detector model with the ML.net","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro:Windows 10**:\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nHi, well I am trying to use a the EAST text detector model with the ML.net\r\nfrom here:\r\n\r\nhttps://www.kaggle.com/yelmurat/frozen-east-text-detection\r\n\r\nhowever I don't know if I am doing it the right way. (I only began using ML.net last month) First I tried using\r\nOpenCV with this example:\r\n\r\nhttps://github.com/opencv/opencv/blob/master/samples/dnn/text_detection.cpp\r\n\r\nIt runs fine everything is Ok, but when I tried to do the same with ML.net...\r\n\r\n- **What happened?**\r\nThe problem is that I dont understand how ML.net handle the input data, and the output data. I had an idea. I run other examples, but I couldn't find something similar.\r\n\r\n- **What did you expect?**\r\nI was expecting to have the same or at least similar results like those from OpenCV example.\r\n\r\n### Source code / logs\r\n\r\nFirst I define this\r\n\r\n`       static readonly string _assetsPath = Path.Combine(Environment.CurrentDirectory, \"assets\");\r\n        static readonly string _imagesFolder = Path.Combine(_assetsPath, \"imagesText\");      \r\n        static readonly string _predictSingleImage = Path.Combine(_imagesFolder, \"page10.jpg\");\r\n        static readonly string _inceptionTensorFlowModel = Path.Combine(_assetsPath, \"models\",\"frozen_east_text_detection.pb\");\r\n\r\n        private const int imageHeight = 3104;// 576;  It should be multiple by 32\r\n        private const int imageWidth  = 2304; //576;  It should be multiple by 32\r\n        private const int numChannels = 3;\r\n        private const int inputSize = imageHeight * imageWidth * numChannels;`\r\n\r\n\r\nthen I load the TensorFlow model and saved as ML.net model\r\n\r\n`using var modelX = mlContext.Model.LoadTensorFlowModel(_inceptionTensorFlowModel);\r\n            var schema = modelX.GetModelSchema();\r\n            var inputchema = modelX.GetInputSchema();\r\n            var pipelineX = modelX.ScoreTensorFlowModel(\r\n                outputColumnNames: new[] { \"feature_fusion/Conv_7/Sigmoid\", \"feature_fusion/concat_3\" }, nameof(OutputScores.output) },\r\n                 inputColumnNames: new[] { \"input_images\" }, addBatchDimensionInput: false); }, addBatchDimensionInput: true);\r\n            List<TensorData> list = new List<TensorData>();\r\n            list.Add(new TensorData() { input = null });\r\n            IEnumerable<TensorData> enumerableData = list;\r\n            var dv = mlContext.Data.LoadFromEnumerable<TensorData>(list);//TensorData\r\n            ITransformer model = pipelineX.Fit(dv);\r\n            Directory.CreateDirectory(\"Model\");\r\n            mlContext.Model.Save(model, inputchema, \"trainedModelEAST3.zip\");`\r\n\r\n\r\nAt this point everything seems to work, but here is my problem with the outputs\r\n\r\nIn OpenCV I load an Image and use this\r\n`cv::dnn::blobFromImage(frame, blob, 1.0, cv::Size(inpWidth, inpHeight), cv::Scalar(123.68, 116.78, 103.94), true, false);    \r\n`\r\nand only using this\r\n\r\n`    detector.setInput(blob);\r\n    tickMeter.start();\r\n    detector.forward(outs, outNames);\r\n    tickMeter.stop();\r\n\r\n    cv::Mat scores = outs[0];\r\n    cv::Mat geometry = outs[1];`\r\n\r\nIt's almost done, my inputs are clear, and my outputs too. But ML.net you need to create a class to hold the sample tensor data. So I did that\r\n\r\n` public class TensorData\r\n        {\r\n            [VectorType(imageHeight, imageWidth, numChannels)]\r\n            [ColumnName(\"input_images\")]\r\n            public float[] input { get; set; }\r\n\r\n\r\n            [ColumnName(\"ImagePath\")]\r\n            public string imageP { get; set; }\r\n            [ColumnName(\"Name\")]\r\n            public string imageN { get; set; }\r\n        }`\r\n\r\nThis is where my confusion began because I know that my input for this model should be like this\r\n\r\n![inputs](https://user-images.githubusercontent.com/60855616/87887590-965b7200-c9f4-11ea-9d17-4bc627ea8792.png)\r\n\r\nusing this seems to work\r\n\r\n`            [VectorType(imageHeight, imageWidth, numChannels)]\r\n            [ColumnName(\"input_images\")]\r\n            public float[] input { get; set; }`\r\n\r\nBut for my outputs and how to pass and image to the model I only guessing.  so using the information about the model's output that I find using Netron:\r\n\r\nThis is the \"scores\"\r\n![outputs1](https://user-images.githubusercontent.com/60855616/87887712-71b3ca00-c9f5-11ea-8a6d-237261c1feb3.png)\r\n \r\nand this is the \"geometry\" (the box that show you where is a word in the image) \r\n![outputs2](https://user-images.githubusercontent.com/60855616/87887726-aa53a380-c9f5-11ea-8c80-8ee082c2159d.png)\r\n\r\nI create the class \r\n\r\n`        class OutputScores\r\n        {\r\n            [ColumnName(\"feature_fusion/concat_3\")]\r\n            public float[] output { get; set; }\r\n\r\n            [ColumnName(\"feature_fusion/Conv_7/Sigmoid\")]\r\n            public float[] output2 { get; set; }\r\n\r\n        }`\r\n\r\nwhite all that I tried to use the predict engine like this using an image (\"jpg\"):\r\n\r\n`            Bitmap bitmapImage = (Bitmap)Image.FromFile(_predictSingleImage);\r\n\r\n            float[] a = new float[(bitmapImage.Height * bitmapImage.Width) * 3];\r\n            Color[] c = new Color[bitmapImage.Height * bitmapImage.Width];\r\n            for (int i = 0; i < bitmapImage.Height * bitmapImage.Width; i++)\r\n            {\r\n                int row = i / bitmapImage.Width;\r\n                int col = i % bitmapImage.Width;\r\n                var pixel = bitmapImage.GetPixel(col, row);\r\n\r\n                c[i] = pixel;\r\n                //a[i + 0] = pixel.ToArgb();\r\n                a[i * 3 + 0] = pixel.R;\r\n                a[i * 3 + 1] = pixel.G;\r\n                a[i * 3 + 2] = pixel.B;\r\n            }\r\n            var aux = c.ToArray();\r\n\r\n            TensorData imageTensorData = new TensorData()\r\n            {\r\n                input = a.ToArray()\r\n            };\r\n\r\n\r\n            PredictionEngine<TensorData, OutputScores> _predictionEngineX;\r\n            var loadedModelX = mlContex.Model.Load(\"trainedModelEAST3.zip\", out _);\r\n            _predictionEngineX = mlContex.Model.CreatePredictionEngine<TensorData, OutputScores>(loadedModelX);\r\n            var predictionX = _predictionEngineX.Predict(imageTensorData);\r\n            `\r\n\r\nthat gave this results:\r\n\r\nFor the \"geometry\"\r\n-\t\toutput\t{float[2234880]}\tfloat[]\r\n\t\t[0]\t164.553131\tfloat\r\n\t\t[1]\t108.803284\tfloat\r\n\t\t[2]\t88.53912\t        float\r\n\t\t[3]\t157.4754\t        float\r\n\t\t[4]\t-0.00642232737\tfloat\r\n\t\t[5]\t121.783844\tfloat\r\n\t\t[6]\t93.6575\t        float\r\n\t\t[7]\t89.14729\t        float\r\n\t\t[8]\t149.1378\t        float\r\n\t\t[9]\t0.003307178\tfloat\r\n\t\t[10]\t143.044312\tfloat\r\n\t\t[11]\t92.95393\t        float\r\n\t\t[12]\t93.75145\t        float\r\n\t\t[13]\t136.486084\tfloat\r\n\t\t[14]\t-0.00365050742\tfloat\r\n\t\t[15]\t150.783173\tfloat\r\n\t\t[16]\t105.081482\tfloat\r\n\t\t[17]\t104.515717\tfloat\r\n\t\t[18]\t138.529785\tfloat\r\n\t\t[19]\t0.00163079088\tfloat\r\n\t\t[20]\t155.030853\tfloat\r\n\r\n\r\nFor the scores:\r\n-\t\toutput2\t{float[446976]}\tfloat[]\r\n\t\t[0]\t5.96046448E-08\tfloat\r\n\t\t[1]\t2.38418579E-07\tfloat\r\n\t\t[2]\t2.38418579E-07\tfloat\r\n\t\t[3]\t4.76837158E-07\tfloat\r\n\t\t[4]\t2.682209E-07\t        float\r\n\t\t[5]\t1.49011612E-07\tfloat\r\n\t\t[6]\t3.27825546E-07\tfloat\r\n\t\t[7]\t5.662441E-07\t        float\r\n\t\t[8]\t3.27825546E-07\tfloat\r\n\t\t[9]\t5.066395E-07\t        float\r\n\t\t[10]\t1.10268593E-06\tfloat\r\n\t\t[11]\t1.10268593E-06\tfloat\r\n\t\t[12]\t1.22189522E-06\tfloat\r\n\t\t[13]\t1.10268593E-06\tfloat\r\n\t\t[14]\t6.854534E-07\t        float\r\n\t\t[15]\t4.76837158E-07\tfloat\r\n\t\t[16]\t2.682209E-07\t        float\r\n\t\t[17]\t2.682209E-07\t        float\r\n\t\t[18]\t1.49011612E-07\tfloat\r\n\t\t[19]\t2.38418579E-07\tfloat\r\n\t\t[20]\t1.49011612E-07\tfloat\r\n\r\nWell that is how far I went. Could some one tell me If I implemented the loading of Image correctly or not.  My end goal is to have the same or similar result as in OpenCV \r\n\r\nthis are the packages I am using:\r\n\r\n![Packages](https://user-images.githubusercontent.com/60855616/87889195-63b67700-c9fe-11ea-8b9b-198e6513bbc3.png)\r\n\r\nand yes I tried this to create a pipeline:\r\n\r\n`var imagesDataFile = @\"..\\..\\DNN_ML_CUDA_01\\assets\\imagesText\\\";\r\n\r\n\r\n            var data = mlContext.Data.CreateTextLoader(new TextLoader.Options()\r\n            {\r\n                Columns = new[]\r\n                {\r\n                        new TextLoader.Column(\"ImagePath\", DataKind.String, 0),\r\n                        new TextLoader.Column(\"Name\", DataKind.String, 1),\r\n                        new TextLoader.Column(\"input_images\", DataKind.Single , 2),\r\n                }\r\n            }).Load(imagesDataFile);\r\n\r\n            var imagesFolder = Path.GetDirectoryName(imagesDataFile);\r\n            // Image loading pipeline. \r\n            var pipelineI = mlContext.Transforms.LoadImages(\"ImageObject\",\r\n                imagesFolder, \"ImagePath\")\r\n                .Append(mlContext.Transforms.ResizeImages(\"ImageObjectResized\",\r\n                    inputColumnName: \"ImageObject\", imageWidth: imageWidth, imageHeight: imageHeight))\r\n                .Append(mlContext.Transforms.ExtractPixels(\"Pixels\",\r\n                    \"ImageObjectResized\"))\r\n                .Append(mlContext.Model.LoadTensorFlowModel(_inceptionTensorFlowModel)\r\n                              .ScoreTensorFlowModel(\r\n                                     outputColumnNames: new[] { \"feature_fusion/Conv_7/Sigmoid\", \"feature_fusion/concat_3\" },\r\n                                     inputColumnNames: new[] { \"input_images\" },\r\n                                     addBatchDimensionInput: false))\r\n                ;\r\n\r\n            List<TensorData> list = new List<TensorData>();\r\n            list.Add(new TensorData() { input = null });\r\n            IEnumerable<TensorData> enumerableData = list;\r\n            var dvv = mlContext.Data.LoadFromEnumerable<TensorData>(list);//TensorData\r\n\r\n            var model = pipelineI.Fit(dvv);\r\n\r\n\r\n            using var modelX = mlContext.Model.LoadTensorFlowModel(_inceptionTensorFlowModel);\r\n            var testeschema1 = modelX.GetInputSchema();\r\n\r\n            Directory.CreateDirectory(\"Model\");\r\n            mlContext.Model.Save(model, testeschema1, \"trainedModelEAST3.zip\");\r\n`\r\nIt gave me the same results\r\n\r\nfor reference these are the websites that I use for this project:\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.imageestimatorscatalog.loadimages?view=ml-dotnet\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/master/docs/code/MlNetCookBook.md#how-do-i-train-my-model-on-categorical-data\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.imageestimatorscatalog.extractpixels?view=ml-dotnet\r\n\r\nhttps://devblogs.microsoft.com/cesardelatorre/run-with-ml-net-c-code-a-tensorflow-model-exported-from-azure-cognitive-services-custom-vision/\r\n\r\nhttps://www.pyimagesearch.com/2018/08/20/opencv-text-detection-east-text-detector/\r\n\r\nhttps://devblogs.microsoft.com/cesardelatorre/training-image-classification-recognition-models-based-on-deep-learning-transfer-learning-with-ml-net/\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.transforms.tensorflowmodel.scoretensorflowmodel?view=ml-dotnet\r\n\r\nhttps://github.com/dotnet/machinelearning/issues/5286\r\n\r\nhttps://github.com/dotnet/machinelearning-samples/tree/master/samples/csharp/getting-started/DeepLearning_ImageClassification_TensorFlow\r\n\r\nIf somebody could show me an example, of guide me or anything that would be great.","Url":"https://github.com/dotnet/machinelearning/issues/5314","RelatedDescription":"Closed issue \"My confusion trying to use EAST text detector model with the ML.net\" (#5314)"},{"Id":"663385377","IsPullRequest":false,"CreatedAt":"2020-07-23T21:33:13","Actor":"CBrauer","Number":"5318","RawContent":null,"Title":"Transformers and AutoML","State":"closed","Body":"### System information\r\n\r\n- Microsoft Visual Studio Professional 2019, Version 16.6.4\r\n- ML.NET 1.5.1\r\n\r\n### Issue\r\n\r\n- I am trying to do data preparation with AutoML.\r\nI have run my code with, and without, the \"NormalizeMeanVariance\" transform, and I'm getting a much poorer result with the transform. I must be doing something wrong because applying this transform should not produce poorer results.\r\n\r\nHere is a snapshot of my results:\r\n![transform](https://user-images.githubusercontent.com/1317234/88118539-a7ca8880-cb72-11ea-8b27-4c1ff13607d7.png)\r\n\r\n### Reproducible solution files:\r\nThe complete reproducible solution can be downloaded from: https://github.com/CBrauer/Transform-and-AutoML\r\n\r\n\r\n### Here is the main code of the solution.\r\n\r\n```\r\nusing System;\r\nusing System.Diagnostics;\r\nusing System.Linq;\r\n\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.AutoML;\r\nusing Microsoft.ML.Data;\r\n\r\nusing MLLibrary;\r\n\r\nnamespace BottleRocketClassify {\r\n\r\n  internal static class Program {\r\n    public const string trainedModelPath = \"../../../MLModel.zip\";\r\n\r\n    #region PrintMetrics\r\n    #region BinaryExperimentProgressHandler\r\n    #region Head\r\n\r\n    public static class ModelBuilder {\r\n      public static void Run() {\r\n        var mlContext = new MLContext(seed: 1);\r\n\r\n        var trainDataView = mlContext.Data.LoadFromTextFile<ModelInput>(\r\n          path: @\"H:/HedgeTools/Datasets/rocket-train-classify.csv\",\r\n          // path: @\"../../../rocket-train-classify.csv\",\r\n          hasHeader: true,\r\n          separatorChar: ',');\r\n\r\n        Head(trainDataView, 5);\r\n\r\n        var validDataView = mlContext.Data.LoadFromTextFile<ModelInput>(\r\n          path: @\"H:/HedgeTools/Datasets/rocket-valid-classify.csv\",\r\n          hasHeader: true,\r\n          separatorChar: ',');\r\n\r\n        var pipeline = mlContext.Transforms.NormalizeMeanVariance(\"BoxRatio\")\r\n                                .Append(mlContext.Transforms.NormalizeMeanVariance(\"Thrust\"))\r\n                                .Append(mlContext.Transforms.NormalizeMeanVariance(\"Acceleration\"))\r\n                                .Append(mlContext.Transforms.NormalizeMeanVariance(\"Velocity\"))\r\n                                .Append(mlContext.Transforms.NormalizeMeanVariance(\"vwapGain\"))\r\n                                .Append(mlContext.Transforms.NormalizeMeanVariance(\"OnBalRun\"))\r\n                                .AppendCacheCheckpoint(mlContext);\r\n\r\n        var model = pipeline.Fit(trainDataView);\r\n        var transformedTrainDataView = model.Transform(trainDataView);\r\n        Head(transformedTrainDataView, 5);\r\n\r\n        var optimizingMetrics = new BinaryClassificationMetric[4];\r\n        optimizingMetrics[0] = BinaryClassificationMetric.F1Score;\r\n        optimizingMetrics[1] = BinaryClassificationMetric.AreaUnderRocCurve;\r\n        optimizingMetrics[2] = BinaryClassificationMetric.AreaUnderPrecisionRecallCurve;\r\n        optimizingMetrics[3] = BinaryClassificationMetric.PositiveRecall;\r\n\r\n        var trainers = new BinaryClassificationTrainer[1];\r\n        trainers[0] = BinaryClassificationTrainer.FastTree; \r\n     // trainers[1] = BinaryClassificationTrainer.LightGbm;\r\n\r\n        var bestMetric = 0.0;\r\n        foreach (var trainer in trainers) {\r\n          foreach (var optimizingMetric in optimizingMetrics) {\r\n            var sw = Stopwatch.StartNew();\r\n\r\n            var settings = new BinaryExperimentSettings {\r\n              MaxExperimentTimeInSeconds = 1 * 60 * 60,\r\n              OptimizingMetric = optimizingMetric,\r\n              CacheDirectory = null\r\n            };\r\n            settings.Trainers.Clear();\r\n            settings.Trainers.Add(trainer);\r\n\r\n            Console.WriteLine(\"\\n_____________________________________________________________________________\\n\" +\r\n                              \"Running AutoML binary classification experimeent using: \" +\r\n                              trainer + \", \" + optimizingMetric);\r\n\r\n            var experimentResult = mlContext.Auto()\r\n                                            .CreateBinaryClassificationExperiment(settings)\r\n                                            .Execute(trainData: transformedTrainDataView,\r\n           //                               .Execute(trainData: trainDataView,\r\n                                                     validDataView,\r\n                                                     labelColumnName: \"Altitude\",\r\n                                                     progressHandler: new BinaryExperimentProgressHandler());\r\n\r\n            var bestRun = experimentResult.BestRun;\r\n\r\n            Console.WriteLine(\"Total models produced.... {0}\", experimentResult.RunDetails.Count());\r\n            var validDataViewWithBestScore = bestRun.Model.Transform(validDataView);\r\n            var validMetrics = mlContext.BinaryClassification.\r\n                                         EvaluateNonCalibrated(data: validDataViewWithBestScore,\r\n                                                               labelColumnName: \"Altitude\");\r\n            // Console.WriteLine(\"\\nMetrics using validation dataset:\");\r\n            // PrintMetrics(validMetrics);\r\n\r\n            var crossValidationResults = mlContext.BinaryClassification\r\n                                                  .CrossValidateNonCalibrated(validDataView,\r\n                                                                              bestRun.Estimator,\r\n                                                                              numberOfFolds: 10,\r\n                                                                              labelColumnName:   \"Altitude\"); \r\n                                                                \r\n            var metricsInMultipleFolds = crossValidationResults.Select(r => r.Metrics);\r\n\r\n            var AccuracyValues = metricsInMultipleFolds.Select(m => m.Accuracy);\r\n            var accuracyValues = AccuracyValues as double[] ?? AccuracyValues.ToArray();\r\n            var AccuracyAverage = accuracyValues.Average();\r\n\r\n            var F1Values = metricsInMultipleFolds.Select(m => m.F1Score);\r\n            var f1Values = F1Values as double[] ?? F1Values.ToArray();\r\n            var F1Average = f1Values.Average();\r\n\r\n            var AUCValues = metricsInMultipleFolds.Select(m => m.AreaUnderRocCurve);\r\n            var aucValues = AUCValues as double[] ?? AUCValues.ToArray();\r\n            var AUCAverage = aucValues.Average();\r\n\r\n            var AUCPRCValues = metricsInMultipleFolds.Select(m => m.AreaUnderPrecisionRecallCurve);\r\n            var aucPRCValues = AUCPRCValues as double[] ?? AUCPRCValues.ToArray();\r\n            var AUCPRCAverage = aucPRCValues.Average();\r\n\r\n            var sumOfSquaresOfDifferences = accuracyValues.Select(val => (val - AccuracyAverage) * (val - AccuracyAverage)).Sum();\r\n            var AccuraciesStdDeviation = Math.Sqrt(sumOfSquaresOfDifferences / (accuracyValues.Length - 1));\r\n            var confidenceInterval95 = 1.96 * AccuraciesStdDeviation / Math.Sqrt((accuracyValues.Length - 1));\r\n            var AccuraciesConfidenceInterval95 = confidenceInterval95;\r\n\r\n            Console.WriteLine(\"CrossValidation Metrics using the validation dataset:\");\r\n            Console.WriteLine(\"  trainer......................... {0}\", bestRun.TrainerName);\r\n            Console.WriteLine(\"  optimizingMetric................ {0}\", optimizingMetric);\r\n            Console.WriteLine(\"  AccuracyAverage................. {0}\", AccuracyAverage);\r\n            Console.WriteLine(\"  F1Average....................... {0}\", F1Average);\r\n            Console.WriteLine(\"  AUCAverage...................... {0}\", AUCAverage);\r\n            Console.WriteLine(\"  AUCPRCAverage................... {0}\", AUCPRCAverage);\r\n            Console.WriteLine(\r\n              \"  Cross Validation, AUC........... {0:f4}, Standard deviation: {1:f4}, Confidence Interval 95%: {2:f4}\",\r\n              AccuracyAverage, AccuraciesStdDeviation, AccuraciesConfidenceInterval95);\r\n\r\n            if (AccuracyAverage > bestMetric) {\r\n              bestMetric = AccuracyAverage;\r\n              var bestTrainer = bestRun.TrainerName;\r\n              var bestOptimizingMetric = optimizingMetric.ToString();\r\n              Console.WriteLine(\"\\n  Best model's trainer............... {0}\", bestTrainer);\r\n              Console.WriteLine(\"Best model's optimizingMetric........ {0}\", bestOptimizingMetric);\r\n              Console.WriteLine(\"Best model's AccuracyAverage......... {0}\", AccuracyAverage);\r\n              Console.WriteLine(\"Best model's F1Average............... {0}\", F1Average);\r\n              Console.WriteLine(\"Best model's AUCAverage.............. {0}\", AUCAverage);\r\n              Console.WriteLine(\"Best model's AUCPRCAverage........... {0}\", AUCPRCAverage);\r\n\r\n              var mlModel = bestRun.Model;\r\n              mlContext.Model.Save(mlModel, trainDataView.Schema, trainedModelPath);\r\n              Console.WriteLine(\"The model is saved.\");\r\n\r\n              Console.WriteLine(\"\\n_____________________________________________________________________________\");\r\n              var savedModel = mlContext.Model.Load(trainedModelPath, out _);\r\n              var validDataViewWithBestScore2 = savedModel.Transform(validDataView);\r\n              var validMetrics2 = mlContext.BinaryClassification.EvaluateNonCalibrated(data: validDataViewWithBestScore2,\r\n                                                                                       labelColumnName: \"Altitude\");\r\n              Console.WriteLine(\"\\nConfusion Matrix from saved model using the validation dataset:\\n{0}\",\r\n                                validMetrics2.ConfusionMatrix.GetFormattedConfusionTable());\r\n            }\r\n            sw.Stop();\r\n            var ts = sw.Elapsed;\r\n            Console.WriteLine((\"Experiment time: {0:00}:{1:00}:{2:00}\", ts.Hours, ts.Minutes, ts.Seconds));\r\n          }\r\n        }\r\n        Console.WriteLine(\"Done.\");\r\n      }\r\n    }\r\n\r\n    private static void Main() {\r\n      ModelBuilder.Run();\r\n\r\n      var testDataset = @\"H:/HedgeTools/Datasets/rocket-test-classify.csv\";\r\n      Verify.Model(trainedModelPath, testDataset);\r\n      Console.WriteLine(\"Done.\");\r\n      Console.ReadKey();\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\n```\r\n\r\nAny suggestions or help will be greatly appreciated.\r\nCharles\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5318","RelatedDescription":"Closed issue \"Transformers and AutoML\" (#5318)"},{"Id":"664709250","IsPullRequest":false,"CreatedAt":"2020-07-23T19:18:24","Actor":"crazyoutlook","Number":"5322","RawContent":null,"Title":"ML.Net Invalid GraphDef - Object Detection Model","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10 Pro\r\n- **.NET Version (eg., dotnet --info)**: dotnet framework 4.7\r\n\r\n### Issue\r\n\r\nWe are working on how to consume the tensorflow model in .Net using ML.NET. We are using below tutorial as reference :\r\n\r\nTutorial Link : https://docs.microsoft.com/en-us/dotnet/machine-learning/tutorials/image-classification\r\n\r\nWe tested with model that is used in the Tutorial and it worked fine. But, when we replace tutorial model with our tensorflow model (object detection model which we have exported from Azure Custom Vision), it is throwing an Exception saying ‘Invalid GraphDef’, while loading the tensor flow model. The same custom vision model works fine when consumed in Python code.\r\n\r\n### Source code / logs\r\n\r\nDetails:\r\n\r\nProject Name : TransferLearningTF \r\nClass name : program.cs \r\nMethod Name : GenerateModel \r\n\r\nCode : \r\nIEstimator<ITransformer> pipeline = mlContext.Transforms.LoadImages(outputColumnName: \"input\", imageFolder: _imagesFolder, inputColumnName: nameof(ImageData.ImagePath))\r\n                                                                                              .Append(mlContext.Model.LoadTensorFlowModel(_inceptionTensorFlowModel)\r\n                                                                                                                .ScoreTensorFlowModel(outputColumnNames: new[] { \"softmax2_pre_activation\" }, inputColumnNames: new[] { \"input\" }, addBatchDimensionInput: true))\r\n\r\nException Details : \r\n\r\nException Message : Tensorflow exception triggered while loading model\r\nSource : Microsoft.ML.TensorFlow\r\nStacktrace :  \r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.GetSession(IHostEnvironment env, String modelPath, Boolean metaGraph)\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTensorFlowModel(IHostEnvironment env, String modelPath)\r\n   at Microsoft.ML.TensorflowCatalog.LoadTensorFlowModel(ModelOperationsCatalog catalog, String modelLocation)\r\n   at PredictionModel.Program.GenerateModel(MLContext mlContext) in D:\\Cognitive-Samples-VideoFrameAnalysis-master\\Windows\\PredictionModel\\Program.cs:line 35\r\n   at PredictionModel.Program.Main(String[] args) in D:\\Cognitive-Samples-VideoFrameAnalysis-master\\Windows\\PredictionModel\\Program.cs:line 22\r\n\r\nInner Exception:\r\n\r\nException  Message  : Invalid GraphDef\r\nSource :  TensorFlow.NET\r\nStack trace : \r\n   at Tensorflow.Status.Check(Boolean throwException)\r\n   at Tensorflow.Graph.Import(Byte[] bytes, String prefix)\r\n   at Tensorflow.Graph.Import(String file_path, String prefix)\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.LoadTFSessionByModelFilePath(IExceptionContext ectx, String modelFile, Boolean metaGraph)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5322","RelatedDescription":"Open issue \"ML.Net Invalid GraphDef - Object Detection Model\" (#5322)"},{"Id":"662794188","IsPullRequest":false,"CreatedAt":"2020-07-22T21:08:17","Actor":"klesouza","Number":"5315","RawContent":null,"Title":"Load native LightGBM exported text file","State":"closed","Body":"### Issue\r\n\r\n- I would like to be able to load a LightGBM model exported from the native library in text format directly in ML.NET LightGBM implementation.\r\n\r\nI noticed there are bindings to the save method here https://github.com/dotnet/machinelearning/blob/8631afaaaa60daa1bda734dc79d92433591f7917/src/Microsoft.ML.LightGbm/WrappedLightGbmInterface.cs#L190, but couldn't find a way to load the text file\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5315","RelatedDescription":"Closed issue \"Load native LightGBM exported text file\" (#5315)"},{"Id":"663994500","IsPullRequest":false,"CreatedAt":"2020-07-22T19:23:02","Actor":"vffuunnyy","Number":"5320","RawContent":null,"Title":"The input string was not formatted correctly","State":"open","Body":"Model Builder Error\r\n\r\nVisual studio 2019 last version\r\nML.NET last version\r\nwindows 8.1 x64\r\ninput data: https://yadi.sk/d/dOH4eg9ojMV4gA\r\nTraining stops after this log line:\r\n`|63   OlsRegression                         0,0000          5,55       428,48    20,70      55,0         63      |`\r\n\r\ntrace:\r\n```\r\nв System.Number.ParseSingle(String value, NumberStyles options, NumberFormatInfo numfmt)\r\n   в Microsoft.ML.AutoML.SweeperProbabilityUtils.ParameterSetAsFloatArray(IValueGenerator[] sweepParams, ParameterSet ps, Boolean expandCategoricals)\r\n   в Microsoft.ML.AutoML.SmacSweeper.FitModel(IEnumerable`1 previousRuns)\r\n   в Microsoft.ML.AutoML.SmacSweeper.ProposeSweeps(Int32 maxSweeps, IEnumerable`1 previousRuns)\r\n   в Microsoft.ML.AutoML.PipelineSuggester.SampleHyperparameters(MLContext context, SuggestedTrainer trainer, IEnumerable`1 history, Boolean isMaximizingMetric)\r\n   в Microsoft.ML.AutoML.PipelineSuggester.GetNextInferredPipeline(MLContext context, IEnumerable`1 history, DatasetColumnInfo[] columns, TaskKind task, Boolean isMaximizingMetric, CacheBeforeTrainer cacheBeforeTrainer, IEnumerable`1 trainerWhitelist)\r\n   в Microsoft.ML.AutoML.Experiment`2.Execute()\r\n   в Microsoft.ML.AutoML.ExperimentBase`2.Execute(ColumnInformation columnInfo, DatasetColumnInfo[] columns, IEstimator`1 preFeaturizer, IProgress`1 progressHandler, IRunner`1 runner)\r\n   в Microsoft.ML.AutoML.ExperimentBase`2.Execute(IDataView trainData, ColumnInformation columnInformation, IEstimator`1 preFeaturizer, IProgress`1 progressHandler)\r\n   в Microsoft.ML.ModelBuilder.AutoMLService.Experiments.AutoMLExperiment`3.<>c__DisplayClass21_0.<ExecuteAsync>b__5() в /_/src/Microsoft.ML.ModelBuilder.AutoMLService/Experiments/AutoMLExperiment.cs:строка 81\r\n   в System.Threading.Tasks.Task`1.InnerInvoke()\r\n   в System.Threading.Tasks.Task.Execute()\r\n--- Конец трассировка стека из предыдущего расположения, где возникло исключение ---\r\n   в System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   в System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   в Microsoft.ML.ModelBuilder.AutoMLService.Experiments.AutoMLExperiment`3.<ExecuteAsync>d__21.MoveNext() в /_/src/Microsoft.ML.ModelBuilder.AutoMLService/Experiments/AutoMLExperiment.cs:строка 108\r\n--- Конец трассировка стека из предыдущего расположения, где возникло исключение ---\r\n   в System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   в System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   в Microsoft.ML.ModelBuilder.AutoMLEngine.<StartTrainingAsync>d__30.MoveNext() в /_/src/Microsoft.ML.ModelBuilder.AutoMLService/AutoMLEngineService/AutoMLEngine.cs:строка 147\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/5320","RelatedDescription":"Open issue \"The input string was not formatted correctly\" (#5320)"},{"Id":"663354166","IsPullRequest":false,"CreatedAt":"2020-07-21T22:57:32","Actor":"JuanJimenezR","Number":"5317","RawContent":null,"Title":"Solicitud de guía para re-entrenar un modelo ya entrenado","State":"closed","Body":"### System information\r\nNA\r\n### Issue\r\n\r\nEstoy logrando con éxito incluir y utilizar el código de uso para mi modelo con el ML builder.\r\n\r\nBusco por cargar un modelo ya entrenado, y volverlo a entrenar con un  adicional conjunto de datos (a fin que el aprendizaje de mi modelo sea escalable sobre lo que ya había aprendido).\r\n\r\nEl código generado por el ML builder,  cargar el modelo y entrena uno NUEVO para el conjunto de datos nuevo, remplazando el que ya existía, esto no me permite continuar \"aprendiendo\" sobre mi modelo previamente entrenado.\r\n\r\nLas documentaciones que encuentro me dirigen al anterior workflow.\r\n\r\nPueden por favor indicarme alguna guía para implementar el work flow deseado:\r\nCargar modelo local ya entrenado.\r\nllamar al entrenador para que entre más el modelo con nuevos datos.\r\nevaluar y guardar localmente el modelo.\r\n\r\nMuchas Gracias!\r\n \r\n\r\n\r\n ","Url":"https://github.com/dotnet/machinelearning/issues/5317","RelatedDescription":"Closed issue \"Solicitud de guía para re-entrenar un modelo ya entrenado\" (#5317)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-08-12T05:30:37.1714262Z","RunDurationInMilliseconds":728}