{"Data":{"GitHub":{"Issues":[{"Id":"1227030426","IsPullRequest":true,"CreatedAt":"2022-05-05T18:26:25","Actor":"LittleLittleCloud","Number":"6187","RawContent":null,"Title":"add auto featurizer api","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\nThis PR includes API for auto featurizer\r\n\r\nusage\r\n```csharp\r\n// data, context\r\n\r\n// infer column information from data\r\nvar pipeline = context.Auto().Featurizer(data, excludeColumnNames: new[] {\"Label\"})\r\n                      .Append(context.Auto().BinaryClassification(\"Label\");\r\n\r\n// using auto().InferColumns\r\nvar columnInfo = context.Auto().InferColumn(data);\r\nvar pipeline = context.Auto().Featurizer(columnInfo.Columns, excludeColumnNames: new[]{\"Label\"})\r\n...\r\n```","Url":"https://github.com/dotnet/machinelearning/pull/6187","RelatedDescription":"Open PR \"add auto featurizer api\" (#6187)"},{"Id":"1226801815","IsPullRequest":false,"CreatedAt":"2022-05-05T15:06:05","Actor":"nhirschey","Number":"6186","RawContent":null,"Title":"Corrupted memory and null reference crash with FastTree.FeatureHistogram","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11 x64, [Version 10.0.22000.613]\r\n - ML.NET Version: 1.7.1\r\n - .NET Version: 6.0.202\r\n - CPU is AMD\r\n\r\n**Describe the bug**\r\nI'm somewhat randomly having ML.NET crash on me. I can have a script/notebook work fine. Then I run it later in the day and it crashes. It seems to happen with `BinaryClassification.CrossValidate` using `FastTree` models. \r\n\r\nHave you seen something like this? I'm including reproduction code and some screenshots of the errors (they're hard to capture because the terminal sometimes crashes too). I can sit here and run the code, have it be fine. Then close terminal, try running it again and have it crash. Perhaps it's my hardware, but I thought I'd check.\r\n\r\nI'm running this in VSCode on the integrated terminal. I'm also using `gcServer=true` for garbage collection settings if that matters.\r\n\r\n**To Reproduce**\r\nHere's a [gist](https://gist.github.com/nhirschey/bbf4b7344f42921130b6848f3a6b0196) with code that reproduces this on my machine. \r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots, Code, Sample Projects**\r\n### Null reference exception, this is the most common.\r\n<img width=\"755\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5226115/166947931-c01e1f6c-fabe-49b6-8ef8-79f5dddb3d62.png\">\r\n\r\n### Memory corruption, I've also seen this\r\n![image](https://user-images.githubusercontent.com/5226115/166948095-bcfeb2b0-27ac-4a3d-a80f-afb837d52935.png)\r\n\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6186","RelatedDescription":"Open issue \"Corrupted memory and null reference crash with FastTree.FeatureHistogram\" (#6186)"},{"Id":"1226008917","IsPullRequest":true,"CreatedAt":"2022-05-04T21:57:47","Actor":"LittleLittleCloud","Number":"6185","RawContent":null,"Title":"add nest option","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\nThis PR adds nest option to `Microsoft.ML.SearchSpace`\r\n\r\nA nest option is an option that can include other options like choice, range, booleanChoice and nest itself.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6185","RelatedDescription":"Open PR \"add nest option\" (#6185)"},{"Id":"1224356632","IsPullRequest":false,"CreatedAt":"2022-05-03T16:57:14","Actor":"torronen","Number":"6184","RawContent":null,"Title":"DataFrame.LoadCsv: Specific method is not supported","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version:  ML.NET v1.6.0\r\n - .NET Version: NET 6.0\r\n\r\n**Describe the bug**\r\nI received  Specific method is not supported after trying to fit with data read with DataFrame.LoadCsv\r\n\r\n\r\n```\r\nSpecified method is not supported.\r\n   at Microsoft.Data.Analysis.PrimitiveDataFrameColumn`1.GetDataViewType()\r\n   at Microsoft.Data.Analysis.PrimitiveDataFrameColumn`1.AddDataViewColumn(Builder builder)\r\n   at Microsoft.Data.Analysis.DataFrame.get_DataViewSchema()\r\n   at Microsoft.Data.Analysis.DataFrame.Microsoft.ML.IDataView.get_Schema()\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at WebRanking.Program.Main(String[] args) in L:\\machinelearning-samples-main\\samples\\csharp\\getting-started\\Ranking_Web\\WebRanking\\Program.cs:line 78\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Download sample [machinelearning-samples\\samples\\csharp\\getting-started\\Ranking_Web\\WebRanking\\](https://github.com/dotnet/machinelearning-samples/tree/e8ce65961377e09ebe297cb3a2d609cd76f788db/samples/csharp/getting-started/Ranking_Web/WebRanking)\r\n2. Change Loading of data to use DataFrame.LoadCsv\r\n3. Observe the mentioned error when the schema is queried to get list of columns for Features. If you fix this error, then the same error happens in pipeline.Fit()\r\n\r\n**Expected behavior**\r\nTraining should complete\r\n\r\n**Additional data**\r\nI am using DataFrame.LoadCsv so that I do not need to provide a class with 2900 properties, as per the sample, because my data has many more features\r\nhttps://github.com/dotnet/machinelearning-samples/blob/e8ce65961377e09ebe297cb3a2d609cd76f788db/samples/csharp/getting-started/Ranking_Web/WebRanking/Program.cs#L37\r\n\r\nI tried to use Model Builder to generate said class for reading the data but it is missing LoadColumn annotation so  mlContext.Data.LoadFromTextFile<ModelInput> does not work\r\n\r\n**Workaround**\r\nI am reading from IDV file to make it work for now. TextLoader could probably work, too.\r\nIDataView trainData = mlContext.Data.LoadFromBinary(TrainDatasetPath + \".idv\");\r\n\r\nI can continue with these method in this task, but I would like to understand better why the exception is happening.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6184","RelatedDescription":"Open issue \"DataFrame.LoadCsv: Specific method is not supported\" (#6184)"},{"Id":"1224201134","IsPullRequest":false,"CreatedAt":"2022-05-03T14:44:42","Actor":"anat-gilenson","Number":"6183","RawContent":null,"Title":"ApplyOnnxModel with model as byte stream instead of local file","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nI wouldn't like to save files on my service's disk but providing a file name for an ONNX model is currently the only option when I need to load it. Instead, I would like to save the model in a remote source.\r\n\r\n**Describe the solution you'd like**\r\nI'd like to read the ONNX model from a remote source and pass it to `ApplyOnnxModel` as a byte stream/array instead of providing a local model file name. I see `InferenceSession` of `OnnxRuntime` is used for ONNX model loading and it provides a constructor which takes in a byte array as the model. Seems like this constructor could be used to achieve my need.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6183","RelatedDescription":"Open issue \"ApplyOnnxModel with model as byte stream instead of local file\" (#6183)"},{"Id":"1223896871","IsPullRequest":false,"CreatedAt":"2022-05-03T09:56:46","Actor":"torronen","Number":"6182","RawContent":null,"Title":"DataFrame.LoadCsv can not load CSV with duplicate column names","State":"open","Body":"Code:\r\nIDataView trainData = DataFrame.LoadCsv(TrainDatasetPath, separator: ';', header: true, guessRows: 100);\r\n\r\nGives exception:\r\nDataFrame already contains a column called Target20 (Parameter 'column')\r\n\r\nSuggestion:\r\nIt would be nice if LoadCsv would have the option to ignore or auto-rename duplicate columns. \r\nFor small CSV files it is not a big problem, but for huge CSV files renaming headers is a hassle.","Url":"https://github.com/dotnet/machinelearning/issues/6182","RelatedDescription":"Open issue \"DataFrame.LoadCsv can not load CSV with duplicate column names\" (#6182)"},{"Id":"1222648941","IsPullRequest":false,"CreatedAt":"2022-05-03T05:10:07","Actor":"zhangfeibao","Number":"6178","RawContent":null,"Title":"code generator for embedded C.","State":"closed","Body":"I am a coder for embedded device([Microcomputer：Arm Contex M）.\r\nI found the ML.NET is amazing tool and easy to use in my PC.If it can be deplyed on some MCU will make it better.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6178","RelatedDescription":"Closed issue \"code generator for embedded C.\" (#6178)"},{"Id":"1223694621","IsPullRequest":true,"CreatedAt":"2022-05-03T05:00:44","Actor":"jeffhandley","Number":"6181","RawContent":null,"Title":"Update the \"PR Needs Champion\" tasks to address a bug found during testing","State":"open","Body":"New PRs by pod members weren't landing directly in the pod member's column. The logic for new and updated PRs needed to be split into separate tasks.","Url":"https://github.com/dotnet/machinelearning/pull/6181","RelatedDescription":"Open PR \"Update the \"PR Needs Champion\" tasks to address a bug found during testing\" (#6181)"},{"Id":"1222826453","IsPullRequest":true,"CreatedAt":"2022-05-03T00:12:05","Actor":"dotnet-maestro[bot]","Number":"6179","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 97926d79-6b8b-4d32-c8db-08d9d479971c\r\n- **Build**: 20220425.6\r\n- **Date Produced**: April 25, 2022 11:53:21 PM UTC\r\n- **Commit**: 5145e86df0c491e082b589aa31d69eea300adc02\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 7.0.0-beta.22222.4 to 7.0.0-beta.22225.6][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22222.4 to 7.0.0-beta.22225.6][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.22222.4 to 7.0.0-beta.22225.6][1]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 7.0.0-beta.22222.4 to 7.0.0-beta.22225.6][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 7.0.0-beta.22222.4 to 7.0.0-beta.22225.6][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22222.4 to 7.0.0-beta.22225.6][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/5f04b60...5145e86\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6179","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6179)"},{"Id":"1223467810","IsPullRequest":true,"CreatedAt":"2022-05-02T23:39:30","Actor":"michaelgsharp","Number":"6180","RawContent":null,"Title":"Using internal TempFilePath","State":"open","Body":"Using `IHostInternal.TempFilePath` when possible when using the `RepositoryWriter`. This will use the location set by the user when possible. Fixes #6170","Url":"https://github.com/dotnet/machinelearning/pull/6180","RelatedDescription":"Open PR \"Using internal TempFilePath\" (#6180)"},{"Id":"1221657311","IsPullRequest":true,"CreatedAt":"2022-05-02T23:29:24","Actor":"jeffhandley","Number":"6177","RawContent":null,"Title":"Regenerate fabricbot config to include several new automation tasks","State":"closed","Body":"The `fabricbot.json` config file is generated from https://github.com/dotnet/fabricbot-config. Here are the configuration tasks that are included for this repository:\r\n\r\n1. [trackUntriaged](https://github.com/dotnet/fabricbot-config/blob/main/src/issueAndPullRequestTasks/trackUntriaged.js)\r\n    1. Add `untriaged` label to new/reopened issues without a milestone (or when the milestone is removed)\r\n    1. Remove `untriaged` label from issues when closed or added to a milestone\r\n1. [addInPrLabel](https://github.com/dotnet/fabricbot-config/blob/main/src/issueAndPullRequestTasks/addInPrLabel.js)\r\n    1. Add `in-pr` label on the issue when a pull request is opened to target it\r\n1. [assignTeamAuthor](https://github.com/dotnet/fabricbot-config/blob/main/src/issueAndPullRequestTasks/assignTeamAuthor.js)\r\n    1. Assign Team PRs to author when the PR is opened\r\n1. [addCommunityContributionLabel](https://github.com/dotnet/fabricbot-config/blob/main/src/issueAndPullRequestTasks/addCommunityContributionLabel.js)\r\n    1. Add `community-contribution` label to pull requests created by users that don't have admin, maintain, or write permissions (and the common bot accounts are excluded too)\r\n1. [trackNeedsAuthorAction](https://github.com/dotnet/fabricbot-config/blob/main/src/issueAndPullRequestTasks/trackNeedsAuthorAction.js)\r\n    1. Add a reply when the `needs-author-action` label is applied\r\n    1. Apply the `needs-author-action` label when changes are requested on a PR (by a triager or team member)\r\n    1. Replace `needs-author-action` with `needs-further-triage` when the author comments on an issue\r\n    1. Remove the `needs-author-action` label when changes are pushed to the PR \r\n    1. Remove the `needs-author-action` label when the author comments on the PR\r\n    1. Remove the `needs-author-action` label when the author response to a review comment\r\n1. [trackNoRecentActivity](https://github.com/dotnet/fabricbot-config/blob/main/src/issueAndPullRequestTasks/trackNoRecentActivity.js)\r\n    1. Add `no-recent-activity` label to issues with `needs-author-action` and no activity for 14 days (via a scheduled search)\r\n    1. Add `no-recent-activity` label to PRs with `needs-author-action` and no activity for 14 days (via a scheduled search)\r\n    1. Remove `no-recent-activity` label from issues when the issue is modified\r\n    1. Remove `no-recent-activity` label from issues when the issue is commented on\r\n    1. Remove `no-recent-activity` label from PRs when the PR is modified\r\n    1. Remove `no-recent-activity` label from PRs when the PR is commented on\r\n    1. Remove `no-recent-activity` label from PRs when the PR has a new review added\r\n    1. Close issues that go an additional 14 days with no activity after having `no-recent-activity` added\r\n    1. Close PRs that go an additional 14 days with no activity after having `no-recent-activity` added\r\n1. [trackInactiveDrafts](https://github.com/dotnet/fabricbot-config/blob/main/src/issueAndPullRequestTasks/trackInactiveDrafts.js)\r\n    1. Close inactive Draft PRs after 30 days of inactivity (via a scheduled search)\r\n1. [trackStaleIssuesAndPullRequests](https://github.com/dotnet/fabricbot-config/blob/main/src/issueAndPullRequestTasks/trackStaleIssuesAndPullRequests.js)\r\n    1. Lock issues and PRs after being closed and going 30 days with no activity (via a scheduled search)\r\n1. Area Pod issue triage project board automation\r\n    1. [issueNeedsTriage](https://github.com/dotnet/fabricbot-config/blob/main/src/projectBoardTasks/issueNeedsTriage.js)\r\n        * Add issues to the \"Needs Triage\" column when opened/reopened, no milestone is set, the area is included in the pod, and the issue isn't already on the board, or the issue was previously moved to \"Triaged\"\r\n    1. [issueTriageStarted](https://github.com/dotnet/fabricbot-config/blob/main/src/projectBoardTasks/issueTriageStarted.js)\r\n        * Move issues from \"Needs Triage\" into a pod member's column when that pod member edits or comments on an issue\r\n    1. [issueTriaged](https://github.com/dotnet/fabricbot-config/blob/main/src/projectBoardTasks/issueTriaged.js)\r\n        * Move issues into \"Triaged\" when a milestone is applied, the issue is closed, or when the `needs-author-action` label is added\r\n    1. [issueMovedToAnotherArea](https://github.com/dotnet/fabricbot-config/blob/main/src/projectBoardTasks/issueMovedToAnotherArea.js)\r\n        * Move issues into \"Triaged\" when the area label is changed to another pod's area\r\n    1. [issueNeedsFurtherTriage](https://github.com/dotnet/fabricbot-config/blob/main/src/projectBoardTasks/issueNeedsFurtherTriage.js)\r\n        * Move issues from \"Triaged\" to \"Needs Triage\" when a community member (without triage permission) comments on the issue\r\n1. Area Pod PR project board automation\r\n    1. [pullRequestNeedsChampion](https://github.com/dotnet/fabricbot-config/blob/main/src/projectBoardTasks/pullRequestNeedsChampion.js)\r\n        * Add PRs to the \"Needs Champion\" column when opened/reopened, no pod member is assigned, the area is included in the pod, and the PR isn't already on the board, or the PR was previously moved to \"Done\"\r\n    1. [pullRequestChampionAssigned](https://github.com/dotnet/fabricbot-config/blob/main/src/projectBoardTasks/pullRequestChampionAssigned.js)\r\n        * Move PRs from \"Needs Champion\" into a pod member's column when that pod member is assigned, or if the pod member themselves submitted the PR (bypassing the \"Needs Champion\" column), and the PR has one of the pod's area labels\r\n    1. [pullRequestDone](https://github.com/dotnet/fabricbot-config/blob/main/src/projectBoardTasks/pullRequestDone.js)\r\n        * Move PRs to the \"Done\" column when merged, closed without merge, or it was moved to another pod's area\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6177","RelatedDescription":"Closed or merged PR \"Regenerate fabricbot config to include several new automation tasks\" (#6177)"},{"Id":"1221505342","IsPullRequest":true,"CreatedAt":"2022-04-29T20:42:20","Actor":"LittleLittleCloud","Number":"6176","RawContent":null,"Title":"add grid search test in AutoML.Net","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6176","RelatedDescription":"Open PR \"add grid search test in AutoML.Net\" (#6176)"},{"Id":"1214435702","IsPullRequest":true,"CreatedAt":"2022-04-28T14:01:18","Actor":"dotnet-maestro[bot]","Number":"6171","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 97926d79-6b8b-4d32-c8db-08d9d479971c\r\n- **Build**: 20220422.4\r\n- **Date Produced**: April 22, 2022 7:18:50 PM UTC\r\n- **Commit**: 5f04b602a86b74f6cdd12f48aca2d1868e6425f3\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 7.0.0-beta.22215.2 to 7.0.0-beta.22222.4][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22215.2 to 7.0.0-beta.22222.4][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.22215.2 to 7.0.0-beta.22222.4][1]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 7.0.0-beta.22215.2 to 7.0.0-beta.22222.4][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 7.0.0-beta.22215.2 to 7.0.0-beta.22222.4][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22215.2 to 7.0.0-beta.22222.4][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/4000024...5f04b60\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6171","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6171)"},{"Id":"1216836394","IsPullRequest":false,"CreatedAt":"2022-04-27T05:58:08","Actor":"torronen","Number":"6175","RawContent":null,"Title":"OOM errors in FastTree","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: ML.NET v1.5.5\r\n - .NET Version: NET6.0\r\n\r\n**Describe the bug**\r\nOut-of-memory errors on FastTree. There is still virtual (paging) memory available, but RAM is full. Maybe there is something that could be done to more effectively use virtual memory? Strangely, one of the 128 Gb Ryzens is running FastTree on this dataset, while 4 similar failed with various OOM errors so I am able to run the training, just a bit slower.\r\n\r\nDataset: 112 Gb IDV file,  369 Gb CSV file\r\nRAM: 128 gb\r\nIt is one file, with sampling key.\r\n\r\nThe one working has about 145 Gb virtual memory, system managed. Other's have 500 - 1000 gb fixed sized files in Windows advanced settings.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create big dataset\r\n2. Create IDV file\r\n3. Run AutoML experiments with IDV file\r\n\r\n**Expected behavior**\r\nFastTree might be able to use the paging file. \r\nOr, maybe, we could optionally stop data loading near OOM point and then use it for training.\r\n\r\n**Additional context**\r\n```\r\nException during AutoML iteration: System.OutOfMemoryException: Exception of type 'System.OutOfMemoryException' was thrown.\r\n   at System.Collections.Generic.List`1.set_Capacity(Int32 value)\r\n   at System.Collections.Generic.List`1.AddWithResize(T item)\r\n   at Microsoft.ML.Trainers.FastTree.DataConverter.ValuesList.Add(Int32 index, Double value) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.FastTree\\FastTree.cs:line 2387\r\n   at Microsoft.ML.Trainers.FastTree.DataConverter.MemImpl.MakeBoundariesAndCheckLabels(Int64& missingInstances, Int64& totalInstances) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.FastTree\\FastTree.cs:line 1865\r\n   at Microsoft.ML.Trainers.FastTree.DataConverter.MemImpl..ctor(RoleMappedData data, IHost host, Double[][] binUpperBounds, Single maxLabel, Boolean dummy, Boolean noFlocks, PredictionKind kind, Int32[] categoricalFeatureIndices, Boolean categoricalSplit) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.FastTree\\FastTree.cs:line 1765\r\n   at Microsoft.ML.Trainers.FastTree.DataConverter.MemImpl..ctor(RoleMappedData data, IHost host, Int32 maxBins, Single maxLabel, Boolean noFlocks, Int32 minDocsPerLeaf, PredictionKind kind, IParallelTraining parallelTraining, Int32[] categoricalFeatureIndices, Boolean categoricalSplit) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.FastTree\\FastTree.cs:line 1773\r\n   at Microsoft.ML.Trainers.FastTree.DataConverter.Create(RoleMappedData data, IHost host, Int32 maxBins, Single maxLabel, Boolean diskTranspose, Boolean noFlocks, Int32 minDocsPerLeaf, PredictionKind kind, IParallelTraining parallelTraining, Int32[] categoricalFeatureIndices, Boolean categoricalSplit) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.FastTree\\FastTree.cs:line 956\r\n   at Microsoft.ML.Trainers.FastTree.ExamplesToFastTreeBins.FindBinsAndReturnDataset(RoleMappedData data, PredictionKind kind, IParallelTraining parallelTraining, Int32[] categoricalFeaturIndices, Boolean categoricalSplit) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.FastTree\\FastTree.cs:line 2740\r\n   at Microsoft.ML.Trainers.FastTree.FastTreeTrainerBase`3.ConvertData(RoleMappedData trainData) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.FastTree\\FastTree.cs:line 194\r\n   at Microsoft.ML.Trainers.FastTree.FastTreeBinaryTrainer.TrainModelCore(TrainContext context) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.FastTree\\FastTreeClassification.cs:line 198\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\Training\\TrainerEstimatorBase.cs:line 157\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.Fit(IDataView input) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\Training\\TrainerEstimatorBase.cs:line 77\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\DataLoadSave\\EstimatorChain.cs:line 68\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String groupId, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.AutoML\\Experiment\\Runners\\RunnerUtil.cs:line 29\r\n```\r\n1 models were returned after 3516.55 seconds\r\n\r\n\r\n```\r\nSystem.OutOfMemoryException: Exception of type 'System.OutOfMemoryException' was thrown.\r\n   at System.Threading.Thread.StartInternal(ThreadHandle t, Int32 stackSize, Int32 priority, Char* pThreadName)\r\n   at System.Threading.Thread.StartCore()\r\n   at Microsoft.ML.Internal.Utilities.Utils.ImmediateBackgroundThreadPool.<QueueAsync>g__Enqueue|5_1(ValueTuple`3 item) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Core\\Utilities\\ThreadUtils.cs:line 121\r\n   at Microsoft.ML.Data.DataViewUtils.Splitter.ConsolidateCore(IChannelProvider provider, DataViewRowCursor[] inputs, Object[]& ourPools, IChannel ch) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\Data\\DataViewUtils.cs:line 376\r\n   at Microsoft.ML.Data.DataViewUtils.Splitter.Consolidate(IChannelProvider provider, DataViewRowCursor[] inputs, Int32 batchSize, Object[]& ourPools) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\Data\\DataViewUtils.cs:line 328\r\n   at Microsoft.ML.Data.DataViewUtils.ConsolidateGeneric(IChannelProvider provider, DataViewRowCursor[] inputs, Int32 batchSize) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\Data\\DataViewUtils.cs:line 260\r\n   at Microsoft.ML.Data.DataViewUtils.TryCreateConsolidatingCursor(DataViewRowCursor& curs, IDataView view, IEnumerable`1 columnsNeeded, IHost host, Random rand) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\Data\\DataViewUtils.cs:line 116\r\n   at Microsoft.ML.Data.TransformBase.GetRowCursor(IEnumerable`1 columnsNeeded, Random rand) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\Transforms\\TransformBase.cs:line 85\r\n   at Microsoft.ML.Transforms.ColumnSelectingTransformer.SelectColumnsDataTransform.GetRowCursor(IEnumerable`1 columnsNeeded, Random rand) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\Transforms\\ColumnSelecting.cs:line 689\r\n   at Microsoft.ML.AutoML.DatasetDimensionsUtil.CountRows(IDataView data, UInt64 maxRows) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.AutoML\\DatasetDimensions\\DatasetDimensionsUtil.cs:line 69\r\n   at Microsoft.ML.AutoML.UserInputValidationUtil.ValidateTrainData(IDataView trainData, ColumnInformation columnInformation) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.AutoML\\Utils\\UserInputValidationUtil.cs:line 71\r\n   at Microsoft.ML.AutoML.UserInputValidationUtil.ValidateExperimentExecuteArgs(IDataView trainData, ColumnInformation columnInformation, IDataView validationData, TaskKind task) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.AutoML\\Utils\\UserInputValidationUtil.cs:line 31\r\n   at Microsoft.ML.AutoML.ExperimentBase`2.ExecuteTrainValidate(IDataView trainData, ColumnInformation columnInfo, IDataView validationData, IEstimator`1 preFeaturizer, IProgress`1 progressHandler) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.AutoML\\API\\ExperimentBase.cs:line 280\r\n   at Microsoft.ML.AutoML.ExperimentBase`2.Execute(IDataView trainData, IDataView validationData, ColumnInformation columnInformation, IEstimator`1 preFeaturizer, IProgress`1 progressHandler) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.AutoML\\API\\ExperimentBase.cs:line 196\r\n   at Kwork.AI.AutoML.Experiment.RunAutoMLExperiment(MLContext mlContext, ColumnInferenceResults columnInference, String logFile, BinaryClassificationTrainer trainer, Int32 timeToTrain) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src-AutoML-Runner\\Kwork.AI.AutoML.Runner\\Experiment.cs:line 1632\r\n   at Kwork.AI.AutoML.Experiment.RunExperiment(String dataset, BinaryClassificationTrainer trainer, Int32 timeToTrain, String experimentLogPath, String allSummaryLogPath, String preselectedLabel, Nullable`1 optimizationMetric) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src-AutoML-Runner\\Kwork.AI.AutoML.Runner\\Experiment.cs:line 1088\r\nException of type 'System.OutOfMemoryException' was thrown.\r\n```\r\n\r\n\r\nThe below one is something like \"Too few virtual address resources to complete the operation\" - sorry I do not have the error in English.\r\n```\r\nSystem.InvalidOperationException: Exception thrown in reading\r\n ---> System.IO.IOException: Liian vähän virtuaalisia osoiteresursseja toiminnon suorittamiseen loppuun. : 'C:\\temp\\data.csv.idv'\r\n   at System.IO.Strategies.OSFileStreamStrategy.Read(Byte[] buffer, Int32 offset, Int32 count)\r\n   at System.IO.Strategies.BufferedFileStreamStrategy.ReadSpan(Span`1 destination, ArraySegment`1 arraySegment)\r\n   at System.IO.FileStream.Read(Byte[] buffer, Int32 offset, Int32 count)\r\n   at Microsoft.ML.Internal.Utilities.Utils.ReadBlock(Stream s, Byte[] buff, Int32 offset, Int32 length) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Core\\Utilities\\Stream.cs:line 883\r\n   at Microsoft.ML.Data.IO.BinaryLoader.Cursor.ReadPipe`1.PrepAndSendCompressedBlock(Int64 blockIndex, Int64 blockSequence, Int32 rowCount) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\DataLoadSave\\Binary\\BinaryLoader.cs:line 1821\r\n   at Microsoft.ML.Data.IO.BinaryLoader.Cursor.ReaderWorker() in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\DataLoadSave\\Binary\\BinaryLoader.cs:line 1426\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.ML.Internal.Utilities.ExceptionMarshaller.ThrowIfSet(IExceptionContext ectx) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Core\\Utilities\\ThreadUtils.cs:line 240\r\n   at Microsoft.ML.Data.IO.BinaryLoader.Cursor.MoveNextCore() in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\DataLoadSave\\Binary\\BinaryLoader.cs:line 2001\r\n   at Microsoft.ML.Data.RootCursorBase.MoveNext() in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Core\\Data\\RootCursorBase.cs:line 72\r\n   at Microsoft.ML.Transforms.NormalizingTransformer.Train(IHostEnvironment env, IDataView data, ColumnOptionsBase[] columns) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\Transforms\\Normalizer.cs:line 570\r\n   at Microsoft.ML.Transforms.NormalizingEstimator.Fit(IDataView input) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\Transforms\\Normalizer.cs:line 332\r\n   at Microsoft.ML.DataOperationsCatalog.CreateSplitColumn(IHostEnvironment env, IDataView& data, String samplingKeyColumn, Nullable`1 seed, Boolean fallbackInEnvSeed) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\DataLoadSave\\DataOperationsCatalog.cs:line 584\r\n   at Microsoft.ML.DataOperationsCatalog.TrainTestSplit(IDataView data, Double testFraction, String samplingKeyColumnName, Nullable`1 seed) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\DataLoadSave\\DataOperationsCatalog.cs:line 417\r\n   at Kwork.AI.AutoML.Experiment.RunAutoMLExperiment(MLContext mlContext, ColumnInferenceResults columnInference, String logFile, BinaryClassificationTrainer trainer, Int32 timeToTrain) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src-AutoML-Runner\\Kwork.AI.AutoML.Runner\\Experiment.cs:line 1629\r\n   at Kwork.AI.AutoML.Experiment.RunExperiment(String dataset, BinaryClassificationTrainer trainer, Int32 timeToTrain, String experimentLogPath, String allSummaryLogPath, String preselectedLabel, Nullable`1 optimizationMetric) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src-AutoML-Runner\\Kwork.AI.AutoML.Runner\\Experiment.cs:line 1088\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/6175","RelatedDescription":"Open issue \"OOM errors in FastTree\" (#6175)"},{"Id":"1216628448","IsPullRequest":true,"CreatedAt":"2022-04-27T02:35:21","Actor":"michaelgsharp","Number":"6174","RawContent":null,"Title":"Updating codecov to newer vm","State":"closed","Body":"windows 2017 is now supposed to be deprecated. updating codecov build to be on newer vm.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6174","RelatedDescription":"Closed or merged PR \"Updating codecov to newer vm\" (#6174)"},{"Id":"1215045995","IsPullRequest":true,"CreatedAt":"2022-04-27T02:10:41","Actor":"LittleLittleCloud","Number":"6173","RawContent":null,"Title":"make AutoMLExperiment public && some small refactor","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6173","RelatedDescription":"Closed or merged PR \"make AutoMLExperiment public && some small refactor\" (#6173)"},{"Id":"1215041220","IsPullRequest":true,"CreatedAt":"2022-04-25T21:06:28","Actor":"LittleLittleCloud","Number":"6172","RawContent":null,"Title":"make AutoMLExperiment public && some refactor","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6172","RelatedDescription":"Closed or merged PR \"make AutoMLExperiment public && some refactor\" (#6172)"},{"Id":"1210065069","IsPullRequest":false,"CreatedAt":"2022-04-25T21:03:06","Actor":"LittleLittleCloud","Number":"6166","RawContent":null,"Title":"Remove this prefix in both Microsoft.ML.AutoML and Miicrosoft.ML.SearchSpace","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/issues/6166","RelatedDescription":"Closed issue \"Remove this prefix in both Microsoft.ML.AutoML and Miicrosoft.ML.SearchSpace\" (#6166)"},{"Id":"1213206121","IsPullRequest":false,"CreatedAt":"2022-04-23T05:34:08","Actor":"IncentWang","Number":"6170","RawContent":null,"Title":"Using ML.NET with Mono On Unity","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Android (Compile code from Mono)\r\n - ML.NET Version: ML.NET 1.7.1\r\n - .NET Version: .NET Standard 2.0\r\n\r\n**Describe the bug**\r\nWhen I am trying to load model from my device, I will get \"UnauthorizedAccessException: Access to the path \"/tmp\" is denied\".\r\n\r\n**To Reproduce**\r\n1. Use Mono to Compile your code,\r\n2. Run it on android,\r\n3. Get the exception.\r\n\r\n**Expected behavior**\r\nI expected it to load the model correctly. I think this is because the Mono makes \"Path.GetTempPath() \" you used to return \"/tmp/\", but I cannot get the permission to access that because my device is not rooted. Is there any chance to skip the code which use the temp path? \r\n\r\n**Screenshots, Code, Sample Projects**\r\nHere is the Exception Screenshot:\r\n![image](https://user-images.githubusercontent.com/60191615/164879167-8525d5c7-f5eb-402e-aaf3-c83e1fe1f8ce.png)\r\n\r\nAnd here is the Code:\r\n```\r\n            Debug.Log(Path.GetTempPath()); // This line will print \"/tmp/\"\r\n            DirectoryInfo dirInfo = new DirectoryInfo(Application.persistentDataPath + \"/MLModel\");\r\n            if (!dirInfo.Exists)\r\n            {\r\n                dirInfo.Create();\r\n            }\r\n\r\n            FileInfo info = new FileInfo(Application.persistentDataPath + ModelPath);\r\n            if (!info.Exists)\r\n            {\r\n                info.Create().Dispose();\r\n                InitializeModelFromStreamingData(Application.persistentDataPath + ModelPath);\r\n            }\r\n\r\n            Stream stream = info.OpenRead();\r\n            _transformer = _context.Model.Load(stream, out _schema); // This line will throw the exception.\r\n            _model = _context.Model.CreatePredictionEngine<ModelInput, ModelOutput>(_transformer);\r\n            stream.Close();\r\n```\r\n\r\n**Additional context**\r\nI am using Unity with C#. If this problem cannot be solved, is there any suggestion to make me load the model in Unity?\r\n\r\nThank you!\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6170","RelatedDescription":"Open issue \"Using ML.NET with Mono On Unity\" (#6170)"},{"Id":"1212685488","IsPullRequest":true,"CreatedAt":"2022-04-22T23:53:10","Actor":"LittleLittleCloud","Number":"6169","RawContent":null,"Title":"Remove 'this' prefix for some projects","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\nAccording to #6166 \r\n\r\nRemove `this` for\r\n- Microsoft.ML.AutoML\r\n- Microsoft.ML.AutoML.Test\r\n- Microsoft.ML.SearchSpace\r\n- Microsoft.ML.SearchSpace.Test\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6169","RelatedDescription":"Closed or merged PR \"Remove 'this' prefix for some projects\" (#6169)"},{"Id":"1211679148","IsPullRequest":true,"CreatedAt":"2022-04-22T00:31:21","Actor":"ericstj","Number":"6168","RawContent":null,"Title":"Update .NET libraries and runtime dependencies","State":"open","Body":"Update to the latest libraries for all dependencies of ML.NET that come from dotnet/runtime (and prior) repositories.\r\n\r\nI noticed that the dependency on `PlatformAbstractions.RuntimeEnvironment.GetRuntimeIdentifier();` was broken because DependencyModel stopped referencing PlatformAbstractions.  I was able to fix this by refactoring that code to use https://docs.microsoft.com/en-us/dotnet/api/system.runtime.loader.assemblydependencyresolver?view=net-6.0 which exists since .NETCore 3.0 and calls in to the host to probe for deps-file-defined dependencies.  I've tested that this works with both local runtime dependencies and nuget cache probing.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6168","RelatedDescription":"Open PR \"Update .NET libraries and runtime dependencies\" (#6168)"},{"Id":"1210313811","IsPullRequest":true,"CreatedAt":"2022-04-21T21:18:16","Actor":"ericstj","Number":"6167","RawContent":null,"Title":"Consolidate all dependencies in Versions.props","State":"closed","Body":"Can be reviewed commit-by-commit.\r\n\r\n1. Organized and removed unused properties.\r\n2. Applied the same naming convention of packageName.Replace(\".\", \"\") + \"Version\" for all properties\r\n3. Moved all static PackageReference/@Version from project files to central props.\r\n\r\nI expect this change to largely be no-difference with one small exception, noted below.","Url":"https://github.com/dotnet/machinelearning/pull/6167","RelatedDescription":"Closed or merged PR \"Consolidate all dependencies in Versions.props\" (#6167)"},{"Id":"1209698316","IsPullRequest":false,"CreatedAt":"2022-04-20T13:33:46","Actor":"Phoenix-313","Number":"6165","RawContent":null,"Title":"NumericColumnNames won't return more than 1 column","State":"open","Body":"\r\nHi,\r\n\r\nAlthough CategoricalColumnNames returns the correct count of the categorical columns with their correct names, NumericColumnNames on the other hand returns the correct count and column name if the dataset has only one numerical column. However, if the dataset has more than one numerical column, it will always return a count of 1, and the column name will always be \"Features\" for some reason! \r\n\r\nFor example, imagine the following dataset:\r\n\r\nx1, x2, x3, x4\r\n1, T, 3, A\r\n2, T, 4, A\r\n3, L, 4, A\r\n4, L, 4, B\r\n\r\nCategoricalColumnNames will return a count of 2 categorical columns with the names x2 and x4. However, NumericColumnNames  will return a count of 1 instead of 2, and one column name which is \"Features\" instead of x1 and x3. \r\n\r\nThis is how they are implemented: \r\n\r\nColumnInferenceResults columnInference = MLContext.Auto().InferColumns(TrainingDataPath, labelColumnIndex: 4, hasHeader: true);\r\n\r\nColumnInformation columnInformation = columnInference.ColumnInformation;\r\n\r\nICollection<string> CatCols = columnInformation.CategoricalColumnNames;\r\n            \r\nICollection<string> NumCols = columnInformation.NumericColumnNames; \r\n\r\n\r\n\r\nPlease help. Thanks.\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: b000cf86-79fe-a677-3b39-f834e1c4b959\r\n* Version Independent ID: af43d324-d6c1-c104-c16b-81580a638de2\r\n* Content: [ColumnInformation.NumericColumnNames Property (Microsoft.ML.AutoML)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.automl.columninformation.numericcolumnnames?view=ml-dotnet-preview#microsoft-ml-automl-columninformation-numericcolumnnames)\r\n* Content Source: [dotnet/xml/Microsoft.ML.AutoML/ColumnInformation.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.AutoML/ColumnInformation.xml)\r\n* Product: **dotnet-ml-api**\r\n* GitHub Login: @natke\r\n* Microsoft Alias: **nakersha**","Url":"https://github.com/dotnet/machinelearning/issues/6165","RelatedDescription":"Open issue \"NumericColumnNames won't return more than 1 column\" (#6165)"},{"Id":"1209540662","IsPullRequest":false,"CreatedAt":"2022-04-20T11:16:06","Actor":"torronen","Number":"6164","RawContent":null,"Title":"Q: Faster way to Filter DataView","State":"open","Body":"I filter data from a dataview to get all items within a specific time period.\r\nIt seems slow compared to filtering with LINQ from objects in memory. Is there a faster way to do it? \r\n\r\n```c#\r\nvar boolFilter = df[\"timestamp\"].ElementwiseGreaterThanOrEqual(unixStartTime);\r\nvar hourlydata = df.Filter(boolFilter);\r\nvar boolFilter2 = hourlydata[\"timestamp\"].ElementwiseLessThan(unixEndTime);\r\nhourlydata = hourlydata.Filter(boolFilter2);\r\n```\r\n\r\nIn this example, I am creating predictions for a certain time period at a time. \r\nIn another example, I may need to filter by exact match. Normally, I might create a dictionary to help, but is there a way to support some type \"indices\" for DataViews?","Url":"https://github.com/dotnet/machinelearning/issues/6164","RelatedDescription":"Open issue \"Q: Faster way to Filter DataView\" (#6164)"},{"Id":"1207530846","IsPullRequest":true,"CreatedAt":"2022-04-19T20:47:17","Actor":"ericstj","Number":"6161","RawContent":null,"Title":"Update some test package dependencies","State":"closed","Body":"Avoid referencing some 1.x era packages.\r\n\r\nAdd a subscription for Microsoft.DotNet.XUnitExtensions since that comes from Arcade.\r\n\r\nThis is just a workaround, best fix would be to have all these packages target newer frameworks.\r\n- https://github.com/microsoft/testfx/issues/1073\r\n- https://github.com/AArnott/Xunit.Combinatorial/commit/309bc69c924401271ec865e0de999294cab2a7f3\r\n- Update to xUnit 3.0\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6161","RelatedDescription":"Closed or merged PR \"Update some test package dependencies\" (#6161)"},{"Id":"1208157416","IsPullRequest":false,"CreatedAt":"2022-04-19T10:36:15","Actor":"AbhayGaur","Number":"6163","RawContent":null,"Title":"Retrieve positive contributors and negative contributors from CalculateFeatureContribution","State":"open","Body":"For the explainability section of ml.net, I am using CalculateFeatureContribution to calculate the feature contribution of each individual feature and then represent it on a UI.\r\n\r\nProblem that I have right now is, even after using the number of positive contributors = 10 and number of negative contributors = 10, I still have to traverse through all the feature vector, which is highly sparse and large, to identify which actual features were the top contributing. \r\n\r\nIs there any optimal way to do this computation or the most optimal way is to traverse through all the features and then use the given information in O(n) where n=number of total features.","Url":"https://github.com/dotnet/machinelearning/issues/6163","RelatedDescription":"Open issue \"Retrieve positive contributors and negative contributors from CalculateFeatureContribution\" (#6163)"},{"Id":"1207000719","IsPullRequest":true,"CreatedAt":"2022-04-19T02:33:16","Actor":"dotnet-maestro[bot]","Number":"6159","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 97926d79-6b8b-4d32-c8db-08d9d479971c\r\n- **Build**: 20220415.2\r\n- **Date Produced**: April 16, 2022 2:47:34 AM UTC\r\n- **Commit**: 4000024394df3049886c50e54ad0a2b903221ef0\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 7.0.0-beta.22206.10 to 7.0.0-beta.22215.2][1]\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22206.10 to 7.0.0-beta.22215.2][1]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 7.0.0-beta.22206.10 to 7.0.0-beta.22215.2][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 7.0.0-beta.22206.10 to 7.0.0-beta.22215.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22206.10 to 7.0.0-beta.22215.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/549523c...4000024\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6159","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6159)"},{"Id":"1207472450","IsPullRequest":true,"CreatedAt":"2022-04-19T00:41:50","Actor":"ericstj","Number":"6160","RawContent":null,"Title":"Update dependency ApprovalTests to 5.4.7","State":"closed","Body":"This cleans up the dependencies of transitive reference `DiffEngine` which was referencing a bunch of old out of date packages.","Url":"https://github.com/dotnet/machinelearning/pull/6160","RelatedDescription":"Closed or merged PR \"Update dependency ApprovalTests to 5.4.7\" (#6160)"},{"Id":"1207535071","IsPullRequest":false,"CreatedAt":"2022-04-18T22:57:42","Actor":"ericstj","Number":"6162","RawContent":null,"Title":"Disable Drawing tests on non-windows","State":"open","Body":"PR validation regularly fails with \r\n```\r\n    Microsoft.ML.Tests.ImageTests.TestBackAndForthConversionWithoutAlphaNoInterleaveNoOffset [FAIL]\r\n[31;1m[m[37m      System.ArgumentException : Parameter is not valid.\r\n[m[30;1m      Stack Trace:\r\n[m[37m           at System.Drawing.SafeNativeMethods.Gdip.CheckStatus(Int32 status)\r\n[m[37m           at System.Drawing.Bitmap.UnlockBits(BitmapData bitmapdata)\r\n[m[37m        /__w/1/s/src/Microsoft.ML.ImageAnalytics/VectorToImageTransform.cs(421,0): at Microsoft.ML.Transforms.Image.VectorToImageConvertingTransformer.Mapper.<>c__DisplayClass5_0`1.<GetterFromType>b__0(Bitmap& dst)\r\n[m[37m        /__w/1/s/test/Microsoft.ML.Tests/ImagesTests.cs(804,0): at Microsoft.ML.Tests.ImageTests.TestBackAndForthConversionWithoutAlphaNoInterleaveNoOffset()\r\n[m[30;1m      Output:\r\n[m[37m        Test TestBackAndForthConversionWithoutAlphaNoInterleaveNoOffset: aborted: passed\r\n```\r\n\r\nThis is bug https://github.com/dotnet/runtime/issues/30184, but it will never be fixed now that Unix is no longer supported.  Let's disable Image tests on non-windows until we can replace the usage of drawing with a different library.","Url":"https://github.com/dotnet/machinelearning/issues/6162","RelatedDescription":"Open issue \"Disable Drawing tests on non-windows\" (#6162)"},{"Id":"1206883232","IsPullRequest":true,"CreatedAt":"2022-04-18T09:55:00","Actor":"mzasov","Number":"6158","RawContent":null,"Title":"Add callback for Merge procedure to filter out not suitable rows","State":"open","Body":"We've experienced the following limitation in DataFrame's Merge procedure:\r\n\r\nDuring the merging of two data frames with output ~20M rows it would be great to filter out not acceptable rows if possible (i.e. to have ability to check that the current row for left data frame (some columns) with the current row for right data frame (same or different columns) - is a incorrect combination and can be removed from the result). We can filter out that rows on the fly - and that's the idea.\r\n\r\nAnother idea - is apply filtering on the result when the merge is completed, but when count of rows ~20M (and ~100 columns) it requires a lot of time and memory (provide one more data frame with some amount of rows filtered) - is too expensive on big data.\r\n\r\nSo I proposed to add callback with signature:\r\n\r\nbool canAcceptRow (long? leftDataFrameRowIndex, long? rightDataFrameRowIndex);\r\n\r\nand on the caller side we can provide some filtration if needed (we have left/right data frames and their indexes). If callback is null then it will be ignored - no affected the current behaviour.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6158","RelatedDescription":"Open PR \"Add callback for Merge procedure to filter out not suitable rows\" (#6158)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-05-06T03:30:21.1616383Z","RunDurationInMilliseconds":555}