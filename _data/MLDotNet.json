{"Data":{"GitHub":{"Issues":[{"Id":"3085963107","IsPullRequest":true,"CreatedAt":"2025-05-23T10:41:43","Actor":"Crichen","Number":"7472","RawContent":null,"Title":"Updated Tensorflow.Net to 0.70.2 with Tensorflow 2.7.0.","State":"open","Body":"Fixes #7471 \r\n\r\nNumSharp replaced with Tensorflow.NumPy.\r\nTensorShape replaced with Shape, Shape object has dimensions as 64 bit long, check added for casting to 32 bit int alsoTensor constructor using SafeTensorHandle/DangerousGetHandle and TF_DataType not required when casting.\r\n\r\nAdded StringTensorFactory to wrap addition tensorflow.dll methods required to create Tensors from string based input.\r\n\r\nWe are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7472","RelatedDescription":"Open PR \"Updated Tensorflow.Net to 0.70.2 with Tensorflow 2.7.0.\" (#7472)"},{"Id":"3083683413","IsPullRequest":false,"CreatedAt":"2025-05-22T14:59:39","Actor":"Crichen","Number":"7471","RawContent":null,"Title":"NVidia GPU cards with architectures later than Turing do not properly infer image classification when using transpiled/cached models. This requires updating of Tensorflow to 2.7 to resolve.","State":"open","Body":"Current release of ML.Net is fixed to Tensorflow 2.3.1 with CUDA and Cudnn support at 10. and 7.6 respectively. Models trained with this set up work natively with Turing based cards. Newer GPU cards transpile and cache the trained model to run on their specific architectures, Ampere, Ada, Hopper, etc. Although the trained models will load with newer architectures the outputs give fixed results irrespective of the inputs.\n\nTo be compatible with the newer Ampere based architecture the Tensorflow.Net dependency needs to be raised to 0.70.2, using Tensorflow 2.7. This allows support of CUDA 11.2 and Cudnn 8.1 and for the trained models to run natively on Ampere without the need for transpiling.\n\nThese updates are tested and ready to clean up and commit for code review.","Url":"https://github.com/dotnet/machinelearning/issues/7471","RelatedDescription":"Open issue \"NVidia GPU cards with architectures later than Turing do not properly infer image classification when using transpiled/cached models. This requires updating of Tensorflow to 2.7 to resolve.\" (#7471)"},{"Id":"3054380980","IsPullRequest":true,"CreatedAt":"2025-05-21T21:41:47","Actor":"jeffhandley","Number":"7462","RawContent":null,"Title":"Bump Microsoft.Extensions.AI to 9.4.4-preview.1.25259.16","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/7462","RelatedDescription":"Closed or merged PR \"Bump Microsoft.Extensions.AI to 9.4.4-preview.1.25259.16\" (#7462)"},{"Id":"3055638501","IsPullRequest":true,"CreatedAt":"2025-05-21T21:40:44","Actor":"dotnet-maestro[bot]","Number":"7463","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:c692823c-b896-437f-4f57-08dc434cc8f6)\n## From https://github.com/dotnet/arcade\n- **Subscription**: [c692823c-b896-437f-4f57-08dc434cc8f6](https://maestro.dot.net/subscriptions?search=c692823c-b896-437f-4f57-08dc434cc8f6)\n- **Build**: [20250518.1](https://dev.azure.com/dnceng/internal/_build/results?buildId=2711910)\n- **Date Produced**: May 18, 2025 8:50:18 AM UTC\n- **Commit**: [35a34fa5ab9b2f97d3f7bdf48a7c2100727308b3](https://github.com/dotnet/arcade/commit/35a34fa5ab9b2f97d3f7bdf48a7c2100727308b3)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25253.1 to 10.0.0-beta.25268.1][2]\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 10.0.0-beta.25253.1 to 10.0.0-beta.25268.1][2]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25253.1 to 10.0.0-beta.25268.1][2]\n  - **Microsoft.DotNet.SignTool**: [from 10.0.0-beta.25253.1 to 10.0.0-beta.25268.1][2]\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 10.0.0-beta.25253.1 to 10.0.0-beta.25268.1][2]\n  - **Microsoft.DotNet.XliffTasks**: [from 10.0.0-beta.25253.1 to 10.0.0-beta.25268.1][2]\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25253.1 to 10.0.0-beta.25268.1][2]\n\n[2]: https://github.com/dotnet/arcade/compare/cdf9c56320...35a34fa5ab\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:c692823c-b896-437f-4f57-08dc434cc8f6)\n\n\n\n\n\n","Url":"https://github.com/dotnet/machinelearning/pull/7463","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#7463)"},{"Id":"3081473543","IsPullRequest":true,"CreatedAt":"2025-05-21T21:40:19","Actor":"dotnet-maestro[bot]","Number":"7470","RawContent":null,"Title":"[release/4.0] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:a547de0d-c7ea-4682-b0d2-c8a549cede14)\n## From https://github.com/dotnet/arcade\n- **Subscription**: [a547de0d-c7ea-4682-b0d2-c8a549cede14](https://maestro.dot.net/subscriptions?search=a547de0d-c7ea-4682-b0d2-c8a549cede14)\n- **Build**: [20250516.2](https://dev.azure.com/dnceng/internal/_build/results?buildId=2711101)\n- **Date Produced**: May 16, 2025 10:30:49 PM UTC\n- **Commit**: [c62eeb5b5432f9eaa034fbd641ccd9fd0d928fb3](https://github.com/dotnet/arcade/commit/c62eeb5b5432f9eaa034fbd641ccd9fd0d928fb3)\n- **Branch**: refs/heads/release/9.0\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.25111.5 to 9.0.0-beta.25266.2][1]\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 9.0.0-beta.25111.5 to 9.0.0-beta.25266.2][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.25111.5 to 9.0.0-beta.25266.2][1]\n  - **Microsoft.DotNet.SignTool**: [from 9.0.0-beta.25111.5 to 9.0.0-beta.25266.2][1]\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 9.0.0-beta.25111.5 to 9.0.0-beta.25266.2][1]\n  - **Microsoft.DotNet.XliffTasks**: [from 9.0.0-beta.25111.5 to 9.0.0-beta.25266.2][1]\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.25111.5 to 9.0.0-beta.25266.2][1]\n\n[1]: https://github.com/dotnet/arcade/compare/5da211e1c4...c62eeb5b54\n\n[DependencyUpdate]: <> (End)\n\n- **Updates to .NET SDKs:**\n  - Updates tools.dotnet to 9.0.106\n\n[marker]: <> (End:a547de0d-c7ea-4682-b0d2-c8a549cede14)\n\n","Url":"https://github.com/dotnet/machinelearning/pull/7470","RelatedDescription":"Open PR \"[release/4.0] Update dependencies from dotnet/arcade\" (#7470)"},{"Id":"3041045565","IsPullRequest":true,"CreatedAt":"2025-05-20T22:53:54","Actor":"michaelgsharp","Number":"7457","RawContent":null,"Title":"Dependency version updates","State":"closed","Body":"Update most dependency versions.","Url":"https://github.com/dotnet/machinelearning/pull/7457","RelatedDescription":"Closed or merged PR \"Dependency version updates\" (#7457)"},{"Id":"3075132241","IsPullRequest":true,"CreatedAt":"2025-05-19T23:20:18","Actor":"ericstj","Number":"7469","RawContent":null,"Title":"Updating OnnxRuntime","State":"closed","Body":"Attempting to update just OnnxRuntime to see if that repros the issue seen in https://github.com/dotnet/machinelearning/pull/7457","Url":"https://github.com/dotnet/machinelearning/pull/7469","RelatedDescription":"Closed or merged PR \"Updating OnnxRuntime\" (#7469)"},{"Id":"3074573265","IsPullRequest":false,"CreatedAt":"2025-05-19T17:36:05","Actor":"ericstj","Number":"7468","RawContent":null,"Title":"AutoML.SourceGenerator needs to convert to incremental source generator","State":"open","Body":"With the latest roslyn implementation of ISourceGenerator results in a RS1042 warning as error.  \n\nThese need to switch to using https://github.com/dotnet/roslyn/blob/main/docs/features/incremental-generators.md","Url":"https://github.com/dotnet/machinelearning/issues/7468","RelatedDescription":"Open issue \"AutoML.SourceGenerator needs to convert to incremental source generator\" (#7468)"},{"Id":"3071014716","IsPullRequest":false,"CreatedAt":"2025-05-17T19:30:00","Actor":"torronen","Number":"7467","RawContent":null,"Title":"Build instructions: CMake < 4.0 and spectre-mitigation","State":"open","Body":"**System Information (please complete the following information):**\n - OS & Version: Windows 11, VS2022\n - ML.NET Version: main from github 17th May 2025\n\n**Describe the bug**\nTo compile the project on Windows:\nCMake 4.0.2 return error \"path not found\" \nSpectre-mitigated libraries are needed in VS2022\n\n**To Reproduce**\nSteps to reproduce the behavior:\n1. Clean machine\n2. Install VS2022 and follow instructions on developer page\n3. Install latest CMake\n4. Observe errors trying to build Native libraries\n\n**Additional context**\nMinor update needed https://github.com/dotnet/machinelearning/blob/main/docs/building/windows-instructions.md on Individual Components needed and probably a notice on using CMake <4.0.0\n","Url":"https://github.com/dotnet/machinelearning/issues/7467","RelatedDescription":"Open issue \"Build instructions: CMake < 4.0 and spectre-mitigation\" (#7467)"},{"Id":"3067870041","IsPullRequest":true,"CreatedAt":"2025-05-17T01:12:04","Actor":"stephentoub","Number":"7466","RawContent":null,"Title":"Update to stable Microsoft.Extensions.AI.Abstractions","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/7466","RelatedDescription":"Closed or merged PR \"Update to stable Microsoft.Extensions.AI.Abstractions\" (#7466)"},{"Id":"3063680748","IsPullRequest":true,"CreatedAt":"2025-05-16T16:21:48","Actor":"jozkee","Number":"7465","RawContent":null,"Title":"Update to M.E.AI 9.5.0-preview","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/7465","RelatedDescription":"Closed or merged PR \"Update to M.E.AI 9.5.0-preview\" (#7465)"},{"Id":"3063331565","IsPullRequest":false,"CreatedAt":"2025-05-14T14:29:55","Actor":"verdie-g","Number":"7464","RawContent":null,"Title":"Async Inference","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\n\nI'd like to use [NVIDIA Triton](https://github.com/triton-inference-server/server) for my inferences. Since it's a remote gRPC server, I would need to use async. I'm not super familiar with ML.NET yet, but it seems like it currently does not support that.\n\n**Describe the solution you'd like**\n\nAsync APIs to do an inference (e.g. PredictionEngine.PredictAsync).\n\nWould that make sense?","Url":"https://github.com/dotnet/machinelearning/issues/7464","RelatedDescription":"Open issue \"Async Inference\" (#7464)"},{"Id":"3052526729","IsPullRequest":false,"CreatedAt":"2025-05-10T09:13:26","Actor":"largeprob","Number":"7461","RawContent":null,"Title":"Yolo11 onnx model prediction error","State":"closed","Body":"![Image](https://github.com/user-attachments/assets/0d636ebc-0cc4-40f2-8dca-16f443b23cce)\n\n![Image](https://github.com/user-attachments/assets/e2a13a54-1714-4be1-8547-8971ebff5007)\n\n![Image](https://github.com/user-attachments/assets/11cac3f2-9032-4155-866d-17b58a7ca292)\n\nMy problem is that when I interpret the array obtained from yoloModelOutput as the confidence level for each category, there seems to be a problem with the confidence level for each category, which is significantly different from the confidence level returned by using yolo's official model prediction interface in Python. Even if the result is incorrect, was it because I analyzed the credibility of this category incorrectly?","Url":"https://github.com/dotnet/machinelearning/issues/7461","RelatedDescription":"Closed issue \"Yolo11 onnx model prediction error\" (#7461)"},{"Id":"3032685989","IsPullRequest":false,"CreatedAt":"2025-05-09T19:25:57","Actor":"Lavshyak","Number":"7452","RawContent":null,"Title":"ImageClassificationTrainer PredictedLabelColumnName bug when the name is not default","State":"closed","Body":"**System Information (please complete the following information):**\n - OS & Version: Windows 11\n - ML.NET Version: ML.NET v4.0.2\n - .NET Version: .NET 9.0\n - Microsoft.ML.Vision 4.0.2\n - SciSharp.TensorFlow.Redist 2.3.1 (or Windows GPU 2.3.1)\n\n**Describe the bug**\nIf ImageClassificationTrainer.Options PredictedLabelColumnName = \"PredictedLabel\" (default), no bugs.\nBut if ImageClassificationTrainer.Options PredictedLabelColumnName = \"PredictedLabelKey\" (not default), i get exception \"Could not find input column 'PredictedLabelKey' (Parameter 'inputSchema')\" from KeyToValueMappingTransformer (inputColumnName: \"PredictedLabelKey\") when Fit().\n\n**Expected behavior**\nNo exception\n\n**Screenshots, Code, Sample Projects**\nProject with reproduction and xunit: https://github.com/Lavshyak/MLNetImageClassificationTrainerPredictedColumnNameProblem/blob/master/MLNetImageClassificationTrainerPredictedColumnNameProblem/UnitTest1.cs\n","Url":"https://github.com/dotnet/machinelearning/issues/7452","RelatedDescription":"Closed issue \"ImageClassificationTrainer PredictedLabelColumnName bug when the name is not default\" (#7452)"},{"Id":"3043098119","IsPullRequest":true,"CreatedAt":"2025-05-09T19:25:56","Actor":"feiyun0112","Number":"7458","RawContent":null,"Title":"ImageClassificationTrainer PredictedLabelColumnName bug when the name is not default ","State":"closed","Body":"fix #7452 ","Url":"https://github.com/dotnet/machinelearning/pull/7458","RelatedDescription":"Closed or merged PR \"ImageClassificationTrainer PredictedLabelColumnName bug when the name is not default \" (#7458)"},{"Id":"3043442925","IsPullRequest":true,"CreatedAt":"2025-05-09T19:24:44","Actor":"jozkee","Number":"7459","RawContent":null,"Title":"Update to M.E.AI 9.4.3-preview.1.25230.7","State":"closed","Body":"@stephentoub @jeffhandley @MackinnonBuck \r\n","Url":"https://github.com/dotnet/machinelearning/pull/7459","RelatedDescription":"Closed or merged PR \"Update to M.E.AI 9.4.3-preview.1.25230.7\" (#7459)"},{"Id":"3044818429","IsPullRequest":false,"CreatedAt":"2025-05-07T06:18:14","Actor":"ysanada12","Number":"7460","RawContent":null,"Title":"When an object detection model created with ML.net Model builder is run on Maui (iOS), the model fails to load.","State":"open","Body":"Description: I have created a machine learning model for object detection using ML.net Model Builder (MLModel1.zip). The model was successfully tested using the automatically generated project by ML.net Model Builder.\n\nI then added the model as an embedded resource in a .NET MAUI project and implemented the model loading. Below is the source code:\n\n```csharp\n        public static readonly Lazy<PredictionEngine<ModelInput, ModelOutput>> PredictEngine = new Lazy<PredictionEngine<ModelInput, ModelOutput>>(() => CreatePredictEngine(), true);\n\n        private static PredictionEngine<ModelInput, ModelOutput>CreatePredictEngine()\n        {\n            var mlContext = new MLContext();\n            ITransformer mlModel = LoadModel();\n            return mlContext.Model.CreatePredictionEngine<ModelInput, ModelOutput>(mlModel);\n        }\n        public static ITransformer LoadModel()\n        {\n            var assembly = typeof(MLModel1).GetTypeInfo().Assembly;\n            System.IO.Stream stream = assembly.GetManifestResourceStream(\"MauiProject.MLModel1.zip\");\n\n            if (stream == null)\n            {\n                throw new FileNotFoundException(\"Resource not found\");\n            }\n\n            using (var fileStream = new MemoryStream())\n            {\n                stream.CopyTo(fileStream);\n                fileStream.Position = 0;\n\n                var mlContext = new MLContext();\n                return mlContext.Model.Load(fileStream, out _);\n            }\n        }\n```\nIf you build this code in the Ios simulator, you will get an error that libtorch-cpu-any does not exist when you reach mlContext.Model.Load.\nlibtorch-cpuのパッケージを確認したところ、この名称のdllが存在しないようです。\nhttps://www.nuget.org/packages?q=libtorch-cpu\n<details><summary>Error Message</summary>\n\n<pre>\nThis application or script uses TorchSharp but doesn't contain a reference to libtorch-cpu-any, Version=2.2.1.1.\n\nConsider referencing one of the combination packages TorchSharp-cpu, TorchSharp-cuda-linux, TorchSharp-cuda-windows or call System.Runtime.InteropServices.NativeLibrary.Load(path-to-libLibTorchSharp.so) explicitly for a Python install of pytorch. See https://github.com/dotnet/TorchSharp/issues/169.\".\n\nFor CUDA, you may need to call 'TorchSharp.torch.InitializeDeviceType(TorchSharp.DeviceType.CUDA)' before any use of TorchSharp CUDA packages from scripts or notebooks.\n\nTrace from LoadNativeBackend:\n\nTorchSharp: LoadNativeBackend: Initialising native backend, useCudaBackend = False\n\nStep 1 - First try regular load of native libtorch binaries.\n\n    Trying to load native component torch_cpu relative to /Users/devadmin/Library/Developer/CoreSimulator/Devices/2027A329-FB06-4053-AB75-3F1DB97EE874/data/Containers/Bundle/Application/74E75385-2642-4E2C-8105-E9C1107CECCF/calouselTest.app/TorchSharp.dll\n    Failed to load native component torch_cpu relative to /Users/devadmin/Library/Developer/CoreSimulator/Devices/2027A329-FB06-4053-AB75-3F1DB97EE874/data/Containers/Bundle/Application/74E75385-2642-4E2C-8105-E9C1107CECCF/calouselTest.app/TorchSharp.dll\n    Trying to load native component LibTorchSharp relative to /Users/devadmin/Library/Developer/CoreSimulator/Devices/2027A329-FB06-4053-AB75-3F1DB97EE874/data/Containers/Bundle/Application/74E75385-2642-4E2C-8105-E9C1107CECCF/calouselTest.app/TorchSharp.dll\n    Failed to load native component LibTorchSharp relative to /Users/devadmin/Library/Developer/CoreSimulator/Devices/2027A329-FB06-4053-AB75-3F1DB97EE874/data/Containers/Bundle/Application/74E75385-2642-4E2C-8105-E9C1107CECCF/calouselTest.app/TorchSharp.dll\n    Result from regular native load of LibTorchSharp is False\n\nStep 3 - Alternative load from consolidated directory of native binaries from nuget packages\n\n    torchsharpLoc = /Users/devadmin/Library/Developer/CoreSimulator/Devices/2027A329-FB06-4053-AB75-3F1DB97EE874/data/Containers/Bundle/Application/74E75385-2642-4E2C-8105-E9C1107CECCF/calouselTest.app\n    packagesDir = /Users/devadmin/Library/Developer/CoreSimulator/Devices/2027A329-FB06-4053-AB75-3F1DB97EE874/data/Containers\n    torchsharpHome = /Users/devadmin/Library/Developer/CoreSimulator/Devices/2027A329-FB06-4053-AB75-3F1DB97EE874/data/Containers/Bundle/Application\n    Giving up, TorchSharp.dll does not appear to have been loaded from package directories\n</pre>\n\n\n\n</details> Could anyone help me resolve this issue?","Url":"https://github.com/dotnet/machinelearning/issues/7460","RelatedDescription":"Open issue \"When an object detection model created with ML.net Model builder is run on Maui (iOS), the model fails to load.\" (#7460)"},{"Id":"3038608207","IsPullRequest":true,"CreatedAt":"2025-05-05T16:38:11","Actor":"dotnet-maestro[bot]","Number":"7455","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:c692823c-b896-437f-4f57-08dc434cc8f6)\n## From https://github.com/dotnet/arcade\n- **Subscription**: [c692823c-b896-437f-4f57-08dc434cc8f6](https://maestro.dot.net/subscriptions?search=c692823c-b896-437f-4f57-08dc434cc8f6)\n- **Build**: [20250503.1](https://dev.azure.com/dnceng/internal/_build/results?buildId=2701059)\n- **Date Produced**: May 3, 2025 8:23:26 AM UTC\n- **Commit**: [cdf9c563205c673b7df205e24564aa48dbc341c3](https://github.com/dotnet/arcade/commit/cdf9c563205c673b7df205e24564aa48dbc341c3)\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25225.4 to 10.0.0-beta.25253.1][1]\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 10.0.0-beta.25225.4 to 10.0.0-beta.25253.1][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25225.4 to 10.0.0-beta.25253.1][1]\n  - **Microsoft.DotNet.SignTool**: [from 10.0.0-beta.25225.4 to 10.0.0-beta.25253.1][1]\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 10.0.0-beta.25225.4 to 10.0.0-beta.25253.1][1]\n  - **Microsoft.DotNet.XliffTasks**: [from 10.0.0-beta.25225.4 to 10.0.0-beta.25253.1][1]\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25225.4 to 10.0.0-beta.25253.1][1]\n\n[1]: https://github.com/dotnet/arcade/compare/5fb72aaffe...cdf9c56320\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:c692823c-b896-437f-4f57-08dc434cc8f6)\n\n","Url":"https://github.com/dotnet/machinelearning/pull/7455","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#7455)"},{"Id":"3011819767","IsPullRequest":false,"CreatedAt":"2025-05-05T16:21:25","Actor":"dgxhubbard","Number":"7446","RawContent":null,"Title":"Remove Newtonsoft.Json dependency and use System.Text.Json","State":"closed","Body":"Microsoft.ML uses Newtonsoft.Json, and when run without it  causes an exception. Then we need to import Newtonsoft.Json, that has been replaced by System.Text.Json.\nSystem.Text.Json is faster, why is Newtonsoft.Json still required","Url":"https://github.com/dotnet/machinelearning/issues/7446","RelatedDescription":"Closed issue \"Remove Newtonsoft.Json dependency and use System.Text.Json\" (#7446)"},{"Id":"3039371639","IsPullRequest":false,"CreatedAt":"2025-05-05T11:26:30","Actor":"dfengpo","Number":"7456","RawContent":null,"Title":"ML.NET how to handle data classification for extra-long texts？","State":"open","Body":"1. Now I have a large number of conversation recordings between staff and customers and get long text data in the following (original conversation example) format through ASR. \n2. The beginning of the sample data is the beginning and end time of each sentence, followed by the role, and the colon starts with the sentence content. \n3. During the reception of the staff throughout the day, we will have a dialogue with multiple groups of customers. Each batch of customers may be one person or multiple people.\n4. I need to train a 'session boundary detection' model with multiple dialogue sentence paragraphs as input.\n5. Predicts whether the current input dialog segment has a boundary point for the start or end of the session, and returns the start time and boundary label value of the corresponding sentence as 1 or 0. The model needs to be able to segment the dialogue between the staff and each customer.\n6. The following is an example of the data.\n11:03:42-11:03:42 ：Hello, do you need help?\n........\n........\n........\n12:03:42-12:03:42 ：Please walk slowly and welcome to the next visit.\n","Url":"https://github.com/dotnet/machinelearning/issues/7456","RelatedDescription":"Open issue \"ML.NET how to handle data classification for extra-long texts？\" (#7456)"},{"Id":"3031788650","IsPullRequest":false,"CreatedAt":"2025-05-02T16:35:06","Actor":"fanyang-mono","Number":"7450","RawContent":null,"Title":"Add GPT 4.1 to Tiktoken Tokenizer","State":"closed","Body":"\nI would like to see GPT 4.1 being added to Tiktoken Tokenizer.","Url":"https://github.com/dotnet/machinelearning/issues/7450","RelatedDescription":"Closed issue \"Add GPT 4.1 to Tiktoken Tokenizer\" (#7450)"},{"Id":"3034947059","IsPullRequest":true,"CreatedAt":"2025-05-02T16:35:05","Actor":"tarekgh","Number":"7453","RawContent":null,"Title":"Support Tiktoken Gpt-4.1 Model","State":"closed","Body":"Fixes https://github.com/dotnet/machinelearning/issues/7450","Url":"https://github.com/dotnet/machinelearning/pull/7453","RelatedDescription":"Closed or merged PR \"Support Tiktoken Gpt-4.1 Model\" (#7453)"},{"Id":"3035709253","IsPullRequest":false,"CreatedAt":"2025-05-02T10:40:00","Actor":"Laoujin","Number":"7454","RawContent":null,"Title":"DOCS: LightGbm in Linux Container (System.DllNotFoundException: Unable to load shared library 'lib_lightgbm' or one of its dependencies.)","State":"open","Body":"Hey!\n\nThere was an issue about this before: https://github.com/dotnet/machinelearning/issues/4600\n\nWhen using ML.NET and wanting to train a model with LightGBM, you get this error when deploying with Docker to a linux container.  \nI'm posting this here for posterity because I'm a total noob and spent 4-6 hours on this or something...\n\nThere are also docs at: https://github.com/dotnet/machinelearning/blob/main/docs/building/unix-instructions.md  \nBut they are somewhat outdated...\n\nThe error is:\n\n```\nUnhandled exception. System.DllNotFoundException: Unable to load shared library 'lib_lightgbm' or one of its dependencies.\nIn order to help diagnose loading problems, consider setting the LD_DEBUG environment variable:\nliblib_lightgbm: cannot open shared object file: No such file or directory\nat Microsoft.ML.Trainers.LightGbm.WrappedLightGbmInterface.DatasetCreateFromSampledColumn(IntPtr sampleValuePerColumn, IntPtr sampleIndicesPerColumn, Int32 numCol, Int32[] sampleNonZeroCntPerColumn, Int32 numSampleRow, Int32 numTotalRow, String parameters, IntPtr& ret)\n```\n\nThe solution is to build LightGBM in the container, which then failed with:\n\n```\nCMake 3.28 or higher is required.  You are running version 3.25.1\n```\n\nMy final Dockerfile:\n\n```docker\nFROM mcr.microsoft.com/dotnet/aspnet:8.0 as runtime\n\nRUN apt-get update\nRUN apt-get install git clang-3.9 libunwind8 curl libomp-dev -y\n\nRUN apt-get install python3-pip -y\nRUN pip install cmake --upgrade --break-system-packages\n#RUN cmake --version\n\nRUN git clone --recursive https://github.com/microsoft/LightGBM.git\nRUN cd LightGBM && mkdir build && cd build && cmake .. && make -j && make install\n#RUN find / -name 'lib_lightgbm.so' 2>/dev/null\n```\n\nThis is not great, see for example the `--break-system-packages` which would've been OK in the build step only. And I don't clean the stuff I no longer need at the end.\n\nThe `--break-system-packages`, for that ChatGPT said to do the following instead -- but I haven't tested it:\n\n```docker\nRUN apt-get update && apt-get install -y python3-venv\nRUN python3 -m venv /opt/venv\nENV PATH=\"/opt/venv/bin:$PATH\"\nRUN pip install --upgrade pip cmake\n```\n\n\n\nI tried to do this from a build step too.\n\n```\nFROM mcr.microsoft.com/dotnet/sdk:8.0 AS build\n# same code as above\nCOPY --from=build /usr/local/lib/lib_lightgbm.so /app\n```\n\nAnd maybe that could have worked if I did an extra copy of `libgomp.so`, (or maybe just an install of libomp-dev) but, as I said, 5 hours wasted.\n\n","Url":"https://github.com/dotnet/machinelearning/issues/7454","RelatedDescription":"Open issue \"DOCS: LightGbm in Linux Container (System.DllNotFoundException: Unable to load shared library 'lib_lightgbm' or one of its dependencies.)\" (#7454)"},{"Id":"3032496632","IsPullRequest":false,"CreatedAt":"2025-04-30T20:58:28","Actor":"MoodieG","Number":"7451","RawContent":null,"Title":"[Question] Is it possible to create a tokenizer from a config file?","State":"open","Body":"Hey,\n\nIs it possible to create a tokenizer from a config file similar to the [rust library tokenizers](https://docs.rs/crate/tokenizers/latest). Example code in rust:\n\n```\nuse tokenizers::Tokenizer;\nuse clap::Parser;\n\n/// Simple CLI to tokenize input text using a Hugging Face tokenizer.json\n#[derive(Parser, Debug)]\n#[command(author, version, about, long_about = None)]\nstruct Args {\n    /// Path to tokenizer.json\n    #[arg(short, long)]\n    tokenizer: String,\n\n    /// Text to tokenize\n    #[arg(short, long)]\n    text: String,\n}\n\nfn main() {\n    let args = Args::parse();\n\n    // Load tokenizer\n    let tokenizer = Tokenizer::from_file(&args.tokenizer)\n        .expect(\"Failed to load tokenizer.json\");\n\n    // Encode text\n    let encoding = tokenizer.encode(args.text, true)\n        .expect(\"Failed to encode text\");\n\n    // Output token IDs\n    println!(\"{:?}\", encoding.get_ids());\n}\n```\n\nThe config file has all the stages and parameters configured, such as added tokens, normalizers, pre_tokenizers, vocab, merges and so on.  \n\nAt first glance this does not seem possible in `Microsoft.ML.Tokenizers`. It may be possible to create the tokenizer in code with the correct configuration using this [Create method](https://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.tokenizers.bpetokenizer.create?view=ml-dotnet-preview#microsoft-ml-tokenizers-bpetokenizer-create(system-string-system-string-microsoft-ml-tokenizers-pretokenizer-microsoft-ml-tokenizers-normalizer-system-collections-generic-ireadonlydictionary((system-string-system-int32))-system-string-system-string-system-string-system-boolean)) however it is not clear as the config has an array of normalizers and pretokenizers while the create method only expects one of each. Seems like I will need to implement my own normalizers and pretokenizers if I were to move forward with the `Microsoft.ML.Tokenizers`. I am new to this domain, so just wanted to confirm with experts if this is the case or if there are any suggestions. \n\nThank you. ","Url":"https://github.com/dotnet/machinelearning/issues/7451","RelatedDescription":"Open issue \"[Question] Is it possible to create a tokenizer from a config file?\" (#7451)"},{"Id":"3008739816","IsPullRequest":true,"CreatedAt":"2025-04-28T19:44:18","Actor":"luisquintanilla","Number":"7445","RawContent":null,"Title":"Update Tokenizer conceptual doc link in package docs","State":"closed","Body":"Replaces placeholder with link to tokens documentation in Learn docs.\r\n\r\nWe are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [X] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [X] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7445","RelatedDescription":"Closed or merged PR \"Update Tokenizer conceptual doc link in package docs\" (#7445)"},{"Id":"3018328490","IsPullRequest":false,"CreatedAt":"2025-04-28T15:55:02","Actor":"dgxhubbard","Number":"7448","RawContent":null,"Title":"Remove Newtonsoft.Json dependency and use System.Text.Json","State":"closed","Body":"**System Information (please complete the following information):**\n - Windows 11\n - ML.NET Version: 4.0.2\n - .NET Version: 8\n\n**Describe the bug**\nWhen running with ML.Net and trying to run model generation method, get the error that \nNewtonSoft.Json version 13.0.0.0 is required. I am using 13.0.3. Version 13.0.0 cannot be downloaded.\nIs there a way to fix this. One way I would suggest is to replace NewtonSoft.Json with System.Text.Json, because\nit is faster.\n\n**To Reproduce**\nSteps to reproduce the behavior:\n1. Go to '...'\n2. Click on '....'\n3. Scroll down to '....'\n4. See error\n\n**Expected behavior**\nBeing able to run my code\n\n","Url":"https://github.com/dotnet/machinelearning/issues/7448","RelatedDescription":"Closed issue \"Remove Newtonsoft.Json dependency and use System.Text.Json\" (#7448)"},{"Id":"3022205862","IsPullRequest":false,"CreatedAt":"2025-04-26T18:37:06","Actor":"Lavshyak","Number":"7449","RawContent":null,"Title":"Add docs (tutorial) about transfer image from RAM to pipeline (model)","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\nWhen I started learning ML.NET, it was hard to understand how to adequately transfer an image from RAM (byte[], SKImage, MLImage) to a pipeline (model) (which automatically resizes the image and classifies it). I couldn't find this in the documentation, and I couldn't find any clear ways on the Internet.\n\n**Describe the solution you'd like**\nMaybe you could add information about this to the documentation?\nI have some code that just needs to be adapted for use in documentation: https://github.com/Lavshyak/MLNetImageFromRamStrange/tree/master/ImageFromRamStrange\nAnd it's worth mentioning, it was a non-intuitive moment: https://github.com/Lavshyak/MLNetImageFromRamStrange/blob/788d67d05e0ebb00d4db0753ac3298a9507a5805/ImageFromRamStrange/DataModels.cs#L12\nAnd may be you can copy some code from there: https://github.com/Lavshyak/MLNetImageDisposingProblem/blob/master/MLNetImageDisposingProblem/Reproduction.cs\n\nAnd don't forget about that): https://github.com/dotnet/machinelearning/issues/7444","Url":"https://github.com/dotnet/machinelearning/issues/7449","RelatedDescription":"Open issue \"Add docs (tutorial) about transfer image from RAM to pipeline (model)\" (#7449)"},{"Id":"3015910221","IsPullRequest":false,"CreatedAt":"2025-04-24T04:09:23","Actor":"richlander","Number":"7447","RawContent":null,"Title":"Legacy images need to be updated","State":"open","Body":"This repo has references to CentOS 8, Ubuntu 18.04, and Ubuntu 20.04. We don't support any of those versions any longer.\n\nPlease consider moving to CentOS Stream 10 and Ubuntu 24.04.\n\nWe don't produce the `mlnet` images any longer. It would be good to understand what the need is for that image flavor.\n\n@ilyas1974 @ericstj ","Url":"https://github.com/dotnet/machinelearning/issues/7447","RelatedDescription":"Open issue \"Legacy images need to be updated\" (#7447)"},{"Id":"2989435708","IsPullRequest":true,"CreatedAt":"2025-04-23T16:52:13","Actor":"michaelgsharp","Number":"7443","RawContent":null,"Title":"update cmake mac","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/7443","RelatedDescription":"Closed or merged PR \"update cmake mac\" (#7443)"},{"Id":"2993059874","IsPullRequest":false,"CreatedAt":"2025-04-14T13:19:49","Actor":"Lavshyak","Number":"7444","RawContent":null,"Title":"MLImage disposes in some cases after CreateEnumerable .ToArray() if there is ResizeImages in the pipeline","State":"open","Body":"**System Information:**\n - OS & Version: Windows 11\n - ML.NET Version: ML.NET v4.0.2\n - .NET Version: .NET 9.0\n\n**Describe the bug**\nIn some cases MLImage disposes after CreateEnumerable .ToArray() if there is ResizeImages in the pipeline.\nIf SourceImage size == ResizedImage size, after CreateEnumerable .ToArray() SourceImage disposes.\nIf SourceImage size != ResizedImage size, after CreateEnumerable .ToArray() SourceImage doesn't dispose.\n\n**To Reproduce**\nProject with xUnit and reproduction:\nhttps://github.com/Lavshyak/MLNetImageDisposingProblem\n\n**Expected behavior**\nProvide a choice whether to dispose or not. If not, then SourceImage doesn't dispose. \nOr just never dispose.\nOr just write about it in red text in the documentation.\n\n**Screenshots, Code, Sample Projects**\nProject with xUnit and reproduction:\nhttps://github.com/Lavshyak/MLNetImageDisposingProblem\n","Url":"https://github.com/dotnet/machinelearning/issues/7444","RelatedDescription":"Open issue \"MLImage disposes in some cases after CreateEnumerable .ToArray() if there is ResizeImages in the pipeline\" (#7444)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-05-24T03:30:16.9967502Z","RunDurationInMilliseconds":443}