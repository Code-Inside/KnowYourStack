{"Data":{"GitHub":{"Issues":[{"Id":"1508154242","IsPullRequest":false,"CreatedAt":"2022-12-22T16:17:03","Actor":"HoLyDreaM","Number":"6529","RawContent":null,"Title":"Meaningless bug in the latest version","State":"open","Body":"microsoft.auto.ml gives errors in latest version. Especially when you run the command like below, cache memory error or different errors are returned. But when I downgrade, this error goes away.\r\n\r\nExperimentResult<RegressionMetrics> experiment = mlContext.Auto().CreateRegressionExperiment(settings).Execute(newData, labelColumnName: \"P\", progressHandler: progress);","Url":"https://github.com/dotnet/machinelearning/issues/6529","RelatedDescription":"Open issue \"Meaningless bug in the latest version\" (#6529)"},{"Id":"1507606884","IsPullRequest":false,"CreatedAt":"2022-12-22T10:16:37","Actor":"andrasfuchs","Number":"6528","RawContent":null,"Title":"Build error: MSML_TypeParamName reports \"TType\" as not standard","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11 v10.0.22621.963\r\n - ML.NET Version: ML.NET v2.0\r\n - .NET Version: .NET 7\r\n\r\n**Describe the bug**\r\nAfter successfully building the ML.NET project when I try to build it again in Visual Studio, I get the \"Type parameter name 'TType' not standard\" error and the build fails.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Clone this repo\r\n2. Run the `build.cmd` in PowerShell\r\n3. Open the `Microsoft.ML.sln` solution in Visual Studio 2022\r\n4. Try to build the project (F6)\r\n5. (optional) Open a source file that causes the failure (eg. [NormalizeColumnSng.cs](https://github.com/dotnet/machinelearning/blob/main/src/Microsoft.ML.Data/Transforms/NormalizeColumnSng.cs))\r\n6. See the errors in the Error List window\r\n\r\n**Expected behavior**\r\nAs described [in this document](https://github.com/dotnet/machinelearning/blob/main/docs/building/windows-instructions.md#building-from-visual-studio-2019), I would expect the build command to work in Visual Studio.\r\n\r\n**Screenshots, Code, Sample Projects**\r\n![image](https://user-images.githubusercontent.com/910321/209109755-42d1147d-6460-4156-a66b-f1a55e9f039f.png)\r\n\r\n**Additional context**\r\nI use Visual Studio Enterprise 2022 v17.4.3.\r\n\r\nIf I refactor the type `TType` to `TTest` then it works fine.\r\n\r\nI also tried to keep the `TType` class name, and change [the condition in `TypeParamNameAnalyzer` class](https://github.com/dotnet/machinelearning/blob/9d798f1bb3fb17fe97eba77a694c35e2cb46a4b7/tools-local/Microsoft.ML.InternalCodeAnalyzer/TypeParamNameAnalyzer.cs#L44) from\r\n```csharp\r\nif (name == null || (name.StartsWith(\"T\") && Utils.NameIsGood(name, 1, true))) return;\r\n```\r\nto\r\n```csharp\r\nif (name == null || (true && Utils.NameIsGood(name, 1, true))) return;\r\n```\r\nand it made it work, I could build the solution without any errors.\r\n\r\nIt doesn't make any sense to me, I hope someone else will understand what's the underlying issue here.","Url":"https://github.com/dotnet/machinelearning/issues/6528","RelatedDescription":"Open issue \"Build error: MSML_TypeParamName reports \"TType\" as not standard\" (#6528)"},{"Id":"1507217498","IsPullRequest":true,"CreatedAt":"2022-12-22T04:50:30","Actor":"michaelgsharp","Number":"6527","RawContent":null,"Title":"moving onedal nuget download from onedal to native where its needed for building.","State":"closed","Body":"Moving nuget download from onedal project to native project because its needed for building and when we build the \"official build\" \"native only\" components it fails without this.","Url":"https://github.com/dotnet/machinelearning/pull/6527","RelatedDescription":"Closed or merged PR \"moving onedal nuget download from onedal to native where its needed for building.\" (#6527)"},{"Id":"1482053234","IsPullRequest":true,"CreatedAt":"2022-12-21T20:54:14","Actor":"rgesteve","Number":"6521","RawContent":null,"Title":"Onedal algorithms backed by nuget packages","State":"closed","Body":"Supercedes #6373 and #6364 allowing for full build of functionality without extra packages (they're downloaded by `build.sh`).  Also includes sample to illustrate use.\r\n\r\nWe are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6521","RelatedDescription":"Closed or merged PR \"Onedal algorithms backed by nuget packages\" (#6521)"},{"Id":"1503249527","IsPullRequest":false,"CreatedAt":"2022-12-19T16:42:42","Actor":"iharsuvorau","Number":"6526","RawContent":null,"Title":"TensorFlow support on Apple Silicon (M1, M2)","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nI'm blocked by the current lack of support for TensorFlow on Apple Silicon. The limitation is mentioned at https://github.com/dotnet/machinelearning/blob/main/docs/project-docs/platform-limitations.md\r\n\r\n**Describe the solution you'd like**\r\nUse ML.NET on Apple Silicon chips.\r\n\r\n**Describe alternatives you've considered**\r\nAs alternative, I don't use ML.NET.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6526","RelatedDescription":"Open issue \"TensorFlow support on Apple Silicon (M1, M2)\" (#6526)"},{"Id":"1499332611","IsPullRequest":false,"CreatedAt":"2022-12-16T00:24:20","Actor":"zewditu","Number":"6525","RawContent":null,"Title":"Text- classification cancelation does not work ","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: [e.g. Windows 10] \r\n - ML.NET Version: [e.g. ML.NET v1.5.5]\r\n - .NET Version: [e.g. .NET 5.0]\r\n\r\n**Describe the bug**\r\nIt seems that Text-classification cancellation does not cooperate with mlContext cancellation.\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots, Code, Sample Projects**\r\nIf applicable, add screenshots, code snippets, or sample projects to help explain your problem.\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6525","RelatedDescription":"Open issue \"Text- classification cancelation does not work \" (#6525)"},{"Id":"1498854215","IsPullRequest":false,"CreatedAt":"2022-12-15T17:52:39","Actor":"Vivraan","Number":"6524","RawContent":null,"Title":"Query about outdated Unity Sample","State":"open","Body":"Copy of https://github.com/dotnet/machinelearning-samples/issues/981\r\n\r\n### System information\r\n\r\n- **OS version/distro**: Targeting Meta Quest 2, building on Windows 11 22621.963\r\n- **.NET Version (eg., dotnet --info)**: .NET Framework 4.7.1 (Unity)\r\n\r\n### Issue\r\nI am trying to adapt some code in the Unity sample in this project in my own project and using my own models from here: https://github.com/dotnet/machinelearning-samples/blob/main/samples/csharp/end-to-end-apps/Unity-HelloMLNET/HelloMLNET/Assets/Scenes/HelloML.cs\r\n\r\nHowever, it seems that the `ArrayDataViewBuilder` class is now an internal sealed class, and it cannot be accessed by external classes. This was documented as a workaround for `PredictionEngine` since it made use of `Reflection.Emit` which apparently \"throws up\": https://github.com/dotnet/machinelearning-samples/tree/main/samples/csharp/end-to-end-apps/Unity-HelloMLNET#known-workarounds\r\n\r\nWhat is a solution for this? I am in a position where I absolutely need a solution to this in the next 72 hours.\r\n\r\n### Source code / logs\r\nWill attach if necessary.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6524","RelatedDescription":"Open issue \"Query about outdated Unity Sample\" (#6524)"},{"Id":"1493963015","IsPullRequest":false,"CreatedAt":"2022-12-13T10:48:58","Actor":"ic202","Number":"6522","RawContent":null,"Title":"Using a target size ([32]) that is different to the input size ([32, 1]). ","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: [e.g. Windows 10] \r\n - ML.NET Version: [e.g. ML.NET v2.0.0]\r\n - .NET Version: [e.g. .NET 4.7.2]\r\n- Microsoft.ML.TorchSharp 0.20.0\r\n- TorchSharp-cpu 0.99.1\r\n\r\n**Describe the bug**\r\n\r\nwhen trying to train SentenceSimilarity I get this warning::\r\n\r\nWarning: Using a target size ([32]) that is different to the input size ([32, 1]). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size. (function mse_loss)\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6522","RelatedDescription":"Open issue \"Using a target size ([32]) that is different to the input size ([32, 1]). \" (#6522)"},{"Id":"1478918989","IsPullRequest":true,"CreatedAt":"2022-12-06T11:54:20","Actor":"andrasfuchs","Number":"6520","RawContent":null,"Title":"Add continuous resource monitoring to AutoML.IMonitor","State":"open","Body":"Partially fixes #6320, #6426, #6425 and helps investigating further problems with AutoML trials.\r\n\r\nThis PR lets the user cancel trials based various performance metrics. It changed my user experience with AutoML experiments significantly, because I regularly had crashes and failed trials when I tried to run experiments for a long time. With this modification I could implement my own IMonitor and react to changes in memory demand, virtual memory usage, remaining disk space and I could skip a trial if it was running unexpectedly long without terminating the experiment.\r\n\r\nBefore the modifications in this PR my experiments usually stopped with an error in a few hours, but since I have much more control over the experiment with these modifications I could run much longer experiment without any issues.\r\n\r\nOn the technical level I moved the performance-related properties of the `TrialSettings` class into a separate `TrialPerformanceMetrics` subclass, I added a timer to check for those CPU and memory metrics, and I added a new `ReportTrialResourceUsage` event to the `IMonitor` class that is called periodically during the trial-run. I also added the `CancellationTokenSource` class of the trial to the `TrialSettings` so that the user can skip a trial if they wish.\r\n\r\nYou can also check [my custom IMonitor implementation](https://github.com/andrasfuchs/BioBalanceDetector/blob/master/Software/Source/BBDProto08/BBD.BodyMonitor/BBD.BodyMonitor.API/Models/MLContextLoggerMonitor.cs) where the resource monitoring and cancellation logic is demonstrated.","Url":"https://github.com/dotnet/machinelearning/pull/6520","RelatedDescription":"Open PR \"Add continuous resource monitoring to AutoML.IMonitor\" (#6520)"},{"Id":"1476577455","IsPullRequest":true,"CreatedAt":"2022-12-05T13:32:36","Actor":"dotnet-maestro[bot]","Number":"6518","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1c26c342-7dbd-4e18-3778-08daa2f83374)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1c26c342-7dbd-4e18-3778-08daa2f83374\r\n- **Build**: 20221201.6\r\n- **Date Produced**: December 1, 2022 8:44:16 PM UTC\r\n- **Commit**: c01ccbc9554b39205750bf5bda7aad29f89bc0c9\r\n- **Branch**: refs/heads/release/7.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22572.6 to 7.0.0-beta.22601.6][3]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 7.0.0-beta.22572.6 to 7.0.0-beta.22601.6][3]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22572.6 to 7.0.0-beta.22601.6][3]\r\n  - **Microsoft.DotNet.SignTool**: [from 7.0.0-beta.22572.6 to 7.0.0-beta.22601.6][3]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 7.0.0-beta.22572.6 to 7.0.0-beta.22601.6][3]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.22572.6 to 7.0.0-beta.22601.6][3]\r\n\r\n[3]: https://github.com/dotnet/arcade/compare/82d0268...c01ccbc\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1c26c342-7dbd-4e18-3778-08daa2f83374)\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6518","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#6518)"},{"Id":"1473639236","IsPullRequest":false,"CreatedAt":"2022-12-04T21:33:22","Actor":"Ghaandy","Number":"6517","RawContent":null,"Title":"Multiclassification - LightGBM and FastTree not working as expected with infere column","State":"closed","Body":"*CLOSING*","Url":"https://github.com/dotnet/machinelearning/issues/6517","RelatedDescription":"Closed issue \"Multiclassification - LightGBM and FastTree not working as expected with infere column\" (#6517)"},{"Id":"1473550094","IsPullRequest":false,"CreatedAt":"2022-12-02T22:53:18","Actor":"zewditu","Number":"6516","RawContent":null,"Title":"Text classification  Predict result  is not calibrated.","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: [e.g. Windows 10] \r\n - ML.NET Version: [e.g. ML.NET v1.5.5]\r\n - .NET Version: [e.g. .NET 5.0]\r\n\r\n**Describe the bug**\r\nA clear and concise description of what the bug is.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots, Code, Sample Projects**\r\n![image](https://user-images.githubusercontent.com/36615490/205402950-724be94e-0ea2-4531-b75e-a8be8b43241c.png)\r\n\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6516","RelatedDescription":"Open issue \"Text classification  Predict result  is not calibrated.\" (#6516)"},{"Id":"1473132173","IsPullRequest":false,"CreatedAt":"2022-12-02T16:30:50","Actor":"luisquintanilla","Number":"6515","RawContent":null,"Title":"Add SQL Support to InferColumns","State":"open","Body":"Currently InferColumns only supports file data sources. \r\n\r\nAdd SQL support to `InferColumns` so it can be used with DatabaseLoader. ","Url":"https://github.com/dotnet/machinelearning/issues/6515","RelatedDescription":"Open issue \"Add SQL Support to InferColumns\" (#6515)"},{"Id":"1471993970","IsPullRequest":false,"CreatedAt":"2022-12-01T21:41:39","Actor":"luisquintanilla","Number":"6514","RawContent":null,"Title":"AutoML Tracking Issue","State":"open","Body":"## Summary\r\n\r\nThis issue tracks work on AutoML\r\n\r\n## Work Items\r\n\r\n- [ ] #6304 \r\n- [ ] #6344 \r\n- [ ] #6515 ","Url":"https://github.com/dotnet/machinelearning/issues/6514","RelatedDescription":"Open issue \"AutoML Tracking Issue\" (#6514)"},{"Id":"1470413166","IsPullRequest":false,"CreatedAt":"2022-12-01T17:28:39","Actor":"luisquintanilla","Number":"6511","RawContent":null,"Title":"Add ARIMA Trainer","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/issues/6511","RelatedDescription":"Closed issue \"Add ARIMA Trainer\" (#6511)"},{"Id":"1470413238","IsPullRequest":false,"CreatedAt":"2022-12-01T00:30:42","Actor":"luisquintanilla","Number":"6512","RawContent":null,"Title":"Integreate Fairness .NET APIs","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/issues/6512","RelatedDescription":"Open issue \"Integreate Fairness .NET APIs\" (#6512)"},{"Id":"1470413135","IsPullRequest":false,"CreatedAt":"2022-12-01T00:30:38","Actor":"luisquintanilla","Number":"6510","RawContent":null,"Title":"Enable Dynamic Inference (PredictionEngine)","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/issues/6510","RelatedDescription":"Open issue \"Enable Dynamic Inference (PredictionEngine)\" (#6510)"},{"Id":"1470412141","IsPullRequest":false,"CreatedAt":"2022-12-01T00:29:20","Actor":"luisquintanilla","Number":"6509","RawContent":null,"Title":"Miscellaneous Tracking Issue","State":"open","Body":"## Summary\n\nThis issue tracks work items that don't fit into the other epics. \n\n## Work Items\n\n- [ ] #6510\n- [ ] #6427\n- [ ] #6512","Url":"https://github.com/dotnet/machinelearning/issues/6509","RelatedDescription":"Open issue \"Miscellaneous Tracking Issue\" (#6509)"},{"Id":"1470407066","IsPullRequest":false,"CreatedAt":"2022-12-01T00:22:11","Actor":"luisquintanilla","Number":"6508","RawContent":null,"Title":"Investigate result discrepancies","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/issues/6508","RelatedDescription":"Open issue \"Investigate result discrepancies\" (#6508)"},{"Id":"1470407040","IsPullRequest":false,"CreatedAt":"2022-12-01T00:22:08","Actor":"luisquintanilla","Number":"6507","RawContent":null,"Title":"Increase coverage of ONNX model repo models in ORT extensions.","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/issues/6507","RelatedDescription":"Open issue \"Increase coverage of ONNX model repo models in ORT extensions.\" (#6507)"},{"Id":"1470407006","IsPullRequest":false,"CreatedAt":"2022-12-01T00:22:05","Actor":"luisquintanilla","Number":"6506","RawContent":null,"Title":"Provide APIs to inspect ONNX input and output schemas.","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/issues/6506","RelatedDescription":"Open issue \"Provide APIs to inspect ONNX input and output schemas.\" (#6506)"},{"Id":"1470406569","IsPullRequest":false,"CreatedAt":"2022-12-01T00:21:29","Actor":"luisquintanilla","Number":"6505","RawContent":null,"Title":"Support Execution Providers","State":"open","Body":"- [ ] OpenVINO\r\n- [ ] DirectML","Url":"https://github.com/dotnet/machinelearning/issues/6505","RelatedDescription":"Open issue \"Support Execution Providers\" (#6505)"},{"Id":"1470406524","IsPullRequest":false,"CreatedAt":"2022-12-01T00:21:25","Actor":"luisquintanilla","Number":"6504","RawContent":null,"Title":"Increase export coverage","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/issues/6504","RelatedDescription":"Open issue \"Increase export coverage\" (#6504)"},{"Id":"1470405870","IsPullRequest":false,"CreatedAt":"2022-12-01T00:20:36","Actor":"luisquintanilla","Number":"6503","RawContent":null,"Title":"Inference LigthGBM models API","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/issues/6503","RelatedDescription":"Open issue \"Inference LigthGBM models API\" (#6503)"},{"Id":"1470405839","IsPullRequest":false,"CreatedAt":"2022-12-01T00:20:33","Actor":"luisquintanilla","Number":"6502","RawContent":null,"Title":"Retrain LightGBM models API","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/issues/6502","RelatedDescription":"Open issue \"Retrain LightGBM models API\" (#6502)"},{"Id":"1470405805","IsPullRequest":false,"CreatedAt":"2022-12-01T00:20:31","Actor":"luisquintanilla","Number":"6501","RawContent":null,"Title":"Load LightGBM models API","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/issues/6501","RelatedDescription":"Open issue \"Load LightGBM models API\" (#6501)"},{"Id":"1470405759","IsPullRequest":false,"CreatedAt":"2022-12-01T00:20:28","Actor":"luisquintanilla","Number":"6500","RawContent":null,"Title":"Upgrade version of LightGBM","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/issues/6500","RelatedDescription":"Open issue \"Upgrade version of LightGBM\" (#6500)"},{"Id":"1470405268","IsPullRequest":false,"CreatedAt":"2022-12-01T00:19:44","Actor":"luisquintanilla","Number":"6499","RawContent":null,"Title":"DataFrame - Add KeyType Column Support","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/issues/6499","RelatedDescription":"Open issue \"DataFrame - Add KeyType Column Support\" (#6499)"},{"Id":"1470404965","IsPullRequest":false,"CreatedAt":"2022-12-01T00:19:20","Actor":"luisquintanilla","Number":"6498","RawContent":null,"Title":"DataFrame - Support loading / saving to SQL","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/issues/6498","RelatedDescription":"Open issue \"DataFrame - Support loading / saving to SQL\" (#6498)"},{"Id":"1470404934","IsPullRequest":false,"CreatedAt":"2022-12-01T00:19:17","Actor":"luisquintanilla","Number":"6497","RawContent":null,"Title":"DataFrame - Drop multiple columns","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/issues/6497","RelatedDescription":"Open issue \"DataFrame - Drop multiple columns\" (#6497)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-12-26T03:31:51.2242452Z","RunDurationInMilliseconds":501}