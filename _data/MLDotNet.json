{"Data":{"GitHub":{"Issues":[{"Id":"1408358734","IsPullRequest":false,"CreatedAt":"2022-10-14T21:32:15","Actor":"LittleLittleCloud","Number":"6379","RawContent":null,"Title":"fail to load interactive extension from microsoft.ml.automl","State":"closed","Body":"**System Information (please complete the following information):**\r\n - ML.NET Version:  0.20.0-preview.22512.4\r\n\r\n**Describe the bug**\r\nexception thrown when loading dll from microsoft.ml.automl.interactive. This is because microsoft.ml.automl.interactive is using an old interactive package\r\n```\r\nError: Microsoft.DotNet.Interactive.KernelExtensionLoadException: Failure loading Kernel Extension\r\n ---> System.MissingMethodException: Method not found: 'System.Threading.Tasks.Task`1<Microsoft.DotNet.Interactive.KernelCommandResult> Microsoft.DotNet.Interactive.KernelExtensions.SendAsync(Microsoft.DotNet.Interactive.Kernel, Microsoft.DotNet.Interactive.Commands.KernelCommand)'.\r\n   at Microsoft.ML.AutoML.AutoMLMonitorKernelExtension.LoadExtensionApiAsync(Kernel cSharpKernel)\r\n   at System.Runtime.CompilerServices.AsyncMethodBuilderCore.Start[TStateMachine](TStateMachine& stateMachine)\r\n   at Microsoft.ML.AutoML.AutoMLMonitorKernelExtension.LoadExtensionApiAsync(Kernel cSharpKernel)\r\n   at Microsoft.ML.AutoML.AutoMLMonitorKernelExtension.OnLoadAsync(Kernel kernel)\r\n   at Microsoft.DotNet.Interactive.Extensions.AssemblyBasedExtensionLoader.LoadFromAssembly(FileInfo assemblyFile, Kernel kernel, KernelInvocationContext context) in D:\\a\\_work\\1\\s\\src\\Microsoft.DotNet.Interactive\\Extensions\\AssemblyBasedExtensionLoader.cs:line 132\r\n   --- End of inner exception stack trace ---\r\n```\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6379","RelatedDescription":"Closed issue \"fail to load interactive extension from microsoft.ml.automl\" (#6379)"},{"Id":"1408357309","IsPullRequest":true,"CreatedAt":"2022-10-14T21:32:14","Actor":"LittleLittleCloud","Number":"6378","RawContent":null,"Title":"update interactive package version.","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\nfix #6379 \r\n","Url":"https://github.com/dotnet/machinelearning/pull/6378","RelatedDescription":"Closed or merged PR \"update interactive package version.\" (#6378)"},{"Id":"1409547350","IsPullRequest":true,"CreatedAt":"2022-10-14T15:51:19","Actor":"dotnet-maestro[bot]","Number":"6382","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1c26c342-7dbd-4e18-3778-08daa2f83374)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1c26c342-7dbd-4e18-3778-08daa2f83374\r\n- **Build**: 20221013.4\r\n- **Date Produced**: October 13, 2022 9:27:08 PM UTC\r\n- **Commit**: 02e28316bf35d1028683ee313f0794776bff18d1\r\n- **Branch**: refs/heads/release/7.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22507.2 to 7.0.0-beta.22513.4][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 7.0.0-beta.22507.2 to 7.0.0-beta.22513.4][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22507.2 to 7.0.0-beta.22513.4][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 7.0.0-beta.22507.2 to 7.0.0-beta.22513.4][1]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 7.0.0-beta.22507.2 to 7.0.0-beta.22513.4][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.22507.2 to 7.0.0-beta.22513.4][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/c4f77b4...02e2831\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1c26c342-7dbd-4e18-3778-08daa2f83374)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6382","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#6382)"},{"Id":"1408481736","IsPullRequest":false,"CreatedAt":"2022-10-13T22:09:34","Actor":"luisquintanilla","Number":"6381","RawContent":null,"Title":"Outdated version of .NET Interactive breaks interactive extensions in notebooks","State":"open","Body":"Installing components with interactive extensions `Microsoft.Data.Analysis` and `Microsoft.ML.AutoML` breaks in notebooks.\r\n\r\n![image](https://user-images.githubusercontent.com/46974588/195719486-506e99c8-0f84-4aa2-aef7-c9d929df793e.png)\r\n\r\nUpdate version to latest: 1.0.0-beta.22504.6\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/c5f03e2c42940b23ea3f9eed88f23807d9f26453/eng/Versions.props#L38\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/c5f03e2c42940b23ea3f9eed88f23807d9f26453/eng/Versions.props#L39\r\n\r\nThe version for formatting and interactive is always in sync, so it's recommended to use just one variable. ","Url":"https://github.com/dotnet/machinelearning/issues/6381","RelatedDescription":"Open issue \"Outdated version of .NET Interactive breaks interactive extensions in notebooks\" (#6381)"},{"Id":"1408432030","IsPullRequest":false,"CreatedAt":"2022-10-13T21:12:07","Actor":"ericstj","Number":"6380","RawContent":null,"Title":"Remove workaround for ref parameter compiler issue","State":"open","Body":"We worked around a compiler bug\r\nhttps://github.com/dotnet/machinelearning/blob/c5f03e2c42940b23ea3f9eed88f23807d9f26453/test/Microsoft.ML.Core.Tests/Microsoft.ML.Core.Tests.csproj#L5-L6\r\n\r\nThis should be fixed in the .NET 7.0 GA SDK.  We can remove this once we pick up that SDK.","Url":"https://github.com/dotnet/machinelearning/issues/6380","RelatedDescription":"Open issue \"Remove workaround for ref parameter compiler issue\" (#6380)"},{"Id":"1398172851","IsPullRequest":true,"CreatedAt":"2022-10-13T21:06:02","Actor":"dotnet-maestro[bot]","Number":"6354","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1c26c342-7dbd-4e18-3778-08daa2f83374)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1c26c342-7dbd-4e18-3778-08daa2f83374\r\n- **Build**: 20221007.2\r\n- **Date Produced**: October 7, 2022 2:17:06 PM UTC\r\n- **Commit**: c4f77b4e80e942941e73d70cec045eddbfd7b4eb\r\n- **Branch**: refs/heads/release/7.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22327.2 to 7.0.0-beta.22507.2][2]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 7.0.0-beta.22327.2 to 7.0.0-beta.22507.2][2]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22327.2 to 7.0.0-beta.22507.2][2]\r\n  - **Microsoft.DotNet.SignTool**: [from 7.0.0-beta.22327.2 to 7.0.0-beta.22507.2][2]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 7.0.0-beta.22327.2 to 7.0.0-beta.22507.2][2]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.22327.2 to 7.0.0-beta.22507.2][2]\r\n\r\n[2]: https://github.com/dotnet/arcade/compare/a264eb1...c4f77b4\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1c26c342-7dbd-4e18-3778-08daa2f83374)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6354","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6354)"},{"Id":"1408205503","IsPullRequest":false,"CreatedAt":"2022-10-13T17:53:15","Actor":"ericstj","Number":"6377","RawContent":null,"Title":"Test failure, Assert in Microsoft.ML.Data.TextLoader.Cursor.MoveNextCore()","State":"open","Body":"This appears to be a transient issue hit by CI.\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/510f0112d4fbb4d3ee233b9ca95c83fae1f9da91/src/Microsoft.ML.Data/DataLoadSave/Text/TextLoaderCursor.cs#L829\r\nhttps://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-machinelearning-refs-pull-6367-merge-a0de502d50da480fae/Microsoft.ML.TestFramework/1/console.146feb85.log?helixlogtype=result\r\n```\r\n    Microsoft.ML.RunTests.TestDataPipe.SavePipeCountTargetEncoding [FAIL]\r\n[31;1m[m[37m      Assert failed: batch.Total:64 while _total + 1:0.\r\n[m[37m      Expected: True\r\n[m[37m      Actual:   False\r\n[m[30;1m      Stack Trace:\r\n[m[37m        /__w/1/s/test/Microsoft.ML.TestFramework/GlobalBase.cs(80,0): at Microsoft.ML.Internal.Internallearn.Test.GlobalBase.AssertHandler(String msg, IExceptionContext ectx)\r\n[m[37m        /__w/1/s/src/Microsoft.ML.Core/Utilities/Contracts.cs(781,0): at Microsoft.ML.Runtime.Contracts.DbgFailCore(String msg, IExceptionContext ctx)\r\n[m[37m        /__w/1/s/src/Microsoft.ML.Core/Utilities/Contracts.cs(794,0): at Microsoft.ML.Runtime.Contracts.DbgFail(String msg)\r\n[m[37m        /__w/1/s/src/Microsoft.ML.Core/Utilities/Contracts.cs(852,0): at Microsoft.ML.Runtime.Contracts.Assert(Boolean f, String msg)\r\n[m[37m        /__w/1/s/src/Microsoft.ML.Data/DataLoadSave/Text/TextLoaderCursor.cs(829,0): at Microsoft.ML.Data.TextLoader.Cursor.ParseParallel(ParallelState state)+MoveNext()\r\n[m[37m        /__w/1/s/src/Microsoft.ML.Data/DataLoadSave/Text/TextLoaderCursor.cs(291,0): at Microsoft.ML.Data.TextLoader.Cursor.MoveNextCore()\r\n[m[37m        /__w/1/s/src/Microsoft.ML.Core/Data/RootCursorBase.cs(65,0): at Microsoft.ML.Data.RootCursorBase.MoveNext()\r\n[m[37m        /__w/1/s/test/Microsoft.ML.TestFramework/DataPipe/TestDataPipeBase.cs(735,0): at Microsoft.ML.RunTests.TestDataViewBase.CheckSameValues(DataViewRowCursor curs1, DataViewRowCursor curs2, Boolean exactTypes, Boolean exactDoubles, Boolean checkId, Boolean checkIdCollisions)\r\n[m[37m        /__w/1/s/test/Microsoft.ML.TestFramework/DataPipe/TestDataPipeBase.cs(685,0): at Microsoft.ML.RunTests.TestDataViewBase.CheckSameValues(IDataView view1, IDataView view2, Boolean exactTypes, Boolean exactDoubles, Boolean checkId)\r\n[m[37m        /__w/1/s/test/Microsoft.ML.TestFramework/DataPipe/TestDataPipeBase.cs(429,0): at Microsoft.ML.RunTests.TestDataPipeBase.SaveLoadText(IDataView view, IHostEnvironment env, Boolean hidden, String suffix, String suffixBase, Boolean checkBaseline, Boolean forceDense, Boolean roundTrip, Boolean outputSchema, Boolean outputHeader, Int32 digitsOfPrecision, NumberParseOption parseOption)\r\n[m[37m        /__w/1/s/test/Microsoft.ML.TestFramework/DataPipe/TestDataPipeBase.cs(245,0): at Microsoft.ML.RunTests.TestDataPipeBase.TestCore(String pathData, Boolean keepHidden, String[] argsPipe, Action`1 actLoader, String suffix, String suffixBase, Boolean checkBaseline, Boolean forceDense, Boolean logCurs, Boolean roundTripText, Boolean checkTranspose, Boolean checkId, Boolean baselineSchema, Int32 digitsOfPrecision, NumberParseOption parseOption)\r\n[m[37m        /__w/1/s/test/Microsoft.ML.TestFramework/DataPipe/TestDataPipe.cs(1468,0): at Microsoft.ML.RunTests.TestDataPipe.SavePipeCountTargetEncoding()\r\n[m[30;1m      Output:\r\n[m[37m        Wrote 699 rows of length 63\r\n[m[37m        \r\n[m[37m        \r\n[m[37m        Comparing /root/helix/work/workitem/e/TestOutput/SavePipe/SavePipeCountTargetEncoding-Data.txt and /root/helix/work/correlation/test/BaselineOutput/Common/SavePipe/SavePipeCountTargetEncoding-Data.txt\r\n[m[37m        Output matches baseline: 'SavePipe/SavePipeCountTargetEncoding-Data.txt'\r\n[m[37m        Test SavePipeCountTargetEncoding: aborted: passed\r\n```\r\nSo _total+1 is 0.  This would happen if _total was never initialized.\r\n\r\nAs far as I can tell this test is trying to save and reload data.  I'm surprised to see it fail with these changes, perhaps there's an underlying transient issue.  I can see one other mention of this issue here: https://github.com/dotnet/machinelearning/issues/1474#issuecomment-435268300","Url":"https://github.com/dotnet/machinelearning/issues/6377","RelatedDescription":"Open issue \"Test failure, Assert in Microsoft.ML.Data.TextLoader.Cursor.MoveNextCore()\" (#6377)"},{"Id":"1407657535","IsPullRequest":false,"CreatedAt":"2022-10-13T11:45:35","Actor":"rzechu","Number":"6376","RawContent":null,"Title":"AutoML experiment.Execute DateTime problem Only supported feature column types are Boolean, Single, and String.","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 10\r\n - ML.NET Version: ML.NET v1.7.0\r\n - .NET Version: NET 6\r\n\r\n**Describe the bug**\r\nI have auto generated IDataView using SQL Query Loader (not using predefined Class as InputType)\r\nSample SQL\r\nSELECT cast(GETDATE() as datetime) as colDateTime, CAST(1 as real) as colInt\r\n\r\n```\r\nvar loader = MLContext.Data.CreateDatabaseLoader(columns.ToArray());\r\nvar dbSource = new DatabaseSource(SqlClientFactory.Instance, connectionString, sqlQuery);\r\nvar iDataView = loader.Load(dbSource);\r\n```\r\n\r\nMy query contains date/datetime column and model can't be trained.\r\nI understand there's limitations and I am casting all ints to real etc.  SELECT CAST(colInt as real) colInt FROM xyz...\r\nBut how to deal with date/datetimes (use unix epoch format? / datetime.ticks ) or I found here on [github ](https://github.com/dotnet/machinelearning/issues/4045) (but not sure if its gonna work. I had issues) \r\n`dataProcessPipeline =dataProcessPipeline.Append(_mlContext.Transforms.Conversion.ConvertType(feature, feature, DataKind.Single));`\r\n//Cannot implicitly convert type 'Microsoft.ML.Data.EstimatorChain<Microsoft.ML.Transforms.TypeConvertingTransformer>' to 'Microsoft.ML.Transforms.ColumnSelectingEstimator'\tIntense.AI.AutoML\tC:\\_WorkGIT\\Forms\\Intense.AI\\Intense.AI.AutoML\\Trainers\\MulticlassClassification.cs\t46\tActive\r\n\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n```\r\nvar loader = MLContext.Data.CreateDatabaseLoader(columns.ToArray());\r\nvar dbSource = new DatabaseSource(SqlClientFactory.Instance, connectionString, sqlQuery);\r\nvar trainingDataView = loader.Load(dbSource);\r\n\r\nvar progressHandler = new MulticlassExperimentProgressHandler(this);\r\nExperimentSettings.MaxExperimentTimeInSeconds = (uint)maxExperimentTimeInSeconds;\r\nMulticlassExperimentSettings multiClassExperimentSettings = (MulticlassExperimentSettings)ExperimentSettings;\r\n\r\nvar experiment = MLContext.Auto().CreateMulticlassClassificationExperiment(multiClassExperimentSettings);\r\nvar experimentResult = experiment.Execute(trainData: trainingDataView, labelColumnName: labelColumnName, progressHandler: progressHandler); //exception here Only supported feature column types are Boolean, Single, and String.\r\n\r\n```\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6376","RelatedDescription":"Open issue \"AutoML experiment.Execute DateTime problem Only supported feature column types are Boolean, Single, and String.\" (#6376)"},{"Id":"1407236665","IsPullRequest":false,"CreatedAt":"2022-10-13T10:38:49","Actor":"jsobell","Number":"6374","RawContent":null,"Title":"mlnet forecasting CLI doesn't appear to work","State":"closed","Body":"Running the cli using the command `mlnet forecasting` returns the error `No valid columns to save`\r\n\r\n**To Reproduce**\r\nCreate a CSV datafile with anything in it.\r\nRun `mlnet forecasting --dataset \"myDataSet.csv\" --label-col total --has-header true --time-col datetime --horizon 2 --train-time 100`\r\n\r\n```\r\nStart Training\r\nstart nni training\r\nExperiment output folder: C:\\Users\\user\\AppData\\Local\\Temp\\AutoML-NNI\\Experiment-XLUOMA\r\nForcasting\r\nSystem.InvalidOperationException: No valid columns to save\r\n   at Microsoft.ML.Data.DataSaverUtils.SaveDataView(IChannel ch, IDataSaver saver, IDataView view, Stream stream, Boolean keepHidden)\r\n   at Microsoft.ML.BinaryLoaderSaverCatalog.SaveAsBinary(DataOperationsCatalog catalog, IDataView data, Stream stream, Boolean keepHidden)\r\n   at Microsoft.ML.ModelBuilder.AutoMLService.Proposer.ResampleStrategyProposer.InitializeForecasting(TrialParameter trialParameter) in /_/src/Microsoft.ML.ModelBuilder.AutoMLService/Proposer/ResampleStrategyProposer.cs:line 141\r\n   at Microsoft.ML.ModelBuilder.AutoMLService.Proposer.ResampleStrategyProposer.Propose(TrialParameter trialParameter) in /_/src/Microsoft.ML.ModelBuilder.AutoMLService/Proposer/ResampleStrategyProposer.cs:line 51\r\n   at Microsoft.ML.ModelBuilder.AutoMLService.Proposer.Controller.Propose() in /_/src/Microsoft.ML.ModelBuilder.AutoMLService/Proposer/Controller.cs:line 65\r\n   at Microsoft.ML.ModelBuilder.AutoMLService.Experiments.LocalAutoMLExperiment.ExecuteAsync(IDataView trainData, IDataView validateData, ColumnInformation columnInformation, CancellationToken cancellationToken, CancellationToken timeout) in /_/src/Microsoft.ML.ModelBuilder.AutoMLService/Experiments/LocalAutoMLExperiment.cs:line 163\r\n   at Microsoft.ML.ModelBuilder.AutoMLEngine.StartTrainingAsync(TrainingConfiguration config, PathConfiguration pathConfig, CancellationToken userCancellationToken) in /_/src/Microsoft.ML.ModelBuilder.AutoMLService/AutoMLEngineService/AutoMLEngine.cs:line 160\r\n:\r\n:\r\n```\r\n\r\nContents of log file shows:\r\n```\r\n2022-10-13 17:33:16.3528 DEBUG System.FormatException: String ' available trainer: LGBM, RF, FASTTREE, LBFGS, SDCA ' was not recognized as a valid Boolean.\r\n   at System.Boolean.Parse(ReadOnlySpan`1 value)\r\n   at System.Boolean.Parse(String value)\r\n   at Microsoft.ML.CLI.FeatureFlagManager.ReadFeatureFlags(String ffPath) in /_/src/mlnet/FeatureFlagManager.cs:line 64 (Microsoft.ML.CLI.FeatureFlagManager.ReadFeatureFlags)\r\n2022-10-13 17:33:16.4112 DEBUG Set log file path to C:\\Users\\user\\AppData\\Local\\Temp\\mlnet\\log.txt (Microsoft.ML.CLI.Commands.MLCommand.set_LogFilePath)\r\n2022-10-13 17:33:16.4112 DEBUG Set log level to Info (Microsoft.ML.CLI.Commands.MLCommand.set_Verbosity)\r\n2022-10-13 17:33:16.7683 INFO Start Training (Microsoft.ML.CLI.Runners.AutoMLRunner+<ExecuteAsync>d__8.MoveNext)\r\n2022-10-13 17:33:16.8298 INFO start nni training (Microsoft.ML.CLI.Utilities.PBarConsolePrinter.Print)\r\n2022-10-13 17:33:16.8446 INFO Experiment output folder: C:\\Users\\user\\AppData\\Local\\Temp\\AutoML-NNI\\Experiment-XLUOMA (Microsoft.ML.CLI.Utilities.PBarConsolePrinter.Print)\r\n2022-10-13 17:33:16.8446 DEBUG row count is unknown, count it explicitly (Microsoft.ML.CLI.Runners.AutoMLRunner.Instance_DiagnosticDataReceived)\r\n2022-10-13 17:33:16.8627 DEBUG count elapse 16ms (Microsoft.ML.CLI.Runners.AutoMLRunner.Instance_DiagnosticDataReceived)\r\n2022-10-13 17:33:16.8627 INFO Forcasting (Microsoft.ML.CLI.Utilities.PBarConsolePrinter.Print)\r\n2022-10-13 17:33:16.9278 ERROR System.InvalidOperationException: No valid columns to save\r\n   at Microsoft.ML.Data.DataSaverUtils.SaveDataView(IChannel ch, IDataSaver saver, IDataView view, Stream stream, Boolean keepHidden)\r\n   at Microsoft.ML.BinaryLoaderSaverCatalog.SaveAsBinary(DataOperationsCatalog catalog, IDataView data, Stream stream, Boolean keepHidden)\r\n   at Microsoft.ML.ModelBuilder.AutoMLService.Proposer.ResampleStrategyProposer.InitializeForecasting(TrialParameter trialParameter) in /_/src/Microsoft.ML.ModelBuilder.AutoMLService/Proposer/ResampleStrategyProposer.cs:line 141\r\n   at Microsoft.ML.ModelBuilder.AutoMLService.Proposer.ResampleStrategyProposer.Propose(TrialParameter trialParameter) in /_/src/Microsoft.ML.ModelBuilder.AutoMLService/Proposer/ResampleStrategyProposer.cs:line 51\r\n   at Microsoft.ML.ModelBuilder.AutoMLService.Proposer.Controller.Propose() in /_/src/Microsoft.ML.ModelBuilder.AutoMLService/Proposer/Controller.cs:line 65\r\n   at Microsoft.ML.ModelBuilder.AutoMLService.Experiments.LocalAutoMLExperiment.ExecuteAsync(IDataView trainData, IDataView validateData, ColumnInformation columnInformation, CancellationToken cancellationToken, CancellationToken timeout) in /_/src/Microsoft.ML.ModelBuilder.AutoMLService/Experiments/LocalAutoMLExperiment.cs:line 163\r\n   at Microsoft.ML.ModelBuilder.AutoMLEngine.StartTrainingAsync(TrainingConfiguration config, PathConfiguration pathConfig, CancellationToken userCancellationToken) in /_/src/Microsoft.ML.ModelBuilder.AutoMLService/AutoMLEngineService/AutoMLEngine.cs:line 160\r\n   at Microsoft.ML.CLI.Runners.AutoMLRunner.ExecuteAsync() in /_/src/mlnet/Runners/AutoMLRunner.cs:line 88\r\n   at Microsoft.ML.CLI.Program.TrainAsync(TrainingConfiguration trainingConfiguration, PathConfiguration pathConfig, AutoMLServiceLogLevel logLevel) in /_/src/mlnet/Program.cs:line 348\r\n   at Microsoft.ML.CLI.Program.AutoMLCommandRunner(AutoMLCommand command, Boolean skipGenerateConsoleApp) in /_/src/mlnet/Program.cs:line 329\r\n   at Microsoft.ML.CLI.Program.<>c.<<CreateRootCommandLineBuilder>b__4_6>d.MoveNext() in /_/src/mlnet/Program.cs:line 235\r\n--- End of stack trace from previous location ---\r\n   at System.CommandLine.Invocation.CommandHandler.GetExitCodeAsync(Object value, InvocationContext context)\r\n   at System.CommandLine.Invocation.ModelBindingCommandHandler.InvokeAsync(InvocationContext context)\r\n   at System.CommandLine.Invocation.InvocationPipeline.<>c__DisplayClass4_0.<<BuildInvocationChain>b__0>d.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at System.CommandLine.Builder.CommandLineBuilderExtensions.<>c__DisplayClass23_0.<<UseParseErrorReporting>b__0>d.MoveNext()\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/6374","RelatedDescription":"Closed issue \"mlnet forecasting CLI doesn't appear to work\" (#6374)"},{"Id":"1407459946","IsPullRequest":false,"CreatedAt":"2022-10-13T09:27:35","Actor":"mikegoatly","Number":"6375","RawContent":null,"Title":"KMeans cluster analysis is non-deterministic, even with fixed MLContext seed","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 10 \r\n - ML.NET Version: ML.NET v1.7.1 (also tested with 2.0.0-preview.22313.1)\r\n - .NET Version: NET 6.0\r\n\r\n**Describe the bug**\r\nWhen creating a KMeans cluster prediction engine for a training data set that does not change, the predicted cluster ids\r\nare not consistent, even when the seed is specified for the MLContext.\r\n\r\n**To Reproduce**\r\nFor this fixed data set:\r\n\r\n``` csharp\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.Data;\r\n\r\npublic class ModelData\r\n{\r\n    public float Value1 { get; set; }\r\n    public float Value2 { get; set; }\r\n}\r\n\r\npublic class ClusterPrediction\r\n{\r\n    [ColumnName(\"PredictedLabel\")]\r\n    public uint PredictedClusterId;\r\n\r\n    [ColumnName(\"Score\")]\r\n    public float[] Distances = null!;\r\n\r\n    [ColumnName(\"Features\")]\r\n    public float[] Features = null!;\r\n}\r\n\r\nvar data = Enumerable.Range(0, 60).Select(x => new ModelData { Value1 = Random.Shared.Next(0, 2000), Value2 = Random.Shared.Next(0, 7) }).ToList();\r\n```\r\n\r\nAnd this function to create a new instance of the prediction engine:\r\n\r\n``` csharp\r\nconst string FeaturesColumnName = \"Features\";\r\nconst int ClusterCount = 4;\r\n\r\npublic PredictionEngine<ModelData, ClusterPrediction> CreateModel(IEnumerable<ModelData> data)\r\n{\r\n    var mlContext = new MLContext(seed: 0);\r\n\r\n    var dataView = mlContext.Data.LoadFromEnumerable(data);\r\n\r\n    IEstimator<ITransformer> pipeline = mlContext.Transforms\r\n        .Concatenate(FeaturesColumnName, new[] { nameof(ModelData.Value1), nameof(ModelData.Value2) })\r\n        .Append(mlContext.Clustering.Trainers.KMeans(FeaturesColumnName, numberOfClusters: ClusterCount));\r\n\r\n    var model = pipeline.Fit(dataView);\r\n\r\n    return mlContext.Model.CreatePredictionEngine<ModelData, ClusterPrediction>(model);\r\n}\r\n```\r\n\r\nWe should be able to create the same prediction engine producing the same results many times. The following creates the engine in a loop and calculates the cluster ids for each of the data set's data points, displaying the number of items that end up in each of the clusters:\r\n\r\n``` csharp\r\nusing System.Linq;\r\n\r\nfor (var i = 0; i < 10; i++)\r\n{\r\n    var engine = CreateModel(data);\r\n\r\n    var clusterCounts = data.Select(d => engine.Predict(d).PredictedClusterId).ToLookup(x => (int)x);\r\n\r\n    Console.WriteLine(string.Join(\" \", Enumerable.Range(1, ClusterCount).Select(x => $\"Cluster {x}: {clusterCounts[x].Count()} items\")));\r\n}\r\n```\r\n\r\nThis outputs:\r\n\r\n```\r\nCluster 1: 20 items Cluster 2: 15 items Cluster 3: 12 items Cluster 4: 13 items\r\nCluster 1: 13 items Cluster 2: 20 items Cluster 3: 12 items Cluster 4: 15 items\r\nCluster 1: 15 items Cluster 2: 15 items Cluster 3: 17 items Cluster 4: 13 items\r\nCluster 1: 23 items Cluster 2: 22 items Cluster 3: 8 items Cluster 4: 7 items\r\nCluster 1: 20 items Cluster 2: 15 items Cluster 3: 12 items Cluster 4: 13 items\r\nCluster 1: 20 items Cluster 2: 15 items Cluster 3: 12 items Cluster 4: 13 items\r\nCluster 1: 22 items Cluster 2: 23 items Cluster 3: 8 items Cluster 4: 7 items\r\nCluster 1: 20 items Cluster 2: 13 items Cluster 3: 15 items Cluster 4: 12 items\r\nCluster 1: 20 items Cluster 2: 15 items Cluster 3: 12 items Cluster 4: 13 items\r\nCluster 1: 20 items Cluster 2: 15 items Cluster 3: 12 items Cluster 4: 13 items\r\n```\r\n\r\n**Expected behavior**\r\nI would expect that each time the cluster is constructed from an MLContext with a fixed seed, the predicted cluster counts would be identical, with the same data points associated to them.\r\n\r\n**Screenshots, Code, Sample Projects**\r\nI've attached a [.NET Interactive notebook (zipped)](https://github.com/dotnet/machinelearning/files/9774987/kmeans.cluster.analysis.zip) for ease of reproduction.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6375","RelatedDescription":"Open issue \"KMeans cluster analysis is non-deterministic, even with fixed MLContext seed\" (#6375)"},{"Id":"1407232024","IsPullRequest":true,"CreatedAt":"2022-10-13T06:37:06","Actor":"rgesteve","Number":"6373","RawContent":null,"Title":" LBFGS Logistic regression accelerated with  OneDAL (builds against Random Forest PR #6364)","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues (N/A)\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know. (please see below)\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\nProvides an accelerated (under certain circumstances) path to do logistic regression with the LBFGS optimizer.  This assumes the algorithm is running on a suitable platform (non-ARM CPU) and is enabled by setting the environment variable MLNET_BACKEND to \"ONEDAL\" (a few extra checks are done against the shape of the dataset to ensure acceleration).  Beyond this \"knob\", no change is required in user code.\r\n\r\nThis change builds on the infrastructure provided by PR #6364 in terms of OneDAL build and runtime support.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6373","RelatedDescription":"Open PR \" LBFGS Logistic regression accelerated with  OneDAL (builds against Random Forest PR #6364)\" (#6373)"},{"Id":"1401368741","IsPullRequest":true,"CreatedAt":"2022-10-12T20:08:56","Actor":"FranklinWhale","Number":"6359","RawContent":null,"Title":"Add option to skip PrintMemoryStats in FastTree","State":"closed","Body":"Fixes #2444\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6359","RelatedDescription":"Closed or merged PR \"Add option to skip PrintMemoryStats in FastTree\" (#6359)"},{"Id":"1403454773","IsPullRequest":true,"CreatedAt":"2022-10-12T19:34:19","Actor":"adiaaida","Number":"6365","RawContent":null,"Title":"Use latest docker containers","State":"closed","Body":"This change moves all of the docker images to the latest tag as part of https://github.com/dotnet/arcade/issues/10377.\r\n\r\nAlso updates EOL containers to newer versions.\r\n\r\nWe are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6365","RelatedDescription":"Closed or merged PR \"Use latest docker containers\" (#6365)"},{"Id":"1405742303","IsPullRequest":false,"CreatedAt":"2022-10-12T07:52:08","Actor":"crazyoutlook","Number":"6372","RawContent":null,"Title":"ML.Net not using Integrated Intel GPU","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 10\r\n - ML.NET Version: ML.NET v1.6, ML.OnnxRuntime v1.7, ML.OnnxRuntime.Gpu v1.13\r\n - .NET Version: NET 6.0\r\n - GPU: Integrated GPU\r\n -  \r\n**Describe the bug**\r\nML.NET is NOT using my intel integrated graphics - Inter HD Graphics 620. I am running ONNX model with ML.NET\r\nHowever, When I execute same code on a desktop which has dedicated graphics card (Nvidia), it uses GPU\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Run the ML.NET ONNX pipeline code on a machine which has integrated graphics card\r\n2. Check GPU usage. It shows GPU not being used. Instead, it used CPU\r\n3. Run the ML.NET ONNX pipeline code on a machine which has dedicated graphics card\r\n4. Check GPU usage. It shows GPU being used.\r\n\r\n**Expected behavior**\r\nIf the machine has integrated graphics card, then ML.NET should use it.\r\n\r\n**Screenshots, Code, Sample Projects**\r\n var pipeline = mlContext.Transforms.ResizeImages(resizing: ImageResizingEstimator.ResizingKind.Fill, outputColumnName: \"data\", imageWidth: ImageSettings.imageWidth, imageHeight: ImageSettings.imageHeight, inputColumnName: nameof(ImageInput.Image))\r\n                                .Append(mlContext.Transforms.ExtractPixels(outputColumnName: \"data\", orderOfExtraction: ImagePixelExtractingEstimator.ColorsOrder.AGRB))\r\n                                .Append(mlContext.Transforms.ApplyOnnxModel(modelFile: modeltoInfer.ModelPath, outputColumnName: \"model_outputs0\", inputColumnName: \"data\", gpuDeviceId: 0, fallbackToCpu: true));\r\n\r\nIn above piece of code, I am using gpuDeviceId:0 and fallbackToCpu:True\r\n\r\n**Additional context**\r\nI am using value: gpuDeviceId:0 for integrated graphics card. Should I be using something else if I am using integrated card ?\r\n\r\n![gpu](https://user-images.githubusercontent.com/67651625/195282925-d5e8364b-169b-42e6-92c2-44e641bdc64c.PNG)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6372","RelatedDescription":"Open issue \"ML.Net not using Integrated Intel GPU\" (#6372)"},{"Id":"1405623033","IsPullRequest":false,"CreatedAt":"2022-10-12T06:07:11","Actor":"crazyoutlook","Number":"6371","RawContent":null,"Title":"Replace ImagePixelExtractingEstimator values at runtime","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nI am using orderOfExtraction: ImagePixelExtractingEstimator.ColorsOrder for ONNX pipeline. However, I need to select exact values for this attribute like:: orderOfExtraction: ImagePixelExtractingEstimator.ColorsOrder.ARBG. There are 6 options to select from (ARGB, ARBG, ABRG, ABGR, AGRB, AGBR). Instead of hardcoding these attribute values I need to pass a variable at runtime for these.\r\n\r\n**Describe the solution you'd like**\r\nFor ONNX orderOfExtraction: ImagePixelExtractingEstimator.ColorsOrder.ARBG, there are 6 options to select from (ARGB, ARBG, ABRG, ABGR, AGRB, AGBR). Instead of hardcoding these attribute values I need to pass a variable at runtime for these.\r\n\r\n**Describe alternatives you've considered**\r\nI tried to replace this value as variable, but I am not sure how can I use variable in place of this attribute value.\r\n\r\n**Additional context**\r\n var pipeline = mlContext.Transforms.ResizeImages(resizing: ImageResizingEstimator.ResizingKind.Fill, outputColumnName: \"data\", imageWidth: ImageSettings.imageWidth, imageHeight: ImageSettings.imageHeight, inputColumnName: nameof(ImageInput.Image))\r\n                                .Append(mlContext.Transforms.ExtractPixels(outputColumnName: \"data\", orderOfExtraction: ImagePixelExtractingEstimator.ColorsOrder.AGRB))\r\n                                .Append(mlContext.Transforms.ApplyOnnxModel(modelFile: modeltoInfer.ModelPath, outputColumnName: \"model_outputs0\", inputColumnName: \"data\", gpuDeviceId: gpuDeviceId, fallbackToCpu: fallbackToCpu));\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6371","RelatedDescription":"Open issue \"Replace ImagePixelExtractingEstimator values at runtime\" (#6371)"},{"Id":"1405596611","IsPullRequest":false,"CreatedAt":"2022-10-12T05:37:18","Actor":"sp44rk","Number":"6370","RawContent":null,"Title":"Exposing the tree for multiclass classification","State":"open","Body":"Hey.\r\n\r\nWe are currently porting our Code from the Accord framework to ML.net and struggle to do so.  In the Accord.net framework we are using the C4.5 decision tree algorithm to process our data and so we were looking into multiclass trainers from ML.net. \r\n\r\nWith Accord.net we have the ability to inspect the trained tree and expose this via text form to the user. Are we able to get the same information with ML.net?\r\n\r\nAfter reading into #4275 we are actively looking into the LightGBM trainer, but I am only able to find the trained tree ensemble for all the other options except the multiclass classification version of LightGBM.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6370","RelatedDescription":"Open issue \"Exposing the tree for multiclass classification\" (#6370)"},{"Id":"1405348411","IsPullRequest":false,"CreatedAt":"2022-10-11T23:28:56","Actor":"luisquintanilla","Number":"6369","RawContent":null,"Title":"Custom ONNX Export Code","State":"open","Body":"## Problem\r\n\r\nToday in ML.NET, for scenarios where a transform isn't implemented, you can build a custom transform either using:\r\n\r\n- Expression transform\r\n- CustomMapping transform\r\n\r\nHowever, neither is exportable to ONNX making it difficult to share and reuse code for ONNX models. \r\n\r\n## Existing solutions\r\n\r\nIn Python, this is currently possible via [onnxruntime-extensions](https://github.com/microsoft/onnxruntime-extensions).\r\n\r\n## Proposed solution\r\n\r\nEnable .NET developers to write export code that is embeddable as part of the exported ONNX model making any pre/post-processing code as well as any other custom code written to be used as part of an ML.NET pipeline is exportable to ONNX. ","Url":"https://github.com/dotnet/machinelearning/issues/6369","RelatedDescription":"Open issue \"Custom ONNX Export Code\" (#6369)"},{"Id":"1405177927","IsPullRequest":false,"CreatedAt":"2022-10-11T20:18:19","Actor":"luisquintanilla","Number":"6368","RawContent":null,"Title":"Update paths for Text Classification API files","State":"open","Body":"As part of the model training process, some files like *dict.txt*, *encoder.json*, and *vocab.bpe* are created and stored using absolute paths. For some scenarios like Model Builder, it breaks the experience. \r\n\r\nUpdate ML.NET to store these files using relative paths or allow users to set the path they want to store files in (similar to `workspacePath` in Image Classification trainer)","Url":"https://github.com/dotnet/machinelearning/issues/6368","RelatedDescription":"Open issue \"Update paths for Text Classification API files\" (#6368)"},{"Id":"1403618036","IsPullRequest":true,"CreatedAt":"2022-10-10T19:29:01","Actor":"ericstj","Number":"6367","RawContent":null,"Title":"Attempt to retarget tests to .NET 6.0","State":"open","Body":"Trying out retargeting our tests to .NET 6.0.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6367","RelatedDescription":"Open PR \"Attempt to retarget tests to .NET 6.0\" (#6367)"},{"Id":"1403548408","IsPullRequest":false,"CreatedAt":"2022-10-10T18:15:58","Actor":"luisquintanilla","Number":"6366","RawContent":null,"Title":"Custom weight criteria for NGramExtractingEstimator","State":"open","Body":"## Problem\r\n\r\nToday, the [`NGramExtractingEstimator`](https://learn.microsoft.com/dotnet/api/microsoft.ml.transforms.text.ngramextractingestimator?view=ml-dotnet) is used by the [ProduceWordBags](https://learn.microsoft.com/dotnet/api/microsoft.ml.textcatalog.producewordbags?view=ml-dotnet) and [ProduceNGrams](https://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.textcatalog.producengrams?view=ml-dotnet) estimators. \r\n\r\nBoth estimators allow you to choose how the weight of the NGram vector is calculated using either:\r\n\r\n- Term Frequency (TF)\r\n- Inverse Document Frequency (IDF)\r\n- Term Frequency-Inverse Document Frequency (TF-IDF)\r\n\r\nAlthough these are common ways to calculate NGram weight, there are scenarios where users want to provide custom weights. In its current implementation, ProduceWordBags and ProduceNGrams don't allow for users to provide custom weights. \r\n\r\n## Suggested solution\r\n\r\nProvide a method overload for ProduceWordBags and ProduceNGrams that allows users to pass in custom weights alongside the text inputs. \r\n\r\n## Open questions\r\n\r\n- What format does ML.NET expect the input to be in when providing custom weights?\r\n- How are custom weights provided for NGrams of length > 1?","Url":"https://github.com/dotnet/machinelearning/issues/6366","RelatedDescription":"Open issue \"Custom weight criteria for NGramExtractingEstimator\" (#6366)"},{"Id":"1402521463","IsPullRequest":true,"CreatedAt":"2022-10-10T02:48:27","Actor":"rgesteve","Number":"6364","RawContent":null,"Title":"Random forest onedal","State":"open","Body":"We are excited to review your PR.\r\n\r\nIncludes acceleration (based on OneDAL) for RandomForest Trainers.  To engage, enable `MLNET_BACKEND` environment variable.  No further change is necessary at the user level.   At the developer level, these improvements require a copy of the OneDAL Data Analytics Library from Intel, against which a stub library is built and P/Invoked into.  Tests and benchmarks are to follow in this PR.\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] (N/A) There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6364","RelatedDescription":"Open PR \"Random forest onedal\" (#6364)"},{"Id":"1402396831","IsPullRequest":true,"CreatedAt":"2022-10-09T21:03:08","Actor":"tarekgh","Number":"6363","RawContent":null,"Title":"Remove the System.Drawing dependency","State":"open","Body":"**Description**\r\n\r\nThe change here is removing the dependency on System.Drawing and replacing it with a public class `Imager` for image handling. It allows users to use `Imager` directly for image handling. It is important to note that this is a `breaking change`.\r\nThe change contains update to the samples code too.\r\n\r\n**Public Interfaces**\r\n```C#\r\nnamespace Microsoft.ML.Data\r\n{\r\n    /// <summary>\r\n    /// Provide interfaces for imaging operations.\r\n    /// </summary>\r\n    public class MLImage : IDisposable\r\n    {\r\n        /// <summary>\r\n        /// Create a new MLImage instance from a stream.\r\n        /// </summary>\r\n        /// <param name=\"imageStream\">The stream to create the image from.</param>\r\n        /// <returns>MLImage object.</returns>\r\n        public static MLImage CreateFromStream(Stream imageStream)\r\n        {\r\n        }\r\n\r\n        /// <summary>\r\n        /// Create a new MLImage instance from a stream.\r\n        /// </summary>\r\n        /// <param name=\"imagePath\">The image file path to create the image from.</param>\r\n        /// <returns>MLImage object.</returns>\r\n        public static MLImage CreateFromFile(string imagePath)\r\n        {\r\n        }\r\n\r\n        /// <summary>\r\n        /// Creates MLImage object from the pixel data span.\r\n        /// </summary>\r\n        /// <param name=\"width\">The width of the image in pixels.</param>\r\n        /// <param name=\"height\">The height of the image in pixels.</param>\r\n        /// <param name=\"pixelFormat\">The pixel format to create the image with.</param>\r\n        /// <param name=\"imagePixelData\">The pixels data to create the image from.</param>\r\n        /// <returns>MLImage object.</returns>\r\n        public static unsafe MLImage CreateFromPixels(int width, int height, MLPixelFormat pixelFormat, ReadOnlySpan<byte> imagePixelData)\r\n        {\r\n        }\r\n\r\n        /// <summary>\r\n        /// Gets the pixel format for this Image.\r\n        /// </summary>\r\n        public MLPixelFormat PixelFormat { get; }\r\n\r\n        /// <summary>\r\n        /// Gets the image pixel data.\r\n        /// </summary>\r\n        public ReadOnlySpan<byte> Pixels { get { } }\r\n\r\n        /// <summary>\r\n        /// Gets or sets the image tag.\r\n        /// </summary>\r\n        public string Tag { get; set; }\r\n\r\n        /// <summary>\r\n        /// Gets the image width in pixels.\r\n        /// </summary>\r\n        public int Width { get { } }\r\n\r\n        /// <summary>\r\n        /// Gets the image height in pixels.\r\n        /// </summary>\r\n        public int Height { get { } }\r\n\r\n        /// <summary>\r\n        /// Gets how many bits per pixel used by current image object.\r\n        /// </summary>\r\n        public int BitsPerPixel { get { } }\r\n\r\n        /// <summary>\r\n        /// Save the current image to a file.\r\n        /// </summary>\r\n        /// <param name=\"imagePath\">The path of the file to save the image to.</param>\r\n        /// <remarks>The saved image encoding will be detected from the file extension.</remarks>\r\n        public void Save(string imagePath) \r\n        {\r\n        }\r\n\r\n        /// <summary>\r\n        /// Disposes the image.\r\n        /// </summary>\r\n        public void Dispose()\r\n        {\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// The mode to decide how the image should be resized.\r\n    /// </summary>\r\n    public enum MLPixelFormat\r\n    {\r\n        /// <summary>\r\n        /// Pads the resized image to fit the bounds of its container.\r\n        /// </summary>\r\n        Unknown,\r\n\r\n        /// <summary>\r\n        /// Specifies that the format is 32 bits per pixel; 8 bits each are used for the blue, green, red, and alpha components.\r\n        /// </summary>\r\n        Bgra32,\r\n\r\n        /// <summary>\r\n        /// Specifies that the format is 32 bits per pixel; 8 bits each are used for the red, green, blue, and alpha components.\r\n        /// </summary>\r\n        Rgba32\r\n    }\r\n```\r\n\r\n**Examples**\r\n\r\n*Load Image*\r\n```C#\r\nusing Stream stream = new FileStream(@\"tomato.bmp\", FileMode.Open);\r\nMLImage image = MLImage.CreateFromStream(stream);\r\n```\r\n\r\n*Load from pixel data*\r\n```C#\r\nbyte[] imageData = new byte[width * height * 4]; // 4 for the red, green, blue, and alpha colors\r\nfor (int i = 0; i < imageData.Length; i += 4)\r\n{\r\n    // Fill the buffer with the Bgra32 format\r\n    imageData[i] = blue;\r\n    imageData[i + 1] = green;\r\n    imageData[i + 2] = red;\r\n    imageData[i + 3] = alpha;\r\n}\r\n\r\nMLImage image = MLImage .CreateFromPixels(width, height, MLPixelFormat.Bgra32, imageData);\r\n```\r\n\r\n*Access the image pixel data*\r\n```C#\r\nReadOnlySpan<byte> pixelData = image.Pixels;\r\n```\r\n\r\n*Save the image*\r\n```C#\r\nimage. Save(@\"foo.png\");\r\n```\r\n\r\n**Breaking Change*\r\nThe breaking change is mostly about the used data with the Image analytic transformers. Previously, `System.Drawing.Bitmap` type was used. Now this is replaced with the `Imager` type. Here is an example:\r\n\r\n```diff\r\n-var image = Image.FromFile(imagePath) as Bitmap;\r\n+var image = MLImage.CreateFromFile(imagePath);\r\n```\r\n\r\nand then use the created image object, something like:\r\n\r\n```C#\r\nvar prediction = transformer.Predict(image);\r\n```\r\n\r\nIt is a good idea to look at the sample code changes in this PR which give a better idea how users can migrate from using `System.Drawing` to `Imager` class.\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6363","RelatedDescription":"Open PR \"Remove the System.Drawing dependency\" (#6363)"},{"Id":"1401670564","IsPullRequest":true,"CreatedAt":"2022-10-07T23:37:22","Actor":"LittleLittleCloud","Number":"6362","RawContent":null,"Title":"add text classification in sweepable estimator","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6362","RelatedDescription":"Closed or merged PR \"add text classification in sweepable estimator\" (#6362)"},{"Id":"1398252094","IsPullRequest":true,"CreatedAt":"2022-10-07T20:54:39","Actor":"ericstj","Number":"6355","RawContent":null,"Title":"Remove Microsoft.ML.Featurizers","State":"closed","Body":"This component was built on https://github.com/microsoft/featurizerslibrary which is no longer actively developed.","Url":"https://github.com/dotnet/machinelearning/pull/6355","RelatedDescription":"Closed or merged PR \"Remove Microsoft.ML.Featurizers\" (#6355)"},{"Id":"1401571459","IsPullRequest":false,"CreatedAt":"2022-10-07T19:10:24","Actor":"LittleLittleCloud","Number":"6361","RawContent":null,"Title":"RegressionEvaluator return 0 for MSE && RMSE if all scores are NaN","State":"open","Body":"It seems that RegressionEvaluator filters out all `NaN` scores when calculating metrics. So if a predictor produces `NaN` only for the entire evaluation dataset, the RMSE and MSE from RegressionEvaluator would be 0, which is ironically the best result it can get. \r\n\r\nWhile it may need further discussion, I wonder if it's necessary to _FILTER_ out the `NaN` value when calculating metrics, as `NaN` in prediction result usually indicates a model is not well-trained, and thus should be reflected in evaluation metrics.","Url":"https://github.com/dotnet/machinelearning/issues/6361","RelatedDescription":"Open issue \"RegressionEvaluator return 0 for MSE && RMSE if all scores are NaN\" (#6361)"},{"Id":"1401469700","IsPullRequest":false,"CreatedAt":"2022-10-07T17:17:13","Actor":"luisquintanilla","Number":"6360","RawContent":null,"Title":"ONNX Tracking Issue","State":"open","Body":"Issue to track bugs / requests related to ONNX\r\n\r\n## Increased export coverage\r\n\r\n- [ ] #6317\r\n- [ ] #4615\r\n- [ ] #6369\r\n\r\n## Performance improvements\r\n\r\n- [ ] #6264 \r\n- [ ] #5240\r\n- [ ] #6212 \r\n- [ ] #5928\r\n- [ ] #5597\r\n\r\n## UX improvements\r\n\r\n- [ ] #4335\r\n- [ ] #5976\r\n\r\n## Result discrepancies\r\n\r\n- [ ] #6324\r\n- [ ] #6067\r\n- [ ] #5830\r\n- [ ] #5549\r\n\r\n## Still relevant?\r\n\r\n- [ ] #5985 (Maybe done since you can now save the useGPU flag or pass it in the MLContext)?\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6360","RelatedDescription":"Open issue \"ONNX Tracking Issue\" (#6360)"},{"Id":"1400547870","IsPullRequest":false,"CreatedAt":"2022-10-07T02:48:07","Actor":"alisalih1","Number":"6358","RawContent":null,"Title":"DataFrame.LoadCsv method should allow selection of columns","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\n**DataFrame.LoadCsv** method currently doesn't allow the selection of columns while processing a CSV file, and loads all the columns and rows into the df object. This may cause inefficiencies in processing in large datasets, if the user needs to work with subsection of the data. \r\n\r\n**Describe the solution you'd like**\r\nThe method should have a parameter for \"Selecting\" columns while loading a CSV file into the df object. This improvement is inline with how python Pandas library is structured and helps tremendously. A new parameter named **useColumns** would help to load only selected columns into the df object, thus reducing the unnecessary footprint.\r\n\r\n**Describe alternatives you've considered**\r\nTried columnNames but didn't work as it renames all the columns in order, not working as expected to 'select' only the columns one may need.\r\n\r\n**Additional context**\r\nNone. \r\n","Url":"https://github.com/dotnet/machinelearning/issues/6358","RelatedDescription":"Open issue \"DataFrame.LoadCsv method should allow selection of columns\" (#6358)"},{"Id":"1399857862","IsPullRequest":false,"CreatedAt":"2022-10-06T15:23:13","Actor":"kretovd","Number":"6357","RawContent":null,"Title":"Apply VectorTypeAttribute to data array of unknown length","State":"open","Body":"I'm new to ML.NET \r\nI have data array of unknown length, how to correctly apply the VectorTypeAttribute to solve the Binary classifier problem\r\n```\r\n1\t[1,2,3],[0,4,5],[1,9,8],[0,0,0] \r\n1\t[0,8,3],[1,5,8]\r\n0\t[1,1,1]\r\n0\t[1,2,3],[0,4,5],[1,9,8],[0,0,0],[1,1,1],[0,0,0],[1,1,1],[0,0,0],[1,1,1],[0,0,0],[1,1,1],[0,0,0],[1,1,1]\r\n0\t[0,8,3],[1,5,8],[1,1,1]\r\n```\r\nmy data class is\r\n\r\n```\r\npublic class Data\r\n{\r\n    [LoadColumn(0)]\r\n    public bool Selection;\r\n\r\n    [LoadColumn(1)]\r\n    [VectorType]\r\n    public List<int[]> Data;\r\n}\r\n```\r\nIs it correct?\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6357","RelatedDescription":"Open issue \"Apply VectorTypeAttribute to data array of unknown length\" (#6357)"},{"Id":"1399201342","IsPullRequest":false,"CreatedAt":"2022-10-06T09:27:27","Actor":"JeroenMBooij","Number":"6356","RawContent":null,"Title":"Microsoft.Data.Analysis update value in Dataframe column ","State":"open","Body":"Not sure if this the right place, but I want to request a feature for the Microsoft.Data.Analysis library. When I am working with a DataFrame in C# and I want to update a value in a specific value in a column I need the row index, but the rowIndex is a private field. So the only way to update a specific value is to hard code it if you know the rowIndex.\r\n\r\nI would like to update a specific row in a dataframe like in the example below, so that _index becomes accessible with an Index property:\r\n\r\n```\r\n        public void UpdateBatch(List<TestExtractionl> testExtractions)\r\n        {\r\n            DataFrame testDataframe = DataFrame.LoadCsv(_storageLocation, ';');\r\n\r\n            foreach(TechExtractionModel testExtraction in testExtractions)\r\n            {\r\n                var test = testDataframe.Filter(testDataframe[\"foo\"].ElementwiseEquals(testExtraction.Name));\r\n                testDataframe[\"bar\"][test.Rows.FirstOrDefault()._index] == testExtraction.Description;\r\n\r\n           }\r\n        }\r\n\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/6356","RelatedDescription":"Open issue \"Microsoft.Data.Analysis update value in Dataframe column \" (#6356)"},{"Id":"1398103400","IsPullRequest":false,"CreatedAt":"2022-10-05T17:04:05","Actor":"nhirschey","Number":"6353","RawContent":null,"Title":"CreateEnumerable code fails in Visual Studio FSI but works in .NET Interactive notebook?","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11 \r\n - ML.NET Version: Microsoft.ML.AutoML, 0.20.0-preview.22356.1\r\n - .NET Version: failed on both 6.0.400 and 7.0.100-rc.1.22431.12\r\n\r\n**Describe the bug**\r\nI am trying to create an F# IEnumerable from predictions. The code works in .NET Interactive notebooks, but it does not work in Visual Studio 2022 17.3.2 via F# interactive. I have also tried pasting the code into F# interactive by running `dotnet fsi` at the command line, but I get the same error.\r\n\r\nWhen I run it in a notebook, I get predictions as expected. When I run it in a FSX script file in Visual Studio, I get the error \"Could not find  column 'Predicted@' (Parameter 'Schema')\", yet the schema has a parameter named \"Predicted\".\r\n\r\n**To Reproduce**\r\nCode\r\n```fsharp\r\n#i \"nuget:https://pkgs.dev.azure.com/dnceng/public/_packaging/MachineLearning/nuget/v3/index.json\"\r\n#r \"nuget: Microsoft.ML.AutoML, 0.20.0-preview.22356.1\"\r\n\r\nopen System\r\nopen Microsoft.ML\r\nopen Microsoft.ML.Data\r\n\r\nlet mlContext = new MLContext()\r\n\r\n[<CLIMutable>]\r\ntype Predictors =\r\n    {\r\n        Date: DateTime\r\n        Return: single\r\n        DividendPrice: single\r\n    }\r\n\r\nlet predictors =\r\n    [{ Date = DateTime(1872,2,1)\r\n       Return = 0.008688271977f\r\n       DividendPrice = 0.05482897535f };\r\n     { Date = DateTime(1872,3,1)\r\n       Return = 0.03739754111f\r\n       DividendPrice = 0.05333504081f };\r\n     { Date = DateTime(1872,4,1)\r\n       Return = 0.03229662776f\r\n       DividendPrice = 0.05175264552f};\r\n     { Date = DateTime(1872,5,1)\r\n       Return = 0.004451415502f\r\n       DividendPrice = 0.05051480234f }]\r\n\r\nlet mlData = mlContext.Data.LoadFromEnumerable(predictors)\r\n\r\nlet modelFit =\r\n    let model =\r\n        EstimatorChain()\r\n            .Append(mlContext.Transforms.CopyColumns(\"Label\",\"Return\"))\r\n            .Append(mlContext.Transforms.Concatenate(\"Features\",\"DividendPrice\"))\r\n            .Append(mlContext.Regression.Trainers.Ols())\r\n    model.Fit(mlData)\r\n\r\n[<CLIMutable>]\r\ntype Prediction =\r\n    {\r\n        Predicted: single\r\n        Date: DateTime\r\n    }\r\n\r\nlet pred = modelFit.Transform(mlData)\r\nlet renamePipeline = mlContext.Transforms.CopyColumns(\"Predicted\",\"Score\")\r\nlet renamed = renamePipeline.Fit(pred).Transform(pred)\r\nmlContext.Data.CreateEnumerable<Prediction>(renamed,reuseRowObject=false)\r\n```\r\n\r\n### Output in .NET interactive:\r\n<html>\r\n<body>\r\n<!--StartFragment-->\r\n\r\nindex | Predicted | Date\r\n-- | -- | --\r\n0 | 0.022715298 | 1872-02-01 00:00:00Z\r\n1 | 0.021365488 | 1872-03-01 00:00:00Z\r\n2 | 0.019935748 | 1872-04-01 00:00:00Z\r\n3 | 0.018817322 | 1872-05-01 00:00:00Z\r\n\r\n<!--EndFragment-->\r\n</body>\r\n</html>\r\n\r\n### Output in Visual Studio:\r\n```\r\nSystem.ArgumentOutOfRangeException: Could not find  column 'Predicted@' (Parameter 'Schema')\r\n   at Microsoft.ML.Data.TypedCursorable`1..ctor(IHostEnvironment env, IDataView data, Boolean ignoreMissingColumns, InternalSchemaDefinition schemaDefn)\r\n   at Microsoft.ML.Data.TypedCursorable`1.Create(IHostEnvironment env, IDataView data, Boolean ignoreMissingColumns, SchemaDefinition schemaDefinition)\r\n   at Microsoft.ML.Data.CursoringUtils.AsCursorable[TRow](IHostEnvironment env, IDataView data, Boolean ignoreMissingColumns, SchemaDefinition schemaDefinition)\r\n   at Microsoft.ML.PipeEngine`1..ctor(IHostEnvironment env, IDataView pipe, Boolean ignoreMissingColumns, SchemaDefinition schemaDefinition)\r\n   at Microsoft.ML.DataOperationsCatalog.CreateEnumerable[TRow](IDataView data, Boolean reuseRowObject, Boolean ignoreMissingColumns, SchemaDefinition schemaDefinition)\r\n   at <StartupCode$FSI_0004>.$FSI_0004.main@() in C:\\test.fsx:line 52\r\nStopped due to error\r\n```\r\n\r\nHere is the schema\r\n```fsharp\r\n> renamed.Schema |> Seq.toArray\r\nval it: DataViewSchema.Column[] =\r\n  [|Date@: DateTime {Annotations = ;\r\n                     Index = 0;\r\n                     IsHidden = false;\r\n                     Name = \"Date@\";\r\n                     Type = DateTime;}; Return@: Single {Annotations = ;\r\n                                                         Index = 1;\r\n                                                         IsHidden = false;\r\n                                                         Name = \"Return@\";\r\n                                                         Type = Single;};\r\n    DividendPrice@: Single {Annotations = ;\r\n                            Index = 2;\r\n                            IsHidden = false;\r\n                            Name = \"DividendPrice@\";\r\n                            Type = Single;}; Date: DateTime {Annotations = ;\r\n                                                             Index = 3;\r\n                                                             IsHidden = false;\r\n                                                             Name = \"Date\";\r\n                                                             Type = DateTime;};\r\n    Return: Single {Annotations = ;\r\n                    Index = 4;\r\n                    IsHidden = false;\r\n                    Name = \"Return\";\r\n                    Type = Single;};\r\n    DividendPrice: Single {Annotations = ;\r\n                           Index = 5;\r\n                           IsHidden = false;\r\n                           Name = \"DividendPrice\";\r\n                           Type = Single;}; Label: Single {Annotations = ;\r\n                                                           Index = 6;\r\n                                                           IsHidden = false;\r\n                                                           Name = \"Label\";\r\n                                                           Type = Single;};\r\n    Features: Vector<Single, 1> {SlotNames} {Annotations = SlotNames;\r\n                                             Index = 7;\r\n                                             IsHidden = false;\r\n                                             Name = \"Features\";\r\n                                             Type = Vector<Single, 1>;};\r\n    Score: Single {ScoreColumnSetId, ScoreColumnKind, ScoreValueKind}\r\n      {Annotations = ScoreColumnSetId, ScoreColumnKind, ScoreValueKind;\r\n       Index = 8;\r\n       IsHidden = false;\r\n       Name = \"Score\";\r\n       Type = Single;};\r\n    Predicted: Single {ScoreColumnSetId, ScoreColumnKind, ScoreValueKind}\r\n      {Annotations = ScoreColumnSetId, ScoreColumnKind, ScoreValueKind;\r\n       Index = 9;\r\n       IsHidden = false;\r\n       Name = \"Predicted\";\r\n       Type = Single;}|]\r\n```\r\n\r\n**Expected behavior**\r\nI expect the code to work in fsharp interactive\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6353","RelatedDescription":"Open issue \"CreateEnumerable code fails in Visual Studio FSI but works in .NET Interactive notebook?\" (#6353)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-10-17T03:30:23.9510624Z","RunDurationInMilliseconds":604}