{"Data":{"GitHub":{"Issues":[{"Id":"630373972","IsPullRequest":true,"CreatedAt":"2020-06-03T22:27:35","Actor":"michaelgsharp","Number":"5205","RawContent":null,"Title":"Added in new MissingValueReplacing method.","State":"open","Body":"Adds in the missing values replacing method of `Mode`. Replaces missing values with the most frequent value in a column. In the case that multiple values have the same count, the first one encountered is the one that is returned.\r\n\r\nThis also moves a test helping method from OnnxConverstionTest.cs into the BaseTestBaseline class so that every test class can use it.","Url":"https://github.com/dotnet/machinelearning/pull/5205","RelatedDescription":"Open PR \"Added in new MissingValueReplacing method.\" (#5205)"},{"Id":"630343727","IsPullRequest":false,"CreatedAt":"2020-06-03T21:26:40","Actor":"luisquintanilla","Number":"5204","RawContent":null,"Title":"Records | C# 9 + F# Improved Interop","State":"open","Body":"At //Build 2020, plans for [records in C# 9](https://devblogs.microsoft.com/dotnet/welcome-to-c-9-0/#records) were announced. Referencing issue #180 which originally raised this question. While you can use records in F# to define the `DataViewSchema`,  once records support becomes available in C# 9, it could potentially be an opportunity to further improve the interop and experience with F#.","Url":"https://github.com/dotnet/machinelearning/issues/5204","RelatedDescription":"Open issue \"Records | C# 9 + F# Improved Interop\" (#5204)"},{"Id":"630336084","IsPullRequest":false,"CreatedAt":"2020-06-03T21:14:00","Actor":"wangyems","Number":"5203","RawContent":null,"Title":"ApplyOnnxModel() throw runtime error in an ongoing sample for onnx conversion","State":"open","Body":"Can reproduce using https://github.com/dotnet/machinelearning/pull/5195/commits/0b1a59c95b281eedfd2bfb723b6b8e4e33182045\r\nThe related file is OnnxConversion.cs. \r\nJust curious why ML.NET model can make through but onnx model not.","Url":"https://github.com/dotnet/machinelearning/issues/5203","RelatedDescription":"Open issue \"ApplyOnnxModel() throw runtime error in an ongoing sample for onnx conversion\" (#5203)"},{"Id":"629466054","IsPullRequest":true,"CreatedAt":"2020-06-03T19:20:26","Actor":"michaelgsharp","Number":"5192","RawContent":null,"Title":"Fixed OnnxTransformer output column mapping.","State":"closed","Body":"Our OnnxTransformer has overrides that let you specify a subset of output columns, all the output columns, or let it figure it out from the onnx model. The issue was that if you manually specified either a subset of the columns, or all the columns, and did it in an order different then the onnx model, our transformer would not do the mapping correctly and it would try and access the wrong column. This usually resulted in an error that the types didn't match, but when types matched it just returned wrong data.\r\n\r\nThis PR fixes that issue by doing the correct mapping regardless of the order they are provided in.","Url":"https://github.com/dotnet/machinelearning/pull/5192","RelatedDescription":"Closed or merged PR \"Fixed OnnxTransformer output column mapping.\" (#5192)"},{"Id":"629601154","IsPullRequest":true,"CreatedAt":"2020-06-03T17:49:09","Actor":"harishsk","Number":"5197","RawContent":null,"Title":"Fixed version format of built packages","State":"closed","Body":"Since we are no longer using the pre-release tag, our package versions at the daily build have had an improper version string with two hyphens in a row. This PR fixes that issue. \r\nOur version format is not SemVer 2.0.0 compatible because according SemVer v2, the build metadata has to be separated by +. However this causes build warnings and attempting to fix the warnings causes the msbuild Pack task to not include build number in the package name. \r\nThat issue has to be resolved separately. ","Url":"https://github.com/dotnet/machinelearning/pull/5197","RelatedDescription":"Closed or merged PR \"Fixed version format of built packages\" (#5197)"},{"Id":"626944351","IsPullRequest":true,"CreatedAt":"2020-06-03T16:52:45","Actor":"wangyems","Number":"5176","RawContent":null,"Title":"Support onnx export with previous OpSet version","State":"closed","Body":"For Feature request: https://github.com/dotnet/machinelearning/issues/5171\r\n\r\n\r\nSupport exporting to onnx with a lower opset version\r\nupgrade opset version from 11 to 12","Url":"https://github.com/dotnet/machinelearning/pull/5176","RelatedDescription":"Closed or merged PR \"Support onnx export with previous OpSet version\" (#5176)"},{"Id":"629871252","IsPullRequest":true,"CreatedAt":"2020-06-03T10:14:07","Actor":"guinao","Number":"5202","RawContent":null,"Title":"Add deseasonality in SrCnnEntireAnomalyDetect","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5202","RelatedDescription":"Open PR \"Add deseasonality in SrCnnEntireAnomalyDetect\" (#5202)"},{"Id":"629846689","IsPullRequest":true,"CreatedAt":"2020-06-03T09:55:33","Actor":"suxi-ms","Number":"5201","RawContent":null,"Title":"Suxi/update","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5201","RelatedDescription":"Closed or merged PR \"Suxi/update\" (#5201)"},{"Id":"628869856","IsPullRequest":true,"CreatedAt":"2020-06-03T09:53:03","Actor":"suxi-ms","Number":"5187","RawContent":null,"Title":"Add anomalyDeltaThreshold for RCA","State":"closed","Body":"Update Root Cause Analysis interface.\r\n\r\n\r\n\r\n- [ ] For root cause analysis interface, we added a new parameter called anomalyDeltaThreshold for users to choose. \r\n- [ ] It won't break existing interface if some users are using it.\r\n- [ ] Fixes #5188 .\r\n- [ ] Related PR #4925 \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5187","RelatedDescription":"Closed or merged PR \"Add anomalyDeltaThreshold for RCA\" (#5187)"},{"Id":"629796148","IsPullRequest":true,"CreatedAt":"2020-06-03T08:21:50","Actor":"guinao","Number":"5200","RawContent":null,"Title":"Add Seasonality Detection","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5200","RelatedDescription":"Open PR \"Add Seasonality Detection\" (#5200)"},{"Id":"629733250","IsPullRequest":false,"CreatedAt":"2020-06-03T06:37:30","Actor":"MahdiKarimipour","Number":"5199","RawContent":null,"Title":"Loading ML Model from a Stream","State":"open","Body":"Trying to load a ML model from a stream (having the model as an embedded resource in the project), I get the below exception at mlContext.Model.Load() line. \r\n\r\nSame code snippet works if I load the model using the absolute filepath for the model.\r\n\r\nPackage Version: 1.5\r\n\r\n`\"System.ArgumentException: Illegal characters in path. (Parameter 'path')\\r\\n   at System.IO.Path.GetFullPath(String path)\\r\\n   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options)\\r\\n   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share)\\r\\n   at System.IO.File.OpenRead(String path)\\r\\n   at Microsoft.ML.ModelOperationsCatalog.Load(String filePath, DataViewSchema& inputSchema)\\r\\n   at PassionFruit.ML.Engines.SentimentPrediction.CreatePredictionEngine()`\r\n\r\n\r\n                // Create new MLContext\r\n                MLContext mlContext = new MLContext();\r\n                string modelName = \"PassionFruit.ML.MLModel.zip\";\r\n                var assembly = Assembly.GetExecutingAssembly();\r\n\r\n                using (var stream = assembly.GetManifestResourceStream(modelName))\r\n                using (StreamReader reader = new StreamReader(stream))\r\n                {\r\n                    var modelStream = reader.ReadToEnd();\r\n                    ITransformer mlModel = mlContext.Model.Load(modelStream, out DataViewSchema inputSchema);\r\n                    var predEngine = mlContext.Model.CreatePredictionEngine<ModelInput, ModelOutput>(mlModel);\r\n                    return predEngine;\r\n                }\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/5199","RelatedDescription":"Open issue \"Loading ML Model from a Stream\" (#5199)"},{"Id":"629693692","IsPullRequest":true,"CreatedAt":"2020-06-03T05:02:07","Actor":"antoniovs1029","Number":"5198","RawContent":null,"Title":"Allow TextLoader to load empty float/double fields as NaN instead of 0","State":"open","Body":"Fixes #4132 by implementing a new option on TextLoader that will allow it to impute missing float/doubles as NaN instead of the default `0`.\r\nBuilds on #5154 ","Url":"https://github.com/dotnet/machinelearning/pull/5198","RelatedDescription":"Open PR \"Allow TextLoader to load empty float/double fields as NaN instead of 0\" (#5198)"},{"Id":"629599006","IsPullRequest":true,"CreatedAt":"2020-06-03T00:18:18","Actor":"frank-dong-ms","Number":"5196","RawContent":null,"Title":"upgrade tensorflow and tf.net version","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5196","RelatedDescription":"Open PR \"upgrade tensorflow and tf.net version\" (#5196)"},{"Id":"629575172","IsPullRequest":true,"CreatedAt":"2020-06-02T23:16:26","Actor":"wangyems","Number":"5195","RawContent":null,"Title":"Add a sample for Onnx conversion","State":"open","Body":"\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5195","RelatedDescription":"Open PR \"Add a sample for Onnx conversion\" (#5195)"},{"Id":"629554295","IsPullRequest":true,"CreatedAt":"2020-06-02T22:24:23","Actor":"ttstanley","Number":"5194","RawContent":null,"Title":"Updated Codegen to support ObjectDetection for ModelBuilder","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5194","RelatedDescription":"Open PR \"Updated Codegen to support ObjectDetection for ModelBuilder\" (#5194)"},{"Id":"628926763","IsPullRequest":true,"CreatedAt":"2020-06-02T21:45:35","Actor":"frank-dong-ms","Number":"5189","RawContent":null,"Title":"Issue 4047, improve error message give expected type","State":"closed","Body":"address https://github.com/dotnet/machinelearning/issues/4047\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5189","RelatedDescription":"Closed or merged PR \"Issue 4047, improve error message give expected type\" (#5189)"},{"Id":"629473390","IsPullRequest":false,"CreatedAt":"2020-06-02T19:56:05","Actor":"rjhornby2","Number":"5193","RawContent":null,"Title":"Error running experiment when specifying validationDataSet that contains a vector","State":"open","Body":"### System information\r\n\r\n- OS: Windows 10.0.18363\r\n- .NET Version 3.1.101\r\n\r\n### Issue\r\n\r\n- Running classification experiment with training/validation datasets the same, but containing:\r\n\r\n        [VectorType(10)]\r\n        public float[] d_hist{ get; set; }\r\n\r\n- Exception: Training data and validation data schemas do not match. Column 'd_hist' is of type Vector<Single, 10> in train data, and type Vector<Single, 10> in validation data. (Parameter 'validationData').\r\n- When not specifying the validation dataset I can build the model and validate manually after but cannot pass the validation dataset directly to the experiment.\r\n\r\n### Source code / logs\r\nSeems to be failing in UserInputValidation:\r\n\r\n```\r\nif (trainCol.Type != validCol.Value.Type)\r\n                {\r\n                    throw new ArgumentException($\"{schemaMismatchError} Column '{trainCol.Name}' is of type {trainCol.Type} in train data, and type \" +\r\n                        $\"{validCol.Value.Type} in validation data.\", nameof(validationData));\r\n                }\r\n```\r\n\r\nI wonder if the comparison should be:\r\n\r\n`trainCol.Type.Equals(validCol.Value.Type)`","Url":"https://github.com/dotnet/machinelearning/issues/5193","RelatedDescription":"Open issue \"Error running experiment when specifying validationDataSet that contains a vector\" (#5193)"},{"Id":"627658869","IsPullRequest":false,"CreatedAt":"2020-06-02T17:00:46","Actor":"marcmm","Number":"5181","RawContent":null,"Title":"InvalidOperationException - Invalid TValue in GetGetter: 'System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IDictionary`2[System.Int64,System.Single]]'","State":"closed","Body":"### System information\r\n- Runtime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n .Net Framework 4.7.2 x64\r\n\r\nLibraries:\r\nMicrosoft.ML 1.5.0\r\nMicrosoft.ML.OnnxTransformer 1.5.0\r\nMicrosoft.ML.OnnxRuntime 1.3.0\r\n\r\n- Issue:\r\nThe following code below fails with an InvalidOperationException - Invalid TValue in GetGetter: 'System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IDictionary`2[System.Int64,System.Single]]'\r\n\r\n- Repro steps below\r\n- Trying to get the output_probability field (which is Sequence of Maps) from an sklearn RandomForestClassifier model converted to onnx using skl2onnx library.\r\n- I expected ML.Net to support this scenario since I have seen other posts of users using similar fields as models outputs.\r\n\r\nCall Stack:\r\nUnhandled Exception: System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.InvalidOperationException: Invalid TValue in GetGetter: 'System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IDictionary`2[System.Int64,System.Single]]'\r\n   at Microsoft.ML.Data.RowToRowMapperTransform.Cursor.GetGetter[TValue](Column column)\r\n   at Microsoft.ML.Data.TypedCursorable`1.TypedRowBase.CreateDirectSetter[TDst](DataViewRow input, Int32 col, Delegate poke, Delegate peek)\r\n   --- End of inner exception stack trace ---\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)\r\n   at System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at Microsoft.ML.Data.TypedCursorable`1.TypedRowBase.GenerateSetter(DataViewRow input, Int32 index, Column column, Delegate poke, Delegate peek)\r\n   at Microsoft.ML.Data.TypedCursorable`1.TypedRowBase..ctor(TypedCursorable`1 parent, DataViewRow input, String channelMessage)\r\n   at Microsoft.ML.Data.TypedCursorable`1.GetCursor(Func`2 additionalColumnsPredicate, Nullable`1 randomSeed)\r\n   at Microsoft.ML.Data.TypedCursorable`1.GetCursor()\r\n   at Microsoft.ML.PipeEngine`1.<RunPipe>d__3.MoveNext()\r\n   at testonnx.Program.Main(String[] args)\r\n\r\n### Source code Repro:\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.Data;\r\nusing Microsoft.ML.Transforms.Onnx;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace testonnx\r\n{\r\n    public class OutputData\r\n    {\r\n        [ColumnName(\"output_probability\")]\r\n        [OnnxSequenceType(typeof(IDictionary<long, float>))]\r\n        public IEnumerable<IDictionary<long, float>> OutputProbabilities;\r\n    }\r\n\r\n    public class InputData\r\n    {\r\n        [ColumnName(\"float_input\")]\r\n        [VectorType(4)]\r\n        public float[] Input { get; set; }\r\n    }\r\n\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var outputSchemaDef = SchemaDefinition.Create(typeof(OutputData));\r\n            var inputSchemaDef = SchemaDefinition.Create(typeof(InputData));\r\n            var mlContext = new MLContext();\r\n            var pipeline = mlContext.Transforms\r\n               .ApplyOnnxModel(new string[] { \"output_probability\", \"output_label\" }, new string[] { \"float_input\" }, \"rf_iris_new.onnx\");\r\n\r\n            var inputs = new List<InputData>() { new InputData() { Input = new float[] { 3.1f, 0.9f, 1.2f, 0.8f } } };\r\n\r\n            var data = mlContext.Data.LoadFromEnumerable(inputs, inputSchemaDef);\r\n\r\n            var model = pipeline.Fit(data);\r\n\r\n            var transformedValues = model.Transform(data);\r\n\r\n            var predictions = mlContext.Data.CreateEnumerable<OutputData>(\r\n                transformedValues, reuseRowObject: false, true, outputSchemaDef);\r\n\r\n            foreach (var pred in predictions) \r\n            {\r\n                Console.WriteLine(pred.OutputProbabilities.First()[0].ToString());              \r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n[rf_iris_new.zip](https://github.com/dotnet/machinelearning/files/4705133/rf_iris_new.zip)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5181","RelatedDescription":"Closed issue \"InvalidOperationException - Invalid TValue in GetGetter: 'System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IDictionary`2[System.Int64,System.Single]]'\" (#5181)"},{"Id":"629137873","IsPullRequest":false,"CreatedAt":"2020-06-02T11:46:59","Actor":"MCPx","Number":"5191","RawContent":null,"Title":"Race condition with named model pool initialization.","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows\r\n- **.NET Version (eg., dotnet --info)**: .NET Core 3.1\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\n\r\nChanged my call to AddPredictionEnginePool in my ASP.net Core app to use a model name and updated my Predict function to load the named model.\r\n\r\n- **What happened?**\r\n\r\nCalling the API with more than one prediction request at once started causing the API to crash.\r\n\r\n- **What did you expect?**\r\n\r\nThe PredictionEnginePool should have been able to handle multiple requests at once, as it did with the default pool. Adding a call on API startup to get the prediction engine for that name and returning works as a workaround (or adding a lock around the Predict call), but should the named pools not be initialized on startup like the default pool is? Or provide the option to perform that initialization automatically or warn in the documentation that the named pools aren't thread safe on the first call.\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5191","RelatedDescription":"Open issue \"Race condition with named model pool initialization.\" (#5191)"},{"Id":"628972165","IsPullRequest":false,"CreatedAt":"2020-06-02T07:34:34","Actor":"pockiez","Number":"5190","RawContent":null,"Title":"Attempted to read or write protected memory. This is often an indication that other memory is corrupt","State":"open","Body":"### System information\r\n\r\n- Windows 10 10.0.18363.836\r\n- .NET Core 3.1\r\n- Microsoft.ML 1.5\r\n\r\n### Issue\r\n\r\n- How to fix this.\r\n\r\n![image](https://user-images.githubusercontent.com/11924335/83492875-22194d80-a4de-11ea-9d0d-4066d8a132b2.png)","Url":"https://github.com/dotnet/machinelearning/issues/5190","RelatedDescription":"Open issue \"Attempted to read or write protected memory. This is often an indication that other memory is corrupt\" (#5190)"},{"Id":"628878114","IsPullRequest":false,"CreatedAt":"2020-06-02T03:47:36","Actor":"suxi-ms","Number":"5188","RawContent":null,"Title":"Add  a threshold parameter for root cause analysis","State":"open","Body":"### Issue\r\n\r\n- **Users want a threshold to determin whether the selected is a root cause, so we add a new parameter in the interface. The default value is 0.95**\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5188","RelatedDescription":"Open issue \"Add  a threshold parameter for root cause analysis\" (#5188)"},{"Id":"628728725","IsPullRequest":true,"CreatedAt":"2020-06-02T00:29:07","Actor":"michaelgsharp","Number":"5185","RawContent":null,"Title":"Refactor of OnnxConversionTests.cs","State":"closed","Body":"The majority of the tests in OnnxConversionTests.cs do the same thing. Build an ML.Net pipeline, export it to ONNX, and compare the results. This PR refactors the OnnxConversionTests.cs file to use a common method for all the tests that do that same functionality, removing about 400 lines of duplicate code. There were a few tests with functionality not exactly the same, and those were left as is.","Url":"https://github.com/dotnet/machinelearning/pull/5185","RelatedDescription":"Closed or merged PR \"Refactor of OnnxConversionTests.cs\" (#5185)"},{"Id":"628758301","IsPullRequest":true,"CreatedAt":"2020-06-01T23:41:22","Actor":"frank-dong-ms","Number":"5186","RawContent":null,"Title":"remove unnecessary methods","State":"closed","Body":"address https://github.com/dotnet/machinelearning/issues/3720\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5186","RelatedDescription":"Closed or merged PR \"remove unnecessary methods\" (#5186)"},{"Id":"627611378","IsPullRequest":true,"CreatedAt":"2020-06-01T20:33:31","Actor":"frank-dong-ms","Number":"5180","RawContent":null,"Title":"output memory usage after every test finish","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5180","RelatedDescription":"Closed or merged PR \"output memory usage after every test finish\" (#5180)"},{"Id":"627374335","IsPullRequest":false,"CreatedAt":"2020-06-01T17:39:12","Actor":"leblancdavid","Number":"5179","RawContent":null,"Title":"`ImageClassification` prediction appears slow","State":"closed","Body":"I don't have much experience with DNN (more with traditional machine learning algorithms) so I went through the automated visual inspection tutorial. The training of the 400 subset images is relatively quick. However, the prediction time is incredibly slow. Running the prediction through 400 images took about 90sec using `ResnetV2101` and 10sec using `MobilenetV2`. For my application, I would need it to be about at least 5x to 10x faster (hopefully close to real-time).\r\n\r\nMy question is, am I doing something wrong or is there something I can do to improve prediction speed?\r\n\r\nThank you!","Url":"https://github.com/dotnet/machinelearning/issues/5179","RelatedDescription":"Closed issue \"`ImageClassification` prediction appears slow\" (#5179)"},{"Id":"628604295","IsPullRequest":false,"CreatedAt":"2020-06-01T17:25:59","Actor":"frank-dong-ms","Number":"5184","RawContent":null,"Title":"CI crash on mac os ","State":"open","Body":"Randomly see below 3 crash only on mac os:\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=637346&view=logs&jobId=23576d1c-355e-5d27-4c31-0725f923794b&j=23576d1c-355e-5d27-4c31-0725f923794b&t=5b5048ea-91bc-5d7d-fb0b-ace30192f432\r\n\r\nThe active Test Run was aborted because the host process exited unexpectedly while executing following test(s):\r\nMicrosoft.ML.RunTests.TestDataPipe.SavePipeTrainAndScoreFccTransformStr\r\n\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=662867&view=logs&jobId=23576d1c-355e-5d27-4c31-0725f923794b&j=23576d1c-355e-5d27-4c31-0725f923794b&t=bcab25d9-33c3-57fc-b368-7b48febf4d8a\r\n\r\nThe active Test Run was aborted because the host process exited unexpectedly while executing following test(s):\r\nMicrosoft.ML.RunTests.TestDataPipe.SavePipeNgramHash\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=653881&view=logs&j=23576d1c-355e-5d27-4c31-0725f923794b&t=bcab25d9-33c3-57fc-b368-7b48febf4d8a\r\n\r\nThe active Test Run was aborted because the host process exited unexpectedly while executing following test(s):\r\nMicrosoft.ML.Functional.Tests.Evaluation.TrainAndEvaluateWithPrecisionRecallCurves\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5184","RelatedDescription":"Open issue \"CI crash on mac os \" (#5184)"},{"Id":"628471619","IsPullRequest":false,"CreatedAt":"2020-06-01T14:14:35","Actor":"wbadry","Number":"5183","RawContent":null,"Title":"[feature request] Dimensionality Reduction API","State":"open","Body":"### Features Reduction\r\n\r\nIt would be great if dimensionality reduction API could be added to ML.NET. This will be a major advantage in shortening training time.","Url":"https://github.com/dotnet/machinelearning/issues/5183","RelatedDescription":"Open issue \"[feature request] Dimensionality Reduction API\" (#5183)"},{"Id":"627703765","IsPullRequest":false,"CreatedAt":"2020-05-30T10:52:20","Actor":"adriansd27","Number":"5182","RawContent":null,"Title":"Schema mismatch for input column 'Image': expected image, got Vector<Byte> for Predictions made using model trained with MobilenetV2 and ResnetV250","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: .NET Core 3.1\r\n\r\n### Issue\r\nI'm running an ASP.NET Core 3.1 Web app with ML.NET. I'm unable to make predictions with trained model when using ImageClassificationTrainer.Architecture.MobilenetV2 and ImageClassificationTrainer.Architecture.ResnetV250. \r\n\r\nHowever it works with ImageClassificationTrainer.Architecture.InceptionV3 and ImageClassificationTrainer.Architecture.ResnetV2101.\r\n\r\n- **What did you do?**\r\nI've trained the model. Then I've made a prediction with prediction engine pool.\r\n- **What happened?**\r\nGot a mismatch error when trying to predict.\r\n- **What did you expect?**\r\nI'd like to be able to make predictions with MobilenetV2 and ResnetV250 as well.\r\n### Source code / logs\r\n               \r\n\r\n                var trainDataRawBytes = _mapper.Map<IEnumerable<ImageDataRaw>>(imageData);\r\n                var testDataRawBytes = _mapper.Map<IEnumerable<ImageDataRaw>>(testData);\r\n\r\n                trainingData = _mlContext.Data.LoadFromEnumerable(trainDataRawBytes);\r\n\r\n                var options = new ImageClassificationTrainer.Options\r\n                {\r\n                    FeatureColumnName = \"Image\",\r\n                    LabelColumnName = \"LabelKey\",\r\n                    Arch = ImageClassificationTrainer.Architecture.MobilenetV2,\r\n                    Epoch = 50,       //100\r\n                    BatchSize = 10,\r\n                    LearningRate = 0.01f\r\n                };\r\n\r\n                IEstimator<ITransformer> pipeline =\r\n                    _mlContext.Transforms.Conversion.MapValueToKey(\"LabelKey\", \"Label\")\r\n                        .Append(_mlContext.MulticlassClassification.Trainers\r\n                            .ImageClassification(options))\r\n                        .Append(_mlContext.Transforms.Conversion.MapKeyToValue(\"PredictedLabelValue\",\r\n                            \"PredictedLabel\"))\r\n                        .AppendCacheCheckpoint(_mlContext);\r\n\r\n                model = pipeline.Fit(trainingData);\r\n                testingResults = EvaluateModel(testDataRawBytes);`\r\n\r\n```        \r\n        private List<ImagePredictionResult> EvaluateModel(IEnumerable<ImageDataRaw> imageData)\r\n        {\r\n            return imageData.ToList().Select(image => _predictionEnginePool.Predict(\"ImageClassificationModel\", image))\r\n                .ToList().Select(\r\n                    imagePrediction => new ImagePredictionResult\r\n                    {\r\n                        RealLabel = imagePrediction.Label,\r\n                        PredictedLabel = imagePrediction.PredictedLabelValue,\r\n                        Score = imagePrediction.Score.Max()\r\n                    }).ToList();\r\n        }\r\n```\r\n\r\n```System.ArgumentOutOfRangeException: Schema mismatch for input column 'Image': expected image, got Vector<Byte> (Parameter 'inputSchema')\r\n   at Microsoft.ML.Transforms.Image.ImageResizingTransformer.CheckInputColumn(DataViewSchema inputSchema, Int32 col, Int32 srcCol)\r\n   at Microsoft.ML.Data.OneToOneTransformerBase.CheckInput(DataViewSchema inputSchema, Int32 col, Int32& srcCol)\r\n   at Microsoft.ML.Data.OneToOneTransformerBase.OneToOneMapperBase..ctor(IHost host, OneToOneTransformerBase parent, DataViewSchema inputSchema)\r\n   at Microsoft.ML.Transforms.Image.ImageResizingTransformer.Mapper..ctor(ImageResizingTransformer parent, DataViewSchema inputSchema)\r\n   at Microsoft.ML.Transforms.Image.ImageResizingTransformer.MakeRowMapper(DataViewSchema schema)\r\n   at Microsoft.ML.Data.RowToRowTransformerBase.Microsoft.ML.ITransformer.GetRowToRowMapper(DataViewSchema inputSchema)\r\n   at Microsoft.ML.Data.TransformerChain`1.Microsoft.ML.ITransformer.GetRowToRowMapper(DataViewSchema inputSchema)\r\n   at Microsoft.ML.PredictionEngineBase`2..ctor(IHostEnvironment env, ITransformer transformer, Boolean ignoreMissingColumns, SchemaDefinition inputSchemaDefinition, SchemaDefinition outputSchemaDefinition)\r\n   at Microsoft.ML.PredictionEngine`2..ctor(IHostEnvironment env, ITransformer transformer, Boolean ignoreMissingColumns, SchemaDefinition inputSchemaDefinition, SchemaDefinition outputSchemaDefinition)\r\n   at Microsoft.ML.PredictionEngineExtensions.CreatePredictionEngine[TSrc,TDst](ITransformer transformer, IHostEnvironment env, Boolean ignoreMissingColumns, SchemaDefinition inputSchemaDefinition, SchemaDefinition outputSchemaDefinition)\r\n   at Microsoft.ML.ModelOperationsCatalog.CreatePredictionEngine[TSrc,TDst](ITransformer transformer, Boolean ignoreMissingColumns, SchemaDefinition inputSchemaDefinition, SchemaDefinition outputSchemaDefinition)\r\n   at Microsoft.Extensions.ML.PredictionEnginePoolPolicy`2.Create()\r\n   at Microsoft.Extensions.ObjectPool.DefaultObjectPool`1.Create()\r\n   at Microsoft.Extensions.ObjectPool.DefaultObjectPool`1.Get()\r\n   at Microsoft.Extensions.ML.PredictionEnginePool`2.GetPredictionEngine(String modelName)\r\n   at Microsoft.Extensions.ML.PredictionEnginePoolExtensions.Predict[TData,TPrediction](PredictionEnginePool`2 predictionEnginePool, String modelName, TData example)\r\n   at PDCSBE.Services.Implementation.TrainService.<EvaluateModel>b__9_0(ImageDataRaw image) in D:\\...\\TrainService.cs:line 175\r\n   at System.Linq.Enumerable.SelectListIterator`2.ToList()\r\n   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)\r\n   at PDCSBE.Services.Implementation.TrainService.EvaluateModel(IEnumerable`1 imageData) in D:\\...\\TrainService.cs:line 175\r\n   at PDCSBE.Services.Implementation.TrainService.TrainModel(IEnumerable`1 imageData, IEnumerable`1 testData, Int32 modelId) in D:\\...\\TrainService.cs:line 106\r\n   at PDCSBE.Services.Implementation.TrainService.TrainModelWithMetrics(Int32 modelId) in D:\\...\\TrainService.cs:line 50\r\n   at PDCSBE.Api.Controllers.TrainController.TrainModel(Int32 modelId) in D:\\...\\TrainController.cs:line 24\r\n   at lambda_method(Closure , Object , Object[] )\r\n   at Microsoft.Extensions.Internal.ObjectMethodExecutor.Execute(Object target, Object[] parameters)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)```\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5182","RelatedDescription":"Open issue \"Schema mismatch for input column 'Image': expected image, got Vector<Byte> for Predictions made using model trained with MobilenetV2 and ResnetV250\" (#5182)"},{"Id":"627029027","IsPullRequest":false,"CreatedAt":"2020-05-29T20:47:20","Actor":"praveenraghuvanshi1512","Number":"5178","RawContent":null,"Title":"[Windows 10] : 'Unable to load DLL 'MklImports' or one of its dependencies'","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**:  Windows 10 x64\r\n- **.NET Version (eg., dotnet --info)**: \r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.300\r\n Commit:    b2475c1295\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.300\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.4\r\n  Commit:  0c2e69caa6\r\n\r\n.NET Core SDKs installed:\r\n  1.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.102 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.103 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200-preview-007576 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300-preview2-008533 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400-preview-009063 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500-preview-009297 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500-preview-009335 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.508 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.509 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.511 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600-preview-009472 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.103 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview6-012264 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0-preview2-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0-preview2-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview6.19307.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-preview2-26406-04 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview6-27804-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview6-27804-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\n     Creating a Prediction using ML.Net time-series\r\n.Net core: 3.1.300\r\nMicrosoft.ML : 1.5.0\r\nMicrosoft.ML.TimeSeries : 1.5.0\r\nVisual Studio 2019 16.6.0\r\n \r\n- **What happened?**\r\nI am getting 'Unable to load DLL 'MklImports' or one of its dependencies' while calling Fit method of ForecastBySsa() in a time series prediction.\r\n\r\nThe issue surfaced in Jupyter notebook only, the same code runs fine in Visual Studio 2019.\r\n\r\n- **What did you expect?**\r\nNo error \r\nChecked https://github.com/dotnet/machinelearning/issues/3903\r\nIt has a workaround for macOS and nothing for windows, hence opening this issue specifically for Windows.\r\n\r\n### Source code / logs\r\n\r\nLogs\r\nSubmitCode: var model = pipeline.Fit(data);\r\nCodeSubmissionReceived: var model = pipeline.Fit(data);\r\nCompleteCodeSubmissionReceived: var model = pipeline.Fit(data);\r\nSystem.DllNotFoundException: Unable to load DLL 'MklImports' or one of its dependencies: The specified module could not be found. (0x8007007E)\r\nat Microsoft.ML.Transforms.TimeSeries.EigenUtils.Dsytrd(Layout matrixLayout, Uplo uplo, Int32 n, Double[] a, Int32 lda, Double[] d, Double[] e, Double[] tau)\r\nat Microsoft.ML.Transforms.TimeSeries.EigenUtils.MklSymmetricEigenDecomposition(Single[] input, Int32 size, Single[]& eigenValues, Single[]& eigenVectors)\r\nat Microsoft.ML.Transforms.TimeSeries.TrajectoryMatrix.ComputeSvd(Single[]& singularValues, Single[]& leftSingularvectors)\r\nat Microsoft.ML.Transforms.TimeSeries.AdaptiveSingularSpectrumSequenceModelerInternal.TrainCore(Single[] dataArray, Int32 originalSeriesLength)\r\nat Microsoft.ML.Transforms.TimeSeries.AdaptiveSingularSpectrumSequenceModelerInternal.Train(RoleMappedData data)\r\nat Microsoft.ML.Transforms.TimeSeries.SsaForecastingTransformer..ctor(IHostEnvironment env, Options options, IDataView input)\r\nat Microsoft.ML.Transforms.TimeSeries.SsaForecastingEstimator.Fit(IDataView input)\r\nat Submission#30.<>d__0.MoveNext()\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5178","RelatedDescription":"Closed issue \"[Windows 10] : 'Unable to load DLL 'MklImports' or one of its dependencies'\" (#5178)"},{"Id":"627010962","IsPullRequest":true,"CreatedAt":"2020-05-29T05:35:00","Actor":"mstfbl","Number":"5177","RawContent":null,"Title":"Ensure Sanitized Column Names are Unique in AutoML CLI","State":"open","Body":"Fix #3902. This PR ensures that column names that are pulled from datasets and used to generate C# model input are unique. As a result, naming collisions are prevented and are valid C# variables. This is done by adding the column naming-collision fix in `ML.CodeGenerator.Utilities.Utils.GenerateClassLabels`.\r\n\r\nThis naming-collision fix consists of appending the type of the variable to the name of the second duplicate. For example, let us have 3 columns in a sample dataset:\r\n\r\n```csharp\r\nint id;\r\nint Country;\r\nstring country;\r\n```\r\n\r\nThis is represented with `TextLoader.Columns[]` as:\r\n```csharp\r\n\r\nnew TextLoader.Column[]\r\n{\r\n    new TextLoader.Column(){ Name = \"id\", Source = new TextLoader.Range[]{new TextLoader.Range(0) }, DataKind = DataKind.Int32 },\r\n    new TextLoader.Column(){ Name = \"Country\", Source = new TextLoader.Range[]{new TextLoader.Range(1) }, DataKind = DataKind.Int32 },\r\n    new TextLoader.Column(){ Name = \"country\", Source = new TextLoader.Range[]{new TextLoader.Range(2) }, DataKind = DataKind.String },\r\n}\r\n```\r\n\r\nFor `string country` to be a valid class variable, its first letter has to be capitalized, which would result in a naming collision. This PR ensures that this doesn't happen, and the generated code becomes:\r\n\r\n```csharp\r\npublic class ModelInput\r\n{\r\n    [ColumnName(\"id\"), LoadColumn(0)]\r\n    public float Id { get; set; }\r\n\r\n\r\n    [ColumnName(\"Country\"), LoadColumn(1)]\r\n    public float Country { get; set; }\r\n\r\n\r\n    [ColumnName(\"country\"), LoadColumn(2)]\r\n    public string Country_string { get; set; }\r\n}\r\n```\r\n\r\nThis PR also adds unit tests to test naming collision scenarios in both `CodeGenTests` and `ConsoleCodeGeneratorTests`.\r\n\r\nIn addition, this PR also cleans up duplicate code with respect to the `ML.CodeGenerator.Utilities.Utils.GenerateClassLabels` function, by linking its duplicate function `ML.CodeGenerator.CodeGenerator.GenerateClassLabels` to the former.","Url":"https://github.com/dotnet/machinelearning/pull/5177","RelatedDescription":"Open PR \"Ensure Sanitized Column Names are Unique in AutoML CLI\" (#5177)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-06-04T05:30:36.3649755Z","RunDurationInMilliseconds":807}