{"Data":{"GitHub":{"Issues":[{"Id":"2201455140","IsPullRequest":true,"CreatedAt":"2024-03-22T00:34:07","Actor":"tarekgh","Number":"7098","RawContent":null,"Title":"Embed Tiktoken data files","State":"open","Body":"Fixes https://github.com/dotnet/machinelearning/issues/7095\r\n\r\nThis change is embedding the Tiktoken tokenizer data files to avoid downloads at runtime. The files are embedded in compressed form to reduce the size and we decompress the data at runtime.\r\n\r\n| File | Compressed Size |\r\n|------------------|---------------------:|\r\n| cl100k_base.tiktoken.zip | 784541 bytes |\r\n| gpt2.tiktoken.zip | 370795 bytes |\r\n| p50k_base.tiktoken.zip | 370930 bytes |\r\n| r50k_base.tiktoken.zip | 370795 bytes |\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7098","RelatedDescription":"Open PR \"Embed Tiktoken data files\" (#7098)"},{"Id":"2201029094","IsPullRequest":true,"CreatedAt":"2024-03-21T19:45:39","Actor":"ericstj","Number":"7097","RawContent":null,"Title":"Make ML.NET tests target net8.0 and net9.0 instead of net6.0","State":"open","Body":"This is a portion of the work from https://github.com/dotnet/machinelearning/pull/6749\r\n\r\nThis moves the tests forward to net8.0, and cleans up RemoteExecutor (which I noticed in @tarekgh's PR).\r\n\r\nI minimized the product changes so as to not break compat (thought CPU math is changing it's TFM based on net6.0 going OOS by Nov).\r\n\r\nWhere possible I tried to use `NetMinimum` and `NetCurrent` to make this easier next time.\r\n\r\nI'm not thrilled about all the TFM duplication in the PR pipeline.  I think we should clean that up in a follow-up PR though.","Url":"https://github.com/dotnet/machinelearning/pull/7097","RelatedDescription":"Open PR \"Make ML.NET tests target net8.0 and net9.0 instead of net6.0\" (#7097)"},{"Id":"2200756255","IsPullRequest":true,"CreatedAt":"2024-03-21T17:17:39","Actor":"ericstj","Number":"7096","RawContent":null,"Title":"Don't trigger PR validation builds for docs only changes","State":"open","Body":"This applies the same filters we use in runtime to avoid building the repo when only docs change.\r\n\r\nI tried to do this previously but I missed that the filter only applied to the rolling build and not PR validation.","Url":"https://github.com/dotnet/machinelearning/pull/7096","RelatedDescription":"Open PR \"Don't trigger PR validation builds for docs only changes\" (#7096)"},{"Id":"2189281055","IsPullRequest":true,"CreatedAt":"2024-03-21T17:10:49","Actor":"luisquintanilla","Number":"7073","RawContent":null,"Title":"Adding migration guide for deepdev","State":"closed","Body":"This provides guidance on how to migrate to Microsoft.ML.Tokenizers","Url":"https://github.com/dotnet/machinelearning/pull/7073","RelatedDescription":"Closed or merged PR \"Adding migration guide for deepdev\" (#7073)"},{"Id":"2200689238","IsPullRequest":false,"CreatedAt":"2024-03-21T16:53:41","Actor":"ericstj","Number":"7095","RawContent":null,"Title":"Tokenizers tests fail to download tokenizer data","State":"open","Body":"## Build Information\r\nBuild: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=611349\r\nBuild error leg or test failing: Microsoft.ML.Tokenizers.Tests.TiktokenTests.TestCreationUsingModel\r\nPull request: https://github.com/dotnet/machinelearning/pull/7090\r\n<!-- Error message template  -->\r\n## Error Message\r\n\r\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssues.md#how-to-fill-out-a-known-issue-error-section).\r\n\r\n<!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. -->\r\n\r\n(build analysis isn't matching up to the instance failure of the theory, so including console log)\r\n```json\r\n{\r\n  \"ErrorMessage\": \"at Microsoft.ML.Tokenizers.Helpers.GetStream(HttpClient client, String url)\",\r\n  \"ErrorPattern\": \"\",\r\n  \"BuildRetry\": false,\r\n  \"ExcludeConsoleLog\": false\r\n}\r\n```\r\n\r\n```\r\nUnhandled exception. System.Net.Http.HttpRequestException: An error occurred while sending the request.\r\n ---> System.IO.IOException: Unable to read data from the transport connection: Connection reset by peer.\r\n ---> System.Net.Sockets.SocketException (54): Connection reset by peer\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.ThrowException(SocketError error, CancellationToken cancellationToken)\r\n   at System.Net.Sockets.Socket.AwaitableSocketAsyncEventArgs.System.Threading.Tasks.Sources.IValueTaskSource<System.Int32>.GetResult(Int16 token)\r\n   at System.Net.Security.SslStream.EnsureFullTlsFrameAsync[TIOAdapter](TIOAdapter adapter)\r\n   at System.Net.Security.SslStream.ReadAsyncInternal[TIOAdapter](TIOAdapter adapter, Memory`1 buffer)\r\n   at System.Net.Http.HttpConnection.InitialFillAsync(Boolean async)\r\n   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\r\n   --- End of inner exception stack trace ---\r\n   at System.Net.Http.HttpConnection.SendAsyncCore(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpConnectionPool.SendWithVersionDetectionAndRetryAsync(HttpRequestMessage request, Boolean async, Boolean doRequestAuth, CancellationToken cancellationToken)\r\n   at System.Net.Http.RedirectHandler.SendAsync(HttpRequestMessage request, Boolean async, CancellationToken cancellationToken)\r\n   at System.Net.Http.HttpClient.GetStreamAsyncCore(HttpRequestMessage request, CancellationToken cancellationToken)\r\n   at Microsoft.ML.Tokenizers.Helpers.GetStream(HttpClient client, String url) in /Users/runner/work/1/s/src/Microsoft.ML.Tokenizers/Utils/Helpers.netstandard.cs:line 29\r\n   at Microsoft.ML.Tokenizers.Tiktoken.CreateTokenizerForModel(String modelName, IReadOnlyDictionary`2 extraSpecialTokens, Normalizer normalizer) in /Users/runner/work/1/s/src/Microsoft.ML.Tokenizers/Model/Tiktoken.cs:line 820\r\n   at Microsoft.ML.Tokenizers.Tokenizer.CreateTiktokenForModel(String modelName, IReadOnlyDictionary`2 extraSpecialTokens, Normalizer normalizer) in /Users/runner/work/1/s/src/Microsoft.ML.Tokenizers/Tokenizer.cs:line 330\r\n   at Microsoft.ML.Tokenizers.Tests.TiktokenTests.<>c.<TestCreationUsingModel>b__30_1(String name) in /Users/runner/work/1/s/test/Microsoft.ML.Tokenizers.Tests/TitokenTests.cs:line 331\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.DotNet.RemoteExecutor.Program.Main(String[] args) in /_/src/Microsoft.DotNet.RemoteExecutor/src/Program.cs:line 97\r\n```\r\n\r\n\r\n<!--Known issue error report start -->\r\n### Report\r\n\r\n|Build|Definition|Test|Pull Request|\r\n|---|---|---|---|\r\n|[611349](https://dev.azure.com/dnceng-public/public/_build/results?buildId=611349)|dotnet/machinelearning|[Microsoft.ML.Tokenizers.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=611349&view=ms.vss-test-web.build-test-results-tab&runId=14923776&resultId=101936)|dotnet/machinelearning#7090|\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|1|1|1|\r\n<!--Known issue error report end -->\r\n<!-- Known issue validation start -->\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=611349\r\n**Error message validated:** `[at Microsoft.ML.Tokenizers.Helpers.GetStream(HttpClient client, String url)`]\r\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\r\n**Validation performed at:** 3/21/2024 9:21:47 PM UTC\r\n<!-- Known issue validation end -->","Url":"https://github.com/dotnet/machinelearning/issues/7095","RelatedDescription":"Open issue \"Tokenizers tests fail to download tokenizer data\" (#7095)"},{"Id":"2199648335","IsPullRequest":false,"CreatedAt":"2024-03-21T16:47:46","Actor":"RaphaelPliessnig","Number":"7091","RawContent":null,"Title":"DataFrameColumn.And System.NotSupportedException: Specified method is not supported.","State":"closed","Body":"\r\n - OS & Version: Windows 10\r\n - ML.NET Version: Data.Analysis 21.1\r\n - .NET Version: .NET 8.0\r\n\r\n\r\nSince i upgraded to Data.Analysis 21.1 from 20.0 the \".And\" method does not work anymore. \r\nI also cant \"downgrade to 20.0 anymore since i get this error: Error: Microsoft.DotNet.Interactive.KernelExtensionLoadException: Failure loading Kernel Extension\r\n\r\n```\r\n#r \"nuget: Microsoft.Data.Analysis, 0.21.1\"\r\n\r\nusing System;\r\n\r\nusing Microsoft.Data.Analysis;\r\n\r\nvar col1 = new BooleanDataFrameColumn(\"col1\", new Boolean[]{true, false, true});\r\nvar col2 = new BooleanDataFrameColumn(\"col2\", new Boolean[]{false, true, true});\r\nvar dfTest = new DataFrame(col1,col2);\r\ndfTest[\"and\"] = dfTest[\"col1\"].And(dfTest[\"col2\"])\r\n```\r\nbefore the update to 21.1 everything worked as expected but i am now getting this error: \r\nError: System.NotSupportedException: Specified method is not supported.\r\nat Microsoft.Data.Analysis.PrimitiveDataFrameColumn`1.HandleOperationImplementation[U](BinaryOperation operation, PrimitiveDataFrameColumn`1 column, Boolean inPlace)\r\nat Microsoft.Data.Analysis.PrimitiveDataFrameColumn`1.And(DataFrameColumn column, Boolean inPlace)\r\nat Submission#3.<<Initialize>>d__0.MoveNext()\r\n--- End of stack trace from previous location ---\r\nat Microsoft.CodeAnalysis.Scripting.ScriptExecutionState.RunSubmissionsAsync[TResult](ImmutableArray`1 precedingExecutors, Func`2 currentExecutor, StrongBox`1 exceptionHolderOpt, Func`2 catchExceptionOpt, CancellationToken cancellationToken)\r\n\r\nam i missing some dependencies or is this method just no longer supported? \r\n\r\nThank you in advance\r\n","Url":"https://github.com/dotnet/machinelearning/issues/7091","RelatedDescription":"Closed issue \"DataFrameColumn.And System.NotSupportedException: Specified method is not supported.\" (#7091)"},{"Id":"2199818683","IsPullRequest":true,"CreatedAt":"2024-03-21T16:47:45","Actor":"asmirnov82","Number":"7093","RawContent":null,"Title":"Fix Logical binary operations not supported exception","State":"closed","Body":"Fixes #7091 \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7093","RelatedDescription":"Closed or merged PR \"Fix Logical binary operations not supported exception\" (#7093)"},{"Id":"2198024105","IsPullRequest":true,"CreatedAt":"2024-03-21T16:44:01","Actor":"richlander","Number":"7087","RawContent":null,"Title":"Update VMs","State":"closed","Body":"We are deprecating `Ubuntu.1804.Amd64.Open`.","Url":"https://github.com/dotnet/machinelearning/pull/7087","RelatedDescription":"Closed or merged PR \"Update VMs\" (#7087)"},{"Id":"2200221688","IsPullRequest":true,"CreatedAt":"2024-03-21T13:35:12","Actor":"piyushdubey","Number":"7094","RawContent":null,"Title":"Add support for Apache.Arrow.Types.Decimal128Type","State":"open","Body":"Fixes #7082 ","Url":"https://github.com/dotnet/machinelearning/pull/7094","RelatedDescription":"Open PR \"Add support for Apache.Arrow.Types.Decimal128Type\" (#7094)"},{"Id":"2199678667","IsPullRequest":false,"CreatedAt":"2024-03-21T09:48:16","Actor":"asmirnov82","Number":"7092","RawContent":null,"Title":"Inconsistent dataframe columns API for Clone functionality","State":"open","Body":"1) API of Clone method for String dataframe columns is inconsistent with other columns\r\n\r\nIt's possible to have code like this:\r\n```cs\r\nPrimitiveDataFrameColumn<int> column = new PrimitiveDataFrameColumn<int>(\"Column name\");\r\nPrimitiveDataFrameColumn<int> cloneColumn = column.Clone();\r\n```\r\n\r\nHowever \r\n```cs\r\nStringDataFrameColumn column = StringDataFrameColumn(\"Column name\");\r\nStringDataFrameColumn cloneColumn = column.Clone();\r\n```\r\nor\r\n```cs\r\nArrowStringDataFrameColumn column = ArrowDataFrameColumn(\"Column name\");\r\nArrowStringDataFrameColumn cloneColumn = column.Clone();\r\n```\r\nfails to compile as Clone method returns base class \r\n\r\n2) User is able to create inheritor of DataFrameColumn without overriding Clone() method. Adding such columns to DataFrame brokes it functionality at runtime, as it will crashes with NotImplemented exception. Code should force user to implement all required essential methods\r\n","Url":"https://github.com/dotnet/machinelearning/issues/7092","RelatedDescription":"Open issue \"Inconsistent dataframe columns API for Clone functionality\" (#7092)"},{"Id":"2199449326","IsPullRequest":true,"CreatedAt":"2024-03-21T07:57:42","Actor":"asmirnov82","Number":"7090","RawContent":null,"Title":"Fix DataFrame NullCount property of StringDataFrameColumn","State":"open","Body":"Fixes #7089\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7090","RelatedDescription":"Open PR \"Fix DataFrame NullCount property of StringDataFrameColumn\" (#7090)"},{"Id":"2199388717","IsPullRequest":false,"CreatedAt":"2024-03-21T07:29:10","Actor":"asmirnov82","Number":"7089","RawContent":null,"Title":"DataFrame NullCount property of StringDataFrameColumn works incorrectly","State":"open","Body":"**Describe the bug**\r\nDataFrame NullCount property of StringDataFrameColumn works incorrectly in several scenarios:\r\n\r\n1. Using constructor with length property\r\n```cs \r\nvar strCol = new StringDataFrameColumn(\"String Column\", 5);\r\n```\r\nActual behavior: creates string column with 5 null elements, however NullCount property is set to 0\r\nExpected behavior: NullCount property is set to 5\r\n\r\n2. Clone method\r\n```cs \r\n//creates string column with 3 null values and NullCount 3\r\nvar strCol = new StringDataFrameColumn(\"String Column\");\r\n\r\nfor (int i = 0; i < 3; i++)\r\n    strCol.Append(null);\r\n\r\n//Clone\r\nvar clonedColumn = strCol.Clone();\r\n```\r\n\r\nActual behavior: NullCount of cloned column is 0\r\nExpected behavior: NullCount property is set to 5\r\n","Url":"https://github.com/dotnet/machinelearning/issues/7089","RelatedDescription":"Open issue \"DataFrame NullCount property of StringDataFrameColumn works incorrectly\" (#7089)"},{"Id":"2196295623","IsPullRequest":false,"CreatedAt":"2024-03-20T18:42:42","Actor":"tarekgh","Number":"7084","RawContent":null,"Title":"The Operation will be canceled. The next steps may not contain expected logs.","State":"closed","Body":"## Build Information\r\nBuild: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=607853\r\nBuild error leg or test failing: Ubuntu_x64_cross_arm_Net60 / Ubuntu_x64_cross_arm_Net60 Debug_Build\r\nPull request: https://github.com/dotnet/machinelearning/pull/7080\r\n<!-- Error message template  -->\r\n## Error Message\r\n\r\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssues.md#how-to-fill-out-a-known-issue-error-section).\r\n\r\n<!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. -->\r\n\r\n```json\r\n{\r\n  \"ErrorMessage\": \"The Operation will be canceled. The next steps may not contain expected logs.\",\r\n  \"ErrorPattern\": \"The operation was canceled.\",\r\n  \"BuildRetry\": false,\r\n  \"ExcludeConsoleLog\": false\r\n}\r\n```\r\n\r\n\r\n<!-- Known issue validation start -->\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=607853\r\n**Error message validated:** `[The operation was canceled.`]\r\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\r\n**Validation performed at:** 3/20/2024 12:02:04 AM UTC\r\n<!-- Known issue validation end -->\r\n<!--Known issue error report start -->\r\n### Report\r\n|Build|Definition|Step Name|Console log|Pull Request|\r\n|---|---|---|---|---|\r\n|[610116](https://dev.azure.com/dnceng-public/public/_build/results?buildId=610116)|dotnet/machinelearning|Build Packages|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/610116/logs/258)||\r\n|[609307](https://dev.azure.com/dnceng-public/public/_build/results?buildId=609307)|dotnet/machinelearning|Run Helix Tests|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/609307/logs/330)|dotnet/machinelearning#7078|\r\n|[607853](https://dev.azure.com/dnceng-public/public/_build/results?buildId=607853)|dotnet/machinelearning|Run Helix Tests|[Log](https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_apis/build/builds/607853/logs/440)|dotnet/machinelearning#7080|\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|3|3|3|\r\n<!--Known issue error report end -->","Url":"https://github.com/dotnet/machinelearning/issues/7084","RelatedDescription":"Closed issue \"The Operation will be canceled. The next steps may not contain expected logs.\" (#7084)"},{"Id":"2198036699","IsPullRequest":false,"CreatedAt":"2024-03-20T16:54:32","Actor":"richlander","Number":"7088","RawContent":null,"Title":"Update `dotnet-buildtools-prereqs-docker` images","State":"open","Body":"We are no longer supporting Ubuntu 18.04 images.\r\n\r\nI tried to update them, but there doesn't seem to be matching images for a higher Ubuntu version.\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/70e191b3fae444f6625fdc001071de1e2bd1080b/.vsts-dotnet-ci.yml#L33-L40\r\n\r\nThe CentOS 8 stream image will soon be EOL. We need to move off of it, too.\r\n\r\nhttps://blog.centos.org/2023/04/end-dates-are-coming-for-centos-stream-8-and-centos-linux-7/\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/70e191b3fae444f6625fdc001071de1e2bd1080b/.vsts-dotnet-ci.yml#L31\r\n\r\nI did update your VM images: https://github.com/dotnet/machinelearning/pull/7087","Url":"https://github.com/dotnet/machinelearning/issues/7088","RelatedDescription":"Open issue \"Update `dotnet-buildtools-prereqs-docker` images\" (#7088)"},{"Id":"2191014809","IsPullRequest":true,"CreatedAt":"2024-03-20T16:44:28","Actor":"tarekgh","Number":"7078","RawContent":null,"Title":"Introducing Llama Tokenizer","State":"closed","Body":"This change is introducing the Llama tokenizer which is implemented as the SentencePiece Bpe model based on https://github.com/google/sentencepiece.  ","Url":"https://github.com/dotnet/machinelearning/pull/7078","RelatedDescription":"Closed or merged PR \"Introducing Llama Tokenizer\" (#7078)"},{"Id":"2197957331","IsPullRequest":false,"CreatedAt":"2024-03-20T16:18:37","Actor":"piyushdubey","Number":"7086","RawContent":null,"Title":"Add support for Apache.Arrow.Types.BinaryType","State":"open","Body":"**System Information (please complete the following information):**\r\n - Window 11\r\n - Microsoft.Data.Analysis v0.21.1\r\n - .Net Framework 4.7.2\r\n\r\n**Describe the bug**\r\nI am getting the below exception\r\n\r\nUnhandled exception. System.NotImplementedException: `binary`\r\nat Microsoft.Data.Analysis.DataFrame.AppendDataFrameColumnFromArrowArray(Field field, IArrowArray arrowArray, DataFrame ret, String fieldNamePrefix)\r\nat Microsoft.Data.Analysis.DataFrame.FromArrowRecordBatch(RecordBatch recordBatch)\r\nat Program.\r\n\r\n**To Reproduce**\r\nTake a .arrow file with one column of type `Apache.Arrow.Types.BinaryType`\r\nvar dataframe = DataFrame.FromArrowRecordBatch(recordBatch);\r\nIt will throw above exception\r\n\r\n**Expected behavior**\r\nThe record batch should transform to DataFrame with appropriate type to handle `binary`","Url":"https://github.com/dotnet/machinelearning/issues/7086","RelatedDescription":"Open issue \"Add support for Apache.Arrow.Types.BinaryType\" (#7086)"},{"Id":"2197936625","IsPullRequest":false,"CreatedAt":"2024-03-20T16:09:50","Actor":"fwaris","Number":"7085","RawContent":null,"Title":"SweepableEstimator SearchSpace not being fully explored","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version:  Windows 10]\r\n - ML.NET Version: 0.21.1\r\n - .NET Version: .Net 8.0\r\n\r\n**Describe the bug**\r\nThe SearchSpace is not being fully explored for a SweepableEstimator.\r\nI have a SweepableEstimator where the search space is for the 'k' for KMeans number of clusters.\r\nThe range is Min=3, Max=20 and Default = 10. (uniform int).\r\nI am logging the selected k parameter when the SweepableEstimator is called.\r\nThe logs show that k hovers around the default value (i.e. 8,9,10,11). \r\nThe full space is not explored.\r\n\r\nA clear and concise description of what the bug is.\r\nThe script that showcases this problem is here\r\n\r\nhttps://github.com/fwaris/MLNetGEOpt/blob/master/MLNetGEOpt/scripts/custering.fsx\r\n\r\n\r\n**Expected behavior**\r\nThe search space should be explored more fully\r\n\r\n**Screenshots, Code, Sample Projects**\r\nProject: https://github.com/fwaris/MLNetGEOpt\r\n\r\n**Additional context**\r\n## Background\r\nThe referenced [project](https://github.com/fwaris/MLNetGEOpt) is a layer of auto ML above the AutoML (of ML.Net). This higher layer is called 'MLNetGEOpt'.\r\n\r\nAutoML finds optimal parameters given a SweepablePipeline.\r\n\r\nMLNetGEOpt proposes *new SweepablePipelines* for AutoML to optimize. \r\n\r\nIt uses a method called \"Grammatical Evolution\" (GE). The pipelines are constructed according to a given 'grammar'. Each pipeline is a valid 'sentence' constructed from the grammar.\r\n\r\nThe grammar ensures that the pipelines are reasonable. This greatly reduces the search space - as compared to randomly constructed pipelines - say via a Genetic Algorithm.\r\n\r\nNote: I solved for optimal number of clusters by building a grammar that allows for one-of-many SweepableEstimators each tied a particular k.\r\n\r\nHere is an example of the grammar (prefix 'se' stands for SweepableEstimator; 'Alt'=select 1 from available options; 'Opt'=optional term):\r\n```F#\r\nlet g = \r\n    [\r\n        Estimator seBase\r\n        Opt(Estimator (E.Def.seFtrSelCount 3))        \r\n        Alt [\r\n            Alt ([(1,10); (11,20); (21,30); (31,100)] |> List.map(E.Def.seNorm>>Estimator))\r\n            Estimator E.Def.seNormLpNorm\r\n            Estimator E.Def.seNormLogMeanVar\r\n            Estimator E.Def.seNormMeanVar\r\n            Alt([0.1f .. 0.5f .. 4.0f] |> List.pairwise |> List.map(fun (a,b) -> a, b - 0.001f)  |> List.map(E.Def.seGlobalContrast>>Estimator))\r\n            Estimator E.Def.seNormMinMax\r\n            Estimator E.Def.seNormRobustScaling\r\n        ]\r\n        Alt [for i in 3 .. 20 -> Estimator (seCluster i)]  // this works \r\n        //Estimator seClusterWithSS                        // this does not work\r\n    ]\r\n```\r\nFor reference, a specific grammar can be constructed from this simple 'meta-grammar':\r\n```F#\r\ntype Term = \r\n    | Opt of Term \r\n    | Pipeline of (unit -> SweepablePipeline)\r\n    | Estimator of (unit -> SweepableEstimator)\r\n    | Alt of Term list\r\n    | Union of Term list\r\n```\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/7085","RelatedDescription":"Open issue \"SweepableEstimator SearchSpace not being fully explored\" (#7085)"},{"Id":"2190998969","IsPullRequest":false,"CreatedAt":"2024-03-20T00:05:05","Actor":"tonybaloney","Number":"7077","RawContent":null,"Title":"Missing Sync equivalent to Microsoft.ML.Tokenizers Tiktoken.CreateByModelName without vocab stream","State":"closed","Body":"The only way to instantiate the Tiktoken tokenizer _without_ a vocab stream is to use the Async method https://github.com/dotnet/machinelearning/blob/main/src/Microsoft.ML.Tokenizers/Model/Tiktoken.cs#L778C9-L782C95\r\n\r\n\r\n```csharp\r\nTask<Tokenizer> CreateByModelNameAsync(\r\n                                                string modelName,\r\n                                                IReadOnlyDictionary<string, int>? extraSpecialTokens = null,\r\n                                                Normalizer? normalizer = null,\r\n                                                CancellationToken cancellationToken = default)\r\n```\r\n\r\nPlease can there be an overload to the Sync `CreateByModelName()` method so that we can instantiate a Tiktoken tokenizer from just a model name without having to call it asynchronously. \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/7077","RelatedDescription":"Closed issue \"Missing Sync equivalent to Microsoft.ML.Tokenizers Tiktoken.CreateByModelName without vocab stream\" (#7077)"},{"Id":"2193578016","IsPullRequest":true,"CreatedAt":"2024-03-20T00:05:04","Actor":"tarekgh","Number":"7080","RawContent":null,"Title":"Add Tiktoken Synchronous Creation Using Model Name","State":"closed","Body":"Fixes https://github.com/dotnet/machinelearning/issues/7077\r\n\r\nThe change:\r\n- Adding a new method `Tiktoken.CreateTokenizerByModelName` allow synchronous creation of the tokenizer using the model name. \r\n- Renaming `Tiktoken.CreateByModelNameAsync` to `Tiktoken.CreateTokenizerByModelNameAsync`. This adjustment is being made because the `Tiktoken` class includes other methods for creating models, not just tokenizers. By adding the word `Tokenizer` to the method responsible for creating a tokenizer, it will provide clarity regarding its functionality.","Url":"https://github.com/dotnet/machinelearning/pull/7080","RelatedDescription":"Closed or merged PR \"Add Tiktoken Synchronous Creation Using Model Name\" (#7080)"},{"Id":"2196250363","IsPullRequest":false,"CreatedAt":"2024-03-19T23:39:15","Actor":"piyushdubey","Number":"7083","RawContent":null,"Title":"Add support for Apache.Arrow.Types.Decimal256Type","State":"open","Body":"**System Information (please complete the following information):**\r\n - Window 11\r\n - Microsoft.Data.Analysis v0.21.1\r\n - .Net Framework 4.7.2\r\n\r\n**Describe the bug**\r\nI am getting the below exception\r\n\r\nUnhandled exception. System.NotImplementedException: `decimal256`\r\nat Microsoft.Data.Analysis.DataFrame.AppendDataFrameColumnFromArrowArray(Field field, IArrowArray arrowArray, DataFrame ret, String fieldNamePrefix)\r\nat Microsoft.Data.Analysis.DataFrame.FromArrowRecordBatch(RecordBatch recordBatch)\r\nat Program.\r\n\r\n**To Reproduce**\r\nTake a .arrow file with one column of type `Apache.Arrow.Types.Decimal256Type`\r\nvar dataframe = DataFrame.FromArrowRecordBatch(recordBatch);\r\nIt will throw above exception\r\n\r\n**Expected behavior**\r\nThe record batch should transform to DataFrame with appropriate type to handle `decimal256`","Url":"https://github.com/dotnet/machinelearning/issues/7083","RelatedDescription":"Open issue \"Add support for Apache.Arrow.Types.Decimal256Type\" (#7083)"},{"Id":"2196227277","IsPullRequest":false,"CreatedAt":"2024-03-19T23:24:54","Actor":"piyushdubey","Number":"7082","RawContent":null,"Title":"Add support for Apache.Arrow.Types.Decimal128Type","State":"open","Body":"**System Information (please complete the following information):**\r\n - Window 11\r\n - Microsoft.Data.Analysis v0.21.1\r\n - .Net Framework 4.7.2\r\n\r\n**Describe the bug**\r\nI am getting the below exception\r\n\r\nUnhandled exception. System.NotImplementedException: `decimal128`\r\nat Microsoft.Data.Analysis.DataFrame.AppendDataFrameColumnFromArrowArray(Field field, IArrowArray arrowArray, DataFrame ret, String fieldNamePrefix)\r\nat Microsoft.Data.Analysis.DataFrame.FromArrowRecordBatch(RecordBatch recordBatch)\r\nat Program.\r\n\r\n**To Reproduce**\r\nTake a .arrow file with one column of type `Apache.Arrow.Types.Decimal128Type`\r\nvar dataframe = DataFrame.FromArrowRecordBatch(recordBatch);\r\nIt will throw above exception\r\n\r\n**Expected behavior**\r\nThe record batch should transform to DataFrame with appropriate type to handle `decimal128`","Url":"https://github.com/dotnet/machinelearning/issues/7082","RelatedDescription":"Open issue \"Add support for Apache.Arrow.Types.Decimal128Type\" (#7082)"},{"Id":"2193690820","IsPullRequest":false,"CreatedAt":"2024-03-18T23:50:37","Actor":"ericstj","Number":"7081","RawContent":null,"Title":"ML.NET Tests should drop net6.0 and run on net8.0 and net9.0","State":"open","Body":"net6.0 will be out of support by the time that ML.NET 4.0 releases.  Rather than testing on `net6.0` and `net8.0` we should test on `net8.0` and `net9.0`\r\n\r\nWhen doing this we can make ML.NET use the arcade version of RemoteExecutor.","Url":"https://github.com/dotnet/machinelearning/issues/7081","RelatedDescription":"Open issue \"ML.NET Tests should drop net6.0 and run on net8.0 and net9.0\" (#7081)"},{"Id":"2189591037","IsPullRequest":true,"CreatedAt":"2024-03-18T15:12:03","Actor":"ericstj","Number":"7076","RawContent":null,"Title":"Reenable log publishing","State":"closed","Body":"Arcade fix is in, this should work now.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7076","RelatedDescription":"Closed or merged PR \"Reenable log publishing\" (#7076)"},{"Id":"2192179510","IsPullRequest":true,"CreatedAt":"2024-03-18T13:16:40","Actor":"dotnet-maestro[bot]","Number":"7079","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c692823c-b896-437f-4f57-08dc434cc8f6)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: c692823c-b896-437f-4f57-08dc434cc8f6\r\n- **Build**: \r\n- **Date Produced**: March 15, 2024 11:16:01 PM UTC\r\n- **Commit**: ace00d8719b8d1fdfd0cc05f71bb9af216338d27\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.24165.3 to 9.0.0-beta.24165.6][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 9.0.0-beta.24165.3 to 9.0.0-beta.24165.6][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.24165.3 to 9.0.0-beta.24165.6][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 9.0.0-beta.24165.3 to 9.0.0-beta.24165.6][1]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 9.0.0-beta.24165.3 to 9.0.0-beta.24165.6][1]\r\n  - **Microsoft.DotNet.XliffTasks**: [from 9.0.0-beta.24165.3 to 9.0.0-beta.24165.6][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.24165.3 to 9.0.0-beta.24165.6][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/812d978c30...ace00d8719\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c692823c-b896-437f-4f57-08dc434cc8f6)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7079","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#7079)"},{"Id":"2189458742","IsPullRequest":true,"CreatedAt":"2024-03-15T23:01:04","Actor":"dotnet-maestro[bot]","Number":"7074","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 97926d79-6b8b-4d32-c8db-08d9d479971c\r\n- **Build**: \r\n- **Date Produced**: March 15, 2024 3:24:19 PM UTC\r\n- **Commit**: 812d978c303174dc1aa305d7359e79053d7d4971\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.24159.1 to 9.0.0-beta.24165.3][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 9.0.0-beta.24159.1 to 9.0.0-beta.24165.3][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.24159.1 to 9.0.0-beta.24165.3][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 9.0.0-beta.24159.1 to 9.0.0-beta.24165.3][1]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 9.0.0-beta.24159.1 to 9.0.0-beta.24165.3][1]\r\n  - **Microsoft.DotNet.XliffTasks**: [from 9.0.0-beta.24159.1 to 9.0.0-beta.24165.3][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.24159.1 to 9.0.0-beta.24165.3][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/f4538b1f8f...812d978c30\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7074","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#7074)"},{"Id":"2189462959","IsPullRequest":true,"CreatedAt":"2024-03-15T22:59:53","Actor":"dotnet-maestro[bot]","Number":"7075","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:c692823c-b896-437f-4f57-08dc434cc8f6)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: c692823c-b896-437f-4f57-08dc434cc8f6\r\n- **Build**: \r\n- **Date Produced**: March 15, 2024 3:24:19 PM UTC\r\n- **Commit**: 812d978c303174dc1aa305d7359e79053d7d4971\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.24159.1 to 9.0.0-beta.24165.3][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 9.0.0-beta.24159.1 to 9.0.0-beta.24165.3][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.24159.1 to 9.0.0-beta.24165.3][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 9.0.0-beta.24159.1 to 9.0.0-beta.24165.3][1]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 9.0.0-beta.24159.1 to 9.0.0-beta.24165.3][1]\r\n  - **Microsoft.DotNet.XliffTasks**: [from 9.0.0-beta.24159.1 to 9.0.0-beta.24165.3][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.24159.1 to 9.0.0-beta.24165.3][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/f4538b1f8f...812d978c30\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:c692823c-b896-437f-4f57-08dc434cc8f6)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7075","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#7075)"},{"Id":"2186991643","IsPullRequest":true,"CreatedAt":"2024-03-15T20:32:24","Actor":"ericstj","Number":"7070","RawContent":null,"Title":"Update readmes for Tokenizers and Microsoft.ML","State":"closed","Body":"I fixed up the build to have the same convention as runtime (Package.md) and the same format.  Just add a Package.md next to the project.\r\n\r\nI also updated our build triggers so that future PRs that only change docs will not trigger validation builds.","Url":"https://github.com/dotnet/machinelearning/pull/7070","RelatedDescription":"Closed or merged PR \"Update readmes for Tokenizers and Microsoft.ML\" (#7070)"},{"Id":"2188003362","IsPullRequest":false,"CreatedAt":"2024-03-15T08:45:58","Actor":"khteh","Number":"7072","RawContent":null,"Title":"ML.Net deep-learning classification tutorial code doesn't build on Linux platform?","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: [e.g. Windows 10] Ubuntu 23.10\r\n - ML.NET Version: [e.g. ML.NET v1.5.5] 3.0.1\r\n - .NET Version: [e.g. .NET 5.0] .Net 8\r\n\r\n**Describe the bug**\r\nFollowing this tutorial https://learn.microsoft.com/en-us/dotnet/machine-learning/tutorials/image-classification-api-transfer-learning, VSCode hits the following error:\r\n```\r\nerror NU1301: The local source '/usr/src/ML.Net/DeepLearning_ImageClassification_Binary/C:\\Program Files (x86)\\Microsoft SDKs\\NuGetPackages\\' doesn't exist.\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots, Code, Sample Projects**\r\nIf applicable, add screenshots, code snippets, or sample projects to help explain your problem.\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/7072","RelatedDescription":"Open issue \"ML.Net deep-learning classification tutorial code doesn't build on Linux platform?\" (#7072)"},{"Id":"2187916093","IsPullRequest":false,"CreatedAt":"2024-03-15T07:48:20","Actor":"khteh","Number":"7071","RawContent":null,"Title":"ML.Net deep-learning classification tutorial code hits InvalidOperationException error","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: [e.g. Windows 10] Windows 11\r\n - ML.NET Version: [e.g. ML.NET v1.5.5] 3.0.1\r\n - .NET Version: [e.g. .NET 5.0] .Net 8\r\n\r\n**Describe the bug**\r\nFollowing this tutorial https://learn.microsoft.com/en-us/dotnet/machine-learning/tutorials/image-classification-api-transfer-learning,\r\nthe following code snippet:\r\n```\r\nITransformer BuildAndTrainModel(IDataView trainingDataView, ImageClassificationTrainer.Options classifierOptions)\r\n{\r\n    WriteLine($\"Build and train model...\");\r\n    var trainingPipeline = mlContext.MulticlassClassification.Trainers.ImageClassification(classifierOptions)\r\n                                .Append(mlContext.Transforms.Conversion.MapKeyToValue(\"PredictedLabel\"));\r\n    return trainingPipeline.Fit(trainingDataView); <<- Error\r\n}\r\n```\r\nhits a runtime error:\r\n```\r\nSystem.InvalidOperationException\r\n  HResult=0x80131509\r\n  Message=Error downloading resource from 'https://aka.ms/mlnet-resources/meta/resnet_v2_101_299.meta': DownloadFailed with exception One or more errors occurred. (Object synchronization method was called from an unsynchronized block of code.)\\nDownloadFailed with exception One or more errors occurred. (The wait completed due to an abandoned mutex.)\\nDownloadFailed with exception One or more errors occurred. (Object synchronization method was called from an unsynchronized block of code.)\\nDownloadFailed with exception One or more errors occurred. (The wait completed due to an abandoned mutex.)\\nDownloadFailed with exception One or more errors occurred. (The wait completed due to an abandoned mutex.)\\n\r\nMeta file could not be downloaded! Please copy the model file 'resnet_v2_101_299.meta' from 'meta\\resnet_v2_101_299.meta' to 'C:\\Users\\me\\AppData\\Local\\Temp\\MLNET'.\r\n  Source=Microsoft.ML.TensorFlow\r\n  StackTrace:\r\n   at Microsoft.ML.TensorFlow.TensorFlowUtils.DownloadIfNeeded(IHostEnvironment env, String url, String dir, String fileName, Int32 timeout)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.LoadTensorFlowSessionFromMetaGraph(IHostEnvironment env, Architecture arch)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.InitializeTrainingGraph(IDataView input)\r\n   at Microsoft.ML.Vision.ImageClassificationTrainer.TrainModelCore(TrainContext trainContext)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Program.<<Main>$>g__BuildAndTrainModel|0_2(IDataView trainingDataView, Options classifierOptions, <>c__DisplayClass0_0& ) in C:\\Projects\\ML.Net\\DeepLearning_ImageClassification_Binary\\src\\Program.cs:line 83\r\n   at Program.<Main>$(String[] args) in C:\\Projects\\ML.Net\\DeepLearning_ImageClassification_Binary\\src\\Program.cs:line 21\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\n**Expected behavior**\r\nRuns successfully\r\n\r\n**Screenshots, Code, Sample Projects**\r\nIf applicable, add screenshots, code snippets, or sample projects to help explain your problem.\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/7071","RelatedDescription":"Open issue \"ML.Net deep-learning classification tutorial code hits InvalidOperationException error\" (#7071)"},{"Id":"2185066771","IsPullRequest":true,"CreatedAt":"2024-03-14T17:28:06","Actor":"github-actions[bot]","Number":"7069","RawContent":null,"Title":"[release/3.0] Testing light gbm bad allocation","State":"closed","Body":"Backport of #6968 to release/3.0\r\n\r\n/cc @ericstj @michaelgsharp\r\n\r\nTest only servicing change.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7069","RelatedDescription":"Closed or merged PR \"[release/3.0] Testing light gbm bad allocation\" (#7069)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-03-22T03:30:15.5164969Z","RunDurationInMilliseconds":418}