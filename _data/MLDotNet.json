{"Data":{"GitHub":{"Issues":[{"Id":"1919676372","IsPullRequest":true,"CreatedAt":"2023-09-29T17:39:08","Actor":"asmirnov82","Number":"6846","RawContent":null,"Title":"Increase performance of arithmetic operations by enhancing calculations on nullable values ","State":"open","Body":"Fixes #6825 \r\n\r\nAdditionaly reduces amount of autogenerated code and tt templates complexity\r\n\r\nThis PR also provides ability for future vectorization of Arithmetic operations -  #5695  \r\n\r\nNotes:\r\n\r\n1) Speed improvement is achived by eliminating checks for validity on every operation. It's faster to calculate raw values and them to calculate validity for all values, than to skip calculation in case of one of the value is null (both operations are easy to vectorised in future). Exception is division (row value for null can be zero - have to avoid this operation)\r\n\r\n2) A lot of autogenerated lines of code are removed:\r\n\r\n   a) by moving cycle on buffers from PrimitiveDataFrameColumnArithmetic to PrimitiveColumnContainer level. This code is generic, so it's not necessary to duplicate it for every type alias. Internal cycle on each element inside span still stays on  PrimitiveDataFrameColumnArithmetic to avoid using virtual method inside the cycle (in theory calling virtual method is slightly slower, perhaps the overall difference is negligibly small). Exceptions are Comparison and ComparisonScalar operators - need to be fixed later, reason for not doing it now: max size of Boolean Buffer and T Buffer are different, that's why currently PrimitiveColumnContainer<bool> result is used on PrimitiveDataFrameColumnArithmetic instead of Span<bool>, this can be solved by using Memory<T> instead of Memory<byte> in DataFrameBuffer - will also increase performance of indexing (necessity of this change was already mentioned (https://github.com/dotnet/corefxlab/pull/2656/files#diff-d3a1807515a8785fb351fb67ecdae517d34c30f7d974b4631fcf65f0945510aaR21) - needs further investigation</br>\r\n  b) by using one method to perform operation - HandleOperation with operation type enum as parameter instead of several methods. Still there are a lot of lines of code for each method in BinaryOperationAPIs.ExplodedColumns and PrimitiveDataFrameColumn.BinaryOperationImplementations.Exploded - should be remediated with implementation of #5665 (improving the binary operations behavior when types mismatch). \r\n   TODO; BinaryOperation and BinaryScalarOperation enums should be combined into one enum, the same way as ComparisonOperation and ComparisonScalarOperation. TT templates and configuration additionaly simplified\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6846","RelatedDescription":"Open PR \"Increase performance of arithmetic operations by enhancing calculations on nullable values \" (#6846)"},{"Id":"1916490999","IsPullRequest":false,"CreatedAt":"2023-09-27T23:43:43","Actor":"luisquintanilla","Number":"6845","RawContent":null,"Title":"Make it easier to apply transforms to vectors of the same size. ","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\n\r\nIn general, trainers such as KMeans, expect the feature vector to be a vector of known size. The quickest way to provide this information is in the class that defines the model input schema, you can use the `[VectorType(n)]` attribute where `n` is the size of your vector. Alternatively, you can use `SchemaDefinition` similar to this [sample](https://gist.github.com/luisquintanilla/b1367fd8ba000e455b2e43a23dafa645). In this second approach, you still need to have an object to define the schema of objects. \r\n\r\n**Describe the solution you'd like**\r\n\r\nFor dense vectors where the size is the same, there's two approaches we might consider:\r\n\r\n- Automatically detect the vector size. \r\n- Enable users to specify at runtime that a column / property is a vector without using `SchemaDefinition`.\r\n\r\n**Describe alternatives you've considered**\r\n\r\n- Use DataFrame (Microsoft.Data.Analysis)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6845","RelatedDescription":"Open issue \"Make it easier to apply transforms to vectors of the same size. \" (#6845)"},{"Id":"1894905497","IsPullRequest":false,"CreatedAt":"2023-09-27T22:28:29","Actor":"asmirnov82","Number":"6821","RawContent":null,"Title":"Primitive DataFrame Column Clone method crashes with IEnumerable argument","State":"closed","Body":"public PrimitiveDataFrameColumn<T> Clone(IEnumerable<long> mapIndices) - crashes with _**System.ArgumentOutOfRangeException: 'rowIndex Parameter name: Index cannot be greater than the Column's Length'**_ exception\r\n\r\nSimple unti test:\r\n\r\n```\r\n[Fact]\r\npublic void TestNotNullableColumnCloneWithIndicesMapAsEnumerable()\r\n{\r\n    //Arrange\r\n    var column = new Int32DataFrameColumn(\"Int column\", values: new[] { 0, 5, 2, 4, 1, 3 });\r\n    var indicesMap = new long[] { 0, 1, 2, 5, 3, 4 };\r\n\r\n    //Act\r\n    var clonedColumn = column.Clone(indicesMap);\r\n\r\n    //Assert\r\n    Assert.NotSame(column, clonedColumn);\r\n    Assert.Equal(column.Name, clonedColumn.Name);\r\n    Assert.Equal(column.DataType, clonedColumn.DataType);\r\n    Assert.Equal(column.NullCount, clonedColumn.NullCount);\r\n    Assert.Equal(indicesMap.Length, clonedColumn.Length);\r\n\r\n    for (int i = 0; i < indicesMap.Length; i++)\r\n        Assert.Equal(column[indicesMap[i]], clonedColumn[i]);\r\n}\r\n```\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6821","RelatedDescription":"Closed issue \"Primitive DataFrame Column Clone method crashes with IEnumerable argument\" (#6821)"},{"Id":"1894936714","IsPullRequest":true,"CreatedAt":"2023-09-27T22:28:28","Actor":"asmirnov82","Number":"6822","RawContent":null,"Title":"PrimitiveDataFrameColumn.Clone method crashes when is used with IEnumerable mapIndices argument","State":"closed","Body":"In frame of this PR:\r\n\r\n1) Cover PrimitiveDataFrameColumn.Clone method with additional unit tests\r\n2) Use Span.Fill method to init NullValidityBuffer instead of setting individual bits  in a cycle inside AppendMany (value, count) method\r\n\r\n`lastNullBitMapBuffer.RawSpan.Slice(lastNullBitMapBuffer.Length - nullBufferAllocatable,  BitmapHelper.SetBits(lastNullBitMapBuffer.RawSpan, originalBufferLength, allocatable, true);\r\n\r\n3) Fixes #6821 \r\n\r\nRoot cause: \r\nusing of _ret[curRow] = value;_ for empty column. \r\nchanged to _ret.Append(value);_\r\n\r\nAdditionaly fix returning columns with parent column type for inheritors of PrimitiveDataFrame<T> in Clone method\r\n\r\n4) Refactoring: Fixing 3 and 2 allowed to get rid of _internal bool _modifyNullCountWhileIndexing_ field.","Url":"https://github.com/dotnet/machinelearning/pull/6822","RelatedDescription":"Closed or merged PR \"PrimitiveDataFrameColumn.Clone method crashes when is used with IEnumerable mapIndices argument\" (#6822)"},{"Id":"1916309163","IsPullRequest":false,"CreatedAt":"2023-09-27T20:57:25","Actor":"raymond130","Number":"6844","RawContent":null,"Title":"LightGBM Multiclassification trainer  returning error code -1 \"Number of classes should be specified and greater than 1 for multiclass training\" but I can't see where to specify the number of classes","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 10\r\n - ML.NET Version: 2.0.0\r\n - .NET Version: .NET 6.0\r\n - \r\n**Describe the bug**\r\nthis bug occurs when I try to use the transformationpipeline.fit(data) function with the LightGbm trainer, after filling out the appropriate options - I get the error \"LightGBM Error, code is -1, error message is 'Number of classes should be specified and greater than 1 for multiclass training'.'\"\r\n\r\nI tried to locate the source of this error in the source code and I can't figure out how to define the number of classes in the trainer. My label column is one-hot encoded so it should have two classes if I've interpreted the documentation correctly, I'm not sure where the error is coming from.\r\n\r\n**To Reproduce**\r\nrun the LightGbmMulticlass trainer and try to train with it\r\n\r\n**Expected behavior**\r\nShould train properly\r\n\r\n**Screenshots, Code, Sample Projects**\r\nBelow are two pictures of my code where I define the expected labels and features, and where I pass in the data I use.\r\n![image](https://github.com/dotnet/machinelearning/assets/45745238/ca8d6588-f00c-47bf-9b8a-bd65a230f20c)\r\n![image](https://github.com/dotnet/machinelearning/assets/45745238/8aad9670-ae27-43fa-b2f3-ce41b5e7f2f2)\r\n\r\n\r\nHere is the code written out:\r\n\r\nfor the preparedata method:\r\n\r\n`IEstimator<ITransformer> dataPipeline =\r\n            mlContext.Transforms.Conversion.MapValueToKey\r\n              (outputColumnName: \"Label\", inputColumnName: nameof(PrMaintenanceClass.failure))\r\n            //encode model column\r\n            .Append(mlContext.Transforms.Categorical.OneHotEncoding\r\n                   (\"model\", outputKind: OneHotEncodingEstimator.OutputKind.Indicator))\r\n\r\n            //define features column\r\n            .Append(mlContext.Transforms.Concatenate(\"Features\",\r\n            // \r\n            nameof(PrMaintenanceClass.voltmean_3hrs), nameof(PrMaintenanceClass.rotatemean_3hrs),\r\n            nameof(PrMaintenanceClass.pressuremean_3hrs), nameof(PrMaintenanceClass.vibrationmean_3hrs),\r\n            nameof(PrMaintenanceClass.voltstd_3hrs), nameof(PrMaintenanceClass.rotatestd_3hrs),\r\n            nameof(PrMaintenanceClass.pressurestd_3hrs), nameof(PrMaintenanceClass.vibrationstd_3hrs),\r\n            nameof(PrMaintenanceClass.voltmean_24hrs), nameof(PrMaintenanceClass.rotatemean_24hrs),\r\n            nameof(PrMaintenanceClass.pressuremean_24hrs),\r\n            nameof(PrMaintenanceClass.vibrationmean_24hrs),\r\n            nameof(PrMaintenanceClass.voltstd_24hrs), nameof(PrMaintenanceClass.rotatestd_24hrs),\r\n            nameof(PrMaintenanceClass.pressurestd_24hrs), nameof(PrMaintenanceClass.vibrationstd_24hrs),\r\n            nameof(PrMaintenanceClass.error1count), nameof(PrMaintenanceClass.error2count),\r\n            nameof(PrMaintenanceClass.error3count), nameof(PrMaintenanceClass.error4count),\r\n            nameof(PrMaintenanceClass.error5count), nameof(PrMaintenanceClass.sincelastcomp1),\r\n            nameof(PrMaintenanceClass.sincelastcomp2), nameof(PrMaintenanceClass.sincelastcomp3),\r\n            nameof(PrMaintenanceClass.sincelastcomp4),\r\n            nameof(PrMaintenanceClass.model), nameof(PrMaintenanceClass.age)));\r\n\r\n            return dataPipeline;`\r\n\r\nand for the train method:\r\n\r\n` var transformationPipeline = PrepareData(mlContext);\r\n\r\n            //settings hyper parameters\r\n            TrainerOptions = new LightGbmMulticlassTrainer.Options();\r\n            TrainerOptions.FeatureColumnName = \"Features\";\r\n            TrainerOptions.LabelColumnName = \"Label\";\r\n            TrainerOptions.LearningRate = 0.005;\r\n            TrainerOptions.NumberOfLeaves = 70;\r\n            TrainerOptions.NumberOfIterations = 2000;\r\n            TrainerOptions.NumberOfLeaves = 50;\r\n            TrainerOptions.UnbalancedSets = true;\r\n            TrainerOptions.Sigmoid = 0.2;\r\n            //\r\n            var boost = new DartBooster.Options();\r\n            boost.XgboostDartMode = true;\r\n            boost.MaximumTreeDepth = 25;\r\n            TrainerOptions.Booster = boost;\r\n\r\n            // Define LightGbm algorithm estimator\r\n            IEstimator<ITransformer> lightGbm = mlContext.MulticlassClassification.Trainers.LightGbm(TrainerOptions);\r\n\r\n            //train the ML model\r\n            TransformerChain<ITransformer> model = transformationPipeline.Append(lightGbm).Fit(preparedData);\r\n\r\n            //return trained model for evaluation\r\n            return model;`\r\n\r\n**Additional context**\r\nI hope this can help! I feel like I made a simple error\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6844","RelatedDescription":"Open issue \"LightGBM Multiclassification trainer  returning error code -1 \"Number of classes should be specified and greater than 1 for multiclass training\" but I can't see where to specify the number of classes\" (#6844)"},{"Id":"1916265345","IsPullRequest":false,"CreatedAt":"2023-09-27T20:26:34","Actor":"ericstj","Number":"6843","RawContent":null,"Title":"Microsoft.ML.Fairlearn.Tests.GridSearchTest.TestGridSearchTrialRunner2 failed with bestResult.Metric comparison","State":"open","Body":"## Build Information\r\nBuild: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=420917\r\nBuild error leg or test failing: Microsoft.ML.Fairlearn.Tests.GridSearchTest.TestGridSearchTrialRunner2\r\nPull request: N/A\r\n<!-- Error message template  -->\r\n## Error Message\r\n\r\n```\r\nExpected bestResult.Metric to be greater or equal to 0.4, but found 0.375.\r\n\r\nStack trace\r\n   at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message) in C:\\projects\\fluentassertions-vf06b\\Src\\FluentAssertions\\Execution\\XUnit2TestFramework.cs:line 32\r\n   at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message) in C:\\projects\\fluentassertions-vf06b\\Src\\FluentAssertions\\Execution\\TestFrameworkProvider.cs:line 40\r\n   at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message) in C:\\projects\\fluentassertions-vf06b\\Src\\FluentAssertions\\Execution\\DefaultAssertionStrategy.cs:line 29\r\n   at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc) in C:\\projects\\fluentassertions-vf06b\\Src\\FluentAssertions\\Execution\\AssertionScope.cs:line 223\r\n   at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc) in C:\\projects\\fluentassertions-vf06b\\Src\\FluentAssertions\\Execution\\AssertionScope.cs:line 196\r\n   at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args) in C:\\projects\\fluentassertions-vf06b\\Src\\FluentAssertions\\Execution\\AssertionScope.cs:line 238\r\n   at FluentAssertions.Numeric.NumericAssertions`1.BeGreaterOrEqualTo(T expected, String because, Object[] becauseArgs) in C:\\projects\\fluentassertions-vf06b\\Src\\FluentAssertions\\Numeric\\NumericAssertions.cs:line 236\r\n   at Microsoft.ML.Fairlearn.Tests.GridSearchTest.TestGridSearchTrialRunner2() in D:\\a\\_work\\1\\s\\test\\Microsoft.ML.Fairlearn.Tests\\GridSearchTest.cs:line 106\r\n```\r\n\r\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssues.md#how-to-fill-out-a-known-issue-error-section).\r\n\r\n<!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. -->\r\n\r\n```json\r\n{\r\n  \"ErrorMessage\": \"Expected bestResult.Metric to be greater or equal to 0.4, but found\",\r\n  \"ErrorPattern\": \"\",\r\n  \"BuildRetry\": false,\r\n  \"ExcludeConsoleLog\": true\r\n}\r\n```\r\n\r\n\r\n<!-- Known issue validation start -->\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=420917\r\n**Error message validated:** `Expected bestResult.Metric to be greater or equal to 0.4, but found`\r\n**Result validation: :white_check_mark:** Known issue matched with the provided build.\r\n**Validation performed at:** 9/27/2023 8:26:51 PM UTC\r\n<!-- Known issue validation end -->\r\n<!--Known issue error report start -->\r\n### Report\r\n\r\n|Build|Definition|Test|Pull Request|\r\n|---|---|---|---|\r\n|[420917](https://dev.azure.com/dnceng-public/public/_build/results?buildId=420917)|dotnet/machinelearning|[Microsoft.ML.Fairlearn.Tests.GridSearchTest.TestGridSearchTrialRunner2](https://dev.azure.com/dnceng-public/public/_build/results?buildId=420917&view=ms.vss-test-web.build-test-results-tab&runId=9245362&resultId=100925)||\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|1|1|\r\n<!--Known issue error report end -->","Url":"https://github.com/dotnet/machinelearning/issues/6843","RelatedDescription":"Open issue \"Microsoft.ML.Fairlearn.Tests.GridSearchTest.TestGridSearchTrialRunner2 failed with bestResult.Metric comparison\" (#6843)"},{"Id":"1912179761","IsPullRequest":true,"CreatedAt":"2023-09-27T18:16:02","Actor":"ericstj","Number":"6837","RawContent":null,"Title":"Update dependencies","State":"closed","Body":"Fix a few dependencies that were out of date.\r\n\r\nThe only product-impactful change here is the SkiaSharp update.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6837","RelatedDescription":"Closed or merged PR \"Update dependencies\" (#6837)"},{"Id":"1916079548","IsPullRequest":false,"CreatedAt":"2023-09-27T18:08:42","Actor":"ericstj","Number":"6842","RawContent":null,"Title":"ArgumentOutOfRangeException when running Microsoft.ML.Fairlearn.Tests.GridSearchTest.TestGridSearchTrialRunner2","State":"open","Body":"## Build Information\r\nBuild: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=419700\r\nBuild error leg or test failing: Microsoft.ML.Fairlearn.Tests.WorkItemExecution\r\nPull request: https://github.com/dotnet/machinelearning/pull/6837\r\n<!-- Error message template  -->\r\n## Error Message\r\n\r\n```\r\n        [Source=AutoMLExperiment, Kind=Trace] Channel started\r\n        [Source=AutoMLExperiment, Kind=Info] Update Running Trial - Id: 0\r\n        [Source=AutoMLExperiment, Kind=Trace] Microsoft.ML.AutoML.DefaultPerformanceMonitor has been started\r\n        [Source=AutoMLExperiment, Kind=Trace] current CPU: 0, current Memory(mb): 48.51171875\r\n        [Source=AutoMLExperiment, Kind=Trace] maximum memory usage: , PeakMemoryUsage: 48.51171875 trialIsCancelled: False\r\n        [Source=AutoMLExperiment, Kind=Trace] trial setting - {\"TrialId\":0,\"StartedAtUtc\":\"2023-09-26T20:49:48.6702343Z\",\"EndedAtUtc\":null,\"Parameter\":{\"_lambda_search_space\":{\"2_neg\":-4.00442839,\"2_pos\":0.776618361,\"3_neg\":-2.88146996,\"3_pos\":8.18861198},\"_pipeline_\":{\"_SCHEMA_\":\"e0 * e5\",\"e0\":{},\"e1\":{\"NumberOfLeaves\":1487,\"MinimumExampleCountPerLeaf\":23,\"NumberOfTrees\":61,\"MaximumBinCountPerFeature\":114,\"FeatureFraction\":0.4980983951658306,\"LearningRate\":1.1821894183157802E-07,\"LabelColumnName\":\"y\",\"FeatureColumnName\":\"Features\",\"ExampleWeightColumnName\":\"signedWeight\",\"DiskTranspose\":false},\"e2\":{\"NumberOfTrees\":5,\"NumberOfLeaves\":41,\"FeatureFraction\":0.404329568,\"LabelColumnName\":\"y\",\"FeatureColumnName\":\"Features\",\"ExampleWeightColumnName\":\"signedWeight\"},\"e3\":{\"NumberOfLeaves\":17267,\"MinimumExampleCountPerLeaf\":63,\"LearningRate\":5.8468910203332519E-09,\"NumberOfTrees\":2221,\"SubsampleFraction\":2.8959196043297387E-08,\"MaximumBinCountPerFeature\":11,\"FeatureFraction\":0.88016485093703201,\"L1Regularization\":4.0092348571131609E-05,\"L2Regularization\":0.093939385599205991,\"LabelColumnName\":\"y\",\"FeatureColumnName\":\"Features\",\"ExampleWeightColumnName\":\"signedWeight\"},\"e4\":{\"L1Regularization\":9.83808041,\"L2Regularization\":4.45183802,\"LabelColumnName\":\"y\",\"FeatureColumnName\":\"Features\",\"ExampleWeightColumnName\":\"signedWeight\"},\"e5\":{\"L1Regularization\":80.4055481,\"L2Regularization\":2602.4187,\"LabelColumnName\":\"y\",\"FeatureColumnName\":\"Features\",\"ExampleWeightColumnName\":\"signedWeight\"}}}}\r\n        [Source=AutoMLExperiment, Kind=Trace] current CPU: 0.09375, current Memory(mb): 72.10546875\r\n        [Source=AutoMLExperiment, Kind=Trace] maximum memory usage: , PeakMemoryUsage: 72.10546875 trialIsCancelled: False\r\n        [Source=AutoMLExperiment, Kind=Trace] \r\n        Exception thrown during Trial 0 with configuration {\"TrialId\":0,\"StartedAtUtc\":\"2023-09-26T20:49:48.6702343Z\",\"EndedAtUtc\":null,\"Parameter\":{\"_lambda_search_space\":{\"2_neg\":-4.00442839,\"2_pos\":0.776618361,\"3_neg\":-2.88146996,\"3_pos\":8.18861198},\"_pipeline_\":{\"_SCHEMA_\":\"e0 * e5\",\"e0\":{},\"e1\":{\"NumberOfLeaves\":1487,\"MinimumExampleCountPerLeaf\":23,\"NumberOfTrees\":61,\"MaximumBinCountPerFeature\":114,\"FeatureFraction\":0.4980983951658306,\"LearningRate\":1.1821894183157802E-07,\"LabelColumnName\":\"y\",\"FeatureColumnName\":\"Features\",\"ExampleWeightColumnName\":\"signedWeight\",\"DiskTranspose\":false},\"e2\":{\"NumberOfTrees\":5,\"NumberOfLeaves\":41,\"FeatureFraction\":0.404329568,\"LabelColumnName\":\"y\",\"FeatureColumnName\":\"Features\",\"ExampleWeightColumnName\":\"signedWeight\"},\"e3\":{\"NumberOfLeaves\":17267,\"MinimumExampleCountPerLeaf\":63,\"LearningRate\":5.8468910203332519E-09,\"NumberOfTrees\":2221,\"SubsampleFraction\":2.8959196043297387E-08,\"MaximumBinCountPerFeature\":11,\"FeatureFraction\":0.88016485093703201,\"L1Regularization\":4.0092348571131609E-05,\"L2Regularization\":0.093939385599205991,\"LabelColumnName\":\"y\",\"FeatureColumnName\":\"Features\",\"ExampleWeightColumnName\":\"signedWeight\"},\"e4\":{\"L1Regularization\":9.83808041,\"L2Regularization\":4.45183802,\"LabelColumnName\":\"y\",\"FeatureColumnName\":\"Features\",\"ExampleWeightColumnName\":\"signedWeight\"},\"e5\":{\"L1Regularization\":80.4055481,\"L2Regularization\":2602.4187,\"LabelColumnName\":\"y\",\"FeatureColumnName\":\"Features\",\"ExampleWeightColumnName\":\"signedWeight\"}}}}\r\n        \r\n        Exception Details: AUC is not defined when there is no negative class in the data\r\n        Parameter name: NegSample\r\n        \r\n        Abandoning Trial 0 and continue training.\r\n        \r\n        [Source=AutoMLExperiment, Kind=Trace] AUC is not defined when there is no negative class in the data\r\n        Parameter name: NegSample   at Microsoft.ML.Data.EvaluatorBase`1.AucAggregatorBase`1.ComputeWeightedAuc(Double& unweighted) in D:\\a\\_work\\1\\s\\src\\Microsoft.ML.Data\\Evaluators\\AucAggregator.cs:line 116\r\n           at Microsoft.ML.Data.BinaryClassifierEvaluator.Aggregator.Finish() in D:\\a\\_work\\1\\s\\src\\Microsoft.ML.Data\\Evaluators\\BinaryClassifierEvaluator.cs:line 705\r\n           at Microsoft.ML.Data.BinaryClassifierEvaluator.<>c__DisplayClass32_0.<GetAggregatorConsolidationFuncs>b__0(UInt32 stratColKey, ReadOnlyMemory`1 stratColVal, Aggregator agg) in D:\\a\\_work\\1\\s\\src\\Microsoft.ML.Data\\Evaluators\\BinaryClassifierEvaluator.cs:line 261\r\n           at Microsoft.ML.Data.EvaluatorBase`1.ProcessData(IDataView data, RoleMappedSchema schema, Func`2 activeColsIndices, TAgg aggregator, AggregatorDictionaryBase[] dictionaries) in D:\\a\\_work\\1\\s\\src\\Microsoft.ML.Data\\Evaluators\\EvaluatorBase.cs:line 183\r\n           at Microsoft.ML.Data.EvaluatorBase`1.Microsoft.ML.Data.IEvaluator.Evaluate(RoleMappedData data) in D:\\a\\_work\\1\\s\\src\\Microsoft.ML.Data\\Evaluators\\EvaluatorBase.cs:line 33\r\n           at Microsoft.ML.Data.BinaryClassifierEvaluator.Evaluate(IDataView data, String label, String score, String predictedLabel) in D:\\a\\_work\\1\\s\\src\\Microsoft.ML.Data\\Evaluators\\BinaryClassifierEvaluator.cs:line 951\r\n           at Microsoft.ML.Fairlearn.GridSearchTrailRunner.RunAsync(TrialSettings settings, CancellationToken ct) in D:\\a\\_work\\1\\s\\src\\Microsoft.ML.Fairlearn\\Reductions\\GridSearchTrialRunner.cs:line 89\r\n           at Microsoft.ML.AutoML.AutoMLExperiment.<RunAsync>d__24.MoveNext() in D:\\a\\_work\\1\\s\\src\\Microsoft.ML.AutoML\\AutoMLExperiment\\AutoMLExperiment.cs:line 273\r\n        [Source=AutoMLExperiment, Kind=Info] Update Failed Trial - Id: 0 - Pipeline: Unknown=>SdcaLogisticRegressionBinary\r\n```\r\n\r\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssues.md#how-to-fill-out-a-known-issue-error-section).\r\n\r\n<!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. -->\r\n\r\n```json\r\n{\r\n  \"ErrorMessage\": \"System.ArgumentOutOfRangeException : AUC is not defined when there is no negative class in the data\",\r\n  \"ErrorPattern\": \"\",\r\n  \"BuildRetry\": false,\r\n  \"ExcludeConsoleLog\": true\r\n}\r\n```\r\n\r\n\r\n<!-- Known issue validation start -->\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=419700\r\n**Error message validated:** `System.ArgumentOutOfRangeException : AUC is not defined when there is no negative class in the data`\r\n**Result validation: :x:** Known issue did not match with the provided build.\r\n**Validation performed at:** 9/27/2023 6:13:57 PM UTC\r\n<!-- Known issue validation end -->\r\n<!--Known issue error report start -->\r\n### Report\r\n\r\n|Build|Definition|Test|Pull Request|\r\n|---|---|---|---|\r\n|[420082](https://dev.azure.com/dnceng-public/public/_build/results?buildId=420082)|dotnet/machinelearning|[Microsoft.ML.Fairlearn.Tests.GridSearchTest.TestGridSearchTrialRunner2](https://dev.azure.com/dnceng-public/public/_build/results?buildId=420082&view=ms.vss-test-web.build-test-results-tab&runId=9218352&resultId=100735)||\r\n|[419440](https://dev.azure.com/dnceng-public/public/_build/results?buildId=419440)|dotnet/machinelearning|[Microsoft.ML.Fairlearn.Tests.GridSearchTest.TestGridSearchTrialRunner2](https://dev.azure.com/dnceng-public/public/_build/results?buildId=419440&view=ms.vss-test-web.build-test-results-tab&runId=9204690&resultId=100541)||\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|2|2|\r\n<!--Known issue error report end -->","Url":"https://github.com/dotnet/machinelearning/issues/6842","RelatedDescription":"Open issue \"ArgumentOutOfRangeException when running Microsoft.ML.Fairlearn.Tests.GridSearchTest.TestGridSearchTrialRunner2\" (#6842)"},{"Id":"1916076619","IsPullRequest":false,"CreatedAt":"2023-09-27T18:06:34","Actor":"ericstj","Number":"6841","RawContent":null,"Title":"Failure to load lib_lightgbm in  Microsoft.ML.Fairlearn.Tests.GridSearchTest.TestGridSearchTrialRunner2","State":"open","Body":"## Build Information\r\nBuild: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=419700\r\nBuild error leg or test failing: Microsoft.ML.Fairlearn.Tests.GridSearchTest.TestGridSearchTrialRunner2\r\nPull request: https://github.com/dotnet/machinelearning/pull/6837\r\n<!-- Error message template  -->\r\n## Error Message\r\n\r\n```\r\nException Message\r\nSystem.AggregateException : One or more errors occurred. (Unable to load shared library 'lib_lightgbm' or one of its dependencies. In order to help diagnose loading problems, consider setting the DYLD_PRINT_LIBRARIES environment variable: dlopen(liblib_lightgbm, 0x0001): tried: 'liblib_lightgbm' (no such file), '/usr/local/lib/liblib_lightgbm' (no such file), '/usr/lib/liblib_lightgbm' (no such file), '/private/tmp/helix/working/C4560A62/w/B640096B/e/liblib_lightgbm' (no such file))\r\n---- System.DllNotFoundException : Unable to load shared library 'lib_lightgbm' or one of its dependencies. In order to help diagnose loading problems, consider setting the DYLD_PRINT_LIBRARIES environment variable: dlopen(liblib_lightgbm, 0x0001): tried: 'liblib_lightgbm' (no such file), '/usr/local/lib/liblib_lightgbm' (no such file), '/usr/lib/liblib_lightgbm' (no such file), '/private/tmp/helix/working/C4560A62/w/B640096B/e/liblib_lightgbm' (no such file)\r\nCallStack\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)\r\n   at System.Threading.Tasks.Task`1.get_Result()\r\n   at Microsoft.ML.AutoML.AutoMLExperiment.Run() in /Users/runner/work/1/s/src/Microsoft.ML.AutoML/AutoMLExperiment/AutoMLExperiment.cs:line 204\r\n   at Microsoft.ML.Fairlearn.Tests.GridSearchTest.TestGridSearchTrialRunner2() in /Users/runner/work/1/s/test/Microsoft.ML.Fairlearn.Tests/GridSearchTest.cs:line 104\r\n----- Inner Stack Trace -----\r\n   at Microsoft.ML.Trainers.LightGbm.WrappedLightGbmInterface.DatasetCreateFromSampledColumn(IntPtr sampleValuePerColumn, IntPtr sampleIndicesPerColumn, Int32 numCol, Int32[] sampleNonZeroCntPerColumn, Int32 numSampleRow, Int32 numTotalRow, String parameters, SafeDataSetHandle& ret)\r\n   at Microsoft.ML.Trainers.LightGbm.Dataset..ctor(Double[][] sampleValuePerColumn, Int32[][] sampleIndicesPerColumn, Int32 numCol, Int32[] sampleNonZeroCntPerColumn, Int32 numSampleRow, Int32 numTotalRow, String param, Single[] labels, Single[] weights, Int32[] groups) in /Users/runner/work/1/s/src/Microsoft.ML.LightGbm/WrappedLightGbmDataset.cs:line 66\r\n   at Microsoft.ML.Trainers.LightGbm.LightGbmTrainerBase`4.CreateDatasetFromSamplingData(IChannel ch, Factory factory, Int32 numRow, String param, Single[] labels, Single[] weights, Int32[] groups, CategoricalMetaData catMetaData, Dataset& dataset) in /Users/runner/work/1/s/src/Microsoft.ML.LightGbm/LightGbmTrainerBase.cs:line 995\r\n   at Microsoft.ML.Trainers.LightGbm.LightGbmTrainerBase`4.LoadTrainingData(IChannel ch, RoleMappedData trainData, CategoricalMetaData& catMetaData) in /Users/runner/work/1/s/src/Microsoft.ML.LightGbm/LightGbmTrainerBase.cs:line 663\r\n   at Microsoft.ML.Trainers.LightGbm.LightGbmTrainerBase`4.TrainModelCore(TrainContext context) in /Users/runner/work/1/s/src/Microsoft.ML.LightGbm/LightGbmTrainerBase.cs:line 440\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor) in /Users/runner/work/1/s/src/Microsoft.ML.Data/Training/TrainerEstimatorBase.cs:line 157\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.Fit(IDataView input) in /Users/runner/work/1/s/src/Microsoft.ML.Data/Training/TrainerEstimatorBase.cs:line 77\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input) in /Users/runner/work/1/s/src/Microsoft.ML.Data/DataLoadSave/EstimatorChain.cs:line 68\r\n   at Microsoft.ML.Fairlearn.GridSearchTrailRunner.RunAsync(TrialSettings settings, CancellationToken ct) in /Users/runner/work/1/s/src/Microsoft.ML.Fairlearn/Reductions/GridSearchTrialRunner.cs:line 79\r\n   at Microsoft.ML.AutoML.AutoMLExperiment.RunAsync(CancellationToken ct) in /Users/runner/work/1/s/src/Microsoft.ML.AutoML/AutoMLExperiment/AutoMLExperiment.cs:line 273\r\n```\r\n\r\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssues.md#how-to-fill-out-a-known-issue-error-section).\r\n\r\n<!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. -->\r\n\r\n```json\r\n{\r\n  \"ErrorMessage\": \"Unable to load shared library 'lib_lightgbm' or one of its dependencies.\",\r\n  \"ErrorPattern\": \"\",\r\n  \"BuildRetry\": false,\r\n  \"ExcludeConsoleLog\": true\r\n}\r\n```\r\n\r\n\r\n<!-- Known issue validation start -->\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=419700\r\n**Error message validated:** `Unable to load shared library 'lib_lightgbm' or one of its dependencies.`\r\n**Result validation: :x:** Known issue did not match with the provided build.\r\n**Validation performed at:** 9/27/2023 6:14:12 PM UTC\r\n<!-- Known issue validation end -->\r\n<!--Known issue error report start -->\r\n### Report\r\n\r\n|Build|Definition|Test|Pull Request|\r\n|---|---|---|---|\r\n|[420883](https://dev.azure.com/dnceng-public/public/_build/results?buildId=420883)|dotnet/machinelearning|[Microsoft.ML.Fairlearn.Tests.GridSearchTest.TestGridSearchTrialRunner2](https://dev.azure.com/dnceng-public/public/_build/results?buildId=420883&view=ms.vss-test-web.build-test-results-tab&runId=9241832&resultId=100667)||\r\n|[420082](https://dev.azure.com/dnceng-public/public/_build/results?buildId=420082)|dotnet/machinelearning|[Microsoft.ML.Fairlearn.Tests.GridSearchTest.TestGridSearchTrialRunner2](https://dev.azure.com/dnceng-public/public/_build/results?buildId=420082&view=ms.vss-test-web.build-test-results-tab&runId=9218292&resultId=100778)||\r\n|[419440](https://dev.azure.com/dnceng-public/public/_build/results?buildId=419440)|dotnet/machinelearning|[Microsoft.ML.Fairlearn.Tests.GridSearchTest.TestGridSearchTrialRunner2](https://dev.azure.com/dnceng-public/public/_build/results?buildId=419440&view=ms.vss-test-web.build-test-results-tab&runId=9204616&resultId=100896)||\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|3|3|\r\n<!--Known issue error report end -->","Url":"https://github.com/dotnet/machinelearning/issues/6841","RelatedDescription":"Open issue \"Failure to load lib_lightgbm in  Microsoft.ML.Fairlearn.Tests.GridSearchTest.TestGridSearchTrialRunner2\" (#6841)"},{"Id":"1912646169","IsPullRequest":true,"CreatedAt":"2023-09-27T17:35:51","Actor":"rgesteve","Number":"6838","RawContent":null,"Title":"Addresses #6533","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6838","RelatedDescription":"Closed or merged PR \"Addresses #6533\" (#6838)"},{"Id":"1914736044","IsPullRequest":false,"CreatedAt":"2023-09-27T05:39:24","Actor":"wil70","Number":"6840","RawContent":null,"Title":"How to make fast LightGBM Predictions in C# with a model from LightGBM c++/cli file ","State":"open","Body":"Hello,\r\n\r\nI've successfully created a model using LightGBM CLI, specifically the C/C++ version. Now, I'm facing the task of performing predictions from a C# application. I've written the following code, but unfortunately, I'm encountering difficulties in getting it to work.\r\n\r\nI've attempted various approaches, but having a simple example would be incredibly helpful.\r\n\r\nThank you in advance for your assistance.\r\n\r\nBest regards,\r\nWil\r\n\r\n```\r\n\r\nusing Microsoft.ML;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\n\r\nclass ProgramWithMLNet\r\n{\r\n    static void Main()\r\n    {\r\n        var mlContext = new MLContext();\r\n\r\n        // Load the trained model\r\n        var model = mlContext.Model.Load(@\"Path to a model that has been created with LightGBM CLI\", out var modelSchema);\r\n\r\n        // Prepare input data for prediction\r\n        var input = new MyInputDataClass // Please replace this with your input data class\r\n        {\r\n            _data = new double[] { 0.1, .2, .3 }\r\n        };\r\n\r\n        // Make a prediction\r\n        var predictionEngine = mlContext.Model.CreatePredictionEngine<MyInputDataClass, MyOutputDataClass>(model);\r\n        var prediction = predictionEngine.Predict(input);\r\n\r\n        // Display the prediction result\r\n        Console.WriteLine(\"Prediction: \" + prediction);\r\n    }\r\n}\r\n\r\nclass MyInputDataClass\r\n{\r\n    public double[] _data = null;\r\n}\r\n\r\nclass MyOutputDataClass\r\n{\r\n    double _result = 0;\r\n}\r\n}\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/6840","RelatedDescription":"Open issue \"How to make fast LightGBM Predictions in C# with a model from LightGBM c++/cli file \" (#6840)"},{"Id":"1901058511","IsPullRequest":true,"CreatedAt":"2023-09-27T01:36:11","Actor":"asmirnov82","Number":"6830","RawContent":null,"Title":"Simplify tt files for PrimitiveDataFrameColumnAritmetics","State":"closed","Body":"1) Simplify tt files for PrimitiveDataFrameColumnAritmetics\r\n\r\nRemove using of C# methods,  that generate strings with code inside tt files. Write code directly in tt to make it more readable\r\n(methods like _GetMethodArguments_ and _GetInvertedMethodSignatureForBinaryScalarsOps_\r\n \r\n2) Reduce amount of code lines in PrimitiveDataFrameColumnArithmetic.cs by introducing parent class that implement required interface, children have to override only meaningful methods, not all methods from the interface","Url":"https://github.com/dotnet/machinelearning/pull/6830","RelatedDescription":"Closed or merged PR \"Simplify tt files for PrimitiveDataFrameColumnAritmetics\" (#6830)"},{"Id":"1896366911","IsPullRequest":false,"CreatedAt":"2023-09-26T17:23:41","Actor":"asmirnov82","Number":"6826","RawContent":null,"Title":"Add performance benchmarks for dataframe arithmetic operations","State":"closed","Body":"Add performance benchmarks for dataframe arithmetic operations\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6826","RelatedDescription":"Closed issue \"Add performance benchmarks for dataframe arithmetic operations\" (#6826)"},{"Id":"1896480246","IsPullRequest":true,"CreatedAt":"2023-09-26T17:23:40","Actor":"asmirnov82","Number":"6827","RawContent":null,"Title":"Add performance benchmarks for dataframe arithmetic operations ","State":"closed","Body":"fixes #6826 \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6827","RelatedDescription":"Closed or merged PR \"Add performance benchmarks for dataframe arithmetic operations \" (#6827)"},{"Id":"1913721754","IsPullRequest":false,"CreatedAt":"2023-09-26T15:02:38","Actor":"dymsen","Number":"6839","RawContent":null,"Title":"Question: Realising own algorithms","State":"open","Body":"### Question\r\nIs it possible with ML.NET/Microsoft.ML to realise an own algorithm?\r\nWe tried different approches like CustomMapping, ITransformer, trainer to realised it but at some point we got into trouble with internal properties/classes. Especially saving a model went down because of the need of \"meta\" data which we couldnt write because of internal properties. We tried reflection on some of the properties but loading went down then. So is there any possibilies yet to realise a own custom solution? \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6839","RelatedDescription":"Open issue \"Question: Realising own algorithms\" (#6839)"},{"Id":"1909490315","IsPullRequest":true,"CreatedAt":"2023-09-26T08:26:20","Actor":"LittleLittleCloud","Number":"6836","RawContent":null,"Title":"update interactive kernel version","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\nFix https://github.com/dotnet/csharp-notebooks/issues/81","Url":"https://github.com/dotnet/machinelearning/pull/6836","RelatedDescription":"Closed or merged PR \"update interactive kernel version\" (#6836)"},{"Id":"1900842922","IsPullRequest":false,"CreatedAt":"2023-09-25T17:52:23","Actor":"novelhawk","Number":"6829","RawContent":null,"Title":"[DataFrame] Null Reference on ElementwiseEquals on DateTime columns from DataFrame ","State":"closed","Body":"**System Information (please complete the following information):**\r\n - OS & Version: [e.g. Windows 10] Windows 10\r\n - ML.NET Version: [e.g. ML.NET v1.5.5] N/A\r\n - Microsoft.Data.Analysis Version: 0.20.1\r\n - .NET Version: [e.g. .NET 5.0]: 7.0.110\r\n\r\n**Describe the bug**\r\nInvoking ElementwiseEquals on a PrimitiveDataFrameColumn<DateTime> obtained by accessing DataFrame[\"ColumnName\"] throws NullReferenceException\r\n\r\n**To Reproduce**\r\n1. Create a PrimitiveDataFrameColumn<DateTime> with some values\r\n2. Create a dataframe with the column using its constructor\r\n3. Access the dataframe's column by using the `this[string column]` getter, es: `df[\"ColumnName\"]`\r\n4. Call the ElementwiseEquals method on the column obtained through the DataFrame\r\n5. Observe that a NullReferenceException is thrown.\r\n6. Call the same method on the column passed to the DataFrame constructor.\r\n7. Observe that no exceptions are thrown\r\n\r\n**Expected behavior**\r\n`df[\"Test\"]` should behave like `column` and should not throw exceptions.\r\n\r\n**Screenshots, Code, Sample Projects**\r\nReproduction example:\r\n```\r\n#r \"nuget: Microsoft.Data.Analysis, 0.20.1\"\r\nusing Microsoft.Data.Analysis;\r\n\r\nvar column = new DateTimeDataFrameColumn(\"Test\");\r\ncolumn.Append(DateTime.Today);\r\nvar df = new DataFrame(column);\r\nConsole.WriteLine(column == df[\"Test\"]); // true\r\nConsole.WriteLine(column.ElementwiseEquals(DateTime.Today).Any()); // True\r\ndf[\"Test\"].ElementwiseEquals(DateTime.Today) // Throws NullReferenceException\r\n```\r\n\r\n**Stack trace**\r\nError: System.NullReferenceException: Object reference not set to an instance of an object.\r\nat Microsoft.Data.Analysis.PrimitiveDataFrameColumn`1.ElementwiseEqualsImplementation[U](U value)\r\nat Microsoft.Data.Analysis.PrimitiveDataFrameColumn`1.ElementwiseEquals[U](U value)\r\nat Submission#6.<<Initialize>>d__0.MoveNext()\r\n--- End of stack trace from previous location ---\r\nat Microsoft.CodeAnalysis.Scripting.ScriptExecutionState.RunSubmissionsAsync[TResult](ImmutableArray`1 precedingExecutors, Func`2 currentExecutor, StrongBox`1 exceptionHolderOpt, Func`2 catchExceptionOpt, CancellationToken cancellationToken)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6829","RelatedDescription":"Closed issue \"[DataFrame] Null Reference on ElementwiseEquals on DateTime columns from DataFrame \" (#6829)"},{"Id":"1905536121","IsPullRequest":true,"CreatedAt":"2023-09-25T17:52:22","Actor":"novelhawk","Number":"6834","RawContent":null,"Title":"Fix wrong type conversion on PrimitiveDataFrameColumn","State":"closed","Body":"Fixes #6829\r\n\r\nAdds the patch commented by @asmirnov82 in #6831\r\n\r\nUpdated only the *.tt template, tried generating the *.cs through Visual Studio but it leaves blank lines where the templating is (the current files don't have it so I immagine there is a next step/I'm doing something wrong)\r\n\r\nAlso couldn't manage to run tests due to errors with arcade and formatting during compilation.","Url":"https://github.com/dotnet/machinelearning/pull/6834","RelatedDescription":"Closed or merged PR \"Fix wrong type conversion on PrimitiveDataFrameColumn\" (#6834)"},{"Id":"1907359499","IsPullRequest":false,"CreatedAt":"2023-09-21T16:34:24","Actor":"Ceeeeed","Number":"6835","RawContent":null,"Title":"FastTreeRegression algorithm is not working at full speed","State":"open","Body":"OS & Version: Windows 10 and Linux\r\nML.NET Version: ML.NET v2.0.1 & AutoML v0.20.1\r\n.NET Version: .NET 7.0\r\n\r\nHi,\r\nThe FastTreeRegression algorithm does not use available computing power.\r\nOn my VM, with 24 cores, it uses about 10% of the available CPU (distributed among different cores).\r\nOn my local PC (4 cores) it uses about 50%, which is also too low.\r\n\r\nIs that why this is happening? The program does not use HDD/SSD, so the writing and reading speed is not a limitation. Does the RAM speed block the full CPU speed?\r\n\r\nLightGbmRegression works well (80-90% CPU usage on both setups).","Url":"https://github.com/dotnet/machinelearning/issues/6835","RelatedDescription":"Open issue \"FastTreeRegression algorithm is not working at full speed\" (#6835)"},{"Id":"1904021393","IsPullRequest":false,"CreatedAt":"2023-09-20T03:10:50","Actor":"ahmwai","Number":"6833","RawContent":null,"Title":"Unseen labels during retraining map to value, No valid training instances found, all instances have missing features","State":"open","Body":"Dear Team,\r\n\r\nI hope this message finds you well.\r\n\r\nI'm encountering a challenge when attempting to retrain our model using mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy. Specifically, when introducing new, unseen labels for retraining, the system consistently returns the error: \"No valid training instances found, all instances have missing features.\"\r\n\r\nI've referenced a prior issue ([#5214) which highlighted a similar problem in the MulticlassClassification within .NET ML. I'd like to inquire if there have been any updates or resolutions regarding this matter. Additionally, I'd appreciate any guidance or recommendations on how we might effectively retrain our model with new data.\r\n\r\nThank you in advance for your time and assistance.","Url":"https://github.com/dotnet/machinelearning/issues/6833","RelatedDescription":"Open issue \"Unseen labels during retraining map to value, No valid training instances found, all instances have missing features\" (#6833)"},{"Id":"1902690842","IsPullRequest":true,"CreatedAt":"2023-09-20T02:32:38","Actor":"feiyun0112","Number":"6831","RawContent":null,"Title":"ElementwiseEquals on DateTime column","State":"closed","Body":"Invoking ElementwiseEquals on a PrimitiveDataFrameColumn obtained by accessing DataFrame[\"ColumnName\"] throws NullReferenceException\r\n\r\n#6829 ","Url":"https://github.com/dotnet/machinelearning/pull/6831","RelatedDescription":"Closed or merged PR \"ElementwiseEquals on DateTime column\" (#6831)"},{"Id":"1903470620","IsPullRequest":false,"CreatedAt":"2023-09-19T17:52:05","Actor":"superichmann","Number":"6832","RawContent":null,"Title":"filter by clustering result","State":"open","Body":"`KMeans` creates a new number column.\r\n`FilterRowsByColumn` filters by a number column\r\nMaybe perhaps enable the option to actually yes filter by the column which is the result of clustering?","Url":"https://github.com/dotnet/machinelearning/issues/6832","RelatedDescription":"Open issue \"filter by clustering result\" (#6832)"},{"Id":"1896762412","IsPullRequest":false,"CreatedAt":"2023-09-14T14:59:35","Actor":"luisquintanilla","Number":"6828","RawContent":null,"Title":"[Tokenizers] BPE Optional Arguments Required","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: 0.21.0-preview.23266.6\r\n - .NET Version: .NET 7\r\n\r\n**Describe the bug**\r\n\r\nThe `mergeFile` is set as an optional argument in the BPE model class. \r\n\r\nhttps://github.com/dotnet/machinelearning/blob/09b80f8a08340dc7d79ac75e13c722313f0845eb/src/Microsoft.ML.Tokenizers/Model/BPE.cs#L91-L138\r\n\r\nHowever, when I initialize the BPE model without a merges file, it throws an error. \r\n\r\n```csharp\r\nvar tokenizer = new Tokenizer(new Bpe(@\"C:\\Dev\\torchsharp-playground\\assets\\vocab\\e5-small-v2-vocab.txt\"));\r\n```\r\n\r\n```text\r\nError: (1,35): error CS7036: There is no argument given that corresponds to the required parameter 'mergesFile' of 'Bpe.Bpe(string, string?, string?, string?, string?)'\r\n```\r\n\r\nVocab file used: [https://huggingface.co/intfloat/e5-small-v2/raw/main/vocab.txt](https://huggingface.co/intfloat/e5-small-v2/raw/main/vocab.txt)\r\n\r\n**Expected behavior**\r\nNew tokenizer is created using only vocab file.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6828","RelatedDescription":"Open issue \"[Tokenizers] BPE Optional Arguments Required\" (#6828)"},{"Id":"1896015153","IsPullRequest":false,"CreatedAt":"2023-09-14T08:22:05","Actor":"asmirnov82","Number":"6825","RawContent":null,"Title":"Improve Nullable support during dataframe arithmetic operations ","State":"open","Body":"During arithmetic operations dataframe performs cloning the left side column into the result to have validity bitmap and than checks the right side validity bitmap for NULL value.\r\n\r\nFor example for Multiply we do cloning in case of inPlace  parameter is set to false (default behavior):\r\n\r\n```\r\nPrimitiveDataFrameColumn<U> newColumn = inPlace ? primitiveColumn : primitiveColumn.Clone();\r\nnewColumn._columnContainer.Multiply(column._columnContainer);\r\n```\r\nand inside container for each value we check validity:\r\n\r\n```\r\n for (int i = 0; i < span.Length; i++)\r\n {\r\n     if (BitmapHelper.IsValid(right.NullBitMapBuffers[b].ReadOnlySpan, i))\r\n     {\r\n         span[i] = (double)(span[i] * otherSpan[i]);\r\n     }\r\n     else\r\n     {\r\n         left[index] = null;\r\n     }\r\n\r\n     index++;\r\n }\r\n```\r\n\r\nValidity check is a very slow operation. It's possible to calculate Raw values and then use binary logic (AND) for calculating validity bitmap for whole byte.\r\n\r\n```\r\n//calculate raw values\r\nfor (int i = 0; i < span.Length; i++)\r\n{                \r\n    resultSpan[i] =  (double)(span[i] * otherSpan[i]);\r\n}\r\n\r\n//Calculate validity (nulls)\r\nresultValidityBitmap = Bitmap.ElementWiseAnd(validityBitmap, otherValidityBitmap));\r\n```\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6825","RelatedDescription":"Open issue \"Improve Nullable support during dataframe arithmetic operations \" (#6825)"},{"Id":"1895944157","IsPullRequest":false,"CreatedAt":"2023-09-14T07:45:24","Actor":"asmirnov82","Number":"6824","RawContent":null,"Title":"Improve DataFrame Performance","State":"open","Body":"DataFrame performance is relatively slow and can be improved. \r\n\r\nAs this is a complex issue, it has sence to split it into several independent steps. This Epic is a container for related changes to keep it accessible from one place. Here is the list of proposed changes:\r\n </br>\r\n**Improve Performance of DataFrame Arithmetic Operations**\r\n- [ x]  Improve the speed of  binary Arithmetic operations on columns with the same underlying data type. \r\n\r\n  This can be achived by improving  PrimitiveDataFrame.Clone method to use memory block coping. Avoid using CloneAs method, that involves type conversion for columns with the same data type\r\n\r\n  PR: https://github.com/dotnet/machinelearning/pull/6814\r\n \r\n- [ ] Reduce the number of copies in binary operations for columns with different type of underlying data (for example In32DataFrameColumn + Int16DataframeColumn). \r\n\r\n  We make copies of columns in the binary operation APIs mostly to reuse existing code. This is a wellknown issue. there are already tasks for eliminate excessive coping and g the binary operations behavior when types mismatch\r\n\r\n  Issue: https://github.com/dotnet/machinelearning/issues/5663\r\n  Issue: https://github.com/dotnet/machinelearning/issues/5665\r\n \r\n- [ x] Increase speed of PrimitiveDataFrameColumn initialization, by fixing AppendMany(value, count) method, that is used in all PrimitiveDataFrameColumn constructors\r\n\r\n  PR: https://github.com/dotnet/machinelearning/pull/6822\r\n\r\n- [ ] Improve Nullable support during arithmetic operations\r\n \r\n  Issue: https://github.com/dotnet/machinelearning/issues/6825\r\n\r\n- [ ] Consider how to implement Nullable support in Elementwise operations without any decrease in performance\r\n\r\n  Issue: https://github.com/dotnet/machinelearning/issues/6820\r\n\r\n- [ ] Use Simd vectorization\r\n\r\n  Issue: https://github.com/dotnet/machinelearning/issues/5695\r\n\r\n- [x ] Add performance benchmarks\r\n\r\n  Issue: https://github.com/dotnet/machinelearning/issues/6826\r\n\r\n</br>\r\n\r\n**Improve Performance of Filtering**\r\n\r\n- [ ] Faster way to Filter\r\n\r\n  Issue: https://github.com/dotnet/machinelearning/issues/6164\r\n </br>\r\n\r\n**Improve Performance of Indexing** \r\n\r\n- [ ] Accessing DataFramePrimitiveColumn elements by index involve converting Memory<byte> to Span<T> on each operation. That is very slow operation. we can consider using unmanaged memory in DataFrameBuffer instead. This also solves the issue with converting To/From Apache Arrow and heavy load on GC\r\n\r\n  Issue: https://github.com/dotnet/machinelearning/issues/5966\r\n  Issue: https://github.com/dotnet/machinelearning/issues/6715\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6824","RelatedDescription":"Open issue \"Improve DataFrame Performance\" (#6824)"},{"Id":"1895004059","IsPullRequest":false,"CreatedAt":"2023-09-13T18:00:29","Actor":"andrei-faber","Number":"6823","RawContent":null,"Title":"The project won't build","State":"open","Body":"**System Information (please complete the following information):**\r\nWindows 11 x64\r\n.NET 7.0.111, latest source code\r\n\r\n**Describe the bug**\r\nBuild error:\r\n```\r\nD:\\Projects.Ext\\machinelearning\\src\\Native\\Native.proj(133,5): error MSB3073: The command \"\"D:\\Projects.Ext\\machinelearning\\src\\Native\\build.cmd\" Debug x64 --mkllibpath C:\\Users\\andreifaber\\.nuget\\packages\\mlnetmkldeps\\0. 0.0.12\\runtimes\\win-x64\\native --onedaldevelpath C:\\Users\\andreifaber\\.nuget\\packages\\inteldal.devel.win-x64\\2023.0.0.23189\\build\\native\\daal\\latest --onetbbdevelpath C:\\Users\\andreifaber\\.nuget\\packages\\inteltbb.devel.wi n\\2021.7.1.15305\\lib\\native\\win-x64\" exited with code 1.\r\nD:\\Projects.Ext\\machinelearning\\Directory.Build.targets(54,3): error MSB3030: Could not copy the file \"D:\\Projects.Ext\\machinelearning\\artifacts\\bin\\Native\\x64.Debug\\CpuMathNative.dll\" because it was not found. [D:\\Projec ts.Ext\\machinelearning\\test\\Microsoft.ML.CpuMath.PerformanceTests\\Microsoft.ML.CpuMath.PerformanceTests.csproj::TargetFramework=net6.0]\r\nD:\\Projects.Ext\\machinelearning\\Directory.Build.targets(54,3): error MSB3030: Could not copy the file \"D:\\Projects.Ext\\machinelearning\\artifacts\\bin\\Native\\x64.Debug\\LdaNative.dll\" because it was not found. [D:\\Projects.E xt\\machinelearning\\src\\Microsoft.ML\\Microsoft.ML.csproj]\r\n    0 Warning(s)\r\n    3 Error(s)\r\n```\r\n\r\n**To Reproduce**\r\nbuild.cmd -configuration Debug /p:TargetArchitecture=x64\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6823","RelatedDescription":"Open issue \"The project won't build\" (#6823)"},{"Id":"1894429353","IsPullRequest":false,"CreatedAt":"2023-09-13T12:31:52","Actor":"asmirnov82","Number":"6820","RawContent":null,"Title":"All DataFrame Elementwise methods uncorrectly work with NULL values","State":"open","Body":"**Describe the bug**\r\nPrimitiveColumn ElementwiseEquals, ElementwizeNotEquals and other Elementwise method ignore validity information\r\n\r\nFor example. this unit test fails as it ElementWizeEquals return true for the first item ( as 0 == null):\r\n\r\n```\r\n[Fact]\r\npublic void TestElementWiseEquals()\r\n{\r\n    PrimitiveDataFrameColumn<int> intColumn1 = new PrimitiveDataFrameColumn<int>(\"Int1\", new int?[] { 0, 2, 3 });\r\n    PrimitiveDataFrameColumn<int> intColumn2 = new PrimitiveDataFrameColumn<int>(\"Int2\", new int?[] { null, 2, 3 });\r\n\r\n    var results = intColumn1.ElementwiseEquals(intColumn2);\r\n\r\n    Assert.False(results[0]);\r\n}\r\n```\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6820","RelatedDescription":"Open issue \"All DataFrame Elementwise methods uncorrectly work with NULL values\" (#6820)"},{"Id":"1892257616","IsPullRequest":false,"CreatedAt":"2023-09-12T10:54:55","Actor":"superichmann","Number":"6819","RawContent":null,"Title":"estimator save not working","State":"open","Body":"when trying to save `EstimatorChain<NormalizingTransformer>` with the save function I get: \r\n`BinaryFormatter serialization and deserialization are disabled within this application`\r\nCan you please fix the code in such a way that it will actually work?","Url":"https://github.com/dotnet/machinelearning/issues/6819","RelatedDescription":"Open issue \"estimator save not working\" (#6819)"},{"Id":"1891370080","IsPullRequest":false,"CreatedAt":"2023-09-11T22:32:26","Actor":"kayhustle","Number":"6818","RawContent":null,"Title":"Does ML .net support Z Score Normalization?","State":"open","Body":"I'm trying to calculate the z score normalized transform using ML.net TransformsCatalog. In Python this is achieved using the StandardScaler transform. I don't see this mentioned in the list of transforms. Is this type of transformation supported via one of the supported transformations?\r\nThanks","Url":"https://github.com/dotnet/machinelearning/issues/6818","RelatedDescription":"Open issue \"Does ML .net support Z Score Normalization?\" (#6818)"},{"Id":"1889071285","IsPullRequest":false,"CreatedAt":"2023-09-10T09:29:09","Actor":"Ceeeeed","Number":"6817","RawContent":null,"Title":"LightGMB bad allocation crash","State":"open","Body":" - OS & Version: Windows 10\r\n - ML.NET Version: ML.NET v2.0.1 & AutoML v0.20.1\r\n - .NET Version: .NET 7.0\r\n - 16gb ram\r\n - 4 cores\r\n \r\nHello, \r\nduring an AutoML regression training session, after more than three hours of training and successful training of 5 models `[LightGBM] [Warning] bad allocation` warnings shows in the console, and after a while the program crashes.\r\n\r\n### About my dataset:\r\n111 275 columns and 872 rows (including label column). Contains only floats from -1 to 1.\r\n\r\n### Code responsible for training the model:\r\n```cs\r\npublic async Task<IEnumerable<TrialResult>> TrainModel(DataOperationsCatalog.TrainTestData trainValidationData)\r\n{\r\n    Logger.Log($\"Running the experiment...\");\r\n\r\n    AutoMLExperiment experiment = MLContext.Auto().CreateExperiment();\r\n\r\n    experiment\r\n        .SetPipeline(pipeline)\r\n        .SetRegressionMetric(RegressionMetric.MeanAbsoluteError)\r\n        .SetTrainingTimeInSeconds(maxTrainingTime)\r\n        .SetDataset(trainValidationData);\r\n\r\n    CancellationTokenSource cts = new();\r\n\r\n    AutoMLMonitor monitor = new(pipeline, maxTrainingTime, maxTrainingIterations, cts);\r\n    experiment.SetMonitor(monitor);\r\n\r\n    await experiment.RunAsync(cts.Token);\r\n    return monitor.GetCompletedTrials();\r\n}\r\n```\r\n\r\n### My pipeline is simple:\r\n```cs\r\npipeline = MLContext.Auto().Regression(useFastForest: false, useFastTree: false, useLbfgs: false, useLgbm: true, useSdca: false);\r\n```\r\n\r\n### Logs: \r\n(In the timestamp, the first number is the application running time (hh:mm) and the second number is the local time (hh:mm:ss))\r\n```\r\n[0:00 - 06:59:59] Loading data set...\r\n[0:01 - 07:01:09] Creating data view...\r\n[0:01 - 07:01:11] Running the experiment...\r\n[0:01 - 07:01:11] Model 1 started training using LightGbmRegression algorithm\r\n[0:01 - 07:01:20] 10s/80000s (0.01 %) - Model finished training in 9.44s using LightGbmRegression algorithm (CPU: 95.51 %, RAM: 1828.41) - result: 15.08 %\r\n[0:01 - 07:01:20] ▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲ New best result! (15.08 %) ▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲\r\n[0:01 - 07:01:20] Model 2 started training using LightGbmRegression algorithm\r\n[0:03 - 07:02:42] 91s/80000s (0.11 %) - Model finished training in 81.75s using LightGbmRegression algorithm (CPU: 102.15 %, RAM: 1971.35) - result: 8.46 %\r\n[0:03 - 07:02:42] ▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲ New best result! (8.46 %) ▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲\r\n[0:03 - 07:02:42] Model 3 started training using LightGbmRegression algorithm\r\n[0:10 - 07:09:56] 526s/80000s (0.66 %) - Model finished training in 434.11s using LightGbmRegression algorithm (CPU: 101.56 %, RAM: 2008.12) - result: 6.49 %\r\n[0:10 - 07:09:56] ▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲ New best result! (6.49 %) ▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲\r\n[0:10 - 07:09:56] Model 4 started training using LightGbmRegression algorithm\r\n[3:09 - 10:08:58] 11267s/80000s (14.08 %) - Model finished training in 10741.15s using LightGbmRegression algorithm (CPU: 104.30 %, RAM: 5345.96) - result: 5.58 %\r\n[3:09 - 10:08:58] ▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲ New best result! (5.58 %) ▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲▲\r\n[3:09 - 10:08:58] Model 5 started training using LightGbmRegression algorithm\r\n[3:21 - 10:20:58] 11987s/80000s (14.98 %) - Model finished training in 720.38s using LightGbmRegression algorithm (CPU: 102.34 %, RAM: 2526.46) - result: 8.69 %\r\n[3:21 - 10:20:58] Model 6 started training using LightGbmRegression algorithm\r\n[LightGBM] [Warning] bad allocation\r\n[LightGBM] [Warning] bad allocation\r\n[LightGBM] [Warning] [LightGBM] [Warning] bad allocation\r\nbad allocation\r\n[LightGBM] [Warning] bad allocation\r\n[LightGBM] [Warning] bad allocation\r\n[LightGBM] [Warning] bad allocation\r\n(...) more of those\r\n```\r\n[full log.txt](https://github.com/dotnet/machinelearning/files/12567896/full.log.txt)","Url":"https://github.com/dotnet/machinelearning/issues/6817","RelatedDescription":"Open issue \"LightGMB bad allocation crash\" (#6817)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-10-01T03:30:18.9784958Z","RunDurationInMilliseconds":529}