{"Data":{"GitHub":{"Issues":[{"Id":"752771574","IsPullRequest":false,"CreatedAt":"2020-11-28T21:28:57","Actor":"justinormont","Number":"5514","RawContent":null,"Title":"Spelling: stopwrods","State":"open","Body":"Our stop word remover has a variable misspelt as `stopwrods` instead of `stopwords`:\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/7879849e9ae79f8f40bda65bf7fd7fa6131c454e/src/Microsoft.ML.Transforms/Text/StopWordsRemovingTransformer.cs#L987-L1015","Url":"https://github.com/dotnet/machinelearning/issues/5514","RelatedDescription":"Open issue \"Spelling: stopwrods\" (#5514)"},{"Id":"752690324","IsPullRequest":false,"CreatedAt":"2020-11-28T14:45:56","Actor":"AniaBerthelot","Number":"5513","RawContent":null,"Title":"Is it possible to combine custom and default StopWordsRemoving options?","State":"open","Body":"Actually I use Regex to preclean text after pushing it to ML.NET but my list of stop words is growing, and also I think that if I can leverage on the StopWordsRemoving loop it will be faster to do it once rather than Regex then StopWordsRemoving (do you confirm that? If StopWordsRemoving options are combined one loop of cleaning will be done? or 2 (default and custom).\r\nCustomStopWordsRemovingEstimator.Options StopWordsRemovingEstimator.Options\r\n\r\nDo you provide any way to remove emojis, flags...?\r\n\r\nThank you for this amazing library","Url":"https://github.com/dotnet/machinelearning/issues/5513","RelatedDescription":"Open issue \"Is it possible to combine custom and default StopWordsRemoving options?\" (#5513)"},{"Id":"751173883","IsPullRequest":true,"CreatedAt":"2020-11-25T23:25:57","Actor":"mstfbl","Number":"5512","RawContent":null,"Title":"Fixed official builds for Arcade SDK","State":"open","Body":"This PR fixes the official builds for ML.NET's Arcade SDK changes. \r\n\r\nThe failing trusted CI machine DDVSOWINAGE072 has been fixed, more info in this issue: https://github.com/dotnet/core-eng/issues/11513\r\n\r\nLink to the trusted and successful build of these changes: https://devdiv.visualstudio.com/DevDiv/_build/results?buildId=4255993&view=results","Url":"https://github.com/dotnet/machinelearning/pull/5512","RelatedDescription":"Open PR \"Fixed official builds for Arcade SDK\" (#5512)"},{"Id":"750996581","IsPullRequest":false,"CreatedAt":"2020-11-25T20:55:41","Actor":"itwithlyam","Number":"5511","RawContent":null,"Title":"Unable to split the file provided into multiple, consistent columns. (.tsv)","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: 3.1.402\r\n\r\n### Issue\r\n\r\n- **What did you do?** I was trying to use ML.NET to create a support desk application.\r\n- **What happened?** Once I pressed \"start training\" this error came:\r\n`   Unable to split the file provided into multiple, consistent columns.\r\nat Microsoft.ML.AutoML.ColumnInferenceApi.InferSplit(MLContext context, TextFileSample sample, Nullable`1 separatorChar, Nullable`1 allowQuotedStrings, Nullable`1 supportSparse)\r\n   at Microsoft.ML.AutoML.ColumnInferenceApi.InferColumns(MLContext context, String path, ColumnInformation columnInfo, Nullable`1 separatorChar, Nullable`1 allowQuotedStrings, Nullable`1 supportSparse, Boolean trimWhitespace, Boolean groupColumns, Boolean hasHeader)\r\n   at Microsoft.ML.ModelBuilder.AutoMLEngine.InferColumns(MLContext context, AutoMLServiceParamater config, ColumnInformation columnInformation)\r\n   at Microsoft.ML.ModelBuilder.AutoMLEngine.<StartTrainingAsync>d__30.MoveNext() in /_/src/Microsoft.ML.ModelBuilder.AutoMLService/AutoMLEngineService/AutoMLEngine.cs:line 112`\r\n- **What did you expect?**\r\n\r\n### Source code / logs\r\nLogs:\r\nat Microsoft.ML.AutoML.ColumnInferenceApi.InferSplit(MLContext context, TextFileSample sample, Nullable`1 separatorChar, Nullable`1 allowQuotedStrings, Nullable`1 supportSparse)\r\n   at Microsoft.ML.AutoML.ColumnInferenceApi.InferColumns(MLContext context, String path, ColumnInformation columnInfo, Nullable`1 separatorChar, Nullable`1 allowQuotedStrings, Nullable`1 supportSparse, Boolean trimWhitespace, Boolean groupColumns, Boolean hasHeader)\r\n   at Microsoft.ML.ModelBuilder.AutoMLEngine.InferColumns(MLContext context, AutoMLServiceParamater config, ColumnInformation columnInformation)\r\n   at Microsoft.ML.ModelBuilder.AutoMLEngine.<StartTrainingAsync>d__30.MoveNext() in /_/src/Microsoft.ML.ModelBuilder.AutoMLService/AutoMLEngineService/AutoMLEngine.cs:line 112\r\nTSV file:\r\nID\tQuestion Category\r\n1\tMy printer isn't working.\tPrinter\r\n1\tPrinter\tPrinter\r\n2\tI can't turn on my computer.\tComputer\r\n3\tI would like to book a chromebook.\tChromebooks\r\n1\tMy printer won't print.\tPrinter\r\n1\tMy printer isn't working.\tPrinter\r\n1\tI can't print\tPrinter\r\n2\tMy computer isn't working\tComputer\r\n2\tMy computer isn't turning on\tComputer\r\n2\tComputer\tComputer\r\n2\tMy computer is malfunctioning.\tComputer\r\n3\tChromebooks\tChromebooks\r\n3\tI would like a chromebook.\tChromebooks\r\n3\tHow can I book a chromebook?\tChromebooks\r\n3\tMy chromebook isn't charging.\r\n\r\n(before you ask, the tabs are formatted correctly in VS)\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.","Url":"https://github.com/dotnet/machinelearning/issues/5511","RelatedDescription":"Closed issue \"Unable to split the file provided into multiple, consistent columns. (.tsv)\" (#5511)"},{"Id":"750098208","IsPullRequest":true,"CreatedAt":"2020-11-25T01:45:56","Actor":"antoniovs1029","Number":"5510","RawContent":null,"Title":"Disabling AutoFitMaxExperimentTimeTest","State":"closed","Body":"The test is sometimes causing CI failures which block PRs.\r\nDisabling it temporally, while the root cause is investigated on #5506 \r\n","Url":"https://github.com/dotnet/machinelearning/pull/5510","RelatedDescription":"Closed or merged PR \"Disabling AutoFitMaxExperimentTimeTest\" (#5510)"},{"Id":"750087868","IsPullRequest":true,"CreatedAt":"2020-11-24T21:40:18","Actor":"antoniovs1029","Number":"5509","RawContent":null,"Title":"[Draft] Handle integration tests and nightly build testing","State":"open","Body":"1. To enable running the \"Integration tests\" (formerly known as Functional tests) by using \"build.cmd -integrationTest\"\r\n2. Also enabling the nightly build that is triggered everyday at midnight to run the integration tests","Url":"https://github.com/dotnet/machinelearning/pull/5509","RelatedDescription":"Open PR \"[Draft] Handle integration tests and nightly build testing\" (#5509)"},{"Id":"749499104","IsPullRequest":false,"CreatedAt":"2020-11-24T08:40:28","Actor":"kennywangjin","Number":"5508","RawContent":null,"Title":"Failed to deploy ML image classification model with aspnetcore webapi:","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: WINDOWS SERVER 2019 \r\n- **.NET Version (eg., dotnet --info)**:  dotnetcore 3.1\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI have trained image classification using ML.Net and integrated model to aspnetcore webapi.\r\n- **What happened?**\r\nWebApi worked fine on my local development machine. But it failed to work when i deploy webapi to the server IIS.\r\nwindows showed error:\r\n**Windows cannot access the file  for one of the following reasons: there is a problem with the network connection, the disk that the file is stored on, or the storage drivers installed on this computer; or the disk is missing. Windows closed the program IIS Worker Process because of this error.\r\n\r\nProgram: IIS Worker Process\r\nFile: \r\n\r\nThe error value is listed in the Additional Data section.\r\nUser Action\r\n1. Open the file again. This situation might be a temporary problem that corrects itself when the program runs again.\r\n2. If the file still cannot be accessed and\r\n\t- It is on the network, your network administrator should verify that there is not a problem with the network and that the server can be contacted.\r\n\t- It is on a removable disk, for example, a floppy disk or CD-ROM, verify that the disk is fully inserted into the computer.\r\n3. Check and repair the file system by running CHKDSK. To run CHKDSK, click Start, click Run, type CMD, and then click OK. At the command prompt, type CHKDSK /F, and then press ENTER.\r\n4. If the problem persists, restore the file from a backup copy.\r\n5. Determine whether other files on the same disk can be opened. If not, the disk might be damaged. If it is a hard disk, contact your administrator or computer hardware vendor for further assistance.\r\n\r\nAdditional Data\r\nError value: 00000000\r\nDisk type: 0**\r\n**Faulting application name: w3wp.exe, version: 10.0.17763.1, time stamp: 0xcfdb13d8\r\nFaulting module name: tensorflow.DLL, version: 0.0.0.0, time stamp: 0x5f77815a\r\nException code: 0xc000001d\r\nFault offset: 0x00000000003aec32\r\nFaulting process id: 0x3410\r\nFaulting application start time: 0x01d6c230bdc0bf5c\r\nFaulting application path: c:\\windows\\system32\\inetsrv\\w3wp.exe\r\nFaulting module path: C:\\inetpub\\wwwroot\\runtimes\\win-x64\\native\\tensorflow.DLL\r\nReport Id: 003ff975-a029-4989-96e6-cca406a8b89d\r\nFaulting package full name: \r\nFaulting package-relative application ID: **\r\n- **What did you expect?**\r\nWebApi and ML.net should have same behavior on local machine and remote server.\r\n\r\n### Source code / logs\r\n\r\n[proj.txt](https://github.com/dotnet/machinelearning/files/5588449/proj.txt)\r\n\r\n[file1.txt](https://github.com/dotnet/machinelearning/files/5588455/file1.txt)\r\n[startup.txt](https://github.com/dotnet/machinelearning/files/5588458/startup.txt)\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5508","RelatedDescription":"Open issue \"Failed to deploy ML image classification model with aspnetcore webapi:\" (#5508)"},{"Id":"749362558","IsPullRequest":true,"CreatedAt":"2020-11-24T05:43:09","Actor":"harishsk","Number":"5507","RawContent":null,"Title":"Fixed some of the memory leaks","State":"open","Body":"Added IDisposable to OnnxRuntimeOutputCacher and added using clauses to tests in OnnxConversionTests.","Url":"https://github.com/dotnet/machinelearning/pull/5507","RelatedDescription":"Open PR \"Fixed some of the memory leaks\" (#5507)"},{"Id":"749165881","IsPullRequest":true,"CreatedAt":"2020-11-23T22:14:08","Actor":"mstfbl","Number":"5506","RawContent":null,"Title":"Debugging occasional AutoFitMaxExperimentTimeTest failures","State":"open","Body":"Debugging occasional AutoFitMaxExperimentTimeTest failures, where sometimes the last model being trained is stopped and its provided exception is not \"Operation was canceled\".","Url":"https://github.com/dotnet/machinelearning/pull/5506","RelatedDescription":"Open PR \"Debugging occasional AutoFitMaxExperimentTimeTest failures\" (#5506)"},{"Id":"742568481","IsPullRequest":false,"CreatedAt":"2020-11-23T21:18:19","Actor":"evgeny1984","Number":"5487","RawContent":null,"Title":"Help to consume simple linear integration TensorFlow model needed","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10.0.19041 64 Bit\r\n- **.NET Version (eg., dotnet --info)**: Version:   5.0.100\r\n\r\n### Issue\r\n  Please help me by providing the solution that I can solve this problem. \r\n- **What did you do?**\r\nI created a simple Python script in Jupyter Notebook for the data set consisting of 8 rows. Successfuly trained and evaluated the model and then exported it. The model can be loaded but I cannot configure the pipeline to make prediction. \r\n- **What happened?**\r\nNow I try to consume the model with ML.NET Console dotnet core 3.1 application.\r\n- **What did you expect?**\r\nCannot consume the model, because not able to create the proper pipeline. \r\nCannot access the properties in GetModelShema as in the microsoft tutorial, because they dont exist. (how can I define them in my model (\"Features\"m \"Prediction/Softmax\")) that they are labeled and recognized?\r\n\r\n### Source code / logs\r\n[project&jupyter_notebook.zip](https://github.com/dotnet/machinelearning/files/5537990/project.jupyter_notebook.zip)","Url":"https://github.com/dotnet/machinelearning/issues/5487","RelatedDescription":"Closed issue \"Help to consume simple linear integration TensorFlow model needed\" (#5487)"},{"Id":"748030663","IsPullRequest":false,"CreatedAt":"2020-11-21T14:43:24","Actor":"denisdnl","Number":"5505","RawContent":null,"Title":"Import tensorflow model from keras generated one","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: Win 10\r\n- **.NET Version (eg., dotnet --info)**: 5 \r\n\r\n### Issue\r\n\r\n- **What did you do?** Tried to create in keras a simple NN(7 inputs, 10 outputs), freeze the model and import it in ML.Net\r\n- **What happened?** Exception\r\n- **What did you expect?** To be successfully imported \r\n\r\n### Source code / logs\r\n\r\nHi all,\r\nI created a simple neural net using keras in python, and wanted to export it to ML.Net. First try was to save it in \"tf\" format, but as i saw, ML.Net needs a frozen model. So i tried to freeze it using this approach: [https://hellobird.tistory.com/399](https://hellobird.tistory.com/399), i have generated the .pb file, but when i try to **mlContext.Model.LoadTensorFlowModel(pathToModel);** an ** Tensorflow.TensorflowException: 'Could not find meta graph def matching supplied tags: { serve }. To inspect available tag-sets in the SavedModel, please use the SavedModel CLI: `saved_model_cli`' exception is thrown \r\n**\r\n\r\n\r\nThe python code is this attached \r\n\r\n[test.txt](https://github.com/dotnet/machinelearning/files/5577780/test.txt)\r\nand the pb file(I changed it's extension so i could upload):\r\n[model.txt](https://github.com/dotnet/machinelearning/files/5577783/model.txt)\r\n\r\n\r\n\r\nI saved the pb, i imported it to VS and the c# code:\r\n\r\n` \r\n  \r\n             var mlContext = new MLContext();\r\n            \r\n            var tensorFlowModel = mlContext.Model.LoadTensorFlowModel(pathToModel);\r\n            \r\n            var pipeline = mlContext.Transforms.Concatenate(\"Features\",\r\n                    new[] { \"Bathrooms\", \"SqftLiving\", \"SqftLot\", \"Floors\", \"YearBuild\", \"YearRenovated\", \"Price\" })\r\n                .Append(tensorFlowModel.ScoreTensorFlowModel(\"Prediction/Softmax\", \"Features\"))\r\n                .Append(mlContext.Transforms.CopyColumns(\"Scores\", \"Prediction/Softmax\"));\r\n\r\n\r\n            var dataView = mlContext.Data.LoadFromEnumerable(Enumerable.Empty<House>(), tensorFlowModel.GetModelSchema());\r\n            var transformer = pipeline.Fit(dataView);`\r\n\r\nBut on the second line i got that error.\r\n\r\nIs there any known issue about this or any sample code that shows how to export a model from python in ML.Net that works?\r\n\r\nThanks ^_^ \r\n\r\n\r\nL.E: Found the problem. It seems it needs the whole path(including the file name, not only the folder)","Url":"https://github.com/dotnet/machinelearning/issues/5505","RelatedDescription":"Closed issue \"Import tensorflow model from keras generated one\" (#5505)"},{"Id":"747997199","IsPullRequest":false,"CreatedAt":"2020-11-21T11:01:15","Actor":"frankhaugen","Number":"5504","RawContent":null,"Title":"Is it possible to do continuous/incremental learning in ML.net? [question]","State":"open","Body":"I was unsure if I should ask here or on Stack Overflow.  \r\n(SO have less than 400 questions with the `ml.net`-tag, so I doubt there is a critical mass of people who bother to to follow the tag)\r\n\r\n**TL;DR:**  \r\n> Is it possible to do small incremental changes to a trained model?\r\n\r\n**Scenario**  \r\nWhere I work, we have an AI/ML/DL product called Semine, which does classification of invoices for accounting purposes, e.g. detecting what \"accounting code\" a specific invoice line is. We had a brilliant Ph.D. in statistics consult with us and write an optimized algorithm for our needs. I'd love to describe it in details but I'm not contractually allowed to divulge trade secrets, but in general: When an invoice is \"posted\", the relevant values are added to the pile of data which is used by the algorithm. Then there is an \"incremental learning\" on that action, and not a complete re-train of the entire model; Having to retrain an entire model a few thousand times per day would not be financially responsible.\r\n\r\n**Question**  \r\nIs there a way to do this type on learning in ML.net? Just a tweak, based on a small change to the underlying data? `#AskingForAFriend` 😆 \r\n\r\n**My efforts**  \r\nHaving googled, (even with Bing 😆 ), it's evident that there are a lot of questions about this, but no clear answers or examples. So a definitive \"yes/no\" on the question of if it is possible, and if it will be possible\r\n\r\nThank you for your time!","Url":"https://github.com/dotnet/machinelearning/issues/5504","RelatedDescription":"Open issue \"Is it possible to do continuous/incremental learning in ML.net? [question]\" (#5504)"},{"Id":"747872318","IsPullRequest":true,"CreatedAt":"2020-11-21T02:00:54","Actor":"mstfbl","Number":"5503","RawContent":null,"Title":"Fix NetFX builds by ensuring assembly version is set correctly","State":"closed","Body":"Arcade SDK by default sets the version of generated `dll`s to `42.42.42.42`, which breaks some of our unit tests on .Net Frameworks v4.6.1. These failing unit tests are testing backwards compatibility of models by loading them. They are using the `dll`s they came with, which is version `1.0.0.0`. We also generate the same `1.0.0.0` version `dll`s currently, but without this change we make those `dll`s have version `42.42.42.42`.\r\n\r\nCI Build: https://dev.azure.com/dnceng/public/_build/results?buildId=895013&view=results","Url":"https://github.com/dotnet/machinelearning/pull/5503","RelatedDescription":"Closed or merged PR \"Fix NetFX builds by ensuring assembly version is set correctly\" (#5503)"},{"Id":"747308715","IsPullRequest":true,"CreatedAt":"2020-11-20T08:57:27","Actor":"guinao","Number":"5502","RawContent":null,"Title":"Fix SR anomaly score calculation at beginning","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n#5491 \r\n","Url":"https://github.com/dotnet/machinelearning/pull/5502","RelatedDescription":"Open PR \"Fix SR anomaly score calculation at beginning\" (#5502)"},{"Id":"747121141","IsPullRequest":false,"CreatedAt":"2020-11-20T04:02:42","Actor":"frankhaugen","Number":"5501","RawContent":null,"Title":"Absorb Accord.net as a whole or in parts","State":"open","Body":"[Accord.net](https://github.com/accord-net/framework), (An ML library for .net), has been archived, and will no longer be maintained. The maintainer has done so partly because of ML.net deprecating Accord as a ML framework for .net. (and apparently also because of nasty researchers making fun of people using C# for Machine Learning)\r\n\r\nThe ML.net -team should absorb it, (fork it into dotnet, and move the components piece-by-piece into ML.net), because there are a lot of great stuff there that could really benefit ML.net's future, that now is just adrift, without new releases or active development.\r\n\r\nIt would be a shame for it all to go to \"waste\" or fall into obscurity","Url":"https://github.com/dotnet/machinelearning/issues/5501","RelatedDescription":"Open issue \"Absorb Accord.net as a whole or in parts\" (#5501)"},{"Id":"742295988","IsPullRequest":true,"CreatedAt":"2020-11-20T00:38:38","Actor":"antoniovs1029","Number":"5485","RawContent":null,"Title":"Handle arcade IntegrationTests","State":"closed","Body":"Handle arcade IntegrationTests\r\n\r\n- [x] Currently working locally on my computer\r\n\r\n- [ ] Checking if it works on CI\r\n\r\n- [ ] Still need to see how to make it work with the NightlyBuild CI.","Url":"https://github.com/dotnet/machinelearning/pull/5485","RelatedDescription":"Closed or merged PR \"Handle arcade IntegrationTests\" (#5485)"},{"Id":"745972773","IsPullRequest":true,"CreatedAt":"2020-11-19T23:46:13","Actor":"michaelgsharp","Number":"5496","RawContent":null,"Title":"Fixes for many of the CI builds.","State":"closed","Body":"Fixes many of the arcade CI builds. Still need to work on x86 and netfx. ","Url":"https://github.com/dotnet/machinelearning/pull/5496","RelatedDescription":"Closed or merged PR \"Fixes for many of the CI builds.\" (#5496)"},{"Id":"745150759","IsPullRequest":true,"CreatedAt":"2020-11-19T18:38:54","Actor":"Lynx1820","Number":"5493","RawContent":null,"Title":"Arcade Testing","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5493","RelatedDescription":"Closed or merged PR \"Arcade Testing\" (#5493)"},{"Id":"746829805","IsPullRequest":true,"CreatedAt":"2020-11-19T18:38:33","Actor":"Lynx1820","Number":"5500","RawContent":null,"Title":"Testing Arcade","State":"open","Body":"\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5500","RelatedDescription":"Open PR \"Testing Arcade\" (#5500)"},{"Id":"746035055","IsPullRequest":false,"CreatedAt":"2020-11-19T18:24:42","Actor":"rebecca-burwei","Number":"5497","RawContent":null,"Title":"Are ML .Net models deterministic?","State":"closed","Body":"Some models are inherently stochastic, others are deterministic. Are ML .Net models deterministic? In other words, given the same input, will an ML .Net model always return the same output/prediction? If so, to how many decimal places is this prediction deterministic?","Url":"https://github.com/dotnet/machinelearning/issues/5497","RelatedDescription":"Closed issue \"Are ML .Net models deterministic?\" (#5497)"},{"Id":"745686066","IsPullRequest":false,"CreatedAt":"2020-11-19T18:03:08","Actor":"BalsamIbrahim","Number":"5495","RawContent":null,"Title":"Unable to load DLL 'CpuMathNative': The specified module could not be found","State":"closed","Body":"salam all\r\nI face this problem when I use Microsoft.ML to create clustering \r\nI hope to help me \r\nSystem.DllNotFoundException: 'Unable to load DLL 'CpuMathNative': The specified module could not be found. (Exception from HRESULT: 0x8007007E)'\r\nthank you \r\n![image](https://user-images.githubusercontent.com/34779906/99539707-39c68e80-29b7-11eb-8e28-88fdf3eed323.png)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5495","RelatedDescription":"Closed issue \"Unable to load DLL 'CpuMathNative': The specified module could not be found\" (#5495)"},{"Id":"746142442","IsPullRequest":true,"CreatedAt":"2020-11-19T18:02:31","Actor":"frank-dong-ms","Number":"5499","RawContent":null,"Title":"fix CpuMathNative dll not found error for netfx project","State":"closed","Body":"fix #5495 \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5499","RelatedDescription":"Closed or merged PR \"fix CpuMathNative dll not found error for netfx project\" (#5499)"},{"Id":"746095573","IsPullRequest":false,"CreatedAt":"2020-11-18T22:51:32","Actor":"samsp-msft","Number":"5498","RawContent":null,"Title":"Survey: Repo contribution experience, Fall 2020","State":"open","Body":"We normally focus on how to improve the product, but we’re also turning our focus to improving the open source project. Periodically we are running a survey to collect feedback on your experience working with our repos. We did one back in May, and as its been about 6 months, its about time for another. We’ve created a survey to better understand your individual experience of participating and contributing in this project.\r\n\r\nWe would appreciate your feedback so we can work to address shortcomings and missed opportunities. If you don’t supply contact details, then responses will be anonymous.\r\n\r\n[Survey](https://www.surveymonkey.com/r/92RLF7R?Source=dotnet/machinelearning)\r\n\r\nThank you for your time!","Url":"https://github.com/dotnet/machinelearning/issues/5498","RelatedDescription":"Open issue \"Survey: Repo contribution experience, Fall 2020\" (#5498)"},{"Id":"745343460","IsPullRequest":true,"CreatedAt":"2020-11-18T05:27:55","Actor":"frank-dong-ms","Number":"5494","RawContent":null,"Title":"fix official builds in arcade","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5494","RelatedDescription":"Open PR \"fix official builds in arcade\" (#5494)"},{"Id":"745118863","IsPullRequest":true,"CreatedAt":"2020-11-17T23:01:00","Actor":"Lynx1820","Number":"5492","RawContent":null,"Title":"Testing Arcade Code Coverage","State":"closed","Body":"\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5492","RelatedDescription":"Closed or merged PR \"Testing Arcade Code Coverage\" (#5492)"},{"Id":"745080896","IsPullRequest":false,"CreatedAt":"2020-11-17T20:55:40","Actor":"nnoradie","Number":"5491","RawContent":null,"Title":"Unable to detect anomaly in data that appears anomalous","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: \r\n- **.NET Version (eg., dotnet --info)**: \r\n![image](https://user-images.githubusercontent.com/69877427/99447299-0828c700-28d4-11eb-8663-c0f165631be9.png)\r\n\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nAttempted to detect anomalies on time series data\r\n\r\n- **What happened?**\r\nNo anomalies were detected\r\n![image](https://user-images.githubusercontent.com/69877427/99441627-fee82c00-28cc-11eb-8b2c-069f0cca148e.png)\r\n![image](https://user-images.githubusercontent.com/69877427/99446948-edeee900-28d3-11eb-90f0-d177e1e02e4a.png)\r\n\r\n\r\n- **What did you expect?**\r\nAn anomaly on either the 1st or 2nd data point\r\n\r\n### Source code / logs\r\n[no_anomalies_detected_data.zip](https://github.com/dotnet/machinelearning/files/5556169/no_anomalies_detected_data.zip)\r\n\r\nSensitivity=100, SeasonalPeriodForAnomalyDetection=-1 (we set it to 0 when it is < 0), Threshold=0.1\r\n![image](https://user-images.githubusercontent.com/69877427/99440684-c431c400-28cb-11eb-90c5-dcc1d9dccb2f.png)\r\n\r\n\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5491","RelatedDescription":"Open issue \"Unable to detect anomaly in data that appears anomalous\" (#5491)"},{"Id":"743222117","IsPullRequest":false,"CreatedAt":"2020-11-17T02:22:28","Actor":"JoelShen123","Number":"5489","RawContent":null,"Title":"Could not load file from Consume Model even after changing to sdk-style","State":"closed","Body":"**Versions**\r\nMicrosoft.ML - Version=\"1.5.0-preview2\". \r\nVisual Studio 2019\r\nTarget Framework: Class Library ( .NET Framework 4.7)\r\n\r\n**Bug description**\r\n\"Could not load file\" error thrown from \"ModelOperationsCatalog.Load()\".\r\n\r\n**Steps to Reproduce**\r\n1. Follow the steps here: https://dotnet.microsoft.com/learn/ml-dotnet/get-started-tutorial/create\r\n2. Include the auto generated \"MLModel.zip\" into the project file as an \"Embedded Resource\".\r\n3. Read the \"MLModel.zip\" into Stream and pass that in into the mlContext.Model.Load(theMLModelZipStream, null)\"\r\n`string resourceName = \"IfcPluginML.Model.MLModel.zip\";`\r\n`Stream modelFile = System.Reflection.Assembly.GetExecutingAssembly().GetManifestResourceStream(resourceName)`\r\n`ITransformer mlModel = mlContext.Model.Load(modelFile , out var modelInputSchema);`\r\n4. Compile into .dll and run.\r\n5. Error is thrown.\r\n\r\n**Expected Experience**\r\nFile is read successfully.\r\n\r\n**Actual Experience**\r\nCould not read file:\r\n\r\n![image](https://user-images.githubusercontent.com/37243889/99022804-46ee1280-259e-11eb-8cec-e32c3663096d.png)\r\n\r\nI have checked that the \r\n`Stream modelFile = GetEmbeddedResourceStream(resourceName);  // returns \"System.IO.UnmanagedMemoryStream\"`\r\nso it is definitely not null.\r\n\r\nPutting the full file path produces the same error too:\r\n`string modelPath = @\"C:\\Users\\User\\AppData\\Local\\Temp\\MLVSTools\\IfcPluginML\\IfcPluginML.Model\\MLModel.zip\";`\r\n`ITransformer mlModel = mlContext.Model.Load(modelPath, out var modelInputSchema);`\r\n\r\n**Additional Context**\r\nI have referenced this post: https://github.com/dotnet/machinelearning-modelbuilder/issues/274\r\nHowever, even after changing the target framework of ProjectNameML.Model.csproj to an sdk style:\r\n![image](https://user-images.githubusercontent.com/37243889/99023420-8ec16980-259f-11eb-8899-35699780ca2f.png)\r\nThe error persists.\r\n\r\nHow my software works:\r\n1. There is a main project (Class Library .NET Framework 4.7).\r\n2. The main project calls `ConsumeModel.Predict(input);`\r\n3. ConsumeModel throws the error.\r\n\r\n**It works when:**\r\n1. The auto generated Program.cs in ProjectNameML.ConsoleApp (.NET Core 3.1) is ran.\r\n2. Program.cs calls `ConsumeModel.Predict(input);`\r\n3. Runs perfectly.\r\n\r\nThanks for your help 💯 \r\n","Url":"https://github.com/dotnet/machinelearning/issues/5489","RelatedDescription":"Closed issue \"Could not load file from Consume Model even after changing to sdk-style\" (#5489)"},{"Id":"743345395","IsPullRequest":false,"CreatedAt":"2020-11-16T10:43:06","Actor":"whitmark","Number":"5490","RawContent":null,"Title":"AutoML: How to remove/ignore columns returned by InferColumns API","State":"closed","Body":"### System information\r\n\r\n- Windows 10 Pro 10.0.19041\r\n- .NET 5.0 \r\n- Microsoft.ML.AutoML 0.17.2\r\n\r\n### Issue\r\n\r\n- I want to be able to inference columns loaded from a .csv file but then remove/ignore select columns from AutoML experiment.  My attempt to remove these columns in columnInformation does not appear to work as all columns loaded are used.\r\n- I don't necessarily want to remove the columns from the IDataView rather I just want to exclude them from the experiment.  How can this be accomplished?\r\n- In the attached exhibits I show part of the IDataView schema with the columns (3) I want to remove/ignore and the columnInformation properties after attempting to remove them.\r\n![IDataView Schema](https://user-images.githubusercontent.com/8396992/99196430-50bc7500-275a-11eb-8d0e-279fec1e4df5.png)\r\n![columnInformation properties](https://user-images.githubusercontent.com/8396992/99196431-53b76580-275a-11eb-9b16-d59fe836766c.png)\r\n\r\n### Source code / logs\r\n```\r\n    ...\r\n    MLContext mlContext = new MLContext();\r\n\r\n    // Infer columns in the dataset with AutoML\r\n    var columnInference = InferColumns(mlContext);\r\n\r\n    // Load data from files using inferred columns\r\n    LoadData(mlContext, columnInference);\r\n\r\n    // Run an AutoML experiment on the dataset\r\n    var experimentResult = RunAutoMLExperiment(mlContext, columnInference);\r\n    ...\r\n\r\n    private static void LoadData(MLContext mlContext, ColumnInferenceResults columnInference)\r\n    {\r\n        TextLoader textLoader = mlContext.Data.CreateTextLoader(columnInference.TextLoaderOptions);\r\n        TrainDataView = textLoader.Load(TrainDataPath);\r\n    }\r\n\r\n    private static ExperimentResult<BinaryClassificationMetrics> RunAutoMLExperiment(MLContext mlContext, ColumnInferenceResults columnInference)\r\n    {\r\n       // Customize column information returned by InferColumns API\r\n       ColumnInformation columnInformation = columnInference.ColumnInformation;\r\n       columnInformation.CategoricalColumnNames.Remove(\"rUpDn\");\r\n       columnInformation.NumericColumnNames.Remove(\"rDE_MaxProf\");\r\n       columnInformation.TextColumnNames.Remove(\"rD_LKDateTime\");\r\n\r\n       // invoke after each model it produces and evaluates.\r\n       var progressHandler = new Progress<RunDetail<BinaryClassificationMetrics>>();\r\n\r\n       // Initialize a cancellation token source to stop the experiment.\r\n       var cts = new CancellationTokenSource();\r\n\r\n       // Create experiment settings\r\n       var experimentSettings = CreateExperimentSettings(mlContext, cts);\r\n\r\n       // Run AutoML regression experiment\r\n       var experiment = mlContext.Auto().CreateBinaryClassificationExperiment(experimentSettings);\r\n       ExperimentResult<BinaryClassificationMetrics> experimentResult = experiment.Execute(TrainDataView, columnInformation, null, progressHandler: progressHandler);\r\n\r\n       // Print top models found by AutoML\r\n       PrintTopModels(experimentResult);\r\n\r\n       return experimentResult;\r\n   }\r\n    private static BinaryExperimentSettings CreateExperimentSettings(MLContext mlContext, CancellationTokenSource cts)\r\n    {\r\n        var experimentSettings = new BinaryExperimentSettings();\r\n        experimentSettings.MaxExperimentTimeInSeconds = 3600;\r\n        experimentSettings.CancellationToken = cts.Token;\r\n\r\n        // Set the metric that AutoML will try to optimize over the course of the experiment.\r\n        //experimentSettings.OptimizingMetric = RegressionMetric.RootMeanSquaredError;\r\n        experimentSettings.OptimizingMetric = BinaryClassificationMetric.Accuracy;\r\n\r\n        // Set the cache directory to null.\r\n        // This will cause all models produced by AutoML to be kept in memory \r\n        // instead of written to disk after each run, as AutoML is training.\r\n         // (Please note: for an experiment on a large dataset, opting to keep all \r\n        // models trained by AutoML in memory could cause your system to run out \r\n        // of memory.)\r\n        experimentSettings.CacheDirectory = null;\r\n\r\n         // Clear trainers and add LightGbm\r\n         //experimentSettings.Trainers.Clear();\r\n         //experimentSettings.Trainers.Add(BinaryClassificationTrainer.LightGbm);\r\n\r\n         return experimentSettings;\r\n     }\r\n\r\n```\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5490","RelatedDescription":"Closed issue \"AutoML: How to remove/ignore columns returned by InferColumns API\" (#5490)"},{"Id":"742660045","IsPullRequest":true,"CreatedAt":"2020-11-13T17:57:55","Actor":"Lynx1820","Number":"5488","RawContent":null,"Title":"Added Forward Compatibility Error","State":"open","Body":"To resolve #5311. \r\n\r\nIt was suggested we either throw an error or print out a warning if the model is trained with a newer mlnet version than the version reading the model. Given that warnings get logged and a model might still have a silent bug, I'm proposing that we throw an error anytime the model is trained with a newer mlnet version than the one reading the model. \r\n","Url":"https://github.com/dotnet/machinelearning/pull/5488","RelatedDescription":"Open PR \"Added Forward Compatibility Error\" (#5488)"},{"Id":"742390574","IsPullRequest":false,"CreatedAt":"2020-11-13T11:44:01","Actor":"CarolusM","Number":"5486","RawContent":null,"Title":"Load Tensorflow model from stream","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10 Enterprise 64 bits\r\n- **.NET Version (eg., dotnet --info)**:  .NET Core 3.1\r\n\r\n### Question\r\n\r\nIs there a way to load a Tensorflow model from a memory stream instead of a filepath? Currently the only way I managed to load a TF model is by calling:\r\n`public static TensorFlowModel LoadTensorFlowModel(this ModelOperationsCatalog catalog, string modelLocation);`\r\n\r\nHowever, if I want to load a ML.NET trained model, I can do it by calling:\r\n`public ITransformer Load(string filePath, out DataViewSchema inputSchema);`\r\nor\r\n`public ITransformer Load(Stream stream, out DataViewSchema inputSchema);`\r\n\r\nI am looking for a method like the latter one but for TF models. Does anybody know if something like that is already implemented? How could I load a TF model without the need of having the .pb file in disk?\r\nWill such a method be implemented in a future release?\r\n\r\nThanks for your help,\r\nCarlos.\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5486","RelatedDescription":"Open issue \"Load Tensorflow model from stream\" (#5486)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-11-29T05:30:34.4336708Z","RunDurationInMilliseconds":732}