{"Data":{"GitHub":{"Issues":[{"Id":"1096173858","IsPullRequest":false,"CreatedAt":"2022-01-07T10:09:54","Actor":"isaac12391","Number":"6034","RawContent":null,"Title":"Crashing in UWP Release, but not in Debug","State":"open","Body":" - windows 10.0.19042 Build 19042\r\n - ML.NET Version: v1.7.0\r\n - .NET Version: 2.0\r\n - UWP Version - 2004 - 1803\r\n\r\nML.Net works in debug UWP, but when released in UWP, crashes due to Exception thrown: 'System.ArgumentNullException' in System.Linq.dll.\r\n\r\nThanks for your help, \r\n\r\nIsaac\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6034","RelatedDescription":"Open issue \"Crashing in UWP Release, but not in Debug\" (#6034)"},{"Id":"1094346128","IsPullRequest":false,"CreatedAt":"2022-01-05T13:22:51","Actor":"maheshlokhande","Number":"6033","RawContent":null,"Title":"'Probability' column missing in output schema of NaiveBayes MulticlassClassification trainer","State":"open","Body":" - OS & Version: Windows 2016\r\n - ML.NET Version: ML.NET 1.7.0\r\n - .NET Version: .NET 5.0\r\n\r\n*Issue*\r\nCould not find column 'Probability' exception is thrown when transforming input data with model trained with NaiveBayes MultiClassClassification trainer.\r\n\r\n\r\n**Expected behavior**\r\nSimilar to other trainers, Probability column representing probability for predicted label or array of probabilities representing probability for every label should be present in output of transformation.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6033","RelatedDescription":"Open issue \"'Probability' column missing in output schema of NaiveBayes MulticlassClassification trainer\" (#6033)"},{"Id":"1075435514","IsPullRequest":false,"CreatedAt":"2022-01-04T14:05:21","Actor":"torronen","Number":"6021","RawContent":null,"Title":"Question: Re-train a model: should I feed all data or only the new one?","State":"closed","Body":"I am trying online learning based on https://docs.microsoft.com/en-us/dotnet/machine-learning/how-to-guides/retrain-model-ml-net\r\n\r\nIs it expected to send all relevant data for re-training, or should I only send a the new data, or even just a single new observation?\r\n\r\n\r\nBackground:\r\n1. Model makes predictions based on initial learning data\r\n2. User corrects wrong predictions based on his needs and preferences. This data becomes now additional training data.\r\nNote: it might be that user only corrects one more observation.\r\n\r\nDoes re-train only expect new data from step (2) or should I send initial training data with the new data (1) + (2)?\r\n\r\nIf no clear anwer then I probably need to do some experimentation but it seems complex and compute-intensive to get reliable results.","Url":"https://github.com/dotnet/machinelearning/issues/6021","RelatedDescription":"Closed issue \"Question: Re-train a model: should I feed all data or only the new one?\" (#6021)"},{"Id":"1091858611","IsPullRequest":false,"CreatedAt":"2022-01-01T17:35:55","Actor":"torronen","Number":"6032","RawContent":null,"Title":"BufferBuilder.MakeDense: IndexOutOfRangeException","State":"open","Body":"**System Information:**\r\n - OS & Version:  Windows 11\r\n - ML.NET Version: 1.6.0 (custom build with autoML search space edited)\r\n - .NET Version: .NET 5.0\r\n\r\n**Describe the bug**\r\nI am running AutoML. The below is from logs, probably about 1 out of 50 runs on same dataset. \r\n\r\n**To Reproduce**\r\nUnknown. It might be related to specific model parameters, but they were not logged (the search space is customized).\r\nUnfortunately, not even model is saved, since I am only exploring the weights. Model was trained succesfully.\r\n\r\n**Screenshots, Code, Sample Projects**\r\nAlthough, global feature index works almost always, I have this exception in logs. \r\n\r\n```\r\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\r\n   at Microsoft.ML.Data.BufferBuilder`1.MakeDense() in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\Data\\BufferBuilder.cs:line 322\r\n   at Microsoft.ML.Data.BufferBuilder`1.GetResult(VBuffer`1& buffer) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\Data\\BufferBuilder.cs:line 462\r\n   at Microsoft.ML.Trainers.FastTree.TreeEnsembleModelParameters.GetFeatureWeights(VBuffer`1& weights) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.FastTree\\FastTree.cs:line 3242\r\n   at Kwork.AI.AutoML.Experiment.SaveGlobalFeatureIndexFastTree(MLContext mlContext, ITransformer model, String filename, IDataView testDataView, BinaryClassificationTrainer trainer) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src-AutoML-Runner\\Kwork.AI.AutoML.Runner\\Experiment.cs:line 668\r\n```\r\n\r\nLink to BufferBuilder.MakeDense: https://github.com/dotnet/machinelearning/blob/52ddbcd0a57b440e60e43e6cb39b49fe55bdfe55/src/Microsoft.ML.Data/Data/BufferBuilder.cs#L316\r\n\r\n**Additional context**\r\nIt is not blocking my work, only for FYI","Url":"https://github.com/dotnet/machinelearning/issues/6032","RelatedDescription":"Open issue \"BufferBuilder.MakeDense: IndexOutOfRangeException\" (#6032)"},{"Id":"1090273452","IsPullRequest":false,"CreatedAt":"2021-12-29T05:10:25","Actor":"ansarizafar","Number":"6031","RawContent":null,"Title":"Publish ML.NET 1.7.0 on Nuget","State":"open","Body":"Latest version of ML.net CLI is not available on Nuget. Please publish version 1.7 on Nuget.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6031","RelatedDescription":"Open issue \"Publish ML.NET 1.7.0 on Nuget\" (#6031)"},{"Id":"1089993641","IsPullRequest":false,"CreatedAt":"2021-12-28T16:09:20","Actor":"zweistein22","Number":"6030","RawContent":null,"Title":"Microsoft.ML.Parquet","State":"open","Body":"Microsoft.ML.Parquet must use Parquet.net version == 2.1.3   . It may not use the current Parquet.net versions 3.xx (3.91) as the internal structures have changed and Parquet.Data.Dataset does not exist in recent Parquet.net versions.\r\n\r\nWhen a newer Parquet.dll is found   however this newer version is used and causes a crash al Assembly.Load\r\n\r\nhttps://gist.github.com/klesouza/c23781677b03f28128996075ba3e8767#file-parquetloader-cs\r\n\r\nBest solution would be to update Microsoft.ML.Parquet .\r\n\r\nsecond best is to force linkage of exact parquet.net 2.1.3  and not allow >= 2.1.3\r\n\r\nBest regards\r\nAndreas\r\n\r\n\r\n ","Url":"https://github.com/dotnet/machinelearning/issues/6030","RelatedDescription":"Open issue \"Microsoft.ML.Parquet\" (#6030)"},{"Id":"1089898994","IsPullRequest":false,"CreatedAt":"2021-12-28T13:31:36","Actor":"Lee-Cheul-Woo","Number":"6029","RawContent":null,"Title":"When is freed these limitations?","State":"open","Body":"When is freed these limitations?\r\n\r\nWill be they not used in programming forever?\r\nIf you have some roadmap, please let me know.","Url":"https://github.com/dotnet/machinelearning/issues/6029","RelatedDescription":"Open issue \"When is freed these limitations?\" (#6029)"},{"Id":"1088262312","IsPullRequest":false,"CreatedAt":"2021-12-24T09:15:03","Actor":"developervariety","Number":"6028","RawContent":null,"Title":"Upgrade Tensorflow support >2.3","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nI'm desktop environment is an iMac with M1 chip. I have been looking on how to build TensorFlow v2.3 so I could use it for image classification, but haven't had much luck. When building with a v2.5 `libtensorflow` I receive the following error message due to breaking changes after v2.3\r\n\r\n`Unable to find an entry point named 'TF_StringEncodedSize' in shared library 'tensorflow'`\r\n\r\n**Describe the solution you'd like**\r\nUpgrade TensorFlow support to v2.5+\r\n\r\n**Describe alternatives you've considered**\r\nNo alternatives really.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6028","RelatedDescription":"Open issue \"Upgrade Tensorflow support >2.3\" (#6028)"},{"Id":"1086726167","IsPullRequest":false,"CreatedAt":"2021-12-22T11:24:46","Actor":"aforoughi1","Number":"6027","RawContent":null,"Title":"New PFI API, inconstancies in return types for Binary vs Regression and MultiClass ","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: 1.7\r\n - .NET Version:  NET 5.0\r\n\r\n**Describe the bug**\r\nI tried to write a generic method to Calculate PFI  using the New PFI API which was released  as part of Ml.Net 1.7.\r\nFirstly, The online documentation is not matching the release.\r\nSee https://docs.microsoft.com/enus/dotnet/api/microsoft.ml.permutationfeatureimportanceextensions\r\nSecondly, the return types for Regression and Multiclass is Dictionary but Binary is an Array\r\n ImmutableDictionary<string,RegressionMetricsStatistics>\r\n ImmutableDictionary<string,MulticlassClassificationMetricsStatistics>\r\n Immutable.ImmutableArray<BinaryClassificationMetricsStatistics> \r\n\r\nIs this a bug ?\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6027","RelatedDescription":"Open issue \"New PFI API, inconstancies in return types for Binary vs Regression and MultiClass \" (#6027)"},{"Id":"1084204003","IsPullRequest":false,"CreatedAt":"2021-12-19T22:12:47","Actor":"xperiandri","Number":"6026","RawContent":null,"Title":"Make a TextFieldParser types public","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nI need to read a position delimited file (no delimiters)\r\n\r\n**Describe the solution you'd like**\r\nMake TextFieldParser.cs types public\r\n\r\n**Describe alternatives you've considered**\r\nCopy source code of TextFieldParser.cs\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6026","RelatedDescription":"Open issue \"Make a TextFieldParser types public\" (#6026)"},{"Id":"1083952532","IsPullRequest":false,"CreatedAt":"2021-12-18T21:49:44","Actor":"torronen","Number":"6025","RawContent":null,"Title":"Default parameters not taking into account in GenerateCandidateConfigurations","State":"open","Body":"Per my understanding:\r\n1) Default values for trainers are set based on experience from a wide range of dataset. Therefore, they should be a good starting point.\r\n2) AutoML start by running with default values and then randomly 10 experiments around it.\r\n3) The random values can be used to estimate direction for next parameters search. \r\n\r\nHowever, it seems GenerateCandidateConfigurations does not receive parameters for the 1st run with default parameters in previousRun attribute (SmacSweeper.cs). It likely means forestPredictor and GredyPlusRandomSearch do not know what are the defaults and what was the metrics for the first run, so it can only rely on random experiments. This may have detrimental effect on the next suggested parameters because there have been no known good combinations of parameters in previousRuns. \r\n\r\nI believe the default parameters should be added to history and then previousRuns variable, so that SmacSweeper can use them to propose new parameters. \r\n\r\nIf my understanding is correct it may also affect ModelBuilder, although it probably does not use SmacSweeper.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6025","RelatedDescription":"Open issue \"Default parameters not taking into account in GenerateCandidateConfigurations\" (#6025)"},{"Id":"1083888227","IsPullRequest":false,"CreatedAt":"2021-12-18T18:14:57","Actor":"torronen","Number":"6024","RawContent":null,"Title":"Question: improve performance of reading files?","State":"open","Body":"I am running LightGbmBinaryTrainer through AutoML API. The start of training is slow. \r\nAre there ways to make it faster? CPU usage is less than 1 core, HDD reading is also very low.\r\nThe subsequent experiments seem much faster.\r\n\r\nFor example, should I read the data to memory before starting AutoML.\r\n\r\n```\r\n  var loadOptions = columnInference.TextLoaderOptions;\r\n            loadOptions.UseThreads = true;\r\n            TextLoader textLoader = mlContext.Data.CreateTextLoader(loadOptions);\r\n```\r\n\r\nThis is where it seems to spend most of time, on every pause. I have not run profiling though (it has some issues)\r\n![image](https://user-images.githubusercontent.com/26261427/146651154-22686c8c-fb47-4cb1-8a0f-712a84e78134.png)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6024","RelatedDescription":"Open issue \"Question: improve performance of reading files?\" (#6024)"},{"Id":"1079836838","IsPullRequest":false,"CreatedAt":"2021-12-14T14:37:06","Actor":"cvergaray","Number":"6023","RawContent":null,"Title":"TensorFlow/ONNX inference on ARM","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nI have a Xamarin, soon to be updated to MAUI, application that we are looking to enhance with some image classification capabilities using ML.Net. The intent is to aid our users in identifying domain-specific objects in photos using their Android or iOS phones. We do not, however, own or maintain the training pipeline and are instead provided with the model in TensorFlow pb format. Adding the ability to make inferences using TensorFlow models would allow us to add the computer vision components using ML.Net.\r\n\r\n**Describe the solution you'd like**\r\nAdd support for inferencing with TensorFlow on ARM devices.\r\n\r\n**Describe alternatives you've considered**\r\n- TensorFlow Lite, but that only works with Xamarin.Android\r\n- Converting the pb to ONNX and then using a custom cross-compiled binary. We haven't tried this, but I suspect it would work\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6023","RelatedDescription":"Open issue \"TensorFlow/ONNX inference on ARM\" (#6023)"},{"Id":"1071514206","IsPullRequest":false,"CreatedAt":"2021-12-12T16:47:12","Actor":"jbilbrey","Number":"6014","RawContent":null,"Title":"Consume a tensorflow regression model from .NET","State":"closed","Body":"System information\r\n\r\nusing Visual Studio 2022 \r\nPython 3.8.12\r\nTensorflow 2.5\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19043\r\n .NET SDKs installed:\r\n  5.0.400 [C:\\Program Files\\dotnet\\sdk]\r\n  6.0.100 [C:\\Program Files\\dotnet\\sdk]\r\nIssue\r\nI am trying to create a simple end-to-end problem.  I create a simple model in Python and import the saved_model.pb into .NET.  I would like to consume this model.  Please help me by providing the solution that I can solve this problem.\r\n\r\nWhat did you do?\r\nI created a simple Python script in for the data set. Successfuly trained and evaluated the model and then exported it. The model can be loaded but I cannot configure the pipeline to make prediction.\r\nWhat happened?\r\nNow I try to consume the model with ML.NET Console.\r\nWhat did you expect?\r\nCannot consume the model, because not able to create the proper pipeline.\r\n\r\nI included the python script and the .NET program file in this repo.  \r\n[https://github.com/jbilbrey/repo](https://github.com/jbilbrey/repo)\r\n\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.Data;\r\nusing System;\r\nusing System.IO;\r\nusing Microsoft.ML.Transforms;\r\nusing System.Linq;\r\n\r\nnamespace TestDeleteMe\r\n{\r\n    class Program\r\n    {\r\n       \r\n        static string dataset = Path.Combine(Directory.GetCurrentDirectory(), \"mpg.txt\");        \r\n        static readonly string _modelPath = Path.Combine(Environment.CurrentDirectory, \"model\");\r\n\r\n        static void Main(string[] args)\r\n        {\r\n            var mlContext = new MLContext();\r\n\r\n            Console.WriteLine(\"The path to the model is... \" + _modelPath.ToString());  // debug only\r\n            //load tensorflow model\r\n            var tensorFlowModel = mlContext.Model.LoadTensorFlowModel(_modelPath);\r\n            \r\n            var schema = tensorFlowModel.GetModelSchema();\r\n            var inputSchema = tensorFlowModel.GetInputSchema();\r\n                               \r\n            Console.WriteLine(\"The data is...\" + inputSchema.ToString());\r\n\r\n            var reader = mlContext.Data.CreateTextLoader(new[] {\r\n                new TextLoader.Column(\"dense_input_1\", DataKind.Single, new[] {new TextLoader.Range(1,9)}),          \r\n            }, separatorChar: '\\t', hasHeader: true);\r\n\r\n            // read the data\r\n            var data = reader.Load(dataset);\r\n\r\n            // print data to screen\r\n            var inputs = mlContext.Data.CreateEnumerable<InputData>(data, reuseRowObject: false).ToArray();\r\n\r\n            // print the data to the console\r\n            for (int i = 0; i < inputs.Length; i++)\r\n            {\r\n                //var predictedLabel = engine.Predict(inputs[i]);\r\n\r\n                for (int j = 0; j < inputs[i].Features.Length; j++)\r\n                {\r\n                    Console.Write(inputs[i].Features[j]);\r\n                    Console.Write(\" \");\r\n                }\r\n                //Console.WriteLine(predictedLabel.Output[0]);\r\n            }\r\n\r\n            ////////////// fit the model /////////////////// NEED HELP HERE to consume/use the model!!!\r\n\r\n            ///var estimator = tensorFlowModel.ScoreTensorFlowModel(\"Predict\", \"dense_input_1\").Fit(data);\r\n\r\n        }\r\n    }\r\n\r\n    class InputData\r\n    {\r\n        [ColumnName(\"dense_input_1\"), VectorType(9)]\r\n        public float[]? Features { get; set; }\r\n    }\r\n\r\n\r\n    class OutputData\r\n    {\r\n        [ColumnName(\"Output\"), VectorType(1)]\r\n        public float[]? Prediction { get; set; }\r\n    }\r\n}\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6014","RelatedDescription":"Closed issue \"Consume a tensorflow regression model from .NET\" (#6014)"},{"Id":"1077434629","IsPullRequest":false,"CreatedAt":"2021-12-11T07:34:36","Actor":"oliver021","Number":"6022","RawContent":null,"Title":"Dynamic Input and Output and data view from json data","State":"open","Body":"I have a problem that despite having some suggestions on how to solve it, the possible solutions are still a bit forced for my taste.\r\nWhat happens is that `prediction engine` does not work to make predictions with an ML.Net model because both the input and the output are dynamically established in a schema stored in a data store, the problem is not to enter the model with data whose fields are dynamic, until I get there. The problem is when it comes to loading the model and using it to predict and make the work for which it was trained. I reiterate the schema of an input is strictly related to its model, but the problem is that the data to enter when predicting is data that is entered in a json. How can I from a json or a `Dictionary <string, string>` create an `IDataView` instance cleanly and without violating the API, to use `ITransform` directly to make predictions or uses of the model?","Url":"https://github.com/dotnet/machinelearning/issues/6022","RelatedDescription":"Open issue \"Dynamic Input and Output and data view from json data\" (#6022)"},{"Id":"1075414721","IsPullRequest":false,"CreatedAt":"2021-12-09T10:35:24","Actor":"niyazidageek","Number":"6020","RawContent":null,"Title":"CLI with SQL Database","State":"open","Body":"When using Model Builder via Graphical User Interface in Visual Studio 2019 on Windows, one is able to read data straight from SQL Database, however there is no such possibility when creating a Model Builder via CLI. Please, consider this. Thank you in advance!\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6020","RelatedDescription":"Open issue \"CLI with SQL Database\" (#6020)"},{"Id":"1075386570","IsPullRequest":true,"CreatedAt":"2021-12-09T10:07:18","Actor":"naphtalidavies","Number":"6019","RawContent":null,"Title":"Training","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6019","RelatedDescription":"Open PR \"Training\" (#6019)"},{"Id":"1074416869","IsPullRequest":true,"CreatedAt":"2021-12-08T13:33:09","Actor":"Srujana-Oruganti","Number":"6018","RawContent":null,"Title":"Basic Agglomerative clustering implementation  #5725","State":"open","Body":" #5725\r\nBasic Agglomerative clustering implementation:\r\n1. Implement basic agglomerative clustering.\r\n2. Distance measure is Euclidean distance.\r\n3. Included 3 Linkage Criteria implementations : Single Link, Complete Link, Average Link.\r\n4. Simple testcase\r\n\r\nToDo:\r\n1. Implement other Linkage Criteria like: Ward, Centriod based linkage.\r\n2. Add support for other distance metrics.\r\n2. Implement agglomerative clustering using efficient heap based approach.\r\n3. Implement model saving and reloading.\r\n4. Implement visualization of dendrogram.\r\n5. Implement cluster prediction capability.\r\n6. Include more test cases.\r\n7. Refactor common code for different Clustering projects to a common project.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6018","RelatedDescription":"Open PR \"Basic Agglomerative clustering implementation  #5725\" (#6018)"},{"Id":"1074125140","IsPullRequest":false,"CreatedAt":"2021-12-08T08:10:06","Actor":"gkukucska91","Number":"6017","RawContent":null,"Title":"Problems with convolutional neural networks loaded from Keras model","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 10\r\n - ML.NET Version: 1.6.0\r\n - .NET Version: .NET Framework 4.7.1\r\n\r\n**Describe the bug**\r\nWhen attempting to load convolutional neural networks, with a non predetermined size required for input (*,*,1 size), we encounter the following problems:\r\n- When we attempt to run the network on a (n,1,1) sized input, only n values which are dividable by 4 are accepted, although the network should be capable of processing such an input, the following exception is thrown:\r\n`System.InvalidOperationException: 'Input shape mismatch: Input 'serving_default_input_6' has shape (None, None, 1), but input data is of length 257.`\r\n\r\n\r\n- Even when the input is accepted, the results are not equivalent to the ones resulted from keras, seemingly smaller parts of the input is considered input for the network (see later in screenshots)\r\n\r\n**Expected behavior**\r\nSame behaviour to the Keras environment\r\n\r\n**Screenshots, Code, Sample Projects**\r\nCode for reproduction of the bugs:\r\n\r\n```C#\r\nusing System;\r\nusing System.Linq;\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.Data;\r\nusing System.IO;\r\n\r\nnamespace KerasMLNET_demo\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n\r\n            //loading the trained model\r\n            string modellocation = @\"./model/noisefilter\";\r\n            var mlContext = new MLContext();\r\n            using var tensorFlowModel = mlContext.Model.LoadTensorFlowModel(modellocation);\r\n            var inputschema = tensorFlowModel.GetInputSchema();\r\n            var inputlayer_ID = inputschema[0].Name;\r\n\r\n            //generating input data:\r\n            var rand = new Random();\r\n            float[] inputdata = new float[256];\r\n            for (int i = 0; i < inputdata.Length; i++)\r\n            {\r\n                inputdata[i] = (float)(rand.NextDouble() + 25*Math.Exp(-0.025*((128.0 - i) * (128.0 - i))));\r\n            }\r\n            File.WriteAllLines(\"input.csv\", inputdata.Select(d => d.ToString(System.Globalization.CultureInfo.CreateSpecificCulture(\"en-US\"))));\r\n            var datalist = new SpectrumCollection[]\r\n            {\r\n                new SpectrumCollection(){Spectrum = inputdata }\r\n            };\r\n            var dataView = mlContext.Data.LoadFromEnumerable<SpectrumCollection>(datalist);\r\n\r\n\r\n            //generating ML model from the keras network\r\n            var pipeline = mlContext.Transforms.CopyColumns(inputlayer_ID, \"Spectrum\").Append(tensorFlowModel.ScoreTensorFlowModel(\"StatefulPartitionedCall\", inputlayer_ID)).Append(mlContext.Transforms.CopyColumns(\"Spectrum\", \"StatefulPartitionedCall\"));\r\n            ITransformer model = pipeline.Fit(dataView);\r\n            var engine = mlContext.Model.CreatePredictionEngine<SpectrumCollection, SpectrumCollection>(model);\r\n            // Predict with TensorFlow pipeline.\r\n            SpectrumCollection prediction;\r\n            float[] PredSpectrum;\r\n            datalist[0].Spectrum = inputdata;\r\n            prediction = engine.Predict(datalist[0]);\r\n            PredSpectrum = prediction.Spectrum;\r\n            File.WriteAllLines(\"prediction.csv\", PredSpectrum.Select(d => d.ToString(System.Globalization.CultureInfo.CreateSpecificCulture(\"en-US\"))));\r\n        }\r\n\r\n        public class SpectrumCollection\r\n        {\r\n            [VectorType(256, 1, 1)]\r\n            [ColumnName(\"Spectrum\")]\r\n            public float[] Spectrum { get; set; }\r\n        }\r\n\r\n    }\r\n}\r\n```\r\nScreenshot with expected results:\r\n\r\n\r\n![pythonVSmlnet](https://user-images.githubusercontent.com/95739641/145171969-f2ed4a87-b252-4de3-a0df-281a71ad8f52.png)\r\n\r\nModel for reproduction:\r\n\r\n[model.zip](https://github.com/dotnet/machinelearning/files/7674358/model.zip)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6017","RelatedDescription":"Open issue \"Problems with convolutional neural networks loaded from Keras model\" (#6017)"},{"Id":"1072088355","IsPullRequest":false,"CreatedAt":"2021-12-06T12:20:40","Actor":"anunakkiSelva","Number":"6016","RawContent":null,"Title":"MS Document referencing ML v1.6.0 but the latest nuget version is v1.7.0 ,  Document Misleading .  https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml?view=ml-dotnet","State":"open","Body":"\r\n[Enter feedback here]\r\n\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: 42959613-fbc6-a84e-149a-667e551cc361\r\n* Version Independent ID: 6b1d75df-a911-5e41-120b-da824f003497\r\n* Content: [TimeSeriesCatalog.DetectIidSpike Method (Microsoft.ML)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.timeseriescatalog.detectiidspike?view=ml-dotnet)\r\n* Content Source: [dotnet/xml/Microsoft.ML/TimeSeriesCatalog.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML/TimeSeriesCatalog.xml)\r\n* Product: **dotnet-ml-api**\r\n* GitHub Login: @natke\r\n* Microsoft Alias: **nakersha**","Url":"https://github.com/dotnet/machinelearning/issues/6016","RelatedDescription":"Open issue \"MS Document referencing ML v1.6.0 but the latest nuget version is v1.7.0 ,  Document Misleading .  https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml?view=ml-dotnet\" (#6016)"},{"Id":"1071798420","IsPullRequest":false,"CreatedAt":"2021-12-06T07:02:44","Actor":"chasse20","Number":"6015","RawContent":null,"Title":"ML.NET Containerized GPU Support?","State":"open","Body":"**System Information (please complete the following information):**\r\n- Windows 10 (Insider Program with 21H2 preview per Nvidia instructions)\r\n- Latest WSL2 via Docker Desktop\r\n- .NET 5 with ASP.NET as a web application as well\r\n- ML.NET 1.7\r\n- Visual Studio 2019\r\n- GeForce 1080 GTX GPU\r\n- CUDA 10.1\r\n\r\n**Describe the bug**\r\nI want to be able to run my ASP app in a Docker container that also trains models. This works fine for everything using base ML.NET nuget for the CPU. I followed the instructions to setup CUDA 10.1 with Cudnn (https://docs.microsoft.com/en-us/dotnet/machine-learning/how-to-guides/install-gpu-model-builder) and NVIDIA's instructions for WSL2 (https://docs.nvidia.com/cuda/wsl-user-guide/index.html). I also added a reference to the GPU tensorflow package for Linux (assuming WSL2). The NVIDIA CUDA tests work fine when I run their containers, but I can't get my ML.NET container to work/use the GPU. Running nvidia-smi works in the container itself, but training still uses the CPU. I want to train models in the container using the GPU and have passed \"--gpus all\" in as a docker argument. I've exhausted everything but can't find any documentation or help on achieving this.\r\n\r\nHow would I go about doing this from Visual Studio 2019?\r\n\r\nBelow is my DockerFile (using Debug configuration):\r\n```\r\n#See https://aka.ms/containerfastmode to understand how Visual Studio uses this Dockerfile to build your images for faster debugging.\r\n\r\nFROM mcr.microsoft.com/dotnet/aspnet:5.0-buster-slim AS base\r\nWORKDIR /app\r\nEXPOSE 80\r\nEXPOSE 443\r\n\r\nFROM nvidia/cuda:10.1-base as cuda\r\nCMD nvidia-smi\r\n\r\nFROM mcr.microsoft.com/dotnet/sdk:5.0-buster-slim AS build\r\nWORKDIR /src\r\nCOPY [\"CoolNET/CoolNET.csproj\", \"CoolNET/\"]\r\nRUN dotnet restore \"CoolNET/CoolNET.csproj\"\r\nCOPY . .\r\nWORKDIR \"/src/CoolNET\"\r\nRUN dotnet build \"CoolNET.csproj\" -c Debug -o /app/build\r\n\r\nFROM build AS publish\r\nRUN dotnet publish \"CoolNET.csproj\" -c Debug -o /app/publish\r\n\r\nFROM base AS final\r\nWORKDIR /app\r\nCOPY --from=publish /app/publish .\r\nENTRYPOINT [\"dotnet\", \"CoolNET.dll\"]\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/6015","RelatedDescription":"Open issue \"ML.NET Containerized GPU Support?\" (#6015)"},{"Id":"1069701242","IsPullRequest":false,"CreatedAt":"2021-12-02T15:47:05","Actor":"torronen","Number":"6013","RawContent":null,"Title":"Suggestion: Set max count for AutoML experiments instead of time","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nSetting time for AutoML for a dataset I dont have previous experience with is not easy. \r\nInstead, I'd like to give SmacSweeper a chance to utilize history of the earlier runs. I believe probably somewhere 20-50 experiments would be adequate, since first 10 are random. \r\n\r\n**Describe the solution you'd like**\r\nAllow setting max iterations, similar to many DL libraries allow settings number of epochs. Possibly with support for early stopping.\r\n\r\n**Additional info**\r\nI think there are not very many occasions where settings the time is important. I can only think of:\r\n- User is waiting for process to finish on a desktop or web app: max few minutes. But, in this case, there is still risk of the experiment completing too early and leading to suboptimal experience for the user.\r\n- Developer wants the run to complete by the time he is back to work next time. For this purpose, manual stopping is better.","Url":"https://github.com/dotnet/machinelearning/issues/6013","RelatedDescription":"Open issue \"Suggestion: Set max count for AutoML experiments instead of time\" (#6013)"},{"Id":"1066954248","IsPullRequest":false,"CreatedAt":"2021-11-30T08:47:18","Actor":"aforoughi1","Number":"6012","RawContent":null,"Title":"FeaturizeText API produces incorrect tokens","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11 \r\n - ML.NET Version: ML.NET v1.7.0\r\n - .NET Version: .NET 5.0\r\n\r\n**Describe the bug**\r\nThe FeaturizeText  API produces incorrect tokens\r\n\r\n**To Reproduce**\r\nApply  mlContext.Transforms.Text.FeaturizeText to the following input data:\r\n\r\n\"There is a shortage of capital and we need extra financing,\" +\r\n\"growth is strong and we have plenty of liquidity,\" +\r\n \"there are doubts about our finances,\" +\r\n\"profits are flat.\"\r\n\r\nUse\r\n\r\nvar options = new TextFeaturizingEstimator.Options()\r\n{\r\n        OutputTokensColumnName = \"OutputTokens\",\r\n\r\n         //Remove the punctuations from the token\r\n         KeepPunctuations = false,\r\n\r\n         // Remove Digits\r\n         KeepNumbers = false,\r\n\r\n        // Make the output character Lower Case\r\n         CaseMode = TextNormalizingEstimator.CaseMode.Lower,\r\n\r\n       // Use ML.NET's built-in stop word remover\r\n        StopWordsRemoverOptions = new StopWordsRemovingEstimator.Options()\r\n        {\r\n               Language = TextFeaturizingEstimator.Language.English\r\n        },\r\n\r\n                    \r\n        // Produces a bag of counts of ngrams(sequences of consecutive words) in a given text.\r\n        WordFeatureExtractor = new WordBagEstimator.Options()\r\n         {\r\n                 NgramLength = 2,\r\n                  UseAllLengths = true\r\n         },\r\n\r\n\r\n          CharFeatureExtractor = null\r\n    };\r\n\r\n\r\n**Expected behavior**\r\nI expected the tokens output to be\r\n\r\nshortage,capital,need,extra,financing,growth,strong,plenty,liquidity,doubts,finances,profits,flat\r\n\r\nhowever, I get\r\n\r\nNumber of Features: 21\r\nFeatures: 0.2182  0.2182  0.2182  0.2182  0.2182  0.2182  0.2182  0.2182  0.2182  0.2182  0.2182  0.2182  0.2182  0.2182  0.2182  0.2182  0.2182  0.2182  0.2182  0.2182  0.2182\r\nTokens: shortage,capital,need,extra,financinggrowth,strong,plenty,liquiditythere,doubts,financesprofits,flat\r\n\r\nThe incorrect tokens are:\r\nfinancinggrowth\r\nfinancesprofits\r\n\r\n\r\n**Screenshots, Code, Sample Projects**\r\n\r\nvar samples = new List<TextData>()\r\n            {\r\n                new TextData() { Text = \"There is a shortage of capital and we need extra financing,\" +\r\n                                \"growth is strong and we have plenty of liquidity,\" +\r\n                                \"there are doubts about our finances,\" +\r\n                                \"profits are flat.\" }\r\n            };\r\n\r\nvar dataview = mlContext.Data.LoadFromEnumerable(samples);\r\nstring outputColumnName = \"Features\";\r\nstring inpuColumnName = \"Text\";\r\nvar textPipeline = mlContext.Transforms.Text.FeaturizeText(outputColumnName, Settings, inpuColumnName);\r\nvar textTransformer = textPipeline.Fit(dataview);\r\n\r\nuse the Settings as provided and  create a prdiction enginee\r\n\r\n\r\n**Additional context**\r\nN/A\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6012","RelatedDescription":"Open issue \"FeaturizeText API produces incorrect tokens\" (#6012)"},{"Id":"1066411010","IsPullRequest":false,"CreatedAt":"2021-11-29T21:16:31","Actor":"atkinsonbg","Number":"6011","RawContent":null,"Title":"LoadRawImageBytes does not load anything","State":"closed","Body":"**System Information (please complete the following information):**\r\n - OS & Version: [e.g. Windows 10] \r\n    - Tested on MacOS 11.6 Big Sur & Windows 11\r\n - ML.NET Version: [e.g. ML.NET v1.5.5]\r\n    - ML.NET v1.7.0\r\n - .NET Version: [e.g. .NET 5.0]\r\n    - .NET 6.0\r\n\r\n**Describe the bug**\r\nFollowing the tutorial list here, (https://docs.microsoft.com/en-us/samples/dotnet/machinelearning-samples/mlnet-image-classification-transfer-learning/) and the LoadRawImageBytes does not appear to load images from the directory.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\nCode used:\r\n```\r\nIEnumerable<ImageData> images = LoadImagesFromCsv(\"Data/training_data.csv\");\r\n\r\n            IDataView imageData = mlContext.Data.LoadFromEnumerable(images);\r\n            IDataView shuffledData = mlContext.Data.ShuffleRows(imageData, shuffleSource: true);\r\n\r\n            var previewshuffledData = shuffledData.Preview();\r\n\r\n            var preprocessingPipeline = mlContext.Transforms.Conversion\r\n                                                .MapValueToKey(\r\n                                                    inputColumnName: \"Label\",\r\n                                                    outputColumnName: \"LabelAsKey\")\r\n                                                .Append(mlContext.Transforms.LoadRawImageBytes(\r\n                                                    outputColumnName: \"Image\",\r\n                                                    imageFolder: \"Data/LocalImages\",\r\n                                                    inputColumnName: \"ImagePath\"));\r\n\r\n            IDataView preProcessedData = preprocessingPipeline\r\n                    .Fit(shuffledData)\r\n                    .Transform(shuffledData);\r\n\r\n            var previewPreprocessedData = preProcessedData.Preview();\r\n```\r\n**previewshuffledData**:\r\n<img width=\"520\" alt=\"Screen Shot 2021-11-29 at 2 21 21 PM\" src=\"https://user-images.githubusercontent.com/29587193/143929508-5492872f-e716-480f-b894-db5db2814e71.png\">\r\n\r\n<img width=\"351\" alt=\"Screen Shot 2021-11-29 at 2 21 41 PM\" src=\"https://user-images.githubusercontent.com/29587193/143929533-07f3190c-ebc3-4f7b-9773-ede190bba339.png\">\r\n\r\n**previewPreprocessedData**:\r\n<img width=\"570\" alt=\"Screen Shot 2021-11-29 at 2 21 50 PM\" src=\"https://user-images.githubusercontent.com/29587193/143929573-e441ae02-3743-44c3-a407-c97280a669eb.png\">\r\n\r\n**Expected behavior**\r\nExpecting to see a RowView after LoadRawImageBytes of 63, which matches the number of images in the dataset.\r\n\r\n**Screenshots, Code, Sample Projects**\r\nIf applicable, add screenshots, code snippets, or sample projects to help explain your problem.\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6011","RelatedDescription":"Closed issue \"LoadRawImageBytes does not load anything\" (#6011)"},{"Id":"1064853383","IsPullRequest":false,"CreatedAt":"2021-11-26T23:27:23","Actor":"CBrauer","Number":"6010","RawContent":null,"Title":"How can I warm-start a Fast Tree Classifier?","State":"open","Body":"Hey Guys,\r\n\r\nI have found that the Fast Tree trainer works best on my tabular dataset.\r\nPlease show me how to warm start the trainer. \r\nIf this capability does not exist, can you please add it to the new feature wish list.\r\n\r\nThanks\r\nCharles","Url":"https://github.com/dotnet/machinelearning/issues/6010","RelatedDescription":"Open issue \"How can I warm-start a Fast Tree Classifier?\" (#6010)"},{"Id":"1063427640","IsPullRequest":false,"CreatedAt":"2021-11-25T10:47:56","Actor":"torronen","Number":"6009","RawContent":null,"Title":"LightGBMBinary sometimes throws \"Splitter/consolidator worker encountered exception while consuming source data\"","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows Server 2022 Preview\r\n - ML.NET Version: ML.NET 1.6 (custom build, but no changes on text loading)\r\n - .NET Version: NET 5.0\r\n\r\n**Describe the bug**\r\nI have a dataset which I am training on FastTree, FastForest and LightGBM with AutoML.\r\nLightGBM sometimes throws the below exception about boolean field IsPublicHoliday. Error claims it to have a number value (e.g. 3.208). It would indicate the dataset is not correct. However, I do not receive this exception on all runs of LightGBM, never on FastForest and FastTree. (FastForest and FastTree are running on another similar server).\r\n\r\n```\r\nException during AutoML iteration: System.InvalidOperationException: Splitter/consolidator worker encountered exception while consuming source data\r\n ---> System.InvalidOperationException: Could not parse value 3.20852317 in line 1786829, column DtIsPublicHoliday\r\n```\r\n\r\n**To Reproduce**\r\nIt may be related to the specific 120GB dataset. I will update here if I find the cause. \r\n\r\n**Expected behavior**\r\nI expect either the parse error should happen on every run and every algorithm, or it should not happen at all.\r\n\r\n\r\n**Additional context**\r\n\r\n```\r\n|     Trainer                               PosPrec   PosReca  Accuracy      AUC    AUPRC  F1-score  Duration  MaxPosPr|\r\n|1    LightGbmBinary                         0.5340    0.5108    0.5339   0.5516   0.5400    0.5222    1731.1    0.5340|\r\n|2    LightGbmBinary                         0.5190    0.4807    0.5190   0.5343   0.5316    0.4991    2772.3    0.5340|\r\n|3    LightGbmBinary                         0.5335    0.5150    0.5336   0.5554   0.5410    0.5241    7007.1    0.5340|\r\n|4    LightGbmBinary                         0.0000    0.0000    0.5014   0.5132   0.5072    0.0000    1202.4    0.5340|\r\n|5    LightGbmBinary                         0.5278    0.4959    0.5274   0.5467   0.5368    0.5114    3865.4    0.5340|\r\nException during AutoML iteration: System.InvalidOperationException: Splitter/consolidator worker encountered exception while consuming source data\r\n ---> System.InvalidOperationException: Could not parse value 3.20852317 in line 1786829, column DtIsPublicHoliday\r\n   at Microsoft.ML.Data.TextLoader.Parser.ProcessOne(FieldSet vs, ColInfo info, ColumnPipe v, Int32 irow, Int64 line) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\DataLoadSave\\Text\\TextLoaderParser.cs:line 1463\r\n   at Microsoft.ML.Data.TextLoader.Parser.ProcessItems(RowSet rows, Int32 irow, Boolean[] active, FieldSet fields, Int32 srcLim, Int64 line) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\DataLoadSave\\Text\\TextLoaderParser.cs:line 1381\r\n   at Microsoft.ML.Data.TextLoader.Parser.ParseRow(RowSet rows, Int32 irow, Helper helper, Boolean[] active, String path, Int64 line, String text) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\DataLoadSave\\Text\\TextLoaderParser.cs:line 888\r\n   at Microsoft.ML.Data.TextLoader.Cursor.ParseSequential()+MoveNext() in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\DataLoadSave\\Text\\TextLoaderCursor.cs:line 345\r\n   at Microsoft.ML.Data.TextLoader.Cursor.MoveNextCore() in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\DataLoadSave\\Text\\TextLoaderCursor.cs:line 298\r\n   at Microsoft.ML.Data.RootCursorBase.MoveNext() in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Core\\Data\\RootCursorBase.cs:line 72\r\n   at Microsoft.ML.Data.DataViewUtils.Splitter.<>c__DisplayClass7_1.<ConsolidateCore>b__2() in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\Data\\DataViewUtils.cs:line 426\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.ML.Data.DataViewUtils.Splitter.Batch.SetAll(OutPipe[] pipes) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\Data\\DataViewUtils.cs:line 832\r\n   at Microsoft.ML.Data.DataViewUtils.Splitter.Cursor.MoveNextCore() in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\Data\\DataViewUtils.cs:line 1101\r\n   at Microsoft.ML.Data.RootCursorBase.MoveNext() in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Core\\Data\\RootCursorBase.cs:line 72\r\n   at Microsoft.ML.Trainers.TrainingCursorBase.MoveNext() in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\Training\\TrainerUtils.cs:line 549\r\n   at Microsoft.ML.Trainers.LightGbm.LightGbmTrainerBase`4.LoadDataset(IChannel ch, Factory factory, Dataset dataset, Int32 numRow, Int32 batchSize, CategoricalMetaData catMetaData) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.LightGbm\\LightGbmTrainerBase.cs:line 964\r\n   at Microsoft.ML.Trainers.LightGbm.LightGbmTrainerBase`4.LoadTrainingData(IChannel ch, RoleMappedData trainData, CategoricalMetaData& catMetaData) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.LightGbm\\LightGbmTrainerBase.cs:line 591\r\n   at Microsoft.ML.Trainers.LightGbm.LightGbmTrainerBase`4.TrainModelCore(TrainContext context) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.LightGbm\\LightGbmTrainerBase.cs:line 386\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\Training\\TrainerEstimatorBase.cs:line 158\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\DataLoadSave\\EstimatorChain.cs:line 68\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String groupId, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.AutoML\\Experiment\\Runners\\RunnerUtil.cs:line 52\r\nException during AutoML iteration: System.InvalidOperationException: Splitter/consolidator worker encountered exception while consuming source data\r\n ---> System.InvalidOperationException: Could not parse value 17 in line 9976, column DtIsPublicHoliday\r\n   at Microsoft.ML.Data.TextLoader.Parser.ProcessOne(FieldSet vs, ColInfo info, ColumnPipe v, Int32 irow, Int64 line) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\DataLoadSave\\Text\\TextLoaderParser.cs:line 1463\r\n   at Microsoft.ML.Data.TextLoader.Parser.ProcessItems(RowSet rows, Int32 irow, Boolean[] active, FieldSet fields, Int32 srcLim, Int64 line) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\DataLoadSave\\Text\\TextLoaderParser.cs:line 1381\r\n   at Microsoft.ML.Data.TextLoader.Parser.ParseRow(RowSet rows, Int32 irow, Helper helper, Boolean[] active, String path, Int64 line, String text) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\DataLoadSave\\Text\\TextLoaderParser.cs:line 888\r\n   at Microsoft.ML.Data.TextLoader.Cursor.ParseSequential()+MoveNext() in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\DataLoadSave\\Text\\TextLoaderCursor.cs:line 345\r\n   at Microsoft.ML.Data.TextLoader.Cursor.MoveNextCore() in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\DataLoadSave\\Text\\TextLoaderCursor.cs:line 298\r\n   at Microsoft.ML.Data.RootCursorBase.MoveNext() in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Core\\Data\\RootCursorBase.cs:line 72\r\n   at Microsoft.ML.Data.DataViewUtils.Splitter.<>c__DisplayClass7_1.<ConsolidateCore>b__2() in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\Data\\DataViewUtils.cs:line 426\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.ML.Data.DataViewUtils.Splitter.Batch.SetAll(OutPipe[] pipes) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\Data\\DataViewUtils.cs:line 832\r\n   at Microsoft.ML.Data.DataViewUtils.Splitter.Cursor.MoveNextCore() in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\Data\\DataViewUtils.cs:line 1101\r\n   at Microsoft.ML.Data.RootCursorBase.MoveNext() in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Core\\Data\\RootCursorBase.cs:line 72\r\n   at Microsoft.ML.Trainers.TrainingCursorBase.MoveNext() in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\Training\\TrainerUtils.cs:line 549\r\n   at Microsoft.ML.Trainers.LightGbm.LightGbmTrainerBase`4.MoveMany(FloatLabelCursor cursor, Int64 count) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.LightGbm\\LightGbmTrainerBase.cs:line 734\r\n   at Microsoft.ML.Trainers.LightGbm.LightGbmTrainerBase`4.CreateDatasetFromSamplingData(IChannel ch, Factory factory, Int32 numRow, String param, Single[] labels, Single[] weights, Int32[] groups, CategoricalMetaData catMetaData, Dataset& dataset) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.LightGbm\\LightGbmTrainerBase.cs:line 836\r\n   at Microsoft.ML.Trainers.LightGbm.LightGbmTrainerBase`4.LoadTrainingData(IChannel ch, RoleMappedData trainData, CategoricalMetaData& catMetaData) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.LightGbm\\LightGbmTrainerBase.cs:line 591\r\n   at Microsoft.ML.Trainers.LightGbm.LightGbmTrainerBase`4.TrainModelCore(TrainContext context) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.LightGbm\\LightGbmTrainerBase.cs:line 386\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\Training\\TrainerEstimatorBase.cs:line 158\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\DataLoadSave\\EstimatorChain.cs:line 68\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String groupId, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.AutoML\\Experiment\\Runners\\RunnerUtil.cs:line 52\r\n|8    LightGbmBinary                         0.5324    0.5304    0.5336   0.5537   0.5454    0.5314    2662.2    0.5340|\r\n|9    LightGbmBinary                         0.0000    0.0000    0.5014   0.5133   0.5082    0.0000    1494.9    0.5340|\r\nException during AutoML iteration: System.InvalidOperationException: Splitter/consolidator worker encountered exception while consuming source data\r\n ---> System.InvalidOperationException: Could not parse value 1.0124658 in line 471358, column DtIsPublicHoliday\r\n   at Microsoft.ML.Data.TextLoader.Parser.ProcessOne(FieldSet vs, ColInfo info, ColumnPipe v, Int32 irow, Int64 line) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\DataLoadSave\\Text\\TextLoaderParser.cs:line 1463\r\n   at Microsoft.ML.Data.TextLoader.Parser.ProcessItems(RowSet rows, Int32 irow, Boolean[] active, FieldSet fields, Int32 srcLim, Int64 line) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\DataLoadSave\\Text\\TextLoaderParser.cs:line 1381\r\n   at Microsoft.ML.Data.TextLoader.Parser.ParseRow(RowSet rows, Int32 irow, Helper helper, Boolean[] active, String path, Int64 line, String text) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\DataLoadSave\\Text\\TextLoaderParser.cs:line 888\r\n   at Microsoft.ML.Data.TextLoader.Cursor.ParseSequential()+MoveNext() in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\DataLoadSave\\Text\\TextLoaderCursor.cs:line 345\r\n   at Microsoft.ML.Data.TextLoader.Cursor.MoveNextCore() in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\DataLoadSave\\Text\\TextLoaderCursor.cs:line 298\r\n   at Microsoft.ML.Data.RootCursorBase.MoveNext() in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Core\\Data\\RootCursorBase.cs:line 72\r\n   at Microsoft.ML.Data.DataViewUtils.Splitter.<>c__DisplayClass7_1.<ConsolidateCore>b__2() in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\Data\\DataViewUtils.cs:line 426\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.ML.Data.DataViewUtils.Splitter.Batch.SetAll(OutPipe[] pipes) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\Data\\DataViewUtils.cs:line 832\r\n   at Microsoft.ML.Data.DataViewUtils.Splitter.Cursor.MoveNextCore() in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\Data\\DataViewUtils.cs:line 1101\r\n   at Microsoft.ML.Data.RootCursorBase.MoveNext() in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Core\\Data\\RootCursorBase.cs:line 72\r\n   at Microsoft.ML.Trainers.TrainingCursorBase.MoveNext() in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\Training\\TrainerUtils.cs:line 549\r\n   at Microsoft.ML.Trainers.LightGbm.LightGbmTrainerBase`4.LoadDataset(IChannel ch, Factory factory, Dataset dataset, Int32 numRow, Int32 batchSize, CategoricalMetaData catMetaData) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.LightGbm\\LightGbmTrainerBase.cs:line 964\r\n   at Microsoft.ML.Trainers.LightGbm.LightGbmTrainerBase`4.LoadTrainingData(IChannel ch, RoleMappedData trainData, CategoricalMetaData& catMetaData) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.LightGbm\\LightGbmTrainerBase.cs:line 591\r\n   at Microsoft.ML.Trainers.LightGbm.LightGbmTrainerBase`4.TrainModelCore(TrainContext context) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.LightGbm\\LightGbmTrainerBase.cs:line 386\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\Training\\TrainerEstimatorBase.cs:line 158\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\DataLoadSave\\EstimatorChain.cs:line 68\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String groupId, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.AutoML\\Experiment\\Runners\\RunnerUtil.cs:line 52\r\n|11   LightGbmBinary                         0.5285    0.4064    0.5233   0.5404   0.5293    0.4595    3290.4    0.5340|\r\nException during AutoML iteration: System.InvalidOperationException: Splitter/consolidator worker encountered exception while consuming source data\r\n ---> System.InvalidOperationException: Could not parse value 0.99942851 in line 1691779, column DtIsPublicHoliday\r\n   at Microsoft.ML.Data.TextLoader.Parser.ProcessOne(FieldSet vs, ColInfo info, ColumnPipe v, Int32 irow, Int64 line) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\DataLoadSave\\Text\\TextLoaderParser.cs:line 1463\r\n   at Microsoft.ML.Data.TextLoader.Parser.ProcessItems(RowSet rows, Int32 irow, Boolean[] active, FieldSet fields, Int32 srcLim, Int64 line) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\DataLoadSave\\Text\\TextLoaderParser.cs:line 1381\r\n   at Microsoft.ML.Data.TextLoader.Parser.ParseRow(RowSet rows, Int32 irow, Helper helper, Boolean[] active, String path, Int64 line, String text) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\DataLoadSave\\Text\\TextLoaderParser.cs:line 888\r\n   at Microsoft.ML.Data.TextLoader.Cursor.ParseSequential()+MoveNext() in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\DataLoadSave\\Text\\TextLoaderCursor.cs:line 345\r\n   at Microsoft.ML.Data.TextLoader.Cursor.MoveNextCore() in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\DataLoadSave\\Text\\TextLoaderCursor.cs:line 298\r\n   at Microsoft.ML.Data.RootCursorBase.MoveNext() in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Core\\Data\\RootCursorBase.cs:line 72\r\n   at Microsoft.ML.Data.DataViewUtils.Splitter.<>c__DisplayClass7_1.<ConsolidateCore>b__2() in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\Data\\DataViewUtils.cs:line 426\r\n   --- End of inner exception stack trace ---\r\n   at Microsoft.ML.Data.DataViewUtils.Splitter.Batch.SetAll(OutPipe[] pipes) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\Data\\DataViewUtils.cs:line 832\r\n   at Microsoft.ML.Data.DataViewUtils.Splitter.Cursor.MoveNextCore() in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\Data\\DataViewUtils.cs:line 1101\r\n   at Microsoft.ML.Data.RootCursorBase.MoveNext() in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Core\\Data\\RootCursorBase.cs:line 72\r\n   at Microsoft.ML.Trainers.TrainingCursorBase.MoveNext() in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\Training\\TrainerUtils.cs:line 549\r\n   at Microsoft.ML.Trainers.LightGbm.LightGbmTrainerBase`4.MoveMany(FloatLabelCursor cursor, Int64 count) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.LightGbm\\LightGbmTrainerBase.cs:line 734\r\n   at Microsoft.ML.Trainers.LightGbm.LightGbmTrainerBase`4.CreateDatasetFromSamplingData(IChannel ch, Factory factory, Int32 numRow, String param, Single[] labels, Single[] weights, Int32[] groups, CategoricalMetaData catMetaData, Dataset& dataset) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.LightGbm\\LightGbmTrainerBase.cs:line 836\r\n   at Microsoft.ML.Trainers.LightGbm.LightGbmTrainerBase`4.LoadTrainingData(IChannel ch, RoleMappedData trainData, CategoricalMetaData& catMetaData) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.LightGbm\\LightGbmTrainerBase.cs:line 591\r\n   at Microsoft.ML.Trainers.LightGbm.LightGbmTrainerBase`4.TrainModelCore(TrainContext context) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.LightGbm\\LightGbmTrainerBase.cs:line 386\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\Training\\TrainerEstimatorBase.cs:line 158\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.Data\\DataLoadSave\\EstimatorChain.cs:line 68\r\n   at Microsoft.ML.AutoML.RunnerUtil.TrainAndScorePipeline[TMetrics](MLContext context, SuggestedPipeline pipeline, IDataView trainData, IDataView validData, String groupId, String labelColumn, IMetricsAgent`1 metricsAgent, ITransformer preprocessorTransform, FileInfo modelFileInfo, DataViewSchema modelInputSchema, IChannel logger) in Q:\\git-kwork-microsoft-ml\\Microsoft.ML\\src\\Microsoft.ML.AutoML\\Experiment\\Runners\\RunnerUtil.cs:line 52\r\n|13   LightGbmBinary                         0.5416    0.3927    0.5315   0.5506   0.5405    0.4553    2007.7    0.5416|\r\n|14   LightGbmBinary                         0.0000    0.0000    0.5014   0.5133   0.5048    0.0000    1496.5    0.5416|\r\n|15   LightGbmBinary                         0.5472    0.4911    0.5437   0.5655   0.5480    0.5176    4147.1    0.5472|\r\n\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/6009","RelatedDescription":"Open issue \"LightGBMBinary sometimes throws \"Splitter/consolidator worker encountered exception while consuming source data\"\" (#6009)"},{"Id":"1059206306","IsPullRequest":false,"CreatedAt":"2021-11-20T18:48:30","Actor":"dharmatech","Number":"6008","RawContent":null,"Title":"Add the equivalent of pandas.DataFrame.shift","State":"open","Body":"# Documentation\r\n\r\nDocumentation and examples of `shift`:\r\n\r\nhttps://pandas.pydata.org/docs/reference/api/pandas.DataFrame.shift.html\r\n\r\nI posted a question on stackoverflow about `shift` here:\r\n\r\nhttps://stackoverflow.com/questions/70042849/equivalent-of-shift-from-pandas\r\n\r\nI also posted an answer that illustrates a very kludgy workaround. :-)","Url":"https://github.com/dotnet/machinelearning/issues/6008","RelatedDescription":"Open issue \"Add the equivalent of pandas.DataFrame.shift\" (#6008)"},{"Id":"1058427794","IsPullRequest":false,"CreatedAt":"2021-11-19T11:27:54","Actor":"dsavch","Number":"6007","RawContent":null,"Title":"Multiclass text classification: training consume a lot of RAM","State":"open","Body":"[ds example.txt](https://github.com/dotnet/machinelearning/files/7569870/ds.example.txt)\r\n### System information\r\n\r\n- **Windows 10 Home Single Language**\r\n- **.NET Version 5.0.400**\r\n- **Microsoft.ML 1.6.0**\r\n\r\n### Issue\r\n\r\nI'm trying to train model with some dataset. Dataset is about 60 Mb (example in attachments, can't provide full data set because of privacy). It contains some text descriptions about 50-200 chars in each row. Total labels count - 84. There are about 100K rows in dataset for training. After 16-18 hours of training application consume about 32 Gb RAM and terminate with System.OutOfMemory exception (I have only 32 Gb free RAM on my PC). Is this RAM consumption is ok for such kind of task or maybe I'm doing something wrong?\r\n\r\n### Source code / logs\r\nMy data class:\r\n```csharp\r\npublic class SkuInfo\r\n{\r\n  [ColumnName(\"Category\")]\r\n  public string CategoryCode { get; set; }\r\n  \r\n  [ColumnName(\"ManufacturerId\")]\r\n  public float ManufacturerId { get; set; }\r\n  \r\n  [ColumnName(\"ManufacturerPn\")]\r\n  public string ManufacturerPn { get; set; }\r\n  \r\n  [ColumnName(\"Description\")]\r\n  public string Description { get; set; }\r\n}\r\n```\r\n\r\nMy trainig pipeline:\r\n```csharp\r\nprivate IEstimator<ITransformer> BuildPipeline(MLContext mlContext)\r\n{\r\n\tvar pipeline = mlContext.Transforms.ReplaceMissingValues(@\"ManufacturerId\", @\"ManufacturerId\")\r\n\t\t\t\t\t\t\t.Append(mlContext.Transforms.Text.FeaturizeText(@\"ManufacturerPn\", @\"ManufacturerPn\"))\r\n\t\t\t\t\t\t\t.Append(mlContext.Transforms.Text.FeaturizeText(@\"Description\", @\"Description\"))\r\n\t\t\t\t\t\t\t.Append(mlContext.Transforms.Concatenate(@\"Features\", new[] { @\"ManufacturerId\", \"ManufacturerPn\", @\"Description\" }))\r\n\t\t\t\t\t\t\t.Append(mlContext.Transforms.Conversion.MapValueToKey(@\"Category\", @\"Category\"))\r\n\t\t\t\t\t\t\t.Append(mlContext.Transforms.NormalizeMinMax(@\"Features\", @\"Features\"))\r\n\t\t\t\t\t\t\t.Append(mlContext.MulticlassClassification.Trainers.LbfgsMaximumEntropy(l1Regularization: 0.455F, l2Regularization: 0.034F, labelColumnName: @\"Category\", featureColumnName: @\"Features\"))\r\n\t\t\t\t\t\t\t.Append(mlContext.Transforms.Conversion.MapKeyToValue(@\"PredictedLabel\", \"PredictedLabel\"));\r\n\r\n\treturn pipeline;\r\n}\r\n```\r\nTraining method:\r\n```csharp\r\npublic void TrainFromCollection(IEnumerable<SkuInfo> trainData, string outputModelPath)\r\n{\r\n\tvar mlContext = new MLContext(seed: 1);\r\n\tvar dataView = mlContext.Data.LoadFromEnumerable(trainData);\r\n\tvar pipeline = BuildPipeline(mlContext);\r\n\tvar model = pipeline.Fit(dataView);\r\n\tmlContext.Model.Save(model, dataView.Schema, outputModelPath);\r\n}\r\n```\r\n[ds example.txt](https://github.com/dotnet/machinelearning/files/7569878/ds.example.txt)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6007","RelatedDescription":"Open issue \"Multiclass text classification: training consume a lot of RAM\" (#6007)"},{"Id":"1056379157","IsPullRequest":false,"CreatedAt":"2021-11-17T17:07:17","Actor":"eerhardt","Number":"6006","RawContent":null,"Title":"Remove System.CodeDom reference in Microsoft.ML nuget package","State":"open","Body":"Today Microsoft.ML has a dependency on System.CodeDom, but I don't see anything actually requiring this reference:\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/ea647f43246989334bad69f35b5d60d15171c57e/src/Microsoft.ML/Microsoft.ML.csproj#L44\r\n\r\nThe only references to `System.CodeDom` in the code is to use IndentedTextWriter, which doesn't require a reference to System.CodeDom.\r\n\r\nWe should remove this reference from our core NuGet package.\r\n\r\ncc @ericstj @michaelgsharp ","Url":"https://github.com/dotnet/machinelearning/issues/6006","RelatedDescription":"Open issue \"Remove System.CodeDom reference in Microsoft.ML nuget package\" (#6006)"},{"Id":"1056120535","IsPullRequest":false,"CreatedAt":"2021-11-17T13:16:56","Actor":"ddobric","Number":"6005","RawContent":null,"Title":"TensorFlow model runs in timeout when executed in container","State":"open","Body":"## System Information \r\n - Linux Docker container running on Windows 10 / 11 or in ACI\r\n - ML.NET v1.4.0\r\n - .NET Version: .NET 6.0\r\n\r\n## Problem description\r\nWe have an application that utilizes image classification by using TensorFlow, based on the sample provided in .NET ML. The application executes the following code, which correctly starts, runs, but never completes when running in the Linux docker container on the Windows 10 host.\r\n\r\nWhen the container is started from the command line it simply exists without showing any error. However, when we run the container in VS (F5) the container shows the error in the output window.\r\n\r\n>  TensorFlow .. metaoprimizer.cc 499 ..model_runner exceeded deadline\r\n\r\nHere is the simplified code that fails (crashes) in line N+0. \r\n~~~\r\ntry\r\n{\r\n(N+0) var cvResults = mlContext.MulticlassClassification.CrossValidate(cvDataView, pipeline, numberOfFolds: numOfFolds, labelColumnName: \"LabelAsKey\", seed: 8881);\r\n\r\n(N+1)  Console.Write(\"Never executed\");\r\n}\r\ncatch\r\n{\r\n(N+2)\r\n}\r\n~~~\r\n\r\nThe container simply exists without throwing any exception. The lines N+1 and N+2 are never reached.\r\n\r\n![image](https://user-images.githubusercontent.com/1756871/142205156-cca5a3fa-3194-441f-bf98-c68f94ec6cce.png)\r\n\r\nThe same code works well when executed on the Windows host. We also have been able to execute the same code in the Linux container on Windows 11. We have tested it on multiple machines (same environment setup). The same code at some hosts is sometimes running correctly even if the execution time is longer (see image above).\r\n\r\n## Recap\r\n\r\nQuestion: Is there a way to set the timeout for TensorFlow via ML.NET?\r\n\r\nHowever, this behaviour also raises another question. Is this .NET + Docker + TensorFlow reliable at all if it doesn't show any error and stops the execution?\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6005","RelatedDescription":"Open issue \"TensorFlow model runs in timeout when executed in container\" (#6005)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-01-10T05:30:23.8489925Z","RunDurationInMilliseconds":503}