{"Data":{"GitHub":{"Issues":[{"Id":"1526854396","IsPullRequest":false,"CreatedAt":"2023-01-10T06:48:40","Actor":"zewditu","Number":"6536","RawContent":null,"Title":"Validate the similarity between training dataset and validation dataset Schema","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\n\r\n\r\n**Describe the solution you'd like**\r\nWhen the user wants to pass a separate validation dataset file. The two-dataset schema (train & validate) should be the same before we proceed to train.\r\n\r\n**Describe alternatives you've considered**\r\nA clear and concise description of any alternative solutions or features you've considered.\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6536","RelatedDescription":"Open issue \"Validate the similarity between training dataset and validation dataset Schema\" (#6536)"},{"Id":"1521500514","IsPullRequest":true,"CreatedAt":"2023-01-06T22:24:22","Actor":"LittleLittleCloud","Number":"6535","RawContent":null,"Title":"add addKeyValueAnnotationsAsText flag in AutoML","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\nhttps://github.com/dotnet/machinelearning-modelbuilder/issues/2418\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6535","RelatedDescription":"Closed or merged PR \"add addKeyValueAnnotationsAsText flag in AutoML\" (#6535)"},{"Id":"1521263465","IsPullRequest":false,"CreatedAt":"2023-01-05T19:24:14","Actor":"LittleLittleCloud","Number":"6534","RawContent":null,"Title":"Text classification : Target 4294967295 is out of bounds","State":"open","Body":"**System Information (please complete the following information):**\r\n - ML.NET Version: 2.0\r\n\r\n**Describe the bug**\r\n\r\nDetailed info can be found in\r\n#https://github.com/dotnet/machinelearning-modelbuilder/issues/2369","Url":"https://github.com/dotnet/machinelearning/issues/6534","RelatedDescription":"Open issue \"Text classification : Target 4294967295 is out of bounds\" (#6534)"},{"Id":"1519561735","IsPullRequest":false,"CreatedAt":"2023-01-04T20:57:22","Actor":"luisquintanilla","Number":"6533","RawContent":null,"Title":"oneDAL Binary Classification LBFGS - Index was outside the bounds of the array.","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: ML.NET 3.0 prerelease\r\n - .NET Version: .NET 6 & .NET 6\r\n\r\n**Describe the bug**\r\n\r\nTraining a binary classification model using the Lbfgs trainer and setting the MLNET_BACKEND environment variable to ONEDAL produces the following error:\r\n\r\n```text\r\nUnhandled exception. System.IndexOutOfRangeException: Index was outside the bounds of the array.\r\n   at Microsoft.ML.Trainers.LbfgsTrainerBase`3.TrainCoreOneDal(IChannel ch, RoleMappedData data)\r\n   at Microsoft.ML.Trainers.LbfgsTrainerBase`3.TrainModelCore(TrainContext context)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.Fit(IDataView input)\r\nat Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\nat Program.<Main>$(String[] args) in C:\\Dev\\OneDalTest\\OneDalTest\\Program.cs:line 31\r\n```\r\n\r\n**To Reproduce**\r\n\r\n1. Create a C# console application\r\n2. Install the latest prerelease versions of Microsoft.ML and Microsoft.ML.OneDAL packages.\r\n3. Paste the following code into the *Program.cs* file.\r\n\r\n```csharp\r\n// Initialize MLContext\r\nvar ctx = new MLContext();\r\n\r\n// Define data\r\nvar trainingData = new [] \r\n{\r\n    new {Arch=\"ARM\", Trainer=\"LightGBM\", oneDALSupport=false},\r\n    new {Arch=\"x86\", Trainer=\"FastTree\", oneDALSupport=true},\r\n    new {Arch=\"x86\", Trainer=\"LbfgsLogisticRegression\", oneDALSupport=true},\r\n    new {Arch=\"ARM\", Trainer=\"FastTree\", oneDALSupport=false}\r\n};\r\n\r\n// Load data into IDataView\r\nvar trainingDv = ctx.Data.LoadFromEnumerable(trainingData);\r\n\r\n// Define data processing pipeline & trainer\r\nvar pipeline = \r\n    ctx.Transforms.Categorical.OneHotEncoding(new [] {\r\n            new InputOutputColumnPair(\"ArchEncoded\", \"Arch\"),\r\n            new InputOutputColumnPair(\"TrainerEncoded\", \"Trainer\")})\r\n        .Append(ctx.Transforms.Concatenate(\"Features\", \"ArchEncoded\", \"TrainerEncoded\"))\r\n        .Append(ctx.BinaryClassification.Trainers.LbfgsLogisticRegression(labelColumnName:\"oneDALSupport\"));\r\n\r\n// Train model\r\nvar model = pipeline.Fit(trainingDv);\r\n```\r\n\r\n4. Set the `MLNET_BACKEND` environment variable to `ONEDAL` \r\n5. Run the application.\r\n\r\n**Expected behavior**\r\nThe model trains successfully. \r\n\r\n**Additional context**\r\n\r\nThe same code using the FastTree trainer trains the model successfully. \r\n","Url":"https://github.com/dotnet/machinelearning/issues/6533","RelatedDescription":"Open issue \"oneDAL Binary Classification LBFGS - Index was outside the bounds of the array.\" (#6533)"},{"Id":"1519243840","IsPullRequest":false,"CreatedAt":"2023-01-04T16:17:59","Actor":"luisquintanilla","Number":"6532","RawContent":null,"Title":"Update or deprecate AutoML 1.x APIs","State":"open","Body":"## Problem\r\n\r\nCurrently both ML.NET 1.x and ML.NET 2.x AutoML APIs are available to users. Although users can still run old samples, the differences in the implementations cause confusion.\r\n\r\n## Proposal(s):\r\n\r\n1. Update 1.x APIs to use the latest FLAML AutoML implementation\r\n2. Deprecate  1.x APIs in favor of those introduced in 2.x\r\n\r\nPersonally I'd be in favor of 1 since it would not break old samples while at the same time providing an even higher layer of abstraction on top of the Experiment API. However, in the event the breaking changes are significant, I'd be in favor of 2. \r\n\r\n## User evidence\r\n\r\n- #6529 \r\n- #6446\r\n- #6470","Url":"https://github.com/dotnet/machinelearning/issues/6532","RelatedDescription":"Open issue \"Update or deprecate AutoML 1.x APIs\" (#6532)"},{"Id":"1517831051","IsPullRequest":false,"CreatedAt":"2023-01-03T19:35:21","Actor":"FaithlessDbo","Number":"6531","RawContent":null,"Title":"Model Builder (Image classification) CPU vs GPU accuracy","State":"open","Body":"**OS:**\r\n- Windows 11\r\n- Visual Studio 2022\r\n\r\n**Target framework version:**\r\n- .NET 6.0\r\n\r\n**Nuget packages:**\r\n![image](https://user-images.githubusercontent.com/69070238/210427803-69bdb383-8c11-4bf3-a5f5-f257e7f6e63f.png)\r\n\r\n**What I'm trying to achieve**\r\n_TL DR; classifying images with my GPU instead of CPU_. \r\n\r\nI'm trying to classify images based on 14 different categories. Currently I have about 40.000 images, but I'm planning to add more to try and get a better dataset. Initially I have trained my dataset with my CPU and had pretty decent accuracy (90-98% in most cases), but the training and prediction speed was rather slow. I saw some articles about a GPU improving this speed. I bought a GPU for this, but the results were rather unexpected.\r\n\r\n**What did I do?**\r\nIn my \"Environment\" tab from the model builder I selected the \"Local (GPU)\" box and I installed the required extensions and the checks became green. I uninstalled the nuget package I used for the CPU training (_SciSharp.TensorFlow.Redist_) and installed the one required for the GPU (_SciSharp.TensorFlow.Redist-Windows-GPU_). When I hit the _Train_ button in the \"Train\" tab I was amazed by the speed. It flew through the bottleneck computation, indicating the GPU is working (confirmed with GPU usage in my task manager).\r\nHowever my best MicroAccuracy dropped from ~0.93 to ~0.43 and I get about 8% accuracy in my evaluate tab, which is completely unexpected.\r\n\r\n\r\n- **Model builder config:**\r\n```\r\n{\r\n  \"Scenario\": \"ImageClassification\",\r\n  \"DataSource\": {\r\n    \"Type\": \"Folder\",\r\n    \"Version\": 1,\r\n    \"FolderPath\": \"path\\\\To\\\\Images\\\\Folder\"\r\n  },\r\n  \"Environment\": {\r\n    \"Type\": \"LocalGPU\",\r\n    \"Version\": 1\r\n  },\r\n  \"Type\": \"TrainingConfig\",\r\n  \"Version\": 3,\r\n  \"TrainingOption\": {\r\n    \"Version\": 0,\r\n    \"Type\": \"ClassificationTrainingOption\",\r\n    \"TrainingTime\": 2147483647,\r\n    \"Seed\": 0\r\n  }\r\n}\r\n```\r\n\r\n\r\n### What could be causing the low accuracy between my CPU and GPU settings?\r\nDo I require more training images, or did I overlook something else? I'm looking forward for any help or suggestions!\r\n**_Thank you for reading!_**\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6531","RelatedDescription":"Open issue \"Model Builder (Image classification) CPU vs GPU accuracy\" (#6531)"},{"Id":"1513264740","IsPullRequest":false,"CreatedAt":"2022-12-29T00:37:51","Actor":"dcostea","Number":"6530","RawContent":null,"Title":"Value of Loss in ReportBestTrial (from class AutoMLMonitor) is always negative of Metric","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: v3.0\r\n - .NET Version: .NET 7.0\r\n\r\n**Describe the bug**\r\nThe Loss seems to be the negative of Metric.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Run a sample with AutoML\r\n2. Add a monitoring class (IMonitor)\r\n3. Check result.Loss in ReportBestTrial(TrialResult result)\r\n\r\n**Expected behavior**\r\nA correct value for Loss value.\r\n\r\n**Screenshots, Code, Sample Projects**\r\npublic void ReportBestTrial(TrialResult result)\r\n    {\r\n        // check result.Loss below, the values is negative of result.Metric, e.g. if result.Metric is 0.728, Loss is -0.728\r\n        _bestTrials.Add(result);\r\n    }\r\n\r\n**Additional context**\r\nNone","Url":"https://github.com/dotnet/machinelearning/issues/6530","RelatedDescription":"Open issue \"Value of Loss in ReportBestTrial (from class AutoMLMonitor) is always negative of Metric\" (#6530)"},{"Id":"1508154242","IsPullRequest":false,"CreatedAt":"2022-12-22T16:17:03","Actor":"HoLyDreaM","Number":"6529","RawContent":null,"Title":"Meaningless bug in the latest version","State":"open","Body":"microsoft.auto.ml gives errors in latest version. Especially when you run the command like below, cache memory error or different errors are returned. But when I downgrade, this error goes away.\r\n\r\nExperimentResult<RegressionMetrics> experiment = mlContext.Auto().CreateRegressionExperiment(settings).Execute(newData, labelColumnName: \"P\", progressHandler: progress);","Url":"https://github.com/dotnet/machinelearning/issues/6529","RelatedDescription":"Open issue \"Meaningless bug in the latest version\" (#6529)"},{"Id":"1507606884","IsPullRequest":false,"CreatedAt":"2022-12-22T10:16:37","Actor":"andrasfuchs","Number":"6528","RawContent":null,"Title":"Build error: MSML_TypeParamName reports \"TType\" as not standard","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11 v10.0.22621.963\r\n - ML.NET Version: ML.NET v2.0\r\n - .NET Version: .NET 7\r\n\r\n**Describe the bug**\r\nAfter successfully building the ML.NET project when I try to build it again in Visual Studio, I get the \"Type parameter name 'TType' not standard\" error and the build fails.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Clone this repo\r\n2. Run the `build.cmd` in PowerShell\r\n3. Open the `Microsoft.ML.sln` solution in Visual Studio 2022\r\n4. Try to build the project (F6)\r\n5. (optional) Open a source file that causes the failure (eg. [NormalizeColumnSng.cs](https://github.com/dotnet/machinelearning/blob/main/src/Microsoft.ML.Data/Transforms/NormalizeColumnSng.cs))\r\n6. See the errors in the Error List window\r\n\r\n**Expected behavior**\r\nAs described [in this document](https://github.com/dotnet/machinelearning/blob/main/docs/building/windows-instructions.md#building-from-visual-studio-2019), I would expect the build command to work in Visual Studio.\r\n\r\n**Screenshots, Code, Sample Projects**\r\n![image](https://user-images.githubusercontent.com/910321/209109755-42d1147d-6460-4156-a66b-f1a55e9f039f.png)\r\n\r\n**Additional context**\r\nI use Visual Studio Enterprise 2022 v17.4.3.\r\n\r\nIf I refactor the type `TType` to `TTest` then it works fine.\r\n\r\nI also tried to keep the `TType` class name, and change [the condition in `TypeParamNameAnalyzer` class](https://github.com/dotnet/machinelearning/blob/9d798f1bb3fb17fe97eba77a694c35e2cb46a4b7/tools-local/Microsoft.ML.InternalCodeAnalyzer/TypeParamNameAnalyzer.cs#L44) from\r\n```csharp\r\nif (name == null || (name.StartsWith(\"T\") && Utils.NameIsGood(name, 1, true))) return;\r\n```\r\nto\r\n```csharp\r\nif (name == null || (true && Utils.NameIsGood(name, 1, true))) return;\r\n```\r\nand it made it work, I could build the solution without any errors.\r\n\r\nIt doesn't make any sense to me, I hope someone else will understand what's the underlying issue here.","Url":"https://github.com/dotnet/machinelearning/issues/6528","RelatedDescription":"Open issue \"Build error: MSML_TypeParamName reports \"TType\" as not standard\" (#6528)"},{"Id":"1507217498","IsPullRequest":true,"CreatedAt":"2022-12-22T04:50:30","Actor":"michaelgsharp","Number":"6527","RawContent":null,"Title":"moving onedal nuget download from onedal to native where its needed for building.","State":"closed","Body":"Moving nuget download from onedal project to native project because its needed for building and when we build the \"official build\" \"native only\" components it fails without this.","Url":"https://github.com/dotnet/machinelearning/pull/6527","RelatedDescription":"Closed or merged PR \"moving onedal nuget download from onedal to native where its needed for building.\" (#6527)"},{"Id":"1482053234","IsPullRequest":true,"CreatedAt":"2022-12-21T20:54:14","Actor":"rgesteve","Number":"6521","RawContent":null,"Title":"Onedal algorithms backed by nuget packages","State":"closed","Body":"Supercedes #6373 and #6364 allowing for full build of functionality without extra packages (they're downloaded by `build.sh`).  Also includes sample to illustrate use.\r\n\r\nWe are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6521","RelatedDescription":"Closed or merged PR \"Onedal algorithms backed by nuget packages\" (#6521)"},{"Id":"1503249527","IsPullRequest":false,"CreatedAt":"2022-12-19T16:42:42","Actor":"iharsuvorau","Number":"6526","RawContent":null,"Title":"TensorFlow support on Apple Silicon (M1, M2)","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nI'm blocked by the current lack of support for TensorFlow on Apple Silicon. The limitation is mentioned at https://github.com/dotnet/machinelearning/blob/main/docs/project-docs/platform-limitations.md\r\n\r\n**Describe the solution you'd like**\r\nUse ML.NET on Apple Silicon chips.\r\n\r\n**Describe alternatives you've considered**\r\nAs alternative, I don't use ML.NET.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6526","RelatedDescription":"Open issue \"TensorFlow support on Apple Silicon (M1, M2)\" (#6526)"},{"Id":"1499332611","IsPullRequest":false,"CreatedAt":"2022-12-16T00:24:20","Actor":"zewditu","Number":"6525","RawContent":null,"Title":"Text- classification cancelation does not work ","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: [e.g. Windows 10] \r\n - ML.NET Version: [e.g. ML.NET v1.5.5]\r\n - .NET Version: [e.g. .NET 5.0]\r\n\r\n**Describe the bug**\r\nIt seems that Text-classification cancellation does not cooperate with mlContext cancellation.\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots, Code, Sample Projects**\r\nIf applicable, add screenshots, code snippets, or sample projects to help explain your problem.\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6525","RelatedDescription":"Open issue \"Text- classification cancelation does not work \" (#6525)"},{"Id":"1498854215","IsPullRequest":false,"CreatedAt":"2022-12-15T17:52:39","Actor":"Vivraan","Number":"6524","RawContent":null,"Title":"Query about outdated Unity Sample","State":"open","Body":"Copy of https://github.com/dotnet/machinelearning-samples/issues/981\r\n\r\n### System information\r\n\r\n- **OS version/distro**: Targeting Meta Quest 2, building on Windows 11 22621.963\r\n- **.NET Version (eg., dotnet --info)**: .NET Framework 4.7.1 (Unity)\r\n\r\n### Issue\r\nI am trying to adapt some code in the Unity sample in this project in my own project and using my own models from here: https://github.com/dotnet/machinelearning-samples/blob/main/samples/csharp/end-to-end-apps/Unity-HelloMLNET/HelloMLNET/Assets/Scenes/HelloML.cs\r\n\r\nHowever, it seems that the `ArrayDataViewBuilder` class is now an internal sealed class, and it cannot be accessed by external classes. This was documented as a workaround for `PredictionEngine` since it made use of `Reflection.Emit` which apparently \"throws up\": https://github.com/dotnet/machinelearning-samples/tree/main/samples/csharp/end-to-end-apps/Unity-HelloMLNET#known-workarounds\r\n\r\nWhat is a solution for this? I am in a position where I absolutely need a solution to this in the next 72 hours.\r\n\r\n### Source code / logs\r\nWill attach if necessary.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6524","RelatedDescription":"Open issue \"Query about outdated Unity Sample\" (#6524)"},{"Id":"1493963015","IsPullRequest":false,"CreatedAt":"2022-12-13T10:48:58","Actor":"ic202","Number":"6522","RawContent":null,"Title":"Using a target size ([32]) that is different to the input size ([32, 1]). ","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: [e.g. Windows 10] \r\n - ML.NET Version: [e.g. ML.NET v2.0.0]\r\n - .NET Version: [e.g. .NET 4.7.2]\r\n- Microsoft.ML.TorchSharp 0.20.0\r\n- TorchSharp-cpu 0.99.1\r\n\r\n**Describe the bug**\r\n\r\nwhen trying to train SentenceSimilarity I get this warning::\r\n\r\nWarning: Using a target size ([32]) that is different to the input size ([32, 1]). This will likely lead to incorrect results due to broadcasting. Please ensure they have the same size. (function mse_loss)\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6522","RelatedDescription":"Open issue \"Using a target size ([32]) that is different to the input size ([32, 1]). \" (#6522)"},{"Id":"1478918989","IsPullRequest":true,"CreatedAt":"2022-12-06T11:54:20","Actor":"andrasfuchs","Number":"6520","RawContent":null,"Title":"Add continuous resource monitoring to AutoML.IMonitor","State":"open","Body":"Partially fixes #6320, #6426, #6425 and helps investigating further problems with AutoML trials.\r\n\r\nThis PR lets the user cancel trials based various performance metrics. It changed my user experience with AutoML experiments significantly, because I regularly had crashes and failed trials when I tried to run experiments for a long time. With this modification I could implement my own IMonitor and react to changes in memory demand, virtual memory usage, remaining disk space and I could skip a trial if it was running unexpectedly long without terminating the experiment.\r\n\r\nBefore the modifications in this PR my experiments usually stopped with an error in a few hours, but since I have much more control over the experiment with these modifications I could run much longer experiment without any issues.\r\n\r\nOn the technical level I moved the performance-related properties of the `TrialSettings` class into a separate `TrialPerformanceMetrics` subclass, I added a timer to check for those CPU and memory metrics, and I added a new `ReportTrialResourceUsage` event to the `IMonitor` class that is called periodically during the trial-run. I also added the `CancellationTokenSource` class of the trial to the `TrialSettings` so that the user can skip a trial if they wish.\r\n\r\nYou can also check [my custom IMonitor implementation](https://github.com/andrasfuchs/BioBalanceDetector/blob/master/Software/Source/BBDProto08/BBD.BodyMonitor/BBD.BodyMonitor.API/Models/MLContextLoggerMonitor.cs) where the resource monitoring and cancellation logic is demonstrated.","Url":"https://github.com/dotnet/machinelearning/pull/6520","RelatedDescription":"Open PR \"Add continuous resource monitoring to AutoML.IMonitor\" (#6520)"},{"Id":"1476577455","IsPullRequest":true,"CreatedAt":"2022-12-05T13:32:36","Actor":"dotnet-maestro[bot]","Number":"6518","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:1c26c342-7dbd-4e18-3778-08daa2f83374)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 1c26c342-7dbd-4e18-3778-08daa2f83374\r\n- **Build**: 20221201.6\r\n- **Date Produced**: December 1, 2022 8:44:16 PM UTC\r\n- **Commit**: c01ccbc9554b39205750bf5bda7aad29f89bc0c9\r\n- **Branch**: refs/heads/release/7.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22572.6 to 7.0.0-beta.22601.6][6]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 7.0.0-beta.22572.6 to 7.0.0-beta.22601.6][6]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22572.6 to 7.0.0-beta.22601.6][6]\r\n  - **Microsoft.DotNet.SignTool**: [from 7.0.0-beta.22572.6 to 7.0.0-beta.22601.6][6]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 7.0.0-beta.22572.6 to 7.0.0-beta.22601.6][6]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.22572.6 to 7.0.0-beta.22601.6][6]\r\n\r\n[6]: https://github.com/dotnet/arcade/compare/82d0268...c01ccbc\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:1c26c342-7dbd-4e18-3778-08daa2f83374)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6518","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#6518)"},{"Id":"1473639236","IsPullRequest":false,"CreatedAt":"2022-12-04T21:33:22","Actor":"Ghaandy","Number":"6517","RawContent":null,"Title":"Multiclassification - LightGBM and FastTree not working as expected with infere column","State":"closed","Body":"*CLOSING*","Url":"https://github.com/dotnet/machinelearning/issues/6517","RelatedDescription":"Closed issue \"Multiclassification - LightGBM and FastTree not working as expected with infere column\" (#6517)"},{"Id":"1473132173","IsPullRequest":false,"CreatedAt":"2022-12-02T16:30:50","Actor":"luisquintanilla","Number":"6515","RawContent":null,"Title":"Add SQL Support to InferColumns","State":"open","Body":"Currently InferColumns only supports file data sources. \r\n\r\nAdd SQL support to `InferColumns` so it can be used with DatabaseLoader. ","Url":"https://github.com/dotnet/machinelearning/issues/6515","RelatedDescription":"Open issue \"Add SQL Support to InferColumns\" (#6515)"},{"Id":"1471993970","IsPullRequest":false,"CreatedAt":"2022-12-01T21:41:39","Actor":"luisquintanilla","Number":"6514","RawContent":null,"Title":"AutoML Tracking Issue","State":"open","Body":"## Summary\r\n\r\nThis issue tracks work on AutoML\r\n\r\n## Work Items\r\n\r\n- [ ] #6304 \r\n- [ ] #6344 \r\n- [ ] #6515 \r\n- [ ] #6532","Url":"https://github.com/dotnet/machinelearning/issues/6514","RelatedDescription":"Open issue \"AutoML Tracking Issue\" (#6514)"},{"Id":"1470413166","IsPullRequest":false,"CreatedAt":"2022-12-01T17:28:39","Actor":"luisquintanilla","Number":"6511","RawContent":null,"Title":"Add ARIMA Trainer","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/issues/6511","RelatedDescription":"Closed issue \"Add ARIMA Trainer\" (#6511)"},{"Id":"1470413238","IsPullRequest":false,"CreatedAt":"2022-12-01T00:30:42","Actor":"luisquintanilla","Number":"6512","RawContent":null,"Title":"Integreate Fairness .NET APIs","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/issues/6512","RelatedDescription":"Open issue \"Integreate Fairness .NET APIs\" (#6512)"},{"Id":"1470413135","IsPullRequest":false,"CreatedAt":"2022-12-01T00:30:38","Actor":"luisquintanilla","Number":"6510","RawContent":null,"Title":"Enable Dynamic Inference (PredictionEngine)","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/issues/6510","RelatedDescription":"Open issue \"Enable Dynamic Inference (PredictionEngine)\" (#6510)"},{"Id":"1470412141","IsPullRequest":false,"CreatedAt":"2022-12-01T00:29:20","Actor":"luisquintanilla","Number":"6509","RawContent":null,"Title":"Miscellaneous Tracking Issue","State":"open","Body":"## Summary\n\nThis issue tracks work items that don't fit into the other epics. \n\n## Work Items\n\n- [ ] #6510\n- [ ] #6427\n- [ ] #6512","Url":"https://github.com/dotnet/machinelearning/issues/6509","RelatedDescription":"Open issue \"Miscellaneous Tracking Issue\" (#6509)"},{"Id":"1470407066","IsPullRequest":false,"CreatedAt":"2022-12-01T00:22:11","Actor":"luisquintanilla","Number":"6508","RawContent":null,"Title":"Investigate result discrepancies","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/issues/6508","RelatedDescription":"Open issue \"Investigate result discrepancies\" (#6508)"},{"Id":"1470407040","IsPullRequest":false,"CreatedAt":"2022-12-01T00:22:08","Actor":"luisquintanilla","Number":"6507","RawContent":null,"Title":"Increase coverage of ONNX model repo models in ORT extensions.","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/issues/6507","RelatedDescription":"Open issue \"Increase coverage of ONNX model repo models in ORT extensions.\" (#6507)"},{"Id":"1470407006","IsPullRequest":false,"CreatedAt":"2022-12-01T00:22:05","Actor":"luisquintanilla","Number":"6506","RawContent":null,"Title":"Provide APIs to inspect ONNX input and output schemas.","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/issues/6506","RelatedDescription":"Open issue \"Provide APIs to inspect ONNX input and output schemas.\" (#6506)"},{"Id":"1470406569","IsPullRequest":false,"CreatedAt":"2022-12-01T00:21:29","Actor":"luisquintanilla","Number":"6505","RawContent":null,"Title":"Support Execution Providers","State":"open","Body":"- [ ] [OpenVINO](https://onnxruntime.ai/docs/execution-providers/OpenVINO-ExecutionProvider.html)\r\n- [ ] [DirectML](https://onnxruntime.ai/docs/execution-providers/DirectML-ExecutionProvider.html)","Url":"https://github.com/dotnet/machinelearning/issues/6505","RelatedDescription":"Open issue \"Support Execution Providers\" (#6505)"},{"Id":"1470406524","IsPullRequest":false,"CreatedAt":"2022-12-01T00:21:25","Actor":"luisquintanilla","Number":"6504","RawContent":null,"Title":"Increase export coverage","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/issues/6504","RelatedDescription":"Open issue \"Increase export coverage\" (#6504)"},{"Id":"1470405870","IsPullRequest":false,"CreatedAt":"2022-12-01T00:20:36","Actor":"luisquintanilla","Number":"6503","RawContent":null,"Title":"Inference LigthGBM models API","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/issues/6503","RelatedDescription":"Open issue \"Inference LigthGBM models API\" (#6503)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-01-11T03:31:53.6840091Z","RunDurationInMilliseconds":523}