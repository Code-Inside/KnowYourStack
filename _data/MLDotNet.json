{"Data":{"GitHub":{"Issues":[{"Id":"1293104884","IsPullRequest":true,"CreatedAt":"2022-07-06T23:58:50","Actor":"dotnet-maestro[bot]","Number":"6245","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 97926d79-6b8b-4d32-c8db-08d9d479971c\r\n- **Build**: 20220627.2\r\n- **Date Produced**: June 27, 2022 5:10:02 PM UTC\r\n- **Commit**: a264eb13fea14125f3ef8d4056586cd66fa55309\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22327.1 to 7.0.0-beta.22327.2][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 7.0.0-beta.22327.1 to 7.0.0-beta.22327.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22327.1 to 7.0.0-beta.22327.2][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 7.0.0-beta.22327.1 to 7.0.0-beta.22327.2][1]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 7.0.0-beta.22327.1 to 7.0.0-beta.22327.2][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.22327.1 to 7.0.0-beta.22327.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/640c1cc...a264eb1\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6245","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6245)"},{"Id":"1296319728","IsPullRequest":true,"CreatedAt":"2022-07-06T19:54:50","Actor":"LittleLittleCloud","Number":"6246","RawContent":null,"Title":"reimplement binary experiment using AutoMLExperiment","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\nThis PR reimplements binary classification experiment using AutoMLExperiment, while keeping all the API unchanged so the existing documents don't need to be updated.","Url":"https://github.com/dotnet/machinelearning/pull/6246","RelatedDescription":"Open PR \"reimplement binary experiment using AutoMLExperiment\" (#6246)"},{"Id":"1289422403","IsPullRequest":true,"CreatedAt":"2022-07-06T18:55:22","Actor":"JakeRadMSFT","Number":"6243","RawContent":null,"Title":"Add AutoML Interactive Extension","State":"closed","Body":"This PR is going to add a Visualizer for AutoML experiments to track AutoML progress while it's running in a Notebook.\r\n\r\nIt's not perfect but it's a start:\r\n\r\n<img width=\"1005\" alt=\"image\" src=\"https://user-images.githubusercontent.com/31937616/176798313-5d58be4f-3326-4ca9-8b2a-5ed9cac05e29.png\">\r\n\r\n\r\n----------------------\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6243","RelatedDescription":"Closed or merged PR \"Add AutoML Interactive Extension\" (#6243)"},{"Id":"1292208303","IsPullRequest":false,"CreatedAt":"2022-07-03T05:00:16","Actor":"QuinnDamerell","Number":"6244","RawContent":null,"Title":"Exception When Doing Image Prediction On Ubuntu","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Ubuntu 20.04.4 LTS\r\n - ML.NET Version: ML 1.7.1\r\n - .NET Version: NET 6.0\r\n\r\n**Describe the bug**\r\n\r\nI'm running a quite standard version of Ubuntu, using the latest dotnet 6.0 and latest ML libs, but for some reason, I'm getting this exception while trying to do an image clarification prediction on Linux. This logic work just fine on Windows. \r\n\r\nI looked up the issue and found this old bug from before dotnet 3.0. \r\nhttps://github.com/dotnet/runtime/issues/27200\r\n\r\nI did however still ran `apt-get install libgdiplus libc6-dev` and make sure the .so was in the /usr/lib dir where it should have been, yet I still get this issue.\r\n\r\nError: Exception throw in GadgetMl perdict.; TypeInitializationException - The type initializer for 'Gdip' threw an exception. -    at System.Drawing.SafeNa>\r\n    at System.Drawing.Image.InitializeFromStream(Stream stream)\r\n    at System.Drawing.Image.LoadFromStream(Stream stream, Boolean keepAlive)\r\n    at System.Drawing.Image.FromStream(Stream stream, Boolean useEmbeddedColorManagement, Boolean validateImageData)\r\n    at System.Drawing.Image.FromStream(Stream stream, Boolean useEmbeddedColorManagement)\r\n    at System.Drawing.Image.FromStream(Stream stream)\r\n    at Microsoft.ML.Data.ImageLoadingTransformer.Mapper.<>c__DisplayClass4_0.<MakeGetterImageDataViewType>b__1(Bitmap& dst)\r\n    at Microsoft.ML.Transforms.Image.ImageResizingTransformer.Mapper.<>c__DisplayClass3_0.<MakeGetter>b__1(Bitmap& dst)\r\n    at Microsoft.ML.Transforms.Image.ImagePixelExtractingTransformer.Mapper.<>c__DisplayClass5_0`1.<GetGetterCore>b__1(VBuffer`1& dst)\r\n    at Microsoft.ML.Transforms.Onnx.OnnxTransformer.Mapper.NamedOnnxValueGetterVec`1.GetNamedOnnxValue()\r\n    at Microsoft.ML.Transforms.Onnx.OnnxTransformer.Mapper.UpdateCacheIfNeeded(Int64 position, INamedOnnxValueGetter[] srcNamedOnnxValueGetters, List`1 activ>\r\n    at Microsoft.ML.Transforms.Onnx.OnnxTransformer.Mapper.<>c__DisplayClass14_0`1.<MakeTensorGetter>b__0(VBuffer`1& dst)\r\n    at Microsoft.ML.Data.TypedCursorable`1.TypedRowBase.<>c__DisplayClass8_0`1.<CreateDirectVBufferSetter>b__0(TRow row)\r\n    at Microsoft.ML.Data.TypedCursorable`1.TypedRowBase.FillValues(TRow row)\r\n    at Microsoft.ML.Data.TypedCursorable`1.RowImplementation.FillValues(TRow row)\r\n    at Microsoft.ML.PredictionEngineBase`2.FillValues(TDst prediction)\r\n    at Microsoft.ML.PredictionEngine`2.Predict(TSrc example, TDst& prediction)\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots, Code, Sample Projects**\r\nIf applicable, add screenshots, code snippets, or sample projects to help explain your problem.\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6244","RelatedDescription":"Open issue \"Exception When Doing Image Prediction On Ubuntu\" (#6244)"},{"Id":"1289416461","IsPullRequest":true,"CreatedAt":"2022-06-30T21:50:27","Actor":"michaelgsharp","Number":"6242","RawContent":null,"Title":"Fixes Onnx Export for Column Copy Transformer.","State":"closed","Body":"Fixes #6237. Column Copy Transformer was checking the wrong thing during the onnx export. It was checking if the intermediate variable exists in the input dataset when it needed to check if the original column name existed in the original dataset.\r\n\r\nWhen Column Copy Transformer is using a column that hasn't been used by another transformer this bug was not encountered. It only shows up when a column (with the same name) is used by a previews transformer. Because this change only affects the internal onnx state, not really a good way to test it automatically.","Url":"https://github.com/dotnet/machinelearning/pull/6242","RelatedDescription":"Closed or merged PR \"Fixes Onnx Export for Column Copy Transformer.\" (#6242)"},{"Id":"1283873717","IsPullRequest":false,"CreatedAt":"2022-06-30T21:50:26","Actor":"jonathanpeppers","Number":"6237","RawContent":null,"Title":"Issue saving model to .onnx format","State":"closed","Body":"**System Information (please complete the following information):**\r\n - OS & Version:  Windows 10\r\n - ML.NET Version: 1.7.1\r\n - .NET Version: .NET 6\r\n\r\n**Describe the bug**\r\n\r\nI trained a model with:\r\n\r\n```\r\nmlnet classification --dataset classified.csv --label-col 1 --has-header true --train-time 60\r\n```\r\n\r\nOpened the resulting project, and tried to change it to save the model file as `.onnx` format:\r\n\r\n[SampleClassification.zip](https://github.com/dotnet/machinelearning/files/8977193/SampleClassification.zip)\r\n\r\nInstalled the NuGet:\r\n\r\n```xml\r\n<PackageReference Include=\"Microsoft.ML.OnnxConverter\" Version=\"0.19.1\" />\r\n```\r\n\r\nTrying something like:\r\n\r\n```csharp\r\nprivate static void SaveModel(MLContext mlContext, IDataView dataView, ITransformer mlModel, string modelRelativePath, DataViewSchema modelInputSchema)\r\n{\r\n    // Save/persist the trained model to a .ZIP file\r\n    Console.WriteLine($\"=============== Saving the model  ===============\");\r\n    //mlContext.Model.Save(mlModel, modelInputSchema, GetAbsolutePath(modelRelativePath));\r\n    using var fileStream = File.Create(modelRelativePath);\r\n    mlContext.Model.ConvertToOnnx(mlModel, dataView, fileStream);\r\n\r\n    Console.WriteLine(\"The model is saved to {0}\", GetAbsolutePath(modelRelativePath));\r\n}\r\n```\r\n\r\nThrows an exception:\r\n```\r\nSystem.Collections.Generic.KeyNotFoundException\r\n  HResult=0x80131577\r\n  Message=The given key 'text_TextNormalizer' was not present in the dictionary.\r\n  Source=System.Private.CoreLib\r\n  StackTrace:\r\n   at System.ThrowHelper.ThrowKeyNotFoundException[T](T key)\r\n   at System.Collections.Generic.Dictionary`2.get_Item(TKey key)\r\n   at Microsoft.ML.Model.OnnxConverter.OnnxContextImpl.GetVariableName(String colName)\r\n   at Microsoft.ML.Transforms.Text.WordTokenizingTransformer.Mapper.SaveAsOnnx(OnnxContext ctx)\r\n   at Microsoft.ML.Data.RowToRowMapperTransform.Microsoft.ML.Model.OnnxConverter.ISaveAsOnnx.SaveAsOnnx(OnnxContext ctx)\r\n   at Microsoft.ML.Model.OnnxConverter.SaveOnnxCommand.ConvertTransformListToOnnxModel(OnnxContextImpl ctx, IChannel ch, IDataView inputData, IDataView outputData, LinkedList`1 transforms, HashSet`1 inputColumnNamesToDrop, HashSet`1 outputColumnNamesToDrop)\r\n   at Microsoft.ML.OnnxExportExtensions.ConvertToOnnxProtobufCore(IHostEnvironment env, OnnxContextImpl ctx, ITransformer transform, IDataView inputData, String[] outputColumnNamesToKeep)\r\n   at Microsoft.ML.OnnxExportExtensions.ConvertToOnnxProtobuf(ModelOperationsCatalog catalog, ITransformer transform, IDataView inputData, String[] outputColumns)\r\n   at Microsoft.ML.OnnxExportExtensions.ConvertToOnnx(ModelOperationsCatalog catalog, ITransformer transform, IDataView inputData, Stream stream)\r\n   at SampleClassification.ConsoleApp.ModelBuilder.SaveModel(MLContext mlContext, IDataView dataView, ITransformer mlModel, String modelRelativePath, DataViewSchema modelInputSchema) in C:\\Users\\jopepper\\Downloads\\SampleClassification (2)\\SampleClassification.ConsoleApp\\ModelBuilder.cs:line 92\r\n   at SampleClassification.ConsoleApp.ModelBuilder.CreateModel() in C:\\Users\\jopepper\\Downloads\\SampleClassification (2)\\SampleClassification.ConsoleApp\\ModelBuilder.cs:line 47\r\n   at SampleClassification.ConsoleApp.Program.Main(String[] args) in C:\\Users\\jopepper\\Downloads\\SampleClassification (2)\\SampleClassification.ConsoleApp\\Program.cs:line 16\r\n```\r\n\r\n**To Reproduce**\r\n\r\n1. Open the above project in VS\r\n2. Run it\r\n\r\n**Expected behavior**\r\n\r\nWe need to convert our model to `.onnx` format, to be able to use it from JavaScript, and I think this is the best option? Let me know otherwise.\r\n\r\n**Screenshots, Code, Sample Projects**\r\n\r\nSample above.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6237","RelatedDescription":"Closed issue \"Issue saving model to .onnx format\" (#6237)"},{"Id":"1276858840","IsPullRequest":true,"CreatedAt":"2022-06-30T16:03:33","Actor":"dotnet-maestro[bot]","Number":"6234","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 97926d79-6b8b-4d32-c8db-08d9d479971c\r\n- **Build**: 20220627.1\r\n- **Date Produced**: June 27, 2022 8:28:47 AM UTC\r\n- **Commit**: 640c1cc2a140b322c4f30f6d6b85f35f0c4c7313\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22313.1 to 7.0.0-beta.22327.1][2]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 7.0.0-beta.22313.1 to 7.0.0-beta.22327.1][2]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22313.1 to 7.0.0-beta.22327.1][2]\r\n  - **Microsoft.DotNet.SignTool**: [from 7.0.0-beta.22313.1 to 7.0.0-beta.22327.1][2]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 7.0.0-beta.22313.1 to 7.0.0-beta.22327.1][2]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.22313.1 to 7.0.0-beta.22327.1][2]\r\n\r\n[2]: https://github.com/dotnet/arcade/compare/569a3f0...640c1cc\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6234","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6234)"},{"Id":"1288741302","IsPullRequest":false,"CreatedAt":"2022-06-29T13:37:39","Actor":"zhangfeibao","Number":"6241","RawContent":null,"Title":"load ONNX model(RNN[LSTM]) can not work ","State":"open","Body":"**System Information**\r\n - OS & Version: Windows 10]\r\n - ML.NET Version: ML.NET v1.5.5\r\n - .NET Version: NET 6.0\r\n\r\nI got the onnx model from tf2.\r\nThe model infomation is:\r\n![image](https://user-images.githubusercontent.com/12379132/176447293-f3e6f9f2-cba6-4dfc-a53f-f3a6f7932c08.png)\r\nI load the onnx model follow the [document.](https://docs.microsoft.com/en-us/azure/machine-learning/how-to-use-automl-onnx-model-dotnet)\r\n\r\n```c#\r\nprivate static ITransformer GetPredictionPipeline(MLContext mlContext)\r\n{\r\n    var inputColumns = new string[]\r\n    {\r\n        \"model\"\r\n    };\r\n\r\n    var outputColumns = new string[] { \"dense\" };\r\n\r\n    var onnxPredictionPipeline =\r\n        mlContext\r\n        .Transforms\r\n        .ApplyOnnxModel(\r\n        outputColumnNames: outputColumns,\r\n        inputColumnNames: inputColumns,\r\n        ONNX_MODEL_PATH);\r\n\r\n    var emptyDv = mlContext.Data.LoadFromEnumerable(new OnnxInput[] {});    //the line will throw the exception\r\n\r\n    return onnxPredictionPipeline.Fit(emptyDv);\r\n}\r\n\r\n```\r\n\r\n\r\nwhen i ran the app,I got the exception at the line.\r\n> **System.InvalidOperationException:“Input** shape mismatch: Input 'model' has shape 1,50,4, but input data is of length 1.”\r\n\r\nI have tryed many time to resove the problem.but it just can't work!\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6241","RelatedDescription":"Open issue \"load ONNX model(RNN[LSTM]) can not work \" (#6241)"},{"Id":"1288383209","IsPullRequest":false,"CreatedAt":"2022-06-29T08:51:46","Actor":"IzzyHibbert","Number":"6240","RawContent":null,"Title":"Could not load file or assembly 'System.Runtime.CompilerServices.Unsafe, Version=4.0.4.1","State":"open","Body":"System Info :\r\n - OS : Win 2019\r\n - ML.NET Version: 1.5, tried already 1.7.1\r\n - .NET Version: 4.7.2\r\n\r\nIssue : \r\nI am trying to use ML in my .NET 4.7.2 class library project. \r\nI imported ML with Nuget, created the model, and when I use the dll I get the following error :\r\n\r\n```\r\nSystem.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.IO.FileLoadException: Could not load file or assembly 'System.Runtime.CompilerServices.Unsafe, Version=4.0.4.1, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)\r\nat System.MemoryExtensions.AsSpan(String text)\r\n```\r\nthe app.config file has the entry:\r\n\r\n```\r\n        <dependentAssembly>\r\n            <assemblyIdentity name=\"System.Runtime.CompilerServices.Unsafe\" publicKeyToken=\"b03f5f7f11d50a3a\" culture=\"neutral\" />\r\n            <bindingRedirect oldVersion=\"0.0.0.0-4.0.4.1\" newVersion=\"4.0.4.1\" />\r\n        </dependentAssembly>\r\n```\r\n\r\nand the installed unsafe package is 4.5.3 \r\nI also tried to solve this by using other versions of ML.net, but still getting the same error.\r\nAlso, running a unit test on this was fine without any error.\r\n\r\nIs there anything more that could be done ?\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6240","RelatedDescription":"Open issue \"Could not load file or assembly 'System.Runtime.CompilerServices.Unsafe, Version=4.0.4.1\" (#6240)"},{"Id":"1286604130","IsPullRequest":false,"CreatedAt":"2022-06-28T00:30:46","Actor":"luisquintanilla","Number":"6238","RawContent":null,"Title":"[DataFrame] Allow quote escaping","State":"open","Body":"Loading data from a column containing quotes inside a string shouldn't break. \r\n\r\n```text\r\n\"this is one column value which includes a \"\" character\" \r\n```","Url":"https://github.com/dotnet/machinelearning/issues/6238","RelatedDescription":"Open issue \"[DataFrame] Allow quote escaping\" (#6238)"},{"Id":"1283467806","IsPullRequest":false,"CreatedAt":"2022-06-27T06:36:51","Actor":"paul1610","Number":"6236","RawContent":null,"Title":"Can´t make prediction with code trained model","State":"closed","Body":"**System Information (please complete the following information):**\r\n - Windows 10\r\n - ML.NET Version: ML.NET v1.7.1\r\n - .NET Version: .NET 6.0\r\n\r\n**Describe the bug**\r\nWhen I tried to get a prediction from a new trained model, the error \r\n```\r\nSystem.ArgumentOutOfRangeException: 'Could not find input column 'ImagePath'\r\nParameter name: inputSchema'\r\n```\r\n**Expected behavior**\r\nThe final model should be saved & used for prediction.\r\n\r\n**Additional context**\r\nGitHub Repository: https://github.com/paul1610/csharp-faceid\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6236","RelatedDescription":"Closed issue \"Can´t make prediction with code trained model\" (#6236)"},{"Id":"1282919068","IsPullRequest":true,"CreatedAt":"2022-06-24T15:28:18","Actor":"michaelgsharp","Number":"6235","RawContent":null,"Title":"Added score column. Auto count unique labels.","State":"closed","Body":"This PR fixes #6227, fixes #6225, and fixes #6226.\r\n\r\nIt adds in the score column, truncates the input tokens at 512, and auto calculates the number of classes.\r\n\r\nIt also gets the row count to correctly set the Learning Rate Scheduler. In my offline testing this increased accuracy by up to 20% based on the dataset, batch size, and number of epochs. Mileage will vary per dataset, but all datasets should see an increase in accuracy.\r\n\r\nIt also adds in row caching similar to how the OnnxTransformer does row caching.","Url":"https://github.com/dotnet/machinelearning/pull/6235","RelatedDescription":"Closed or merged PR \"Added score column. Auto count unique labels.\" (#6235)"},{"Id":"1268832217","IsPullRequest":false,"CreatedAt":"2022-06-24T15:28:17","Actor":"luisquintanilla","Number":"6227","RawContent":null,"Title":"Text Classification - output score column for evaluation","State":"closed","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: ML.NET 2.0.0-preview.33210.1, ML.NET 0.20.0-preview.33210.1\r\n - .NET Version: .NET 6.0\r\n\r\n**Describe the bug**\r\n\r\nCurrently, the output from a model generated by the Text Classification API doesn't include a Score column which is a requirement when using the `Evaluate` method in the multiclass classification catalog. As a result, users have to manually calculate their evaluation metrics and can't leverage the `Evaluate` method. For consistency and improved user experience, output a `Score` column with the probabilities of the respective labels. \r\n\r\nUsing a pipeline like the following results in the error `scoreColumnName cannot be null or empty`:\r\n\r\n```csharp\r\n//Initialize MLContext\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.Data;\r\nusing Microsoft.ML.TorchSharp;\r\nusing System.ComponentModel;\r\n\r\nvar mlContext = new MLContext();\r\n\r\n// Load your data\r\nvar dataView = mlContext.Data.LoadFromTextFile<ModelInputYelp>(@\"C:\\Datasets\\yelp_labelled.txt\", separatorChar: '\\t');\r\n\r\nvar trainTestSplit = mlContext.Data.TrainTestSplit(dataView, testFraction: 0.2);\r\n\r\n//Define your training pipeline\r\nvar pipeline =\r\n        mlContext.Transforms.Conversion.MapValueToKey(\"Label\", \"Sentiment\")\r\n            .Append(mlContext.MulticlassClassification.Trainers.TextClassification(sentence1ColumnName: \"ReviewText\"))\r\n            .Append(mlContext.Transforms.Conversion.MapKeyToValue(\"PredictedLabel\"));\r\n\r\n// Train the model\r\n\r\nConsole.WriteLine(\"Training model...\");\r\n\r\nvar model = pipeline.Fit(trainTestSplit.TrainSet);\r\n\r\nConsole.WriteLine(\"Model trained...\");\r\n\r\n// Evaluate the model \r\nvar predictions =\r\n    model.Transform(trainTestSplit.TestSet);\r\n\r\nvar evaluationMetrics =\r\n    mlContext.MulticlassClassification.Evaluate(predictions, labelColumnName: \"Sentiment\", scoreColumnName: null);\r\n\r\npublic class ModelInputYelp\r\n{\r\n    [LoadColumn(0)]\r\n    public string ReviewText { get; set; }\r\n\r\n    [LoadColumn(1)]\r\n    public float Sentiment { get; set; }\r\n}\r\n```\r\n\r\n**Stacktrace**:\r\n\r\n```text\r\nSystem.ArgumentOutOfRangeException\r\n  HResult=0x80131502\r\n  Message=scoreColumnName cannot be null or empty (Parameter 'scoreColumnName')\r\n  Source=Microsoft.ML.Core\r\n  StackTrace:\r\n   at Microsoft.ML.Runtime.Contracts.CheckNonEmpty(IExceptionContext ctx, String s, String paramName)\r\n   at Microsoft.ML.MulticlassClassificationCatalog.Evaluate(IDataView data, String labelColumnName, String scoreColumnName, String predictedLabelColumnName, Int32 topKPredictionCount)\r\n   at Program.<Main>$(String[] args) in C:\\Users\\luquinta.REDMOND\\source\\repos\\TextClassificationAPI\\TextClassificationAPI\\Program.cs:line 32\r\n```\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6227","RelatedDescription":"Closed issue \"Text Classification - output score column for evaluation\" (#6227)"},{"Id":"1268749321","IsPullRequest":false,"CreatedAt":"2022-06-24T15:28:17","Actor":"luisquintanilla","Number":"6226","RawContent":null,"Title":"Text Classification index out of range in self","State":"closed","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: ML.NET 2.0.0-preview.22310.1, ML.NET 0.20.0-preview.22310.1\r\n - .NET Version: .NET 6.0\r\n\r\n**Describe the bug**\r\n\r\nWhen running a training workload on the [wikipedia detox dataset](https://raw.githubusercontent.com/dotnet/machinelearning/main/test/data/wikipedia-detox-250-line-data.tsv) with the following pipeline, I get the error `index out of range in self`:\r\n\r\n**Pipeline**\r\n\r\n```csharp\r\n//Initialize MLContext\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.Data;\r\nusing Microsoft.ML.TorchSharp;\r\nusing System.ComponentModel;\r\n\r\nvar mlContext = new MLContext();\r\n\r\n// Load your data\r\nvar dataView = mlContext.Data.LoadFromTextFile<ModelInput>(@\"C:\\Datasets\\wikipedia-detox-250-line-data.tsv\", hasHeader: true);\r\n\r\n//Define your training pipeline\r\nvar pipeline =\r\n\t\tmlContext.Transforms.Conversion.MapValueToKey(\"Label\",\"Sentiment\")\r\n\t\t\t.Append(mlContext.MulticlassClassification.Trainers.TextClassification(sentence1ColumnName: \"SentimentText\", outputColumnName: \"outputColumn\"))\r\n\t\t\t.Append(mlContext.Transforms.Conversion.MapKeyToValue(\"outputColumn\"));\r\n\r\n// Train the model\r\n\r\nConsole.WriteLine(\"Training model...\");\r\n\r\nvar model = pipeline.Fit(dataView);\r\n\r\nConsole.WriteLine(\"Model trained...\");\r\n\r\npublic class ModelInput\r\n{\r\n    [LoadColumn(0)]\r\n    public float Sentiment { get; set; }\r\n\r\n    [LoadColumn(1)]\r\n    public string SentimentText { get; set; }\r\n}\r\n```\r\n\r\n**Stacktrace**\r\n```\r\nSystem.Runtime.InteropServices.ExternalException\r\n  HResult=0x80004005\r\n  Message=index out of range in self\r\nException raised from operator () at C:\\actions-runner\\_work\\pytorch\\pytorch\\builder\\windows\\pytorch\\aten\\src\\ATen\\native\\TensorAdvancedIndexing.cpp:996 (most recent call first):\r\n00007FFFA4C8A4C200007FFFA4C8A460 c10.dll!c10::Error::Error [<unknown file> @ <unknown line number>]\r\n00007FFFA4C63ED500007FFFA4C63E60 c10.dll!c10::IndexError::IndexError [<unknown file> @ <unknown line number>]\r\n00007FFF899A545200007FFF89992360 torch_cpu.dll!at::native::_bincount_cpu [<unknown file> @ <unknown line number>]\r\n00007FFF899ADA5F00007FFF89992360 torch_cpu.dll!at::native::_bincount_cpu [<unknown file> @ <unknown line number>]\r\n00007FFF8999567800007FFF89992360 torch_cpu.dll!at::native::_bincount_cpu [<unknown file> @ <unknown line number>]\r\n00007FFF98A7D8ED00007FFF98A7D7C0 libiomp5md.dll!_kmp_invoke_microtask [<unknown file> @ <unknown line number>]\r\n00007FFF98A2777C00007FFF98A26E30 libiomp5md.dll!_kmpc_threadprivate_register_vec [<unknown file> @ <unknown line number>]\r\n00007FFF989DE72C00007FFF989D4B50 libiomp5md.dll!_kmp_acquire_nested_drdpa_lock [<unknown file> @ <unknown line number>]\r\n00007FFF98A682B200007FFF98A68160 libiomp5md.dll!_kmp_launch_worker [<unknown file> @ <unknown line number>]\r\n00007FF890F754E000007FF890F754D0 KERNEL32.DLL!BaseThreadInitThunk [<unknown file> @ <unknown line number>]\r\n00007FF89296485B00007FF892964830 ntdll.dll!RtlUserThreadStart [<unknown file> @ <unknown line number>]\r\n\r\n  Source=TorchSharp\r\n  StackTrace:\r\n   at TorchSharp.torch.CheckForErrors()\r\n   at TorchSharp.Modules.Embedding.forward(Tensor input)\r\n   at Microsoft.ML.TorchSharp.NasBert.Modules.LearnedPositionalEmbedding.forward(Tensor input, Dictionary`2 param)\r\n   at Microsoft.ML.TorchSharp.NasBert.Models.TransformerEncoder.ForwardEmbedding(Tensor tokens, Tensor segmentLabels, Tensor positions)\r\n   at Microsoft.ML.TorchSharp.NasBert.Models.TransformerEncoder.forward(Tensor tokens, Tensor segmentLabels, Tensor positions)\r\n   at Microsoft.ML.TorchSharp.NasBert.Models.BaseModel.ExtractFeatures(Tensor srcTokens)\r\n   at Microsoft.ML.TorchSharp.NasBert.Models.TextClassificationModel.forward(Tensor srcTokens, Tensor tokenMask)\r\n   at Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer.Trainer.TrainStep(DataViewRowCursor cursor, ValueGetter`1 sentence1Getter, ValueGetter`1 sentence2Getter, ValueGetter`1 labelGetter, List`1& inputTensors, List`1& targets)\r\n   at Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer.Trainer.Train(IDataView input)\r\n   at Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Program.<Main>$(String[] args) in C:\\Users\\luquinta.REDMOND\\source\\repos\\TextClassificationAPI\\TextClassificationAPI\\Program.cs:line 22\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots, Code, Sample Projects**\r\nIf applicable, add screenshots, code snippets, or sample projects to help explain your problem.\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6226","RelatedDescription":"Closed issue \"Text Classification index out of range in self\" (#6226)"},{"Id":"1268748216","IsPullRequest":false,"CreatedAt":"2022-06-24T15:28:17","Actor":"luisquintanilla","Number":"6225","RawContent":null,"Title":"Text Classification Target 2 is out of bounds","State":"closed","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: 2.0.0-preview-22310.1, 0.20.0-preview-22310.1\r\n - .NET Version: .NET 6.0\r\n\r\n**Describe the bug**\r\n\r\nWhen training a model with [GitHub Issues dataset](https://raw.githubusercontent.com/dotnet/samples/main/machine-learning/tutorials/GitHubIssueClassification/Data/issues_train.tsv) with the following pipeline I get the error `Target 2 is out of bounds`\r\n\r\n**Pipeline**:\r\n\r\n```csharp\r\n//Initialize MLContext\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.Data;\r\nusing Microsoft.ML.TorchSharp;\r\n\r\nvar mlContext = new MLContext();\r\n\r\n// Load your data\r\nvar dataView = mlContext.Data.LoadFromTextFile<ModelInput>(@\"C:\\Datasets\\issues_train.tsv\", separatorChar: '\\t', hasHeader: true);\r\n\r\n//Define your training pipeline\r\nvar pipeline =\r\n\t\tmlContext.Transforms.Conversion.MapValueToKey(\"Label\",\"Area\")\r\n\t\t\t.Append(mlContext.MulticlassClassification.Trainers.TextClassification(sentence1ColumnName: \"Title\"))\r\n\t\t\t.Append(mlContext.Transforms.Conversion.MapKeyToValue(\"PredictedLabel\"));\r\n\r\n// Train the model\r\n\r\nConsole.WriteLine(\"Training model...\");\r\n\r\nvar model = pipeline.Fit(dataView);\r\n\r\nConsole.WriteLine(\"Model trained...\");\r\n\r\npublic class ModelInput\r\n{\r\n    [LoadColumn(0)]\r\n    public int Id { get; set; }\r\n\r\n    [LoadColumn(1)]\r\n    public string Area { get; set; }\r\n\r\n    [LoadColumn(2)]\r\n    public string Title { get; set; }\r\n\r\n    [LoadColumn(3)]\r\n    public string Description { get; set; }\r\n}\r\n\r\n```\r\n\r\n**Stacktrace**\r\n\r\n```\r\nSystem.Runtime.InteropServices.ExternalException\r\n  HResult=0x80004005\r\n  Message=Target 2 is out of bounds.\r\nException raised from nll_loss_out_frame at C:\\actions-runner\\_work\\pytorch\\pytorch\\builder\\windows\\pytorch\\aten\\src\\ATen\\native\\LossNLL.cpp:230 (most recent call first):\r\n00007FFFC6DDA4C200007FFFC6DDA460 c10.dll!c10::Error::Error [<unknown file> @ <unknown line number>]\r\n00007FFFC6DB3ED500007FFFC6DB3E60 c10.dll!c10::IndexError::IndexError [<unknown file> @ <unknown line number>]\r\n00007FFF898A1FB400007FFF8989CE60 torch_cpu.dll!at::native::multi_margin_loss_cpu_out [<unknown file> @ <unknown line number>]\r\n00007FFF898A58F300007FFF8989CE60 torch_cpu.dll!at::native::multi_margin_loss_cpu_out [<unknown file> @ <unknown line number>]\r\n00007FFF898A773400007FFF898A76D0 torch_cpu.dll!at::native::structured_nll_loss_forward_out_cpu::impl [<unknown file> @ <unknown line number>]\r\n00007FFF8A0EC3DE00007FFF8A0DB710 torch_cpu.dll!at::cpu::zero_ [<unknown file> @ <unknown line number>]\r\n00007FFF8A0B19AE00007FFF8A086730 torch_cpu.dll!at::cpu::bucketize_outf [<unknown file> @ <unknown line number>]\r\n00007FFF89CEB89000007FFF89C974F0 torch_cpu.dll!at::_ops::zeros_out::redispatch [<unknown file> @ <unknown line number>]\r\n00007FFF89E7308300007FFF89E72FE0 torch_cpu.dll!at::_ops::nll_loss_forward::redispatch [<unknown file> @ <unknown line number>]\r\n00007FFF8AC0AFA300007FFF8AA8A050 torch_cpu.dll!torch::autograd::GraphRoot::apply [<unknown file> @ <unknown line number>]\r\n00007FFF8ABD60F200007FFF8AA8A050 torch_cpu.dll!torch::autograd::GraphRoot::apply [<unknown file> @ <unknown line number>]\r\n00007FFF89E2698C00007FFF89E26800 torch_cpu.dll!at::_ops::nll_loss_forward::call [<unknown file> @ <unknown line number>]\r\n00007FFF898A7F0F00007FFF898A7E90 torch_cpu.dll!at::native::nll_loss [<unknown file> @ <unknown line number>]\r\n00007FFF8A26B6B200007FFF8A267680 torch_cpu.dll!at::compositeimplicitautograd::where [<unknown file> @ <unknown line number>]\r\n00007FFF8A24AA5D00007FFF8A21FD00 torch_cpu.dll!at::compositeimplicitautograd::broadcast_to [<unknown file> @ <unknown line number>]\r\n00007FFF89EF0C6F00007FFF89EF0AE0 torch_cpu.dll!at::_ops::nll_loss::call [<unknown file> @ <unknown line number>]\r\n00007FFF898A888F00007FFF898A7F80 torch_cpu.dll!at::native::nll_loss_nd [<unknown file> @ <unknown line number>]\r\n00007FFF8A26B6E200007FFF8A267680 torch_cpu.dll!at::compositeimplicitautograd::where [<unknown file> @ <unknown line number>]\r\n00007FFF8A24AACD00007FFF8A21FD00 torch_cpu.dll!at::compositeimplicitautograd::broadcast_to [<unknown file> @ <unknown line number>]\r\n00007FFF89D3142F00007FFF89D312A0 torch_cpu.dll!at::_ops::nll_loss_nd::call [<unknown file> @ <unknown line number>]\r\n00007FFF898A653F00007FFF898A6250 torch_cpu.dll!at::native::cross_entropy_loss [<unknown file> @ <unknown line number>]\r\n00007FFF8A26968100007FFF8A267680 torch_cpu.dll!at::compositeimplicitautograd::where [<unknown file> @ <unknown line number>]\r\n00007FFF8A24AB5200007FFF8A21FD00 torch_cpu.dll!at::compositeimplicitautograd::broadcast_to [<unknown file> @ <unknown line number>]\r\n00007FFF89ED6B2300007FFF89ED6980 torch_cpu.dll!at::_ops::cross_entropy_loss::call [<unknown file> @ <unknown line number>]\r\n00007FFF895CFC7100007FFF895CFC40 torch_cpu.dll!at::cross_entropy_loss [<unknown file> @ <unknown line number>]\r\n00007FFF9C2C008500007FFF9C2BFEE0 LibTorchSharp.DLL!THSNN_cross_entropy [<unknown file> @ <unknown line number>]\r\n00007FFF436CE068 <unknown symbol address> !<unknown symbol> [<unknown file> @ <unknown line number>]\r\n\r\n  Source=TorchSharp\r\n  StackTrace:\r\n   at TorchSharp.torch.CheckForErrors()\r\n   at TorchSharp.torch.nn.functional.<>c__DisplayClass100_0.<cross_entropy_loss>b__0(Tensor src, Tensor target)\r\n   at Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer.Trainer.TrainStep(DataViewRowCursor cursor, ValueGetter`1 sentence1Getter, ValueGetter`1 sentence2Getter, ValueGetter`1 labelGetter, List`1& inputTensors, List`1& targets)\r\n   at Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer.Trainer.Train(IDataView input)\r\n   at Microsoft.ML.TorchSharp.NasBert.TextClassificationTrainer.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Program.<Main>$(String[] args) in C:\\Users\\luquinta.REDMOND\\source\\repos\\TextClassificationAPI\\TextClassificationAPI\\Program.cs:line 22\r\n\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/6225","RelatedDescription":"Closed issue \"Text Classification Target 2 is out of bounds\" (#6225)"},{"Id":"1275370888","IsPullRequest":false,"CreatedAt":"2022-06-17T19:05:11","Actor":"vadd98","Number":"6233","RawContent":null,"Title":"Can't make image classification prediction on MacOS using a Tensorflow model","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: MacOS 12.4\r\n - ML.NET Version: Microsoft.ML 1.7.1\r\n - .NET Version: NET 6.0\r\n\r\n**Describe the bug**\r\nIt seems impossible to make prediction based on images using a Tensorflow model on Mac.\r\nI'm always getting this error:\r\n\r\n`Unhandled exception. System.IndexOutOfRangeException: Index was outside the bounds of the array.\r\n   at Microsoft.ML.Transforms.Image.ImagePixelExtractingTransformer.Mapper.<>c__DisplayClass5_0`1.<GetGetterCore>b__1(VBuffer`1& dst)\r\n   at Microsoft.ML.Transforms.TensorFlowTransformer.TensorValueGetterVec`1.GetTensor()\r\n   at Microsoft.ML.Transforms.TensorFlowTransformer.Mapper.UpdateCacheIfNeeded(Int64 position, ITensorValueGetter[] srcTensorGetters, String[] activeOutputColNames, OutputCache outputCache)\r\n   at Microsoft.ML.Transforms.TensorFlowTransformer.Mapper.<>c__DisplayClass11_0`1.<MakeGetter>b__4(VBuffer`1& dst)\r\n   at Microsoft.ML.Data.TypedCursorable`1.TypedRowBase.<>c__DisplayClass8_0`1.<CreateDirectVBufferSetter>b__0(TRow row)\r\n   at Microsoft.ML.Data.TypedCursorable`1.TypedRowBase.FillValues(TRow row)\r\n   at Microsoft.ML.Data.TypedCursorable`1.RowImplementation.FillValues(TRow row)\r\n   at Microsoft.ML.PredictionEngineBase`2.FillValues(TDst prediction)\r\n   at Microsoft.ML.PredictionEngine`2.Predict(TSrc example, TDst& prediction)\r\n   at Microsoft.ML.PredictionEngineBase`2.Predict(TSrc example)\r\n`\r\n\r\nThe exact same code with same model and same images to predict works flawlessly on Windows 10.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Train a Tensorflow Model (I trained the model using Python)\r\n2. Import the trained model in ML.NET\r\n3. Try to make a prediction starting from an image\r\n4. See error\r\n\r\n**Expected behavior**\r\nMake predictions without exceptions.\r\n\r\n**Screenshots, Code, Sample Projects**\r\nIf applicable, add screenshots, code snippets, or sample projects to help explain your problem.\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6233","RelatedDescription":"Open issue \"Can't make image classification prediction on MacOS using a Tensorflow model\" (#6233)"},{"Id":"1273827875","IsPullRequest":false,"CreatedAt":"2022-06-16T16:44:30","Actor":"LittleLittleCloud","Number":"6232","RawContent":null,"Title":"[Nice to have] having transformers to get date information from Datetime","State":"open","Body":"ModelBuilder just add support for `Datetime` type, in order to make the most use of this type, it would be helpful if ML.Net has API to extract specific date information from datetime column\r\n\r\n**Describe the solution you'd like**\r\n```csharp\r\nclass Input\r\n{\r\n    public Datetime date {get; set;]\r\n}\r\n\r\nvar pipeline = mlContext.Transformer.GetYearOutOfDate(\"year\", \"date\")\r\n                            .Append(mlContext.Transformer.GetDayOutOfDate(\"day\", \"date\")\r\n                            .Append(mlContext.Transformer.GetWeekdayOutOfDate(\"weekday\", \"date\")\r\n                            .Append(mlContext.Transformer.GetMonthOutOfDate(\"month\", \"date\");\r\nclass Output\r\n{\r\n    public Datetme date {get; set;}\r\n    public int Year {get; set;}\r\n    public int day {get; set;}\r\n    public string Month {get; set;} // Feb, Jan... \r\n    public string Weekday {get; set;} // Mon, Tue,..\r\n}\r\n\r\n```\r\n\r\n## What's more\r\nignore this issue if ML.Net already support that.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6232","RelatedDescription":"Open issue \"[Nice to have] having transformers to get date information from Datetime\" (#6232)"},{"Id":"1266763512","IsPullRequest":true,"CreatedAt":"2022-06-15T16:49:19","Actor":"LittleLittleCloud","Number":"6222","RawContent":null,"Title":"add SweepablePipeline","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\nThis PR implements `SweepablePipeline` according to spec in #6218 \r\n\r\nThe new `SweepablePipeline` will replace `MultiModelPipeline` and `SweepableEstimatorPipeline` and would be helpful in constructing complex sweepable pipeline as well as facilitating future optimization over sweeping method\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6222","RelatedDescription":"Closed or merged PR \"add SweepablePipeline\" (#6222)"},{"Id":"1271988059","IsPullRequest":false,"CreatedAt":"2022-06-15T10:02:51","Actor":"Arthur-Lee","Number":"6231","RawContent":null,"Title":"Dose Microsoft.ML support android?","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Android 11.0 (Simulator)\r\n - ML.NET Version:  ML.NET v1.7.1\r\n - .NET Version: [e.g. .NET 6.0]\r\n\r\n**Describe the bug**\r\nBuild MUAI project to refer Microsoft.ML library, and the ApplyOnnxModel will product onnxruntime DLLNotFoundException\r\n![image](https://user-images.githubusercontent.com/9337816/173799844-c7b08102-1e4f-4ee3-a41c-16c964b29bc3.png)\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n**Expected behavior**\r\nLoading Onnx model, and do the inference correctly.\r\n\r\n**Screenshots, Code, Sample Projects**\r\nIf applicable, add screenshots, code snippets, or sample projects to help explain your problem.\r\n\r\n**Additional context**\r\nThere seems to a big gap for me to use this library in mobile. Currently MAUI project recommends to use MauiAsset to include local resource and https://docs.microsoft.com/en-us/dotnet/maui/platform-integration/storage/file-system-helpers?tabs=windows#bundled-files method to retrieve the content.\r\n\r\nAll the methods only accept model path as input, however it's a little bit difficult for me to get model path in Android. I did a trick to read the bundle stream and write those bytes to cache folder and use the cache path as input.","Url":"https://github.com/dotnet/machinelearning/issues/6231","RelatedDescription":"Open issue \"Dose Microsoft.ML support android?\" (#6231)"},{"Id":"1269712903","IsPullRequest":true,"CreatedAt":"2022-06-14T22:26:29","Actor":"LittleLittleCloud","Number":"6228","RawContent":null,"Title":"Fix #2127 by adding \"Microsoft.ML.Transforms\" in using statement","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n- issue: https://github.com/dotnet/machinelearning-modelbuilder/issues/2127","Url":"https://github.com/dotnet/machinelearning/pull/6228","RelatedDescription":"Closed or merged PR \"Fix #2127 by adding \"Microsoft.ML.Transforms\" in using statement\" (#6228)"},{"Id":"1261773538","IsPullRequest":true,"CreatedAt":"2022-06-14T22:26:16","Actor":"dotnet-maestro[bot]","Number":"6216","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 97926d79-6b8b-4d32-c8db-08d9d479971c\r\n- **Build**: 20220613.1\r\n- **Date Produced**: June 13, 2022 8:26:39 AM UTC\r\n- **Commit**: 569a3f07467a9ebf55b78bbf92ab10b85e597819\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 7.0.0-beta.22276.1 to 7.0.0-beta.22313.1][2]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 7.0.0-beta.22276.1 to 7.0.0-beta.22313.1][2]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 7.0.0-beta.22276.1 to 7.0.0-beta.22313.1][2]\r\n  - **Microsoft.DotNet.SignTool**: [from 7.0.0-beta.22276.1 to 7.0.0-beta.22313.1][2]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 7.0.0-beta.22276.1 to 7.0.0-beta.22313.1][2]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 7.0.0-beta.22276.1 to 7.0.0-beta.22313.1][2]\r\n\r\n[2]: https://github.com/dotnet/arcade/compare/b8b67b2...569a3f0\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6216","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6216)"},{"Id":"1269993654","IsPullRequest":true,"CreatedAt":"2022-06-14T18:22:36","Actor":"michaelgsharp","Number":"6230","RawContent":null,"Title":"Mac CI Fixes.","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6230","RelatedDescription":"Closed or merged PR \"Mac CI Fixes.\" (#6230)"},{"Id":"1269976437","IsPullRequest":true,"CreatedAt":"2022-06-13T23:45:27","Actor":"michaelgsharp","Number":"6229","RawContent":null,"Title":"TorchSharp documentation and minor updates.","State":"closed","Body":"Adds some more documentation and updates some as well.\r\n\r\nnum classes no longer defaults to 2.\r\n\r\ntruncates text if longer than 512 tokens.","Url":"https://github.com/dotnet/machinelearning/pull/6229","RelatedDescription":"Closed or merged PR \"TorchSharp documentation and minor updates.\" (#6229)"},{"Id":"1267810988","IsPullRequest":true,"CreatedAt":"2022-06-10T23:24:43","Actor":"tarekgh","Number":"6223","RawContent":null,"Title":"Rename SentenceClassification to TextClassification","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/6223","RelatedDescription":"Closed or merged PR \"Rename SentenceClassification to TextClassification\" (#6223)"},{"Id":"1267847728","IsPullRequest":false,"CreatedAt":"2022-06-10T17:50:39","Actor":"luisquintanilla","Number":"6224","RawContent":null,"Title":"[DataFrame] Can't load wiki-detox dataset","State":"open","Body":"When I tried to load the [wikidetox dataset](https://raw.githubusercontent.com/dotnet/machinelearning/main/test/data/wikipedia-detox-250-line-data.tsv) using both `LoadCsv` and `LoadCsvFromString` I'm not able to because of the following error:\r\n\r\n```text\r\nSystem.Exception: Line 83 cannot be parsed with the current Delimiters.\r\n   at Microsoft.Data.Analysis.TextFieldParser.ParseDelimitedLine()\r\n   at Microsoft.Data.Analysis.DataFrame.ReadCsvLinesIntoDataFrame(WrappedStreamReaderOrStringReader wrappedReader, Char separator, Boolean header, String[] columnNames, Type[] dataTypes, Int64 numberOfRowsToRead, Int32 guessRows, Boolean addIndexColumn)\r\n   at Microsoft.Data.Analysis.DataFrame.LoadCsv(Stream csvStream, Char separator, Boolean header, String[] columnNames, Type[] dataTypes, Int64 numberOfRowsToRead, Int32 guessRows, Boolean addIndexColumn, Encoding encoding)\r\n   at Microsoft.Data.Analysis.DataFrame.LoadCsv(String filename, Char separator, Boolean header, String[] columnNames, Type[] dataTypes, Int32 numRows, Int32 guessRows, Boolean addIndexColumn, Encoding encoding)\r\n   at Submission#16.<<Initialize>>d__0.MoveNext()\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.CodeAnalysis.Scripting.ScriptExecutionState.RunSubmissionsAsync[TResult](ImmutableArray`1 precedingExecutors, Func`2 currentExecutor, StrongBox`1 exceptionHolderOpt, Func`2 catchExceptionOpt, CancellationToken cancellationToken)\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/46974588/173123143-40766624-aa28-4fbd-a51c-f6bd04f88727.png)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6224","RelatedDescription":"Open issue \"[DataFrame] Can't load wiki-detox dataset\" (#6224)"},{"Id":"1262496009","IsPullRequest":true,"CreatedAt":"2022-06-09T23:26:59","Actor":"LittleLittleCloud","Number":"6217","RawContent":null,"Title":"Add AutoMLExperimentSetting to CreateAutoMLExperiment","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6217","RelatedDescription":"Closed or merged PR \"Add AutoMLExperimentSetting to CreateAutoMLExperiment\" (#6217)"},{"Id":"1262566169","IsPullRequest":true,"CreatedAt":"2022-06-09T16:21:29","Actor":"LittleLittleCloud","Number":"6218","RawContent":null,"Title":"add spec for sweepable pipeline","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6218","RelatedDescription":"Closed or merged PR \"add spec for sweepable pipeline\" (#6218)"},{"Id":"1265580257","IsPullRequest":false,"CreatedAt":"2022-06-09T04:35:42","Actor":"jirapongse-refinitiv","Number":"6221","RawContent":null,"Title":"DataFrame.LoadCSV converts 289203891 to System.Single and the data is rounded to 289203900.","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 10\r\n - ML.NET Version: Microsoft.Data.Analysis 0.19.1\r\n - .NET Version: .NET 5.0\r\n\r\n**Describe the bug**\r\nDataFrame.LoadCSV converts 289203891 to System.Single and the data is rounded to 289203900.\r\n\r\nI use the DataFrame.LoadCSV function to load the CSV file to create a data frame. The content in the CSV file is:\r\n\r\n```\r\nInstrument,Value,Date\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/16/2022 12:00:00 AM\r\nTEST,289203891,5/13/2022 12:00:00 AM\r\n```\r\nRun the following code:\r\n\r\n```\r\nvar df = DataFrame.LoadCsv(\"test.csv\");\r\n            Console.WriteLine(df);\r\n            Console.WriteLine(df.Info());\r\n```\r\nThe output is:\r\n```\r\nnstrumentValue     Date\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/16/2022 12:00:00 AM\r\nTEST      289203900 5/13/2022 12:00:00 AM\r\n\r\nInfo      InstrumentValue     Date\r\nDataType  System.StringSystem.SingleSystem.DateTime\r\nLength (excluding null values)20        20        20\r\n```\r\n\r\nFrom the output, DataFrame.LoadCSV uses Single.System to store the 289203891 which causes the data to be rounded to 289203900.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create the test.csv file that contains the following data\r\n\r\n```\r\nInstrument,Value,Date\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/17/2022 12:00:00 AM\r\nTEST,289203891,5/16/2022 12:00:00 AM\r\nTEST,289203891,5/13/2022 12:00:00 AM\r\n```\r\n3. Run the following code with .NET 5.0\r\n\r\n```\r\nusing System;\r\nusing Microsoft.Data.Analysis;\r\nnamespace ConsoleApp18\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Hello World!\");\r\n            var df = DataFrame.LoadCsv(\"test.csv\");\r\n            Console.WriteLine(df);\r\n            Console.WriteLine(df.Info());\r\n        }\r\n    }\r\n}\r\n```\r\n5. Check the output the 289203891 is rounded to 289203900\r\n\r\n```\r\nHello World!\r\nInstrumentValue     Date\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/17/2022 12:00:00 AM\r\nTEST      289203900 5/16/2022 12:00:00 AM\r\nTEST      289203900 5/13/2022 12:00:00 AM\r\n\r\nInfo      InstrumentValue     Date\r\nDataType  System.StringSystem.SingleSystem.DateTime\r\nLength (excluding null values)20        20        20\r\n\r\n```\r\n\r\n\r\n\r\n**Expected behavior**\r\nThe data in the DataFrame must not be rounded. \r\n\r\n\r\n**Screenshots, Code, Sample Projects**\r\n```\r\nusing System;\r\nusing Microsoft.Data.Analysis;\r\nnamespace ConsoleApp18\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            Console.WriteLine(\"Hello World!\");\r\n            var df = DataFrame.LoadCsv(\"test.csv\");\r\n            Console.WriteLine(df);\r\n            Console.WriteLine(df.Info());\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n**Additional context**\r\nThe application can load many CSV content so it is unable to determine the data types of columns in advance. I need to use the guessing feature in the DataFrame.LoadCSV to determine the correct data types. \r\n","Url":"https://github.com/dotnet/machinelearning/issues/6221","RelatedDescription":"Open issue \"DataFrame.LoadCSV converts 289203891 to System.Single and the data is rounded to 289203900.\" (#6221)"},{"Id":"1264535200","IsPullRequest":false,"CreatedAt":"2022-06-08T10:31:58","Actor":"landonzeng","Number":"6219","RawContent":null,"Title":"How do I use the ML.NET API to implement something like the model builder effect in VS2022？","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nHow can I use the ML.NET API to achieve a model generator effect similar to the one in VS2022. I did not find in the relevant documentation\r\n\r\n**Describe the solution you'd like**\r\nI want to dynamically implement a web page like the UI of the .mbconfig window created by the model builder in VS2022 or VS2019, where the user selects the data in the business database for forecasting operations.\r\n\r\n**Describe alternatives you've considered**\r\n\r\n\r\n**Additional context**\r\nLike this UI, is it possible for the developer to implement the content of the interface by means of API calls?\r\n![1](https://user-images.githubusercontent.com/7336781/172595403-8824135b-e9ad-4607-a101-74fcc0608c4c.png)\r\n![2](https://user-images.githubusercontent.com/7336781/172595414-c9762b2d-059c-469b-b3f0-57f096a29073.png)\r\n![3](https://user-images.githubusercontent.com/7336781/172595427-bfeb122f-d5e4-4136-8582-8c7abbcab914.png)\r\n![4](https://user-images.githubusercontent.com/7336781/172595434-70576b34-f24f-4206-8f67-6c9975efdce8.png)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6219","RelatedDescription":"Open issue \"How do I use the ML.NET API to implement something like the model builder effect in VS2022？\" (#6219)"},{"Id":"1261170081","IsPullRequest":false,"CreatedAt":"2022-06-05T21:57:38","Actor":"sretz","Number":"6215","RawContent":null,"Title":"FastForest multithreading","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 10 19044.1706\r\n - ML.NET Version: 1.7.1 x64\r\n - .NET Version: v4.8 x64\r\n\r\n**Describe the bug**\r\nI'm running tests with FastForest on machine with 2 processors with 12 cores each with a total of 48 threads, the program running the test is using 48 threads, but the highest CPU the program gets is 14%, which 7 maybe 8 threads. This leads me to believe the FastForest training algo is doing some locking.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create as many threads as the machine has\r\n2. var trainer = context.BinaryClassification.Trainers.FastForest(label, numberOfTrees: trees);\r\n3. var trained = trainer.Fit(inputs);\r\n4. look at CPU usage\r\n\r\n**Expected behavior**\r\nCPU usage at 100% not significantly less\r\n\r\n**Screenshots, Code, Sample Projects**\r\n![image](https://user-images.githubusercontent.com/80936576/172072254-e8693ed3-8464-48f7-af76-763f6bada752.png)\r\n![image](https://user-images.githubusercontent.com/80936576/172072281-c7294eee-4174-4199-afd7-f27c72d4c711.png)\r\n\r\n\r\n**Additional context**\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6215","RelatedDescription":"Open issue \"FastForest multithreading\" (#6215)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-07-08T03:30:24.9486426Z","RunDurationInMilliseconds":657}