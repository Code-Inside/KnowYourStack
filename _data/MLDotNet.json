{"Data":{"GitHub":{"Issues":[{"Id":"747121141","IsPullRequest":false,"CreatedAt":"2020-11-20T04:02:42","Actor":"frankhaugen","Number":"5501","RawContent":null,"Title":"Absorb Accord.net as a whole or in parts","State":"open","Body":"[Accord.net](https://github.com/accord-net/framework), (An ML library for .net), has been archived, and will no longer be maintained. The maintainer has done so partly because of ML.net deprecating Accord as a ML framework for .net. (and apparently also because of nasty researchers making fun of people using C# for Machine Learning)\r\n\r\nThe ML.net -team should absorb it, (fork it into dotnet, and move the components piece-by-piece into ML.net), because there are a lot of great stuff there that could really benefit ML.net's future, that now is just adrift, without new releases or active development.\r\n\r\nIt would be a shame for it all to go to \"waste\" or fall into obscurity","Url":"https://github.com/dotnet/machinelearning/issues/5501","RelatedDescription":"Open issue \"Absorb Accord.net as a whole or in parts\" (#5501)"},{"Id":"742295988","IsPullRequest":true,"CreatedAt":"2020-11-20T00:38:38","Actor":"antoniovs1029","Number":"5485","RawContent":null,"Title":"Handle arcade IntegrationTests","State":"closed","Body":"Handle arcade IntegrationTests\r\n\r\n- [x] Currently working locally on my computer\r\n\r\n- [ ] Checking if it works on CI\r\n\r\n- [ ] Still need to see how to make it work with the NightlyBuild CI.","Url":"https://github.com/dotnet/machinelearning/pull/5485","RelatedDescription":"Closed or merged PR \"Handle arcade IntegrationTests\" (#5485)"},{"Id":"745972773","IsPullRequest":true,"CreatedAt":"2020-11-19T23:46:13","Actor":"michaelgsharp","Number":"5496","RawContent":null,"Title":"Fixes for many of the CI builds.","State":"closed","Body":"Fixes many of the arcade CI builds. Still need to work on x86 and netfx. ","Url":"https://github.com/dotnet/machinelearning/pull/5496","RelatedDescription":"Closed or merged PR \"Fixes for many of the CI builds.\" (#5496)"},{"Id":"745150759","IsPullRequest":true,"CreatedAt":"2020-11-19T18:38:54","Actor":"Lynx1820","Number":"5493","RawContent":null,"Title":"Arcade Testing","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5493","RelatedDescription":"Closed or merged PR \"Arcade Testing\" (#5493)"},{"Id":"746829805","IsPullRequest":true,"CreatedAt":"2020-11-19T18:38:33","Actor":"Lynx1820","Number":"5500","RawContent":null,"Title":"Testing Arcade","State":"open","Body":"\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5500","RelatedDescription":"Open PR \"Testing Arcade\" (#5500)"},{"Id":"746035055","IsPullRequest":false,"CreatedAt":"2020-11-19T18:24:42","Actor":"rebecca-burwei","Number":"5497","RawContent":null,"Title":"Are ML .Net models deterministic?","State":"closed","Body":"Some models are inherently stochastic, others are deterministic. Are ML .Net models deterministic? In other words, given the same input, will an ML .Net model always return the same output/prediction? If so, to how many decimal places is this prediction deterministic?","Url":"https://github.com/dotnet/machinelearning/issues/5497","RelatedDescription":"Closed issue \"Are ML .Net models deterministic?\" (#5497)"},{"Id":"745686066","IsPullRequest":false,"CreatedAt":"2020-11-19T18:03:08","Actor":"BalsamIbrahim","Number":"5495","RawContent":null,"Title":"Unable to load DLL 'CpuMathNative': The specified module could not be found","State":"closed","Body":"salam all\r\nI face this problem when I use Microsoft.ML to create clustering \r\nI hope to help me \r\nSystem.DllNotFoundException: 'Unable to load DLL 'CpuMathNative': The specified module could not be found. (Exception from HRESULT: 0x8007007E)'\r\nthank you \r\n![image](https://user-images.githubusercontent.com/34779906/99539707-39c68e80-29b7-11eb-8e28-88fdf3eed323.png)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5495","RelatedDescription":"Closed issue \"Unable to load DLL 'CpuMathNative': The specified module could not be found\" (#5495)"},{"Id":"746142442","IsPullRequest":true,"CreatedAt":"2020-11-19T18:02:31","Actor":"frank-dong-ms","Number":"5499","RawContent":null,"Title":"fix CpuMathNative dll not found error for netfx project","State":"closed","Body":"fix #5495 \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5499","RelatedDescription":"Closed or merged PR \"fix CpuMathNative dll not found error for netfx project\" (#5499)"},{"Id":"746095573","IsPullRequest":false,"CreatedAt":"2020-11-18T22:51:32","Actor":"samsp-msft","Number":"5498","RawContent":null,"Title":"Survey: Repo contribution experience, Fall 2020","State":"open","Body":"We normally focus on how to improve the product, but we’re also turning our focus to improving the open source project. Periodically we are running a survey to collect feedback on your experience working with our repos. We did one back in May, and as its been about 6 months, its about time for another. We’ve created a survey to better understand your individual experience of participating and contributing in this project.\r\n\r\nWe would appreciate your feedback so we can work to address shortcomings and missed opportunities. If you don’t supply contact details, then responses will be anonymous.\r\n\r\n[Survey](https://www.surveymonkey.com/r/92RLF7R?Source=dotnet/machinelearning)\r\n\r\nThank you for your time!","Url":"https://github.com/dotnet/machinelearning/issues/5498","RelatedDescription":"Open issue \"Survey: Repo contribution experience, Fall 2020\" (#5498)"},{"Id":"745343460","IsPullRequest":true,"CreatedAt":"2020-11-18T05:27:55","Actor":"frank-dong-ms","Number":"5494","RawContent":null,"Title":"fix official builds in arcade","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5494","RelatedDescription":"Open PR \"fix official builds in arcade\" (#5494)"},{"Id":"745118863","IsPullRequest":true,"CreatedAt":"2020-11-17T23:01:00","Actor":"Lynx1820","Number":"5492","RawContent":null,"Title":"Testing Arcade Code Coverage","State":"closed","Body":"\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5492","RelatedDescription":"Closed or merged PR \"Testing Arcade Code Coverage\" (#5492)"},{"Id":"745080896","IsPullRequest":false,"CreatedAt":"2020-11-17T20:55:40","Actor":"nnoradie","Number":"5491","RawContent":null,"Title":"Unable to detect anomaly in data that appears anomalous","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: \r\n- **.NET Version (eg., dotnet --info)**: \r\n![image](https://user-images.githubusercontent.com/69877427/99447299-0828c700-28d4-11eb-8663-c0f165631be9.png)\r\n\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nAttempted to detect anomalies on time series data\r\n\r\n- **What happened?**\r\nNo anomalies were detected\r\n![image](https://user-images.githubusercontent.com/69877427/99441627-fee82c00-28cc-11eb-8b2c-069f0cca148e.png)\r\n![image](https://user-images.githubusercontent.com/69877427/99446948-edeee900-28d3-11eb-90f0-d177e1e02e4a.png)\r\n\r\n\r\n- **What did you expect?**\r\nAn anomaly on either the 1st or 2nd data point\r\n\r\n### Source code / logs\r\n[no_anomalies_detected_data.zip](https://github.com/dotnet/machinelearning/files/5556169/no_anomalies_detected_data.zip)\r\n\r\nSensitivity=100, SeasonalPeriodForAnomalyDetection=-1 (we set it to 0 when it is < 0), Threshold=0.1\r\n![image](https://user-images.githubusercontent.com/69877427/99440684-c431c400-28cb-11eb-90c5-dcc1d9dccb2f.png)\r\n\r\n\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5491","RelatedDescription":"Open issue \"Unable to detect anomaly in data that appears anomalous\" (#5491)"},{"Id":"743222117","IsPullRequest":false,"CreatedAt":"2020-11-17T02:22:28","Actor":"JoelShen123","Number":"5489","RawContent":null,"Title":"Could not load file from Consume Model even after changing to sdk-style","State":"closed","Body":"**Versions**\r\nMicrosoft.ML - Version=\"1.5.0-preview2\". \r\nVisual Studio 2019\r\nTarget Framework: Class Library ( .NET Framework 4.7)\r\n\r\n**Bug description**\r\n\"Could not load file\" error thrown from \"ModelOperationsCatalog.Load()\".\r\n\r\n**Steps to Reproduce**\r\n1. Follow the steps here: https://dotnet.microsoft.com/learn/ml-dotnet/get-started-tutorial/create\r\n2. Include the auto generated \"MLModel.zip\" into the project file as an \"Embedded Resource\".\r\n3. Read the \"MLModel.zip\" into Stream and pass that in into the mlContext.Model.Load(theMLModelZipStream, null)\"\r\n`string resourceName = \"IfcPluginML.Model.MLModel.zip\";`\r\n`Stream modelFile = System.Reflection.Assembly.GetExecutingAssembly().GetManifestResourceStream(resourceName)`\r\n`ITransformer mlModel = mlContext.Model.Load(modelFile , out var modelInputSchema);`\r\n4. Compile into .dll and run.\r\n5. Error is thrown.\r\n\r\n**Expected Experience**\r\nFile is read successfully.\r\n\r\n**Actual Experience**\r\nCould not read file:\r\n\r\n![image](https://user-images.githubusercontent.com/37243889/99022804-46ee1280-259e-11eb-8cec-e32c3663096d.png)\r\n\r\nI have checked that the \r\n`Stream modelFile = GetEmbeddedResourceStream(resourceName);  // returns \"System.IO.UnmanagedMemoryStream\"`\r\nso it is definitely not null.\r\n\r\nPutting the full file path produces the same error too:\r\n`string modelPath = @\"C:\\Users\\User\\AppData\\Local\\Temp\\MLVSTools\\IfcPluginML\\IfcPluginML.Model\\MLModel.zip\";`\r\n`ITransformer mlModel = mlContext.Model.Load(modelPath, out var modelInputSchema);`\r\n\r\n**Additional Context**\r\nI have referenced this post: https://github.com/dotnet/machinelearning-modelbuilder/issues/274\r\nHowever, even after changing the target framework of ProjectNameML.Model.csproj to an sdk style:\r\n![image](https://user-images.githubusercontent.com/37243889/99023420-8ec16980-259f-11eb-8899-35699780ca2f.png)\r\nThe error persists.\r\n\r\nHow my software works:\r\n1. There is a main project (Class Library .NET Framework 4.7).\r\n2. The main project calls `ConsumeModel.Predict(input);`\r\n3. ConsumeModel throws the error.\r\n\r\n**It works when:**\r\n1. The auto generated Program.cs in ProjectNameML.ConsoleApp (.NET Core 3.1) is ran.\r\n2. Program.cs calls `ConsumeModel.Predict(input);`\r\n3. Runs perfectly.\r\n\r\nThanks for your help 💯 \r\n","Url":"https://github.com/dotnet/machinelearning/issues/5489","RelatedDescription":"Closed issue \"Could not load file from Consume Model even after changing to sdk-style\" (#5489)"},{"Id":"743345395","IsPullRequest":false,"CreatedAt":"2020-11-16T10:43:06","Actor":"whitmark","Number":"5490","RawContent":null,"Title":"AutoML: How to remove/ignore columns returned by InferColumns API","State":"closed","Body":"### System information\r\n\r\n- Windows 10 Pro 10.0.19041\r\n- .NET 5.0 \r\n- Microsoft.ML.AutoML 0.17.2\r\n\r\n### Issue\r\n\r\n- I want to be able to inference columns loaded from a .csv file but then remove/ignore select columns from AutoML experiment.  My attempt to remove these columns in columnInformation does not appear to work as all columns loaded are used.\r\n- I don't necessarily want to remove the columns from the IDataView rather I just want to exclude them from the experiment.  How can this be accomplished?\r\n- In the attached exhibits I show part of the IDataView schema with the columns (3) I want to remove/ignore and the columnInformation properties after attempting to remove them.\r\n![IDataView Schema](https://user-images.githubusercontent.com/8396992/99196430-50bc7500-275a-11eb-8d0e-279fec1e4df5.png)\r\n![columnInformation properties](https://user-images.githubusercontent.com/8396992/99196431-53b76580-275a-11eb-9b16-d59fe836766c.png)\r\n\r\n### Source code / logs\r\n```\r\n    ...\r\n    MLContext mlContext = new MLContext();\r\n\r\n    // Infer columns in the dataset with AutoML\r\n    var columnInference = InferColumns(mlContext);\r\n\r\n    // Load data from files using inferred columns\r\n    LoadData(mlContext, columnInference);\r\n\r\n    // Run an AutoML experiment on the dataset\r\n    var experimentResult = RunAutoMLExperiment(mlContext, columnInference);\r\n    ...\r\n\r\n    private static void LoadData(MLContext mlContext, ColumnInferenceResults columnInference)\r\n    {\r\n        TextLoader textLoader = mlContext.Data.CreateTextLoader(columnInference.TextLoaderOptions);\r\n        TrainDataView = textLoader.Load(TrainDataPath);\r\n    }\r\n\r\n    private static ExperimentResult<BinaryClassificationMetrics> RunAutoMLExperiment(MLContext mlContext, ColumnInferenceResults columnInference)\r\n    {\r\n       // Customize column information returned by InferColumns API\r\n       ColumnInformation columnInformation = columnInference.ColumnInformation;\r\n       columnInformation.CategoricalColumnNames.Remove(\"rUpDn\");\r\n       columnInformation.NumericColumnNames.Remove(\"rDE_MaxProf\");\r\n       columnInformation.TextColumnNames.Remove(\"rD_LKDateTime\");\r\n\r\n       // invoke after each model it produces and evaluates.\r\n       var progressHandler = new Progress<RunDetail<BinaryClassificationMetrics>>();\r\n\r\n       // Initialize a cancellation token source to stop the experiment.\r\n       var cts = new CancellationTokenSource();\r\n\r\n       // Create experiment settings\r\n       var experimentSettings = CreateExperimentSettings(mlContext, cts);\r\n\r\n       // Run AutoML regression experiment\r\n       var experiment = mlContext.Auto().CreateBinaryClassificationExperiment(experimentSettings);\r\n       ExperimentResult<BinaryClassificationMetrics> experimentResult = experiment.Execute(TrainDataView, columnInformation, null, progressHandler: progressHandler);\r\n\r\n       // Print top models found by AutoML\r\n       PrintTopModels(experimentResult);\r\n\r\n       return experimentResult;\r\n   }\r\n    private static BinaryExperimentSettings CreateExperimentSettings(MLContext mlContext, CancellationTokenSource cts)\r\n    {\r\n        var experimentSettings = new BinaryExperimentSettings();\r\n        experimentSettings.MaxExperimentTimeInSeconds = 3600;\r\n        experimentSettings.CancellationToken = cts.Token;\r\n\r\n        // Set the metric that AutoML will try to optimize over the course of the experiment.\r\n        //experimentSettings.OptimizingMetric = RegressionMetric.RootMeanSquaredError;\r\n        experimentSettings.OptimizingMetric = BinaryClassificationMetric.Accuracy;\r\n\r\n        // Set the cache directory to null.\r\n        // This will cause all models produced by AutoML to be kept in memory \r\n        // instead of written to disk after each run, as AutoML is training.\r\n         // (Please note: for an experiment on a large dataset, opting to keep all \r\n        // models trained by AutoML in memory could cause your system to run out \r\n        // of memory.)\r\n        experimentSettings.CacheDirectory = null;\r\n\r\n         // Clear trainers and add LightGbm\r\n         //experimentSettings.Trainers.Clear();\r\n         //experimentSettings.Trainers.Add(BinaryClassificationTrainer.LightGbm);\r\n\r\n         return experimentSettings;\r\n     }\r\n\r\n```\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5490","RelatedDescription":"Closed issue \"AutoML: How to remove/ignore columns returned by InferColumns API\" (#5490)"},{"Id":"742660045","IsPullRequest":true,"CreatedAt":"2020-11-13T17:57:55","Actor":"Lynx1820","Number":"5488","RawContent":null,"Title":"Added Forward Compatibility Error","State":"open","Body":"To resolve #5311. \r\n\r\nIt was suggested we either throw an error or print out a warning if the model is trained with a newer mlnet version than the version reading the model. Given that warnings get logged and a model might still have a silent bug, I'm proposing that we throw an error anytime the model is trained with a newer mlnet version than the one reading the model. \r\n","Url":"https://github.com/dotnet/machinelearning/pull/5488","RelatedDescription":"Open PR \"Added Forward Compatibility Error\" (#5488)"},{"Id":"742568481","IsPullRequest":false,"CreatedAt":"2020-11-13T16:08:10","Actor":"evgeny1984","Number":"5487","RawContent":null,"Title":"Help to consume simple linear integration TensorFlow model needed","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10.0.19041 64 Bit\r\n- **.NET Version (eg., dotnet --info)**: Version:   5.0.100\r\n\r\n### Issue\r\n  Please help me by providing the solution that I can solve this problem. \r\n- **What did you do?**\r\nI created a simple Python script in Jupyter Notebook for the data set consisting of 8 rows. Successfuly trained and evaluated the model and then exported it. The model can be loaded but I cannot configure the pipeline to make prediction. \r\n- **What happened?**\r\nNow I try to consume the model with ML.NET Console dotnet core 3.1 application.\r\n- **What did you expect?**\r\nCannot consume the model, because not able to create the proper pipeline. \r\nCannot access the properties in GetModelShema as in the microsoft tutorial, because they dont exist. (how can I define them in my model (\"Features\"m \"Prediction/Softmax\")) that they are labeled and recognized?\r\n\r\n### Source code / logs\r\n[project&jupyter_notebook.zip](https://github.com/dotnet/machinelearning/files/5537990/project.jupyter_notebook.zip)","Url":"https://github.com/dotnet/machinelearning/issues/5487","RelatedDescription":"Open issue \"Help to consume simple linear integration TensorFlow model needed\" (#5487)"},{"Id":"742390574","IsPullRequest":false,"CreatedAt":"2020-11-13T11:44:01","Actor":"CarolusM","Number":"5486","RawContent":null,"Title":"Load Tensorflow model from stream","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10 Enterprise 64 bits\r\n- **.NET Version (eg., dotnet --info)**:  .NET Core 3.1\r\n\r\n### Question\r\n\r\nIs there a way to load a Tensorflow model from a memory stream instead of a filepath? Currently the only way I managed to load a TF model is by calling:\r\n`public static TensorFlowModel LoadTensorFlowModel(this ModelOperationsCatalog catalog, string modelLocation);`\r\n\r\nHowever, if I want to load a ML.NET trained model, I can do it by calling:\r\n`public ITransformer Load(string filePath, out DataViewSchema inputSchema);`\r\nor\r\n`public ITransformer Load(Stream stream, out DataViewSchema inputSchema);`\r\n\r\nI am looking for a method like the latter one but for TF models. Does anybody know if something like that is already implemented? How could I load a TF model without the need of having the .pb file in disk?\r\nWill such a method be implemented in a future release?\r\n\r\nThanks for your help,\r\nCarlos.\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5486","RelatedDescription":"Open issue \"Load Tensorflow model from stream\" (#5486)"},{"Id":"741839600","IsPullRequest":false,"CreatedAt":"2020-11-12T18:47:42","Actor":"masgh021","Number":"5484","RawContent":null,"Title":"Use custom Onnx model in place of Onnx model found on Object Detection sample","State":"open","Body":"I have a digit detection model in custom vision and it is detecting digit Very good at cloud https://www.customvision.ai/.\r\nAfter i export it local (onnx) and i checked with ml.net\r\nour accuracy decrease and it does not recognize object . in most images .\r\nnote : my objects are small , character size like ocr,\r\nplease help me.","Url":"https://github.com/dotnet/machinelearning/issues/5484","RelatedDescription":"Open issue \"Use custom Onnx model in place of Onnx model found on Object Detection sample\" (#5484)"},{"Id":"740531627","IsPullRequest":false,"CreatedAt":"2020-11-11T18:18:50","Actor":"xsoheilalizadeh","Number":"5483","RawContent":null,"Title":"How to use neural network in ML.NET?","State":"closed","Body":"Is there any concept in ML.NET to imply the NN?\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5483","RelatedDescription":"Closed issue \"How to use neural network in ML.NET?\" (#5483)"},{"Id":"739544273","IsPullRequest":true,"CreatedAt":"2020-11-10T17:38:57","Actor":"mstfbl","Number":"5482","RawContent":null,"Title":"Fixing failing Arcade Windows Builds","State":"closed","Body":"Fixed the `%20` space error causing Arcade Windows builds to fail, added conditional space variable to be `' '` in Linux/MacOS and `'%20'` on Windows.","Url":"https://github.com/dotnet/machinelearning/pull/5482","RelatedDescription":"Closed or merged PR \"Fixing failing Arcade Windows Builds\" (#5482)"},{"Id":"736795562","IsPullRequest":false,"CreatedAt":"2020-11-09T18:40:55","Actor":"jigarhshah17","Number":"5476","RawContent":null,"Title":"Use runtime /dynamic created class object in prediction engine.","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**:\r\nwindows 7\r\n- **.NET Version (eg., dotnet --info)**: \r\n>  .NET 4.6.1 ML.NET 1.5.2\r\n### Issue\r\n\r\n- **What did you do?**\r\nUse runtime /dynamic created class object in prediction engine.\r\n\r\nI want to predict different value, so I have created 25+ model\r\nUsing those models, I predict different values.\r\nBut each time I need to create class object with data and pass it to prediction engine to predict data \r\nSo, every time I need to change in code. So, I take approach to create class object on run time/ Dynamic with data and pass it to prediction engine but it will generate exception. Colum name not found in schema\r\n\r\n\r\n- **What happened?**\r\n- **What did you expect?**\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5476","RelatedDescription":"Closed issue \"Use runtime /dynamic created class object in prediction engine.\" (#5476)"},{"Id":"738884655","IsPullRequest":false,"CreatedAt":"2020-11-09T07:12:23","Actor":"cgyqu","Number":"5481","RawContent":null,"Title":"TimeSeries forecasting not work well ","State":"open","Body":"I use the following data format for time series forecasting.The data is on the half-hour dimension,and the forecasted column is `NextTimeCount`. \r\n\r\nUse data from the past 24 hours or more to predict the next hour data.\r\nNo matter how adjust the `windowSize` paramter, there is no good result.\r\n```\r\nYear,Time,RealCount,DropCount,TurnOnRate,ServiceRate,ProductRate,UsageRate,ShareRate,AHT,RealManCount,NextTimeCount,PreTimeCount,Month,Day,TotalCount,DayOfWeek\r\n2020,0,130,4,0.97,0.96,0.72,0.96,0.75,3.97,26,116,0,9,1,134,2\r\n2020,30,115,1,0.99,0.98,0.76,0.97,0.78,4.7,26,96,134,9,1,116,2\r\n2020,60,84,12,0.86,0.85,0.7,0.95,0.74,3.83,15,61,116,9,1,96,2\r\n2020,90,61,0,1,1,0.67,0.94,0.71,4.34,15,57,96,9,1,61,2\r\n2020,120,53,4,0.92,0.92,0.81,0.96,0.85,4.63,10,54,61,9,1,57,2\r\n```\r\nEven the predictions in the [example](https://github.com/dotnet/machinelearning-samples/tree/master/samples/csharp/end-to-end-apps/Forecasting-Sales)  are not very accurate,The prediction number is only half of regression model.\r\n![image](https://user-images.githubusercontent.com/6649024/98509295-eb6d0d80-229b-11eb-9931-b6a6df3d0483.png)\r\n\r\nAny suggestion?","Url":"https://github.com/dotnet/machinelearning/issues/5481","RelatedDescription":"Open issue \"TimeSeries forecasting not work well \" (#5481)"},{"Id":"738440404","IsPullRequest":false,"CreatedAt":"2020-11-08T10:58:54","Actor":"halcwb","Number":"5480","RawContent":null,"Title":"Suddenly unable to load DLL 'CpuMathNative' on F#","State":"open","Body":"### System information\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.401\r\n Commit:    5b6f5e5005\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.19041\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.401\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.7\r\n  Commit:  fcfdef8d6b\r\n\r\n.NET Core SDKs installed:\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.402 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.102 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n - Microsoft.ML 1.5.2\r\n - Microsoft.ML.FastTree 1.5.2\r\n - Microsoft.ML.Mkl.Components 1.5.2\r\n - Newtonsoft.Json 12.0.3\r\n - System.Threading.Channels 4.7.1\r\n - System.Memory 4.5.4\r\n - System.CodeDom 4.7.0\r\n - System.Reflection.Emit.Lightweight 4.7.0\r\n - Microsoft.ML.CpuMath 1.5.2\r\n - Microsoft.ML.DataView 1.5.2\r\n - Microsoft.ML.Mkl.Redist 1.5.2\r\n - System.Collections.Immutable 1.7.1\r\n - System.Reflection.Emit.ILGeneration 4.7.0\r\n - System.Threading.Tasks.Extensions 4.5.4\r\n - System.Runtime.CompilerServices.Unsafe 4.7.1\r\n - System.Buffers 4.5.1\r\n - System.Numerics.Vectors 4.5.0\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI tried to run a trainer `context.BinaryClassification.Trainers.SdcaLogisticRegression`. \r\n- **What happened?**\r\nWith the exact same code, on the exact same machine without any changes, first it ran without problems, then, suddenly I get:\r\n\r\n> Unable to load DLL 'CpuMathNative' or one of its dependencies\r\n\r\nI am absolutely sure that before I was able to use that trainer. \r\nI am absolutely sure that I did this using netstanderd2.0\r\nI also tried setting to netcoreapp3.1 and net72, with the same error.\r\n\r\nI DID NOT EVEN RESTART BUT THIS HAPPENED WHILE WORKING!!\r\n\r\nThis is weird???\r\n\r\n- **What did you expect?**\r\n\r\nTo be able to continue to run the same code on the same machine.\r\n\r\n### Source code / logs\r\n\r\n**Note** The below code DID RUN \r\n\r\n```fsharp\r\nopen Microsoft.ML\r\nopen Microsoft.ML.Data\r\n\r\nlet printDataMetrics (trainData : Data seq) (testData : Data seq) =\r\n    printfn \"*       Metrics for train and test data      \" \r\n    printfn \"*-----------------------------------------------------------\"\r\n    printfn \"*       Model trained with %i records\" (trainData |> Seq.length)\r\n    printfn \"*       Containing %i deaths\" (trainData |> Seq.filter (fun d -> d.Death) |> Seq.length)\r\n    printfn \"*       Model tested with %i records\" (testData |> Seq.length)\r\n    printfn \"*       Containing %i deaths\" (testData |> Seq.filter (fun d -> d.Death) |> Seq.length)\r\n    printfn \"\"\r\n    \r\n\r\nlet printCalibratedMetrics (metrics : CalibratedBinaryClassificationMetrics) =\r\n    printfn \"*       Metrics for binary classification model      \" \r\n    printfn \"*-----------------------------------------------------------\"\r\n    printfn \"*       Accuracy: %.3f\" metrics.Accuracy\r\n    printfn \"*       Area Under Roc Curve: %.3f\" metrics.AreaUnderRocCurve\r\n    printfn \"*       Area Under PrecisionRecall Curve: %.3f\" metrics.AreaUnderPrecisionRecallCurve\r\n    printfn \"*       F1 Score: %.3f\" metrics.F1Score\r\n    printfn \"*       LogLoss: %.3f\" metrics.LogLoss\r\n    printfn \"*       LogLoss Reduction: %.3f\" metrics.LogLossReduction\r\n    printfn \"*       Positive Precision: %.3f\" metrics.PositivePrecision\r\n    printfn \"*       Positive Recall: %.3f\" metrics.PositiveRecall\r\n    printfn \"*       Negative Precision: %.3f\" metrics.NegativePrecision\r\n    printfn \"*       Negative Recall: %.3f\" metrics.NegativeRecall\r\n\r\nlet printNonCalibratedMetrics (metrics : BinaryClassificationMetrics) =\r\n    \r\n    printfn \"*       Metrics for binary classification model      \" \r\n    printfn \"*-----------------------------------------------------------\"\r\n    printfn \"*       Accuracy: %.3f\" metrics.Accuracy\r\n    printfn \"*       Area Under Roc Curve: %.3f\" metrics.AreaUnderRocCurve\r\n    printfn \"*       Area Under PrecisionRecall Curve: %.3f\" metrics.AreaUnderPrecisionRecallCurve\r\n    printfn \"*       F1 Score: %.3f\" metrics.F1Score\r\n    printfn \"*       Positive Precision: %.3f\" metrics.PositivePrecision\r\n    printfn \"*       Positive Recall: %.3f\" metrics.PositiveRecall\r\n    printfn \"*       Negative Precision: %.3f\" metrics.NegativePrecision\r\n    printfn \"*       Negative Recall: %.3f\" metrics.NegativeRecall\r\n\r\n// Calculate the model using the training data,\r\n// and test data for the metrics. Include the features\r\n// (Data column names) that has to be included in the model.\r\nlet calculate trainData testData features =\r\n    let context = MLContext()\r\n\r\n    let trainView = context.Data.LoadFromEnumerable trainData\r\n    let testView = context.Data.LoadFromEnumerable testData\r\n    \r\n    let pipeline =\r\n        let features = features |> Seq.toArray\r\n        EstimatorChain()\r\n            .Append(context.Transforms.Concatenate(\"Features\", features))\r\n            .Append(context.BinaryClassification.Trainers.SdcaLogisticRegression(\"Death\", \"Features\"))\r\n\r\n    let trained = pipeline.Fit(trainView)\r\n\r\n    let predicted = trained.Transform(testView)\r\n\r\n    let metrics = \r\n        //context.BinaryClassification.EvaluateNonCalibrated(data=predicted, labelColumnName=\"Death\", scoreColumnName=\"Score\")\r\n        context.BinaryClassification.Evaluate(data=predicted, labelColumnName=\"Death\", scoreColumnName=\"Score\")\r\n\r\n\r\n    printDataMetrics trainData testData\r\n    metrics\r\n    |> printCalibratedMetrics\r\n\r\n```","Url":"https://github.com/dotnet/machinelearning/issues/5480","RelatedDescription":"Open issue \"Suddenly unable to load DLL 'CpuMathNative' on F#\" (#5480)"},{"Id":"738139020","IsPullRequest":true,"CreatedAt":"2020-11-07T02:36:18","Actor":"mstfbl","Number":"5479","RawContent":null,"Title":"Added Linux & Mac changes for Arcade","State":"closed","Body":"This PR contains changes for Linux and Mac Arcade integrations, as well as Arcade benchmark/ performance testing changes.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5479","RelatedDescription":"Closed or merged PR \"Added Linux & Mac changes for Arcade\" (#5479)"},{"Id":"738136480","IsPullRequest":true,"CreatedAt":"2020-11-07T02:20:47","Actor":"mstfbl","Number":"5478","RawContent":null,"Title":"Linux & Mac changes for Arcade","State":"closed","Body":"This PR contains changes for Linux and Mac Arcade integrations, as well as Arcade benchmark/ performance testing changes.","Url":"https://github.com/dotnet/machinelearning/pull/5478","RelatedDescription":"Closed or merged PR \"Linux & Mac changes for Arcade\" (#5478)"},{"Id":"738114834","IsPullRequest":true,"CreatedAt":"2020-11-07T00:36:01","Actor":"michaelgsharp","Number":"5477","RawContent":null,"Title":"Windows CI working","State":"closed","Body":"Windows CI working. Mac and Linux will come later.","Url":"https://github.com/dotnet/machinelearning/pull/5477","RelatedDescription":"Closed or merged PR \"Windows CI working\" (#5477)"},{"Id":"736405475","IsPullRequest":true,"CreatedAt":"2020-11-06T19:01:18","Actor":"michaelgsharp","Number":"5475","RawContent":null,"Title":"Added test key.","State":"closed","Body":"Added back in the test key to fix the extension issue.","Url":"https://github.com/dotnet/machinelearning/pull/5475","RelatedDescription":"Closed or merged PR \"Added test key.\" (#5475)"},{"Id":"736350973","IsPullRequest":true,"CreatedAt":"2020-11-04T18:58:52","Actor":"Lynx1820","Number":"5474","RawContent":null,"Title":"Fix for #5469","State":"open","Body":"This PR fixes #5469. The issue is coming from the assumption that `ImageResizer` creates a separate `Bitmap`, but when image is already the target dimension `ImageResizer` actually simply returns the source image. Other image methods are likely to dispose of the source image. For example, in this test a getter method get's called twice, and on the second call the source image gets disposed, causing the error. \r\n\r\nA transformer should only be responsible of disposing the objects it creates. One attempt to solve this issue was to keep track of the last Bitmap created to ensure we don't dispose of an object that was not created within  `ImageResizer.` However, the issue encountered with this approach is that the object created by another transformer may be deleted if that transform gets called again. This happens because the source buffers get reused, so image transforms will dispose the previous source image object when they get called again.  \r\n\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/master/src/Microsoft.ML.ImageAnalytics/ImageLoader.cs#L238","Url":"https://github.com/dotnet/machinelearning/pull/5474","RelatedDescription":"Open PR \"Fix for #5469\" (#5474)"},{"Id":"735932441","IsPullRequest":false,"CreatedAt":"2020-11-04T17:38:26","Actor":"fuomag9","Number":"5473","RawContent":null,"Title":"Is it possible to convert a ml.net model (.zip) to ONNX or tensorflow model?","State":"closed","Body":"### System information\r\n\r\n- **Win 10 10.0.19041**:\r\n- **.NET Version 3.1.402**: \r\n\r\n### Issue\r\n\r\nIs it possible to convert a ml.net model (.zip) to ONNX or tensorflow model? I've found various APIs but they were either removed or I didn't know how to make them work.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5473","RelatedDescription":"Closed issue \"Is it possible to convert a ml.net model (.zip) to ONNX or tensorflow model?\" (#5473)"},{"Id":"735708463","IsPullRequest":true,"CreatedAt":"2020-11-03T23:45:11","Actor":"mstfbl","Number":"5472","RawContent":null,"Title":"Arcade CI Testing","State":"open","Body":"Arcade CI Testing Draft PR","Url":"https://github.com/dotnet/machinelearning/pull/5472","RelatedDescription":"Open PR \"Arcade CI Testing\" (#5472)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-11-20T05:30:39.4052376Z","RunDurationInMilliseconds":803}