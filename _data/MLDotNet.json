{"Data":{"GitHub":{"Issues":[{"Id":"628878114","IsPullRequest":false,"CreatedAt":"2020-06-02T03:47:36","Actor":"suxi-ms","Number":"5188","RawContent":null,"Title":"Add  a threshold parameter for root cause analysis","State":"open","Body":"### Issue\r\n\r\n- **Users want a threshold to determin whether the selected is a root cause, so we add a new parameter in the interface. The default value is 0.95**\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5188","RelatedDescription":"Open issue \"Add  a threshold parameter for root cause analysis\" (#5188)"},{"Id":"628869856","IsPullRequest":true,"CreatedAt":"2020-06-02T03:22:52","Actor":"suxi-ms","Number":"5187","RawContent":null,"Title":"Add anomalyDeltaThreshold for RCA","State":"open","Body":"Update Root Cause Analysis interface.\r\n\r\n\r\n\r\n- [ ] For root cause analysis interface, we added a new parameter called anomalyDeltaThreshold for users to choose. \r\n- [ ] It won't break existing interface if some users are using it.\r\n- [ ] Fixes #5188 .\r\n- [ ] Related PR #4925 \r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5187","RelatedDescription":"Open PR \"Add anomalyDeltaThreshold for RCA\" (#5187)"},{"Id":"628728725","IsPullRequest":true,"CreatedAt":"2020-06-02T00:29:07","Actor":"michaelgsharp","Number":"5185","RawContent":null,"Title":"Refactor of OnnxConversionTests.cs","State":"closed","Body":"The majority of the tests in OnnxConversionTests.cs do the same thing. Build an ML.Net pipeline, export it to ONNX, and compare the results. This PR refactors the OnnxConversionTests.cs file to use a common method for all the tests that do that same functionality, removing about 400 lines of duplicate code. There were a few tests with functionality not exactly the same, and those were left as is.","Url":"https://github.com/dotnet/machinelearning/pull/5185","RelatedDescription":"Closed or merged PR \"Refactor of OnnxConversionTests.cs\" (#5185)"},{"Id":"628758301","IsPullRequest":true,"CreatedAt":"2020-06-01T23:41:22","Actor":"frank-dong-ms","Number":"5186","RawContent":null,"Title":"remove unnecessary methods","State":"closed","Body":"address https://github.com/dotnet/machinelearning/issues/3720\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5186","RelatedDescription":"Closed or merged PR \"remove unnecessary methods\" (#5186)"},{"Id":"627611378","IsPullRequest":true,"CreatedAt":"2020-06-01T20:33:31","Actor":"frank-dong-ms","Number":"5180","RawContent":null,"Title":"output memory usage after every test finish","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5180","RelatedDescription":"Closed or merged PR \"output memory usage after every test finish\" (#5180)"},{"Id":"627374335","IsPullRequest":false,"CreatedAt":"2020-06-01T17:39:12","Actor":"leblancdavid","Number":"5179","RawContent":null,"Title":"`ImageClassification` prediction appears slow","State":"closed","Body":"I don't have much experience with DNN (more with traditional machine learning algorithms) so I went through the automated visual inspection tutorial. The training of the 400 subset images is relatively quick. However, the prediction time is incredibly slow. Running the prediction through 400 images took about 90sec using `ResnetV2101` and 10sec using `MobilenetV2`. For my application, I would need it to be about at least 5x to 10x faster (hopefully close to real-time).\r\n\r\nMy question is, am I doing something wrong or is there something I can do to improve prediction speed?\r\n\r\nThank you!","Url":"https://github.com/dotnet/machinelearning/issues/5179","RelatedDescription":"Closed issue \"`ImageClassification` prediction appears slow\" (#5179)"},{"Id":"628604295","IsPullRequest":false,"CreatedAt":"2020-06-01T17:25:59","Actor":"frank-dong-ms","Number":"5184","RawContent":null,"Title":"CI crash on mac os ","State":"open","Body":"Randomly see below 3 crash only on mac os:\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=637346&view=logs&jobId=23576d1c-355e-5d27-4c31-0725f923794b&j=23576d1c-355e-5d27-4c31-0725f923794b&t=5b5048ea-91bc-5d7d-fb0b-ace30192f432\r\n\r\nThe active Test Run was aborted because the host process exited unexpectedly while executing following test(s):\r\nMicrosoft.ML.RunTests.TestDataPipe.SavePipeTrainAndScoreFccTransformStr\r\n\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=662867&view=logs&jobId=23576d1c-355e-5d27-4c31-0725f923794b&j=23576d1c-355e-5d27-4c31-0725f923794b&t=bcab25d9-33c3-57fc-b368-7b48febf4d8a\r\n\r\nThe active Test Run was aborted because the host process exited unexpectedly while executing following test(s):\r\nMicrosoft.ML.RunTests.TestDataPipe.SavePipeNgramHash\r\n\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=653881&view=logs&j=23576d1c-355e-5d27-4c31-0725f923794b&t=bcab25d9-33c3-57fc-b368-7b48febf4d8a\r\n\r\nThe active Test Run was aborted because the host process exited unexpectedly while executing following test(s):\r\nMicrosoft.ML.Functional.Tests.Evaluation.TrainAndEvaluateWithPrecisionRecallCurves\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5184","RelatedDescription":"Open issue \"CI crash on mac os \" (#5184)"},{"Id":"628471619","IsPullRequest":false,"CreatedAt":"2020-06-01T14:14:35","Actor":"wbadry","Number":"5183","RawContent":null,"Title":"[feature request] Dimensionality Reduction API","State":"open","Body":"### Features Reduction\r\n\r\nIt would be great if dimensionality reduction API could be added to ML.NET. This will be a major advantage in shortening training time.","Url":"https://github.com/dotnet/machinelearning/issues/5183","RelatedDescription":"Open issue \"[feature request] Dimensionality Reduction API\" (#5183)"},{"Id":"627703765","IsPullRequest":false,"CreatedAt":"2020-05-30T10:52:20","Actor":"adriansd27","Number":"5182","RawContent":null,"Title":"Schema mismatch for input column 'Image': expected image, got Vector<Byte> for Predictions made using model trained with MobilenetV2 and ResnetV250","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: .NET Core 3.1\r\n\r\n### Issue\r\nI'm running an ASP.NET Core 3.1 Web app with ML.NET. I'm unable to make predictions with trained model when using ImageClassificationTrainer.Architecture.MobilenetV2 and ImageClassificationTrainer.Architecture.ResnetV250. \r\n\r\nHowever it works with ImageClassificationTrainer.Architecture.InceptionV3 and ImageClassificationTrainer.Architecture.ResnetV2101.\r\n\r\n- **What did you do?**\r\nI've trained the model. Then I've made a prediction with prediction engine pool.\r\n- **What happened?**\r\nGot a mismatch error when trying to predict.\r\n- **What did you expect?**\r\nI'd like to be able to make predictions with MobilenetV2 and ResnetV250 as well.\r\n### Source code / logs\r\n               \r\n\r\n                var trainDataRawBytes = _mapper.Map<IEnumerable<ImageDataRaw>>(imageData);\r\n                var testDataRawBytes = _mapper.Map<IEnumerable<ImageDataRaw>>(testData);\r\n\r\n                trainingData = _mlContext.Data.LoadFromEnumerable(trainDataRawBytes);\r\n\r\n                var options = new ImageClassificationTrainer.Options\r\n                {\r\n                    FeatureColumnName = \"Image\",\r\n                    LabelColumnName = \"LabelKey\",\r\n                    Arch = ImageClassificationTrainer.Architecture.MobilenetV2,\r\n                    Epoch = 50,       //100\r\n                    BatchSize = 10,\r\n                    LearningRate = 0.01f\r\n                };\r\n\r\n                IEstimator<ITransformer> pipeline =\r\n                    _mlContext.Transforms.Conversion.MapValueToKey(\"LabelKey\", \"Label\")\r\n                        .Append(_mlContext.MulticlassClassification.Trainers\r\n                            .ImageClassification(options))\r\n                        .Append(_mlContext.Transforms.Conversion.MapKeyToValue(\"PredictedLabelValue\",\r\n                            \"PredictedLabel\"))\r\n                        .AppendCacheCheckpoint(_mlContext);\r\n\r\n                model = pipeline.Fit(trainingData);\r\n                testingResults = EvaluateModel(testDataRawBytes);`\r\n\r\n```        \r\n        private List<ImagePredictionResult> EvaluateModel(IEnumerable<ImageDataRaw> imageData)\r\n        {\r\n            return imageData.ToList().Select(image => _predictionEnginePool.Predict(\"ImageClassificationModel\", image))\r\n                .ToList().Select(\r\n                    imagePrediction => new ImagePredictionResult\r\n                    {\r\n                        RealLabel = imagePrediction.Label,\r\n                        PredictedLabel = imagePrediction.PredictedLabelValue,\r\n                        Score = imagePrediction.Score.Max()\r\n                    }).ToList();\r\n        }\r\n```\r\n\r\n```System.ArgumentOutOfRangeException: Schema mismatch for input column 'Image': expected image, got Vector<Byte> (Parameter 'inputSchema')\r\n   at Microsoft.ML.Transforms.Image.ImageResizingTransformer.CheckInputColumn(DataViewSchema inputSchema, Int32 col, Int32 srcCol)\r\n   at Microsoft.ML.Data.OneToOneTransformerBase.CheckInput(DataViewSchema inputSchema, Int32 col, Int32& srcCol)\r\n   at Microsoft.ML.Data.OneToOneTransformerBase.OneToOneMapperBase..ctor(IHost host, OneToOneTransformerBase parent, DataViewSchema inputSchema)\r\n   at Microsoft.ML.Transforms.Image.ImageResizingTransformer.Mapper..ctor(ImageResizingTransformer parent, DataViewSchema inputSchema)\r\n   at Microsoft.ML.Transforms.Image.ImageResizingTransformer.MakeRowMapper(DataViewSchema schema)\r\n   at Microsoft.ML.Data.RowToRowTransformerBase.Microsoft.ML.ITransformer.GetRowToRowMapper(DataViewSchema inputSchema)\r\n   at Microsoft.ML.Data.TransformerChain`1.Microsoft.ML.ITransformer.GetRowToRowMapper(DataViewSchema inputSchema)\r\n   at Microsoft.ML.PredictionEngineBase`2..ctor(IHostEnvironment env, ITransformer transformer, Boolean ignoreMissingColumns, SchemaDefinition inputSchemaDefinition, SchemaDefinition outputSchemaDefinition)\r\n   at Microsoft.ML.PredictionEngine`2..ctor(IHostEnvironment env, ITransformer transformer, Boolean ignoreMissingColumns, SchemaDefinition inputSchemaDefinition, SchemaDefinition outputSchemaDefinition)\r\n   at Microsoft.ML.PredictionEngineExtensions.CreatePredictionEngine[TSrc,TDst](ITransformer transformer, IHostEnvironment env, Boolean ignoreMissingColumns, SchemaDefinition inputSchemaDefinition, SchemaDefinition outputSchemaDefinition)\r\n   at Microsoft.ML.ModelOperationsCatalog.CreatePredictionEngine[TSrc,TDst](ITransformer transformer, Boolean ignoreMissingColumns, SchemaDefinition inputSchemaDefinition, SchemaDefinition outputSchemaDefinition)\r\n   at Microsoft.Extensions.ML.PredictionEnginePoolPolicy`2.Create()\r\n   at Microsoft.Extensions.ObjectPool.DefaultObjectPool`1.Create()\r\n   at Microsoft.Extensions.ObjectPool.DefaultObjectPool`1.Get()\r\n   at Microsoft.Extensions.ML.PredictionEnginePool`2.GetPredictionEngine(String modelName)\r\n   at Microsoft.Extensions.ML.PredictionEnginePoolExtensions.Predict[TData,TPrediction](PredictionEnginePool`2 predictionEnginePool, String modelName, TData example)\r\n   at PDCSBE.Services.Implementation.TrainService.<EvaluateModel>b__9_0(ImageDataRaw image) in D:\\...\\TrainService.cs:line 175\r\n   at System.Linq.Enumerable.SelectListIterator`2.ToList()\r\n   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)\r\n   at PDCSBE.Services.Implementation.TrainService.EvaluateModel(IEnumerable`1 imageData) in D:\\...\\TrainService.cs:line 175\r\n   at PDCSBE.Services.Implementation.TrainService.TrainModel(IEnumerable`1 imageData, IEnumerable`1 testData, Int32 modelId) in D:\\...\\TrainService.cs:line 106\r\n   at PDCSBE.Services.Implementation.TrainService.TrainModelWithMetrics(Int32 modelId) in D:\\...\\TrainService.cs:line 50\r\n   at PDCSBE.Api.Controllers.TrainController.TrainModel(Int32 modelId) in D:\\...\\TrainController.cs:line 24\r\n   at lambda_method(Closure , Object , Object[] )\r\n   at Microsoft.Extensions.Internal.ObjectMethodExecutor.Execute(Object target, Object[] parameters)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.SyncObjectResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Logged|12_1(ControllerActionInvoker invoker)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeFilterPipelineAsync>g__Awaited|19_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)\r\n   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)\r\n   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)\r\n   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)\r\n   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)```\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5182","RelatedDescription":"Open issue \"Schema mismatch for input column 'Image': expected image, got Vector<Byte> for Predictions made using model trained with MobilenetV2 and ResnetV250\" (#5182)"},{"Id":"625427806","IsPullRequest":true,"CreatedAt":"2020-05-30T08:35:30","Actor":"frank-dong-ms","Number":"5169","RawContent":null,"Title":"new code coverage","State":"closed","Body":"Address code coverage pipeline issue:\r\nError message like: Unable to read beyond the end of the stream.\r\nhttps://dev.azure.com/dnceng/public/_build/results?buildId=662753&view=logs&j=12b34f85-96db-5b04-05cf-faf2be278867&t=4efaf9f8-7d26-5ca9-4ea8-c01555af0e7d\r\n\r\nThis is known issue from msbuild and coverlet. Coverlet collect and write hits data on process exist, if for some reason process is too slow to close will be killed and we cannot collect coverage result.\r\nhttps://github.com/coverlet-coverage/coverlet/blob/master/Documentation/KnownIssues.md#1-vstest-stops-process-execution-earlydotnet-test\r\n\r\nDue to recommendation from coverlet, change from coverlet.msbuild to coverlet.collector:\r\nhttps://github.com/coverlet-coverage/coverlet/blob/master/Documentation/VSTestIntegration.md\r\n\r\nUpgrade Vs test sdk and modify corresponding configuration.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5169","RelatedDescription":"Closed or merged PR \"new code coverage\" (#5169)"},{"Id":"627658869","IsPullRequest":false,"CreatedAt":"2020-05-30T05:45:50","Actor":"marcmm","Number":"5181","RawContent":null,"Title":"InvalidOperationException - Invalid TValue in GetGetter: 'System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IDictionary`2[System.Int64,System.Single]]'","State":"open","Body":"### System information\r\n- Runtime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n .Net Framework 4.7.2 x64\r\n\r\nLibraries:\r\nMicrosoft.ML 1.5.0\r\nMicrosoft.ML.OnnxTransformer 1.5.0\r\nMicrosoft.ML.OnnxRuntime 1.3.0\r\n\r\n- Issue:\r\nThe following code below fails with an InvalidOperationException - Invalid TValue in GetGetter: 'System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IDictionary`2[System.Int64,System.Single]]'\r\n\r\n- Repro steps below\r\n- Trying to get the output_probability field (which is Sequence of Maps) from an sklearn RandomForestClassifier model converted to onnx using skl2onnx library.\r\n- I expected ML.Net to support this scenario since I have seen other posts of users using similar fields as models outputs.\r\n\r\nCall Stack:\r\nUnhandled Exception: System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.InvalidOperationException: Invalid TValue in GetGetter: 'System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IDictionary`2[System.Int64,System.Single]]'\r\n   at Microsoft.ML.Data.RowToRowMapperTransform.Cursor.GetGetter[TValue](Column column)\r\n   at Microsoft.ML.Data.TypedCursorable`1.TypedRowBase.CreateDirectSetter[TDst](DataViewRow input, Int32 col, Delegate poke, Delegate peek)\r\n   --- End of inner exception stack trace ---\r\n   at System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)\r\n   at System.Reflection.RuntimeMethodInfo.UnsafeInvokeInternal(Object obj, Object[] parameters, Object[] arguments)\r\n   at System.Reflection.RuntimeMethodInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)\r\n   at Microsoft.ML.Data.TypedCursorable`1.TypedRowBase.GenerateSetter(DataViewRow input, Int32 index, Column column, Delegate poke, Delegate peek)\r\n   at Microsoft.ML.Data.TypedCursorable`1.TypedRowBase..ctor(TypedCursorable`1 parent, DataViewRow input, String channelMessage)\r\n   at Microsoft.ML.Data.TypedCursorable`1.GetCursor(Func`2 additionalColumnsPredicate, Nullable`1 randomSeed)\r\n   at Microsoft.ML.Data.TypedCursorable`1.GetCursor()\r\n   at Microsoft.ML.PipeEngine`1.<RunPipe>d__3.MoveNext()\r\n   at testonnx.Program.Main(String[] args)\r\n\r\n### Source code Repro:\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.Data;\r\nusing Microsoft.ML.Transforms.Onnx;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\nusing System.Text;\r\nusing System.Threading.Tasks;\r\n\r\nnamespace testonnx\r\n{\r\n    public class OutputData\r\n    {\r\n        [ColumnName(\"output_probability\")]\r\n        [OnnxSequenceType(typeof(IDictionary<long, float>))]\r\n        public IEnumerable<IDictionary<long, float>> OutputProbabilities;\r\n    }\r\n\r\n    public class InputData\r\n    {\r\n        [ColumnName(\"float_input\")]\r\n        [VectorType(4)]\r\n        public float[] Input { get; set; }\r\n    }\r\n\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var outputSchemaDef = SchemaDefinition.Create(typeof(OutputData));\r\n            var inputSchemaDef = SchemaDefinition.Create(typeof(InputData));\r\n            var mlContext = new MLContext();\r\n            var pipeline = mlContext.Transforms\r\n               .ApplyOnnxModel(new string[] { \"output_probability\", \"output_label\" }, new string[] { \"float_input\" }, \"rf_iris_new.onnx\");\r\n\r\n            var inputs = new List<InputData>() { new InputData() { Input = new float[] { 3.1f, 0.9f, 1.2f, 0.8f } } };\r\n\r\n            var data = mlContext.Data.LoadFromEnumerable(inputs, inputSchemaDef);\r\n\r\n            var model = pipeline.Fit(data);\r\n\r\n            var transformedValues = model.Transform(data);\r\n\r\n            var predictions = mlContext.Data.CreateEnumerable<OutputData>(\r\n                transformedValues, reuseRowObject: false, true, outputSchemaDef);\r\n\r\n            foreach (var pred in predictions) \r\n            {\r\n                Console.WriteLine(pred.OutputProbabilities.First()[0].ToString());              \r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n[rf_iris_new.zip](https://github.com/dotnet/machinelearning/files/4705133/rf_iris_new.zip)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5181","RelatedDescription":"Open issue \"InvalidOperationException - Invalid TValue in GetGetter: 'System.Collections.Generic.IEnumerable`1[System.Collections.Generic.IDictionary`2[System.Int64,System.Single]]'\" (#5181)"},{"Id":"625222103","IsPullRequest":true,"CreatedAt":"2020-05-29T23:44:45","Actor":"michaelgsharp","Number":"5166","RawContent":null,"Title":"Robust Scaler now added to the Normalizer catalog","State":"closed","Body":"One of the featurizers that was added in the past was the RobustScalerFeaturizer. After talking with the ML.Net team, it was decided that since this is just a normalizer it makes more sense to have it be part of the existing collection of normalizers that ML.Net already has. This PR adds that functionality. It is the equivalent of the [RobustScaler](https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.RobustScaler.html) in pandas. Once this PR goes in, we can remove the original transformer that was added.","Url":"https://github.com/dotnet/machinelearning/pull/5166","RelatedDescription":"Closed or merged PR \"Robust Scaler now added to the Normalizer catalog\" (#5166)"},{"Id":"627029027","IsPullRequest":false,"CreatedAt":"2020-05-29T20:47:20","Actor":"praveenraghuvanshi1512","Number":"5178","RawContent":null,"Title":"[Windows 10] : 'Unable to load DLL 'MklImports' or one of its dependencies'","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**:  Windows 10 x64\r\n- **.NET Version (eg., dotnet --info)**: \r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.300\r\n Commit:    b2475c1295\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.18363\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.300\\\r\n\r\nHost (useful for support):\r\n  Version: 3.1.4\r\n  Commit:  0c2e69caa6\r\n\r\n.NET Core SDKs installed:\r\n  1.0.0 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.0.3 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.2 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.4 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.102 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.103 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.104 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200-preview-007576 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.200 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.201 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.202 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.300-preview2-008533 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.301 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.400-preview-009063 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.401 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.402 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.403 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500-preview-009297 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.500-preview-009335 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.503 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.504 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.507 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.508 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.509 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.511 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.600-preview-009472 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.800-preview-009696 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.801 [C:\\Program Files\\dotnet\\sdk]\r\n  2.1.802 [C:\\Program Files\\dotnet\\sdk]\r\n  2.2.103 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.100-preview6-012264 [C:\\Program Files\\dotnet\\sdk]\r\n  3.0.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.101 [C:\\Program Files\\dotnet\\sdk]\r\n  3.1.300 [C:\\Program Files\\dotnet\\sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.All 2.1.0-preview2-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.1.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.All 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.All]\r\n  Microsoft.AspNetCore.App 2.1.0-preview2-final [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.1.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.0-preview6.19307.2 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.AspNetCore.App 3.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 1.0.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 1.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.0 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.6 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.0.9 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.0-preview2-26406-04 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3-servicing-26724-03 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.3 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.5 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.7 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.8 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.11 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.12 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.13 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.15 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.1.18 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 2.2.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.0-preview6-27804-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.NETCore.App 3.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.NETCore.App]\r\n  Microsoft.WindowsDesktop.App 3.0.0-preview6-27804-01 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.0.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.1 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n  Microsoft.WindowsDesktop.App 3.1.4 [C:\\Program Files\\dotnet\\shared\\Microsoft.WindowsDesktop.App]\r\n\r\nTo install additional .NET Core runtimes or SDKs:\r\n  https://aka.ms/dotnet-download\r\n\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\n     Creating a Prediction using ML.Net time-series\r\n.Net core: 3.1.300\r\nMicrosoft.ML : 1.5.0\r\nMicrosoft.ML.TimeSeries : 1.5.0\r\nVisual Studio 2019 16.6.0\r\n \r\n- **What happened?**\r\nI am getting 'Unable to load DLL 'MklImports' or one of its dependencies' while calling Fit method of ForecastBySsa() in a time series prediction.\r\n\r\nThe issue surfaced in Jupyter notebook only, the same code runs fine in Visual Studio 2019.\r\n\r\n- **What did you expect?**\r\nNo error \r\nChecked https://github.com/dotnet/machinelearning/issues/3903\r\nIt has a workaround for macOS and nothing for windows, hence opening this issue specifically for Windows.\r\n\r\n### Source code / logs\r\n\r\nLogs\r\nSubmitCode: var model = pipeline.Fit(data);\r\nCodeSubmissionReceived: var model = pipeline.Fit(data);\r\nCompleteCodeSubmissionReceived: var model = pipeline.Fit(data);\r\nSystem.DllNotFoundException: Unable to load DLL 'MklImports' or one of its dependencies: The specified module could not be found. (0x8007007E)\r\nat Microsoft.ML.Transforms.TimeSeries.EigenUtils.Dsytrd(Layout matrixLayout, Uplo uplo, Int32 n, Double[] a, Int32 lda, Double[] d, Double[] e, Double[] tau)\r\nat Microsoft.ML.Transforms.TimeSeries.EigenUtils.MklSymmetricEigenDecomposition(Single[] input, Int32 size, Single[]& eigenValues, Single[]& eigenVectors)\r\nat Microsoft.ML.Transforms.TimeSeries.TrajectoryMatrix.ComputeSvd(Single[]& singularValues, Single[]& leftSingularvectors)\r\nat Microsoft.ML.Transforms.TimeSeries.AdaptiveSingularSpectrumSequenceModelerInternal.TrainCore(Single[] dataArray, Int32 originalSeriesLength)\r\nat Microsoft.ML.Transforms.TimeSeries.AdaptiveSingularSpectrumSequenceModelerInternal.Train(RoleMappedData data)\r\nat Microsoft.ML.Transforms.TimeSeries.SsaForecastingTransformer..ctor(IHostEnvironment env, Options options, IDataView input)\r\nat Microsoft.ML.Transforms.TimeSeries.SsaForecastingEstimator.Fit(IDataView input)\r\nat Submission#30.<>d__0.MoveNext()\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5178","RelatedDescription":"Closed issue \"[Windows 10] : 'Unable to load DLL 'MklImports' or one of its dependencies'\" (#5178)"},{"Id":"625505339","IsPullRequest":false,"CreatedAt":"2020-05-29T18:02:14","Actor":"pthinh14","Number":"5170","RawContent":null,"Title":"Unable to load DLL 'tensorflow' with published WPF app","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: Window 10\r\n- **.NET Version (eg., dotnet --info)**: .NET framework 4.7.2\r\n\r\n### Issue\r\n\r\n- **What did you do?** I'm trying sample code for image classification using MLNet. \r\n- **What happened?** Everything works fine in development environment which means that I can use model to predict label of images. However, when I tried to publish a ClickOnce application, the exception System.DllNotFoundException: Unable to load DLL 'tensorflow': The specified module could not be found keeps throwing.\r\n- **What did you expect?** I want to know how to deliver WPF application with MLNet properly\r\n\r\n### Source code / logs\r\nSystem.DllNotFoundException: Unable to load DLL 'tensorflow': The specified module could not be found.\r\n![image](https://user-images.githubusercontent.com/20205286/82997902-328a7d80-a031-11ea-86ce-478c5d726db0.png)\r\n\r\nFor source code, it is the same as https://docs.microsoft.com/en-us/dotnet/machine-learning/tutorials/image-classification but I update the code to see if all libraries is loaded correctly\r\n\r\n[WpfApp1.zip](https://github.com/dotnet/machinelearning/files/4687605/WpfApp1.zip)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5170","RelatedDescription":"Closed issue \"Unable to load DLL 'tensorflow' with published WPF app\" (#5170)"},{"Id":"627010962","IsPullRequest":true,"CreatedAt":"2020-05-29T05:35:00","Actor":"mstfbl","Number":"5177","RawContent":null,"Title":"Ensure Sanitized Column Names are Unique in AutoML CLI","State":"open","Body":"Fix #3902. This PR ensures that column names that are pulled from datasets and used to generate C# model input are unique. As a result, naming collisions are prevented and are valid C# variables. This is done by adding the column naming-collision fix in `ML.CodeGenerator.Utilities.Utils.GenerateClassLabels`.\r\n\r\nThis naming-collision fix consists of appending the type of the variable to the name of the second duplicate. For example, let us have 3 columns in a sample dataset:\r\n\r\n```csharp\r\nint id;\r\nint Country;\r\nstring country;\r\n```\r\n\r\nThis is represented with `TextLoader.Columns[]` as:\r\n```csharp\r\n\r\nnew TextLoader.Column[]\r\n{\r\n    new TextLoader.Column(){ Name = \"id\", Source = new TextLoader.Range[]{new TextLoader.Range(0) }, DataKind = DataKind.Int32 },\r\n    new TextLoader.Column(){ Name = \"Country\", Source = new TextLoader.Range[]{new TextLoader.Range(1) }, DataKind = DataKind.Int32 },\r\n    new TextLoader.Column(){ Name = \"country\", Source = new TextLoader.Range[]{new TextLoader.Range(2) }, DataKind = DataKind.String },\r\n}\r\n```\r\n\r\nFor `string country` to be a valid class variable, its first letter has to be capitalized, which would result in a naming collision. This PR ensures that this doesn't happen, and the generated code becomes:\r\n\r\n```csharp\r\npublic class ModelInput\r\n{\r\n    [ColumnName(\"id\"), LoadColumn(0)]\r\n    public float Id { get; set; }\r\n\r\n\r\n    [ColumnName(\"Country\"), LoadColumn(1)]\r\n    public float Country { get; set; }\r\n\r\n\r\n    [ColumnName(\"country\"), LoadColumn(2)]\r\n    public string Country_string { get; set; }\r\n}\r\n```\r\n\r\nThis PR also adds unit tests to test naming collision scenarios in both `CodeGenTests` and `ConsoleCodeGeneratorTests`.\r\n\r\nIn addition, this PR also cleans up duplicate code with respect to the `ML.CodeGenerator.Utilities.Utils.GenerateClassLabels` function, by linking its duplicate function `ML.CodeGenerator.CodeGenerator.GenerateClassLabels` to the former.","Url":"https://github.com/dotnet/machinelearning/pull/5177","RelatedDescription":"Open PR \"Ensure Sanitized Column Names are Unique in AutoML CLI\" (#5177)"},{"Id":"626944351","IsPullRequest":true,"CreatedAt":"2020-05-29T02:02:12","Actor":"wangyems","Number":"5176","RawContent":null,"Title":"Support onnx export with previous OpSet version","State":"open","Body":"For Feature request: https://github.com/dotnet/machinelearning/issues/5171\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5176","RelatedDescription":"Open PR \"Support onnx export with previous OpSet version\" (#5176)"},{"Id":"626734289","IsPullRequest":true,"CreatedAt":"2020-05-29T00:23:50","Actor":"harishsk","Number":"5175","RawContent":null,"Title":"Updated ORT version info for OnnxScoringEstimator","State":"closed","Body":"Also added additional detail around mandatory inclusion of either the CPU or the GPU nuget of ORT.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5175","RelatedDescription":"Closed or merged PR \"Updated ORT version info for OnnxScoringEstimator\" (#5175)"},{"Id":"625427239","IsPullRequest":false,"CreatedAt":"2020-05-28T21:36:59","Actor":"AnoojNair","Number":"5168","RawContent":null,"Title":"AUC is not defined when there is no positive class in the data (Parameter 'PosSample')","State":"closed","Body":"\r\n\r\n.NET Core SDK (reflecting any global.json):\r\n Version:   3.1.201\r\n Commit:    b1768b4ae7\r\n\r\nRuntime Environment:\r\n OS Name:     Windows\r\n OS Version:  10.0.14393\r\n OS Platform: Windows\r\n RID:         win10-x64\r\n Base Path:   C:\\Program Files\\dotnet\\sdk\\3.1.201\\\r\n\r\n### AUC is not defined when there is no positive class in the data (Parameter 'PosSample')\r\n![image](https://user-images.githubusercontent.com/8334797/82986574-3080e880-a04a-11ea-8cb3-d41fa3572a97.png)\r\n\r\nI get this exception while doing an evaluation on the **AnomalyDetection** model. i am using the **CreditCardFraudDetection** sample and running it on my dataset. i have checked if my test dataset has both positive and negative classes and they are present.\r\n\r\n![image](https://user-images.githubusercontent.com/8334797/82986627-4d1d2080-a04a-11ea-87cf-4cd4182e91cf.png)\r\n\r\n![image](https://user-images.githubusercontent.com/8334797/82986658-5908e280-a04a-11ea-9315-50f93b0a8803.png)\r\n\r\nAm i missing something?","Url":"https://github.com/dotnet/machinelearning/issues/5168","RelatedDescription":"Closed issue \"AUC is not defined when there is no positive class in the data (Parameter 'PosSample')\" (#5168)"},{"Id":"626225161","IsPullRequest":true,"CreatedAt":"2020-05-28T21:03:10","Actor":"wangyems","Number":"5174","RawContent":null,"Title":"Support onnx export with previous OpSet version","State":"closed","Body":"Feature request https://github.com/dotnet/machinelearning/issues/5171\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/5174","RelatedDescription":"Closed or merged PR \"Support onnx export with previous OpSet version\" (#5174)"},{"Id":"626154744","IsPullRequest":true,"CreatedAt":"2020-05-28T01:59:36","Actor":"LittleLittleCloud","Number":"5173","RawContent":null,"Title":"update codegen to make it work with mlnet 1.5 ","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/5173","RelatedDescription":"Open PR \"update codegen to make it work with mlnet 1.5 \" (#5173)"},{"Id":"625975676","IsPullRequest":true,"CreatedAt":"2020-05-27T21:15:12","Actor":"antoniovs1029","Number":"5172","RawContent":null,"Title":"Removed unused CodeGen Baseline","State":"closed","Body":"The `codegen-out.cs` file was supposed to be used as baseline for some test:\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/e2f7075782764c9dab8f0a04013aaf8b9921d984/test/BaselineOutput/Common/Command/codegen-out.cs\r\n\r\nThe file was introduced in #1654 along with a `CommandCodeGen()` test which used the baseline to test the MAML `codegen` command. That test, along with the CodeGenerationUtils class (which I guess was only used by the codegen command) was deleted in [#1848](https://github.com/dotnet/machinelearning/pull/1848/files/6337f663d841b5709a5567c21809ddbf51327f22#diff-9a5afd195d2538b0a4080d3d5d0059c0), but the baseline was left... so I'm assuming this was an error, and I'm simply deleting the baseline file in this PR.\r\n\r\nThere is also another test, `CheckFastTreeParallelInterface()`, which declares `var csOutPath = DeleteOutputPath(outRoot, \"codegen-out.cs\");` but actually never uses the `csOutPath` variable. Also, the test is disabled for some reason that seems unrelated to the `codegen` command. So I'm simply removing that variable. As I guess it wasn't meant to use the baseline I'm deleting anyway (notice that the baseline got introduced in #1654 as I've mentioned, but the `CheckFastTreeParallelInterface` was introduced in the first commit of the ML.NET repo, and it already had the unused variable).","Url":"https://github.com/dotnet/machinelearning/pull/5172","RelatedDescription":"Closed or merged PR \"Removed unused CodeGen Baseline\" (#5172)"},{"Id":"625916727","IsPullRequest":false,"CreatedAt":"2020-05-27T18:08:50","Actor":"amittere","Number":"5171","RawContent":null,"Title":"Feature request: ONNX Export to older file versions/opsets","State":"open","Body":"### Intro\r\nML.NET supports exporting trained models to the ONNX file format, but only allows export to the latest version/opset. The version of the exported model can also change as ML.NET is updated, which can break compatibility with other toolsets that only support older ONNX versions.\r\n\r\n### Feature Request\r\n- Support exporting models to older ONNX versions and opsets (ONNX version 1.4, opset 9 or older)\r\n\r\n### Use case\r\nWe would like to run a model trained with ML.NET on Windows devices using the inbox Windows ML runtime, but it does not support the latest [ONNX versions](https://docs.microsoft.com/en-us/windows/ai/windows-ml/onnx-versions) which ML.NET exports to.\r\n\r\n### Workarounds\r\n- Exported models can be converted using the [ONNX Version Converter](https://github.com/onnx/onnx/blob/master/docs/VersionConverter.md), but it does not work on all models.\r\n- Models can also be hand-edited.","Url":"https://github.com/dotnet/machinelearning/issues/5171","RelatedDescription":"Open issue \"Feature request: ONNX Export to older file versions/opsets\" (#5171)"},{"Id":"625170781","IsPullRequest":false,"CreatedAt":"2020-05-27T17:55:09","Actor":"mstfbl","Number":"5165","RawContent":null,"Title":"Tracking ML .NET behavior on AMD builds","State":"closed","Body":"This issue is for tracking ML .NET behavior on AMD builds.\r\n\r\nCurrently we are testing our builds on Intel CPUs and NVIDIA GPUs (please correct me if I'm wrong!) However, as Issue #4703 indicates, we might be obtaining different results on other builds such as:\r\n\r\n- AMD CPU/ No GPU\r\n    - Currently testing through [D4as_v4 ](https://docs.microsoft.com/en-us/azure/virtual-machines/dav4-dasv4-series#dasv4-series)VM on Azure\r\n- AMD CPU/ NVIDIA GPU (build of Issue #4703's author)\r\n- AMD CPU/AMD GPU\r\n\r\nI don't fully understand why exactly we obtain different behavior in these builds. However it is important to track these, and perhaps do regular CI test builds on these possibilities. ","Url":"https://github.com/dotnet/machinelearning/issues/5165","RelatedDescription":"Closed issue \"Tracking ML .NET behavior on AMD builds\" (#5165)"},{"Id":"624250995","IsPullRequest":false,"CreatedAt":"2020-05-27T17:51:05","Actor":"akshayabnave","Number":"5161","RawContent":null,"Title":"Gradual Memory Increase","State":"closed","Body":"I am not sure whether this is write channel but I need quick help\r\n\r\nWe have observed that gradual increase in memory of Host object of module Microsoft.ML.Data.\r\n\r\nWe have .net core worker service running as windows service.\r\n\r\nIt does prediction for 50 ML models in parallel.\r\n\r\n1. We are loading all models into memory then creating 50 threads for 50 models which would be running continuously and predicting values.\r\n\r\n2. For testing purpose we stop all threads ever 1hour and dispose it. Then calling GC.Collect().\r\n\r\n3. Also taking memory snapshot every 1 hour using VS performance profiler. We have observed that\r\ngradual increase in memory of Host object of module Microsoft.ML.Data. \r\n\r\n4. If we remove all loded models from memory and call GC.  the the memory consumed by Host object of module Microsoft.ML.Data gets freed.\r\n\r\nCould you please suggest anything if we want to resolve gradual increase of memory without removing models from memory.\r\n\r\n``` csharp\r\n\r\nprivate List<PredictionResult> ExecuteModel(ModelTransformer modelTransformer, IDataView dataView, DateTime requestDateTime) \r\n        {\r\n            List<PredictionResult> predictionResults = null;\r\n            try\r\n            {\r\n                if (modelTransformer.Transformer != null)\r\n                {\r\n                    string modelConfigId = modelTransformer.ModelConfigId;\r\n                    string actualValueColumnName = modelTransformer.TextLoaderOutputColumn;\r\n                    string tagNameForPredictedValue = modelTransformer.PredictedTagName;\r\n                    string tagNameForActualValue = modelTransformer.TargetVariable;\r\n\r\n                    predictionResults = new List<PredictionResult>();\r\n                    IDataView predictions = modelTransformer.Transformer.Transform(dataView);\r\n\r\n                    Logger.log.InfoFormat(\"[Request at {0} Model Id: {1}] prediction value extraction\", requestDateTime, modelConfigId);\r\n\r\n                    IEnumerable<float> listScore = predictions.GetColumn<float>(\"Score\");\r\n\r\n                    Logger.log.InfoFormat(\"[Request at {0} Model Id: {1}] score extraction completed\", requestDateTime, modelConfigId);\r\n\r\n                    IEnumerable<string> listTime = predictions.GetColumn<string>(preModelExecutionDetails.TextLoaderColumn[0].Name);\r\n\r\n                    Logger.log.InfoFormat(\"[Request at {0} Model Id: {1}] Time extraction completed\", requestDateTime, modelConfigId);\r\n\r\n                    IEnumerable<float> listActualValues = predictions.GetColumn<float>(actualValueColumnName);\r\n\r\n                    predictions = null;\r\n\r\n                    Logger.log.InfoFormat(\"[Request at {0} Model Id: {1}] actual value extraction completed\", requestDateTime, modelConfigId);\r\n\r\n                    predictionResults.AddRange(\r\n                        listTime.Zip(listScore, (time, score) => new PredictionResult\r\n                        {\r\n                            TagName = tagNameForPredictedValue,\r\n                            Timestamp = Convert.ToDateTime(time),\r\n                            Confidence = ConfigParameters.TagValueDefaultConfidence,\r\n                            Value = score.ToString(),\r\n                            ValueType = Models.ValueType.SCORE.ToString()\r\n                        }).ToList());\r\n\r\n                    predictionResults.AddRange(\r\n                        listTime.Zip(listActualValues, (time, actualVal) => new PredictionResult\r\n                        {\r\n                            TagName = tagNameForActualValue,\r\n                            Timestamp = Convert.ToDateTime(time),\r\n                            Confidence = ConfigParameters.TagValueDefaultConfidence,\r\n                            Value = actualVal.ToString(),\r\n                            ValueType = Models.ValueType.ACTUAL.ToString()\r\n                        }).ToList());\r\n                }\r\n            }\r\n            finally\r\n            {\r\n                modelTransformer = null;\r\n            }\r\n            return predictionResults;\r\n        }\r\n```\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5161","RelatedDescription":"Closed issue \"Gradual Memory Increase\" (#5161)"},{"Id":"625282035","IsPullRequest":true,"CreatedAt":"2020-05-27T17:11:32","Actor":"harishsk","Number":"5167","RawContent":null,"Title":"Updated version to v1.5.1","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/5167","RelatedDescription":"Closed or merged PR \"Updated version to v1.5.1\" (#5167)"},{"Id":"623943896","IsPullRequest":true,"CreatedAt":"2020-05-26T17:51:47","Actor":"harishsk","Number":"5160","RawContent":null,"Title":"Fixed onnx export for key types other than uint","State":"closed","Body":"In PR #5152 @yaeldekel modified the test for onnx export for key types and disabled the test for types other than uint because of a bug in onnx export for those other types. This PR takes the test from @yaeldekel's PR and adds the fix for the onnx export bug.  ","Url":"https://github.com/dotnet/machinelearning/pull/5160","RelatedDescription":"Closed or merged PR \"Fixed onnx export for key types other than uint\" (#5160)"},{"Id":"624937784","IsPullRequest":false,"CreatedAt":"2020-05-26T16:29:28","Actor":"thibaultfalque","Number":"5164","RawContent":null,"Title":"How RMSE is calculated ? ","State":"closed","Body":"### System information\r\n\r\nSDK .NET Core (reflétant tous les global.json) :\r\n Version:   3.1.300\r\n Commit:    b2475c1295\r\n\r\nEnvironnement d'exécution :\r\n OS Name:     ubuntu\r\n OS Version:  18.04\r\n OS Platform: Linux\r\n RID:         ubuntu.18.04-x64\r\n Base Path:   /usr/share/dotnet/sdk/3.1.300/\r\n\r\nHost (useful for support):\r\n  Version: 3.1.4\r\n  Commit:  0090613580\r\n\r\n.NET Core SDKs installed:\r\n  3.1.300 [/usr/share/dotnet/sdk]\r\n\r\n.NET Core runtimes installed:\r\n  Microsoft.AspNetCore.App 3.1.4 [/usr/share/dotnet/shared/Microsoft.AspNetCore.App]\r\n  Microsoft.NETCore.App 3.1.4 [/usr/share/dotnet/shared/Microsoft.NETCore.App]\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\n\r\nI wanted to calculate the RMSE of a FastTree model. \r\n\r\nI created a FastTree model. I trained him. I evaluated it on a test dataset.\r\n\r\nI displayed the result using the `Evaluate()` function.\r\n\r\n```csharp\r\npublic static void TrainTest(....){\r\n..... // train and test method\r\nvar metrics = mlContext.Regression.Evaluate(predictions, \"Label\", \"Score\");\r\nDumpMetrics(name, metrics);\r\n}\r\n\r\npublic static void DumpMetrics(string name, RegressionMetrics metrics)\r\n        {\r\n            Console.WriteLine();\r\n            Console.WriteLine($\"*************************************************\");\r\n            Console.WriteLine($\"*       Model quality metrics evaluation         \");\r\n            Console.WriteLine($\"*       \" + name);\r\n            Console.WriteLine($\"*------------------------------------------------\");\r\n            Console.WriteLine($\"*       R2 Score:      {metrics.RSquared:0.###}\");\r\n            Console.WriteLine($\"*       RMS loss:      {metrics.RootMeanSquaredError:#.###}\");\r\n            Console.WriteLine($\"*       MAE loss:      {metrics.MeanAbsoluteError:#.###}\");\r\n            Console.WriteLine($\"*************************************************\");\r\n        }\r\n```\r\n\r\n- **What happened?**\r\n\r\n```bash \r\n*************************************************\r\n*       Model quality metrics evaluation         \r\n*       \r\n*------------------------------------------------\r\n*       R2 Score:      0,882\r\n*       RMS loss:      30,57\r\n*       MAE loss:      20,03\r\n*************************************************\r\n```\r\n\r\nSo the RMSE is: `30,57`.\r\n\r\n- **What did you expect?**\r\n\r\nI saved the output of the model to a CSV file.\r\n\r\nI used the `mean_squared_error` function from the Python scikit-learn library and got a completely different value for RMSE. \r\n\r\n```python\r\nimport pandas as pd\r\nimport math\r\ndf =pd.read_csv('test.csv',decimal=',',sep=';')\r\nprint(math.sqrt(mean_squared_error(df['label'],df['prediction'])))\r\n```\r\nThe result is: \r\n\r\n```bash \r\n125.30721032995426\r\n```\r\n\r\n```python\r\ndef rmse(predictions, targets):\r\n    return np.sqrt(((predictions - targets) ** 2).mean())\r\nrmse(df['prediction'].values,df['label'].values)\r\n```\r\n\r\nThe result is: \r\n```bash\r\n125.30721032995426\r\n```\r\n\r\nSo my questions are: does the value found in the object returned by the `Evaluate` function apply the following formula between  `target` and `prediction`? If yes, why the results are different ? \r\n\r\n![RMSE](http://www.sciweavers.org/tex2img.php?eq=%5Csqrt%7B%28%5Cfrac%7B1%7D%7Bn%7D%29%5Csum_%7Bi%3D1%7D%5E%7Bn%7D%28y_%7Bi%7D%20-%20x_%7Bi%7D%29%5E%7B2%7D%7D&bc=White&fc=Black&im=jpg&fs=12&ff=arev&edit=0)\r\n\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/5164","RelatedDescription":"Closed issue \"How RMSE is calculated ? \" (#5164)"},{"Id":"624304798","IsPullRequest":true,"CreatedAt":"2020-05-25T13:34:58","Actor":"ptelman","Number":"5163","RawContent":null,"Title":"Auto.ML: Fix issue when parsing float string fails on pl-PL culture set using Regression Experiment","State":"open","Body":"Float parsing fails when culture = `pl-PL` despite the fact that it does not need to parse anything here.\r\nVariable `pset` is in fact `IParameterValue<float>` - it has `float Value` property with correct `float` type which should be used.","Url":"https://github.com/dotnet/machinelearning/pull/5163","RelatedDescription":"Open PR \"Auto.ML: Fix issue when parsing float string fails on pl-PL culture set using Regression Experiment\" (#5163)"},{"Id":"624303051","IsPullRequest":false,"CreatedAt":"2020-05-25T13:31:59","Actor":"ptelman","Number":"5162","RawContent":null,"Title":"Auto.ML Regression Experiment throwing Exception when culture is pl-PL","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 10\r\n- **.NET Version (eg., dotnet --info)**: 3.1.300-preview-015135\r\n- **Auto.ML Version**: v0.17.0-preview2\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nAutoML experiment using Boston houses dataset, RegressionExperiment and pl-PL culture\r\n- **What happened?**\r\nException was thrown after ~3 minutes of experiment - `float.Parse` could not parse string.\r\n- **What did you expect?**\r\nException should not be thrown.\r\n\r\n### Source code / logs\r\n\r\nCall stack:\r\n\r\nUnhandled exception. System.OverflowException: Value was either too large or too small for a Decimal.\r\n   at System.Number.ThrowOverflowOrFormatException(ParsingStatus status, TypeCode type)\r\n   at System.Single.Parse(String s)\r\n   at Microsoft.ML.AutoML.SweeperProbabilityUtils.ParameterSetAsFloatArray(IValueGenerator[] sweepParams, ParameterSet ps, Boolean expandCategoricals)\r\n   at Microsoft.ML.AutoML.SmacSweeper.FitModel(IEnumerable`1 previousRuns)\r\n   at Microsoft.ML.AutoML.SmacSweeper.ProposeSweeps(Int32 maxSweeps, IEnumerable`1 previousRuns)\r\n   at Microsoft.ML.AutoML.PipelineSuggester.SampleHyperparameters(MLContext context, SuggestedTrainer trainer, IEnumerable`1 history, Boolean isMaximizingMetric)\r\n   at Microsoft.ML.AutoML.PipelineSuggester.GetNextInferredPipeline(MLContext context, IEnumerable`1 history, DatasetColumnInfo[] columns, TaskKind task, Boolean isMaximizingMetric, CacheBeforeTrainer cacheBeforeTrainer, IEnu\r\nmerable`1 trainerWhitelist)\r\n   at Microsoft.ML.AutoML.Experiment`2.Execute()\r\n   at Microsoft.ML.AutoML.ExperimentBase`2.ExecuteCrossVal(IDataView[] trainDatasets, ColumnInformation columnInfo, IDataView[] validationDatasets, IEstimator`1 preFeaturizer, IProgress`1 progressHandler)\r\n   at Microsoft.ML.AutoML.ExperimentBase`2.Execute(IDataView trainData, UInt32 numberOfCVFolds, ColumnInformation columnInformation, IEstimator`1 preFeaturizer, IProgress`1 progressHandler)\r\n   at Playground.Program.AutoMl() in C:\\GIT\\ML\\dotnet\\AI\\Playground\\Program.cs:line 37\r\n   at Playground.Program.Main(String[] args) in C:\\GIT\\ML\\dotnet\\AI\\Playground\\Program.cs:line 19\r\n\r\nManual setting culture using `Thread.CurrentThread.CurrentCulture = new CultureInfo(\"en-US\");` solves issue.","Url":"https://github.com/dotnet/machinelearning/issues/5162","RelatedDescription":"Open issue \"Auto.ML Regression Experiment throwing Exception when culture is pl-PL\" (#5162)"},{"Id":"623890544","IsPullRequest":false,"CreatedAt":"2020-05-24T15:47:36","Actor":"deiruch","Number":"5159","RawContent":null,"Title":"Feature request: Built-in support for word/sentence/document embeddings","State":"open","Body":"# Intro\r\nML.NET is not yet very well equipped for some natural-language processing (NLP) workloads. While there is already support for basic processing steps (tokenization, stop word removal, ...) and sentiment, other, higher-level workloads are not yet supported.\r\n\r\n# Feature request\r\n\r\n- Pre-trained embeddings, like BERT or GloVe, for documents are useful for down-level tasks.\r\n- It'd be even better if there was an easy to use API to tune or train custom models on custom datasets.\r\n\r\n# Use case\r\nIn our specific use case, we develop document classifiers. We only have a limited set of labeled documents to train with. Our plan is to use a pretrained or trained document embeddings, and learn a simple classifier on top, using the labeled documents.\r\n\r\n# Workarounds\r\nThere is already a project that runs BERT as ONNX on top of ML.NET, see https://github.com/GerjanVlot/BERT-ML.NET. I'd like to see this become an official part of ML.NET, with a good API, properly maintained and updated.\r\n\r\n# Outlook\r\nThese models are building-blocks for other features, like entity recognition (#630). Ideally ML.NET would support many more NLP tasks, as listed in https://github.com/microsoft/nlp-recipes#content. Generally, we notice an uptake in NLP-related project inquiries.","Url":"https://github.com/dotnet/machinelearning/issues/5159","RelatedDescription":"Open issue \"Feature request: Built-in support for word/sentence/document embeddings\" (#5159)"}],"ResultType":"GitHubIssue"}},"RunOn":"2020-06-02T05:30:35.8701981Z","RunDurationInMilliseconds":694}