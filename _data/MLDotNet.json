{"Data":{"GitHub":{"Issues":[{"Id":"2135855609","IsPullRequest":false,"CreatedAt":"2024-02-15T07:49:16","Actor":"SyntaxEvg","Number":"7003","RawContent":null,"Title":"Please make a simple way using the local gguf model, thanks","State":"open","Body":"add a simple feature in one line\r\nload the model into memory like python does\r\nwhat is your problem create a simple way to download\r\nmodels from huggingface? quantized up to 4 or 5 Q\r\nfor example mistralai/Mistral-7B-v0.1\r\ngguf extensions\r\nCan you explain the difficulties, why you are not addressing this issue, for example, I don’t like python and I don’t want to use it, but due to the fact that you do not support the way of loading a model and communicating with it in ml net, I have to use it\r\nPlease make a simple way using the local gguf model, thanks","Url":"https://github.com/dotnet/machinelearning/issues/7003","RelatedDescription":"Open issue \"Please make a simple way using the local gguf model, thanks\" (#7003)"},{"Id":"2135546529","IsPullRequest":true,"CreatedAt":"2024-02-15T03:01:02","Actor":"zewditu","Number":"7002","RawContent":null,"Title":"U/zewd/normalized text","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7002","RelatedDescription":"Closed or merged PR \"U/zewd/normalized text\" (#7002)"},{"Id":"2135458580","IsPullRequest":true,"CreatedAt":"2024-02-15T01:14:42","Actor":"tarekgh","Number":"7001","RawContent":null,"Title":"Tokenizer's Interfaces Cleanup","State":"open","Body":"This update encompasses the following:\r\n\r\n- Introduction of the `Tokenizer.GetEncodedIdsCount` API, essential for supporting crucial scenarios and implemented it in all supported tokenizers.\r\n- The implementation of `EncodeToIds` and `GetEncodedIdsCount` has been customized for other tokenizer models like `Bpe` and `EnglishRoberta`. This adaptation aims to enhance the performance of these APIs specifically when invoked from those respective tokenizers.\r\n- Removal of a couple of APIs that did not align well with our interfaces.\r\n- Conducted cleanup and performance optimizations in various sections across the supported tokenizers.","Url":"https://github.com/dotnet/machinelearning/pull/7001","RelatedDescription":"Open PR \"Tokenizer's Interfaces Cleanup\" (#7001)"},{"Id":"2135056596","IsPullRequest":true,"CreatedAt":"2024-02-14T19:32:57","Actor":"dotnet-maestro[bot]","Number":"7000","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:45c6fd49-3a4f-4675-f3da-08dc0c527e17)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 45c6fd49-3a4f-4675-f3da-08dc0c527e17\r\n- **Build**: 20240213.2\r\n- **Date Produced**: February 13, 2024 8:30:17 PM UTC\r\n- **Commit**: da98edc4c3ea539f109ea320672136ceb32591a7\r\n- **Branch**: refs/heads/release/8.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.24075.5 to 8.0.0-beta.24113.2][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 8.0.0-beta.24075.5 to 8.0.0-beta.24113.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.24075.5 to 8.0.0-beta.24113.2][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 8.0.0-beta.24075.5 to 8.0.0-beta.24113.2][1]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 8.0.0-beta.24075.5 to 8.0.0-beta.24113.2][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.24075.5 to 8.0.0-beta.24113.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/07cf24f27e...da98edc4c3\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:45c6fd49-3a4f-4675-f3da-08dc0c527e17)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7000","RelatedDescription":"Open PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#7000)"},{"Id":"2125840282","IsPullRequest":false,"CreatedAt":"2024-02-14T00:06:15","Actor":"mjanulaitis","Number":"6994","RawContent":null,"Title":"Sample Project does not trigger anomalies with v3","State":"closed","Body":"**System Information:**\r\n - OS & Version: Windows 10\r\n - ML.NET Version: ML.NET v3.0.1\r\n - .NET Version: .NET 7.0\r\n\r\n**Describe the bug**\r\nI have successfully downloaded Microsoft's sample projects and run the AnomalyDetection_PhoneCalls sample with one change.  That is, I upgraded from .Net Core 3.1 to .Net 7.  Then after learning 3.x was released, I upgraded to the latest NuGet Package.  Now when I run the sample it successfully runs however no anomalies are detected.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Download the samples from here: https://github.com/dotnet/machinelearning-samples/\r\n2. Open the AnomalyDetection_PhoneCalls sample.\r\n3. Modify the project file to use net7.0\r\n4. Run.  Verify several items are flagged as anomalies.\r\n5. Using NuGet Package Manager upgrade Microsoft.ML and Microsoft.ML.TimeSeries to v3.0.1\r\n6. Run.  Notice the same items are no longer flagged as anomalies.\r\n\r\n**Expected behavior**\r\nThe same items should be flagged as anomalies.","Url":"https://github.com/dotnet/machinelearning/issues/6994","RelatedDescription":"Closed issue \"Sample Project does not trigger anomalies with v3\" (#6994)"},{"Id":"2133321680","IsPullRequest":false,"CreatedAt":"2024-02-13T23:58:24","Actor":"mjanulaitis","Number":"6999","RawContent":null,"Title":"The type initializer for 'Microsoft.ML.Transforms.TimeSeries.FftUtils' threw an exception.","State":"open","Body":"**System Information:**\r\n - Windows 10\r\n - ML.NET 3.0.1\r\n - .NET 4.7.2\r\n\r\n**Describe the bug**\r\nI am unable to use this library when my project is built with .Net 4.7.2.  The same code is working for .net7.0-windows v7.0.15\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create a project then call MLContext.AnomalyDetection.DetectSeasonality\r\n2. See error: The type initializer for 'Microsoft.ML.Transforms.TimeSeries.FftUtils' threw an exception.  Inner exception: BadImageFormatException: An attempt was made to load a program with an incorrect format. (Exception from HRESULT: 0x8007000B)\r\n\r\n**Expected behavior**\r\nThe function should not throw an exception.\r\n\r\n**Sample Snipet**\r\n```\r\n            var mlContext = new MLContext();\r\n\r\n            var dataView = mlContext.Data.LoadFromTextFile<DataModel>(path: i, hasHeader: true, separatorChar: ',');\r\n\r\n            string inputColumnName = nameof(DataModel.value);\r\n\r\n            int period = mlContext.AnomalyDetection.DetectSeasonality(dataView, inputColumnName);\r\n```\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6999","RelatedDescription":"Open issue \"The type initializer for 'Microsoft.ML.Transforms.TimeSeries.FftUtils' threw an exception.\" (#6999)"},{"Id":"2131367865","IsPullRequest":true,"CreatedAt":"2024-02-13T23:41:41","Actor":"zewditu","Number":"6998","RawContent":null,"Title":"Add text normalizer transformer to AutoML","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6998","RelatedDescription":"Closed or merged PR \"Add text normalizer transformer to AutoML\" (#6998)"},{"Id":"2131236243","IsPullRequest":false,"CreatedAt":"2024-02-13T00:36:07","Actor":"thomasd3","Number":"6997","RawContent":null,"Title":"Can't use LoadFromEnumerable in F#","State":"open","Body":"Using a BinaryClassifier, with AutoML in F#, I have my data structured at this type:\r\n\r\n    myData: float32 array list\r\n\r\nSo, each row is a float32 array and I've a list of rows.\r\nThe first column is the label, all other columns are the features\r\n\r\nUsing context.Data.LoadFromEnumerable () does not work on this data type.\r\nWhile the list implements IEnumerable, I can't use that function.\r\n\r\nFor now, I'm using something very ugly: I write the data to a csv and I load it from disk:\r\n\r\nthe row is defined as:\r\n```\r\n    [<CLIMutable>]\r\n    type DataRow =\r\n        {\r\n            [<ColumnName \"Label\"; LoadColumn(0)>]\r\n            Label: bool\r\n            [<ColumnName \"Features\"; LoadColumn(\r\n                [|\r\n                    001; 002; 003; 004; 005; 006; 007; 008; 009\r\n                    011; 012; 013; 014; 015; 016; 017; 018; 019\r\n                    021; 022; 023; 024; 025; 026; 027; 028; 029\r\n                    031; 032; 033; 034; 035; 036; 037; 038; 039\r\n                    041; 042; 043; 044; 045; 046; 047; 048; 049\r\n                    051; 052; 053; 054; 055; 056; 057; 058; 059\r\n                    061; 062; 063; 064; 065; 066; 067; 068; 069\r\n                    071; 072; 073; 074; 075; 076; 077; 078; 079\r\n                    081; 082; 083; 084; 085; 086; 087; 088; 089\r\n                    091; 092; 093; 094; 095; 096; 097; 098; 099\r\n                    101; 102; 103; 104; 105; 106; 107; 108; 109\r\n                    111; 112; 113; 114; 115; 116; 117; 118; 119\r\n                    121; 122; 123; 124; 125; 126; 127; 128; 129\r\n                    131; 132; 133; 134; 135; 136; 137; 138; 139\r\n                    141; 142; 143; 144; 145; 146; 147; 148; 149\r\n                    151; 152; 153; 154; 155; 156; 157; 158; 159\r\n                    161; 162; 163; 164; 165; 166; 167; 168; 169\r\n                    171; 172; 173; 174; 175; 176; 177; 178; 179\r\n                    181; 182; 183; 184; 185; 186; 187; 188; 189\r\n                    191; 192; 193; 194; 195; 196; 197; 198; 199\r\n                    201; 202; 203; 204; 205; 206; 207; 208; 209\r\n                    211; 212; 213; 214; 215; 216; 217; 218; 219\r\n                    221; 222; 223; 224; 225; 226; 227; 228; 229\r\n                    231; 232; 233; 234; 235; 236; 237; 238; 239\r\n                    241; 242; 243; 244; 245; 246; 247; 248; 249\r\n                |]\r\n            )>]\r\n            Features: float32 array\r\n        }\r\n```\r\nwhich makes very little sense...\r\n\r\nand the loading code is even worse:\r\n\r\n```\r\n    let trainModel (l: float32 array list) =\r\n\r\n        // create the MLContext\r\n        let context = MLContext()\r\n\r\n        // add logging\r\n        context.Log.Add (fun m -> if m.Kind <> ChannelMessageKind.Trace then info m.RawMessage)\r\n\r\n        // build a filename\r\n        let filename = nanoGuid()\r\n\r\n        // build the data as text\r\n        let text =\r\n            l\r\n            |> List.map (fun r -> r |> Array.map string |> String.concat \",\")\r\n            |> String.concat \"\\n\"\r\n\r\n        // write it to a file\r\n        File.WriteAllText(filename, text)\r\n\r\n        // load the data\r\n        let loadedData = context.Data.LoadFromTextFile<DataRow> (filename, hasHeader = false, separatorChar = ',')\r\n\r\n        // shuffle the data\r\n        let shuffledData = context.Data.ShuffleRows (loadedData)\r\n```\r\n\r\nhow can I use LoadFromEnumerable from a list to avoid this?\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6997","RelatedDescription":"Open issue \"Can't use LoadFromEnumerable in F#\" (#6997)"},{"Id":"2115620232","IsPullRequest":true,"CreatedAt":"2024-02-12T16:37:16","Actor":"dotnet-policy-service[bot]","Number":"6983","RawContent":null,"Title":"FabricBot: Onboarding to GitOps.ResourceManagement because of FabricBot decommissioning","State":"closed","Body":"Add prIssueManagement.yml to onboard repo to GitOps.ResourceManagement as FabricBot replacement\n\n Details on the replacement service and the syntax of the new yaml configuration file is available publicly at: https://microsoft.github.io/GitOps/policies/resource-management.html\n\nPlease review and merge this PR to complete the process of onboarding to the new service.","Url":"https://github.com/dotnet/machinelearning/pull/6983","RelatedDescription":"Closed or merged PR \"FabricBot: Onboarding to GitOps.ResourceManagement because of FabricBot decommissioning\" (#6983)"},{"Id":"2130517788","IsPullRequest":false,"CreatedAt":"2024-02-12T16:36:47","Actor":"ericstj","Number":"6996","RawContent":null,"Title":"Possible deadlock when running Microsoft.ML.Tests","State":"open","Body":"## Build Information\r\nBuild: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=561198\r\nBuild error leg or test failing: Microsoft.ML.Tests.WorkItemExecution\r\nPull request: https://github.com/dotnet/machinelearning/pull/6983\r\n<!-- Error message template  -->\r\n## Error Message\r\n\r\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssues.md#how-to-fill-out-a-known-issue-error-section).\r\n\r\n<!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. -->\r\n\r\n```json\r\n{\r\n  \"ErrorMessage\": [ \"[Long Running Test] 'Microsoft.ML.Tests.Scenarios.Api.CookbookSamples.CookbookSamplesDynamicApi.TextFeaturization'\", \"[Long Running Test] 'Microsoft.ML.Tests.Transformers.WordEmbeddingsTests.TestWordEmbeddings'\" ],\r\n  \"ErrorPattern\": \"\",\r\n  \"BuildRetry\": false,\r\n  \"ExcludeConsoleLog\": false\r\n}\r\n```\r\n\r\nsample output\r\n```\r\n[Long Running Test] 'Microsoft.ML.Tests.Scenarios.Api.CookbookSamples.CookbookSamplesDynamicApi.TextFeaturization', Elapsed: 00:58:09\r\n[Long Running Test] 'Microsoft.ML.Tests.Transformers.WordEmbeddingsTests.TestWordEmbeddings', Elapsed: 00:58:08\r\n```\r\n\r\n<!-- Known issue validation start -->\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=561198\r\n**Error message validated:** `[[Long Running Test] 'Microsoft.ML.Tests.Scenarios.Api.CookbookSamples.CookbookSamplesDynamicApi.TextFeaturization' [Long Running Test] 'Microsoft.ML.Tests.Transformers.WordEmbeddingsTests.TestWordEmbeddings'`]\r\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\r\n**Validation performed at:** 2/12/2024 4:36:55 PM UTC\r\n<!-- Known issue validation end -->\r\n<!--Known issue error report start -->\r\n### Report\r\n\r\n|Build|Definition|Test|Pull Request|\r\n|---|---|---|---|\r\n|[568440](https://dev.azure.com/dnceng-public/public/_build/results?buildId=568440)|dotnet/machinelearning|[Microsoft.ML.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=568440&view=ms.vss-test-web.build-test-results-tab&runId=13599132&resultId=101449)|dotnet/machinelearning#7001|\r\n|[566318](https://dev.azure.com/dnceng-public/public/_build/results?buildId=566318)|dotnet/machinelearning|[Microsoft.ML.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=566318&view=ms.vss-test-web.build-test-results-tab&runId=13535336&resultId=101401)|dotnet/machinelearning#6939|\r\n|[565386](https://dev.azure.com/dnceng-public/public/_build/results?buildId=565386)|dotnet/machinelearning|[Microsoft.ML.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=565386&view=ms.vss-test-web.build-test-results-tab&runId=13509808&resultId=101401)||\r\n|[565334](https://dev.azure.com/dnceng-public/public/_build/results?buildId=565334)|dotnet/machinelearning|[Microsoft.ML.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=565334&view=ms.vss-test-web.build-test-results-tab&runId=13507000&resultId=101401)|dotnet/machinelearning#6939|\r\n|[564718](https://dev.azure.com/dnceng-public/public/_build/results?buildId=564718)|dotnet/machinelearning|[Microsoft.ML.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=564718&view=ms.vss-test-web.build-test-results-tab&runId=13492854&resultId=101449)|dotnet/machinelearning#6939|\r\n|[562601](https://dev.azure.com/dnceng-public/public/_build/results?buildId=562601)|dotnet/machinelearning|[Microsoft.ML.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=562601&view=ms.vss-test-web.build-test-results-tab&runId=13434292&resultId=101401)|dotnet/machinelearning#6995|\r\n|[561198](https://dev.azure.com/dnceng-public/public/_build/results?buildId=561198)|dotnet/machinelearning|[Microsoft.ML.Tests.WorkItemExecution](https://dev.azure.com/dnceng-public/public/_build/results?buildId=561198&view=ms.vss-test-web.build-test-results-tab&runId=13391146&resultId=101401)|dotnet/machinelearning#6983|\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|1|7|7|\r\n<!--Known issue error report end -->","Url":"https://github.com/dotnet/machinelearning/issues/6996","RelatedDescription":"Open issue \"Possible deadlock when running Microsoft.ML.Tests\" (#6996)"},{"Id":"2130143115","IsPullRequest":true,"CreatedAt":"2024-02-12T13:29:42","Actor":"dotnet-maestro[bot]","Number":"6995","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"open","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 97926d79-6b8b-4d32-c8db-08d9d479971c\r\n- **Build**: 20240206.2\r\n- **Date Produced**: February 6, 2024 5:18:30 PM UTC\r\n- **Commit**: f7eb7794c703dc29a83b414b786e9a154f0ca042\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.24102.4 to 9.0.0-beta.24106.2][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 9.0.0-beta.24102.4 to 9.0.0-beta.24106.2][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.24102.4 to 9.0.0-beta.24106.2][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 9.0.0-beta.24102.4 to 9.0.0-beta.24106.2][1]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 9.0.0-beta.24102.4 to 9.0.0-beta.24106.2][1]\r\n  - **Microsoft.DotNet.XliffTasks**: [from 9.0.0-beta.24102.4 to 9.0.0-beta.24106.2][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.24102.4 to 9.0.0-beta.24106.2][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/2fb543a455...f7eb7794c7\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6995","RelatedDescription":"Open PR \"[main] Update dependencies from dotnet/arcade\" (#6995)"},{"Id":"2125810179","IsPullRequest":false,"CreatedAt":"2024-02-08T18:20:03","Actor":"ericstj","Number":"6993","RawContent":null,"Title":"[Tokenizers] Port CLIP Tokenizer ","State":"open","Body":"Port CLIP tokenizer which leverages byte-level BPE. This tokenizer enables scenarios like StableDiffusion\r\n\r\nMay be dependent on https://github.com/dotnet/machinelearning/issues/6992.\r\n\r\nReference:\r\nhttps://huggingface.co/docs/transformers/main/en/model_doc/clip\r\nhttps://github.com/huggingface/transformers/blob/0549000c5bf6c7249f411917f2a6f0b6d0f06da1/src/transformers/models/codegen/tokenization_codegen.py#L98\r\nhttps://onnxruntime.ai/docs/tutorials/csharp/stable-diffusion-csharp.html#tokenization-with-onnx-runtime-extensions\r\n\r\nPaper:\r\nhttps://arxiv.org/abs/2103.00020\r\nhttps://arxiv.org/pdf/2103.00020.pdf","Url":"https://github.com/dotnet/machinelearning/issues/6993","RelatedDescription":"Open issue \"[Tokenizers] Port CLIP Tokenizer \" (#6993)"},{"Id":"2125793917","IsPullRequest":false,"CreatedAt":"2024-02-08T18:09:52","Actor":"ericstj","Number":"6992","RawContent":null,"Title":"[Tokenizers] Port CodeGenTokenizer & byte-level BPE algorithm","State":"open","Body":"Port Codegen Tokenizer to enable Phi-2 models\r\n\r\nReference:\r\nhttps://huggingface.co/docs/transformers/main/en/model_doc/codegen\r\nhttps://github.com/huggingface/transformers/blob/0549000c5bf6c7249f411917f2a6f0b6d0f06da1/src/transformers/models/codegen/tokenization_codegen.py#L98\r\n\r\nPaper:\r\nhttps://arxiv.org/abs/2203.13474\r\nhttps://arxiv.org/pdf/2203.13474.pdf","Url":"https://github.com/dotnet/machinelearning/issues/6992","RelatedDescription":"Open issue \"[Tokenizers] Port CodeGenTokenizer & byte-level BPE algorithm\" (#6992)"},{"Id":"2125777956","IsPullRequest":false,"CreatedAt":"2024-02-08T17:59:58","Actor":"ericstj","Number":"6991","RawContent":null,"Title":"[Tokenizers] Port BERTTokenizers","State":"open","Body":"Porting BERTTokenizers enables several text embedding generation models.  Requires https://github.com/dotnet/machinelearning/issues/6988.\r\n\r\nhttps://github.com/huggingface/text-embeddings-inference?tab=readme-ov-file#text-embeddings.\r\nhttps://github.com/huggingface/transformers/blob/v4.37.0/src/transformers/models/bert/tokenization_bert.py#L137\r\n\r\ncc @luisquintanilla\r\n\r\nWe already have some BERT implementation which may be sufficient.","Url":"https://github.com/dotnet/machinelearning/issues/6991","RelatedDescription":"Open issue \"[Tokenizers] Port BERTTokenizers\" (#6991)"},{"Id":"2118583737","IsPullRequest":true,"CreatedAt":"2024-02-07T19:58:00","Actor":"dotnet-maestro[bot]","Number":"6985","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 97926d79-6b8b-4d32-c8db-08d9d479971c\r\n- **Build**: 20240202.4\r\n- **Date Produced**: February 2, 2024 10:58:06 PM UTC\r\n- **Commit**: 2fb543a45580400a559b5ae41c96a815ea14dac5\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.24076.5 to 9.0.0-beta.24102.4][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 9.0.0-beta.24076.5 to 9.0.0-beta.24102.4][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.24076.5 to 9.0.0-beta.24102.4][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 9.0.0-beta.24076.5 to 9.0.0-beta.24102.4][1]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 9.0.0-beta.24076.5 to 9.0.0-beta.24102.4][1]\r\n  - **Microsoft.DotNet.XliffTasks**: [from 9.0.0-beta.24076.5 to 9.0.0-beta.24102.4][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.24076.5 to 9.0.0-beta.24102.4][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/66c9c5397d...2fb543a455\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6985","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6985)"},{"Id":"2122643810","IsPullRequest":false,"CreatedAt":"2024-02-07T10:03:02","Actor":"hannespreishuber","Number":"6990","RawContent":null,"Title":"Auto ML Model Builder Object detection - bad or no results","State":"open","Body":"Windows 11 Surface Pro 8 \r\n - ML.NET Version 3.01\r\n -NET 8\r\n\r\nI have a selfmade training set of free hand drawn simple objects - black on white - circle, rect, triangle. Training with AutoML image classification works fast and detection results are very good.\r\n\r\nI did a dataset vott image tagging. Created a single json file and ~150 images. Training with AutoML and Object Detection. Takes ~25minutes and results are unusable.\r\nMAP50_95: 0,1258\r\nModell: ObjectDetectionMulti\r\n\r\nExpected results is a better/good detection rate. I have no idea whats going on with my dataset. And how optimize it.\r\nSide effect: Error Message from Visual Studio \"no bbox detected\" have to restart VS to rerun..\r\n\r\nattached Json and sample image\r\n[916a019c0896a9c18f5b7b2540b8014b-asset.json](https://github.com/dotnet/machinelearning/files/14191867/916a019c0896a9c18f5b7b2540b8014b-asset.json)\r\n![dreieck0](https://github.com/dotnet/machinelearning/assets/3587156/af685623-d45a-431c-a074-e35f08055382)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6990","RelatedDescription":"Open issue \"Auto ML Model Builder Object detection - bad or no results\" (#6990)"},{"Id":"2113590117","IsPullRequest":true,"CreatedAt":"2024-02-06T19:13:28","Actor":"tarekgh","Number":"6981","RawContent":null,"Title":"Introducing Tiktoken Tokenizer","State":"closed","Body":"This modification introduces support for the Tiktoken tokenizer into the Microsoft ML tokenizers library. The logic is largely derived from the Microsoft Tokenizers Library, and the update includes optimizations and adjustments to the public APIs. Further refinements for the APIs are pending and are being tracked through issue #6982.\r\n\r\n#### Usage \r\n\r\n```C#\r\nTokenizer tokenizer = await Tokenizer.CreateByModelNameAsync(\"gpt-4\");\r\n\r\n    // Encoding to Ids\r\n    string text = \"Hello World\";\r\n    IReadOnlyList<int> encoded = tokenizer.EncodeToIds(text);\r\n    Assert.Equal(new List<int>() { 9906, 4435 }, encoded);\r\n    Assert.Equal(text, tokenizer. Decode(encoded)!);\r\n\r\n    // Full encoding to tokens, Ids, and offsets\r\n    TokenizerResult result = tokenizer.Encode(text);\r\n    Assert.Equal(new List<int>() { 9906, 4435 }, result.Ids);\r\n    Assert.Equal(new string[] { \"Hello\", \" World\" }, result.Tokens);\r\n    Assert.Equal(new List<(int, int)> { (0, 5), (5, 11) }, result.Offsets);\r\n```\r\n\r\n#### APIs changes\r\n\r\n```diff\r\n\r\nnamespace Microsoft.ML.Tokenizers\r\n{\r\n    public class Tokenizer\r\n    {\r\n+        /// <summary>\r\n+        /// Encodes input text to object has the tokens list, tokens Ids, tokens offset mapping.\r\n+        /// </summary>\r\n+        /// <param name=\"sequence\">The text to tokenize.</param>\r\n+        /// <param name=\"skipSpecialTokens\">Indicate if want to skip the special tokens during the encoding.</param>\r\n+        /// <returns>The tokenization result includes the tokens list, tokens Ids, tokens offset mapping.</returns>\r\n+        public TokenizerResult Encode(string sequence, bool skipSpecialTokens); // overload adding skipSpecialTokens parameter.\r\n\r\n+        /// <summary>\r\n+        /// Encodes input text to tokens Ids.\r\n+        /// </summary>\r\n+        /// <param name=\"sequence\">The text to tokenize.</param>\r\n+        /// <param name=\"skipSpecialTokens\">Indicate if want to skip the special tokens during the encoding.</param>\r\n+        /// <returns>The tokenization result includes the tokens list, tokens Ids, tokens offset mapping.</returns>\r\n+        public IReadOnlyList<int> EncodeToIds(string sequence, bool skipSpecialTokens = false);\r\n\r\n+        /// <summary>\r\n+        /// Create tokenizer based on model name\r\n+        /// </summary>\r\n+        /// <param name=\"modelName\">Model name</param>\r\n+        /// <param name=\"extraSpecialTokens\">Extra special tokens other than the built-in ones for the model</param>\r\n+        /// <param name=\"normalizer\">To normalize the text before tokenization</param>\r\n+        /// <returns>The tokenizer</returns>\r\n+        public static async Task<Tokenizer> CreateByModelNameAsync(\r\n+                                                string modelName,\r\n+                                                IReadOnlyDictionary<string, int>? extraSpecialTokens = null,\r\n+                                                Normalizer? normalizer = null)\r\n    }\r\n\r\n-    public class Split : IEquatable<Split>\r\n+    public readonly struct Split : IEquatable<Split>\r\n     {\r\n-        public Split(string token, (int Index, int End) offset)\r\n+        public Split(string token, (int Index, int End) offset, bool isSpecialToken = false)\r\n\r\n+        /// <summary>\r\n+        /// Gets if the current Split is a special token.\r\n+        /// </summary>\r\n+        public bool IsSpecialToken { get; }\r\n    }\r\n\r\n    public abstract class PreTokenizer\r\n    {\r\n+        // Primarily focused on optimizing to minimize memory allocations and enable the enumeration of one item at a time,\r\n+        // rather than holding a large list in a collection.\r\n+        // This change will reflect in all public classes which implementing this interface.\r\n-        public abstract IReadOnlyLIst<Split> PreTokenize(string sentence);\r\n+        public abstract IEnumerable<Split> PreTokenize(string sentence, bool skipSpecialTokens = false);\r\n    }\r\n\r\n    public sealed class TokenizerResult\r\n    {\r\n-        public TokenizerResult(string originalString, string normalizedString, IReadOnlyList<Split> splits, bool offsetsMappedToOriginalString);\r\n+        public TokenizerResult(string originalString, string normalizedString, IEnumerable<Split> splits, bool offsetsMappedToOriginalString);\r\n    }\r\n\r\n\r\n    public abstract class Model\r\n    {\r\n+        public virtual IReadOnlyList<Token> Tokenize(string sequence, bool isSpecialToken); // overload to add isSpecialToken parameter.\r\n\r\n+        public virtual bool TokenizeToIds(string sequence, bool isSpecialToken, List<int> accumulatedIds); // To be consumed by Tokenizer.EncodeToIds\r\n\r\n+        public virtual int? TokenToId(string token, bool skipSpecialTokens); // overload to add isSpecialToken parameter.\r\n   }\r\n\r\n\r\n+    public sealed class Tiktoken : Model\r\n+    {\r\n+        public Tiktoken(string tikTokenBpeFile, IReadOnlyDictionary<string, int>? specialTokensEncoder = null, int cacheSize = DefaultCacheSize);\r\n+        public Tiktoken(Stream tikTokenBpeFileStream, IReadOnlyDictionary<string, int>? specialTokensEncoder = null, int cacheSize = DefaultCacheSize);\r\n\r\n+        public IReadOnlyDictionary<string, int>? SpecialTokens { get; }\r\n\r\n+        // Implement the Model abstract methods\r\n+    }\r\n\r\n+   public sealed class TikTokenPreTokenizer : PreTokenizer\r\n+   {\r\n+       public TikTokenPreTokenizer(string regexPattern, IReadOnlyDictionary<string, int>? specialTokensEncoder);\r\n\r\n+       // Implement the Model abstract methods\r\n+   }\r\n\r\n```\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6981","RelatedDescription":"Closed or merged PR \"Introducing Tiktoken Tokenizer\" (#6981)"},{"Id":"2119550185","IsPullRequest":false,"CreatedAt":"2024-02-05T22:12:15","Actor":"tarekgh","Number":"6989","RawContent":null,"Title":"Track optimizing Tiktoken","State":"open","Body":"This issue is tracking addressing the optimization feedback in the PR https://github.com/dotnet/machinelearning/pull/6981\r\n\r\n- https://github.com/dotnet/machinelearning/pull/6981#pullrequestreview-1860350976\r\n- https://github.com/dotnet/machinelearning/pull/6981#pullrequestreview-1860358344\r\n- https://github.com/dotnet/machinelearning/pull/6981#pullrequestreview-1860371153\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6989","RelatedDescription":"Open issue \"Track optimizing Tiktoken\" (#6989)"},{"Id":"2119092962","IsPullRequest":false,"CreatedAt":"2024-02-05T17:32:31","Actor":"ericstj","Number":"6988","RawContent":null,"Title":"[Tokenizers] Implement WordPiece algorithm","State":"open","Body":"The WordPiece algorithm should be added to Microsoft.ML.Tokenizers.  WordPiece algorithm is the basis for BERTTokenizer-based models.\r\n\r\nWe can see reference implementations in \r\nhttps://github.com/microsoft/BlingFire (MIT license)\r\nhttps://github.com/huggingface/tokenizers (Apache license)\r\n\r\nThe paper which it's based on:\r\nhttps://arxiv.org/abs/1609.08144\r\nhttps://arxiv.org/pdf/1609.08144.pdf","Url":"https://github.com/dotnet/machinelearning/issues/6988","RelatedDescription":"Open issue \"[Tokenizers] Implement WordPiece algorithm\" (#6988)"},{"Id":"2119011342","IsPullRequest":false,"CreatedAt":"2024-02-05T16:49:50","Actor":"ericstj","Number":"6987","RawContent":null,"Title":"[Tokenizers] Port LLaMA Tokenizer and SentencePiece algorithm","State":"open","Body":"The SentencePiece algorithm should be added to Microsoft.ML.Tokenizers.  This is a dependency of LLaMATokenizer which we also wish to enable.\r\n\r\nWe can see reference implementations in \r\nhttps://github.com/microsoft/BlingFire (MIT license)\r\nhttps://github.com/google/sentencepiece (Apache license)\r\nhttps://github.com/huggingface/tokenizers (Apache license)\r\nhttps://huggingface.co/docs/transformers/main/en/model_doc/llama\r\n\r\nHugging face also has Llama2 - might be interesting to understand if that's also worth including or designing for later inclusion.\r\n\r\nLLaMA Tokenizer:\r\nhttps://arxiv.org/abs/2203.13474\r\nhttps://arxiv.org/pdf/2203.13474.pdf\r\n\r\nSentence Piece:\r\nhttps://arxiv.org/abs/1808.06226\r\nhttps://arxiv.org/pdf/1808.06226.pdf","Url":"https://github.com/dotnet/machinelearning/issues/6987","RelatedDescription":"Open issue \"[Tokenizers] Port LLaMA Tokenizer and SentencePiece algorithm\" (#6987)"},{"Id":"2118761148","IsPullRequest":false,"CreatedAt":"2024-02-05T14:57:18","Actor":"janschreieradac","Number":"6986","RawContent":null,"Title":"Add a ToDataFrame(Enumerable<T> enumerable) Method","State":"open","Body":"I used to work with DataFrames and RStudio some years ago but only have been using C# with line of business apps in the recent years.\r\n\r\nWhen tasked with a data analysis task I was happy to learn of polyglot Notebooks and that there is a DataFrame in C# which saves me from relearning R (or even worse, having to ask someone for permission)\r\n\r\nWith LINQ I am very familiar and thought it would be easy to work with dataFrames in c#.\r\n\r\nI actually found it a bit tedious to generate a data frame from an IEnumerable<T> and thought it should be easier, especially to help C#-devs to getting used to start with ML.NET\r\n\r\nI wrote a very basic ToDataFrame() helper, which i guess is too slow but describes the need pretty well, I hope. It's placed here: https://github.com/janschreier/dataframehelper/tree/main ","Url":"https://github.com/dotnet/machinelearning/issues/6986","RelatedDescription":"Open issue \"Add a ToDataFrame(Enumerable<T> enumerable) Method\" (#6986)"},{"Id":"2115668516","IsPullRequest":false,"CreatedAt":"2024-02-02T19:55:44","Actor":"ericstj","Number":"6984","RawContent":null,"Title":"Improve Microsoft.ML.Tokenizers and drive complete 1.0 API","State":"open","Body":"**Goal**: Enable .NET developers to use tokenizers in their data pre-processing pipelines as part of their embedding and token generation tasks using language models. \r\n\r\nCommitted:\r\n- [ ] Add support for more commonly used Tokenizers\r\n  - [x] TikToken https://github.com/dotnet/machinelearning/pull/6981\r\n  - [ ] LlamaTokenizer & SentencePiece algorithm https://github.com/dotnet/machinelearning/issues/6987\r\n  - [ ] CodeGenTokenizer & Byte-level BPE https://github.com/dotnet/machinelearning/issues/6992\r\n  - [ ] CLIP Tokenizer https://github.com/dotnet/machinelearning/issues/6993\r\n- [ ] Measure and improve performance of Tokenizers API - making breaking changes where necessary. (https://github.com/dotnet/machinelearning/issues/6982)\r\n- [ ] Explore existing construction patterns to improve usability - both in factory API and load from configuration.\r\n- [x] Drive adoption of Microsoft.ML.Tokenizers in other libraries\r\n- [ ] Docs and samples\r\n\r\nBacklog:\r\n- [ ] Investigate using Microsoft.ML.Tokenizers in Azure OpenAI SDK\r\n- [ ] WordPiece algorithm https://github.com/dotnet/machinelearning/issues/6988\r\n- [ ] BERTTokenizer https://github.com/dotnet/machinelearning/issues/6991\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6984","RelatedDescription":"Open issue \"Improve Microsoft.ML.Tokenizers and drive complete 1.0 API\" (#6984)"},{"Id":"2113707765","IsPullRequest":false,"CreatedAt":"2024-02-01T23:28:41","Actor":"tarekgh","Number":"6982","RawContent":null,"Title":"Track Tokenizers design feedback","State":"open","Body":"This issue to track investigating and address the feedback we got regarding the tokenizers design \r\n\r\n### @stephentoub Feedback\r\nIf we’re able to make such breaking changes, we should also be reconsidering other aspects of the library then I think, in particular for perf, for example:\r\n\r\n- Token is class, which means allocation per token, plus the design effectively forces the string Value of the Token to be materialized even if it’s never used.\r\n- I don’t see any way to get just a token count without materializing the list of tokens, even though just the count is a commonly needed thing in these scenarios. Presumably such an API could get away with a lot less overhead / allocation.\r\n- Should there be support for spans baked in?","Url":"https://github.com/dotnet/machinelearning/issues/6982","RelatedDescription":"Open issue \"Track Tokenizers design feedback\" (#6982)"},{"Id":"2109119432","IsPullRequest":false,"CreatedAt":"2024-01-31T01:44:29","Actor":"ericstj","Number":"6980","RawContent":null,"Title":"ResourceManagerUtils.DownloadResource aquires mutex on one thread and releases from another","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: [e.g. Windows 10] Win 11\r\n - ML.NET Version: [e.g. ML.NET v1.5.5] latest\r\n - .NET Version: [e.g. .NET 5.0] .NET 6.0\r\n\r\n**Describe the bug**\r\nI noticed an exception during local testing.   The error from the test was `DownloadFailed with exception One or more errors occurred. (Object synchronization method was called from an unsynchronized block of code.)`  This is happening because we are using a Mutex within an async method.\r\n\r\nMutex's have thread affinity.  They must be released from the same thread that they were acquired from:\r\nhttps://learn.microsoft.com/en-us/dotnet/api/system.threading.mutex.releasemutex?view=net-8.0\r\n\r\nHowever an async method that uses ConfigureAwait(false) will not necessarily resume on the same thread.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Delete local copies of ML.NET resources (eg from %TEMP%\\mlnet)\r\n2. Run `dotnet test` on `Microsoft.ML.TorchSharp.Tests`\r\n3. Observe failure, if not observed then repeat from step 1.\r\n\r\n**Expected behavior**\r\nTests run to completion.\r\n\r\n**Screenshots, Code, Sample Projects**\r\n```\r\nSystem.InvalidOperationException : Error downloading resource from 'https://aka.ms/mlnet-resources/models/pretrained_Roberta_encoder.tsm': DownloadFailed with exception One or more errors occurred. (Object synchronization method was called from an unsynchronized block of code.)\\\\nDownloadFailed with exception One or more errors occurred. (A task was canceled.)\\\\nDownloadFailed with exception One or more errors occurred. (The wait completed due to an abandoned mutex.)\\\\nDownloadFailed with exception One or more errors occurred. (A task was canceled.)\\\\nDownloadFailed with exception One or more errors occurred. (The wait completed due to an abandoned mutex.)\\\\n\\nmodel file could not be downloaded!\r\n   at Microsoft.ML.TorchSharp.Roberta.QATrainer.Trainer.GetModelPath() in C:\\src\\dotnet\\machinelearning\\src\\Microsoft.ML.TorchSharp\\Roberta\\QATrainer.cs:line 260\r\n```\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6980","RelatedDescription":"Open issue \"ResourceManagerUtils.DownloadResource aquires mutex on one thread and releases from another\" (#6980)"},{"Id":"2109052001","IsPullRequest":false,"CreatedAt":"2024-01-31T00:30:57","Actor":"boneatjp","Number":"6979","RawContent":null,"Title":"Problem with IMonitor with Microsoft.ML.AutoML Version 0.21.0 and 0.21.1","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows11 Pro 23H2 64GB\r\n - ML.NET Version: ML.NET 3.0.1\r\n - .NET Version: .NET 8.0\r\n\r\n**Describe the bug**\r\nWriting windows form application using ML.NET 3.0.1:\r\n\r\nNuGet\r\nMicrosoft.ML Version 3.0.1\r\nMicrosoft.ML.AutoML Version 0.20.1\r\nMicrosoft.ML.CpuMath Version 3.0.1\r\nMicrosoft.ML.DataView Version 3.0.1\r\nMicrosoft.ML.FastTree Version 3.0.1\r\nMicrosoft.ML.LightGbm Version 3.0.1\r\nMicrosoft.ML.Mkl.Components Version 3.0.1\r\nMicrosoft.ML.Mkl.Redist Version 3.0.1\r\n\r\n**To Reproduce**\r\nInstalling Microsoft.ML.AutoML Version 0.21.0 or 0.21.1, my Monitor class does not behave the way it does with Microsoft.ML.AutoML Version 0.20.1.\r\n\r\n```\r\n// this class display trial information\r\npublic class AutoMLMonitor : IMonitor\r\n{\r\n    public AutoMLMonitor()\r\n    {\r\n        :\r\n    }\r\n    public void ReportBestTrial(TrialResult result)\r\n    {\r\n        :\r\n    }\r\n    public void ReportCompletedTrial(TrialResult result)\r\n    {\r\n        :\r\n    }\r\n    public void ReportFailTrial(TrialSettings settings, Exception exception = null)\r\n    {\r\n        :\r\n    }\r\n    public void ReportRunningTrial(TrialSettings settings)\r\n    {\r\n        :\r\n    }\r\n}\r\n\r\n// to cancel the experiment\r\nCancellationTokenSource cts;\r\nprivate void btnCancel_Click(object sender, EventArgs e)\r\n{\r\n    cts.Cancel();\r\n}\r\n\r\n// when running\r\nprivate async void ExecAutoML()\r\n{\r\n    // Set neccesarry options\r\n    :\r\n    //\r\n    AutoMLExperiment experiment = mlContext.Auto().CreateExperiment();\r\n    var monitor = new AutoMLMonitor();\r\n    experiment.SetMonitor(monitor);\r\n    cts = new CancellationTokenSource();\r\n    TrialResult experimentResults = await experiment.RunAsync(cts.Token);\r\n}\r\n\r\n```\r\n**Expected behavior**\r\nBy clicking btnCancel, experiment stops.  It works fine with version 0.20.1, but would not work with version 0.21.0 or 0.21.1.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6979","RelatedDescription":"Open issue \"Problem with IMonitor with Microsoft.ML.AutoML Version 0.21.0 and 0.21.1\" (#6979)"},{"Id":"2105523811","IsPullRequest":true,"CreatedAt":"2024-01-30T19:36:24","Actor":"dotnet-maestro[bot]","Number":"6976","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 97926d79-6b8b-4d32-c8db-08d9d479971c\r\n- **Build**: 20240126.5\r\n- **Date Produced**: January 26, 2024 11:54:14 PM UTC\r\n- **Commit**: 66c9c5397d599af40f2a94989241944f5a73442a\r\n- **Branch**: refs/heads/main\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.24069.2 to 9.0.0-beta.24076.5][1]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 9.0.0-beta.24069.2 to 9.0.0-beta.24076.5][1]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.24069.2 to 9.0.0-beta.24076.5][1]\r\n  - **Microsoft.DotNet.SignTool**: [from 9.0.0-beta.24069.2 to 9.0.0-beta.24076.5][1]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 9.0.0-beta.24069.2 to 9.0.0-beta.24076.5][1]\r\n  - **Microsoft.DotNet.XliffTasks**: [from 9.0.0-beta.24069.2 to 9.0.0-beta.24076.5][1]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.24069.2 to 9.0.0-beta.24076.5][1]\r\n\r\n[1]: https://github.com/dotnet/arcade/compare/abddd0bd51...66c9c5397d\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:97926d79-6b8b-4d32-c8db-08d9d479971c)\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6976","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#6976)"},{"Id":"2108613240","IsPullRequest":false,"CreatedAt":"2024-01-30T19:35:40","Actor":"ericstj","Number":"6978","RawContent":null,"Title":" Microsoft.ML.TorchSharp.Tests.QATests.TestSimpleQA followed by process killed / return 137","State":"open","Body":"## Build Information\r\nBuild: https://dev.azure.com/dnceng-public/public/_build/results?buildId=530980&view=results\r\nBuild error leg or test failing: Microsoft.ML.TorchSharp.Tests Work Item\r\nPull Request https://github.com/dotnet/machinelearning/pull/6976\r\n\r\n<!-- Error message template  -->\r\n## Error Message\r\n\r\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssues.md#how-to-fill-out-a-known-issue-error-section).\r\n\r\n<!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. -->\r\n\r\n```json\r\n{\r\n  \"ErrorMessage\": [ \"Starting test: Microsoft.ML.TorchSharp.Tests.QATests.TestSimpleQA\", \"+ export _commandExitCode=137\" ],\r\n  \"ErrorPattern\": \"\",\r\n  \"BuildRetry\": false,\r\n  \"ExcludeConsoleLog\": false\r\n}\r\n```\r\n\r\n**System Information (please complete the following information):**\r\n - OS & Version: Ubuntu 18.04\r\n - ML.NET Version: latest\r\n - .NET Version: .NET 6.0\r\n\r\n**Describe the bug**\r\nThis test is failing in CI somewhat regularly.  The error pattern looks like the following:\r\n```\r\nStarting test: Microsoft.ML.TorchSharp.Tests.QATests.TestSimpleQA\r\nKilled\r\n+ export _commandExitCode=137\r\n````\r\nHere are a few instances:\r\nhttps://helixre107v0xd1eu3ibi6ka.blob.core.windows.net/dotnet-machinelearning-refs-pull-6974-merge-f61a125156aa4af1bd/Microsoft.ML.TorchSharp.Tests/1/console.83a6fa6c.log?helixlogtype=result\r\nhttps://helixre107v0xdeko0k025g8.blob.core.windows.net/dotnet-machinelearning-refs-pull-6976-merge-0a13c2cd41724c3483/Microsoft.ML.TorchSharp.Tests/1/console.ff57f777.log?helixlogtype=result\r\n\r\nI can't currently capture this failure in a known issue because there is no unique line logged.  I've seen this failure numerous times - always when `TestSimpleQA` is running.\r\n<!--Known issue error report start -->\r\n### Report\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|0|0|\r\n<!--Known issue error report end -->\r\n<!-- Known issue validation start -->\r\n ### Known issue validation\r\n**Build: :mag_right:** \r\n**Result validation:** :warning: Build internal information not found. This may happen if your build is too old. Please use a build that is no older than two weeks. If the problem persists, contact [.NET Engineering Services Team](https://dev.azure.com/dnceng/internal/_wiki/wikis/DNCEng%20Services%20Wiki/890/How-to-get-a-hold-of-Engineering-Servicing) and share this issue.\r\n**Validation performed at:** 2/14/2024 10:25:46 PM UTC\r\n<!-- Known issue validation end -->","Url":"https://github.com/dotnet/machinelearning/issues/6978","RelatedDescription":"Open issue \" Microsoft.ML.TorchSharp.Tests.QATests.TestSimpleQA followed by process killed / return 137\" (#6978)"},{"Id":"2101177179","IsPullRequest":true,"CreatedAt":"2024-01-30T19:26:31","Actor":"dotnet-maestro[bot]","Number":"6974","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\r\n\r\n[marker]: <> (Begin:45c6fd49-3a4f-4675-f3da-08dc0c527e17)\r\n## From https://github.com/dotnet/arcade\r\n- **Subscription**: 45c6fd49-3a4f-4675-f3da-08dc0c527e17\r\n- **Build**: 20240125.5\r\n- **Date Produced**: January 25, 2024 9:33:03 PM UTC\r\n- **Commit**: 07cf24f27ee58b5d1a9662334a101d84bd1e07e5\r\n- **Branch**: refs/heads/release/8.0\r\n\r\n[DependencyUpdate]: <> (Begin)\r\n\r\n- **Updates**:\r\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.24059.4 to 8.0.0-beta.24075.5][7]\r\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 8.0.0-beta.24059.4 to 8.0.0-beta.24075.5][7]\r\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.24059.4 to 8.0.0-beta.24075.5][7]\r\n  - **Microsoft.DotNet.SignTool**: [from 8.0.0-beta.24059.4 to 8.0.0-beta.24075.5][7]\r\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 8.0.0-beta.24059.4 to 8.0.0-beta.24075.5][7]\r\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.24059.4 to 8.0.0-beta.24075.5][7]\r\n\r\n[7]: https://github.com/dotnet/arcade/compare/61ae141d2b...07cf24f27e\r\n\r\n[DependencyUpdate]: <> (End)\r\n\r\n\r\n[marker]: <> (End:45c6fd49-3a4f-4675-f3da-08dc0c527e17)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6974","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#6974)"},{"Id":"2105749553","IsPullRequest":false,"CreatedAt":"2024-01-29T15:24:59","Actor":"80LevelElf","Number":"6977","RawContent":null,"Title":"Is it possible to define custom optimization metric for AutoML?","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/issues/6977","RelatedDescription":"Open issue \"Is it possible to define custom optimization metric for AutoML?\" (#6977)"},{"Id":"2101319468","IsPullRequest":true,"CreatedAt":"2024-01-25T23:16:20","Actor":"michaelgsharp","Number":"6975","RawContent":null,"Title":"Update OnnxRuntime to 1.16.3","State":"open","Body":"Updates OnnxRuntime to 1.16.3 and fixes the breaking change.","Url":"https://github.com/dotnet/machinelearning/pull/6975","RelatedDescription":"Open PR \"Update OnnxRuntime to 1.16.3\" (#6975)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-02-16T03:30:16.098121Z","RunDurationInMilliseconds":451}