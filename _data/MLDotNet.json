{"Data":{"GitHub":{"Issues":[{"Id":"1625741483","IsPullRequest":false,"CreatedAt":"2023-03-20T21:08:19","Actor":"CBrauer","Number":"6598","RawContent":null,"Title":"I don’t understand the analysis on you web page for SSA Time Series","State":"closed","Body":"I’m trying to get good result from the “SsaForecastingEstimator”, and I am failing to do so. In trying to understand this algorithm better, I went to your documentation at: [TimeSeriesCatalog.ForecastBySsa Method (Microsoft.ML) | Microsoft Learn](https://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.timeseriescatalog.forecastbyssa?f1url=%3FappId%3DDev16IDEF1%26l%3DEN-US%26k%3Dk(Microsoft.ML.TimeSeriesCatalog.ForecastBySsa)%3Bk(DevLang-csharp)%26rd%3Dtrue&view=ml-dotnet).\r\n\r\nPlease answer the following questions:\r\n1.\tIn the sample code, the input data for a straight line is duplicated three times. Why?\r\n2.\tThe model is defined under the comment: “// Instantiate the forecasting model”.  There is an argument with the value of 11.  Where in the hell did this number come from?\r\n3.\tIt seems to me that if you extrapolate (i.e., forecast) the straight line five times, you should get {5, 6, 7, 8, 9}.  You got: [1.977226, 1.020494, 1.760543, 3.437509, 4.266461].  Are you proud of these numbers?\r\n\r\nI suggest that you guys come up with better documentation on the “SsaForecastingEstimator”,\r\nCharles\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6598","RelatedDescription":"Closed issue \"I don’t understand the analysis on you web page for SSA Time Series\" (#6598)"},{"Id":"1630082641","IsPullRequest":false,"CreatedAt":"2023-03-19T11:39:17","Actor":"JeremyMahieu","Number":"6602","RawContent":null,"Title":"ExtractPixels transform not able to split in multi dimentional array.","State":"closed","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 10\r\n - ML.NET Version: 2.0.1\r\n - .NET Version: .NET 7.0\r\n\r\n**Describe the bug**\r\nGetting the following error. I cannot get the ExtractPixels transformer to split the pixels up into a multi dimentional array. (8 images (can get this down to 1 with batch size), 3 channel, 1280pixel, 1280pixel.\r\n\r\nSystem.InvalidOperationException: 'Input shape mismatch: Input 'images' has shape 8,3,1280,1280, but input data is of length 4915200.'\r\n```\r\n   at Microsoft.ML.Transforms.Onnx.OnnxTransformer.Mapper..ctor(OnnxTransformer parent, DataViewSchema inputSchema)\r\n   at Microsoft.ML.Transforms.Onnx.OnnxTransformer.MakeRowMapper(DataViewSchema inputSchema)\r\n   at Microsoft.ML.Data.RowToRowTransformerBase.GetOutputSchema(DataViewSchema inputSchema)\r\n   at Microsoft.ML.Data.TrivialEstimator`1.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n```\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create an onnx model with ultralytics yolov8\r\n2. Try to use it in .net\r\n\r\n**Expected behavior**\r\nHave the pixel extractor split the image into a float[1, 3, 1280, 1280] form.\r\n\r\n**Screenshots, Code, Sample Projects**\r\nPipeline looks like this\r\n```csharp\r\n            var inputColumns = new string[] { \"images\" };\r\n            var outputColumns = new string[] { \"output0\" };\r\n            var pipeline = mlContext.Transforms.LoadImages(outputColumnName: \"images\", imageFolder: \"\", inputColumnName: \"images\")\r\n                .Append(mlContext.Transforms.ResizeImages(outputColumnName: \"images\", imageWidth: 1280, imageHeight: 1280, inputColumnName: \"images\"))\r\n                .Append(mlContext.Transforms.ExtractPixels(outputColumnName: \"images\"))\r\n                .Append(mlContext.Transforms.ApplyOnnxModel(modelFile: ONNX_MODEL_PATH, outputColumnNames: outputColumns, inputColumnNames: inputColumns));\r\n            var emptyDv = mlContext.Data.LoadFromEnumerable(new OnnxInput[] { });\r\n\r\n            return pipeline.Fit(emptyDv); (ERROR HERE)\r\n```\r\n\r\nThe model looks like this:\r\n![image](https://user-images.githubusercontent.com/23409814/226076837-16a03f9b-35bc-4855-beb5-5feaaaaec1d4.png)\r\n\r\n**Additional context**\r\nI switched from a working project with ml.net model and wanted to use an onnx model.","Url":"https://github.com/dotnet/machinelearning/issues/6602","RelatedDescription":"Closed issue \"ExtractPixels transform not able to split in multi dimentional array.\" (#6602)"},{"Id":"1629156888","IsPullRequest":false,"CreatedAt":"2023-03-17T11:33:07","Actor":"BigHeadDev","Number":"6601","RawContent":null,"Title":"How to use Microsoft.ML.ImageAnalytics 2.0.1 to write ModelInput classes","State":"open","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 11\r\n- **.NET Version (eg., dotnet --info)**:  .NET 6\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nI refer to Microsoft documentation and YouTube bloggers to write a program for accessing the onnx model with ML.NET\r\nIt is a red wine/Baijiu recognition model\r\n,The following code snippet shows the key errors：\r\n``` C#\r\npublic class WineInput {// C# Input Mapping\r\n        [ImageType(ImageSettings.imageWidth, ImageSettings.imageHeight)]\r\n        public Bitmap Image { get; set; }\r\n    }\r\n    public struct ImageSettings {\r\n        public const int imageHeight = 416;\r\n        public const int imageWidth = 416;\r\n    }\r\n```\r\n``` C#\r\nMLContext context = new MLContext();\r\n            var emptyData = new List<WineInput>();\r\n            var data = context.Data.LoadFromEnumerable(emptyData);//Load Empty Data //Error!\r\n``` \r\n\r\n- **What happened?**\r\nI haven't done anything yet, and an error was reported in this line of code.！\r\nHowever, I found that the code is identical, but an error will be reported\r\n![image](https://user-images.githubusercontent.com/23449064/225888845-22fdb42a-912d-4b03-9963-d717828c3214.png)\r\nI cloned the YouTube blogger's git and found that all nugets used are ML. Net 1.4\r\nSo I also downgraded the nuget package\r\nIt's actually working properly\r\nNo changes to the code\r\n\r\n**After my comparison, I found that the dependency of the nuget package Microsoft.ML.ImageAnalytics has changed after upgrading to 2.0**\r\n1.4 Normal works, 2.0 Abnormal works\r\n![image](https://user-images.githubusercontent.com/23449064/225891591-7de8ce8e-8498-471c-a60e-9194e186ecc6.png)\r\n![image](https://user-images.githubusercontent.com/23449064/225891886-c26919a1-29df-4de6-99d0-a6b304c4ae4d.png)\r\n\r\n- **What did you expect?**\r\nStarting with 2.0, it no longer rely on System.Drawing.Common,I don't know how to modify the Bitmap in the InputModel to achieve a workable effect\r\n### Source code / logs\r\nInput/Output Model:\r\n```C# \r\npublic class WineInput {\r\n        [ImageType(ImageSettings.imageWidth, ImageSettings.imageHeight)]\r\n        public Bitmap Image { get; set; }\r\n    }\r\n    public struct ImageSettings {\r\n        public const int imageHeight = 416;\r\n        public const int imageWidth = 416;\r\n    }\r\n\r\ninternal class WineOutPut {\r\n        [ColumnName(\"model_outputs0\")]\r\n        public float[] PredictedLabel { get; set; }\r\n\r\n    }\r\n```\r\nPrdictionProcess:\r\n```C#\r\n public class WinePrediction {\r\n        private string modelFile = \"./OnnxModels/RedOrWhiteWine.onnx\";\r\n        PredictionEngine<WineInput, WineOutPut> predictionEngine = null;\r\n        public WinePrediction() {\r\n            MLContext context = new MLContext();\r\n            var emptyData = new List<WineInput>();\r\n            var data = context.Data.LoadFromEnumerable(emptyData);\r\n\r\n            var pipeline = context.Transforms.ResizeImages(\r\n                resizing: Microsoft.ML.Transforms.Image.ImageResizingEstimator.ResizingKind.Fill,\r\n                outputColumnName: \"data\",\r\n                imageWidth: ImageSettings.imageWidth,\r\n                imageHeight: ImageSettings.imageHeight,\r\n                inputColumnName: nameof(WineInput.Image)\r\n                )\r\n                .Append(context.Transforms.ExtractPixels(outputColumnName: \"data\")\r\n                .Append(context.Transforms.ApplyOnnxModel(modelFile: modelFile, outputColumnName: \"model_outputs0\", inputColumnName: \"data\")));\r\n\r\n            var model = pipeline.Fit(data);\r\n\r\n            predictionEngine = context.Model.CreatePredictionEngine<WineInput, WineOutPut>(model);\r\n\r\n        }\r\n        public void Prediction(string path) {\r\n            using (var stream = new FileStream(path, FileMode.Open)) {\r\n                using (var bitmap = (Bitmap)Image.FromStream(stream)) {\r\n                    var prediction = predictionEngine.Predict(new WineInput() { Image = bitmap });\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n```\r\nThis is a link to github for my reference study [click here](https://github.com/jwood803/MLNetExamples/tree/master/MLNetExamples/CustomVisionOnnx)\r\nThe main problem is that there are some difficulties with Bitmap conversion in 2.0\r\nI hope someone can teach me, thank you all\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6601","RelatedDescription":"Open issue \"How to use Microsoft.ML.ImageAnalytics 2.0.1 to write ModelInput classes\" (#6601)"},{"Id":"1626655123","IsPullRequest":false,"CreatedAt":"2023-03-16T03:42:15","Actor":"VenkateshSrini","Number":"6600","RawContent":null,"Title":"More tighter integration of OpenAI models with ML.NET","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nMIcrosoft has a strong alliance with OpenAI. Our expectation is that we should be able to easily get these models say from Model Zoo of Azure (similar HuggingFace) and use them in our application.\r\n\r\n**Describe the solution you'd like**\r\n1) Download and Save a GPT model in a very compressed format\r\n2) on the first access, uncompress and cache the model file. I expect it to be huge\r\n3) Like the GPT API provided by open AI, provide precise input and output objects.\r\n4) Source application will fill in the request object and invoke the model as if it was an resource like database. It will receive the response which it will process\r\n\r\n**Describe alternatives you've considered**\r\n1) Calling API of OpenAI\r\n2) Trying to use model from HuggingFace. I did not how to do this \r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6600","RelatedDescription":"Open issue \"More tighter integration of OpenAI models with ML.NET\" (#6600)"},{"Id":"1626543324","IsPullRequest":true,"CreatedAt":"2023-03-16T01:44:17","Actor":"zewditu","Number":"6599","RawContent":null,"Title":"Change Test to Validate  in Dataset manager","State":"open","Body":"The main goal of this PR is  in https://github.com/dotnet/machinelearning/blob/main/src/Microsoft.ML.AutoML/AutoMLExperiment/IDatasetManager.cs \r\nthe main goal is to set train/ validate dataset, however, names are set like `TrainTestDatasetManager`, 'TestDataset`, hence to make names consistent with the actual usage we need to change \"Test\" to \"validate\"\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6599","RelatedDescription":"Open PR \"Change Test to Validate  in Dataset manager\" (#6599)"},{"Id":"1622505842","IsPullRequest":true,"CreatedAt":"2023-03-15T01:46:48","Actor":"LittleLittleCloud","Number":"6597","RawContent":null,"Title":"add batchsize and arch to imageClassification SweepableTrainer","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\nrelated issue: \r\nhttps://github.com/dotnet/machinelearning-modelbuilder/issues/2526","Url":"https://github.com/dotnet/machinelearning/pull/6597","RelatedDescription":"Closed or merged PR \"add batchsize and arch to imageClassification SweepableTrainer\" (#6597)"},{"Id":"1588307900","IsPullRequest":true,"CreatedAt":"2023-03-09T23:33:39","Actor":"LittleLittleCloud","Number":"6571","RawContent":null,"Title":"Adding more metrics to BinaryClassification Experiment","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n#6570 \r\n","Url":"https://github.com/dotnet/machinelearning/pull/6571","RelatedDescription":"Closed or merged PR \"Adding more metrics to BinaryClassification Experiment\" (#6571)"},{"Id":"1618108836","IsPullRequest":true,"CreatedAt":"2023-03-09T22:59:06","Actor":"LittleLittleCloud","Number":"6596","RawContent":null,"Title":"update max_model when trial fails","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6596","RelatedDescription":"Open PR \"update max_model when trial fails\" (#6596)"},{"Id":"1617112598","IsPullRequest":false,"CreatedAt":"2023-03-09T12:16:28","Actor":"superichmann","Number":"6595","RawContent":null,"Title":"AutoML experiment cannot be executed on Double type columns","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 10\r\n - ML.NET Version: ML.NET v2.0.1\r\n - AutomL Version: ML.NET v0.20.1\r\n - .NET Version: .NET 6.0\r\n\r\n**Describe the bug**\r\nWhen loading data from db column types of double / double precision and using them to create a regression experiment the following error occurs:\r\n\r\n```\r\nSystem.AggregateException\r\n  HResult=0x80131500\r\n  Message=One or more errors occurred. (Schema mismatch for feature column '__Features__': expected Vector<Single>, got Vector<Double> (Parameter 'inputSchema'))\r\n  Source=System.Private.CoreLib\r\n  StackTrace:\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task'1.GetResultCore(Boolean waitCompletionNotification)\r\n   at System.Threading.Tasks.Task'1.get_Result()\r\n   at Microsoft.ML.AutoML.AutoMLExperiment.Run()\r\n   at Microsoft.ML.AutoML.RegressionExperiment.Execute(IDataView trainData, IDataView validationData, ColumnInformation columnInformation, IEstimator'1 preFeaturizer, IProgress'1 progressHandler)\r\n```\r\n\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Create a DB table with 3 double type columns\r\n2. Load with `mlContext.Data.CreateDatabaseLoader`\r\n3. call `mlContext.Auto().CreateRegressionExperiment().Execute` with the data\r\n\r\n**Expected behavior**\r\nThe experiment should run\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6595","RelatedDescription":"Open issue \"AutoML experiment cannot be executed on Double type columns\" (#6595)"},{"Id":"1612189934","IsPullRequest":true,"CreatedAt":"2023-03-06T20:53:11","Actor":"LittleLittleCloud","Number":"6594","RawContent":null,"Title":"add AutoMLExperiment example doc","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n#6589 ","Url":"https://github.com/dotnet/machinelearning/pull/6594","RelatedDescription":"Open PR \"add AutoMLExperiment example doc\" (#6594)"},{"Id":"1609834320","IsPullRequest":false,"CreatedAt":"2023-03-04T15:42:14","Actor":"rnowling","Number":"6593","RawContent":null,"Title":"Broken Links","State":"open","Body":"The links to the Wikipedia page on N-grams and the L-p vector normalization are not being interpreted correctly on the TextFeaturizingEstimator page:\r\n\r\n```markdown\r\nThis estimator gives the user one-stop solution for doing:\r\n\r\n    Language Detection\r\n    [Tokenization](https://en.wikipedia.org/wiki/Lexical_analysis#Tokenization)\r\n    [Text normalization](https://en.wikipedia.org/wiki/Text_normalization)\r\n    [Predefined and custom stopwords removal](https://en.wikipedia.org/wiki/Stop_words)\r\n    [Word-based or character-based Ngram extraction and SkipGram extraction (through the advanced [options](https://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.transforms.text.textfeaturizingestimator?view=ml-dotnet))](https://en.wikipedia.org/wiki/N-gram)\r\n    [TF, IDF or TF-IDF](https://en.wikipedia.org/wiki/Tf%E2%80%93idf)\r\n    [L-p vector normalization](xref: Microsoft.ML.Transforms.LpNormNormalizingTransformer)\r\n```\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for learn.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: deeb31e0-6843-e9ae-e6ad-028c4ec9121b\r\n* Version Independent ID: bf1e4b11-7652-7da4-4791-aa2d9488971c\r\n* Content: [TextFeaturizingEstimator Class (Microsoft.ML.Transforms.Text)](https://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.transforms.text.textfeaturizingestimator?view=ml-dotnet)\r\n* Content Source: [dotnet/xml/Microsoft.ML.Transforms.Text/TextFeaturizingEstimator.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.Transforms.Text/TextFeaturizingEstimator.xml)\r\n* Product: **dotnet-ml-api**\r\n* GitHub Login: @natke\r\n* Microsoft Alias: **nakersha**","Url":"https://github.com/dotnet/machinelearning/issues/6593","RelatedDescription":"Open issue \"Broken Links\" (#6593)"},{"Id":"1609522930","IsPullRequest":false,"CreatedAt":"2023-03-04T01:26:08","Actor":"JeremyMahieu","Number":"6592","RawContent":null,"Title":"[Object Detection] Bounding box rotated due to image exif data","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 10\r\n - ML.NET Version: 2.0.0\r\n - .NET Version: 7.0\r\n\r\n**Describe the bug**\r\nSome images have exit data that says it's a rotated image. In those cases, the bounding boxes found by the model end up being transposed.\r\n\r\nExample: https://jimpl.com/results/X2GX3ZTHTCFKa7ZiVPag4xUP?target=exif\r\n\r\n**To Reproduce**\r\nDo object detection on an image that has exif data saying it's rotated.\r\n\r\n**Expected behavior**\r\nBounding boxes to match pixes on images.\r\n\r\n**Screenshots, Code, Sample Projects**\r\nBlue bounding boxes are the original values, green is after checking if the image is portrait, and transposing where needed.\r\n![image](https://user-images.githubusercontent.com/23409814/222867778-14bccdf2-58ec-4f66-83d7-57f4792c688e.png)\r\n![20221129_163943](https://user-images.githubusercontent.com/23409814/222868022-a28fc3c8-bed3-45bf-b298-7e503a77db62.jpg)\r\n\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6592","RelatedDescription":"Open issue \"[Object Detection] Bounding box rotated due to image exif data\" (#6592)"},{"Id":"1609084663","IsPullRequest":false,"CreatedAt":"2023-03-03T18:31:40","Actor":"RamType0","Number":"6591","RawContent":null,"Title":"Load ONNX from in-memory binary instead of file path","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\n\r\nCurrently, the only way to load ONNX model is to specify concrete file path.\r\nBut the usage of concrete file path is often impossible in some platforms.(e.g. UWP without permission)\r\nLoading ONNX model from in-memory binary representation will solve this problem.\r\n\r\n**Describe the solution you'd like**\r\n\r\nProvide API to load ONNX model from `ReadOnlyMemory<byte>`, `Stream`.\r\n\r\n**Additional context**\r\n\r\n[`OnnxTransformer` has private constructor which accepts `byte[] modelBytes`.](https://github.com/dotnet/machinelearning/blob/db197154dcd924ae9a7e31074a835b86e34e33bb/src/Microsoft.ML.OnnxTransformer/OnnxTransform.cs#L232)","Url":"https://github.com/dotnet/machinelearning/issues/6591","RelatedDescription":"Open issue \"Load ONNX from in-memory binary instead of file path\" (#6591)"},{"Id":"1607943998","IsPullRequest":false,"CreatedAt":"2023-03-03T04:56:04","Actor":"mg-yolo-enterprises","Number":"6590","RawContent":null,"Title":"Improve flexibility of input types for image classification","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nThe image classifier in ML.NET currently accepts input in the form of a byte array (only certain file formats, e.g. png jpeg gif), which is flexible enough for many scenarios. However, it is sometimes the case that the source image originates in a System.Image.Bitmap, OpenCV mat, or other managed/unmanaged memory block not in png/jpeg/gif format. To perform a prediction with this sort of data, it must be converted which takes time and requires allocations for data that already exists.\r\n\r\nIn a production computer vision environment where image data is streamed in as System.Drawing.Bitmap objects whose RawFormat is MemoryBmp, it is undesirable to dedicate 25-30ms per image to save each Bitmap into a managed byte[] whose RawFormat is jpeg (80ms for png), if it can be avoided by an update to allow more direct consumption of other formats and datatypes.\r\n\r\n**Describe the solution you'd like**\r\nDirect consumption of System.Drawing.Bitmap (RawFormat=MemoryBmp) by ML.NET in a way which avoids managed allocations or format conversion would be ideal. Accepting an IntPtr to unmanaged pixel data would be fine as well, with support for bmp format. \r\n\r\n**Describe alternatives you've considered**\r\nVarious methods to convert Bitmap data into byte[] were tested and are functional, but none achieves the performance desired.\r\n\r\n**Additional context**\r\nThe general use case for this is for processing of images received via a camera which streams images in as Bitmap objects. Needing to convert this to managed memory in one of several formats is a bottleneck which would ideally be avoidable through the solution described above.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6590","RelatedDescription":"Open issue \"Improve flexibility of input types for image classification\" (#6590)"},{"Id":"1607607405","IsPullRequest":false,"CreatedAt":"2023-03-02T22:24:40","Actor":"LittleLittleCloud","Number":"6589","RawContent":null,"Title":"Create example for AutoMLExperiment in api doc.","State":"open","Body":"## Where the code example will locate\r\n\r\nMicrosoft.ML.AutoML.Example\r\n\r\n## What examples will be added\r\n- [x] AutoMLExperiment\r\n- [ ] SearchSpace\r\n- [ ] SweepablePipeline","Url":"https://github.com/dotnet/machinelearning/issues/6589","RelatedDescription":"Open issue \"Create example for AutoMLExperiment in api doc.\" (#6589)"},{"Id":"1607191412","IsPullRequest":false,"CreatedAt":"2023-03-02T17:14:08","Actor":"genemars","Number":"6588","RawContent":null,"Title":"Error: \"Microsoft.ML currently supports 'x64' and 'x86' processor\" when target runtime is *linux-arm* or *linux-arm64*","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Linux 5.19.0-32-generic 22.04.1-Ubuntu\r\n - ML.NET Version: 2.0.1\r\n - .NET Version: 6.0\r\n\r\n\r\n**Describe the bug**\r\nUnable to build a project if target runtime is set to either `linux-arm` or `linux-arm64`.\r\nError:\r\n```\r\n~/.nuget/packages/microsoft.ml/2.0.1/build/netstandard2.0/Microsoft.ML.targets(16,5): error :\r\n     Microsoft.ML currently supports 'x64' and 'x86' processor architectures.\r\n     Please ensure your application is targeting 'x64' or 'x86'.\r\n```\r\nhttps://github.com/dotnet/machinelearning/blob/db197154dcd924ae9a7e31074a835b86e34e33bb/src/Microsoft.ML/build/netstandard2.0/Microsoft.ML.targets#L7-L20\r\n\r\n\r\n\r\n**To Reproduce**\r\nCreate a console project, add a reference to `Microsoft.ML 2.0.1` package, try to build the project with target runtime set to either `linux-arm` or `linux-arm64`.\r\n\r\n\r\n**Expected behavior**\r\nShould build without errors.\r\n\r\n\r\n**Screenshot**\r\n![Schermata del 2023-03-02 18-08-15](https://user-images.githubusercontent.com/6654265/222501243-78bd5571-f3dd-4836-8ab2-1e919f645dee.png)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6588","RelatedDescription":"Open issue \"Error: \"Microsoft.ML currently supports 'x64' and 'x86' processor\" when target runtime is *linux-arm* or *linux-arm64*\" (#6588)"},{"Id":"1607133064","IsPullRequest":false,"CreatedAt":"2023-03-02T16:36:46","Actor":"luisquintanilla","Number":"6587","RawContent":null,"Title":"Input column 'PredictedLabel' doesn't contain key values metadata ","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: \r\n - .NET Version: .NET 7\r\n \r\n**Describe the bug**\r\n\r\nWhen loading a LightGBM model for scoring, I get the following error:\r\n\r\n```text\r\nInput column 'PredictedLabel' doesn't contain key values metadata (Parameter 'inputSchema')\r\n```\r\n\r\n**Screenshots, Code, Sample Projects**\r\n\r\nStack Trace\r\n\r\n```text\r\n   at Microsoft.ML.Transforms.KeyToValueMappingEstimator.GetOutputSchema(SchemaShape inputSchema)\r\n   at Microsoft.ML.Data.EstimatorChain`1.GetOutputSchema(SchemaShape inputSchema)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Program.<Main>$(String[] args) in C:\\Dev\\LGBMLoadingSample\\LGBMLoadingSample\\Program.cs:line 22\r\n```\r\n\r\nCode that throws error:\r\n\r\n```csharp\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.Data;\r\n\r\nvar ctx = new MLContext();\r\n\r\nvar modelPath = \"iris-lgbm.txt\";\r\n\r\nvar data = new[]\r\n{\r\n    new {SepalLength=5.1f, SepalWidth=3.5f,PetalLength=1.4f, PetalWidth=0.2f}\r\n};\r\n\r\nvar dv = ctx.Data.LoadFromEnumerable(data);\r\n\r\nusing(var modelStream = new FileStream(modelPath,FileMode.Open))\r\n{\r\n    var pipeline =\r\n        ctx.Transforms.Concatenate(\"Features\", \"SepalLength\", \"SepalWidth\", \"PetalLength\", \"PetalWidth\")\r\n            .Append(ctx.MulticlassClassification.Trainers.LightGbm(modelStream), TransformerScope.Scoring)\r\n            .Append(ctx.Transforms.Conversion.MapKeyToValue(\"PredictedLabel\"));\r\n\r\n    var model = pipeline.Fit(dv);\r\n\r\n    var predictions = model.Transform(dv);\r\n\r\n    var predictionCol = predictions.GetColumn<string>(\"PredictedLabel\");\r\n\r\n    foreach(var pred in predictionCol)\r\n    {\r\n        Console.WriteLine(pred);\r\n    }\r\n};\r\n```\r\n\r\nWorking code:\r\n\r\n```csharp\r\nusing(var modelStream = new FileStream(modelPath,FileMode.Open))\r\n{\r\n    var pipeline =\r\n        ctx.Transforms.Concatenate(\"Features\", \"SepalLength\", \"SepalWidth\", \"PetalLength\", \"PetalWidth\")\r\n            .Append(ctx.MulticlassClassification.Trainers.LightGbm(modelStream), TransformerScope.Scoring);\r\n\r\n    var model = pipeline.Fit(dv);\r\n\r\n    var predictions = model.Transform(dv);\r\n\r\n    var predictionCol = predictions.GetColumn<uint>(\"PredictedLabel\");\r\n\r\n    foreach(var pred in predictionCol)\r\n    {\r\n        Console.WriteLine(pred);\r\n    }\r\n};\r\n```\r\n\r\nModel: \r\n\r\n[iris-lgbm.txt](https://github.com/dotnet/machinelearning/files/10873652/iris-lgbm.txt)\r\n\r\n\r\nOutput Schema: \r\n\r\n![image](https://user-images.githubusercontent.com/46974588/222494779-db8ebcf3-c241-42c2-922e-95af27aa5682.png)\r\n\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6587","RelatedDescription":"Open issue \"Input column 'PredictedLabel' doesn't contain key values metadata \" (#6587)"},{"Id":"1606658397","IsPullRequest":false,"CreatedAt":"2023-03-02T11:50:58","Actor":"ChickenOnBoard","Number":"6586","RawContent":null,"Title":"System.BadImageFormatException related to Microsoft.ML.CpuMath","State":"open","Body":"**System Information:**\r\n - OS & Version: Windows 11 \r\n - ML.NET Version: ML.NET v2.0.1\r\n - .NET Version: .NET 4.7.2\r\n\r\n**Describe the bug**\r\nGetting System.BadImageFormatException when running my app. Screenshot below:\r\n\r\n\r\n**Screenshots, Code, Sample Projects**\r\n![image](https://user-images.githubusercontent.com/30071522/222420199-f5d0bd93-8878-48fd-8a20-bc99a5c38fb6.png)\r\n![image](https://user-images.githubusercontent.com/30071522/222420678-5e5f81a8-37a2-439e-a1b8-94ed4a663c47.png)\r\n![image](https://user-images.githubusercontent.com/30071522/222420710-b346d615-fc3b-4383-9c82-737856c8c849.png)\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6586","RelatedDescription":"Open issue \"System.BadImageFormatException related to Microsoft.ML.CpuMath\" (#6586)"},{"Id":"1605904743","IsPullRequest":true,"CreatedAt":"2023-03-02T00:20:17","Actor":"LittleLittleCloud","Number":"6584","RawContent":null,"Title":"Add ICanSummarize and implement IEstimator.Summary for StandardTrainers","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\n#6563 \r\n\r\nThis PR adds a `Summary` function to all `IEstimator<ITransformer>` which prints meta data like estimator name, hyper-parameters and other informations. This helps code generator in model builder to generate pipeline code.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6584","RelatedDescription":"Open PR \"Add ICanSummarize and implement IEstimator.Summary for StandardTrainers\" (#6584)"},{"Id":"1592496191","IsPullRequest":true,"CreatedAt":"2023-03-01T21:14:44","Actor":"LittleLittleCloud","Number":"6576","RawContent":null,"Title":"Add default search space for standard trainers","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\n#6577 \r\n\r\nthe offline process of fewshot/zeroshot AutoML needs to be run on a fixed search space. This PR builds fixed search spaces for standard trainers using `Microsoft.ML.SearchSpace`","Url":"https://github.com/dotnet/machinelearning/pull/6576","RelatedDescription":"Closed or merged PR \"Add default search space for standard trainers\" (#6576)"},{"Id":"1604590637","IsPullRequest":false,"CreatedAt":"2023-03-01T09:26:13","Actor":"Ben-Pattinson","Number":"6583","RawContent":null,"Title":"Please provide examples of the vocab and merge file formats","State":"open","Body":"\r\nPlease provide examples of the vocab and merge file formats. Better yet, provide links to downloadable pre-created files for common purposes GPT3 etc. \r\n\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for learn.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: 909b9e8c-f08c-ba0a-6c31-7dd151699999\r\n* Version Independent ID: 909b9e8c-f08c-ba0a-6c31-7dd151699999\r\n* Content: [Bpe Constructor (Microsoft.ML.Tokenizers)](https://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.tokenizers.bpe.-ctor?view=ml-dotnet-preview#microsoft-ml-tokenizers-bpe-ctor(system-string-system-string-system-string-system-string-system-string))\r\n* Content Source: [dotnet/xml/Microsoft.ML.Tokenizers/Bpe.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.Tokenizers/Bpe.xml)\r\n* Product: **dotnet-ml-api**\r\n* GitHub Login: @natke\r\n* Microsoft Alias: **nakersha**","Url":"https://github.com/dotnet/machinelearning/issues/6583","RelatedDescription":"Open issue \"Please provide examples of the vocab and merge file formats\" (#6583)"},{"Id":"1604547983","IsPullRequest":false,"CreatedAt":"2023-03-01T08:59:43","Actor":"NMSAzulX","Number":"6582","RawContent":null,"Title":"There is a problem when using LbfgsMaximumEntropy to learn image classification. A continuous learning result that is not expected.","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: [Windows 11] \r\n - ML.NET Version: [v2.0.1]\r\n - .NET Version: [.NET 6.0]\r\n - Other:  \r\n       - [Microsoft.ML.ImageAnalytics 2.0.1]\r\n       - [SciSharp.TensorFlow.Redist 2.3.1]\r\n\r\n\r\n**Describe the bug**\r\n\r\nI used LbfgsMaximumEntropy and kept it learning cat/dog pictures, but produced unexpected results.\r\nAll the results are cats.\r\n\r\n**To Reproduce**\r\n\r\n1. Learning 100 cat pictures amd 1 dog picture.\r\n2. Learning 100 dog pictures.\r\n3. Predict Result.\r\n\r\n[Code ImageMulticlassTrainer](https://github.com/NMSAzulX/LbfgsMaximumEntropyTest/blob/main/ImageTest/ImageTest/ImageMulticlassTrainer.cs)\r\n\r\nReuslt:  all label is cat and score is 1.\r\n\r\n\r\n**Screenshots, Code, Sample Projects**\r\nIf you need the complete code, I will fix the code.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6582","RelatedDescription":"Open issue \"There is a problem when using LbfgsMaximumEntropy to learn image classification. A continuous learning result that is not expected.\" (#6582)"},{"Id":"1603514759","IsPullRequest":false,"CreatedAt":"2023-02-28T17:42:24","Actor":"tiger2014","Number":"6581","RawContent":null,"Title":"'SelectBestBinaryFeatures' and 'Model' can't be found","State":"open","Body":"### System information\r\n\r\n- **win11**:\r\n- **.NET Version7**: \r\n\r\n### Issue\r\n\r\nI download the code from the network, but it can't pass compiling. What can I do?\r\n\r\n![image](https://user-images.githubusercontent.com/6703612/221933868-bea19106-23a2-4617-aea1-d44013c714e7.png)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6581","RelatedDescription":"Open issue \"'SelectBestBinaryFeatures' and 'Model' can't be found\" (#6581)"},{"Id":"1599313968","IsPullRequest":false,"CreatedAt":"2023-02-24T21:43:48","Actor":"Joecadbert","Number":"6580","RawContent":null,"Title":"ResNet101 [ShapeInferenceError] Attribute pads has incorrect size","State":"open","Body":"I am using ML.NET in C# to extract features for a reverse image search.  It is based on the code sample from Microsoft's documentation at the following page: [https://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.onnxcatalog.dnnfeaturizeimage?view=ml-dotnet#microsoft-ml-onnxcatalog-dnnfeaturizeimage(microsoft-ml-transformscatalog-system-string-system-func((microsoft-ml-transforms-onnx-dnnimagefeaturizerinput-microsoft-ml-data-estimatorchain((microsoft-ml-transforms-columncopyingtransformer))))-system-string)](url)\r\n\r\nI have been successful at extracting features with ResNet18, TensorFlow, TensorFlowInceptionV3, and ONNX TinyYolo2.\r\n\r\n**Describe the bug**\r\nI get the following error when trying to use ResNet50 and ResNet101.\r\n**ResNet50**\r\n> System.InvalidOperationException: 'Error initializing model :Microsoft.ML.OnnxRuntime.OnnxRuntimeException: [ErrorCode:Fail] Load model from C:\\Users\\myname\\source\\repos\\ReverseImageSearch\\ReverseImageSearch\\bin\\Debug\\net7.0\\DnnImageModels\\ResNet50Onnx\\ResNet50.onnx failed:Node (Pooling1096) Op (AveragePool) [ShapeInferenceError] Attribute pads has incorrect size\r\n\r\n**ResNet101**\r\n> System.InvalidOperationException: 'Error initializing model :Microsoft.ML.OnnxRuntime.OnnxRuntimeException: [ErrorCode:Fail] Load model from C:\\Users\\myname\\source\\repos\\ReverseImageSearch\\ReverseImageSearch\\bin\\Debug\\net7.0\\DnnImageModels\\ResNet101Onnx\\ResNet101.onnx failed:Node (Pooling2286) Op (AveragePool) [ShapeInferenceError] Attribute pads has incorrect size\r\n\r\nThis is similar to the \"**Closed**\" issue at the following link  [https://github.com/dotnet/machinelearning/issues/4075](url)\r\n\r\nHere is the function\r\n\r\n```\r\npublic static float[] GenerateImageFeaturesResNet101(string ImagePath)\r\n{\r\n\r\n\tvar myFileName = System.IO.Path.GetFileName(ImagePath);\r\n\r\n\t// Create a new ML context, for ML.NET operations. It can be used for\r\n\t// exception tracking and logging, as well as the source of randomness.\r\n\tvar mlContext = new MLContext();\r\n\r\n\t//\r\n\tvar myImageNetData = new List<ImageNetData>\r\n\t\t{\r\n\t\t\tnew ImageNetData {ImagePath = ImagePath, Label = myFileName}\r\n\t\t};\r\n\r\n\tvar data = mlContext.Data.LoadFromEnumerable(myImageNetData);\r\n\r\n\tvar imagesFolder = Path.GetDirectoryName(ImagePath);\r\n\r\n\t// Image loading pipeline.\r\n\t// \r\n\tvar pipeline = mlContext.Transforms.LoadImages(outputColumnName: \"ImageObject\", imagesFolder, inputColumnName: \"ImagePath\")\r\n\t\t\t\t\t.Append(mlContext.Transforms.ResizeImages(outputColumnName: \"ImageObjectResized\", imageWidth:\r\n\t\t\t\t\t\t\t\t224, imageHeight: 224, inputColumnName: \"ImageObject\"))\r\n\t\t\t\t\t.Append(mlContext.Transforms.ExtractPixels(outputColumnName: \"Pixels\", inputColumnName: \"ImageObjectResized\"))\r\n\t\t\t\t\t.Append(mlContext.Transforms.DnnFeaturizeImage(outputColumnName: \"FeaturizedImage\",\r\n\t\t\t\t\t\t\t\tm => m.ModelSelector.ResNet101(mlContext, m.OutputColumn, m.InputColumn), inputColumnName: \"Pixels\"));\r\n\r\n\tvar transformedData = pipeline.Fit(data).Transform(data);\r\n\r\n\t//Extractor image features\r\n\tvar FeaturizedImageValues = transformedData.GetColumn<float[]>(\"FeaturizedImage\").ToArray();\r\n\r\n\treturn FeaturizedImageValues[0];\r\n}\r\n```\r\n\r\n\r\n\r\n\r\n**System Information** \r\n - OS & Version:Windows 10\r\n - ML.NET Version: 2.0.1\r\n - .NET Version:  .NET 7.0\r\n - microsoft.ml.dnnimagefeaturizer.resnet101 (0.20.1)\r\n - microsoft.ml.dnnimagefeaturizer.resnet50 (0.20.1)\r\n - microsoft.ml.dnnimagefeaturizer.resnet18 (0.20.1)\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6580","RelatedDescription":"Open issue \"ResNet101 [ShapeInferenceError] Attribute pads has incorrect size\" (#6580)"},{"Id":"1597840921","IsPullRequest":false,"CreatedAt":"2023-02-24T03:27:56","Actor":"tloten","Number":"6579","RawContent":null,"Title":"PredictionEngine does not Dispose all resources properly","State":"open","Body":"**System Information:**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: ML.Net 2.0.1\r\n - .NET Version: .NET 7.0\r\n\r\n**Describe the bug**\r\n`PredictionEngine.Dispose()` does not dispose of all resources, leaving hundreds of MB of memory behind.\r\nSpecifically, I suspect the `_outputRow` member in `PredictionEngineBase` is the culprit, as it is not disposed anywhere. Manually disposing of that using reflection hacks causes the expected memory to be free'd up.\r\n\r\n**To Reproduce**\r\nUnfortunately I can't give a code-based repro as I'm using a proprietary ONNX model. However I suspect it's reproducable with other models too.\r\nSteps to reproduce the behavior:\r\n1. Create a pipeline & predictionEngine - I'm using an object-detection ONNX model, being fed a 1280x720 image.\r\n2. Call `predictionEngine.Predict()`\r\n3. To ensure a clean slate, call `GC.Collect()` and `GC.WaitForPendingFinalizers()`.\r\n4. Log memory used (560MB in my case)\r\n5. Call `predictionEngine.Dispose()`, and ensure no references to the PredictionEngine exist any more\r\n6. Call `GC.Collect()` & log memory (458MB in my case). This still seems very high. Furthermore:\r\n8. Call `GC.WaitForPendingFinalizers();` & log memory (72MB in my case). This is now back to where you'd expect it, and suggests that `PredictionEngine` has left some disposables behind.\r\n\r\n\r\n**Expected behavior**\r\nI'd expect the memory usage after calling `predictionEngine.Dispose()` would drop significantly. I wouldn't expect anything to be left on the Finalizer queue.\r\n\r\n**Additional context**\r\nWhen I poked around in a memory profiler, it seemed like there were some OnnxRuntime `OrtValue` items left on the finalizer queue, and they _seem_ to be ultimately owned by the `PredictionEngineBase._outputRow` field.\r\nSo using a reflection hack, I disposed `_outputRow` myself and it appeared that all memory was being released:\r\n```\r\nvar outputRow = typeof(PredictionEngineBase<TfOdInputData, TfOdOutputData>)\r\n    .GetField(\"_outputRow\", BindingFlags.NonPublic | BindingFlags.Instance)\r\n    .GetValue(predictionEngine);\r\n\r\n((IDisposable) outputRow).Dispose();\r\npredictionEngine.Dispose();\r\n```\r\nLooking at https://github.com/dotnet/machinelearning/blob/main/src/Microsoft.ML.Data/Prediction/PredictionEngine.cs#L129 it seems like `disposer` should get rid of both inputRow and outputRow.","Url":"https://github.com/dotnet/machinelearning/issues/6579","RelatedDescription":"Open issue \"PredictionEngine does not Dispose all resources properly\" (#6579)"},{"Id":"1588364090","IsPullRequest":true,"CreatedAt":"2023-02-22T20:24:58","Actor":"LittleLittleCloud","Number":"6572","RawContent":null,"Title":"fix 6565","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\nfix #6565","Url":"https://github.com/dotnet/machinelearning/pull/6572","RelatedDescription":"Closed or merged PR \"fix 6565\" (#6572)"},{"Id":"1595350643","IsPullRequest":false,"CreatedAt":"2023-02-22T15:50:10","Actor":"lindadamama","Number":"6578","RawContent":null,"Title":"Can the onnxruntime load the onnx model using GPU resources?","State":"open","Body":"Can the onnxruntime load the onnx model using GPU resources?","Url":"https://github.com/dotnet/machinelearning/issues/6578","RelatedDescription":"Open issue \"Can the onnxruntime load the onnx model using GPU resources?\" (#6578)"},{"Id":"1589029674","IsPullRequest":false,"CreatedAt":"2023-02-21T09:16:05","Actor":"NMSAzulX","Number":"6574","RawContent":null,"Title":"Model keep learning....","State":"closed","Body":"**Is your feature request related to a problem? Please describe.**\r\n\r\nI meet a problem. How does the MulticlassClassification-Model train new data continuously?\r\nTake the old model as the starting point and train the new model.\r\n\r\nI tried :\r\n```c#\r\nvar newModel = pipeline.Fit(newData);\r\n_ model = _ model.Append(newModel);\r\n```\r\nThis doesn't work.\r\n\r\n\r\n**Describe the solution you'd like**\r\n\r\n```c#\r\n_model = _model.Train(newData);\r\n```\r\n\r\n**Describe alternatives you've considered**\r\n\r\n\r\n**Additional context**\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6574","RelatedDescription":"Closed issue \"Model keep learning....\" (#6574)"},{"Id":"1592529931","IsPullRequest":false,"CreatedAt":"2023-02-20T22:43:59","Actor":"LittleLittleCloud","Number":"6577","RawContent":null,"Title":"Bring few-shot HPO into AutoML","State":"open","Body":"## What's few-shot/zero-shot HPO\r\nFew-shot HPO is a  both promising-performance and budget-friendly HPO solution. It is divided into two processes: offline processing and online processing. In offline processing, it searches on a given search space over a bunch of datasets and selects a hyper-parameter set {c} based on certain criteria. The dimension of search space and size of datasets can be very large in order to cover as many distribution of dataset as possible. In online processing, it picks N hyper-parameter configurations from {c} based on user's training dataset. If N=1, this HPO algorithm is called zero-shot as it only attempts once on training dataset. If N >1, this HPO algorithm is called few-shot.\r\n\r\nThe advantage of few-shot/zero-shot HPO is it introduces prior knowledge learned from offline process, which helps resolve cold-start problem. And with the help of prior knowledge, it also prevent exploring dead-end configurations.\r\n\r\n## What will benefit most from few-shot/zero-shot HPO\r\nDeep learning scenarios like image-classification and NLP tasks.\r\n\r\n## How will few-shot/zero-shot HPO be leveraged in ML.Net\r\nfew-shot/zero-shot HPO will be leveraged as a tuning algorithm in AutoML.Net, just like other tuning algorithms.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6577","RelatedDescription":"Open issue \"Bring few-shot HPO into AutoML\" (#6577)"},{"Id":"1588869460","IsPullRequest":false,"CreatedAt":"2023-02-17T07:19:33","Actor":"rzechu","Number":"6573","RawContent":null,"Title":"One or more errors occurred. (Schema mismatch for score column 'Score': expected vector of two or more items of type Single, got Vector<Single, 1> Arg_ParamName_Name)","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: ML.NET v0.20.0\r\n - .NET Version:  NET 6.0\r\n\r\n**Describe the bug**\r\nOne or more errors occurred. (Schema mismatch for score column 'Score': expected vector of two or more items of type Single, got Vector<Single, 1> Arg_ParamName_Name)\r\non AutoML Multiclasstraining\r\n\r\n```\r\nSELECT  \r\nCAST(DecimalColumn1 as real) as [DecimalColumn1], \r\nCAST(IntColumn2 as real) as [IntColumn2], \r\nCAST(IntColumn3 as real) as [IntColumn3], \r\nCAST(IntColumn4 as real) as [IntColumn4], \r\ncast([LongStringColumn1] as varchar(2000)) as [LongStringColumn1],  /*nvarchar(max) */\r\n[Name], /*nvarchar(128) */\r\n[ShortStringColumn3] as [ShortStringColumn3], /*nvarchar(128) */\r\ncast([LongStringColumn3] as varchar(2000)) as [LabelColumn]  /*nvarchar(max) */\r\nFROM Documents \r\n```\r\n![image](https://user-images.githubusercontent.com/45091660/219575314-5246a738-d1c2-4e42-9c2a-8f90225fdfbd.png)\r\n\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. MulticlassClassification\r\n2. Loading data from MSSQL Database\r\n```\r\nvar loader = MLContext.Data.CreateDatabaseLoader(columns.ToArray());\r\nvar dbSource = new DatabaseSource(SqlClientFactory.Instance, connectionString, sqlQuery);\r\nvar iDataView = loader.Load(dbSource);\r\n```\r\n```\r\ncolumns\r\n    [0]: \"Name=DecimalColumn1      Type=Single\"\r\n    [1]: \"Name=IntColumn2               Type=Single\"\r\n    [2]: \"Name=IntColumn3               Type=Single\"\r\n    [3]: \"Name=IntColumn4               Type=Single\"\r\n    [4]: \"Name=LongStringColumn1  Type=String\"\r\n    [5]: \"Name=Name                        Type=String\"\r\n    [6]: \"Name=ShortStringColumn3 Type=String\"\r\n    [7]: \"Name=LabelColumn             Type=String\"\r\n```\r\n\r\n```\r\niDataView\r\n    [0]: \"Index=0 Name=DecimalColumn1     Type=Single IsHidden=False\"\r\n    [1]: \"Index=1 Name=IntColumn2               Type=Single IsHidden=False\"\r\n    [2]: \"Index=2 Name=IntColumn3               Type=Single IsHidden=False\"\r\n    [3]: \"Index=3 Name=IntColumn4               Type=Single IsHidden=False\"\r\n    [4]: \"Index=4 Name=LongStringColumn1  Type=String IsHidden=False\"\r\n    [5]: \"Index=5 Name=Name                         Type=String IsHidden=False\"\r\n    [6]: \"Index=6 Name=ShortStringColumn3 Type=String IsHidden=False\"\r\n    [7]: \"Index=7 Name=LabelColumn             Type=String IsHidden=False\"\r\n```\r\niDataView.Preview()\r\n![image](https://user-images.githubusercontent.com/45091660/219575936-ee584f58-a8dd-4bcd-8b80-3d71d91994ca.png)\r\n\r\n3. \r\n![image](https://user-images.githubusercontent.com/45091660/219574125-863951d5-a87a-44cc-8ac1-ca96db0354d9.png)\r\n```\r\nvar experiment = MLContext.Auto().CreateMulticlassClassificationExperiment(multiClassExperimentSettings);\r\nvar experimentResult = experiment.Execute(trainData: iDataView, labelColumnName: runExperimentDto.LabelColumnName, progressHandler: progressHandler);\r\n```\r\n\r\nError:\r\n```\r\nSchema mismatch for score column 'Score': expected vector of two or more items of type Single, got Vector<Single, 1> (Parameter 'schema')\r\n   at System.Threading.Tasks.Task.ThrowIfExceptional(Boolean includeTaskCanceledExceptions)\r\n   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)\r\n   at Microsoft.ML.AutoML.AutoMLExperiment.Run()\r\n   at Microsoft.ML.AutoML.MulticlassClassificationExperiment.Execute(IDataView trainData, ColumnInformation columnInformation, IEstimator`1 preFeaturizer, IProgress`1 progressHandler)\r\n   at AI.AutoML.Trainers.MulticlassClassification.RunExperiment(IDataView trainingDataView, RunExperimentDto runExperimentDto) in C:\\.....\\_myapp.cs:line 63\r\n```\r\n\r\nInnerException\r\n```\r\nSchema mismatch for score column 'Score': expected vector of two or more items of type Single, got Vector<Single, 1> (Parameter 'schema')\r\n\r\n   at Microsoft.ML.Data.MulticlassClassificationEvaluator.CheckScoreAndLabelTypes(RoleMappedSchema schema)\r\n   at Microsoft.ML.Data.EvaluatorBase`1.CheckColumnTypes(RoleMappedSchema schema)\r\n   at Microsoft.ML.Data.EvaluatorBase`1.Microsoft.ML.Data.IEvaluator.Evaluate(RoleMappedData data)\r\n   at Microsoft.ML.Data.MulticlassClassificationEvaluator.Evaluate(IDataView data, String label, String score, String predictedLabel)\r\n   at Microsoft.ML.MulticlassClassificationCatalog.<>c__DisplayClass6_0.<CrossValidate>b__0(CrossValidationResult x)\r\n   at System.Linq.Enumerable.SelectArrayIterator`2.ToArray()\r\n   at Microsoft.ML.AutoML.MulticlassClassificationRunner.Run(TrialSettings settings)\r\n   at System.Threading.Tasks.Task`1.InnerInvoke()\r\n   at System.Threading.Tasks.Task.<>c.<.cctor>b__272_0(Object obj)\r\n   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(Thread threadPoolThread, ExecutionContext executionContext, ContextCallback callback, Object state)\r\n--- End of stack trace from previous location ---\r\n   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(Thread threadPoolThread, ExecutionContext executionContext, ContextCallback callback, Object state)\r\n   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot, Thread threadPoolThread)\r\n--- End of stack trace from previous location ---\r\n   at Microsoft.ML.AutoML.AutoMLExperiment.<RunAsync>d__26.MoveNext()\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/45091660/219575172-ffb91264-bc70-4493-909b-99d294078210.png)\r\n\r\n\r\n**Expected behavior**\r\nThis case should work (I am using same scenario for many other columns and only few cases gives this error - propably related to nvarchar(max) columns or some kind of mix columns\r\nI am many times using  2 varchars + 2 ints as source with  int/varchar output and work without any doubts\r\nOr should be understandable workaround","Url":"https://github.com/dotnet/machinelearning/issues/6573","RelatedDescription":"Open issue \"One or more errors occurred. (Schema mismatch for score column 'Score': expected vector of two or more items of type Single, got Vector<Single, 1> Arg_ParamName_Name)\" (#6573)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-03-21T03:30:22.3426603Z","RunDurationInMilliseconds":590}