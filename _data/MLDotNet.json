{"Data":{"GitHub":{"Issues":[{"Id":"1692240802","IsPullRequest":true,"CreatedAt":"2023-05-02T11:22:14","Actor":"janholo","Number":"6642","RawContent":null,"Title":"Fix Apply in PrimitiveColumnContainer so it does not change source column","State":"open","Body":"The Apply method calls SetValidityBit on the source container and not on the target container. That way the null check of the container values gets incorrect.\r\n\r\nWe are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6642","RelatedDescription":"Open PR \"Fix Apply in PrimitiveColumnContainer so it does not change source column\" (#6642)"},{"Id":"1691557801","IsPullRequest":true,"CreatedAt":"2023-05-01T23:35:52","Actor":"michaelgsharp","Number":"6641","RawContent":null,"Title":"Update ML.NET to work with .NET8","State":"open","Body":"Remove references to .NETCore3.1 since its out of support.\r\n\r\nRemove obsolete/deprecated code.","Url":"https://github.com/dotnet/machinelearning/pull/6641","RelatedDescription":"Open PR \"Update ML.NET to work with .NET8\" (#6641)"},{"Id":"1691292882","IsPullRequest":false,"CreatedAt":"2023-05-01T20:06:09","Actor":"LanceElCamino","Number":"6640","RawContent":null,"Title":"[LightGBM]  [Fatal] Unknown importance type error using Ml.Net API","State":"open","Body":"**System Information (please complete the following information):**\r\n -  Windows 11 22H2\r\n - ML.NET 2.0.1\r\n - Auto.Ml \r\n - .NET Framework 4.8\r\n\r\nKeep getting this error:\r\n![image](https://user-images.githubusercontent.com/122576256/235521011-0df3eb89-b484-4491-a579-aa44c125d477.png)\r\n\r\n`using Microsoft.ML;\r\nusing Microsoft.ML.Data;\r\nusing Microsoft.ML.AutoML;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing System.Linq;\r\n\r\n\r\nnamespace PriceActionTestPFI\r\n{\r\n    internal class Program\r\n    {\r\n        //Model Input class\r\n        public class ModelInput\r\n        {\r\n            [LoadColumn(6)]\r\n            [ColumnName(@\"PAF:Range\")]\r\n            public float PAF_Range { get; set; }\r\n\r\n            [LoadColumn(7)]\r\n            [ColumnName(@\"PAF:atr\")]\r\n            public float PAF_atr { get; set; }\r\n\r\n            [LoadColumn(11)]\r\n            [ColumnName(@\"PAF:NormPrice\")]\r\n            public float PAF_NormPrice { get; set; }\r\n\r\n            [LoadColumn(12)]\r\n            [ColumnName(@\"MlLabels:Enter\")]\r\n            public float MlLabels_Enter { get; set; }\r\n\r\n            [LoadColumn(13)]\r\n            [ColumnName(@\"BarTimes:BarTime\")]\r\n            public float BarTimes_BarTime { get; set; }\r\n\r\n            [LoadColumn(15)]\r\n            [ColumnName(@\"BarTimes:TimeVsAvg\")]\r\n            public float BarTimes_TimeVsAvg { get; set; }\r\n\r\n            [LoadColumn(16)]\r\n            [ColumnName(@\"BarTimes:Fast\")]\r\n            public bool BarTimes_Fast { get; set; }\r\n\r\n            [LoadColumn(17)]\r\n            [ColumnName(@\"Lin. reg. slope:Lin. reg. slope3\")]\r\n            public float Lin__reg__slope_Lin__reg__slope3 { get; set; }\r\n\r\n            [LoadColumn(18)]\r\n            [ColumnName(@\"Lin. reg. slope:Lin. reg. slope5\")]\r\n            public float Lin__reg__slope_Lin__reg__slope5 { get; set; }\r\n\r\n            [LoadColumn(19)]\r\n            [ColumnName(@\"Lin. reg. slope:Lin. reg. slope10\")]\r\n            public float Lin__reg__slope_Lin__reg__slope10 { get; set; }\r\n\r\n            [LoadColumn(20)]\r\n            [ColumnName(@\"Lin. reg. slope:Lin. reg. slope20\")]\r\n            public float Lin__reg__slope_Lin__reg__slope20 { get; set; }\r\n\r\n            [LoadColumn(21)]\r\n            [ColumnName(@\"AvgUpDown:AverageGain\")]\r\n            public float AvgUpDown_AverageGain { get; set; }\r\n\r\n            [LoadColumn(22)]\r\n            [ColumnName(@\"AvgUpDown:AverageLoss\")]\r\n            public float AvgUpDown_AverageLoss { get; set; }\r\n\r\n            [LoadColumn(47)]\r\n            [ColumnName(@\"SwingLevels:MajBullBoS\")]\r\n            public bool SwingLevels_MajBullBoS { get; set; }\r\n\r\n            [LoadColumn(48)]\r\n            [ColumnName(@\"SwingLevels:MajBearBoS\")]\r\n            public bool SwingLevels_MajBearBoS { get; set; }\r\n\r\n            [LoadColumn(49)]\r\n            [ColumnName(@\"SwingLevels:MajBullCont\")]\r\n            public bool SwingLevels_MajBullCont { get; set; }\r\n\r\n            [LoadColumn(50)]\r\n            [ColumnName(@\"SwingLevels:MajBearCont\")]\r\n            public bool SwingLevels_MajBearCont { get; set; }\r\n\r\n            [LoadColumn(51)]\r\n            [ColumnName(@\"SwingLevels:MinBullBoS\")]\r\n            public bool SwingLevels_MinBullBoS { get; set; }\r\n\r\n            [LoadColumn(52)]\r\n            [ColumnName(@\"SwingLevels:MinBearBoS\")]\r\n            public bool SwingLevels_MinBearBoS { get; set; }\r\n\r\n            [LoadColumn(53)]\r\n            [ColumnName(@\"SwingLevels:MinBullCont\")]\r\n            public bool SwingLevels_MinBullCont { get; set; }\r\n\r\n            [LoadColumn(54)]\r\n            [ColumnName(@\"SwingLevels:MinBearCont\")]\r\n            public bool SwingLevels_MinBearCont { get; set; }\r\n\r\n            [LoadColumn(55)]\r\n            [ColumnName(@\"SwingLevels:ProxLastSH\")]\r\n            public float SwingLevels_ProxLastSH { get; set; }\r\n\r\n            [LoadColumn(56)]\r\n            [ColumnName(@\"SwingLevels:ProxLastSL\")]\r\n            public float SwingLevels_ProxLastSL { get; set; }\r\n\r\n            [LoadColumn(57)]\r\n            [ColumnName(@\"SwingLevels:ProxLastSH2\")]\r\n            public float SwingLevels_ProxLastSH2 { get; set; }\r\n\r\n            [LoadColumn(58)]\r\n            [ColumnName(@\"SwingLevels:ProxLastSL2\")]\r\n            public float SwingLevels_ProxLastSL2 { get; set; }\r\n\r\n        }\r\n\r\n        //Model Output class\r\n        public class ModelOutput\r\n        {\r\n            //[ColumnName(@\"Features\")]\r\n            //public float[] __Features__ { get; set; }\r\n\r\n            [ColumnName(@\"PredictedLabel\")]\r\n            public float PredictedLabel { get; set; }\r\n\r\n            [ColumnName(@\"Score\")]\r\n            public float[] Score { get; set; }\r\n\r\n        }\r\n\r\n        private static string ModelPath = \"PriceActionTestPFImulti.zip\";\r\n        static void Main(string[] args)\r\n        {\r\n            //Create new ML context\r\n            var mlContext = new MLContext();\r\n\r\n            //Load data from csv/text file\r\n            IDataView CSAData = mlContext.Data.LoadFromTextFile<ModelInput>(path:\"ES Friday 1625.csv\", hasHeader: true, separatorChar: ',');\r\n\r\n            //Split data into training and testing sets (70%/30%)\r\n            var split = mlContext.Data.TrainTestSplit(CSAData, testFraction: 0.3);\r\n            var trainData = split.TrainSet;\r\n            var testData = split.TestSet;\r\n\r\n            // Create, train, evaluate and save a model\r\n            TransformerChain<ITransformer> trainedModel = BuildTrainEvaluateAndSaveModel(mlContext, trainData, testData);\r\n\r\n            // Make a single test prediction loading the model from .ZIP file\r\n            TestSinglePrediction(mlContext);\r\n\r\n            // Calculate the Permuation Feature Importance (PFI)\r\n            CalculatePermutationFeatureImportance(mlContext, trainData, trainedModel);\r\n            //CalculatePFI(mlContext, trainData, trainedModel, labelColumnName: @\"MlLabels:Enter\");\r\n\r\n            Console.WriteLine(\"Press any key to exit..\");\r\n            Console.ReadLine();\r\n        }\r\n\r\n        private static TransformerChain<ITransformer> BuildTrainEvaluateAndSaveModel(MLContext mlContext, IDataView trainingDataView, IDataView testDataView)\r\n        {\r\n            // Run AutoML Multiclass Classification experiment\r\n            Console.WriteLine(\"=============== Training the model ===============\");\r\n            Console.WriteLine($\"Running AutoML experiment for 600 seconds...\");\r\n            ExperimentResult<MulticlassClassificationMetrics> experimentResult = mlContext.Auto()\r\n                .CreateMulticlassClassificationExperiment(600)\r\n                .Execute(trainingDataView, labelColumnName: @\"MlLabels:Enter\");\r\n\r\n            // Evaluate the model and print metrics\r\n            Console.WriteLine(\"===== Evaluating model's accuracy with test data =====\");\r\n            RunDetail<MulticlassClassificationMetrics> best = experimentResult.BestRun;\r\n            ITransformer trainedModel = best.Model;\r\n            TransformerChain<ITransformer> trainedModelChain = (TransformerChain<ITransformer>)best.Model;\r\n            IDataView predictions = trainedModel.Transform(testDataView);\r\n            var metrics = mlContext.MulticlassClassification.Evaluate(predictions, labelColumnName: @\"MlLabels:Enter\", scoreColumnName: \"Score\", predictedLabelColumnName: \"PredictedLabel\",\r\n                topKPredictionCount: 1);\r\n\r\n            // Print metrics from top model\r\n            Console.WriteLine($\"*************************************************\");\r\n            Console.WriteLine($\"*       Metrics for {best.TrainerName} Multiclass Classification model      \");\r\n            Console.WriteLine($\"*------------------------------------------------\");\r\n            Console.WriteLine($\"*       MicroAccuracy:      {metrics.MicroAccuracy:#.##}\");\r\n            Console.WriteLine($\"*       MacroAccuracy:      {metrics.MacroAccuracy:#.##}\");\r\n            Console.WriteLine($\"*       LogLoss:            {metrics.LogLoss:#.##}\");\r\n            Console.WriteLine(metrics.ConfusionMatrix.GetFormattedConfusionTable());\r\n            Console.WriteLine($\"*************************************************\");\r\n\r\n            // Save/persist the trained model to a .ZIP file\r\n            mlContext.Model.Save(trainedModel, trainingDataView.Schema, ModelPath);\r\n\r\n            Console.WriteLine(\"The model is saved to {0}\", ModelPath);\r\n\r\n            return trainedModelChain;\r\n\r\n        }\r\n        private static void TestSinglePrediction(MLContext mlContext)\r\n        {\r\n            Console.WriteLine(\"=============== Testing prediction engine ===============\");\r\n\r\n            var Sample = new ModelInput()\r\n            {\r\n                PAF_Range = 2.25F,\r\n                PAF_atr = 2.710295F,\r\n                PAF_NormPrice = 0.7777778F,\r\n                BarTimes_BarTime = 101.461F,\r\n                BarTimes_TimeVsAvg = 100.6064F,\r\n                Lin__reg__slope_Lin__reg__slope3 = -0.875F,\r\n                Lin__reg__slope_Lin__reg__slope5 = 0.275F,\r\n                Lin__reg__slope_Lin__reg__slope10 = 0.2893939F,\r\n                Lin__reg__slope_Lin__reg__slope20 = -0.08139098F,\r\n                AvgUpDown_AverageGain = 0.75F,\r\n                AvgUpDown_AverageLoss = 0.52F,\r\n                SwingLevels_ProxLastSH = 1.002004F,\r\n                SwingLevels_ProxLastSL = 1.006112F,\r\n                SwingLevels_ProxLastSH2 = 0.998963884F,\r\n                SwingLevels_ProxLastSL2 = 1.001261034F,\r\n\r\n            };\r\n\r\n            ITransformer trainedModel = mlContext.Model.Load(ModelPath, out var _);\r\n\r\n            // Create prediction engine related to the loaded trained model\r\n            var predEngine = mlContext.Model.CreatePredictionEngine<ModelInput, ModelOutput>(trainedModel);\r\n          \r\n            // Score\r\n            var predictedResult = predEngine.Predict(Sample);\r\n\r\n            Console.WriteLine($\"**********************************************************************\");\r\n            Console.WriteLine($\"Predicted Entrance: {predictedResult.PredictedLabel}, Actual: -1\");\r\n            Console.WriteLine($\"Probability: {predictedResult.Score.Max()}\");\r\n            Console.WriteLine($\"**********************************************************************\");\r\n        }\r\n\r\n        private static void CalculatePermutationFeatureImportance(MLContext mlContext, IDataView trainingDataView, TransformerChain<ITransformer> trainedModel)\r\n        {\r\n            // Transform data (make predictions)\r\n            IDataView transformedData = trainedModel.Transform(trainingDataView);\r\n\r\n            // Get labels for feature importance\r\n            VBuffer<ReadOnlyMemory<char>> nameBuffer = default;\r\n            transformedData.Schema[\"__Features__\"].Annotations.GetValue(\"SlotNames\", ref nameBuffer);\r\n            // NOTE: The column name \"__Features__\" needs to match the featureColumnName used in the trainer, the name \"SlotNames\" is always the same regardless of trainer. View variable in Debug to find name.\r\n\r\n            var featureColumnNames = nameBuffer.DenseValues().ToList();\r\n\r\n            // Calculate Feature Permutation\r\n            var permutationMetrics = mlContext.MulticlassClassification.PermutationFeatureImportance(model :trainedModel,\r\n                                                                                                    data: transformedData,\r\n                                                                                                    labelColumnName: @\"MlLabels:Enter\",\r\n                                                                                                    numberOfExamplesToUse: 10000, permutationCount: 30);\r\n\r\n            // Format feature importance output\r\n            Console.WriteLine(\"Feature\\tPFI\");\r\n\r\n            var featureImportanceMetrics =\r\n                permutationMetrics\r\n                .Select((kvp) => new { kvp.Key, kvp.Value.MicroAccuracy })\r\n                .OrderByDescending(myFeatures => Math.Abs(myFeatures.MicroAccuracy.Mean));\r\n\r\n            var featurePFI = new List<Tuple<string, double>>();\r\n            foreach (var feature in featureImportanceMetrics)\r\n            {\r\n                var pfiValue = Math.Abs(feature.MicroAccuracy.Mean);\r\n                featurePFI.Add(new Tuple<string, double>(feature.Key, pfiValue));\r\n            }\r\n            foreach (var tuple in featurePFI)\r\n            { Console.WriteLine($\"{tuple.Item1} - {tuple.Item2}\"); }\r\n\r\n        }\r\n    }\r\n}`\r\nIt still completes the experiment but prefer LightGBM to be included.","Url":"https://github.com/dotnet/machinelearning/issues/6640","RelatedDescription":"Open issue \"[LightGBM]  [Fatal] Unknown importance type error using Ml.Net API\" (#6640)"},{"Id":"1690463965","IsPullRequest":false,"CreatedAt":"2023-05-01T06:50:05","Actor":"Mihaiii","Number":"6639","RawContent":null,"Title":"Does ML.NET support KNN? (part 2)","State":"open","Body":"This is a continuation of #1712 .\r\nWe are in 2023 now and we have ML.NET 2.\r\n\r\nDoes ML.NET 2 support KNN?","Url":"https://github.com/dotnet/machinelearning/issues/6639","RelatedDescription":"Open issue \"Does ML.NET support KNN? (part 2)\" (#6639)"},{"Id":"1683842533","IsPullRequest":false,"CreatedAt":"2023-05-01T02:13:00","Actor":"LanceElCamino","Number":"6630","RawContent":null,"Title":"Multiclass Classification AutoML and PFI won't complete","State":"closed","Body":"ML (2.0.1)\r\nML.AutoML (0.20.1) \r\n\r\n**Describe the bug**\r\nThe AutoMl experiment never finishes, just keeps running. No error output. Works fine when running as Binary Classification but now need Multiclass Classification. Have attached a small csv file to reproduce.\r\n\r\n**To Reproduce**\r\nCopy and paste code into new console app (Net 6.0). \r\nSave csv in Solution>Project>bin>Debug>net6.0 folder.\r\nRun.\r\n\r\n**Expected behavior**\r\nShould output to console the experiment results and PFI metrics.\r\n\r\n**Screenshots, Code, Sample Projects**\r\n![image](https://user-images.githubusercontent.com/122576256/234399319-31d362a8-d60a-4bae-bbc0-5c10a38b99e8.png)\r\n\r\nJust shows this and never stops running.\r\n\r\nWhat did I do wrong?\r\n`using System.Collections.Immutable;\r\nusing Microsoft.ML;\r\nusing Microsoft.ML.Data;\r\nusing Microsoft.ML.AutoML;\r\nusing System.Data;\r\n\r\nnamespace PriceActionTestPFI\r\n{\r\n    internal class Program\r\n    {\r\n        //Model Input class\r\n        public class ModelInput\r\n        {\r\n            [ColumnName(@\"High\"), LoadColumn(0)]\r\n            public float High { get; set; }\r\n\r\n            [ColumnName(@\"Low\"), LoadColumn(1)]\r\n            public float Low { get; set; }\r\n\r\n            [ColumnName(@\"Close\"), LoadColumn(2)]\r\n            public float Close { get; set; }\r\n\r\n            [ColumnName(@\"MlLabels:Enter\"), LoadColumn(3)]\r\n            public float Enter { get; set; }\r\n\r\n            [ColumnName(@\"BarTimes:BarTime\"), LoadColumn(4)]\r\n            public float BarTime { get; set; }\r\n\r\n            [ColumnName(@\"BarTimes:BarTimeAvg\"), LoadColumn(5)]\r\n            public float BarTimeAvg { get; set; }\r\n\r\n            [ColumnName(@\"SlopeSimple:SlopeLine1\"), LoadColumn(6)]\r\n            public float Slope1 { get; set; }\r\n\r\n            [ColumnName(@\"LeavittConvolutionAcceleration:Acc\"), LoadColumn(7)]\r\n            public float Acc { get; set; }\r\n\r\n            [ColumnName(@\"SlopeSimple:SlopeLine2\"), LoadColumn(8)]\r\n            public float Slope2 { get; set; }\r\n\r\n            [ColumnName(@\"LeavittConvolution:Conv\"), LoadColumn(9)]\r\n            public float Conv { get; set; }\r\n\r\n            [ColumnName(@\"LeavittProjection:LProjection\"), LoadColumn(10)]\r\n            public float Projection { get; set; }\r\n\r\n            [ColumnName(@\"LeavittConvolutionSlope:SlopeValue\"), LoadColumn(11)]\r\n            public float Lslope { get; set; }\r\n        }\r\n\r\n        //Model Output class\r\n        public class ModelOutput\r\n        {\r\n            // [ColumnName(@\"Features\")]\r\n            // public float[] Features { get; set; }\r\n\r\n            [ColumnName(@\"PredictedLabel\")]\r\n            public float PredictedLabel { get; set; }\r\n\r\n            [ColumnName(@\"Score\")]\r\n            public float Score { get; set; }\r\n\r\n        }\r\n\r\n        private static string ModelPath = \"PATest3PFI.zip\";\r\n        static void Main(string[] args)\r\n        {\r\n            //Create new ML context\r\n            var mlContext = new MLContext();\r\n\r\n            //Load data from csv/text file\r\n            IDataView CSAData = mlContext.Data.LoadFromTextFile<ModelInput>(path: \"ES Tuesday 922.csv\", hasHeader: true, separatorChar: ',');\r\n\r\n            //Split data into training and testing sets (80%/20%)\r\n            var split = mlContext.Data.TrainTestSplit(CSAData, testFraction: 0.2);\r\n            var trainData = split.TrainSet;\r\n            var testData = split.TestSet;\r\n\r\n            // Create, train, evaluate and save a model\r\n            TransformerChain<ITransformer> trainedModel = BuildTrainEvaluateAndSaveModel(mlContext, trainData, testData);\r\n\r\n            // Make a single test prediction loading the model from .ZIP file\r\n            TestSinglePrediction(mlContext);\r\n\r\n            // Calculate the Permuation Feature Importance (PFI)\r\n            CalculatePermutationFeatureImportance(mlContext, trainData, trainedModel);\r\n\r\n            Console.WriteLine(\"Press any key to exit..\");\r\n            Console.ReadLine();\r\n        }\r\n        private static TransformerChain<ITransformer> BuildTrainEvaluateAndSaveModel(MLContext mlContext, IDataView trainingDataView, IDataView testDataView)\r\n        {\r\n            // Run AutoML Multiclass Classification experiment\r\n            Console.WriteLine(\"=============== Training the model ===============\");\r\n            Console.WriteLine($\"Running AutoML experiment for 20 seconds...\");\r\n            ExperimentResult<MulticlassClassificationMetrics> experimentResult = mlContext.Auto()\r\n                .CreateMulticlassClassificationExperiment(20)\r\n                .Execute(trainingDataView, labelColumnName: @\"MlLabels:Enter\");\r\n\r\n            // Evaluate the model and print metrics\r\n            Console.WriteLine(\"===== Evaluating model's accuracy with test data =====\");\r\n            RunDetail<MulticlassClassificationMetrics> best = experimentResult.BestRun;\r\n            ITransformer trainedModel = best.Model;\r\n            TransformerChain<ITransformer> trainedModelChain = (TransformerChain<ITransformer>)best.Model;\r\n            IDataView predictions = trainedModel.Transform(testDataView);\r\n            var metrics = mlContext.MulticlassClassification.Evaluate(predictions, labelColumnName: @\"MlLabels:Enter\", scoreColumnName: \"Score\", predictedLabelColumnName: \"PredictedLabel\",\r\n                topKPredictionCount: 1);\r\n\r\n            // Print metrics from top model\r\n            Console.WriteLine($\"*************************************************\");\r\n            Console.WriteLine($\"*       Metrics for {best.TrainerName} Multiclass Classification model      \");\r\n            Console.WriteLine($\"*------------------------------------------------\");\r\n            Console.WriteLine($\"*       MicroAccuracy:      {metrics.MicroAccuracy:#.##}\");\r\n            Console.WriteLine($\"*       MacroAccuracy:      {metrics.MacroAccuracy:#.##}\");\r\n            Console.WriteLine($\"*       LogLoss:            {metrics.LogLoss:#.##}\");\r\n            Console.WriteLine($\"*       PerClassLogLoss:    {metrics.PerClassLogLoss:#.##}\");\r\n            Console.WriteLine($\"*       TopKAccuracy:       {metrics.TopKAccuracy:#.##}\");\r\n            Console.WriteLine(metrics.ConfusionMatrix.GetFormattedConfusionTable());\r\n            Console.WriteLine($\"*************************************************\");\r\n\r\n            // Save/persist the trained model to a .ZIP file\r\n            mlContext.Model.Save(trainedModel, trainingDataView.Schema, ModelPath);\r\n\r\n            Console.WriteLine(\"The model is saved to {0}\", ModelPath);\r\n\r\n            return trainedModelChain;\r\n        }\r\n\r\n        private static void TestSinglePrediction(MLContext mlContext)\r\n        {\r\n            Console.WriteLine(\"=============== Testing prediction engine ===============\");\r\n\r\n            var Sample = new ModelInput()\r\n            {\r\n                High = 4323.25F,\r\n                Low = 4317.25F,\r\n                Close = 4321.75F,\r\n                BarTime = 1962.559F,\r\n                BarTimeAvg = 1065.821F,\r\n                Slope1 = -0.593749667F,\r\n                Acc = 0.434773016F,\r\n                Slope2 = 0.5404195F,\r\n                Conv = 4312.420398F,\r\n                Projection = 4313.347917F,\r\n                Lslope = -0.393904748F,\r\n            };\r\n\r\n            ITransformer trainedModel = mlContext.Model.Load(ModelPath, out var _);\r\n\r\n            // Create prediction engine related to the loaded trained model\r\n            var predEngine = mlContext.Model.CreatePredictionEngine<ModelInput, ModelOutput>(trainedModel);\r\n\r\n            // Score\r\n            var predictedResult = predEngine.Predict(Sample);\r\n\r\n            Console.WriteLine($\"**********************************************************************\");\r\n            Console.WriteLine($\"Predicted Entrance: {predictedResult.PredictedLabel}, actual: -1\");\r\n            Console.WriteLine($\"Probability: {predictedResult.Score}\");\r\n            Console.WriteLine($\"**********************************************************************\");\r\n        }\r\n\r\n        private static void CalculatePermutationFeatureImportance(MLContext mlContext, IDataView trainingDataView, TransformerChain<ITransformer> trainedModel)\r\n        {\r\n            // Extract the trainer (last transformer in the model)\r\n            var linearPredictor = (ISingleFeaturePredictionTransformer<object>)trainedModel.LastTransformer;\r\n\r\n            // Transform data (make predictions)\r\n            IDataView transformedData = trainedModel.Transform(trainingDataView);\r\n\r\n            // Get labels for feature importance\r\n            VBuffer<ReadOnlyMemory<char>> nameBuffer = default;\r\n            transformedData.Schema[\"__Features__\"].Annotations.GetValue(\"SlotNames\", ref nameBuffer);\r\n            // NOTE: The column name \"__Features__\" needs to match the featureColumnName used in the trainer, the name \"SlotNames\" is always the same regardless of trainer. View variable in Debug to find name.\r\n\r\n            var featureColumnNames = nameBuffer.DenseValues().ToList();\r\n\r\n            // Calculate Feature Permutation\r\n            ImmutableArray<BinaryClassificationMetricsStatistics> permutationMetrics =\r\n                                            mlContext.BinaryClassification.PermutationFeatureImportance(predictionTransformer: linearPredictor,\r\n                                                                                         data: transformedData,\r\n                                                                                         labelColumnName: @\"MlLabels:Enter\",\r\n                                                                                         numberOfExamplesToUse: 100, permutationCount: 30);\r\n\r\n            // Format feature importance output\r\n            Console.WriteLine(\"Feature\\tPFI\");\r\n\r\n            var featureImportanceMetrics =\r\n                permutationMetrics\r\n                .Select((metric, index) => new { index, metric.Accuracy })\r\n                .OrderByDescending(myFeatures => Math.Abs(myFeatures.Accuracy.Mean));\r\n\r\n\r\n            var featureNames = new List<string>();\r\n            var featurePFI = new List<double>();\r\n            foreach (var feature in featureImportanceMetrics)\r\n            {\r\n                featureNames.Add($\"{featureColumnNames[feature.index],-20}\");\r\n                featurePFI.Add(feature.Accuracy.Mean);\r\n                Console.WriteLine($\"{featureColumnNames[feature.index],-20}|\\t{feature.Accuracy.Mean}\");\r\n            }\r\n\r\n        }\r\n    }\r\n}`\r\n[ES Tuesday 922.csv](https://github.com/dotnet/machinelearning/files/11326721/ES.Tuesday.922.csv)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6630","RelatedDescription":"Closed issue \"Multiclass Classification AutoML and PFI won't complete\" (#6630)"},{"Id":"1689170777","IsPullRequest":false,"CreatedAt":"2023-04-30T01:22:03","Actor":"michaelgsharp","Number":"6637","RawContent":null,"Title":"AutoML Test timeout failure","State":"closed","Body":"These tests are flaky and timeout causing CI issues when they fail. @LittleLittleCloud I bet increasing the timeout for the trial will be enough to fix it, but the CI machines, especially for code coverage, aren't as powerful as our local ones.\r\n\r\nMicrosoft.ML.AutoML.Test.AutoMLExperimentTests.AutoMLExperiment_Iris_Train_Test_Split_Test\r\nSystem.TimeoutException : Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity\r\n\r\nMicrosoft.ML.AutoML.Test.AutoMLExperimentTests.AutoMLExperiment_Iris_CV_5_Test\r\nSystem.TimeoutException : Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity\r\n\r\nMicrosoft.ML.AutoML.Test.AutoMLExperimentTests.AutoMLExperiment_UCI_Adult_CV_5_Test\r\nSystem.TimeoutException : Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity","Url":"https://github.com/dotnet/machinelearning/issues/6637","RelatedDescription":"Closed issue \"AutoML Test timeout failure\" (#6637)"},{"Id":"1689254880","IsPullRequest":true,"CreatedAt":"2023-04-30T01:22:02","Actor":"LittleLittleCloud","Number":"6638","RawContent":null,"Title":"Update AutoMLExperimentTests.cs to fix timeout error","State":"closed","Body":"We are excited to review your PR.\r\n\r\nfix #6637 \r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6638","RelatedDescription":"Closed or merged PR \"Update AutoMLExperimentTests.cs to fix timeout error\" (#6638)"},{"Id":"1687551259","IsPullRequest":true,"CreatedAt":"2023-04-29T09:25:58","Actor":"michaelgsharp","Number":"6636","RawContent":null,"Title":"Update TorchSharp to latest version","State":"closed","Body":"Updates TorchSharp to the latest version and fixes any of the breaking changes. ","Url":"https://github.com/dotnet/machinelearning/pull/6636","RelatedDescription":"Closed or merged PR \"Update TorchSharp to latest version\" (#6636)"},{"Id":"1685384925","IsPullRequest":true,"CreatedAt":"2023-04-28T17:27:08","Actor":"LittleLittleCloud","Number":"6633","RawContent":null,"Title":"add obj-detection automl sweeper","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6633","RelatedDescription":"Closed or merged PR \"add obj-detection automl sweeper\" (#6633)"},{"Id":"1685804384","IsPullRequest":false,"CreatedAt":"2023-04-26T23:19:04","Actor":"LittleLittleCloud","Number":"6635","RawContent":null,"Title":"Propose: Let's expose Bert sentence embedding to public","State":"closed","Body":"**Is your feature request related to a problem? Please describe.**\r\nUsing TextEmbedding API from OpenAI is great, but it's not free.\r\n\r\nBert embedding is available in ML.Net (or might be available with minor change), but it's not public available.\r\n\r\nWe all love free and good stuff, so let's expose bert embedding transformer to public. That would be a useful feature in retrieving relevant corpus when creating prompts\r\n\r\n**Describe the solution you'd like**\r\na transformer that transforms a text to an embedding vector\r\n- input: \"text\"\r\n- output column: float[768]\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6635","RelatedDescription":"Closed issue \"Propose: Let's expose Bert sentence embedding to public\" (#6635)"},{"Id":"1685426419","IsPullRequest":false,"CreatedAt":"2023-04-26T17:18:39","Actor":"luisquintanilla","Number":"6634","RawContent":null,"Title":"Add support for .tiktoken file format to Microsoft.ML.Tokenizers","State":"open","Body":"OpenAI library [tiktoken](https://github.com/openai/tiktoken) provides tokenization support for. Older GPT models were compatible with common [BPE tokenizer vocab format (vocab.json / merges.txt)](https://huggingface.co/gpt2/tree/main). More recent models support [other formats](https://openaipublic.blob.core.windows.net/encodings/cl100k_base.tiktoken). \r\n\r\nUpdate Microsoft.ML.Tokenizers to provide support for clk100_base vocabulary format","Url":"https://github.com/dotnet/machinelearning/issues/6634","RelatedDescription":"Open issue \"Add support for .tiktoken file format to Microsoft.ML.Tokenizers\" (#6634)"},{"Id":"1685341698","IsPullRequest":true,"CreatedAt":"2023-04-26T16:47:41","Actor":"LittleLittleCloud","Number":"6632","RawContent":null,"Title":"add obj sweeper in AutoML","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [ ] There's a descriptive title that will make sense to other developers some time from now. \r\n- [ ] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6632","RelatedDescription":"Closed or merged PR \"add obj sweeper in AutoML\" (#6632)"},{"Id":"1684234590","IsPullRequest":false,"CreatedAt":"2023-04-26T04:11:53","Actor":"alvstw","Number":"6631","RawContent":null,"Title":"FieldAwareFactorizationMachine is not working in arm64 macOS","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: macOS 13.3.1 arm64\r\n - ML.NET Version: 2.0\r\n - .NET Version: .NET 7.0\r\n\r\n**Describe the bug**\r\nRunning FieldAwareFactorizationMachine model produce the following error:\r\nSystem.DllNotFoundException: Unable to load shared library 'CpuMathNative' or one of its dependencies. In order to help diagnose loading problems, consider setting the DYLD_PRINT_LIBRARIES environment variable: ","Url":"https://github.com/dotnet/machinelearning/issues/6631","RelatedDescription":"Open issue \"FieldAwareFactorizationMachine is not working in arm64 macOS\" (#6631)"},{"Id":"1681785812","IsPullRequest":false,"CreatedAt":"2023-04-24T18:10:15","Actor":"JakeRadMSFT","Number":"6629","RawContent":null,"Title":"Resizing Images and Boxes for Vision Scenarios","State":"open","Body":"Repro:\r\n\r\n- Train OD Model with large images ( 4000 x 3000 )\r\n\r\nResult:\r\n\r\n- Stalls at Epoch 0 and uses 100% of CPU\r\n\r\nExpected Result:\r\n\r\n- It works :)\r\n\r\nWorkaround:\r\n\r\n- Resize Images\r\n  - https://github.com/JakeRadMSFT/Scratch/blob/main/ObjectDetective/ObjectDetective/ObjectDetectionVOTT.training.cs#L183\r\n- Resize Boxes\r\n  - https://github.com/JakeRadMSFT/Scratch/blob/6981d4701de25f002fe87bf9ed95083e3a2ebc44/ObjectDetective/ObjectDetective/ObjectDetectionVOTT.training.cs#L94","Url":"https://github.com/dotnet/machinelearning/issues/6629","RelatedDescription":"Open issue \"Resizing Images and Boxes for Vision Scenarios\" (#6629)"},{"Id":"1654638019","IsPullRequest":true,"CreatedAt":"2023-04-24T17:48:40","Actor":"LittleLittleCloud","Number":"6615","RawContent":null,"Title":"Add AutoZero tuner to BinaryClassification","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\n#6577 \r\n\r\nAutoZero (AKA fewshot) tuner run hyper-parameter optimization by selecting portfolios from a group of candidates that are collected and verified on over 100 datasets. It supposed to return a decent result within a finite steps and limited computing resources compared to other AutoML method.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6615","RelatedDescription":"Closed or merged PR \"Add AutoZero tuner to BinaryClassification\" (#6615)"},{"Id":"1677637638","IsPullRequest":true,"CreatedAt":"2023-04-21T16:49:15","Actor":"JakeRadMSFT","Number":"6628","RawContent":null,"Title":"Add support for string vectors to DataFrame","State":"closed","Body":"This PR adds support for string vector/\"ReadOnlyMemory<char>\" vectors.\r\n\r\nRelevant issue: https://github.com/dotnet/machinelearning/issues/5872\r\n\r\nBuilding on: https://github.com/dotnet/machinelearning/pull/6409\r\n","Url":"https://github.com/dotnet/machinelearning/pull/6628","RelatedDescription":"Closed or merged PR \"Add support for string vectors to DataFrame\" (#6628)"},{"Id":"1677498935","IsPullRequest":true,"CreatedAt":"2023-04-20T22:12:03","Actor":"LittleLittleCloud","Number":"6627","RawContent":null,"Title":"fix datetime null error","State":"open","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [ ] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\nfix #6626 \r\n","Url":"https://github.com/dotnet/machinelearning/pull/6627","RelatedDescription":"Open PR \"fix datetime null error\" (#6627)"},{"Id":"1673783201","IsPullRequest":true,"CreatedAt":"2023-04-20T20:19:28","Actor":"michaelgsharp","Number":"6624","RawContent":null,"Title":"Updated ORT to latest version","State":"closed","Body":"Update ORT to latest version.","Url":"https://github.com/dotnet/machinelearning/pull/6624","RelatedDescription":"Closed or merged PR \"Updated ORT to latest version\" (#6624)"},{"Id":"1673902952","IsPullRequest":false,"CreatedAt":"2023-04-18T22:19:32","Actor":"LittleLittleCloud","Number":"6626","RawContent":null,"Title":"Can't load Datetime column when it contains null value","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: window 10\r\n - ML.NET Version: main branch\r\n\r\n**Describe the bug**\r\nA clear and concise description of what the bug is.\r\n\r\nAs title\r\n\r\n#6621 \r\n\r\nWould need to add a null check here\r\nhttps://github.com/dotnet/machinelearning/blob/eb11e43c440f5a22d7b02058eae69422784841a5/src/Microsoft.ML.Data/DataLoadSave/Database/DatabaseLoaderCursor.cs#L307\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots, Code, Sample Projects**\r\nIf applicable, add screenshots, code snippets, or sample projects to help explain your problem.\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6626","RelatedDescription":"Open issue \"Can't load Datetime column when it contains null value\" (#6626)"},{"Id":"1673873734","IsPullRequest":false,"CreatedAt":"2023-04-18T21:48:14","Actor":"VictorBarbosa","Number":"6625","RawContent":null,"Title":"Expected VarVector, got Byte","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: [e.g. Windows 10] \r\n - ML.NET Version: [e.g. ML.NET v2.0]\r\n - .NET Version: [e.g. .NET 7.0]\r\n\r\n**Describe the bug**\r\nI`ve created a model to image classification using visual studio and it works pretty well, but when i try to retrain i got this error, \r\n\r\nHow can i fix it, thank you \r\n![image](https://user-images.githubusercontent.com/6170478/232911866-9996ee9e-dd45-4972-90b2-34deacfee6e6.png)\r\n\r\n ","Url":"https://github.com/dotnet/machinelearning/issues/6625","RelatedDescription":"Open issue \"Expected VarVector, got Byte\" (#6625)"},{"Id":"1663429832","IsPullRequest":true,"CreatedAt":"2023-04-18T20:25:10","Actor":"jeffhandley","Number":"6619","RawContent":null,"Title":"[fabricbot] Update to capture refactoring of generated config","State":"closed","Body":"This captures the regenerated fabricbot config from https://github.com/dotnet/fabricbot-config/pull/72. In that PR, there was a refactoring around some of the area pod project board automation logic.\r\n\r\nThis change has no functional effect but merging it in incorporates that refactoring to have the right baseline so that future functional change diffs will be simpler.","Url":"https://github.com/dotnet/machinelearning/pull/6619","RelatedDescription":"Closed or merged PR \"[fabricbot] Update to capture refactoring of generated config\" (#6619)"},{"Id":"1673180417","IsPullRequest":false,"CreatedAt":"2023-04-18T13:49:41","Actor":"ConfieBlake","Number":"6623","RawContent":null,"Title":"Unable to load DLL 'CpuMathNative': The specified module could not be found.","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 11\r\n - ML.NET Version: 17.15.0.2321402\r\n - .NET Version: NET Framework 4.8.1\r\n\r\n**Describe the bug**\r\nI added a ML model to a Class Library which targets at NET Framework 4.8.1. I could build the dll and run it in vscode notebook. This library is configured to debug on x64. But when I deployed the library on cosmos and run the SCOPE jobs with it, it starts to give the error \"Unable to load DLL 'CpuMathNative': The specified module could not be found.\"\r\n![image](https://user-images.githubusercontent.com/117148909/232797660-b51f0ba2-631a-4e44-a747-d08258b5bffc.png)\r\n![image](https://user-images.githubusercontent.com/117148909/232797810-4096138d-8758-46b9-a53f-c6e0398e4f68.png)\r\n\r\n\r\nI could not use NET Core, because NET Core needs to load System.Runtime version 6.0.0, which is incompatible with my project.\r\n\r\n**And below is my project:**\r\n[ProductNameClassifier.zip](https://github.com/dotnet/machinelearning/files/11262455/ProductNameClassifier.zip)\r\n\r\n**Screenshots, Code, Sample Projects**\r\n![image](https://user-images.githubusercontent.com/117148909/232796954-e8323684-0b7b-4105-95f7-f279930cf248.png)\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6623","RelatedDescription":"Open issue \"Unable to load DLL 'CpuMathNative': The specified module could not be found.\" (#6623)"},{"Id":"1672225210","IsPullRequest":false,"CreatedAt":"2023-04-18T02:16:00","Actor":"JakeRadMSFT","Number":"6622","RawContent":null,"Title":"Rename Master to Parent/Original/Source or something similar.","State":"open","Body":"Hello!\r\nWe should rename this away from Master to something else.\r\n\r\n\r\nhttps://github.com/dotnet/machinelearning/blob/74cc3c45083f293708fb3bb46dd30372a178b402/src/Microsoft.ML.Core/Environment/HostEnvironmentBase.cs#L340","Url":"https://github.com/dotnet/machinelearning/issues/6622","RelatedDescription":"Open issue \"Rename Master to Parent/Original/Source or something similar.\" (#6622)"},{"Id":"1667737535","IsPullRequest":false,"CreatedAt":"2023-04-14T08:02:05","Actor":"rzechu","Number":"6621","RawContent":null,"Title":"Splitter/consolidator worker encountered exception while consuming source data (DataClassification AutoML)","State":"open","Body":"**System Information (please complete the following information):**\r\n - OS & Version: Windows 10\r\n - ML.NET Version: ML.NET 2.0.0\r\n - .NET Version: .NET4.8 and .NET 6 same error\r\nVisualStudio 2022 + ML.NET ModelBuilder 2022 (17.14.4.2312404) \r\n\r\n**Describe the bug**\r\nI have seen few issues regarding similliar error but all of them regards ImageClassification. Mine regards DataClassification\r\n\r\nDataClassification using SQL Server View\r\n\r\n**To Reproduce**\r\n1. DataClassification\r\n3. Lot of columns (date, decimals, ints) 2 varchar and 1 label is fine\r\n4. Lot of columns (date, decimals, ints) 2 varchar and 1 label and 1 more problematic varchar columns (StringCol3) instant - error\r\n5. If i replace this problematic varchar column with constants for all rows something like  'abc' as [StringCol3] training is fine\r\n\r\nCan't attach those columns due to sensitive data.\r\nBut I anoymyzed and trimmed enought data to reproduce (attached SQL scripts to create table and insert records)\r\nThis should be enough to reproduce this error.\r\n[aibug.zip](https://github.com/dotnet/machinelearning/files/11230365/aibug.zip)\r\n\r\n```\r\nstart multiclass classification\r\nEvaluate Metric: MacroAccuracy\r\nAvailable Trainers: SDCA,LBFGS,LGBM,FASTTREE,FASTFOREST\r\nTraining time in second: 300\r\n[Source=AutoMLExperiment-ChildContext, Kind=Info] [Source=OVA; Fitting, Kind=Info] Training learner 0\r\n[Source=AutoMLExperiment-ChildContext, Kind=Info] [Source=Converter; InitDataset, Kind=Info] Making per-feature arrays\r\n[Source=AutoMLExperiment-ChildContext, Kind=Info] [Source=Converter; InitBoundariesAndLabels, Kind=Info] Changing data from row-wise to column-wise\r\n\r\n```\r\n\r\n`Splitter/consolidator worker encountered exception while consuming source data\r\n`\r\n```\r\n   at Microsoft.ML.Data.DataViewUtils.Splitter.Batch.SetAll(OutPipe[] pipes)\r\n   at Microsoft.ML.Data.DataViewUtils.Splitter.Cursor.MoveNextCore()\r\n   at Microsoft.ML.Data.RootCursorBase.MoveNext()\r\n   at Microsoft.ML.Trainers.TrainingCursorBase.MoveNext()\r\n   at Microsoft.ML.Trainers.FastTree.DataConverter.MemImpl.MakeBoundariesAndCheckLabels(Int64& missingInstances, Int64& totalInstances)\r\n   at Microsoft.ML.Trainers.FastTree.DataConverter.MemImpl..ctor(RoleMappedData data, IHost host, Double[][] binUpperBounds, Single maxLabel, Boolean dummy, Boolean noFlocks, PredictionKind kind, Int32[] categoricalFeatureIndices, Boolean categoricalSplit)\r\n   at Microsoft.ML.Trainers.FastTree.DataConverter.Create(RoleMappedData data, IHost host, Int32 maxBins, Single maxLabel, Boolean diskTranspose, Boolean noFlocks, Int32 minDocsPerLeaf, PredictionKind kind, IParallelTraining parallelTraining, Int32[] categoricalFeatureIndices, Boolean categoricalSplit)\r\n   at Microsoft.ML.Trainers.FastTree.ExamplesToFastTreeBins.FindBinsAndReturnDataset(RoleMappedData data, PredictionKind kind, IParallelTraining parallelTraining, Int32[] categoricalFeaturIndices, Boolean categoricalSplit)\r\n   at Microsoft.ML.Trainers.FastTree.FastTreeTrainerBase`3.ConvertData(RoleMappedData trainData)\r\n   at Microsoft.ML.Trainers.FastTree.FastTreeBinaryTrainer.TrainModelCore(TrainContext context)\r\n   at Microsoft.ML.Trainers.TrainerEstimatorBase`2.TrainTransformer(IDataView trainSet, IDataView validationSet, IPredictor initPredictor)\r\n   at Microsoft.ML.Trainers.OneVersusAllTrainer.TrainOne(IChannel ch, ITrainerEstimator`2 trainer, RoleMappedData data, Int32 cls)\r\n   at Microsoft.ML.Trainers.OneVersusAllTrainer.Fit(IDataView input)\r\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\r\n   at Microsoft.ML.AutoML.SweepablePipelineRunner.Run(TrialSettings settings)\r\n   at Microsoft.ML.AutoML.SweepablePipelineRunner.RunAsync(TrialSettings settings, CancellationToken ct)\r\n   at Microsoft.ML.AutoML.AutoMLExperiment.<RunAsync>d__24.MoveNext()\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.ML.ModelBuilder.AutoMLService.Experiments.MultiClassificationExperiment.<ExecuteAsync>d__14.MoveNext() in /_/src/Microsoft.ML.ModelBuilder.AutoMLService/Experiments/MultiClassificationExperiment.cs:line 123\r\n--- End of stack trace from previous location where exception was thrown ---\r\n   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()\r\n   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)\r\n   at Microsoft.ML.ModelBuilder.AutoMLEngine.<StartTrainingAsync>d__21.MoveNext() in /_/src/Microsoft.ML.ModelBuilder.AutoMLService/AutoMLEngineService/AutoMLEngine.cs:line 145\r\n```\r\n\r\n\r\nBONUS if you make a View, replace 1 column with empty/null and use this View for DataClassification\r\n```\r\nCREATE OR ALTER VIEW XYZ \r\nAS\r\nSELECT\r\n .....\r\n, RIGHT(StringCol3,0) AS StringCol3\r\n.....\r\nFROM AIBug\r\n```\r\nYou will get another error\r\n```\r\nSchema mismatch for input column 'StringCol3_CharExtractor': expected Expected known-size vector of Single, got Vector<Single>\r\nParameter name: inputSchema\r\n```\r\n\r\n\r\n**Expected behavior**\r\nNo error? Or human readable information what is wrong and how to fix it.\r\n\r\n**Screenshots, Code, Sample Projects**\r\nIf applicable, add screenshots, code snippets, or sample projects to help explain your problem.\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6621","RelatedDescription":"Open issue \"Splitter/consolidator worker encountered exception while consuming source data (DataClassification AutoML)\" (#6621)"},{"Id":"1665142710","IsPullRequest":false,"CreatedAt":"2023-04-12T19:43:22","Actor":"sanketshahMS","Number":"6620","RawContent":null,"Title":"High amount GC gen2 delays with ONNX models converted to ML.Net","State":"open","Body":"High amount GC gen2 delays with ONNX->ML.Net text classification models that use unknown input dimension (string array is passed in, here the tokenization happens outside the model) vs the models that use known input dimension string[1] (here the tokenization happens inside the model)\r\n\r\nWe are using this feature \"Adds support so that you can have 1 unknown dimension for the ONNX runtime models (not including the batch input since we set that to \" https://github.com/dotnet/machinelearning/pull/6265\r\n\r\n\r\n**System Information (please complete the following information):**\r\n - OS & Version: Windows server\r\n - ML.NET Version: 2.1\r\n - .NET Version: .Net Framework 4.6\r\n\r\n**Describe the bug**\r\nTwo issues with the models we have updated to leverage the above feature:\r\n-Slow latency because of 90% time spent in OrtValue CreateStringTensor()\r\n-High amount of GC gen2, 30% of time CPU spending in GC for NamedOnnxValueGetterVec<ReadOnlyMemory>()\r\n\r\n**To Reproduce**\r\nWe can share models and code internally.\r\nOnnx model converted to ML.Net. Using ML.Net at runtime.\r\nModels are updated to be able to leverage the unknown dimension feature to allow passing pre-tokenized input to model.\r\nPreviously model input was a string[1] and tokenization took place inside the model.\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Screenshots, Code, Sample Projects**\r\n\r\nImage showing details from azure profile viewer of CPU usage hot spot:\r\n![image](https://user-images.githubusercontent.com/124726122/231564553-1002abaa-0cb8-4db3-9bb7-f04bd9b4c88d.png)\r\n\r\nimage with gcdump and stack of the object tree contributing the GCs (there are the object that survived), so not sure if these contribute to GC or different ones that got cleaned up.\r\n![image](https://user-images.githubusercontent.com/124726122/231564625-ec1cc479-02de-46fa-9e22-ae38def18cf9.png)\r\n\r\n\r\n**Additional context**\r\n\r\nDetails from our internal investagations:\r\n\r\nI am finding that GC is a problem with new models, \r\nCPU usage increased from 5% to 43% for GC.\r\nTime taken for GC increased from 5 ms to 250ms.\r\nAll the other code is being blocked by frequent GC, this is causing P99 to increase ( code is locked when GC is running)\r\n \r\nSystem is continuously busy with Garbage collection, caused by allocations from CreateStringTensor function. It is locking the service for long durations. the tests results are bad for P99 values, because the service gets locked from time to time because of GC execution and causes 500ms delays on predict calls.\r\n\r\nWe traced it to below stack\r\nwe profiled the service and got the delta between the old model and new model runs.\r\nThe delta pointed to GC. and the source of GC is the onnx internally calling \r\nnamedOnnxValue -->toOrtValue --> createFromTensorObj() --> createStringTensor()\r\n\r\nthere seems to be some sort of allocation bug inside ort that is causing the GC to go crazy high (running 30% of the time, vs 1% previously) and this causes drop in throughput and high latencies.  (Only 1% of the time) (but I see that GC is not clearing up fine.)\r\n\r\nUrgency:\r\nOur rollout of 38 models is blocked, this was supposed to be a change that would reduce latency and save millions in COGS, but we are finding opposite behavior because of the GC issues.","Url":"https://github.com/dotnet/machinelearning/issues/6620","RelatedDescription":"Open issue \"High amount GC gen2 delays with ONNX models converted to ML.Net\" (#6620)"},{"Id":"1657058492","IsPullRequest":false,"CreatedAt":"2023-04-10T03:20:45","Actor":"BigHeadDev","Number":"6616","RawContent":null,"Title":"How to offset RGB differently and convert images to CHW？","State":"closed","Body":"### System information\r\n\r\n- **OS version/distro**: Windows 11\r\n- **.NET Version (eg., dotnet --info)**: .Net 6.0\r\n\r\n### Issue\r\n\r\n- **What did you do?**\r\nTransforming a PTH model into an ONNX model and Connect it using ml.net\r\n- **What happened?**\r\nI don't know if there was a problem with my preprocessing,The results are always different from those predicted by Python code\r\n\r\nThrough Python code, it is generally known that preprocessing needs to go through RGB offset, and then convert HWC to CHW. \r\n1，However, it seems that the MLContext.Transform.ExtractPixels method can only specify the same offsetImage\r\n2，There seems to be no method in MLContext.Transform to convert HWC to CHW. How should I use it\r\n\r\n- **What did you expect?**\r\nI hope someone can teach me how to connect this model\r\nI have been researching for several days, hahaha  \r\n\r\n**Here is the Python code：**\r\n```python\r\n        image_path = \"./curve/test.jpg\"\r\n        img_raw = cv2.imread(image_path, cv2.IMREAD_COLOR)\r\n\r\n        img = np.float32(img_raw)\r\n\r\n        im_height, im_width, _ = img.shape\r\n        scale = torch.Tensor([img.shape[1], img.shape[0], img.shape[1], img.shape[0]])\r\n        img -= (104, 117, 123)//*\r\n        img = img.transpose(2, 0, 1)//*\r\n        img = torch.from_numpy(img).unsqueeze(0)\r\n        img = img.to(device)\r\n        scale = scale.to(device)\r\n\r\n        tic = time.time()\r\n        loc, conf, landms = net(img)  # forward pass\r\n        print('net forward time: {:.4f}'.format(time.time() - tic))\r\n\r\n        priorbox = PriorBox(cfg, image_size=(im_height, im_width))\r\n        priors = priorbox.forward()\r\n```\r\n**This is my preprocessing code**\r\n```C#\r\n        var pipeline =\r\n                context.Transforms.ResizeImages(\r\n                resizing: Microsoft.ML.Transforms.Image.ImageResizingEstimator.ResizingKind.Fill,\r\n                outputColumnName: \"input0\",\r\n                imageWidth: 640,\r\n                imageHeight: 640,\r\n                inputColumnName: nameof(FaceInput.Image))\r\n                .Append(context.Transforms.ExtractPixels(\r\n                        offsetImage: 114f,//???\r\n                        outputColumnName: \"input0\"))\r\n                .Append(context.Transforms.ApplyOnnxModel(\r\n                    modelFile: modelPath,\r\n                    inputColumnName: \"input0\",\r\n                    outputColumnName: \"output0\"));\r\n            return pipeline;\r\n```\r\n**This is the source Python github repository**\r\n[Retinaface](https://github.com/deepConnectionism/Retinaface)\r\n\r\n**This is the onnx model**\r\n![image](https://user-images.githubusercontent.com/23449064/230339057-032befa5-d562-416e-ba74-9844f95ecfd0.png)\r\n[ONXX](https://github.com/deepConnectionism/Retinaface/blob/main/FaceDetector.onnx)\r\n### Source code / logs\r\n\r\nPlease paste or attach the code or logs or traces that would be helpful to diagnose the issue you are reporting.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6616","RelatedDescription":"Closed issue \"How to offset RGB differently and convert images to CHW？\" (#6616)"},{"Id":"1658850087","IsPullRequest":false,"CreatedAt":"2023-04-07T14:12:57","Actor":"danielstegeman","Number":"6618","RawContent":null,"Title":"Improvements when specifying a ModelLoader when adding a predictionenginepool to DI.","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\r\nCurrently, it is possible to specify a custom model loader when adding a `PredictionEnginePool` to the servicecollection, as mentioned in this pull request #4393 . This is important in cases where you want to, for example, load a specific version of a model from something like Azure Blob Storage.\r\n\r\nFirst of all, the official documentation makes no mention at all of this possibility. So  this needs to be documented.\r\n\r\nSecondly, when you want to add a model loader that needs access to the service provider, the `AddPredictionEnginePool` requires an implementationfactory with a lot of boilerplate, like so:\r\n\r\n```\r\nservices.AddPredictionEnginePool<InputModel, OutputModel>(provider =>\r\n        {\r\n            \r\n            IEnumerable<IConfigureOptions<PredictionEnginePoolOptions<InputModel, OutputModel>>>\r\n                configureOptionsList =\r\n                    new List<IConfigureOptions<PredictionEnginePoolOptions<InputModel, OutputModel>>>()\r\n                    {\r\n                        new ConfigureOptions<PredictionEnginePoolOptions<InputModel, OutputModel>>(options=>\r\n                            options.ModelLoader = new AzureModelLoader(provider))\r\n                    };\r\n            \r\n            IEnumerable<IPostConfigureOptions<PredictionEnginePoolOptions<InputModel, OutputModel>>>\r\n                postConfigures =\r\n                    new List<IPostConfigureOptions<PredictionEnginePoolOptions<InputModel, OutputModel>>>();\r\n            \r\n            var optionsfactory =\r\n                new OptionsFactory<PredictionEnginePoolOptions<InputModel, OutputModel>>(\r\n                    configureOptionsList,postConfigures);\r\n\r\n            return new PredictionEnginePool<InputModel, OutputModel>(provider,\r\n                provider.GetRequiredService<IOptions<MLOptions>>(), optionsfactory);\r\n        });\r\n```\r\nIt is also possible to add it through `AddOptions` like this:\r\n```\r\nservices.AddOptions<PredictionEnginePoolOptions<InputModel, OutputModel>>().Configure(options =>\r\n        {\r\n            options.ModelLoader = new ModelLoader();\r\n        });\r\n```\r\nBut this does not allow access to the serviceprovider.\r\n\r\n**Describe the solution you'd like**\r\n 1. Document this feature.\r\n 2. Add a method to configure the `PredictionEnginePoolOptions`  with the serviceprovider as a parameter:\r\n\r\n```\r\nservices.AddPredictionEnginePoolOptions<InputModel, OutputModel>((provider, options) =>\r\n        {\r\n            options.ModelLoader = new ModelLoader(provider);\r\n        });\r\n```\r\n**Describe alternatives you've considered**\r\nUsing the `AddOptions` method.\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6618","RelatedDescription":"Open issue \"Improvements when specifying a ModelLoader when adding a predictionenginepool to DI.\" (#6618)"},{"Id":"1657573761","IsPullRequest":false,"CreatedAt":"2023-04-06T14:50:06","Actor":"dietrichha","Number":"6617","RawContent":null,"Title":"Daily recurring AutoML experiment - losses best Model","State":"open","Body":"### Issue\r\n\r\nIn order to predict best prices, I do an AutoML regression expermient as explained here:\r\n\r\nhttps://learn.microsoft.com/en-us/dotnet/machine-learning/how-to-guides/how-to-use-the-automl-api\r\n\r\nAnd safe the best Model with: \r\nmlContext.Model.Save(experimentResult.Model, trainDataView.Schema, modelFilePath);\r\n\r\nAnd also print the Model R-Squared from the best found model.\r\n\r\nTo quickly adapt to new changes, I redo the AutoML expermient on a daily basis at 2 o'clock in the morning.\r\n\r\nWhen I look at the R2s they change daily between 0.7 and 0.95. \r\n\r\nHowever, I save the model regardless of the last one, i overwrite the 0.95 R2 model with e.g. the 0.7 R2 model. That is perhaps not a good idea, as the 0.95 from yesterday could still be better than the 0.7 model from today. \r\n\r\nIs there a way to load the 0.95 model (yes, that i know and do) and retest it against the 0.7 R2 model's input data (that I do not find how to do)? Then I could compare the R2 of both and save the better one. \r\n\r\nAny ideas how to do this \"retest\" of the Model?\r\n\r\n2. Question: Is there a way to automate this in the API? \r\n3. Is there a way to give the last model to the auto ml experiment to use it for re-training: https://learn.microsoft.com/en-us/dotnet/machine-learning/how-to-guides/retrain-model-ml-net\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/dotnet/machinelearning/issues/6617","RelatedDescription":"Open issue \"Daily recurring AutoML experiment - losses best Model\" (#6617)"},{"Id":"1649793408","IsPullRequest":true,"CreatedAt":"2023-04-04T08:14:33","Actor":"LittleLittleCloud","Number":"6613","RawContent":null,"Title":"Update timeout error message in AutoMLExperiment.cs","State":"closed","Body":"We are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [ ] You have included any necessary tests in the same PR.\r\n\r\nfix https://github.com/dotnet/machinelearning-modelbuilder/issues/2500","Url":"https://github.com/dotnet/machinelearning/pull/6613","RelatedDescription":"Closed or merged PR \"Update timeout error message in AutoMLExperiment.cs\" (#6613)"},{"Id":"1650227280","IsPullRequest":false,"CreatedAt":"2023-04-01T01:16:47","Actor":"hieu-n","Number":"6614","RawContent":null,"Title":"Wrong Examples for PermutationFeatureImportanceNonCalibrated Method","State":"open","Body":"The example is for the `PermutationFeatureImportance`, not `PermutationFeatureImportanceNonCalibrated`. \r\n\r\n\r\nIt looks like the example and remarks are copied over from:\r\n\r\nhttps://learn.microsoft.com/en-us/dotnet/api/microsoft.ml.permutationfeatureimportanceextensions.permutationfeatureimportance?view=ml-dotnet\r\n\r\n\r\n\r\n---\r\n#### Document Details\r\n\r\n⚠ *Do not edit this section. It is required for learn.microsoft.com ➟ GitHub issue linking.*\r\n\r\n* ID: ed3c78b4-bc81-7481-aec2-ffb27aa386d7\r\n* Version Independent ID: ed3c78b4-bc81-7481-aec2-ffb27aa386d7\r\n* Content: [PermutationFeatureImportanceExtensions.PermutationFeatureImportanceNonCalibrated Method (Microsoft.ML)](https://learn.microsoft.com/en-us/dotnet/api/Microsoft.ML.PermutationFeatureImportanceExtensions.PermutationFeatureImportanceNonCalibrated?view=ml-dotnet&viewFallbackFrom=netstandard-2.0)\r\n* Content Source: [dotnet/xml/Microsoft.ML/PermutationFeatureImportanceExtensions.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML/PermutationFeatureImportanceExtensions.xml)\r\n* Product: **dotnet-ml-api**\r\n* GitHub Login: @natke\r\n* Microsoft Alias: **nakersha**","Url":"https://github.com/dotnet/machinelearning/issues/6614","RelatedDescription":"Open issue \"Wrong Examples for PermutationFeatureImportanceNonCalibrated Method\" (#6614)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-05-03T03:30:21.0112405Z","RunDurationInMilliseconds":659}