{"Data":{"GitHub":{"Issues":[{"Id":"2867661329","IsPullRequest":true,"CreatedAt":"2025-02-21T01:22:42","Actor":"github-actions[bot]","Number":"7395","RawContent":null,"Title":"[release/4.0] Support O3 OpenAI model mapping","State":"open","Body":"Backport of #7394 to release/4.0\r\n\r\n/cc @tarekgh\r\n\r\n## Customer Impact\r\n\r\nUsers will be able to create a tokenizer object for the OpenAI o1 and o3 models.\r\n\r\n## Testing\r\n\r\nManually tested it and added a test specific to these models.\r\n\r\n## Risk\r\n\r\nVery low. No real code change, only allow accepting the model names \"o1\" and \"o3\" to create the tokenizer instance.\r\n","Url":"https://github.com/dotnet/machinelearning/pull/7395","RelatedDescription":"Open PR \"[release/4.0] Support O3 OpenAI model mapping\" (#7395)"},{"Id":"2825937046","IsPullRequest":false,"CreatedAt":"2025-02-21T01:19:37","Actor":"Peter-Juhasz","Number":"7375","RawContent":null,"Title":"`o3` and `o3-mini` support for tokenizer","State":"closed","Body":"**Is your feature request related to a problem? Please describe.**\nRelated to https://github.com/openai/tiktoken/issues/374\n\n**Describe the solution you'd like**\n`TiktokenTokenizer.CreateForModel` support for new models\n\n**Describe alternatives you've considered**\nConfigure encoding and tokenizer manually.\n\n**Additional context**\n-","Url":"https://github.com/dotnet/machinelearning/issues/7375","RelatedDescription":"Closed issue \"`o3` and `o3-mini` support for tokenizer\" (#7375)"},{"Id":"2867650451","IsPullRequest":true,"CreatedAt":"2025-02-21T01:19:36","Actor":"tarekgh","Number":"7394","RawContent":null,"Title":"Support O3 OpenAI model mapping","State":"closed","Body":"Fixes https://github.com/dotnet/machinelearning/issues/7375","Url":"https://github.com/dotnet/machinelearning/pull/7394","RelatedDescription":"Closed or merged PR \"Support O3 OpenAI model mapping\" (#7394)"},{"Id":"2849419086","IsPullRequest":true,"CreatedAt":"2025-02-20T22:55:47","Actor":"dotnet-maestro[bot]","Number":"7385","RawContent":null,"Title":"[release/3.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:45c6fd49-3a4f-4675-f3da-08dc0c527e17)\n## From https://github.com/dotnet/arcade\n- **Subscription**: 45c6fd49-3a4f-4675-f3da-08dc0c527e17\n- **Build**: 20250211.4\n- **Date Produced**: February 11, 2025 11:57:42 PM UTC\n- **Commit**: a319ada170a54ee87c7a81e3309948e3d3ea7aca\n- **Branch**: refs/heads/release/8.0\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 8.0.0-beta.24360.5 to 8.0.0-beta.25111.4][1]\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 8.0.0-beta.24360.5 to 8.0.0-beta.25111.4][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 8.0.0-beta.24360.5 to 8.0.0-beta.25111.4][1]\n  - **Microsoft.DotNet.SignTool**: [from 8.0.0-beta.24360.5 to 8.0.0-beta.25111.4][1]\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 8.0.0-beta.24360.5 to 8.0.0-beta.25111.4][1]\n  - **Microsoft.DotNet.XUnitExtensions**: [from 8.0.0-beta.24360.5 to 8.0.0-beta.25111.4][1]\n\n[1]: https://github.com/dotnet/arcade/compare/c9efa53517...a319ada170\n\n[DependencyUpdate]: <> (End)\n\n- **Updates to .NET SDKs:**\n  - Updates tools.dotnet to 8.0.113\n\n[marker]: <> (End:45c6fd49-3a4f-4675-f3da-08dc0c527e17)\n\n","Url":"https://github.com/dotnet/machinelearning/pull/7385","RelatedDescription":"Closed or merged PR \"[release/3.0] Update dependencies from dotnet/arcade\" (#7385)"},{"Id":"2849420311","IsPullRequest":true,"CreatedAt":"2025-02-20T22:55:24","Actor":"dotnet-maestro[bot]","Number":"7386","RawContent":null,"Title":"[release/4.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:a547de0d-c7ea-4682-b0d2-c8a549cede14)\n## From https://github.com/dotnet/arcade\n- **Subscription**: a547de0d-c7ea-4682-b0d2-c8a549cede14\n- **Build**: 20250211.5\n- **Date Produced**: February 11, 2025 11:57:34 PM UTC\n- **Commit**: 5da211e1c42254cb35e7ef3d5a8428fb24853169\n- **Branch**: refs/heads/release/9.0\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.25077.4 to 9.0.0-beta.25111.5][1]\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 9.0.0-beta.25077.4 to 9.0.0-beta.25111.5][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.25077.4 to 9.0.0-beta.25111.5][1]\n  - **Microsoft.DotNet.SignTool**: [from 9.0.0-beta.25077.4 to 9.0.0-beta.25111.5][1]\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 9.0.0-beta.25077.4 to 9.0.0-beta.25111.5][1]\n  - **Microsoft.DotNet.XliffTasks**: [from 9.0.0-beta.25077.4 to 9.0.0-beta.25111.5][1]\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.25077.4 to 9.0.0-beta.25111.5][1]\n\n[1]: https://github.com/dotnet/arcade/compare/bac7e1caea...5da211e1c4\n\n[DependencyUpdate]: <> (End)\n\n- **Updates to .NET SDKs:**\n  - Updates tools.dotnet to 9.0.103\n\n[marker]: <> (End:a547de0d-c7ea-4682-b0d2-c8a549cede14)\n\n","Url":"https://github.com/dotnet/machinelearning/pull/7386","RelatedDescription":"Closed or merged PR \"[release/4.0] Update dependencies from dotnet/arcade\" (#7386)"},{"Id":"2856765072","IsPullRequest":true,"CreatedAt":"2025-02-20T22:53:22","Actor":"dotnet-maestro[bot]","Number":"7387","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:c692823c-b896-437f-4f57-08dc434cc8f6)\n## From https://github.com/dotnet/arcade\n- **Subscription**: c692823c-b896-437f-4f57-08dc434cc8f6\n- **Build**: 20250213.2\n- **Date Produced**: February 13, 2025 5:32:04 PM UTC\n- **Commit**: ea0a0a28cccd4b63a9ec40df53ef2df260ffa5b1\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25106.4 to 10.0.0-beta.25113.2][1]\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 10.0.0-beta.25106.4 to 10.0.0-beta.25113.2][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25106.4 to 10.0.0-beta.25113.2][1]\n  - **Microsoft.DotNet.SignTool**: [from 10.0.0-beta.25106.4 to 10.0.0-beta.25113.2][1]\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 10.0.0-beta.25106.4 to 10.0.0-beta.25113.2][1]\n  - **Microsoft.DotNet.XliffTasks**: [from 10.0.0-beta.25106.4 to 10.0.0-beta.25113.2][1]\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25106.4 to 10.0.0-beta.25113.2][1]\n\n[1]: https://github.com/dotnet/arcade/compare/91630b31ce...ea0a0a28cc\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:c692823c-b896-437f-4f57-08dc434cc8f6)\n\n","Url":"https://github.com/dotnet/machinelearning/pull/7387","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#7387)"},{"Id":"2856832298","IsPullRequest":true,"CreatedAt":"2025-02-20T19:16:25","Actor":"stephentoub","Number":"7388","RawContent":null,"Title":"Update Microsoft.Extensions.AI to 9.3.0-preview.1.25114.11","State":"closed","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/7388","RelatedDescription":"Closed or merged PR \"Update Microsoft.Extensions.AI to 9.3.0-preview.1.25114.11\" (#7388)"},{"Id":"2867049743","IsPullRequest":false,"CreatedAt":"2025-02-20T19:12:11","Actor":"ericstj","Number":"7393","RawContent":null,"Title":"Resource contention in tests DownloadImageSet","State":"open","Body":"Multiple tests can run concurrently and try to download this resource to the same folder. \n\n## Build Information\nBuild: https://dev.azure.com/dnceng-public/cbb18261-c48f-4abb-8651-8cdcb5474649/_build/results?buildId=954239\nBuild error leg or test failing: Microsoft.ML.AutoML.Test.AutoFeaturizerTests.AutoFeaturizer_image_test\nPull request: https://github.com/dotnet/machinelearning/pull/7388\n<!-- Error message template  -->\n## Error Message\n\nFill the error message using [step by step known issues guidance](https://github.com/dotnet/arcade/blob/main/Documentation/Projects/Build%20Analysis/KnownIssueJsonStepByStep.md).\n\n<!-- Use ErrorMessage for String.Contains matches. Use ErrorPattern for regex matches (single line/no backtracking). Set BuildRetry to `true` to retry builds with this error. Set ExcludeConsoleLog to `true` to skip helix logs analysis. -->\n\n```json\n{\n  \"ErrorMessage\": \"flower_photos_tiny_set_for_unit_tests.zip' because it is being used by another process\",\n  \"ErrorPattern\": \"\",\n  \"BuildRetry\": false,\n  \"ExcludeConsoleLog\": true\n}\n```\n\n\r\n<!-- Known issue validation start -->\r\n ### Known issue validation\r\n**Build: :mag_right:** https://dev.azure.com/dnceng-public/public/_build/results?buildId=954239\r\n**Error message validated:** `[flower_photos_tiny_set_for_unit_tests.zip' because it is being used by another process`]\r\n**Result validation:** :white_check_mark: Known issue matched with the provided build.\r\n**Validation performed at:** 2/20/2025 7:12:33 PM UTC\r\n<!-- Known issue validation end -->\r\n<!--Known issue error report start -->\r\n\r\n### Report\r\n\r\n|Build|Definition|Test|Pull Request|\r\n|---|---|---|---|\r\n|[954239](https://dev.azure.com/dnceng-public/public/_build/results?buildId=954239)|dotnet/machinelearning|[Microsoft.ML.AutoML.Test.AutoFeaturizerTests.AutoFeaturizer_image_test](https://dev.azure.com/dnceng-public/public/_build/results?buildId=954239&view=ms.vss-test-web.build-test-results-tab&runId=25376176&resultId=101891)|dotnet/machinelearning#7388|\r\n#### Summary\r\n|24-Hour Hit Count|7-Day Hit Count|1-Month Count|\r\n|---|---|---|\r\n|0|1|1|\r\n<!--Known issue error report end -->","Url":"https://github.com/dotnet/machinelearning/issues/7393","RelatedDescription":"Open issue \"Resource contention in tests DownloadImageSet\" (#7393)"},{"Id":"2862728909","IsPullRequest":true,"CreatedAt":"2025-02-19T09:27:27","Actor":"pgroene","Number":"7392","RawContent":null,"Title":"Add maxTokenCount parameter to CountTokens method","State":"open","Body":"Updated the CountTokens method in Tokenizer.cs to include a maxTokenCount parameter for limiting token counts. Added tests in TiktokenTests.cs and TokenizerTests.cs to verify the new functionality and ensure correct behavior with the maximum token count.\r\n\r\nWe are excited to review your PR.\r\n\r\nSo we can do the best job, please check:\r\n\r\n- [x] There's a descriptive title that will make sense to other developers some time from now. \r\n- [x] There's associated issues. All PR's should have issue(s) associated - unless a trivial self-evident change such as fixing a typo. You can use the format `Fixes #nnnn` in your description to cause GitHub to automatically close the issue(s) when your PR is merged.\r\n- [x] Your change description explains what the change does, why you chose your approach, and anything else that reviewers should know.\r\n- [x] You have included any necessary tests in the same PR.\r\n\r\nfixes #7391","Url":"https://github.com/dotnet/machinelearning/pull/7392","RelatedDescription":"Open PR \"Add maxTokenCount parameter to CountTokens method\" (#7392)"},{"Id":"2862725686","IsPullRequest":false,"CreatedAt":"2025-02-19T09:26:07","Actor":"pgroene","Number":"7391","RawContent":null,"Title":"Add max number of token to count to the TokenCount function","State":"open","Body":"Is your feature request related to a problem? Please describe.\n\nWhen processing large inputs, I need to count the tokens to ensure they do not exceed the maximum allowed for my request before sending it. Currently, the existing interfaces require counting all tokens in the input, even if I only need to know if the count exceeds a specific number. This results in unnecessary processing. It would be more efficient to have the ability to stop counting once a certain threshold is reached.\n\nDescribe the solution you'd like\n\nIntroduce an optional parameter in the CountTokens method that allows setting a maximum number of tokens to count. This way, the counting process can terminate early if the specified limit is reached, saving processing time and resources. This parameter should be added to the existing parameters for the counting method\n\n**Describe alternatives you've considered**\n\n**Additional context**\n\n\n","Url":"https://github.com/dotnet/machinelearning/issues/7391","RelatedDescription":"Open issue \"Add max number of token to count to the TokenCount function\" (#7391)"},{"Id":"2861539983","IsPullRequest":true,"CreatedAt":"2025-02-18T20:10:47","Actor":"tarekgh","Number":"7390","RawContent":null,"Title":"Introducing SentencePiece Unigram Tokenizer Model","State":"open","Body":"Fixes https://github.com/dotnet/machinelearning/issues/7186\r\n\r\nWe have been supporting SentencePiece Bpe model for a while, the change here is introducing the support to the SentencePiece Unigram tokenizer model.  \r\n\r\nUsers can create a tokenizer instance by using a code like the following:\r\n\r\n```C#\r\n// download the tokenizer.model from the LLM model site like the following:            \r\n// @\"https://huggingface.co/sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2/resolve/main/sentencepiece.bpe.model?download=true\";\r\nusing Stream remoteStream = File.OpenRead(path/to/the/tokenizer/model/file);\r\nSentencePieceTokenizer tokenizer = SentencePieceTokenizer.Create(remoteStream);\r\n```\r\n\r\n## Notes around the change \r\n- Have done some refactoring code existed in the `SentencePieceToknizer.cs` file into a newly introduced file `SentencePieceBaseModel.cs` and `SentencePieceBpeModel.cs`. Most of the code in the newly introduced files are mostly not changed.\r\n- Added the new Unigram implementation into the `SentencePieceUnigramModel.cs` file.\r\n- Changed `SentencePieceTokenizer.cs` to work with the model abstraction and automatically handle both models Bpe and Unigram.\r\n- The change shouldn't introduce any behavior change to the existing model (i.e Bpe).","Url":"https://github.com/dotnet/machinelearning/pull/7390","RelatedDescription":"Open PR \"Introducing SentencePiece Unigram Tokenizer Model\" (#7390)"},{"Id":"2861123326","IsPullRequest":false,"CreatedAt":"2025-02-18T17:28:11","Actor":"jackpotcityco","Number":"7389","RawContent":null,"Title":"Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity","State":"open","Body":"Hello,\n\n- ML.net: 3.0.1\n- CPU: i7-12800h\n- 24 MB Intel® Smart Cache\n- RAM: 64 GB\n\nI encounter an error that happens sometimes and sometimes not which I can't understand why that happens when I train a:\n**mlContext.Auto().CreateRegressionExperiment**\n\n(I have over 20 GB of free RAM when the error occurs)\n\n_General Exception:\nMessage: One or more errors occurred.\n   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)\n   at Microsoft.ML.AutoML.AutoMLExperiment.Run()\n   at Microsoft.ML.AutoML.RegressionExperiment.Execute(IDataView trainData, IDataView validationData, ColumnInformation columnInformation, IEstimator`1 preFeaturizer, IProgress`1 progressHandler)\nInner Exception:\n**Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity** at Microsoft.ML.AutoML.AutoMLExperiment.<RunAsync>d__24.MoveNext()_\n\n\nI will explain step by step what I have done:\n\n**Step 1:**\nI have filled below IDataViews where each row has 50 Features and a \"Label\" Target Truth column.\n\n(Pseudo code) IDataViews contains those number of rows with 51 Columns:\n```\n             IDataView trainData          (Has 175000 rows)\n             IDataView hold_out_data      (Has 75000 rows)\n```\nEach Feature value for all rows has float values and has been checked to ensure valid values against this function:\n```\nbool IsValid(float value)\n{\n    // A valid number is not NaN and not Infinity\n    return !float.IsNaN(value) && !float.IsInfinity(value);\n}\n```\n                                                     \n**Step 2:**\nI now use those 2 IDataViews in below function to train the Model. But the training stops after 0-3 seconds all the time _(I also use a loop to call the below function where I shuffle the data in each iteration to see if that could solve it but it doesn't help)_ and produces the above/below error which is:\n**Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity**\n\nAs seen I have set training time to 240 seconds. Increasing does not seem to be the problem as training stops after 0-3 seconds.\nWhy is that happening as all feature values has valid \"float\" values?\n\nIf I for example use less rows. For example 150,000 rows. The error will most of the time not occur and the training of the models works fine. \nBut to not confuse, I also have other instances where I use more than those 250,000 rows and training can succeed.\n\nSo this error happens truly at random as it seems and how to understand why this is happening as the error doesn't tell exactly where and why this is happening. How to solve this problem?\n\nThank you!\n\n```\n        void Model_Training(IDataView trainData, IDataView hold_out_data)\n        {\n            var mlContext = new MLContext();\n            var cts = new CancellationToken();\n            ExperimentBase<RegressionMetrics, RegressionExperimentSettings> regression_Experiment = null;\n            regression_Experiment = mlContext.Auto().CreateRegressionExperiment(new RegressionExperimentSettings\n            {\n                MaxExperimentTimeInSeconds = 240,\n                CacheBeforeTrainer = CacheBeforeTrainer.Off,\n                CacheDirectoryName = \"C:/Aintelligence/temp/cache\",\n                MaximumMemoryUsageInMegaByte = 16384,\n                OptimizingMetric = RegressionMetric.RSquared,\n                CancellationToken = cts\n            });\n\n            // Progress handler for regression\n            var regressionProgressHandler = new Progress<RunDetail<RegressionMetrics>>(ph =>\n            {\n                if (ph.ValidationMetrics != null) { progress(Math.Round(ph.ValidationMetrics.RSquared, 3), ph.TrainerName, ph.ValidationMetrics, ph.Model); }\n            });\n            void progress(double metricValue, string TrainerName, object ValidationMetrics, ITransformer Model)\n            {\n                //Log this info\n                var logInfo = (TrainerName, ValidationMetrics, Model);\n            }\n            try\n            {\n                //Do something with the results\n                var results = regression_Experiment.Execute(trainData, hold_out_data, labelColumnName: \"Label\", progressHandler: regressionProgressHandler);\n            }\n            catch (Exception ex)\n            {\n                //Log this error\n                string str = $\"General Exception:\\nMessage: {ex.Message}\\n{ex.StackTrace}\\n{(ex.InnerException != null ? $\"Inner Exception:\\n{ex.InnerException.Message}\\n{ex.InnerException.StackTrace}\\n\" : \"\")}\";\n            }\n        }\n```","Url":"https://github.com/dotnet/machinelearning/issues/7389","RelatedDescription":"Open issue \"Training time finished without completing a successful trial. Either no trial completed or the metric for all completed trials are NaN or Infinity\" (#7389)"},{"Id":"2841340369","IsPullRequest":true,"CreatedAt":"2025-02-12T16:20:50","Actor":"dotnet-maestro[bot]","Number":"7382","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:c692823c-b896-437f-4f57-08dc434cc8f6)\n## From https://github.com/dotnet/arcade\n- **Subscription**: c692823c-b896-437f-4f57-08dc434cc8f6\n- **Build**: 20250206.4\n- **Date Produced**: February 6, 2025 11:27:46 PM UTC\n- **Commit**: 91630b31ce859c28f637b62b566ea8829b982f2c\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25080.7 to 10.0.0-beta.25106.4][1]\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 10.0.0-beta.25080.7 to 10.0.0-beta.25106.4][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25080.7 to 10.0.0-beta.25106.4][1]\n  - **Microsoft.DotNet.SignTool**: [from 10.0.0-beta.25080.7 to 10.0.0-beta.25106.4][1]\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 10.0.0-beta.25080.7 to 10.0.0-beta.25106.4][1]\n  - **Microsoft.DotNet.XliffTasks**: [from 10.0.0-beta.25080.7 to 10.0.0-beta.25106.4][1]\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25080.7 to 10.0.0-beta.25106.4][1]\n\n[1]: https://github.com/dotnet/arcade/compare/bbea86c614...91630b31ce\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:c692823c-b896-437f-4f57-08dc434cc8f6)\n\n","Url":"https://github.com/dotnet/machinelearning/pull/7382","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#7382)"},{"Id":"2845916809","IsPullRequest":false,"CreatedAt":"2025-02-11T16:39:15","Actor":"luisquintanilla","Number":"7384","RawContent":null,"Title":"Docs: HuggingFace (NLP) Migration Guide","State":"open","Body":"Add guidance on how to use (NLP) models from HuggingFace\n\n- Tokenizers\n- TorchSharp / ONNX\n- Tensors","Url":"https://github.com/dotnet/machinelearning/issues/7384","RelatedDescription":"Open issue \"Docs: HuggingFace (NLP) Migration Guide\" (#7384)"},{"Id":"2845784939","IsPullRequest":false,"CreatedAt":"2025-02-11T15:52:06","Actor":"luisquintanilla","Number":"7383","RawContent":null,"Title":".NET AI Fundamentals Feedback / Feature Requests","State":"open","Body":"Original issue created in microsoft/semantic-kernel#9793.\n\nSample project: [tjwald/high-perf-ML](https://github.com/tjwald/high-perf-ml)\n\nRelated feedback:\n\n- [ ] microsoft/onnxruntime#23261\n- [ ] dotnet/runtime#100924\n- [ ] dotnet/runtime#103611\n- [ ] #7371\n- [ ] #7372\n- [ ] microsoft/onnxruntime#19140\n- [ ] #7384 \n\n\n\n\n\n","Url":"https://github.com/dotnet/machinelearning/issues/7383","RelatedDescription":"Open issue \".NET AI Fundamentals Feedback / Feature Requests\" (#7383)"},{"Id":"2836387401","IsPullRequest":false,"CreatedAt":"2025-02-06T19:24:31","Actor":"jmkinzer","Number":"7381","RawContent":null,"Title":"cloning is incorrectly implemented","State":"open","Body":"The CloneAs* methods for PrimitiveDataFrameColumn<T> are incorrect. They seem to assume 1 input buffer will become 1 output buffer. This can't be correct in the case where for example:\n- The original buffer is at MaxCapacity elements => therefore has size in bytes of ArrayUtility.ArrayMaxSize\n- The new buffer has a larger sizeof(T)\n\nAs an experiment I set the ArrayMaxSize to a smaller  value (say 32768). In integer elements this will therefore be 8192 but in double elements only 4096. However the clone routine will still attempt to allocate a buffer of 8192 doubles = 65K bytes. Running an operation that would cause a clone I indeed see the expected exception:\n\n![Image](https://github.com/user-attachments/assets/7f30fd2c-5741-48ca-9133-12b3f3dae294)","Url":"https://github.com/dotnet/machinelearning/issues/7381","RelatedDescription":"Open issue \"cloning is incorrectly implemented\" (#7381)"},{"Id":"2826421837","IsPullRequest":true,"CreatedAt":"2025-02-05T18:45:56","Actor":"dotnet-maestro[bot]","Number":"7377","RawContent":null,"Title":"[release/4.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:a547de0d-c7ea-4682-b0d2-c8a549cede14)\n## From https://github.com/dotnet/arcade\n- **Subscription**: a547de0d-c7ea-4682-b0d2-c8a549cede14\n- **Build**: 20250127.4\n- **Date Produced**: January 27, 2025 10:35:09 PM UTC\n- **Commit**: bac7e1caea791275b7c3ccb4cb75fd6a04a26618\n- **Branch**: refs/heads/release/9.0\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.25065.2 to 9.0.0-beta.25077.4][1]\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 9.0.0-beta.25065.2 to 9.0.0-beta.25077.4][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.25065.2 to 9.0.0-beta.25077.4][1]\n  - **Microsoft.DotNet.SignTool**: [from 9.0.0-beta.25065.2 to 9.0.0-beta.25077.4][1]\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 9.0.0-beta.25065.2 to 9.0.0-beta.25077.4][1]\n  - **Microsoft.DotNet.XliffTasks**: [from 9.0.0-beta.25065.2 to 9.0.0-beta.25077.4][1]\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.25065.2 to 9.0.0-beta.25077.4][1]\n\n[1]: https://github.com/dotnet/arcade/compare/c4bbc67763...bac7e1caea\n\n[DependencyUpdate]: <> (End)\n\n\n[marker]: <> (End:a547de0d-c7ea-4682-b0d2-c8a549cede14)\n\n","Url":"https://github.com/dotnet/machinelearning/pull/7377","RelatedDescription":"Closed or merged PR \"[release/4.0] Update dependencies from dotnet/arcade\" (#7377)"},{"Id":"2826420896","IsPullRequest":true,"CreatedAt":"2025-02-05T17:41:19","Actor":"dotnet-maestro[bot]","Number":"7376","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:c692823c-b896-437f-4f57-08dc434cc8f6)\n## From https://github.com/dotnet/arcade\n- **Subscription**: c692823c-b896-437f-4f57-08dc434cc8f6\n- **Build**: 20250130.7\n- **Date Produced**: January 30, 2025 8:12:06 PM UTC\n- **Commit**: bbea86c614fcf4380c58c80eacd279a0b8305a79\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25076.1 to 10.0.0-beta.25080.7][1]\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 10.0.0-beta.25076.1 to 10.0.0-beta.25080.7][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25076.1 to 10.0.0-beta.25080.7][1]\n  - **Microsoft.DotNet.SignTool**: [from 10.0.0-beta.25076.1 to 10.0.0-beta.25080.7][1]\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 10.0.0-beta.25076.1 to 10.0.0-beta.25080.7][1]\n  - **Microsoft.DotNet.XliffTasks**: [from 10.0.0-beta.25076.1 to 10.0.0-beta.25080.7][1]\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25076.1 to 10.0.0-beta.25080.7][1]\n\n[1]: https://github.com/dotnet/arcade/compare/fe17712bed...bbea86c614\n\n[DependencyUpdate]: <> (End)\n\n- **Updates to .NET SDKs:**\n  - Updates tools.dotnet to 10.0.100-alpha.1.25077.2\n\n[marker]: <> (End:c692823c-b896-437f-4f57-08dc434cc8f6)\n\n","Url":"https://github.com/dotnet/machinelearning/pull/7376","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#7376)"},{"Id":"2830505233","IsPullRequest":false,"CreatedAt":"2025-02-04T14:53:55","Actor":"superichmann","Number":"7380","RawContent":null,"Title":"LdSvmTrainer slow behaviour when loading from a remote database","State":"open","Body":"**System Information (please complete the following information):**\n - OS & Version: Windows 10\n - ML.NET Version: 4.0.0\n - .NET Version: 9\n\n**Describe the bug**\nWhen using DatabaseLoader from a remote database, the loading time and overall running time is much longer then other trainers.\nAs well the memory does not fills up quickly in comparison to different trainers\n\n**To Reproduce**\nRun LdSvmTrainer on a large dataset with hundreds of columns and millions of rows, should leave memory footprint. but it just consumes more and more data from the network sql and not fills up the memory, also takes about 100 times longer then lgbm / ff.\n\nRun a different trainer (lgbm/ff) on the same dataset and see the memory footprint.\n\n**Expected behavior**\nLdSvmTrainer shoud load the entire data onto memory, similar to other ml.net trainers and then work on them.\n","Url":"https://github.com/dotnet/machinelearning/issues/7380","RelatedDescription":"Open issue \"LdSvmTrainer slow behaviour when loading from a remote database\" (#7380)"},{"Id":"2828300110","IsPullRequest":false,"CreatedAt":"2025-02-03T19:03:30","Actor":"JohanLarsson","Number":"7379","RawContent":null,"Title":"How do we get the classes from a confusion matrix?","State":"open","Body":"The field `PredictedClassesIndicators` is `internal`, what is the intended way to get the classes?\n\nUse case:\n\n![Image](https://github.com/user-attachments/assets/e3b99872-c1c5-44bc-83fb-9e206aebe67f)\n","Url":"https://github.com/dotnet/machinelearning/issues/7379","RelatedDescription":"Open issue \"How do we get the classes from a confusion matrix?\" (#7379)"},{"Id":"2826540207","IsPullRequest":false,"CreatedAt":"2025-02-03T06:32:53","Actor":"JohanLarsson","Number":"7378","RawContent":null,"Title":"LightGBM feature importance","State":"open","Body":"How can the LightGBM [feature importances](https://lightgbm.readthedocs.io/en/latest/pythonapi/lightgbm.plot_importance.html) API be accessed when using ML.NET?","Url":"https://github.com/dotnet/machinelearning/issues/7378","RelatedDescription":"Open issue \"LightGBM feature importance\" (#7378)"},{"Id":"2812087460","IsPullRequest":true,"CreatedAt":"2025-01-29T05:32:10","Actor":"dotnet-maestro[bot]","Number":"7374","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:c692823c-b896-437f-4f57-08dc434cc8f6)\n## From https://github.com/dotnet/arcade\n- **Subscription**: c692823c-b896-437f-4f57-08dc434cc8f6\n- **Build**: 20250126.1\n- **Date Produced**: January 26, 2025 10:35:35 AM UTC\n- **Commit**: fe17712bedb95a55d5af00c5191772c81393745f\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25067.3 to 10.0.0-beta.25076.1][1]\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 10.0.0-beta.25067.3 to 10.0.0-beta.25076.1][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25067.3 to 10.0.0-beta.25076.1][1]\n  - **Microsoft.DotNet.SignTool**: [from 10.0.0-beta.25067.3 to 10.0.0-beta.25076.1][1]\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 10.0.0-beta.25067.3 to 10.0.0-beta.25076.1][1]\n  - **Microsoft.DotNet.XliffTasks**: [from 10.0.0-beta.25067.3 to 10.0.0-beta.25076.1][1]\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25067.3 to 10.0.0-beta.25076.1][1]\n\n[1]: https://github.com/dotnet/arcade/compare/12fdb9fc3f...fe17712bed\n\n[DependencyUpdate]: <> (End)\n\n- **Updates to .NET SDKs:**\n  - Updates tools.dotnet to 10.0.100-alpha.1.25074.2\n\n[marker]: <> (End:c692823c-b896-437f-4f57-08dc434cc8f6)\n\n","Url":"https://github.com/dotnet/machinelearning/pull/7374","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#7374)"},{"Id":"2809406020","IsPullRequest":false,"CreatedAt":"2025-01-27T06:12:18","Actor":"Pavan8374","Number":"7373","RawContent":null,"Title":"Unable to load DLL 'MatrixFactorizationNative' or one of its dependencies: The specified module could not be found. (0x8007007E)'","State":"closed","Body":"I get this exception during model training. I even installed the latest nuget packages: Microsoft.ml 4.0.1 and Microsoft.ML.Recommender 0.22.1.\nI don't know what I am missing. \nDetailed Exception details:\n\nSystem.DllNotFoundException\n  HResult=0x80131524\n  Message=Unable to load DLL 'MatrixFactorizationNative' or one of its dependencies: The specified module could not be found. (0x8007007E)\n  Source=Microsoft.ML.Recommender\n  StackTrace:\n   at Microsoft.ML.Recommender.Internal.SafeTrainingAndModelBuffer.MFTrain(MFProblem* prob, MFParameter* param)\n   at Microsoft.ML.Recommender.Internal.SafeTrainingAndModelBuffer.MFTrain(MFProblem* prob, MFParameter* param)\n   at Microsoft.ML.Recommender.Internal.SafeTrainingAndModelBuffer.Train(IChannel ch, Int32 rowCount, Int32 colCount, DataViewRowCursor cursor, ValueGetter`1 labGetter, ValueGetter`1 rowGetter, ValueGetter`1 colGetter)\n   at Microsoft.ML.Trainers.MatrixFactorizationTrainer.TrainCore(IChannel ch, RoleMappedData data, RoleMappedData validData)\n   at Microsoft.ML.Trainers.MatrixFactorizationTrainer.Fit(IDataView trainData, IDataView validationData)\n   at Microsoft.ML.Trainers.MatrixFactorizationTrainer.Fit(IDataView input)\n   at Microsoft.ML.Data.EstimatorChain`1.Fit(IDataView input)\n   at Feed.ML.FollowRecommendations.FollowRecommendation.TrainModel(IDataView trainData) in F:\\Projects\\HomeFeedService\\mq-cache-example\\src\\Feed.ML\\FollowRecommendations\\FollowRecommendation.cs:line 94\n   at Feed.ML.FollowRecommendations.FollowRecommendation.<GetFollowRecommendationsAsync>d__4.MoveNext() in F:\\Projects\\HomeFeedService\\mq-cache-example\\src\\Feed.ML\\FollowRecommendations\\FollowRecommendation.cs:line 47\n\n  This exception was originally thrown at this call stack:\n    [External Code]\n    Feed.ML.FollowRecommendations.FollowRecommendation.TrainModel(Microsoft.ML.IDataView) in FollowRecommendation.cs\n    Feed.ML.FollowRecommendations.FollowRecommendation.GetFollowRecommendationsAsync(Feed.ML.FollowRecommendations.UserSuggestionQuery) in FollowRecommendation.cs\n\n\nHere is my piece of code:\n\n```\nprivate ITransformer TrainModel(IDataView trainData)\n{\n    try\n    {\n        // Define the pipeline\n        var pipeline = _mlContext.Recommendation().Trainers.MatrixFactorization(new MatrixFactorizationTrainer.Options\n        {\n            MatrixColumnIndexColumnName = nameof(FollowData.UserIdEncoded),\n            MatrixRowIndexColumnName = nameof(FollowData.TargetUserIdEncoded),\n            LabelColumnName = nameof(FollowData.Rating),\n            NumberOfIterations = 20,\n            ApproximationRank = 100\n        });\n\n        // Encode the UserId and TargetUserId as keys for Matrix Factorization\n        var preprocessingPipeline = _mlContext.Transforms.Conversion\n            .MapValueToKey(nameof(FollowData.UserId), nameof(FollowData.UserIdEncoded))\n            .Append(_mlContext.Transforms.Conversion.MapValueToKey(nameof(FollowData.TargetUserId), nameof(FollowData.TargetUserIdEncoded)));\n\n        var fullPipeline = preprocessingPipeline.Append(pipeline);\n\n        // Train the model\n        var model = fullPipeline.Fit(trainData);\n\n        return model;\n    }\n    catch (Exception)\n    {\n\n        throw;\n    }\n\n    \n}\n\n\npublic class FollowData\n{\n    [LoadColumn(0)]\n    public string UserId { get; set; }\n\n    [LoadColumn(1)]\n    public string TargetUserId { get; set; }\n\n    [LoadColumn(2)]\n    public float Rating { get; set; } = 1;\n\n   \n    [KeyType(count: 1000)] \n    public uint UserIdEncoded { get; set; }\n\n    [KeyType(count: 1000)] \n    public uint TargetUserIdEncoded { get; set; }\n}\n\n```\nPlease ask me if you need more info.","Url":"https://github.com/dotnet/machinelearning/issues/7373","RelatedDescription":"Closed issue \"Unable to load DLL 'MatrixFactorizationNative' or one of its dependencies: The specified module could not be found. (0x8007007E)'\" (#7373)"},{"Id":"2806184140","IsPullRequest":false,"CreatedAt":"2025-01-23T07:54:00","Actor":"tjwald","Number":"7372","RawContent":null,"Title":"Context Aware Tokenization","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\nContinuing this thread from https://github.com/microsoft/semantic-kernel/issues/9793#:~:text=Context%20Tokenization .\nMigrating from python to C# is difficult enough, supporting the same feature set but being more efficient is important for the migration story.\nOne feature that is currently missing is context aware tokenization.\n\nIn python, HuggingFace tokenizers support this:\n\n```python\ntokenizer = AutoTokenizer.from_pretrained('/path/to/tokenizer')\n\ncontext = 'some context'\nsentence = 'some sentence'\n\ntokens = tokenizer(context, sentence)\n```\n\nWhere the tokenizer will tokenize the sentence with the given context.\n\n**Describe the solution you'd like**\nAdd new API (including batch API) that support this:\n\n```csharp\nclass Tokenizer\n{\n     public IReadOnlyList<int> EncodeToIds(string context, string text, bool considerPreTokenization = true, bool considerNormalization = true)\n     ...\n     // relating to: https://github.com/dotnet/machinelearning/issues/7371\n     public void BatchTokenize<T, K>(ReadOnlySpan<string> contexts, ReadOnlySpan<string> texts,  int maxTokenCount, Tensor<T> tokenIds, Tensor<K> mask) \n              where T: INumber<T>, K: INumber<K>\n}\n```\n\n**Describe alternatives you've considered**\nStudy the inner working of different tokenizers in the python implementation and see how to port the same functionality. \n\n**Additional context**\nContinuing the thread related to tokenizers from https://github.com/microsoft/semantic-kernel/issues/9793","Url":"https://github.com/dotnet/machinelearning/issues/7372","RelatedDescription":"Open issue \"Context Aware Tokenization\" (#7372)"},{"Id":"2806168709","IsPullRequest":false,"CreatedAt":"2025-01-23T07:44:51","Actor":"tjwald","Number":"7371","RawContent":null,"Title":"Batch Tokenization Support","State":"open","Body":"**Is your feature request related to a problem? Please describe.**\nMost AI systems use batching for performance reasons, needing all tokenized sentences being the same size and outputting a mask of which values are padding.\nIn [my project](https://github.com/tjwald/high-perf-ML/blob/develop/ML.Infra/Tokenization/PretrainedTokenizer.cs) I had to implement this myself. The issues are mostly performance and API compatibility with the ecosystem. \nWith my solution - There are megabytes of allocations:\n\n![Image](https://github.com/user-attachments/assets/be2a8b84-6809-48ad-8833-c096943607e8)\n\nThe Int64[] allocations are due to widening needed to be done since the ONNX model needs Tensor<long> as input.\nThe int32[] allocations are the actual tokens.\nThe strings allocations are token strings that are not used and are thrown away.\nThe other allocations are internal, and I don't know what they are. \n\n**Describe the solution you'd like**\nEnable 0 allocations solution via an API like the following:\n\n```csharp\nclass Tokenizer\n{\n     ...\n     public void BatchTokenize<T, K>(ReadOnlySpan<string> texts,  int maxTokenCount, Tensor<T> tokenIds, Tensor<K> mask) \n              where T: INumber<T>, K: INumber<K>\n}\n```\n\nWhere the string allocations are removed if not needed, and the other internal allocations optimized.\nThis API will enable me to pool Tensors, and removing casting from the `int` to `long` for my models.\n\n**Describe alternatives you've considered**\nI have implemented my own batch tokenizer: https://github.com/tjwald/high-perf-ML/blob/develop/ML.Infra/Tokenization/PretrainedTokenizer.cs.\n\n**Additional context**\nContinuing this ticket: https://github.com/microsoft/semantic-kernel/issues/9793 on the tokenization part.\n","Url":"https://github.com/dotnet/machinelearning/issues/7371","RelatedDescription":"Open issue \"Batch Tokenization Support\" (#7371)"},{"Id":"2805116124","IsPullRequest":true,"CreatedAt":"2025-01-22T18:50:50","Actor":"michaelgsharp","Number":"7370","RawContent":null,"Title":"more logging in run tests","State":"open","Body":"","Url":"https://github.com/dotnet/machinelearning/pull/7370","RelatedDescription":"Open PR \"more logging in run tests\" (#7370)"},{"Id":"2798193754","IsPullRequest":true,"CreatedAt":"2025-01-22T05:17:49","Actor":"dotnet-maestro[bot]","Number":"7368","RawContent":null,"Title":"[main] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:c692823c-b896-437f-4f57-08dc434cc8f6)\n## From https://github.com/dotnet/arcade\n- **Subscription**: c692823c-b896-437f-4f57-08dc434cc8f6\n- **Build**: 20250117.3\n- **Date Produced**: January 17, 2025 7:05:09 PM UTC\n- **Commit**: 12fdb9fc3fe43a861f1ae01747bfe6cef878d4cb\n- **Branch**: refs/heads/main\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 10.0.0-beta.25061.1 to 10.0.0-beta.25067.3][1]\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 10.0.0-beta.25061.1 to 10.0.0-beta.25067.3][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 10.0.0-beta.25061.1 to 10.0.0-beta.25067.3][1]\n  - **Microsoft.DotNet.SignTool**: [from 10.0.0-beta.25061.1 to 10.0.0-beta.25067.3][1]\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 10.0.0-beta.25061.1 to 10.0.0-beta.25067.3][1]\n  - **Microsoft.DotNet.XliffTasks**: [from 10.0.0-beta.25061.1 to 10.0.0-beta.25067.3][1]\n  - **Microsoft.DotNet.XUnitExtensions**: [from 10.0.0-beta.25061.1 to 10.0.0-beta.25067.3][1]\n\n[1]: https://github.com/dotnet/arcade/compare/98b4ae348f...12fdb9fc3f\n\n[DependencyUpdate]: <> (End)\n\n- **Updates to .NET SDKs:**\n  - Updates tools.dotnet to 10.0.100-alpha.1.25064.3\n\n[marker]: <> (End:c692823c-b896-437f-4f57-08dc434cc8f6)\n\n","Url":"https://github.com/dotnet/machinelearning/pull/7368","RelatedDescription":"Closed or merged PR \"[main] Update dependencies from dotnet/arcade\" (#7368)"},{"Id":"2798194439","IsPullRequest":true,"CreatedAt":"2025-01-22T05:17:31","Actor":"dotnet-maestro[bot]","Number":"7369","RawContent":null,"Title":"[release/4.0] Update dependencies from dotnet/arcade","State":"closed","Body":"This pull request updates the following dependencies\n\n[marker]: <> (Begin:a547de0d-c7ea-4682-b0d2-c8a549cede14)\n## From https://github.com/dotnet/arcade\n- **Subscription**: a547de0d-c7ea-4682-b0d2-c8a549cede14\n- **Build**: 20250115.2\n- **Date Produced**: January 15, 2025 7:09:49 PM UTC\n- **Commit**: c4bbc67763bf0c5a868862df874079380e647d61\n- **Branch**: refs/heads/release/9.0\n\n[DependencyUpdate]: <> (Begin)\n\n- **Updates**:\n  - **Microsoft.DotNet.Arcade.Sdk**: [from 9.0.0-beta.25058.5 to 9.0.0-beta.25065.2][1]\n  - **Microsoft.DotNet.Build.Tasks.Feed**: [from 9.0.0-beta.25058.5 to 9.0.0-beta.25065.2][1]\n  - **Microsoft.DotNet.Helix.Sdk**: [from 9.0.0-beta.25058.5 to 9.0.0-beta.25065.2][1]\n  - **Microsoft.DotNet.SignTool**: [from 9.0.0-beta.25058.5 to 9.0.0-beta.25065.2][1]\n  - **Microsoft.DotNet.SwaggerGenerator.MSBuild**: [from 9.0.0-beta.25058.5 to 9.0.0-beta.25065.2][1]\n  - **Microsoft.DotNet.XliffTasks**: [from 9.0.0-beta.25058.5 to 9.0.0-beta.25065.2][1]\n  - **Microsoft.DotNet.XUnitExtensions**: [from 9.0.0-beta.25058.5 to 9.0.0-beta.25065.2][1]\n\n[1]: https://github.com/dotnet/arcade/compare/8cc6ecd76c...c4bbc67763\n\n[DependencyUpdate]: <> (End)\n\n- **Updates to .NET SDKs:**\n  - Updates tools.dotnet to 9.0.102\n\n[marker]: <> (End:a547de0d-c7ea-4682-b0d2-c8a549cede14)\n\n","Url":"https://github.com/dotnet/machinelearning/pull/7369","RelatedDescription":"Closed or merged PR \"[release/4.0] Update dependencies from dotnet/arcade\" (#7369)"},{"Id":"2790471917","IsPullRequest":true,"CreatedAt":"2025-01-18T05:14:48","Actor":"michaelgsharp","Number":"7366","RawContent":null,"Title":"Servicing version update","State":"closed","Body":"Updating servicing version to 4.0.2.","Url":"https://github.com/dotnet/machinelearning/pull/7366","RelatedDescription":"Closed or merged PR \"Servicing version update\" (#7366)"},{"Id":"2792226030","IsPullRequest":false,"CreatedAt":"2025-01-16T09:52:59","Actor":"aforoughi1","Number":"7367","RawContent":null,"Title":"Direct Accces to Microsoft.ML.GenAI.LLaMA Model","State":"open","Body":"I would like to convert a LLama model to a Multiclass Classification Model and then finetune the model on my classification labels. \n\nCurrently, the Microsoft.ML.GenAI.LLaMA/Module/LlamaModel is internal.\n\nStep 1\nLoad the pre-trained LLaMA model\n\nstring device = \"cpu\";\nstring weightFolder = @\".\\Llama3.1-8B\";\nstring originalWeightFolder = Path.Combine(weightFolder, \"original\");\nstring configName = \"config.json\";\nstring modelFile = \"tokenizer.model\";\nstring checkPointName = \"model.safetensors.index.json\";\n\n// Load the Pretrained Model: First, load the pretrained LLaMA model using TorchSharp.\nmodel = LlamaForCausalLM.FromPretrained(weightFolder, configName, checkPointName: checkPointName, layersOnTargetDevice: -1, quantizeToInt8: false, targetDevice: device);\n\nStep 2\nCreate a classification head \n\npublic class ClassificationHead : Module<Tensor, Tensor>\n{\n    private readonly Module<Tensor, Tensor> linear1;\n    private readonly Module<Tensor, Tensor> relu;\n    private readonly Module<Tensor, Tensor> linear2;\n\n    public ClassificationHead(int d_model,int outputSize, int num_classes) : base(nameof(ClassificationHead))\n    {\n        linear1 = Linear(d_model, outputSize);     // Intermediate layer\n        relu = ReLU();                      // Activation\n        linear2 = Linear(outputSize, num_classes); // Output layer\n\n        RegisterComponents();\n    }\n\n    public override Tensor forward(Tensor x)\n    {\n        var output = linear1.forward(x);\n        output = relu.forward(output);\n        output = linear2.forward(output);\n        return output;\n    }\n}\n\nstep 3\nIntegrate the classification head into the LLaMA model\n\nThis step is not possible to override the Forward Pass: The input is passed through the LLaMA model and then through the classification head to get the output logits.\n\n\nstep 4\nSet up the training loop to optimize the model using my data\n\nI intend to use Microsoft.ML.GenAI.Core/Trainer/CasualLMSupervisedFineTuningTrainer\n","Url":"https://github.com/dotnet/machinelearning/issues/7367","RelatedDescription":"Open issue \"Direct Accces to Microsoft.ML.GenAI.LLaMA Model\" (#7367)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-02-21T03:30:19.5979561Z","RunDurationInMilliseconds":534}