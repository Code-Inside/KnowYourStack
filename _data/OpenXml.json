{"Data":{"Sdk":{"Events":[{"Id":"47591005186","Type":"IssuesEvent","CreatedAt":"2025-03-15T09:24:18","Actor":"personnumber3377","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1897","RelatedDescription":"Opened issue \"Is this library under bug bounty?\" (#1897) at dotnet/Open-XML-SDK","RelatedBody":"Hi!\n\nSince this is a library under .NET, does this mean that this library is under the .NET bug bounty program which is in-place for example the standard library?\n"},{"Id":"47583879420","Type":"IssuesEvent","CreatedAt":"2025-03-14T22:36:37","Actor":"tomjebo","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1093","RelatedDescription":"Closed issue \"Excel workbook generated by Open-XML-SDK are converted to XLSM by Google spread sheet.\" (#1093) at dotnet/Open-XML-SDK","RelatedBody":"**Description**\r\nFirst I would like to thank you for this library.\r\n\r\nI am posting here a wired behavior when generating an Excel file with Open XML SDK and uploading the file to Google spreadsheet. I believe this is an oddity caused by a bug in Open XML SDK. This is why I am posting here. I don't think this is a question about using Open XML SDK. But in case I'am wrong, I have also posted to [Stack overflow](https://stackoverflow.com/questions/70319867/avoid-google-spreadsheet-to-convert-an-xlsx-file-created-by-open-xml-sdk-to-xlsm) : \r\n\r\nSo I am using the [Open XML SDK 2.14.0][1] to create Excel files.\r\nIf I upload the XLSX file produced by Open XML SDK to Google Spreadsheet, it opens the file as an XLSX file but if I make any change in the spreadsheet then Google Spreadsheet changes the file type to XLSM. If I generate an empty workbook from MS Excel (Office 360) or Libre Office Calc I don't have this issue : Google Spreadsheet will not change the file type if I change the data.\r\n\r\n**Information**\r\n\r\n- .NET Target: .net core 3.1\r\n- DocumentFormat.OpenXml Version: (ie 2.14.0)\r\n\r\n**Repro**\r\n\r\nThe minimalistic code bellow ([found in the official documentation][2]) reproduces the issue. It generate a `foo.xlsx` file in `C:\\Temp`.\r\n\r\n``` c#\r\nvar filepath = @\"C:\\temp\\foo.xlsx\";\r\n\r\n// Create a spreadsheet document by supplying the filepath.\r\n// By default, AutoSave = true, Editable = true, and Type = xlsx.\r\nSpreadsheetDocument spreadsheetDocument = SpreadsheetDocument.Create(filepath, SpreadsheetDocumentType.Workbook);\r\n\r\n// Add a WorkbookPart to the document.\r\nWorkbookPart workbookpart = spreadsheetDocument.AddWorkbookPart();\r\nworkbookpart.Workbook = new Workbook();\r\n\r\n// Add a WorksheetPart to the WorkbookPart.\r\nWorksheetPart worksheetPart = workbookpart.AddNewPart<WorksheetPart>();\r\nworksheetPart.Worksheet = new Worksheet(new SheetData());\r\n\r\n// Add Sheets to the Workbook.\r\nSheets sheets = spreadsheetDocument.WorkbookPart.Workbook.AppendChild<Sheets>(new Sheets());\r\n\r\n// Append a new worksheet and associate it with the workbook.\r\nSheet sheet = new Sheet() { Id = spreadsheetDocument.WorkbookPart.GetIdOfPart(worksheetPart), SheetId = 1, Name = \"mySheet\" };\r\nsheets.Append(sheet);\r\n\r\nworkbookpart.Workbook.Save();\r\n\r\n// Close the document.\r\nspreadsheetDocument.Close();\r\n\r\n```\r\n\r\n**Observed**\r\n\r\nIf I upload the generated file to Google Spreadsheet, it shows this is an XLSX file.\r\n\r\n[![enter image description here][3]][3]\r\n\r\nBut if I change anything in the workbook then Google Spreadsheet changes the file type to XLSM.\r\n\r\n[![enter image description here][4]][4]\r\n\r\n**Expected**\r\n\r\nOpen XML SDK generates the correct XLSX file so that Google spreadsheet does not change to XLSM when saving the first time.\r\n\r\n\r\n  [1]: https://www.nuget.org/packages/DocumentFormat.OpenXml/2.14.0\r\n  [2]: https://docs.microsoft.com/en-us/office/open-xml/structure-of-a-spreadsheetml-document#open-xml-sdk-code-example\r\n  [3]: https://i.stack.imgur.com/NjOi8.png\r\n  [4]: https://i.stack.imgur.com/s6szj.png\r\n"},{"Id":"47578665694","Type":"IssuesEvent","CreatedAt":"2025-03-14T19:00:35","Actor":"mikeebowen","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/830","RelatedDescription":"Closed issue \"Validation error - Unexpected element 'BiDi' in WordprocessingDocument\" (#830) at dotnet/Open-XML-SDK","RelatedBody":"Is this a:\r\n- [x] Issue with the OpenXml library\r\n- [ ] Question on library usage\r\n\r\n**Description**\r\nI'm having an issue with relation to the `OpenXmlValidator.Validate()` method and a BiDi element in the style.xml in WordprocessingDocument. The thing is that i'm currently working with the DevExpress RichTextEditor Control for WPF for creating and editing DOCX documents . When saving any document with that control, the generated style.xml is as follows:\r\n\r\n![unnamed](https://user-images.githubusercontent.com/29706923/103024536-5161db80-4550-11eb-85e2-44963d7db5b9.png)\r\n\r\nAs you can see, a default style for a paragraph is defined with the Xpath: styles[1]/docDefaults[1]/pPrDefault[1]/pPr[1]. Right there, lives a bidi element with value \"0\". If we try to validate that document with the `OpenXmlValidator.Validate()` method, we'll get a validation error as follows:\r\n\r\n![unnamed](https://user-images.githubusercontent.com/29706923/103024456-2c6d6880-4550-11eb-8aa5-c77f1eaf84fb.png)\r\n\r\nI don't quite understant why is it saying that there is an error with an unexpected child element bidi, given that if i'm not wrong, a bidi element inside a pPr element is totaly valid: https://docs.microsoft.com/es-es/dotnet/api/documentformat.openxml.wordprocessing.bidi?view=openxml-2.8.1\r\n\r\n**Information**\r\n- .NET Target: Core 3.1 WPF\r\n- DocumentFormat.OpenXml Version: 2.11.3, but encountered in 2.7.2 and also occurs in 2.12\r\n\r\n**Repro**\r\n[OpenXmlSdkBidiValidationError.zip](https://github.com/OfficeDev/Open-XML-SDK/files/5736517/OpenXmlSdkBidiValidationError.zip)\r\n\r\n\r\n**Observed**\r\nThe `OpenXmlValidator.Validate()` method arise a \"The element has unexpected child element 'http://â€¦2006/main:bidi'.\" validation error.\r\n\r\n**Expected**\r\nGiven that the document schema is correct, no validation errors should arise.\r\n"},{"Id":"47578529020","Type":"IssuesEvent","CreatedAt":"2025-03-14T18:55:55","Actor":"mikeebowen","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/945","RelatedDescription":"Closed issue \"Implement missing PartTypes (such as PersonPart in threading comment feature in Excel 2019)\" (#945) at dotnet/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nThere are a lot of internal virtual property/method in OpenXmlPart which prevents custom part implementations in custom library.\r\n\r\n**Information**\r\n\r\nLatest version, any platform.\r\n\r\n**Repro**\r\nI tried to implement the missing PersonPart and ThreadedCommentsPart for Office 2019 office, but I realized it is not possible to write a custom OpenXmlPart implementation because of the lot of internal virtual modifiers.\r\n\r\n**Observed**\r\n\r\nI tried to mimic the missing part implementations with ExtendedPart, which works well on exsiting part cases (the part created by Excel), but when I want to create this part in the document, the ExtendedPart forced the uri to /udata/data.xml, and I was not able to change it in any way. The excel does not accept this uri for Persons.  \r\n\r\n**Expected**\r\n\r\nAvilability of wrtiting Part implementations in custom libraries.\r\n"},{"Id":"47575892137","Type":"IssuesEvent","CreatedAt":"2025-03-14T17:29:41","Actor":"mikeebowen","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/790","RelatedDescription":"Closed issue \"Missing namespace A16\" (#790) at dotnet/Open-XML-SDK","RelatedBody":"Is this a:\r\n- [X] Issue with the OpenXml library\r\n- [ ] Question on library usage\r\n\r\n\r\n**Description**\r\n\r\nThe OpenXml SDK doesn't seem to contain definitions for elements in the A16 namespace (http://schemas.microsoft.com/office/drawing/2014/main).  I'm sure there are other element types that are not coming up but the sample I ran into was `a16:colId`.\r\n\r\n**Information**\r\n\r\n- .NET Target: .net standard 2.0\r\n- DocumentFormat.OpenXml Version: 2.11.3\r\n\r\n**Repro**\r\n\r\nTry to serialize the element `a16:colId`.\r\n\r\n**Observed**\r\n\r\nElement `a16:colId` serializes as an `OpenXmlUnknownElement` object.\r\n\r\n**Expected**\r\n\r\nElement `a16:colId` should serialize into an object like `A16.ColId`.\r\n"},{"Id":"47574519609","Type":"IssuesEvent","CreatedAt":"2025-03-14T16:49:46","Actor":"mikeebowen","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1005","RelatedDescription":"Closed issue \"OpenXmlValidator.Validate() reports missing knownFonts attribute but it's not missing\" (#1005) at dotnet/Open-XML-SDK","RelatedBody":"I'm getting a validation error when I run `OpenXmlValidator.Validate()`.\n\n> The 'http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac:knownFonts' attribute is not declared.\n\nI use the following code to register my fonts.\n\n```csharp\n    public uint Register(Font font)\n    {\n        Stylesheet stylesheet = Builder.GetStylesheet();\n        Fonts fonts = stylesheet.Fonts ?? stylesheet.AppendChild(new Fonts() { KnownFonts = BooleanValue.FromBoolean(true) });\n        fonts.Append(font);\n        fonts.Count = (uint)fonts.Count();\n        return fonts.Count - 1;\n    }\n```\n\nAnd my *style.xml* looks like this:\n\n```xml\n    <?xml version=\"1.0\" encoding=\"utf-8\"?>\n    <x:styleSheet xmlns:x=\"http://schemas.openxmlformats.org/spreadsheetml/2006/main\">\n      <x:numFmts count=\"3\">\n        <x:numFmt numFmtId=\"164\"\n                  formatCode=\"0\" />\n        <x:numFmt numFmtId=\"165\"\n                  formatCode=\"#,##0.###\" />\n        <x:numFmt numFmtId=\"166\"\n                  formatCode=\"m/d/yyyy h:mm AM/PM\" />\n      </x:numFmts>\n      <x:fonts count=\"4\"\n               x14ac:knownFonts=\"1\"\n               xmlns:x14ac=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac\">\n        <x:font>\n          <x:sz val=\"11\" />\n          <x:name val=\"Calibri\" />\n          <x:family val=\"2\" />\n          <x:scheme val=\"minor\" />\n        </x:font>\n        <x:font>\n          <x:b />\n          <x:sz val=\"11\" />\n          <x:name val=\"Calibri\" />\n          <x:family val=\"2\" />\n          <x:scheme val=\"minor\" />\n        </x:font>\n        <x:font>\n          <x:b />\n          <x:sz val=\"20\" />\n          <x:name val=\"Calibri\" />\n          <x:family val=\"2\" />\n          <x:scheme val=\"minor\" />\n        </x:font>\n        <x:font>\n          <x:b />\n          <x:sz val=\"14\" />\n          <x:name val=\"Calibri\" />\n          <x:family val=\"2\" />\n          <x:scheme val=\"minor\" />\n        </x:font>\n      </x:fonts>\n      <x:fills count=\"2\">\n        <x:fill>\n          <x:patternFill patternType=\"none\" />\n        </x:fill>\n        <x:fill>\n          <x:patternFill patternType=\"gray125\" />\n        </x:fill>\n      </x:fills>\n      <x:borders count=\"1\">\n        <x:border>\n          <x:left />\n          <x:right />\n          <x:top />\n          <x:bottom />\n          <x:diagonal />\n        </x:border>\n      </x:borders>\n      <x:cellXfs count=\"12\">\n        <x:xf numFmtId=\"0\"\n              fontId=\"0\"\n              fillId=\"0\"\n              borderId=\"0\"\n              applyNumberFormat=\"1\" />\n        <x:xf numFmtId=\"3\"\n              fontId=\"0\"\n              fillId=\"0\"\n              borderId=\"0\"\n              applyNumberFormat=\"1\" />\n        <x:xf numFmtId=\"165\"\n              fontId=\"0\"\n              fillId=\"0\"\n              borderId=\"0\"\n              applyNumberFormat=\"1\" />\n        <x:xf numFmtId=\"44\"\n              fontId=\"0\"\n              fillId=\"0\"\n              borderId=\"0\"\n              applyNumberFormat=\"1\" />\n        <x:xf numFmtId=\"166\"\n              fontId=\"0\"\n              fillId=\"0\"\n              borderId=\"0\"\n              applyNumberFormat=\"1\" />\n        <x:xf numFmtId=\"14\"\n              fontId=\"0\"\n              fillId=\"0\"\n              borderId=\"0\"\n              applyNumberFormat=\"1\" />\n        <x:xf numFmtId=\"18\"\n              fontId=\"0\"\n              fillId=\"0\"\n              borderId=\"0\"\n              applyNumberFormat=\"1\" />\n        <x:xf fontId=\"1\"\n              applyFont=\"1\" />\n        <x:xf fontId=\"2\"\n              applyFont=\"1\" />\n        <x:xf fontId=\"3\"\n              applyFont=\"1\" />\n        <x:xf fontId=\"2\"\n              applyFont=\"1\"\n              applyAlignment=\"1\">\n          <x:alignment horizontal=\"right\" />\n        </x:xf>\n        <x:xf fontId=\"3\"\n              applyFont=\"1\"\n              applyAlignment=\"1\">\n          <x:alignment horizontal=\"right\" />\n        </x:xf>\n      </x:cellXfs>\n    </x:styleSheet>\n```\n\nCan anyone see why I'm getting this error? I can't even find information on the purpose of the `KnownFont` attribute. Could it be related to the fact that the library is writing `x14ac:knownFonts` instead of `ac:knownFonts`?\n\nI realize I may be doing something wrong, but this seems like it isn't working as expected.\n"},{"Id":"47500156897","Type":"IssuesEvent","CreatedAt":"2025-03-12T23:31:50","Actor":"mikeebowen","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/919","RelatedDescription":"Closed issue \"Copy pictures from one generated Word document to another one\" (#919) at dotnet/Open-XML-SDK","RelatedBody":"# Before submitting an issue, please fill this out\r\n\r\nIs this a:\r\n- [ ] Issue with the OpenXml library\r\n- [x] Question on library usage\r\n\r\nI ask here, because I had any answer [on StackOverflow](https://stackoverflow.com/questions/67038242) for several weeks.\r\n\r\n---------------- Remove this line and above before posting ----------------\r\n\r\n**Description**\r\n\r\nI generate an SSRS report that I save as a Word document. That document contain pictures (charts as plat images). \r\nI don't really save the Word document, I have it open in memory.\r\n\r\nI use then OpenXML to create another word document, in witch I need to copy the pictures from the SSRS report.   \r\n\r\nI try to get the drawings from the ssrs report, and insert them in the new word document.\r\n\r\nI tried to insert pictures from the disk to the generated document, that works well. What does not work, is copying one picture from one document to another. \r\nI don't need to copy all the content of a document to another. I need to copy just a picture.\r\n\r\n**Information**\r\n\r\n- .NET Target: .NET 5\r\n- DocumentFormat.OpenXml Version: 2.12.3\r\n\r\n**Repro**\r\n\r\n```csharp\r\nMainDocumentPart ssrsMainPart = ssrsDoc.MainDocumentPart;\r\nvar drawings = ssrsMainPart.Document.Descendants<Drawing>().ToList();\r\n```\r\nand then insert it in the new document\r\n```csharp\r\nMainDocumentPart mainPart = wordDoc.MainDocumentPart;\r\nBody body = mainPart.Document.Body;\r\n```\r\n```csharp\r\nfor (int i = 0; i < 10; i++)\r\n{\r\n    if (i < drawings.Count())\r\n    {\r\n        var myDrawing = drawings.Skip(i).First();\r\n        myDrawing.Remove();\r\n        body.Append(myDrawing); \r\n        body.Append(new Paragraph());\r\n    }\r\n}\r\n```\r\nAs result I get in the resulting document only the picture placeholders, of the same size as in ssrs Word Document, but the pictures are empty. \r\n\r\nI tried to copy the ImageData as well, using the following code:\r\n\r\n```csharp\r\nforeach (var e in ssrsDoc.MainDocumentPart.Document.Body.Elements())\r\n{\r\n\tvar clonedElement = e.CloneNode(true);\r\n\tclonedElement.Descendants<DocumentFormat.OpenXml.Drawing.Blip>().ToList().ForEach(blip =>\r\n\t{\r\n\t\tvar newRelation = wordDoc.CopyImage(blip.Embed, ssrsDoc);\r\n\t\tblip.Embed = newRelation;\r\n\t});\r\n\tclonedElement.Descendants<DocumentFormat.OpenXml.Vml.ImageData>().ToList().ForEach(imageData =>\r\n\t{\r\n\t\tvar newRelation = wordDoc.CopyImage(imageData.RelationshipId, ssrsDoc);\r\n\t\timageData.RelationshipId = newRelation;\r\n\t});\r\n\twordDoc.MainDocumentPart.Document.Body.AppendChild(clonedElement);\r\n}\r\n```\r\nwith CopyImage defined like this:\r\n```csharp\r\npublic static string CopyImage(this WordprocessingDocument newDoc, string relId, WordprocessingDocument org)\r\n{\r\n\tvar p = org.MainDocumentPart.GetPartById(relId) as ImagePart;\r\n\tvar newPart = newDoc.MainDocumentPart.AddPart(p);\r\n\tnewPart.FeedData(p.GetStream());\r\n\treturn newDoc.MainDocumentPart.GetIdOfPart(newPart);\r\n}\r\n``` \r\n\r\nbut after that I wasn't able to open anymore the document with Word 365, word reporting the doc as a broken one...\r\n"},{"Id":"47495144847","Type":"IssuesEvent","CreatedAt":"2025-03-12T20:15:11","Actor":"tomjebo","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/561","RelatedDescription":"Closed issue \"Open-Xml-SDK cannot load document referencing not installed font when x14ac:knownFonts is present\" (#561) at dotnet/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nOpen-Xml-SDK will throw an OpenXmlPackageException with the message \"The specified package is invalid. The main part is missing.\" when an excel file references fonts in worksheets that are not present on the system and the tag x14ac:knownFonts is found.\r\n\r\n**Information**\r\n\r\n- .NET Target: .Net Framework 4.7.1\r\n- DocumentFormat.OpenXml Version: 2.8.1 and 2.9.0\r\n\r\n**Repro**\r\nWe use Open-XML SDK to produce a file (with lots of data) that we give to 3rd parties scattered around the world. They edit that file and send them back for us to import (using Open-Xml SDK again).\r\n\r\nSometimes we have this error from the exception while loading the document using Open-Xml SDK: The specified package is invalid. The main part is missing.\r\n\r\nIf I save the file with my own Excel application (Excel 2016) prior to import it, I can import the file fine. So I've decompressed the xlsx files and compared both against each other (the one working and the one not working)\r\nThe only thing that was different is the presence of the tag x14ac:knownFonts\r\nhttps://docs.microsoft.com/en-us/dotnet/api/documentformat.openxml.spreadsheet.fonts.knownfonts?view=openxml-2.8.1 Value of the tag is 1. If I remove the worksheet that uses the fonts found in the styles.xml, I can load the document or if I remove the \"knownfonts\" tag and let the worksheets that reference those fonts: Open-Xml-SDK can open the file successfully again.\r\n\r\n**Observed**\r\n\r\nThe excel app that was used to save the excel is the same version than me (2016), but installed in Korean language. Two of the fonts referenced have their name in asian characters so my wild guest is that I don't have those fonts on my system, and with the presence of the knownfonts, it causes Open-Xml to die painfully when trying to load that document.\r\n\r\n**Expected**\r\n\r\nI would expect that Open-Xml don't die when loading an excel document with if that tag is found (and fonts that I don't have on my system are referenced in that excel document). Excel do not die from actually: it allow me to open the document resave it (effectively removing that infamous \"knownfonts\" tag.\r\n"},{"Id":"47490827809","Type":"IssuesEvent","CreatedAt":"2025-03-12T18:07:26","Actor":"tomjebo","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/389","RelatedDescription":"Closed issue \"DocumentFormat.OpenXml.Packaging.CoreFilePropertiesPart has no functional properties\" (#389) at dotnet/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nDocumentFormat.OpenXml.Packaging.CoreFilePropertiesPart has no functional properties. I'd like to access at least the tags, description and title elements. There seems to be a well defined schema for it.\r\n\r\n**Information**\r\n\r\n- .NET Target: .NET Core\r\n- DocumentFormat.OpenXml Version: (ie 2.8.2)\r\n\r\n** Concept API surface **\r\n\r\n```csharp\r\npublic class CoreProperties\r\n{\r\n    public string Category { get; set; } \r\n    public ContentStatusType ContentStatus { get; set; }\r\n    public DateTimeOffset CreatedAt {get; set;}\r\n    public string CreatedBy {get; set; }\r\n    public string Summary {get; set; }\r\n    public IReadOnlyCollection<Keyword> Keywords {get; }\r\n    public string Language {get; set; }\r\n    public string LastModifiedBy {get; set; }\r\n    public DateTimeOffset? LastModifiedAt {get; set; }\r\n    public DateTimeOffset? LastPrintedAt {get; set; }\r\n    public int? Revision {get; set; }\r\n    public int? Version {get; set; }\r\n    public string Subject {get; set; }\r\n    public string Title {get; set; }\r\n}\r\n\r\npublic class Keyword\r\n{\r\n    public string Language { get; set; }\r\n    public string Value { get; set; }\r\n}\r\n\r\npublic enum ContentStatusType \r\n{\r\n    Draft,\r\n    Reviewed,\r\n    Final\r\n}\r\n```\r\n"},{"Id":"47490737853","Type":"PullRequestEvent","CreatedAt":"2025-03-12T18:04:55","Actor":"tomjebo","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1895","RelatedDescription":"Opened pull request \"add extension to CoreFilePropertiesPart to access package properties\" (#1895) at dotnet/Open-XML-SDK","RelatedBody":"This allows CoreFilePropertiesPart to access package properties via the parent package properties per discussion in #389 ."}],"ResultType":"GitHubEvent"}},"RunOn":"2025-03-17T03:30:23.0361024Z","RunDurationInMilliseconds":612}