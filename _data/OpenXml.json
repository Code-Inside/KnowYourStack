{"Data":{"Sdk":{"Events":[{"Id":"41218396757","Type":"PullRequestEvent","CreatedAt":"2024-08-21T15:53:28","Actor":"mikeebowen","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1774","RelatedDescription":"Opened pull request \"Add open xml editor extension for Visual Studio Project\" (#1774) at dotnet/Open-XML-SDK","RelatedBody":"This moves the archived repo for the Open Xml Editor extension for Visual Studio from [Open-XML-Package-Editor-Power-Tool-for-Visual-Studio](https://github.com/OfficeDev/Open-XML-Package-Editor-Power-Tool-for-Visual-Studio) to the Open-XML-SDK repo."},{"Id":"41186089232","Type":"IssuesEvent","CreatedAt":"2024-08-20T18:41:22","Actor":"AlfredHellstern","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/807","RelatedDescription":"Closed issue \"Large parts cannot be written on .NET Core due to OutOfMemoryException\" (#807) at dotnet/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nI was using ClosedXML to create large excel files (100k rows with 63 colums) and I faced issue with OutOfMemoryException. I found some examples of OpenXML using SAX, so I tried to switch to OpenXML, but it didn't help me. I tried to remove all my code (reading from DB, etc.) to try if that works, but I still get OutOfMemoryException.\r\n\r\nMy code is based on [http://polymathprogrammer.com/2012/08/06/how-to-properly-use-openxmlwriter-to-write-large-excel-files/](url)\r\n\r\n**Information**\r\n\r\n- .NET Target: .NET Core 3.1\r\n- DocumentFormat.OpenXml Version: 2.11.3\r\n\r\n**EDIT:** Same code is working fine in .NET Framework 4.7.2 with same DocumentFormat.OpenXml version.\r\n\r\n**Repro**\r\nThis is simple code that I use at the moment. I am testing with RAM limited to 500 MB (testing purpose). I don't think that this code can consume so much RAM.\r\n\r\n```csharp\r\nusing (SpreadsheetDocument document = SpreadsheetDocument.Create(filePath, SpreadsheetDocumentType.Workbook))\r\n{\r\n    document.AddWorkbookPart();\r\n\r\n    WorksheetPart wsp = document.WorkbookPart.AddNewPart<WorksheetPart>();\r\n\r\n    using (OpenXmlWriter writer = OpenXmlWriter.Create(wsp))\r\n    {\r\n        List<OpenXmlAttribute> oxa;\r\n        writer.WriteStartElement(new Worksheet());\r\n        writer.WriteStartElement(new SheetData());\r\n\r\n        for (int i = 0; i < 100000; i++)\r\n        {\r\n            oxa = new List<OpenXmlAttribute>();\r\n            oxa.Add(new OpenXmlAttribute(\"r\", null, i.ToString()));\r\n            writer.WriteStartElement(new Row(), oxa);\r\n\r\n            for (int j = 0; j < 40; j++)\r\n            {\r\n                oxa = new List<OpenXmlAttribute>();\r\n                oxa.Add(new OpenXmlAttribute(\"t\", null, \"str\"));\r\n                writer.WriteStartElement(new Cell(), oxa);\r\n                writer.WriteElement(new CellValue(\"test\"));\r\n                writer.WriteEndElement();\r\n            }\r\n\r\n            writer.WriteEndElement();\r\n        }\r\n\r\n        writer.WriteEndElement(); // end of sheetdata\r\n        writer.WriteEndElement(); //end of worksheet\r\n    }\r\n\r\n    using (OpenXmlWriter writer = OpenXmlWriter.Create(document.WorkbookPart))\r\n    {\r\n        writer.WriteStartElement(new Workbook());\r\n        writer.WriteStartElement(new Sheets());\r\n\r\n        writer.WriteElement(new Sheet() { Id = document.WorkbookPart.GetIdOfPart(wsp), SheetId = 1, Name = \"Test\" });\r\n\r\n        writer.WriteEndElement();\r\n        writer.WriteEndElement();\r\n    }\r\n}\r\n``` \r\n\r\n**Observed**\r\n\r\n```\r\nSystem.OutOfMemoryException: Exception of type 'System.OutOfMemoryException' was thrown.\r\n   at System.IO.MemoryStream.set_Capacity(Int32 value)\r\n   at System.IO.MemoryStream.EnsureCapacity(Int32 value)\r\n   at System.IO.MemoryStream.Write(Byte[] buffer, Int32 offset, Int32 count)\r\n   at System.Xml.XmlUtf8RawTextWriter.FlushBuffer()\r\n   at System.Xml.XmlUtf8RawTextWriter.RawText(Char* pSrcBegin, Char* pSrcEnd)\r\n   at System.Xml.XmlUtf8RawTextWriter.RawText(String s)\r\n   at System.Xml.XmlUtf8RawTextWriter.WriteEndElement(String prefix, String localName, String ns)\r\n   at System.Xml.XmlWellFormedWriter.WriteEndElement()\r\n   at DocumentFormat.OpenXml.OpenXmlPartWriter.WriteEndElement()\r\n````\r\n\r\n**Expected**\r\n\r\nExcel file in filePath with 100k rows and 40 columns with string \"test\" in all cells.\r\n"},{"Id":"41165607734","Type":"PullRequestEvent","CreatedAt":"2024-08-20T08:20:57","Actor":"waydalee","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1773","RelatedDescription":"Opened pull request \"优化路径为NULL的资源判断\" (#1773) at dotnet/Open-XML-SDK","RelatedBody":""},{"Id":"40997487193","Type":"PullRequestEvent","CreatedAt":"2024-08-13T20:00:11","Actor":"dependabot[bot]","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1749","RelatedDescription":"Closed pull request \"Bump Microsoft.CodeAnalysis.PublicApiAnalyzers from 3.11.0-beta1.24219.2 to 3.11.0-beta1.24318.1\" (#1749) at dotnet/Open-XML-SDK","RelatedBody":"Bumps Microsoft.CodeAnalysis.PublicApiAnalyzers from 3.11.0-beta1.24219.2 to 3.11.0-beta1.24318.1.\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=Microsoft.CodeAnalysis.PublicApiAnalyzers&package-manager=nuget&previous-version=3.11.0-beta1.24219.2&new-version=3.11.0-beta1.24318.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>"},{"Id":"40997486102","Type":"PullRequestEvent","CreatedAt":"2024-08-13T20:00:09","Actor":"dependabot[bot]","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1772","RelatedDescription":"Opened pull request \"Bump Microsoft.CodeAnalysis.PublicApiAnalyzers from 3.11.0-beta1.24219.2 to 3.11.0-beta1.24324.1\" (#1772) at dotnet/Open-XML-SDK","RelatedBody":"Bumps [Microsoft.CodeAnalysis.PublicApiAnalyzers](https://github.com/dotnet/roslyn-analyzers) from 3.11.0-beta1.24219.2 to 3.11.0-beta1.24324.1.\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/dotnet/roslyn-analyzers/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=Microsoft.CodeAnalysis.PublicApiAnalyzers&package-manager=nuget&previous-version=3.11.0-beta1.24219.2&new-version=3.11.0-beta1.24324.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>"},{"Id":"40984150829","Type":"IssuesEvent","CreatedAt":"2024-08-13T12:54:26","Actor":"MagnusBeijer","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1771","RelatedDescription":"Opened issue \"Calling Worksheet.Save() makes rest of changes not apply\" (#1771) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nWhen calling `Worksheet.Save()` in 3.0.2 changes were saved and you could continue to make changes to the worksheet.\r\nIn version 3.1 after calling `Worksheet.Save()` no other changes to the worksheet get applied.\r\n\r\n**To Reproduce**\r\n```\r\nusing DocumentFormat.OpenXml;\r\nusing DocumentFormat.OpenXml.Packaging;\r\nusing DocumentFormat.OpenXml.Spreadsheet;\r\n\r\nclass Program\r\n{\r\n    static void Main(string[] args)\r\n    {\r\n        // Create a spreadsheet document\r\n        using (SpreadsheetDocument doc = SpreadsheetDocument.Create(@\"c:\\temp\\test.xlsx\", SpreadsheetDocumentType.Workbook))\r\n        {\r\n            // Add a WorkbookPart to the document\r\n            WorkbookPart workbookPart = doc.AddWorkbookPart();\r\n            workbookPart.Workbook = new Workbook();\r\n\r\n            // Add a WorksheetPart to the WorkbookPart\r\n            WorksheetPart worksheetPart = workbookPart.AddNewPart<WorksheetPart>();\r\n            worksheetPart.Worksheet = new Worksheet(new SheetData());\r\n\r\n            // Add Sheets to the Workbook\r\n            Sheets sheets = doc.WorkbookPart.Workbook.AppendChild(new Sheets());\r\n\r\n            // Append a new sheet and associate it with the workbook\r\n            Sheet sheet = new Sheet()\r\n            {\r\n                Id = doc.WorkbookPart.GetIdOfPart(worksheetPart),\r\n                SheetId = 1,\r\n                Name = \"Sheet1\"\r\n            };\r\n            sheets.Append(sheet);\r\n           \r\n            // Get the SheetData from the Worksheet\r\n            SheetData sheetData = worksheetPart.Worksheet.GetFirstChild<SheetData>();\r\n\r\n            // Create a new row\r\n            Row row = new Row() { RowIndex = 1 };\r\n            sheetData.Append(row);\r\n            worksheetPart.Worksheet.Save(); // Calling save here makes the document blank in 3.1\r\n\r\n            // Create a new cell\r\n            Cell cell = new Cell() { CellReference = \"A1\", CellValue = new CellValue(\"Hello\"), DataType = CellValues.String };\r\n            row.Append(cell);\r\n\r\n            // Save the changes\r\n            worksheetPart.Worksheet.Save();\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\n**Observed behavior**\r\nThe worksheet is blank in version 3.1.\r\n\r\n**Expected behavior**\r\nIn version 3.0.2 a worksheet with one cells that says \"Hello\" is created.\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-08-22T03:30:20.0983474Z","RunDurationInMilliseconds":539}