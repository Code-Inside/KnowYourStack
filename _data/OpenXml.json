{"Data":{"Sdk":{"Events":[{"Id":"32706721267","Type":"IssuesEvent","CreatedAt":"2023-10-19T23:03:37","Actor":"tomjebo","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1447","RelatedDescription":"Closed issue \"CT_PresetTextShape's prstTxWarp gets PresetTextWrap wrapper class\" (#1447) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nThis is a typo on the backend generator. The class name should match more closely the element name prstTxWarp.\r\n\r\n**Observed behavior**\r\nIn  the generated file: \r\nOpen-XML-SDK\\generated\\DocumentFormat.OpenXml\\DocumentFormat.OpenXml.Generator\\DocumentFormat.OpenXml.Generator.OpenXmlGenerator\\schemas_openxmlformats_org_drawingml_2006_main.cs\r\n\r\nThe class is defined: \r\npublic partial class PresetTextWrap : OpenXmlCompositeElement\r\n\r\n**Expected behavior**\r\npublic partial class PresetTextWarp : OpenXmlCompositeElement\r\n\r\n\r\n"},{"Id":"32706708538","Type":"IssuesEvent","CreatedAt":"2023-10-19T23:02:43","Actor":"tomjebo","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1513","RelatedDescription":"Closed issue \"Bug with Open XML SDK\" (#1513) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nOpenXml.Packaging.WordProcessingDoucment.Open throws \"Specified part does not exist in the package.\" not found even when all parts are present in the docx.\r\nThis seems to only happen when the docx has diagrams part in it and has a relationship specified in data.xml.rels. Specified relationship is as follows: \"<Relationship Id=\"rId1\" Type=\"http://schemas.microsoft.com/office/2007/relationships/diagramDrawing\" Target=\"diagrams/drawing1.xml\" />\".\r\nRemoving the relationship seems to be able to open the document document but the relationship is a valid relation.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**To Reproduce**\r\nTry to open any document having diagrams component in it and see the issue happening.\r\n\r\nSteps to reproduce the behavior:\r\nUse any document as file which contains drawing component in it.\r\nTry to do OpenXml.Packaging.WordProcessingDoucment.Open\r\nObserve that method throws Specified part not found in package exception even though all parts are present in the docx.\r\n\r\n**Observed behavior**\r\nOpen method should not be throwing any exception.\r\n\r\n**Expected behavior**\r\nDocument should open without any exceptions being thrown.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: MacOs Ventura 13.2.1\r\n - Office version \r\n - .NET Target: .NET 6.0\r\n - DocumentFormat.OpenXml Version: 2.20.0\r\n\r\n**Additional context**\r\nNA\r\n"},{"Id":"32706706337","Type":"IssuesEvent","CreatedAt":"2023-10-19T23:02:34","Actor":"tomjebo","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1513","RelatedDescription":"Reopened issue \"Bug with Open XML SDK\" (#1513) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nOpenXml.Packaging.WordProcessingDoucment.Open throws \"Specified part does not exist in the package.\" not found even when all parts are present in the docx.\r\nThis seems to only happen when the docx has diagrams part in it and has a relationship specified in data.xml.rels. Specified relationship is as follows: \"<Relationship Id=\"rId1\" Type=\"http://schemas.microsoft.com/office/2007/relationships/diagramDrawing\" Target=\"diagrams/drawing1.xml\" />\".\r\nRemoving the relationship seems to be able to open the document document but the relationship is a valid relation.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**To Reproduce**\r\nTry to open any document having diagrams component in it and see the issue happening.\r\n\r\nSteps to reproduce the behavior:\r\nUse any document as file which contains drawing component in it.\r\nTry to do OpenXml.Packaging.WordProcessingDoucment.Open\r\nObserve that method throws Specified part not found in package exception even though all parts are present in the docx.\r\n\r\n**Observed behavior**\r\nOpen method should not be throwing any exception.\r\n\r\n**Expected behavior**\r\nDocument should open without any exceptions being thrown.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: MacOs Ventura 13.2.1\r\n - Office version \r\n - .NET Target: .NET 6.0\r\n - DocumentFormat.OpenXml Version: 2.20.0\r\n\r\n**Additional context**\r\nNA\r\n"},{"Id":"32706701543","Type":"IssuesEvent","CreatedAt":"2023-10-19T23:02:14","Actor":"tomjebo","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1513","RelatedDescription":"Closed issue \"Bug with Open XML SDK\" (#1513) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nOpenXml.Packaging.WordProcessingDoucment.Open throws \"Specified part does not exist in the package.\" not found even when all parts are present in the docx.\r\nThis seems to only happen when the docx has diagrams part in it and has a relationship specified in data.xml.rels. Specified relationship is as follows: \"<Relationship Id=\"rId1\" Type=\"http://schemas.microsoft.com/office/2007/relationships/diagramDrawing\" Target=\"diagrams/drawing1.xml\" />\".\r\nRemoving the relationship seems to be able to open the document document but the relationship is a valid relation.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**To Reproduce**\r\nTry to open any document having diagrams component in it and see the issue happening.\r\n\r\nSteps to reproduce the behavior:\r\nUse any document as file which contains drawing component in it.\r\nTry to do OpenXml.Packaging.WordProcessingDoucment.Open\r\nObserve that method throws Specified part not found in package exception even though all parts are present in the docx.\r\n\r\n**Observed behavior**\r\nOpen method should not be throwing any exception.\r\n\r\n**Expected behavior**\r\nDocument should open without any exceptions being thrown.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: MacOs Ventura 13.2.1\r\n - Office version \r\n - .NET Target: .NET 6.0\r\n - DocumentFormat.OpenXml Version: 2.20.0\r\n\r\n**Additional context**\r\nNA\r\n"},{"Id":"32704788488","Type":"PullRequestEvent","CreatedAt":"2023-10-19T21:09:41","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1474","RelatedDescription":"Merged pull request \"Add builder infrastructure to streamline package creation\" (#1474) at dotnet/Open-XML-SDK","RelatedBody":"This is a work in progress to explore a pipeline of sorts to create packages. Main benefits of this are:\r\n\r\n- Middleware style pipeline to abstract away things required to do to initialize a package\r\n- Can simplify the creation of templates from any source (not fully working atm)\r\n- Enable Clone() functionality to initialize packages in identical ways\r\n- Provide special builders for more AOT-friendly scenarios\r\n  - For example, packages currently have all parts registered to them. Using these builders, we can track what are the required parts and use that to create specialized builders (see `DebugPackageBuilderExtensions` as an example)\r\n\r\nFor now, it will remain internal, but hopefully for v3.1 can be made public with some support to better enable AOT scenarios.\r\n"},{"Id":"32703782100","Type":"PullRequestEvent","CreatedAt":"2023-10-19T20:24:02","Actor":"tomjebo","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1543","RelatedDescription":"Merged pull request \"allow access to part from elements\" (#1543) at dotnet/Open-XML-SDK","RelatedBody":"With this change, it's possible to do this: \r\n\r\n```csharp\r\nOpenXmlPartRootElement partRoot = pShape.Ancestors<OpenXmlPartRootElement>().First();\r\n\r\nif (partRoot.OpenXmlPart is null)\r\n{\r\n    Console.WriteLine(\"partRoot is null\");\r\n    return;\r\n}\r\n\r\nOpenXmlPart part = partRoot.OpenXmlPart;\r\n```"},{"Id":"32674146816","Type":"PullRequestEvent","CreatedAt":"2023-10-18T23:40:50","Actor":"tomjebo","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1543","RelatedDescription":"Opened pull request \"allow access to part from elements\" (#1543) at dotnet/Open-XML-SDK","RelatedBody":"With this change, it's possible to do this: \r\n\r\n```csharp\r\nOpenXmlPartRootElement partRoot = pShape.Ancestors<OpenXmlPartRootElement>().First();\r\n\r\nif (partRoot.OpenXmlPart is null)\r\n{\r\n    Console.WriteLine(\"partRoot is null\");\r\n    return;\r\n}\r\n\r\nOpenXmlPart part = partRoot.OpenXmlPart;\r\n```"},{"Id":"32673822715","Type":"PullRequestEvent","CreatedAt":"2023-10-18T23:17:01","Actor":"tomjebo","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1542","RelatedDescription":"Closed pull request \"Allow containing part access for elements\" (#1542) at dotnet/Open-XML-SDK","RelatedBody":"This would allow part access to be done like this: \r\n\r\n```charp\r\n// pShape is set to an OpenXmlElement\r\nOpenXmlPartRootElement partRoot = pShape.Ancestors<OpenXmlPartRootElement>().First();\r\n\r\nif (partRoot.OpenXmlPart is null)\r\n{\r\n    Console.WriteLine(\"partRoot is null\");\r\n    return;\r\n}\r\n\r\nOpenXmlPart part = partRoot.OpenXmlPart;\r\n```"},{"Id":"32673040868","Type":"PullRequestEvent","CreatedAt":"2023-10-18T22:25:51","Actor":"tomjebo","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1542","RelatedDescription":"Opened pull request \"Allow containing part access for elements\" (#1542) at dotnet/Open-XML-SDK","RelatedBody":"This would allow part access to be done like this: \r\n\r\n```charp\r\n// pShape is set to an OpenXmlElement\r\nOpenXmlPartRootElement partRoot = pShape.Ancestors<OpenXmlPartRootElement>().First();\r\n\r\nif (partRoot.OpenXmlPart is null)\r\n{\r\n    Console.WriteLine(\"partRoot is null\");\r\n    return;\r\n}\r\n\r\nOpenXmlPart part = partRoot.OpenXmlPart;\r\n```"}],"ResultType":"GitHubEvent"}},"RunOn":"2023-10-20T03:30:21.7471535Z","RunDurationInMilliseconds":641}