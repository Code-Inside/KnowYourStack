{"Data":{"Sdk":{"Events":[{"Id":"24255520217","Type":"IssuesEvent","CreatedAt":"2022-09-27T17:25:29","Actor":"Asbjoedt","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1210","RelatedDescription":"Opened issue \"CustomUI having wrong namespace\" (#1210) at OfficeDev/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nI have a spreadsheet, which I get exception informing me the namespace is invalid. The exception thrown informs:\r\n\r\n```\r\nInvalidDataException: The root XML element \"http://schemas.microsoft.com/office/2006/01/customui:customUI\" in the part is incorrect. The expected root XML element is: \"http://schemas.microsoft.com/office/2009/07/customui:customUI\".\r\n```\r\n\r\nThe original spreadsheet has wrong/invalid namespace, but after having used ChangeDocumentType from .xlsm to .xlsx, I think this namespace should have been resolved to the right namespace automatically by Open XML SDK even though the namespace is (what I think to be) not related to ChangeDocumentType. This could potentially be expanded to include that if I use ChangeDocumentType on any .xlsx to .xlsx then all invalid namespaces would be resolved.\r\n\r\nThe namespace is found in root folder ```/customUI``` and any ```customUI.xml``` files in the folder.\r\n\r\nI am trying to make my own fix with the below code, BUT the code is not working and the code will not even write any namespace to console (if I add a Console.WriteLine(name.Value) line to the code). I do know ``spreadsheet.RibbonAndBackstageCustomizationsPart``` is not null, if you write anything to console immediately after the ``{`` in the first ``if`` statement. If I use the below code as part of ChangeDocumentType from .xlsm to .xlsx, then the conversion will fail, which is strange, since the conversion will even fail if I do not try to change any namespaces but if I only try to write the namespaces to console it fails.\r\n\r\n```\r\nusing (SpreadsheetDocument spreadsheet = SpreadsheetDocument.Open(output_filepath, true))\r\n{\r\n    if (spreadsheet.RibbonAndBackstageCustomizationsPart != null)\r\n    {\r\n        var namespaces = spreadsheet.RibbonAndBackstageCustomizationsPart.CustomUI.NamespaceDeclarations.ToList();\r\n        foreach (var name in namespaces)\r\n        {\r\n            if (name.Value.Equals(\"http://schemas.microsoft.com/office/2006/01/customui:customUI\"))\r\n            {\r\n                spreadsheet.RibbonAndBackstageCustomizationsPart.CustomUI.RemoveNamespaceDeclaration(\"x\");\r\n                spreadsheet.RibbonAndBackstageCustomizationsPart.CustomUI.AddNamespaceDeclaration(\"x\", \"http://schemas.microsoft.com/office/2009/07/customui:customUI\");\r\n            }\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n**Observed behavior**\r\nWrong namespace in customUI.xml\r\n```http://schemas.microsoft.com/office/2006/01/customui:customUI```\r\n\r\nalso does \r\n```spreadsheet.RibbonAndBackstageCustomizationsPart.CustomUI``` work?\r\n\r\n**Expected behavior**\r\nRight namespace in customUI.xml\r\n```http://schemas.microsoft.com/office/2009/07/customui:customUI```\r\nafter having used ChangeDocumentType, this function should update any invalid namespaces to valid namespaces.\r\n\r\nalso\r\n\r\n```spreadsheet.RibbonAndBackstageCustomizationsPart.CustomUI.NamespaceDeclarations``` should report any namespaces\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Windows 11\r\n - Office version 2208\r\n - .NET Target: .Net Core 6.0.9\r\n - DocumentFormat.OpenXml Version: 2.18.0\r\n\r\n**Additional context**\r\nSee data sample: https://github.com/Asbjoedt/CLISC/blob/master/Docs/Example3.xlsm\r\n"},{"Id":"24199297353","Type":"IssuesEvent","CreatedAt":"2022-09-24T10:21:19","Actor":"Asbjoedt","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1209","RelatedDescription":"Opened issue \"ChangeDocumentType (.xlsm) to (.xlsx) not removing /xl/vbaProject.bin\" (#1209) at OfficeDev/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nUsing ChangeDocumentType from MacroEnabledWorkbook (.xlsm) to Workbook (.xlsx) results in the error in Excel and spreadsheet cannot be opened (loosely translated from another language):\r\n\"The files does not have any macros, but it contains macro-based content\"\r\n\r\nWhen looking at the XML of the new .xlsx spreadsheet, the spreadsheet contains the file /xl/vbaProject.bin, which I think it should not. When removing this file, Excel will no longer give error preventing the user from opening the spreadsheet.\r\n\r\nI use this code to change document type:\r\n\r\n```\r\npublic void Convert_to_OOXML_Transitional(string input_filepath, string output_filepath)\r\n{\r\n    byte[] byteArray = File.ReadAllBytes(input_filepath);\r\n    using (MemoryStream stream = new MemoryStream())\r\n    {\r\n        stream.Write(byteArray, 0, (int)byteArray.Length);\r\n        using (SpreadsheetDocument spreadsheet = SpreadsheetDocument.Open(stream, true))\r\n        {\r\n            spreadsheet.ChangeDocumentType(SpreadsheetDocumentType.Workbook);\r\n        }\r\n        File.WriteAllBytes(output_filepath, stream.ToArray());\r\n    }\r\n}\r\n```\r\n\r\nI can fix the problem with the following code:\r\n\r\n```\r\npublic void Remove_VBA(string filepath)\r\n{\r\n    using (SpreadsheetDocument spreadsheet = SpreadsheetDocument.Open(filepath, true))\r\n    {\r\n        VbaProjectPart vba = spreadsheet.WorkbookPart.VbaProjectPart;\r\n        if (vba != null)\r\n        {\r\n            spreadsheet.WorkbookPart.DeletePart(vba);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nThe problem can also relate to MacroEnabledTemplate (.xltm) spreadsheets but I have not tested this.\r\n\r\nEven though I can fix the problem in my code, I think this should be fixed in Open XML SDK, so I file this issue.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**To Reproduce**\r\n1. Run the ChangeDocumentType code on my linked data sample\r\n3. Run the fix to see if it works\r\n\r\n**Observed behavior**\r\nVBA project file /xl/vbaProject.bin is not removed from spreadsheet when using ChangeDocumentType from .xlsm to .xlsx. The problem could also relate to MacroEnabled Temaplte (.xltm), but I have not checked this.\r\n\r\n**Expected behavior**\r\nIt should be removed, because Excel gives error when trying to open spreadsheet that has been changed from .xlsm to .xlsx. When removing /xl/vbaProject.bin Excel does no longer give error.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Windows 11\r\n - Office version 2208\r\n - .NET Target:  .NET Core 6.0.9\r\n - DocumentFormat.OpenXml Version: 2.18.0\r\n\r\n**Additional context**\r\nI refer to data sample (.xlsm) that has this error, if you try to ChangeDocumentType.\r\nhttps://we.tl/t-wj937yOTqe"},{"Id":"24158202176","Type":"IssuesEvent","CreatedAt":"2022-09-22T09:25:43","Actor":"Asbjoedt","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1208","RelatedDescription":"Opened issue \"Absolute path is not found\" (#1208) at OfficeDev/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nThe SDK cannot find absolute path to local directory in workbook.xml even though it exists in the XML attribute is \"x15ac:absPath\".\r\n\r\nFor further context, I refer to question I made on Stackoverflow, where I was recommended to file an issue here:\r\nhttps://stackoverflow.com/questions/73633816/absolute-path-not-detected-in-open-xml-sdk/73641509?noredirect=1#comment130327161_73641509\r\n\r\n**Screenshots**\r\nSee question on Stackoverflow for screenshots.\r\n\r\n**To Reproduce**\r\n\r\nTo reproduce use this method on a spreadsheet with absolute path. You may find a data sample with absolute path here: \r\nhttps://github.com/Asbjoedt/CLISC/blob/master/Docs/Mappe1.xlsx\r\n\r\nMethod that ought to work\r\n```\r\nusing DocumentFormat.OpenXml.Packaging;\r\nusing DocumentFormat.OpenXml.Spreadsheet;\r\nusing DocumentFormat.OpenXml.Office2013.ExcelAc;\r\n\r\npublic bool Check_AbsolutePath(string filepath)\r\n{\r\n    bool absolutepath = false;\r\n\r\n    using (SpreadsheetDocument spreadsheet = SpreadsheetDocument.Open(filepath, false))\r\n    {\r\n        if (spreadsheet.WorkbookPart.Workbook.AbsolutePath != null)\r\n        {\r\n            Console.WriteLine(\"--> Absolute path to local directory detected\");\r\n            absolutepath = true;\r\n        }\r\n    }\r\n    return absolutepath;\r\n}\r\n```\r\n\r\n**Observed behavior**\r\nNo absolute path is found in spreadsheet despite workbook.xml has absolutepath. XML attribute is \"x15ac:absPath\". I need to remove absolute paths in spreadsheets, which I cannot do if they cannot be found.\r\n\r\n**Expected behavior**\r\nAbsolute path was found as get and i should be able to remove it by set \"\".\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Windows 11\r\n - .NET Target: I dunno, I just use C# in Visual Studio as \"console application\"\r\n - DocumentFormat.OpenXml Version: 2.18.0\r\n\r\n**Additional context**\r\nThx for your attention, I hope you can fix this.\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2022-09-29T03:30:26.9662611Z","RunDurationInMilliseconds":745}