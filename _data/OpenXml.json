{"Data":{"Sdk":{"Events":[{"Id":"50773833942","Type":"PullRequestEvent","CreatedAt":"2025-06-11T12:56:31","Actor":"mkaszewiak","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1936","RelatedDescription":"Opened pull request \"CreateElement calls now 3 parameter constructor of UnknownOpenXmlElement\" (#1936) at dotnet/Open-XML-SDK","RelatedBody":"Fixes #1933 "},{"Id":"50693142433","Type":"IssuesEvent","CreatedAt":"2025-06-09T20:27:26","Actor":"mikeebowen","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1925","RelatedDescription":"Closed issue \"Keep original data type when creating a CellValue instead of converting to string to save memory.\" (#1925) at dotnet/Open-XML-SDK","RelatedBody":"**Is your feature request related to a problem? Please describe.**\nWhen writing millions of cells to a sheet the memory usage is very high.\n\n**Describe the solution you'd like**\nCurrently `CellValue` converts all values added to strings. \nFor example:\n```\npublic CellValue(int value)\n   : this(value.ToString(CultureInfo.InvariantCulture))\n{\n}\n```\nWould it not make more sense to add (keep) the `int` (or whatever native type is being added) and write that to the `XmlWriter` when serializing the data to reduce the memory footprint?\n\n"},{"Id":"50514618323","Type":"PullRequestEvent","CreatedAt":"2025-06-04T15:32:49","Actor":"mikeebowen","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1935","RelatedDescription":"Merged pull request \"fixes issue1758 rdRichValueWebImage part\" (#1935) at dotnet/Open-XML-SDK","RelatedBody":"Fixes #1758"},{"Id":"50468965015","Type":"IssuesEvent","CreatedAt":"2025-06-03T17:19:57","Actor":"tomjebo","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1758","RelatedDescription":"Closed issue \"Bug with RdRichValueWebImagePart of Open XML SDK\" (#1758) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nIf I use Open XML SDK 3.02 to read a xlsx file, /xl/richData/rdRichValueWebImage.xml of xlsx file is a DocumentFormat.OpenXml.Packaging.ExtendedPart instead of RdRichValueWebImagePart.\r\n\r\nThe workbook has _webimages, but the workbookPart.RdRichValueWebImagePart is null.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n![image](https://github.com/user-attachments/assets/ea5a0e27-523c-487e-a7d7-3296cb85ee72)\r\n\r\n\r\n**To Reproduce**\r\n// Please add a self-contained, minimum viable repro of the issue.\r\n// If you require external resources, please provide a gist or GitHub repro\r\n// An Xunit style test is preferred, but a console application would work too.\r\n\r\nSteps to reproduce the behavior:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\n**Observed behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: [e.g. Windows]\r\n - Office version [e.g. 16.0.15427.20178]\r\n - .NET Target: (e.g. .NET Framework, .NET Core, UWP, Xamarin...)\r\n - DocumentFormat.OpenXml Version: (e.g. 2.11.0)\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n"},{"Id":"50468024437","Type":"PullRequestEvent","CreatedAt":"2025-06-03T16:55:13","Actor":"tomjebo","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1935","RelatedDescription":"Opened pull request \"fixes issue1758 rdRichValueWebImage part\" (#1935) at dotnet/Open-XML-SDK","RelatedBody":"Fixes #1758"}],"ResultType":"GitHubEvent"}},"RunOn":"2025-06-13T03:30:21.7322695Z","RunDurationInMilliseconds":522}