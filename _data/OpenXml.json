{"Data":{"Sdk":{"Events":[{"Id":"27851735884","Type":"PullRequestEvent","CreatedAt":"2023-03-20T19:14:40","Actor":"mikeebowen","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1359","RelatedDescription":"Opened pull request \"Office schema file update March 2023 release\" (#1359) at dotnet/Open-XML-SDK","RelatedBody":""},{"Id":"27848588456","Type":"IssuesEvent","CreatedAt":"2023-03-20T17:03:27","Actor":"petarpetrovt","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1358","RelatedDescription":"Opened issue \"OpenXmlValidator breaks digital signatures.\" (#1358) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nValidating a `SpreadsheetDocument` using `OpenXmlValidator` breaks digital signatures.\r\n\r\n**Screenshots**\r\n![styles](https://user-images.githubusercontent.com/7642579/226412198-950e823c-7ce6-41e4-b8f2-eea7b7ca50df.PNG)\r\n![workbook](https://user-images.githubusercontent.com/7642579/226412205-0915e04a-a8f7-49dc-849e-8e51ee16d8cb.PNG)\r\n\r\n**To Reproduce**\r\n```csharp\r\nusing var document = SpreadsheetDocument.Open(\"valid.xlsx\", isEditable: true);\r\nvar validator = new OpenXmlValidator();\r\n// This line breaks the signatures\r\nvalidator.Validate(document);\r\ndocument.Dispose();\r\n```\r\n\r\nSteps to reproduce the behavior:\r\nCreate .xlsx file using Microsoft Excel and add digital signature or signature line and sign it.\r\n\r\n**Observed behavior**\r\nSome parts (`styles.xml` and `workbook.xml`) get modified, which breaks digital signatures.\r\n\r\n**Expected behavior**\r\nNo changes should happen when simply validating a package.\r\n\r\n**Desktop (please complete the following information):**\r\n- OS: Windows\r\n- .NET Target: net6.0\r\n- DocumentFormat.OpenXml Version: 2.19.0\r\n\r\n**Additional context**\r\nWhen the document is loaded with the \"isEditable:false\" option, the issue does not appear to occur."},{"Id":"27846903854","Type":"IssuesEvent","CreatedAt":"2023-03-20T16:02:03","Actor":"mikeebowen","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1350","RelatedDescription":"Closed issue \"CustomXmlPart incorrectly created as \"customXML\" rather than \"customXml\"\" (#1350) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nWhen I create a new CustomXmlPart in an existing document it is created in \"./customXML/item[id].xml\" whereas \r\nword created the directory as \"./customXml\" rendering the document incomplete.\r\n\r\nSteps to reproduce the behavior:\r\n\r\n```csharp\r\n\r\nvar xmlPart =  \"\"\"\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n  <test:testCustom xmlns:test=\"http://testag.ch/testCustom\">\r\n    <test:CMX_LoremIpsum>\r\n      <test:Para1>Lorem Ipsum</test:Para1>\r\n      <test:Para2>Dolor sit amet</test:Para2>\r\n      <test:Para3>Consectetur adipiscing elit</test:Para3>\r\n      <test:Para4>den Rest müsste ich googlen</test:Para4>\r\n    </test:CMX_LoremIpsum>\r\n    <test:CMX_DummyTexts>\r\n      <test:Text1>Some text for Field 'Text1'</test:Text1>\r\n      <test:Text2>(ノಠ益ಠ)ノ彡┻━┻</test:Text2>\r\n    </test:CMX_DummyTexts>\r\n  </test:testCustom>\r\n\"\"\";\r\n\r\nvar part = Document.GetOrCreateCmiCustomXmlPart();\r\nusing var partStream = part.GetStream(FileMode.Create,\r\n                                              FileAccess.ReadWrite);\r\n\r\nif (partStream.CanSeek)\r\n            partStream.Seek(0, SeekOrigin.Begin);\r\n\r\nvar doc = XDocument.Parse(xmlPart);\r\n\r\nusing var xmlWriter = XmlWriter.Create(partStream);\r\ndoc.Save(xmlWriter);\r\n\r\n\r\n\r\n    public static CustomXmlPart GetOrCreateCustomXmlPart(this WordprocessingDocument wordDoc,\r\n                                                         string partId)\r\n    {\r\n        wordDoc.MainDocumentPart!.TryGetPartById(partId,\r\n                                                 out var found);\r\n        var part = found as CustomXmlPart;\r\n\r\n        part ??= wordDoc.MainDocumentPart!.AddCustomXmlPart(CustomXmlPartType.CustomXml,\r\n                                                            partId);\r\n\r\n        var customXmlProps = part.CustomXmlPropertiesPart ?? part.AddNewPart<CustomXmlPropertiesPart>();\r\n        customXmlProps.DataStoreItem ??= new DataStoreItem() { ItemId = Guid.NewGuid().ToString(\"B\") };\r\n\r\n        return part;\r\n    }\r\n```\r\n\r\n**Observed behavior**\r\n`AddCustomXmlPart` appears to create a new directory **customXML**:\r\n```bash\r\n├── [Content_Types].xml\r\n├── customXml\r\n│   ├── item1.xml\r\n│   ├── item2.xml\r\n│   ├── item3.xml\r\n│   ├── item4.xml\r\n│   ├── itemProps1.xml\r\n│   ├── itemProps2.xml\r\n│   ├── itemProps3.xml\r\n│   ├── itemProps4.xml\r\n│   └── _rels\r\n│       ├── item1.xml.rels\r\n│       ├── item2.xml.rels\r\n│       ├── item3.xml.rels\r\n│       └── item4.xml.rels\r\n├── customXML\r\n│   ├── item5.xml\r\n│   ├── itemProps5.xml\r\n│   └── _rels\r\n│       └── item5.xml.rels\r\n├── docProps\r\n│   ├── app.xml\r\n│   ├── core.xml\r\n│   └── custom.xml\r\n├── _rels\r\n└── word\r\n    ├── document.xml\r\n    ├── fontTable.xml\r\n    ├── glossary\r\n    │   ├── document.xml\r\n    │   ├── fontTable.xml\r\n    │   ├── _rels\r\n    │   │   └── document.xml.rels\r\n    │   ├── settings.xml\r\n    │   ├── styles.xml\r\n    │   └── webSettings.xml\r\n    ├── _rels\r\n    │   └── document.xml.rels\r\n    ├── settings.xml\r\n    ├── styles.xml\r\n    ├── theme\r\n    │   └── theme1.xml\r\n    └── webSettings.xml\r\n\r\n12 directories, 32 files\r\n```\r\n\r\n**Expected behavior**\r\nThe new files should be created within **customXml**\r\n\r\n```bash\r\n.\r\n├── [Content_Types].xml\r\n├── customXml\r\n│   ├── item1.xml\r\n│   ├── item2.xml\r\n│   ├── item3.xml\r\n│   ├── item4.xml\r\n│   ├── item5.xml\r\n│   ├── itemProps1.xml\r\n│   ├── itemProps2.xml\r\n│   ├── itemProps3.xml\r\n│   ├── itemProps4.xml\r\n│   ├── itemProps5.xml\r\n│   └── _rels\r\n│       ├── item1.xml.rels\r\n│       ├── item2.xml.rels\r\n│       ├── item3.xml.rels\r\n│       ├── item4.xml.rels\r\n│       └── item5.xml.rels\r\n├── docProps\r\n│   ├── app.xml\r\n│   ├── core.xml\r\n│   └── custom.xml\r\n├── _rels\r\n└── word\r\n    ├── document.xml\r\n    ├── fontTable.xml\r\n    ├── glossary\r\n    │   ├── document.xml\r\n    │   ├── fontTable.xml\r\n    │   ├── _rels\r\n    │   │   └── document.xml.rels\r\n    │   ├── settings.xml\r\n    │   ├── styles.xml\r\n    │   └── webSettings.xml\r\n    ├── _rels\r\n    │   └── document.xml.rels\r\n    ├── settings.xml\r\n    ├── styles.xml\r\n    ├── theme\r\n    │   └── theme1.xml\r\n    └── webSettings.xml\r\n\r\n10 directories, 32 files\r\n```\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Windows Server 2022 / Fedora 37\r\n - Office version -\r\n - .NET Target: .NET Framework 4.8\r\n - DocumentFormat.OpenXml Version: 2.19.0\r\n\r\n**Additional context**\r\nMaybe it could be narrowed down to this:\r\nhttps://github.com/dotnet/Open-XML-SDK/blob/d46f92b2963f1c21415be08fb21532306e55db75/test/DocumentFormat.OpenXml.Packaging.Tests/data/PartConstraintData.json#L281\r\n"},{"Id":"27846902897","Type":"PullRequestEvent","CreatedAt":"2023-03-20T16:02:01","Actor":"mikeebowen","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1351","RelatedDescription":"Merged pull request \"Fix casing on customXml folder\" (#1351) at dotnet/Open-XML-SDK","RelatedBody":"Fixes #1350"},{"Id":"27840782182","Type":"IssuesEvent","CreatedAt":"2023-03-20T12:37:42","Actor":"petarpetrovt","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1357","RelatedDescription":"Opened issue \"Cloning a package breaks digital signatures.\" (#1357) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nCloning a package via `OpenXmlPackage Clone(Stream stream)` method breaks digital signatures.\r\n\r\n**Screenshots**\r\n![documentrels](https://user-images.githubusercontent.com/7642579/226338825-03ca0513-9285-4c02-a7b5-ac83c95fb194.PNG)\r\n![rels](https://user-images.githubusercontent.com/7642579/226338831-9f675166-cfb2-45ca-aad8-ba903c759497.PNG)\r\n\r\n**To Reproduce**\r\n```\r\nusing var document = WordprocessingDocument.Open(\"valid.docx\", isEditable: false);\r\nusing var clonedStream = File.Open(\"invalid.docx\", FileMode.Create, FileAccess.ReadWrite);\r\nusing var clone = document.Clone(clonedStream);\r\n```\r\n\r\nSteps to reproduce the behavior:\r\n1. Create `.docx` file using Microsoft Word and add digital signature or signature line and sign it.\r\n2. Open via `WordprocessingDocument` and `Clone` into new file.\r\n\r\n**Observed behavior**\r\nSome XML parts gets reordered, `/` is trim from the start of some URIs, `standalone` XML declaration is added some parts.\r\n\r\n**Expected behavior**\r\nNo changes should happen in part that are used in signature digests.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Windows\r\n - .NET Target: net6.0\r\n - DocumentFormat.OpenXml Version: 2.19.0\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2023-03-27T03:30:24.6099916Z","RunDurationInMilliseconds":712}