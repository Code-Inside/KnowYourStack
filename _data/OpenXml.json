{"Data":{"Sdk":{"Events":[{"Id":"23278307043","Type":"IssuesEvent","CreatedAt":"2022-08-05T09:26:03","Actor":"tauheedul","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1189","RelatedDescription":"Closed issue \"Add support for XLOOKUP formula in OpenXML SDK\" (#1189) at OfficeDev/Open-XML-SDK","RelatedBody":"** Description **\r\nPlease add support for XLOOKUP formula parsing and calculation in Strict Open XML XLSX file output\r\n\r\n**Information**\r\n\r\n- .NET Target: All\r\n- DocumentFormat.OpenXml Version: 2.17.1\r\n\r\n**Repro**\r\n\r\n```csharp\r\nExample formula\r\n=XLOOKUP(A1, A3:A5, B3:B5)\r\n``` \r\n\r\n**Observed**\r\n\r\nLookup is not calculated in XLSX output\r\n![image](https://user-images.githubusercontent.com/9335220/182652778-67aef7a4-963b-44ce-ab7a-d271b92ca1e0.png)\r\n\r\n\r\n**Expected**\r\n\r\nSupport for formula syntax\r\n=XLOOKUP(lookup_value, lookup_array, return_array, [if_not_found], [match_mode], [search_mode]) \r\n"},{"Id":"23266856236","Type":"IssuesEvent","CreatedAt":"2022-08-04T18:16:56","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1188","RelatedDescription":"Closed issue \"Doesn't work in .Net\" (#1188) at OfficeDev/Open-XML-SDK","RelatedBody":"I recently used an amazingly effective MS tool for upgrading a WPF .Net Framework app to .Net 6.  Everything worked perfect-perfect except for all of my (too many to contemplate rewriting) reports I created using OpenXML. \r\n\r\ndoc.Save causes: [System.IO.IOException: 'Entries cannot be opened multiple times in Update mode\r\n\r\nFile.Copy(sourceWordTemplate, tempReportPath, true);\r\nusing (WordprocessingDocument wordDoc = WordprocessingDocument.Open(tempReportPath, true))\r\n{\r\n      MainDocumentPart mainPart = wordDoc.MainDocumentPart;\r\n      XmlDocument doc = new XmlDocument();\r\n      XmlDocument xnRow = new XmlDocument();\r\n      doc.Load(mainPart.GetStream());\r\n\r\n      // Building of the report which includes replacing text in the source doc, \r\n      // looping through, removing and adding table nodes and rows etc... \r\n      // nowhere in the report building is the word Stream used.\r\n\r\n      doc.Save(mainPart.GetStream(FileMode.Create, FileAccess.Write));\r\n      wordDoc.Close();\r\n}\r\nAny ideas?\r\n\r\n_Originally posted by @KurtIO in https://github.com/OfficeDev/Open-XML-SDK/issues/909#issuecomment-1060068306_"},{"Id":"23251571146","Type":"IssuesEvent","CreatedAt":"2022-08-04T04:40:16","Actor":"vramanrsv","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1191","RelatedDescription":"Opened issue \"Attempt to open merged presentation file throws a \"needs repair\" error \" (#1191) at OfficeDev/Open-XML-SDK","RelatedBody":"I am having an issue when I am trying to merge PPTs, the code is working without throwing any error but when I open the merged presentation file it says that it needs to be repaired. When the repair is complete, the file opens and all of the data is there.\r\n\r\n**Screenshots**\r\n![1](https://user-images.githubusercontent.com/110584253/182762855-54250bd6-9b48-4524-91e0-bc5e48fcdddc.png)\r\n![2](https://user-images.githubusercontent.com/110584253/182762862-8fecf89d-bacf-47b4-9f94-674627843b70.png)\r\n\r\n\r\n**To Reproduce**\r\nMy code: \r\n```\r\nnamespace Console_app\r\n{\r\n    using DocumentFormat.OpenXml.Packaging;\r\n    using DocumentFormat.OpenXml.Presentation;\r\n    using System.IO;\r\n    class Program\r\n    {\r\n        static uint _uniqueId;\r\n        static void Main(string[] args)\r\n        {\r\n            Stream stream1 = File.Open(\"sample1.pptx\", FileMode.Open,FileAccess.Read);\r\n            Stream stream2 = File.Open(\"sample2.pptx\", FileMode.Open,FileAccess.Read);            \r\n            Stream stream3 = File.Open(\"result.pptx\", FileMode.Open,FileAccess.ReadWrite);         \r\n            Stream[] arrStream = {stream1, stream2};\r\n            PresentationDocument destDoc = PresentationDocument.Open(stream3, true);  \r\n            Copy(arrStream,destDoc);    \r\n            stream3.Close();\r\n        }\r\n    private static uint CreateId(SlideMasterIdList slideMasterIdList)\r\n    {\r\n        uint currentId = 0;                                             \r\n        foreach (SlideMasterId masterId in slideMasterIdList)        \r\n        {\r\n            if (masterId.Id > currentId)\r\n            {\r\n                currentId = masterId.Id;\r\n            }\r\n        }\r\n        return ++currentId;\r\n    }\r\n    \r\n    public static void Copy(Stream[] arrStream, PresentationDocument destDoc)\r\n    {\r\n        var destPresentationPart = destDoc.PresentationPart;         \r\n        var destPresentation = destPresentationPart.Presentation; \r\n        destPresentation.SlideIdList = new SlideIdList();             \r\n        foreach (Stream sourcePresentationStream  in arrStream){    \r\n            var sourceDoc = PresentationDocument.Open(sourcePresentationStream, false);  \r\n            var sourcePresentationPart = sourceDoc.PresentationPart;                  \r\n            SlideId copiedSlideId = sourcePresentationPart.Presentation.SlideIdList.ChildElements[0] as SlideId;  \r\n            SlidePart copiedSlidePart = sourcePresentationPart.GetPartById(copiedSlideId.RelationshipId) as SlidePart; \r\n            SlidePart addedSlidePart = destPresentationPart.AddPart<SlidePart>(copiedSlidePart);   \r\n            SlideId slideId = new SlideId\r\n            {\r\n                Id = CreateId(destPresentation.SlideMasterIdList),\r\n                RelationshipId = destDoc.PresentationPart.GetIdOfPart(addedSlidePart)\r\n            };\r\n            destPresentation.SlideIdList.Append(slideId);       \r\n            SlideMasterPart addedSlideMasterPart = destPresentationPart.AddPart(addedSlidePart.SlideLayoutPart.SlideMasterPart);\r\n            uint masterId = CreateId(destPresentation.SlideMasterIdList); \r\n            SlideMasterId slideMaterId = new SlideMasterId\r\n            {\r\n                Id = masterId,\r\n                RelationshipId = destDoc.PresentationPart.GetIdOfPart(addedSlideMasterPart)\r\n            };\r\n            destDoc.PresentationPart.Presentation.SlideMasterIdList.Append(slideMaterId);\r\n            destDoc.PresentationPart.Presentation.Save();\r\n            sourcePresentationStream.Close();    \r\n            sourceDoc.Close();\r\n            }\r\n            destDoc.Close();\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\nSteps to reproduce the behavior:\r\n1. Save the project code \r\n2. Download files in the project folder [sample1.pptx](https://docs.google.com/presentation/d/1skDVfHph9easIFOtS_oPQwlBch9R1tNe/edit?usp=sharing&ouid=111639266533681987641&rtpof=true&sd=true), [sample2.pptx](https://docs.google.com/presentation/d/1S5m1UxOS8KSTkC1Jufh7HMWgDek3T8G-/edit?usp=sharing&ouid=111639266533681987641&rtpof=true&sd=true), [result.pptx](https://docs.google.com/presentation/d/1uXskDrLWCyTqWDnz_tmAt_hipUCFOFPH/edit?usp=sharing&ouid=111639266533681987641&rtpof=true&sd=true)\r\n3.  Run the code using `dotnet restore`, `dotnet build` and `dotnet run`\r\n4. Open the result.pptx file, the above mentioned error is shown.\r\n\r\n**Observed behavior**\r\nThe result.pptx file is throwing error as shown in the screenshots but after click on \"repair\" and \"ok\", the functionality worked and the PPTs got merged.\r\n\r\n**Expected behavior**\r\nWhen opened should not show any error to the user and functionality should be worked.\r\n\r\n"},{"Id":"23245638802","Type":"IssuesEvent","CreatedAt":"2022-08-03T19:51:32","Actor":"Asbjoedt","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1190","RelatedDescription":"Opened issue \"Validation of Excel Strict files reports two errors, \" (#1190) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nValidating any Strict conformance .xlsx spreadsheet results in 45 validation errors of which none should exist. I have already reported 43 of the errors in another issue, which are all related to the same issue, and now I report the last two errors. \r\n\r\nOpen XML SDK Validator gives the following two errors. Both files have been created with Excel, saved as Open XML Strict and nothing have been changed in them since, which for me logically should mean they are both valid, but the validator reports these two.\r\n\r\nCan you do anything to correct this?\r\n\r\n```\r\nFILEPATH\r\n--> File format is invalid - Spreadsheet has 45 validation errors\r\n--> Error 1\r\n----> Description: The 'dateCompatibility' attribute is not declared.\r\n----> ErrorType: Schema\r\n----> Node: DocumentFormat.OpenXml.Spreadsheet.WorkbookProperties\r\n----> Path: /x:workbook[1]/x:workbookPr[1]\r\n----> Part: /xl/workbook.xml\r\n--> Error 2\r\n----> Description: The element has unexpected child element 'http://schemas.openxmlformats.org/spreadsheetml/2006/main:start'. List of possible elements expected: <http://schemas.openxmlformats.org/spreadsheetml/2006/main:left>.\r\n----> ErrorType: Schema\r\n----> Node: DocumentFormat.OpenXml.Spreadsheet.Border\r\n----> Path: /x:styleSheet[1]/x:borders[1]/x:border[1]\r\n----> Part: /xl/styles.xml\r\n----> Related Node: DocumentFormat.OpenXml.Spreadsheet.StartBorder\r\n----> Related Node Inner Text:\r\n```"}],"ResultType":"GitHubEvent"}},"RunOn":"2022-08-08T03:30:25.6722133Z","RunDurationInMilliseconds":563}