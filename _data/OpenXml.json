{"Data":{"Sdk":{"Events":[{"Id":"52932133069","Type":"IssuesEvent","CreatedAt":"2025-08-04T18:49:28","Actor":"mugdhakolhe","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1956","RelatedDescription":"Opened issue \"Feature request for Open XML SDK - Replying to comments and @Mention tag\" (#1956) at dotnet/Open-XML-SDK","RelatedBody":"We would like to raise a feature request for enabling the following capabilities in the PowerPoint API:\n\nAdding comments to slides\n\nReplying to existing comments\n\nSupport for @Mention tags in comments\n\nThis would help us implement collaboration features similar to what is available in the PowerPoint UI, directly through code.\n\nIt would be great if you could also share a sample code snippet or reference documentation (if available) for the above scenarios.\n**Additional context**\n\n<img width=\"764\" height=\"225\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/40aaa599-6a04-4aff-8e95-dfd6afc08e65\" />\n"},{"Id":"52932023130","Type":"IssuesEvent","CreatedAt":"2025-08-04T18:46:23","Actor":"mugdhakolhe","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1955","RelatedDescription":"Opened issue \"Bug with Open XML SDK - Creating pptx files repair file error\" (#1955) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\nGetting an error saying - “Found a problem with the content. PowerPoint can attempt to repair it.” while  creating a simple blank pptx\n\n**Desktop (please complete the following information):**\n - Windows\n - Office version [Powerpoint version 2508 Version 19127.20010]\n - .NET Target: (e.g. .NET Framework 9)\n - DocumentFormat.OpenXml Version: (e.g. 2.20.0)\n\nCode:\nusing System;\nusing System.IO;\nusing DocumentFormat.OpenXml.Packaging;\nusing DocumentFormat.OpenXml.Presentation;\nusing A = DocumentFormat.OpenXml.Drawing;\n\nclass Program\n{\n    static void Main(string[] args)\n    {\n        string filePath = \"sample.pptx\";\n\n        using (PresentationDocument presentationDoc = PresentationDocument.Create(filePath, DocumentFormat.OpenXml.PresentationDocumentType.Presentation))\n        {\n            // Add the presentation part\n            PresentationPart presentationPart = presentationDoc.AddPresentationPart();\n            presentationPart.Presentation = new Presentation();\n\n            // Add slide master part and slide layout part\n            SlideMasterPart slideMasterPart = presentationPart.AddNewPart<SlideMasterPart>();\n            slideMasterPart.SlideMaster = new SlideMaster(new SlideLayoutIdList(), new TextStyles());\n\n            SlideLayoutPart slideLayoutPart = slideMasterPart.AddNewPart<SlideLayoutPart>();\n            slideLayoutPart.SlideLayout = new SlideLayout(new CommonSlideData(new ShapeTree()));\n\n            // Link slide layout to slide master\n            var slideLayoutRelId = slideMasterPart.GetIdOfPart(slideLayoutPart);\n            slideMasterPart.SlideMaster.SlideLayoutIdList = new SlideLayoutIdList(\n                new SlideLayoutId() { Id = 1U, RelationshipId = slideLayoutRelId }\n            );\n\n            // Add slide part\n            SlidePart slidePart = presentationPart.AddNewPart<SlidePart>();\n            slidePart.Slide = new Slide(new CommonSlideData(new ShapeTree()));\n\n            // Link slide to slide layout\n            var slideRelId = slidePart.AddPart(slideLayoutPart);\n\n            // Add slide ID to presentation\n            SlideIdList slideIdList = new SlideIdList();\n            uint slideId = 256U;\n            slideIdList.Append(new SlideId() { Id = slideId, RelationshipId = presentationPart.GetIdOfPart(slidePart) });\n\n            presentationPart.Presentation.Append(slideIdList);\n            presentationPart.Presentation.Save();\n        }\n\n        Console.WriteLine($\"Presentation created: {Path.GetFullPath(\"sample.pptx\")}\");\n    }\n}\n"},{"Id":"51861487112","Type":"IssuesEvent","CreatedAt":"2025-07-09T06:37:04","Actor":"lindexi","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1953","RelatedDescription":"Closed issue \"SchemeColorValues TypeInitializationException with AOT issues\" (#1953) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\nThe SchemeColorValues will cause the TypeInitializationException when running in AOT mode.\n\nThe stacktrace is \n\n```\nUnhandled exception. System.TypeInitializationException: A type initializer threw an exception. To determine which type, inspect the InnerException's StackTrace property.\n ---> System.NotSupportedException: 'DocumentFormat.OpenXml.Drawing.SchemeColorValues[]' is missing native code or metadata. This can happen for code that is not compatible with trimming or AOT. Inspect and fix trimming and AOT related warnings that were generated when the app was published. For more information see https://aka.ms/nativeaot-compatibility\n   at System.Reflection.Runtime.General.TypeUnifier.WithVerifiedTypeHandle(RuntimeArrayTypeInfo, RuntimeTypeInfo) + 0x66\n   at System.Array.InternalCreate(RuntimeType, Int32, Int32*, Int32*) + 0x1bb\n   at System.Array.CreateInstance(Type, Int32) + 0x4d\n   at System.RuntimeType.GetEnumValues() + 0x74\n   at DocumentFormat.OpenXml.EnumInfoLookup`1.EnumStringLookupImpl..ctor() + 0x66\n   at DocumentFormat.OpenXml.EnumInfoLookup`1..cctor() + 0x1c\n   at System.Runtime.CompilerServices.ClassConstructorRunner.EnsureClassConstructorRun(StaticClassConstructionContext*) + 0xba\n   --- End of inner exception stack trace ---\n   at System.Runtime.CompilerServices.ClassConstructorRunner.EnsureClassConstructorRun(StaticClassConstructionContext*) + 0x13c\n   at System.Runtime.CompilerServices.ClassConstructorRunner.CheckStaticClassConstructionReturnGCStaticBase(StaticClassConstructionContext*, Object) + 0xd\n   at DocumentFormat.OpenXml.EnumValue`1.ValidateSet(T) + 0x45\n   at DocumentFormat.OpenXml.OpenXmlSimpleValue`1.set_Value(T) + 0x17\n   at Program.<Main>$(String[] args) + 0x3c\n```\n\n**Screenshots**\nNone.\n\n**To Reproduce**\n\ncsproj:\n\n```xml\n<Project Sdk=\"Microsoft.NET.Sdk\">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net9.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include=\"DocumentFormat.OpenXml\" Version=\"2.20.0\" />\n  </ItemGroup>\n\n</Project>\n```\n\nProgram.cs:\n\n```csharp\nusing DocumentFormat.OpenXml.Drawing;\n\nSchemeColor color = new SchemeColor()\n{\n    Val = SchemeColorValues.Accent1\n};\nSchemeColorValues value = color.Val.Value;\nConsole.WriteLine(value);\n```\n\nThe publish command:\n\ndotnet publish /p:PublishAot=true -r win-x64\n\nRun the aot application and you can find the exception.\n\nMy mini repro code is in: https://github.com/lindexi/lindexi_gd/tree/b323b8cf2ee3bb7506810e29f8e84576f0639831/Pptx/WiheneakurFonejerarner\n\n**Observed behavior**\nThe application throws the exception.\n\n**Expected behavior**\nWork well\n\n**Desktop (please complete the following information):**\n - OS: Windows 11\n - Office version [e.g. 16.0.15427.20178]\n - .NET Target: .NET 9\n - DocumentFormat.OpenXml Version: 2.20.0\n\n**Additional context**\nAdd any other context about the problem here.\n"},{"Id":"51861200892","Type":"IssuesEvent","CreatedAt":"2025-07-09T06:28:59","Actor":"lindexi","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1953","RelatedDescription":"Opened issue \"SchemeColorValues TypeInitializationException with AOT issues\" (#1953) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\nThe SchemeColorValues will cause the TypeInitializationException when running in AOT mode.\n\nThe stacktrace is \n\n```\nUnhandled exception. System.TypeInitializationException: A type initializer threw an exception. To determine which type, inspect the InnerException's StackTrace property.\n ---> System.NotSupportedException: 'DocumentFormat.OpenXml.Drawing.SchemeColorValues[]' is missing native code or metadata. This can happen for code that is not compatible with trimming or AOT. Inspect and fix trimming and AOT related warnings that were generated when the app was published. For more information see https://aka.ms/nativeaot-compatibility\n   at System.Reflection.Runtime.General.TypeUnifier.WithVerifiedTypeHandle(RuntimeArrayTypeInfo, RuntimeTypeInfo) + 0x66\n   at System.Array.InternalCreate(RuntimeType, Int32, Int32*, Int32*) + 0x1bb\n   at System.Array.CreateInstance(Type, Int32) + 0x4d\n   at System.RuntimeType.GetEnumValues() + 0x74\n   at DocumentFormat.OpenXml.EnumInfoLookup`1.EnumStringLookupImpl..ctor() + 0x66\n   at DocumentFormat.OpenXml.EnumInfoLookup`1..cctor() + 0x1c\n   at System.Runtime.CompilerServices.ClassConstructorRunner.EnsureClassConstructorRun(StaticClassConstructionContext*) + 0xba\n   --- End of inner exception stack trace ---\n   at System.Runtime.CompilerServices.ClassConstructorRunner.EnsureClassConstructorRun(StaticClassConstructionContext*) + 0x13c\n   at System.Runtime.CompilerServices.ClassConstructorRunner.CheckStaticClassConstructionReturnGCStaticBase(StaticClassConstructionContext*, Object) + 0xd\n   at DocumentFormat.OpenXml.EnumValue`1.ValidateSet(T) + 0x45\n   at DocumentFormat.OpenXml.OpenXmlSimpleValue`1.set_Value(T) + 0x17\n   at Program.<Main>$(String[] args) + 0x3c\n```\n\n**Screenshots**\nNone.\n\n**To Reproduce**\n\ncsproj:\n\n```xml\n<Project Sdk=\"Microsoft.NET.Sdk\">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net9.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include=\"DocumentFormat.OpenXml\" Version=\"2.20.0\" />\n  </ItemGroup>\n\n</Project>\n```\n\nProgram.cs:\n\n```csharp\nusing DocumentFormat.OpenXml.Drawing;\n\nSchemeColor color = new SchemeColor()\n{\n    Val = SchemeColorValues.Accent1\n};\nSchemeColorValues value = color.Val.Value;\nConsole.WriteLine(value);\n```\n\nThe publish command:\n\ndotnet publish /p:PublishAot=true -r win-x64\n\nRun the aot application and you can find the exception.\n\nMy mini repro code is in: https://github.com/lindexi/lindexi_gd/tree/b323b8cf2ee3bb7506810e29f8e84576f0639831/Pptx/WiheneakurFonejerarner\n\n**Observed behavior**\nThe application throws the exception.\n\n**Expected behavior**\nWork well\n\n**Desktop (please complete the following information):**\n - OS: Windows 11\n - Office version [e.g. 16.0.15427.20178]\n - .NET Target: .NET 9\n - DocumentFormat.OpenXml Version: 2.20.0\n\n**Additional context**\nAdd any other context about the problem here.\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2025-08-07T03:30:19.9619335Z","RunDurationInMilliseconds":461}