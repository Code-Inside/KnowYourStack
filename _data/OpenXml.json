{"Data":{"Sdk":{"Events":[{"Id":"50380407686","Type":"IssuesEvent","CreatedAt":"2025-06-01T20:30:05","Actor":"ElegantCat-nocat","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1933","RelatedDescription":"Opened issue \"When the root element is an unknown element, OpenXmlPartReader could not get the correct values of LocalName, NamespaceUri and Prefix properties\" (#1933) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\nIn the CreateElement method of OpenXmlPartReader, when the element is unknown, it returns a new instance of OpenXmlUnknownElement but does not pass the qualified name and prefix parameters to its constructor, resulting in the reader being unable to retrieve the correct values of some properties such as LocalName\n\n**Observed behavior**\nWhen the root element is an unknown element, the LocalName, NamepaceUri and Prefix properties of the reader are string.Empty\n\n**Expected behavior**\nThe reader returns the correct values of the element\n\n**Additional context**\nIt seems that even for the construction of known elements, the relevant parameters are not passed. If I use a different namespace prefix, the reader's Prefix property still returns the element's default prefix, not the actual value. Is this also a bug?\n"},{"Id":"50160405859","Type":"PullRequestEvent","CreatedAt":"2025-05-26T20:03:00","Actor":"mkaszewiak","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1921","RelatedDescription":"Merged pull request \"Provide Table Explicit Properties - #1149\" (#1921) at dotnet/Open-XML-SDK","RelatedBody":"This is to address https://github.com/dotnet/Open-XML-SDK/issues/1149\r\n\r\n"},{"Id":"49984616319","Type":"PullRequestEvent","CreatedAt":"2025-05-21T15:15:39","Actor":"Copilot","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1932","RelatedDescription":"Opened pull request \"[WIP] Remove usage of Newtonsoft in favor of System.Text\" (#1932) at dotnet/Open-XML-SDK","RelatedBody":"Thanks for assigning this issue to me. I'm starting to work on it and will keep this PR's description up to date as I form a plan and make progress.\n\nOriginal issue description:\n\n> **Is your feature request related to a problem? Please describe.**\n> We currently have both Newtonsoft and System.Text.Json and only should use one.\n> \n> **Describe the solution you'd like**\n> Remove Newtonsoft.JSON and replace usage and associated code/data with System.Text.Json compliant stuff\n> \n\n\nFixes #1931.\n\n---\n\nðŸ’¡ You can make Copilot smarter by setting up custom instructions, customizing its development environment and configuring Model Context Protocol (MCP) servers. Learn more [Copilot coding agent tips](https://gh.io/copilot-coding-agent-tips) in the docs."},{"Id":"49984597947","Type":"IssuesEvent","CreatedAt":"2025-05-21T15:15:15","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1931","RelatedDescription":"Opened issue \"Remove usage of Newtonsoft in favor of System.Text\" (#1931) at dotnet/Open-XML-SDK","RelatedBody":"**Is your feature request related to a problem? Please describe.**\nWe currently have both Newtonsoft and System.Text.Json and only should use one.\n\n**Describe the solution you'd like**\nRemove Newtonsoft.JSON and replace usage and associated code/data with System.Text.Json compliant stuff\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2025-06-02T03:30:21.4350858Z","RunDurationInMilliseconds":470}