{"Data":{"Sdk":{"Events":[{"Id":"25359017561","Type":"IssuesEvent","CreatedAt":"2022-11-20T17:28:10","Actor":"f1nzer","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1237","RelatedDescription":"Opened issue \"FlatOpc: line break at the end of binary part format\" (#1237) at OfficeDev/Open-XML-SDK","RelatedBody":"Hi, I have a question about the next method:\r\nhttps://github.com/OfficeDev/Open-XML-SDK/blob/main/src/DocumentFormat.OpenXml/Packaging/OpenXmlPackage.FlatOpc.cs#L140-L159\r\n\r\nAccording to the [old blog post](https://learn.microsoft.com/en-us/archive/blogs/ericwhite/the-flat-opc-format) from Eric White:\r\n> the string must be broken into lines of 76 characters, and there **must not be a line break at the beginning or end of the data**\r\n\r\nBut the linked code adds a line break at the end of the data.\r\n\r\nAlso, the logic of this method is not obvious from my point of view.\r\nIf it is a bug then it might be simplified a bit:\r\n```cs\r\nconst int maxLineLength = 76;\r\n\r\nvar str = Convert.ToBase64String(byteArray);\r\n\r\nvar sb = new StringBuilder();\r\nfor (var i = 0; i < str.Length; i += maxLineLength)\r\n{\r\n    if (i > 0)\r\n    {\r\n        sb.AppendLine();\r\n    }\r\n\r\n    sb.Append(str.Substring(i, System.Math.Min(maxLineLength, str.Length - i)));\r\n}\r\n\r\nreturn sb.ToString();\r\n```"},{"Id":"25358665766","Type":"PullRequestEvent","CreatedAt":"2022-11-20T16:41:20","Actor":"f1nzer","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1236","RelatedDescription":"Opened pull request \"FlatOpc: avoid unnecessary MemoryStream.ToArray call\" (#1236) at OfficeDev/Open-XML-SDK","RelatedBody":"There is an unnecessary allocation in PR #1232: it allocates a new byte array via `MemoryStream.ToArray()`.\r\n\r\nIt's possible to avoid this call and read the data into a byte array directly, as it was done before (but was broken due to the [net6 breaking change](https://learn.microsoft.com/en-us/dotnet/core/compatibility/core-libraries/6.0/partial-byte-reads-in-streams))."},{"Id":"25343323030","Type":"PullRequestEvent","CreatedAt":"2022-11-19T00:51:45","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1235","RelatedDescription":"Opened pull request \"Persist generated code\" (#1235) at OfficeDev/Open-XML-SDK","RelatedBody":"This is helpful to see what the data files actually generate and potentially catch any changes that are unexpected."},{"Id":"25343092482","Type":"PullRequestEvent","CreatedAt":"2022-11-19T00:25:55","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1233","RelatedDescription":"Merged pull request \"Remove .NET 5.0 requirement\" (#1233) at OfficeDev/Open-XML-SDK","RelatedBody":".NET 5.0 is out of support and the new STS is .NET 7.0. We no longer need to build/test on this configuration\r\n"},{"Id":"25343089277","Type":"IssuesEvent","CreatedAt":"2022-11-19T00:25:35","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1197","RelatedDescription":"Closed issue \"OpenXmlPackage.SaveAs() corrupts file names\" (#1197) at OfficeDev/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\n`OpenXmlPackage.SaveAs()` corrupts names of the internal package files.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n\r\n[base.pptx](https://github.com/OfficeDev/Open-XML-SDK/files/9439380/base.pptx)\r\n\r\n```C#\r\nusing var pres = PresentationDocument.Open(\"base.pptx\", true);\r\nvar savedAs = pres.SaveAs(\"modified.pptx\");\r\nsavedAs.Close();\r\n```\r\n\r\n**Observed behavior**\r\nThe following renaming happened:\r\n\r\n/ppt/slides/slide1.xml -> /ppt/slides/slide12.xml\r\n/ppt/slides/slide2.xml -> /ppt/slides/slide21.xml\r\n\r\n![image](https://user-images.githubusercontent.com/5969304/187066700-8539b539-be1a-4609-ab5a-355e2b58c88d.png)\r\n\r\n**Expected behavior**\r\nThe original names of /ppt/slides/slide1.xml and slide2.xml should not be changed.\r\n\r\n**Desktop:**\r\n - OS: Windows 10\r\n - .NET Target: .NET 6\r\n - DocumentFormat.OpenXml Version: 2.17.1"},{"Id":"25343089222","Type":"PullRequestEvent","CreatedAt":"2022-11-19T00:25:35","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1234","RelatedDescription":"Merged pull request \"Don't change part URIs on cloning (or SaveAs)\" (#1234) at OfficeDev/Open-XML-SDK","RelatedBody":"This replaces direct calls to PartUriHelper with an indirection via IPartUriFeature. When cloning, this feature will be replaced so that it doesn't try to get a different URI.\r\n\r\nFixes #1197"},{"Id":"25342299036","Type":"PullRequestEvent","CreatedAt":"2022-11-18T23:11:23","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1232","RelatedDescription":"Merged pull request \"Fix stream copy\" (#1232) at OfficeDev/Open-XML-SDK","RelatedBody":"Using Stream.Read does not guarantee the requested bytes are read. This started failing in a test on .NET 6+, but could potentially fail everywhere this API is used without checking the return value\n"},{"Id":"25340620741","Type":"PullRequestEvent","CreatedAt":"2022-11-18T21:12:07","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1234","RelatedDescription":"Opened pull request \"Don't change part URIs on cloning (or SaveAs)\" (#1234) at OfficeDev/Open-XML-SDK","RelatedBody":"This replaces direct calls to PartUriHelper with an indirection via IPartUriFeature. When cloning, this feature will be replaced so that it doesn't try to get a different URI.\r\n\r\nFixes #1197"},{"Id":"25338425075","Type":"IssuesEvent","CreatedAt":"2022-11-18T19:00:51","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1219","RelatedDescription":"Closed issue \"Bug with Open XML SDK\" (#1219) at OfficeDev/Open-XML-SDK","RelatedBody":"Hello i'm having an issue..\r\nI download from nuget latest version 2.18.0\r\nand on my pc program that i build on vb.net works fine..\r\nBut i put the program on another computer and where it uses the library shows error:\r\n\r\nSystem.IO.FileLoadException: Could not load file or assembly 'DocumentFormat.OpenXml, Version=2.7.2.0, Culture=neutral, PublicKeyToken=8fb06cb64d019a17' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)\r\nFile name: 'DocumentFormat.OpenXml, Version=2.7.2.0, Culture=neutral, PublicKeyToken=8fb06cb64d019a17'\r\n\r\nHow to solve this issue?\r\nWhy it reads 2.7.2.0 when i have installed 2.18.0 ??"}],"ResultType":"GitHubEvent"}},"RunOn":"2022-11-21T03:30:25.7088986Z","RunDurationInMilliseconds":666}