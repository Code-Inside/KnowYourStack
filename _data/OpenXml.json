{"Data":{"Sdk":{"Events":[{"Id":"37144919597","Type":"PullRequestEvent","CreatedAt":"2024-04-03T22:36:59","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1701","RelatedDescription":"Merged pull request \"Point to new CI feed url\" (#1701) at dotnet/Open-XML-SDK","RelatedBody":""},{"Id":"37123740272","Type":"IssuesEvent","CreatedAt":"2024-04-03T11:48:05","Actor":"sszymons","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1702","RelatedDescription":"Opened issue \"SpreadsheetDocument.Dispose() throws System.ObjectDisposedException\" (#1702) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nSpreadsheetDocument.Dispose() throws System.ObjectDisposedException: Cannot access a closed Stream.\r\n\r\n**Screenshots**\r\n![image](https://github.com/dotnet/Open-XML-SDK/assets/165906541/36239221-95d8-4de0-a07f-e69797bcf8ea)\r\n\r\n**To Reproduce**\r\n\r\n```\r\n         Stream stream = new MemoryStream();\r\n         var spreadsheetDocument = SpreadsheetDocument.Create(stream, SpreadsheetDocumentType.Workbook);\r\n         spreadsheetDocument.Save();\r\n         \r\n         stream.Dispose();\r\n         spreadsheetDocument.Dispose();\r\n\r\n```\r\n\r\n**Observed behavior**\r\nException is thrown.\r\n\r\n`System.ObjectDisposedException : Cannot access a closed Stream.\r\n   at System.IO.MemoryStream.Seek(Int64 offset, SeekOrigin loc)\r\n   at System.IO.Compression.ZipArchive.WriteFile()\r\n   at System.IO.Compression.ZipArchive.Dispose(Boolean disposing)\r\n   at System.IO.Compression.ZipArchive.Dispose()\r\n   at System.IO.Packaging.ZipPackage.Dispose(Boolean disposing)\r\n   at System.IO.Packaging.Package.System.IDisposable.Dispose()\r\n   at System.IO.Packaging.Package.Close()\r\n   at DocumentFormat.OpenXml.Features.StreamPackageFeature.Dispose(Boolean disposing)\r\n   at DocumentFormat.OpenXml.Features.StreamPackageFeature.Dispose()\r\n   at DocumentFormat.OpenXml.Packaging.PackageFeatureCollection.DocumentFormat.OpenXml.Features.IContainerDisposableFeature.Dispose()\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Dispose(Boolean disposing)\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Dispose()`\r\n\r\n\r\n**Expected behavior**\r\nShould not throw exception, according to:https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1065\r\n\r\n_A [System.IDisposable.Dispose](https://learn.microsoft.com/en-us/dotnet/api/system.idisposable.dispose) method should not throw an exception. Dispose is often called as part of the cleanup logic in a finally clause. Therefore, explicitly throwing an exception from Dispose forces the user to add exception handling inside the finally clause._\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: MasOS 13.5 \r\n - Office version: N/A\r\n - .NET Target: .NET 6\r\n - DocumentFormat.OpenXml Version: 3.0.2\r\n\r\n"},{"Id":"37102264381","Type":"PullRequestEvent","CreatedAt":"2024-04-02T20:38:35","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1701","RelatedDescription":"Opened pull request \"Point to new CI feed url\" (#1701) at dotnet/Open-XML-SDK","RelatedBody":""},{"Id":"36902968019","Type":"IssuesEvent","CreatedAt":"2024-03-26T17:56:19","Actor":"cjalex1313","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1700","RelatedDescription":"Opened issue \"Bug with Open XML SDK\" (#1700) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nDocx file generated with OpenXML isn't able to be exported by soffice in linux (has something to do with the content)\r\n\r\n**To Reproduce**\r\n// code snippet\r\n            using (MemoryStream memoryStream = new MemoryStream())\r\n\t\t\t{\r\n                using (var doc = DocumentFormat.OpenXml.Packaging.WordprocessingDocument.Create(memoryStream, DocumentFormat.OpenXml.WordprocessingDocumentType.Document, true))\r\n\t\t\t\t{\r\n                    MainDocumentPart mainPart = doc.AddMainDocumentPart();\r\n                    mainPart.Document = new Document();\r\n                    Body body = mainPart.Document.AppendChild(new Body());\r\nvar table = new Table();\r\nTableProperties tableProperties = new TableProperties();\r\ntableProperties.TableWidth = new TableWidth() { Width = \"5000\", Type = TableWidthUnitValues.Pct };\r\ntable.AppendChild(tableProperties);\r\nTableGrid tableGrid = new TableGrid(\r\n  new GridColumn(),\r\n  new GridColumn()\r\n);\r\ntable.AppendChild(tableGrid);\r\nTableRow tableRow = new TableRow();\r\nTableCell tc1 = new TableCell(\r\n\t\t\t\tnew TableCellProperties(new TableCellWidth() { Width = \"2500\", Type = TableWidthUnitValues.Pct }),\r\n\t\t\t\tnew Paragraph(new Run(\r\n\t\t\t\t\t\tnew RunProperties(new FontSize() { Val = \"56\" }, new RunFonts() { Ascii = \"Times New Roman\" }),\r\n\t\t\t\t\t\tnew Text(\"Patient Hours Detail\")\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n);\r\nTableCell tc2 = new TableCell(\r\n\t\t\t\tnew TableCellProperties(new TableCellWidth() { Width = \"2500\", Type = TableWidthUnitValues.Pct }),\r\n\t\t\t\tnew Paragraph(new ParagraphProperties(new Justification() { Val = JustificationValues.Right }), new Run(new RunProperties(new FontSize() { Val = \"34\" }, new RunFonts() { Ascii = \"Times New Roman\" }), new Text(model.CaseName))),\r\n\t\t\t\tnew Paragraph(new ParagraphProperties(new Justification() { Val = JustificationValues.Right }), new Run(new RunProperties(new FontSize() { Val = \"26\" }, new RunFonts() { Ascii = \"Times New Roman\" }), new Text($\"{model.StartDate.ToString(\"MM/dd/yyyy\")} through {model.EndDate.ToString(\"MM/dd/yyyy\")}\")))\r\n);\r\ntableRow.Append(tc1);\r\ntableRow.Append(tc2);\r\ntable.AppendChild(tableRow);\r\nbody.Append(table);\r\ndoc.Save();\r\nmemoryStream.Position = 0;\r\nvar byteArray = memoryStream.ToArray();\r\nreturn byteArray;\r\n\r\nthen save the byteArray as \"sdfomsef.docx\" locally\r\n\r\nthen soffice --headless --convert-to pdf sdfomsef.docx\r\n\r\nError: source file could not be loaded\r\n\r\n**Expected behavior**\r\nIf I try remove the 2nd table cell this works (this line tableRow.Append(tc2);)\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Docker mcr.microsoft.com/dotnet/aspnet:6.0\r\n - Office version [e.g. 16.0.15427.20178]\r\n - .NET Target: .net6\r\n - DocumentFormat.OpenXml Version: 3.0.1\r\n"},{"Id":"36807785725","Type":"IssuesEvent","CreatedAt":"2024-03-22T18:46:29","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1657","RelatedDescription":"Closed issue \"[BUG] Cannot build fresh OpenXML-SDK\" (#1657) at dotnet/Open-XML-SDK","RelatedBody":"I try to build OpenXML-SDK with the latest Visual Studio 2022 (community) (17.8.6)\r\n\r\n- I git checkout the tag\r\n- I open the *.sln\r\n- I try to build the solution\r\n\r\nMy observations :\r\n\r\ntag 2.7.2 \r\n\r\n- works like a charm\r\n\r\ntag 2.8.1\r\n\r\n- Warning about Nuget vulnerabilities of some packages\r\n- build fails with \"The \"GetAssemblyVersion\" task has not been assigned a value for the required \"NuGetVersion\" parameter\" (translated from french)\r\n\r\ntag 2.9.1\r\n\r\n- Warning about Nuget vulnerabilities of some packages\r\n- build fails with \"The \"GetAssemblyVersion\" task has not been assigned a value for the required \"NuGetVersion\" parameter\" (translated from french)\r\n\r\ntag 3.0.0\r\n\r\n - \"Unable to resolve .NET SDK version as specified in global.json file\" : => I had to install dotnet-sdk-7.0.201-win-x64\r\n - Warning The \"OpenXmlGenerator\" failed to generate the source. This will not contribute to the output and compilation errors may result. The exception was of type \"FormatException\" with the message \"The format of the input string is incorrect\".\tDocumentFormat.OpenXml (net7.0) D:\\Open-XML-SDK\\3.0.1\\src\\DocumentFormat.OpenXml\\CSC\r\n- multiple errors of code compile refering to missing methods (because of missing assembly)\r\n\r\ntag 3.0.1\r\n - same as tag 3.0.0\r\n \r\nWhat is happening to that project ? There must be some broken automated action or wrong assumption about the host build machine."},{"Id":"36807780106","Type":"PullRequestEvent","CreatedAt":"2024-03-22T18:46:14","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1686","RelatedDescription":"Merged pull request \"fixed meta-code generation for non-english host build context\" (#1686) at dotnet/Open-XML-SDK","RelatedBody":"Meta-code generation assumes a dot as decimal point, which is not the case in French, for instance. If the host build context is using a french locale, the project could not be built.\r\n\r\nAdding a few `System.Globalization.CultureInfo.InvariantCulture` fixes the problem.\r\n\r\n#1657"},{"Id":"36749026597","Type":"IssuesEvent","CreatedAt":"2024-03-21T07:00:58","Actor":"handerss-spotfire","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1689","RelatedDescription":"Closed issue \"Upgrading to 3+ can be troublesome for .NET6 projects\" (#1689) at dotnet/Open-XML-SDK","RelatedBody":"The transition from 2.20 to 3.0 changed the dependency on [System.IO.Packaging](https://www.nuget.org/packages/System.IO.Packaging/) from `>=4.7.0` to `>=8.0.0`. For .NET6 projects its troublesome to use System.* packages with different major versions meaning upgrading to 3.0 is cumbersome (maybe impossible depending on how the dependency graph looks).\r\n\r\nWas this change made intentionally to get access to newer APIs and if not can the dependency requirement at least be lowered to the lowest supported .NET version (e.g. 6.0.0)? If the change was intentional and the package now depends on new APIs introduced in 8.0.0 then feel free to close."}],"ResultType":"GitHubEvent"}},"RunOn":"2024-04-04T03:30:18.1738951Z","RunDurationInMilliseconds":547}