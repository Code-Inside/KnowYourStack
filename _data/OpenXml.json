{"Data":{"Sdk":{"Events":[{"Id":"32849213565","Type":"IssuesEvent","CreatedAt":"2023-10-25T20:57:27","Actor":"mikeebowen","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1544","RelatedDescription":"Closed issue \"Creation of TOC not working anymore after moving to release 2.20\" (#1544) at dotnet/Open-XML-SDK","RelatedBody":"We are facing the issue after moving away from OpenXML 2.75 to the new release stream 2.20. The call OpenXmlReader.Create(mySW.BaseStream) converting a stream into an OpenXMLElement is not anymore possible and compiling is resulting into an ERROR. Do you have an alternative solution to insert a TOC. It's was working very well up to now.\r\n```vb\r\n            Dim myOpenXMLElement As OpenXmlElement\r\n            Dim xmlString As XElement = <w:sdt xmlns:w='http://schemas.openxmlformats.org/wordprocessingml/2006/main'>\r\n                                            <w:sdtPr>\r\n                                                <w:docPartObj>\r\n                                                    <w:docPartGallery w:val='Table of Contents'/>\r\n                                                    <w:docPartUnique/>\r\n                                                </w:docPartObj>\r\n                                            </w:sdtPr>\r\n                                            <w:sdtEndPr>\r\n                                                <w:rPr>\r\n                                                    <w:rFonts w:asciiTheme='minorHAnsi' w:cstheme='minorBidi' w:eastAsiaTheme='minorHAnsi' w:hAnsiTheme='minorHAnsi'/>\r\n                                                    <w:color w:val='auto'/>\r\n                                                    <w:sz w:val='22'/>\r\n                                                    <w:szCs w:val='22'/>\r\n                                                    <w:lang w:eastAsia='en-US'/>\r\n                                                </w:rPr>\r\n                                            </w:sdtEndPr>\r\n                                            <w:sdtContent>\r\n                                                <w:p>\r\n                                                    <w:pPr>\r\n                                                        <w:pStyle w:val='ptHeading1'/>\r\n                                                    </w:pPr>\r\n                                                    <w:r>\r\n                                                        <w:t>Table of Content</w:t>\r\n                                                    </w:r>\r\n                                                </w:p>\r\n                                                <w:p>\r\n                                                    <w:pPr>\r\n                                                        <w:pStyle w:val='TOC1'/>\r\n                                                        <w:tabs>\r\n                                                            <w:tab w:val='right' w:leader='dot' w:pos='9350'/>\r\n                                                        </w:tabs>\r\n                                                        <w:rPr>\r\n                                                            <w:noProof/>\r\n                                                        </w:rPr>\r\n                                                    </w:pPr>\r\n                                                    <w:r>\r\n                                                        <w:fldChar w:fldCharType='begin' w:dirty='true'/>\r\n                                                    </w:r>\r\n                                                    <w:r>\r\n                                                        <w:instrText xml:space='preserve'> TOC \\o \"1-<%= myTocLevel %>\" \\h \\ u </w:instrText>\r\n                                                    </w:r>\r\n                                                    <w:r>\r\n                                                        <w:fldChar w:fldCharType='separate' w:dirty='true'/>\r\n                                                    </w:r>\r\n                                                </w:p>\r\n                                                <w:p>\r\n                                                    <w:r>\r\n                                                        <w:rPr>\r\n                                                            <w:b/>\r\n                                                            <w:bCs/>\r\n                                                            <w:noProof/>\r\n                                                        </w:rPr>\r\n                                                        <w:fldChar w:fldCharType='end' w:dirty='true'/>\r\n                                                    </w:r>\r\n                                                </w:p>\r\n                                            </w:sdtContent>\r\n                                        </w:sdt>\r\n            Try\r\n                Using mySW As New StreamWriter(New MemoryStream)\r\n                    mySW.Write(xmlString.ToString)\r\n                    mySW.Flush()\r\n                    mySW.BaseStream.Seek(0, SeekOrigin.Begin)\r\n                    Dim myOpenXMLReader As OpenXmlReader = **OpenXmlReader.Create(mySW.BaseStream)**\r\n                    myOpenXMLReader.Read()\r\n                    myOpenXMLElement = myOpenXMLReader.LoadCurrentElement\r\n                    myOpenXMLReader.Close()\r\n                End Using\r\n```"},{"Id":"32828686488","Type":"IssuesEvent","CreatedAt":"2023-10-25T08:57:12","Actor":"laber0815","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1544","RelatedDescription":"Opened issue \"Creation of TOC not working anymore after moving to release 2.20\" (#1544) at dotnet/Open-XML-SDK","RelatedBody":"We are facing the issue after moving away from OpenXML 2.75 to the new release stream 2.20. The call OpenXmlReader.Create(mySW.BaseStream) converting a stream into an OpenXMLElement is not anymore possible and compiling is resulting into an ERROR. Do you have an alternative solution to insert a TOC. It's was working very well up to now.\r\n\r\n            Dim myOpenXMLElement As OpenXmlElement\r\n            Dim xmlString As XElement = <w:sdt xmlns:w='http://schemas.openxmlformats.org/wordprocessingml/2006/main'>\r\n                                            <w:sdtPr>\r\n                                                <w:docPartObj>\r\n                                                    <w:docPartGallery w:val='Table of Contents'/>\r\n                                                    <w:docPartUnique/>\r\n                                                </w:docPartObj>\r\n                                            </w:sdtPr>\r\n                                            <w:sdtEndPr>\r\n                                                <w:rPr>\r\n                                                    <w:rFonts w:asciiTheme='minorHAnsi' w:cstheme='minorBidi' w:eastAsiaTheme='minorHAnsi' w:hAnsiTheme='minorHAnsi'/>\r\n                                                    <w:color w:val='auto'/>\r\n                                                    <w:sz w:val='22'/>\r\n                                                    <w:szCs w:val='22'/>\r\n                                                    <w:lang w:eastAsia='en-US'/>\r\n                                                </w:rPr>\r\n                                            </w:sdtEndPr>\r\n                                            <w:sdtContent>\r\n                                                <w:p>\r\n                                                    <w:pPr>\r\n                                                        <w:pStyle w:val='ptHeading1'/>\r\n                                                    </w:pPr>\r\n                                                    <w:r>\r\n                                                        <w:t>Table of Content</w:t>\r\n                                                    </w:r>\r\n                                                </w:p>\r\n                                                <w:p>\r\n                                                    <w:pPr>\r\n                                                        <w:pStyle w:val='TOC1'/>\r\n                                                        <w:tabs>\r\n                                                            <w:tab w:val='right' w:leader='dot' w:pos='9350'/>\r\n                                                        </w:tabs>\r\n                                                        <w:rPr>\r\n                                                            <w:noProof/>\r\n                                                        </w:rPr>\r\n                                                    </w:pPr>\r\n                                                    <w:r>\r\n                                                        <w:fldChar w:fldCharType='begin' w:dirty='true'/>\r\n                                                    </w:r>\r\n                                                    <w:r>\r\n                                                        <w:instrText xml:space='preserve'> TOC \\o \"1-<%= myTocLevel %>\" \\h \\ u </w:instrText>\r\n                                                    </w:r>\r\n                                                    <w:r>\r\n                                                        <w:fldChar w:fldCharType='separate' w:dirty='true'/>\r\n                                                    </w:r>\r\n                                                </w:p>\r\n                                                <w:p>\r\n                                                    <w:r>\r\n                                                        <w:rPr>\r\n                                                            <w:b/>\r\n                                                            <w:bCs/>\r\n                                                            <w:noProof/>\r\n                                                        </w:rPr>\r\n                                                        <w:fldChar w:fldCharType='end' w:dirty='true'/>\r\n                                                    </w:r>\r\n                                                </w:p>\r\n                                            </w:sdtContent>\r\n                                        </w:sdt>\r\n            Try\r\n                Using mySW As New StreamWriter(New MemoryStream)\r\n                    mySW.Write(xmlString.ToString)\r\n                    mySW.Flush()\r\n                    mySW.BaseStream.Seek(0, SeekOrigin.Begin)\r\n                    Dim myOpenXMLReader As OpenXmlReader = **OpenXmlReader.Create(mySW.BaseStream)**\r\n                    myOpenXMLReader.Read()\r\n                    myOpenXMLElement = myOpenXMLReader.LoadCurrentElement\r\n                    myOpenXMLReader.Close()\r\n                End Using\r\n"},{"Id":"32779808243","Type":"IssuesEvent","CreatedAt":"2023-10-23T17:27:23","Actor":"tomjebo","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1515","RelatedDescription":"Closed issue \"Get Current Page n\" (#1515) at dotnet/Open-XML-SDK","RelatedBody":"I have a part of a code that opens a docx document and edits it, it adds several things and one of those is the page number you're currently in, so it should look like \"Pag: 1/5\". Until last week it worked just fine, but today I noticed that it no longer displays the current page number but displays in its' place \"{PAGE}\", ending up with \"Pag:{PAGE}/5\". I'm using this code on a project and both the testing code and the server code have this problem (and I haven't updated the server code in more than a month.\r\n\r\nThe following code is how it gets the current page number, which worked before:\r\n` run.AppendChild(new SimpleField() { Instruction = \"PAGE\" });`\r\n\r\nThe full part that the code is in:\r\n```\r\npageCount = int.Parse(doc.ExtendedFilePropertiesPart.Properties.Pages.Text);\r\nparagraph = td32.AppendChild(new Paragraph(\r\n        new ParagraphProperties(\r\n            new Justification() { Val = JustificationValues.Left },\r\n            new Bold() { Val = OnOffValue.FromBoolean(true) })));\r\nrun = paragraph.AppendChild(new Run());\r\nrun.RunProperties = new DocumentFormat.OpenXml.Wordprocessing.RunProperties();\r\nfontSize = new DocumentFormat.OpenXml.Wordprocessing.FontSize() { Val = \"22\" };\r\nrun.RunProperties.Append(fontSize);\r\nrunFonts = new RunFonts() { Ascii = \"Arial\", HighAnsi = \"Arial\" };\r\nrun.RunProperties.Append(runFonts);\r\nbold = new Bold() { Val = false };\r\nrun.RunProperties.Append(bold);\r\nitalic = new Italic() { Val = false };\r\nrun.RunProperties.Append(italic);\r\nrun.AppendChild(new Text(\"Pág: \"));\r\nrun.AppendChild(new SimpleField() { Instruction = \"PAGE\" });\r\nrun.AppendChild(new Text(\"/\" + pageCount));\r\n```"},{"Id":"32779790306","Type":"IssuesEvent","CreatedAt":"2023-10-23T17:26:40","Actor":"tomjebo","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1494","RelatedDescription":"Closed issue \"Is Storm-0978/CVE-2023-36884 affecting this library?\" (#1494) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nOn our project we're using `DocumentFormat.OpenXml` to convert OOXML documents to HTML (`WmlToHtmlConverter.ConvertToHtml(WordprocessingDocument, WmlToHtmlConverterSettings)`). Given the newly found [CVE-2023-36884 vulnerability](https://www.microsoft.com/en-us/security/blog/2023/07/11/storm-0978-attacks-reveal-financial-and-espionage-motives/) we've been trying to figure out if this library is affected by it. However, I can't seem to find details about how macros and remote content (altChunk) is loaded (if at all). Can you tell us if we need to take any precautions or if this library is safe from this vulnerability?\r\n\r\n**Server (please complete the following information):**\r\n - OS: Windows\r\n - .NET Target:.NET Framework 4.7.2\r\n - DocumentFormat.OpenXml Version: 2.20.0\r\n"},{"Id":"32726575735","Type":"IssuesEvent","CreatedAt":"2023-10-20T15:15:48","Actor":"mikeebowen","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1433","RelatedDescription":"Closed issue \"Help with modern comments in PowerPoint\" (#1433) at dotnet/Open-XML-SDK","RelatedBody":"Hi @tomjebo @mikeebowen \r\nFirst point :\r\n![image](https://user-images.githubusercontent.com/38904948/236021001-f1c1a584-971f-427c-aece-00e9bf1b789f.png)\r\ncould you please help me to update the above function that should work for \"Modern\" comments?\r\n\r\n_Originally posted by @garg716 in https://github.com/dotnet/Open-XML-SDK/issues/1133#issuecomment-1533163265_\r\n            "},{"Id":"32706721267","Type":"IssuesEvent","CreatedAt":"2023-10-19T23:03:37","Actor":"tomjebo","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1447","RelatedDescription":"Closed issue \"CT_PresetTextShape's prstTxWarp gets PresetTextWrap wrapper class\" (#1447) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nThis is a typo on the backend generator. The class name should match more closely the element name prstTxWarp.\r\n\r\n**Observed behavior**\r\nIn  the generated file: \r\nOpen-XML-SDK\\generated\\DocumentFormat.OpenXml\\DocumentFormat.OpenXml.Generator\\DocumentFormat.OpenXml.Generator.OpenXmlGenerator\\schemas_openxmlformats_org_drawingml_2006_main.cs\r\n\r\nThe class is defined: \r\npublic partial class PresetTextWrap : OpenXmlCompositeElement\r\n\r\n**Expected behavior**\r\npublic partial class PresetTextWarp : OpenXmlCompositeElement\r\n\r\n\r\n"},{"Id":"32706708538","Type":"IssuesEvent","CreatedAt":"2023-10-19T23:02:43","Actor":"tomjebo","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1513","RelatedDescription":"Closed issue \"Bug with Open XML SDK\" (#1513) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nOpenXml.Packaging.WordProcessingDoucment.Open throws \"Specified part does not exist in the package.\" not found even when all parts are present in the docx.\r\nThis seems to only happen when the docx has diagrams part in it and has a relationship specified in data.xml.rels. Specified relationship is as follows: \"<Relationship Id=\"rId1\" Type=\"http://schemas.microsoft.com/office/2007/relationships/diagramDrawing\" Target=\"diagrams/drawing1.xml\" />\".\r\nRemoving the relationship seems to be able to open the document document but the relationship is a valid relation.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**To Reproduce**\r\nTry to open any document having diagrams component in it and see the issue happening.\r\n\r\nSteps to reproduce the behavior:\r\nUse any document as file which contains drawing component in it.\r\nTry to do OpenXml.Packaging.WordProcessingDoucment.Open\r\nObserve that method throws Specified part not found in package exception even though all parts are present in the docx.\r\n\r\n**Observed behavior**\r\nOpen method should not be throwing any exception.\r\n\r\n**Expected behavior**\r\nDocument should open without any exceptions being thrown.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: MacOs Ventura 13.2.1\r\n - Office version \r\n - .NET Target: .NET 6.0\r\n - DocumentFormat.OpenXml Version: 2.20.0\r\n\r\n**Additional context**\r\nNA\r\n"},{"Id":"32706706337","Type":"IssuesEvent","CreatedAt":"2023-10-19T23:02:34","Actor":"tomjebo","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1513","RelatedDescription":"Reopened issue \"Bug with Open XML SDK\" (#1513) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nOpenXml.Packaging.WordProcessingDoucment.Open throws \"Specified part does not exist in the package.\" not found even when all parts are present in the docx.\r\nThis seems to only happen when the docx has diagrams part in it and has a relationship specified in data.xml.rels. Specified relationship is as follows: \"<Relationship Id=\"rId1\" Type=\"http://schemas.microsoft.com/office/2007/relationships/diagramDrawing\" Target=\"diagrams/drawing1.xml\" />\".\r\nRemoving the relationship seems to be able to open the document document but the relationship is a valid relation.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**To Reproduce**\r\nTry to open any document having diagrams component in it and see the issue happening.\r\n\r\nSteps to reproduce the behavior:\r\nUse any document as file which contains drawing component in it.\r\nTry to do OpenXml.Packaging.WordProcessingDoucment.Open\r\nObserve that method throws Specified part not found in package exception even though all parts are present in the docx.\r\n\r\n**Observed behavior**\r\nOpen method should not be throwing any exception.\r\n\r\n**Expected behavior**\r\nDocument should open without any exceptions being thrown.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: MacOs Ventura 13.2.1\r\n - Office version \r\n - .NET Target: .NET 6.0\r\n - DocumentFormat.OpenXml Version: 2.20.0\r\n\r\n**Additional context**\r\nNA\r\n"},{"Id":"32706701543","Type":"IssuesEvent","CreatedAt":"2023-10-19T23:02:14","Actor":"tomjebo","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1513","RelatedDescription":"Closed issue \"Bug with Open XML SDK\" (#1513) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nOpenXml.Packaging.WordProcessingDoucment.Open throws \"Specified part does not exist in the package.\" not found even when all parts are present in the docx.\r\nThis seems to only happen when the docx has diagrams part in it and has a relationship specified in data.xml.rels. Specified relationship is as follows: \"<Relationship Id=\"rId1\" Type=\"http://schemas.microsoft.com/office/2007/relationships/diagramDrawing\" Target=\"diagrams/drawing1.xml\" />\".\r\nRemoving the relationship seems to be able to open the document document but the relationship is a valid relation.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**To Reproduce**\r\nTry to open any document having diagrams component in it and see the issue happening.\r\n\r\nSteps to reproduce the behavior:\r\nUse any document as file which contains drawing component in it.\r\nTry to do OpenXml.Packaging.WordProcessingDoucment.Open\r\nObserve that method throws Specified part not found in package exception even though all parts are present in the docx.\r\n\r\n**Observed behavior**\r\nOpen method should not be throwing any exception.\r\n\r\n**Expected behavior**\r\nDocument should open without any exceptions being thrown.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: MacOs Ventura 13.2.1\r\n - Office version \r\n - .NET Target: .NET 6.0\r\n - DocumentFormat.OpenXml Version: 2.20.0\r\n\r\n**Additional context**\r\nNA\r\n"},{"Id":"32704788488","Type":"PullRequestEvent","CreatedAt":"2023-10-19T21:09:41","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1474","RelatedDescription":"Merged pull request \"Add builder infrastructure to streamline package creation\" (#1474) at dotnet/Open-XML-SDK","RelatedBody":"This is a work in progress to explore a pipeline of sorts to create packages. Main benefits of this are:\r\n\r\n- Middleware style pipeline to abstract away things required to do to initialize a package\r\n- Can simplify the creation of templates from any source (not fully working atm)\r\n- Enable Clone() functionality to initialize packages in identical ways\r\n- Provide special builders for more AOT-friendly scenarios\r\n  - For example, packages currently have all parts registered to them. Using these builders, we can track what are the required parts and use that to create specialized builders (see `DebugPackageBuilderExtensions` as an example)\r\n\r\nFor now, it will remain internal, but hopefully for v3.1 can be made public with some support to better enable AOT scenarios.\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2023-10-27T03:30:22.7105354Z","RunDurationInMilliseconds":724}