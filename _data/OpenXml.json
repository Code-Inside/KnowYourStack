{"Data":{"Sdk":{"Events":[{"Id":"39447459869","Type":"PullRequestEvent","CreatedAt":"2024-06-19T19:30:18","Actor":"dependabot[bot]","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1738","RelatedDescription":"Opened pull request \"Bump Microsoft.CodeAnalysis.CSharp.SourceGenerators.Testing.XUnit from 1.1.1 to 1.1.2\" (#1738) at dotnet/Open-XML-SDK","RelatedBody":"Bumps [Microsoft.CodeAnalysis.CSharp.SourceGenerators.Testing.XUnit](https://github.com/dotnet/roslyn-sdk) from 1.1.1 to 1.1.2.\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/dotnet/roslyn-sdk/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=Microsoft.CodeAnalysis.CSharp.SourceGenerators.Testing.XUnit&package-manager=nuget&previous-version=1.1.1&new-version=1.1.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>"},{"Id":"39415770469","Type":"IssuesEvent","CreatedAt":"2024-06-18T21:53:54","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1681","RelatedDescription":"Reopened issue \"Bug with opening corrupted Open XML documents\" (#1681) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nOpening a corrupted document lock the file.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Simulate a corrupted file (simply create a txt file with content in it and change the extension to .docx)\r\n2. Try opening the file with WordProcessingDocument.Open(...)\r\n\r\n**Observed behavior**\r\nThe method WordProcessingDocument.Open(...) throws an exception, stating that the file is corrupted but keeps the file locked to. This can be verified using tools like \"File Locksmith.\"\r\n\r\n**Expected behavior**\r\nContinue throwing the exception but release the file before.\r\n\r\n**Desktop**\r\n - OS: Windows 11\r\n - .NET Target: .NET Framework 4.8\r\n - DocumentFormat.OpenXml Version: 3.0.1\r\n\r\nThanks."},{"Id":"39284777537","Type":"IssuesEvent","CreatedAt":"2024-06-13T22:29:42","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1651","RelatedDescription":"Closed issue \"'OpenXmlElementList' does not contain a definition for 'GetItem'\" (#1651) at dotnet/Open-XML-SDK","RelatedBody":"Missing method for getting item from OpenXmlElementList class.\r\n\r\nStarting from version: 3.0.0\r\n\r\nWorking version: 2.20.0\r\n\r\nError\tCS1061\t'OpenXmlElementList' does not contain a definition for 'GetItem' and no accessible extension method 'GetItem' accepting a first argument of type 'OpenXmlElementList' could be found (are you missing a using directive or an assembly reference?)\t\r\n"},{"Id":"39284770811","Type":"IssuesEvent","CreatedAt":"2024-06-13T22:29:17","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1681","RelatedDescription":"Closed issue \"Bug with opening corrupted Open XML documents\" (#1681) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nOpening a corrupted document lock the file.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Simulate a corrupted file (simply create a txt file with content in it and change the extension to .docx)\r\n2. Try opening the file with WordProcessingDocument.Open(...)\r\n\r\n**Observed behavior**\r\nThe method WordProcessingDocument.Open(...) throws an exception, stating that the file is corrupted but keeps the file locked to. This can be verified using tools like \"File Locksmith.\"\r\n\r\n**Expected behavior**\r\nContinue throwing the exception but release the file before.\r\n\r\n**Desktop**\r\n - OS: Windows 11\r\n - .NET Target: .NET Framework 4.8\r\n - DocumentFormat.OpenXml Version: 3.0.1\r\n\r\nThanks."},{"Id":"39284729086","Type":"IssuesEvent","CreatedAt":"2024-06-13T22:26:57","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1702","RelatedDescription":"Closed issue \"SpreadsheetDocument.Dispose() throws System.ObjectDisposedException\" (#1702) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nSpreadsheetDocument.Dispose() throws System.ObjectDisposedException: Cannot access a closed Stream.\r\n\r\n**Screenshots**\r\n![image](https://github.com/dotnet/Open-XML-SDK/assets/165906541/eac158d5-f7df-46ed-a2e8-e8c049a67256)\r\n\r\n**To Reproduce**\r\n\r\n```\r\n         Stream stream = new MemoryStream();\r\n         var spreadsheetDocument = SpreadsheetDocument.Create(stream, SpreadsheetDocumentType.Workbook);\r\n         spreadsheetDocument.Save();\r\n         \r\n         stream.Dispose();\r\n         spreadsheetDocument.Dispose();\r\n\r\n```\r\n\r\n**Observed behavior**\r\nException is thrown.\r\n\r\n`System.ObjectDisposedException : Cannot access a closed Stream.\r\n   at System.IO.MemoryStream.Seek(Int64 offset, SeekOrigin loc)\r\n   at System.IO.Compression.ZipArchive.WriteFile()\r\n   at System.IO.Compression.ZipArchive.Dispose(Boolean disposing)\r\n   at System.IO.Compression.ZipArchive.Dispose()\r\n   at System.IO.Packaging.ZipPackage.Dispose(Boolean disposing)\r\n   at System.IO.Packaging.Package.System.IDisposable.Dispose()\r\n   at System.IO.Packaging.Package.Close()\r\n   at DocumentFormat.OpenXml.Features.StreamPackageFeature.Dispose(Boolean disposing)\r\n   at DocumentFormat.OpenXml.Features.StreamPackageFeature.Dispose()\r\n   at DocumentFormat.OpenXml.Packaging.PackageFeatureCollection.DocumentFormat.OpenXml.Features.IContainerDisposableFeature.Dispose()\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Dispose(Boolean disposing)\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Dispose()`\r\n\r\n\r\n**Expected behavior**\r\nShould not throw exception, according to:https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1065\r\n\r\n_A [System.IDisposable.Dispose](https://learn.microsoft.com/en-us/dotnet/api/system.idisposable.dispose) method should not throw an exception. Dispose is often called as part of the cleanup logic in a finally clause. Therefore, explicitly throwing an exception from Dispose forces the user to add exception handling inside the finally clause._\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: MasOS 13.5 \r\n - Office version: N/A\r\n - .NET Target: .NET 6\r\n - DocumentFormat.OpenXml Version: 3.0.2\r\n\r\n"},{"Id":"39284642477","Type":"IssuesEvent","CreatedAt":"2024-06-13T22:22:28","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1723","RelatedDescription":"Closed issue \"Unable to add shapes in word file\" (#1723) at dotnet/Open-XML-SDK","RelatedBody":"I want to add shapes like rectangle/line at a given x,y coordinates with given width and height with given fill color, but I am not able to add it. Can you show that how to add rectangle, line in word by creating a new docx file.\r\n"},{"Id":"39284581246","Type":"IssuesEvent","CreatedAt":"2024-06-13T22:19:16","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1728","RelatedDescription":"Closed issue \"Framework Support Update/Unclear\" (#1728) at dotnet/Open-XML-SDK","RelatedBody":"Hello,\r\n\r\nthe [NuGetGallery](https://www.nuget.org/packages/DocumentFormat.OpenXml/) specifies .NET 8.0 as supported target framework, while the README specifies .NET 6.0. What is the correct one?\r\n\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-06-21T03:30:20.5474238Z","RunDurationInMilliseconds":628}