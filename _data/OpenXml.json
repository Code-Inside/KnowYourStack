{"Data":{"Sdk":{"Events":[{"Id":"51861487112","Type":"IssuesEvent","CreatedAt":"2025-07-09T06:37:04","Actor":"lindexi","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1953","RelatedDescription":"Closed issue \"SchemeColorValues TypeInitializationException with AOT issues\" (#1953) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\nThe SchemeColorValues will cause the TypeInitializationException when running in AOT mode.\n\nThe stacktrace is \n\n```\nUnhandled exception. System.TypeInitializationException: A type initializer threw an exception. To determine which type, inspect the InnerException's StackTrace property.\n ---> System.NotSupportedException: 'DocumentFormat.OpenXml.Drawing.SchemeColorValues[]' is missing native code or metadata. This can happen for code that is not compatible with trimming or AOT. Inspect and fix trimming and AOT related warnings that were generated when the app was published. For more information see https://aka.ms/nativeaot-compatibility\n   at System.Reflection.Runtime.General.TypeUnifier.WithVerifiedTypeHandle(RuntimeArrayTypeInfo, RuntimeTypeInfo) + 0x66\n   at System.Array.InternalCreate(RuntimeType, Int32, Int32*, Int32*) + 0x1bb\n   at System.Array.CreateInstance(Type, Int32) + 0x4d\n   at System.RuntimeType.GetEnumValues() + 0x74\n   at DocumentFormat.OpenXml.EnumInfoLookup`1.EnumStringLookupImpl..ctor() + 0x66\n   at DocumentFormat.OpenXml.EnumInfoLookup`1..cctor() + 0x1c\n   at System.Runtime.CompilerServices.ClassConstructorRunner.EnsureClassConstructorRun(StaticClassConstructionContext*) + 0xba\n   --- End of inner exception stack trace ---\n   at System.Runtime.CompilerServices.ClassConstructorRunner.EnsureClassConstructorRun(StaticClassConstructionContext*) + 0x13c\n   at System.Runtime.CompilerServices.ClassConstructorRunner.CheckStaticClassConstructionReturnGCStaticBase(StaticClassConstructionContext*, Object) + 0xd\n   at DocumentFormat.OpenXml.EnumValue`1.ValidateSet(T) + 0x45\n   at DocumentFormat.OpenXml.OpenXmlSimpleValue`1.set_Value(T) + 0x17\n   at Program.<Main>$(String[] args) + 0x3c\n```\n\n**Screenshots**\nNone.\n\n**To Reproduce**\n\ncsproj:\n\n```xml\n<Project Sdk=\"Microsoft.NET.Sdk\">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net9.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include=\"DocumentFormat.OpenXml\" Version=\"2.20.0\" />\n  </ItemGroup>\n\n</Project>\n```\n\nProgram.cs:\n\n```csharp\nusing DocumentFormat.OpenXml.Drawing;\n\nSchemeColor color = new SchemeColor()\n{\n    Val = SchemeColorValues.Accent1\n};\nSchemeColorValues value = color.Val.Value;\nConsole.WriteLine(value);\n```\n\nThe publish command:\n\ndotnet publish /p:PublishAot=true -r win-x64\n\nRun the aot application and you can find the exception.\n\nMy mini repro code is in: https://github.com/lindexi/lindexi_gd/tree/b323b8cf2ee3bb7506810e29f8e84576f0639831/Pptx/WiheneakurFonejerarner\n\n**Observed behavior**\nThe application throws the exception.\n\n**Expected behavior**\nWork well\n\n**Desktop (please complete the following information):**\n - OS: Windows 11\n - Office version [e.g. 16.0.15427.20178]\n - .NET Target: .NET 9\n - DocumentFormat.OpenXml Version: 2.20.0\n\n**Additional context**\nAdd any other context about the problem here.\n"},{"Id":"51861200892","Type":"IssuesEvent","CreatedAt":"2025-07-09T06:28:59","Actor":"lindexi","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1953","RelatedDescription":"Opened issue \"SchemeColorValues TypeInitializationException with AOT issues\" (#1953) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\nThe SchemeColorValues will cause the TypeInitializationException when running in AOT mode.\n\nThe stacktrace is \n\n```\nUnhandled exception. System.TypeInitializationException: A type initializer threw an exception. To determine which type, inspect the InnerException's StackTrace property.\n ---> System.NotSupportedException: 'DocumentFormat.OpenXml.Drawing.SchemeColorValues[]' is missing native code or metadata. This can happen for code that is not compatible with trimming or AOT. Inspect and fix trimming and AOT related warnings that were generated when the app was published. For more information see https://aka.ms/nativeaot-compatibility\n   at System.Reflection.Runtime.General.TypeUnifier.WithVerifiedTypeHandle(RuntimeArrayTypeInfo, RuntimeTypeInfo) + 0x66\n   at System.Array.InternalCreate(RuntimeType, Int32, Int32*, Int32*) + 0x1bb\n   at System.Array.CreateInstance(Type, Int32) + 0x4d\n   at System.RuntimeType.GetEnumValues() + 0x74\n   at DocumentFormat.OpenXml.EnumInfoLookup`1.EnumStringLookupImpl..ctor() + 0x66\n   at DocumentFormat.OpenXml.EnumInfoLookup`1..cctor() + 0x1c\n   at System.Runtime.CompilerServices.ClassConstructorRunner.EnsureClassConstructorRun(StaticClassConstructionContext*) + 0xba\n   --- End of inner exception stack trace ---\n   at System.Runtime.CompilerServices.ClassConstructorRunner.EnsureClassConstructorRun(StaticClassConstructionContext*) + 0x13c\n   at System.Runtime.CompilerServices.ClassConstructorRunner.CheckStaticClassConstructionReturnGCStaticBase(StaticClassConstructionContext*, Object) + 0xd\n   at DocumentFormat.OpenXml.EnumValue`1.ValidateSet(T) + 0x45\n   at DocumentFormat.OpenXml.OpenXmlSimpleValue`1.set_Value(T) + 0x17\n   at Program.<Main>$(String[] args) + 0x3c\n```\n\n**Screenshots**\nNone.\n\n**To Reproduce**\n\ncsproj:\n\n```xml\n<Project Sdk=\"Microsoft.NET.Sdk\">\n\n  <PropertyGroup>\n    <OutputType>Exe</OutputType>\n    <TargetFramework>net9.0</TargetFramework>\n    <ImplicitUsings>enable</ImplicitUsings>\n    <Nullable>enable</Nullable>\n  </PropertyGroup>\n\n  <ItemGroup>\n    <PackageReference Include=\"DocumentFormat.OpenXml\" Version=\"2.20.0\" />\n  </ItemGroup>\n\n</Project>\n```\n\nProgram.cs:\n\n```csharp\nusing DocumentFormat.OpenXml.Drawing;\n\nSchemeColor color = new SchemeColor()\n{\n    Val = SchemeColorValues.Accent1\n};\nSchemeColorValues value = color.Val.Value;\nConsole.WriteLine(value);\n```\n\nThe publish command:\n\ndotnet publish /p:PublishAot=true -r win-x64\n\nRun the aot application and you can find the exception.\n\nMy mini repro code is in: https://github.com/lindexi/lindexi_gd/tree/b323b8cf2ee3bb7506810e29f8e84576f0639831/Pptx/WiheneakurFonejerarner\n\n**Observed behavior**\nThe application throws the exception.\n\n**Expected behavior**\nWork well\n\n**Desktop (please complete the following information):**\n - OS: Windows 11\n - Office version [e.g. 16.0.15427.20178]\n - .NET Target: .NET 9\n - DocumentFormat.OpenXml Version: 2.20.0\n\n**Additional context**\nAdd any other context about the problem here.\n"},{"Id":"51547966168","Type":"IssuesEvent","CreatedAt":"2025-07-01T09:45:51","Actor":"sw-ms-hardiksenghani","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1951","RelatedDescription":"Opened issue \"Bug Report: System.OutOfMemoryException when writing large Excel file\" (#1951) at dotnet/Open-XML-SDK","RelatedBody":"Environment:\n\nOpenXmlWriter(Package:2.16.0)\n.NET Version: .Net Core 8\nOperating System: Windows 10\nIssue Summary:\n\nWe are generating an Excel file with approximately:\n\n180 columns\n500,000 rows\nCell formatting applied throughout\nWhile writing data using ClosedXML, the process fails after approximately 350,000 rows with the following exception:\n\nException in Stream was too long.\nException of type 'System.OutOfMemoryException' was thrown.\nSteps to Reproduce:\n\nCreate a workbook and worksheet.\nPopulate 180 columns with formatted data.\nLoop through and write 500,000 rows.\nSave the workbook.\nExpected Behavior: The Excel file should be generated successfully without memory issues.\n\nActual Behavior: The process throws an OutOfMemoryException after writing around 350,000 rows.\n\nAdditional Context:\n\nWe are using cell formatting (e.g., borders, font styles) for each cell.\nThe issue seems to be related to memory usage or stream limits during serialization.\nRequest:\n\nIs there a recommended approach to handle large datasets with formatting?\nAre there any memory optimization techniques or streaming options available in OpenXmlWriter?"}],"ResultType":"GitHubEvent"}},"RunOn":"2025-07-30T03:30:21.9573663Z","RunDurationInMilliseconds":456}