{"Data":{"Sdk":{"Events":[{"Id":"42662015317","Type":"PullRequestEvent","CreatedAt":"2024-10-08T19:59:51","Actor":"dependabot[bot]","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1788","RelatedDescription":"Closed pull request \"Bump Microsoft.CodeAnalysis.PublicApiAnalyzers from 3.11.0-beta1.24219.2 to 3.11.0-beta1.24415.1\" (#1788) at dotnet/Open-XML-SDK","RelatedBody":"Bumps [Microsoft.CodeAnalysis.PublicApiAnalyzers](https://github.com/dotnet/roslyn-analyzers) from 3.11.0-beta1.24219.2 to 3.11.0-beta1.24415.1.\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/dotnet/roslyn-analyzers/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=Microsoft.CodeAnalysis.PublicApiAnalyzers&package-manager=nuget&previous-version=3.11.0-beta1.24219.2&new-version=3.11.0-beta1.24415.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>"},{"Id":"42662014529","Type":"PullRequestEvent","CreatedAt":"2024-10-08T19:59:49","Actor":"dependabot[bot]","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1804","RelatedDescription":"Opened pull request \"Bump Microsoft.CodeAnalysis.PublicApiAnalyzers from 3.11.0-beta1.24219.2 to 3.11.0-beta1.24454.1\" (#1804) at dotnet/Open-XML-SDK","RelatedBody":"Bumps [Microsoft.CodeAnalysis.PublicApiAnalyzers](https://github.com/dotnet/roslyn-analyzers) from 3.11.0-beta1.24219.2 to 3.11.0-beta1.24454.1.\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/dotnet/roslyn-analyzers/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=Microsoft.CodeAnalysis.PublicApiAnalyzers&package-manager=nuget&previous-version=3.11.0-beta1.24219.2&new-version=3.11.0-beta1.24454.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>"},{"Id":"42659918019","Type":"IssuesEvent","CreatedAt":"2024-10-08T18:46:09","Actor":"AlgorithmicThoughts","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1803","RelatedDescription":"Opened issue \"Add Objects (PDFs, Excel, Image, Word etc) and update the icon image and captions programmatically using OpenXML\" (#1803) at dotnet/Open-XML-SDK","RelatedBody":"I'm working on an ASP.NET project where I am developing an endpoint that uses OpenXML to generate an Excel file. Additionally, I create a PDF document using a third-party tool. I need to insert the PDF stream into an Excel sheet. I discovered [via a StackOverflow post](https://stackoverflow.com/questions/3322247/how-can-i-embed-any-file-type-into-microsoft-word-using-openxml-2-0) that this can be done using COM Interop which I want to avoid as this would mean storing the Excel DLLS on the server and starting a new instance of excel whenever I want to add the PDFs into the excel (please correct if my understanding is incorrect). \r\n\r\nI would also like to update the icon and the caption of the attached PDF object (this is also a requirement I am currently looking into but was not able to get an answer to)\r\n\r\n![image](https://github.com/user-attachments/assets/6b3b5bf2-93ed-4df4-9252-42c29da3aea2)\r\n\r\nIs there a way to insert the PDF stream directly into the Excel sheet and update it's icon and caption without relying on COM? Are there existing options to achieve this?\r\n\r\n**Describe the solution you'd like**\r\n\r\nA method to embed PDF streams and update its icon image and captions into Excel sheets directly using OpenXML, eliminating the need for COM Interop or any third party.\r\n\r\n**Here's what I know so far but it does not work in my case**\r\n\r\n1. Using COM Interop to embed the PDF, which isn't feasible in my case.\r\n2. Converting the PDF to an image and embedding it, which isn't ideal for maintaining document integrity.\r\n3. Including a hyperlink to the PDF location, which doesn't truly embed the document in the Excel file.\r\n\r\nThis feature would greatly enhance the flexibility and functionality of OpenXML, providing a more seamless experience for developers needing to embed various objects in Office documents."},{"Id":"42659764645","Type":"IssuesEvent","CreatedAt":"2024-10-08T18:41:04","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1775","RelatedDescription":"Closed issue \"Some source files use <remark> tags rather than <remarks> in their documentation comments\" (#1775) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nSome C# source files in this repository, mostly those generated from the schema and put in `generated/`, use `<remark>` tags rather than the usual `<remarks>` tags in their documentation comments. As a result, some development tools that use the documentation comments or the XML documentation files fail to use the remark information.\r\n\r\n**Screenshots**\r\nvscode showing the information for `DocumentFormat.OpenXml.Wordprocessing.ParagraphPropertiesChange` class in the file `generated\\DocumentFormat.OpenXml\\DocumentFormat.OpenXml.Generator\\DocumentFormat.OpenXml.Generator.OpenXmlGenerator\\schemas_openxmlformats_org_wordprocessingml_2006_main.g.cs`. (Red lines are added manually.)\r\n\r\n![before fix](https://github.com/user-attachments/assets/25347bb8-d5cf-4fc0-8e0c-486b5c182cb7)\r\n\r\n**To Reproduce**\r\n1. Start vscode and open the folder for the repository.\r\n2. On the Explorer pane, locate the file `generated\\DocumentFormat.OpenXml\\DocumentFormat.OpenXml.Generator\\DocumentFormat.OpenXml.Generator.OpenXmlGenerator\\schemas_openxmlformats_org_wordprocessingml_2006_main.g.cs` and click it to open it.\r\n3. Scroll down to find the (partial) class definition for `ParagraphPropertiesChange`.\r\n4. Observe the documentation comment above it, then hover your mouse cursor over the identifier.\r\n\r\n**Observed behavior**\r\n1. The documentation comment uses `<remark>` and `</remark>` tag pair.\r\n2. The popup shows only the summary part of the documentation comment.\r\n\r\n**Expected behavior**\r\n1. The documentation comment uses `<remarks>` and `</remarks>` tag pair.\r\n2. The popup shows both summary and remark parts.\r\n\r\n![after fix](https://github.com/user-attachments/assets/1dd2eed7-53b8-4942-a8bf-f75c87f992b2)\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Windows 11\r\n - Office version: version 2407 build 16.0.17830.20056\r\n - .NET Target: .NET Framework 4.8.1\r\n - DocumentFormat.OpenXml Version: 3.1.0\r\n\r\n**Additional notes**\r\nThe major cause of this issue is a bug in the schema to C# code generator. However, there are a few files outside `generated/` that use `<remark>`. They are:\r\n- `src/DocumentFormat.OpenXml/Schema/Presentation/CommentPropertiesExtension.cs` and\r\n- `src/DocumentFormat.OpenXml/Schema/Wordprocessing/CustomXmlElement.cs`."},{"Id":"42659764504","Type":"IssuesEvent","CreatedAt":"2024-10-08T18:41:04","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1775","RelatedDescription":"Closed issue \"Some source files use <remark> tags rather than <remarks> in their documentation comments\" (#1775) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nSome C# source files in this repository, mostly those generated from the schema and put in `generated/`, use `<remark>` tags rather than the usual `<remarks>` tags in their documentation comments. As a result, some development tools that use the documentation comments or the XML documentation files fail to use the remark information.\r\n\r\n**Screenshots**\r\nvscode showing the information for `DocumentFormat.OpenXml.Wordprocessing.ParagraphPropertiesChange` class in the file `generated\\DocumentFormat.OpenXml\\DocumentFormat.OpenXml.Generator\\DocumentFormat.OpenXml.Generator.OpenXmlGenerator\\schemas_openxmlformats_org_wordprocessingml_2006_main.g.cs`. (Red lines are added manually.)\r\n\r\n![before fix](https://github.com/user-attachments/assets/25347bb8-d5cf-4fc0-8e0c-486b5c182cb7)\r\n\r\n**To Reproduce**\r\n1. Start vscode and open the folder for the repository.\r\n2. On the Explorer pane, locate the file `generated\\DocumentFormat.OpenXml\\DocumentFormat.OpenXml.Generator\\DocumentFormat.OpenXml.Generator.OpenXmlGenerator\\schemas_openxmlformats_org_wordprocessingml_2006_main.g.cs` and click it to open it.\r\n3. Scroll down to find the (partial) class definition for `ParagraphPropertiesChange`.\r\n4. Observe the documentation comment above it, then hover your mouse cursor over the identifier.\r\n\r\n**Observed behavior**\r\n1. The documentation comment uses `<remark>` and `</remark>` tag pair.\r\n2. The popup shows only the summary part of the documentation comment.\r\n\r\n**Expected behavior**\r\n1. The documentation comment uses `<remarks>` and `</remarks>` tag pair.\r\n2. The popup shows both summary and remark parts.\r\n\r\n![after fix](https://github.com/user-attachments/assets/1dd2eed7-53b8-4942-a8bf-f75c87f992b2)\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Windows 11\r\n - Office version: version 2407 build 16.0.17830.20056\r\n - .NET Target: .NET Framework 4.8.1\r\n - DocumentFormat.OpenXml Version: 3.1.0\r\n\r\n**Additional notes**\r\nThe major cause of this issue is a bug in the schema to C# code generator. However, there are a few files outside `generated/` that use `<remark>`. They are:\r\n- `src/DocumentFormat.OpenXml/Schema/Presentation/CommentPropertiesExtension.cs` and\r\n- `src/DocumentFormat.OpenXml/Schema/Wordprocessing/CustomXmlElement.cs`."},{"Id":"42659764069","Type":"PullRequestEvent","CreatedAt":"2024-10-08T18:41:03","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1776","RelatedDescription":"Merged pull request \"A fix to the use of <remark> tags rather than <remarks> in the documentation comments\" (#1776) at dotnet/Open-XML-SDK","RelatedBody":"This PR fixes #1775\r\n- by fixing the code generator (commit a7c4f6db5dfbcaf50d4722272afab50c8aa45430), and\r\n- by fixing two non-generated source files (commit f0d1c08bc540428d50474df167c00de611bd245d).\r\n\r\n~~The changes to the generated source files (i.e., those in `generated/`) are *not* included in this PR, because they will be re-generated by the updated code generator when building. (You will need to commit those changes to the repository by yourself...)~~\r\nThe changes to the generated source files are now included in the PR in commit 7e087145fd493d367d202fa26a81581c9752e503 for easier review.\r\n\r\nNote that, for the purpose of testing the behavior of the patched generator, you will need to do the following:\r\n- After applying this PR to your working tree, you *may* need to **restart Windows** and run `dotnet clean`, then remove all files in (subdirectories of) `generated/` manually before running `dotnet build`."},{"Id":"42659282600","Type":"IssuesEvent","CreatedAt":"2024-10-08T18:24:55","Actor":"AlfredHellstern","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1779","RelatedDescription":"Closed issue \"Open XML SDK bug?\" (#1779) at dotnet/Open-XML-SDK","RelatedBody":"Hi\r\n\r\nI use a library called spreadsheetlight.\r\nThis uses open xml sdk.\r\n\r\nThis is the problem I have:\r\n\r\nhttps://github.com/ARLM-Keller/SpreadsheetLight/issues/3\r\n\r\nIs this a open xml sdk bug?"},{"Id":"42525436541","Type":"IssuesEvent","CreatedAt":"2024-10-03T21:11:22","Actor":"sergey-tihon","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1802","RelatedDescription":"Opened issue \"Cannot access a disposed object (DeflateStream) after recovering from malformed url\" (#1802) at dotnet/Open-XML-SDK","RelatedBody":"This is almost a duplicate of https://github.com/dotnet/Open-XML-SDK/issues/1636 but about PowerPoint and with clear repro steps and a sample document.\r\n\r\n**Describe the bug**\r\n\r\n```\r\nUnhandled exception. System.ObjectDisposedException: Cannot access a disposed object.\r\nObject name: 'System.IO.Compression.DeflateStream'.\r\n   at System.IO.Compression.DeflateStream.ReadCore(Span`1 buffer)\r\n   at System.IO.Packaging.ZipWrappingStream.Read(Span`1 buffer)\r\n   at System.IO.Stream.ReadAtLeastCore(Span`1 buffer, Int32 minimumBytes, Boolean throwOnEndOfStream)\r\n   at System.IO.Stream.ReadAtLeast(Span`1 buffer, Int32 minimumBytes, Boolean throwOnEndOfStream)\r\n   at System.Xml.XmlTextReaderImpl.InitStreamInput(Uri baseUri, String baseUriStr, Stream stream, Byte[] bytes, Int32 byteCount, Encoding encoding)\r\n   at System.Xml.XmlTextReaderImpl.FinishInitStream()\r\n   at System.Xml.XmlTextReaderImpl..ctor(Stream stream, Byte[] bytes, Int32 byteCount, XmlReaderSettings settings, Uri baseUri, String baseUriStr, XmlParserContext context, Boolean cl\r\noseInput)\r\n   at System.Xml.XmlReaderSettings.CreateReader(Stream input, Uri baseUri, String baseUriString, XmlParserContext inputContext)\r\n   at DocumentFormat.OpenXml.XmlConvertingReaderFactory.Create(Stream partStream, IOpenXmlNamespaceResolver resolver, XmlReaderSettings settings, Boolean strictRelationshipFound)\r\n   at DocumentFormat.OpenXml.OpenXmlPartRootElement.LoadFromPart(OpenXmlPart openXmlPart, Stream partStream)\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPart.LoadDomTree[T]()\r\n   at DocumentFormat.OpenXml.Packaging.PresentationPart.get_Presentation()\r\n   at Program.<Main>$(String[] args) in /Users/Sergey_Tihon/git/oxml-malformedurl-url/Program.cs:line 7\r\n```\r\n\r\n**To Reproduce**\r\n\r\n1. clone repo - https://github.com/sergey-tihon/oxml-malformedurl-url\r\n2. execute `dotnet run`\r\n\r\n```csharp\r\nusing DocumentFormat.OpenXml.Packaging;\r\n\r\nusing var fs = File.Open(\"repro.pptx\", FileMode.Open, FileAccess.Read);\r\nvar openSettings = new OpenSettings { AutoSave = false };\r\nusing var doc = PresentationDocument.Open(fs, false, openSettings);\r\n\r\nvar presentation = doc.PresentationPart!.Presentation!;\r\nvar slideIds = presentation.SlideIdList?.ChildElements;\r\nConsole.WriteLine(slideIds?.Count ?? -1);\r\n```\r\n\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net8.0</TargetFramework>\r\n    <RootNamespace>oxml_malformedurl_url</RootNamespace>\r\n    <ImplicitUsings>enable</ImplicitUsings>\r\n    <Nullable>enable</Nullable>\r\n  </PropertyGroup>\r\n\r\n  <ItemGroup>\r\n    <PackageReference Include=\"DocumentFormat.OpenXml\" Version=\"3.1.0\" />\r\n  </ItemGroup>\r\n\r\n</Project>\r\n```\r\n\r\n**Observed behavior**\r\n \r\nCannot access a disposed object.\r\nObject name: 'System.IO.Compression.DeflateStream'.\r\n\r\n**Expected behavior**\r\n\r\nFully functional recovered document.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: macOS v15\r\n - .NET Target: 8.0.401\r\n - DocumentFormat.OpenXml Version: 3.1.0\r\n\r\n"},{"Id":"42509966600","Type":"IssuesEvent","CreatedAt":"2024-10-03T13:03:23","Actor":"Yaroslav-Andrieiev-Net","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1801","RelatedDescription":"Opened issue \"Open XML SDK System.IO.IOException: \"Entries cannot be opened multiple times in Update mode\" during disposal\" (#1801) at dotnet/Open-XML-SDK","RelatedBody":"### **Describe the bug**\r\nHi everyone, we faced an issue after \"DocumentFormat.OpenXml\" migration from **2.20.0** to latest **3.1.0** (issue reproduces in versions 3.0.0 - 3.1.0).\r\nIt happens on disposal of WordprocessingDocument\r\n**Stacktrace:**\r\n`- System.IO.IOException: Entries cannot be opened multiple times in Update mode.\r\n   at System.IO.Compression.ZipArchiveEntry.OpenInUpdateMode()\r\n   at System.IO.Packaging.ZipStreamManager.Open(ZipArchiveEntry zipArchiveEntry, FileAccess streamFileAccess)\r\n   at System.IO.Packaging.ZipPackagePart.GetStreamCore(FileMode streamFileMode, FileAccess streamFileAccess)\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPart.LoadDomTree[T]()\r\n   at DocumentFormat.OpenXml.Packaging.MainDocumentPart.get_PartRootElement()\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPackage.SavePartContents(Boolean save)\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Dispose(Boolean disposing)\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Dispose()\r\n   at Edocs.Infrastructure.Services.Conversion.OpenXMLCorrector.FixSharePointFile(MemoryStream stream, IFileLoggerInfo fileLoggerInfo, String extension) `\r\n\r\n**Issue reproduces only with particular .docx file**:  [File.docx](https://github.com/user-attachments/files/17244541/File.docx)\r\n\r\n\r\n\r\n### **Code**\r\n```csharp\r\npublic void FixSharePointFile(MemoryStream stream, IFileLoggerInfo fileLoggerInfo, string extension)\r\n{\r\n    WordprocessingDocument wordDoc = null;\r\n    try\r\n    {\r\n        try\r\n        {\r\n            wordDoc = WordprocessingDocument.Open(stream, true);\r\n        }\r\n        catch (InvalidOperationException e)\r\n        {\r\n            Log.Error($\"OpenXML file open exception. CaseFileId: {fileLoggerInfo.FileId}, file name: {fileLoggerInfo.FileName}\", e);\r\n            throw new BusinessException(LocalizedString.Get(Messages.OpenXMLFileOpenError));\r\n        }\r\n\r\n        var partsAndBindings = wordDoc.MainDocumentPart.GetXMLPartsAndBindings();\r\n        var doc = wordDoc.MainDocumentPart.GetXmlDocByNamespace(EdocsConversionConstants.Myns);\r\n\r\n        if (doc is { ChildNodes.Count: > 0 })\r\n        {\r\n            var namespaceManager = new XmlNamespaceManager(doc.NameTable);\r\n            var xDoc = doc.ToXDocument();\r\n\r\n            foreach (var part in partsAndBindings)\r\n            {\r\n\r\n                foreach (var binding in part.Item2)\r\n                {\r\n                    var xpath = binding.Attribute(EdocsConversionConstants.W + \"xpath\")?.Value;\r\n\r\n                    var prefix = binding.Attribute(EdocsConversionConstants.W + \"prefixMappings\")?.Value;\r\n                    this.PrefixResolver(prefix, namespaceManager);\r\n\r\n                    if (xpath.IsNotEmpty())\r\n                    {\r\n                        var sdtPrCollection = binding.Parent?.Parent?.Descendants(EdocsConversionConstants.W + \"sdtPr\");\r\n                        var rCollection = binding.Parent?.Parent?.Descendants(EdocsConversionConstants.W + \"r\");\r\n\r\n                        if (sdtPrCollection.Any() && rCollection.Any())\r\n                        {\r\n                            var r = rCollection?.GetFirstAndRemoveOthers();\r\n\r\n                            var sdtPr = sdtPrCollection?.First();\r\n\r\n                            var rprCollection = sdtPr?.Descendants(EdocsConversionConstants.W + \"rPr\");\r\n\r\n                            if (rprCollection.Any())\r\n                            {\r\n                                var rPr = rprCollection?.First();\r\n                                var rPrRCollection = r?.Descendants(EdocsConversionConstants.W + \"rPr\");\r\n                                if (rPrRCollection.Any())\r\n                                {\r\n                                    rPrRCollection.First()?.ReplaceWith(rPr);\r\n                                }\r\n                            }\r\n\r\n                            var t = r?.Descendants(EdocsConversionConstants.W + \"t\")?.GetFirstAndRemoveOthers();\r\n\r\n                            r?.Descendants(EdocsConversionConstants.W + \"tab\")?.GetFirstAndRemoveOthers()?.Remove();\r\n                            r?.Descendants(EdocsConversionConstants.W + \"br\")?.GetFirstAndRemoveOthers()?.Remove();\r\n\r\n                            if (t != null)\r\n                            {\r\n                                var v = xDoc?.XPathSelectElement(xpath, namespaceManager)?.Value;\r\n                                if (v.IsEmpty())\r\n                                {\r\n                                    t.Remove();\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                part.Item1.PutXDocument();\r\n            }\r\n        }\r\n\r\n        wordDoc?.Dispose(); // exception throwed here!\r\n\r\n        stream?.Seek(0, SeekOrigin.Begin);\r\n    }\r\n    finally\r\n    {\r\n        wordDoc?.Dispose();\r\n    }\r\n}\r\n```\r\n**Extenstion methods:**\r\n```csharp\r\npublic static List<Tuple<OpenXmlPart, IEnumerable<XElement>>> GetXMLPartsAndBindings(this MainDocumentPart mainPart)\r\n{\r\n    var partsAndBindings = new List<Tuple<OpenXmlPart, IEnumerable<XElement>>>();\r\n\r\n    foreach (var header in mainPart.HeaderParts)\r\n    {\r\n        var headerDoc = header.GetXDocument();\r\n\r\n        var headerBinding = headerDoc?.Descendants(w + \"dataBinding\");\r\n        if (headerBinding != null)\r\n        {\r\n            partsAndBindings.Add(new Tuple<OpenXmlPart, IEnumerable<XElement>>(header, headerBinding));\r\n        }\r\n    }\r\n\r\n    foreach (var footer in mainPart.FooterParts)\r\n    {\r\n        var footerDoc = footer.GetXDocument();\r\n\r\n        var footerBinding = footerDoc?.Descendants(w + \"dataBinding\");\r\n        if (footerBinding != null)\r\n        {\r\n            partsAndBindings.Add(new Tuple<OpenXmlPart, IEnumerable<XElement>>(footer, footerBinding));\r\n        }\r\n    }\r\n    var mainXml = mainPart.GetXDocument();\r\n    var bindings = mainXml?.Descendants(w + \"dataBinding\");\r\n\r\n    if (bindings != null)\r\n    {\r\n        partsAndBindings.Add(new Tuple<OpenXmlPart, IEnumerable<XElement>>(mainPart, bindings));\r\n    }\r\n\r\n    return partsAndBindings;\r\n}\r\n```\r\n```csharp\r\npublic static XmlDocument GetXmlDocByNamespace(this MainDocumentPart mainPart, string nameSpace)\r\n{\r\n    var doc = new XmlDocument();\r\n\r\n    foreach (var part in mainPart.CustomXmlParts)\r\n    {\r\n        using (var stream = part.GetStream())\r\n        {\r\n            if (stream.Length == 0)\r\n            {\r\n                continue;\r\n            }\r\n\r\n            doc.Load(stream);\r\n\r\n            if (doc?.DocumentElement?.NamespaceURI == nameSpace)\r\n            {\r\n                return doc;\r\n            }\r\n        }\r\n    }\r\n\r\n    return null;\r\n}\r\n```\r\n\r\n```csharp\r\npublic static XDocument ToXDocument(this XmlDocument document)\r\n {\r\n     return document.ToXDocument(LoadOptions.None);\r\n }\r\n\r\n public static XDocument ToXDocument(this XmlDocument document, LoadOptions options)\r\n {\r\n     using (var reader = new XmlNodeReader(document))\r\n     {\r\n         return XDocument.Load(reader, options);\r\n     }\r\n }\r\n```\r\n```csharp\r\n\r\n public static void PutXDocument(this OpenXmlPart part)\r\n {\r\n     var xdoc = part.GetXDocument();\r\n     xdoc.PutXDocument(part);\r\n }\r\n\r\n public static void PutXDocument(this XDocument xdoc, OpenXmlPart part)\r\n {\r\n     if (xdoc != null)\r\n     {\r\n         using (var xw =\r\n             XmlWriter.Create(part.GetStream\r\n                 (FileMode.Create, FileAccess.Write)))\r\n         {\r\n             xdoc.Save(xw);\r\n         }\r\n     }\r\n }\r\n```\r\nThanks in advance for any assistance!\r\n "},{"Id":"42449406367","Type":"IssuesEvent","CreatedAt":"2024-10-01T19:13:52","Actor":"mikeebowen","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1791","RelatedDescription":"Closed issue \"Rich text support in power point\" (#1791) at dotnet/Open-XML-SDK","RelatedBody":"Hi Team, \r\n\r\nWe are currently utilizing OpenXML SDK 2.5 and DocumentFormat.OpenXml (version 2.19.0) within our .NET application (C#) to generate reports in the PPTX format. Previously, our data source for the reports was plain text in JSON format. As part of an enhancement, we are now incorporating rich text into the JSON data source.\r\n\r\nHowever, we are encountering an issue: when generating reports with our existing implementation—where we use the \"Text\" => \"Run\" => \"Paragraph\" => \"TextBody\" control to display text—the generated report displays the raw HTML tags instead of interpreting them.\r\n\r\nFor instance, if we pass `<div><strong>test data</strong></div>` in our source JSON, the output should appear in bold as follows: **test data**. \r\nCurrently, the output includes the HTML tags as plain text: `<div><strong>test data</strong></div>`, rather than rendering the HTML correctly.\r\n\r\n**So just want to check if there is any way to handle the rich text in the Power point format so that the corresponding html tags will do their respective function in generated report.**\r\n\r\nWe would appreciate guidance on how to handle rich text in the PowerPoint format so that the HTML tags are properly interpreted and rendered in the generated PPTX report.\r\n\r\nYour assistance in achieving the desired output would be greatly valued.\r\n\r\nThanks in advance.\r\nManika Sood\r\n\r\n"},{"Id":"42448652699","Type":"IssuesEvent","CreatedAt":"2024-10-01T18:47:23","Actor":"AlfredHellstern","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1786","RelatedDescription":"Closed issue \"Bug with Open XML SDK\" (#1786) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\nA clear and concise description of what the bug is.\n\n**Screenshots**\nIf applicable, add screenshots to help explain your problem.\n\n**To Reproduce**\n// Please add a self-contained, minimum viable repro of the issue.\n// If you require external resources, please provide a gist or GitHub repro\n// An Xunit style test is preferred, but a console application would work too.\n\nSteps to reproduce the behavior:\n1. Go to '...'\n2. Click on '....'\n3. Scroll down to '....'\n4. See error\n\n**Observed behavior**\nA clear and concise description of what you expected to happen.\n\n**Expected behavior**\nA clear and concise description of what you expected to happen.\n\n**Desktop (please complete the following information):**\n - OS: [e.g. Windows]\n - Office version [e.g. 16.0.15427.20178]\n - .NET Target: (e.g. .NET Framework, .NET Core, UWP, Xamarin...)\n - DocumentFormat.OpenXml Version: (e.g. 2.11.0)\n\n**Additional context**\nAdd any other context about the problem here.\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-10-10T03:30:22.7519938Z","RunDurationInMilliseconds":589}