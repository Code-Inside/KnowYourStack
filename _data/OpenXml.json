{"Data":{"Sdk":{"Events":[{"Id":"32640152915","Type":"IssuesEvent","CreatedAt":"2023-10-17T23:23:55","Actor":"mikeebowen","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1292","RelatedDescription":"Closed issue \"VbaProjectPart generates `vbaProject.bin` file with incorrect file extension\" (#1292) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nWe are generating macro files using OpenXML SDK and when we add the `VbaProjectPart` to the document, we expect it to create a file named `vbaProject.bin` in the same way the Microsoft Office applications do.\r\n\r\nOpenXML SDK will generate a `vbaProject.xml` file. Such VBA macro is functioning normally in Office applications.\r\n\r\n**Screenshots**\r\n\r\n![image](https://user-images.githubusercontent.com/287778/211084126-2422f318-e1d9-4cf4-b4b5-7ac9940e4e42.png)\r\n\r\n![image](https://user-images.githubusercontent.com/287778/211084286-7dfef7d5-0806-480b-961b-adc651ea26ec.png)\r\n\r\n\r\n**To Reproduce**\r\n\r\n```cs\r\nvar vbaProjectPath = @\"C:\\dev\\project\\bin\\vbaProject.bin\";\r\nvar macroTemplate = PresentationDocument.CreateFromTemplate(\"MacroTemplate.potm\");\r\nvar mainDoc = macroTemplate.PresentationPart;\r\nif (mainDoc != null)\r\n{\r\n    var vbaProject = mainDoc.AddNewPart<VbaProjectPart>();\r\n    using var reader = File.OpenRead(vbaProjectPath);\r\n    vbaProject.FeedData(reader);\r\n    reader.Close();\r\n}\r\n```\r\n\r\nSample repository: https://github.com/NetOfficeFw/vbamc/blob/macro/src/vbamc/VbaCompiler.cs#L101\r\n\r\n**Observed behavior**\r\nAdding the `VbaProjectPart` into any of these document types: **WordprocessingDocument**, **SpreadsheetDocument** or **PresentationDocument** will create a respective `vbaProject.xml` file.\r\n\r\nThe added VBA project is functional in Office applications despite having incorrect extension.\r\n\r\n**Expected behavior**\r\nThe default extension for the `VbaProjectPart` should be `.bin` instead of `.xml` to make the filenames in line with Microsoft Office application behavior.\r\n\r\n**Desktop:**\r\n - OS: Windows 10\r\n - Office version 365 build 2211\r\n - .NET Target: .NET 6\r\n - DocumentFormat.OpenXml Version: 2.16.0 and newer\r\n\r\n**Additional context**\r\n\r\nThe `VbaProjectPart` part is defined here: https://github.com/OfficeDev/Open-XML-SDK/blob/main/test/DocumentFormat.OpenXml.Packaging.Tests/data/PartConstraintData.json\r\n\r\n```json\r\n{\r\n  \"Name\": \"DocumentFormat.OpenXml.Packaging.VbaProjectPart\",\r\n  \"ContentType\": \"application/vnd.ms-office.vbaProject\",\r\n  \"IsContentTypeFixed\": true,\r\n  \"RelationshipType\": \"http://schemas.microsoft.com/office/2006/relationships/vbaProject\",\r\n  \"TargetFileExtension\": \".xml\",\r\n  \"TargetName\": \"vbaProject\",\r\n  \"TargetPath\": \".\",\r\n  \"Parts\": [\r\n    {\r\n      \"RelationshipType\": \"http://schemas.microsoft.com/office/2006/relationships/wordVbaData\",\r\n      \"PartClassName\": \"VbaDataPart\",\r\n      \"PartContentType\": \"application/vnd.ms-word.vbaData+xml\",\r\n      \"MinOccursIsNonZero\": false,\r\n      \"MaxOccursGreatThanOne\": false,\r\n      \"FileFormat\": \"Office2007\"\r\n    }\r\n  ]\r\n}\r\n```\r\n\r\nIncorrect exention definition: https://github.com/OfficeDev/Open-XML-SDK/blob/main/test/DocumentFormat.OpenXml.Packaging.Tests/data/PartConstraintData.json#L3596\r\n"},{"Id":"32632750534","Type":"IssuesEvent","CreatedAt":"2023-10-17T17:35:14","Actor":"AlfredHellstern","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1453","RelatedDescription":"Closed issue \"Migrate AzDo build, release pipeline to Github Actions\" (#1453) at dotnet/Open-XML-SDK","RelatedBody":"We currently have disabled PR triggered AzDo pipeline builds for security reasons. \r\nTo resolve this, we should create a Github Action based pipeline. \r\n\r\nThis issue should track the effort and discuss requirements, features needed, etc...\r\n\r\nCurrent ability:\r\n\r\n- [x] Remove current AzDo build from PRs/etc\r\n- [x] Build/test all permutations of ProjectLoadStyle/os/configuration\r\n- [x] See test failures/output\r\n- [x] Build package\r\n- [x] Sign package\r\n- [x] Deploy package to CI feed on main\r\n- [x] Deploy package to NuGet on GitHub releases (we can probably use an event here so when we create a release, it will automatically push the package to NuGet)\r\n- [ ] Verify package names are what we expect\r\n\r\nAdditional we can add:\r\n\r\n- [x] Benchmarks\r\n- [x] Code coverage"},{"Id":"32610891659","Type":"IssuesEvent","CreatedAt":"2023-10-17T04:00:57","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1541","RelatedDescription":"Opened issue \"Add a set of builder APIs that can handle shared state and creation\" (#1541) at dotnet/Open-XML-SDK","RelatedBody":"# Overview\r\n\r\nCurrently, there are a number of static APIs on each package type to enable creating based off of different sources. However, this has a couple of problems:\r\n\r\n- Makes a lot of code duplication to enable any new open related APIs\r\n- No easy way to create without knowing the package type (for scenarios where we just need a package)\r\n- Any initialization has to be duplicated and is not passed on to methods such as `Clone()`\r\n\r\n## Proposal\r\n\r\nExpose a builder pattern with something like this that builds a middleware pipeline to construct the package:\r\n\r\n```csharp\r\npublic interface IPackageBuilder<TPackage>\r\n    where TPackage : OpenXmlPackage\r\n{\r\n    /// <summary>\r\n    /// Create an instance of the <typeparamref name=\"TPackage\"/> package.\r\n    /// </summary>\r\n    /// <returns>A <typeparamref name=\"TPackage\"/> instance.</returns>\r\n    TPackage Create();\r\n\r\n    /// <summary>\r\n    /// Gets a key/value collection that can be used to share data between middleware.\r\n    /// </summary>\r\n    IDictionary<string, object?> Properties { get; }\r\n\r\n    /// <summary>\r\n    /// Add middleware to the package builder.\r\n    /// </summary>\r\n    /// <param name=\"configure\">The middleware to add.</param>\r\n    /// <returns>The <see cref=\"IPackageBuilder{TPackage}\"/>.</returns>\r\n    IPackageBuilder<TPackage> Use(Func<PackageInitializerDelegate<TPackage>, PackageInitializerDelegate<TPackage>> configure);\r\n\r\n    /// <summary>\r\n    /// Create a copy of the builder that will be independent of the original, but retains the existing middleware and properties.\r\n    /// </summary>\r\n    /// <returns>A new <see cref=\"IPackageBuilder{TPackage}\"/>.</returns>\r\n    IPackageBuilder<TPackage> Clone();\r\n\r\n    /// <summary>\r\n    /// Builds the pipeline to initialize the package. Additional calls to this will return the cached pipeline unless\r\n    /// more middleware has been added.\r\n    /// </summary>\r\n    /// <returns>The pipeline to initialize a package.</returns>\r\n    PackageInitializerDelegate<TPackage> Build();\r\n}\r\n```\r\n\r\nThis can enable something like the following:\r\n\r\n```csharp\r\nvar factory = WordprocessingDocument.CreateBuilder()\r\n  .Use((package, next) => next(package))\r\n  .UseSomeCommonBehavior()\r\n  .Build();\r\n\r\nusing var package = factory.Open(stream);\r\n```\r\n\r\nThis sets up a factory that will produce a package based on the supplied middleware, which can contain shared state, etc that is needed in each package. It also sets up things like Clone to use this as well so all packages are set up in a consistent way.\r\n\r\nAn initial implementation is available here: https://github.com/dotnet/Open-XML-SDK/pull/1474"},{"Id":"32610786096","Type":"IssuesEvent","CreatedAt":"2023-10-17T03:52:37","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1540","RelatedDescription":"Opened issue \"Consolidate feature interfaces\" (#1540) at dotnet/Open-XML-SDK","RelatedBody":"# Overview\r\n\r\nOver the past couple of years, a set of abstractions has been introduced to enable more flexibility and maintainability. This has generally gone through the process of pulling the code out, adding an interface to abstract it, and then hooking it up. This has led to a set of features that can probably be reconciled (and exposed) to simplify an implementation of custom behavior.\r\n\r\n- [ ] Saving is only partially consolidated with two interfaces: `ISaveFeature` and `IPackageSaveFeature`\r\n- [ ] Eventing has a few ways to implement it and should be consolidated (and only a single pattern established)\r\n"},{"Id":"32610726797","Type":"PullRequestEvent","CreatedAt":"2023-10-17T03:47:55","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1539","RelatedDescription":"Opened pull request \"Move locking out of main code\" (#1539) at dotnet/Open-XML-SDK","RelatedBody":"A couple of places had locking code that enabled some scenarios, but would affect all code regardless. Now, it can be opted into (but also applied by default if compat mode is set to v2).\n"},{"Id":"32609110832","Type":"PullRequestEvent","CreatedAt":"2023-10-17T01:47:15","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1538","RelatedDescription":"Opened pull request \"Remove project load style\" (#1538) at dotnet/Open-XML-SDK","RelatedBody":""},{"Id":"32606758494","Type":"IssuesEvent","CreatedAt":"2023-10-16T22:52:02","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1510","RelatedDescription":"Closed issue \"Manual approval required for workflow run 5800578559: Approval for publishing to Nuget.org\" (#1510) at dotnet/Open-XML-SDK","RelatedBody":"Please approve or deny the deployment to Nuget.org\n\nWorkflow is pending manual review.\nURL: https://github.com/dotnet/Open-XML-SDK/actions/runs/5800578559\n\nRequired approvers: [twsouthwick tomjebo mikeebowen]\n\nRespond \"approved\", \"approve\", \"lgtm\", \"yes\" to continue workflow or \"denied\", \"deny\", \"no\" to cancel."},{"Id":"32606755550","Type":"IssuesEvent","CreatedAt":"2023-10-16T22:51:50","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1514","RelatedDescription":"Closed issue \"can't compile DocumentFormat.OpenXml after cloning :/\" (#1514) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nAfter cloning from github on a clean system, i cannot compile DocumentFormat.OpenXml project.\r\n\r\n**To Reproduce**\r\n1) Clone the repository from OpenXMLSDK (this repo)\r\n2) Build DocumentFormat.OpenXml.Generator and DocumentFormat.OpenXml.Generator.Models, Built. TRy to build DocumentFormat.OpenXml 179 Errors for missing classes for parts.\r\n\r\n..\\Open-XML-SDK\\src\\DocumentFormat.OpenXml\\Schema\\InkML\\Ink.cs(28,26,28,39): error CS0246: The type or namespace name 'CustomXmlPart' could not be found (are you missing a using directive or an assembly reference?)\r\n..\\Open-XML-SDK\\src\\DocumentFormat.OpenXml\\Schema\\AdditionalCharacteristics\\AdditionalCharacteristicsInfo.cs(35,26,35,39): error CS0246: The type or namespace name 'CustomXmlPart' could not be found (are you missing a using directive or an assembly reference?)\r\n..\\Open-XML-SDK\\src\\DocumentFormat.OpenXml\\Schema\\Bibliography\\Sources.cs(37,26,37,39): error CS0246: The type or namespace name 'CustomXmlPart' could not be found (are you missing a using directive or an assembly reference?)\r\n..\\Open-XML-SDK\\src\\DocumentFormat.OpenXml\\Schema\\InkML\\Ink.cs(37,26,37,39): error CS0246: The type or namespace name 'CustomXmlPart' could not be found (are you missing a using directive or an assembly reference?)\r\n..\\Open-XML-SDK\\src\\DocumentFormat.OpenXml\\Schema\\AdditionalCharacteristics\\AdditionalCharacteristicsInfo.cs(17,48,17,61): error CS0246: The type or namespace name 'CustomXmlPart' could not be found (are you missing a using directive or an assembly reference?)\r\n..\\Open-XML-SDK\\src\\DocumentFormat.OpenXml\\Schema\\Bibliography\\Sources.cs(19,26,19,39): error CS0246: The type or namespace name 'CustomXmlPart' could not be found (are you missing a using directive or an assembly reference?)\r\n..\\Open-XML-SDK\\src\\DocumentFormat.OpenXml\\Schema\\InkML\\Ink.cs(19,22,19,35): error CS0246: The type or namespace name 'CustomXmlPart' could not be found (are you missing a using directive or an assembly reference?)\r\n..\\Open-XML-SDK\\src\\DocumentFormat.OpenXml\\Packaging\\Model3DReferenceRelationshipPart.cs(12,41,12,59): error CS0115: 'Model3DReferenceRelationshipPart.IsValidContentType(IPackagePart)': no suitable method found to override\r\n..\\Open-XML-SDK\\src\\DocumentFormat.OpenXml\\Packaging\\MailMergeRecipientDataPart.cs(17,60,17,79): error CS0115: 'MailMergeRecipientDataPart.InternalRootElement': no suitable method found to override\r\n..\\Open-XML-SDK\\src\\DocumentFormat.OpenXml\\Packaging\\MailMergeRecipientDataPart.cs(24,51,24,66): error CS0115: 'MailMergeRecipientDataPart.PartRootElement': no suitable method found to override\r\n..\\Open-XML-SDK\\src\\DocumentFormat.OpenXml\\Schema\\Wordprocessing\\ConditionalFormatStyle.cs(31,41,31,65): error CS0115: 'ConditionalFormatStyle.StrictTranslateAttribute(in OpenXmlQualifiedName, string?)': no suitable method found to override\r\n..\\Open-XML-SDK\\src\\DocumentFormat.OpenXml\\Schema\\Wordprocessing\\Document.cs(11,41,11,65): error CS0115: 'Document.StrictTranslateAttribute(in OpenXmlQualifiedName, string?)': no suitable method found to override\r\n..\\Open-XML-SDK\\src\\DocumentFormat.OpenXml\\Packaging\\OpenXmlSupportedRelationshipExtensions.cs(56,19,56,46): error CS0246: The type or namespace name 'AlternativeFormatImportPart' could not be found (are you missing a using directive or an assembly reference?)\r\n..\\Open-XML-SDK\\src\\DocumentFormat.OpenXml\\Schema\\Wordprocessing\\Indentation.cs(23,41,23,65): error CS0115: 'Indentation.StrictTranslateAttribute(in OpenXmlQualifiedName, string?)': no suitable method found to override\r\n..\\Open-XML-SDK\\src\\DocumentFormat.OpenXml\\Packaging\\OpenXmlSupportedRelationshipExtensions.cs(67,19,67,46): error CS0246: The type or namespace name 'AlternativeFormatImportPart' could not be found (are you missing a using directive or an assembly reference?)\r\n..\\Open-XML-SDK\\src\\DocumentFormat.OpenXml\\Schema\\Wordprocessing\\Justification.cs(21,41,21,65): error CS0115: 'Justification.StrictTranslateAttribute(in OpenXmlQualifiedName, string?)': no suitable method found to override\r\n..\\Open-XML-SDK\\src\\DocumentFormat.OpenXml\\Packaging\\OpenXmlSupportedRelationshipExtensions.cs(78,19,78,37): error CS0246: The type or namespace name 'CustomPropertyPart' could not be found (are you missing a using directive or an assembly reference?)\r\n..\\Open-XML-SDK\\src\\DocumentFormat.OpenXml\\Packaging\\OpenXmlSupportedRelationshipExtensions.cs(89,19,89,37): error CS0246: The type or namespace name 'CustomPropertyPart' could not be found (are you missing a using directive or an assembly reference?)\r\n..\\Open-XML-SDK\\src\\DocumentFormat.OpenXml\\Schema\\Wordprocessing\\StylePaneSortMethods.cs(30,41,30,65): error CS0115: 'StylePaneSortMethods.StrictTranslateAttribute(in OpenXmlQualifiedName, string?)': no suitable method found to ove\r\n....\r\n...\r\n..\r\n\r\n**Expected behavior**\r\nRepositories should be buildable by default without having to check google, stackoverflow etc.. I dont see anywhere any info related to this in README files.\r\n\r\nI would appreciate if someone can tell me how i should generate these files. There are some file under \"Open-XML-SDK\\generated\" but they are not references fromthe project. Do i have to copy paste these folder to \"Open-XML-SDK\\src\\DocumentFormat.OpenXml\" folder somehow?\r\nThanks\r\n\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2023-10-18T03:30:22.8354104Z","RunDurationInMilliseconds":712}