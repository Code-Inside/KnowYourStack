{"Data":{"Sdk":{"Events":[{"Id":"12553978633","Type":"IssuesEvent","CreatedAt":"2020-06-07T00:10:58","Actor":"github-actions[bot]","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/640","RelatedDescription":"Closed issue \"Spreadsheets: Sophisticated references\" (#640) at OfficeDev/Open-XML-SDK","RelatedBody":"# Feature suggestion\r\n\r\n**Description**\r\n\r\nPlease add alternative coordinates to the hardcoded `CellReference`, or `MergeCell.Reference` etc.\r\n\r\nIdeally, there should be few more types like: \r\n- `ColumnReference { int Index, string ColumnName }` (e.g. `A` as in `A1`).\r\nShould provide easy casting between both `string` and `int`\r\n- `RowReference { int index }` (e.g. `1` as in `A1`)\r\n- `CellReference { ColumnReference Column, RowReference Row }` (e.g. `ABC123`)\r\n- `Range { CellReference Start , CellReference End }` (e.g. A1:A32)\r\nAlso need to accommodate for `A:A`.\r\n\r\nWould you consider that? I'm willing to contribute."},{"Id":"12530836530","Type":"IssuesEvent","CreatedAt":"2020-06-04T13:41:17","Actor":"06needhamt","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/736","RelatedDescription":"Opened issue \"Schema Error : The attribute 'anchory' has invalid value 'line'. The Enumeration constraint failed.\" (#736) at OfficeDev/Open-XML-SDK","RelatedBody":"Is this a:\r\n- [X] Issue with the OpenXml library\r\n- [ ] Question on library usage\r\n\r\n**Description**\r\n\r\nSchema Error : The attribute 'anchory' has invalid value 'line'. The Enumeration constraint failed. On 2 separate valid Office 365 Word & Excel documents.\r\n\r\n**Information**\r\n\r\n- .NET Target: NET 4.6.2\r\n- DocumentFormat.OpenXml Version: 2.11.0\r\n\r\n**Repro**\r\n\r\nValidate the attached files with an ExcelDocumentValidator or WordDocumentValidator.\r\n\r\n**Observed**\r\n\r\nThe following validation error was reported on both files.\r\n\r\nSchema Error : The attribute 'anchory' has invalid value 'line'. The Enumeration constraint failed. \r\n\r\n**Expected**\r\n\r\nBoth files should have been validated successfully without errors.\r\n\r\n[InvalidFiles2.zip](https://github.com/OfficeDev/Open-XML-SDK/files/4730388/InvalidFiles2.zip)\r\n\r\n"},{"Id":"12530770224","Type":"IssuesEvent","CreatedAt":"2020-06-04T13:35:24","Actor":"06needhamt","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/735","RelatedDescription":"Opened issue \"Semantic Error : Attribute 'si' should be present when the value of attribute 't' is 'shared'.\" (#735) at OfficeDev/Open-XML-SDK","RelatedBody":"# Before submitting an issue, please fill this out\r\n\r\nIs this a:\r\n- [X] Issue with the OpenXml library\r\n- [ ] Question on library usage\r\n\r\n**Description**\r\n\r\nSemantic Error : Attribute 'si' should be present when the value of attribute 't' is 'shared'.  On 2 separate valid Office 365 Excel documents.\r\n\r\n**Information**\r\n\r\n- .NET Target: NET 4.6.2\r\n- DocumentFormat.OpenXml Version: 2.11.0\r\n\r\n**Repro**\r\n\r\nValidate the attached files with an ExcelDocumentValidator.\r\n\r\n**Observed**\r\n\r\nThe following validation error was reported on both files.\r\n\r\nSemantic Error : Attribute 'si' should be present when the value of attribute 't' is 'shared'\r\n\r\n**Expected**\r\n\r\nBoth files should have been validated successfully without errors.\r\n\r\n[Invalid Files.zip](https://github.com/OfficeDev/Open-XML-SDK/files/4730346/Invalid.Files.zip)\r\n"},{"Id":"12515267799","Type":"IssuesEvent","CreatedAt":"2020-06-03T07:21:02","Actor":"Szaamaan","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/734","RelatedDescription":"Opened issue \"PEverify issues using 2.10.0+ NuGet versions of OpenXml\" (#734) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nOpenXML NuGet libraries with version 2.10.0 and upwards fail PEverify.\r\n\r\n**Information**\r\n\r\n- DocumentFormat.OpenXml Version: 2.10.0 and upwards\r\n\r\n**Repro**\r\n\r\nRun PEverify (available in Developer Command Prompt for VS, I'm using 2019 version) on DocumentFormat.OpenXML.dll\r\n\r\n**Observed**\r\n\r\n```\r\npeverify DocumentFormat.OpenXml.dll\r\n\r\nMicrosoft (R) .NET Framework PE Verifier.  Version  4.0.30319.0\r\nCopyright (c) Microsoft Corporation.  All rights reserved.\r\n\r\n[IL]: Error: [C:\\Project\\bin\\Debug\\DocumentFormat.OpenXml.dll : DocumentFormat.OpenXml.Framework.ElementPropertyCollection`1[T]::get_Length][offset 0x00000001] Cannot change initonly field outside its .ctor.\r\n[IL]: Error: [C:\\Project\\bin\\Debug\\DocumentFormat.OpenXml.dll : DocumentFormat.OpenXml.Framework.ElementPropertyCollection`1[T]::GetIndex][offset 0x00000044] Cannot change initonly field outside its .ctor.\r\n[IL]: Error: [C:\\Project\\bin\\Debug\\DocumentFormat.OpenXml.dll : DocumentFormat.OpenXml.Framework.ValidatorCollection::GetEnumerator][offset 0x00000001] Cannot change initonly field outside its .ctor.\r\n[IL]: Error: [C:\\Project\\bin\\Debug\\DocumentFormat.OpenXml.dll : DocumentFormat.OpenXml.Framework.ElementPropertyCollection`1+Enumerator[T]::get_Current][offset 0x00000001] Cannot change initonly field outside its .ctor.\r\n[IL]: Error: [C:\\Project\\bin\\Debug\\DocumentFormat.OpenXml.dll : DocumentFormat.OpenXml.Framework.ElementPropertyCollection`1+Enumerator[T]::MoveNext][offset 0x00000012] Cannot change initonly field outside its .ctor.\r\n[IL]: Error: [C:\\Project\\bin\\Debug\\DocumentFormat.OpenXml.dll : DocumentFormat.OpenXml.Framework.ElementPropertyCollection`1+PropertyEntry[T]::get_Property][offset 0x00000001] Cannot change initonly field outside its .ctor.\r\n[IL]: Error: [C:\\Project\\bin\\Debug\\DocumentFormat.OpenXml.dll : DocumentFormat.OpenXml.Framework.ElementPropertyCollection`1+PropertyEntry[T]::get_Value][offset 0x00000001] Cannot change initonly field outside its .ctor.\r\n[IL]: Error: [C:\\Project\\bin\\Debug\\DocumentFormat.OpenXml.dll : DocumentFormat.OpenXml.Framework.ElementPropertyCollection`1+PropertyEntry[T]::SetValue][offset 0x00000001] Cannot change initonly field outside its .ctor.\r\n8 Error(s) Verifying DocumentFormat.OpenXml.dll\r\n\r\n```\r\n\r\nPEverify should not show any errors. While the library works fine in simple console applications / libraries, I found it will fail to work when ILmerged into MS CRM Sandbox (which is running on partial trust towards external DLLs)."},{"Id":"12486173768","Type":"IssuesEvent","CreatedAt":"2020-05-31T00:10:10","Actor":"github-actions[bot]","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/704","RelatedDescription":"Closed issue \"Document error in docs.microsoft.com\" (#704) at OfficeDev/Open-XML-SDK","RelatedBody":"Is this a:\r\n- [x] Issue with the OpenXml library\r\n- [ ] Question on library usage\r\n\r\n**Description**\r\n\r\nThe document in https://docs.microsoft.com/en-us/dotnet/api/documentformat.openxml.drawing.textparagraphpropertiestype?view=openxml-2.8.1 is error\r\n\r\n![图片](https://user-images.githubusercontent.com/16054566/77152366-c93b3b00-6ad2-11ea-84c4-cf4b26022726.png)\r\n\r\n**Observed**\r\n\r\nThe document say that `bullet <a:buNone>` but the buNone is NoBullet\r\n\r\nBut the code is right in schemas_openxmlformats_org_drawingml_2006_main.g.cs\r\n\r\nhttps://github.com/OfficeDev/Open-XML-SDK/blob/8ec381450c76495e5048b7687197f805e56a6d53/src/DocumentFormat.OpenXml/GeneratedCode/schemas_openxmlformats_org_drawingml_2006_main.g.cs#L24511\r\n\r\n**Expected**\r\n\r\nWe should format the document and update the type\r\n"},{"Id":"12481971842","Type":"IssuesEvent","CreatedAt":"2020-05-30T00:41:16","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/628","RelatedDescription":"Reopened issue \"WordprocessingDocument.Open is very slow\" (#628) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\n`WordprocessingDocument.Open` is very very slow when reading big .docx document.\r\ni'm trying to read 10 mb sized .docx document and it takes about 1 minute just to open it.\r\n\r\n**Information**\r\n\r\n- .NET Target:  .NET Core 2.2\r\n- DocumentFormat.OpenXml Version: 2.9.0\r\n\r\n**Repro**\r\n\r\n```csharp\r\nConsole.WriteLine(\"Creating filter\")\r\nusing (var doc = WordprocessingDocument.Open(path, false))\r\n{\r\n        Console.WriteLine(\"Creating BodyReader\");\r\n        _bodyReader = OpenXmlReader.Create(doc.MainDocumentPart.Document);\r\n}\r\n``` \r\n\r\nLink to the file: https://drive.google.com/file/d/1_InQLbZ19KCUgkuePAiLXvUuLcZl6Qu7/view?usp=sharing\r\n\r\n*Uploaded to GitHub*: [10mb_file.docx](https://github.com/OfficeDev/Open-XML-SDK/files/3664838/10mb_file.docx)\r\n\r\n**Observed**\r\n\r\nI put to lines of `Console.WriteLine` so the time between \"Creating filter\" and \"Creating BodyReader\" is about 1 min. It doesn't matter if i opening file from memory stream or just giving it a real path to the file.\r\n\r\n**Expected**\r\n\r\nInstant open expected :)\r\n\r\n"},{"Id":"12481965053","Type":"PullRequestEvent","CreatedAt":"2020-05-30T00:39:15","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/733","RelatedDescription":"Merged pull request \"Move particle declaration and usage to metadata\" (#733) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"12481913816","Type":"PullRequestEvent","CreatedAt":"2020-05-30T00:24:20","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/733","RelatedDescription":"Opened pull request \"Move particle declaration and usage to metadata\" (#733) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"12481859798","Type":"IssuesEvent","CreatedAt":"2020-05-30T00:09:44","Actor":"github-actions[bot]","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/566","RelatedDescription":"Closed issue \"SAX Approach Replace Example\" (#566) at OfficeDev/Open-XML-SDK","RelatedBody":"I'm looking for an example of using the SAX approach (instead of DOM) to open a large file and perform a replace on a given value, then save the file.\r\n\r\nI think this would be a useful addition to the [Documentation](https://docs.microsoft.com/en-gb/office/open-xml/open-xml-sdk).\r\n\r\nHow to: Search and replace text in a document part (Open XML SDK)\r\nhttps://docs.microsoft.com/en-us/office/open-xml/how-to-search-and-replace-text-in-a-document-part\r\n\r\nThis uses a `Stream`.\r\n\r\nHow to: Parse and read a large spreadsheet document (Open XML SDK)\r\nhttps://docs.microsoft.com/en-us/office/open-xml/how-to-parse-and-read-a-large-spreadsheet\r\n\r\n```csharp\r\n// The SAX approach.\r\nstatic void ReadExcelFileSAX(string fileName)\r\n{\r\n    using (SpreadsheetDocument spreadsheetDocument = SpreadsheetDocument.Open(fileName, false))\r\n    {\r\n        WorkbookPart workbookPart = spreadsheetDocument.WorkbookPart;\r\n        WorksheetPart worksheetPart = workbookPart.WorksheetParts.First();\r\n\r\n        OpenXmlReader reader = OpenXmlReader.Create(worksheetPart);\r\n        string text;\r\n        while (reader.Read())\r\n        {\r\n            if (reader.ElementType == typeof(CellValue))\r\n            {\r\n                text = reader.GetText();\r\n                Console.Write(text + \" \");\r\n            }\r\n        }\r\n        Console.WriteLine();\r\n        Console.ReadKey();\r\n    }\r\n}\r\n```\r\n\r\n---\r\n\r\nIf I read in the \"text\" and wish to replace this:\r\n\r\n```csharp\r\nusing (WordprocessingDocument wordDoc = WordprocessingDocument.Open(filePath, true))\r\n{\r\n    Document document = wordDoc.MainDocumentPart.Document;\r\n    OpenXmlReader reader = OpenXmlReader.Create(document);\r\n    while (reader.Read())\r\n    {\r\n        //OpenXmlElement element = reader.LoadCurrentElement();\r\n        //text = element.InnerText;\r\n        text = reader.GetText();\r\n    }\r\n}\r\n```\r\n\r\n`OpenXmlWriter` expects an `OpenXmlPart` or `Stream` when you create it.\r\n\r\n```csharp\r\nOpenXmlWriter writer = OpenXmlWriter.Create(#);\r\nwriter.WriteStartElement(reader);\r\nwriter.WriteElement(#);\r\nwriter.WriteEndElement();\r\nwriter.Close();\r\n```\r\n\r\nWhat is the supported approach/method for this?\r\n\r\nUsing the DOM approach on large files can cause memory exceptions.\r\n\r\n---\r\n\r\nThere are a number of blog posts documenting how to use the `OpenXmlWriter` but this is for creating new files or adding new elements to an existing file, not updating existing data.\r\n\r\n**Parsing and Reading Large Excel Files with the Open XML SDK**\r\nhttp://blogs.msdn.com/b/brian_jones/archive/2010/05/27/parsing-and-reading-large-excel-files-with-the-open-xml-sdk.aspx [Dead Link]\r\nhttps://web.archive.org/web/20151205145806/http://blogs.msdn.com/b/brian_jones/archive/2010/05/27/parsing-and-reading-large-excel-files-with-the-open-xml-sdk.aspx\r\n\r\n**Writing Large Excel Files with the Open XML SDK**\r\nhttp://blogs.msdn.com/b/brian_jones/archive/2010/06/22/writing-large-excel-files-with-the-open-xml-sdk.aspx [Dead Link]\r\nhttps://web.archive.org/web/20160216062257/http://blogs.msdn.com/b/brian_jones/archive/2010/06/22/writing-large-excel-files-with-the-open-xml-sdk.aspx\r\n\r\n**Performance issue while reading/writing large excel files using OpenXML SDK**\r\nhttp://tech-turf.blogspot.com/2015/10/performance-issue-while-readingwriting.html\r\n\r\n**How to read and write Excel cells with OpenXML and C#**\r\nhttp://fczaja.blogspot.com/2013/05/how-to-read-and-write-excel-cells-with.html\r\n\r\n**How to properly use OpenXmlWriter to write large Excel files**\r\nhttp://polymathprogrammer.com/2012/08/06/how-to-properly-use-openxmlwriter-to-write-large-excel-files/"},{"Id":"12481494586","Type":"PullRequestEvent","CreatedAt":"2020-05-29T22:45:47","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/732","RelatedDescription":"Merged pull request \"Remove attribute base from validators\" (#732) at OfficeDev/Open-XML-SDK","RelatedBody":"Validators are no longer attributes and thus do not need to derive from System.Attribute"},{"Id":"12481369009","Type":"PullRequestEvent","CreatedAt":"2020-05-29T22:26:36","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/732","RelatedDescription":"Opened pull request \"Remove attribute base from validators\" (#732) at OfficeDev/Open-XML-SDK","RelatedBody":"Validators are no longer attributes and thus do not need to derive from System.Attribute"}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2020-06-07T05:30:44.6481719Z","RunDurationInMilliseconds":1165}