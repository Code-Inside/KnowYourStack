{"Data":{"Sdk":{"Events":[{"Id":"12991466987","Type":"IssuesEvent","CreatedAt":"2020-07-23T03:42:53","Actor":"lindexi","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/759","RelatedDescription":"Closed issue \"AttributeCollection's IsEmpty will alway be false\" (#759) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nThe IsEmpty property in AttributeCollection will always be false, because the `_data` is never been null\r\n\r\nAs the Constructor code says, we will set the `_data` field a not null value\r\n\r\nhttps://github.com/OfficeDev/Open-XML-SDK/blob/0977a9430407115ff9ed149f60496fbb2688b5e5/src/DocumentFormat.OpenXml/Framework/Metadata/AttributeCollection.cs#L15-L27\r\n\r\nAnd the `IsEmpty` property will be false only when the `_data` is null\r\n\r\nhttps://github.com/OfficeDev/Open-XML-SDK/blob/0977a9430407115ff9ed149f60496fbb2688b5e5/src/DocumentFormat.OpenXml/Framework/Metadata/AttributeCollection.cs#L29\r\n\r\n\r\n\r\n"},{"Id":"12990823555","Type":"PullRequestEvent","CreatedAt":"2020-07-23T01:22:18","Actor":"lindexi","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/781","RelatedDescription":"Closed pull request \"Fix the IsEmpty Property\" (#781) at OfficeDev/Open-XML-SDK","RelatedBody":"The _data is never null\r\n\r\nsee https://github.com/OfficeDev/Open-XML-SDK/issues/759"},{"Id":"12990669658","Type":"PullRequestEvent","CreatedAt":"2020-07-23T00:49:02","Actor":"lindexi","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/781","RelatedDescription":"Opened pull request \"Fix the IsEmpty Property\" (#781) at OfficeDev/Open-XML-SDK","RelatedBody":"The _data is never null\r\n\r\nsee https://github.com/OfficeDev/Open-XML-SDK/issues/759"},{"Id":"12973368108","Type":"IssuesEvent","CreatedAt":"2020-07-21T13:57:06","Actor":"rmboggs","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/780","RelatedDescription":"Opened issue \"OnOffOnlyValues Enum may be missing values\" (#780) at OfficeDev/Open-XML-SDK","RelatedBody":"# Before submitting an issue, please fill this out\r\n\r\nIs this a:\r\n- [X] Issue with the OpenXml library\r\n- [ ] Question on library usage\r\n\r\n**Description**\r\n\r\nThe DocumentFormat.OpenXml.WordProcessing.OnOffOnlyValues enum only contains values `On` and `Off` but if I am reading the ECMA-376 standard correctly, properties with this value type may contain values `On`, `Off`, `0`, `1`, `true`, and `false`.  When values, such as true or false, are present for an xml attribute for this type, the `Value` property of the `EnumValue<OnOffOnlyType>` object throws a `System.FormatException` exception.\r\n\r\nThe attached document contains an element `/document[0]/tbl[0]/tr[0]/trPr[0]/cantSplit` which contains the property in question.\r\n[file-sample_500kB.docx](https://github.com/OfficeDev/Open-XML-SDK/files/4953640/file-sample_500kB.docx)\r\n\r\nI'm open to discuss this further but it doesn't seem like this should be the correct behavior.\r\n\r\n**Information**\r\n\r\n- .NET Target: .NET Framework 4.7.2\r\n- DocumentFormat.OpenXml Version: 2.11.3\r\n\r\n**Repro**\r\n\r\n```csharp\r\nusing DocumentFormat.OpenXml.Packaging;\r\nusing DocumentFormat.OpenXml.Wordprocessing;\r\nusing System;\r\nusing System.IO;\r\nusing System.Linq;\r\n\r\nnamespace ConsoleApp2\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            // Change  to path of test file\r\n            const string pathToFile = @\"C:\\path\\to\\file-sample_500kB.docx\";\r\n\r\n            using (var f = new FileStream(pathToFile, FileMode.Open))\r\n            {\r\n                using (var docx = WordprocessingDocument.Open(f, false))\r\n                {\r\n                    var sample = docx.MainDocumentPart.Document.Descendants<CantSplit>().FirstOrDefault();\r\n\r\n                    if (sample != null)\r\n                    {\r\n                        var val = sample.Val;\r\n                        Console.WriteLine($\"Sample has value: {val.HasValue}\");\r\n                        Console.WriteLine($\"Sample inner text: {val.InnerText}\");\r\n\r\n                        try\r\n                        {\r\n                            Console.WriteLine($\"Sample value: {val.Value}\");\r\n                        }\r\n                        catch (Exception x)\r\n                        {\r\n                            Console.WriteLine($\"Sample value threw {x.GetType().Name}\");\r\n                            Console.WriteLine($\"Sample value exception message: {x.Message}\");\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            Console.WriteLine(\"Press any key to quit\");\r\n            Console.ReadKey(true);\r\n        }\r\n    }\r\n}\r\n\r\n``` \r\n\r\n**Observed**\r\n\r\n```\r\nSample has value: False\r\nSample inner text: false\r\nSample value threw FormatException\r\nSample value exception message: The text value is not a valid enumeration value.\r\nPress any key to quit\r\n```\r\n\r\n**Expected**\r\n\r\n```\r\nSample has value: True\r\nSample inner text: false\r\nSample value: DocumentFormat.OpenXml.Wordprocessing.OnOffOnlyValues.False or DocumentFormat.OpenXml.Wordprocessing.OnOffOnlyValues.Off\r\nPress any key to quit\r\n```\r\n"},{"Id":"12966773911","Type":"PullRequestEvent","CreatedAt":"2020-07-21T01:28:33","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/776","RelatedDescription":"Merged pull request \"Add more projects to Related Tools\" (#776) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"12966119435","Type":"PullRequestEvent","CreatedAt":"2020-07-20T23:58:31","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/778","RelatedDescription":"Closed pull request \"Use WindowsBase instead of package on .NET Framework\" (#778) at OfficeDev/Open-XML-SDK","RelatedBody":"Currently we're using System.IO.Packaging NuGet package on .NET 4.6+,\r\nwhen this isn't really necessary. This ends up just being a bunch of\r\ntype forwarders that people don't really need on .NET Framework. We can\r\njust directly reference WindowsBase instead.\r\n\r\nThis should be a non-breaking change as all the type-forwarders would be\r\nbrought in by another dependency if they require them."},{"Id":"12966084164","Type":"PullRequestEvent","CreatedAt":"2020-07-20T23:53:14","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/779","RelatedDescription":"Merged pull request \"Make element validator cancellation token use default\" (#779) at OfficeDev/Open-XML-SDK","RelatedBody":"Missed this in #773"},{"Id":"12966080095","Type":"PullRequestEvent","CreatedAt":"2020-07-20T23:52:38","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/779","RelatedDescription":"Opened pull request \"Make element validator cancellation token use default\" (#779) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"12966039905","Type":"PullRequestEvent","CreatedAt":"2020-07-20T23:46:36","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/778","RelatedDescription":"Opened pull request \"Use WindowsBase instead of package on .NET Framework\" (#778) at OfficeDev/Open-XML-SDK","RelatedBody":"Currently we're using System.IO.Packaging NuGet package on .NET 4.6+,\r\nwhen this isn't really necessary. This ends up just being a bunch of\r\ntype forwarders that people don't really need on .NET Framework. We can\r\njust directly reference WindowsBase instead.\r\n\r\nThis should be a non-breaking change as all the type-forwarders would be\r\nbrought in by another dependency if they require them."},{"Id":"12965812723","Type":"PullRequestEvent","CreatedAt":"2020-07-20T23:13:45","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/773","RelatedDescription":"Merged pull request \"Add CancellationToken to validation methods\" (#773) at OfficeDev/Open-XML-SDK","RelatedBody":"Fixes #761"},{"Id":"12965812678","Type":"IssuesEvent","CreatedAt":"2020-07-20T23:13:44","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/761","RelatedDescription":"Closed issue \"Integrate cancellation tokens in validation system\" (#761) at OfficeDev/Open-XML-SDK","RelatedBody":"There is a setting for max errors, but sometimes the validation can just take a long time. While we can explore perf issues, it would also be good to be able to cancel it using CancellationToken so all the built in ways to manage workflows with them can be used.\r\n\r\nInspired by #760 "}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2020-07-23T05:30:45.3631787Z","RunDurationInMilliseconds":958}