{"Data":{"Sdk":{"Events":[{"Id":"45061647345","Type":"IssuesEvent","CreatedAt":"2024-12-24T13:01:42","Actor":"ChandrasekarML","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1853","RelatedDescription":"Opened issue \"Bug with Open XML SDK\" (#1853) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\nhow to track changes in a word document with inserted and deleted word by word along with color Inserted updating track changes, but deleted not updating track changes.\n\nSample code:\npublic void TrackChangesInWord(string filePath, string newText, string oldText)\n{\n    using (WordprocessingDocument wordDoc = WordprocessingDocument.Open(filePath, true))\n    {\n        var mainPart = wordDoc.MainDocumentPart;\n        var body = mainPart.Document.Body;\n\n        foreach (var paragraph in body.Elements<Paragraph>())\n        {\n            var runs = paragraph.Elements<Run>().ToList();\n            string combinedText = string.Join(\"\", runs.Select(r => r.GetFirstChild<Text>()?.Text ?? string.Empty));\n\n            if (combinedText.Contains(oldText))\n            {\n                // Find the start index of the old text\n                int startIndex = combinedText.IndexOf(oldText);\n\n                // Remove all existing runs\n                foreach (var run in runs)\n                {\n                    run.Remove();\n                }\n\n                // Add text before the old word\n                if (startIndex > 0)\n                {\n                    string beforeText = combinedText.Substring(0, startIndex);\n                    paragraph.AppendChild(new Run(new Text(beforeText)));\n                }\n\n                // Add deleted text as a tracked change\n                var deletedRun = new DeletedRun\n                {\n                    Author = \"AuthorName\",\n                    Date = DateTime.Now\n                };\n                var deletedTextRun = new Run\n                {\n                    RunProperties = new RunProperties(new Color { Val = \"FF0000\" }) // Red for deleted\n                };\n                deletedTextRun.AppendChild(new Text(oldText));\n                deletedRun.AppendChild(deletedTextRun);\n                paragraph.AppendChild(deletedRun);\n\n                // Add inserted text as a tracked change\n                var insertedRun = new InsertedRun\n                {\n                    Author = \"AuthorName\",\n                    Date = DateTime.Now\n                };\n                var insertedTextRun = new Run\n                {\n                    RunProperties = new RunProperties(new Color { Val = \"00FF00\" }) // Green for inserted\n                };\n                insertedTextRun.AppendChild(new Text(newText));\n                insertedRun.AppendChild(insertedTextRun);\n                paragraph.AppendChild(insertedRun);\n\n                // Add text after the old word\n                string afterText = combinedText.Substring(startIndex + oldText.Length);\n                if (!string.IsNullOrEmpty(afterText))\n                {\n                    paragraph.AppendChild(new Run(new Text(afterText)));\n                }\n            }\n        }\n\n        mainPart.Document.Save();\n    }\n}\n\n"},{"Id":"45044443715","Type":"PullRequestEvent","CreatedAt":"2024-12-23T19:33:30","Actor":"dependabot[bot]","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1852","RelatedDescription":"Opened pull request \"Bump danielpalme/ReportGenerator-GitHub-Action from 5.4.1 to 5.4.2\" (#1852) at dotnet/Open-XML-SDK","RelatedBody":"Bumps [danielpalme/ReportGenerator-GitHub-Action](https://github.com/danielpalme/reportgenerator-github-action) from 5.4.1 to 5.4.2.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/danielpalme/reportgenerator-github-action/releases\">danielpalme/ReportGenerator-GitHub-Action's releases</a>.</em></p>\n<blockquote>\n<h2>5.4.2</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/danielpalme/reportgenerator-github-action/issues/700\">#700</a> Fixed handling of .netconfig files (sourceDirectories, reportTypes, plugins, assemblyFilters, etc.)</li>\n<li><a href=\"https://redirect.github.com/danielpalme/reportgenerator-github-action/issues/716\">#716</a> Increased precision of percentages in CsvSummary and TextSummary reports (contributed by <a href=\"https://github.com/tomap\"><code>@​tomap</code></a>)</li>\n<li><a href=\"https://redirect.github.com/danielpalme/reportgenerator-github-action/issues/719\">#719</a> Fixed badges in MarkdownAssembliesSummary report</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/danielpalme/ReportGenerator-GitHub-Action/commit/94ea1575fb6924d22f2639373a5c4d945fdbe178\"><code>94ea157</code></a> 5.4.2</li>\n<li>See full diff in <a href=\"https://github.com/danielpalme/reportgenerator-github-action/compare/5.4.1...5.4.2\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=danielpalme/ReportGenerator-GitHub-Action&package-manager=github_actions&previous-version=5.4.1&new-version=5.4.2)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>"},{"Id":"44975200869","Type":"IssuesEvent","CreatedAt":"2024-12-20T09:19:49","Actor":"Kezzya","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1851","RelatedDescription":"Opened issue \"On desktop Word file is corrupted, but I can open it online or with Libre Office or WPS...\" (#1851) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\nHello, I create generation of word file from dotx template. But in desktop Word Office app I can't open file, but with another ways, I can open (WPS, Libre Office, Google Docs, Online Office)\nWhat the problem? Is this because I clone dotx file and generate docx?\n\n`public ActionResult GenerateDocument(int reportViewId, int rid)\n{\n\n    string templatePath = Server.MapPath(\"~/Content/templates/word/Template.dotx\");\n    if (RepView.WordTemplateFileName != null)\n    {\n        templatePath = Server.MapPath(\"\\\\UserFiles\\\\ReportViewWordTemplates\\\\\" + RepView.WordTemplateFileId);\n    }\n    string outputPath = Server.MapPath(\"~/generated.docx\");\n\n    using (MemoryStream memoryStream = new MemoryStream())\n    {\n        try\n        {\n            using (WordprocessingDocument wordDoc = WordprocessingDocument.Open(templatePath, false))\n            {\n                wordDoc.Clone(memoryStream);\n            }\n\n        }\n        catch\n        {\n            using (WordprocessingDocument wordDoc = WordprocessingDocument.Open(templatePath, false))\n            {\n                wordDoc.Clone(memoryStream);\n            }\n        }\n\n        using (WordprocessingDocument generatedDoc = WordprocessingDocument.Open(memoryStream, true))\n        {\n            memoryStream.Position = 0;\n            var mainDocumentPart = generatedDoc.MainDocumentPart;\n\n            var body = mainDocumentPart.Document.Body;\n\n            var headerParts = generatedDoc.MainDocumentPart.HeaderParts;\n            var footerParts = generatedDoc.MainDocumentPart.FooterParts;\n\n            foreach (var parts in headerParts)\n            {\n                foreach (var currentText in parts.RootElement.Descendants<DocumentFormat.OpenXml.Wordprocessing.Text>())\n                {\n                    currentText.Text = currentText.Text.Replace(\"Header\", header);\n                }\n            }\n            foreach (var parts in footerParts)\n            {\n                foreach (var currentText in parts.RootElement.Descendants<DocumentFormat.OpenXml.Wordprocessing.Text>())\n                {\n                    currentText.Text = currentText.Text.Replace(\"Bottom\", bottom);\n                }\n            }\n\n            ImagePart imgp = mainDocumentPart.AddImagePart(ImagePartType.Png);\n            var textElements = body.Descendants<Text>()\n          .Where(t => t.Text.Contains(\"text\"))\n          .FirstOrDefault();\n   \n            var run = new Run(new Text());\n            if (textElements != null)\n            {\n                run = textElements.Parent as Run;\n            }\n           \n            foreach (var item in headers)\n            {\n                if (blocks.Where(p => p.DocumentConstructorHeaderId == item.DocumentConstructorHeaderId).Count() != 0)\n                {\n                    \n                    if (item.SizeTitle > 1)\n                    {\n                        AddHeading(body, item.Title, 1, mainDocumentPart.StyleDefinitionsPart);\n                    }\n                    else\n                    {\n                        AddHeading(body, item.Title, 2, mainDocumentPart.StyleDefinitionsPart);\n                    }\n                }\n\n                foreach (var list in newBlocks.Where(p => p.DocumentConstructorHeaderId == item.DocumentConstructorHeaderId).OrderBy(p => p.Npp).ToList())\n                {\n                    if (list.ImageData != null)\n                    {\n                        using (var imageStream = new MemoryStream(list.ImageData))\n                        {\n                            imgp.FeedData(imageStream);\n                        }\n\n                        AddImageToBody(mainDocumentPart, list.ImageData);\n                    }\n                    /*if (list.Content != null)\n                    {\n                        AddHeading(body, item.Title, 1, mainDocumentPart.StyleDefinitionsPart);\n                    }*/\n\n                    Paragraph para = body.AppendChild(new Paragraph());\n\n                    if (textElements != null)\n                    {\n                        // Извлекаем свойства Run\n                        var runProperties = run.RunProperties?.CloneNode(true);\n                        var newRun = new Run(new Text(list.Content));\n                        newRun.PrependChild(runProperties);\n                        para.AppendChild(newRun);\n                    }\n                    else\n                    {\n                        para.AppendChild(new Run(new Text(list.Content)));\n                    }\n                    ReplaceText(body, \"text\", \"\");\n                }\n            }\n            generatedDoc.Close();\n        }\n        return File(memoryStream.ToArray(), \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\", \"generated.docx\");\n    }\n}`\n\n"},{"Id":"44888863445","Type":"IssuesEvent","CreatedAt":"2024-12-18T00:54:51","Actor":"markholst","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1487","RelatedDescription":"Closed issue \"System.IO.Packaging.PackageDigitalSignatureManager relies on obsolete Package object constructors\" (#1487) at dotnet/Open-XML-SDK","RelatedBody":"Hi there - we've just stumbled across this one and would appreciate your assistance.\r\n\r\nWe are using System.IO.Packaging.PackageDigitalSignatureManager, which only takes a Package object. Are you also working with the relevant team to get this upgraded?\r\n\r\n_Originally posted by @markholst in https://github.com/dotnet/Open-XML-SDK/discussions/1414#discussioncomment-6191287_"},{"Id":"44841659528","Type":"PullRequestEvent","CreatedAt":"2024-12-16T20:09:15","Actor":"dependabot[bot]","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1850","RelatedDescription":"Opened pull request \"Bump xunit.runner.visualstudio from 2.8.2 to 3.0.0\" (#1850) at dotnet/Open-XML-SDK","RelatedBody":"Bumps [xunit.runner.visualstudio](https://github.com/xunit/visualstudio.xunit) from 2.8.2 to 3.0.0.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/xunit/visualstudio.xunit/commit/e341b939fe3d484f0561a44597cfff4b3fba9465\"><code>e341b93</code></a> v3.0.0</li>\n<li><a href=\"https://github.com/xunit/visualstudio.xunit/commit/56f71f3842c6b424473e1663dd7c815c20f36bdc\"><code>56f71f3</code></a> Second location where PreEnumerateTheories needs to be turned off for <a href=\"https://redirect.github.com/xunit/visualstudio.xunit/issues/426\">#426</a></li>\n<li><a href=\"https://github.com/xunit/visualstudio.xunit/commit/d94ab8875fd1883b1dc3cad1d0b67720d4e22222\"><code>d94ab88</code></a> <a href=\"https://redirect.github.com/xunit/visualstudio.xunit/issues/426\">#426</a>: Can't filter by traits on ITheoryDataRow</li>\n<li><a href=\"https://github.com/xunit/visualstudio.xunit/commit/9154f3ffa002ce582633f9e1997f2d3ad9620966\"><code>9154f3f</code></a> Latest dependencies</li>\n<li><a href=\"https://github.com/xunit/visualstudio.xunit/commit/feff8e290c1f51b4455502287d81f24d8570af4c\"><code>feff8e2</code></a> Stick to .NET SDK 8</li>\n<li><a href=\"https://github.com/xunit/visualstudio.xunit/commit/62ae086cb53576c39c60a0018769233061c3525c\"><code>62ae086</code></a> Conditional verbosity when packing packages based on the .NET SDK version</li>\n<li><a href=\"https://github.com/xunit/visualstudio.xunit/commit/a7f5dc0cba14433ce2134e02963560304765e8a1\"><code>a7f5dc0</code></a> Latest dependencies</li>\n<li><a href=\"https://github.com/xunit/visualstudio.xunit/commit/d5676ac3ac8b2fed71947137cfb0e8796168b9d3\"><code>d5676ac</code></a> <a href=\"https://redirect.github.com/xunit/visualstudio.xunit/issues/422\">#422</a>: Add XunitSkipReason property to VSTest test case</li>\n<li><a href=\"https://github.com/xunit/visualstudio.xunit/commit/3d3b2413c471774d2df97276c2c4388f83d7b1fe\"><code>3d3b241</code></a> Back-fill tests for VsDiscoverySink</li>\n<li><a href=\"https://github.com/xunit/visualstudio.xunit/commit/e2d5be27c4c4b9349e32794090d46630fbd3425d\"><code>e2d5be2</code></a> Enable nullable in test project</li>\n<li>Additional commits viewable in <a href=\"https://github.com/xunit/visualstudio.xunit/compare/2.8.2...3.0.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=xunit.runner.visualstudio&package-manager=nuget&previous-version=2.8.2&new-version=3.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>"},{"Id":"44835179974","Type":"IssuesEvent","CreatedAt":"2024-12-16T16:39:25","Actor":"AlfredHellstern","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1520","RelatedDescription":"Closed issue \"Open XML SDK v3: struct IdPartPair\" (#1520) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nIt would be nice to mention all v3-breaking changes in the release notes clearly.\r\n\r\n**Screenshots**\r\nBug with the fix.\r\n![image](https://github.com/dotnet/Open-XML-SDK/assets/1197905/d00a99ed-b473-45c0-9781-635d8d883864)\r\n\r\n**To Reproduce**\r\n`IdPartPait` has been converted from class to struct in v3 (most likely for performance reasons).\r\n\r\nThis change silently broke code that worked fine before and checked the value with `null`.\r\nAfter the upgrade, the code compile without errors, but some branches became unreachable and app/library no longer works as expected.\r\n\r\n**Observed behavior**\r\nNo release notes yet ;)\r\n\r\n**Expected behavior**\r\nMention such cases inside the Breaking Changes section in released notes.\r\n\r\n**Additional context**\r\nI believe that it will be helpful for apps and library authors who decide to migrate to v3.\r\nFound [during migrating](https://github.com/sergey-tihon/Clippit/pull/63) my fork of PowerTools to SDK v3"},{"Id":"44834969678","Type":"IssuesEvent","CreatedAt":"2024-12-16T16:33:30","Actor":"AlfredHellstern","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1578","RelatedDescription":"Closed issue \"Enable AOT builds again with .NET 8 toolchain\" (#1578) at dotnet/Open-XML-SDK","RelatedBody":"When upgrading to .NET 8 toolchain (#1554), the AOT builds started failing and need to be investigated"},{"Id":"44834905115","Type":"IssuesEvent","CreatedAt":"2024-12-16T16:31:42","Actor":"AlfredHellstern","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1636","RelatedDescription":"Closed issue \"Bug with Open XML SDK v3.0 and excels with malformed hyperlinks \" (#1636) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nGetting the root element of a `WorkbookPart` of an excel with invalid hyperlinks causes the following exception:\r\n```\r\nSystem.ObjectDisposedException: Cannot access a closed stream.\r\nObject name: 'DeflateStream'.\r\n   at System.IO.Compression.DeflateStream.<EnsureNotDisposed>g__ThrowStreamClosedException|42_0()\r\n   at System.IO.Compression.DeflateStream.ReadCore(Span`1 buffer)\r\n   at System.IO.Compression.DeflateStream.Read(Byte[] buffer, Int32 offset, Int32 count)\r\n   at System.IO.Packaging.ZipWrappingStream.Read(Byte[] buffer, Int32 offset, Int32 count)\r\n   at System.Xml.XmlTextReaderImpl.InitStreamInput(Uri baseUri, String baseUriStr, Stream stream, Byte[] bytes, Int32 byteCount, Encoding encoding)\r\n   at System.Xml.XmlTextReaderImpl.FinishInitStream()\r\n   at System.Xml.XmlTextReaderImpl..ctor(Stream stream, Byte[] bytes, Int32 byteCount, XmlReaderSettings settings, Uri baseUri, String baseUriStr, XmlParserContext context, Boolean closeInput)\r\n   at System.Xml.XmlReaderSettings.CreateReader(Stream input, Uri baseUri, String baseUriString, XmlParserContext inputContext)\r\n   at System.Xml.XmlReader.Create(Stream input, XmlReaderSettings settings)\r\n   at DocumentFormat.OpenXml.XmlConvertingReaderFactory.Create(Stream partStream, IOpenXmlNamespaceResolver resolver, XmlReaderSettings settings, Boolean strictRelationshipFound)\r\n   at DocumentFormat.OpenXml.OpenXmlPartRootElement.LoadFromPart(OpenXmlPart openXmlPart, Stream partStream)\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPart.LoadDomTree[T]()\r\n   at DocumentFormat.OpenXml.Packaging.WorkbookPart.get_Workbook()\r\n   at DocumentFormat.OpenXml.Packaging.WorkbookPart.get_PartRootElement()\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPart.get_RootElement()\r\n``` \r\nOpening the .xlsx file with excel, selecting all columns and clicking `remove hyperlinks` solves the problem.\r\n\r\n**To Reproduce**\r\n```\r\nclass Program\r\n{\r\n    private static async Task Main(string[] args)\r\n    {\r\n        var excelParser = new ExcelParser(NullLogger<ExcelParser>.Instance);\r\n        var excels = Directory.GetFiles(@\"Excels\", \"*.xlsx\");\r\n        await using var stream = File.OpenRead(excels.FirstOrDefault()); // this is the excel (believe me ;))\r\n        await excelParser.ToolsFromExcelTask(stream);\r\n    }\r\n}\r\n\r\n\r\n  public ValueTask<ICollection<ToolModel>> ToolsFromExcelTask(Stream excelStream)\r\n    {\r\n        using var spreadSheetDocument = SpreadsheetDocument.Open(excelStream, false);\r\n        var workbookPart =  spreadSheetDocument.WorkbookPart;\r\n\r\n\r\n        /*\r\n         *  Bug lies somewhere in the following line, it throws an ObjectDisposedException\r\n         *  on some excels (not all)\r\n         */\r\n        var sheets = workbookPart.RootElement.GetFirstChild<Sheets>().Elements<Sheet>().ToList();\r\n      \r\n        var sharedStringTable = workbookPart.SharedStringTablePart?.SharedStringTable;\r\n        ........\r\n}\r\n```\r\n\r\nSteps to reproduce the behavior:\r\nMove the excel with the malformed hyperlinks to \"Excels\".\r\nRun the following code.\r\nSee error.\r\nNote: in practice, i tried it on many files, with some it worked others not so much...\r\nwith 3-4 files it seems to always happen with the same ones, when I tested with many many files I couldn't really point it to specific files.\r\n\r\n**Observed behavior**\r\nThrew an error.\r\n\r\n**Expected behavior**\r\nNot to.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: MacOs 14.2.1\r\n - Office version 16.80\r\n - .NET Target: .NET Core 8 (tried with 6 also)\r\n - DocumentFormat.OpenXml Version: 3.0.0\r\n\r\n**Additional context**\r\nWhen I ran the same program with OpenXml 2.2 it threw UriMalformed (or something like that) and crashed at \r\n`using var spreadSheetDocument = SpreadsheetDocument.Open(excelStream, false);`\r\n\r\nOpening the .xlsx file with excel, selecting all columns and clicking `remove hyperlinks` solves the problem.\r\nthe hyperlinks are in the format of `som_e_thing_@LIK_th is` \r\nI can't attach the files I tested with, sorry.\r\n\r\nMight be related to Add better support for malformed URIs #1322"},{"Id":"44834829713","Type":"IssuesEvent","CreatedAt":"2024-12-16T16:29:38","Actor":"AlfredHellstern","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1613","RelatedDescription":"Closed issue \"Data validations with formula to another sheet won't get returned\" (#1613) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nif data validation is a formula to another sheet, then it won't get returned.\r\n\r\n**Screenshots**\r\n![image](https://github.com/dotnet/Open-XML-SDK/assets/1965782/a690f445-500d-4425-b6a9-68b724661229)\r\n(Image taken from [NPOI issue #498](https://github.com/nissl-lab/npoi/issues/498).)\r\n\r\n\r\n**To Reproduce**\r\nUsing a minimal XLSX file [`external_data_validation_sample.xlsx`](https://github.com/nissl-lab/npoi/files/6514071/external_data_validation_sample.xlsx) (again, taken from [NPOI issue #498](https://github.com/nissl-lab/npoi/issues/498)) and the following F# code in `dotnet fsi`:\r\n\r\n```\r\n#r \"nuget: DocumentFormat.OpenXml, 3.0.0\";;\r\n\r\nopen DocumentFormat.OpenXml\r\nopen DocumentFormat.OpenXml.Packaging\r\nopen DocumentFormat.OpenXml.Spreadsheet\r\n\r\nlet GetDataValidationsByIndex (filePath: string) (sheetIndex: int) =\r\n    use spreadsheet = SpreadsheetDocument.Open(filePath, false)\r\n    let workbookPart = spreadsheet.WorkbookPart\r\n    let sheets = workbookPart.Workbook.Descendants<Sheet>() |> Seq.toArray\r\n\r\n    if sheetIndex >= 0 && sheetIndex < sheets.Length then\r\n        let sheet = sheets.[sheetIndex]\r\n        let worksheetPart = workbookPart.GetPartById(sheet.Id) :?> WorksheetPart\r\n        let dataValidations = worksheetPart.Worksheet.Descendants<DataValidations>()\r\n\r\n        let validations =\r\n            dataValidations\r\n            |> Seq.collect (fun dv ->\r\n                dv.Descendants<DataValidation>()\r\n                |> Seq.map (fun validation ->\r\n                    // Extract data validation details as needed\r\n                    validation\r\n                ))\r\n            |> Seq.toList\r\n\r\n        Some validations\r\n    else\r\n        printfn \"Sheet index '%d' out of range\" sheetIndex\r\n        None\r\n;;\r\n\r\nGetDataValidationsByIndex \"external_data_validation_sample.xlsx\" 0 |> Option.get |> List.map (fun v -> v.PromptTitle);;\r\nGetDataValidationsByIndex \"external_data_validation_sample.xlsx\" 1 |> Option.get |> List.map (fun v -> v.PromptTitle);;\r\n```\r\n\r\n**Observed behavior**\r\nBoth queries above will return empty lists.\r\n\r\n**Expected behavior**\r\nExpected to return data validations with formulas to other sheets (e.g., `=Sheet2!$B$2:$B$5`). (Tested the above function on an internal XLSX file as well, and all validations get returned, except the ones that refer to sheets in their formulas.)\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Windows, Mac\r\n - .NET Target: .NET Core 8.0\r\n - DocumentFormat.OpenXml Version: 3.0.0"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-12-26T03:30:24.5181268Z","RunDurationInMilliseconds":673}