{"Data":{"Sdk":{"Events":[{"Id":"19209941969","Type":"PullRequestEvent","CreatedAt":"2021-12-07T00:07:36","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1089","RelatedDescription":"Merged pull request \"Add source generator for features\" (#1089) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"19209559536","Type":"PullRequestEvent","CreatedAt":"2021-12-06T23:28:18","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1089","RelatedDescription":"Opened pull request \"Add source generator for features\" (#1089) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"19188234817","Type":"PullRequestEvent","CreatedAt":"2021-12-05T15:15:46","Actor":"ThomasBarnekow","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1088","RelatedDescription":"Opened pull request \"Enhance Linq feature\" (#1088) at OfficeDev/Open-XML-SDK","RelatedBody":"This PR enhances the `RootXElementFeature`, `IPartRootXElementFeature`, and `OpenXmlLinqExtensions` by adding the capability to work with both `XElement` and `XDocument` representations. It adds the following properties and extension methods to the public API:\r\n\r\n```csharp\r\npublic interface IPartRootXElementFeature\r\n{\r\n    XDocument Document { get; set; }\r\n}\r\n\r\npublic static class OpenXmlLinqExtensions\r\n{\r\n    XDocument GetXDocument(this OpenXmlPart part);\r\n    void SetXDocument(this OpenXmlPart part, XDocument document);\r\n    void SaveXDocument(this OpenXmlPart part);\r\n}\r\n```\r\n\r\nThe `SaveXDocument` extension method is only added for naming consistency with the `GetXDocument` and `SetXDocument` methods. It has the exact same effect as calling `part.SaveXElement()`.\r\n\r\nCalling `part.GetXElement()` has the same effect as `part.GetXDocument().Root`. Calling `part.SetXElement(element)` either adds or replaces the `XDocument` instance's root element. In other words, we can freely use either subset of Get, Set, and Save methods or mix and match as desired.\r\n\r\nDepending on the use case, the `GetXDocument` method has the benefit of always returning the same instance (unless you change it via `SetXDocument`). For example, you can get the instance from an initially empty part and change the root `XElement` via `SetXElement`. Further, changing and saving the strongly typed `OpenXmlPartRootElement` will only remove the `XDocument` instance's root element but not replace the instance. Thus, you could hold on to that instance in your code if desired.\r\n\r\n`XDocument` representations are extensively used by the [Open XML PowerTools](https://github.com/EricWhiteDev/Open-Xml-PowerTools). To leverage the Linq feature in the Open XML PowerTools without lots of breaking changes, we need the ability to get, set, and save `XDocument` representations as well."}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2021-12-07T05:30:33.0011385Z","RunDurationInMilliseconds":963}