{"Data":{"Sdk":{"Events":[{"Id":"19320965601","Type":"PullRequestEvent","CreatedAt":"2021-12-14T05:28:50","Actor":"tomjebo","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1092","RelatedDescription":"Merged pull request \"Add namespace generator to SDK\" (#1092) at OfficeDev/Open-XML-SDK","RelatedBody":"This adds a source generator that takes a set of namespaces and the associated version it appeared in and generates methods that augments OpenXmlNamespaceResolver to understand these versions.\r\n\r\nAn additional class is also added to handle backwards compatibility usage of namespace ids, but doesn't add any new namespace ids for future ids. This is added purely to retain any support needed for users that may have stored the id instead of the prefix.\r\n"},{"Id":"19317817177","Type":"PullRequestEvent","CreatedAt":"2021-12-13T23:45:26","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1091","RelatedDescription":"Merged pull request \"Fix and enhance Linq feature\" (#1091) at OfficeDev/Open-XML-SDK","RelatedBody":"Fix and enhance Linq feature\r\n\r\nThis PR makes the following changes:\r\n\r\n- Make interface internal\r\n- Fix Save() method by not saving if XDocument.Root is null\r\n- Add IsRootXElementLoaded(this OpenXmlPart part) extension method\r\n- Rename interfaces and classes\r\n- Add unit tests\r\n\r\nThe new naming is based on the OpenXmlPartRootElement class. We are essentially dealing with XElement representations of OpenXmlPartRootElement instances that can be accessed directly via GetXElement() or indirectly via the containing XDocument that can be accessed via GetXDocument()."},{"Id":"19317677351","Type":"IssuesEvent","CreatedAt":"2021-12-13T23:30:59","Actor":"Yanal-Yves","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1093","RelatedDescription":"Opened issue \"Excel workbook generated by Open-XML-SDK are converted to XLSM by Google spread sheet.\" (#1093) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\nFirst I would like to thank you for this library.\r\n\r\nI am posting here a wired behavior when generating an Excel file with Open XML SDK and uploading the file to Google spreadsheet. I believe this is an oddity caused by a bug in Open XML SDK. This is why I am posting here. I don't think this is a question about using Open XML SDK. But in case I'am wrong, I have also posted to [Stack overflow](https://stackoverflow.com/questions/70319867/avoid-google-spreadsheet-to-convert-an-xlsx-file-created-by-open-xml-sdk-to-xlsm) : \r\n\r\nSo I am using the [Open XML SDK 2.14.0][1] to create Excel files.\r\nIf I upload the XLSX file produced by Open XML SDK to Google Spreadsheet, it opens the file as an XLSX file but if I make any change in the spreadsheet then Google Spreadsheet changes the file type to XLSM. If I generate an empty workbook from MS Excel (Office 360) or Libre Office Calc I don't have this issue : Google Spreadsheet will not change the file type if I change the data.\r\n\r\n**Information**\r\n\r\n- .NET Target: .net core 3.1\r\n- DocumentFormat.OpenXml Version: (ie 2.14.0)\r\n\r\n**Repro**\r\n\r\nThe minimalistic code bellow ([found in the official documentation][2]) reproduces the issue. It generate a `foo.xlsx` file in `C:\\Temp`.\r\n\r\n``` c#\r\nvar filepath = @\"C:\\temp\\foo.xlsx\";\r\n\r\n// Create a spreadsheet document by supplying the filepath.\r\n// By default, AutoSave = true, Editable = true, and Type = xlsx.\r\nSpreadsheetDocument spreadsheetDocument = SpreadsheetDocument.Create(filepath, SpreadsheetDocumentType.Workbook);\r\n\r\n// Add a WorkbookPart to the document.\r\nWorkbookPart workbookpart = spreadsheetDocument.AddWorkbookPart();\r\nworkbookpart.Workbook = new Workbook();\r\n\r\n// Add a WorksheetPart to the WorkbookPart.\r\nWorksheetPart worksheetPart = workbookpart.AddNewPart<WorksheetPart>();\r\nworksheetPart.Worksheet = new Worksheet(new SheetData());\r\n\r\n// Add Sheets to the Workbook.\r\nSheets sheets = spreadsheetDocument.WorkbookPart.Workbook.AppendChild<Sheets>(new Sheets());\r\n\r\n// Append a new worksheet and associate it with the workbook.\r\nSheet sheet = new Sheet() { Id = spreadsheetDocument.WorkbookPart.GetIdOfPart(worksheetPart), SheetId = 1, Name = \"mySheet\" };\r\nsheets.Append(sheet);\r\n\r\nworkbookpart.Workbook.Save();\r\n\r\n// Close the document.\r\nspreadsheetDocument.Close();\r\n\r\n```\r\n\r\n**Observed**\r\n\r\nIf I upload the generated file to Google Spreadsheet, it shows this is an XLSX file.\r\n\r\n[![enter image description here][3]][3]\r\n\r\nBut if I change anything in the workbook then Google Spreadsheet changes the file type to XLSM.\r\n\r\n[![enter image description here][4]][4]\r\n\r\n**Expected**\r\n\r\nOpen XML SDK generates the correct XLSX file so that Google spreadsheet does not change to XLSM when saving the first time.\r\n\r\n\r\n  [1]: https://www.nuget.org/packages/DocumentFormat.OpenXml/2.14.0\r\n  [2]: https://docs.microsoft.com/en-us/office/open-xml/structure-of-a-spreadsheetml-document#open-xml-sdk-code-example\r\n  [3]: https://i.stack.imgur.com/NjOi8.png\r\n  [4]: https://i.stack.imgur.com/s6szj.png\r\n"},{"Id":"19313103953","Type":"PullRequestEvent","CreatedAt":"2021-12-13T18:14:17","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1092","RelatedDescription":"Opened pull request \"Add namespace generator to SDK\" (#1092) at OfficeDev/Open-XML-SDK","RelatedBody":"This adds a source generator that takes a set of namespaces and the associated version it appeared in and generates methods that augments OpenXmlNamespaceResolver to understand these versions.\r\n\r\nAn additional class is also added to handle backwards compatibility usage of namespace ids, but doesn't add any new namespace ids for future ids. This is added purely to retain any support needed for users that may have stored the id instead of the prefix.\r\n"},{"Id":"19241126183","Type":"PullRequestEvent","CreatedAt":"2021-12-08T15:47:16","Actor":"ThomasBarnekow","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1091","RelatedDescription":"Opened pull request \"Fix and enhance Linq feature\" (#1091) at OfficeDev/Open-XML-SDK","RelatedBody":"Fix and enhance Linq feature\r\n\r\nThis PR makes the following changes:\r\n\r\n- Make interface internal\r\n- Fix Save() method by not saving if XDocument.Root is null\r\n- Add IsRootXElementLoaded(this OpenXmlPart part) extension method\r\n- Rename interfaces and classes\r\n- Add unit tests\r\n\r\nThe new naming is based on the OpenXmlPartRootElement class. We are essentially dealing with XElement representations of OpenXmlPartRootElement instances that can be accessed directly via GetXElement() or indirectly via the containing XDocument that can be accessed via GetXDocument()."}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2021-12-14T05:30:32.9890853Z","RunDurationInMilliseconds":853}