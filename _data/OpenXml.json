{"Data":{"Sdk":{"Events":[{"Id":"20300801097","Type":"PullRequestEvent","CreatedAt":"2022-02-17T01:22:52","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1125","RelatedDescription":"Opened pull request \"Add data files for code generation\" (#1125) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"20295872285","Type":"PullRequestEvent","CreatedAt":"2022-02-16T19:07:42","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1124","RelatedDescription":"Merged pull request \"Use additional files for data\" (#1124) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"20280031316","Type":"PullRequestEvent","CreatedAt":"2022-02-16T02:28:37","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1124","RelatedDescription":"Opened pull request \"Use additional files for data\" (#1124) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"20278757086","Type":"PullRequestEvent","CreatedAt":"2022-02-16T00:35:56","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1118","RelatedDescription":"Merged pull request \"Remove extra usings in generated code\" (#1118) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"20227962505","Type":"PullRequestEvent","CreatedAt":"2022-02-13T12:02:19","Actor":"ThomasBarnekow","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1123","RelatedDescription":"Opened pull request \"Add TypeScript code generator\" (#1123) at OfficeDev/Open-XML-SDK","RelatedBody":"This PR adds a TypeScript code generator to the `DocumentFormat.OpenXml.Generator.Linq` project. This lets us generate namespace-related classes for the \"LINQ to XML way\" for both C# and TypeScript.\r\n\r\nThe TypeScript classes can be used with the [@openxmldev/linq-to-xml](https://www.npmjs.com/package/@openxmldev/linq-to-xml) NPM package, which also provides the `XNamespace`, `XName`, and `XAttribute` classes required for the generated code.\r\n\r\nIn PowerShell, for example, the generator is invoked as follows to generate C# code (which is the default) in the output directory specified using the required `--outDir` option:\r\n\r\n```ps1\r\n.\\DocumentFormat.OpenXml.Generator.Linq.exe --outDir .\\path\\to\\output\\directory\r\n```\r\n\r\nTo generate TypeScript code instead, the `--ts` option is used:\r\n\r\n```ps1\r\n.\\DocumentFormat.OpenXml.Generator.Linq.exe --outDir .\\path\\to\\output\\directory --ts\r\n```\r\n\r\nIn case no options are specified, you'll see an error message with the description of the options:\r\n\r\n```\r\nERROR(S):\r\n  Required option 'outDir' is missing.\r\n\r\n  --outDir     Required. Specifies the output directory.\r\n\r\n  --ts         (Default: false) Selects TypeScript instead of C# as the output language.\r\n\r\n  --help       Display this help screen.\r\n\r\n  --version    Display version information.\r\n```\r\n\r\nAt the moment, the TypeScript generator does not generate code for all classes but selects the more frequently used namespaces (from my point of view). If there is better data available to make a more informed selection, I'd be open to using that instead. The idea is to limit the size of the NPM package by not including namespace-related classes that are not used in practice.\r\n\r\nThe TypeScript generator emits static attributes because a benchmark performed with @mikeebowen demonstrated that this leads to the best run-time performance (see [benchmark results](https://github.com/mikeebowen/getter-vs-property-benchmark/issues/1))."},{"Id":"20175106074","Type":"IssuesEvent","CreatedAt":"2022-02-10T13:54:20","Actor":"f1nzer","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1122","RelatedDescription":"Opened issue \"SlidePart.Slide: how to unload memory\" (#1122) at OfficeDev/Open-XML-SDK","RelatedBody":"Hi,\r\nI'm reading large pptx files slide-by-slide with limited RAM (azure functions), so after using SlidePart.Slide property the slide is loaded into memory and will be unloaded only when the pptx will be unloaded which means that memory consumption is growing with every slide.\r\n\r\nFor now I'm using internal `OpenXmlPart.SetPartRootElementToNull()` via reflection to release the memory. \r\nhttps://github.com/OfficeDev/Open-XML-SDK/blob/8a29bec8be9221e6b2eefb962f41b95b8391a773/src/DocumentFormat.OpenXml/Packaging/OpenXmlPart.cs#L608\r\n\r\nIs there an official way to unload memory when it's not needed anymore? Or maybe it's possible to mark this method as public?\r\n\r\nThanks.\r\n\r\n_Originally posted by @f1nzer in https://github.com/OfficeDev/Open-XML-SDK/discussions/1121_"}],"ResultType":"GitHubEvent"}},"RunOn":"2022-02-17T03:30:26.4636223Z","RunDurationInMilliseconds":660}