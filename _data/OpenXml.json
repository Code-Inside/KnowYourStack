{"Data":{"Sdk":{"Events":[{"Id":"19615270607","Type":"PullRequestEvent","CreatedAt":"2022-01-06T20:14:26","Actor":"tomjebo","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1107","RelatedDescription":"Closed pull request \"add core.xml part to sml create\" (#1107) at OfficeDev/Open-XML-SDK","RelatedBody":"this adds a core.xml part to the package when calling SpreadsheetDocument Create(). This works around a problem with Google Sheets per #1093 "},{"Id":"19612395207","Type":"PullRequestEvent","CreatedAt":"2022-01-06T16:48:19","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1111","RelatedDescription":"Merged pull request \"Add ability to generate delegated features\" (#1111) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"19601416269","Type":"PullRequestEvent","CreatedAt":"2022-01-06T02:05:36","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1111","RelatedDescription":"Opened pull request \"Add ability to generate delegated features\" (#1111) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"19601404826","Type":"PullRequestEvent","CreatedAt":"2022-01-06T02:04:23","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1110","RelatedDescription":"Merged pull request \"Move element metadata to be stored in default features\" (#1110) at OfficeDev/Open-XML-SDK","RelatedBody":"This change enables the data used for element metadata to be rooted in the default features so if that is unloaded the memory is freed up.\r\n"},{"Id":"19601154543","Type":"PullRequestEvent","CreatedAt":"2022-01-06T01:36:45","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1110","RelatedDescription":"Opened pull request \"Move element metadata to be stored in default features\" (#1110) at OfficeDev/Open-XML-SDK","RelatedBody":"This change enables the data used for element metadata to be rooted in the default features so if that is unloaded the memory is freed up.\r\n"},{"Id":"19595571466","Type":"IssuesEvent","CreatedAt":"2022-01-05T17:25:39","Actor":"maloo","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1109","RelatedDescription":"Opened issue \"Spreadsheet.Open crash in Kestrel web server (.NET 6) since synch reads are not allowed\" (#1109) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nWhen opening an excel document in .NET 6 (Kestrel web server) I get an exception that synch reads are not allowed. And this is for a good reason, no libraries should force user to do blocking operations because it limits where the library can be used (on a web server in this case).\r\n\r\n**Information**\r\n\r\n- .NET Target: .NET 6\r\n- DocumentFormat.OpenXml Version: 2.15\r\n\r\n**Repro**\r\n\r\nCall Spreadsheet.Load from a ASP.NET Core Action or in Blazor Server callback.\r\n\r\n**Observed**\r\n\r\nSystem.NotSupportedException: Synchronous reads are not supported.\r\n   at Microsoft.AspNetCore.Components.Forms.BrowserFileStream.Read(Byte[] buffer, Int32 offset, Int32 count)\r\n   at System.IO.Stream.CopyTo(Stream destination, Int32 bufferSize)\r\n   at System.IO.Stream.CopyTo(Stream destination)\r\n   at System.IO.Compression.ZipArchive..ctor(Stream stream, ZipArchiveMode mode, Boolean leaveOpen, Encoding entryNameEncoding)\r\n   at System.IO.Packaging.ZipPackage..ctor(Stream s, FileMode packageFileMode, FileAccess packageFileAccess)\r\n   at System.IO.Packaging.Package.Open(Stream stream, FileMode packageMode, FileAccess packageAccess)\r\n   at DocumentFormat.OpenXml.Packaging.PackageLoader.OpenCore(Stream stream, Boolean readWriteMode)\r\n   at DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.Open(Stream stream, Boolean isEditable, OpenSettings openSettings)\r\n   at DocumentFormat.OpenXml.Packaging.SpreadsheetDocument.Open(Stream stream, Boolean isEditable)\r\n\r\n**Expected**\r\n\r\nI would expect there to be a Spreadsheet.OpenAsync or some similar mechanism to prevent blocking IO while loading the document."}],"ResultType":"GitHubEvent"}},"RunOn":"2022-01-10T05:30:27.6654879Z","RunDurationInMilliseconds":820}