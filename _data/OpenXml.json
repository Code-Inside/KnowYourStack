{"Data":{"Sdk":{"Events":[{"Id":"47902485732","Type":"PullRequestEvent","CreatedAt":"2025-03-24T15:44:02","Actor":"mikeebowen","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1898","RelatedDescription":"Merged pull request \"Update GitVersion.yml\" (#1898) at dotnet/Open-XML-SDK","RelatedBody":"bump to next minor version"},{"Id":"47902309873","Type":"IssuesEvent","CreatedAt":"2025-03-24T15:40:10","Actor":"mkaszewiak","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1875","RelatedDescription":"Closed issue \"Powerpoint: slide transition after x milliseconds causing audio not to be played AND transition to be stalled\" (#1875) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\nMy code repeatedly works on the same powerpoint file.\n\n-My code attaches MP3 audio\n-My code attaches playfrom timing to play automatically\n-My code attaches transition to next slide after x milliseconds \n\nThe transition seems to cause the XML to be malformed. After saving the resulting file in PowerPoint, closing the file and reopening the timing and transition are not executed anymore as if they do not exist.\n\n**To Reproduce**\n```\npublic static void AddTransitionAfterMilliseconds(SlidePart slidePart, long milliseconds)\n{\n    // Create a new Transition element.\n    Transition transition = new Transition();\n    transition.AdvanceAfterTime = milliseconds.ToString(); // time in milliseconds\n    transition.AdvanceOnClick = false; // do not allow click to advance\n\n    CommonSlideData commonSlideData = slidePart.Slide.CommonSlideData!;\n\n    // Check for an existing transition and remove it if present.\n    var transitions = commonSlideData.Elements<Transition>().ToList();\n    foreach (var tr in transitions)\n    {\n        tr.Remove();\n    }\n\n    transitions = slidePart.Slide.Elements<Transition>().ToList();\n    foreach (var tr in transitions)\n    {\n        tr.Remove();\n    }\n\n    var alternateContents = slidePart.Slide.Descendants<AlternateContent>().ToList();\n\n    foreach (var altContent in alternateContents)\n    {\n        transitions = altContent.Elements<Transition>().ToList();\n\n        foreach (var tr in transitions)\n        {\n            tr.Remove();\n        }\n    }\n\n    // Append the transition element to CommonSlideData.\n    commonSlideData.Append(transition);\n\n    slidePart.Slide.Save();\n}\n```\n\nSteps to reproduce the behavior:\n1. apply the transition with the previous code\n\n**Observed behavior**\nStructure of slide.xml is malformed\n\n**Expected behavior**\nAfter opening and saving with newest PowerPoint (this causes structural changes) the audio are still played and transition executed.\n\n**Desktop (please complete the following information):**\n - OS: [e.g. Windows]\n - Office version: Microsoft® PowerPoint® für Microsoft 365 MSO (Version 2501 Build 16.0.18429.20132) 64 Bit \n - .NET Target: .NET core 8.0.13\n - DocumentFormat.OpenXml Version: 3.2\n"},{"Id":"47837853658","Type":"IssuesEvent","CreatedAt":"2025-03-21T20:42:02","Actor":"mikeebowen","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1193","RelatedDescription":"Closed issue \"Feature request: SAX Approach addition of ReadLastChild() function for OpenXmlReader\" (#1193) at dotnet/Open-XML-SDK","RelatedBody":"**Suggestion**\r\nThere are three SAX options to read from a spreadsheet document e.g.\r\n- Read()\r\n- ReadFirstChild()\r\n- ReadNextSibling()\r\n\r\nPlease can this be extended to include **ReadLastChild()** which will move the SAX reader straight to the Last Child Element of the node?\r\n\r\n**Current situation**\r\nWhen using the DOM approach we can easily sort by Descending or take the LastChild from the element collection.\r\n\r\nWith the SAX approach, the reader must iterate through all preceeding Cells or Rows using reader.ReadNextSibling and checking if reader.IsEndElement before the last element can be loaded using the reader.LoadCurrentElement();\r\n\r\nIt would be faster if when ReadLastChild() is used the OpenXmlReader's position is moved immediately to the last child Element of the node whether it is a Row or Cell type.\r\n\r\nThe SAX reader is used for large Excel document's and this will reduce processing speed in these instances.\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2025-03-25T03:30:22.9772652Z","RunDurationInMilliseconds":785}