{"Data":{"Sdk":{"Events":[{"Id":"34570842660","Type":"IssuesEvent","CreatedAt":"2024-01-04T12:29:34","Actor":"ilayna","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1636","RelatedDescription":"Opened issue \"Bug with Open XML SDK v3.0 \" (#1636) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nGetting the root element of a `WorkbookPart` of an excel with invalid hyperlinks causes the following exception:\r\n```\r\nSystem.ObjectDisposedException: Cannot access a closed stream.\r\nObject name: 'DeflateStream'.\r\n   at System.IO.Compression.DeflateStream.<EnsureNotDisposed>g__ThrowStreamClosedException|42_0()\r\n   at System.IO.Compression.DeflateStream.ReadCore(Span`1 buffer)\r\n   at System.IO.Compression.DeflateStream.Read(Byte[] buffer, Int32 offset, Int32 count)\r\n   at System.IO.Packaging.ZipWrappingStream.Read(Byte[] buffer, Int32 offset, Int32 count)\r\n   at System.Xml.XmlTextReaderImpl.InitStreamInput(Uri baseUri, String baseUriStr, Stream stream, Byte[] bytes, Int32 byteCount, Encoding encoding)\r\n   at System.Xml.XmlTextReaderImpl.FinishInitStream()\r\n   at System.Xml.XmlTextReaderImpl..ctor(Stream stream, Byte[] bytes, Int32 byteCount, XmlReaderSettings settings, Uri baseUri, String baseUriStr, XmlParserContext context, Boolean closeInput)\r\n   at System.Xml.XmlReaderSettings.CreateReader(Stream input, Uri baseUri, String baseUriString, XmlParserContext inputContext)\r\n   at System.Xml.XmlReader.Create(Stream input, XmlReaderSettings settings)\r\n   at DocumentFormat.OpenXml.XmlConvertingReaderFactory.Create(Stream partStream, IOpenXmlNamespaceResolver resolver, XmlReaderSettings settings, Boolean strictRelationshipFound)\r\n   at DocumentFormat.OpenXml.OpenXmlPartRootElement.LoadFromPart(OpenXmlPart openXmlPart, Stream partStream)\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPart.LoadDomTree[T]()\r\n   at DocumentFormat.OpenXml.Packaging.WorkbookPart.get_Workbook()\r\n   at DocumentFormat.OpenXml.Packaging.WorkbookPart.get_PartRootElement()\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPart.get_RootElement()\r\n``` \r\nOpening the .xlsx file with excel, selecting all columns and clicking `remove hyperlinks` solves the problem.\r\n\r\n**To Reproduce**\r\n```\r\nclass Program\r\n{\r\n    private static async Task Main(string[] args)\r\n    {\r\n        var excelParser = new ExcelParser(NullLogger<ExcelParser>.Instance);\r\n        var excels = Directory.GetFiles(@\"Excels\", \"*.xlsx\");\r\n        await using var stream = File.OpenRead(excels.FirstOrDefault()); // this is the excel (believe me ;))\r\n        await excelParser.ToolsFromExcelTask(stream);\r\n    }\r\n}\r\n\r\n\r\n  public ValueTask<ICollection<ToolModel>> ToolsFromExcelTask(Stream excelStream)\r\n    {\r\n        using var spreadSheetDocument = SpreadsheetDocument.Open(excelStream, false);\r\n        var workbookPart =  spreadSheetDocument.WorkbookPart;\r\n\r\n\r\n        /*\r\n         *  Bug lies somewhere in the following line, it throws an ObjectDisposedException\r\n         *  on some excels (not all)\r\n         */\r\n        var sheets = workbookPart.RootElement.GetFirstChild<Sheets>().Elements<Sheet>().ToList();\r\n      \r\n        var sharedStringTable = workbookPart.SharedStringTablePart?.SharedStringTable;\r\n        ........\r\n}\r\n```\r\n\r\nSteps to reproduce the behavior:\r\nMove the excel with the malformed hyperlinks to \"Excels\".\r\nRun the following code.\r\nSee error.\r\nNote: in practice, i tried it on many files, with some it worked others not so much...\r\nwith 3-4 files it seems to always happen with the same ones, when I tested with many many files I couldn't really point it to specific files.\r\n\r\n**Observed behavior**\r\nThrew an error.\r\n\r\n**Expected behavior**\r\nNot to.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: MacOs 14.2.1\r\n - Office version 16.80\r\n - .NET Target: .NET Core 8 (tried with 6 also)\r\n - DocumentFormat.OpenXml Version: 3.0.0\r\n\r\n**Additional context**\r\nWhen I ran the same program with OpenXml 2.2 it threw UriMalformed (or something like that) and crashed at \r\n`using var spreadSheetDocument = SpreadsheetDocument.Open(excelStream, false);`\r\n\r\nOpening the .xlsx file with excel, selecting all columns and clicking `remove hyperlinks` solves the problem.\r\nthe hyperlinks are in the format of `som_e_thing_@LIK_th is` \r\nI can't attach the files I tested with, sorry.\r\n\r\nMight be related to Add better support for malformed URIs #1322"},{"Id":"34410397501","Type":"IssuesEvent","CreatedAt":"2023-12-26T10:33:56","Actor":"kunalchandratre1","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1635","RelatedDescription":"Opened issue \"Read sensitivity labelled documents\" (#1635) at dotnet/Open-XML-SDK","RelatedBody":"Add support for reading sensitivity labelled documents. As of today if document is labelled by sensitivity then openXML does not work. Also there is no workaround DLLs other than interop DLLs."},{"Id":"34408832187","Type":"IssuesEvent","CreatedAt":"2023-12-26T08:49:48","Actor":"yatintripathi","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1634","RelatedDescription":"Opened issue \"Issue with OpenXml WmlComparer when comparing documents with different numbering styles, Bug with Open XML SDK\" (#1634) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nI'm currently using the OpenXml library in C# to compare two Word documents utilizing the WmlComparer.Compare method. The comparison works well in most cases, but I'm encountering an issue specifically related to legal style numbering.\r\n\r\nWhen comparing two documents, if one contains legal style numbering and the other doesn't, the resulting compared document loses the legal numbering entirely, without even maintaining a strikethrough format.\r\n\r\nI've already implemented the comparison using WmlComparer.Compare and set the necessary comparison settings. However, I'm struggling to retain the legal style numbering or apply strikethrough formatting to the mismatched numbering when generating the compared document.\r\n\r\nFor more Reference :- [](https://stackoverflow.com/questions/77697178/issue-with-openxml-wmlcomparer-when-comparing-documents-with-different-numbering?noredirect=1#comment136981416_77697178)\r\n\r\n**Screenshots**\r\n**These are how the documents look :-** \r\n![Screenshot (55)](https://github.com/dotnet/Open-XML-SDK/assets/108450640/66c5d736-3b39-4215-8064-1731a668946d)\r\n![Screenshot (57)](https://github.com/dotnet/Open-XML-SDK/assets/108450640/27d0211c-4dba-46a9-a51c-e4933e3e950a)\r\n\r\n**Microsoft Word's inherent working functionality :-**\r\n![Screenshot (58)](https://github.com/dotnet/Open-XML-SDK/assets/108450640/e2dad431-87c5-4cb9-8d5f-a1070462fef5)\r\n\r\n**OpenXML SDK WmlComparer working functionality :-**\r\n![Screenshot (60)](https://github.com/dotnet/Open-XML-SDK/assets/108450640/f117a26b-e587-4fbf-acc2-8f3fe138b825)\r\n\r\nYo will see differences between Microsoft Word's inherent working functionality and OpenXML SDK WmlComparer working functionality.\r\n\r\n****To Reproduce****\r\nCreate two docs in similar manner as in the screenshots of how the documents look and compare it via WmlComparer code you will be able to reproduce the Observed behavior and to reproduce the Expected behavior compare the two docs via compare functionality that word provides.\r\n \r\nSteps to [Right-of-First-Refusal-Agreement - 18th December, 2023 16.42.49.75 -7eeef2fbc8e54396acb1d950b7e.docx](https://github.com/dotnet/Open-XML-SDK/files/13770078/Right-of-First-Refusal-Agreement.-.18th.December.2023.16.42.49.75.-7eeef2fbc8e54396acb1d950b7e.docx) the behavior:\r\n1. Go to WORD.\r\n2. Click on Review Tab and click on compare and compare two word documents , one with Legal Numbering System and one without it and compare.\r\n3. You will see inherent working functionality of compare \r\n4. To generate Legal numbering in a word document\r\n5. Click on Multilevel list on the taskbar of word\r\n6. Click on  Define new multilevel list\r\n7. Click on more\r\n8. On the right hand side you will see a check box of Legal Numbering Style\r\n9. Check it and press OK.\r\n\r\n**Observed behavior**\r\nAs you can see from the screenshot above \"OpenXML SDK WmlComparer working functionality\" legal numbering is not retained.\r\n\r\n**Expected behavior**\r\nAs you can see from the screenshot above \"Microsoft Word's inherent working functionality\" legal numbering is retained.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Windows\r\n - Office version : Version 2311 (Build 17029.20108)\r\n - .NET Target:  .NET Core Version 7.0.102\r\n - DocumentFormat.OpenXml Version: 2.20.0\r\n - OpenXMLPowerTools Version : 4.5.3.2\r\n\r\n**These are the two sample documents using which you can repro the issue :-**\r\n[Right-of-First-Refusal-Agreement - 18th December, 2023 16.42.49.75 -7eeef2fbc8e54396acb1d950b7e.docx](https://github.com/dotnet/Open-XML-SDK/files/13770088/Right-of-First-Refusal-Agreement.-.18th.December.2023.16.42.49.75.-7eeef2fbc8e54396acb1d950b7e.docx)\r\n[Right-of-First-Refusal-Agreement - 18th December, 2023 16.40.39.42 -5c51a8aa25f3430ca6770c32b8f.docx](https://github.com/dotnet/Open-XML-SDK/files/13770090/Right-of-First-Refusal-Agreement.-.18th.December.2023.16.40.39.42.-5c51a8aa25f3430ca6770c32b8f.docx)\r\n\r\n**Below is the code :-**\r\n\r\n```\r\nWmlComparerSettings settings = new WmlComparerSettings\r\n            {\r\n                AuthorForRevisions = author,\r\n                DetailThreshold = 0\r\n            };\r\n            var originalDoc = new WmlDocument(originalPath.ToString());\r\n            var revisedDoc = new WmlDocument(revisedPath.ToString());\r\n\r\n            WmlDocument comparedDoc = WmlComparer.Compare(originalDoc, revisedDoc, settings);\r\n```\r\n\r\n@EricWhiteDev \r\n@ThomasBarnekow \r\n@twsouthwick "},{"Id":"34402166102","Type":"PullRequestEvent","CreatedAt":"2023-12-25T20:05:08","Actor":"dependabot[bot]","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1632","RelatedDescription":"Opened pull request \"Bump xunit from 2.6.3 to 2.6.4\" (#1632) at dotnet/Open-XML-SDK","RelatedBody":"Bumps [xunit](https://github.com/xunit/xunit) from 2.6.3 to 2.6.4.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/xunit/xunit/commit/0f87ff772a29aa3d4ef7cb5b34a8aeeaab2c2a28\"><code>0f87ff7</code></a> v2.6.4</li>\n<li><a href=\"https://github.com/xunit/xunit/commit/e466a7c13337a93c07da6b3480f6637c005ccdc9\"><code>e466a7c</code></a> Unit tests for <a href=\"https://redirect.github.com/xunit/xunit/issues/2850\">#2850</a> (v2)</li>\n<li><a href=\"https://github.com/xunit/xunit/commit/0cc026be3bc3a9f97dda99194b72e13f597e791b\"><code>0cc026b</code></a> Add KeyValuePair tests with collections and IEquatable objects in the key slot</li>\n<li><a href=\"https://github.com/xunit/xunit/commit/c729d7fd799c7db658b2a0f7bb6c27a9ef252934\"><code>c729d7f</code></a> Add collection dictionary tests for IEquatable&lt;&gt; objects in the value slot</li>\n<li><a href=\"https://github.com/xunit/xunit/commit/0eb76d2b780819865a3291d24d4eced6ed744002\"><code>0eb76d2</code></a> Attempt to fix race condition reported in <a href=\"https://github.com/visualstudio.xunit/issues/issues/396\">visualstudio.xunit/issues#396</a></li>\n<li><a href=\"https://github.com/xunit/xunit/commit/348c56ddd3e877e821e9a9f59918a1fbbab3ad45\"><code>348c56d</code></a> Bump up to v2.6.4-pre</li>\n<li>See full diff in <a href=\"https://github.com/xunit/xunit/compare/2.6.3...2.6.4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=xunit&package-manager=nuget&previous-version=2.6.3&new-version=2.6.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>"},{"Id":"34358833961","Type":"IssuesEvent","CreatedAt":"2023-12-22T08:36:34","Actor":"Matesax","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1631","RelatedDescription":"Opened issue \"Bug with Open XML SDK -> Managed Debugging Assistant 'FatalExecutionEngineError' \" (#1631) at dotnet/Open-XML-SDK","RelatedBody":"Hi,\r\nI do not know if there is hidden P-invoke in the Spreadsheet -> so that interface change manage to collapse OpenXml DLL, or if that is invoke inside OpenXml, that is crashing. So I am reporting this bug both in the OpenXml forum and SpreadsheetLight forum. The bug is very simple to reproduce -> problem is SpreadsheetLight Pivot reading with OpenXml version 3.0.0:\r\n\r\n`Managed Debugging Assistant 'FatalExecutionEngineError' `\r\n`Název chybujícího modulu: clr.dll, verze: 4.8.9181.0, časové razítko: 0x64b8594f\r\nKód výjimky: 0xc0000005\r\nPosun chyby: 0x0001cca0\r\nID chybujícího procesu: 0x9b28\r\nČas spuštění chybující aplikace: 0x01da34a81bac4265\r\nCesta k chybujícímu modulu: C:\\Windows\\Microsoft.NET\\Framework\\v4.0.30319\\clr.dll`\r\n\r\nWith OpenXml version 2.20.0 there is no issue.\r\n\r\nThis crash is happening on the SLDocument creation from the stream:\r\n\r\n`using (Stream inputStream = fsHelper.GetStream())\r\n{\r\n    Stopwatch sw;\r\n    using (MemoryStream ms = new MemoryStream())\r\n    {\r\n        inputStream.CopyTo(ms);\r\n        // load excel, and create a new workbook\r\n        using (SLDocument sl = new SLDocument(ms))`\r\n\r\nMy project is basic .NET Framework 4.7 DLL with the Spreadsheet reading class. I have upgraded OpenXml based on Nuget recommendation -> and that was a mistake. :)"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-01-05T03:30:21.3810729Z","RunDurationInMilliseconds":675}