{"Data":{"Sdk":{"Events":[{"Id":"35505044592","Type":"IssuesEvent","CreatedAt":"2024-02-08T06:54:19","Actor":"IrakliLomidze","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1663","RelatedDescription":"Opened issue \"This is might a bit off-topic, but let's discuss the transition of Open XML SDK to Rust\" (#1663) at dotnet/Open-XML-SDK","RelatedBody":"**This is might a bit off-topic, but let's discuss the transition of Open XML SDK to Rust**\r\nRust became a good enough language for development and backend services. And It is fast.\r\n\r\n\r\n\r\nSo, I put forward the idea of transitioning Open XML SDK to Rust.\r\n\r\nThere might be pros and cons, but I'd like to hear the community and contributors' responses on that.\r\n\r\n"},{"Id":"35502139856","Type":"IssuesEvent","CreatedAt":"2024-02-08T03:51:33","Actor":"tvbishan","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1661","RelatedDescription":"Closed issue \"Bug with Open XML SDK 3.0.1 : Spreadsheet Document Chart Scheme Color incorrect\" (#1661) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nWhen I generate a .xlsx file which has a Chart with DocumentFormat.OpenXml 2.17.1, bars/lines of the chart have multiple colors. But with the DocumentFormat.OpenXml 3.0.1, only Blue color is there.\r\n\r\n**Screenshots**\r\n![image](https://github.com/dotnet/Open-XML-SDK/assets/12027448/0a23fbd2-898e-47fe-b3a1-ffd410c0085b)\r\n![image](https://github.com/dotnet/Open-XML-SDK/assets/12027448/8a2edded-3e65-46b3-91fb-06bb5711dff5)\r\n![image](https://github.com/dotnet/Open-XML-SDK/assets/12027448/897a1d12-f129-4b4a-be18-9b873551e020)\r\n\r\n**Expected behavior**\r\nDefault behavior of having bars/lines of the chart with multiple colors .\r\n\r\n**Desktop:**\r\n - OS: Window 10 / Alpine Linux 3.19\r\n - .NET Target: .NET Framework 4.7.2 / .NET Core 6\r\n - DocumentFormat.OpenXml Version: 3.0.1\r\n"},{"Id":"35454375674","Type":"IssuesEvent","CreatedAt":"2024-02-06T17:57:21","Actor":"jack-edwards-fs","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1662","RelatedDescription":"Opened issue \"Supplying a value for EmbedRegularFont.FontKey corrupts DOCX output\" (#1662) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nI am attempting to embed TTF fonts in a DOCX file.  In order to be compatible with a third-party library that is able to update the Table of Contents page, it appears I must also provide a value for the `EmbedRegularFont.FontKey` property.  However, supplying a value for the `FontKey` elicits an error from Microsoft Word and the embedded fonts are no longer presented in the application.  The Open XML SDK Productivity tool also elicits an error.\r\n\r\nAm I supplying erroneous values for `FontKey`?  Where would I find the correct values?\r\n\r\n**Screenshots**\r\nWord error:\r\n> Word found unreadable content in \"report.docx\". Do you want to recover the contents of this document? If you trust the source of this document, click Yes.\r\n\r\nWord error, after clicking \"Yes\":\r\n> Word experienced an error trying to open the file. Try these suggestions. * Check the file permissions for the document or drive. * Make sure there is sufficient free memory and disk space. * Open the file with the Text Recovery Converter.\r\n\r\nOpen XML SDK 2.5 Productivity Tool for Microsoft Office error:\r\n> Cannot open the file: Specified part does not exist in the package.\r\n\r\n**To Reproduce**\r\n// Please add a self-contained, minimum viable repro of the issue.\r\n// If you require external resources, please provide a gist or GitHub repro\r\n// An Xunit style test is preferred, but a console application would work too.\r\n\r\nSteps to reproduce the behavior:\r\n\r\nUn-comment the line (below) to set the `FontKey`.\r\n\r\n```cs\r\nprivate static async Task GenerateFontPartContent(FontPart fontPart, string path)\r\n{\r\n    var fontPath = Path.Join(assemblyLocation, \"Assets\", \"Fonts\", path);\r\n    await using FileStream fontData = new FileStream(fontPath, FileMode.Open, FileAccess.Read);\r\n    fontPart.FeedData(fontData);\r\n}\r\n\r\nFontTablePart fontTablePart = document.AddNewPart<FontTablePart>(\"rId10\");\r\n\r\nFontPart fontPart9 = fontTablePart.AddNewPart<FontPart>(\"application/vnd.openxmlformats-officedocument.obfuscatedFont\", \"rId9\");\r\n\r\nawait GenerateFontPartContent(fontPart9, \"Manrope-Regular.ttf\");\r\n\r\nFont font7 = new Font(){ Name = \"Manrope\" };\r\nFontCharSet fontCharSet7 = new FontCharSet(){ Val = \"01\" };\r\nFontFamily fontFamily7 = new FontFamily(){ Val = FontFamilyValues.Auto };\r\nPitch pitch7 = new Pitch(){ Val = FontPitchValues.Variable };\r\nEmbedRegularFont embedRegularFont = new EmbedRegularFont() { FontKey = \"{Manrope}\", Id = \"rId9\" };\r\n// embedRegularFont.FontKey = \"{Manrope}\";\r\n\r\nfonts1.Append(font7);\r\n\r\nfontTablePart.Fonts = fonts1;\r\n```\r\n\r\n**Observed behavior**\r\nMicrosoft Word and the Productivity Tool report they cannot open the DOCX file.\r\n\r\nAfter Microsoft Word recovers the file, embedded fonts are no longer presented in the application.\r\n\r\n**Expected behavior**\r\nApplications should open the file without error.  Embedded fonts should continue to be presented.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Windows 10\r\n - Office version: 16.0.17231.20194\r\n - .NET Target: .NET 8.0 ASP.NET\r\n - DocumentFormat.OpenXml Version: 3.0.1\r\n\r\n"},{"Id":"35443364973","Type":"IssuesEvent","CreatedAt":"2024-02-06T12:42:37","Actor":"tvbishan","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1661","RelatedDescription":"Opened issue \"Bug with Open XML SDK 3.0.1 : Spreadsheet Document Chart Scheme Color incorrect\" (#1661) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nWhen I generate a .xlsx file which has a Chart with DocumentFormat.OpenXml 2.17.1, bars/lines of the chart have multiple colors. But with the DocumentFormat.OpenXml 3.0.1, only Blue color is there.\r\n\r\n**Screenshots**\r\n![image](https://github.com/dotnet/Open-XML-SDK/assets/12027448/0a23fbd2-898e-47fe-b3a1-ffd410c0085b)\r\n![image](https://github.com/dotnet/Open-XML-SDK/assets/12027448/8a2edded-3e65-46b3-91fb-06bb5711dff5)\r\n![image](https://github.com/dotnet/Open-XML-SDK/assets/12027448/897a1d12-f129-4b4a-be18-9b873551e020)\r\n\r\n**Expected behavior**\r\nDefault behavior of having bars/lines of the chart with multiple colors .\r\n\r\n**Desktop:**\r\n - OS: Window 10 / Alpine Linux 3.19\r\n - .NET Target: .NET Framework 4.7.2 / .NET Core 6\r\n - DocumentFormat.OpenXml Version: 3.0.1\r\n"},{"Id":"35419964703","Type":"PullRequestEvent","CreatedAt":"2024-02-05T19:21:47","Actor":"dependabot[bot]","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1660","RelatedDescription":"Opened pull request \"Bump danielpalme/ReportGenerator-GitHub-Action from 5.2.0 to 5.2.1\" (#1660) at dotnet/Open-XML-SDK","RelatedBody":"Bumps [danielpalme/ReportGenerator-GitHub-Action](https://github.com/danielpalme/reportgenerator-github-action) from 5.2.0 to 5.2.1.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/danielpalme/reportgenerator-github-action/releases\">danielpalme/ReportGenerator-GitHub-Action's releases</a>.</em></p>\n<blockquote>\n<h2>5.2.1</h2>\n<ul>\n<li>Added 'Crap Score' metric for Coberatura coverage files (contrbuted by <a href=\"https://github.com/rikrak\"><code>@â€‹rikrak</code></a>)</li>\n<li><a href=\"https://redirect.github.com/danielpalme/reportgenerator-github-action/issues/645\">#645</a> Added new report type 'CodeClimate'</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/danielpalme/ReportGenerator-GitHub-Action/commit/68f1963d9876d2ac78bfd1c41c395514b7318855\"><code>68f1963</code></a> 5.2.1</li>\n<li>See full diff in <a href=\"https://github.com/danielpalme/reportgenerator-github-action/compare/5.2.0...5.2.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=danielpalme/ReportGenerator-GitHub-Action&package-manager=github_actions&previous-version=5.2.0&new-version=5.2.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>"},{"Id":"35371527016","Type":"IssuesEvent","CreatedAt":"2024-02-03T12:00:26","Actor":"SirParser","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1659","RelatedDescription":"Opened issue \"SpredsheetDocument.Save() InvalidOperationException (Collection was modified)\" (#1659) at dotnet/Open-XML-SDK","RelatedBody":"When executing SpreadsheetDocument.Save() (i.e. base class OpenXmlPackage.Save()) I'm getting the following error:\r\nInvalidOperationException\r\nCollection was modified; enumeration operation may not execute.\r\nStackTrace: \r\n[DBG]: PS ...>> $_.Exception.InnerException.StackTrace\r\n   at System.ThrowHelper.ThrowInvalidOperationException(ExceptionResource resource)\r\n   at System.Collections.Generic.Dictionary`2.Enumerator.MoveNext()\r\n   at DocumentFormat.OpenXml.Features.PackageFeatureBase.UpdateCachedItems()\r\n   at DocumentFormat.OpenXml.Packaging.Builder.SavePackageExtensions.SaveablePackage.Save()\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Save()\r\n\r\nThis happens only when I'm using the library in a PowerShell script. \r\nWhile debugging in JetBrains Rider (on the same machine) it works OK.\r\nIt looks like something about the 'Cached Items' is handled differently when library is used after installing in \r\n'C:\\Program Files\\PackageManagement\\NuGet\\Packages', comparing to debugging it in IDE.\r\nHas anyone encountered this issue?\r\n\r\nEnvironment:\r\nWindows Server 2016\r\nPowerShell 5.1\r\nIDE: JetBrains Rider 2023.3.3\r\nDocumentFormat.OpenXml.3.0.0"},{"Id":"35352305292","Type":"IssuesEvent","CreatedAt":"2024-02-02T15:00:41","Actor":"jrose323","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1658","RelatedDescription":"Opened issue \"Bug with temp resources in v3 or higher\" (#1658) at dotnet/Open-XML-SDK","RelatedBody":"After upgrading from 2.20.0 to 3.0.1, temp files are getting saved to the users temp folder when SpreadsheetDocument.Open is executed. This only occurs in v3.0 or higher. In addition to the temp files being created in the user temp folder which is new, Dispose() does not clear the temp files. So if the app is reading a large amount of spreadsheets, it eventually cause significant HDD capacity to be used.\r\n\r\n"},{"Id":"35341840618","Type":"IssuesEvent","CreatedAt":"2024-02-02T09:05:28","Actor":"chacha21","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1657","RelatedDescription":"Opened issue \"Cannot build fresh OpenXML-SDK\" (#1657) at dotnet/Open-XML-SDK","RelatedBody":"I try to build OpenXML-SDK with the latest Visual Studio 2022 (community) (17.8.6)\r\n\r\n- I git checkout the tag\r\n- I open the *.sln\r\n- I try to build the solution\r\n\r\nMy observations :\r\n\r\ntag 2.7.2 \r\n\r\n- works like a charm\r\n\r\ntag 2.8.1\r\n\r\n- Warning about Nuget vulnerabilities of some packages\r\n- build fails with \"The \"GetAssemblyVersion\" task has not been assigned a value for the required \"NuGetVersion\" parameter\" (translated from french)\r\n\r\ntag 2.9.1\r\n\r\n- Warning about Nuget vulnerabilities of some packages\r\n- build fails with \"The \"GetAssemblyVersion\" task has not been assigned a value for the required \"NuGetVersion\" parameter\" (translated from french)\r\n\r\ntag 3.0.0\r\n\r\n - \"Unable to resolve .NET SDK version as specified in global.json file\" : => I had to install dotnet-sdk-7.0.201-win-x64\r\n - Warning The \"OpenXmlGenerator\" failed to generate the source. This will not contribute to the output and compilation errors may result. The exception was of type \"FormatException\" with the message \"The format of the input string is incorrect\".\tDocumentFormat.OpenXml (net7.0) D:\\Open-XML-SDK\\3.0.1\\src\\DocumentFormat.OpenXml\\CSC\r\n- multiple errors of code compile refering to missing methods (because of missing assembly)\r\n\r\ntag 3.0.1\r\n - same as tag 3.0.0\r\n \r\nWhat is happening to that project ? There must be some broken automated action or wrong assumption about the host build machine."},{"Id":"35293822033","Type":"IssuesEvent","CreatedAt":"2024-01-31T23:03:01","Actor":"mikeebowen","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1656","RelatedDescription":"Opened issue \"Commas in DocumentFormat.OpenXml.Wordprocessing.Name.Val property cause invalid value error\" (#1656) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\n\r\nAccording to the \"data\\SchematronFiles\\word.xml\" lines 3618 - 3628 the `w:val` property for the `w:name` element should be invalid if it contains a comma only for `w:name` elements that are children of `w:category` or `w:fieldMapData`, but the `CollectSchematronItems` method from \"tools\\SemanticConstraintRegGen\\SchematronDataProvider.cs\" line 66 splits the `Context` on `/` leaving only the property name instead of the full path. So, in schematron.json the restriction becomes:\r\n\r\n```json\r\n{\r\n    \"Context\": \"w:name\",\r\n    \"Test\": \"matches(@w:val, \\u0022[^,]*\\u0022)\",\r\n    \"App\": \"Word\"\r\n},\r\n```\r\nrestricting the `w:name` property from containing commas for all elements in Word. \r\n\r\nThis may be a \"won't fix\", because it looks like it will either be a major rewrite of how that validation works that could involve breaking changes or creating separate classes for the different `w:name` elements, like `FieldMapDataName` and `CategoryName`, but this would definitely be a breaking change as they all currently use `DocumentFormat.OpenXml.Wordprocessing.Name` for this class. I'm adding the issue in the hope I'm wrong. \r\n\r\n**To Reproduce**\r\n\r\nAdd commas to the `w:val` property of a `w:name` element that is not the child of `w:fieldMapData` or `w:category` (e.g. `w:docPartPr` or `w:style`) then create an instance of the `OpenXmlValidator` and validate the file.\r\n\r\n**Observed behavior**\r\n\r\nThe validator returns an invalid value error for the `w:val` property.\r\n\r\n**Expected behavior**\r\n\r\nExpected the validation to pass without error.\r\n\r\n**Desktop (please complete the following information):**\r\n\r\n - OS: Windows 11\r\n - Office version 16.0.16626.20086\r\n - .NET Target: .Net 8\r\n - DocumentFormat.OpenXml Version: 3.0.1\r\n\r\n**Additional context**\r\n\r\nThis was discovered from a user issue with the ooxml-validator-vscode: https://github.com/mikeebowen/ooxml-validator-vscode/issues/25.\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-02-09T03:30:18.438034Z","RunDurationInMilliseconds":689}