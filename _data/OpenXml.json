{"Data":{"Sdk":{"Events":[{"Id":"49158683814","Type":"PullRequestEvent","CreatedAt":"2025-04-28T23:41:35","Actor":"dependabot[bot]","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1926","RelatedDescription":"Closed pull request \"Bump Microsoft.CodeAnalysis.Analyzers and Microsoft.CodeAnalysis.CSharp\" (#1926) at dotnet/Open-XML-SDK","RelatedBody":"Bumps [Microsoft.CodeAnalysis.Analyzers](https://github.com/dotnet/roslyn-analyzers) and [Microsoft.CodeAnalysis.CSharp](https://github.com/dotnet/roslyn). These dependencies needed to be updated together.\nUpdates `Microsoft.CodeAnalysis.Analyzers` from 3.11.0 to 3.11.0\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/dotnet/roslyn-analyzers/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `Microsoft.CodeAnalysis.CSharp` from 4.8.0 to 4.13.0\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/dotnet/roslyn/releases\">Microsoft.CodeAnalysis.CSharp's releases</a>.</em></p>\n<blockquote>\n<h2>.NET 6.0.1</h2>\n<p><a href=\"https://github.com/dotnet/core/releases/tag/v6.0.1\">Release</a></p>\n<h2>.NET 5.0.4</h2>\n<p><a href=\"https://github.com/dotnet/core/releases/tag/v5.0.4\">Release</a></p>\n<h2>.NET 5.0.2</h2>\n<p><a href=\"https://github.com/dotnet/core/blob/master/release-notes/5.0/5.0.2/5.0.2.md\">Release Notes</a>\n<a href=\"https://github.com/dotnet/core/blob/master/release-notes/5.0/5.0.2/5.0.2-install-instructions.md\">Install Instructions</a></p>\n<h1>Repos</h1>\n<ul>\n<li><a href=\"https://github.com/dotnet/core/releases/tag/v5.0.2\">Core</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/dotnet/roslyn/blob/main/docs/Breaking%20API%20Changes.md\">Microsoft.CodeAnalysis.CSharp's changelog</a>.</em></p>\n<blockquote>\n<h1>API Breaking Changes</h1>\n<h1>Version 1.1.0</h1>\n<h3>Removed VisualBasicCommandLineParser.ctor</h3>\n<p>During a toolset update we noticed the constructor on <code>VisualBasicCommandLineParser</code> was <code>public</code>.  This in turn made many of the <code>protected</code> members of <code>CommandLineParser</code> a part of the API surface as it gave external customers an inheritance path.</p>\n<p>It was never the intent for these members to be a part of the supported API surface.  Creation of the parsers is meant to be done via the <code>Default</code> singleton properties.  There seems to be little risk that we broke any customers here and hence we decided to remove this API.</p>\n<p>PR: <a href=\"https://redirect.github.com/dotnet/roslyn/pull/4169\">dotnet/roslyn#4169</a></p>\n<h3>Changed Simplifier methods to throw ArgumentNullExceptions</h3>\n<p>Changed Simplifier.ReduceAsync, Simplifier.ExpandAsync, and Simplifier.Expand methods to throw ArgumentNullExceptions if any non-optional, nullable arguments are passed in.  Previously the user would get a NullReferenceException for synchronous methods and an AggregateException containing a NullReferenceException for asynchronous methods.</p>\n<p>PR: <a href=\"https://redirect.github.com/dotnet/roslyn/pull/5144\">dotnet/roslyn#5144</a></p>\n<h1>Version 1.3.0</h1>\n<h3>Treat a method marked with both public and private flags as private</h3>\n<p>The scenario is loading an assembly where some methods, fields or nested types have accessibility flags set to 7 (all three bits set), which mean public AND private.\nAfter the fix, such flags are loaded to mean private.\nThe compat change is we’re trading a compile-time success and runtime failure (native compiler) against a compile-time error (restoring the behavior of v1.2).</p>\n<p>Details below:</p>\n<ul>\n<li>The native compiler successfully compiles the method and field case (those only yield runtime error System.TypeLoadException: Invalid Field Access Flags) and reported an accessibility error on the nested type.</li>\n<li>The 1.2 compiler generated errors:</li>\n</ul>\n<pre><code>error BC30390: 'C.Private Overloads Sub M()' is not accessible in this context because it is 'Private'.\nerror BC30389: 'C.F' is not accessible in this context because it is 'Private'.\nerror BC30389: 'C.C2' is not accessible in this context because it is 'Protected Friend'.\nerror BC30390: 'C2.Private Overloads Sub M2()' is not accessible in this context because it is 'Private'.\n</code></pre>\n<ul>\n<li>The 1.3 compiler crashes.</li>\n<li>After fix, the same errors as 1.2 are generated again.</li>\n</ul>\n<p>PR: <a href=\"https://redirect.github.com/dotnet/roslyn/pull/11547\">dotnet/roslyn#11547</a></p>\n<h3>Don't emit bad DateTimeConstant, and load bad BadTimeConstant as default value instead</h3>\n<p>The change affects compatibility in two ways:</p>\n<ul>\n<li>When loading an invalid DateTimeConstant(-1), the compiler will use default(DateTime) instead, whereas the native compiler would produce code that fails to execute.</li>\n<li>DateTimeConstant(-1) will still count when we check that you don’t specify two default values. The compiler will produce an error, instead of succeeding (and producing IL with two attributes).</li>\n</ul>\n<p>PR: <a href=\"https://redirect.github.com/dotnet/roslyn/pull/11536\">dotnet/roslyn#11536</a></p>\n<h1>Version 4.1.0</h1>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/dotnet/roslyn/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>"},{"Id":"49158550402","Type":"PullRequestEvent","CreatedAt":"2025-04-28T23:34:39","Actor":"mikeebowen","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1901","RelatedDescription":"Merged pull request \"Bump Microsoft.NET.Test.Sdk and Newtonsoft.Json\" (#1901) at dotnet/Open-XML-SDK","RelatedBody":"Bumps [Microsoft.NET.Test.Sdk](https://github.com/microsoft/vstest) and [Newtonsoft.Json](https://github.com/JamesNK/Newtonsoft.Json). These dependencies needed to be updated together.\nUpdates `Microsoft.NET.Test.Sdk` from 17.12.0 to 17.13.0\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/microsoft/vstest/releases\">Microsoft.NET.Test.Sdk's releases</a>.</em></p>\n<blockquote>\n<h2>v17.13.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>\n<p>Add letter number among valid identifiers in class name by <a href=\"https://github.com/nohwnd\"><code>@​nohwnd</code></a> in <a href=\"https://redirect.github.com/microsoft/vstest/pull/13868\">microsoft/vstest#13868</a></p>\n</li>\n<li>\n<p>Fix formatting in Runner by <a href=\"https://github.com/mthalman\"><code>@​mthalman</code></a> in <a href=\"https://redirect.github.com/microsoft/vstest/pull/13871\">microsoft/vstest#13871</a></p>\n</li>\n<li>\n<p>Downgrade xunit skip warning to info by <a href=\"https://github.com/nohwnd\"><code>@​nohwnd</code></a> in <a href=\"https://redirect.github.com/microsoft/vstest/pull/10381\">microsoft/vstest#10381</a></p>\n</li>\n<li>\n<p>Add msdia for arm64 into nuget by <a href=\"https://github.com/nohwnd\"><code>@​nohwnd</code></a> in <a href=\"https://redirect.github.com/microsoft/vstest/pull/10382\">microsoft/vstest#10382</a></p>\n</li>\n<li>\n<p>Enable native debugging for vstest.console by <a href=\"https://github.com/ocitrev\"><code>@​ocitrev</code></a> in <a href=\"https://redirect.github.com/microsoft/vstest/pull/10401\">microsoft/vstest#10401</a></p>\n</li>\n<li>\n<p>Fix RFCs links by <a href=\"https://github.com/Youssef1313\"><code>@​Youssef1313</code></a> in <a href=\"https://redirect.github.com/microsoft/vstest/pull/10424\">microsoft/vstest#10424</a></p>\n</li>\n<li>\n<p>Convert to auto property by <a href=\"https://github.com/nohwnd\"><code>@​nohwnd</code></a> in <a href=\"https://redirect.github.com/microsoft/vstest/pull/10365\">microsoft/vstest#10365</a></p>\n</li>\n<li>\n<p>Update Versions.props by <a href=\"https://github.com/nohwnd\"><code>@​nohwnd</code></a> in <a href=\"https://redirect.github.com/microsoft/vstest/pull/10378\">microsoft/vstest#10378</a></p>\n</li>\n<li>\n<p>Enable TSA by <a href=\"https://github.com/jakubch1\"><code>@​jakubch1</code></a> in <a href=\"https://redirect.github.com/microsoft/vstest/pull/10385\">microsoft/vstest#10385</a></p>\n</li>\n<li>\n<p>Arm64 dia by <a href=\"https://github.com/nohwnd\"><code>@​nohwnd</code></a> in <a href=\"https://redirect.github.com/microsoft/vstest/pull/10390\">microsoft/vstest#10390</a></p>\n</li>\n<li>\n<p>Update source-build team references by <a href=\"https://github.com/MichaelSimons\"><code>@​MichaelSimons</code></a> in <a href=\"https://redirect.github.com/microsoft/vstest/pull/10388\">microsoft/vstest#10388</a></p>\n</li>\n<li>\n<p>Exclude .signature.p7s from nupkg file count by <a href=\"https://github.com/ellahathaway\"><code>@​ellahathaway</code></a> in <a href=\"https://redirect.github.com/microsoft/vstest/pull/10418\">microsoft/vstest#10418</a></p>\n</li>\n<li>\n<p>Set NetCurrent so that it doesn't roll forward automatically by <a href=\"https://github.com/ViktorHofer\"><code>@​ViktorHofer</code></a> in <a href=\"https://redirect.github.com/microsoft/vstest/pull/10622\">microsoft/vstest#10622</a></p>\n</li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/ocitrev\"><code>@​ocitrev</code></a> made their first contribution in <a href=\"https://redirect.github.com/microsoft/vstest/pull/10401\">microsoft/vstest#10401</a></li>\n<li><a href=\"https://github.com/Youssef1313\"><code>@​Youssef1313</code></a> made their first contribution in <a href=\"https://redirect.github.com/microsoft/vstest/pull/10424\">microsoft/vstest#10424</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/microsoft/vstest/compare/v17.12.0...v17.13.0\">https://github.com/microsoft/vstest/compare/v17.12.0...v17.13.0</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/microsoft/vstest/commit/e8cf3808d0b16dea8d6e1a9b77f1660a5ff45e13\"><code>e8cf380</code></a> Use 17.3.1 stable CodeCoverage</li>\n<li><a href=\"https://github.com/microsoft/vstest/commit/edabaf392a0f6d2909e0d1468554b8f7e7974825\"><code>edabaf3</code></a> Move to macos14 (<a href=\"https://redirect.github.com/microsoft/vstest/issues/14137\">#14137</a>)</li>\n<li><a href=\"https://github.com/microsoft/vstest/commit/1441926e38024401735188987bc00923f386d03f\"><code>1441926</code></a> Change 17.13 to release (<a href=\"https://redirect.github.com/microsoft/vstest/issues/14942\">#14942</a>)</li>\n<li><a href=\"https://github.com/microsoft/vstest/commit/03c3ac94040f393766508fb6cf7682415b4e4d75\"><code>03c3ac9</code></a> [main] Update dependencies from devdiv/DevDiv/vs-code-coverage (<a href=\"https://redirect.github.com/microsoft/vstest/issues/11120\">#11120</a>)</li>\n<li><a href=\"https://github.com/microsoft/vstest/commit/8907779686555dafc9dcfe53f76f2f5f3efe15bd\"><code>8907779</code></a> Fix formatting in Runner (<a href=\"https://redirect.github.com/microsoft/vstest/issues/13871\">#13871</a>)</li>\n<li><a href=\"https://github.com/microsoft/vstest/commit/778c004f74659e18467f9220047072b79da82e88\"><code>778c004</code></a> Add letter number among valid identifiers in class name (<a href=\"https://redirect.github.com/microsoft/vstest/issues/13868\">#13868</a>)</li>\n<li><a href=\"https://github.com/microsoft/vstest/commit/d8aa5847a3d824ab4a4eb7d9504e57387801f0c6\"><code>d8aa584</code></a> Update AzureDevOps.yml</li>\n<li><a href=\"https://github.com/microsoft/vstest/commit/af4080fb868028a53c89905a64c1e7483af34a6b\"><code>af4080f</code></a> Update AzureDevOps.yml</li>\n<li><a href=\"https://github.com/microsoft/vstest/commit/f56ab6936969deb42c9ecf2f2193b16f0579be28\"><code>f56ab69</code></a> Update AzureDevOps.yml</li>\n<li><a href=\"https://github.com/microsoft/vstest/commit/f05137ed3055a022904c5fad38db16e2f1654fe2\"><code>f05137e</code></a> Update AzureDevOps.yml</li>\n<li>Additional commits viewable in <a href=\"https://github.com/microsoft/vstest/compare/v17.12.0...v17.13.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `Newtonsoft.Json` from 13.0.3 to 13.0.1\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/JamesNK/Newtonsoft.Json/commit/ae9fe44e1323e91bcbd185ca1a14099fba7c021f\"><code>ae9fe44</code></a> Remove compiler package and update sourcelink (<a href=\"https://redirect.github.com/JamesNK/Newtonsoft.Json/issues/2498\">#2498</a>)</li>\n<li><a href=\"https://github.com/JamesNK/Newtonsoft.Json/commit/8ef662189dd7fc890c8fcd832d3e283edb90ef31\"><code>8ef6621</code></a> Remove prerelease for 13.0.1</li>\n<li><a href=\"https://github.com/JamesNK/Newtonsoft.Json/commit/11331f50fd1c09dc1f44fe17ef26aba7c460b42c\"><code>11331f5</code></a> Update SDK to 5.0.200 (<a href=\"https://redirect.github.com/JamesNK/Newtonsoft.Json/issues/2495\">#2495</a>)</li>\n<li><a href=\"https://github.com/JamesNK/Newtonsoft.Json/commit/c7e8abc09de751785355e3f972150f8a72379b02\"><code>c7e8abc</code></a> Update to 13.0.1-beta2</li>\n<li><a href=\"https://github.com/JamesNK/Newtonsoft.Json/commit/1745d7c14ec7e4244a5ca1c7ddf5d955cf7d1f43\"><code>1745d7c</code></a> Fix JTokenWriter when writing comment to an object (<a href=\"https://redirect.github.com/JamesNK/Newtonsoft.Json/issues/2493\">#2493</a>)</li>\n<li><a href=\"https://github.com/JamesNK/Newtonsoft.Json/commit/583eb120152f8b6332df2fe3d4b9f4c947c944d0\"><code>583eb12</code></a> Fix missing error when deserializing JToken with a contract type mismatch (<a href=\"https://redirect.github.com/JamesNK/Newtonsoft.Json/issues/2\">#2</a>...</li>\n<li><a href=\"https://github.com/JamesNK/Newtonsoft.Json/commit/b6dc05be5a0f4808f06ec430f3bb59b24d3fbc3e\"><code>b6dc05b</code></a> Change MaxDepth default to 64 (<a href=\"https://redirect.github.com/JamesNK/Newtonsoft.Json/issues/2473\">#2473</a>)</li>\n<li><a href=\"https://github.com/JamesNK/Newtonsoft.Json/commit/15525f1c44e0d99ef8fdee73430853e22239181d\"><code>15525f1</code></a> Fix JsonWriter.WriteToken to allow null with string token (<a href=\"https://redirect.github.com/JamesNK/Newtonsoft.Json/issues/2472\">#2472</a>)</li>\n<li><a href=\"https://github.com/JamesNK/Newtonsoft.Json/commit/926d2f0f42292cfcdf07cdadeb501b73fd5b1d52\"><code>926d2f0</code></a> Enable embed untracked sources (<a href=\"https://redirect.github.com/JamesNK/Newtonsoft.Json/issues/2471\">#2471</a>)</li>\n<li><a href=\"https://github.com/JamesNK/Newtonsoft.Json/commit/0a56633b6cd4fccc860a8486260ee67636f3fe90\"><code>0a56633</code></a> Fixes <a href=\"https://redirect.github.com/JamesNK/Newtonsoft.Json/issues/2372\">#2372</a> - variable typos (<a href=\"https://redirect.github.com/JamesNK/Newtonsoft.Json/issues/2465\">#2465</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/JamesNK/Newtonsoft.Json/compare/13.0.3...13.0.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n"},{"Id":"49155545350","Type":"PullRequestEvent","CreatedAt":"2025-04-28T21:21:56","Actor":"dependabot[bot]","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1926","RelatedDescription":"Opened pull request \"Bump Microsoft.CodeAnalysis.Analyzers and Microsoft.CodeAnalysis.CSharp\" (#1926) at dotnet/Open-XML-SDK","RelatedBody":"Bumps [Microsoft.CodeAnalysis.Analyzers](https://github.com/dotnet/roslyn-analyzers) and [Microsoft.CodeAnalysis.CSharp](https://github.com/dotnet/roslyn). These dependencies needed to be updated together.\nUpdates `Microsoft.CodeAnalysis.Analyzers` from 3.11.0 to 3.11.0\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/dotnet/roslyn-analyzers/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\nUpdates `Microsoft.CodeAnalysis.CSharp` from 4.8.0 to 4.13.0\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/dotnet/roslyn/releases\">Microsoft.CodeAnalysis.CSharp's releases</a>.</em></p>\n<blockquote>\n<h2>.NET 6.0.1</h2>\n<p><a href=\"https://github.com/dotnet/core/releases/tag/v6.0.1\">Release</a></p>\n<h2>.NET 5.0.4</h2>\n<p><a href=\"https://github.com/dotnet/core/releases/tag/v5.0.4\">Release</a></p>\n<h2>.NET 5.0.2</h2>\n<p><a href=\"https://github.com/dotnet/core/blob/master/release-notes/5.0/5.0.2/5.0.2.md\">Release Notes</a>\n<a href=\"https://github.com/dotnet/core/blob/master/release-notes/5.0/5.0.2/5.0.2-install-instructions.md\">Install Instructions</a></p>\n<h1>Repos</h1>\n<ul>\n<li><a href=\"https://github.com/dotnet/core/releases/tag/v5.0.2\">Core</a></li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/dotnet/roslyn/blob/main/docs/Breaking%20API%20Changes.md\">Microsoft.CodeAnalysis.CSharp's changelog</a>.</em></p>\n<blockquote>\n<h1>API Breaking Changes</h1>\n<h1>Version 1.1.0</h1>\n<h3>Removed VisualBasicCommandLineParser.ctor</h3>\n<p>During a toolset update we noticed the constructor on <code>VisualBasicCommandLineParser</code> was <code>public</code>.  This in turn made many of the <code>protected</code> members of <code>CommandLineParser</code> a part of the API surface as it gave external customers an inheritance path.</p>\n<p>It was never the intent for these members to be a part of the supported API surface.  Creation of the parsers is meant to be done via the <code>Default</code> singleton properties.  There seems to be little risk that we broke any customers here and hence we decided to remove this API.</p>\n<p>PR: <a href=\"https://redirect.github.com/dotnet/roslyn/pull/4169\">dotnet/roslyn#4169</a></p>\n<h3>Changed Simplifier methods to throw ArgumentNullExceptions</h3>\n<p>Changed Simplifier.ReduceAsync, Simplifier.ExpandAsync, and Simplifier.Expand methods to throw ArgumentNullExceptions if any non-optional, nullable arguments are passed in.  Previously the user would get a NullReferenceException for synchronous methods and an AggregateException containing a NullReferenceException for asynchronous methods.</p>\n<p>PR: <a href=\"https://redirect.github.com/dotnet/roslyn/pull/5144\">dotnet/roslyn#5144</a></p>\n<h1>Version 1.3.0</h1>\n<h3>Treat a method marked with both public and private flags as private</h3>\n<p>The scenario is loading an assembly where some methods, fields or nested types have accessibility flags set to 7 (all three bits set), which mean public AND private.\nAfter the fix, such flags are loaded to mean private.\nThe compat change is we’re trading a compile-time success and runtime failure (native compiler) against a compile-time error (restoring the behavior of v1.2).</p>\n<p>Details below:</p>\n<ul>\n<li>The native compiler successfully compiles the method and field case (those only yield runtime error System.TypeLoadException: Invalid Field Access Flags) and reported an accessibility error on the nested type.</li>\n<li>The 1.2 compiler generated errors:</li>\n</ul>\n<pre><code>error BC30390: 'C.Private Overloads Sub M()' is not accessible in this context because it is 'Private'.\nerror BC30389: 'C.F' is not accessible in this context because it is 'Private'.\nerror BC30389: 'C.C2' is not accessible in this context because it is 'Protected Friend'.\nerror BC30390: 'C2.Private Overloads Sub M2()' is not accessible in this context because it is 'Private'.\n</code></pre>\n<ul>\n<li>The 1.3 compiler crashes.</li>\n<li>After fix, the same errors as 1.2 are generated again.</li>\n</ul>\n<p>PR: <a href=\"https://redirect.github.com/dotnet/roslyn/pull/11547\">dotnet/roslyn#11547</a></p>\n<h3>Don't emit bad DateTimeConstant, and load bad BadTimeConstant as default value instead</h3>\n<p>The change affects compatibility in two ways:</p>\n<ul>\n<li>When loading an invalid DateTimeConstant(-1), the compiler will use default(DateTime) instead, whereas the native compiler would produce code that fails to execute.</li>\n<li>DateTimeConstant(-1) will still count when we check that you don’t specify two default values. The compiler will produce an error, instead of succeeding (and producing IL with two attributes).</li>\n</ul>\n<p>PR: <a href=\"https://redirect.github.com/dotnet/roslyn/pull/11536\">dotnet/roslyn#11536</a></p>\n<h1>Version 4.1.0</h1>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li>See full diff in <a href=\"https://github.com/dotnet/roslyn/commits\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>"},{"Id":"49152041051","Type":"IssuesEvent","CreatedAt":"2025-04-28T19:31:19","Actor":"mikeebowen","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1925","RelatedDescription":"Closed issue \"Keep original data type when creating a CellValue instead of converting to string to save memory.\" (#1925) at dotnet/Open-XML-SDK","RelatedBody":"**Is your feature request related to a problem? Please describe.**\nWhen writing millions of cells to a sheet the memory usage is very high.\n\n**Describe the solution you'd like**\nCurrently `CellValue` converts all values added to strings. \nFor example:\n```\npublic CellValue(int value)\n   : this(value.ToString(CultureInfo.InvariantCulture))\n{\n}\n```\nWould it not make more sense to add (keep) the `int` (or whatever native type is being added) and write that to the `XmlWriter` when serializing the data to reduce the memory footprint?\n\n"},{"Id":"49147697703","Type":"PullRequestEvent","CreatedAt":"2025-04-28T17:23:50","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1843","RelatedDescription":"Merged pull request \"Remove generic builder pattern from element metadata create (Part 2): AddChild\" (#1843) at dotnet/Open-XML-SDK","RelatedBody":"This replaces `AddChild<T>` with a non-generic version - helps move towards less type knowledge in the system."},{"Id":"49144888647","Type":"IssuesEvent","CreatedAt":"2025-04-28T16:05:18","Actor":"tomjebo","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/995","RelatedDescription":"Closed issue \"Enable nullable on tests\" (#995) at dotnet/Open-XML-SDK","RelatedBody":"If the assembly under test has nullability enabled, it would make sense to do that for the corresponding unit tests, too. This way, you would more likely identify cases where nullability is incorrect. For example, see my other issue on nullabity of the MainDocunentPart.Document property, for example.\r\n\r\n_Originally posted by @ThomasBarnekow in https://github.com/OfficeDev/Open-XML-SDK/pull/952#discussion_r673708738_"},{"Id":"49144855480","Type":"IssuesEvent","CreatedAt":"2025-04-28T16:04:27","Actor":"tomjebo","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/959","RelatedDescription":"Closed issue \"Incorrect nullability of MainDocumentPart.Document and corresponding root elements of other OpenXmlParts\" (#959) at dotnet/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nThe `Document` property of the `MainDocumentPart` is defined as follows:\r\n\r\n```csharp\r\n        /// <summary>\r\n        /// Gets or sets the root element of this part.\r\n        /// </summary>\r\n        public DocumentFormat.OpenXml.Wordprocessing.Document Document\r\n        {\r\n            get\r\n            {\r\n                if (_rootElement is null)\r\n                {\r\n                    LoadDomTree<DocumentFormat.OpenXml.Wordprocessing.Document>();\r\n                }\r\n\r\n                return _rootElement!;\r\n            }\r\n\r\n            set\r\n            {\r\n                if (value is null)\r\n                {\r\n                    throw new ArgumentNullException(nameof(value));\r\n                }\r\n\r\n                SetDomTree(value);\r\n            }\r\n        }\r\n```\r\n\r\nOther subclasses of `OpenXmlPart` (e.g., `WorkbookPart`) define their respective root elements (e.g., `Workbook`) in the same way. \r\n\r\nFirstly, this is inconsistent with the more generic `RootElement` property of `OpenXmlPart`, which correctly flags nullability:\r\n\r\n```csharp\r\n        /// <summary>\r\n        /// Gets the root element of the current part.\r\n        /// Returns null when the current part is empty or is not an XML content type.\r\n        /// </summary>\r\n        public OpenXmlPartRootElement? RootElement\r\n        {\r\n            get\r\n            {\r\n                return PartRootElement;\r\n            }\r\n        }\r\n```\r\n\r\nSecondly, when nullability is enabled, the definition suggests that `Document`, for example, will not be null. However, the following unit test demonstrates that this is not the case:\r\n\r\n```csharp\r\n    public class MainDocumentPartTests\r\n    {\r\n        [Fact]\r\n        public void Document_NewMainDocumentPart_DocumentIsNull()\r\n        {\r\n            using var stream = new MemoryStream();\r\n            using var wordDocument = WordprocessingDocument.Create(stream, WordprocessingDocumentType.Document);\r\n            MainDocumentPart mainDocumentPart = wordDocument.AddMainDocumentPart();\r\n\r\n            Assert.NotNull(mainDocumentPart);\r\n            Assert.Null(mainDocumentPart.Document);\r\n\r\n            // ReSharper disable HeuristicUnreachableCode\r\n            Assert.Throws<NullReferenceException>(() => mainDocumentPart.Document.Body);\r\n        }\r\n    }\r\n```\r\n\r\nYou will also see the comment telling ReSharper to disable the `HeuristicUnreachableCode` check after asserting that `mainDocumentPart.Document` is null. Owing to the incorrect nullability, ReSharper believes the assertion will throw and, thus, the next assertion will never be reached. This is not correct, of course.\r\n\r\n**Information**\r\n\r\n- .NET Target: **all**\r\n- DocumentFormat.OpenXml Version: **latest**\r\n\r\n**Repro**\r\n\r\nSee the unit test above.\r\n\r\n**Observed**\r\n\r\nThe nullability of root elements is stated as _non-nullable_.\r\n\r\n**Expected**\r\n\r\nThe nullability of root elements should be stated as _nullable_."},{"Id":"49144855383","Type":"IssuesEvent","CreatedAt":"2025-04-28T16:04:27","Actor":"tomjebo","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/959","RelatedDescription":"Closed issue \"Incorrect nullability of MainDocumentPart.Document and corresponding root elements of other OpenXmlParts\" (#959) at dotnet/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nThe `Document` property of the `MainDocumentPart` is defined as follows:\r\n\r\n```csharp\r\n        /// <summary>\r\n        /// Gets or sets the root element of this part.\r\n        /// </summary>\r\n        public DocumentFormat.OpenXml.Wordprocessing.Document Document\r\n        {\r\n            get\r\n            {\r\n                if (_rootElement is null)\r\n                {\r\n                    LoadDomTree<DocumentFormat.OpenXml.Wordprocessing.Document>();\r\n                }\r\n\r\n                return _rootElement!;\r\n            }\r\n\r\n            set\r\n            {\r\n                if (value is null)\r\n                {\r\n                    throw new ArgumentNullException(nameof(value));\r\n                }\r\n\r\n                SetDomTree(value);\r\n            }\r\n        }\r\n```\r\n\r\nOther subclasses of `OpenXmlPart` (e.g., `WorkbookPart`) define their respective root elements (e.g., `Workbook`) in the same way. \r\n\r\nFirstly, this is inconsistent with the more generic `RootElement` property of `OpenXmlPart`, which correctly flags nullability:\r\n\r\n```csharp\r\n        /// <summary>\r\n        /// Gets the root element of the current part.\r\n        /// Returns null when the current part is empty or is not an XML content type.\r\n        /// </summary>\r\n        public OpenXmlPartRootElement? RootElement\r\n        {\r\n            get\r\n            {\r\n                return PartRootElement;\r\n            }\r\n        }\r\n```\r\n\r\nSecondly, when nullability is enabled, the definition suggests that `Document`, for example, will not be null. However, the following unit test demonstrates that this is not the case:\r\n\r\n```csharp\r\n    public class MainDocumentPartTests\r\n    {\r\n        [Fact]\r\n        public void Document_NewMainDocumentPart_DocumentIsNull()\r\n        {\r\n            using var stream = new MemoryStream();\r\n            using var wordDocument = WordprocessingDocument.Create(stream, WordprocessingDocumentType.Document);\r\n            MainDocumentPart mainDocumentPart = wordDocument.AddMainDocumentPart();\r\n\r\n            Assert.NotNull(mainDocumentPart);\r\n            Assert.Null(mainDocumentPart.Document);\r\n\r\n            // ReSharper disable HeuristicUnreachableCode\r\n            Assert.Throws<NullReferenceException>(() => mainDocumentPart.Document.Body);\r\n        }\r\n    }\r\n```\r\n\r\nYou will also see the comment telling ReSharper to disable the `HeuristicUnreachableCode` check after asserting that `mainDocumentPart.Document` is null. Owing to the incorrect nullability, ReSharper believes the assertion will throw and, thus, the next assertion will never be reached. This is not correct, of course.\r\n\r\n**Information**\r\n\r\n- .NET Target: **all**\r\n- DocumentFormat.OpenXml Version: **latest**\r\n\r\n**Repro**\r\n\r\nSee the unit test above.\r\n\r\n**Observed**\r\n\r\nThe nullability of root elements is stated as _non-nullable_.\r\n\r\n**Expected**\r\n\r\nThe nullability of root elements should be stated as _nullable_."},{"Id":"49144854887","Type":"PullRequestEvent","CreatedAt":"2025-04-28T16:04:26","Actor":"tomjebo","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1922","RelatedDescription":"Merged pull request \"Root element for generated parts should be nullable\" (#1922) at dotnet/Open-XML-SDK","RelatedBody":"Changes root elements for generated parts to be nullable. \r\nFixes #959 and #995"}],"ResultType":"GitHubEvent"}},"RunOn":"2025-04-30T03:30:21.6587961Z","RunDurationInMilliseconds":697}