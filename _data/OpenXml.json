{"Data":{"Sdk":{"Events":[{"Id":"31625986666","Type":"IssuesEvent","CreatedAt":"2023-09-06T05:25:10","Actor":"sergey-tihon","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1521","RelatedDescription":"Closed issue \"Release 3.0.0-beta3 on NuGet\" (#1521) at dotnet/Open-XML-SDK","RelatedBody":"**Is your feature request related to a problem? Please describe.**\r\nPlease publish all beta versions on NuGet.\r\nIt will help us test out apps and libs against upcoming changes.\r\nAs well as publish beta versions of other libs built on top of Open-XML-SDK.\r\n\r\n**Describe the solution you'd like**\r\nPublish all beta versions on NuGet\r\n\r\n**Describe alternatives you've considered**\r\nAzure blob feeds do not work well for lib authors.\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n"},{"Id":"31621164190","Type":"IssuesEvent","CreatedAt":"2023-09-05T23:11:27","Actor":"github-actions[bot]","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1524","RelatedDescription":"Closed issue \"Manual approval required for workflow run 6090546969: Approval for publishing to Nuget.org\" (#1524) at dotnet/Open-XML-SDK","RelatedBody":"Please approve or deny the deployment to Nuget.org\n\nWorkflow is pending manual review.\nURL: https://github.com/dotnet/Open-XML-SDK/actions/runs/6090546969\n\nRequired approvers: [twsouthwick tomjebo mikeebowen]\n\nRespond \"approved\", \"approve\", \"lgtm\", \"yes\" to continue workflow or \"denied\", \"deny\", \"no\" to cancel."},{"Id":"31620899537","Type":"IssuesEvent","CreatedAt":"2023-09-05T22:50:15","Actor":"github-actions[bot]","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1524","RelatedDescription":"Opened issue \"Manual approval required for workflow run 6090546969: Approval for publishing to Nuget.org\" (#1524) at dotnet/Open-XML-SDK","RelatedBody":"Please approve or deny the deployment to Nuget.org\n\nWorkflow is pending manual review.\nURL: https://github.com/dotnet/Open-XML-SDK/actions/runs/6090546969\n\nRequired approvers: [twsouthwick tomjebo mikeebowen]\n\nRespond \"approved\", \"approve\", \"lgtm\", \"yes\" to continue workflow or \"denied\", \"deny\", \"no\" to cancel."},{"Id":"31620738079","Type":"PullRequestEvent","CreatedAt":"2023-09-05T22:37:38","Actor":"mikeebowen","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1523","RelatedDescription":"Merged pull request \"Update release.yml\" (#1523) at dotnet/Open-XML-SDK","RelatedBody":"add shell: pwsh, so release to nuget knows which shell to use"},{"Id":"31617740092","Type":"PullRequestEvent","CreatedAt":"2023-09-05T19:52:16","Actor":"mikeebowen","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1523","RelatedDescription":"Opened pull request \"Update release.yml\" (#1523) at dotnet/Open-XML-SDK","RelatedBody":"add shell: pwsh, so release to nuget knows which shell to use"},{"Id":"31612777130","Type":"IssuesEvent","CreatedAt":"2023-09-05T16:01:37","Actor":"github-actions[bot]","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1522","RelatedDescription":"Closed issue \"Manual approval required for workflow run 6086613320: Approval for publishing to Nuget.org\" (#1522) at dotnet/Open-XML-SDK","RelatedBody":"Please approve or deny the deployment to Nuget.org\n\nWorkflow is pending manual review.\nURL: https://github.com/dotnet/Open-XML-SDK/actions/runs/6086613320\n\nRequired approvers: [twsouthwick tomjebo mikeebowen]\n\nRespond \"approved\", \"approve\", \"lgtm\", \"yes\" to continue workflow or \"denied\", \"deny\", \"no\" to cancel."},{"Id":"31611658221","Type":"IssuesEvent","CreatedAt":"2023-09-05T15:21:22","Actor":"github-actions[bot]","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1522","RelatedDescription":"Opened issue \"Manual approval required for workflow run 6086613320: Approval for publishing to Nuget.org\" (#1522) at dotnet/Open-XML-SDK","RelatedBody":"Please approve or deny the deployment to Nuget.org\n\nWorkflow is pending manual review.\nURL: https://github.com/dotnet/Open-XML-SDK/actions/runs/6086613320\n\nRequired approvers: [twsouthwick tomjebo mikeebowen]\n\nRespond \"approved\", \"approve\", \"lgtm\", \"yes\" to continue workflow or \"denied\", \"deny\", \"no\" to cancel."},{"Id":"31583880391","Type":"IssuesEvent","CreatedAt":"2023-09-04T14:26:54","Actor":"BogdanGeorge","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1518","RelatedDescription":"Closed issue \"When updating a SpreadsheetDocument opened using a MemoryStream, the stream is not updated\" (#1518) at dotnet/Open-XML-SDK","RelatedBody":"When updating an Excel file downloaded using http request then opened as SpreadsheetDocument using a MemoryStream, the stream is not updated\r\n\r\nCode:\r\n\r\n ```\r\n   using (var memoryStream = new MemoryStream())\r\n   {\r\n          var byteArray = await fileReader.ReadFileFromUri(reportFileSasUri);\r\n          memoryStream.Write(byteArray, 0, (int)byteArray.Length);\r\n          using (var excelWorkbook = SpreadsheetDocument.Open(memoryStream, true))\r\n          {\r\n               AppendDictionaryToSheet(excelWorkbook, \"Params\", paramsDictionary)\r\n               \r\n               await fileWriter.WriteToBlobStorage(memoryStream);\r\n          }\r\n   }\r\n\r\n      public static SpreadsheetDocument AppendDictionaryToSheet(SpreadsheetDocument excelWorkbook, string sheetName, Dictionary<string, object> dictionary, bool hideSheet = false)\r\n    {\r\n        WorkbookPart workbookPart = excelWorkbook.WorkbookPart;\r\n        WorksheetPart worksheetPart = GetWorksheetPartByName(workbookPart, sheetName);\r\n\r\n        if (worksheetPart == null)\r\n        {\r\n            throw new Exception($\"Table from '{sheetName}' not found in the worksheet.\");\r\n        }\r\n\r\n        SheetData sheetData = worksheetPart.Worksheet.GetFirstChild<SheetData>();\r\n        string lastCell = GetLastCellWithTextInColumn(sheetData, \"A\");\r\n        string startingColumn = GetColumnName(lastCell);\r\n        int startingRow = GetRowNumber(lastCell) + 1;\r\n\r\n        foreach (var kvp in dictionary)\r\n        {\r\n            var column = GetColumnName(startingColumn);\r\n            Row newRow = new Row() { RowIndex = (uint)startingRow };\r\n\r\n            Cell keyCell = CreateCell(kvp.Key, column, startingRow);\r\n            newRow.Append(keyCell);\r\n\r\n            column = GetNextColumn(startingColumn);\r\n            Cell valueCell = CreateCell(kvp.Value, column, startingRow);\r\n            newRow.Append(valueCell);\r\n\r\n            sheetData.Append(newRow);\r\n            startingRow++;\r\n        }\r\n\r\n        Sheet sheet = workbookPart.Workbook.Descendants<Sheet>().FirstOrDefault(s => s.Name == sheetName);\r\n        if (sheet != null && hideSheet)\r\n        {\r\n            sheet.State = SheetStateValues.Hidden;\r\n        }\r\n\r\n        workbookPart.Workbook.CalculationProperties = new CalculationProperties { ForceFullCalculation = true };\r\n        worksheetPart.Worksheet.Save();\r\n\r\n        return excelWorkbook;\r\n    }\r\n\r\n```\r\n\r\nBasically what I tried to implement is something similar to the example from here:\r\nhttps://learn.microsoft.com/en-us/previous-versions/office/developer/officetalk2010/ee945362(v=office.11)#creating-resizable-memory-streams-from-byte-arrays\r\n\r\nThe only difference is that the file is not read from local, is read using an http client from an external storage and instead of writing the stream to local I'm writing it to an external storage.\r\n\r\nIf instead of relying on memory stream to automatically be updated I create a new stream like\r\n\r\n```\r\nvar newMemoryStream = new MemoryStream();\r\nexcelWorkbook.Clone(newMemoryStream);\r\n```\r\n\r\nWorks fine..but i want to avoid duplicating the streams in memory.\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2023-09-07T03:30:26.4910221Z","RunDurationInMilliseconds":668}