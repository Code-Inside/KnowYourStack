{"Data":{"Sdk":{"Events":[{"Id":"26663816585","Type":"PullRequestEvent","CreatedAt":"2023-01-26T00:20:33","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1321","RelatedDescription":"Opened pull request \"Move OpenXmlPackage features into own file\" (#1321) at dotnet/Open-XML-SDK","RelatedBody":""},{"Id":"26663752467","Type":"IssuesEvent","CreatedAt":"2023-01-26T00:15:21","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1211","RelatedDescription":"Closed issue \"No support of System.IO.Packaging.Package.Save()/Flush() in .NET Core\" (#1211) at dotnet/Open-XML-SDK","RelatedBody":"Since _OpenXml_ is based on _System.IO.Packaging_ and there is no support for `Flush()`/`Save()` in .NET Core (dotnet 5, ...), I wanted to ask whether OpenXml is planning a better alternative than closing (disposing) the whole `OpenXmlPackage` (e.g. WordprocessingDocument)?\r\n\r\n```cs\r\n/// <summary>\r\n/// Gets a value indicating whether saving the package is supported by calling <see cref=\"Save\"/>. Some platforms (such as .NET Core), have limited support for saving.\r\n/// If <c>false</c>, in order to save, the document and/or package needs to be fully closed and disposed and then reopened.\r\n/// </summary>\r\n#if FEATURE_PACKAGE_FLUSH\r\npublic static bool CanSave { get; } = true;\r\n#else\r\npublic static bool CanSave { get; }\r\n#endif\r\n```\r\n"},{"Id":"26663752164","Type":"PullRequestEvent","CreatedAt":"2023-01-26T00:15:20","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1307","RelatedDescription":"Merged pull request \"Enable saving on .NET Core\" (#1307) at dotnet/Open-XML-SDK","RelatedBody":"Fixes #1211 "},{"Id":"26663471368","Type":"IssuesEvent","CreatedAt":"2023-01-25T23:52:36","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1299","RelatedDescription":"Closed issue \"Replace System.IO.Packaging.Package with custom abstraction\" (#1299) at dotnet/Open-XML-SDK","RelatedBody":"System.IO.Packaging is used to handle the package and parts. However, the types there are not designed well to be composed or overridden. We should add some abstractions that would handle this so we can build some features that need to intercept these calls.\r\n\r\n- [x] Add abstractions to `main` (https://github.com/OfficeDev/Open-XML-SDK/pull/1295)\r\n- [x] Obsolete OpenXmlPackage.Package on `release/v2.20.0` (https://github.com/OfficeDev/Open-XML-SDK/pull/1306)"},{"Id":"26663469710","Type":"PullRequestEvent","CreatedAt":"2023-01-25T23:52:27","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1306","RelatedDescription":"Merged pull request \"Obsolete OpenXmlPackage.Package\" (#1306) at dotnet/Open-XML-SDK","RelatedBody":"- Obsolete OpenXmlPackage.Package\r\n\r\nFixes #1299 "},{"Id":"26663459390","Type":"PullRequestEvent","CreatedAt":"2023-01-25T23:51:28","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1316","RelatedDescription":"Merged pull request \"Remove a number of obsolete APIs\" (#1316) at dotnet/Open-XML-SDK","RelatedBody":""},{"Id":"26659186780","Type":"PullRequestEvent","CreatedAt":"2023-01-25T19:28:16","Actor":"Asbjoedt","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1320","RelatedDescription":"Closed pull request \"New EmbeddedPackagePartType\" (#1320) at dotnet/Open-XML-SDK","RelatedBody":"Hi!\r\n\r\nI am trying to fix this issue https://github.com/dotnet/Open-XML-SDK/issues/1318\r\n\r\nThis PR does not fix ISSUE 1, where an EmbeddedPackagePart is saved to URI ```xl/worksheets/embeddings/```.\r\nThis PR does however try to fix ISSUE 2 by reusing the code for ImagePartType (sse https://github.com/dotnet/Open-XML-SDK/issues/1081) to be applicable for new EmbeddedPackagePartType.\r\n\r\nI am not entirely sure, if ISSUE 2 is fixed now, but this PR should be a step on the way nonetheless. Maybe you don't like what I did, so you can just reject it. Also I PR to v2.20 instead of Main, I dunno what you prefer.\r\n\r\nPS. I see you now use ```OpenXmlPackage.PartExtensionProvider.MakeSurePartExtensionExist``` instead of ```Features.GetRequired<IPartExtensionFeature>().Register```. Let me know, if I should use this, or if you want to change this retroactively."},{"Id":"26658862544","Type":"PullRequestEvent","CreatedAt":"2023-01-25T19:11:08","Actor":"Asbjoedt","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1320","RelatedDescription":"Opened pull request \"New EmbeddedPackagePartType\" (#1320) at dotnet/Open-XML-SDK","RelatedBody":"Hi!\r\n\r\nI am trying to fix this issue https://github.com/dotnet/Open-XML-SDK/issues/1318\r\n\r\nThis PR does not fix ISSUE 1, where an EmbeddedPackagePart is saved to URI ```xl/worksheets/embeddings/```.\r\nThis PR does however try to fix ISSUE 2 by reusing the code for ImagePartType (sse https://github.com/dotnet/Open-XML-SDK/issues/1081) to be applicable for new EmbeddedPackagePartType.\r\n\r\nI am not entirely sure, if ISSUE 2 is fixed now, but this PR should be a step on the way nonetheless. Maybe you don't like what I did, so you can just reject it. Also I PR to v2.20 instead of Main, I dunno what you prefer.\r\n\r\nPS. I see you now use ```OpenXmlPackage.PartExtensionProvider.MakeSurePartExtensionExist``` instead of ```Features.GetRequired<IPartExtensionFeature>().Register```. Let me know, if I should use this, or if you want to change this retroactively."},{"Id":"26637652250","Type":"IssuesEvent","CreatedAt":"2023-01-24T23:51:14","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1319","RelatedDescription":"Opened issue \"Add pull request numbers to CHANGELOG\" (#1319) at dotnet/Open-XML-SDK","RelatedBody":""},{"Id":"26627596742","Type":"IssuesEvent","CreatedAt":"2023-01-24T15:33:58","Actor":"Asbjoedt","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1318","RelatedDescription":"Opened issue \"AddEmbeddedPackagePart is saved to wrong path\" (#1318) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\n\r\n_ISSUE 1_\r\n\r\nYou can iterate all EmbeddedPackageParts by doing the below. It iterates WorksheetParts and then each EmbeddedPackagePart.\r\n```\r\nusing (SpreadsheetDocument spreadsheet = SpreadsheetDocument.Open(filepath, true))\r\n{\r\n    IEnumerable<WorksheetPart> worksheetParts = spreadsheet.WorkbookPart.WorksheetParts;\r\n    foreach (WorksheetPart worksheetPart in worksheetParts)\r\n    {\r\n        IEnumerable<EmbeddedPackagePart> embedpackages = worksheetPart.EmbeddedPackageParts;\r\n        foreach (EmbeddedPackagePart part in embedpackages)\r\n        {\r\n\r\n        }\r\n    }\r\n}\r\n```\r\nYou can delete any EmbeddedPackagePart by deleting it at the WorksheetPart level like this.\r\n```\r\nworksheetPart.DeletePart(part);\r\n```\r\n\r\nHowever, if you want to AddEmbeddedPackagePart you can do so also at the WorksheetPart level:\r\n```\r\nEmbeddedPackagePart embedpack = worksheetPart.AddEmbeddedPackagePart(contentType);\r\n```\r\nBut the new EmbeddedPackagePart will be saved to this URI where a new ```embeddings``` folder will be created:\r\n```\r\nxl/worksheets/embeddings/package.bin\r\n```\r\nIf you use Excel, all EmbeddedPackageParts are saved in this folder instead:\r\n```\r\nxl/embeddings/package.bin\r\n```\r\n\r\nIs this correct behaviour? Should Open XML SDK also save the part to ```xl/embeddings```?\r\n\r\n_ISSUE 2:_\r\n\r\nExcel saves the EmbeddedPackagePart with original extension i.e. ```.xlsx```.\r\n\r\nOpen XML SDK saves EmbeddedPackagePart with ```.bin``` extension.\r\n\r\n**Observed behavior**\r\n1. EmbeddedPackagePart is saved to ```xl\\worksheets\\embeddings```\r\n\r\n2. EmbeddedPackagePart is saved with ```.bin``` extension.\r\n\r\n**Expected behavior**\r\n1. EmbeddedPackagePart should be saved to ```xl\\embeddings```\r\n\r\n2. EmbeddedPackagePart should be saved with the original extension of the package i.e. ```.xlsx```.\r\n\r\n**Desktop (please complete the following information):**\r\n* OS: Windows 11\r\n* Office version: 2212\r\n* .NET Target: .Net latest version\r\n* DocumentFormat.OpenXml Version: 2.19\r\n\r\n\r\n"},{"Id":"26614428400","Type":"IssuesEvent","CreatedAt":"2023-01-24T05:06:12","Actor":"shailesh1984","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1317","RelatedDescription":"Closed issue \"System.IO.FileFormatException: File contains corrupted data - Excel file(.xlsx)\" (#1317) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nGetting \"System.IO.FileFormatException: File contains corrupted data\" error in SpreadsheetDocument.Open(filename, false); method for excel(.xlsx) file\r\n\r\nError Detail : \r\nSystem.Exception: OpenXML failed to open Pricing file | â€˜System.IO.FileFormatException: File contains corrupted data.\r\n\tat MS.Internal.IO.2ip.ZipIOEndOfCentralDirectoryBlock.FindPosition(Stream archiveStream)\r\n\tat MS.Internal.IO.Zip.ZiplOEndOfCentralDirectoryBlock.SeekableLoad(ZipIOBlockManager blockManager)\r\n\tat MS.Internal.IO.Zip.ZipArchive..ctor(Stream archiveStream, FileMode mode, FileAccess access, Boolean streaming, Boolean ownStream)at\r\nMS.Internal.IO.2ip.ZipArchive.OpenOnFile(String path, FileMode mode, FileAccess access, FileShare share, Boolean streaming)\r\n\tat System.IO.Packaging.ZipPackage..ctor(String path, FileMode mode, Fileccess access, FileShare share, Boolean streaming)\r\n\tat System.IO.Packaging.Package.Open(String path, FileMode packageMode, FileAccess packageAccess, FileShare packageShare, Boolean streaming)\r\n\tat DocunentFormat.OpenXnl.Packaging.OpenknlPackage-OpenCore(String path, Boolean readiiniteMode)\r\n\tat DocumentFormat.Openxnl.Packaging.SpreadsheetDocument.Open(String path, Boolean isEditable, OpenSettings openSettings)\r\n\r\nHow to fix this issue?"}],"ResultType":"GitHubEvent"}},"RunOn":"2023-01-26T03:30:26.1246238Z","RunDurationInMilliseconds":655}