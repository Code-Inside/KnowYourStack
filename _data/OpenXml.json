{"Data":{"Sdk":{"Events":[{"Id":"23073589768","Type":"PullRequestEvent","CreatedAt":"2022-07-25T20:37:49","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1186","RelatedDescription":"Merged pull request \"Separate out element metadata from factory\" (#1186) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"23056540780","Type":"PullRequestEvent","CreatedAt":"2022-07-25T05:31:15","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1186","RelatedDescription":"Opened pull request \"Separate out element metadata from factory\" (#1186) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"23055540889","Type":"PullRequestEvent","CreatedAt":"2022-07-25T04:01:00","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1185","RelatedDescription":"Opened pull request \"Add a strongly typed layer for parts and elements\" (#1185) at OfficeDev/Open-XML-SDK","RelatedBody":"This allows for decoupling the strongly-typed infrastructure more easily so that the underlying types don't need to know about the strongly typed information.\r\n"},{"Id":"23028977939","Type":"IssuesEvent","CreatedAt":"2022-07-22T12:08:58","Actor":"Asbjoedt","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1184","RelatedDescription":"Opened issue \"DocumentType Strict does not exist\" (#1184) at OfficeDev/Open-XML-SDK","RelatedBody":"# Before submitting an issue, please fill this out\r\n\r\nIs this a:\r\n- [ x ] Issue with the OpenXml library\r\n- [ ] Question on library usage\r\n\r\nIf you have answered that this is a question, please ask it on StackOverflow instead of here.\r\nThis issue tracker is meant to track product issues while StackOverflow excels at answering questions\r\n\r\n---------------- Remove this line and above before posting ----------------\r\n\r\n**Description**\r\n\r\nDocumentType Strict does not exist if you want to change document type. See available options for changing document types for spreadsheets:\r\n\r\nhttps://docs.microsoft.com/en-us/dotnet/api/documentformat.openxml.spreadsheetdocumenttype?view=openxml-2.8.1\r\n\r\n**Information**\r\n\r\n- .NET Target: (ie .NET Framework, .NET Core, UWP, Xamarin, etc)\r\n- DocumentFormat.OpenXml Version: (ie 2.7.2)\r\n\r\n**Repro**\r\n\r\n```csharp\r\n// Please add a self-contained, minimum viable repro of the issue.\r\n// If you require external resources, please provide a gist or GitHub repro\r\n// An Xunit style test is preferred, but a console application would work too.\r\n``` \r\n\r\n**Observed**\r\n\r\nPlease add your observed behavior here\r\n\r\n**Expected**\r\n\r\nPlease add your expected behavior here.\r\n"},{"Id":"23005020902","Type":"IssuesEvent","CreatedAt":"2022-07-21T11:47:52","Actor":"sajjadarashhh","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1183","RelatedDescription":"Opened issue \"external table is not in expected format\" (#1183) at OfficeDev/Open-XML-SDK","RelatedBody":"when save ExcelDocument from OpenXML And try to use it with odbc client it's thrown external table is not in expected format  Exception in C#\r\nthere's an a way to use openxml documents in odbc!?\r\nmy generated document by OpenXML Size is : 3kb and when i open and re-save that document with excel size changed to :10kb\r\nand when i re-save that work fine in odbc"},{"Id":"22992679238","Type":"PullRequestEvent","CreatedAt":"2022-07-20T22:25:36","Actor":"mikeebowen","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1182","RelatedDescription":"Opened pull request \"Powerpoint comment sample\" (#1182) at OfficeDev/Open-XML-SDK","RelatedBody":"The PR adds a sample project showing how to add a PowerPoint modern comment to a slide."},{"Id":"22966552148","Type":"IssuesEvent","CreatedAt":"2022-07-19T20:30:47","Actor":"TrplM","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1181","RelatedDescription":"Closed issue \"Invalid document when `TableColumn.CalculatedColumnFormula` has array formula \" (#1181) at OfficeDev/Open-XML-SDK","RelatedBody":"# Before submitting an issue, please fill this out\r\n\r\nIs this a:\r\n- [x] Issue with the OpenXml library\r\n- [ ] Question on library usage\r\n\r\n**Description**\r\n\r\nWhen a `tableColumn` definition contains a `calculatedColumnFormula` that is an array formula (e.g. `<x:calculatedColumnFormula>{A2+A2}</x:calculatedColumnFormula>`) the resulting document (xlsx) is invalid but repairable.\r\n\r\n**Information**\r\n\r\n- .NET Target: .NET 6\r\n- DocumentFormat.OpenXml Version: (2.16.0)\r\n- ClosedXML (0.96.0)\r\n\r\n**Repro**\r\n\r\n```csharp\r\nnamespace ClosedXML.Excel.Tests\r\n{\r\n    using ClosedXML.Excel;\r\n    using System.IO;\r\n\r\n    internal class Program\r\n    {\r\n        private const string output_directory = \"test_data\";\r\n\r\n        internal static void Main(string[] args)\r\n        {\r\n            Directory.CreateDirectory(output_directory);\r\n\r\n            not_working();\r\n            working_v1();\r\n            working_v2();\r\n\r\n            //Array formulas in TableColumn.CalculatedColumnFormula generates invalid xlsx file\r\n            static void not_working()\r\n            {\r\n                var (wb, ws) = create_base_document();\r\n\r\n                ws.Cell(2, 2).FormulaA1 = \"{Table1[[#This Row],[Values]]+Table1[[#This Row],[Values]]}\";\r\n                ws.Cell(3, 2).FormulaA1 = \"{Table1[[#This Row],[Values]]+Table1[[#This Row],[Values]]}\";\r\n\r\n                using var not_working = File.Create(Path.Join(output_directory, \"not_working.xlsx\"));\r\n\r\n                wb.SaveAs(not_working);\r\n            }\r\n\r\n            static void working_v1()\r\n            {\r\n                var (wb, ws) = create_base_document();\r\n\r\n               //non-unique table formulas prevents addition of x:calculatedColumnFormula\r\n                ws.Cell(2, 2).FormulaA1 = \"{Table1[[#This Row],[Values]]+Table1[[#This Row],[Values]]+Table1[[#This Row],[Values]]}\";\r\n                ws.Cell(3, 2).FormulaA1 = \"{Table1[[#This Row],[Values]]+Table1[[#This Row],[Values]]}\";\r\n\r\n                using var working_v1 = File.Create(Path.Join(output_directory, \"working_v1.xlsx\"));\r\n\r\n                wb.SaveAs(working_v1);\r\n            }\r\n\r\n            //Normal formulas in TableColumn.CalculatedColumnFormula generates valid xlsx file\r\n            static void working_v2()\r\n            {\r\n                var (wb, ws) = create_base_document();\r\n\r\n                ws.Cell(2, 2).FormulaA1 = \"Table1[[#This Row],[Values]]+Table1[[#This Row],[Values]]\";\r\n                ws.Cell(3, 2).FormulaA1 = \"Table1[[#This Row],[Values]]+Table1[[#This Row],[Values]]\";\r\n\r\n                using var working_v2 = File.Create(Path.Join(output_directory, \"working_v2.xlsx\"));\r\n\r\n                wb.SaveAs(working_v2, validate: true, evaluateFormulae: true);\r\n            }\r\n\r\n            static (IXLWorkbook, IXLWorksheet) create_base_document()\r\n            {\r\n                var wb = new XLWorkbook();\r\n                var ws = wb.Worksheets.Add(\"Test data\");\r\n\r\n                ws.Cell(1, 1).Value = \"Values\";\r\n                ws.Cell(1, 2).Value = \"Sum\";\r\n\r\n                ws.Cell(2, 1).Value = 1;\r\n                ws.Cell(3, 1).Value = 1;\r\n\r\n                ws.Range(\"A1\", \"B3\").CreateTable();\r\n\r\n                return (wb, ws);\r\n            }\r\n        }\r\n    }\r\n}\r\n``` \r\n\r\n**Observed**\r\n\r\nExcel was able to open the file by repairing or removing the unreadable content.\r\n*Removed Records: Table from /xl/tables/table1.xml part (Table)*\r\n\r\n**Expected**\r\n\r\nDocument should be generated without errors\r\n"},{"Id":"22965753460","Type":"IssuesEvent","CreatedAt":"2022-07-19T19:40:45","Actor":"TrplM","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1181","RelatedDescription":"Opened issue \"Invalid document when `TableColumn.CalculatedColumnFormula` has array formula \" (#1181) at OfficeDev/Open-XML-SDK","RelatedBody":"# Before submitting an issue, please fill this out\r\n\r\nIs this a:\r\n- [x] Issue with the OpenXml library\r\n- [ ] Question on library usage\r\n\r\n**Description**\r\n\r\nWhen a `tableColumn` definition contains a `calculatedColumnFormula` that is an array formula (e.g. `<x:calculatedColumnFormula>{A2+A2}</x:calculatedColumnFormula>`) the resulting document (xlsx) is invalid but repairable.\r\n\r\n**Information**\r\n\r\n- .NET Target: .NET 6\r\n- DocumentFormat.OpenXml Version: (2.16.0)\r\n- ClosedXML (0.96.0)\r\n\r\n**Repro**\r\n\r\n```csharp\r\nnamespace ClosedXML.Excel.Tests\r\n{\r\n    using ClosedXML.Excel;\r\n    using System.IO;\r\n\r\n    internal class Program\r\n    {\r\n        private const string output_directory = \"test_data\";\r\n\r\n        internal static void Main(string[] args)\r\n        {\r\n            Directory.CreateDirectory(output_directory);\r\n\r\n            not_working();\r\n            working_v1();\r\n            working_v2();\r\n\r\n            //Array formulas in TableColumn.CalculatedColumnFormula generates invalid xlsx file\r\n            static void not_working()\r\n            {\r\n                var (wb, ws) = create_base_document();\r\n\r\n                ws.Cell(2, 2).FormulaA1 = \"{A2+A2}\";\r\n                ws.Cell(3, 2).FormulaA1 = \"{A3+A3}\";\r\n\r\n                using var not_working = File.OpenWrite(Path.Join(output_directory, \"not_working.xlsx\"));\r\n\r\n                wb.SaveAs(not_working);\r\n            }\r\n\r\n            static void working_v1()\r\n            {\r\n                var (wb, ws) = create_base_document();\r\n\r\n                ws.Cell(2, 2).FormulaA1 = \"{A2+A2+A2}\"; //non-unique table formulas prevents addition of x:calculatedColumnFormula\r\n                ws.Cell(3, 2).FormulaA1 = \"{A3+A3}\";\r\n\r\n                using var working_v1 = File.OpenWrite(Path.Join(output_directory, \"working_v1.xlsx\"));\r\n\r\n                wb.SaveAs(working_v1);\r\n            }\r\n\r\n            //Normal formulas in TableColumn.CalculatedColumnFormula generates valid xlsx file\r\n            static void working_v2()\r\n            {\r\n                var (wb, ws) = create_base_document();\r\n\r\n                ws.Cell(2, 2).FormulaA1 = \"A2+A2\";\r\n                ws.Cell(3, 2).FormulaA1 = \"A3+A3\";\r\n\r\n                using var working_v2 = File.OpenWrite(Path.Join(output_directory, \"working_v2.xlsx\"));\r\n\r\n                wb.SaveAs(working_v2);\r\n            }\r\n\r\n            static (IXLWorkbook, IXLWorksheet) create_base_document()\r\n            {\r\n                var wb = new XLWorkbook();\r\n                var ws = wb.Worksheets.Add(\"Test data\");\r\n\r\n                ws.Cell(1, 1).Value = \"Values\";\r\n                ws.Cell(2, 1).Value = 1;\r\n                ws.Cell(3, 1).Value = 1;\r\n\r\n                ws.Range(\"A1\", \"B3\").CreateTable();\r\n\r\n                return (wb, ws);\r\n            }\r\n        }\r\n    }\r\n}\r\n``` \r\n\r\n**Observed**\r\n\r\nExcel was able to open the file by repairing or removing the unreadable content.\r\n*Removed Records: Table from /xl/tables/table1.xml part (Table)*\r\n\r\n**Expected**\r\n\r\nDocument should be generated without errors\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2022-07-30T03:30:26.7430171Z","RunDurationInMilliseconds":612}