{"Data":{"Sdk":{"Events":[{"Id":"14419811883","Type":"PullRequestEvent","CreatedAt":"2020-12-04T20:03:51","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/825","RelatedDescription":"Opened pull request \"Add SchemaAttr back\" (#825) at OfficeDev/Open-XML-SDK","RelatedBody":"This broke some behavior people were expecting. The infrastructure no longer uses it, and it's marked as obsolete now. A later release will expose some of the framework classes to get at this information in a more supported way.\r\n\r\nSee #821 "},{"Id":"14419601658","Type":"PullRequestEvent","CreatedAt":"2020-12-04T19:42:10","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/824","RelatedDescription":"Merged pull request \"Create OpenXmlSchema\" (#824) at OfficeDev/Open-XML-SDK","RelatedBody":"Use OpenXmlSchema to track schema information rather than SchemaAttrAttribute as it should now be deprecated"},{"Id":"14419245936","Type":"PullRequestEvent","CreatedAt":"2020-12-04T19:05:36","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/824","RelatedDescription":"Opened pull request \"Create OpenXmlSchema\" (#824) at OfficeDev/Open-XML-SDK","RelatedBody":"Use OpenXmlSchema to track schema information rather than SchemaAttrAttribute as it should now be deprecated"},{"Id":"14419022075","Type":"PullRequestEvent","CreatedAt":"2020-12-04T18:42:55","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/802","RelatedDescription":"Closed pull request \"Added basic support for SVG files\" (#802) at OfficeDev/Open-XML-SDK","RelatedBody":"This patch allowed us to insert SVG files into a word document, adding support for \"svgblip\" element:\r\nhttps://docs.microsoft.com/en-us/openspecs/office_standards/ms-odrawxml/2451f45e-5d77-4661-86d1-0a017fced779\r\n\r\n"},{"Id":"14418997718","Type":"PullRequestEvent","CreatedAt":"2020-12-04T18:40:24","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/809","RelatedDescription":"Closed pull request \"Parse exponent for int/uint if present\" (#809) at OfficeDev/Open-XML-SDK","RelatedBody":"Fixes #806"},{"Id":"14418966998","Type":"PullRequestEvent","CreatedAt":"2020-12-04T18:37:14","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/823","RelatedDescription":"Merged pull request \"Update release date for 2.12.0\" (#823) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"14418964574","Type":"PullRequestEvent","CreatedAt":"2020-12-04T18:37:00","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/823","RelatedDescription":"Opened pull request \"Update release date for 2.12.0\" (#823) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"14418937665","Type":"PullRequestEvent","CreatedAt":"2020-12-04T18:34:14","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/822","RelatedDescription":"Merged pull request \"Allow saving of svg content to FlatOPC\" (#822) at OfficeDev/Open-XML-SDK","RelatedBody":"Fixes #815 "},{"Id":"14418937585","Type":"IssuesEvent","CreatedAt":"2020-12-04T18:34:13","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/815","RelatedDescription":"Closed issue \"ToFlatOpcDocument() or ToFlatOpcString() throws \"System.Xml.XmlException: 'For security reasons DTD is prohibited in this XML document. To enable DTD processing set the DtdProcessing property on XmlReaderSettings to Parse and pass the settings into XmlReader.Create method.'\"\" (#815) at OfficeDev/Open-XML-SDK","RelatedBody":"# Before submitting an issue, please fill this out\r\n\r\nIs this a:\r\n- [x] Issue with the OpenXml library\r\n- [ ] Question on library usage\r\n\r\nIf you have answered that this is a question, please ask it on StackOverflow instead of here.\r\nThis issue tracker is meant to track product issues while StackOverflow excels at answering questions\r\n\r\n---------------- Remove this line and above before posting ----------------\r\n\r\nWe generate PowerPoint slides via the OpenXML SDK and it seems we are doing \"something\" wrong. PowerPoint opens the file just fine, but I noticed that when I invoke the `ToFlatOpcDocument` or `ToFlatOpcString` the following exception is thrown:\r\n\r\n```\r\n    System.Xml.XmlException: 'For security reasons DTD is prohibited in this XML document. To enable DTD processing set the DtdProcessing property on XmlReaderSettings to Parse and pass the settings into XmlReader.Create method.'\r\n```\r\n\r\n**Information**\r\n\r\n- .NET Target: .NET Core 3.1\r\n- DocumentFormat.OpenXml Version: (ie 2.11.3)\r\n\r\n**Repro**\r\n\r\n[dtd.pptx](https://github.com/OfficeDev/Open-XML-SDK/files/5474212/dtd.pptx)\r\n\r\n```csharp\r\n            byte[] content =System.IO.File.ReadAllBytes(\"dtd.pptx\");\r\n\r\n            MemoryStream validationStream = new MemoryStream();\r\n            await validationStream.WriteAsync(content, 0, content.Length).ConfigureAwait(false);\r\n            validationStream.Position = 0;\r\n\r\n            string xDocString;\r\n            using (PresentationDocument resultDoc = PresentationDocument.Open(validationStream, false))\r\n            {\r\n                var r = resultDoc.ToFlatOpcString(); // boom\r\n            }\r\n``` \r\n\r\n**Observed**\r\n\r\nThe exception is thrown. \r\n\r\n**Expected**\r\n\r\nEven if we do something \"strange\", I would expect that this method doesn't throw this exception. As a workaround I need to implement the \"ToFlatOpc\" method myself and inject the \"Dtdprocessing\" stuff. \r\n\r\nIt would be nice if there would be an overload to inject this setting in your method.\r\n\r\n"}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2020-12-07T05:30:41.3091104Z","RunDurationInMilliseconds":1165}