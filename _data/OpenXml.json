{"Data":{"Sdk":{"Events":[{"Id":"45955412972","Type":"IssuesEvent","CreatedAt":"2025-01-27T16:36:54","Actor":"AlfredHellstern","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1851","RelatedDescription":"Closed issue \"On desktop Word file is corrupted, but I can open it online or with Libre Office or WPS...\" (#1851) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\nHello, I create generation of word file from dotx template. But in desktop Word Office app I can't open file, but with another ways, I can open (WPS, Libre Office, Google Docs, Online Office)\nWhat the problem? Is this because I clone dotx file and generate docx?\n\n```csharp\npublic ActionResult GenerateDocument(int reportViewId, int rid)\n{\n\n    string templatePath = Server.MapPath(\"~/Content/templates/word/Template.dotx\");\n    if (RepView.WordTemplateFileName != null)\n    {\n        templatePath = Server.MapPath(\"\\\\UserFiles\\\\ReportViewWordTemplates\\\\\" + RepView.WordTemplateFileId);\n    }\n    string outputPath = Server.MapPath(\"~/generated.docx\");\n\n    using (MemoryStream memoryStream = new MemoryStream())\n    {\n        try\n        {\n            using (WordprocessingDocument wordDoc = WordprocessingDocument.Open(templatePath, false))\n            {\n                wordDoc.Clone(memoryStream);\n            }\n\n        }\n        catch\n        {\n            using (WordprocessingDocument wordDoc = WordprocessingDocument.Open(templatePath, false))\n            {\n                wordDoc.Clone(memoryStream);\n            }\n        }\n\n        using (WordprocessingDocument generatedDoc = WordprocessingDocument.Open(memoryStream, true))\n        {\n            memoryStream.Position = 0;\n            var mainDocumentPart = generatedDoc.MainDocumentPart;\n\n            var body = mainDocumentPart.Document.Body;\n\n            var headerParts = generatedDoc.MainDocumentPart.HeaderParts;\n            var footerParts = generatedDoc.MainDocumentPart.FooterParts;\n\n            foreach (var parts in headerParts)\n            {\n                foreach (var currentText in parts.RootElement.Descendants<DocumentFormat.OpenXml.Wordprocessing.Text>())\n                {\n                    currentText.Text = currentText.Text.Replace(\"Header\", header);\n                }\n            }\n            foreach (var parts in footerParts)\n            {\n                foreach (var currentText in parts.RootElement.Descendants<DocumentFormat.OpenXml.Wordprocessing.Text>())\n                {\n                    currentText.Text = currentText.Text.Replace(\"Bottom\", bottom);\n                }\n            }\n\n            ImagePart imgp = mainDocumentPart.AddImagePart(ImagePartType.Png);\n            var textElements = body.Descendants<Text>()\n          .Where(t => t.Text.Contains(\"text\"))\n          .FirstOrDefault();\n   \n            var run = new Run(new Text());\n            if (textElements != null)\n            {\n                run = textElements.Parent as Run;\n            }\n           \n            foreach (var item in headers)\n            {\n                if (blocks.Where(p => p.DocumentConstructorHeaderId == item.DocumentConstructorHeaderId).Count() != 0)\n                {\n                    \n                    if (item.SizeTitle > 1)\n                    {\n                        AddHeading(body, item.Title, 1, mainDocumentPart.StyleDefinitionsPart);\n                    }\n                    else\n                    {\n                        AddHeading(body, item.Title, 2, mainDocumentPart.StyleDefinitionsPart);\n                    }\n                }\n\n                foreach (var list in newBlocks.Where(p => p.DocumentConstructorHeaderId == item.DocumentConstructorHeaderId).OrderBy(p => p.Npp).ToList())\n                {\n                    if (list.ImageData != null)\n                    {\n                        using (var imageStream = new MemoryStream(list.ImageData))\n                        {\n                            imgp.FeedData(imageStream);\n                        }\n\n                        AddImageToBody(mainDocumentPart, list.ImageData);\n                    }\n                    /*if (list.Content != null)\n                    {\n                        AddHeading(body, item.Title, 1, mainDocumentPart.StyleDefinitionsPart);\n                    }*/\n\n                    Paragraph para = body.AppendChild(new Paragraph());\n\n                    if (textElements != null)\n                    {\n                        // Извлекаем свойства Run\n                        var runProperties = run.RunProperties?.CloneNode(true);\n                        var newRun = new Run(new Text(list.Content));\n                        newRun.PrependChild(runProperties);\n                        para.AppendChild(newRun);\n                    }\n                    else\n                    {\n                        para.AppendChild(new Run(new Text(list.Content)));\n                    }\n                    ReplaceText(body, \"text\", \"\");\n                }\n            }\n            generatedDoc.Close();\n        }\n        return File(memoryStream.ToArray(), \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\", \"generated.docx\");\n    }\n}\n```\n\n"},{"Id":"45955146127","Type":"IssuesEvent","CreatedAt":"2025-01-27T16:30:00","Actor":"AlfredHellstern","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1787","RelatedDescription":"Closed issue \"Cloning sheet doesn't clone Drawing part\" (#1787) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\nI have a template xlsx file, with template sheet, which in turn are cloned and their content is replaced ie. Cell values and images. \nAfter opening the file, the cell values are unique for each cloned Sheet except for the images which are the same, namely the last replaced image.\n\n**Screenshots**\n<img width=\"194\" alt=\"image\" src=\"https://github.com/user-attachments/assets/ed70d85a-1577-4e2b-97d5-975815d3923a\">\n\n**To Reproduce**\nI have this code which clones a given Sheet:\n```csharp\n    public static async void CloneSheet(SpreadsheetDocument spreadSheet, string sheetName, string newSheetName) {\n          // Get the source sheet\n          var sheets = spreadSheet.WorkbookPart.Workbook.Sheets;\n          var sourceSheet = sheets.Elements<Sheet>().FirstOrDefault(s => s.Name == sheetName);\n          if (sourceSheet == null) {\n              throw new ArgumentException($\"Sheet with name {sheetName} does not exist.\");\n          }\n\n          // Get the source worksheet part\n          var sourceSheetPart = (WorksheetPart)spreadSheet.WorkbookPart.GetPartById(sourceSheet.Id);\n\n          // Create a new worksheet part\n          var newSheetPart = spreadSheet.WorkbookPart.AddNewPart<WorksheetPart>();\n          newSheetPart.Worksheet = (Worksheet)sourceSheetPart.Worksheet.Clone();\n\n          // Clone the relationships\n          foreach (var rel in sourceSheetPart.Parts) {\n              newSheetPart.AddPart(rel.OpenXmlPart, rel.RelationshipId);\n          }\n\n          // Clone DrawingsPart and its related ImageParts\n          if (sourceSheetPart.DrawingsPart != null) {\n              var sourceDrawingsPart = sourceSheetPart.DrawingsPart;\n              DrawingsPart newDrawingsPart;\n              \n              if (newSheetPart.DrawingsPart == null) {\n                  newDrawingsPart = newSheetPart.AddNewPart<DrawingsPart>();\n              } else {\n                  newDrawingsPart = newSheetPart.DrawingsPart;\n              }\n\n              newDrawingsPart.WorksheetDrawing = (WorksheetDrawing)sourceDrawingsPart.WorksheetDrawing.Clone();\n\n              var imagePartsToClone = sourceDrawingsPart.ImageParts.ToList();\n\n              foreach (var imagePart in imagePartsToClone) {\n                  var newImagePart = newDrawingsPart.AddImagePart(imagePart.ContentType);\n\n\n                  using (var stream = imagePart.GetStream()) {\n                          newImagePart.FeedData(stream);\n                  }\n\n                  // Update the BlipFill.Blip.Embed.Value to reference the new image part\n                  foreach (var blip in newDrawingsPart.WorksheetDrawing.Descendants<DocumentFormat.OpenXml.Drawing.Blip>()) {\n                      if (blip.Embed.Value == sourceDrawingsPart.GetIdOfPart(imagePart)) {\n                          var newId = newDrawingsPart.GetIdOfPart(newImagePart);\n                          blip.Embed.Value = newId;\n                      }\n                  }\n              }\n          }\n\n          // Create a new sheet and add it to the workbook\n          var newSheetId = spreadSheet.WorkbookPart.GetIdOfPart(newSheetPart);\n          var newSheet = new Sheet {\n              Id = newSheetId,\n              SheetId = sheets.Elements<Sheet>().Max(s => s.SheetId.Value) + 1,\n              Name = newSheetName // todo: Ensure the new sheet name is unique\n          };\n\n          sheets.Append(newSheet);\n\n          // Save the workbook\n          spreadSheet.WorkbookPart.Workbook.Save();\n      }\n```\n\n**Observed behavior**\nWhat I discovered is that the `Clone()` method on the `sourceDrawingsPart.WorksheetDrawing` doesn't work and in effect, make all the cloned sheets share the DrawingsPart.\n\n**Expected behavior**\nHow can achieve DrawingsPart cloning to work?\n\n**Desktop (please complete the following information):**\n - OS: MacOS, Windows\n - .NET Target: .NET Core, .NET Framework\n - DocumentFormat.OpenXml Version: 3.1.0, 3.0.2\n"},{"Id":"45954867354","Type":"PullRequestEvent","CreatedAt":"2025-01-27T16:22:51","Actor":"AlfredHellstern","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1862","RelatedDescription":"Merged pull request \"Bump dawidd6/action-download-artifact from 6 to 8\" (#1862) at dotnet/Open-XML-SDK","RelatedBody":"Bumps [dawidd6/action-download-artifact](https://github.com/dawidd6/action-download-artifact) from 6 to 8.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/dawidd6/action-download-artifact/releases\">dawidd6/action-download-artifact's releases</a>.</em></p>\n<blockquote>\n<h2>v8</h2>\n<h2>New features</h2>\n<ul>\n<li><code>use_unzip</code> boolean input (defaulting to false) - if set to true, the action will use system provided <code>unzip</code> utility for unpacking downloaded artifact(s) (note that the action will first download the .zip artifact file, then unpack it and remove the .zip file)</li>\n</ul>\n<h2>What's Changed</h2>\n<ul>\n<li>README: v7 by <a href=\"https://github.com/haines\"><code>@​haines</code></a> in <a href=\"https://redirect.github.com/dawidd6/action-download-artifact/pull/318\">dawidd6/action-download-artifact#318</a></li>\n<li>Unzip by <a href=\"https://github.com/dawidd6\"><code>@​dawidd6</code></a> in <a href=\"https://redirect.github.com/dawidd6/action-download-artifact/pull/325\">dawidd6/action-download-artifact#325</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/haines\"><code>@​haines</code></a> made their first contribution in <a href=\"https://redirect.github.com/dawidd6/action-download-artifact/pull/318\">dawidd6/action-download-artifact#318</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/dawidd6/action-download-artifact/compare/v7...v8\">https://github.com/dawidd6/action-download-artifact/compare/v7...v8</a></p>\n<h2>v7</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>build(deps): bump fast-xml-parser from 4.4.0 to 4.4.1 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/dawidd6/action-download-artifact/pull/299\">dawidd6/action-download-artifact#299</a></li>\n<li>build(deps): bump <code>@​actions/artifact</code> from 2.1.7 to 2.1.9 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/dawidd6/action-download-artifact/pull/300\">dawidd6/action-download-artifact#300</a></li>\n<li>build(deps): bump adm-zip from 0.5.14 to 0.5.15 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/dawidd6/action-download-artifact/pull/301\">dawidd6/action-download-artifact#301</a></li>\n<li>build(deps): bump adm-zip from 0.5.15 to 0.5.16 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/dawidd6/action-download-artifact/pull/306\">dawidd6/action-download-artifact#306</a></li>\n<li>build(deps): bump path-to-regexp from 6.2.2 to 6.3.0 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/dawidd6/action-download-artifact/pull/307\">dawidd6/action-download-artifact#307</a></li>\n<li>build(deps): bump <code>@​actions/artifact</code> from 2.1.9 to 2.1.10 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/dawidd6/action-download-artifact/pull/311\">dawidd6/action-download-artifact#311</a></li>\n<li>build(deps): bump <code>@​actions/core</code> from 1.10.1 to 1.11.0 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/dawidd6/action-download-artifact/pull/310\">dawidd6/action-download-artifact#310</a></li>\n<li>build(deps): bump <code>@​actions/core</code> from 1.11.0 to 1.11.1 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/dawidd6/action-download-artifact/pull/312\">dawidd6/action-download-artifact#312</a></li>\n<li>build(deps): bump <code>@​actions/artifact</code> from 2.1.10 to 2.1.11 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/dawidd6/action-download-artifact/pull/313\">dawidd6/action-download-artifact#313</a></li>\n<li>build(deps): Fix cross-spawn &gt;=7.0.0 &lt;= 7.0.5 vulnerability by <a href=\"https://github.com/alexcouret\"><code>@​alexcouret</code></a> in <a href=\"https://redirect.github.com/dawidd6/action-download-artifact/pull/317\">dawidd6/action-download-artifact#317</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/alexcouret\"><code>@​alexcouret</code></a> made their first contribution in <a href=\"https://redirect.github.com/dawidd6/action-download-artifact/pull/317\">dawidd6/action-download-artifact#317</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/dawidd6/action-download-artifact/compare/v6...v7\">https://github.com/dawidd6/action-download-artifact/compare/v6...v7</a></p>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/dawidd6/action-download-artifact/commit/20319c5641d495c8a52e688b7dc5fada6c3a9fbc\"><code>20319c5</code></a> README: v8</li>\n<li><a href=\"https://github.com/dawidd6/action-download-artifact/commit/e58a9e5d14231715ece082f2068a0bd148cb72e6\"><code>e58a9e5</code></a> Unzip (<a href=\"https://redirect.github.com/dawidd6/action-download-artifact/issues/325\">#325</a>)</li>\n<li><a href=\"https://github.com/dawidd6/action-download-artifact/commit/6d05268723e4080b84fe8d5c0c5cd83226a81e5f\"><code>6d05268</code></a> node_modules: update</li>\n<li><a href=\"https://github.com/dawidd6/action-download-artifact/commit/c03fb0c92813d0d9b088539572090518f7797df4\"><code>c03fb0c</code></a> README: v7 (<a href=\"https://redirect.github.com/dawidd6/action-download-artifact/issues/318\">#318</a>)</li>\n<li><a href=\"https://github.com/dawidd6/action-download-artifact/commit/80620a5d27ce0ae443b965134db88467fc607b43\"><code>80620a5</code></a> node_modules: update</li>\n<li><a href=\"https://github.com/dawidd6/action-download-artifact/commit/b15e003f466e47921c37351b59dce4f67d3f6693\"><code>b15e003</code></a> node_modules: install</li>\n<li><a href=\"https://github.com/dawidd6/action-download-artifact/commit/1ee9a455fd340a42764af180c706e2f14a5c03ee\"><code>1ee9a45</code></a> build(deps): Fix cross-spawn &gt;=7.0.0 &lt;= 7.0.5 vulnerability (<a href=\"https://redirect.github.com/dawidd6/action-download-artifact/issues/317\">#317</a>)</li>\n<li><a href=\"https://github.com/dawidd6/action-download-artifact/commit/b2f2706ac43ccd303d565ec5c26f486548c111f4\"><code>b2f2706</code></a> build(deps): bump <code>@​actions/artifact</code> from 2.1.10 to 2.1.11 (<a href=\"https://redirect.github.com/dawidd6/action-download-artifact/issues/313\">#313</a>)</li>\n<li><a href=\"https://github.com/dawidd6/action-download-artifact/commit/fdbeba027cd21fcbef155277d8e81c3e81e0bafe\"><code>fdbeba0</code></a> build(deps): bump <code>@​actions/core</code> from 1.11.0 to 1.11.1 (<a href=\"https://redirect.github.com/dawidd6/action-download-artifact/issues/312\">#312</a>)</li>\n<li><a href=\"https://github.com/dawidd6/action-download-artifact/commit/a74b42987a3ec3d6a405b3b18e968fb17f25847a\"><code>a74b429</code></a> build(deps): bump <code>@​actions/core</code> from 1.10.1 to 1.11.0 (<a href=\"https://redirect.github.com/dawidd6/action-download-artifact/issues/310\">#310</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/dawidd6/action-download-artifact/compare/v6...v8\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=dawidd6/action-download-artifact&package-manager=github_actions&previous-version=6&new-version=8)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>"},{"Id":"45922574393","Type":"IssuesEvent","CreatedAt":"2025-01-26T13:31:21","Actor":"sani-j","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1864","RelatedDescription":"Opened issue \"Word file is corrupted when replace the header in a word document which has section breaks, using Open XML SDK for replacing header\" (#1864) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\nHi, I am using the replace the header in a word processing document code which uses two documents. The header in fromFile.docx to be replaced in toFile.docx. The file toFile.docx already have section breaks. The section breaks can be added using Layout tab in word, select Breaks --> Section Breaks--> Next Page and save the document. After the header replacement code execution the toFile.docx became corrupted. Facing this issue and how this can be fixed. The code is given below.\n\n\nusing DocumentFormat.OpenXml.Packaging;\nusing DocumentFormat.OpenXml.Spreadsheet;\nusing DocumentFormat.OpenXml.Wordprocessing;\nusing System;\nusing System.Collections.Generic;\nusing System.Linq;\n\nstring fromFile = @\"C:\\Users\\jhe\\Desktop\\LearnAndTech\\HeaderAndFooter\\MSDNTest\\fromFile.docx\";\nstring toFile = @\"C:\\Users\\jhe\\Desktop\\LearnAndTech\\HeaderAndFooter\\MSDNTest\\toFile.docx\";\n\nAddHeaderFromTo(fromFile, toFile);\n\n\nstatic void AddHeaderFromTo(string fromFile, string toFile)\n{\n    // Replace header in target document with header of source document.\n    using (WordprocessingDocument wdDoc = WordprocessingDocument.Open(toFile, true))\n    using (WordprocessingDocument wdDocSource = WordprocessingDocument.Open(fromFile, true))\n    {\n        if (wdDocSource.MainDocumentPart is null || wdDocSource.MainDocumentPart.HeaderParts is null)\n        {\n            throw new ArgumentNullException(\"MainDocumentPart and/or HeaderParts is null.\");\n        }\n\n        if (wdDoc.MainDocumentPart is null)\n        {\n            throw new ArgumentNullException(\"MainDocumentPart is null.\");\n        }\n\n        MainDocumentPart mainPart = wdDoc.MainDocumentPart;\n\n        // Delete the existing header part.\n        mainPart.DeleteParts(mainPart.HeaderParts);\n\n        // Create a new header part.\n        DocumentFormat.OpenXml.Packaging.HeaderPart headerPart = mainPart.AddNewPart<HeaderPart>();\n\n        // Get Id of the headerPart.\n        string rId = mainPart.GetIdOfPart(headerPart);\n\n        // Feed target headerPart with source headerPart.\n\n        DocumentFormat.OpenXml.Packaging.HeaderPart? firstHeader = wdDocSource.MainDocumentPart.HeaderParts.FirstOrDefault();\n\n        wdDocSource.MainDocumentPart.HeaderParts.FirstOrDefault();\n\n        if (firstHeader is not null)\n        {\n            headerPart.FeedData(firstHeader.GetStream());\n        }\n\n        if (mainPart.Document.Body is null)\n        {\n            throw new ArgumentNullException(\"Body is null.\");\n        }\n\n        // Get SectionProperties and Replace HeaderReference with new Id.\n        IEnumerable<DocumentFormat.OpenXml.Wordprocessing.SectionProperties> sectPrs = mainPart.Document.Body.Elements<SectionProperties>();\n        foreach (var sectPr in sectPrs)\n        {\n            // Delete existing references to headers.\n            sectPr.RemoveAllChildren<HeaderReference>();\n\n            // Create the new header reference node.\n            sectPr.PrependChild<HeaderReference>(new HeaderReference() { Id = rId });\n        }\n    }\n}\n\n**To Reproduce**\nCreate fromFile.docx and toFile.docx files with headers.\nAdd section breaks to toFile.docx. The section breaks can be added using Layout tab in word, select Breaks --> Section Breaks--> Next Page and save the document. Execute the above code. \n\n\n**Observed behavior**\nA popup will be shown while opening the toFile.docx after the above code execution which says 'word found unreadable contents in toFile.docx. Do you want to recover the contents of this document? '.\n\n**Expected behavior**\nOpen the file without corruption or any error,\n\n**Desktop (please complete the following information):**\n - OS: Windows 10\n - Office version : Microsoft 365 Apps for enterprise Version 2412\n - .NET Target: any\n - DocumentFormat.OpenXml Version: 3.2.0\n\nThanks in advance."},{"Id":"45912529067","Type":"IssuesEvent","CreatedAt":"2025-01-25T17:59:33","Actor":"tomjebo","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1853","RelatedDescription":"Closed issue \"Bug with Open XML SDK\" (#1853) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\nhow to track changes in a word document with inserted and deleted word by word along with color Inserted updating track changes, but deleted not updating track changes.\n\n```csharp\nSample code:\npublic void TrackChangesInWord(string filePath, string newText, string oldText)\n{\n    using (WordprocessingDocument wordDoc = WordprocessingDocument.Open(filePath, true))\n    {\n        var mainPart = wordDoc.MainDocumentPart;\n        var body = mainPart.Document.Body;\n\n        foreach (var paragraph in body.Elements<Paragraph>())\n        {\n            var runs = paragraph.Elements<Run>().ToList();\n            string combinedText = string.Join(\"\", runs.Select(r => r.GetFirstChild<Text>()?.Text ?? string.Empty));\n\n            if (combinedText.Contains(oldText))\n            {\n                // Find the start index of the old text\n                int startIndex = combinedText.IndexOf(oldText);\n\n                // Remove all existing runs\n                foreach (var run in runs)\n                {\n                    run.Remove();\n                }\n\n                // Add text before the old word\n                if (startIndex > 0)\n                {\n                    string beforeText = combinedText.Substring(0, startIndex);\n                    paragraph.AppendChild(new Run(new Text(beforeText)));\n                }\n\n                // Add deleted text as a tracked change\n                var deletedRun = new DeletedRun\n                {\n                    Author = \"AuthorName\",\n                    Date = DateTime.Now\n                };\n                var deletedTextRun = new Run\n                {\n                    RunProperties = new RunProperties(new Color { Val = \"FF0000\" }) // Red for deleted\n                };\n                deletedTextRun.AppendChild(new Text(oldText));\n                deletedRun.AppendChild(deletedTextRun);\n                paragraph.AppendChild(deletedRun);\n\n                // Add inserted text as a tracked change\n                var insertedRun = new InsertedRun\n                {\n                    Author = \"AuthorName\",\n                    Date = DateTime.Now\n                };\n                var insertedTextRun = new Run\n                {\n                    RunProperties = new RunProperties(new Color { Val = \"00FF00\" }) // Green for inserted\n                };\n                insertedTextRun.AppendChild(new Text(newText));\n                insertedRun.AppendChild(insertedTextRun);\n                paragraph.AppendChild(insertedRun);\n\n                // Add text after the old word\n                string afterText = combinedText.Substring(startIndex + oldText.Length);\n                if (!string.IsNullOrEmpty(afterText))\n                {\n                    paragraph.AppendChild(new Run(new Text(afterText)));\n                }\n            }\n        }\n\n        mainPart.Document.Save();\n    }\n}\n```\n"},{"Id":"45867460976","Type":"PullRequestEvent","CreatedAt":"2025-01-24T01:15:38","Actor":"QuocDatHoang","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1863","RelatedDescription":"Opened pull request \"Optimize ToFlatOpcString to reduce memory usage and improve performan…\" (#1863) at dotnet/Open-XML-SDK","RelatedBody":"## Optimized the ToFlatOpcString method to address high memory usage and improve performance. \r\n\r\nThe previous implementation relied on LINQ, which created a significant amount of intermediate collections and dictionaries, leading to inefficiency, especially when working with Word documents containing images. \r\n\r\nThis update removes unnecessary LINQ operations and reduces memory overhead, replace manual chunking logic with Convert.ToBase64String using Base64FormattingOptions.InsertLineBreaks. \r\n\r\nThis approach eliminates the need for LINQ-based chunking and aggregation, resulting in cleaner, more efficient code while adhering to the MIME specification for line breaks in Base64 encoding.\r\n\r\nA sample benchmark output when working with a 822KB-word document.\r\n\r\n![image](https://github.com/user-attachments/assets/3efadb6b-9f0f-41d5-9e8d-9992d0296469)\r\n"},{"Id":"45859106889","Type":"IssuesEvent","CreatedAt":"2025-01-23T19:17:35","Actor":"tomjebo","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/925","RelatedDescription":"Closed issue \"generated paraId values replaced with msword app\" (#925) at dotnet/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nParagraph have property ParagraphId\r\n```csharp\r\n        /// <summary>\r\n        /// <para>paraId, this property is only available in Office 2010 and later.</para>\r\n        /// <para>Represents the following attribute in the schema: w14:paraId</para>\r\n        /// </summary>\r\n        /// <remark>\r\n        /// xmlns:w14=http://schemas.microsoft.com/office/word/2010/wordml\r\n        /// </remark>\r\n\r\n#pragma warning disable CS0618 // Type or member is obsolete\r\n\r\n        [SchemaAttr(52, \"paraId\")]\r\n#pragma warning restore CS0618 // Type or member is obsolete\r\n\r\n        public HexBinaryValue? ParagraphId\r\n        {\r\n            get => GetAttribute<HexBinaryValue>();\r\n            set => SetAttribute(value);\r\n        }\r\n``` \r\n\r\nAccording to the issue #245 I tried to generate paraId for paragraphs (and set textId = \"77777777\" to respect spec). When I open generated docx with MS Word 2016/365 - it's Ok, no errors, no warnings etc.\r\n\r\nGenerated docx is protected from modifications, I can only add/modify/remove comments to it.\r\n\r\nAfter adding new comment to document and saving it - all paraId values replaced by MS Word to new values (in document.xml).\r\nWhen I open this docx with MS Word again, add new comment and save - paraId values remain the same.\r\n\r\n**QUESTION**\r\nHow generate paraId values for paragraphs so that the MS Word does not change their values?\r\nMy app needs these IDs not to change after adding comments.\r\n\r\n**Example**\r\ngenerated docx contains:\r\n<w:p w14:paraId=\"1AD69E69\" w14:textId=\"77777777\" ...\r\n\r\nafter adding comment via ms word (after 1st \"edit\" and all subsequent):\r\n<w:p w14:paraId=\"6B99AEB6\" w14:textId=\"77777777\" ..."}],"ResultType":"GitHubEvent"}},"RunOn":"2025-01-28T03:30:21.2565038Z","RunDurationInMilliseconds":574}