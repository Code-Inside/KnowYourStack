{"Data":{"Sdk":{"Events":[{"Id":"27620728981","Type":"PullRequestEvent","CreatedAt":"2023-03-09T23:49:03","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1337","RelatedDescription":"Closed pull request \"Add public API analyzer to track changes\" (#1337) at dotnet/Open-XML-SDK","RelatedBody":""},{"Id":"27620725840","Type":"PullRequestEvent","CreatedAt":"2023-03-09T23:48:46","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1315","RelatedDescription":"Closed pull request \"Remove custom project load style\" (#1315) at dotnet/Open-XML-SDK","RelatedBody":"This had been in place for some performance issues in VS. It does make\ndevelopment challenging, and with the refactoring of the framework from\nthe strongly typed classes, Visual Studio seems to handle this better.\n"},{"Id":"27620507754","Type":"PullRequestEvent","CreatedAt":"2023-03-09T23:31:20","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1345","RelatedDescription":"Merged pull request \"Convert LINQ generator to run as source generator\" (#1345) at dotnet/Open-XML-SDK","RelatedBody":"This change integrates the LINQ generator with the source generator infrastructure so things will stay up-to-date as well as use a single source of truth.\n"},{"Id":"27564695368","Type":"IssuesEvent","CreatedAt":"2023-03-08T02:11:31","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1356","RelatedDescription":"Opened issue \"Comments for LINQ generated code does not contain inherited attributes/elements\" (#1356) at dotnet/Open-XML-SDK","RelatedBody":"Previously, the generation for the code relied on runtime information which would automatically get the inherited value. With the move to using source generators, this is not the case and is not straightforward with the current data structure.\r\n\r\nThe direction to investigate here would be:\r\n\r\n- Create a lookup in OpenXmlGeneratorServices that would search the types given `SchemaType.BaseClass`\r\n- Update the backend to not use a class name in `SchemaType.BaseClass` but rather a QName\r\n\r\n_Originally posted by @twsouthwick in https://github.com/dotnet/Open-XML-SDK/issues/1345#issuecomment-1459157916_\r\n            "},{"Id":"27541547768","Type":"IssuesEvent","CreatedAt":"2023-03-07T08:54:57","Actor":"lindexi","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1355","RelatedDescription":"Opened issue \"Open document fail when Content_Types records paths with wrong case\" (#1355) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\n\r\nThe `PresentationDocument.Open` will throw the OpenXmlPackageException exception when we open the document which Content_Types records paths with wrong case.\r\n\r\n```\r\nDocumentFormat.OpenXml.Packaging.OpenXmlPackageException:“The document cannot be opened because there is an invalid part with an unexpected content type. \r\n[Part Uri=/ppt/presProps.xml], \r\n[Content Type=application/xml], \r\n[Expected Content Type=application/vnd.openxmlformats-officedocument.presentationml.presProps+xml].”\r\n\r\nDocumentFormat.OpenXml.Packaging.OpenXmlPart.Load(DocumentFormat.OpenXml.Packaging.OpenXmlPackage, DocumentFormat.OpenXml.Packaging.OpenXmlPart, System.Uri, string, System.Collections.Generic.Dictionary<System.Uri, DocumentFormat.OpenXml.Packaging.OpenXmlPart>)\r\n    DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.LoadReferencedPartsAndRelationships(DocumentFormat.OpenXml.Packaging.OpenXmlPackage, DocumentFormat.OpenXml.Packaging.OpenXmlPart, DocumentFormat.OpenXml.Packaging.RelationshipCollection, System.Collections.Generic.Dictionary<System.Uri, DocumentFormat.OpenXml.Packaging.OpenXmlPart>)\r\n    DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.LoadReferencedPartsAndRelationships(DocumentFormat.OpenXml.Packaging.OpenXmlPackage, DocumentFormat.OpenXml.Packaging.OpenXmlPart, DocumentFormat.OpenXml.Packaging.RelationshipCollection, System.Collections.Generic.Dictionary<System.Uri, DocumentFormat.OpenXml.Packaging.OpenXmlPart>)\r\n    DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Load(System.IO.Packaging.Package)\r\n    DocumentFormat.OpenXml.Packaging.PresentationDocument.Open(System.IO.Stream, bool, DocumentFormat.OpenXml.Packaging.OpenSettings)\r\n```\r\n\r\nThe `[Content_Types].xml` records the PartName with wrong case, such as `/ppt/presprops.xml` what we expect is `/ppt/presProps.xml`.\r\n\r\nAnd we can open the document with Office PowerPoint, but fail with OpenXMLSDK.\r\n\r\n\r\n**Screenshots**\r\n\r\n\r\n**To Reproduce**\r\n// Please add a self-contained, minimum viable repro of the issue.\r\n// If you require external resources, please provide a gist or GitHub repro\r\n// An Xunit style test is preferred, but a console application would work too.\r\n\r\nSteps to reproduce the behavior:\r\n1. Download the [test file](https://github.com/dotnet/Open-XML-SDK/files/10907289/Content_Types.Path.case.pptx) \r\n2. Use the code to open the test file:\r\n\r\n```\r\nPresentationDocument.Open(testFilePath, false)\r\n```\r\n\r\n\r\n**Observed behavior**\r\nThrow the exception\r\n\r\n**Expected behavior**\r\nThe Open XML SDK can open the document file.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: any\r\n - Office version [e.g. 16.0.15427.20178]\r\n - .NET Target: any\r\n - DocumentFormat.OpenXml Version: 2.19.0\r\n\r\n**Additional context**\r\n\r\nWhy the Open XML SDK can not open this document? Because the Open XML SDK will use ZipPackage to get the ContentType, see\r\n\r\nhttps://github.com/dotnet/runtime/blob/2d5a9162f6bd9583981d54363d077a04e4efc868/src/libraries/System.IO.Packaging/src/System/IO/Packaging/ZipPackage.cs#L604-L624\r\n\r\nBut the `_overrideDictionary` does not ignore case, see\r\n\r\nhttps://github.com/dotnet/runtime/blob/2d5a9162f6bd9583981d54363d077a04e4efc868/src/libraries/System.IO.Packaging/src/System/IO/Packaging/ZipPackage.cs#L694-L699\r\n\r\nAnd it may be fixed in https://github.com/dotnet/Open-XML-SDK/pull/1295"},{"Id":"27493616541","Type":"PullRequestEvent","CreatedAt":"2023-03-04T22:52:26","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1354","RelatedDescription":"Merged pull request \"Update LINQ files\" (#1354) at dotnet/Open-XML-SDK","RelatedBody":"This is mostly so that when this is converted to a generator it doesn't have the following changes:\n\n- Additional namespaces/elements\n- Source generators have the UTF8-BOM appended\n"},{"Id":"27493569919","Type":"PullRequestEvent","CreatedAt":"2023-03-04T22:43:15","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1354","RelatedDescription":"Opened pull request \"Update LINQ files\" (#1354) at dotnet/Open-XML-SDK","RelatedBody":"This is mostly so that when this is converted to a generator it doesn't have the following changes:\n\n- Additional namespaces/elements\n- Source generators have the UTF8-BOM appended\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2023-03-14T03:30:26.8735268Z","RunDurationInMilliseconds":737}