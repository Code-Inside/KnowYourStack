{"Data":{"Sdk":{"Events":[{"Id":"26440383931","Type":"PullRequestEvent","CreatedAt":"2023-01-15T22:17:24","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1311","RelatedDescription":"Opened pull request \"Enable large part writing\" (#1311) at OfficeDev/Open-XML-SDK","RelatedBody":"On .NET Core and .NET 5+, there is an issue that prevents largs parts from being written to a package. This is due to the underlying ZipArchive buffering everything in memory when updating an archive entry. Because of the way that we use the archive, the only way around that is to load the package in a write-only mode. With the recent addition of being able to reload a package, we can work around this behavior by redirecting streams and then writing them to a write-only package after everything else has been written.\r\n"},{"Id":"26440279447","Type":"PullRequestEvent","CreatedAt":"2023-01-15T22:02:10","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1310","RelatedDescription":"Merged pull request \"Add delegating package base classes\" (#1310) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"26439669912","Type":"PullRequestEvent","CreatedAt":"2023-01-15T20:28:31","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1310","RelatedDescription":"Opened pull request \"Add delegating package base classes\" (#1310) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"26437852658","Type":"PullRequestEvent","CreatedAt":"2023-01-15T16:07:01","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1309","RelatedDescription":"Merged pull request \"Remove .NET Standard 1.3 build\" (#1309) at OfficeDev/Open-XML-SDK","RelatedBody":"There are no supported frameworks now that require this, so we'll remove it from the build/test matrix\n"},{"Id":"26434596570","Type":"PullRequestEvent","CreatedAt":"2023-01-15T08:08:45","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1308","RelatedDescription":"Merged pull request \"Move IDisposableFeature into framework library\" (#1308) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"26432740349","Type":"PullRequestEvent","CreatedAt":"2023-01-15T01:41:05","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1309","RelatedDescription":"Opened pull request \"Remove .NET Standard 1.3 build\" (#1309) at OfficeDev/Open-XML-SDK","RelatedBody":"There are no supported frameworks now that require this, so we'll remove it from the build/test matrix\n"},{"Id":"26431783784","Type":"PullRequestEvent","CreatedAt":"2023-01-14T22:31:28","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1308","RelatedDescription":"Opened pull request \"Move IDisposableFeature into framework library\" (#1308) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"26431277859","Type":"IssuesEvent","CreatedAt":"2023-01-14T21:06:13","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1211","RelatedDescription":"Reopened issue \"No support of System.IO.Packaging.Package.Save()/Flush() in .NET Core\" (#1211) at OfficeDev/Open-XML-SDK","RelatedBody":"Since _OpenXml_ is based on _System.IO.Packaging_ and there is no support for `Flush()`/`Save()` in .NET Core (dotnet 5, ...), I wanted to ask whether OpenXml is planning a better alternative than closing (disposing) the whole `OpenXmlPackage` (e.g. WordprocessingDocument)?\r\n\r\n```cs\r\n/// <summary>\r\n/// Gets a value indicating whether saving the package is supported by calling <see cref=\"Save\"/>. Some platforms (such as .NET Core), have limited support for saving.\r\n/// If <c>false</c>, in order to save, the document and/or package needs to be fully closed and disposed and then reopened.\r\n/// </summary>\r\n#if FEATURE_PACKAGE_FLUSH\r\npublic static bool CanSave { get; } = true;\r\n#else\r\npublic static bool CanSave { get; }\r\n#endif\r\n```\r\n"},{"Id":"26431180834","Type":"PullRequestEvent","CreatedAt":"2023-01-14T20:50:04","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1307","RelatedDescription":"Opened pull request \"Enable saving on .NET Core\" (#1307) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"26431168680","Type":"IssuesEvent","CreatedAt":"2023-01-14T20:48:20","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1300","RelatedDescription":"Closed issue \"Enable IPackageFeature to reload package\" (#1300) at OfficeDev/Open-XML-SDK","RelatedBody":"In order to build some features on top of IPackage, we need to be able to reload the backing Package in different modes. Proposed API changes are here:\r\n\r\n```diff\r\npublic interface IPackageFeature\r\n{\r\n  IPackage Package { get; }\r\n\r\n+ bool CanReload { get; }\r\n\r\n+ void Reload(FileMode mode, FileAccess access);\r\n}\r\n```\r\n\r\nThis could *automatically* be supported for files opened with paths or streams, but if a package is given, then it would not be supported (since we didn't manage the package) without additional information from a user."},{"Id":"26431168584","Type":"PullRequestEvent","CreatedAt":"2023-01-14T20:48:19","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1303","RelatedDescription":"Merged pull request \"Implement initial IPackageFeature.Reload functionality\" (#1303) at OfficeDev/Open-XML-SDK","RelatedBody":"This change implements IPackageFeature.Reload for Stream/File based packages. It does this by extending the initial IPackageFeature implementation with a replaceable System.IO.Packaging.Package instance. When it is replaced, the parts will be updated - to the end user, the same IPackagePart will be used and the underlying storage will be swapped out without them knowing or caring.\r\n\r\nThis also adds a IPackageFeature.Capabilities property that allows a user to query what capabilities a package feature exposes. This is handy to know if it can save, for instance. As part of this, the OpenXmlPackage.CanSave property will become an instance method, because it is dependent on the package feature.\r\n\r\nFixes #1300"},{"Id":"26419808413","Type":"PullRequestEvent","CreatedAt":"2023-01-13T19:14:41","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1306","RelatedDescription":"Opened pull request \"Obsolete OpenXmlPackage.Package\" (#1306) at OfficeDev/Open-XML-SDK","RelatedBody":"- Obsolete OpenXmlPackage.Package\n"},{"Id":"26412260569","Type":"IssuesEvent","CreatedAt":"2023-01-13T13:14:48","Actor":"Asbjoedt","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1305","RelatedDescription":"Opened issue \"New ImagePart is created as .bin instead of real extension\" (#1305) at OfficeDev/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nI have asked the question on Stackoverflow:\r\nhttps://stackoverflow.com/questions/75100804/embedding-image-as-new-imagepart-creates-a-bin-file-using-open-xml-sdk\r\n\r\nI don't expect to get any answer there, and I am also increasingly curious whether, this is an implementation error but an issue in the SDK.\r\n\r\nIssue is, I create new embedded image in Excel and it is saved to ```/xl/media/Image.[WhatEverExtensionItIs]```\r\nIf I create a new ImagePart with the SDK and feed it data like this:\r\n\r\n```\r\nImagePart new_ImagePart = worksheetPart.AddImagePart(ImagePartType.Tiff);\r\nstream.Position = 0;\r\nnew_ImagePart.FeedData(stream);\r\n```\r\n\r\nThen the file will be saved as ```/xl/media/Image.bin```.\r\n\r\nThis behaviour it should not do. It should write the extension as .tiff, since this is the ```ImagePartType```, that I specify. Or secondly it should read the stream and identify it as .tiff through i.e. a magic number.\r\n\r\nIf you unzip the package and change the image extension to real extension, then the image will open perfectly and I have used a TIFF validator to confirm the image is well-formed. \r\n\r\nWhat do you think of this? Am I doing anything wrong in my implementation, or can we change the SDK to write real extension like Excel does?\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Use the supplied code to stream any TIFF image (or change ImagePartType to any other image type) to a new ImagePart\r\n2. Unzip the spreadsheet and go to /xl/media/ to find the file as a .bin\r\n3. Change extension to .tiff and the image will open perfectly\r\n\r\n**Observed behavior**\r\nImagePart creates a new image with .bin extension\r\n\r\n**Expected behavior**\r\nImagePart should create a new image with extension based on ImagePartType.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Windows 11\r\n - Office version: 2212\r\n - .NET Target: .Net latest version\r\n - DocumentFormat.OpenXml Version: 2.19"},{"Id":"26411218007","Type":"PullRequestEvent","CreatedAt":"2023-01-13T12:25:20","Actor":"Asbjoedt","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1304","RelatedDescription":"Opened pull request \"Add two extensions to GetImagePartType\" (#1304) at OfficeDev/Open-XML-SDK","RelatedBody":"See issue:\r\nhttps://github.com/OfficeDev/Open-XML-SDK/issues/1081"}],"ResultType":"GitHubEvent"}},"RunOn":"2023-01-16T03:30:26.5185144Z","RunDurationInMilliseconds":770}