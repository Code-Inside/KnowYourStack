{"Data":{"Sdk":{"Events":[{"Id":"31885802405","Type":"IssuesEvent","CreatedAt":"2023-09-16T23:27:31","Actor":"Lars-O-B","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1527","RelatedDescription":"Opened issue \"Bug with Open XML SDK\" (#1527) at dotnet/Open-XML-SDK","RelatedBody":"I try to create a Word document with AutoSave = false, but resulting document can't be read.\r\nIf I set AutoSave = true it is Ok.\r\n\r\n![bild](https://github.com/dotnet/Open-XML-SDK/assets/145234248/04ed2289-02f7-4515-983a-f2e109e3d593)\r\nIn english  \"Word find content that can't be read in document ...\"\r\n\r\n`         \r\nWordprocessingDocument WordDocX = WordprocessingDocument.Create(outFile, WordprocessingDocumentType.Document, true);\r\nMainDocumentPart mainPart = WordDocX.AddMainDocumentPart();\r\nmainPart.Document = new Document();\r\nBody body = mainPart.Document.AppendChild(new Body());\r\nParagraph para = body.AppendChild(new Paragraph());\r\nRun run = para.AppendChild(new Run());\r\nrun.AppendChild(new Text(\"Create test text in body\"));\r\nWordDocX.Dispose();\r\n`\r\n\r\nBuild and run, then try open word document\r\n\r\n\r\n - OS: Windows 11\r\n - Office version MicrosoftÂ® Word 2021 MSO (Version 2308 Build 16.0.16731.20182) 64-bitars\r\n - .NET Target: .NET 6.0\r\n - Visual Studio 2022 ver 17.7.3\r\n - DocumentFormat.OpenXml Version: 2.20.0\r\n\r\n"},{"Id":"31808740186","Type":"IssuesEvent","CreatedAt":"2023-09-13T15:25:19","Actor":"rjgoodman","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1526","RelatedDescription":"Opened issue \"ExternalRelationships missing Word Docs from results\" (#1526) at dotnet/Open-XML-SDK","RelatedBody":"I'm writing a VB.NET utility for generating a list of all files linked to by a Microsoft Word doc. The file in question links both to Excel files and to other Word documents. I'm currently using this code:\r\n\r\n`Dim OOXMLDoc As WordprocessingDocument = WordprocessingDocument.Open(fileNameAndPath, isEditable:=False)\r\n                Dim linkUris As IEnumerable(Of System.Uri) = From rel In OOXMLDoc.MainDocumentPart.ExternalRelationships\r\n                                                             Select rel.Uri`\r\n\r\nThe results contain all the relevant spreadsheet links, but they do not contain the links to the word documents.\r\n"},{"Id":"31672261394","Type":"IssuesEvent","CreatedAt":"2023-09-07T15:50:02","Actor":"maedula","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1443","RelatedDescription":"Closed issue \"Open XML SDK ZIP local file header is not compliant to ISO/IEC 29500-2. Incorrect \"general purpose bit flag\" settings\" (#1443) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nThe currently created XLSX files are not compliant to OpenXML specification ISO/IEC 29500-2. The reason is that in reference to the ZIP Appnote (ZIP File Format Specification Version 6.2.0) and the listed \"Requirements on package implementers\" in chapter B.4 are not met. What I would like to challenge in particular is the set \"General purpose bit flag\" of the ZIP local file header.  The currently used bit flag is utilizing bit 11, which is unsupported. \r\n\r\nFollowing references are hex representations of the XLSX file...\r\nOpenXML SDK used incorrect local file header: 50 4B 03 04 14 00 00 **_08_** 08 00\r\nMicrosoft Excel used correct file header:            50 4B 03 04 14 00 **_06_** 00 08 00\r\n\r\nSo Microsoft Excel by defaults seems to use \"super fast compression\" method by default with bit1 and bit2 toggled.\r\n\r\nWhen using .net framework as a target, the headers are written correctly and thus compliant to ISO/IEC 29500-2.\r\n\r\nCheck out for your reference\r\nhttps://standards.iso.org/ittf/PubliclyAvailableStandards/c077818_ISO_IEC_29500-2_2021(E).zip\r\nhttp://www.pkware.com/documents/APPNOTE/APPNOTE_6.2.0.txt\r\n\r\n**To Reproduce**\r\n```\r\nusing System.IO.Packaging;\r\nusing DocumentFormat.OpenXml;\r\nusing DocumentFormat.OpenXml.Packaging;\r\nusing DocumentFormat.OpenXml.Spreadsheet;\r\n\r\nCreateSpreadsheetWorkbook(\"C:\\\\Temp\\\\test.xlsx\");\r\n\r\nvoid CreateSpreadsheetWorkbook(string filepath)\r\n{\r\n\t// Create a spreadsheet document by supplying the filepath.\r\n\t// By default, AutoSave = true, Editable = true, and Type = xlsx.\r\n\tSpreadsheetDocument spreadsheetDocument = SpreadsheetDocument.\r\n\t\tCreate(filepath, SpreadsheetDocumentType.Workbook);\r\n\tspreadsheetDocument.CompressionOption = CompressionOption.SuperFast;\r\n\r\n\t// Add a WorkbookPart to the document.\r\n\tWorkbookPart workbookpart = spreadsheetDocument.AddWorkbookPart();\r\n\tworkbookpart.Workbook = new Workbook();\r\n\r\n\t// Add a WorksheetPart to the WorkbookPart.\r\n\tWorksheetPart worksheetPart = workbookpart.AddNewPart<WorksheetPart>();\r\n\tworksheetPart.Worksheet = new Worksheet(new SheetData());\r\n\r\n\t// Add Sheets to the Workbook.\r\n\tSheets sheets = spreadsheetDocument.WorkbookPart!.Workbook.\r\n\t\tAppendChild<Sheets>(new Sheets());\r\n\r\n\t// Append a new worksheet and associate it with the workbook.\r\n\tSheet sheet = new Sheet() { Id = spreadsheetDocument.WorkbookPart.\r\n\t\tGetIdOfPart(worksheetPart), SheetId = 1, Name = \"mySheet\" };\r\n\tsheets.Append(sheet);\r\n\r\n\tworkbookpart.Workbook.Save();\r\n\r\n\t// Close the document.\r\n\tspreadsheetDocument.Dispose();\r\n}\r\n```\r\n\r\nSteps to reproduce the behavior:\r\n1. Create an empty excel spreadsheet and store it in XLSX\r\n2. Check with your favorite HEX file viewer the corresponding local file header\r\n4. See that the general purpose flag is set to a unsupported \"general purpose bit flag\", where bit 11 is toggled\r\n\r\n**Expected behavior**\r\nGive the same correct result for .net Core like for .net framework and thus OpenXML SDK will be compliant to the definitions of ISO_IEC_29500-2. The chosen CompressionOption in the .net code should be correctly considered for the \"general purpose bit flag\".\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: Windows\r\n - Office version 16.0.1398.20008\r\n - .NET Target: .NET Core 6\r\n - DocumentFormat.OpenXml Version: 2.20.0)\r\n"},{"Id":"31625986666","Type":"IssuesEvent","CreatedAt":"2023-09-06T05:25:10","Actor":"sergey-tihon","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1521","RelatedDescription":"Closed issue \"Release 3.0.0-beta3 on NuGet\" (#1521) at dotnet/Open-XML-SDK","RelatedBody":"**Is your feature request related to a problem? Please describe.**\r\nPlease publish all beta versions on NuGet.\r\nIt will help us test out apps and libs against upcoming changes.\r\nAs well as publish beta versions of other libs built on top of Open-XML-SDK.\r\n\r\n**Describe the solution you'd like**\r\nPublish all beta versions on NuGet\r\n\r\n**Describe alternatives you've considered**\r\nAzure blob feeds do not work well for lib authors.\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2023-09-24T03:30:24.9387587Z","RunDurationInMilliseconds":741}