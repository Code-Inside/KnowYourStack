{"Data":{"Sdk":{"Events":[{"Id":"55360012642","Type":"IssuesEvent","CreatedAt":"2025-09-29T16:48:26","Actor":"twsouthwick","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1965","RelatedDescription":"Opened issue \"Use specialized URI for package spec that is more relaxed than System.Uri\" (#1965) at dotnet/Open-XML-SDK","RelatedBody":"**Is your feature request related to a problem? Please describe.**\nThe current Uri usage in the System.IO.Packaging is very strict to the official RFC, but appears to be too strict for what Office documents can have\n\n**Describe the solution you'd like**\nWe should have a generalized type (i.e. `OpenXmlUri`) that will easily convert to System.Uri or string representations.\n\n**Describe alternatives you've considered**\nThere are a few attempts at handling this, most recently, this:\n\nhttps://github.com/dotnet/Open-XML-SDK/blob/307fa23e7f92222230216bb73a756022b8104046/src/DocumentFormat.OpenXml.Framework/Packaging/PackageUriHandlingExtensions.cs#L228-L241\n\nIt may be useful to start with.\n"},{"Id":"55287309953","Type":"PullRequestEvent","CreatedAt":"2025-09-27T12:49:05","Actor":"micheloliveira-com","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1964","RelatedDescription":"Opened pull request \"feat(actions): add nuget trusted publishing\" (#1964) at dotnet/Open-XML-SDK","RelatedBody":"#### Motivation\r\n\r\nAs described in [the official announcement](https://devblogs.microsoft.com/dotnet/enhanced-security-is-here-with-the-new-trust-publishing-on-nuget-org/), the new **Trusted Publishing** feature greatly enhances package publishing security on NuGet.org.\r\n\r\nWe successfully tested this approach with our own NuGet library:\r\n\r\n- [GitHub Actions run example](https://github.com/micheloliveira-com/ReactiveLock/actions/runs/18042183860/workflow)  \r\n- [Corresponding commit](https://github.com/micheloliveira-com/ReactiveLock/blob/a9353d6ddc7cb45f386e816c6ab5ea2837bd1513/.github/workflows/k6-test-multi.yml)\r\n\r\n#### Required changes in this repository\r\n\r\n> **Recommendation followed from announcement:**  \r\n> For security, always use a GitHub secret like `${{ secrets.NUGET_USER }}` for your NuGet.org username (profile name), **not your email address**.\r\n\r\n- Add `secrets.NUGET_USER` to this repository, using the **NuGet.org username (profile name)** of the package owner (\r\ndotnetfoundation in this case).  \r\n- The old `secrets.NUGET_APIKEY` secret can be removed from this repository **and also from the NuGet.org account** if it was only used here.  \r\n\r\n#### One-time configuration on NuGet.org\r\n\r\nAccording to the documentation:\r\n\r\n1. Sign in to NuGet.org.  \r\n2. Open your user menu (top-right) → **Trusted Publishing** (next to “API Keys”).  \r\n3. Create a policy:  \r\n   - **Package owner:** you or your organization (e.g. `dotnetfoundation`).  \r\n   - **Repository owner:** your GitHub org/user (e.g. `dotnet`).  \r\n   - **Repository name:** repository name (e.g. `Open-XML-SDK`).  \r\n   - **Workflow file:** the YAML file under `.github/workflows/` (e.g. `release.yml`).  \r\n   - **Environment (optional):** specify if your workflow uses GitHub Actions environments.\r\n\r\nThis setup eliminates the need for long-lived API keys and improves the overall security of the publishing process."},{"Id":"55263021100","Type":"PullRequestEvent","CreatedAt":"2025-09-26T16:38:26","Actor":"mkaszewiak","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1963","RelatedDescription":"Opened pull request \"Schema update FY26_Q1\" (#1963) at dotnet/Open-XML-SDK","RelatedBody":""},{"Id":"55094498066","Type":"IssuesEvent","CreatedAt":"2025-09-23T16:57:19","Actor":"mikeebowen","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1947","RelatedDescription":"Closed issue \"Remove PivotCacheRichInfo\" (#1947) at dotnet/Open-XML-SDK","RelatedBody":"odoc:omit=\"true\" fails  on CT_PivotCacheRichInfo, so PivotCacheRichInfo should be removed in v4 unless the odoc:omit status has changed."}],"ResultType":"GitHubEvent"}},"RunOn":"2025-10-16T03:30:22.4180625Z","RunDurationInMilliseconds":502}