{"Data":{"Sdk":{"Events":[{"Id":"14728454485","Type":"IssuesEvent","CreatedAt":"2021-01-06T09:58:55","Actor":"timcodesdotnet","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/836","RelatedDescription":"Opened issue \"SaveAs WordprocessingDocumentType.Template loses image references\" (#836) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nWhen converting from a .docx format to a .dotx format, the images contained in the document show \"The linked image cannot be displayed. The file may have been moved, renamed, or deleted. Verify that the link points to the correct file and location\".\r\n\r\nWhen inspecting the generated XML and comparing to a manually saved .dotx, it appears the image loses an r:href attribute.\r\n\r\n**Information**\r\n\r\n- .NET Target: .NET Framework & .NET Core...untested in others\r\n- DocumentFormat.OpenXml Version: 2.12.0\r\n\r\n**Repro**\r\n\r\nCreate a console application, and add a folder named \"files\". Create a .docx file in this folder named \"Doc1.docx\", the document should contain an image. Change the Build Action on the file to Content and Copy Always. Run the application. Open the .dotx that is created in the executing bin\\files folder. The image is missing.\r\n\r\n```csharp\r\nusing DocumentFormat.OpenXml.Packaging;\r\nusing System.IO;\r\n\r\nnamespace ConsoleApp1\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            var root = Path.Combine(Path.GetDirectoryName(System.Reflection.Assembly.GetExecutingAssembly().Location), \"files\");\r\n\r\n            File.Copy(@$\"{root}\\Doc1.docx\", @$\"{root}\\Doc2.docx\");\r\n            using (var doc = WordprocessingDocument.Open(@$\"{root}\\Doc2.docx\", true))\r\n            {\r\n                doc.ChangeDocumentType(DocumentFormat.OpenXml.WordprocessingDocumentType.Template);\r\n\r\n                doc.SaveAs(@$\"{root}\\Doc1.dotx\").Close();\r\n                doc.Close();\r\n            }\r\n            File.Delete(@$\"{root}\\Doc2.docx\");\r\n        }\r\n    }\r\n}\r\n\r\n``` \r\n\r\n**Observed**\r\n\r\nImages are not displayed correctly in the .dotx\r\n\r\n**Expected**\r\n\r\nImages should be displayed in the .dotx\r\n"},{"Id":"14720329209","Type":"PullRequestEvent","CreatedAt":"2021-01-05T19:23:34","Actor":"akindle","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/835","RelatedDescription":"Opened pull request \"Fix bug: System.Xml.XmlException thrown when opening SDK-authored document containing an empty URI\" (#835) at OfficeDev/Open-XML-SDK","RelatedBody":"* An empty string is a valid relative URI (https://tools.ietf.org/html/rfc3986#section-4.2)\r\n* System.IO.Packaging.InternalRelationshipCollection rejects empty `Target` attributes as the absence of a required attribute (https://github.com/dotnet/runtime/blob/7ed93fa9211fcb8719fde13c540a46aa5b5d74fe/src/libraries/System.IO.Packaging/src/System/IO/Packaging/InternalRelationshipCollection.cs#L338-L340)\r\n* Instead of throwing an exception and failing to open the file, provide users with the opportunity to rewrite empty URIs in the same manner as other invalid URIs"},{"Id":"14719192882","Type":"IssuesEvent","CreatedAt":"2021-01-05T17:49:30","Actor":"akindle","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/834","RelatedDescription":"Opened issue \"System.Xml.XmlException thrown when opening SDK-authored document containing an empty URI\" (#834) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nSystem.Xml.XmlException is thrown when opening a word document that is created by DocumentFormat.OpenXml that contains an empty URI.\r\n\r\n**Information**\r\n\r\n- .NET Target: Observed on .NET 4.5.2 and 4.7.2\r\n- DocumentFormat.OpenXml Version: 2.12.0\r\n\r\n**Repro**\r\n\r\n```csharp\r\nusing System;\r\nusing System.Diagnostics;\r\nusing DocumentFormat.OpenXml;\r\nusing DocumentFormat.OpenXml.Packaging;\r\nusing DocumentFormat.OpenXml.Validation;\r\nusing DocumentFormat.OpenXml.Wordprocessing;\r\n\r\nnamespace ConsoleApp5\r\n{\r\n    internal class Program\r\n    {\r\n        private static void Main()\r\n        {\r\n            using (var wordDocument = WordprocessingDocument.Create(\"test.docx\", WordprocessingDocumentType.Document))\r\n            {\r\n                var mainPart = wordDocument.AddMainDocumentPart();\r\n                mainPart.Document = new Document();\r\n                var body = mainPart.Document.AppendChild(new Body());\r\n\r\n                var link = mainPart.AddHyperlinkRelationship(new Uri(\"\", UriKind.RelativeOrAbsolute), true);\r\n                body.AppendChild(new Paragraph(new Hyperlink(new Run(new Text(\"empty URI link\"))) {Id = link.Id}));\r\n\r\n                var validator = new OpenXmlValidator();\r\n                var errors = validator.Validate(wordDocument);\r\n                foreach (var error in errors)\r\n                {\r\n                    // in this repro, no validation errors occur\r\n                    Debug.Fail($\"Document validation error. {error.Description} on node: {error.Node}\");\r\n                }\r\n            }\r\n\r\n            // System.Xml.XmlException occurs while opening\r\n            using (var wordDocument = WordprocessingDocument.Open(\"test.docx\", false))\r\n            {\r\n                var body = wordDocument.MainDocumentPart.Document.Body;\r\n            }\r\n        }\r\n    }\r\n}\r\n``` \r\n\r\n**Observed**\r\n\r\nSystem.Xml.XmlException: Relationship tag requires attribute 'Target'. Line 1, position 124.\r\n   at MS.Internal.IO.Packaging.InternalRelationshipCollection.ProcessRelationshipAttributes(XmlCompatibilityReader reader)\r\n   at MS.Internal.IO.Packaging.InternalRelationshipCollection.ParseRelationshipPart(PackagePart part)\r\n   at MS.Internal.IO.Packaging.InternalRelationshipCollection..ctor(Package package, PackagePart part)\r\n   at System.IO.Packaging.PackagePart.EnsureRelationships()\r\n   at System.IO.Packaging.PackagePart.GetRelationshipsHelper(String filterString)\r\n   at DocumentFormat.OpenXml.Packaging.PackagePartRelationshipPropertyCollection..ctor(PackagePart packagePart)\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPart.Load(OpenXmlPackage openXmlPackage, OpenXmlPart parent, Uri uriTarget, String id, Dictionary\\`2 loadedParts)\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.LoadReferencedPartsAndRelationships(OpenXmlPackage openXmlPackage, OpenXmlPart sourcePart, RelationshipCollection relationshipCollection, Dictionary\\`2 loadedParts)\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Load()\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPackage.OpenCore(String path, Boolean readWriteMode)\r\n   at DocumentFormat.OpenXml.Packaging.WordprocessingDocument.Open(String path, Boolean isEditable, OpenSettings openSettings)\r\n   at DocumentFormat.OpenXml.Packaging.WordprocessingDocument.Open(String path, Boolean isEditable)\r\n   at ConsoleApp5.Program.Main() in Program.cs:line 33\r\n\r\nI believe this is the offending xml, from `document.xml.rels`:\r\n`<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">\r\n    <Relationship Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\" Target=\"\" TargetMode=\"External\" Id=\"Re5bd9f7c50024f46\" />\r\n</Relationships>`\r\n\r\n**Expected**\r\n\r\nXml Validator warning and/or document opened."},{"Id":"14718876780","Type":"IssuesEvent","CreatedAt":"2021-01-05T17:24:38","Actor":"avonwyss","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/833","RelatedDescription":"Opened issue \"FieldCode (w:instrText) does not preserve whitespace\" (#833) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nWhen using field codes with leading or trailing whitespace, the whitespace is lost.\r\n\r\nThis is a problem because it can cause problems with nested fields in Word, e.g. `{ IF { DATE }=...`\r\n\r\n**Information**\r\n\r\n- .NET Target: .NET Framework\r\n- DocumentFormat.OpenXml Version: 2.12.0\r\n\r\n**Repro**\r\n\r\n```csharp\r\nvar code = new FieldCode(\"IF \");\r\nTrace.WriteLine(code.OuterXml);\r\n``` \r\n\r\n**Observed**\r\n\r\n```xml\r\n<w:instrText xmlns:w=\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\">IF </w:instrText>\r\n```\r\n\r\n**Expected**\r\n\r\n```xml\r\n<w:instrText xmlns:w=\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\" xml:space=\"preserve\">IF </w:instrText>\r\n```"},{"Id":"14718703432","Type":"IssuesEvent","CreatedAt":"2021-01-05T17:11:25","Actor":"avonwyss","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/832","RelatedDescription":"Opened issue \"Using OpenXmlElement.WriteTo(XmlWriter) is not reliable\" (#832) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nThe method `OpenXmlElement.WriteTo(XmlWriter)` internally uses `XmlWriter.WriteRaw(RawOuterXml)` when the XML of the element has not been parsed. Unfortunately, not all XmlWriter implementations support WriteRaw, so that one can get unexpected exceptions (with Heisenberg effect since debugging often causes the XML to be parsed) when invoking.\r\n\r\n**Information**\r\n\r\n- .NET Target: .NET Framework\r\n- DocumentFormat.OpenXml Version: 2.12.0\r\n\r\n**Repro**\r\n\r\n```csharp\r\nvar run = new Run(\"<w:r xmlns:w=\"http://schemas.openxmlformats.org/wordprocessingml/2006/main\"><w:fldChar w:fldCharType=\"begin\" /></w:r>\");\r\nvar result = new XDocument();\r\nusing (var writer = result.CreateWriter()) {\r\n    that.WriteTo(writer);\r\n} // System.ArgumentException: Non white space characters cannot be added to content.\r\n``` \r\n\r\n**Observed**\r\n\r\nWriting to the XmlWriter causes an unexpected exception.\r\n\r\n**Expected**\r\n\r\nXml is properly written to XmlWriter."},{"Id":"14712387052","Type":"IssuesEvent","CreatedAt":"2021-01-05T08:52:52","Actor":"GiuliaMarradi","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/831","RelatedDescription":"Opened issue \"Export Excel - number cells with 2 decimals\" (#831) at OfficeDev/Open-XML-SDK","RelatedBody":"# Export Excel - number cells with 2 decimals\r\n\r\nIs this a:\r\n[x] Issue with the OpenXml library\r\n[ ] Question on library usage\r\n\r\n**Description**\r\nI have a problem with excel export where I have numeric cells with 2 decimals.\r\n\r\n**Information**\r\n\r\n- .NET Target: .NET Core 3.1.1\r\n- DocumentFormat.OpenXml Version: 2.12\r\n\r\n**Repro**\r\nHere you can find a sample reproducing the issue.\r\n[https://github.com/GiuliaMarradi/CreateExcel](url)\r\nJust start the program and you can see excel produced C:\\temp\\output1.xlsx \r\n\r\n**Observed**\r\nCells with 1 decimal where a 0 should be added are not true numeric cells:\r\n![image](https://user-images.githubusercontent.com/27773947/103620119-3a998c80-4f33-11eb-88ca-e3a990ba74ba.png)\r\n\r\n\r\nAlso when opening the excel I have this error, caused by those numeric but not numeric cells\r\n![image](https://user-images.githubusercontent.com/27773947/103620330-8fd59e00-4f33-11eb-98ba-d9bfaa6d3eda.png)\r\n\r\n**Expected**\r\nI found an example whose behavior should be: \r\n![image](https://user-images.githubusercontent.com/27773947/103619767-9879a480-4f32-11eb-807b-e1de384f1cab.png)\r\nIn column B there are numeric cells with data where you can make sums and other operations.\r\n\r\nI was inspired by this article from Codeproject (based on an older version of openxml library), but I wasn't able to get it work\r\nhttps://www.codeproject.com/Articles/97307/Using-C-and-Open-XML-SDK-2-0-for-Microsoft-Office\r\n\r\n"}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2021-01-07T05:30:38.716138Z","RunDurationInMilliseconds":800}