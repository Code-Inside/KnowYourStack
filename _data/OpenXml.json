{"Data":{"Sdk":{"Events":[{"Id":"18937713545","Type":"PullRequestEvent","CreatedAt":"2021-11-17T21:26:43","Actor":"stevehansen","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1073","RelatedDescription":"Opened pull request \"Correctly serialize new CellValue(bool) (#1070)\" (#1073) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"18920584952","Type":"PullRequestEvent","CreatedAt":"2021-11-17T00:51:35","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1072","RelatedDescription":"Merged pull request \"Remove unnecessary file\" (#1072) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"18920583969","Type":"PullRequestEvent","CreatedAt":"2021-11-17T00:51:29","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1072","RelatedDescription":"Opened pull request \"Remove unnecessary file\" (#1072) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"18920557889","Type":"PullRequestEvent","CreatedAt":"2021-11-17T00:48:28","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1071","RelatedDescription":"Merged pull request \"Fully qualify types in generated code\" (#1071) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"18920440718","Type":"PullRequestEvent","CreatedAt":"2021-11-17T00:34:38","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1071","RelatedDescription":"Opened pull request \"Fully qualify types in generated code\" (#1071) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"18910257894","Type":"IssuesEvent","CreatedAt":"2021-11-16T13:27:05","Actor":"stevehansen","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1070","RelatedDescription":"Opened issue \"new CellValue(bool) generates invalid XML\" (#1070) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nThe introduced new CellValue(bool) uses the wrong serialization causing Excel to fail to load the file.\r\n\r\n**Information**\r\n\r\n- .NET Target: all\r\n- DocumentFormat.OpenXml Version: since 2.12-ish (https://github.com/OfficeDev/Open-XML-SDK/pull/782)\r\n\r\n**Repro**\r\n\r\n```csharp\r\nDebug.Assert(new CellValue(true).InnerText == \"true\");\r\n``` \r\n\r\n**Observed**\r\n\r\nSpec expects the boolean values to be \"true\" or \"false\" but the code is using bool.ToString() which returns \"True\" or \"False\".\r\n\r\nhttps://github.com/OfficeDev/Open-XML-SDK/blob/main/src/DocumentFormat.OpenXml/Spreadsheet/CellValue.cs#L42\r\n\r\n**Expected**\r\n\r\nPer .NET remarks for the boolean.ToString:\r\n\r\nThis method returns the constants \"True\" or \"False\".\r\n\r\nNote that XML is case-sensitive, and that the XML specification recognizes \"true\" and \"false\" as the valid set of Boolean values. If the string returned by the ToString() method is to be written to an XML file, its String.ToLowerInvariant method should be called first to convert it to lowercase."},{"Id":"18889023043","Type":"IssuesEvent","CreatedAt":"2021-11-15T11:06:15","Actor":"andrewmolyneux","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1069","RelatedDescription":"Opened issue \"Can't open presentations containing 3D objects (MIME type mismatch)\" (#1069) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nAfter updating to SDK version 2.14.0 from 2.10.1, I noticed that opening presentations containing 3D objects causes an exception. Error message is similar to \"The document cannot be opened because there is an invalid part with an unexpected content type. [Part Uri=/ppt/media/model3d1.glb] [Content Type=model/gltf.binary] [Expected Content Type=model/gltf-binary].\"\r\n\r\n**Information**\r\n\r\n- .NET Target: .NET Framework\r\n- DocumentFormat.OpenXml Version: 2.14.0\r\n\r\n**Repro**\r\n\r\nUsing this test file created with PowerPoint 2019:\r\n[3d.pptx](https://github.com/OfficeDev/Open-XML-SDK/files/7538059/3d.pptx)\r\n\r\n```csharp\r\nusing System;\r\nusing DocumentFormat.OpenXml.Packaging;\r\n\r\nnamespace ReproOxml3dBug\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            using (var presDoc = PresentationDocument.Open(\"3d.pptx\", false))\r\n            {\r\n                Console.WriteLine(\"Opened successfully\");\r\n            }\r\n        }\r\n    }\r\n}\r\n``` \r\n\r\n**Observed**\r\n\r\nAn exception occurs as shown below:\r\n```Unhandled Exception: DocumentFormat.OpenXml.Packaging.OpenXmlPackageException: The document cannot be opened because there is an invalid part with an unexpected content type.\r\n[Part Uri=/ppt/media/model3d1.glb],\r\n[Content Type=model/gltf.binary],\r\n[Expected Content Type=model/gltf-binary].\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPart.Load(OpenXmlPackage openXmlPackage, OpenXmlPart parent, Uri uriTarget, String id, Dictionary`2 loadedParts)\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.LoadReferencedPartsAndRelationships(OpenXmlPackage openXmlPackage, OpenXmlPart sourcePart, RelationshipCollection relationshipCollection, Dictionary`2 loadedParts)\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPart.Load(OpenXmlPackage openXmlPackage, OpenXmlPart parent, Uri uriTarget, String id, Dictionary`2 loadedParts)\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.LoadReferencedPartsAndRelationships(OpenXmlPackage openXmlPackage, OpenXmlPart sourcePart, RelationshipCollection relationshipCollection, Dictionary`2 loadedParts)\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPart.Load(OpenXmlPackage openXmlPackage, OpenXmlPart parent, Uri uriTarget, String id, Dictionary`2 loadedParts)\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.LoadReferencedPartsAndRelationships(OpenXmlPackage openXmlPackage, OpenXmlPart sourcePart, RelationshipCollection relationshipCollection, Dictionary`2 loadedParts)\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Load(Package _package)\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPackage..ctor(PackageLoader& loader, OpenSettings settings)\r\n   at DocumentFormat.OpenXml.Packaging.PresentationDocument.Open(String path, Boolean isEditable, OpenSettings openSettings)\r\n   at DocumentFormat.OpenXml.Packaging.PresentationDocument.Open(String path, Boolean isEditable)\r\n   at ReproOxml3dBug.Program.Main(String[] args)\r\n```\r\n\r\n**Expected**\r\n\r\nJust the string \"Opened successfully\" written to standard output.\r\n"},{"Id":"18862991025","Type":"IssuesEvent","CreatedAt":"2021-11-12T14:59:14","Actor":"tipa","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1068","RelatedDescription":"Opened issue \"Exception after building iOS app in Release mode\" (#1068) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\nTo reproduce this crash you need to enable Full Linking & build the app in Release mode.\r\nUsing Full Linking & building in Debug mode does not show the problem.\r\n\r\nThe problem was not present with 2.13.0 - it showed up after upgrading to 2.14.0.\r\nExcluding the whole `DocumentFormat.OpenXml` assembly from linking does prevent the exception, but it's not an option for me as it would drastically increase the app's size\r\n\r\n**Information**\r\n\r\n- .NET Target: Xamarin.iOS\r\n- DocumentFormat.OpenXml Version: 2.14.0\r\n\r\n**Repro**\r\n\r\n```csharp\r\nvar text = new Text(\"...\") { Space = SpaceProcessingModeValues.Preserve };\r\n``` \r\n\r\n**Observed**\r\n\r\n```\r\nSystem.ArgumentOutOfRangeException: Specified argument was out of the range of valid values.\r\nParameter name: TEnum\r\nat DocumentFormat.OpenXml.EnumInfoLookup`1+EnumStringLookupImpl[TEnum].IsDefined (TEnum value, System.Int32& index) <0x105de6abc + 0x000b8> in <61d1b00a264a46ffb924015d81c50ac1#cab60450a0de5c701fd309f7d44ec96c>:0 \r\nat DocumentFormat.OpenXml.EnumInfoLookup`1+EnumStringLookupImpl[TEnum].IsDefined (TEnum value) <0x105de51e0 + 0x00047> in <61d1b00a264a46ffb924015d81c50ac1#cab60450a0de5c701fd309f7d44ec96c>:0 \r\nat DocumentFormat.OpenXml.EnumInfoLookup`1[TEnum].IsDefined (TEnum value) <0x105ddeec0 + 0x0006b> in <61d1b00a264a46ffb924015d81c50ac1#cab60450a0de5c701fd309f7d44ec96c>:0 \r\nat DocumentFormat.OpenXml.EnumValue`1[T].ValidateSet (T value) <0x105d73394 + 0x0005f> in <61d1b00a264a46ffb924015d81c50ac1#cab60450a0de5c701fd309f7d44ec96c>:0 \r\nat DocumentFormat.OpenXml.OpenXmlSimpleValue`1[T].set_Value (T value) <0x105d6947c + 0x00033> in <61d1b00a264a46ffb924015d81c50ac1#cab60450a0de5c701fd309f7d44ec96c>:0 \r\nat DocumentFormat.OpenXml.OpenXmlSimpleValue`1[T]..ctor (DocumentFormat.OpenXml.SpaceProcessingModeValues value) <0x105d69030 + 0x0003f> in <61d1b00a264a46ffb924015d81c50ac1#cab60450a0de5c701fd309f7d44ec96c>:0 \r\nat DocumentFormat.OpenXml.EnumValue`1[T]..ctor (DocumentFormat.OpenXml.SpaceProcessingModeValues value) <0x105d731d8 + 0x0003f> in <61d1b00a264a46ffb924015d81c50ac1#cab60450a0de5c701fd309f7d44ec96c>:0 \r\nat DocumentFormat.OpenXml.EnumValue`1[T].op_Implicit (T value) <0x105d732b0 + 0x0004b> in <61d1b00a264a46ffb924015d81c50ac1#cab60450a0de5c701fd309f7d44ec96c>:0 \r\n```\r\n\r\n**Expected**\r\n\r\nNo exception I guess"}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2021-11-18T05:30:37.4343196Z","RunDurationInMilliseconds":813}