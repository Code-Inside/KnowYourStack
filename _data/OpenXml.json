{"Data":{"Sdk":{"Events":[{"Id":"41684592134","Type":"PullRequestEvent","CreatedAt":"2024-09-06T08:22:28","Actor":"WeihanLi","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1785","RelatedDescription":"Opened pull request \"docs: update nuget badge\" (#1785) at dotnet/Open-XML-SDK","RelatedBody":"- Update `Download` to `Stable` to compared with `Prerelease`\r\n- Update `Prerelease` nuget package badge link to absolute latest version"},{"Id":"41684260826","Type":"IssuesEvent","CreatedAt":"2024-09-06T08:11:32","Actor":"gergelyurbancsik","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1784","RelatedDescription":"Opened issue \"Office2010.Excel - ConditionalFormatting  example\" (#1784) at dotnet/Open-XML-SDK","RelatedBody":"Describe the API or scenario A clear and concise description of the scenario you'd like documented: I would like to apply conditional formatting to the 'A' column in an Excel sheet using the ConditionalFormatting class from the DocumentFormat.OpenXml.Office2010.Excel namespace. The conditional formatting should display icons based on the cell values as follows:\r\n•\tA green check mark for a value of 1\r\n•\tA red X for values greater than 1\r\n•\tNo icon for a value of 0\r\nAttempts Please include any attempts you have made to figure this out: I have attempted to implement this using the Open-XML-SDK, but I am having trouble with the correct setup of the ConditionalFormatting and ConditionalFormattingRule classes. \r\n\r\nRelated scenarios Any related documentation/samples/StackOverflow posts you have found: I have not found any specific examples or documentation that cover this exact scenario. Most examples I found are for basic conditional formatting without custom icons.\r\nAdditional context Add any other context about the problem here: I am using the Open-XML-SDK to generate Excel files programmatically. Detailed documentation or a sample code snippet demonstrating the correct usage of ConditionalFormatting with custom icons would be very helpful.\r\n\r\nthe expected result, something like this:\r\n\r\n\r\n<x14:conditionalFormattings xmlns:x14=\"http://schemas.microsoft.com/office/spreadsheetml/2009/9/main\">\r\n\t\t<x14:conditionalFormatting xmlns:xm=\"http://schemas.microsoft.com/office/excel/2006/main\">\r\n\t\t\t<x14:cfRule type=\"iconSet\" priority=\"1\" id=\"{39D2A77C-A416-446B-91A5-8D3E3C96830E}\">\r\n\t\t\t\t<x14:iconSet iconSet=\"3Symbols\" showValue=\"0\" custom=\"1\">\r\n\t\t\t\t\t<x14:cfvo type=\"percent\">\r\n\t\t\t\t\t\t<xm:f>0</xm:f>\r\n\t\t\t\t\t</x14:cfvo>\r\n\t\t\t\t\t<x14:cfvo type=\"num\" gte=\"0\">\r\n\t\t\t\t\t\t<xm:f>0</xm:f>\r\n\t\t\t\t\t</x14:cfvo>\r\n\t\t\t\t\t<x14:cfvo type=\"num\" gte=\"0\">\r\n\t\t\t\t\t\t<xm:f>1</xm:f>\r\n\t\t\t\t\t</x14:cfvo>\r\n\t\t\t\t\t<x14:cfIcon iconSet=\"NoIcons\" iconId=\"0\"/>\r\n\t\t\t\t\t<x14:cfIcon iconSet=\"3Symbols\" iconId=\"2\"/>\r\n\t\t\t\t\t<x14:cfIcon iconSet=\"3Symbols\" iconId=\"0\"/>\r\n\t\t\t\t</x14:iconSet>\r\n\t\t\t</x14:cfRule>\r\n\t\t\t<xm:sqref>C1:C1048576</xm:sqref>\r\n\t\t</x14:conditionalFormatting>\r\n\t</x14:conditionalFormattings>\r\n"},{"Id":"41645194867","Type":"IssuesEvent","CreatedAt":"2024-09-05T07:30:06","Actor":"gergelyurbancsik","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1783","RelatedDescription":"Opened issue \"Unable to Create Custom Icon Set for Conditional Formatting\" (#1783) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nI am trying to set up conditional formatting in an Excel file using the DocumentFormat.OpenXml library. Specifically, I want to use a red X and a green checkmark from the ThreeSymbols icon set. However, this icon set also includes a yellow exclamation mark, which I do not want to use. The issue is that the library does not allow the creation of a custom icon set to exclude the yellow exclamation mark.\r\n\r\n**To Reproduce**\r\n// Please add a self-contained, minimum viable repro of the issue.\r\n// If you require external resources, please provide a gist or GitHub repro\r\n// An Xunit style test is preferred, but a console application would work too.\r\n\r\nSteps to reproduce the behavior:\r\n1.\tCreate a new Excel file.\r\n2.\tApply conditional formatting using the ThreeSymbols icon set.\r\n3.\tAttempt to customize the icon set to exclude the yellow exclamation mark.\r\n\r\n\r\n**Expected behavior**\r\n•\tIf the value is equal to 0, no icon should be displayed.\r\n•\tIf the value is equal to 1, a green checkmark icon should be displayed.\r\n•\tIf the value is greater than 1, a red X icon should be displayed.\r\n\r\nAdditional Information: I also tried using the IconFilter class, but it did not work as expected.\r\n**Additional context**\r\n`using DocumentFormat.OpenXml.Packaging;\r\nusing DocumentFormat.OpenXml.Spreadsheet;\r\nusing DocumentFormat.OpenXml;\r\nusing System;\r\nusing System.Collections.Generic;\r\nusing DocumentFormat.OpenXml.Office2010.Excel;\r\nusing ConditionalFormatting = DocumentFormat.OpenXml.Spreadsheet.ConditionalFormatting;\r\nusing ConditionalFormattingRule = DocumentFormat.OpenXml.Spreadsheet.ConditionalFormattingRule;\r\nusing IconSet = DocumentFormat.OpenXml.Spreadsheet.IconSet;\r\n\r\nnamespace ConsoleApp5\r\n{\r\n    public class ExcelHeaderProtection\r\n    {\r\n        public void ConditionalFormattingIconSet()\r\n        {\r\n            using (var spreadsheetDocument = SpreadsheetDocument.Create(@\"C:\\temp\\EXCEL_EXCEL\\ConditionalFormattingIconSet.xlsx\", SpreadsheetDocumentType.Workbook))\r\n            {\r\n                var workbookPart = spreadsheetDocument.AddWorkbookPart();\r\n\r\n                var worksheetPart = workbookPart.AddNewPart<WorksheetPart>();\r\n                var workbook = new Workbook();\r\n\r\n                var worksheet = new Worksheet();\r\n                worksheetPart.Worksheet = worksheet;\r\n\r\n                AddDataConditionalFormattingIconSet(workbookPart, worksheetPart);\r\n\r\n                var cColumn = worksheet.AppendChild(new ConditionalFormatting());\r\n                cColumn.SequenceOfReferences = new ListValue<StringValue> { InnerText = \"C:C\" };\r\n\r\n                // Rule for Red X\r\n                var cfRuleRedX = cColumn.AppendChild(new ConditionalFormattingRule());\r\n                cfRuleRedX.Type = ConditionalFormatValues.IconSet;\r\n                cfRuleRedX.Priority = 1;\r\n\r\n                var iconSetRedX = new IconSet()\r\n                {\r\n                    ShowValue = false,\r\n                    Reverse = false,\r\n                    IconSetValue = new EnumValue<IconSetValues>(IconSetValues.ThreeSymbols)\r\n                };\r\n\r\n                iconSetRedX.AppendChild(new ConditionalFormatValueObject\r\n                {\r\n                    Type = ConditionalFormatValueObjectValues.Number,\r\n                    Val = \"0\",\r\n                    GreaterThanOrEqual = BooleanValue.FromBoolean(true),\r\n                });\r\n                iconSetRedX.AppendChild(new ConditionalFormatValueObject\r\n                {\r\n                    Type = ConditionalFormatValueObjectValues.Number,\r\n                    Val = \"1\",\r\n                    GreaterThanOrEqual = BooleanValue.FromBoolean(false),\r\n                });\r\n                iconSetRedX.AppendChild(new ConditionalFormatValueObject\r\n                {\r\n                    Type = ConditionalFormatValueObjectValues.Number,\r\n                    Val = \"2\",\r\n                    GreaterThanOrEqual = BooleanValue.FromBoolean(false),\r\n                });\r\n\r\n                cfRuleRedX.Append(iconSetRedX);\r\n\r\n                // Rule for Green Check\r\n                var cfRuleGreenCheck = cColumn.AppendChild(new ConditionalFormattingRule());\r\n                cfRuleGreenCheck.Type = ConditionalFormatValues.IconSet;\r\n                cfRuleGreenCheck.Priority = 2;\r\n\r\n                var iconSetGreenCheck = new IconSet()\r\n                {\r\n                    ShowValue = false,\r\n                    Reverse = false,\r\n                    IconSetValue = new EnumValue<IconSetValues>(IconSetValues.ThreeSymbols)\r\n                };\r\n\r\n                iconSetGreenCheck.AppendChild(new ConditionalFormatValueObject\r\n                {\r\n                    Type = ConditionalFormatValueObjectValues.Number,\r\n                    Val = \"0\",\r\n                    GreaterThanOrEqual = BooleanValue.FromBoolean(false),\r\n                });\r\n                iconSetGreenCheck.AppendChild(new ConditionalFormatValueObject\r\n                {\r\n                    Type = ConditionalFormatValueObjectValues.Number,\r\n                    Val = \"1\",\r\n                    GreaterThanOrEqual = BooleanValue.FromBoolean(false),\r\n                });\r\n                iconSetGreenCheck.AppendChild(new ConditionalFormatValueObject\r\n                {\r\n                    Type = ConditionalFormatValueObjectValues.Number,\r\n                    Val = \"2\",\r\n                    GreaterThanOrEqual = BooleanValue.FromBoolean(true),\r\n                });\r\n\r\n                cfRuleGreenCheck.Append(iconSetGreenCheck);\r\n\r\n                worksheetPart.Worksheet.Save();\r\n                var sheets = new Sheets();\r\n                var sheet = new Sheet();\r\n                sheet.Name = \"Sheet1\";\r\n                sheet.SheetId = 1;\r\n                sheet.Id = workbookPart.GetIdOfPart(worksheetPart);\r\n                sheets.Append(sheet);\r\n                workbook.Append(sheets);\r\n\r\n                spreadsheetDocument.WorkbookPart.Workbook = workbook;\r\n                spreadsheetDocument.WorkbookPart.Workbook.Save();\r\n            }\r\n        }\r\n\r\n        internal void AddDataConditionalFormattingIconSet(WorkbookPart workbookPart, WorksheetPart worksheetPart)\r\n        {\r\n            SheetData sheetData = new SheetData();\r\n\r\n            var sharedStringPart = workbookPart.AddNewPart<SharedStringTablePart>();\r\n            sharedStringPart.SharedStringTable = new SharedStringTable();\r\n            sharedStringPart.SharedStringTable.AppendChild(new SharedStringItem(new Text(\"Default Three Arrows\")));\r\n            sharedStringPart.SharedStringTable.AppendChild(new SharedStringItem(new Text(\"Custom ThreeTrafficLights2 Minimum:25% Maximum:75%\")));\r\n            sharedStringPart.SharedStringTable.AppendChild(new SharedStringItem(new Text(\"Default Five Rating\")));\r\n\r\n            var row1 = new Row() { RowIndex = 1 };\r\n            var row2 = new Row() { RowIndex = 2 };\r\n            var row3 = new Row() { RowIndex = 3 };\r\n\r\n            sheetData.Append(row1);\r\n            sheetData.Append(row2);\r\n            sheetData.Append(row3);\r\n\r\n            var cellA1 = new Cell() { CellReference = \"A1\", DataType = new EnumValue<CellValues>(CellValues.SharedString) };\r\n            cellA1.CellValue = new CellValue(\"0\");\r\n            var cellA2 = new Cell() { CellReference = \"A2\", DataType = new EnumValue<CellValues>(CellValues.SharedString) };\r\n            cellA2.CellValue = new CellValue(\"1\");\r\n            var cellA3 = new Cell() { CellReference = \"A3\", DataType = new EnumValue<CellValues>(CellValues.SharedString) };\r\n            cellA3.CellValue = new CellValue(\"2\");\r\n\r\n            row1.Append(cellA1);\r\n            row2.Append(cellA2);\r\n            row3.Append(cellA3);\r\n\r\n            row1.Append(new Cell() { CellReference = \"B1\", CellValue = new CellValue(\"1\") });\r\n            row1.Append(new Cell() { CellReference = \"C1\", CellValue = new CellValue(\"2\") });\r\n            row1.Append(new Cell() { CellReference = \"D1\", CellValue = new CellValue(\"3\") });\r\n            row1.Append(new Cell() { CellReference = \"E1\", CellValue = new CellValue(\"4\") });\r\n            row1.Append(new Cell() { CellReference = \"F1\", CellValue = new CellValue(\"5\") });\r\n\r\n            row2.Append(new Cell() { CellReference = \"B2\", CellValue = new CellValue(\"1\") });\r\n            row2.Append(new Cell() { CellReference = \"C2\", CellValue = new CellValue(\"2\") });\r\n            row2.Append(new Cell() { CellReference = \"D2\", CellValue = new CellValue(\"3\") });\r\n            row2.Append(new Cell() { CellReference = \"E2\", CellValue = new CellValue(\"4\") });\r\n            row2.Append(new Cell() { CellReference = \"F2\", CellValue = new CellValue(\"5\") });\r\n\r\n            row3.Append(new Cell() { CellReference = \"B3\", CellValue = new CellValue(\"1\") });\r\n            row3.Append(new Cell() { CellReference = \"C3\", CellValue = new CellValue(\"2\") });\r\n            row3.Append(new Cell() { CellReference = \"D3\", CellValue = new CellValue(\"3\") });\r\n            row3.Append(new Cell() { CellReference = \"E3\", CellValue = new CellValue(\"4\") });\r\n            row3.Append(new Cell() { CellReference = \"F3\", CellValue = new CellValue(\"5\") });\r\n\r\n            worksheetPart.Worksheet.Append(sheetData);\r\n        }\r\n    }\r\n}\r\n`\r\n"},{"Id":"41592853296","Type":"PullRequestEvent","CreatedAt":"2024-09-03T19:46:29","Actor":"dependabot[bot]","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1750","RelatedDescription":"Closed pull request \"Bump danielpalme/ReportGenerator-GitHub-Action from 5.3.6 to 5.3.8\" (#1750) at dotnet/Open-XML-SDK","RelatedBody":"Bumps [danielpalme/ReportGenerator-GitHub-Action](https://github.com/danielpalme/reportgenerator-github-action) from 5.3.6 to 5.3.8.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/danielpalme/reportgenerator-github-action/releases\">danielpalme/ReportGenerator-GitHub-Action's releases</a>.</em></p>\n<blockquote>\n<h2>5.3.8</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/danielpalme/reportgenerator-github-action/issues/681\">#681</a> Updated System.Text.Json to address CVE-2024-30105 (contributed by <a href=\"https://github.com/304NotModified\"><code>@​304NotModified</code></a>)</li>\n</ul>\n<h2>5.3.7</h2>\n<ul>\n<li>Exclude empty modules/assemblies from reports\n-Fix sort direction triangles (contributed by <a href=\"https://github.com/YuriyDurov\"><code>@​YuriyDurov</code></a>)\n-<a href=\"https://redirect.github.com/danielpalme/reportgenerator-github-action/issues/602\">#602</a>: HtmlSummary and Html_BlueRed_Summary report types now also create an index.html file</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/danielpalme/ReportGenerator-GitHub-Action/commit/5808021ec4deecb0ab3da051d49b4ce65fcc20af\"><code>5808021</code></a> 5.3.8</li>\n<li><a href=\"https://github.com/danielpalme/ReportGenerator-GitHub-Action/commit/345a7c3866622fe946263314218ad2c12c388b8b\"><code>345a7c3</code></a> 5.3.7</li>\n<li>See full diff in <a href=\"https://github.com/danielpalme/reportgenerator-github-action/compare/5.3.6...5.3.8\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=danielpalme/ReportGenerator-GitHub-Action&package-manager=github_actions&previous-version=5.3.6&new-version=5.3.8)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>"},{"Id":"41592852452","Type":"PullRequestEvent","CreatedAt":"2024-09-03T19:46:27","Actor":"dependabot[bot]","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1782","RelatedDescription":"Opened pull request \"Bump danielpalme/ReportGenerator-GitHub-Action from 5.3.6 to 5.3.9\" (#1782) at dotnet/Open-XML-SDK","RelatedBody":"Bumps [danielpalme/ReportGenerator-GitHub-Action](https://github.com/danielpalme/reportgenerator-github-action) from 5.3.6 to 5.3.9.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/danielpalme/reportgenerator-github-action/releases\">danielpalme/ReportGenerator-GitHub-Action's releases</a>.</em></p>\n<blockquote>\n<h2>5.3.9</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/danielpalme/reportgenerator-github-action/issues/685\">#685</a> Extended &quot;raw mode&quot; for dotCover format (settings:rawMode=true) to disable that coverage data of nested or compiler generated classes is included in the parent class.</li>\n<li><a href=\"https://redirect.github.com/danielpalme/reportgenerator-github-action/issues/691\">#691</a> Cobertura parser: Performance and memory improvements (contributed by <a href=\"https://github.com/afscrome\"><code>@​afscrome</code></a>)</li>\n</ul>\n<h2>5.3.8</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/danielpalme/reportgenerator-github-action/issues/681\">#681</a> Updated System.Text.Json to address CVE-2024-30105 (contributed by <a href=\"https://github.com/304NotModified\"><code>@​304NotModified</code></a>)</li>\n</ul>\n<h2>5.3.7</h2>\n<ul>\n<li>Exclude empty modules/assemblies from reports\n-Fix sort direction triangles (contributed by <a href=\"https://github.com/YuriyDurov\"><code>@​YuriyDurov</code></a>)\n-<a href=\"https://redirect.github.com/danielpalme/reportgenerator-github-action/issues/602\">#602</a>: HtmlSummary and Html_BlueRed_Summary report types now also create an index.html file</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/danielpalme/ReportGenerator-GitHub-Action/commit/e3af7259842d9c814021ea121f85526e0872b25f\"><code>e3af725</code></a> 5.3.9</li>\n<li><a href=\"https://github.com/danielpalme/ReportGenerator-GitHub-Action/commit/dd5442ff779dcba741d1a6e5c756fdf950288f26\"><code>dd5442f</code></a> Updated script</li>\n<li><a href=\"https://github.com/danielpalme/ReportGenerator-GitHub-Action/commit/5808021ec4deecb0ab3da051d49b4ce65fcc20af\"><code>5808021</code></a> 5.3.8</li>\n<li><a href=\"https://github.com/danielpalme/ReportGenerator-GitHub-Action/commit/345a7c3866622fe946263314218ad2c12c388b8b\"><code>345a7c3</code></a> 5.3.7</li>\n<li>See full diff in <a href=\"https://github.com/danielpalme/reportgenerator-github-action/compare/5.3.6...5.3.9\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=danielpalme/ReportGenerator-GitHub-Action&package-manager=github_actions&previous-version=5.3.6&new-version=5.3.9)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>"},{"Id":"41432624067","Type":"PullRequestEvent","CreatedAt":"2024-08-28T21:12:41","Actor":"mikeebowen","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1781","RelatedDescription":"Opened pull request \"add August 2024 XSD updates\" (#1781) at dotnet/Open-XML-SDK","RelatedBody":""}],"ResultType":"GitHubEvent"}},"RunOn":"2024-09-07T03:30:20.1000255Z","RunDurationInMilliseconds":868}