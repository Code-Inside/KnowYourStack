{"Data":{"Sdk":{"Events":[{"Id":"13075617472","Type":"PullRequestEvent","CreatedAt":"2020-07-31T17:25:01","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/787","RelatedDescription":"Merged pull request \"Add DocxToSource to the list of Related Tools in the README.md file.\" (#787) at OfficeDev/Open-XML-SDK","RelatedBody":"Still actively working on this project but there is working code available."},{"Id":"13073382070","Type":"PullRequestEvent","CreatedAt":"2020-07-31T13:47:54","Actor":"rmboggs","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/787","RelatedDescription":"Opened pull request \"Add DocxToSource to the list of Related Tools in the README.md file.\" (#787) at OfficeDev/Open-XML-SDK","RelatedBody":"Still actively working on this project but there is working code available."},{"Id":"13063915633","Type":"PullRequestEvent","CreatedAt":"2020-07-30T17:15:11","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/786","RelatedDescription":"Merged pull request \"Rename TryAddChild to AddChild with option for exception\" (#786) at OfficeDev/Open-XML-SDK","RelatedBody":"This also removes the generic constraint as that is unnecessary and fails to work in the instances where you have just a `OpenXmlElement`."},{"Id":"13063477160","Type":"PullRequestEvent","CreatedAt":"2020-07-30T16:35:35","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/786","RelatedDescription":"Opened pull request \"Rename TryAddChild to AddChild with option for exception\" (#786) at OfficeDev/Open-XML-SDK","RelatedBody":"This also removes the generic constraint as that is unnecessary and fails to work in the instances where you have just a `OpenXmlElement`."},{"Id":"13063467827","Type":"PullRequestEvent","CreatedAt":"2020-07-30T16:34:41","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/785","RelatedDescription":"Merged pull request \"Fix the typo in comment.\" (#785) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"13055552740","Type":"PullRequestEvent","CreatedAt":"2020-07-30T02:02:08","Actor":"lindexi","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/785","RelatedDescription":"Opened pull request \"Fix the typo in comment.\" (#785) at OfficeDev/Open-XML-SDK","RelatedBody":""},{"Id":"13054441289","Type":"IssuesEvent","CreatedAt":"2020-07-29T22:39:43","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/697","RelatedDescription":"Closed issue \"Validator does not verify CellValue contents match content type\" (#697) at OfficeDev/Open-XML-SDK","RelatedBody":"Is this a:\r\n- [X] Issue with the OpenXml library\r\n\r\n**Description**\r\n\r\nInvalid Excel document that shows error message \"We found a problems with some content....\" while opening using Microsoft Excel 2019 is reported as valid by Open XML SDK Validator.\r\n\r\n**Information**\r\n\r\n- .NET Target: .NET Core 3.1\r\n- DocumentFormat.OpenXml Version:  (2.10.1)\r\n\r\n**Repro**\r\n\r\nCreate a Cell with string value and data type set to **Number**. \r\nValidate the created excel using OpenXmlValidator return no errors.\r\n\r\n**Expected**\r\n\r\nThe validation results contain errors."},{"Id":"13054434457","Type":"PullRequestEvent","CreatedAt":"2020-07-29T22:39:09","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/782","RelatedDescription":"Merged pull request \"Add validation to CellType for number and date types\" (#782) at OfficeDev/Open-XML-SDK","RelatedBody":"Fixes #752, #697 "},{"Id":"13054434332","Type":"IssuesEvent","CreatedAt":"2020-07-29T22:39:08","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/752","RelatedDescription":"Closed issue \"Add strongly typed parsing to CellValue\" (#752) at OfficeDev/Open-XML-SDK","RelatedBody":"`CellValue` can hold various forms of data. We've added constructors to correctly set `DateTime`/`DateTimeOffset` but it may be helpful to provide helpers for the other datatypes, as well as strongly typed parsers, ie `CellValue.TryParse(out DateTimeOffset dt)`"},{"Id":"13054418477","Type":"PullRequestEvent","CreatedAt":"2020-07-29T22:37:50","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/774","RelatedDescription":"Merged pull request \"Expose `OpenXmlCompositeElement.TryAddChild`\" (#774) at OfficeDev/Open-XML-SDK","RelatedBody":"This change adds an API to simplify adding child elements in the correct order according to the schema definition.\r\n\r\nPart of #492"},{"Id":"13044997871","Type":"IssuesEvent","CreatedAt":"2020-07-29T06:16:47","Actor":"lindexi","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/784","RelatedDescription":"Opened issue \"The UpRight property in DocumentFormat.OpenXml.Drawing.BodyProperties may be named wrong.\" (#784) at OfficeDev/Open-XML-SDK","RelatedBody":"\r\n\r\n**Description**\r\n\r\nAccording to  21.1.2.1.1 bodyPr (Body Properties) in ECMA 376, we can find the `upright` means \"Text Upright\". And \"Upright\" is a word not two words. But we use `UpRight` as the property name.\r\n\r\n\r\n\r\n**Observed**\r\n\r\nThe property named `UpRight` is in DocumentFormat.OpenXml.Drawing.BodyProperties.\r\n\r\n**Expected**\r\n\r\nThe property name is \"upright\".\r\n"},{"Id":"13031035199","Type":"IssuesEvent","CreatedAt":"2020-07-27T23:58:03","Actor":"no-response[bot]","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/756","RelatedDescription":"Closed issue \"Memory use when loading worksheets\" (#756) at OfficeDev/Open-XML-SDK","RelatedBody":"I am seeing what I perceive to be excessive memory use when attempting to get the names of all of the worksheets in a workbook. As soon as I try and open the worksheets inside of the package (excelPackage.Workbook.Worksheets) my test uses ~ 400 MB of memory and takes around 20 seconds to finish that line of code. I am wondering if this is a normal amount of load for the tool to be using for a 30 MB .xlsx file with 3 worksheets. My larger issue is that the tool seems to be keeping around 1.2 GB of memory even after I am done with this ListWorksheets task. So a) 1.2 GB seems excessive for a 30 MB file and b) the memory should be deallocated when the tool is done with it should it not?"},{"Id":"13031035100","Type":"IssuesEvent","CreatedAt":"2020-07-27T23:58:02","Actor":"no-response[bot]","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/755","RelatedDescription":"Closed issue \"Not able to add chart in spreadsheet\" (#755) at OfficeDev/Open-XML-SDK","RelatedBody":"Am new to C# and OpenXML. As per the example shown in this link [https://docs.microsoft.com/en-us/office/open-xml/how-to-insert-a-chart-into-a-spreadsheet](url) I can't see the chart added to the generated spreadsheet.\r\nIn this below code snipet the Uri link is not working. \r\ngraphicFrame.Append(New Graphic(New GraphicData(New ChartReference() With _\r\n                {.Id = drawingsPart.GetIdOfPart(chartPart)}) With {.Uri = _\r\n                \"http://schemas.openxmlformats.org/drawingml/2006/chart\"}))\r\nI also tried to use other .Uri http link. but not able to see the expected chart in the output spreadsheet. Looking for a solution to this."}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2020-08-01T05:30:43.3869628Z","RunDurationInMilliseconds":948}