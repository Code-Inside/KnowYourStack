{"Data":{"Sdk":{"Events":[{"Id":"19356504146","Type":"IssuesEvent","CreatedAt":"2021-12-15T21:24:15","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1069","RelatedDescription":"Closed issue \"Can't open presentations containing 3D objects (MIME type mismatch)\" (#1069) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nAfter updating to SDK version 2.14.0 from 2.10.1, I noticed that opening presentations containing 3D objects causes an exception. Error message is similar to \"The document cannot be opened because there is an invalid part with an unexpected content type. [Part Uri=/ppt/media/model3d1.glb] [Content Type=model/gltf.binary] [Expected Content Type=model/gltf-binary].\"\r\n\r\n**Information**\r\n\r\n- .NET Target: .NET Framework\r\n- DocumentFormat.OpenXml Version: 2.14.0\r\n\r\n**Repro**\r\n\r\nUsing this test file created with PowerPoint 2019:\r\n[3d.pptx](https://github.com/OfficeDev/Open-XML-SDK/files/7538059/3d.pptx)\r\n\r\n```csharp\r\nusing System;\r\nusing DocumentFormat.OpenXml.Packaging;\r\n\r\nnamespace ReproOxml3dBug\r\n{\r\n    class Program\r\n    {\r\n        static void Main(string[] args)\r\n        {\r\n            using (var presDoc = PresentationDocument.Open(\"3d.pptx\", false))\r\n            {\r\n                Console.WriteLine(\"Opened successfully\");\r\n            }\r\n        }\r\n    }\r\n}\r\n``` \r\n\r\n**Observed**\r\n\r\nAn exception occurs as shown below:\r\n```Unhandled Exception: DocumentFormat.OpenXml.Packaging.OpenXmlPackageException: The document cannot be opened because there is an invalid part with an unexpected content type.\r\n[Part Uri=/ppt/media/model3d1.glb],\r\n[Content Type=model/gltf.binary],\r\n[Expected Content Type=model/gltf-binary].\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPart.Load(OpenXmlPackage openXmlPackage, OpenXmlPart parent, Uri uriTarget, String id, Dictionary`2 loadedParts)\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.LoadReferencedPartsAndRelationships(OpenXmlPackage openXmlPackage, OpenXmlPart sourcePart, RelationshipCollection relationshipCollection, Dictionary`2 loadedParts)\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPart.Load(OpenXmlPackage openXmlPackage, OpenXmlPart parent, Uri uriTarget, String id, Dictionary`2 loadedParts)\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.LoadReferencedPartsAndRelationships(OpenXmlPackage openXmlPackage, OpenXmlPart sourcePart, RelationshipCollection relationshipCollection, Dictionary`2 loadedParts)\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPart.Load(OpenXmlPackage openXmlPackage, OpenXmlPart parent, Uri uriTarget, String id, Dictionary`2 loadedParts)\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPartContainer.LoadReferencedPartsAndRelationships(OpenXmlPackage openXmlPackage, OpenXmlPart sourcePart, RelationshipCollection relationshipCollection, Dictionary`2 loadedParts)\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPackage.Load(Package _package)\r\n   at DocumentFormat.OpenXml.Packaging.OpenXmlPackage..ctor(PackageLoader& loader, OpenSettings settings)\r\n   at DocumentFormat.OpenXml.Packaging.PresentationDocument.Open(String path, Boolean isEditable, OpenSettings openSettings)\r\n   at DocumentFormat.OpenXml.Packaging.PresentationDocument.Open(String path, Boolean isEditable)\r\n   at ReproOxml3dBug.Program.Main(String[] args)\r\n```\r\n\r\n**Expected**\r\n\r\nJust the string \"Opened successfully\" written to standard output.\r\n"}],"ResultType":"GitHubEvent"},"PowerTools":{"Events":[],"ResultType":"GitHubEvent"}},"RunOn":"2021-12-16T05:30:58.2220663Z","RunDurationInMilliseconds":991}