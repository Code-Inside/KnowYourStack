{"Data":{"Sdk":{"Events":[{"Id":"35845634971","Type":"IssuesEvent","CreatedAt":"2024-02-20T19:29:29","Actor":"AlfredHellstern","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1191","RelatedDescription":"Closed issue \"Attempt to open merged presentation file throws a \"needs repair\" error \" (#1191) at dotnet/Open-XML-SDK","RelatedBody":"I am having an issue when I am trying to merge PPTs, the code is working without throwing any error but when I open the merged presentation file it says that it needs to be repaired. When the repair is complete, the file opens and all of the data is there.\r\n\r\n**Screenshots**\r\n![1](https://user-images.githubusercontent.com/110584253/182762855-54250bd6-9b48-4524-91e0-bc5e48fcdddc.png)\r\n![2](https://user-images.githubusercontent.com/110584253/182762862-8fecf89d-bacf-47b4-9f94-674627843b70.png)\r\n\r\n\r\n**To Reproduce**\r\nMy code: \r\n```csharp\r\nnamespace Console_app\r\n{\r\n    using DocumentFormat.OpenXml.Packaging;\r\n    using DocumentFormat.OpenXml.Presentation;\r\n    using System.IO;\r\n    class Program\r\n    {\r\n        static uint _uniqueId;\r\n        static void Main(string[] args)\r\n        {\r\n            Stream stream1 = File.Open(\"sample1.pptx\", FileMode.Open,FileAccess.Read);\r\n            Stream stream2 = File.Open(\"sample2.pptx\", FileMode.Open,FileAccess.Read);            \r\n            Stream stream3 = File.Open(\"result.pptx\", FileMode.Open,FileAccess.ReadWrite);         \r\n            Stream[] arrStream = {stream1, stream2};\r\n            PresentationDocument destDoc = PresentationDocument.Open(stream3, true);  \r\n            Copy(arrStream,destDoc);    \r\n            stream3.Close();\r\n        }\r\n    private static uint CreateId(SlideMasterIdList slideMasterIdList)\r\n    {\r\n        uint currentId = 0;                                             \r\n        foreach (SlideMasterId masterId in slideMasterIdList)        \r\n        {\r\n            if (masterId.Id > currentId)\r\n            {\r\n                currentId = masterId.Id;\r\n            }\r\n        }\r\n        return ++currentId;\r\n    }\r\n    \r\n    public static void Copy(Stream[] arrStream, PresentationDocument destDoc)\r\n    {\r\n        var destPresentationPart = destDoc.PresentationPart;         \r\n        var destPresentation = destPresentationPart.Presentation; \r\n        destPresentation.SlideIdList = new SlideIdList();             \r\n        foreach (Stream sourcePresentationStream  in arrStream){    \r\n            var sourceDoc = PresentationDocument.Open(sourcePresentationStream, false);  \r\n            var sourcePresentationPart = sourceDoc.PresentationPart;                  \r\n            SlideId copiedSlideId = sourcePresentationPart.Presentation.SlideIdList.ChildElements[0] as SlideId;  \r\n            SlidePart copiedSlidePart = sourcePresentationPart.GetPartById(copiedSlideId.RelationshipId) as SlidePart; \r\n            SlidePart addedSlidePart = destPresentationPart.AddPart<SlidePart>(copiedSlidePart);   \r\n            SlideId slideId = new SlideId\r\n            {\r\n                Id = CreateId(destPresentation.SlideMasterIdList),\r\n                RelationshipId = destDoc.PresentationPart.GetIdOfPart(addedSlidePart)\r\n            };\r\n            destPresentation.SlideIdList.Append(slideId);       \r\n            SlideMasterPart addedSlideMasterPart = destPresentationPart.AddPart(addedSlidePart.SlideLayoutPart.SlideMasterPart);\r\n            uint masterId = CreateId(destPresentation.SlideMasterIdList); \r\n            SlideMasterId slideMaterId = new SlideMasterId\r\n            {\r\n                Id = masterId,\r\n                RelationshipId = destDoc.PresentationPart.GetIdOfPart(addedSlideMasterPart)\r\n            };\r\n            destDoc.PresentationPart.Presentation.SlideMasterIdList.Append(slideMaterId);\r\n            destDoc.PresentationPart.Presentation.Save();\r\n            sourcePresentationStream.Close();    \r\n            sourceDoc.Close();\r\n            }\r\n            destDoc.Close();\r\n        }\r\n    }\r\n}\r\n\r\n```\r\n\r\nSteps to reproduce the behavior:\r\n1. Save the project code \r\n2. Download files in the project folder [sample1.pptx](https://docs.google.com/presentation/d/1skDVfHph9easIFOtS_oPQwlBch9R1tNe/edit?usp=sharing&ouid=111639266533681987641&rtpof=true&sd=true), [sample2.pptx](https://docs.google.com/presentation/d/1S5m1UxOS8KSTkC1Jufh7HMWgDek3T8G-/edit?usp=sharing&ouid=111639266533681987641&rtpof=true&sd=true), [result.pptx](https://docs.google.com/presentation/d/1uXskDrLWCyTqWDnz_tmAt_hipUCFOFPH/edit?usp=sharing&ouid=111639266533681987641&rtpof=true&sd=true)\r\n3.  Run the code using `dotnet restore`, `dotnet build` and `dotnet run`\r\n4. Open the result.pptx file, the above mentioned error is shown.\r\n\r\n**Observed behavior**\r\nThe result.pptx file is throwing error as shown in the screenshots but after click on \"repair\" and \"ok\", the functionality worked and the PPTs got merged.\r\n\r\n**Expected behavior**\r\nWhen opened should not show any error to the user and functionality should be worked.\r\n\r\n"},{"Id":"35791716277","Type":"IssuesEvent","CreatedAt":"2024-02-19T09:39:07","Actor":"JaneConan","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1675","RelatedDescription":"Opened issue \"How can I get a CheckBox in Excel using OpenXML?\" (#1675) at dotnet/Open-XML-SDK","RelatedBody":"We can get the Value by Excel\r\n\r\n![image](https://github.com/dotnet/Open-XML-SDK/assets/26090153/12cbd975-ea90-473c-a43a-1f74e71c9cf4)\r\n\r\nBT,\r\n\r\nwe cannot find in OpenXML \r\nby\r\n`C#\r\nvar controls = wsPart.Worksheet.Descendants<DocumentFormat.OpenXml.Spreadsheet.Control>();\r\n`\r\n\r\n![image](https://github.com/dotnet/Open-XML-SDK/assets/26090153/7b72d83d-d2c5-47d5-88f1-f85814c32cb3)\r\n"},{"Id":"35748726673","Type":"PullRequestEvent","CreatedAt":"2024-02-16T19:13:39","Actor":"dependabot[bot]","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1674","RelatedDescription":"Opened pull request \"Bump xunit from 2.6.6 to 2.7.0\" (#1674) at dotnet/Open-XML-SDK","RelatedBody":"Bumps [xunit](https://github.com/xunit/xunit) from 2.6.6 to 2.7.0.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/xunit/xunit/commit/d806fa137a69112242ecf075b8dd6c65b322c197\"><code>d806fa1</code></a> v2.7.0</li>\n<li><a href=\"https://github.com/xunit/xunit/commit/13bb60be3604244c234d304ef7f82657b7a710f6\"><code>13bb60b</code></a> <a href=\"https://redirect.github.com/xunit/xunit/issues/2872\">#2872</a>: Expand special handling for sets in Assert.Contains/DoesNotContain (v2)</li>\n<li><a href=\"https://github.com/xunit/xunit/commit/203b4d91c63c14023e61cffde4ec58364d540fb2\"><code>203b4d9</code></a> Update to use the common build system (<a href=\"https://redirect.github.com/xunit/xunit/issues/2883\">#2883</a>)</li>\n<li><a href=\"https://github.com/xunit/xunit/commit/a4f585b9e44ca6dcd2d1607ce4ef1547047d6ad9\"><code>a4f585b</code></a> Remove UTF-8 byte order marks</li>\n<li><a href=\"https://github.com/xunit/xunit/commit/8b2c7b2c204b2c3eec6ef6102e8f448c212d4c26\"><code>8b2c7b2</code></a> Add v3 build submodule</li>\n<li><a href=\"https://github.com/xunit/xunit/commit/2413c5797c378d25bbfa38aa63d5a676d317debf\"><code>2413c57</code></a> Throw when user tries to run a non-async test with a timeout</li>\n<li><a href=\"https://github.com/xunit/xunit/commit/9ebc10c86170e6dc40a41cfcf05ee23a9fc260cd\"><code>9ebc10c</code></a> <a href=\"https://redirect.github.com/xunit/xunit/issues/2573\">#2573</a>: Opting out of AsyncTestSyncContext (v2)</li>\n<li><a href=\"https://github.com/xunit/xunit/commit/b060404f65904e59372ec4e5bfe5260b39db7ded\"><code>b060404</code></a> <a href=\"https://redirect.github.com/xunit/xunit/issues/2880\">xunit/xunit#2880</a>: Update XML documentation for string-based Assert.Equal (v2)</li>\n<li><a href=\"https://github.com/xunit/xunit/commit/6bbf922aa572120d99a7e8dd90de52e8cbf5dadb\"><code>6bbf922</code></a> Add conditions to EquivalenceAssertsTests for XUNIT_IMMUTABLE_COLLECTIONS</li>\n<li><a href=\"https://github.com/xunit/xunit/commit/cab6a3e275d3bd4ed4d567110079e2133bac2fc4\"><code>cab6a3e</code></a> <a href=\"https://redirect.github.com/xunit/xunit/issues/2871\">#2871</a>: Inner exception stack trace is missing from Assert.Collection failure ...</li>\n<li>Additional commits viewable in <a href=\"https://github.com/xunit/xunit/compare/2.6.6...2.7.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=xunit&package-manager=nuget&previous-version=2.6.6&new-version=2.7.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>"},{"Id":"35683793084","Type":"IssuesEvent","CreatedAt":"2024-02-14T20:37:11","Actor":"jamesjumper80","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1673","RelatedDescription":"Closed issue \"Bug with Open XML SDK\" (#1673) at dotnet/Open-XML-SDK","RelatedBody":"I am creating an export and designated a cell as numFmtId = 0 (General format). \r\n\r\n1. When the cell value is an integer under 10 digits (e.g., 123456789) the resulting xlsx output is an integer.\r\n2. When the cell value is an integer between 10 (e.g., 1234567890) and the number of digits to fill the cell width (let's say 19 digits wide), the output is text, despite being the same numFmtId.\r\n3. When the cell value is an integer larger than than the cell width (e.g., 20 digits), the result will be a number in scientific notation.\r\n\r\nI would expect all three of these scenarios to cells with integers in them.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: [e.g. Windows]: Windows 1809\r\n - Excel version 2401\r\n - .NET Target: (e.g. .NET Framework, .NET Core, UWP, Xamarin...): Not sure\r\n - DocumentFormat.OpenXml Version: (e.g. 2.11.0) I'm really sorry. I'm not sure.\r\n"},{"Id":"35682729160","Type":"IssuesEvent","CreatedAt":"2024-02-14T19:53:04","Actor":"jamesjumper80","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1673","RelatedDescription":"Opened issue \"Bug with Open XML SDK\" (#1673) at dotnet/Open-XML-SDK","RelatedBody":"I am creating an export and designated a cell as numFmtId = 0 (General format). \r\n\r\n1. When the cell value is an integer under 10 digits (e.g., 123456789) the resulting xlsx output is an integer.\r\n2. When the cell value is an integer between 10 (e.g., 1234567890) and the number of digits to fill the cell width (let's say 19 digits wide), the output is text, despite being the same numFmtId.\r\n3. When the cell value is an integer larger than than the cell width (e.g., 20 digits), the result will be a number in scientific notation.\r\n\r\nI would expect all three of these scenarios to cells with integers in them.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: [e.g. Windows]: Windows 1809\r\n - Excel version 2401\r\n - .NET Target: (e.g. .NET Framework, .NET Core, UWP, Xamarin...): Not sure\r\n - DocumentFormat.OpenXml Version: (e.g. 2.11.0) I'm really sorry. I'm not sure.\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-02-23T03:30:20.4539473Z","RunDurationInMilliseconds":604}