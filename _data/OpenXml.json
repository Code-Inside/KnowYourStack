{"Data":{"Sdk":{"Events":[{"Id":"24379989006","Type":"IssuesEvent","CreatedAt":"2022-10-04T06:53:57","Actor":"hunyu","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1213","RelatedDescription":"Closed issue \"Source of MainDocumentPart class\" (#1213) at OfficeDev/Open-XML-SDK","RelatedBody":"Hi,\r\n\r\nWhere can I find source of MainDocumentPart class and other classes listed in attributes of WordprocessingDocument class? \r\n\r\nCreated a fork and changed assembly name of DocumentFormat.OpenXml to OpenSource.DocumentFormat.OpenXml to make it possible to load different versions of Open XML at the same time, but build fails due to unresolved classes.\r\n\r\n##[error]src\\DocumentFormat.OpenXml\\Packaging\\WordprocessingDocument.cs(18,28): Error CS0246: The type or namespace name 'MainDocumentPart' could not be found (are you missing a using directive or an assembly reference?)\r\n\r\nAlso it tries to restore DocumentFormat.OpenXml nuget package during build of DocumentFormat.OpenXml project. Where is it configured?\r\n\r\n"},{"Id":"24322973863","Type":"IssuesEvent","CreatedAt":"2022-09-30T12:30:35","Actor":"Barrent","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1213","RelatedDescription":"Opened issue \"Source of MainDocumentPart class\" (#1213) at OfficeDev/Open-XML-SDK","RelatedBody":"Hi,\r\n\r\nWhere can I find source of MainDocumentPart class and other classes listed in attributes of WordprocessingDocument class? \r\n\r\nCreated a fork and changed assembly name of DocumentFormat.OpenXml to make it possible to load different versions of Open XML at the same time, but build fails due to unresolved classes.\r\n\r\n##[error]src\\DocumentFormat.OpenXml\\Packaging\\WordprocessingDocument.cs(18,28): Error CS0246: The type or namespace name 'MainDocumentPart' could not be found (are you missing a using directive or an assembly reference?)\r\n\r\n"},{"Id":"24308846098","Type":"IssuesEvent","CreatedAt":"2022-09-29T20:03:57","Actor":"mikeebowen","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1211","RelatedDescription":"Closed issue \"No support of System.IO.Packaging.Package.Save()/Flush() in .NET Core\" (#1211) at OfficeDev/Open-XML-SDK","RelatedBody":"Since _OpenXml_ is based on _System.IO.Packaging_ and there is no support for `Flush()`/`Save()` in .NET Core (dotnet 5, ...), I wanted to ask whether OpenXml is planning a better alternative than closing (disposing) the whole `OpenXmlPackage` (e.g. WordprocessingDocument)?\r\n\r\n```cs\r\n/// <summary>\r\n/// Gets a value indicating whether saving the package is supported by calling <see cref=\"Save\"/>. Some platforms (such as .NET Core), have limited support for saving.\r\n/// If <c>false</c>, in order to save, the document and/or package needs to be fully closed and disposed and then reopened.\r\n/// </summary>\r\n#if FEATURE_PACKAGE_FLUSH\r\npublic static bool CanSave { get; } = true;\r\n#else\r\npublic static bool CanSave { get; }\r\n#endif\r\n```\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2022-10-11T03:30:30.6699704Z","RunDurationInMilliseconds":627}