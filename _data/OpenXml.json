{"Data":{"Sdk":{"Events":[{"Id":"26081142231","Type":"IssuesEvent","CreatedAt":"2022-12-25T11:21:02","Actor":"liy0na","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1280","RelatedDescription":"Opened issue \"Bug with Open XML SDK adding 3D model\" (#1280) at OfficeDev/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nYou can no longer add 3D model to PowerPoint in verion 2.19.0\r\n\r\n**To Reproduce**\r\nup to version 2.18.0 you can use the following code to add 3D model to your PowerPoint\r\n\r\nprivate static readonly string MODEL_3D_URI = \"http://schemas.microsoft.com/office/drawing/2017/model3d\";\r\n OpenXmlUnknownElement unknowElement = new OpenXmlUnknownElement( prefix: \"am3d\", localName: \"model3d\", namespaceUri: MODEL_3D_URI );\r\n            OpenXmlAttribute attribute = new OpenXmlAttribute( prefix: \"r\", localName: \"embed\", namespaceUri: RELS_URI, value: modelId );\r\n            unknowElement.SetAttribute( attribute );\r\n\r\nNow the 3D part generated with this code is empty.\r\n\r\n\r\n**Observed behavior**\r\n3D model container is empty\r\n\r\n**Expected behavior**\r\n3D model container should have the 3D part in it\r\n\r\n**Desktop (please complete the following information):**\r\n - OS:  Windows 11\r\n - Office version 18.2210.1203.0\r\n - .NET Target:  .NET Framework\r\n - DocumentFormat.OpenXml Version: 2.19.0\r\n\r\n"},{"Id":"26053263977","Type":"IssuesEvent","CreatedAt":"2022-12-22T21:14:09","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/931","RelatedDescription":"Closed issue \"Media References are removed\" (#931) at OfficeDev/Open-XML-SDK","RelatedBody":"Hi I encountered the following issue while using the OpenXML SDK:\r\n\r\n**Description**\r\nI opened the attached file with the OpenXML SDK and saved it using a different name.\r\nIf I try to open the saved file Power Point reports that the file is broken and that it can try to repair it.\r\nAfter repairing the document does not contain the video which was originally in the presentation.\r\n\r\n**Information**\r\n\r\n- .NET Target:  .NET Core\r\n- DocumentFormat.OpenXml Version: 2.13.0-beta2\r\n\r\n**Repro**\r\n\r\nUse the following code with the attached file and try to open the saved pptx file.\r\n\r\n```csharp\r\n    var ppt = PresentationDocument.Open(\"source.pptx\", false);\r\n    ppt.SaveAs(\"saved.pptx\");\r\n``` \r\n[source.pptx](https://github.com/OfficeDev/Open-XML-SDK/files/6467546/source.pptx)\r\n\r\n**Observed**\r\n\r\nThe saved file is broken and has to be repaired. The repaired file does not contain the video anymore. \r\nSomehow the OpenXML SDK removes all the media references contained in the pptx file.\r\n\r\n**Expected**\r\n\r\nA valid pptx file that is identical to the original document.\r\n\r\nI would also be willing to help working on a fix if someone could provide me a starting point why/where the references are removed.\r\n\r\nThanks and kind regards,\r\nLars\r\n"},{"Id":"26010279700","Type":"IssuesEvent","CreatedAt":"2022-12-21T00:33:52","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1278","RelatedDescription":"Opened issue \"Review generated namespace hierarchy\" (#1278) at OfficeDev/Open-XML-SDK","RelatedBody":"Some of the generated types were put in namespaces that don't match their schema namespace.  For example, there is a namespace for drawing that has 2007 when it should be 2010. This issue is to track identifying if there are others and how we want to handle it."},{"Id":"26006255853","Type":"IssuesEvent","CreatedAt":"2022-12-20T19:41:24","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1277","RelatedDescription":"Opened issue \"Allow OpenXmlPackage and OpenXmlPart to be easily customized\" (#1277) at OfficeDev/Open-XML-SDK","RelatedBody":"The last couple of years has seen some fundamental changes internally to how packages and parts are handled. I'd like to see it continue becoming more flexible so that people can develop their own packages/parts if needed (if anything, this should simplify some of the behavior of our own implementations that currently need InternalsVisibleTo)"},{"Id":"26006226069","Type":"IssuesEvent","CreatedAt":"2022-12-20T19:39:38","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1276","RelatedDescription":"Opened issue \"Refactor FlatOPC handling into separate class\" (#1276) at OfficeDev/Open-XML-SDK","RelatedBody":"There's a bunch of code that gets intermixed with the OpenXmlPackage that makes it quite a bit more complicated (and difficult to overload). I'd like to identify how we can move FlatOPC handling into its own class.\r\n\r\nThis will break the public APIs, so we'll need to document it. If we use extension methods that allow for compile time compatibility, it may be a small change from a developer's perspective"},{"Id":"26006194477","Type":"IssuesEvent","CreatedAt":"2022-12-20T19:37:39","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1275","RelatedDescription":"Opened issue \"Consider removing IFixedContentTypePart\" (#1275) at OfficeDev/Open-XML-SDK","RelatedBody":"This is used a marker to set a part as having a fixed content type. A better design would be one that can be overridden on a per-part basis.\r\n\r\nSInce this is a public type, removing it should be documented."},{"Id":"26006175974","Type":"IssuesEvent","CreatedAt":"2022-12-20T19:36:31","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1274","RelatedDescription":"Opened issue \"Remove EnumStringAttribute\" (#1274) at OfficeDev/Open-XML-SDK","RelatedBody":"This infrastructure can be done better - potentially with Features or source generators. It will also make it better for AOT\r\n\r\nI don't expect people to be using EnumStringAttribute externally, but that makes it a breaking change that we will need to document."},{"Id":"26006154656","Type":"IssuesEvent","CreatedAt":"2022-12-20T19:35:14","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1273","RelatedDescription":"Opened issue \"Make OpenXmlSimpleType.TextValue internal\" (#1273) at OfficeDev/Open-XML-SDK","RelatedBody":"This causes some difficulties with optimizations. We should identify what the fall out it, and if it is needed, a simultaneous change for v2.20.0 to obsolete it should be made"},{"Id":"26006137838","Type":"IssuesEvent","CreatedAt":"2022-12-20T19:34:13","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1272","RelatedDescription":"Opened issue \"Remove obsoleted APIs for v3.0\" (#1272) at OfficeDev/Open-XML-SDK","RelatedBody":"A number of APIs have been obsoleted over the years. With the change to v3.0.0, we can remove these.\r\n\r\nThis is to track removing APIs that are currently obsolete - if we determine APIs should be removed for v3.0.0, those will be tracked separately"},{"Id":"26006101319","Type":"IssuesEvent","CreatedAt":"2022-12-20T19:31:57","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/701","RelatedDescription":"Closed issue \"Support non-nullable annotations\" (#701) at OfficeDev/Open-XML-SDK","RelatedBody":"With C# 8.0 and .NET Standard 2.1 (and other supported platforms), APIs can be annotated with nullability information. This issue will track any work to enable this. So far, this would include:\r\n\r\n- [x] Enable C# 8.0 in the project (#698)\r\n- [ ] Enable .NET Standard 2.1\r\n- [ ] Enable nullable annotations in non-.NET Standard 2.1 targets (through some shim to provide attributes that can be stripped out at compile time)"},{"Id":"26005944668","Type":"PullRequestEvent","CreatedAt":"2022-12-20T19:22:22","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"merged","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1164","RelatedDescription":"Merged pull request \"Separate framework from typed classes\" (#1164) at OfficeDev/Open-XML-SDK","RelatedBody":"This is an initial change to move the infrastructure of the SDK to a separate assembly. This is done in a way that will not break the current set up by defining type forwards from `DocumentFormat.OpenXml` to the new `DocumentFormat.OpenXml.Framework` assembly. This is a WIP and updates will be pushed to the PR as progress is made. The change is expected to be made before 2.19.0 and is a precursor to any changes to separate out by document type (word/excel/powerpoint)."},{"Id":"25985905378","Type":"IssuesEvent","CreatedAt":"2022-12-20T00:06:16","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/715","RelatedDescription":"Reopened issue \"One illegal uri in Relationship will destroy the document parsing\" (#715) at OfficeDev/Open-XML-SDK","RelatedBody":"**Description**\r\n\r\nThe PPTX document that include an illegal uri in Relationship will make the `System.IO.Packaging.InternalRelationshipCollection.ProcessRelationshipAttributes` throw an exception to  `OpenXmlPart.Load`.\r\n\r\nAnd the `OpenXmlPart.Load` can not catch the exception and it will break the `PresentationDocument.Open`.\r\n\r\n**Information**\r\n\r\n- .NET Target: All\r\n- DocumentFormat.OpenXml Version: 2.10.1\r\n\r\n**Repro**\r\n\r\n```csharp\r\nvar document = PresentationDocument.Open(\"hyperlink.pptx\", isEditable: false, openSettings)\r\n``` \r\n\r\nHere is the hyperlink.pptx file : https://1drv.ms/p/s!AiKjiQqRWKThlv5zkY4HoRvvJ3Ppdg?e=3kfdNU \r\n\r\n**Observed**\r\n\r\nThe PresentationDocument.Open throw the UriFormatException exception\r\n\r\n```\r\nSystem.UriFormatException: 'Invalid URI: The hostname could not be parsed.'\r\n```\r\n\r\nBecause the ppt\\slides\\_rels\\slide1.xml.rels contain this string\r\n\r\n```xml\r\n<Relationship Id=\"rId1\" Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink\" Target=\"mailto:!@#$%^&amp;*()_+}{:”?&gt;&lt;,./;’[]=-098766554321\" TargetMode=\"External\"/>\r\n```\r\n\r\nAs you can see, the `Target` is not an uri.\r\n\r\n**Expected**\r\n\r\nWe can design an exception handle API, and we can handle some illegal document.\r\n\r\nSee #38 #274 #297 #298 \r\n\r\nAnd the #298 only add more information but can not tolerate errors.\r\n\r\nAnd just as @twsouthwick says, we can not fix this in the OpenXML SDK project https://github.com/OfficeDev/Open-XML-SDK/issues/297#issuecomment-345560540 , but I think we can tolerate some errors"},{"Id":"25984082484","Type":"PullRequestEvent","CreatedAt":"2022-12-19T21:47:55","Actor":"twsouthwick","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/pull/1271","RelatedDescription":"Opened pull request \"Update README, CHANGELOG and roadmap for upcomgin v3.0.0 release\" (#1271) at OfficeDev/Open-XML-SDK","RelatedBody":""}],"ResultType":"GitHubEvent"}},"RunOn":"2022-12-27T03:30:25.7768804Z","RunDurationInMilliseconds":583}