{"Data":{"Sdk":{"Events":[{"Id":"38218060678","Type":"IssuesEvent","CreatedAt":"2024-05-09T01:22:59","Actor":"HanJason","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1709","RelatedDescription":"Closed issue \"When opening a pptx file, it prompts that there is a problem with the content and needs to be repaired.\" (#1709) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nWhen opening a pptx file, it prompts that there is a problem with the content and needs to be repaired.\r\n\r\n**Screenshots**\r\n![image](https://github.com/dotnet/Open-XML-SDK/assets/3375750/79ea46a0-c674-4a24-ad42-77a527e62163)\r\n\r\n\r\n![image](https://github.com/dotnet/Open-XML-SDK/assets/3375750/bde6b769-484b-4e48-a750-758c121ede76)\r\n\r\n\r\n**To Reproduce**\r\n\r\nOnly insert a slide into the target file.\r\n\r\nSteps to reproduce the behavior:\r\nRun the program and open the output file\r\n\r\n**Observed behavior**\r\nPowerPoint found a problem with content in c:\\..\\bin\\Debug\\net6.0\\abc_copy.pptx.\r\nPowerPoint can attempt to repair the presentation.\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: [Windows]\r\n - .NET Target: ( .NET Core NET6.0)\r\n - DocumentFormat.OpenXml Version: (3.0.0)\r\n\r\n**Additional context**\r\n```C#\r\nusing DocumentFormat.OpenXml;\r\nusing DocumentFormat.OpenXml.Packaging;\r\nusing DocumentFormat.OpenXml.Presentation;\r\n\r\nvar pathfile = AppDomain.CurrentDomain.BaseDirectory + \"abc.pptx\";\r\nvar destinationFilePath = AppDomain.CurrentDomain.BaseDirectory + \"abc_copy.pptx\";\r\n\r\nusing (PresentationDocument sourcePresentation = PresentationDocument.Open(pathfile, false))\r\n{\r\n    using var mStream = new MemoryStream();\r\n    PresentationDocument destinationPresentation = PresentationDocument.Create(mStream, PresentationDocumentType.Presentation);\r\n\r\n    foreach (var part in sourcePresentation.Parts)\r\n    {\r\n        destinationPresentation.AddPart(part.OpenXmlPart, part.RelationshipId);\r\n    }\r\n\r\n    PresentationPart? presentationPart = destinationPresentation.PresentationPart;\r\n    if (presentationPart is not null && presentationPart.Presentation is not null)\r\n    {\r\n        Presentation presentation = presentationPart.Presentation;\r\n\r\n        if (presentation.SlideIdList is not null)\r\n        {\r\n            //presentation.SlideIdList.AppendChild(new SlideId() { Id = (uint)234533, RelationshipId = \"r_rid1\" });\r\n            List<string> titlesList = new List<string>();\r\n            var len = presentation.SlideIdList.Elements<SlideId>().Count();\r\n            var slideIdList = presentation.SlideIdList.Elements<SlideId>()?.ToList() ?? new List<SlideId>();\r\n            for (int i = 0; i < len; i++)\r\n            {\r\n                var slideId = slideIdList[i];\r\n                if (slideId.RelationshipId is null)\r\n                {\r\n                    continue;\r\n                }\r\n                SlidePart slidePart = (SlidePart)presentationPart.GetPartById(slideId.RelationshipId!);\r\n                if (slidePart is null)\r\n                {\r\n                    throw new ArgumentNullException(\"presentationDocument\");\r\n                }\r\n                //copy slide part \r\n                SlidePart newSlidePart = presentationPart.AddNewPart<SlidePart>();\r\n                newSlidePart.FeedData(slidePart.GetStream());\r\n                newSlidePart.AddPart(slidePart.SlideLayoutPart);\r\n\r\n                slideId.InsertAfterSelf<SlideId>(new SlideId() { RelationshipId = presentationPart.GetIdOfPart(newSlidePart) });\r\n            }\r\n        }\r\n    }\r\n    destinationPresentation.Save();\r\n    File.WriteAllBytes(destinationFilePath, mStream.ToArray());\r\n}\r\n```\r\n[abc.pptx](https://github.com/dotnet/Open-XML-SDK/files/15228287/abc.pptx)\r\n[abc_copy.pptx](https://github.com/dotnet/Open-XML-SDK/files/15228288/abc_copy.pptx)\r\n\r\n"},{"Id":"38206203923","Type":"IssuesEvent","CreatedAt":"2024-05-08T16:28:26","Actor":"mikeebowen","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1571","RelatedDescription":"Closed issue \"Presentation created in C# with the Open XML SDK is corrupted and blank when opened\" (#1571) at dotnet/Open-XML-SDK","RelatedBody":"Presentation created in C# with the Open XML SDK is corrupted and blank when opened\r\n\r\n# Problem\r\nI am trying to create a PowerPoint presentation in `C#` with Visual Studio using the `Open XML SDK`.\r\n\r\nThe presentation I create contains one slide with one table with 3 rows and 2 columns.\r\n\r\nWhen I try to open the PowerPoint presentation created by the program, I am presented with the following error message:\r\n```\r\nPowerPoint found a problem with content in test3.pptx.\r\nPowerPoint can attempt to repair the presentation.\r\n\r\nIf you trust the source of this presentation, click Repair.\r\n```\r\n\r\nWhen I click Repair, I am presented with another error message:\r\n```\r\nPowerPoint couldn't read some content in test3.pptx - Repaired and removed it.\r\n\r\nPlease check your presentation to see if the rest looks ok.\r\n```\r\n\r\nWhen I click Ok and check the contents of the presentation, it is empty.\r\n\r\n# QUESTION\r\n\r\nHow should I modify the program, so users can open the presentations without problems?\r\n\r\n- Am I using the wrong version of the `Open XML SDK`?\r\n- Is there something wrong with the code I've written?\r\n- Are there tools I can use to assist me in tracking down the error?\r\n- Other?\r\n\r\n# The version of PowerPoint I use to open the .pptx file\r\n\r\n`Microsoft® PowerPoint® for Microsoft 365 MSO (Version 2310 Build 16.0.16924.20054) 64-bit`\r\n\r\n\r\n\r\n# My console project looks like this\r\n```xml\r\n<Project Sdk=\"Microsoft.NET.Sdk\">\r\n  <PropertyGroup>\r\n    <OutputType>Exe</OutputType>\r\n    <TargetFramework>net6.0</TargetFramework>\r\n    <ImplicitUsings>enable</ImplicitUsings>\r\n    <Nullable>enable</Nullable>\r\n  </PropertyGroup>\r\n  <ItemGroup>\r\n    <PackageReference Include=\"DocumentFormat.OpenXml\" Version=\"2.20.0\" />\r\n  </ItemGroup>\r\n</Project>\r\n```\r\n\r\n# My main program looks like this\r\n```csharp\r\nvar builder = new OpenXMLBuilder.Test3();\r\nbuilder.Doit(args);\r\n```\r\n\r\n# My source code looks like this\r\n\r\n```csharp\r\nusing DocumentFormat.OpenXml;\r\nusing DocumentFormat.OpenXml.Packaging;\r\nusing DocumentFormat.OpenXml.Presentation;\r\nusing D = DocumentFormat.OpenXml.Drawing;\r\n\r\n#region disable_warnings\r\n// Remove unnecessary suppression\r\n#pragma warning disable IDE0079\r\n// Member 'x' does not access instance data and can be marked as static\r\n#pragma warning disable CA1822\r\n// Remove unused parameter 'x'\r\n#pragma warning disable IDE0060\r\n// 'using' statement can be simplified\r\n#pragma warning disable IDE0063\r\n// 'new' expression can be simplified\r\n#pragma warning disable IDE0090\r\n// Object initialization can be simplified\r\n#pragma warning disable IDE0017\r\n#endregion\r\n\r\nnamespace OpenXMLBuilder\r\n{\r\n    class Test3\r\n    {\r\n        public void Doit(string[] args)\r\n        {\r\n            string filepath = \"test3.pptx\";\r\n            CreatePresentation(filepath);\r\n        }\r\n\r\n        public static void CreatePresentation(string filepath)\r\n        {\r\n            // Create a presentation at a specified file path.\r\n            using (PresentationDocument presentationDocument = PresentationDocument.Create(filepath, PresentationDocumentType.Presentation))\r\n            {\r\n                PresentationPart presentationPart = presentationDocument.AddPresentationPart();\r\n                presentationPart.Presentation = new Presentation();\r\n                CreateSlide(presentationPart);\r\n            }\r\n        }\r\n\r\n        private static void CreateSlide(PresentationPart presentationPart)\r\n        {\r\n            // Create the SlidePart.\r\n            SlidePart slidePart = presentationPart.AddNewPart<SlidePart>();\r\n            slidePart.Slide = new Slide(new CommonSlideData(new ShapeTree()));\r\n\r\n            // Declare and instantiate the table\r\n            D.Table table = new D.Table();\r\n\r\n            // Define the columns\r\n            D.TableGrid tableGrid = new D.TableGrid();\r\n            tableGrid.Append(new D.GridColumn() { Width = 3124200 });\r\n            tableGrid.Append(new D.GridColumn() { Width = 3124200 });\r\n\r\n            // Append the TableGrid to the table\r\n            table.Append(tableGrid);\r\n\r\n            // Create the rows and cells\r\n            for (int i = 0; i < 3; i++) // 3 rows\r\n            {\r\n                D.TableRow row = new D.TableRow() { Height = 370840 };\r\n                for (int j = 0; j < 2; j++) // 2 columns\r\n                {\r\n                    D.TableCell cell = new D.TableCell();\r\n                    D.TextBody body = new D.TextBody(new D.BodyProperties(),\r\n                                                         new D.ListStyle(),\r\n                                                         new D.Paragraph(new D.Run(new D.Text($\"Cell {i + 1},{j + 1}\"))));\r\n                    cell.Append(body);\r\n                    cell.Append(new D.TableCellProperties());\r\n                    row.Append(cell);\r\n                }\r\n                table.Append(row);\r\n            }\r\n\r\n            // Create a GraphicFrame to hold the table\r\n            GraphicFrame graphicFrame = new GraphicFrame();\r\n            graphicFrame.NonVisualGraphicFrameProperties = new NonVisualGraphicFrameProperties(\r\n                new NonVisualDrawingProperties() { Id = 1026, Name = \"Table\" },\r\n                new NonVisualGraphicFrameDrawingProperties(),\r\n                new ApplicationNonVisualDrawingProperties());\r\n            graphicFrame.Transform = new Transform(new D.Offset() { X = 0L, Y = 0L }, new D.Extents() { Cx = 0L, Cy = 0L });\r\n            graphicFrame.Graphic = new D.Graphic(new D.GraphicData(table)\r\n            {\r\n                Uri = \"http://schemas.openxmlformats.org/drawingml/2006/table\"\r\n            });\r\n            // Sanity check\r\n            if (slidePart.Slide.CommonSlideData == null)\r\n                throw new InvalidOperationException(\"CreateSlide: CommonSlideData is null\");\r\n            if (slidePart.Slide.CommonSlideData.ShapeTree == null)\r\n                throw new InvalidOperationException(\"CreateSlide: ShapeTree is null\");\r\n            // Append the GraphicFrame to the SlidePart\r\n            slidePart.Slide.CommonSlideData.ShapeTree.AppendChild(graphicFrame);\r\n            // Save the slide part\r\n            slidePart.Slide.Save();\r\n\r\n            // Create slide master\r\n            SlideMasterPart slideMasterPart = presentationPart.AddNewPart<SlideMasterPart>();\r\n            slideMasterPart.SlideMaster = new SlideMaster(new CommonSlideData(new ShapeTree()));\r\n            slideMasterPart.SlideMaster.Save();\r\n\r\n            // Create slide layout\r\n            SlideLayoutPart slideLayoutPart = slideMasterPart.AddNewPart<SlideLayoutPart>();\r\n            slideLayoutPart.SlideLayout = new SlideLayout(new CommonSlideData(new ShapeTree()));\r\n            slideLayoutPart.SlideLayout.Save();\r\n            // Create unique id for the slide\r\n            presentationPart.Presentation.SlideIdList = new SlideIdList(new SlideId()\r\n            {\r\n                Id = 256U,\r\n                RelationshipId = presentationPart.GetIdOfPart(slidePart)\r\n            });\r\n            // Set the size\r\n            presentationPart.Presentation.SlideSize = new SlideSize() { Cx = 9144000, Cy = 6858000 };\r\n\r\n            // Save the presentation\r\n            presentationPart.Presentation.Save();\r\n        }\r\n    } // class\r\n} // namespace\r\n```\r\n\r\n# Desktop Info\r\n - OS: Windows 10.0.19044\r\n - Office version: 2310 Build 16.0.16924.20054 64-bit\r\n - .NET Target: .NET 6.0\r\n - DocumentFormat.OpenXml Version: 2.20.0\r\n"},{"Id":"38176618270","Type":"IssuesEvent","CreatedAt":"2024-05-07T20:43:42","Actor":"mikeebowen","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1707","RelatedDescription":"Closed issue \"Bug with Open XML SDK\" (#1707) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nA clear and concise description of what the bug is.\r\n\r\n**Screenshots**\r\nIf applicable, add screenshots to help explain your problem.\r\n\r\n**To Reproduce**\r\n// Please add a self-contained, minimum viable repro of the issue.\r\n// If you require external resources, please provide a gist or GitHub repro\r\n// An Xunit style test is preferred, but a console application would work too.\r\n\r\nSteps to reproduce the behavior:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\n**Observed behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: [e.g. Windows]\r\n - Office version [e.g. 16.0.15427.20178]\r\n - .NET Target: (e.g. .NET Framework, .NET Core, UWP, Xamarin...)\r\n - DocumentFormat.OpenXml Version: (e.g. 2.11.0)\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n"},{"Id":"38172378190","Type":"PullRequestEvent","CreatedAt":"2024-05-07T18:02:44","Actor":"tomjebo","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1690","RelatedDescription":"Closed pull request \"add Feb24 Schema updates\" (#1690) at dotnet/Open-XML-SDK","RelatedBody":""},{"Id":"38149081094","Type":"IssuesEvent","CreatedAt":"2024-05-07T06:18:27","Actor":"skrabbe001","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1710","RelatedDescription":"Opened issue \"Bug with Open XML SDK\" (#1710) at dotnet/Open-XML-SDK","RelatedBody":"When trying to find out how to create niche stuff, it turns out that the tools provided are too old, does not cover niche cases, questions are not answered on stackoverflow, and the samples provided in the Open-XML-SDK repository does not cover the case.\r\n\r\nIn my opinion we have a problem when you refer to stackoverflow, for for example how to create a chart in a presentation, as you can verify by searching stackoverflow for openxml, presentation and chart. It means that when you refer to stackoverflow, you might as well refer to /dev/null. If the questions are answered, they answer by telling the users to use a library on top of the SDK, ie. the question is ignored.\r\n\r\nWhat I think is needed, is more samples. Otherwise, what is the point with the Open-XML-SDK, when it's easier to read the specification and not use the SDK?"},{"Id":"38144201486","Type":"IssuesEvent","CreatedAt":"2024-05-07T01:30:38","Actor":"HanJason","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1709","RelatedDescription":"Opened issue \"When opening a pptx file, it prompts that there is a problem with the content and needs to be repaired.\" (#1709) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nWhen opening a pptx file, it prompts that there is a problem with the content and needs to be repaired.\r\n\r\n**Screenshots**\r\n![image](https://github.com/dotnet/Open-XML-SDK/assets/3375750/7493e3e3-e4dc-437f-b3bf-faaa29f488ac)\r\n\r\n![image](https://github.com/dotnet/Open-XML-SDK/assets/3375750/bde6b769-484b-4e48-a750-758c121ede76)\r\n\r\n\r\n**To Reproduce**\r\n\r\nOnly insert a slide into the target file.\r\n\r\nSteps to reproduce the behavior:\r\nRun the program and open the output file\r\n\r\n**Observed behavior**\r\nPowerPoint found a problem with content in c:\\..\\bin\\Debug\\net6.0\\abc_copy.pptx.\r\nPowerPoint can attempt to repair the presentation.\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: [Windows]\r\n - .NET Target: ( .NET Core NET6.0)\r\n - DocumentFormat.OpenXml Version: (2.20.0)\r\n\r\n**Additional context**\r\n```C#\r\nusing DocumentFormat.OpenXml;\r\nusing DocumentFormat.OpenXml.Packaging;\r\nusing DocumentFormat.OpenXml.Presentation;\r\n\r\nvar pathfile = AppDomain.CurrentDomain.BaseDirectory + \"abc.pptx\";\r\nvar destinationFilePath = AppDomain.CurrentDomain.BaseDirectory + \"abc_copy.pptx\";\r\n\r\nusing (PresentationDocument sourcePresentation = PresentationDocument.Open(pathfile, false))\r\n{\r\n    using var mStream = new MemoryStream();\r\n    PresentationDocument destinationPresentation = PresentationDocument.Create(mStream, PresentationDocumentType.Presentation);\r\n\r\n    foreach (var part in sourcePresentation.Parts)\r\n    {\r\n        destinationPresentation.AddPart(part.OpenXmlPart, part.RelationshipId);\r\n    }\r\n\r\n    PresentationPart? presentationPart = destinationPresentation.PresentationPart;\r\n    if (presentationPart is not null && presentationPart.Presentation is not null)\r\n    {\r\n        Presentation presentation = presentationPart.Presentation;\r\n\r\n        if (presentation.SlideIdList is not null)\r\n        {\r\n            //presentation.SlideIdList.AppendChild(new SlideId() { Id = (uint)234533, RelationshipId = \"r_rid1\" });\r\n            List<string> titlesList = new List<string>();\r\n            var len = presentation.SlideIdList.Elements<SlideId>().Count();\r\n            var slideIdList = presentation.SlideIdList.Elements<SlideId>()?.ToList() ?? new List<SlideId>();\r\n            for (int i = 0; i < len; i++)\r\n            {\r\n                var slideId = slideIdList[i];\r\n                if (slideId.RelationshipId is null)\r\n                {\r\n                    continue;\r\n                }\r\n                SlidePart slidePart = (SlidePart)presentationPart.GetPartById(slideId.RelationshipId!);\r\n                if (slidePart is null)\r\n                {\r\n                    throw new ArgumentNullException(\"presentationDocument\");\r\n                }\r\n                //copy slide part \r\n                SlidePart newSlidePart = presentationPart.AddNewPart<SlidePart>();\r\n                newSlidePart.FeedData(slidePart.GetStream());\r\n                newSlidePart.AddPart(slidePart.SlideLayoutPart);\r\n\r\n                slideId.InsertAfterSelf<SlideId>(new SlideId() { RelationshipId = presentationPart.GetIdOfPart(newSlidePart) });\r\n            }\r\n        }\r\n    }\r\n    destinationPresentation.Save();\r\n    File.WriteAllBytes(destinationFilePath, mStream.ToArray());\r\n}\r\n```\r\n[abc.pptx](https://github.com/dotnet/Open-XML-SDK/files/15228287/abc.pptx)\r\n[abc_copy.pptx](https://github.com/dotnet/Open-XML-SDK/files/15228288/abc_copy.pptx)\r\n\r\n"},{"Id":"38135997235","Type":"PullRequestEvent","CreatedAt":"2024-05-06T18:51:50","Actor":"tomjebo","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/pull/1708","RelatedDescription":"Opened pull request \"Feb 2024 Schema Update with obsolete extensions\" (#1708) at dotnet/Open-XML-SDK","RelatedBody":""}],"ResultType":"GitHubEvent"}},"RunOn":"2024-05-09T03:30:19.2207872Z","RunDurationInMilliseconds":661}