{"Data":{"Sdk":{"Events":[{"Id":"24379989006","Type":"IssuesEvent","CreatedAt":"2022-10-04T06:53:57","Actor":"hunyu","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1213","RelatedDescription":"Closed issue \"Source of MainDocumentPart class\" (#1213) at OfficeDev/Open-XML-SDK","RelatedBody":"Hi,\r\n\r\nWhere can I find source of MainDocumentPart class and other classes listed in attributes of WordprocessingDocument class? \r\n\r\nCreated a fork and changed assembly name of DocumentFormat.OpenXml to OpenSource.DocumentFormat.OpenXml to make it possible to load different versions of Open XML at the same time, but build fails due to unresolved classes.\r\n\r\n##[error]src\\DocumentFormat.OpenXml\\Packaging\\WordprocessingDocument.cs(18,28): Error CS0246: The type or namespace name 'MainDocumentPart' could not be found (are you missing a using directive or an assembly reference?)\r\n\r\nAlso it tries to restore DocumentFormat.OpenXml nuget package during build of DocumentFormat.OpenXml project. Where is it configured?\r\n\r\n"},{"Id":"24322973863","Type":"IssuesEvent","CreatedAt":"2022-09-30T12:30:35","Actor":"Barrent","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1213","RelatedDescription":"Opened issue \"Source of MainDocumentPart class\" (#1213) at OfficeDev/Open-XML-SDK","RelatedBody":"Hi,\r\n\r\nWhere can I find source of MainDocumentPart class and other classes listed in attributes of WordprocessingDocument class? \r\n\r\nCreated a fork and changed assembly name of DocumentFormat.OpenXml to make it possible to load different versions of Open XML at the same time, but build fails due to unresolved classes.\r\n\r\n##[error]src\\DocumentFormat.OpenXml\\Packaging\\WordprocessingDocument.cs(18,28): Error CS0246: The type or namespace name 'MainDocumentPart' could not be found (are you missing a using directive or an assembly reference?)\r\n\r\n"},{"Id":"24308846098","Type":"IssuesEvent","CreatedAt":"2022-09-29T20:03:57","Actor":"mikeebowen","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1211","RelatedDescription":"Closed issue \"No support of System.IO.Packaging.Package.Save()/Flush() in .NET Core\" (#1211) at OfficeDev/Open-XML-SDK","RelatedBody":"Since _OpenXml_ is based on _System.IO.Packaging_ and there is no support for `Flush()`/`Save()` in .NET Core (dotnet 5, ...), I wanted to ask whether OpenXml is planning a better alternative than closing (disposing) the whole `OpenXmlPackage` (e.g. WordprocessingDocument)?\r\n\r\n```cs\r\n/// <summary>\r\n/// Gets a value indicating whether saving the package is supported by calling <see cref=\"Save\"/>. Some platforms (such as .NET Core), have limited support for saving.\r\n/// If <c>false</c>, in order to save, the document and/or package needs to be fully closed and disposed and then reopened.\r\n/// </summary>\r\n#if FEATURE_PACKAGE_FLUSH\r\npublic static bool CanSave { get; } = true;\r\n#else\r\npublic static bool CanSave { get; }\r\n#endif\r\n```\r\n"},{"Id":"24305158475","Type":"IssuesEvent","CreatedAt":"2022-09-29T16:45:04","Actor":"cwensley","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1212","RelatedDescription":"Opened issue \"Add API to determine if a child is valid for a given element\" (#1212) at OfficeDev/Open-XML-SDK","RelatedBody":"When trying to modify a document, one needs to know if a particular element can add a particular child before doing so.  Before, this was one way of doing so which is no longer works:\r\n\r\n```cs\r\npublic static bool CanAddChild<T>(this OpenXmlElement element)\r\n{\r\n\tif (element == null)\r\n\t\treturn false;\r\n\tvar attributes = element.GetType().GetCustomAttributes<ChildElementInfoAttribute>();\r\n\treturn attributes.Any(r => r.ElementType == typeof(T));\r\n}\r\n```\r\n\r\nThere does not appear to be a way to do this anymore as all of the metadata information is internal and created in the internal `ConfigureMetadata` override.\r\n\r\n**Describe the solution you'd like**\r\nAn API such as the above to determine and/or list the valid children of a given element.\r\n\r\n**Describe alternatives you've considered**\r\nOne way might be to add the child then validate it, but this seems the wrong approach.\r\n\r\n"},{"Id":"24295648005","Type":"IssuesEvent","CreatedAt":"2022-09-29T09:49:45","Actor":"mhoerandner","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"reopened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1211","RelatedDescription":"Reopened issue \"No support of System.IO.Packaging.Package.Save()/Flush() in .NET CoreFeature request for Open XML SDK\" (#1211) at OfficeDev/Open-XML-SDK","RelatedBody":"Since _OpenXml_ is based on _System.IO.Packaging_ and there is no support for `Flush()`/`Save()` in .NET Core (dotnet 5, ...), I wanted to ask whether OpenXml is planning a better alternative than closing (disposing) the whole `OpenXmlPackage` (e.g. WordprocessingDocument)?\r\n\r\n```cs\r\n/// <summary>\r\n/// Gets a value indicating whether saving the package is supported by calling <see cref=\"Save\"/>. Some platforms (such as .NET Core), have limited support for saving.\r\n/// If <c>false</c>, in order to save, the document and/or package needs to be fully closed and disposed and then reopened.\r\n/// </summary>\r\n#if FEATURE_PACKAGE_FLUSH\r\npublic static bool CanSave { get; } = true;\r\n#else\r\npublic static bool CanSave { get; }\r\n#endif\r\n```\r\n"},{"Id":"24295561293","Type":"IssuesEvent","CreatedAt":"2022-09-29T09:45:54","Actor":"mhoerandner","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1211","RelatedDescription":"Closed issue \"No support of System.IO.Packaging.Package.Save()/Flush() in .NET CoreFeature request for Open XML SDK\" (#1211) at OfficeDev/Open-XML-SDK","RelatedBody":"Since _OpenXml_ is based on _System.IO.Packaging_ and there is no support for `Flush()`/`Save()` in .NET Core (dotnet 5, ...), I wanted to ask whether OpenXml is planning a better alternative than closing (disposing) the whole `OpenXmlPackage` (e.g. WordprocessingDocument)?\r\n\r\n```cs\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nA clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\r\nPlease link to an issue where the problem was reported if one exists.\r\n\r\n**Describe the solution you'd like**\r\nA clear and concise description of what you want to happen.\r\n\r\n**Describe alternatives you've considered**\r\nA clear and concise description of any alternative solutions or features you've considered.\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n"},{"Id":"24295551949","Type":"IssuesEvent","CreatedAt":"2022-09-29T09:45:29","Actor":"mhoerandner","Repository":"OfficeDev/Open-XML-SDK","Organization":"OfficeDev","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/OfficeDev/Open-XML-SDK/issues/1211","RelatedDescription":"Opened issue \"No support of System.IO.Packaging.Package.Save()/Flush() in .NET CoreFeature request for Open XML SDK\" (#1211) at OfficeDev/Open-XML-SDK","RelatedBody":"Since _OpenXml_ is based on _System.IO.Packaging_ and there is no support for `Flush()`/`Save()` in .NET Core (dotnet 5, ...), I wanted to ask whether OpenXml is planning a better alternative than closing (disposing) the whole `OpenXmlPackage` (e.g. WordprocessingDocument)?\r\n\r\n```cs\r\n\r\n**Is your feature request related to a problem? Please describe.**\r\nA clear and concise description of what the problem is. Ex. I'm always frustrated when [...]\r\nPlease link to an issue where the problem was reported if one exists.\r\n\r\n**Describe the solution you'd like**\r\nA clear and concise description of what you want to happen.\r\n\r\n**Describe alternatives you've considered**\r\nA clear and concise description of any alternative solutions or features you've considered.\r\n\r\n**Additional context**\r\nAdd any other context or screenshots about the feature request here.\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2022-10-05T03:30:27.2895062Z","RunDurationInMilliseconds":680}