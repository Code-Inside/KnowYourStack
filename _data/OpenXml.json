{"Data":{"Sdk":{"Events":[{"Id":"43470210425","Type":"IssuesEvent","CreatedAt":"2024-11-04T08:14:00","Actor":"JerryJian","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1818","RelatedDescription":"Opened issue \"AddAlternativeFormatImportPart produces corrupted docx document on net48, but works fine on net4.8\" (#1818) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\nRun the following code on .net48 and .net8.0, and then extract the generated docx file with 7zip, the .net48 output file has an error:\n\n```\ndata error: word\\_rels\\document.xml.rels\n```\n\nThe code:\n```c#\ninternal class Program\n{\n    static void Main(string[] args)\n    {\n        var m_stream = new MemoryStream();\n        GenerateDocx(m_stream);\n        m_stream.Position = 0;\n\n        var mydoc = WordprocessingDocument.Open(m_stream, true, new OpenSettings \n        {\n            MarkupCompatibilityProcessSettings = new MarkupCompatibilityProcessSettings(\n                MarkupCompatibilityProcessMode.ProcessAllParts,\n                FileFormatVersions.Office2010)\n        });\n        var mainPart = mydoc.MainDocumentPart!;\n\n        var alternativeFormatImportPart = mainPart.AddAlternativeFormatImportPart(AlternativeFormatImportPartType.Html);\n        alternativeFormatImportPart.FeedData(new MemoryStream(new UTF8Encoding(true).GetBytes(\"<html>Hello</html>\")));\n        mydoc.Save();\n\n        using var fs = new FileStream(\"result.docx\", FileMode.Create, FileAccess.ReadWrite);\n        m_stream.Position = 0;\n        m_stream.CopyTo(fs);\n    }\n\n    private static void GenerateDocx(MemoryStream m_stream)\n    {\n        using var wpDocument = WordprocessingDocument.Create(m_stream, WordprocessingDocumentType.Document);\n        MainDocumentPart mainPart = wpDocument.AddMainDocumentPart();\n        mainPart.Document = new Document(new Body(new Paragraph(new Run(new Text(\"Here comes HTML {{ds}:html}\")))));\n        wpDocument.Save();\n    }\n}\n```\n\n**Screenshots**\n![Image](https://github.com/user-attachments/assets/7f5a3d48-ed1a-4126-b3fa-38ca174b94ef)\n\n**To Reproduce**\nThe code in the **Describe the bug** section.\n\nSteps to reproduce the behavior:\n1. Create an console application, and paste the Program code above.\n2. Switch to net48, run the program, the output docx file is in the output directory of the project.\n3. Extract the output docx file with 7zip.\n4. See error like described above.\n\n**Observed behavior**\nThe output file of net48 is corrupted \n\n**Expected behavior**\nThe files produced by net48 are the same as those produced by net8.0\n\n**Desktop (please complete the following information):**\n - OS: Windows 11\n - .NET Target: .NET Framework 4.8 and .NET 8.0\n - DocumentFormat.OpenXml Version: 3.1.1\n\n**Additional context**\nAdd any other context about the problem here.\n"},{"Id":"43469283518","Type":"IssuesEvent","CreatedAt":"2024-11-04T07:37:37","Actor":"ChandrasekarML","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1817","RelatedDescription":"Opened issue \"Bug with Open XML SDK\" (#1817) at dotnet/Open-XML-SDK","RelatedBody":"have issue with Track changes new word and old word in the word document.\nBut Inserted Run newword working properly, but detetion not working prolerly.\n\n\nSource Code i have tried it.\n\n public void WordUpdate3(string filePath)\n {\n     string newWord = \"NewWord\";\n     string wordToDelete = \"POWERUP\";\n\n     using (WordprocessingDocument wordDoc = WordprocessingDocument.Open(filePath, true))\n     {\n         Body body = wordDoc.MainDocumentPart.Document.Body;\n\n         ReplaceWordWithTracking2(body, wordToDelete, newWord);\n\n         wordDoc.MainDocumentPart.Document.Save();\n     }\n }\n\n private void ReplaceWordWithTracking2(Body body, string targetWord, string newWord)\n {\n     Paragraph targetParagraph = body.Elements<Paragraph>()\n                             .FirstOrDefault(p => p.InnerText.Contains(targetWord));\n\n     if (targetParagraph != null)\n     {\n         Run targetRun = targetParagraph.Elements<Run>()\n                                        .FirstOrDefault(r => r.InnerText.Contains(targetWord));\n\n         if (targetRun != null)\n         {\n             // Step 1: Create a DeletedRun for tracking the deletion\n             DeletedRun deletedRun = new DeletedRun();\n\n             // Set author and date attributes on the DeletedRun\n             deletedRun.SetAttribute(new OpenXmlAttribute(\"author\", \"http://schemas.openxmlformats.org/wordprocessingml/2006/main\", \"AuthorName\"));\n             deletedRun.SetAttribute(new OpenXmlAttribute(\"date\", \"http://schemas.openxmlformats.org/wordprocessingml/2006/main\", DateTime.Now.ToString(\"s\")));\n\n             // Add the deleted word with strikethrough formatting and color\n             RunProperties runProperties = new RunProperties();\n             Color color = new Color() { Val = \"FF0000\" }; // Red color for deleted text\n             runProperties.Append(color);\n             runProperties.Append(new Strike()); // Strikethrough for deletion\n\n             Run deletedWordRun = new Run(runProperties, new Text(targetWord));\n             deletedRun.Append(deletedWordRun); // Append the deleted word run to DeletedRun\n\n             // Insert the DeletedRun before the target run\n             targetRun.Parent.InsertBefore(deletedRun, targetRun);\n\n             // Step 2: Remove the original target run\n             targetRun.Remove();\n\n             // Step 3: Create an InsertedRun for tracking the insertion\n             InsertedRun insertedRun = new InsertedRun();\n\n             // Set author and date attributes on the InsertedRun\n             insertedRun.SetAttribute(new OpenXmlAttribute(\"author\", \"http://schemas.openxmlformats.org/wordprocessingml/2006/main\", \"AuthorName\"));\n             insertedRun.SetAttribute(new OpenXmlAttribute(\"date\", \"http://schemas.openxmlformats.org/wordprocessingml/2006/main\", DateTime.Now.ToString(\"s\")));\n\n             // Add the new word with color formatting\n             Run insertedWordRun = new Run(new Text(newWord))\n             {\n                 RunProperties = new RunProperties(new Color { Val = \"00FF00\" }) // Green color for inserted word\n             };\n             insertedRun.Append(insertedWordRun); // Append the inserted word run to InsertedRun\n\n             // Insert the InsertedRun after the DeletedRun\n             deletedRun.Parent.InsertAfter(insertedRun, deletedRun);\n         }\n         else\n         {\n             Console.WriteLine(\"Target Run is null.\");\n         }\n     }\n     else\n     {\n         Console.WriteLine(\"Target Paragraph is null.\");\n     }\n }\n"},{"Id":"43343812083","Type":"IssuesEvent","CreatedAt":"2024-10-30T09:26:55","Actor":"HansiZou","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1816","RelatedDescription":"Opened issue \"How to insert image into cell in xlsx file?\" (#1816) at dotnet/Open-XML-SDK","RelatedBody":"I hope use openxml insert image into one cell(embed) in xlsx file。\nthen use winrar unzip this xlsx。\ndir:\n![Image](https://github.com/user-attachments/assets/af15cf1d-5e53-4751-a940-8dacee103335)\n![Image](https://github.com/user-attachments/assets/4828be9c-892a-4c04-bb07-49b1d78f451e)\n![Image](https://github.com/user-attachments/assets/8846bccd-2b52-4f1f-9b13-6060d8914e9f)\nI want to have relations \ncellimages.xml\ncellimages.xml.rels"},{"Id":"43241323240","Type":"IssuesEvent","CreatedAt":"2024-10-27T09:32:41","Actor":"ThomasBarnekow","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1814","RelatedDescription":"Opened issue \"Flat OPC and cloning features are broken\" (#1814) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\nBased on my analysis, the Flat OPC and cloning features are \"broken\" since v3.0.1:\n- When creating a Flat OPC document, the resulting `WordprocessingDocument` instances no longer have the relationship parts.\n- Cloning a `WordprocessingDocument` created from a Flat OPC document or string throws an `OpenXmlPackageException`.\n\n**To Reproduce**\nTo reproduce, have a look at the [OpenXmlSdtTests](https://github.com/ThomasBarnekow/OpenXmlSdkTests) repo that I created for this purpose. I have created several xUnit-based projects that test the same features for the following versions:\n- v2.19.0, where everything works as expected,\n- v3.0.0, where everything works as expected after having made the changes related to `Package` being obsolete,\n- v3.0.1, where the features are first broken, and,\n- v3.1.1, where the features are still broken.\n\n**Observed behavior**\n1. Since v3.0.1, `WordprocessingDocument` instances created using `WordprocessingDocument.FromFlatOpcString(xml)` no longer have the relationship parts. Up to and including v3.0.0, those parts appeared.\n2. Since v3.0.1, cloning a `WordprocessingDocument` instance created using `WordprocessingDocument.FromFlatOpcString(xml)` can no longer be cloned. Calling the `Clone()` method or its overloads will throw an error.\n\n**Expected behavior**\n1. Flat OPC documents are created correctly (as before).\n2. `WordprocessingDocument` instances can be cloned (as before).\n\n**Desktop (please complete the following information):**\n - OS: any (tested on macOS and Windows 11)\n - Office version: any\n - .NET Target: any (tested using .NET 8 and .NET Framework 4.7.2)\n - DocumentFormat.OpenXml Version: since v3.0.1\n"},{"Id":"43235756636","Type":"IssuesEvent","CreatedAt":"2024-10-26T20:29:50","Actor":"ThomasBarnekow","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"opened","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1813","RelatedDescription":"Opened issue \"DocumentFormat.OpenXml.Linq namespace-related classes have missing XName fields.\" (#1813) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\nThe generated classes in the `DocumentFormat.OpenXml.Linq` namespace (e.g., `W`) are missing certain `XName` fields that were still present in previous versions of the SDK (e.g., 2.19.0). For example, the following fields are missing (among possibly others that I did not see):\n\n- `W.sdtPr`\n- `W.sdtEndPr`\n- `W.smartTag`\n- `W.tag`\n\n**To Reproduce**\nTo reproduce, just try to reference any of the above in your code.\n\n**Observed behavior**\n`XName` fields are suddenly no longer generated. \n\n**Expected behavior**\nAll relevant fields should be generated.\n\n**Desktop (please complete the following information):**\n - OS: any\n - Office version: any\n - .NET Target: any\n - DocumentFormat.OpenXml Version: 3.1.1\n\n**Additional context**\n3.1.1 is the first release after 3.x was first release that I am trying. I previously used 2.19.0 and possibly 2.20.0. Thus, I don't know exactly when the issue first appeared"},{"Id":"43135797182","Type":"IssuesEvent","CreatedAt":"2024-10-23T15:29:19","Actor":"mikeebowen","Repository":"dotnet/Open-XML-SDK","Organization":"dotnet","RawContent":null,"RelatedAction":"closed","RelatedUrl":"https://github.com/dotnet/Open-XML-SDK/issues/1413","RelatedDescription":"Closed issue \"Getting cell values is returning different format - OpenXML\" (#1413) at dotnet/Open-XML-SDK","RelatedBody":"**Describe the bug**\r\nGetting cell value returns many decimal places. \r\n\r\n**Screenshots**\r\nI have this \"4.9\" value in excel\r\n![image](https://user-images.githubusercontent.com/15882382/233115011-f9670d58-d641-427b-aee0-b85eb9f60344.png)\r\n\r\nWhen retrieving the cell value in OpenXML. 4.9 was stored as 4.90000000000000000000004. It should return value as it was inputted.\r\n![image](https://user-images.githubusercontent.com/15882382/233115315-e6777836-f800-487f-b40e-389be4b6cd2f.png)\r\n\r\n\r\n**To Reproduce**\r\n// Please add a self-contained, minimum viable repro of the issue.\r\n// If you require external resources, please provide a gist or GitHub repro\r\n// An Xunit style test is preferred, but a console application would work too.\r\n\r\nSteps to reproduce the behavior:\r\n1. Go to '...'\r\n2. Click on '....'\r\n3. Scroll down to '....'\r\n4. See error\r\n\r\n**Observed behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Desktop (please complete the following information):**\r\n - OS: [e.g. Windows]\r\n - Office version [e.g. 16.0.15427.20178]\r\n - .NET Target: (e.g. .NET Framework, .NET Core, UWP, Xamarin...)\r\n - DocumentFormat.OpenXml Version: (e.g. 2.11.0)\r\n\r\n**Additional context**\r\nAdd any other context about the problem here.\r\n"}],"ResultType":"GitHubEvent"}},"RunOn":"2024-11-06T03:30:21.4996993Z","RunDurationInMilliseconds":603}