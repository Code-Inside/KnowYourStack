{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2700312917","IsPullRequest":false,"CreatedAt":"2024-11-28T00:35:09","Actor":"amir20","Number":"15219","RawContent":null,"Title":"[v4] Files imported with `@import \"…\" theme(…)` must only contain `@theme` blocks","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\ntailwindcss 4.0.0-beta.2\r\n\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nvite 6.0.1\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv23.1.0\r\n\r\n**What browser are you using?**\r\n\r\nNA\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nI am not sure how to create Vue components with Tailwind Play. I have a reproducible example locally with only a few files. \r\n\r\n1. Created a new blank project using vite with Vue. eg `npm create vite@latest`\r\n2. Followed the directions to add Tailwind v4. \r\n3. Update Vue css to have `@import`\r\n\r\n```\r\n<style scoped>\r\n@import \"../style.css\" theme(reference);\r\n\r\n.test {\r\n    @apply mb-4 bg-foo;\r\n}\r\n</style>\r\n```\r\n\r\nstyles.css\r\n\r\n```\r\n@import \"tailwindcss\";\r\n\r\n@theme {\r\n    --color-foo: oklch(0.99 0 0);\r\n}\r\n\r\n@layer {\r\n}\r\n```\r\n\r\n**Describe your issue**\r\n\r\n`build` throws the following exception: \r\n\r\n```\r\nvite v6.0.1 building for production...\r\n✓ 12 modules transformed.\r\nx Build failed in 84ms\r\nerror during build:\r\n[@tailwindcss/vite:generate:build] Files imported with `@import \"…\" theme(…)` must only contain `@theme` blocks.\r\nfile: /Users/amirraminfar/Desktop/my-project/src/components/HelloWorld.vue?vue&type=style&index=0&scoped=0cb914fb&lang.css\r\n    at file:///Users/amirraminfar/Desktop/my-project/node_modules/.pnpm/tailwindcss@4.0.0-beta.2/node_modules/tailwindcss/dist/lib.mjs:24:2929\r\n    at D (file:///Users/amirraminfar/Desktop/my-project/node_modules/.pnpm/tailwindcss@4.0.0-beta.2/node_modules/tailwindcss/dist/lib.mjs:3:3654)\r\n    at D (file:///Users/amirraminfar/Desktop/my-project/node_modules/.pnpm/tailwindcss@4.0.0-beta.2/node_modules/tailwindcss/dist/lib.mjs:3:3812)\r\n    at D (file:///Users/amirraminfar/Desktop/my-project/node_modules/.pnpm/tailwindcss@4.0.0-beta.2/node_modules/tailwindcss/dist/lib.mjs:3:3604)\r\n    at D (file:///Users/amirraminfar/Desktop/my-project/node_modules/.pnpm/tailwindcss@4.0.0-beta.2/node_modules/tailwindcss/dist/lib.mjs:3:3604)\r\n    at D (file:///Users/amirraminfar/Desktop/my-project/node_modules/.pnpm/tailwindcss@4.0.0-beta.2/node_modules/tailwindcss/dist/lib.mjs:3:3604)\r\n    at file:///Users/amirraminfar/Desktop/my-project/node_modules/.pnpm/tailwindcss@4.0.0-beta.2/node_modules/tailwindcss/dist/lib.mjs:24:2887\r\n    at D (file:///Users/amirraminfar/Desktop/my-project/node_modules/.pnpm/tailwindcss@4.0.0-beta.2/node_modules/tailwindcss/dist/lib.mjs:3:3654)\r\n    at D (file:///Users/amirraminfar/Desktop/my-project/node_modules/.pnpm/tailwindcss@4.0.0-beta.2/node_modules/tailwindcss/dist/lib.mjs:3:3604)\r\n    at D (file:///Users/amirraminfar/Desktop/my-project/node_modules/.pnpm/tailwindcss@4.0.0-beta.2/node_modules/tailwindcss/dist/lib.mjs:3:3604)\r\n ELIFECYCLE  Command failed with exit code 1.\r\n```\r\n\r\nNote: This was originally found in my project. So I created a small example using `npm create vite@latest` and it is still happening. \r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15219","RelatedDescription":"Open issue \"[v4] Files imported with `@import \"…\" theme(…)` must only contain `@theme` blocks\" (#15219)"},{"Id":"2699212248","IsPullRequest":true,"CreatedAt":"2024-11-27T17:15:21","Actor":"philipp-spiess","Number":"15217","RawContent":null,"Title":"Prepare v4.0.0-beta.3","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15217","RelatedDescription":"Closed or merged PR \"Prepare v4.0.0-beta.3\" (#15217)"},{"Id":"2691080225","IsPullRequest":true,"CreatedAt":"2024-11-27T16:48:55","Actor":"philipp-spiess","Number":"15173","RawContent":null,"Title":"Vite: Use Vite resolvers for CSS and JS files","State":"closed","Body":"Closes #15159\r\n\r\nThis PR extends the `@tailwindcss/node` packages to be able to overwrite the CSS and JS resolvers. This is necessary as some bundlers, in particular Vite, have a custom module resolution system that can be individually configured. E.g. in Vite it is possible to add custom [resolver configs](https://vite.dev/config/shared-options.html#resolve-conditions) that is expected to be taken into account.\r\n\r\nWith the new `customCssResolver` and `customJsResolver` option, we're able to use the Vite resolvers which take these configs into account.\r\n\r\n## Test Plan\r\n\r\nTested in the playground by configuring  [resolver conditions](https://vite.dev/config/shared-options.html#resolve-conditions) (with Vite 5.4 and Vite 6 beta). An integration test was added for both the JS and CSS resolvers to ensure it keeps working as expected.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15173","RelatedDescription":"Closed or merged PR \"Vite: Use Vite resolvers for CSS and JS files\" (#15173)"},{"Id":"2693422245","IsPullRequest":false,"CreatedAt":"2024-11-27T16:47:28","Actor":"andmoreduro","Number":"15188","RawContent":null,"Title":"Arbitrary calc values with mixed units not working for translate-* and -translate-* in 4.0.0-beta.2","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n`v4.0.0-beta.2`\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\n`vite 5.4.10`\r\n\r\n**What version of Node.js are you using?**\r\n\r\n`v23.2.0`\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nWindows\r\n\r\n**Reproduction URL**\r\n\r\n[https://play.tailwindcss.com/7XtFHjJECp](https://play.tailwindcss.com/7XtFHjJECp)\r\n\r\n**Describe your issue**\r\n\r\nWhen using arbitrary values for translate-* and -translate-*, operations in calc() that involve multiple units (e.g., calc(50%+0.75rem)) are not applied correctly or not at all.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15188","RelatedDescription":"Closed issue \"Arbitrary calc values with mixed units not working for translate-* and -translate-* in 4.0.0-beta.2\" (#15188)"},{"Id":"2699090781","IsPullRequest":true,"CreatedAt":"2024-11-27T16:47:27","Actor":"adamwathan","Number":"15215","RawContent":null,"Title":"Don't register properties with types unless necessary","State":"closed","Body":"This PR updates many of our `@property` rules to use `syntax: \"*\"` instead of a specific type.\r\n\r\nRegistering custom properties with types triggers all sorts of obscure edge-case bugs in different browsers (mostly Safari, sometimes Firefox), but using `\"*\"` always seems to work. So unless we know we actually need to animate a custom property, it's safer to register is as `\"*\"`.\r\n\r\nMany of the places our custom properties are used are already inherently animatable (like the `translate`, `scale`, and `transform`) even when the underlying properties are not typed, so removing types for things like `--tw-scale-x` doesn't actually stop the `scale-*` utilities from being animateable.\r\n\r\nI've also updated the `--tw-gradient-from/via/to-position` properties to use `<length-percentage>` instead of `<length> | <percentage>` because for some reason I don't understand, only `<length-percentage>` works correctly when using `calc(…)` in arbitrary values.\r\n\r\nFixes https://github.com/tailwindlabs/tailwindcss/issues/15188, https://github.com/tailwindlabs/tailwindcss/issues/14277.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15215","RelatedDescription":"Closed or merged PR \"Don't register properties with types unless necessary\" (#15215)"},{"Id":"2694487107","IsPullRequest":false,"CreatedAt":"2024-11-27T16:39:06","Actor":"plemnoooooo","Number":"15196","RawContent":null,"Title":"[v4] Transitions with active pseudo class increases unexpected margin in Safari when combined with a font size class","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nFor example: v4.0.0@beta-2\r\n\r\n**What browser are you using?**\r\n\r\nSafari\r\n\r\n**What operating system are you using?**\r\n\r\niOS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/9WNabyZoZg\r\n\r\n**Describe your issue**\r\n\r\nWhen pressing and holding onto a button that transitions from normal styles to `active:` pseudo-class styles with a font size class (like `text-xl`) in Safari, it creates an unexpected vertical margin increase, and if padding styles are included, it increases padding too.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15196","RelatedDescription":"Closed issue \"[v4] Transitions with active pseudo class increases unexpected margin in Safari when combined with a font size class\" (#15196)"},{"Id":"2699111444","IsPullRequest":true,"CreatedAt":"2024-11-27T16:39:05","Actor":"adamwathan","Number":"15216","RawContent":null,"Title":"Use unitless line-heights for font-size variables","State":"closed","Body":"Safari has an [insane bug](https://github.com/tailwindlabs/tailwindcss/issues/15196) where if you register custom properties for gradient colors using the `\"<color>\"` type, you attempt to transition a gradient on an element, _and_ you set a font-size and line-height on that element that point to CSS variables defined using `rem` units, the element size changes and shifts the layout while the transition is happening:\r\n\r\nhttps://github.com/user-attachments/assets/46eefccf-8a12-4751-8a44-54e48c54cd06\r\n\r\nThis bug goes away if you use anything other than `rem` units for the line-height. So this PR changes all of our variables like `--text-3xl--line-height` to use unitless relative line-height values instead of fixed line-height values to workaround this bug. Not my favorite change but pretty low impact because you likely aren't going to reference those variables for much anyways.\r\n\r\nIf Safari ever fixes this bug (which is still present as of Safari 18), it would be nice to swap these back to what they were.\r\n\r\nFixes #15196.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15216","RelatedDescription":"Closed or merged PR \"Use unitless line-heights for font-size variables\" (#15216)"},{"Id":"2694911434","IsPullRequest":true,"CreatedAt":"2024-11-27T16:34:51","Actor":"philipp-spiess","Number":"15197","RawContent":null,"Title":"Update Vite to 6.0","State":"closed","Body":"This PR updates all our Vite dependencies to the newly released v6. Nothing changed in our released Vite extension so this does not need a user-facing changelog.\r\n\r\n## Test Plan\r\n\r\nThe Vite playground still works. Furthermore we have a pretty extensive Vite integration test suite that now runs on v6.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15197","RelatedDescription":"Closed or merged PR \"Update Vite to 6.0\" (#15197)"},{"Id":"2693803795","IsPullRequest":false,"CreatedAt":"2024-11-27T16:34:28","Actor":"sajoku","Number":"15193","RawContent":null,"Title":"[v4] Upgrade does not handle prefix for group `tw-group` → `tw:group`","State":"closed","Body":"Version: v3.4.14 \r\nBuild tools: Bun\r\nReproduction URL: https://github.com/sajoku/tailwind-4-upgrade-test\r\n\r\nIt looks like the `group` attribute is not being targeted by the upgrade script.\r\nWhen running the `npx @tailwindcss/upgrade@next` command it will update all the correct things except for the `tw-group` definition. \r\n\r\nInstructions on the reproduction repository:\r\n\r\n1. Clone \r\n2. Run `npx @tailwindcss/upgrade@next`\r\n\r\nBefore CSS:\r\n\r\n``` css\r\n@config 'tailwind.config.js';\r\n\r\n@tailwind base;\r\n@tailwind components;\r\n@tailwind utilities;\r\n@tailwind screens;\r\n\r\n\r\n\r\nh1 {\r\n  @apply tw-bg-black tw-bg-red-50;\r\n}\r\n\r\ndiv {\r\n  @apply tw-group;\r\n}\r\n\r\nspan {\r\n  @apply tw-text-base tw-font-semibold tw-text-gray-900 tw-text-left tw-group;\r\n}\r\n```\r\n\r\nAfter CSS:\r\n\r\n``` css\r\n@import 'tailwindcss' prefix(tw);\r\n\r\n@variant dark (&:is(.dark *));\r\n\r\n/*\r\n  The default border color has changed to `currentColor` in Tailwind CSS v4,\r\n  so we've added these compatibility styles to make sure everything still\r\n  looks the same as it did with Tailwind CSS v3.\r\n\r\n  If we ever want to remove these styles, we need to add an explicit border\r\n  color utility to any element that depends on these defaults.\r\n*/\r\n@layer base {\r\n  *,\r\n  ::after,\r\n  ::before,\r\n  ::backdrop,\r\n  ::file-selector-button {\r\n    border-color: var(--color-gray-200, currentColor);\r\n  }\r\n}\r\n\r\nh1 {\r\n  @apply tw:bg-black tw:bg-red-50;\r\n}\r\n\r\ndiv {\r\n  @apply tw-group;\r\n}\r\n\r\nspan {\r\n  @apply tw:text-base tw:font-semibold tw:text-gray-900 tw:text-left tw-group;\r\n}\r\n```\r\n\r\n\r\nAm I correct in assuming that the `tw-group` should be migrated to `tw:group`? ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15193","RelatedDescription":"Closed issue \"[v4] Upgrade does not handle prefix for group `tw-group` → `tw:group`\" (#15193)"},{"Id":"2698137141","IsPullRequest":true,"CreatedAt":"2024-11-27T16:34:27","Actor":"philipp-spiess","Number":"15208","RawContent":null,"Title":"Upgrade: Migrate prefixed `group` and `peer` classes","State":"closed","Body":"Resolves #15193\r\n\r\nThis PR fixes an issue where `group` and `peer` would not have their prefixes migrated as part of the upgrade script. We do this by registering `group` and `peer` as utilities during the codemods. This way, `parseCandidate` will find these classes to be valid Tailwind candidates and the prefix can be migrated just like any other utility. \r\n\r\n## Test Plan\r\n\r\nTried it with the v3 upgrade playground in the repo and it worked fine: \r\n\r\n<img width=\"1257\" alt=\"Screenshot 2024-11-27 at 12 17 25\" src=\"https://github.com/user-attachments/assets/1ee101e1-1d6a-4ce0-b0d4-8d51e5f6b0d2\">\r\n\r\nI've also added tests to our prefix upgrade integration test and the prefix migration unit tests. ","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15208","RelatedDescription":"Closed or merged PR \"Upgrade: Migrate prefixed `group` and `peer` classes\" (#15208)"},{"Id":"2698354264","IsPullRequest":true,"CreatedAt":"2024-11-27T16:06:19","Actor":"philipp-spiess","Number":"15210","RawContent":null,"Title":"Reduce precision of `oklab()` arguments in test snapshots","State":"closed","Body":"After the changes in #15201, our Windows CI started to fail. The problem is that lightningcss now needs to convert `oklch` colors into the `oklab` space to inline some `color-mix()` functions.\r\n\r\nThe problem, though, is that this calculation seems to have rounding differences between macOS, Linux, and Windows. Since we still want to _define the default color space in `oklch`_ and _use lightningcss as a post-processor in our unit tests so we have a better coverage of the output_, this PR attempts to fix the issue by adding a custom vitest serializer. It will find usages of the `oklab()` function with arguments that have lots of decimal places (at least 6 decimal places). What it then does is simply cut off any excess decimal places to truncate the output to 5 places. E.g.:\r\n\r\n```diff\r\n- oklab(62.7955% .224863 .125846 / .75);\r\n+ oklab(62.7955% .22486 .12584 / .75);\r\n```\r\n\r\n## Test Plan\r\n\r\nI updated the CI workflow file to make all three builds run in CI and observed that they are now all green again.\r\n\r\n<img width=\"609\" alt=\"Screenshot 2024-11-27 at 14 54 52\" src=\"https://github.com/user-attachments/assets/73fe6da5-30e3-4fd4-83ea-115b1f1602a6\">\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15210","RelatedDescription":"Closed or merged PR \"Reduce precision of `oklab()` arguments in test snapshots\" (#15210)"},{"Id":"2698554568","IsPullRequest":true,"CreatedAt":"2024-11-27T13:29:15","Actor":"MartijnCuppens","Number":"15212","RawContent":null,"Title":"Remove redundant `line-height` from `body`","State":"open","Body":"It was added in #2729 to override line heights set on the body by modern-normalize. However,  it appears that modern-normalize never included any line-height definitions—only a font-family rule was present.\r\n\r\nRef: https://github.com/sindresorhus/modern-normalize/blob/v1.1.0/modern-normalize.css","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15212","RelatedDescription":"Open PR \"Remove redundant `line-height` from `body`\" (#15212)"},{"Id":"2696235975","IsPullRequest":true,"CreatedAt":"2024-11-27T11:18:31","Actor":"adamwathan","Number":"15201","RawContent":null,"Title":"Use `oklab` instead of `oklch` for `color-mix(…)` and gradients","State":"closed","Body":"Fixes https://github.com/tailwindlabs/tailwindcss/discussions/15184, https://github.com/tailwindlabs/tailwindcss/issues/14955\r\n\r\nThere's a strange bug in Safari < 18 where mixing a color with `transparent` or with a gray tone, the resulting color looks as if it's been interpolated through a red-ish color.\r\n\r\nHere's the same blue to transparent gradient in Safari 17 using OKLAB and OKLCH for comparison:\r\n\r\n<img width=\"747\" alt=\"image\" src=\"https://github.com/user-attachments/assets/1cb09b00-0d84-4284-be34-103726d8af03\">\r\n\r\nIn other browsers, both of these examples look identical.\r\n\r\nThis bug also shows up when using an opacity modifier right now because we use `in oklch` in our `color-mix(…)` calls:\r\n\r\n<img width=\"744\" alt=\"image\" src=\"https://github.com/user-attachments/assets/b029c5f1-0c5c-4119-80ba-dfeabe25927e\">\r\n\r\nThis PR updates all of the affected places in Tailwind to use `in oklab` instead of `in oklch` which then renders everything as expected in all browsers.\r\n\r\nThe big unfortunate change here is changing the default behavior of gradient utilities like `bg-linear-to-r` to use `in oklab` instead of `in oklch`. This means you get muddier gradients by default when creating a gradient between two regular colors (no transparent or gray), like how they looked in v3:\r\n\r\n<img width=\"740\" alt=\"image\" src=\"https://github.com/user-attachments/assets/d02e7596-4c99-4ba3-b929-d2db4911c8e9\">\r\n\r\nThis feels worth it though to avoid people getting bitten by this Safari bug without realizing it, and people can always opt in to using OKLCH with classes like `bg-linear-to-r/oklch`. The nice thing about making this opt-in is that no one will opt-in to this when using transparent or gray because it won't make things look any different/better, and the only places where it does make things look better _do_ work as expected in Safari anyways.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15201","RelatedDescription":"Closed or merged PR \"Use `oklab` instead of `oklch` for `color-mix(…)` and gradients\" (#15201)"},{"Id":"2697903437","IsPullRequest":false,"CreatedAt":"2024-11-27T09:47:07","Actor":"TobyPerplex","Number":"15207","RawContent":null,"Title":"[v4] @tailwindcss/postcss - transpilation uses css :is selector but breaks specificity","State":"open","Body":"**What version of Tailwind CSS are you using?**\r\n\r\n4.0.0-beta.2\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nvite 6.0.0\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv22.8.0\r\n\r\n**What browser are you using?**\r\n\r\nChrome 131.0.6778.86 (Official Build) (arm64)\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Describe your issue**\r\n\r\n```\r\n.rte {\r\n    ul.checklist,\r\n    ol {\r\n        --sz-i-li: calc(var(--s) * 4);\r\n        --gap: calc(var(--s) * 3.5);\r\n\r\n        li {\r\n            padding-inline-start: calc(var(--sz-i-li) + var(--gap));\r\n            position: relative;\r\n\r\n            &::before,\r\n            > .icon {\r\n                width: var(--sz-i-li);\r\n                height: var(--sz-i-li);\r\n                position: absolute;\r\n                inset-block-start: calc(((var(--fs-base) * var(--lh-base)) - var(--sz-i-li)) / 2);\r\n                inset-inline-start: 0;\r\n            }\r\n\r\n            &::before {\r\n                content: '';\r\n            }\r\n        }\r\n\r\n        @media (--lg-up) {\r\n            --sz-i-li: calc(var(--s) * 5);\r\n            --gap: calc(var(--s) * 7);\r\n        }\r\n    }    \r\n\r\n    ol {\r\n        display: flex;\r\n        flex-direction: column;\r\n        gap: calc(var(--s) * 7.5);\r\n\r\n        li {\r\n            padding-inline-start: 4rem;\r\n            counter-increment: step-counter;\r\n            position: relative;\r\n\r\n            &::before {\r\n                display: flex;\r\n                align-items: center;\r\n                justify-content: center;\r\n                width: calc(var(--s) * 11.75);\r\n                height: calc(var(--s) * 11.75);\r\n                border-radius: 50%;\r\n                background: var(--color-cerise);\r\n                content: counter(step-counter);\r\n                font-weight: 500;\r\n                font-size: calc(var(--s) * 6);\r\n                color: var(--color-white);\r\n                position: absolute;\r\n                inset: 0;\r\n            }\r\n\r\n            @media (--lg-up) {\r\n                padding-inline-start: 6rem;\r\n\r\n                &::before {\r\n                    width: calc(var(--s) * 15);\r\n                    height: calc(var(--s) * 15);\r\n                }\r\n            }\r\n        }\r\n    }\r\n```\r\nWith this v3 postcss config:\r\n```\r\nimport advancedVariables from 'postcss-advanced-variables';\r\nimport nesting from 'tailwindcss/nesting';\r\nimport tailwind from 'tailwindcss';\r\nimport autoprefixer from 'autoprefixer';\r\nimport globalData from '@csstools/postcss-global-data';\r\nimport presetEnv from 'postcss-preset-env';\r\n\r\nexport default {\r\n    plugins: [\r\n        advancedVariables,\r\n        nesting,\r\n        tailwind,\r\n        autoprefixer,\r\n        globalData({\r\n            // So you dont have to import them when using scoped css\r\n            files: ['src/styles/base/custom-media.css'],\r\n        }),\r\n        presetEnv({\r\n            stage: 1,\r\n        }),\r\n    ],\r\n};\r\n\r\n```\r\nused to compile to:\r\n<img width=\"322\" alt=\"Screenshot 2024-11-27 at 10 41 25\" src=\"https://github.com/user-attachments/assets/50aae4d8-de06-48f4-85bb-4fa242386941\">\r\n\r\nBut with this v4 postcss config:\r\n```\r\nimport advancedVariables from 'postcss-advanced-variables';\r\nimport tailwind from '@tailwindcss/postcss';\r\nimport globalData from '@csstools/postcss-global-data';\r\nimport presetEnv from 'postcss-preset-env';\r\n\r\nexport default {\r\n    plugins: [\r\n        advancedVariables,\r\n        tailwind,\r\n        globalData({\r\n            // So you dont have to import them when using scoped css\r\n            files: ['src/styles/base/custom-media.css'],\r\n        }),\r\n        presetEnv({\r\n            // v4 docs say you can remove presetEnv but that breaks custom media like @custom-media --motionOK (prefers-reduced-motion: no-preference); so we keep it\r\n            stage: 1,\r\n        }),\r\n    ],\r\n};\r\n```\r\nit compiles to:\r\n<img width=\"324\" alt=\"Screenshot 2024-11-27 at 10 25 15\" src=\"https://github.com/user-attachments/assets/1fd9ad95-a7ab-4d4f-9bd6-d8eea14a11ad\">\r\nWhich breaks specificity. If this is not a bug please tell me how to disable the Lightning CSS `:is` selector feature because there is no documentation on how to disable Lightning CSS features like `IsSelector` in the tailwind/postcss config.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15207","RelatedDescription":"Open issue \"[v4] @tailwindcss/postcss - transpilation uses css :is selector but breaks specificity\" (#15207)"},{"Id":"2696784881","IsPullRequest":false,"CreatedAt":"2024-11-27T03:50:53","Actor":"Simon-He95","Number":"15206","RawContent":null,"Title":"border-style can't use border-t-solid","State":"closed","Body":"If I only want a top border\r\nI just want to write `border-t border-t-red border-t-solid`\r\nBut now I have to write `border-transparent border-t border-t-red border-solid`\r\nI think border-style should support direction","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15206","RelatedDescription":"Closed issue \"border-style can't use border-t-solid\" (#15206)"},{"Id":"2696592666","IsPullRequest":false,"CreatedAt":"2024-11-27T01:36:02","Actor":"lucas-subli","Number":"15204","RawContent":null,"Title":"[v4] @apply inside Svelte 5 `<style>` not working as expected","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\ntailwindcss: 4.0.0-beta.2\r\n@tailwindcss/vite: 4.0.0-beta.2\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nsvelte: 5.2.9\r\nsveltekit: 2.8.5\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv20.17.0\r\n\r\n**What browser are you using?**\r\n\r\nChrome, Firefox\r\n\r\n**What operating system are you using?**\r\n\r\nUbuntu 24.04\r\n\r\n**Reproduction URL**\r\n\r\nPublic github:\r\nhttps://github.com/lucas-subli/svelte-5-tailwind-4-beta\r\n\r\n```\r\npnpm install\r\npnpm dev --open\r\n```\r\n\r\n**Describe your issue**\r\n\r\nThis code:\r\n\r\n```\r\n<h1 class=\"text-red-500\">This is red</h1>\r\n<h1 class=\"red\">This should be red</h1>\r\n\r\n<style>\r\n  .red {\r\n      @apply text-red-500;\r\n  }\r\n</style>\r\n```\r\n\r\nGenerates this result:\r\n![image](https://github.com/user-attachments/assets/216d3ba9-2f07-4e1d-ab01-a15805ee2e24)\r\n\r\nWith this error:\r\n```\r\n[plugin:vite-plugin-svelte] Error while preprocessing /home/lucas/Workspace/stuff/svelte-5-tailwind-4-beta/src/routes/+page.svelte - Cannot apply unknown utility class: text-red-500\r\n```\r\n\r\n`@apply` inside svelte `<style>` does not work properly.\r\n\r\nAfter this PR: https://github.com/tailwindlabs/tailwindcss/pull/14151\r\nThe below will work:\r\n\r\n```\r\n<style global>\r\n  @import 'tailwindcss';\r\n\r\n  .red {\r\n      @apply text-red-500;\r\n  }\r\n</style>\r\n```\r\n\r\nHowever, flagging the style as global and importing 'tailwindcss' in every component I want to use `@apply` is not a reasonable solution.\r\n\r\nThe PR mentioned above also has a comment stating:\r\n\r\n```\r\n// In practice, it is not recommended to use `@tailwind utilities;` inside\r\n// Svelte components. Use an external `.css` file instead.\r\n```\r\n\r\nHowever, this does not seem to work, as seen in the provided reproduction URL, where tailwind is imported by `app.css` and made available through `+layout.svelte` — as previously done with tailwind 3 + SvelteKit.\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15204","RelatedDescription":"Closed issue \"[v4] @apply inside Svelte 5 `<style>` not working as expected\" (#15204)"},{"Id":"2696359899","IsPullRequest":false,"CreatedAt":"2024-11-26T22:53:51","Actor":"velipx","Number":"15202","RawContent":null,"Title":"[v4] @utility checkbox - Unknown word","State":"open","Body":"**What version of Tailwind CSS are you using?**\r\n\r\n^4.0.0-beta.2\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nVite 5.0\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv22.10.0\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n\r\n**Describe your issue**\r\nI have in my main app.css like this:\r\n````\r\n@import 'tailwindcss';\r\n@import './_checkbox-radio-switch.css';\r\n````\r\n\r\nand here is checkbox-radio-switch.css:\r\n````\r\n@utility checkbox {\r\n  @apply inline-flex items-center cursor-pointer relative;\r\n\r\n  & input[type='checkbox'] {\r\n    @apply absolute left-0 opacity-0 -z-1;\r\n  }\r\n\r\n  & input[type='checkbox'] + .check {\r\n    @apply border-s3 border transition-colors duration-200 dark:bg-s5;\r\n  }\r\n\r\n  & input[type='checkbox']:focus + .check {\r\n    @apply ring-3 ring-blue-700;\r\n  }\r\n\r\n  & input[type='checkbox'] + .check {\r\n    @apply block w-5 h-5;\r\n  }\r\n\r\n  & input[type='checkbox'] + .check {\r\n    @apply rounded-sm;\r\n  }\r\n\r\n  & input[type='checkbox']:checked + .check {\r\n    @apply bg-no-repeat bg-center border-4;\r\n  }\r\n\r\n  & input[type='checkbox']:checked + .check {\r\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1 1'%3E%3Cpath style='fill:%23fff' d='M 0.04038059,0.6267767 0.14644661,0.52071068 0.42928932,0.80355339 0.3232233,0.90961941 z M 0.21715729,0.80355339 0.85355339,0.16715729 0.95961941,0.2732233 0.3232233,0.90961941 z'%3E%3C/path%3E%3C/svg%3E\");\r\n  }\r\n\r\n  & input[type='checkbox']:checked + .check {\r\n    @apply bg-blue-600 border-blue-600;\r\n  }\r\n}\r\n\r\n@utility radio {\r\n  @apply inline-flex items-center cursor-pointer relative;\r\n\r\n  & input[type='radio'] {\r\n    @apply absolute left-0 opacity-0 -z-1;\r\n  }\r\n\r\n  & input[type='radio'] + .check {\r\n    @apply border-s3 border transition-colors duration-200 dark:bg-s5;\r\n  }\r\n\r\n  & input[type='radio']:focus + .check {\r\n    @apply ring-3 ring-blue-700;\r\n  }\r\n\r\n  & input[type='radio'] + .check {\r\n    @apply block w-5 h-5;\r\n  }\r\n\r\n  & input[type='radio'] + .check {\r\n    @apply rounded-full;\r\n  }\r\n\r\n  & input[type='radio']:checked + .check {\r\n    @apply bg-no-repeat bg-center border-4;\r\n  }\r\n\r\n  & input[type='radio']:checked + .check {\r\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%23fff' d='M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z' /%3E%3C/svg%3E\");\r\n  }\r\n\r\n  & input[type='radio']:checked + .check {\r\n    @apply bg-blue-600 border-blue-600;\r\n  }\r\n}\r\n\r\n@utility switch {\r\n  @apply inline-flex items-center cursor-pointer relative;\r\n\r\n  & input[type='checkbox'] {\r\n    @apply absolute left-0 opacity-0 -z-1;\r\n  }\r\n\r\n  & input[type='checkbox'] + .check {\r\n    @apply border-s3 border transition-colors duration-200 dark:bg-s5;\r\n  }\r\n\r\n  & input[type='checkbox']:focus + .check {\r\n    @apply ring-3 ring-blue-700;\r\n  }\r\n\r\n  & input[type='checkbox'] + .check {\r\n    @apply flex items-center shrink-0 w-12 h-6 p-0.5 bg-gray-200;\r\n  }\r\n\r\n  & input[type='checkbox'] + .check {\r\n    @apply rounded-full;\r\n  }\r\n\r\n  & input[type='checkbox'] + .check:before {\r\n    @apply rounded-full;\r\n  }\r\n\r\n  & input[type='checkbox']:checked + .check {\r\n    @apply bg-blue-600 border-blue-600;\r\n  }\r\n\r\n  & input[type='checkbox'] + .check:before {\r\n    content: '';\r\n    @apply block w-5 h-5 bg-white border border-gray-700;\r\n  }\r\n\r\n  & input[type='checkbox']:checked + .check:before {\r\n    transform: translate3d(110%, 0, 0);\r\n    @apply border-blue-600;\r\n  }\r\n}\r\n\r\n@utility check {\r\n  .checkbox input[type='checkbox'] + & {\r\n    @apply border-s3 border transition-colors duration-200 dark:bg-s5;\r\n  }\r\n\r\n  .radio input[type='radio'] + & {\r\n    @apply border-s3 border transition-colors duration-200 dark:bg-s5;\r\n  }\r\n\r\n  .switch input[type='checkbox'] + & {\r\n    @apply border-s3 border transition-colors duration-200 dark:bg-s5;\r\n  }\r\n\r\n  .checkbox input[type='checkbox']:focus + & {\r\n    @apply ring-3 ring-blue-700;\r\n  }\r\n\r\n  .radio input[type='radio']:focus + & {\r\n    @apply ring-3 ring-blue-700;\r\n  }\r\n\r\n  .switch input[type='checkbox']:focus + & {\r\n    @apply ring-3 ring-blue-700;\r\n  }\r\n\r\n  .checkbox input[type='checkbox'] + & {\r\n    @apply block w-5 h-5;\r\n  }\r\n\r\n  .radio input[type='radio'] + & {\r\n    @apply block w-5 h-5;\r\n  }\r\n\r\n  .checkbox input[type='checkbox'] + & {\r\n    @apply rounded-sm;\r\n  }\r\n\r\n  .switch input[type='checkbox'] + & {\r\n    @apply flex items-center shrink-0 w-12 h-6 p-0.5 bg-gray-200;\r\n  }\r\n\r\n  .radio input[type='radio'] + & {\r\n    @apply rounded-full;\r\n  }\r\n\r\n  .switch input[type='checkbox'] + & {\r\n    @apply rounded-full;\r\n  }\r\n\r\n  .switch input[type='checkbox'] + &:before {\r\n    @apply rounded-full;\r\n  }\r\n\r\n  .checkbox input[type='checkbox']:checked + & {\r\n    @apply bg-no-repeat bg-center border-4;\r\n  }\r\n\r\n  .radio input[type='radio']:checked + & {\r\n    @apply bg-no-repeat bg-center border-4;\r\n  }\r\n\r\n  .checkbox input[type='checkbox']:checked + & {\r\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1 1'%3E%3Cpath style='fill:%23fff' d='M 0.04038059,0.6267767 0.14644661,0.52071068 0.42928932,0.80355339 0.3232233,0.90961941 z M 0.21715729,0.80355339 0.85355339,0.16715729 0.95961941,0.2732233 0.3232233,0.90961941 z'%3E%3C/path%3E%3C/svg%3E\");\r\n  }\r\n\r\n  .radio input[type='radio']:checked + & {\r\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 24 24'%3E%3Cpath fill='%23fff' d='M12,2A10,10 0 0,0 2,12A10,10 0 0,0 12,22A10,10 0 0,0 22,12A10,10 0 0,0 12,2Z' /%3E%3C/svg%3E\");\r\n  }\r\n\r\n  .switch input[type='checkbox']:checked + & {\r\n    @apply bg-blue-600 border-blue-600;\r\n  }\r\n\r\n  .checkbox input[type='checkbox']:checked + & {\r\n    @apply bg-blue-600 border-blue-600;\r\n  }\r\n\r\n  .radio input[type='radio']:checked + & {\r\n    @apply bg-blue-600 border-blue-600;\r\n  }\r\n\r\n  .switch input[type='checkbox'] + &:before {\r\n    content: '';\r\n    @apply block w-5 h-5 bg-white border border-gray-700;\r\n  }\r\n\r\n  .switch input[type='checkbox']:checked + &:before {\r\n    transform: translate3d(110%, 0, 0);\r\n    @apply border-blue-600;\r\n  }\r\n}\r\n````\r\n\r\nI'm getting this error:\r\n````\r\n[plugin:vite:css] [postcss] /Users/filip/code/velipx/resources/css/app.css:2356:14: Unknown word\r\n\r\n/Users/filip/code/velipx/resources/css/app.css:2356:13\r\n\r\n    at Input.error (/Users/filip/code/velipx/node_modules/postcss/lib/input.js:106:16)\r\n    at Parser.unknownWord (/Users/filip/code/velipx/node_modules/postcss/lib/parser.js:593:22)\r\n    at Parser.other (/Users/filip/code/velipx/node_modules/postcss/lib/parser.js:435:12)\r\n    at Parser.parse (/Users/filip/code/velipx/node_modules/postcss/lib/parser.js:470:16)\r\n    at parse (/Users/filip/code/velipx/node_modules/postcss/lib/parse.js:11:12)\r\n    at new LazyResult (/Users/filip/code/velipx/node_modules/postcss/lib/lazy-result.js:133:16)\r\n    at Processor.process (/Users/filip/code/velipx/node_modules/postcss/lib/processor.js:53:14)\r\n    at compileCSS (file:///Users/filip/code/velipx/node_modules/vite/dist/node/chunks/dep-CB_7IfJ-.js:36897:59)\r\n    at async TransformPluginContext.transform (file:///Users/filip/code/velipx/node_modules/vite/dist/node/chunks/dep-CB_7IfJ-.js:36170:11)\r\n    at async PluginContainer.transform (file:///Users/filip/code/velipx/node_modules/vite/dist/node/chunks/dep-CB_7IfJ-.js:49096:18\r\n    ````","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15202","RelatedDescription":"Open issue \"[v4] @utility checkbox - Unknown word\" (#15202)"},{"Id":"2695497738","IsPullRequest":true,"CreatedAt":"2024-11-26T17:31:12","Actor":"depfu[bot]","Number":"15200","RawContent":null,"Title":"🚨 [security] Update all of nextjs 14.1.0 → 15.0.3 (major)","State":"closed","Body":"\n\n<hr>\n\n🚨 <b>Your current dependencies have known security vulnerabilities</b> 🚨\n\nThis dependency update fixes known security vulnerabilities. Please see the details below and assess their impact carefully. We recommend to merge and deploy this as soon as possible!\n<hr>\n\n\n\nHere is everything you need to know about this upgrade. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ eslint-config-next (14.2.16 → 15.0.3)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n#### ✳️ next (14.1.0 → 15.0.3) · [Repo](https://github.com/vercel/next.js)\n\n\n<details>\n\n<summary>Security Advisories 🚨</summary>\n<h4><a href=\"https://bounce.depfu.com/github.com/vercel/next.js/security/advisories/GHSA-g77x-44xx-532m\">🚨 Denial of Service condition in Next.js image optimization</a></h4>\n<blockquote><h3 dir=\"auto\">Impact</h3>\n<p dir=\"auto\">The image optimization feature of Next.js contained a vulnerability which allowed for a potential Denial of Service (DoS) condition which could lead to excessive CPU consumption.</p>\n<p dir=\"auto\"><strong>Not affected:</strong></p>\n<ul dir=\"auto\">\n<li>The <code class=\"notranslate\">next.config.js</code> file is configured with <code class=\"notranslate\">images.unoptimized</code> set to <code class=\"notranslate\">true</code> or <code class=\"notranslate\">images.loader</code> set to a non-default value.</li>\n<li>The Next.js application is hosted on Vercel.</li>\n</ul>\n<h3 dir=\"auto\">Patches</h3>\n<p dir=\"auto\">This issue was fully patched in Next.js <code class=\"notranslate\">14.2.7</code>. We recommend that users upgrade to at least this version.</p>\n<h3 dir=\"auto\">Workarounds</h3>\n<p dir=\"auto\">Ensure that the <code class=\"notranslate\">next.config.js</code> file has either <code class=\"notranslate\">images.unoptimized</code>, <code class=\"notranslate\">images.loader</code> or <code class=\"notranslate\">images.loaderFile</code> assigned.</p>\n<h4 dir=\"auto\">Credits</h4>\n<p dir=\"auto\">Brandon Dahler (brandondahler), AWS<br>\nDimitrios Vlastaras</p></blockquote>\n<h4><a href=\"https://bounce.depfu.com/github.com/vercel/next.js/security/advisories/GHSA-gp8f-8m3g-qvj9\">🚨 Next.js Cache Poisoning</a></h4>\n<blockquote><h3 dir=\"auto\">Impact</h3>\n<p dir=\"auto\">By sending a crafted HTTP request, it is possible to poison the cache of a non-dynamic server-side rendered route in the pages router (this does not affect the app router). When this crafted request is sent it could coerce Next.js to cache a route that is meant to not be cached and send a <code class=\"notranslate\">Cache-Control: s-maxage=1, stale-while-revalidate</code> header which some upstream CDNs may cache as well.</p>\n<p dir=\"auto\">To be potentially affected all of the following must apply:</p>\n<ul dir=\"auto\">\n<li>Next.js between 13.5.1 and 14.2.9</li>\n<li>Using pages router</li>\n<li>Using non-dynamic server-side rendered routes e.g. <code class=\"notranslate\">pages/dashboard.tsx</code> not <code class=\"notranslate\">pages/blog/[slug].tsx</code>\n</li>\n</ul>\n<p dir=\"auto\">The below configurations are unaffected:</p>\n<ul dir=\"auto\">\n<li>Deployments using only app router</li>\n<li>Deployments on <a href=\"https://vercel.com/\">Vercel</a> are not affected</li>\n</ul>\n<h3 dir=\"auto\">Patches</h3>\n<p dir=\"auto\">This vulnerability was resolved in Next.js v13.5.7, v14.2.10, and later. We recommend upgrading regardless of whether you can reproduce the issue or not.</p>\n<h3 dir=\"auto\">Workarounds</h3>\n<p dir=\"auto\">There are no official or recommended workarounds for this issue, we recommend that users patch to a safe version.</p>\n<h4 dir=\"auto\">Credits</h4>\n<ul dir=\"auto\">\n<li>Allam Rachid (zhero_)</li>\n<li>Henry Chen</li>\n</ul></blockquote>\n<h4><a href=\"https://bounce.depfu.com/github.com/vercel/next.js/security/advisories/GHSA-fr5h-rqp8-mj6g\">🚨 Next.js Server-Side Request Forgery in Server Actions</a></h4>\n<blockquote><h3 dir=\"auto\">Impact</h3>\n<p dir=\"auto\">A Server-Side Request Forgery (SSRF) vulnerability was identified in Next.js Server Actions by security researchers at Assetnote. If the <code class=\"notranslate\">Host</code> header is modified, and the below conditions are also met, an attacker may be able to make requests that appear to be originating from the Next.js application server itself.</p>\n<h4 dir=\"auto\">Prerequisites</h4>\n<ul dir=\"auto\">\n<li>Next.js (<code class=\"notranslate\">&lt;14.1.1</code>) is running in a self-hosted* manner.</li>\n<li>The Next.js application makes use of Server Actions.</li>\n<li>The Server Action performs a redirect to a relative path which starts with a <code class=\"notranslate\">/</code>.</li>\n</ul>\n<p dir=\"auto\">* Many hosting providers (including Vercel) route requests based on the Host header, so we do not believe that this vulnerability affects any Next.js applications where routing is done in this manner.</p>\n<h3 dir=\"auto\">Patches</h3>\n<p dir=\"auto\">This vulnerability was patched in <a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/62561\">#62561</a> and fixed in Next.js <code class=\"notranslate\">14.1.1</code>.</p>\n<h3 dir=\"auto\">Workarounds</h3>\n<p dir=\"auto\">There are no official workarounds for this vulnerability. We recommend upgrading to Next.js <code class=\"notranslate\">14.1.1</code>.</p>\n<h3 dir=\"auto\">Credit</h3>\n<p dir=\"auto\">Vercel and the Next.js team thank Assetnote for responsibly disclosing this issue to us, and for working with us to verify the fix. Thanks to:</p>\n<p dir=\"auto\">Adam Kues - Assetnote<br>\nShubham Shah - Assetnote</p></blockquote>\n</details>\n\n<details>\n<summary>Release Notes</summary>\n<p><em>Too many releases to show here. View the <a href=\"https://github.com/vercel/next.js/releases\">full release notes</a>.</em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/vercel/next.js/compare/2e28c965279de90ce4bfca673196c27dd6117027...7dc7be201aa95238e559e06cbb4da87cb01dcb6b\">See the full diff on Github</a>. The new version differs by more commits than we can show here.</p>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15200","RelatedDescription":"Closed or merged PR \"🚨 [security] Update all of nextjs 14.1.0 → 15.0.3 (major)\" (#15200)"},{"Id":"2692330165","IsPullRequest":true,"CreatedAt":"2024-11-26T14:45:16","Actor":"adamwathan","Number":"15180","RawContent":null,"Title":"Ensure `--spacing-*` variables take precedence over `--container-*` variables","State":"closed","Body":"Fixes #15146.\r\n\r\nThis PR updates the `w-*`, `max-w-*`, `min-w-*`, and `basis-*` utilities to make sure that `--spacing-*` values are preferred over `--container-*` values when there is a conflict.\r\n\r\n\r\nGiven this theme configuration:\r\n\r\n```css\r\n@theme {\r\n --spacing-sm: 8px;\r\n --container-sm: 256px;\r\n}\r\n```\r\n\r\n…utilities like `max-w-sm` will use `8px` instead of `256px` after this change.\r\n\r\nUsers can still be explicit about the value they want to use if they've introduced a naming collision like this by using our variable shorthand like `max-w-(--container-sm)`.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15180","RelatedDescription":"Closed or merged PR \"Ensure `--spacing-*` variables take precedence over `--container-*` variables\" (#15180)"},{"Id":"2691917104","IsPullRequest":true,"CreatedAt":"2024-11-26T13:05:53","Actor":"depfu[bot]","Number":"15178","RawContent":null,"Title":"Update @playwright/test 1.48.2 → 1.49.0 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​playwright/test (1.48.2 → 1.49.0) · [Repo](https://github.com/Microsoft/playwright)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/microsoft/playwright/releases/tag/v1.49.0\">1.49.0</a></h4>\n\n<blockquote><h2 dir=\"auto\">Aria snapshots</h2>\n<p dir=\"auto\">New assertion <a href=\"https://playwright.dev/docs/api/class-locatorassertions#locator-assertions-to-match-aria-snapshot\">expect(locator).toMatchAriaSnapshot()</a> verifies page structure by comparing to an expected accessibility tree, represented as YAML.</p>\n<div class=\"highlight highlight-source-js\" dir=\"auto\"><pre class=\"notranslate\"><span class=\"pl-k\">await</span> <span class=\"pl-s1\">page</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">goto</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'https://playwright.dev'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-k\">await</span> <span class=\"pl-en\">expect</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">page</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">locator</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'body'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toMatchAriaSnapshot</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">`</span>\n<span class=\"pl-s\">  - banner:</span>\n<span class=\"pl-s\">    - heading /Playwright enables reliable/ [level=1]</span>\n<span class=\"pl-s\">    - link \"Get started\"</span>\n<span class=\"pl-s\">    - link \"Star microsoft/playwright on GitHub\"</span>\n<span class=\"pl-s\">  - main:</span>\n<span class=\"pl-s\">    - img \"Browsers (Chromium, Firefox, WebKit)\"</span>\n<span class=\"pl-s\">    - heading \"Any browser • Any platform • One API\"</span>\n<span class=\"pl-s\">`</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">You can generate this assertion with <a href=\"https://playwright.dev/docs/codegen\">Test Generator</a> and update the expected snapshot with <code class=\"notranslate\">--update-snapshots</code> command line flag.</p>\n<p dir=\"auto\">Learn more in the <a href=\"https://playwright.dev/docs/aria-snapshots\">aria snapshots guide</a>.</p>\n<h2 dir=\"auto\">Test runner</h2>\n<ul dir=\"auto\">\n<li>New option <a href=\"https://playwright.dev/docs/api/class-testconfig#test-config-tsconfig\">testConfig.tsconfig</a> allows to specify a single <code class=\"notranslate\">tsconfig</code> to be used for all tests.</li>\n<li>New method <a href=\"https://playwright.dev/docs/api/class-test#test-fail-only\">test.fail.only()</a> to focus on a failing test.</li>\n<li>Options <a href=\"https://playwright.dev/docs/api/class-testconfig#test-config-global-setup\">testConfig.globalSetup</a> and <a href=\"https://playwright.dev/docs/api/class-testconfig#test-config-global-teardown\">testConfig.globalTeardown</a> now support multiple setups/teardowns.</li>\n<li>New value <code class=\"notranslate\">'on-first-failure'</code> for <a href=\"https://playwright.dev/docs/api/class-testoptions#test-options-screenshot\">testOptions.screenshot</a>.</li>\n<li>Added \"previous\" and \"next\" buttons to the HTML report to quickly switch between test cases.</li>\n<li>New properties <a href=\"https://playwright.dev/docs/api/class-testinfoerror#test-info-error-cause\">testInfoError.cause</a> and <a href=\"https://playwright.dev/docs/api/class-testerror#test-error-cause\">testError.cause</a> mirroring <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/cause\"><code class=\"notranslate\">Error.cause</code></a>.</li>\n</ul>\n<h2 dir=\"auto\">Breaking: channels <code class=\"notranslate\">chrome</code>, <code class=\"notranslate\">msedge</code> and similar switch to new headless</h2>\n<p dir=\"auto\">This change affects you if you're using one of the following channels in your <code class=\"notranslate\">playwright.config.ts</code>:</p>\n<ul dir=\"auto\">\n<li>\n<code class=\"notranslate\">chrome</code>, <code class=\"notranslate\">chrome-dev</code>, <code class=\"notranslate\">chrome-beta</code>, or <code class=\"notranslate\">chrome-canary</code>\n</li>\n<li>\n<code class=\"notranslate\">msedge</code>, <code class=\"notranslate\">msedge-dev</code>, <code class=\"notranslate\">msedge-beta</code>, or <code class=\"notranslate\">msedge-canary</code>\n</li>\n</ul>\n<h3 dir=\"auto\">What do I need to do?</h3>\n<p dir=\"auto\">After updating to Playwright v1.49, run your test suite. If it still passes, you're good to go. If not, you will probably need to update your snapshots, and adapt some of your test code around PDF viewers and extensions. See <a href=\"https://bounce.depfu.com/github.com/microsoft/playwright/issues/33566\">issue #33566</a> for more details.</p>\n<h2 dir=\"auto\">Other breaking changes</h2>\n<ul dir=\"auto\">\n<li>There will be no more updates for WebKit on Ubuntu 20.04 and Debian 11. We recommend updating your OS to a later version.</li>\n<li>Package <code class=\"notranslate\">@playwright/experimental-ct-vue2</code> will no longer be updated.</li>\n<li>Package <code class=\"notranslate\">@playwright/experimental-ct-solid</code> will no longer be updated.</li>\n</ul>\n<h2 dir=\"auto\">Try new Chromium headless</h2>\n<p dir=\"auto\">You can opt into the new headless mode by using <code class=\"notranslate\">'chromium'</code> channel. As <a href=\"https://developer.chrome.com/blog/chrome-headless-shell\">official Chrome documentation puts it</a>:</p>\n<blockquote>\n<p dir=\"auto\">New Headless on the other hand is the real Chrome browser, and is thus more authentic, reliable, and offers more features. This makes it more suitable for high-accuracy end-to-end web app testing or browser extension testing.</p>\n</blockquote>\n<p dir=\"auto\">See <a href=\"https://bounce.depfu.com/github.com/microsoft/playwright/issues/33566\">issue #33566</a> for the list of possible breakages you could encounter and more details on Chromium headless. Please file an issue if you see any problems after opting in.</p>\n<div class=\"highlight highlight-source-js\" dir=\"auto\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s1\">defineConfig</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">devices</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'@playwright/test'</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">default</span> <span class=\"pl-en\">defineConfig</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span>\n  <span class=\"pl-c1\">projects</span>: <span class=\"pl-kos\">[</span>\n    <span class=\"pl-kos\">{</span>\n      <span class=\"pl-c1\">name</span>: <span class=\"pl-s\">'chromium'</span><span class=\"pl-kos\">,</span>\n      <span class=\"pl-c1\">use</span>: <span class=\"pl-kos\">{</span> ...<span class=\"pl-s1\">devices</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">'Desktop Chrome'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">channel</span>: <span class=\"pl-s\">'chromium'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n    <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h2 dir=\"auto\">Miscellaneous</h2>\n<ul dir=\"auto\">\n<li>\n<code class=\"notranslate\">&lt;canvas&gt;</code> elements inside a snapshot now draw a preview.</li>\n<li>New method <a href=\"https://playwright.dev/docs/api/class-tracing#tracing-group\">tracing.group()</a> to visually group actions in the trace.</li>\n<li>Playwright docker images switched from Node.js v20 to Node.js v22 LTS.</li>\n</ul>\n<h2 dir=\"auto\">Browser Versions</h2>\n<ul dir=\"auto\">\n<li>Chromium 131.0.6778.33</li>\n<li>Mozilla Firefox 132.0</li>\n<li>WebKit 18.2</li>\n</ul>\n<p dir=\"auto\">This version was also tested against the following stable channels:</p>\n<ul dir=\"auto\">\n<li>Google Chrome 130</li>\n<li>Microsoft Edge 130</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/@playwright%2Ftest/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/Microsoft/playwright/compare/dc80964a3f84dc120b5fed8837ff492a38ddb26e...a70a96ab2565918360cd0f0208b5d12cae318793\">See the full diff on Github</a>. The new version differs by more commits than we can show here.</p>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15178","RelatedDescription":"Closed or merged PR \"Update @playwright/test 1.48.2 → 1.49.0 (minor)\" (#15178)"},{"Id":"2693930808","IsPullRequest":false,"CreatedAt":"2024-11-26T10:59:25","Actor":"Livog","Number":"15194","RawContent":null,"Title":"peer-checked:group-[]: Selector Behavior Changed in Tailwind v4?","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv4.0.0-beta.2\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nTailwind Play\r\n\r\n**What version of Node.js are you using?**\r\n\r\nN/A (Tailwind Play)\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/L2HaZ4fE7s\r\n\r\nYou can switch the version to v4 in the playground to see that the same selectors no longer works.\r\n\r\nClick on \"Icon\" text to open menus.\r\n\r\n**Describe your issue**\r\n\r\nIn Tailwind v3, `peer-checked:group-[.toggle]:rotate-180` works as expected, allowing specific target of chidlren when the parent is same level as peer. However, in v4.\r\n\r\nIt seems like this selector no longer works in v4. I’m wondering if this is an intentional change requiring the use of the new `in-` selector, or if it’s a bug? There doesn’t seem to be any clear documentation about this change. If it’s intended, it would be great to have clarification on the correct way to achieve this behavior in v4.\r\n\r\nThank you!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15194","RelatedDescription":"Closed issue \"peer-checked:group-[]: Selector Behavior Changed in Tailwind v4?\" (#15194)"},{"Id":"2693633444","IsPullRequest":false,"CreatedAt":"2024-11-26T09:06:18","Actor":"SINOPW","Number":"15190","RawContent":null,"Title":"potentially hacked website of Adam Wathan (a blackmail e-mail from adam@adamwathan.me)","State":"closed","Body":"### Discussed in https://github.com/tailwindlabs/tailwindcss/discussions/15189\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **SINOPW** November 26, 2024</sup>\r\n**I found a blackmail e-mail sent by adam@adamwathan.me to my business mailbox.**\r\n![1](https://github.com/user-attachments/assets/ecbefd19-86fc-45f8-be7c-a8cf1890e9d6)\r\n\r\n**When I copied \"adamwathan.me\" and entered into address bar, the following website which suggests the website belongs to Creator of Tailwind CSS showed up.**\r\n![2](https://github.com/user-attachments/assets/5b9584ec-154a-48c5-9467-651fa4a76749)\r\n</div>","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15190","RelatedDescription":"Closed issue \"potentially hacked website of Adam Wathan (a blackmail e-mail from adam@adamwathan.me)\" (#15190)"},{"Id":"2693787366","IsPullRequest":false,"CreatedAt":"2024-11-26T08:54:54","Actor":"vladmoroz","Number":"15192","RawContent":null,"Title":"`border-collapse: collapse` is problematic in Safari","State":"open","Body":"Preflight styles set `border-collapse: collapse`, which bugs how semi-transparent borders are rendered in Safari.\r\n\r\nGiven this CSS:\r\n```css\r\ntable {\r\n  border-collapse: collapse;\r\n}\r\n\r\nth, td {\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.25);\r\n}\r\n```\r\n\r\nChrome and Firefox render the border once:\r\n\r\n<img src=\"https://github.com/user-attachments/assets/31dc069e-b349-4463-85c0-e08187c78c4e\" width=\"433\" />\r\n\r\nSafari renders the border twice, so it appears stronger:\r\n\r\n<img src=\"https://github.com/user-attachments/assets/dd79834c-52be-441f-8c00-7f343bc5c845\" width=\"433\" />\r\n\r\nMore of a Safari than a Tailwind issue per se, but the blast radius for using a potentially bugged property is quite large. In my projects I'm resetting `border-collapse: unset` to avoid this.\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3 / v4\r\n\r\n**What browser are you using?**\r\n\r\nSafari\r\n\r\n**Reproduction URL**\r\n\r\nhttps://jsfiddle.net/e0vgLphy/9/\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15192","RelatedDescription":"Open issue \"`border-collapse: collapse` is problematic in Safari\" (#15192)"},{"Id":"2692257931","IsPullRequest":true,"CreatedAt":"2024-11-26T02:20:54","Actor":"adamwathan","Number":"15179","RawContent":null,"Title":"Declare transform properties with \"*\" syntax instead of \"<transform-function>\"","State":"closed","Body":"Fixes #15144.\r\n\r\nWeird bug in Safari that breaks 3D transforms when using registered custom properties registered with the \"<transform-function>\" type:\r\n\r\nhttps://bugs.webkit.org/show_bug.cgi?id=283487\r\n\r\nDeclaring them as just \"*\" fixes it with no apparent downside since transitioning these 3D transforms still works, and usually transitions/animations are the reason you'd type these properties.\r\n\r\nEvidence of rotations looking the same in all browsers here:\r\n\r\n![image](https://github.com/user-attachments/assets/bcaa6145-e047-4e26-8384-c5599b647cf9)\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15179","RelatedDescription":"Closed or merged PR \"Declare transform properties with \"*\" syntax instead of \"<transform-function>\"\" (#15179)"},{"Id":"2692733458","IsPullRequest":false,"CreatedAt":"2024-11-26T01:11:48","Actor":"vnphanquang","Number":"15185","RawContent":null,"Title":"[v4] Nested unknown at-rule (for PostCSS plugins) is ejected from rule during build","State":"open","Body":"## Version\r\n\r\n`tailwind@4.0.0-beta.1` and `@tailwindcss/vite@4.0.0-beta.1`\r\n\r\n## Environment\r\n\r\nOutput of `npx envinfo --system --binaries --browsers --npmPackages \"{vite,tailwindcss,@tailwindcss/*,postcss-mixins}\"`:\r\n\r\n```\r\n  System:\r\n    OS: Linux 6.6 Arch Linux\r\n    CPU: (4) x64 Intel(R) Core(TM) i5-4590 CPU @ 3.30GHz\r\n    Memory: 8.86 GB / 15.57 GB\r\n    Container: Yes\r\n    Shell: 3.7.1 - /usr/bin/fish\r\n  Binaries:\r\n    Node: 22.11.0 - ~/.volta/tools/image/node/22.11.0/bin/node\r\n    Yarn: 4.5.1 - ~/.volta/tools/image/yarn/4.5.1/bin/yarn\r\n    npm: 10.9.0 - ~/.volta/tools/image/node/22.11.0/bin/npm\r\n    pnpm: 9.12.3 - ~/.volta/bin/pnpm\r\n  Browsers:\r\n    Chromium: 131.0.6778.85\r\n  npmPackages:\r\n    @tailwindcss/vite: 4.0.0-beta.1 => 4.0.0-beta.1\r\n    postcss-mixins: ^11.0.3 => 11.0.3\r\n    tailwindcss: 4.0.0-beta.1 => 4.0.0-beta.1\r\n    vite: ^5.4.10 => 5.4.11\r\n```\r\n\r\n## Reproduction\r\n\r\nhttps://github.com/vnphanquang/tailwind-4-at-rule-build-reproduction. Please see README for steps and expected output.\r\n\r\nOr better, use this suggested test case:\r\n\r\n<details>\r\n  <summary>Expand test case</summary>\r\n\r\n```javascript\r\n// @file: integrations/vite/postcss-plugins.test.ts\r\n\r\nimport { expect } from 'vitest'\r\nimport { css, html, json, test, ts, retryAssertion, fetchStyles } from '../utils'\r\n\r\nconst config: Parameters<typeof test>[1] = {\r\n  fs: {\r\n    'package.json': json`\r\n      {\r\n        \"type\": \"module\",\r\n        \"dependencies\": {\r\n          \"@tailwindcss/vite\": \"workspace:^\",\r\n          \"postcss-mixins\": \"^11.0.3\",\r\n          \"tailwindcss\": \"workspace:^\"\r\n        },\r\n        \"devDependencies\": {\r\n          \"vite\": \"^5.3.5\"\r\n        }\r\n      }\r\n    `,\r\n    'vite.config.ts': ts`\r\n      import tailwindcss from '@tailwindcss/vite'\r\n      import postcssMixins from 'postcss-mixins'\r\n      import { defineConfig } from 'vite'\r\n\r\n      export default defineConfig({\r\n        css: {\r\n          transformer: 'postcss',\r\n          postcss: {\r\n            plugins: [postcssMixins()],\r\n          },\r\n        },\r\n        plugins: [tailwindcss()],\r\n      })\r\n    `,\r\n    'index.html': html`\r\n      <head>\r\n        <link rel=\"stylesheet\" href=\"/styles.css\" />\r\n      </head>\r\n      <body>\r\n        <div class=\"test\"></div>\r\n      </body>\r\n      `,\r\n    'styles.css': css`\r\n      @import 'tailwindcss/utilities';\r\n\r\n      @define-mixin box {\r\n        background-color: green;\r\n      }\r\n\r\n      .box {\r\n        width: 8rem;\r\n        height: 8rem;\r\n        background-color: red;\r\n\r\n        @mixin box;\r\n      }\r\n    `,\r\n  },\r\n}\r\n\r\n// currently passing\r\ntest(\r\n  `dev mode`,\r\n  config,\r\n  async ({ spawn, getFreePort }) => {\r\n    let port = await getFreePort()\r\n    await spawn(`pnpm vite dev --port ${port}`)\r\n\r\n    await retryAssertion(async () => {\r\n      let styles = await fetchStyles(port, '/index.html')\r\n\r\n      expect(styles).not.contain('@define-mixin box')\r\n      expect(styles).not.contain('@mixin box')\r\n      expect(styles).contain(css`\r\n        .box {\r\n          width: 8rem;\r\n          height: 8rem;\r\n          background-color: red;\r\n          background-color: green;\r\n        }\r\n      `)\r\n    })\r\n  },\r\n  {\r\n    debug: true,\r\n  },\r\n)\r\n\r\n// currently failing\r\ntest(\r\n  `production build`,\r\n  config,\r\n  async ({ fs, exec }) => {\r\n    await exec('pnpm vite build')\r\n\r\n    let files = await fs.glob('dist/**/*.css')\r\n    expect(files).toHaveLength(1)\r\n\r\n    const file = files[0][0]\r\n    await fs.expectFileNotToContain(file, ['@define-mixin box', '@mixin box'])\r\n    await fs.expectFileToContain(\r\n      file,\r\n      '.box{background-color:red;width:8rem;height:8rem;background-color: green}',\r\n    )\r\n  },\r\n  {\r\n    debug: true,\r\n  },\r\n)\r\n```\r\n\r\n</details>\r\n\r\n## Description\r\n\r\nOriginally reported in https://github.com/tailwindlabs/tailwindcss/issues/14973#issuecomment-2480498783 but after digging I've narrowed it down to this.\r\n\r\nThere are a few things I want to say about this issue so please bear with me. Given this CSS:\r\n\r\n```css\r\n@import 'tailwindcss/utilities';\r\n\r\n@define-mixin test {\r\n  background-color: green;\r\n}\r\n\r\n.test {\r\n  width: 8rem;\r\n  height: 8rem;\r\n  background-color: red;\r\n\r\n  @mixin test;\r\n}\r\n```\r\n\r\nAssuming [postcss-mixins](https://www.npmjs.com/package/postcss-mixins) is registered appropriately in config. Everything is fine in dev mode. But for production build, this is the output:\r\n\r\n```css\r\n/*! tailwindcss v4.0.0-beta.1 | MIT License | https://tailwindcss.com */\r\n.test {\r\n  background-color:red;\r\n  width:8rem;\r\n  height:8rem\r\n}\r\nbackground-color: green; {}\r\n```\r\n\r\nAfter tracing through Tailwind codebase, I believe it is likely because of this code...\r\n\r\nhttps://github.com/tailwindlabs/tailwindcss/blob/98359bea942d50d321b84ccab16ed288477a2a94/packages/%40tailwindcss-vite/src/index.ts#L270-L294\r\n\r\n...and the fact that LightningCSS is run against the source code before postcss is. The `renderStart` hook above is only applied for build phase, hence the misaligned behavior compared to dev mode.\r\n\r\nAs of this writing LightningCSS will extract out any unknown at rule nested inside a rule. [Try the code above in LightningCSS playground](https://lightningcss.dev/playground/index.html#%7B%22minify%22%3Afalse%2C%22customMedia%22%3Afalse%2C%22cssModules%22%3Afalse%2C%22analyzeDependencies%22%3Afalse%2C%22targets%22%3A%7B%22chrome%22%3A6225920%7D%2C%22include%22%3A1%2C%22exclude%22%3A0%2C%22source%22%3A%22%40define-mixin%20vite%20%7B%5Cn%20%20background-color%3A%20green%3B%5Cn%7D%5Cn%5Cn.vite%20%7B%5Cn%20%20width%3A%208rem%3B%5Cn%20%20height%3A%208rem%3B%5Cn%20%20background-color%3A%20red%3B%5Cn%5Cn%20%20%40mixin%20vite%3B%5Cn%7D%5Cn%22%2C%22visitorEnabled%22%3Afalse%2C%22visitor%22%3A%22%7B%5Cn%20%20Color(color)%20%7B%5Cn%20%20%20%20if%20(color.type%20%3D%3D%3D%20'rgb')%20%7B%5Cn%20%20%20%20%20%20color.g%20%3D%200%3B%5Cn%20%20%20%20%20%20return%20color%3B%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%7D%22%2C%22unusedSymbols%22%3A%5B%5D%2C%22version%22%3A%22local%22%7D) and notice position of `@mixin vite`.\r\n\r\n@RobinMalfait mentioned similar issue in LightningCSS repo at https://github.com/parcel-bundler/lightningcss/issues/353. It is true these at-rules are not standard CSS but given their usefulness I suspect we will see more and more people observing similar issues once they try to migrate to V4, especially because V3 was a postcss plugin itself.\r\n\r\nTo me, it'd be ideal if we could run LightningCSS after Postcss (`renderStart` after `vite:css`?) in `@tailwindcss/vite`, which will better match with behavior during dev mode and do not require changes from LightningCSS side.\r\n\r\nI did also try setting up custom transform for LightningCSS but so far no straightforward (or even possible) one to work around this issue.\r\n\r\nThanks all.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15185","RelatedDescription":"Open issue \"[v4] Nested unknown at-rule (for PostCSS plugins) is ejected from rule during build\" (#15185)"},{"Id":"2692534330","IsPullRequest":true,"CreatedAt":"2024-11-25T22:59:47","Actor":"adamwathan","Number":"15183","RawContent":null,"Title":"Support bare `col-*` and `row-*` utilities","State":"open","Body":"Resolves #15170.\r\n\r\nThis PR adds support for bare integer values to the `col-*` and `row-*` utilities:\r\n\r\n```css\r\n.col-5 {\r\n  grid-column: 5;\r\n}\r\n.row-6 {\r\n  grid-row: 6;\r\n}\r\n```\r\n\r\nThese properties are shorthands for `grid-column-start`/`grid-column-end` and `grid-row-start`/`grid-row-end`, so using a bare integer value ends up being a shortcut for:\r\n\r\n```css\r\n.col-5 {\r\n  grid-column-start: 5;\r\n  grid-column-end: auto;\r\n}\r\n```\r\n\r\n…which makes these basically work like an alternative to `col-start-*` and `row-start-*`.\r\n\r\nThese support negative values like `-col-6` as well, which also technically extends to arbitrary values like `-col-[6/span_2]` now even though that is a junk value. I've decided not to guard against that though and just consider it user error to keep the implementation simple.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15183","RelatedDescription":"Open PR \"Support bare `col-*` and `row-*` utilities\" (#15183)"},{"Id":"2692408123","IsPullRequest":false,"CreatedAt":"2024-11-25T22:16:12","Actor":"DavidCodina","Number":"15182","RawContent":null,"Title":"v4.0.0 Beta missing --spacing-* variables","State":"closed","Body":"\r\nHello.\r\n\r\nIt seems like --spacing-* custom properties are missing from the generated output.\r\nI'm using a Vite/React build + Chrome browser\r\n\r\n<img width=\"721\" alt=\"browser\" src=\"https://github.com/user-attachments/assets/3c317100-81ca-49a7-94f3-169e56a9fbd5\">\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15182","RelatedDescription":"Closed issue \"v4.0.0 Beta missing --spacing-* variables\" (#15182)"},{"Id":"2692392976","IsPullRequest":false,"CreatedAt":"2024-11-25T22:00:30","Actor":"npezza93","Number":"15181","RawContent":null,"Title":"Illegal instruction when using beta inside Docker","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n v4 beta 2\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\ndocker and ruby\r\n\r\n**What version of Node.js are you using?**\r\n\r\n 🤷 \r\n\r\n**What browser are you using?**\r\n\r\nFor example: N/A\r\n\r\n**What operating system are you using?**\r\n\r\nlinux\r\n\r\n**Reproduction URL**\r\n\r\nDockerfile\r\n```\r\n# syntax=docker/dockerfile:1\r\n# check=error=true\r\n\r\nARG RUBY_VERSION=3.4.0-preview2\r\nFROM docker.io/library/ruby:$RUBY_VERSION-slim AS base\r\n\r\nRUN apt-get update -qq && \\\r\n    apt-get install --no-install-recommends -y curl build-essential git pkg-config && \\\r\n    rm -rf /var/lib/apt/lists /var/cache/apt/archives\r\n\r\nRUN curl -L -o bin/tailwindcss https://github.com/tailwindlabs/tailwindcss/releases/download/v4.0.0-beta.2/tailwindcss-linux-x64 && \\\r\n    chmod a+x ./bin/tailwindcss\r\n\r\nRUN ./bin/tailwindcss --help\r\n```\r\n\r\ncommand: `docker buildx build --platform linux/amd64 --file Dockerfile.tw .`\r\n**Describe your issue**\r\n\r\nWhen trying to execute the beta executable in x86 for linux, it errors with '0.054 Illegal instruction'","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15181","RelatedDescription":"Open issue \"Illegal instruction when using beta inside Docker\" (#15181)"},{"Id":"2691134315","IsPullRequest":true,"CreatedAt":"2024-11-25T21:00:21","Actor":"RobinMalfait","Number":"15174","RawContent":null,"Title":"Ensure `.group` and `.peer` are prefixed when using the `prefix(…)` option","State":"closed","Body":"This PR fixes an issue where the `.group` and `.peer` classes didn't get prefixed if you are using the `prefix(…)` option.\r\n\r\nBefore this change, `tw:group-hover:flex`, generated:\r\n```css\r\n.tw\\\\:group-hover\\\\:flex {\r\n  &:is(:where(.group):hover *) {\r\n    @media (hover: hover) {\r\n      display: flex;\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nBut now it generates:\r\n```css\r\n.tw\\\\:group-hover\\\\:flex {\r\n  &:is(:where(.tw\\\\:group):hover *) {\r\n    @media (hover: hover) {\r\n      display: flex;\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nOr as a diff, it might be more clear:\r\n```diff\r\n  .tw\\\\:group-hover\\\\:flex {\r\n-   &:is(:where(.group):hover *) {\r\n+   &:is(:where(.tw\\\\:group):hover *) {\r\n      @media (hover: hover) {\r\n        display: flex;\r\n      }\r\n    }\r\n  }\r\n```\r\n\r\nFixes: #15172\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15174","RelatedDescription":"Closed or merged PR \"Ensure `.group` and `.peer` are prefixed when using the `prefix(…)` option\" (#15174)"},{"Id":"2691255192","IsPullRequest":false,"CreatedAt":"2024-11-25T15:51:10","Actor":"aymanoid","Number":"15175","RawContent":null,"Title":"[v4] weird webpack warning","State":"open","Body":"**What version of Tailwind CSS are you using?**\r\n\r\n@tailwindcss/postcss@4.0.0-beta.2\r\ntailwindcss@4.0.0-beta.2\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nhttps://tailwindcss.com/docs/v4-beta#upgrading-from-v3\r\nNext.js 15.0.3\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv22.11.0\r\n\r\n**What operating system are you using?**\r\n\r\nWindows 11\r\n\r\n**Reproduction URL**\r\n\r\nJust a fresh project initiated with `pnpx create-next-app@latest`, then `pnpx @tailwindcss/upgrade@next` was used to upgrade to v4\r\n\r\n**Describe your issue**\r\n\r\nI keep getting this warning that seems to be related to webpack whenever I run dev or build command. I'm guessing it's something related to Windows' weird pathing, but not sure. The application seems to work fine though.\r\n\r\n![image](https://github.com/user-attachments/assets/8a3bec15-3dbf-40aa-bd52-28afcffbd618)\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15175","RelatedDescription":"Open issue \"[v4] weird webpack warning\" (#15175)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-11-28T03:30:24.2310169Z","RunDurationInMilliseconds":432}