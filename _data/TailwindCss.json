{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2840976878","IsPullRequest":false,"CreatedAt":"2025-02-09T21:49:47","Actor":"maiconcarraro","Number":"16395","RawContent":null,"Title":"[v4] space-y-* and labels have a different behavior compared to v3 (no upgrade information)","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.5\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/mgLjLdT2cN\n\n![Image](https://github.com/user-attachments/assets/c148b290-29d3-402d-94a5-a372009d35cc)\n\n![Image](https://github.com/user-attachments/assets/f822cd4e-1280-4c0f-9bab-3e5902784835)\n\n**Describe your issue**\n\nPreviously in v3, and specially when using shadcn/ui components, most of the organization are using `space-y-*` for the parent div of label + input, the `space-y-*` does work correctly if you combine with `flex flex-col`, or if you force `label` to be a block instead of inline. Found no information related to this in the [upgrade guide](https://tailwindcss.com/docs/upgrade-guide).\n\nIf thats expected, I would also expect to the codemod to apply changes related to this or have some notes in the upgrade guide. \n\nThe change is related to previously using the sibling combinator which would skip the first element and apply to all including last, and the new space apply to all (including first) but last.\n\nFound this comment: https://github.com/tailwindlabs/tailwindcss/issues/15162#issuecomment-2497562846\nAnd the issue on shadcn/ui: https://github.com/shadcn-ui/ui/issues/6121#issuecomment-2605897774","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16395","RelatedDescription":"Open issue \"[v4] space-y-* and labels have a different behavior compared to v3 (no upgrade information)\" (#16395)"},{"Id":"2840929093","IsPullRequest":false,"CreatedAt":"2025-02-09T20:16:12","Actor":"julian-scholz","Number":"16391","RawContent":null,"Title":"[v4] @tailwindcss/upgrade fails silently withour error due to missing dependencies","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.5\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nAngular v19.1.5, PostCSS v8.5.1\n\n**What version of Node.js are you using?**\n\nv22.13.1\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nUbuntu 20.04 (WSL)\n\n**Reproduction URL**\n\nN/A\n\n**Describe your issue**\n\nWhen migrating a v3 project, the migration tool did not produce any results when executed and did not change anything in the project files. However, no error message is displayed.\n\n![Image](https://github.com/user-attachments/assets/ee44184b-3a47-41da-84cf-b830b5fdc32a)\n\nThe reason why the migration fails only becomes clear when the @tailwindcss/upgrade package is manually installed (_npm i_).\nIn my case, the _make_ utility was missing.\n\n![Image](https://github.com/user-attachments/assets/5544db84-5725-4f6d-85d9-631c13cf6248)\n\nAfter installing the _build essentials_ package for Ubuntu (which includes the _make_ utility), the migration then also worked.\nIt would be good if this error message was also displayed when running with npx. Otherwise, the Tailwind migration documentation could indicate that the package should first be installed manually before running it with npx to simplify potential debugging scenarios.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16391","RelatedDescription":"Open issue \"[v4] @tailwindcss/upgrade fails silently withour error due to missing dependencies\" (#16391)"},{"Id":"2840875569","IsPullRequest":false,"CreatedAt":"2025-02-09T18:44:08","Actor":"mkdynamic","Number":"16389","RawContent":null,"Title":"Inconsistent CSS assets between client and SSR builds with @tailwindcss/vite","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\n4.0.5\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.1.0\n\n**What version of Node.js are you using?**\n\nBun 1.2.2\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\n- Using the `@tailwindcss/vite` plugin: https://github.com/mkdynamic/vite-tailwind-ssr\n- Using the `@tailwindcss/postcss` plugin: https://github.com/mkdynamic/vite-tailwind-postcss-ssr\n\n**Describe your issue**\n\nWhen using `@tailwindcss/vite`, and creating an SSR build with Vite, the CSS asset paths differ between the SSR and client builds. This is not true with `@tailwindcss/postcss`.\n\nThe above repos contain a minimal reproduction case, starting from a fresh React Vite project. Here are the reproduction steps below showing the bug:\n\nWith the `@tailwindcss/vite` plugin:\n\n```bash\n$ bun build:client\n$ vite build --outDir build/client --manifest\nvite v6.1.0 building for production...\n✓ 29 modules transformed.\nbuild/client/.vite/manifest.json         0.38 kB │ gzip:  0.21 kB\nbuild/client/index.html                  0.39 kB │ gzip:  0.27 kB\nbuild/client/assets/App-DWNkNxeI.css     6.10 kB │ gzip:  1.79 kB\nbuild/client/assets/index-DO9bOB2u.js  185.88 kB │ gzip: 58.73 kB\n✓ built in 463ms\n\n$ bun build:server\n$ vite build --outDir build/server --ssr=src/entry-ssr.tsx\nvite v6.1.0 building SSR bundle for production...\n✓ 4 modules transformed.\nbuild/server/entry-ssr.js  0.46 kB\n✓ built in 55ms\n\n$ grep App- build/server/entry-ssr.js\nconst stylesheet = \"/assets/App-DX11wV_z.css\";\n```\n\nNote the asset path of the built `App.css` differs between the SSR and client builds (i.e. `App-BYq-i2yi.css !== App-DWNkNxeI.css`). This means that SSR rendered responses have the incorrect asset URL (which leads to a hydration error, if you are hydrating – or a missing CSS asset if you are only SSR rendering).\n\nWith the `@tailwindcss/postcss` based plugin:\n\n```bash\n$ bun build:client\n$ vite build --outDir build/client --manifest\nvite v6.1.0 building for production...\n✓ 29 modules transformed.\nbuild/client/index.html                  0.39 kB │ gzip:  0.27 kB\nbuild/client/.vite/manifest.json         0.40 kB │ gzip:  0.21 kB\nbuild/client/assets/App-BYq-i2yi.css     5.48 kB │ gzip:  1.69 kB\nbuild/client/assets/index-BjxNUz_i.js  185.88 kB │ gzip: 58.73 kB\n✓ built in 594ms\n\n$ bun build:server\n$ vite build --outDir build/server --ssr=src/entry-ssr.tsx\nvite v6.1.0 building SSR bundle for production...\n✓ 4 modules transformed.\nbuild/server/entry-ssr.js  0.46 kB\n✓ built in 193ms\n\n$ grep App- build/server/entry-ssr.js\nconst stylesheet = \"/assets/App-BYq-i2yi.css\";\n```\n\nNote the asset path of the built `App.css` matches the SSR and client builds (i.e. `App-BYq-i2yi.css === App-BYq-i2yi.css`).\n\nLet me know if I can provide any more information.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16389","RelatedDescription":"Open issue \"Inconsistent CSS assets between client and SSR builds with @tailwindcss/vite\" (#16389)"},{"Id":"2840746984","IsPullRequest":false,"CreatedAt":"2025-02-09T15:15:29","Actor":"liamduckett","Number":"16385","RawContent":null,"Title":"[v4] Radio button selected appearance","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.5\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nTailwind Playground\n\n**What browser are you using?**\n\nFirefox\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\n* [v4](https://play.tailwindcss.com/DvC8yvz0vK)\n* [v3](https://play.tailwindcss.com/1rY7RpAW1Y)\n\n**Describe your issue**\n\nRadio button appearance has changed upon upgrading to v4. \n\nApologies, I wasn't sure whether to report this as a [tailwindcss-forms](https://github.com/tailwindlabs/tailwindcss-forms) issue?\n\n**Cause**\n\nPreviously:\n\n```css\n/* Assign checked background color - higher priority */\n[type=\"radio\"]:checked {\n  /* ... */\n  background-color: currentColor;\n  /* ... */\n}\n\n```css\n/* Assign custom background color - lower priority */\n.bg-gray-100 {\n  /* ... */\n  background-color: rgb(243 244 246 / var(--tw-bg-opacity, 1));\n}\n```\n\nbut now: \n\n```css\n/* Assign checked background color - lower priority */\n@layer base {\n  [type=\"checkbox\"]:checked, [type=\"radio\"]:checked {\n    /* ... */\n    background-color: currentColor;\n    /* ... */\n  }\n}\n\n/* Assign custom background color - higher priority */\n@layer utilities {\n  .bg-gray-100 {\n    background-color: var(--color-gray-100);\n  }\n}\n```\n\nThanks!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16385","RelatedDescription":"Open issue \"[v4] Radio button selected appearance\" (#16385)"},{"Id":"2840675996","IsPullRequest":true,"CreatedAt":"2025-02-09T13:29:09","Actor":"RobinMalfait","Number":"16382","RawContent":null,"Title":"Bump and pin `prettier`","State":"open","Body":"This PR bumps the Prettier dependencies, and also pins the version.\n\nNoticed that a PR with a single empty commit started failing at the time of writing this (https://github.com/tailwindlabs/tailwindcss/pull/16306). This is because prettier released a new minor version which results in slightly different output.\n\nLet's bump prettier and handle the differences, but also pin the version to avoid this in the future.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16382","RelatedDescription":"Open PR \"Bump and pin `prettier`\" (#16382)"},{"Id":"2840469561","IsPullRequest":true,"CreatedAt":"2025-02-09T06:26:45","Actor":"mat72coke","Number":"16380","RawContent":null,"Title":"Fix mismatched comment numbers in styles","State":"open","Body":"Corrected misplaced comment references to align with the listed explanation above.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16380","RelatedDescription":"Open PR \"Fix mismatched comment numbers in styles\" (#16380)"},{"Id":"2840300330","IsPullRequest":true,"CreatedAt":"2025-02-08T22:09:38","Actor":"adamwathan","Number":"16376","RawContent":null,"Title":"Preserve custom properties in keyframes","State":"open","Body":"WIP","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16376","RelatedDescription":"Open PR \"Preserve custom properties in keyframes\" (#16376)"},{"Id":"2840286527","IsPullRequest":false,"CreatedAt":"2025-02-08T21:33:15","Actor":"ramrami","Number":"16374","RawContent":null,"Title":"[v4.0.5] Used css variables are removed from @keyframes","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.5\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nGulp + Postcss\n\n**What version of Node.js are you using?**\n\nv20\n\n**What browser are you using?**\n\nBrave\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/4MlgazRExq?file=css\n\n**Describe your issue**\n\nGiven this setup\n```css\n@property --angle {\n  inherits: true;\n  initial-value: 0deg;\n  syntax: '<angle>';\n}\n\n@theme {\n  --animate-rotate-angle: rotate-angle 2s infinite linear;  \n  @keyframes rotate-angle {\n    to {\n      --angle: 360deg;\n    }\n  }    \n}\n```\n\nTW v4.0.5 removes the css var from the keyframe when the animation is used and generate the keyframe like this:\n\n```css\n@keyframes rotate-angle {\n  to {\n  }\n}\n``` ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16374","RelatedDescription":"Open issue \"[v4.0.5] Used css variables are removed from @keyframes\" (#16374)"},{"Id":"2840205174","IsPullRequest":true,"CreatedAt":"2025-02-08T18:48:35","Actor":"adamwathan","Number":"16373","RawContent":null,"Title":"Prepare v4.0.5","State":"closed","Body":"<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16373","RelatedDescription":"Closed or merged PR \"Prepare v4.0.5\" (#16373)"},{"Id":"2840143488","IsPullRequest":false,"CreatedAt":"2025-02-08T16:53:37","Actor":"liamduckett","Number":"16372","RawContent":null,"Title":"[v4] Preflight removes Margin from Dialog element","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.4\n\n**Reproduction**\n\n* [v4](https://play.tailwindcss.com/tPVgqyobUk)\n* [v3](https://play.tailwindcss.com/jSpZQPDelc)\n\n**Describe your issue**\n\nDialog elements have their margin removed in v4","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16372","RelatedDescription":"Open issue \"[v4] Preflight removes Margin from Dialog element\" (#16372)"},{"Id":"2840025738","IsPullRequest":false,"CreatedAt":"2025-02-08T14:18:57","Actor":"NuroDev","Number":"16371","RawContent":null,"Title":"Astro `client:only` directive omits styles in builds","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\n```bash\n4.0.4\n```\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n| Package                   | Version          |\n| ------------------- | ------------- |\n| `@astrojs/preact`   | `4.0.4`           |\n| `astro`                     | `5.2.5`           |\n| `preact`                   | `10.25.4`       |\n\n**What version of Node.js are you using?**\n\n```bash\nv21.7.3\n```\n\n**What browser are you using?**\n\nArc, Microsoft Edge.\n\n**What operating system are you using?**\n\nmacOS, Windows 11\n(Respective to above)\n\n**Reproduction URL**\n\n[github.com/nurodev/tailwind-v4-astro-client-directive-bug](https://github.com/nurodev/tailwind-v4-astro-client-directive-bug)\n\n- Local Development ✅ \n\t- Start the local development server by running the `dev` script\n\t- Visit [`http://localhost:4321/`](http://localhost:4321/) to see that both red & blue meteor effects work\n- Local Build: Broken ❌\n\t- Run the `build` script\n\t- Run the `preview` script to serve the build output\n\t- Visit [`http://localhost:4321/`](http://localhost:4321/) to see that the red meteors are now missing\n- Local Build: Fixed ✅ \n\t- Edit `src/layouts/Layout.astro` to remove the `client:only=\"preact\"` property from the `MeteorsPreact` component\n\t- Run the `build` script\n\t- Run the `preview` script to serve the build output\n\t- Visit [`http://localhost:4321/`](http://localhost:4321/) to see that both red & blue meteor effects work\n\n**Describe your issue**\n\nSince v4 has been released, I have been meaning to upgrade my personal website ([`nuro.dev`](https://nuro.dev/)). Almost everything is working except for the \"meteors\" CSS effect at the top of the screen. During local or production builds the outputted CSS seems to be missing some chunks of some kind as the component does not render.\n\nAfter a bit of digging when making a reproduction, I discovered that it is caused by using the [`client:only` directive](https://docs.astro.build/en/reference/directives-reference/#clientonly) in Astro (Other directives could affect it, I have not tested it). When I remove that directive the local / production builds output the correct CSS needed for the \"meteors\" component to render correctly.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16371","RelatedDescription":"Closed issue \"Astro `client:only` directive omits styles in builds\" (#16371)"},{"Id":"2839700963","IsPullRequest":false,"CreatedAt":"2025-02-08T08:06:02","Actor":"VedantaKaushik","Number":"16366","RawContent":null,"Title":"Tailwind CSS Classes Not Working on Chrome for Android 14","State":"open","Body":"What version of Tailwind CSS are you using?\nv4.0.4\n\nWhat build tool (or framework) are you using?\nNext.js 15.1.6 with PostCSS 8.5.1\n\nWhat version of Node.js are you using?\nv22.13.1\n\nWhat browser are you using?\nChrome (latest) and other Chromium-based browsers on Android 14\n\nWhat operating system are you using?\nAndroid 14\n\n\n **Describe Your Issue**\n\nIn my Next.js + Tailwind CSS project, I have encountered an issue where some Tailwind classes work in one component but fail in another, specifically on Chrome (and other Chromium-based browsers) on Android 14.\n\n- Observed Behavior:\n\nThe following class works correctly in one component but not in another:\n```\n<div className=\"font-semibold text-xl text-gray-800\">{cardProps.total}</div>\n```\n- The same class applies correctly on desktop and Firefox mobile, but not on Chrome for Android 14.\n\n- No errors appear in the console, but styles fail to apply.\n\n **Steps to Reproduce**\n\n1. Open a Tailwind-powered webpage on Chrome for Android 14\n\n3. Compare the rendering of the following component:\n```\n<React.Fragment>\n   <div className=\"flex justify-center items-center gap-2 sm:m-4 flex-col sm:w-96 w-64 sm:p-6 p-3 m-0 bg-white border border-gray-200 rounded-lg shadow\">\n     <div className=\"mb-2 text-2xl font-bold tracking-tight text-gray-800\">\n       <span>{cardProps.heading}</span>\n     </div>\n     <div className=\"font-semibold text-xl text-gray-800\">\n       <span>{cardProps.total}</span>\n     </div>\n   </div>\n </React.Fragment>\n```\n\n4. Observe that one card applies styles correctly, while another does not display font-semibold text-xl text-gray-800 correctly.\n\n6. Test the same page in Firefox for Android or desktop Chrome → styles apply correctly.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16366","RelatedDescription":"Open issue \"Tailwind CSS Classes Not Working on Chrome for Android 14\" (#16366)"},{"Id":"2839696613","IsPullRequest":false,"CreatedAt":"2025-02-08T08:01:10","Actor":"jordimarimon","Number":"16365","RawContent":null,"Title":"[v4] Angular host class binding not detected","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nAngular v19 with `@tailwindcss/postcss`.\n\nI followed this guide: https://tailwindcss.com/docs/installation/framework-guides/angular\n\n**What version of Node.js are you using?**\n\nv22.12.0\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nLinux\n\n**Reproduction**\n\nTo reproduce the issue:\n\n- **1.** Create a new file with the following content (in my example I name the file `foo.component.ts`):\n\n```typescript\n// Angular is not needed because I'm going to use the scanner directly for reproducing the issue\nimport { Component } from '@angular/core';\n\n\n@Component({\n    selector: 'app-foo',\n    template: '',\n    host: {\n        '[class.min-h-dvh]': 'true',\n    },\n})\nexport class FooComponent {\n\n}\n```\n\n- **2.** Create a js file with the following content (in my example I name the file `scan.js`):\n\n```javascript\nimport { Scanner } from '@tailwindcss/oxide';\nimport * as fs from 'node:fs/promises';\n\n\nconst content = await fs.readFile('foo.component.ts', 'utf-8');\nconst scanner = new Scanner({});\nconst candidates = scanner.scanFiles([{content, extension: 'ts'}]);\n\nconsole.log(candidates);\n```\n\n- **3.** Execute the script in a shell:\n\n```shell\nnode scan.js\n```\n\nThis is the output I get:\n\n```text\n[\n  '@Component',      '@angular/core',\n  'app-foo',         'class',\n  'class.min-h-dvh', 'export',\n  'from',            'host',\n  'import',          'selector',\n  'template',        'true'\n]\n```\n\nI would expect to see `min-h-dvh` instead of `class.min-h-dvh`.\n\n**Describe your issue**\n\nI don't know anything about rust yet so I can't help a lot but I see this line in the code:\n\nhttps://github.com/tailwindlabs/tailwindcss/blob/main/crates/oxide/src/lib.rs#L451\n\nI don't know if it should also consider typescript files for Angular projects.\n\nI don't use the scanner directly, I use the postcss tailwind plugin, I just wanted to minimiza as much as possible the reproduction of the issue so it would be easier to debug.\n\nI created this issue because when using Tailwind v4 in an Angular project any class that I define using the host class binding, is not being generated.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16365","RelatedDescription":"Open issue \"[v4] Angular host class binding not detected\" (#16365)"},{"Id":"2839623370","IsPullRequest":false,"CreatedAt":"2025-02-08T05:46:06","Actor":"johnadrian63","Number":"16364","RawContent":null,"Title":"[v4] Angular compilation errors in Docker are preventing TailwindCSS from working.","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nTailwindCSS v4.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n- Docker Desktop 4.38.0\n- Node:22-alpine\n- Angular 19.1.4 (CLI, Core)\n- Typescript 5.7.2\n- PostCSS 8.5.1\n- TailwindCSS 4.0.4\n\n**What version of Node.js are you using?**\nNode:22-alpine (Docker image)\n\n**What browser are you using?**\nChrome\n\n**What operating system are you using?**\nWindows 11 Pro 64-bit\n\n**Reproduction URL**\nhttps://github.com/johnadrian63/tailwind-docker\n\n**Describe your issue**\nI have an Angular application that uses TailwindCSS v4. It works perfectly on my local machine, but when I run it inside a Docker container, I encounter compilation errors that prevent TailwindCSS from functioning properly.\n\nDescribe the problem you're seeing, any important steps to reproduce and what behavior you expect instead.\nHere is the compilation errors that I encountered:\n\n![Image](https://github.com/user-attachments/assets/ab019865-f180-428e-87ab-98a6e361e86b)\n\n```\n2025-02-08 13:20:41 \n2025-02-08 13:20:41 > webclient@0.0.0 start:webapp\n2025-02-08 13:20:41 > ng serve --project=webapp --configuration development --port 4200 --host 0.0.0.0 --poll 800\n2025-02-08 13:20:41 \n2025-02-08 13:20:42 \n2025-02-08 13:20:42 Warning: This is a simple server for use in testing or debugging Angular applications\n2025-02-08 13:20:42 locally. It hasn't been reviewed for security issues.\n2025-02-08 13:20:42 \n2025-02-08 13:20:42 Binding this server to an open connection can result in compromising your application or\n2025-02-08 13:20:42 computer. Using a different host than the one passed to the \"--host\" flag might result in\n2025-02-08 13:20:42 websocket connection issues. You might need to use \"--disable-host-check\" if that's the\n2025-02-08 13:20:42 case.\n2025-02-08 13:20:42     \n2025-02-08 13:20:42 Component HMR has been enabled.\n2025-02-08 13:20:42 If you encounter application reload issues, you can manually reload the page to bypass HMR and/or disable this feature with the `--no-hmr` command line option.\n2025-02-08 13:20:42 Please consider reporting any issues you encounter here: https://github.com/angular/angular-cli/issues\n2025-02-08 13:20:42 \n2025-02-08 13:20:42 ❯ Building...\n2025-02-08 13:21:08 ✔ Building...\n2025-02-08 13:21:08 Initial chunk files | Names         |  Raw size\n2025-02-08 13:21:08 polyfills.js        | polyfills     |  90.20 kB | \n2025-02-08 13:21:08 styles.css          | styles        |  61.93 kB | \n2025-02-08 13:21:08 main.js             | main          |   2.37 kB | \n2025-02-08 13:21:08 \n2025-02-08 13:21:08                     | Initial total | 154.50 kB\n2025-02-08 13:21:08 \n2025-02-08 13:21:08 Application bundle generation complete. [26.484 seconds]\n2025-02-08 13:21:08 \n2025-02-08 13:21:08 ▲ [WARNING] Comments in CSS use \"/* ... */\" instead of \"//\" [js-comment-in-css]\n2025-02-08 13:21:08 \n2025-02-08 13:21:08     projects/webapp/src/styles.css:2174:11:\n2025-02-08 13:21:08       2174 │     https: //github.com/Brooooooklyn/nice/actions !important;\n2025-02-08 13:21:08            ╵            ~~\n2025-02-08 13:21:08 \n2025-02-08 13:21:08 \n2025-02-08 13:21:08 ▲ [WARNING] Expected \"}\" to go with \"{\" [css-syntax-error]\n2025-02-08 13:21:08 \n2025-02-08 13:21:08     projects/webapp/src/styles.css:2611:27589:\n2025-02-08 13:21:08       2611 │ ...b2R5IHtcclxuICBib3JkZXI6IHNvbGlkIDFweCByZWQ7XHJcbn1cclxuIl19 */\n2025-02-08 13:21:08            │                                                                   ^\n2025-02-08 13:21:08            ╵                                                                   }\n2025-02-08 13:21:08 \n2025-02-08 13:21:08   The unbalanced \"{\" is here:\n2025-02-08 13:21:08 \n2025-02-08 13:21:08     projects/webapp/src/styles.css:2203:23:\n2025-02-08 13:21:08       2203 │   .\\[uri\\:\\/hoge\\/\\*\\] {\n```\n\n### Steps to reproduce:\n1. Download Docker Desktop\n2. Download this github repo https://github.com/johnadrian63/tailwind-docker \n3. Go to the root directory of the project and run this docker command to build the image `docker build -t docker-test5-webclient-app -f ${PWD}/webclient/projects/webapp/Dockerfile .`\n4. Next, run this command to run the container `docker run --name docker-test5-webclient-app --env-file ./webclient/config/.env -d -p 8080:4200 -v ${PWD}/webclient/projects/webapp:/app/projects/webapp docker-test5-webclient-app`\n5. Go to Docker Desktop and check the container logs. (Please see the screenshot I provided above)\n\n### Here is the content of my Dockerfile:\n```\nFROM node:22-alpine AS webclient\nWORKDIR /app\n\nCOPY webclient/package*.json .\n\nRUN rm -rf node_modules package-lock.json \\\n  && npm install -g @angular/cli@19.1.5 \\\n  && npm install\n\nCOPY webclient/.angular ./.angular\nCOPY webclient/.postcssrc.json ./\nCOPY webclient/angular.json .\nCOPY webclient/tsconfig.json .\nCOPY webclient/projects/webapp ./projects/webapp\n\nCMD if [ \"${ENVIRONMENT}\" = \"development\" ]; then npm run start:webapp; else ng build; fi\n\n\n# build image\n# docker build -t docker-test5-webclient-app -f ${PWD}/webclient/projects/webapp/Dockerfile .\n# run image\n# docker run --name docker-test5-webclient-app --env-file ./webclient/config/.env -d -p 8080:4200 -v ${PWD}/webclient/projects/webapp:/app/projects/webapp docker-test5-webclient-app\n```\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16364","RelatedDescription":"Open issue \"[v4] Angular compilation errors in Docker are preventing TailwindCSS from working.\" (#16364)"},{"Id":"2839614738","IsPullRequest":false,"CreatedAt":"2025-02-08T05:23:41","Actor":"RohitKumar-tech","Number":"16363","RawContent":null,"Title":"Issue with the version 4.0.2 The tailwind is not installing for the latest versionn of node 22","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v2.0.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: postcss-cli 8.3.1, Next.js 10.0.9, webpack 5.28.0\n\n**What version of Node.js are you using?**\n\nFor example: v12.0.0\n\n**What browser are you using?**\n\nFor example: Chrome, Safari, or N/A\n\n**What operating system are you using?**\n\nFor example: macOS, Windows\n\n**Reproduction URL**\n\nA Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\n\nA reproduction is **required** when filing an issue — any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.\n\n**Describe your issue**\n\nWhen I am using the latest version of tilwind its giving me errors and now after using the v3.14 its working properly\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16363","RelatedDescription":"Open issue \"Issue with the version 4.0.2 The tailwind is not installing for the latest versionn of node 22\" (#16363)"},{"Id":"2839247762","IsPullRequest":false,"CreatedAt":"2025-02-07T23:01:44","Actor":"wongjn","Number":"16358","RawContent":null,"Title":"Vue static vdom stringifier breaks PostCSS in Nuxt Production build","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nnuxt@3.15.4\n\n**What version of Node.js are you using?**\n\nv20.11.0\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nUbuntu 20.04.6 LTS (in Windows Subsystem for Linux)\n\n**Reproduction URL**\n\nhttps://github.com/wongjn/tailwind-nuxt\n\n**Describe your issue**\n\nSee my original debugging journey at https://github.com/tailwindlabs/tailwindcss/discussions/15818#discussioncomment-12098822\n\nPerhaps related to https://github.com/tailwindlabs/tailwindcss/issues/16133 in terms of HTML entity encoding causing the issue.\n\nWhen you have a template with enough elements with props on them, i.e:\n\n```html\n<script setup lang=\"ts\">\nconst includedFeatures = [\"Foo\", \"Bar\", \"Baz\"];\n</script>\n\n<template>\n  <main class=\"\" lang=\"de\">\n    <div class=\"\">\n      <div class=\"\">\n        <div class=\"\">\n          <div class=\"\">\n            <img class=\"\" src=\"\" alt=\"\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n```\n\nIt [passes a threshold in Vue's compiler to compile the template as a \"static\" VNode](https://github.com/vuejs/core/blob/119f18c773b8d437fada3e0b8b847a282182c8dd/packages/compiler-dom/src/transforms/stringifyStatic.ts#L93-L106):\n\n```js\nimport { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"\",\n  lang: \"de\"\n}\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\nconst includedFeatures = [\"Foo\", \"Bar\", \"Baz\"];\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"main\", _hoisted_1, _cache[0] || (_cache[0] = [\n    _createStaticVNode(\"<div class=\\\\\"\\\\\"><div class=\\\\\"\\\\\"><div class=\\\\\"\\\\\"><div class=\\\\\"\\\\\"><img class=\\\\\"\\\\\" src=\\\\\"\\\\\" alt=\\\\\"\\\\\"></div></div></div></div>\", 1)\n  ])))\n}\n}\n\n})\n```\n\nHowever, if we have a valid Tailwind class in there:\n\n```diff\n <div class=\"\">\n-  <div class=\"\">\n+  <div class=\"after:content-['']\">\n     <img class=\"\" src=\"\" alt=\"\" />\n```\n\nThen Vue compiles it to (snipped for brevity):\n\n```js\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"main\", _hoisted_1, _cache[0] || (_cache[0] = [\n    _createStaticVNode(\"<div class=\\\\\"\\\\\"><div class=\\\\\"\\\\\"><div class=\\\\\"after:content-[&#39;&#39;]\\\\\"><div class=\\\\\"\\\\\"><img class=\\\\\"\\\\\" src=\\\\\"\\\\\" alt=\\\\\"\\\\\"></div></div></div></div>\", 1)\n  ])))\n}\n}\n```\nNotice the `after:content-[&#39;&#39;]`. Since this is a module in Vite's module graph, this gets scanned for class candidates by Tailwind. It sees `after:content-[&#39;&#39;]` as a valid class and generates a rule for it:\n\n```css\n.after\\:content-\\[\\&\\#39\\;\\&\\#39\\;\\] {\n  &::after {\n    content: var(--tw-content);\n    --tw-content: &#39;&#39;;\n    content: var(--tw-content);\n  }\n}\n```\nAnd then when the default PostCSS pipeline in Nuxt runs on this, it errors out:\n```\n ERROR  Nuxt Build Error: [vite:css] [postcss] /path/to/project/assets/css/main.css:128:24: Unknown word                                                                                  nuxi 11:01:10 PM\nfile: /path/to/project/assets/css/main.css:128:23\n\n    file: assets/css/main.css:128:23\n    at Input.error (node_modules/postcss/lib/input.js:109:16)\n    at Parser.unknownWord (node_modules/postcss/lib/parser.js:593:22)\n    at Parser.other (node_modules/postcss/lib/parser.js:435:12)\n    at Parser.parse (node_modules/postcss/lib/parser.js:470:16)\n    at parse (node_modules/postcss/lib/parse.js:11:12)\n    at new LazyResult (node_modules/postcss/lib/lazy-result.js:133:16)\n    at Processor.process (node_modules/postcss/lib/processor.js:53:14)\n    at compileCSS (node_modules/vite/dist/node/chunks/dep-M1IYMR16.js:48784:59)\n    at async Object.transform (node_modules/vite/dist/node/chunks/dep-M1IYMR16.js:48039:11)\n    at async transform (node_modules/rollup/dist/es/shared/node-entry.js:19787:16)\n```\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16358","RelatedDescription":"Open issue \"Vue static vdom stringifier breaks PostCSS in Nuxt Production build\" (#16358)"},{"Id":"2839186748","IsPullRequest":true,"CreatedAt":"2025-02-07T22:12:30","Actor":"depfu[bot]","Number":"16357","RawContent":null,"Title":"Update eslint 9.18.0 → 9.19.0 (minor)","State":"open","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ eslint (9.18.0 → 9.19.0) · [Repo](https://github.com/eslint/eslint) · [Changelog](https://github.com/eslint/eslint/blob/main/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/eslint/eslint/releases/tag/v9.19.0\">9.19.0</a></h4>\n\n<blockquote><h2 dir=\"auto\">Features</h2>\n<ul dir=\"auto\">\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/1637b8e87df5c7f58ab71e0e159f4b96c998e070\"><code class=\"notranslate\">1637b8e</code></a> feat: add <code class=\"notranslate\">--report-unused-inline-configs</code> (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/19201\">#19201</a>) (Josh Goldberg ✨)</li>\n</ul>\n<h2 dir=\"auto\">Bug Fixes</h2>\n<ul dir=\"auto\">\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/aae67172ab9631b4267fc03f64d3c3d6d1fcda73\"><code class=\"notranslate\">aae6717</code></a> fix: sync rule type header comments automatically (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/19276\">#19276</a>) (Francesco Trotta)</li>\n</ul>\n<h2 dir=\"auto\">Documentation</h2>\n<ul dir=\"auto\">\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/cfea9abe0e27cf2ce1d27232b8c70555397e141b\"><code class=\"notranslate\">cfea9ab</code></a> docs: Clarify overrideConfig option (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/19370\">#19370</a>) (Nicholas C. Zakas)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/2b84f666cd7474bb061e2f12205af57f5dbb89d6\"><code class=\"notranslate\">2b84f66</code></a> docs: Update README (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/19362\">#19362</a>) (Nicholas C. Zakas)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/044f93cbbe71a45130156004509083814e2b9669\"><code class=\"notranslate\">044f93c</code></a> docs: clarify frozen rule description (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/19351\">#19351</a>) (Pavel)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/797ee7c0d669678b90c5d5742228bc7b24353f79\"><code class=\"notranslate\">797ee7c</code></a> docs: fix Bluesky links (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/19368\">#19368</a>) (Milos Djermanovic)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/81a9c0ebc33dd33765711296f827c4448c80163d\"><code class=\"notranslate\">81a9c0e</code></a> docs: Update README (GitHub Actions Bot)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/093fb3d40286588c2c425b738426ebfe5d142a63\"><code class=\"notranslate\">093fb3d</code></a> docs: replace <code class=\"notranslate\">var</code> with <code class=\"notranslate\">let</code> and <code class=\"notranslate\">const</code> in rule examples (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/19365\">#19365</a>) (Tanuj Kanti)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/417de3298527e4f257e1ae7b02e1df9db3c9ed33\"><code class=\"notranslate\">417de32</code></a> docs: replace var with const in rule examples (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/19352\">#19352</a>) (jj)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/17f2aaec16d5afbb0d219bce6ae01d7b15d74828\"><code class=\"notranslate\">17f2aae</code></a> docs: update getting-started config to match default generated config (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/19308\">#19308</a>) (0xDev)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/8a0a5a8851f72982327c2aa3a41403963f025771\"><code class=\"notranslate\">8a0a5a8</code></a> docs: better <code class=\"notranslate\">global ignores</code> instruction (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/19297\">#19297</a>) (Jacopo Marrone)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/6671a2cd8ccc710fefbccad9a813c3bea5f76c68\"><code class=\"notranslate\">6671a2c</code></a> docs: Update README (GitHub Actions Bot)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/e39d3f22ff793db42e1f1fc3808cbb12fc513118\"><code class=\"notranslate\">e39d3f2</code></a> docs: fix divider for rule category (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/19264\">#19264</a>) (Tanuj Kanti)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/e0cf53f80a4b127524e0badc8999d5d1a247143f\"><code class=\"notranslate\">e0cf53f</code></a> docs: fix search result box position for small screens (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/19328\">#19328</a>) (Tanuj Kanti)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/f92a6803a10c66cf77408b2bf29c17bcd63b1049\"><code class=\"notranslate\">f92a680</code></a> docs: replace var with let or const in rule examples (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/19331\">#19331</a>) (Ravi Teja Kolla)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/b04b84bc17d4aaaea1326cb08196593624db02a2\"><code class=\"notranslate\">b04b84b</code></a> docs: revert accidental changes in TS config files docs (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/19336\">#19336</a>) (Francesco Trotta)</li>\n</ul>\n<h2 dir=\"auto\">Chores</h2>\n<ul dir=\"auto\">\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/9b9cb0584867916d50aa2e9590b132e2ef8ca59c\"><code class=\"notranslate\">9b9cb05</code></a> chore: upgrade @eslint/js@9.19.0 (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/19371\">#19371</a>) (Milos Djermanovic)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/58560e70bb4dcb305343fcd7c893ac56a404f674\"><code class=\"notranslate\">58560e7</code></a> chore: package.json update for @eslint/js release (Jenkins)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/20897070913418078d8f1ea9a877d223650dff73\"><code class=\"notranslate\">2089707</code></a> test: fix failing test in Node.js v22.13.0 (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/19345\">#19345</a>) (Francesco Trotta)</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/eslint/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/eslint/eslint/compare/1c87b415313b4aacda496b3b26efc4e0b93dc13a...208e0b199f5d5f9dd173e58e3f5db19c1f0c38ed\">See the full diff on Github</a>. The new version differs by 21 commits:</p>\n<ul>\n<li><a href=\"https://github.com/eslint/eslint/commit/208e0b199f5d5f9dd173e58e3f5db19c1f0c38ed\"><code>9.19.0</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/196dfdace64d095f2facb3d8ebed1be9cb2ccab3\"><code>Build: changelog update for 9.19.0</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/9b9cb0584867916d50aa2e9590b132e2ef8ca59c\"><code>chore: upgrade @eslint/js@9.19.0 (#19371)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/58560e70bb4dcb305343fcd7c893ac56a404f674\"><code>chore: package.json update for @eslint/js release</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/cfea9abe0e27cf2ce1d27232b8c70555397e141b\"><code>docs: Clarify overrideConfig option (#19370)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/2b84f666cd7474bb061e2f12205af57f5dbb89d6\"><code>docs: Update README (#19362)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/044f93cbbe71a45130156004509083814e2b9669\"><code>docs: clarify frozen rule description (#19351)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/797ee7c0d669678b90c5d5742228bc7b24353f79\"><code>docs: fix Bluesky links (#19368)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/81a9c0ebc33dd33765711296f827c4448c80163d\"><code>docs: Update README</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/093fb3d40286588c2c425b738426ebfe5d142a63\"><code>docs: replace `var` with `let` and `const` in rule examples (#19365)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/417de3298527e4f257e1ae7b02e1df9db3c9ed33\"><code>docs: replace var with const in rule examples (#19352)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/17f2aaec16d5afbb0d219bce6ae01d7b15d74828\"><code>docs: update getting-started config to match default generated config (#19308)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/aae67172ab9631b4267fc03f64d3c3d6d1fcda73\"><code>fix: sync rule type header comments automatically (#19276)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/8a0a5a8851f72982327c2aa3a41403963f025771\"><code>docs: better `global ignores` instruction (#19297)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/20897070913418078d8f1ea9a877d223650dff73\"><code>test: fix failing test in Node.js v22.13.0 (#19345)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/6671a2cd8ccc710fefbccad9a813c3bea5f76c68\"><code>docs: Update README</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/1637b8e87df5c7f58ab71e0e159f4b96c998e070\"><code>feat: add `--report-unused-inline-configs` (#19201)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/e39d3f22ff793db42e1f1fc3808cbb12fc513118\"><code>docs: fix divider for rule category (#19264)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/e0cf53f80a4b127524e0badc8999d5d1a247143f\"><code>docs: fix search result box position for small screens (#19328)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/f92a6803a10c66cf77408b2bf29c17bcd63b1049\"><code>docs: replace var with let or const in rule examples (#19331)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/b04b84bc17d4aaaea1326cb08196593624db02a2\"><code>docs: revert accidental changes in TS config files docs (#19336)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16357","RelatedDescription":"Open PR \"Update eslint 9.18.0 → 9.19.0 (minor)\" (#16357)"},{"Id":"2839075939","IsPullRequest":false,"CreatedAt":"2025-02-07T21:20:35","Actor":"mckoda09","Number":"16354","RawContent":null,"Title":"@tailwindcss/vite spamming path of css files","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nAstro v5.2.5\n\n**What version of Node.js are you using?**\n\nBun v1.2.1\n\n**What browser are you using?**\n\nYandex Browser\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n\nhttps://github.com/mckoda09/tailwind-repro\n\n**Describe your issue**\n\n![Issue](https://github.com/user-attachments/assets/933e5582-3dcd-4999-92d6-26cc80073af1)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16354","RelatedDescription":"Closed issue \"@tailwindcss/vite spamming path of css files\" (#16354)"},{"Id":"2839015768","IsPullRequest":true,"CreatedAt":"2025-02-07T20:18:05","Actor":"thecrypticace","Number":"16353","RawContent":null,"Title":"Show suggestions for fractions in IntelliSense","State":"open","Body":"Fixes https://github.com/tailwindlabs/tailwindcss-intellisense/issues/1178 (partially)\r\n\r\nAn IntelliSense PR (+ Play update) is required to make this work better with v4: https://github.com/tailwindlabs/tailwindcss-intellisense/pull/1182 \r\n\r\n<img width=\"671\" alt=\"Screenshot 2025-02-07 at 15 19 59\" src=\"https://github.com/user-attachments/assets/7642b80c-f431-4a1e-964d-2a98ffe7a67a\" />\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16353","RelatedDescription":"Open PR \"Show suggestions for fractions in IntelliSense\" (#16353)"},{"Id":"2838943420","IsPullRequest":false,"CreatedAt":"2025-02-07T19:48:36","Actor":"finkrer","Number":"16351","RawContent":null,"Title":"New colors don't work for 7% of users worldwide, need fallbacks","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\n4.0.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\npostcss 8.4.21, Next.js 14.2.4\n\n**What version of Node.js are you using?**\n\nv20.18.0\n\n**What browser are you using?**\n\nChrome 109\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n\n—\n\n**Describe your issue**\n\n`oklch()` as a color function in CSS has been widely supported for about 2 years. Tailwind CSS 4.0 now ships with OKLCH colors by default (which is cool). However, according to [caniuse](https://caniuse.com/?search=oklch), the global penetration of supporting browsers is just short of 93%. In some countries, this falls to as low as 70%.\n\nThis is for a few reasons, for example, the first Chrome version supporting OKLCH is 111, while the latest Chrome version for Windows 7 is 109. This means that Windows 7 users will not have access to OKLCH until they switch devices (or browsers).\n\nMore importantly, this means that version 4.0 breaks colors completely for around 7% of users worldwide, making it necessary to manually add fallback colors. Despite this, the upgrade guide doesn't mention such a need.\n\nI think that shipping fallback RGB colors with Tailwind would be a great idea for now, and the old colors would be just fine, considering the new colors are the same but with upped chroma. If that is not possible or desirable, perhaps it is necessary to communicate in the upgrade guide or elsewhere that new colors might require additional attention in order not to break things for a significant number of users with older hardware and software.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16351","RelatedDescription":"Closed issue \"New colors don't work for 7% of users worldwide, need fallbacks\" (#16351)"},{"Id":"2838847881","IsPullRequest":false,"CreatedAt":"2025-02-07T18:45:13","Actor":"nomad-mystic","Number":"16350","RawContent":null,"Title":"Capitalized classnames in `addUtilities()` and `addComponents()` breaks build","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: JSX (Solid.js)\n\n**What version of Node.js are you using?**\n\nFor example: v22.13.1\n\n**What browser are you using?**\n\nFor example: N/A\n\n**What operating system are you using?**\n\nFor example: macOS\n\n**Reproduction URL**\n\nhttps://github.com/nomad-mystic/tailwindcss-capitalized-utilities\n\n**Describe your issue**\n\nWhen creating custom Utilities and Components my capitalized classnames in `addUtilities()` and `addComponents()` functions breaks using Tailwind v4.\n\n### Breaks\n```js\n'.TestUtility': {\n  backgroundColor: '#ffffff',\n},\n```\n\n<img width=\"1492\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/ef5dcae7-db78-439b-b0a0-e298a3c0f19b\" />\n\n\n### Expectation \n**Capitalization is allowed when creating custom Utilities and Components**\n\n### Breaking code in package\n```js\n// https://github.com/tailwindlabs/tailwindcss/blob/main/packages/tailwindcss/src/compat/plugin-api.ts (Line 87)\n\nconst IS_VALID_UTILITY_NAME = /^[a-z@][a-zA-Z0-9/%._-]*$/\n```\n\n### Message code in package\n```js\n// https://github.com/tailwindlabs/tailwindcss/blob/main/packages/tailwindcss/src/compat/plugin-api.ts (Line 264)\n\n`\\`addUtilities({ '${name}' : … })\\` defines an invalid utility selector. Utilities must be a single class name and start with a lowercase letter, eg. \\`.scrollbar-none\\`.`,\n```\n\n\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16350","RelatedDescription":"Open issue \"Capitalized classnames in `addUtilities()` and `addComponents()` breaks build\" (#16350)"},{"Id":"2838373107","IsPullRequest":false,"CreatedAt":"2025-02-07T14:57:12","Actor":"JaquesBotha","Number":"16346","RawContent":null,"Title":"`@apply`Broken in Tailwind CSS v4.0 – No Clear Fix or Docs!","State":"open","Body":"# Tailwind CSS v4.0 `@apply` Bug Report\n\n## Introduction\nI'm in the process of upgrading a large project, actually, five Blazor projects that all conjoin into one via components and different backends. Our focus with this project is to deliver an optimal UI experience to the end-user, which is why we use TypeScript, C#, and of course, our favorite, Tailwind CSS. Btw, huge fans! \n\nNow, with that said, we have certain native components where we cannot add CSS classes to the component itself, making `@apply` an essential part of our workflow. However, after upgrading to Tailwind CSS v4.0, `@apply` is no longer working as expected, and there seems to be little guidance on how to transition projects that rely on it. This bug report aims to outline the issue clearly and request either a fix or detailed documentation on what exactly we need to do to overcome this.\n\n## What version of Tailwind CSS are you using?\n**v4.0.0**\n\n## What build tool (or framework if it abstracts the build tool) are you using?\n**Webpack 5.97.1**\n\n## What version of Node.js are you using?\n**v20.11.1**\n\n## What version of npm are you using?\n**v10.7.0**\n\n## What IDE are you using?\n**Rider IDE**\n\n## What operating system are you using?\n**macOS**\n\n## Reproduction URL\nThere's an active discussion on this issue where many developers are experiencing the same problem but no one has officially reported it yet. Rather than debating, I’d rather get a solution, so here’s the link to the discussion: [https://github.com/tailwindlabs/tailwindcss/discussions/13336#discussioncomment-12046971](https://github.com/tailwindlabs/tailwindcss/discussions/13336#discussioncomment-12046971)(https://github.com/yourusername/tailwind-v4-apply-issue)\n\n\n## Describe your issue\n\nAfter upgrading to Tailwind CSS v4.0, I encountered the following issues:\n\n### 1. `@apply` Directive Not Functioning\n- The `@apply` directive, previously used extensively in our CSS for class composition, no longer functions as expected. \n- Example:\n  \n  ```css\n  .quickgrid thead th {\n      @apply tw-bg-slate-100 dark:tw-bg-slate-800/70 tw-py-4;\n  }\n  ```\n  \n  - This results in build errors indicating unknown utility classes such as:\n  ```\n  Error: Cannot apply unknown utility class: tw-transform\n  Error: Cannot apply unknown utility class: tw-table-auto\n  ```\n  \n### 2. Lack of Clear Documentation for `@apply` Usage in v4.0\n- The v4.0 documentation does not provide explicit guidance on how to use the `@apply` directive in non-Vue projects.\n- One part of the documentation states that `@apply` should still work, but this is only relevant for Vue projects.\n- Another section in the documentation ([CSS Modules Compatibility](https://tailwindcss.com/docs/compatibility#css-modules)) suggests using CSS variables instead:\n  ```css\n  background: var(--color-blue-500);\n  ```\n  - This is not an ideal solution because it significantly increases the workload, especially in large projects where `@apply` is heavily used.\n\n### 3. Backward Compatibility with `tailwind.config.js`\n- The `tailwind.config.js` file appears to be deprecated or its usage has changed in v4.0 without clear documentation.\n- Projects relying on configurations such as `prefix: 'tw-'` are experiencing issues with styles not applying correctly.\n\n### 4. `@apply` is Necessary for Native Blazor QuickGrid Components\n- In my case, I use `@apply` with Native Blazor QuickGrid components, where there is no alternative way to apply Tailwind classes.\n- The current documentation does not provide any solutions for frameworks outside of Vue.\n\n## Expected Outcome\n- A fix for `@apply` so that it functions as expected in Tailwind CSS v4.0.\n- Clear documentation outlining the necessary steps to transition existing projects that rely on `@apply`.\n- An explicit guide on how `tailwind.config.js` should be updated for v4.0.\n\n---\n\nThank you for your attention to this issue!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16346","RelatedDescription":"Open issue \"`@apply`Broken in Tailwind CSS v4.0 – No Clear Fix or Docs!\" (#16346)"},{"Id":"2838337959","IsPullRequest":false,"CreatedAt":"2025-02-07T14:43:18","Actor":"mvanduijker","Number":"16344","RawContent":null,"Title":"Wrapped in PHP Symfony/Process with tty enabled cli crashes","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\ntonysm/tailwindcss-laravel\n\n**What version of Node.js are you using?**\n\nNA\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nI think it's more of an issue with tty support, but if required I can make a repo with a clean laravel install and tonysm/tailwind-css-laravel package.\n\n**Describe your issue**\n\nwhen running `php artisan tailwind:watch` (or build) it fails with the following error:\n\n```\nBuilding assets...\n3605 |   if (typeof sink === \"object\")\n3606 |     if (typeof sink.write === \"function\")\n3607 |       return stream[_fileSink] = sink;\n3608 |     else\n3609 |       throw new Error(\"Invalid FileSink\");\n3610 |     return stream[_fileSink] = Bun.file(sink).writer();\n                             ^\nerror: Invalid argument\n syscall: \"kqueue\",\n   errno: -22,\n    code: \"EINVAL\",\n\n      at NativeWritable_lazyConstruct (node:stream:3610:53)\n      at NativeWritablePrototypeWrite (node:stream:3613:65)\n      at eprintln (/$bunfs/root/tailwindcss-macos-arm64:61742:23)\n      at <anonymous> (/$bunfs/root/tailwindcss-macos-arm64:62001:13)\n\nBun v1.1.43 (macOS arm64)\nDone!\n```\n\nIt was working with 3.4.* releases.\nWhen I remove the enabling of tty (https://github.com/tonysm/tailwindcss-laravel/blob/main/src/Commands/BuildCommand.php#L52) it starts working again. My guess it has something to do with tty support in the current released cli. Maybe other programming environments will have the same issue.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16344","RelatedDescription":"Open issue \"Wrapped in PHP Symfony/Process with tty enabled cli crashes\" (#16344)"},{"Id":"2838319847","IsPullRequest":false,"CreatedAt":"2025-02-07T14:35:28","Actor":"KarthikeyanRanasthala","Number":"16343","RawContent":null,"Title":"Generated CSS for border-width is not consistent with v3 when importing a config with `@config` directive","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.0.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nvite 6.1.0, @tailwindcss/vite 4.0.4, @tailwindcss/postcss 4.0.0\n\n**What version of Node.js are you using?**\n\nv22.11.0\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nRefer to this [repo](https://github.com/KarthikeyanRanasthala/tailwind-config-debug) in the following branches,\n\nwith v3: `tw-v3-with-preset`\nwith v4 & vite plugin: `tw-v4-with-preset-and-vite-plugin`\n\n\n**Describe your issue**\n\nInconsistent output between v3 & v4\n\nThe generated css is incorrect when importing a tailwind config using `@config` directive. \n\n```js\n// preset.js\nexport default {\n  theme: {\n    colors: {\n      default: \"#0000ff\",\n    },\n    borderWidth: {\n      default: \"1px\",\n    },\n  },\n};\n```\n\n```js\n// tailwind.config.js\nimport preset from './preset'\n\nexport default {\n  content: [\n    \"./index.html\",\n    \"./src/**/*.{js,ts,jsx,tsx}\",\n  ],\n  presets: [preset],\n}\n```\n\n```css\n/* output in v3 */\n.border-b-default {\n    border-bottom-width: 1px\n}\n```\n\n```css\n/* output in v4 */\n.border-b-default {\n    border-bottom-color: #00f\n}\n```\n\nFor the above example, a custom theme has the same key `default` defined for properties borderWidth and color. Then for a class `border-b-default`, it should've generated `border-bottom-width: 1px` (as it did in v3) but it generates `border-bottom-color: #00f` (in v4)\n\nv4 still seems to respect that explicitly defined properties should have higher priority ie `textColor > colors`, `fill > colors` etc. So it looks like border is the only one having this issue as `border-` is used for multiple properties like border-width, border-style and border-color.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16343","RelatedDescription":"Open issue \"Generated CSS for border-width is not consistent with v3 when importing a config with `@config` directive\" (#16343)"},{"Id":"2837979788","IsPullRequest":true,"CreatedAt":"2025-02-07T11:55:35","Actor":"philipp-spiess","Number":"16341","RawContent":null,"Title":"Add feature flag setup","State":"open","Body":"<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16341","RelatedDescription":"Open PR \"Add feature flag setup\" (#16341)"},{"Id":"2836672971","IsPullRequest":false,"CreatedAt":"2025-02-07T10:35:20","Actor":"austinwilcox","Number":"16316","RawContent":null,"Title":"Version 4.0.4 - Breaks desktop first support","State":"closed","Body":"Tailwind: 4.0.4\nBuild-tool: Vite 6.0.11\nNode: 23.5.0\nBrowser: Chrome/Brave\nOS: Windows and Linux\n\n**Describe your issue**\nWe are using an anti-pattern with our project. We have been building desktop first and this worked just fine with tailwind v3. When we upgraded to v4 all of our media breakpoints have changed. We have scoured the docs and didn't see any reference to this changing. Here is what we see with the v3 code, and here is what the v4 code is generating.\n\n## V3\nCode Snippet\n```html\n<div class=\"hidden w-full justify-center md:hidden sm:flex\">\n```\nResult in DOM\n\n![Image](https://github.com/user-attachments/assets/427de9f3-1e0c-4a1b-ac58-a6f9e76a5640)\n\n![Image](https://github.com/user-attachments/assets/0037f60f-ad36-49b8-bccc-70d40be00094)\n\n\n## V4\nCode Snippet\n```html\n<div className=\"hidden w-full justify-center md:hidden sm:flex\">\n```\nResult in DOM\n\n![Image](https://github.com/user-attachments/assets/612a668c-1b1c-425b-8650-39b1894c5460)\n\n![Image](https://github.com/user-attachments/assets/b3550384-a5ee-4872-b70f-f768963cb3f6)\n\n\nHere is relevant part of the tailwind.config.js. \n```javascript\n/** @type {import('tailwindcss').Config} */\nexport default {\n  darkMode: \"selector\",\n  content: [\"./index.html\", \"./src/**/*.{js,ts,jsx,tsx}\"],\n  theme: {\n    screens: {\n      \"2xl\": { max: \"1536px\" },\n      xl: { max: \"1280px\" },\n      lg: { max: \"1024px\" },\n      md: { max: \"900px\" },\n      sm: { max: \"600px\" },\n    }\n  },\n  plugins: [],\n}\n\n```\n\nThis worked fine in v3 and hopefully we are just missing something small and this can be fixed without us having to downgrade back to v3.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16316","RelatedDescription":"Closed issue \"Version 4.0.4 - Breaks desktop first support\" (#16316)"},{"Id":"2836872255","IsPullRequest":false,"CreatedAt":"2025-02-07T10:34:32","Actor":"LemuelKL","Number":"16320","RawContent":null,"Title":"[v4] Missing Base Styles on html and body Elements","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: Vite 6.1.0 with SvelteKit and Svelte 5\n\n**What version of Node.js are you using?**\n\nFor example: v22.9.0\n\n**What browser are you using?**\n\nFor example: Brave, Safari\n\n**What operating system are you using?**\n\nFor example: macOS\n\n**Reproduction URL**\n\nThis code shows `text-orange-600` and `text-red-600` in the html and body tag respectively does not take effect.\n\nhttps://play.tailwindcss.com/kse6I0muoR\n\n**Describe your issue**\n\nI believe Tailwind classes does not work on the html or body tag despite the [documentation](https://tailwindcss.com/docs/adding-custom-styles#adding-base-styles) saying that is possible.\n\nI discovered this when I upgraded from v3.4.4 to v4.0.3. I was originally using a custom font and has `class=\"font-xxx\"` in the `body` tag of `app.html`. The font displayed correctly in v4 while in development hot-reload mode, but not when built. Using my browser's dev tool I saw in the built version that the final css class `.font-xxx` was no where to be found.\n\nAm I missing something stupidly simple? Perhaps the support for html and body tags were dropped in v4?\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16320","RelatedDescription":"Closed issue \"[v4] Missing Base Styles on html and body Elements\" (#16320)"},{"Id":"2837282831","IsPullRequest":false,"CreatedAt":"2025-02-07T10:28:24","Actor":"lkingch310","Number":"16326","RawContent":null,"Title":"[V4] Custom Colors Not Displaying in Tailwind CSS v4 with Vite Setup","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n v4.0.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.1.0\n\n**What version of Node.js are you using?**\n\n22.13.1\n\n**What browser are you using?**\n\nChrome, Edge\n\n**What operating system are you using?**\n\nFor example:  Windows\n\n**Reproduction URL**\n\nPlayground support HTML+CSS, but not TSX\n\n**Describe your issue**\n\n### Environment: Vite + Tailwind CSS\n```bash\nnpm create vite@latest\n# (react+ts)\n\nnpm install tailwindcss @tailwindcss/vite\n```\n\n### Configuration:\n```javascript\nimport { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport tailwindcss from \"@tailwindcss/vite\";\n\n// https://vite.dev/config/\nexport default defineConfig({\n  plugins: [react(), tailwindcss()],\n  server: {\n    port: 12222\n  }\n});\n```\n\n```css\n@import \"tailwindcss\";\n\n@theme {\n  --color-primary: #0024d3;\n  --color-info: #00a9eb;\n  --color-danger: #f06473;\n}\n```\n\n### Issue:\n1. None of the custom colors are displaying. `App.tsx`\n```typescript\ninterface TextProps {\n  type: \"primary\" | \"info\" | \"danger\";\n  text: string;\n}\nconst Text: React.FC<TextProps> = ({ type, text }) => {\n  const className = `text-${type}`;\n  return <span className={className}>{text}</span>;\n};\n\nfunction App() {\n  const typeInfo = \"text-info\";\n  const typePrimary = \"primary\";\n  return (\n    <>\n      <div className=\"flex flex-col gap-2\">\n        <Text type={typePrimary} text=\"This is a primary text\" />\n        <Text type=\"info\" text=\"This is an info text\" />\n        <Text type=\"danger\" text=\"This is a danger text\" />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n```\n\n2. `info` and `danger` colors display. `App.tsx`\n```typescript\ninterface TextProps {\n  type: \"primary\" | \"info\" | \"danger\";\n  text: string;\n}\nconst Text: React.FC<TextProps> = ({ type, text }) => {\n  const className = `text-${type}`;\n  return <span className={className}>{text}</span>;\n};\n\nfunction App() {\n  const typeInfo = \"text-info\";\n  const typePrimary = \"primary\";\n  return (\n    <>\n      <div className=\"flex flex-col gap-2\">\n        <Text type={typePrimary} text=\"This is a primary text\" />\n        <Text type=\"info\" text=\"This is an info text\" />\n        <Text type=\"danger\" text=\"This is a danger text\" />\n      </div>\n\n      <div className=\"flex flex-col gap-2\">\n        <span className={`text-${typePrimary}`}>This is a primary text</span>\n        <span className={`${typeInfo}`}>This is an info text</span>\n        <span className=\"text-danger\">This is a danger text</span>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n```\n\n### Expected Result:\nAll custom colors should display correctly.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16326","RelatedDescription":"Closed issue \"[V4] Custom Colors Not Displaying in Tailwind CSS v4 with Vite Setup\" (#16326)"},{"Id":"2837745686","IsPullRequest":false,"CreatedAt":"2025-02-07T10:27:54","Actor":"khalilou88","Number":"16333","RawContent":null,"Title":"Angular can't load CSS and web font after installing tailwind 4","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nAngular cli 19\n\n**What version of Node.js are you using?**\n\n20\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\nhttps://github.com/khalilou88/angular-inter\n\n**Describe your issue**\n\nI installed `Inter`  font from npm, but It's not possible to use it with Angular + Tailwind V4. I works great with v3.\nMaybe the issue come from Angular!\n\n\n\n\n```\nX [ERROR] Could not resolve \"web/Inter-BoldItalic.woff2?v=4.0\" [plugin angular-css-resource]\n\n    src/styles.css:98:11:\n      98 │   src: url(\"web/Inter-BoldItalic.woff2?v=4.0\") format(\"woff2\");\n         ╵            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  You can mark the path \"web/Inter-BoldItalic.woff2?v=4.0\" as external to exclude it from the bundle, which will remove this error and leave the unresolved path in the bundle.\n\n```\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16333","RelatedDescription":"Closed issue \"Angular can't load CSS and web font after installing tailwind 4\" (#16333)"},{"Id":"2837150241","IsPullRequest":false,"CreatedAt":"2025-02-07T03:32:09","Actor":"unional","Number":"16324","RawContent":null,"Title":"layer theme generates duplicate nesting style","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\n4.0.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\ntailwind cli\n\n**What version of Node.js are you using?**\n\nv20.0.0\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/7u9dOQWA3C?file=css\n\n**Describe your issue**\n\nThe theme in the Play link will generate style like this:\n\n```css\n@layer theme {\n  @layer theme {\n    * {\n      &:where(.tw-dark, .tw-dark *) {\n        &:where(.tw-dark, .tw-dark *) {\n          --tw-color-primary: ...;\n        }\n      }\n    }\n  }\n}\n```\n\nref: https://github.com/tailwindlabs/tailwindcss/discussions/16313","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16324","RelatedDescription":"Open issue \"layer theme generates duplicate nesting style\" (#16324)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-02-10T03:30:22.4661429Z","RunDurationInMilliseconds":389}