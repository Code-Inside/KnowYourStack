{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2212270445","IsPullRequest":true,"CreatedAt":"2024-03-28T03:22:08","Actor":"KrisBraun","Number":"13387","RawContent":null,"Title":"Source maps","State":"open","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13387","RelatedDescription":"Open PR \"Source maps\" (#13387)"},{"Id":"2211592926","IsPullRequest":false,"CreatedAt":"2024-03-27T19:52:01","Actor":"nodegin","Number":"13383","RawContent":null,"Title":"3.4.2 introduced breaking change with PR #12715","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n3.4.2\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nPostCSS 8.4.35 Vite 5.1.5\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv21.6.2\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nSorry I don't have reproduction as the repo is my company private repo.\r\n\r\n**Describe your issue**\r\n\r\nhttps://github.com/tailwindlabs/tailwindcss/commit/f2a7c2c4532b76d61351f1ca7e26ec8c93729b5d#diff-e52d7cbb53c2deb88bfe15cfc210a387853cf9f243172b6e2844bb88bc9743a3R115\r\n\r\nIn this change, a regex replace was added to manipulate the file path.\r\nAfter some research, I found this regex will try to add backslash to parentheses.\r\n```\r\n    // Escape special characters in the file path such as: ()[]\r\n    // But only if the special character isn't already escaped\r\n    console.log(\"filePath before\", filePath);\r\n    filePath = filePath.replace(/(?<!\\\\)([\\[\\]\\(\\)])/g, \"\\\\$1\");\r\n    console.log(\"filePath after\", filePath);\r\n\r\n# console log below\r\nfilePath before /Users/user/Desktop/project/apps/web/src/**/*!(*.stories|*.spec).tsx\r\nfilePath after /Users/user/Desktop/project/apps/web/src/**/*!\\(*.stories|*.spec\\).tsx\r\n```\r\n\r\nHowever this line breaks my entire project, I am getting this error:\r\n\r\n<img width=\"1225\" alt=\"2024-03-28 3 29 30\" src=\"https://github.com/tailwindlabs/tailwindcss/assets/8536244/9724e59d-e573-4bf2-9654-95e9e6d186e8\">\r\n\r\nBy commenting this line, I don't get any warning anymore and my styles can be processed now.\r\n\r\n<img width=\"646\" alt=\"2024-03-28 3 32 21\" src=\"https://github.com/tailwindlabs/tailwindcss/assets/8536244/f66d408c-1c27-4b6b-8a5a-9a47bacec706\">\r\n\r\n<img width=\"501\" alt=\"2024-03-28 3 32 44\" src=\"https://github.com/tailwindlabs/tailwindcss/assets/8536244/55abe6a8-57c3-4fd0-988f-983011626156\">\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13383","RelatedDescription":"Closed issue \"3.4.2 introduced breaking change with PR #12715\" (#13383)"},{"Id":"2211683958","IsPullRequest":true,"CreatedAt":"2024-03-27T19:16:52","Actor":"thecrypticace","Number":"13384","RawContent":null,"Title":"Revert changes to glob handling","State":"closed","Body":"This reverts PR #12715 which has introduced unintentional breakages when handling glob patterns.\r\n\r\nFixes #13383","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13384","RelatedDescription":"Closed or merged PR \"Revert changes to glob handling\" (#13384)"},{"Id":"2209374567","IsPullRequest":false,"CreatedAt":"2024-03-27T17:53:58","Actor":"JesseKoldewijn","Number":"13367","RawContent":null,"Title":"[v4]: variable-based classes only seem to use initial value, and not the theme values","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n`v4.0.0-alpha.10`\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\n`Vite (Remix)`\r\n\r\n> I dont expect the remix part of my setup is related to the issue at hand. But you never know.\r\n\r\n**What version of Node.js are you using?**\r\n\r\n`v20.11.1`\r\n\r\n**What browser are you using?**\r\n\r\n`Chrome (latest), Brave (latest), Firefox (latest)`\r\n\r\n> Latest version of the browsers mentioned above, recorded at 03/16/14\r\n\r\n**What operating system are you using?**\r\n\r\n`Arch, Ubuntu, Win11`\r\n\r\n> Tested on a Win11 host, Ubuntu (WSL) and an Arch linux host.\r\n\r\n**Reproduction URL**\r\n\r\n[Tw3 Alpha Remix](https://github.com/JesseKoldewijn/Tw4-Alpha-Remix)\r\n\r\n**Describe your issue**\r\n\r\nMy setup was inspired by the following post by @adamwathan [X/Twitter post] (sorry for the ping, doing so because the code at hand used your post as example) (https://x.com/adamwathan/status/1770979061721919598?s=20) where as far as I can see, everything should work in theory. But right now the oxide engine (I expect this part of the alpha version is related to the issue at hand) doesnt seem to handle the themes as expected. \r\n\r\nI want to add, I might be doing something wrong in this setup so if there's anything from my end not used or setup correctly, feel free to mention! ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13367","RelatedDescription":"Closed issue \"[v4]: variable-based classes only seem to use initial value, and not the theme values\" (#13367)"},{"Id":"2211329664","IsPullRequest":true,"CreatedAt":"2024-03-27T17:32:11","Actor":"thecrypticace","Number":"13382","RawContent":null,"Title":"Prepare next release: `4.0.0-alpha.11`","State":"closed","Body":"This PR prepares for the next alpha release: `4.0.0-alpha.11`","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13382","RelatedDescription":"Closed or merged PR \"Prepare next release: `4.0.0-alpha.11`\" (#13382)"},{"Id":"2211319743","IsPullRequest":true,"CreatedAt":"2024-03-27T17:04:32","Actor":"KrisBraun","Number":"13381","RawContent":null,"Title":"Changelog for #13380 (Vite serve fix)","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13381","RelatedDescription":"Closed or merged PR \"Changelog for #13380 (Vite serve fix)\" (#13381)"},{"Id":"2211190568","IsPullRequest":true,"CreatedAt":"2024-03-27T16:31:54","Actor":"KrisBraun","Number":"13380","RawContent":null,"Title":"Fix Vite serve issues","State":"closed","Body":"Fix Vite hanging in Remix builds by temporarily disabling use of the Vite `waitForReuestsIdle` (#13291) feature. This will cause multiple Tailwind CSS generations in some requests, especially the initial one. This might be visible as a FOUC, but the builds happen so quickly it may not be noticeable. This only affects dev server mode.\r\n\r\nA second fix addresses an issue introduced in https://github.com/tailwindlabs/tailwindcss/pull/13218 (unreleased). The `vite:css-post` plugin was being double-applied in serve mode.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13380","RelatedDescription":"Closed or merged PR \"Fix Vite serve issues\" (#13380)"},{"Id":"2209546856","IsPullRequest":false,"CreatedAt":"2024-03-27T15:10:57","Actor":"nekinie","Number":"13368","RawContent":null,"Title":"The '--output' option returns usage information","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\nv4.0.0-alpha.10\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\nBazel 7.1.0\r\n\r\n**What version of Node.js are you using?**\r\n20.11.1\r\n\r\n**What browser are you using?**\r\nN/A\r\n\r\n**What operating system are you using?**\r\nLinux\r\n\r\n**Reproduction URL**\r\nN/A\r\n\r\n**Describe your issue**\r\nIf you run the Tailwind CLI using the '--output' flag referenced in the CLI's usage information, the CLI will show the usage information instead of generatnig the desired CSS. This appears to be due to a guard only checking for the '-o' option.\r\n\r\nhttps://github.com/tailwindlabs/tailwindcss/blob/99c4afd9cd0e9414981b31321e83c5e2d5b0544b/packages/%40tailwindcss-cli/src/index.ts#L36\r\n\r\nMinor but confused me for a little while :)\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13368","RelatedDescription":"Closed issue \"The '--output' option returns usage information\" (#13368)"},{"Id":"2209557760","IsPullRequest":true,"CreatedAt":"2024-03-27T15:10:56","Actor":"RobinMalfait","Number":"13369","RawContent":null,"Title":"Ensure `build` command is executed when using `--output` instead of `-o`","State":"closed","Body":"This PR fixes a bug in the `@tailwindcss/cli` if you run `tailwindcss --output output.css` then the help text is shown instead of running tailwindcss itself. \n\nThis is because we want to show the `--help` if you run the CLI with not enough information. However, we only checked for `-o` and not `--output`. This PR fixes that.\n\nFixes: #13368\n\n<!--\n\nðŸ‘‹ Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13369","RelatedDescription":"Closed or merged PR \"Ensure `build` command is executed when using `--output` instead of `-o`\" (#13369)"},{"Id":"2210924357","IsPullRequest":true,"CreatedAt":"2024-03-27T15:03:49","Actor":"thecrypticace","Number":"13379","RawContent":null,"Title":"Change dark selector so `@apply` works correctly with pseudo elements","State":"closed","Body":"When using the `class` strategy the dark mode selector is `:is(.dark &)`. However, our code that handles hoisting pseudo elements outside of `:is(â€¦)` doesn't handle this properly when using `@apply`.\r\n\r\nGiven the following code:\r\n```css\r\n::-webkit-scrollbar-track {\r\n  @apply dark:bg-black;\r\n}\r\n```\r\n\r\nYou would end up with something like this:\r\n```css\r\n:is(.dark )::-webkit-scrollbar-track {\r\n  --tw-bg-opacity: 1;\r\n  background-color: rgb(0 0 0 / var(--tw-bg-opacity));\r\n}\r\n```\r\n\r\nThe selector above is is equivalent to `.dark::-webkit-scrollbar-track` which is incorrect. We want a selector that is equivalent to `.dark ::-webkit-scrollbar-track`.\r\n\r\nThis PR changes the selector we define for dark mode to `&:is(.dark *)`. This is functionally equivalent to the previous selector and means we don't have to make any fixes inside `@apply`'s selector handling. As a result you'll end up with this CSS:\r\n```css\r\n:is(.dark *)::-webkit-scrollbar-track {\r\n  --tw-bg-opacity: 1;\r\n  background-color: rgb(0 0 0 / var(--tw-bg-opacity));\r\n}\r\n```\r\n\r\nWhich is equivalent to `.dark ::-webkit-scrollbar-track` and thus works as expected.\r\n\r\nFixes #13037\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13379","RelatedDescription":"Closed or merged PR \"Change dark selector so `@apply` works correctly with pseudo elements\" (#13379)"},{"Id":"2210293617","IsPullRequest":false,"CreatedAt":"2024-03-27T14:35:30","Actor":"SeraphCoding","Number":"13374","RawContent":null,"Title":"\"@apply dark:\" classes do not work on \":host\" selectors in Angular scss files when \"darkMode\" strategy is set to \"selector\"","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n3.4.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\nAngular 17.3.0 (and upwards)\r\n\r\n**What version of Node.js are you using?**\r\n20.12.0\r\n\r\n**What browser are you using?**\r\nChrome\r\n\r\n**What operating system are you using?**\r\nWindows\r\n\r\n**Reproduction URL**\r\nhttps://github.com/SeraphCoding/hostApplyDarkDoesNotWork\r\n\r\n**Describe your issue**\r\nUsing `dark:` classes in a components scss file will not work when using `@apply` on the `:host` element, while using `darkMode: \"selector\"`. It does work however when using the default approach utilizing media queries. Classes without `dark:` will work. \r\n\r\nIn the example below the background for `my-component` will not turn blue, if the `<html>` element has the class `dark`.\r\n\r\nExample SCSS file for `my-component.component.scss`\r\n```scss\r\n:host {\r\n   @apply dark:bg-blue-500;\r\n}\r\n```\r\napp.component.html\r\n```html\r\n<app-my-component />\r\n```\r\n\r\ntw config \r\n```js\r\n/** @type {import('tailwindcss').Config} */\r\nmodule.exports = {\r\n  darkMode: \"selector\",\r\n  content: [\r\n    \"./src/**/*.{html,ts}\",\r\n  ],\r\n  theme: {\r\n    extend: {},\r\n  },\r\n  plugins: [],\r\n}\r\n```\r\n\r\n**Workaround**:\r\nThe workaround is to apply the \"dark:\" class on the component in its implementation. \r\n\r\nSo if I have a `my-component.component.ts` and I implement it in my `app.component.html` - I can work around this issue by applying the dark class here like so:\r\n\r\n```html\r\n<app-my-component class=\"dark:bg-blue-500\" />\r\n```\r\n\r\nThis does however force me to keep reusing classes, that I want this component to apply on it's host element automatically.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13374","RelatedDescription":"Closed issue \"\"@apply dark:\" classes do not work on \":host\" selectors in Angular scss files when \"darkMode\" strategy is set to \"selector\"\" (#13374)"},{"Id":"2210774738","IsPullRequest":false,"CreatedAt":"2024-03-27T13:34:40","Actor":"mybearworld","Number":"13377","RawContent":null,"Title":"`<input>`s, `<button>`s, etc don't inherit letter spacing","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nFor example: v3.4.0\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nPostCSS 8.4.32, also Vite 5.0.12\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv18.16.0\r\n\r\n**What browser are you using?**\r\n\r\nEdge\r\n\r\n**What operating system are you using?**\r\n\r\nWindows\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/IBKvBYzX9U\r\n\r\n**Describe your issue**\r\n\r\n`<input>`s, `<button>`s and other elements setting their own font don't get their `letter-spacing` property reset, so they don't inherit it from the parent.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13377","RelatedDescription":"Closed issue \"`<input>`s, `<button>`s, etc don't inherit letter spacing\" (#13377)"},{"Id":"2210800074","IsPullRequest":false,"CreatedAt":"2024-03-27T13:30:36","Actor":"devcaeg","Number":"13378","RawContent":null,"Title":"[v4] TailwindCSS error in Vite: i?.waitForRequestsIdle is not a function","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\nv.next\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\nvite (v5.1.6), @builder.io/qwik (v1.5.1), @builder.io/qwik-city (v1.5.1), @tailwindcss/vite (v.next)\r\n\r\n**What version of Node.js are you using?**\r\nv21.7.1\r\n\r\n**What browser are you using?**\r\nChrome, Safari, Edge\r\n\r\n**What operating system are you using?**\r\nmacOS\r\n\r\n**Describe your issue**\r\n\r\nI'm using the \"next\" version of TailwindCSS since v4 was announced, everything was working relatively well (some bugs or missing styles) but in less than 24 hours there was some change that doesn't let me start the project.\r\n\r\n<img width=\"1470\" alt=\"Captura de pantalla 2024-03-27 a la(s) 9 46 06â€¯a Â m\" src=\"https://github.com/tailwindlabs/tailwindcss/assets/115333735/5b908b40-d3d1-4918-ac9e-4625d2ad77e3\">","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13378","RelatedDescription":"Closed issue \"[v4] TailwindCSS error in Vite: i?.waitForRequestsIdle is not a function\" (#13378)"},{"Id":"2210190104","IsPullRequest":false,"CreatedAt":"2024-03-27T10:02:52","Actor":"MikeLee0358","Number":"13373","RawContent":null,"Title":"ring-offset-color opacity will mix with ring-color, result is not as expected","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.4.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\ntailwind play, code pen\r\n\r\n**What version of Node.js are you using?**\r\n\r\nnone\r\n\r\n**What browser are you using?**\r\n\r\nFirefox\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\ntailwind play: https://play.tailwindcss.com/r0O6WPI4AA\r\n\r\ncode pen(expected like this): https://codepen.io/michaelee1/pen/abxNWRa?editors=1111\r\n\r\n**Describe your issue**\r\nIn double rings (ring-red + ring-offset-blue) situation, setting ring-offset-blue  to be opacity will get purple(blue + red), not as I expected blue-opacity.\r\n\r\nif I understand document v3.4.1 correctly, ring-offset-* is built on top of ring-*, if it's true, I got confused and want to know ideas behind:\r\n\r\n\r\n// copy from tailwind play\r\n.ring-8 {\r\n  --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);\r\n  --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(8px + var(--tw-ring-offset-width)) var(--tw-ring-color);\r\n  box-shadow: var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow, 0 0 #0000);\r\n}\r\n\r\n1. box-shadow: should be like \r\n   box-shadow: var(--tw-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-shadow, 0 0 #0000);\r\n    1 .ring-* 2. ring-offset-* and ring-* will override ring-offset-*, this will ensure color will not be mixed when set opacity\r\n    \r\n 2. I read box-shadow mdn according to syntax the forth is \"spread-radius\", I know tailwindcss implement  it with --tw-ring-offset,   this will lead confused with first & second  parameters \"offset-x\" \"offset-y\", personal suggestion: \"offset\" change to \"spread\" is more intuition.\r\n \r\nit will be like this:\r\n\r\n.ring-offset-8   -> .ring-spread-8\r\n--tw-ring-offset-color -> --tw-ring-spread-color\r\n\r\nif my word is hard to understand, check out code pen : - )\r\n\r\n\r\nI am study in tailwind, and rewrite 3 times for practice, only ring/ring-offset let me confused when I read mdn, otherwise I learn a lot from tailwindcss, thank for you all, awesome job!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13373","RelatedDescription":"Closed issue \"ring-offset-color opacity will mix with ring-color, result is not as expected\" (#13373)"},{"Id":"2206276654","IsPullRequest":false,"CreatedAt":"2024-03-26T10:43:16","Actor":"benface","Number":"13351","RawContent":null,"Title":"`important` option doesn't affect arbitrary properties","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nFor example: v3.4.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nTailwind Play\r\n\r\n**What version of Node.js are you using?**\r\n\r\nTailwind Play\r\n\r\n**What browser are you using?**\r\n\r\nSafari\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/ZnkOJe6wYV\r\n\r\n**Describe your issue**\r\n\r\nIn the reproduction, notice that because of the `important: ':root'` option, `[animation-duration:5s]` doesn't override the duration from `animate-spin`. That is because its generated CSS is:\r\n\r\n```css\r\n.\\[animation-duration\\:5s\\]{\r\n  animation-duration: 5s\r\n}\r\n```\r\n\r\ninstead of the expected:\r\n\r\n```css\r\n:root :is(.\\[animation-duration\\:5s\\]){\r\n  animation-duration: 5s\r\n}\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13351","RelatedDescription":"Closed issue \"`important` option doesn't affect arbitrary properties\" (#13351)"},{"Id":"2206464005","IsPullRequest":true,"CreatedAt":"2024-03-26T10:42:41","Actor":"RobinMalfait","Number":"13353","RawContent":null,"Title":"Ensure that arbitrary properties respect `important` configuration","State":"closed","Body":"This PR fixes an issue where the important configuration was not respected for arbitrary properties.\r\n\r\nIf you have `important: \"#app\"` in your configuration, then we expect the following CSS for an arbitrary property like `[color:red]`:\r\n\r\n```css\r\n#app .\\[color\\:red\\] {\r\n  color: red;\r\n}\r\n```\r\n\r\nBut before this fix, the generated CSS looked like this instead:\r\n\r\n```css\r\n.\\[color\\:red\\] {\r\n  color: red;\r\n}\r\n```\r\n\r\nFixes: #13351\r\n<!--\r\n\r\nðŸ‘‹ Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13353","RelatedDescription":"Closed or merged PR \"Ensure that arbitrary properties respect `important` configuration\" (#13353)"},{"Id":"2206928514","IsPullRequest":false,"CreatedAt":"2024-03-25T23:41:40","Actor":"MikeLee0358","Number":"13358","RawContent":null,"Title":"shadow-2xl does't work","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nFor example: v3.4.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\ntailwind play\r\n\r\n**What browser are you using?**\r\n\r\nFIreFox\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/qXOsfwOUeg\r\n\r\n**Describe your issue**\r\n\r\nI try to play with shadow, with button add \"bg-green-500 shadow-2xl shadow-red-500\" class\r\n\r\ndoesn't get any shadow, but I use shadow sm/md/lg/xl works!  it's weird.. am I used wrong?  thanks. <3\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13358","RelatedDescription":"Closed issue \"shadow-2xl does't work\" (#13358)"},{"Id":"2206792613","IsPullRequest":false,"CreatedAt":"2024-03-25T22:02:28","Actor":"Steffan153","Number":"13356","RawContent":null,"Title":"[v4] `i?.waitForRequestsIdle is not a function`","State":"closed","Body":"After upgrading to alpha.10:\r\n\r\n```\r\n15:55:14 [ERROR] i?.waitForRequestsIdle is not a function. (In 'i?.waitForRequestsIdle(t)', 'i?.waitForRequestsIdle' is undefined)\r\n  Stack trace:\r\n    at <anonymous> (/[...]/node_modules/@tailwindcss/vite/dist/index.mjs:0:1353)\r\n    [...] See full stack trace in the browser, or rerun with --verbose.\r\n```\r\n\r\n`await server?.waitForRequestsIdle?.(id)` fixes it:\r\nhttps://github.com/tailwindlabs/tailwindcss/blob/85c3b2b6a208bead416bcb0b785aa3b2f6f554a8/packages/%40tailwindcss-vite/src/index.ts#L128","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13356","RelatedDescription":"Closed issue \"[v4] `i?.waitForRequestsIdle is not a function`\" (#13356)"},{"Id":"2205593025","IsPullRequest":true,"CreatedAt":"2024-03-25T19:49:15","Actor":"RobinMalfait","Number":"13348","RawContent":null,"Title":"Update comments in the CSS parser","State":"closed","Body":"This PR updates some comments in the CSS parser to make them more accurate about what's going on in the code.\n\nFixes: #13344\n<!--\n\nðŸ‘‹ Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13348","RelatedDescription":"Closed or merged PR \"Update comments in the CSS parser\" (#13348)"},{"Id":"2204628298","IsPullRequest":false,"CreatedAt":"2024-03-25T19:49:15","Actor":"allain","Number":"13344","RawContent":null,"Title":"comment on \"start of block\" is confused","State":"closed","Body":"Comment on that line says that it appends the current node to the stack but it appends the parent to the stack. Which one is it?\r\n\r\nhttps://github.com/tailwindlabs/tailwindcss/blob/19c8fe34fd04e0bbce844c46ce53326f56f28f53/packages/tailwindcss/src/css-parser.ts#L308","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13344","RelatedDescription":"Closed issue \"comment on \"start of block\" is confused\" (#13344)"},{"Id":"2205663709","IsPullRequest":true,"CreatedAt":"2024-03-25T12:42:27","Actor":"RobinMalfait","Number":"13349","RawContent":null,"Title":"Collect user-defined CSS that can be used in `@apply`","State":"open","Body":"This allows you to apply user-defined CSS inside of `@apply`. It works a tiny bit different compared to v3 because we only allow you to apply simple selectors. Only a single class can be applied such as a `.foo {}`.\r\n\r\nIf you want more complex selectors, then you can use nesting to enhance the definition of what `.foo` means exactly.\r\n\r\nImplementing it this way allows us to keep the codebase simple and keep expectations simple. \r\n\r\nIn v3 you can do crazy things such as:\r\n\r\n```css\r\n.foo .bar .baz {\r\n  color: red;\r\n}\r\n```\r\n\r\nAnd you can apply `@apply foo` or `@apply bar` or `@apply baz`, but that's not intuitive if you look at the final result.\r\n\r\nThis PR also ensures that you can't apply classes that would result in circular dependencies.\r\n\r\nWhat this PR is not:\r\n\r\nThis PR does not make custom classes \"utilities\" or \"components\". This means that you won't be able to do this:\r\n\r\n```css\r\n.foo {\r\n  color: red;\r\n}\r\n\r\n.example {\r\n  @apply hover:foo;\r\n  /*     ----- You will not be able to add variant modifiers to `.foo` */\r\n}\r\n```\r\n\r\nFixes: #13342\r\n<!--\r\n\r\nðŸ‘‹ Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13349","RelatedDescription":"Open PR \"Collect user-defined CSS that can be used in `@apply`\" (#13349)"},{"Id":"2204603919","IsPullRequest":false,"CreatedAt":"2024-03-24T23:02:09","Actor":"nam-co","Number":"13342","RawContent":null,"Title":"[v4] @apply previous custom classes error","State":"open","Body":"Just a remember that this works on v3.x but as of v4 alpha 10 it stills doesn't work, it gets the error: \"Cannot apply unknown utility class: btn\"\r\n\r\n.btn {\r\n @apply py-2 px-3;\r\n}\r\n.btn-red {\r\n @apply btn bg-red-600;\r\n }\r\n\r\nAppreciate any guidance","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13342","RelatedDescription":"Open issue \"[v4] @apply previous custom classes error\" (#13342)"},{"Id":"2204453198","IsPullRequest":false,"CreatedAt":"2024-03-24T22:24:12","Actor":"leandergangso","Number":"13340","RawContent":null,"Title":"Reached heap limit Allocation failed","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.4.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nRunning `npx tailwindcss -i ... -o ... --watch`\r\n\r\n**What version of Node.js are you using?**\r\n\r\nNot using\r\n\r\n**What browser are you using?**\r\n\r\nFirefox\r\n\r\n**What operating system are you using?**\r\n\r\nLinux Fedora Workstation\r\n\r\n**Reproduction URL**\r\n\r\nNot quite sure how to, but it seem to be related to how often/quick i save and make css changes that trigger the rebuild. It also has to do with time, as it only happens after a while of actively developing and changing html/css.\r\n\r\n**Describe your issue**\r\n\r\nHave a pretty basic setup with html,js,css and just running tailwind with `npx tailwindcss --watch`, then after it has ran for a bit and under normal development behavior, I get the following error:\r\n\r\n```bash\r\nRebuilding...\r\n\r\nDone in 714ms.\r\n\r\nRebuilding...\r\n\r\nDone in 16ms.\r\n\r\nRebuilding...\r\n\r\nDone in 21ms.\r\n\r\n<--- Last few GCs --->\r\n\r\n[73346:0x5567089594f0]   861811 ms: Scavenge 4057.9 (4141.1) -> 4057.2 (4141.1) MB, 5.4 / 0.0 ms  (average mu = 0.332, current mu = 0.005) allocation failure; \r\n[73346:0x5567089594f0]   861815 ms: Scavenge 4057.9 (4141.1) -> 4057.4 (4143.6) MB, 4.1 / 0.0 ms  (average mu = 0.332, current mu = 0.005) allocation failure; \r\n[73346:0x5567089594f0]   862604 ms: Mark-sweep 4059.2 (4143.6) -> 4057.8 (4144.1) MB, 786.9 / 0.0 ms  (average mu = 0.251, current mu = 0.025) allocation failure; scavenge might not succeed\r\n\r\n\r\n<--- JS stacktrace --->\r\n\r\nFATAL ERROR: Reached heap limit Allocation failed - JavaScript heap out of memory\r\n 1: 0x7f262d01657c node::Abort() [/lib64/libnode.so.108]\r\n 2: 0x7f262cf01d1b  [/lib64/libnode.so.108]\r\n 3: 0x7f262e31a504 v8::Utils::ReportOOMFailure(v8::internal::Isolate*, char const*, bool) [/lib64/libnode.so.108]\r\n 4: 0x7f262e31a8f8 v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate*, char const*, bool) [/lib64/libnode.so.108]\r\n 5: 0x7f262e4f9309  [/lib64/libnode.so.108]\r\n 6: 0x7f262e5118d9 v8::internal::Heap::CollectGarbage(v8::internal::AllocationSpace, v8::internal::GarbageCollectionReason, v8::GCCallbackFlags) [/lib64/libnode.so.108]\r\n 7: 0x7f262e4ebc8a v8::internal::HeapAllocator::AllocateRawWithLightRetrySlowPath(int, v8::internal::AllocationType, v8::internal::AllocationOrigin, v8::internal::AllocationAlignment) [/lib64/libnode.so.108]\r\n 8: 0x7f262e4ecda8 v8::internal::HeapAllocator::AllocateRawWithRetryOrFailSlowPath(int, v8::internal::AllocationType, v8::internal::AllocationOrigin, v8::internal::AllocationAlignment) [/lib64/libnode.so.108]\r\n 9: 0x7f262e4d0335 v8::internal::Factory::NewFillerObject(int, v8::internal::AllocationAlignment, v8::internal::AllocationType, v8::internal::AllocationOrigin) [/lib64/libnode.so.108]\r\n10: 0x7f262e8f5b7f v8::internal::Runtime_AllocateInYoungGeneration(int, unsigned long*, v8::internal::Isolate*) [/lib64/libnode.so.108]\r\n11: 0x7f262e20b279  [/lib64/libnode.so.108]\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13340","RelatedDescription":"Closed issue \"Reached heap limit Allocation failed\" (#13340)"},{"Id":"2203918156","IsPullRequest":true,"CreatedAt":"2024-03-23T15:16:40","Actor":"RobinMalfait","Number":"13335","RawContent":null,"Title":"Remove unused Rust benchmarks","State":"closed","Body":"This PR cleans up unused benchmarks and fixture files in the repository.\n\nWe currently don't use these, and they are tested via the benchmarks we run as an end-to-end benchmark.\n\n<!--\n\nðŸ‘‹ Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13335","RelatedDescription":"Closed or merged PR \"Remove unused Rust benchmarks\" (#13335)"},{"Id":"2203556552","IsPullRequest":true,"CreatedAt":"2024-03-23T13:00:48","Actor":"RobinMalfait","Number":"13333","RawContent":null,"Title":"Hoist `oxide/crates` to just `crates`","State":"closed","Body":"This PR hoists the contents of the `oxide` folder to the top level of the repository. This way there is no additional layer and the `crates` and `packages` are all in the top-level.\r\n\r\nThis PR also renames `crates/core` (and thus `tailwindcss-core` and `tailwindcss_core`) to `crates/oxide` (and thus `tailwindcss-oxide` and `tailwindcss_oxide`)\r\n  \r\n<!--\r\n\r\nðŸ‘‹ Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13333","RelatedDescription":"Closed or merged PR \"Hoist `oxide/crates` to just `crates`\" (#13333)"},{"Id":"2203636280","IsPullRequest":true,"CreatedAt":"2024-03-23T09:35:03","Actor":"allain","Number":"13334","RawContent":null,"Title":"Remove leading space in `box-shadow`'s `addDefaults` call","State":"closed","Body":"It's probably not an issue but it might cause some deep bugs when looking up the defaults by name. I tried to trace it down to see if there's some cleanup going on to remove it but got lost on the way to grandma's house.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13334","RelatedDescription":"Closed or merged PR \"Remove leading space in `box-shadow`'s `addDefaults` call\" (#13334)"},{"Id":"2203134618","IsPullRequest":true,"CreatedAt":"2024-03-22T20:01:39","Actor":"thecrypticace","Number":"13328","RawContent":null,"Title":"Inherit letter spacing in form controls","State":"closed","Body":"(Same as #13150 but for v4)\r\n\r\nSome browsers set `letter-spacing: normal` for form elements. This PR inherits `letter-spacing` styles for consistency since we also inherit other font attributes like family, style, line-height, etcâ€¦\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13328","RelatedDescription":"Closed or merged PR \"Inherit letter spacing in form controls\" (#13328)"},{"Id":"2203204494","IsPullRequest":true,"CreatedAt":"2024-03-22T20:00:07","Actor":"adamwathan","Number":"13331","RawContent":null,"Title":"Include `:popover-open` in `open` variant","State":"closed","Body":"Inspired by https://github.com/tailwindlabs/tailwindcss/pull/12148.\r\n\r\nThis PR extends the existing `open` variant to target `:popover-open` as well as the `[open]` attribute.\r\n\r\nThis was suggested by @una that I thought was really clever because there's no situation where you actually need to differentiate between these states on the same element (dialogs use `[open]`, popovers use `:popover-open`, nothing uses both) and it keeps the name nice and short.\r\n\r\nSince `:is` accepts a forgiving selector list, this is safe to do without worrying about browser support for `:popover-open` impacting people who are using this for dialogs.\r\n\r\nIf someone ever needed an escape hatch here where they really specifically only wanted to target `:popover-open` or `[open]`, they can always use an arbitrary variant:\r\n\r\n```html\r\n<div class=\"[&:popover-open]:opacity-100\">\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13331","RelatedDescription":"Closed or merged PR \"Include `:popover-open` in `open` variant\" (#13331)"},{"Id":"2203142807","IsPullRequest":true,"CreatedAt":"2024-03-22T19:38:06","Actor":"adamwathan","Number":"13329","RawContent":null,"Title":"Add variant for @starting-style","State":"closed","Body":"Based on https://github.com/tailwindlabs/tailwindcss/pull/12040.\r\n\r\nAdds a new `starting:*` variant for the [`@starting-style` at-rule](https://developer.mozilla.org/en-US/docs/Web/CSS/@starting-style).\r\n\r\nReally simple, only real decision here was where to put it in the sort order. Decided to put it after `dark` because it feels like a very \"important\" state that should take precedence over most other things. Open to any convincing arguments for putting it anywhere else though.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13329","RelatedDescription":"Closed or merged PR \"Add variant for @starting-style\" (#13329)"},{"Id":"2203095682","IsPullRequest":true,"CreatedAt":"2024-03-22T18:49:46","Actor":"RobinMalfait","Number":"13327","RawContent":null,"Title":"Fix incorrect syntax for `translate-z`'s `@property` definition","State":"closed","Body":"This PR is a continuation of #13321. This used to be `<length-percentage>`, but we dropped percentage support because it's not valid in #13321 and I forgot about this one.\n\n<!--\n\nðŸ‘‹ Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13327","RelatedDescription":"Closed or merged PR \"Fix incorrect syntax for `translate-z`'s `@property` definition\" (#13327)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-03-28T03:30:19.2022908Z","RunDurationInMilliseconds":391}