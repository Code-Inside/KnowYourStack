{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2908559850","IsPullRequest":false,"CreatedAt":"2025-03-10T22:25:44","Actor":"tianyinggang","Number":"17117","RawContent":null,"Title":"Missing Utility Classes (\"bg-bglight\" and \"w-3\") When Using @apply in Global CSS","State":"open","Body":"**What version of Tailwind CSS are you using?**  \nFor example: v3.2.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**  \nFor example: Next.js 15.2.1\n\n**What version of Node.js are you using?**  \nFor example: v20.0.0\n\n**What browser are you using?**  \nFor example: Chrome\n\n**What operating system are you using?**  \nFor example: macOS\n\n**Reproduction URL:**  \nPlease refer to this minimal reproduction: [Link to a minimal GitHub repo or Tailwind Play reproduction](#)  \n*(Note: Replace the placeholder with your actual reproduction URL. Make sure the reproduction is isolated from your main project.)*\n\n**Describe your issue:**  \nI am experiencing a build error when using the `@apply` directive in my global CSS file. In my Tailwind configuration (`tailwind.config.js`), I have extended the theme with custom colors and I expect utility classes like `bg-bglight` to be generated automatically. However, when I use `@apply bg-bglight;` in my global CSS file, I get the following error during build:\n\n```\nError: Cannot apply unknown utility class: bg-bglight\n```\n\nAdditionally, a default utility class like `w-3` is also not recognized in a similar scenario. My `tailwind.config.js` includes the following relevant configuration:\n\nThis is tailwind.config.js：\n```js\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n    darkMode: 'class',\n    content: [\n      \"./src/**/*.{js,ts,jsx,tsx,mdx}\",\n      \"./src/**/*.{css}\"\n    ],\n    theme: {\n      screens: {\n        xs: '480px',\n        sm: '640px',\n        md: '768px',\n        lg: '1024px',\n        xl: '1440px',\n      },\n      fontFamily: {\n        sans: [\"var(--font-jost)\", \"sans-serif\"], // 匹配 Jost 的 CSS 变量\n      },     \n      extend: {\n        colors: {\n          // 基础背景色\n          bglight: \"#F6F6F6\", // 浅灰 backgroundLight\n          bgdark: \"#000000\",  // 纯黑 backgroundDark\n  \n          // 品牌主色系\n          brandAccentLight: \"#00739d\", // 辅助蓝\n          brandPrimary: \"#006DAE\",     // Monash 主蓝\n          brandAccentDark: \"#3c3c3c\",  // 深灰\n  \n          // 卡片系统\n          cardlight: \"#FFFFFF\", // 纯白\n          carddark: \"#505050\",  // 中灰\n  \n          // 功能色\n          functionalLight: \"#F6F6F6\",     // 浅灰\n          functionalAccent: \"#00739d\",    // 辅助蓝\n          functionalAccentDark: \"#3c3c3c\", // 深灰\n  \n          // 文字系统\n          textPrimary: \"#3c3c3c\",  // 深灰\n          textlight: \"#F6F6F6\", // 浅灰\n        },\n      },\n    },\n    plugins: [\n      require(\"@tailwindcss/typography\"),\n      require(\"@tailwindcss/forms\"),\n    ],\n  };\n  \n```\nThis is src/app/globals.css：\n```css\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  html {\n    @apply scroll-smooth overflow-y-scroll;\n  }\n\n  /* ===== 自定义滚动条 ===== */\n  /* 宽度 */\n  ::-webkit-scrollbar {\n    @apply w-[8rem]; /* 确保这个类存在 */\n  }\n\n  /* 轨道 */\n  ::-webkit-scrollbar-track {\n    @apply bg-bglight dark:bg-bgdark;\n  }\n\n  /* 滑块 */\n  ::-webkit-scrollbar-thumb {\n    @apply bg-[#d5d5d5] dark:bg-cardDark;\n  }\n\n  /* 滑块悬停 */\n  ::-webkit-scrollbar-thumb:hover {\n    @apply bg-[#b7b7b7] dark:bg-[#17222b];\n  }\n}\n\n@layer components {\n  .section {\n    @apply py-11 md:pt-16 lg:pt-20 px-4 sm:px-8 md:px-20 max-w-6xl mx-auto lg:min-h-[768px];\n  }\n  .section-heading {\n    @apply text-2xl md:text-3xl xl:text-4xl inline-block my-6 font-medium;\n  }\n  .link-outline {\n    @apply outline-marrsgreen dark:outline-carrigreen;\n  }\n  .link {\n    @apply outline-marrsgreen dark:outline-carrigreen text-marrsdark hover:text-marrsgreen dark:text-carrilight dark:hover:text-carrigreen;\n  }\n  .blog-main {\n    @apply mb-20 mt-16 min-h-[70vh];\n  }\n  .blog-section {\n    @apply py-8 px-4 sm:px-8 md:px-20 max-w-4xl mx-auto;\n  }\n  .glassmorphism {\n    @apply bg-clip-padding backdrop-filter backdrop-blur-xl bg-opacity-50 dark:bg-opacity-60;\n  }\n  .lower-glassmorphism {\n    @apply bg-opacity-50 dark:bg-opacity-60 after:backdrop-blur-xl after:w-full after:h-full after:absolute after:top-0 after:left-0 after:-z-10;\n  }\n}\n\n@layer utilities {\n  .swiper-padding {\n    padding: 0 3rem !important;\n    padding-bottom: 3rem !important;\n  }\n  .swiper-padding-mobile {\n    padding: 0 !important;\n    padding-bottom: 3rem !important;\n  }\n}\n\n/* Swiper 样式 */\n.swiper-pagination-bullet {\n  @apply dark:bg-gray-200;\n}\n.dark .swiper-pagination-bullet-active {\n  background-color: rgb(5 206 145) !important;\n}\n.swiper-pagination-bullet-active {\n  background-color: rgb(0 140 140) !important;\n}\n\n.swiper-button-prev,\n.swiper-button-next {\n  @apply dark:text-carrigreen;\n}\n.swiper-button-prev,\n.swiper-button-next {\n  color: rgb(0 140 140) !important;\n}\n@media only screen and (max-width: 480px) {\n  .swiper-button-prev,\n  .swiper-button-next {\n    display: none !important;\n  }\n}\n```\n\nthis is package.json:\n``` json\n{\n  \"name\": \"felix-blog\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"type\": \"module\",\n  \"scripts\": {\n    \"dev\": \"next dev --turbopack\",\n    \"build\": \"next build\",\n    \"start\": \"next start\",\n    \"lint\": \"next lint\"\n  },\n  \"dependencies\": {\n    \"@tailwindcss/forms\": \"^0.5.0\",\n    \"@tailwindcss/line-clamp\": \"^0.3.1\",\n    \"@tailwindcss/typography\": \"^0.5.0\",\n    \"next\": \"15.2.1\",\n    \"react\": \"^19.0.0\",\n    \"react-dom\": \"^19.0.0\"\n  },\n  \"devDependencies\": {\n    \"@eslint/eslintrc\": \"^3\",\n    \"@tailwindcss/forms\": \"^0.5.10\",\n    \"@tailwindcss/postcss\": \"^4.0.12\",\n    \"@tailwindcss/typography\": \"^0.5.16\",\n    \"@types/node\": \"^20\",\n    \"@types/react\": \"^19\",\n    \"@types/react-dom\": \"^19\",\n    \"autoprefixer\": \"^10.4.21\",\n    \"eslint\": \"^9\",\n    \"eslint-config-next\": \"15.2.1\",\n    \"postcss\": \"^8.5.3\",\n    \"tailwindcss\": \"^4.0.12\",\n    \"typescript\": \"^5\"\n  }\n}\n```\nI have verified that the `content` array includes all the paths for my source files. However, since my global CSS file (where I use `@apply`) is not being scanned, the custom utility class is not generated, leading to the error.\n\n**Steps I’ve tried as a workaround:**  \n- I attempted to add the missing classes to the safelist, but that only forces generation and doesn't resolve the root issue.\n- I also verified that my Tailwind version supports these utilities and that there are no typos in the configuration.\n\n**Expected Behavior:**  \nTailwind CSS should generate the utility classes (e.g., `bg-bglight` and `w-3`) so that using `@apply` with these classes in any CSS file (including global CSS) works without error.\n\nAny help or guidance on this issue would be greatly appreciated. Thank you!\n\n---","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17117","RelatedDescription":"Open issue \"Missing Utility Classes (\"bg-bglight\" and \"w-3\") When Using @apply in Global CSS\" (#17117)"},{"Id":"2908540372","IsPullRequest":true,"CreatedAt":"2025-03-10T22:12:56","Actor":"depfu[bot]","Number":"17116","RawContent":null,"Title":"Update postcss 8.5.2 → 8.5.3 (patch)","State":"open","Body":"\n\n\n\n\nHere is everything you need to know about this upgrade. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ postcss (8.5.2 → 8.5.3) · [Repo](https://github.com/postcss/postcss) · [Changelog](https://github.com/postcss/postcss/blob/main/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/postcss/postcss/releases/tag/8.5.3\">8.5.3</a></h4>\n\n<blockquote><ul dir=\"auto\">\n<li>Added more details to <code class=\"notranslate\">Unknown word</code> error (by <a href=\"https://bounce.depfu.com/github.com/hiepxanh\">@hiepxanh</a>).</li>\n<li>Fixed types (by <a href=\"https://bounce.depfu.com/github.com/romainmenke\">@romainmenke</a>).</li>\n<li>Fixed docs (by <a href=\"https://bounce.depfu.com/github.com/catnipan\">@catnipan</a>).</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/postcss/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/postcss/postcss/compare/692fcde123dbf51c7b1a178370d3e8c6fe7feeee...22c309d32924e1eeb33c80a6a50b7ba8a43a1832\">See the full diff on Github</a>. The new version differs by 7 commits:</p>\n<ul>\n<li><a href=\"https://github.com/postcss/postcss/commit/22c309d32924e1eeb33c80a6a50b7ba8a43a1832\"><code>Release 8.5.3 version</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/a2b594f7826fc8e0ce2d35adcd205fde04f1134f\"><code>Update ESLint config</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/8232ba02575fca41b14c4e2b377adc68880846fa\"><code>Fix tests</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/5082831b842eb40f8d298e5e0ab041755a04a58b\"><code>Fix text</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/4fdb54b5ce67e038ed8d1aa79752d6f6072d0736\"><code>update: parser.js to clarify error message</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/06006ecb04cae0ddb62c6a85f15d1068c544d861\"><code>AtRule can be empty</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/755f08f8dbdbc001906b10db3b262948f8491d82\"><code>fix typo: them -&gt; then (#2016)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17116","RelatedDescription":"Open PR \"Update postcss 8.5.2 → 8.5.3 (patch)\" (#17116)"},{"Id":"2908420699","IsPullRequest":false,"CreatedAt":"2025-03-10T21:04:54","Actor":"willoma","Number":"17114","RawContent":null,"Title":"tailwindcss cli leaves hidden files in /tmp","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.12.\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nOnly the tailwindcss cli.\n\n**What version of Node.js are you using?**\n\nNone\n\n**What browser are you using?**\n\nNot relevant\n\n**What operating system are you using?**\n\nUbuntu Linux 24.04\n\n**Reproduction URL**\n\nNot relevant\n\n**Describe your issue**\n\n```\n$ ls -a /tmp/.*.node\nls: cannot access '/tmp/.*.node': No such file or directory\n$ tailwindcss\n≈ tailwindcss v4.0.12\n\nUsage:\n[blah blah doc etc]\n$ ls /tmp/.*.node\n/tmp/.19abdddb78ffefff-00000001.node  /tmp/.5effdedebd9bdffd-00000000.node  /tmp/.dd2f9cfefaefccbe-00000002.node\n```\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17114","RelatedDescription":"Open issue \"tailwindcss cli leaves hidden files in /tmp\" (#17114)"},{"Id":"2908182066","IsPullRequest":true,"CreatedAt":"2025-03-10T19:08:14","Actor":"RobinMalfait","Number":"17113","RawContent":null,"Title":"Improve string handling in pre processors","State":"open","Body":"This PR fixes an issue where some classes weren't properly extracted due to some incorrect assumptions in the pre processors.\r\n\r\nIn the templating languages like `Haml`, `Pug`, and `Slim`, strings should be in some form of brackets. These templating languages also allow to embed HTML as-is, so in order for the attributes with strings to be properly extracted, the `<` and `>` characters were added to the bracket stack for HTML.\r\n\r\nSome examples:\r\n\r\nPug:\r\n```pug\r\np.mt-2.text-xl\r\n  div The quote in the next word, can't be the start of a string\r\n                                     ^ This is not a start of a string\r\n\r\nh3.mt-24.text-center.text-4xl.font-bold.italic <- Which caused this to not be extracted\r\n  div The classes above should be extracted\r\n```\r\n```pug\r\ndiv(class=\"px-2.5\")\r\n          ^ But this is, because it's in `(…)`\r\n```\r\n\r\nHaml:\r\n```haml\r\n%p.mt-2.text-xl\r\n  The quote in the next word, can't be the start of a string\r\n                                 ^ This is not a start of a string\r\n\r\n%h3.mt-24.text-center.text-4xl.font-bold.italic <- Which caused this to not be extracted\r\n  The classes above should be extracted\r\n```\r\n```haml\r\n.text-black.xl:text-red-500{ data: { tailwind: 'css' } }\r\n                                               ^ But this is, because it's in `{…}`\r\n```\r\n\r\nSlim:\r\n```slim\r\n.bg-green-300\r\n  | The quote in the next word, can't be the start of a string\r\n                                   ^ This is not a start of a string\r\n\r\nh3.mt-24.text-center.text-4xl.font-bold.italic <- Which caused this to not be extracted\r\n  | The classes above should be extracted\r\n```\r\n\r\n# Test plan\r\n\r\n1. Added additional tests for the behavior where a piece of text is used including quotes.\r\n2. Existing tests still pass\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17113","RelatedDescription":"Open PR \"Improve string handling in pre processors\" (#17113)"},{"Id":"2905304240","IsPullRequest":true,"CreatedAt":"2025-03-10T18:08:39","Actor":"RobinMalfait","Number":"17083","RawContent":null,"Title":"Refactor: use compile time type state pattern","State":"closed","Body":"This PR implements the state machines using the type state pattern at compile time (via generic types) instead of a runtime state variable. There is no runtime check to see what state we are in, instead we transition to the new state when it's necessary.\r\n\r\nThis has some nice performance improvements for some of the state machines, e.g.:\r\n\r\n```diff\r\n- ArbitraryVariableMachine: Throughput: 744.92 MB/s\r\n+ ArbitraryVariableMachine: Throughput:   1.21 GB/s\r\n```\r\n\r\nWe also don't have to store the current state because each machine runs to completion. It's during execution that we can move to a new state if necessary.\r\n\r\n\r\nUnfortunately the diff is a tiny bit annoying to read, but essentially this is what happened:\r\n\r\n### The `enum` is split up in it's individual states as structs:\r\n```rs\r\nenum State {\r\n  A,\r\n  B,\r\n  C,\r\n}\r\n```\r\nBecomes:\r\n```rs\r\nstruct A;\r\nstruct B;\r\nstruct C;\r\n```\r\n\r\n### Generics\r\n\r\nThe current machine will receive a generic `State` that we can default to the `IdleState`. Then we use `PhantomData` to \"use\" the type because the generic type is otherwise not used as a concrete value, it's just a marker.\r\n\r\n```rs\r\nstruct MyMachine {}\r\n```\r\nBecomes:\r\n```rs\r\nstruct MyMachine<State = Idle> {\r\n  _state: std::marker::PhantomData<State>\r\n}\r\n```\r\n\r\n### Split \r\n\r\nNext, the `next` function used to match on the current state, but now each match arm is moved to a dedicated implementation instead:\r\n```rs\r\nimpl Machine for MyMachine {\r\n  fn next(&mut self) -> MachineState {\r\n    match self.state {\r\n      State::A => { /* … */ },\r\n      State::B => { /* … */ },\r\n      State::C => { /* … */ },\r\n    }\r\n  }\r\n}\r\n``` \r\nBecomes:\r\n```rs\r\nimpl Machine for MyMachine<A> {\r\n  fn next(&mut self) -> MachineState {\r\n    /* … */\r\n  }\r\n}\r\nimpl Machine for MyMachine<B> {\r\n  fn next(&mut self) -> MachineState {\r\n    /* … */\r\n  }\r\n}\r\nimpl Machine for MyMachine<C> {\r\n  fn next(&mut self) -> MachineState {\r\n    /* … */\r\n  }\r\n}\r\n```\r\n\r\nIt's a bit more verbose, but now each state is implemented in its own block. This also removes 2 levels of nesting which is a nice benefit.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17083","RelatedDescription":"Closed or merged PR \"Refactor: use compile time type state pattern\" (#17083)"},{"Id":"2907970905","IsPullRequest":false,"CreatedAt":"2025-03-10T17:31:30","Actor":"da1z","Number":"17110","RawContent":null,"Title":"tailwind 4 without preflight does not seem to work with webpack and postcss","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\n4.0.12\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nwebpack ,react, post css loader\n\n**What version of Node.js are you using?**\n\nlts\n\n**What browser are you using?**\n\nArc\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nI am sorry it is hard to create reproduction, but maybe you would know what issue right from description\n\n**Describe your issue**\n\nBasically the issue that main css is not being update when i add tailwind classes to classNames in dev watch mode if i import tailwind like this (i want to remove preflight but i keep it here for simplicity):\n\n@layer theme, base, components, utilities;\n@import \"tailwindcss/theme.css\" layer(theme);\n@import \"tailwindcss/preflight.css\" layer(base);\n@import \"tailwindcss/utilities.css\" layer(utilities);\n\nbut everything works, if import like:\n\n@import \"tailwindcss\";","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17110","RelatedDescription":"Open issue \"tailwind 4 without preflight does not seem to work with webpack and postcss\" (#17110)"},{"Id":"2904921725","IsPullRequest":false,"CreatedAt":"2025-03-10T15:12:57","Actor":"mjnyland","Number":"17065","RawContent":null,"Title":"dark: values are working on chrome, but not on safari","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.12\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 15.2.1\n\n**What version of Node.js are you using?**\n\n15.2.1\n\n**What browser are you using?**\n\nSafari\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://github.com/mjnyland/fiddle\n\n**Describe your issue**\n\nI've installed tailwind v4 properly. Im using next-themes to set a light or dark value at the root html element. When toggling back and forth, elements styled with \"dark:\" do not change on safari. they do change on chrome.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17065","RelatedDescription":"Closed issue \"dark: values are working on chrome, but not on safari\" (#17065)"},{"Id":"2907022974","IsPullRequest":false,"CreatedAt":"2025-03-10T12:33:12","Actor":"AiSirachcha21","Number":"17104","RawContent":null,"Title":"@property doesn't work with custom elements that use a shadow-dom","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\nv4.0.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n.NET MVC with VanillaJS Custom Elements\n\n**What version of Node.js are you using?**\nv22.12.0\n\n**What browser are you using?**\nFirefox  and Chrome (v134.0.6998.35)\n\n**What operating system are you using?**\nWindows\n\n**Reproduction URL**\nhttps://stackblitz.com/edit/vitejs-vite-chwisfnx?file=src%2Ftest.css\n\n**Describe your issue**\n\nTailwind makes use of the new `translate` property in CSS in order to do what used to be done with `transform`. This makes use of 2 custom properties `--tw-translate-x` and `--tw-translate-y`.\n\nWe have used the shadow-dom inside of custom element to prevent leakage of our CSS into another application we own. The project is legacy and I won't get into the reasons as to why we've done it unless necessary for the conversation.\n\nWe import a compiled tailwindCSS file into this custom element (we compile it via the standalone TailwindCLI) via a link tag in the shadow-dom.\n\nUtilizing any TailwindCSS translate utility (like `-translate-y-1/2` or `translate-x-2`) will omit any values not written explicitly.\n\nFor example take the following CSS\n\n```css\n.class-x {\n    @apply absolute top-1/2 -translate-y-1/2 /* To center an element with absolute positioning */\n}\n```\n\nThe above code will result in the following CSS\n\n```css\n.class-x {\n   --tw-translate-y: calc(calc( 1/2 * 100%) * -1);\n   position: absolute;\n   top: 50%;\n   translate: var(--tw-translate-x) var(--tw-translate-y)\n}\n```\n\nAs the default behavior of custom properties, `--tw-translate-x` should default to `0` but instead we see that it is not defined when observed inside the custom element via the browser dev tools.\n\n![Image](https://github.com/user-attachments/assets/bb705892-7061-4566-9fb9-e62333ff24f5)\n\nWhile this might be a browser behavior and not specifically related to tailwind, I feel it is worth mentioning as the only workarounds available are \n\n1. Explictly define the `translate-x-*` utility with a value\n2. Utilize Vanilla CSS and the `--spacing` utility.\n3. Utilize Vanilla CSS with raw CSS values\n\nThis will extend to classes applied on templates as well.\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17104","RelatedDescription":"Closed issue \"@property doesn't work with custom elements that use a shadow-dom\" (#17104)"},{"Id":"2905972438","IsPullRequest":false,"CreatedAt":"2025-03-10T11:45:36","Actor":"sharathdaniel","Number":"17096","RawContent":null,"Title":"Unexpected duplicate \"transition-timing-function\"","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.12\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\ntailwind-cli with plain html and css\n\n**What version of Node.js are you using?**\n\nv20.0.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nWindows\n\n**Describe your issue**\n\nI have a class for a button with some tailwind classes applied.\n```\n@layer components {\n  .app-c-btn {\n    @apply rounded px-4 py-2 font-bold text-white transition-colors duration-200 ease-in not-disabled:cursor-pointer disabled:cursor-not-allowed;\n  }\n```\n\nIn the output its generating the transition timing 2 times.\n\n![Image](https://github.com/user-attachments/assets/649d19f5-8063-4cdd-af47-a267cff21d9c)\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17096","RelatedDescription":"Closed issue \"Unexpected duplicate \"transition-timing-function\"\" (#17096)"},{"Id":"2906980358","IsPullRequest":false,"CreatedAt":"2025-03-10T11:39:29","Actor":"CultureScreen","Number":"17101","RawContent":null,"Title":"Cannot apply unknown utility class: rounded-lg","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: postcss-cli 11.0.0, Next.js 15.1.7, Vite 6.1.0\n\n**What version of Node.js are you using?**\n\nFor example: v20.0.0\n\n**What browser are you using?**\n\nFor example: Chrome, Safari, or N/A\n\n**What operating system are you using?**\n\nFor example: macOS, Windows\n\n**Reproduction URL**\n\nA Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\n\nA reproduction is **required** when filing an issue — any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.\n\n**Describe your issue**\n\nDescribe the problem you're seeing, any important steps to reproduce and what behavior you expect instead.\n\n## help meeeeeee\n\n![Image](https://github.com/user-attachments/assets/61e82a8e-ed18-43ae-b88d-361c9ec04a9b)\n\n![Image](https://github.com/user-attachments/assets/38bfbc37-35cb-4618-8713-074397b11bff)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17101","RelatedDescription":"Closed issue \"Cannot apply unknown utility class: rounded-lg\" (#17101)"},{"Id":"2906476979","IsPullRequest":false,"CreatedAt":"2025-03-10T10:46:13","Actor":"alexgrozav","Number":"17097","RawContent":null,"Title":"Allow setting any custom utility prefix and prefix separator","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.9\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.1.0\n\n**What version of Node.js are you using?**\n\nv20.16.0\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nN/A\n\n```\n@theme inline prefix(_) {\n   --spacing: 1rem;\n}\n```\n\n**Describe your issue**\n\nSome CSS writing Frameworks recommend using `_` as a prefix for naming utility classes. For example, Rico Sta Cruz recommends using `_className` for utilities in the RSCSS framework https://rstacruz.github.io/rscss/. \n\nTailwind does not allow using `_` as a prefix, nor does it allow using an empty string `''` as a separator instead of `':'`.\n\n<img width=\"877\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/53f3a3ed-ff51-4898-835c-bd8c903108eb\" />\n\n**Expected:**\n- I would like to be able to use `_` as a prefix \n- I would like to be able to use empty string `''` as a prefix separator instead of `':'`\n\n```\n@theme inline prefix(_, false) {\n   --spacing: 1rem;\n}\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17097","RelatedDescription":"Closed issue \"Allow setting any custom utility prefix and prefix separator\" (#17097)"},{"Id":"2905231019","IsPullRequest":false,"CreatedAt":"2025-03-10T10:45:28","Actor":"ledermann","Number":"17081","RawContent":null,"Title":"4.0.12 - Regression with SLIM templates (single quotes)","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.12\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n@tailwindcss/cli\n\n**What version of Node.js are you using?**\n\nv22.12.0\n\n**What browser are you using?**\n\nBrave 1.76.73\n\n**What operating system are you using?**\n\nmacOS 15\n\n**Reproduction URL**\n\nhttps://github.com/ledermann/tailwind-4.0.12-slim-issue\n\n**Describe your issue**\n\nSimilar to #16975 and #16998, there is another issue with SLIM templates. With 4.0.12, the parser fails to handle [single quotes (used to enforce trailing white space)](https://github.com/slim-template/slim?tab=readme-ov-file#verbatim-text-with-trailing-white-space-). \n\n\nSee this example:\n\n```slim\ndiv\n  'A single quote enforces trailing white space\n  = 1234\n\n.text-red-500.text-3xl\n  | This text should be red\n```\n\nHere, the class `text-red-500` is not processed.\n\n![Image](https://github.com/user-attachments/assets/cf1a3ce8-aa68-4cf5-a78c-444ddacfc652)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17081","RelatedDescription":"Closed issue \"4.0.12 - Regression with SLIM templates (single quotes)\" (#17081)"},{"Id":"2905333740","IsPullRequest":true,"CreatedAt":"2025-03-10T10:45:27","Actor":"RobinMalfait","Number":"17085","RawContent":null,"Title":"Treat starting single quote as verbatim text in Slim","State":"closed","Body":"This PR fixes an issue in Slim templates where a single quote `'` at the start of the line (excluding white space) is considered a line indicator for verbatim text. It is not considered a string in this scenario.\r\n\r\nSo something like this:\r\n```slim\r\ndiv\r\n  'Foo'\r\n```\r\n\r\nWill compile to:\r\n```html\r\n<div>Foo'</div>\r\n```\r\n\r\nFixes: #17081\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17085","RelatedDescription":"Closed or merged PR \"Treat starting single quote as verbatim text in Slim\" (#17085)"},{"Id":"2905458177","IsPullRequest":false,"CreatedAt":"2025-03-10T10:28:11","Actor":"jackwilliams79","Number":"17088","RawContent":null,"Title":"Classes not generated after upgrading npm packages when CSS classes are inside TYPO3 Fluid template tags","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nLike suggested in this issue (https://github.com/tailwindlabs/tailwindcss/issues/16801#issuecomment-2701012221), I've installed the \"insiders\" versions.\n\nCurrently installed versions:\n\n- \"@tailwindcss/vite\": \"^0.0.0-insiders.7005ad7\"\n- \"tailwindcss\": \"^0.0.0-insiders.7005ad7\"\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n- Vite 6.1.0\n\n**What version of Node.js are you using?**\n\n- Node version: v22.14.0\n\n**What browser are you using?**\n\n- Latest Google Chrome\n\n**What operating system are you using?**\n\n- Linux Fedora\n\n**Reproduction URL**\n\nI cannot provide a reproduction URL.\n\n**Describe your issue**\n\nI'm using the new Tailwindcss v4 with Vite in a PHP project (TYPO3 CMS). TYPO3 uses it's own templating engine to generate HTML for the frontend, which is called Fluid.\n\nHere's an example Fluid template snippet:\n\n```html\n<!-- Fluid template language -->\n<f:variable name=\"bgStyle\">\n  <f:switch expression=\"{data.layout}\">\n    <f:case value=\"0\">from-blue-900 to-cyan-200</f:case>\n    <f:case value=\"1\">from-cyan-600 to-teal-200</f:case>\n    <f:defaultCase>from-blue-300 to-cyan-100</f:defaultCase>\n  </f:switch>\n</f:variable>\n\n<!-- Normal HTML code with Fluid variable \"bgStyle\" in the \"class\" attribute -->\n<div class=\"bg-gradient-to-br from-20% {bgStyle}\">...</div>\n```\n\nUp until today this worked just fine. Today I updated my NPM packages (`npm update`). The packages were updated from version 4.0.6 to version 4.0.12. Now CSS classes that are not written inside normal HTML code (last line in the example), are not picked up and therefore are not added to the final CSS file.\n\nThen I've read about the insiders versions and tried to install those. But still the CSS classes inside the Fluid template part are not recognized.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17088","RelatedDescription":"Closed issue \"Classes not generated after upgrading npm packages when CSS classes are inside TYPO3 Fluid template tags\" (#17088)"},{"Id":"2905622814","IsPullRequest":true,"CreatedAt":"2025-03-10T10:28:10","Actor":"RobinMalfait","Number":"17094","RawContent":null,"Title":"Ensure classes between `>` and `<` are properly extracted","State":"closed","Body":"This PR fixes an issue where candidates inside `>…<` were not always correctly extracted. This happens in XML-like languages where the classes are inside of these boundaries.\n\nE.g.:\n```html\n<!-- Fluid template language -->\n<f:variable name=\"bgStyle\">\n  <f:switch expression=\"{data.layout}\">\n    <f:case value=\"0\">from-blue-900 to-cyan-200</f:case>\n    <!--              ^^^^^^^^^^^^^^^^^^^^^^^^^      -->\n    <f:case value=\"1\">from-cyan-600 to-teal-200</f:case>\n    <f:defaultCase>from-blue-300 to-cyan-100</f:defaultCase>\n  </f:switch>\n</f:variable>\n```\n\n\nFixes: https://github.com/tailwindlabs/tailwindcss/issues/17088\n\n# Test plan\n\n1. Added a new test\n2. Existing tests pass\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17094","RelatedDescription":"Closed or merged PR \"Ensure classes between `>` and `<` are properly extracted\" (#17094)"},{"Id":"2905656022","IsPullRequest":false,"CreatedAt":"2025-03-09T20:49:46","Actor":"t-zander","Number":"17095","RawContent":null,"Title":"Incomplete colors classes when using tailwind cli","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.12\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: postcss-cli 11.0.0, Next.js 15.1.7, Vite 6.1.0\n\nNo framework\n\n**What version of Node.js are you using?**\n\nFor example: v20.0.0\n\n**What browser are you using?**\n\nFor example: Chrome, Safari, or N/A\n\n**What operating system are you using?**\n\nFor example: macOS, Windows\n\n**Reproduction URL**\n\nA Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\n\nA reproduction is **required** when filing an issue — any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.\n\n**Describe your issue**\n\nDescribe the problem you're seeing, any important steps to reproduce and what behavior you expect instead.\n\n\nI have a css file with the only import\n```\n@import \"tailwindcss\";\n```\n\nI am using tailwind cli to generate .css output file.\n\n```\nnpx @tailwindcss/cli -i ./assets/css/tailwind.css -o ./style.css --watch\n```\n\nFor whatever reason this file is missing a lot of classes for colors, mentioned in https://tailwindcss.com/docs/colors#default-color-palette-reference.\n\nE.g. color-red, greeen, amber, ... are all missing\n\n[style_generated.txt](https://github.com/user-attachments/files/19152061/style_generated.txt)\n\n in the generated file.\nIt is not possible to attach .css, so I had to change generated file to .txt\n\nI am trying to use it in another .css file\n```\na {\n      color: var(--color-white);\n\n      &:hover {\n        color: var(--color-green-500);\n      }\n    }\n```\n\n\nvar(--color-white) works fine, but not var(--color-green-500)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17095","RelatedDescription":"Closed issue \"Incomplete colors classes when using tailwind cli\" (#17095)"},{"Id":"2904894670","IsPullRequest":false,"CreatedAt":"2025-03-09T18:52:51","Actor":"SantiagoGelvez","Number":"17060","RawContent":null,"Title":"NuxtUI and Tailwind doesn't work","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\n\"dependencies\": {\n    \"@nuxt/ui\": \"^2.21.1\",\n    \"@tailwindcss/vite\": \"^4.0.12\",\n    \"nuxt\": \"^3.16.0\",\n    \"postcss\": \"^8.5.3\",\n    **\"tailwindcss\": \"^4.0.12\",**\n    \"vue\": \"^3.5.13\",\n    \"vue-router\": \"^4.5.0\"\n  },\n\n**What version of Node.js are you using?**\n\nnode: v23.9.0\nnpm: 10.9.2\n\n**What browser are you using?**\n\nFirefox, Brave, Chrome\n\n**What operating system are you using?**\n\nUbuntu 24.04.2 LTS\n\n**Describe your issue**\n\nI can't use these versions of the package to work both with tailwind and nuxtUI together. I got this error:\n\n```\nnpm run dev\n\n> dev\n> nuxt dev\n\nNuxt 3.16.0 with Nitro 2.11.5                                                                                                                   nuxi  10:26:17 AM\n                                                                                                                                                      10:26:17 AM\n  ➜ Local:    http://localhost:3000/\n  ➜ Network:  use --host to expose\n\nℹ Using default Tailwind CSS file                                                                                                   nuxt:tailwindcss 10:26:18 AM\n  ➜ DevTools: press Shift + Alt + D in the browser (v2.2.1)                                                                                           10:26:18 AM\n\n\n WARN  Failed to load config ./.nuxt/nuxtui-tailwind.config.mjs due to the error below. Skipping..                                   nuxt:tailwindcss 10:26:18 AM\n Package subpath './lib/lib/defaultExtractor.js' is not defined by \"exports\" in /home/santiago/Castleberry/atomic-frontend/node_modules/tailwindcss/package.json\n\n    at exportsNotFound (node:internal/modules/esm/resolve:314:10)\n    at packageExportsResolve (node:internal/modules/esm/resolve:661:9)\n    at resolveExports (node:internal/modules/cjs/loader:661:36)\n    at Function._findPath (node:internal/modules/cjs/loader:753:31)\n    at Function._resolveFilename (node:internal/modules/cjs/loader:1391:27)\n    at Function.resolve (node:internal/modules/helpers:145:19)\n    at jitiResolve (node_modules/jiti/dist/jiti.cjs:1:187220)\n    at jitiRequire (node_modules/jiti/dist/jiti.cjs:1:189288)\n    at import (node_modules/jiti/dist/jiti.cjs:1:199778)\n    at .nuxt/nuxtui-tailwind.config.mjs:2:31\n\nℹ Nuxt Icon server bundle mode is set to local                                                                                                       10:26:18 AM\n✔ Nuxt Icon discovered local-installed 1 collections: heroicons                                                                                      10:26:19 AM\n\n[ nuxi  10:26:20 AM]  ERROR  Cannot start nuxt:  It looks like you're trying to use tailwindcss directly as a PostCSS plugin. The PostCSS plugin has moved to a separate package, so to continue using Tailwind CSS with PostCSS you'll need to install @tailwindcss/postcss and update your PostCSS configuration.\n\n    at Br (node_modules/tailwindcss/dist/lib.mjs:22:1720)\n    at resolveCSSOptions (node_modules/@nuxt/vite-builder/dist/shared/vite-builder.0lB6n6pu.mjs:1104:34)\n    at async bundle (node_modules/@nuxt/vite-builder/dist/shared/vite-builder.0lB6n6pu.mjs:1361:14)\n    at async bundle (node_modules/nuxt/dist/shared/nuxt.B7-cu52A.mjs:7234:5)\n    at async build (node_modules/nuxt/dist/shared/nuxt.B7-cu52A.mjs:7085:3)\n    at async Promise.all (index 1)\n    at async NuxtDevServer._load (node_modules/@nuxt/cli/dist/chunks/dev2.mjs:210:5)\n    at async NuxtDevServer.load (node_modules/@nuxt/cli/dist/chunks/dev2.mjs:95:7)\n    at async NuxtDevServer.init (node_modules/@nuxt/cli/dist/chunks/dev2.mjs:90:5)\n    at async Object.run (node_modules/@nuxt/cli/dist/chunks/dev-child.mjs:83:5)\n\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17060","RelatedDescription":"Closed issue \"NuxtUI and Tailwind doesn't work\" (#17060)"},{"Id":"2905583248","IsPullRequest":false,"CreatedAt":"2025-03-09T18:08:14","Actor":"silverbackdan","Number":"17092","RawContent":null,"Title":"[Bug][4.0.10 - 4.0.12] Very Slow Vercel CLI builds (30mins+) with Nuxt/Vite project using Tailwind >= 4.0.10","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: >= 4.0.10\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNuxt 3.16.0 with Vite 6.2.1\n\n**What version of Node.js are you using?**\n\nFor example: v22.14.0\nPNPM 10.6.1\n\n**What browser are you using?**\n\nn/a\n\n**What operating system are you using?**\n\nVercel\n\n**Reproduction URL**\n\nA brand new Nuxt project setup as specified in docs. The issue is builds locally are absolutely fine. It's building within Vercel for these versions which has increased from ~1minute to 30mins+\n\nThere is a step in the Nuxt build script which says 'transforming' where I believe esbuild is transforming modules.\n\nThis happens twice in the build process, once for client, once for server. Each one takes around 15 minutes.\n\nAny ideas?\n\nI understand you'll ask for a reproduction, I totally get this and would usually try, but it'll build fine in regular environments, I'm happy to create a dummy repo if you have ability to deploy in Vercel or have ideas on what can cause this otherwise? Minimal reproduction is a basic Nuxt all with tailwind installed as docs show. Nothing else.\n\n**Describe your issue**\n\nI've had to use Tailwind v4.0.9 which is the latest version where the build is still nice and fast. What were the changes to 4.0.10 which may have caused such a slowdown in some environments?\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17092","RelatedDescription":"Open issue \"[Bug][4.0.10 - 4.0.12] Very Slow Vercel CLI builds (30mins+) with Nuxt/Vite project using Tailwind >= 4.0.10\" (#17092)"},{"Id":"2905563841","IsPullRequest":false,"CreatedAt":"2025-03-09T17:40:49","Actor":"dimassp","Number":"17089","RawContent":null,"Title":"margin top application on different screen size","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: postcss-cli 11.0.0, Next.js 15.1.7, Vite 6.1.0\n\n**What version of Node.js are you using?**\n\nFor example: v20.0.0\n\n**What browser are you using?**\n\nFor example: Chrome, Safari, or N/A\n\n**What operating system are you using?**\n\nFor example: macOS, Windows\n\n**Reproduction URL**\n\nA Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\n\nA reproduction is **required** when filing an issue — any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.\n\n**Describe your issue**\n\nDescribe the problem you're seeing, any important steps to reproduce and what behavior you expect instead.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17089","RelatedDescription":"Closed issue \"margin top application on different screen size\" (#17089)"},{"Id":"2905360498","IsPullRequest":true,"CreatedAt":"2025-03-09T11:07:57","Actor":"RobinMalfait","Number":"17087","RawContent":null,"Title":"Ensure candidate extraction works as expected in Clojure/ClojureScript","State":"open","Body":"This PR adds a Clojure/ClojureScript pre processor to make sure that candidate extraction works as expected.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17087","RelatedDescription":"Open PR \"Ensure candidate extraction works as expected in Clojure/ClojureScript\" (#17087)"},{"Id":"2905034574","IsPullRequest":false,"CreatedAt":"2025-03-09T10:47:59","Actor":"mkfizi","Number":"17078","RawContent":null,"Title":"[v4] divide-* class produces extra border on hidden last child element","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.12, v3.4.17\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: Vite 6.1.0\n\n**What version of Node.js are you using?**\n\nFor example: v23.9.0\n\n**What browser are you using?**\n\nFor example: Chrome, Safari\n\n**What operating system are you using?**\n\nFor example: macOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/RJdN8e6ZgV\n\n**Describe your issue**\n\nI'm building an collapsible accordion component. I noticed current `divide-*` class produced extra border on last child element. I just upgraded my tailwind dependencies to v4 from v3. This issue does not occur on v3 and below. I'm not sure if this is actually intended or a bug. You may check on reproduction URL and toggle Tailwind versions.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17078","RelatedDescription":"Closed issue \"[v4] divide-* class produces extra border on hidden last child element\" (#17078)"},{"Id":"2905142348","IsPullRequest":false,"CreatedAt":"2025-03-09T09:36:19","Actor":"ujjaldey","Number":"17079","RawContent":null,"Title":"display:flex does not work with custom breakpoint","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.12\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.1.0\n\n**What version of Node.js are you using?**\n\nv20.12.2\n\n**What browser are you using?**\n\nChrome, Firefox\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nNA\n\n**Describe your issue**\n\nI have defined a custom breakpoint in `index.css`:\n```\n@import \"tailwindcss\";\n\n@theme {\n  --breakpoint-ml: 56rem;\n}\n```\n\nI am trying to add the following classes on a `div`. I intend to display the menu on the screen larger than 896px and hidden otherwise:\n```\n<div className=\"hidden ml-2 ml:flex ml:text-cyan-500\">\n    <NavMenu onLinkClick={handleLinkClick} />\n</div>\n```\n\nHowever, the `div` does not show up on `ml` breakpoint. The other classes e.g. `ml:text-cyan-500` work, but not `ml:flex`.\n\nOn hovering over `ml:flex`, the generated CSS seems to be correct:\n```\n.ml\\:flex {\n    @media (width >= 56rem /* 896px */) {\n        display: flex;\n    }\n}\n```\n\nI tried using `min-[56rem]:flex` and it seems to be working.\n```\n<div className=\"hidden ml-2 min-[56rem]:flex ml:text-cyan-500\">\n    <NavMenu onLinkClick={handleLinkClick} />\n</div>\n```\n\nDo you have any idea what's wrong here? Thanks in advance!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17079","RelatedDescription":"Closed issue \"display:flex does not work with custom breakpoint\" (#17079)"},{"Id":"2905182591","IsPullRequest":false,"CreatedAt":"2025-03-09T03:55:39","Actor":"danielsomerfield","Number":"17080","RawContent":null,"Title":"Non-existence of .git directory breaks tailwind styles","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.12\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: postcss-cli 11.0.0, Next.js 15.1.7, Vite 6.1.0\n\nVite 6.2.1\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What browser are you using?**\n\nchrome\n\n**What operating system are you using?**\n\nmacos\n\n**Reproduction URL**\n\n* Following the instructions [here](https://tailwindcss.com/docs/installation/framework-guides/react-router)\n* When prompted whether to init a git project, choose \"No\".\n* Run the project with `npm dev`\n* Navigate to the URL and notice that the text is not centered\n* Go to your project root and run `mkdir .git`\n* Kill the npm process and run `npm dev` again\n* Navigate to the URL and notice that the text now *is* centered\n\n**Describe your issue**\n\nIt appears that the existence or non-existence of the .git directory effects the behaviour of the app. If you simply create an empty .git directory, all works. The existence or non existence of .gitignore appears to have no effect.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17080","RelatedDescription":"Open issue \"Non-existence of .git directory breaks tailwind styles\" (#17080)"},{"Id":"2904951700","IsPullRequest":false,"CreatedAt":"2025-03-08T20:29:17","Actor":"alireza-asgharii","Number":"17068","RawContent":null,"Title":"Problem tailwindcss v4 with \"normalize.css/normalize.css\"","State":"closed","Body":"After updating my project to version 4 of Tiliwand, I noticed that tags like h1 and ... had a margin, even though I didn't put anything like that on the tag.\nI even tested it in a new, raw project and found that removing the normalize package solved the problem.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17068","RelatedDescription":"Closed issue \"Problem tailwindcss v4 with \"normalize.css/normalize.css\"\" (#17068)"},{"Id":"2904962045","IsPullRequest":false,"CreatedAt":"2025-03-08T20:16:49","Actor":"xxx4563","Number":"17069","RawContent":null,"Title":"Tailwind css v4 does not work styles are not applied","State":"closed","Body":"Which version of Tailwind CSS are you using?\n\nFor example: v4.0.12\n\nWhich build tool (or framework, if it abstracts the build tool) do you use?\n\nFor example: Laravel 12.0.2, Vite 6.0, React 19.0.0\n\nWhich version of the Node.do you use js?\n\nFor example: v22.14.0\n\nWhich browser are you using?\n\nFor example: Firefox, Chrome, Safari,\n\nWhat operating system are you using?\n\nFor example: mac OS\n\nLink for playback\n\n\n\nDescribe your problem.\n \nI downloaded Laravel 12 from the React Starter Kit. After I downloaded it, I launched it. But the styles don't work for me.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17069","RelatedDescription":"Closed issue \"Tailwind css v4 does not work styles are not applied\" (#17069)"},{"Id":"2904977427","IsPullRequest":false,"CreatedAt":"2025-03-08T20:16:33","Actor":"jeissler","Number":"17070","RawContent":null,"Title":"@custom-variant build error with parcel","State":"closed","Body":"I'm trying to setup manual dark mode support using @custom-variant as shown in the documentation but running into an error when building with ParcelJS. The specific error is below as well as the current package versions I'm using. Any help is much appreciated. \n\n```\n\"@parcel/transformer-vue\": \"^2.13.3\",\n\"@tailwindcss/postcss\": \"^4.0.12\",\n\"parcel\": \"^2.13.3\",\n\"tailwindcss\": \"^4.0.11\",\n```\n```\n@parcel/transformer-css: Unexpected token AtKeyword(\"custom-variant\")\n[/Users/jeremyeissler/Sites/branedocs_widget/src/styles/main.pcss:2:7](http://localhost:1234/__parcel_launch_editor?file=%2FUsers%2Fjeremyeissler%2FSites%2Fbranedocs_widget%2Fsrc%2Fstyles%2Fmain.pcss%3A2%3A7)\n  1 | /*! tailwindcss v4.0.12 | MIT License | https://tailwindcss.com */\n> 2 | @media @custom-variant dark (&:where(.dark, .dark *)) {\n>   |       ^\n  3 |   @layer theme, base, components, utilities;\n  4 |   @layer theme {\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17070","RelatedDescription":"Closed issue \"@custom-variant build error with parcel\" (#17070)"},{"Id":"2904991670","IsPullRequest":false,"CreatedAt":"2025-03-08T20:15:44","Actor":"atgillette","Number":"17074","RawContent":null,"Title":"v$.x preflight not working properly","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.0.11\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.2.0\n\n**What version of Node.js are you using?**\n\nv20.11.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n**Reproduction URL**\n\ngit@github.com:atgillette/vite-tailwind-v4.git\n\n**Describe your issue**\n\nDescribe the problem you're seeing, any important steps to reproduce and what behavior you expect instead.\n\nI noticed that an h1 element is not respecting the preflight configuration. I've attached a screenshot of how the style is applied to the h1\n\n![Image](https://github.com/user-attachments/assets/2823ff84-4f1e-4111-a1e9-2e978df32f7f)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17074","RelatedDescription":"Closed issue \"v$.x preflight not working properly\" (#17074)"},{"Id":"2904925081","IsPullRequest":false,"CreatedAt":"2025-03-08T18:26:15","Actor":"softwarecurator","Number":"17066","RawContent":null,"Title":"Build Failure After Upgrading from Tailwind CSS 4.0.8 to 4.0.12","State":"closed","Body":"**What version of Tailwind CSS are you using?**\nUpgrading from v4.0.8 to v4.0.12 causes the issue\n@tailwindcss/vite: Upgrading from 4.0.8 to 4.0.12\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n- SvelteKit (Svelte 5)\n- Vite\n- Bits UI integration\n\n**What version of Node.js are you using?**\nv20.18.1\n\n**What browser are you using?**\nN/A - Build failure issue\n\n**What operating system are you using?**\nMac OS\n\n**Description**\nBuild failure occurs when upgrading from Tailwind CSS 4.0.8 to 4.0.12. Project uses custom theme configuration with CSS variables, custom fonts, and glass morphism effects.\n\nRelevant configuration:\n```css\n@import 'tailwindcss';\n\n@theme {\n  --font-family-display: 'JetBrains Mono', sans-serif;\n  --color-primary: #15de6d;\n  --color-dark: #18181c;\n  --color-bg: #111115;\n}\n```\n\nSteps to reproduce:\n1. Start with working project on Tailwind 4.0.8\n2. Upgrade to 4.0.12\n3. Project fails to build\n\nbash`\n11:31:01 AM [vite-plugin-svelte] src/routes/marketplace/+page.svelte:145:9 Self-closing HTML tags for non-void elements are ambiguous — use `<div ...></div>` rather than `<div ... />`\nhttps://svelte.dev/e/element_invalid_self_closing_tag\n143:                   <div class=\"h-4 bg-[#252525] rounded w-3/4 mb-1\" />\n144:                   <div class=\"h-3 bg-[#252525] rounded w-1/2 mb-2\" />\n145:                   <div class=\"h-4 bg-[#252525] rounded w-1/4\" />\n                                                                     ^\n146:                 </div>\n147:               </div>\ntransforming (58) src/routes/support/+page.svelte^C%  \n`\n\n^ Freezes after this step and doesnt continue build until timeout","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17066","RelatedDescription":"Closed issue \"Build Failure After Upgrading from Tailwind CSS 4.0.8 to 4.0.12\" (#17066)"},{"Id":"2904911578","IsPullRequest":false,"CreatedAt":"2025-03-08T17:08:24","Actor":"hades200082","Number":"17064","RawContent":null,"Title":"TypeError: Cannot read properties of undefined (reading 'nodes')","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n4.0.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n@tailwindcss/cli\n\n**What version of Node.js are you using?**\nBun 1.2.x\n\n**What browser are you using?**\nEdge\n\n**What operating system are you using?**\nWindows\n\n**Reproduction URL**\nN/A - error is in the build process and can't be replicated on play\n\n**Describe your issue**\nWhen running `bunx @tailwindcss/cli -i ./Blazor/Blazor/wwwroot/app.css -o ./Blazor/Blazor/wwwroot/app.min.css --watch` it intermittently outputs `TypeError: Cannot read properties of undefined (reading 'nodes')`\n\n![Image](https://github.com/user-attachments/assets/86b80c4b-eaf7-4f27-a501-26d41d554482)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17064","RelatedDescription":"Open issue \"TypeError: Cannot read properties of undefined (reading 'nodes')\" (#17064)"},{"Id":"2904786288","IsPullRequest":false,"CreatedAt":"2025-03-08T13:13:34","Actor":"pinzonjulian","Number":"17058","RawContent":null,"Title":"Plugin in source code is picked up as application code in Standalone CLI mode","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\nv4.0.12\n\nFor example: v4.0.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nRuby on Rails\n[tailwindcss-rails](https://github.com/rails/tailwindcss-rails) which uses the Standalone CLI\n\n**What version of Node.js are you using?**\n\nNone\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nmacOS 15.2\n\n**Reproduction URL**\n\nhttps://github.com/pinzonjulian/daisy-bug\n\n**Describe your issue**\n\nWhen installing DaysiUI in a brand new Rails app using the [Tailwind Standalone CLI](https://tailwindcss.com/blog/standalone-cli) via tailwind-rails and the [Bundle File instructions in the docs](https://daisyui.com/docs/install/rails/) is not having the desired effect. All of DaisyUI seems to be added to the app/assets/builds/tailwind.css output file.\n\nMy theory is that Tailwind is interpreting the daisyui.js file as a source file of the project because it doesn't fall into any of the rules of files [ignored by Tailwind's scanner](https://tailwindcss.com/docs/detecting-classes-in-source-files#which-files-are-scanned).\n\nThe resulting file weighs 177kb. If I comment @plugin ./daisiui.js the file weighs 8kb.\n\nI recently opened an issue in DaisyUI due to this same problem and it was determined that the source of it is most likely Tailwind.  https://github.com/saadeghi/daisyui/issues/3621\n\nTo fix the issue I had to ignore all sources and add them manually\nhttps://github.com/pinzonjulian/daisy-bug/compare/main...set-explicit-sources\n\nIt seems to me that Tailwind could automatically ignore plugin's path to prevent this from happening. If not, users are forced to list all paths manually which kind of goes against the objective of the new engine.\n\nThanks!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17058","RelatedDescription":"Open issue \"Plugin in source code is picked up as application code in Standalone CLI mode\" (#17058)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-03-11T03:30:22.7928955Z","RunDurationInMilliseconds":598}