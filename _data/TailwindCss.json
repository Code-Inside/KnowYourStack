{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2437500301","IsPullRequest":true,"CreatedAt":"2024-07-30T16:05:14","Actor":"philipp-spiess","Number":"14085","RawContent":null,"Title":"Fix Windows tests for new postcss plugin","State":"closed","Body":"This PR fixes the new `postcss-fix-relative-paths` plugin for Windows paths. The issue was that we mixed Windows-style path separators from the absolute file paths with the Posix-style separators from globs. This caused the `dirname` functions to resolve to the wrong files.\r\n\r\nTo solve this, we now make the difference very clear by calling the content a `glob`. For globs, we always expect Posix-style path separators and for the case of making a glob absolute (by prefixing the directory), we now convert them into Posix-style explicitly.\r\n\r\nThis PR also fixes an issue where negative rules (e.g. `!./**/*.ts`) were not properly rewritten.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14085","RelatedDescription":"Closed or merged PR \"Fix Windows tests for new postcss plugin\" (#14085)"},{"Id":"2437541646","IsPullRequest":true,"CreatedAt":"2024-07-30T11:24:15","Actor":"philipp-spiess","Number":"14086","RawContent":null,"Title":"Run CI on any PR change","State":"closed","Body":"This changes the V4 CI to run on any pull request change (so an opened, reopened, and updated PR), regardless if the PR is directed into the `next` branch or not. \r\n\r\nThis is helpful for testing stacked PRs like: https://github.com/tailwindlabs/tailwindcss/pull/14078","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14086","RelatedDescription":"Closed or merged PR \"Run CI on any PR change\" (#14086)"},{"Id":"2431845928","IsPullRequest":true,"CreatedAt":"2024-07-29T15:57:50","Actor":"philipp-spiess","Number":"14063","RawContent":null,"Title":"Add PostCSS plugin to fix relative `@content` and `@plugin` paths in `@import`ed files","State":"closed","Body":"We noticed an issue that happened when handling relative file imports in the `@plugin` and the upcoming `@content` APIs. The problem arises from relative files that are inside `@import`ed stylesheets. Take, for example, the following folder structure:\r\n\r\n```css\r\n/* src/index.css */\r\n@import \"./dir/index.css\";\r\n```\r\n```css\r\n/* src/dir/index.css */\r\n@plugin \"../../plugin.ts\";\r\n```\r\n\r\nIt's expected that the path is relative to the CSS file that defined it. However, right now, we use [`postcss-import`](https://github.com/postcss/postcss-import) to flatten the CSS file before running the tailwind build step. This causes these custom-properties to be inlined in a flat file which removes the information of which file is being referred:\r\n\r\n```css\r\n/* src/flat.css */\r\n@plugin \"../../plugin.ts\"; /* <- This is now pointing to the wrong file */\r\n```\r\n\r\nThere are generally two approaches that we can do to solve this:\r\n\r\n1. **Handle `@import` flattening inside tailwindcss:** While generally this would give us more freedom and less dependencies, this would require some work to get all edge cases right. We need to support layers/conditional imports and also handle all relative urls for properties like `background-image`. \r\n2. **Rewrite relative paths as a separate postcss visitor:** The approach this PR takes is instead to implement a custom postcss plugin that uses the AST to rewrite relative references inside `@plugin` and `@content`. This has the benefit of requiring little changes to our existing APIs. The rule is only enabled for relative references inside `@plugin` and `@content`, so the surface of this rule is very small.\r\n\r\nWe can use this plugin inside all three current clients: \r\n\r\n- `@tailwindcss/postcss` obviously already uses postcss\r\n- `@tailwindcss/cli` also uses postcss to handle `@import` flattening\r\n- `@tailwindcss/vite` allows us to add custom postcss rules via the CSS pipeline. There are a few cases that we handle with care (e.g. in vite you can pass a string to the postcss config which is supposed to load the config from a file).\r\n\r\n## Test plan\r\n\r\nTo validate the changes, we have added both a list of unit test cases to the plugin itself as well as verified that all three clients are working as expected:\r\n\r\n- `@tailwindcss/postcss` now has an explicit test for this behavior\r\n- `@tailwindcss/cli` and `@tailwindcss/vite` were manually tested by updating the vite playground. The CLI was run with `--cwd playgrounds/vite/ -i ./src/app.css -o foo.css`: \r\n    <img width=\"531\" alt=\"Screenshot 2024-07-29 at 11 35 59\" src=\"https://github.com/user-attachments/assets/78f0acdc-a46c-4c6c-917a-2916417b1001\"> \r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14063","RelatedDescription":"Closed or merged PR \"Add PostCSS plugin to fix relative `@content` and `@plugin` paths in `@import`ed files\" (#14063)"},{"Id":"2434841857","IsPullRequest":true,"CreatedAt":"2024-07-29T14:58:08","Actor":"philipp-spiess","Number":"14074","RawContent":null,"Title":"Prefix internal modules with `internal-*`","State":"closed","Body":"Last week we discussed bringing in some consistency for our non-public npm packages in the repo. We discussed using custom namespaces (e.g. `@tailwindcss-internal`) vs. simple prefixes but it does not matter too much if we are both consistent with our pattern and it's easy for us to see whether a plugin is public or not. \r\n\r\nSince we have a mixture of public namespaced (`@tailwindcss/*`) and non-namespaced (`tailwindcss`) packages, I think it would be best if we use a prefix to signal internal dependencies. This PR proposes we use `internal-*` as the prefix and renames `test-utils` to `internal-example-plugin` (since, really, this package is just an example for the Tailwind plugin system).","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14074","RelatedDescription":"Closed or merged PR \"Prefix internal modules with `internal-*`\" (#14074)"},{"Id":"2431950773","IsPullRequest":true,"CreatedAt":"2024-07-29T14:50:06","Actor":"philipp-spiess","Number":"14065","RawContent":null,"Title":"Add Windows CI","State":"closed","Body":"This PR changes the GitHub action workflow for V4 to start running all unit tests and build on both Ubuntu (our current default) _and_ Windows. This is to ensure we catch issues with paths and other Windows-specific things sooner. It does, however, not replace testing on Windows.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14065","RelatedDescription":"Closed or merged PR \"Add Windows CI\" (#14065)"},{"Id":"2435599053","IsPullRequest":true,"CreatedAt":"2024-07-29T14:34:33","Actor":"thecrypticace","Number":"14081","RawContent":null,"Title":"Automate checksum generation for standalone CLI","State":"open","Body":"We've done this manually until now which is _fine_ but not ideal so this PR automates it so it cannot be forgotten.\r\n\r\n@RobinMalfait do you know of a good way to test this w/o creating a tag? Should I add a `workflow_dispatch` trigger to the prepare release workflow?","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14081","RelatedDescription":"Open PR \"Automate checksum generation for standalone CLI\" (#14081)"},{"Id":"2427448708","IsPullRequest":true,"CreatedAt":"2024-07-29T14:16:46","Actor":"philipp-spiess","Number":"14048","RawContent":null,"Title":"Add support for explicit content path via `@content` ","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14048","RelatedDescription":"Closed or merged PR \"Add support for explicit content path via `@content` \" (#14048)"},{"Id":"2430951567","IsPullRequest":true,"CreatedAt":"2024-07-29T14:10:16","Actor":"kachkaev","Number":"14061","RawContent":null,"Title":"Remove cursor override for `:disabled` buttons","State":"closed","Body":"Related to https://github.com/tailwindlabs/tailwindcss/issues/8961 and https://github.com/tailwindlabs/tailwindcss/pull/8962\r\n\r\nBefore v4, buttons got this CSS in preflight:\r\n\r\nhttps://github.com/tailwindlabs/tailwindcss/blob/9824cb64a03afaa405e184cb31003c8a1efafaa7/src/css/preflight.css#L339-L353\r\n\r\nv4 (`next` branch) no longer has `cursor: pointer` in [preflight.css](https://github.com/tailwindlabs/tailwindcss/blob/2fe249963583e436961adc59cf9988af454e3da5/packages/tailwindcss/preflight.css)\r\n\r\nThis PR removes additional CSS for `:disabled` buttons. It was meant to undo an override that is no longer present.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14061","RelatedDescription":"Closed or merged PR \"Remove cursor override for `:disabled` buttons\" (#14061)"},{"Id":"2432871677","IsPullRequest":true,"CreatedAt":"2024-07-29T14:06:59","Actor":"kachkaev","Number":"14066","RawContent":null,"Title":"Specify pnpm version for corepack users","State":"closed","Body":"<!--\r\n\r\nðŸ‘‹ Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n\r\nI use [corepack](https://nodejs.org/api/corepack.html), so when I run `yarn` or `pnpm`, the command looks at the local `package.json` â†’ `packageManager` field, downloads a specific package manager if needed and then uses it.\r\n\r\nMost of the repos I deal with have this field, so my â€˜defaultâ€™ `pnpm` got a bit dated:\r\n\r\n```sh\r\npnpm --version\r\n8.10.5\r\n```\r\n\r\nWith this PR, corepack contributors like me will automatically opt into the right pnpm version:\r\n\r\n```sh\r\npnpm --version\r\n9.6.0\r\n```\r\n\r\nThis can prevent `pnpm-lock.yaml` spoiling which I have experienced in https://github.com/tailwindlabs/tailwindcss/pull/14061 (https://github.com/tailwindlabs/tailwindcss/pull/14061/commits/5d2d18e94dff56f5f76533b7be391238c099b15c). To be honest I discovered pnpm version mismatch quite late because I got used to correct version picking.\r\n\r\nGoing forward, pnpm version in CI can be also grabbed from `package.json` â†’ `packageManager` field. And this field can be automatically updated on schedule, e.g. via Renovate. Happy to help if thatâ€™s interesting.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14066","RelatedDescription":"Closed or merged PR \"Specify pnpm version for corepack users\" (#14066)"},{"Id":"2435526267","IsPullRequest":true,"CreatedAt":"2024-07-29T14:04:21","Actor":"RobinMalfait","Number":"14080","RawContent":null,"Title":"Add `@content` support to `@tailwindcss/postcss`","State":"open","Body":"This PR adds support for `@content` and makes sure that globs are registered within PostCSS.\n\nFrom a configuration perspective nothing changes for the end user. It does however make sure that `@content` can be used and changes in those globs will be picked up.\n<!--\n\nðŸ‘‹ Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14080","RelatedDescription":"Open PR \"Add `@content` support to `@tailwindcss/postcss`\" (#14080)"},{"Id":"2435495184","IsPullRequest":true,"CreatedAt":"2024-07-29T13:51:49","Actor":"RobinMalfait","Number":"14079","RawContent":null,"Title":"Add `@content` support to `tailwindcss`","State":"open","Body":"This PR adds `@content` support to `tailwindcss`'s core package. We will handle the `@content` and call the `onContentPath` function when it's encountered.\r\n\r\nThe `@tailwindcss/cli`, `@tailwindcss/vite` and `@tailwindcss/postcss` packages have to implement the `onContentPath` such that the necessary globs are scanned and watchers should be setup with this information.\r\n\r\nExample usage:\r\n\r\n```css\r\n@content \"../../packages/my-sibling-package/src/components/*.tsx\";\r\n```\r\n\r\nIf you are in a monorepo setup, then you could point to other packages if you want. Another common use case is for Laravel projects if you want to point to Laravel blade files since they won't be covered by Vite's module graph:\r\n\r\n```css\r\n/* ./resources/css/app.css */\r\n@content \"../views/*.blade.php\"\r\n```\r\n\r\nNote: all globs are relative to the current file you are in.\r\n\r\n<!--\r\n\r\nðŸ‘‹ Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14079","RelatedDescription":"Open PR \"Add `@content` support to `tailwindcss`\" (#14079)"},{"Id":"2435116352","IsPullRequest":true,"CreatedAt":"2024-07-29T11:04:41","Actor":"RobinMalfait","Number":"14078","RawContent":null,"Title":"Add `@content` support","State":"open","Body":"This PR is an umbrella PR where we will add support for `@content`. This will allow you to add explicit content globs if you want to look for Tailwind classes in other files that are not automatically detected yet.\r\n\r\nUsage example:\r\n\r\n```css\r\n/* ./src/input.css */\r\n@import \"tailwindcss\";\r\n@content \"../laravel/resources/views/**/*.blade.php\";\r\n@content \"../../packages/monorepo-package/**/*.js\";\r\n```\r\n\r\nPRs:\r\n\r\n- [x] https://github.com/tailwindlabs/tailwindcss/pull/14063\r\n- [x] https://github.com/tailwindlabs/tailwindcss/pull/14085\r\n- [ ] https://github.com/tailwindlabs/tailwindcss/pull/14079\r\n   - [ ] https://github.com/tailwindlabs/tailwindcss/pull/14067\r\n   - [ ] https://github.com/tailwindlabs/tailwindcss/pull/14076\r\n   - [ ] https://github.com/tailwindlabs/tailwindcss/pull/14080\r\n\r\nOnce all the PRs are merged, then this umbrella PR can be merged. \r\n\r\n> [!IMPORTANT]  \r\n> Make sure to merge this without rebasing such that each individual PR ends up on the main branch.\r\n\r\n<!--\r\n\r\nðŸ‘‹ Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14078","RelatedDescription":"Open PR \"Add `@content` support\" (#14078)"},{"Id":"2435053735","IsPullRequest":true,"CreatedAt":"2024-07-29T10:33:29","Actor":"RobinMalfait","Number":"14076","RawContent":null,"Title":"Add `@content` support to `@tailwindcss/vite`","State":"open","Body":"This PR makes sure that when you use `@content`, that these files are also being watched if you are using Vite.\n\nIn Vite we rely on the module graph instead, but sometimes it can be useful to watch files outside of the module graph. E.g.: A Laravel project, where you are watching `*.blade.php` files.\n<!--\n\nðŸ‘‹ Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14076","RelatedDescription":"Open PR \"Add `@content` support to `@tailwindcss/vite`\" (#14076)"},{"Id":"2433625739","IsPullRequest":false,"CreatedAt":"2024-07-28T13:34:49","Actor":"flavorjones","Number":"14072","RawContent":null,"Title":"`sha256sums.txt` is not available for the 3.4.7 release","State":"closed","Body":"**Context**\r\n\r\nSince https://github.com/tailwindlabs/tailwindcss/issues/11888, checksums have been made available for tailwindcss releases.\r\n\r\nThe most recent release, https://github.com/tailwindlabs/tailwindcss/releases/tag/v3.4.7, does not have the checksums file.\r\n\r\nCan you please make sure these checksums are part of the release process? They're used by downstream maintainers to automate our release processes (e.g., rails/tailwindcss-rails). Thank you so much!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14072","RelatedDescription":"Closed issue \"`sha256sums.txt` is not available for the 3.4.7 release\" (#14072)"},{"Id":"2430111488","IsPullRequest":false,"CreatedAt":"2024-07-27T15:46:38","Actor":"sntran","Number":"14058","RawContent":null,"Title":"[v4] variants are not applied to custom classes in utilities layer","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv4.0.0-alpha.17\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\n`@tailwindcss/cli@4.0.0-alpha.17`\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv20.12.2\r\n\r\n**What browser are you using?**\r\n\r\nChrome version 126.0.6478.127 (Official Build) (arm64)\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS 14.5 (23F79)\r\n\r\n**Reproduction**\r\n\r\n```css\r\n@import \"tailwindcss\";\r\n\r\n@layer utilities {\r\n  .foobar {\r\n    font-weight: bold;\r\n  }\r\n}\r\n```\r\n\r\n```html\r\n<h1 class=\"md:foobar before:foobar\">Bold</h1>\r\n```\r\n\r\n\r\n**Describe your issue**\r\n\r\nI would expect the following style generated, because `.foobar` is within `@layer` directive, and should be able to be used with modifiers, according to [docs](https://tailwindcss.com/docs/functions-and-directives#layer).\r\n\r\n```css\r\n@media (width >= 768px) {\r\n    .md\\:foobar {\r\n        font-weight: 700;\r\n    }\r\n}\r\n```\r\n\r\nBut there is not. Same with `before:foobar`.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14058","RelatedDescription":"Closed issue \"[v4] variants are not applied to custom classes in utilities layer\" (#14058)"},{"Id":"2431936190","IsPullRequest":false,"CreatedAt":"2024-07-27T15:20:12","Actor":"karlhorky","Number":"14064","RawContent":null,"Title":"Regression: classes with decimals no longer showing up in 4.0.0-alpha.18","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nFor example: v4.0.0-alpha.18\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nFor example: @tailwindcss/postcss 4.0.0-alpha.18, Next.js 15.0.0-rc.0\r\n\r\n**What version of Node.js are you using?**\r\n\r\nFor example: v20.15.0\r\n\r\n**What browser are you using?**\r\n\r\nFor example: Chrome\r\n\r\n**What operating system are you using?**\r\n\r\nFor example: macOS\r\n\r\n**Reproduction URL**\r\n\r\nTailwind Play for v4.0.0-alpha.17 (DOES NOT show bug, because it's a regression in v4.0.0-alpha.18): https://play.tailwindcss.com/1xOx8bbAcO?layout=horizontal\r\n\r\n![Screenshot 2024-07-26 at 12 27 32](https://github.com/user-attachments/assets/6072b1e4-18f7-416b-973d-64cc7b48c257)\r\n\r\nIn v4.0.0-alpha.18, the CSS block in the bottom right of the DevTools is missing.\r\n\r\n**Describe your issue**\r\n\r\nThe CSS for the `lg:w-0.5/10` class is missing in `tailwindcss@4.0.0-alpha.18`\r\n\r\n```css\r\n.lg\\:w-0\\.5\\/10 {\r\n    @media (width >= 64rem) {\r\n        width: calc(0.5 / 10* 100%);\r\n    }\r\n}\r\n```\r\n\r\nDetails:\r\n\r\n1. Other responsive width classes without decimals like `lg:w-9/10` work\r\n2. It is present in `tailwindcss@4.0.0-alpha.17`\r\n\r\n**Keywords for search**\r\n\r\ndecimal, period, dot, point","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14064","RelatedDescription":"Closed issue \"Regression: classes with decimals no longer showing up in 4.0.0-alpha.18\" (#14064)"},{"Id":"2432986656","IsPullRequest":false,"CreatedAt":"2024-07-27T15:17:15","Actor":"gabrielmfern","Number":"14070","RawContent":null,"Title":"`container` component's styles are added just when there is any `container` inside the markup","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.4.7\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\n`postcss` on my side, but this also happens on the Tailwind playground\r\n\r\n**What version of Node.js are you using?**\r\n\r\n20.11.1\r\n\r\n**What browser are you using?**\r\n\r\nIrrelevant for this issue.\r\n\r\n**What operating system are you using?**\r\n\r\nLinux\r\n\r\n**Reproduction URL**\r\n\r\nHere is a very minimal playground that has the issue:\r\n\r\nhttps://play.tailwindcss.com/1KVilgDOpB\r\n\r\nJust open the `Generated CSS` and go into the `Components` tab.\r\n\r\nThe full piece of code that had the issue for me, was:\r\n\r\nhttps://play.tailwindcss.com/IaQQgzRINi\r\n\r\n**Describe your issue**\r\n\r\nFrom the minimal reproduction, it seems that just having `container` inside the markup somewhere makes it so that Tailwind generates the `container` component's styles. I would guess this is an issue because it would be best to only have the styles for what is necessary.\r\n\r\nIt becomes clear that this might be related to some improper check to find the keyword as when any letter from `container` is removed, the styles generated go away, even in the full example. \r\n\r\nThis issue does not seem to happen when using the alpha versions of v4, though.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14070","RelatedDescription":"Closed issue \"`container` component's styles are added just when there is any `container` inside the markup\" (#14070)"},{"Id":"2432872632","IsPullRequest":true,"CreatedAt":"2024-07-26T19:49:12","Actor":"RobinMalfait","Number":"14067","RawContent":null,"Title":"Add `@content` support to `@tailwindcss/cli`","State":"open","Body":"This is a continuation of #14048 where we specifically focus on the `@tailwindcss/cli`.\r\n\r\nThis PR optimizes the globs such that we always have a clean `base` and the `glob` (which is the first dynamic part).\r\n\r\nThis PR also refactors the CLI such that we can watch files defined by the `@content` at-rules in the CSS. The `@parcel/watcher` watches from a base path (not a glob), which means that we have to create a watcher for each glob's base.\r\n\r\nThis PR also adds a `scanFiles` to the `scanDir` result, so that we can verify that a scanned file matches the globs we already know from `scanDir`.\r\n\r\n<!--\r\n\r\nðŸ‘‹ Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14067","RelatedDescription":"Open PR \"Add `@content` support to `@tailwindcss/cli`\" (#14067)"},{"Id":"2430220885","IsPullRequest":false,"CreatedAt":"2024-07-25T16:00:04","Actor":"dylancom","Number":"14059","RawContent":null,"Title":"[v3] scale transitions broken since scale moved away from css transforms","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nFor example: v3.4.7\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\npostcss-cli 8.3.1\r\n\r\n**What version of Node.js are you using?**\r\n\r\nFor example: v12.0.0\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS, Windows\r\n\r\n**Describe your issue**\r\n\r\nThe \"scale\" class switched from using the css property transform `transform: scale(2, 2)` to the new css property `scale`. This breaks animations that use the class `transition`. As it doesn't include `scale`. I noticed it is added to v4 though.\r\n\r\nFix: the transition class should include `scale`\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14059","RelatedDescription":"Closed issue \"[v3] scale transitions broken since scale moved away from css transforms\" (#14059)"},{"Id":"2430305897","IsPullRequest":true,"CreatedAt":"2024-07-25T15:31:53","Actor":"RobinMalfait","Number":"14060","RawContent":null,"Title":"Fix failing publish step","State":"closed","Body":"One of the (private) packages was missing a version which caused `pnpm publish` to fail. This PR adds the missing version.\n\n\n<!--\n\nðŸ‘‹ Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14060","RelatedDescription":"Closed or merged PR \"Fix failing publish step\" (#14060)"},{"Id":"2430084909","IsPullRequest":true,"CreatedAt":"2024-07-25T14:19:13","Actor":"adamwathan","Number":"14057","RawContent":null,"Title":"Prepare for v4.0.0-alpha.18 release","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14057","RelatedDescription":"Closed or merged PR \"Prepare for v4.0.0-alpha.18 release\" (#14057)"},{"Id":"2430027398","IsPullRequest":true,"CreatedAt":"2024-07-25T14:09:47","Actor":"adamwathan","Number":"14056","RawContent":null,"Title":"Reduce specificity of * variant","State":"closed","Body":"This PR reduces the specificity of the * variant so that classes directly on the child elements take precedence over the styles applied by the parent.\r\n\r\nPreviously a utility like `*:flex` would generate this CSS:\r\n\r\n```css\r\n.\\*\\:flex > * {\r\n  display: flex;\r\n}\r\n```\r\n\r\nThis selector has a specificity of `0,1,0`, which is the same as the specificity for a bare utility class like `flex`, `block`, or `grid`.\r\n\r\nBecause variants always appear later in the CSS file than bare utilities, this means that given this HTML, the `grid` class on the child element would have no effect:\r\n\r\n```html\r\n<div class=\"*:flex\">\r\n  <div>...</div>\r\n  <div class=\"grid\">...</div>\r\n  <div>...</div>\r\n</div>\r\n```\r\n\r\nAfter this PR, the `*:flex` utility generates this CSS instead:\r\n\r\n```css\r\n:where(.\\*\\:flex > *) {\r\n  display: flex;\r\n}\r\n```\r\n\r\nThis selector has a specificity of `0,0,0`, so even though it appears later in the CSS, a bare utility with a specificity of `0,1,0` will still take precedence.\r\n\r\nThis is something we wanted to do when we first introduced the `*` variant in the v3 series, but couldn't because having such a low specificity meant that styles in Preflight would take precedence over utilities like `*:flex`, which is not would anyone would want.\r\n\r\nWe can make this change for v4 because now all of Preflight is wrapped in a dedicated `@layer`, and rules from later layers always take precedence over rules from earlier layers even if the rule in the later layer has a lower specificity.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14056","RelatedDescription":"Closed or merged PR \"Reduce specificity of * variant\" (#14056)"},{"Id":"2429516433","IsPullRequest":false,"CreatedAt":"2024-07-25T12:35:26","Actor":"moshie","Number":"14054","RawContent":null,"Title":"addComponents Type doesn't accept nested properties in media queries","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.4.6\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nprejss-cli: 0.3.3\r\npostcss-cli: 11.0.0\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv20.15.1\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction:**\r\n\r\n```tsx\r\nimport type { PluginCreator, Config } from 'tailwindcss/types/config';\r\n\r\nconst pluginCreator: PluginCreator = function pluginCreator({\r\n  addBase,\r\n  addComponents,\r\n  config,\r\n}) {\r\n\r\naddComponents({\r\n    \"@media (min-width: 400px)\": [\r\n      {\r\n        \".range::-webkit-slider-thumb\": {\r\n          \"width\":\"var(--range-thumb-size)\",\r\n          \"height\":\"var(--range-thumb-size)\",\r\n          \"marginTop\":\"calc(((var(--range-thumb-size) / 2) - var(--range-track-height) / 2) * -1)\",\r\n          \"background\":\"url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3Cpath fill='white' d='M377.941 169.941V216H134.059v-46.059c0-21.382-25.851-32.09-40.971-16.971L7.029 239.029c-9.373 9.373-9.373 24.568 0 33.941l86.059 86.059c15.119 15.119 40.971 4.411 40.971-16.971V296h243.882v46.059c0 21.382 25.851 32.09 40.971 16.971l86.059-86.059c9.373-9.373 9.373-24.568 0-33.941l-86.059-86.059c-15.119-15.12-40.971-4.412-40.971 16.97z'/%3E%3C/svg%3E\\\")\\n        no-repeat\\n        center center / 20px 20px\\n        var(--range-thumb-background)\"\r\n        }\r\n      }\r\n    ]\r\n  });\r\n}\r\n```\r\n\r\n<img width=\"819\" alt=\"Screenshot 2024-07-25 at 10 40 36\" src=\"https://github.com/user-attachments/assets/474c2187-6ad6-4843-95ed-741f3dd3be25\">\r\n\r\n```\r\nType '{ \".range::-webkit-slider-thumb\": { width: string; height: string; marginTop: string; background: string; }; }' is not assignable to type 'string'\r\n```\r\n\r\n```json\r\n{\r\n  \"$schema\": \"https://json.schemastore.org/tsconfig\",\r\n  \"compilerOptions\": {\r\n    \"target\": \"ES2020\",\r\n    \"lib\": [\"ES2020\", \"DOM\", \"DOM.Iterable\"],\r\n    \"allowJs\": true,\r\n    \"skipLibCheck\": true,\r\n    \"esModuleInterop\": true,\r\n    \"allowSyntheticDefaultImports\": true,\r\n    \"strict\": true,\r\n    \"forceConsistentCasingInFileNames\": true,\r\n    \"noFallthroughCasesInSwitch\": true,\r\n    \"module\": \"ESNext\",\r\n    \"moduleResolution\": \"bundler\",\r\n    \"resolveJsonModule\": true,\r\n    \"isolatedModules\": true,\r\n    \"noEmit\": true,\r\n    \"jsx\": \"react-jsx\",\r\n    \"noUnusedLocals\": true,\r\n    \"noUnusedParameters\": true,\r\n  },\r\n  \"exclude\": [\"dist\", \"bundles\", \"node_modules\"],\r\n  \"include\": [\"**/*.ts\", \"**/*.tsx\"]\r\n}\r\n```\r\n\r\n**Describe your issue**\r\n\r\nI am using prejss-cli to convert css into js and then pulling that converted js into the plugin and into addComponents.\r\n\r\nunfortunately it's not happy with the first type on the addComponents argument.\r\n\r\nSeems like if it's an array then it's expecting a string not an object?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14054","RelatedDescription":"Closed issue \"addComponents Type doesn't accept nested properties in media queries\" (#14054)"},{"Id":"2429365319","IsPullRequest":true,"CreatedAt":"2024-07-25T11:02:44","Actor":"VoltagedDebunked","Number":"14052","RawContent":null,"Title":"Included variable in output for bare utilities like rounded, added more stuff to theme.css for extended fonts and animations","State":"closed","Body":"# TailwindCSS Commit: Included variable in output for bare utilities like rounded, added more stuff to theme.css for extended fonts and animations\r\nAdded more stuff to the CSS itself like animations, fonts, etc. Added output for bare variables, and other. \r\nBugfixes\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14052","RelatedDescription":"Closed or merged PR \"Included variable in output for bare utilities like rounded, added more stuff to theme.css for extended fonts and animations\" (#14052)"},{"Id":"2427834497","IsPullRequest":true,"CreatedAt":"2024-07-25T08:54:04","Actor":"philipp-spiess","Number":"14049","RawContent":null,"Title":"Feat/import","State":"closed","Body":"<!--\r\n\r\nðŸ‘‹ Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14049","RelatedDescription":"Closed or merged PR \"Feat/import\" (#14049)"},{"Id":"2424469097","IsPullRequest":true,"CreatedAt":"2024-07-24T16:46:21","Actor":"philipp-spiess","Number":"14037","RawContent":null,"Title":"Normalize attribute selector for `data-*` and `aria-*` modifiers","State":"closed","Body":"Fixes #14026 \r\nSee #14040 for the v4 fix\r\n\r\nWhen translating `data-` and `aria-` modifiers with attribute selectors, we currently do not wrap the target attribute in quotes. This only works for keywords (purely alphabetic words) but breaks as soon as there are numbers or things like spaces in the attribute:\r\n\r\n```html\r\n<div data-id=\"foo\" class=\"data-[id=foo]:underline\">underlined</div>\r\n<div data-id=\"f1\" class=\"data-[id=1]:underline\">not underlined</div>\r\n<div data-id=\"foo bar\" class=\"data-[id=foo_bar]:underline\">not underlined</div>\r\n```\r\n\r\nSince it's fairly common to have attribute selectors with `data-` and `aria-` modifiers, this PR will now wrap the attribute in quotes unless these are already wrapped. \r\n\r\n| Tailwind Modifier  | CSS Selector |\r\n| ------------- | ------------- |\r\n| `.data-[id=foo]`  | `[data-id='foo']`  |\r\n| `.data-[id='foo']`  | `[data-id='foo']`  |\r\n| `.data-[id=foo_i]`  | `[data-id='foo i']`  |\r\n| `.data-[id='foo'_i]`  | `[data-id='foo' i]`  |\r\n| `.data-[id=123]`  | `[data-id='123']`  |\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14037","RelatedDescription":"Closed or merged PR \"Normalize attribute selector for `data-*` and `aria-*` modifiers\" (#14037)"},{"Id":"2426058425","IsPullRequest":true,"CreatedAt":"2024-07-24T15:07:24","Actor":"thecrypticace","Number":"14044","RawContent":null,"Title":"Add support for defining simple custom utilities in CSS via `@utility`","State":"closed","Body":"This PR allows you to add custom utilities to your project via the new `@utility` rule.\r\n\r\nFor example, given the following:\r\n```css\r\n@utility text-trim {\r\n  text-box-trim: both;\r\n  text-box-edge: cap alphabetic;\r\n}\r\n```\r\n\r\nA new `text-trim` utility is available and can be used directly or with variants:\r\n```html\r\n<div class=\"text-trim\">...</div>\r\n<div class=\"hover:text-trim\">...</div>\r\n<div class=\"lg:dark:text-trim\">...</div>\r\n```\r\n\r\nIf a utility is defined more than one time the latest definition will be used:\r\n```css\r\n@utility text-trim {\r\n  text-box-trim: both;\r\n  text-box-edge: cap alphabetic;\r\n}\r\n\r\n@utility text-trim {\r\n  text-box-trim: both;\r\n  text-box-edge: cap ideographic;\r\n}\r\n```\r\n\r\nThen using `text-trim` will produce the following CSS:\r\n```css\r\n.text-trim {\r\n  text-box-trim: both;\r\n  text-box-edge: cap ideographic;\r\n}\r\n```\r\n\r\nYou may also override specific existing utilities with this â€” for example to add a `text-rendering` property to the `text-sm` utility:\r\n```css\r\n@utility text-sm {\r\n  font-size: var(--font-size-sm, 0.875rem);\r\n  line-height: var(--font-size-sm--line-height, 1.25rem);\r\n  text-rendering: optimizeLegibility;\r\n}\r\n```\r\n\r\nThough it's preferred, should you not need to add properties, to override the theme instead.\r\n\r\nLastly, utilities with special characters do not need to be escaped like you would for a class name in a selector:\r\n```css\r\n@utility push-1/2 {\r\n  right: 50%;\r\n}\r\n```\r\n\r\nWe do however explicitly error on certain patterns that we want to reserve for future use, for example `push-*` and `push-[15px]`.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14044","RelatedDescription":"Closed or merged PR \"Add support for defining simple custom utilities in CSS via `@utility`\" (#14044)"},{"Id":"2425083509","IsPullRequest":true,"CreatedAt":"2024-07-24T14:55:07","Actor":"philipp-spiess","Number":"14040","RawContent":null,"Title":"Normalize attribute selectors for `data-*` and `aria-*` modifiers","State":"closed","Body":"Fixes #14026 \r\nSee https://github.com/tailwindlabs/tailwindcss/pull/14037 for the v3 fix\r\n\r\nWhen translating `data-` and `aria-` modifiers with attribute selectors, we currently do not wrap the target attribute in quotes. This only works for keywords (purely alphabetic words) but breaks as soon as there are numbers or things like spaces in the attribute:\r\n\r\n```html\r\n<div data-id=\"foo\" class=\"data-[id=foo]:underline\">underlined</div>\r\n<div data-id=\"f1\" class=\"data-[id=1]:underline\">not underlined</div>\r\n<div data-id=\"foo bar\" class=\"data-[id=foo_bar]:underline\">not underlined</div>\r\n```\r\n\r\nSince it's fairly common to have attribute selectors with `data-` and `aria-` modifiers, this PR will now wrap the attribute in quotes unless these are already wrapped. \r\n\r\n| Tailwind Modifier  | CSS Selector |\r\n| ------------- | ------------- |\r\n| `.data-[id=foo]`  | `[data-id='foo']`  |\r\n| `.data-[id='foo']`  | `[data-id='foo']`  |\r\n| `.data-[id=foo_i]`  | `[data-id='foo i']`  |\r\n| `.data-[id='foo'_i]`  | `[data-id='foo' i]`  |\r\n| `.data-[id=123]`  | `[data-id='123']`  |","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14040","RelatedDescription":"Closed or merged PR \"Normalize attribute selectors for `data-*` and `aria-*` modifiers\" (#14040)"},{"Id":"2422759956","IsPullRequest":true,"CreatedAt":"2024-07-23T12:40:11","Actor":"philipp-spiess","Number":"14034","RawContent":null,"Title":"Print eventual lightning CSS parsing errors when the CSS matcher fail","State":"closed","Body":"When working on adding a test case with the slightly more complex arbitrary variants names:\r\n\r\n```\r\n[&[data-foo=1]+.bar]:underline\r\n```\r\n\r\nwe noticed that the CSS formatting helpers were giving us unhelpful diff outputs that would make it hard to find the issue.\r\n\r\nIt turns out that we try to normalize the CSS with lightningcss _and automatically fall back to prettier if lightning fails_. This caused confusion and quite a bit of time to understand what's going on. In our case, the CSS being generated by Tailwind was not adding quotes around attribute selectors which caused lightning to fail but prettier to automatically insert these quotes.\r\n\r\nTo fix this, we now capture any eventual lightning error and include it when the test matcher is going to fail (so we keep the tests that currently rely on this behavior clean while adding useful debug information for new tests).\r\n\r\nHere's an example of the new error message:\r\n\r\n````\r\nError: Error formatting using Lightning CSS:\r\n\r\n```css\r\n    text-decoration-line: underline\r\n}\r\n.data-\\[id\\=0\\]\\:underline[data-id=0] {\r\n                                    ^-- SyntaxError: Invalid value in attribute selector: Number { has_sign: false, value: 0.0, int_value: Some(0) }\r\n    text-decoration-line: underline\r\n}\r\n```\r\n````","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14034","RelatedDescription":"Closed or merged PR \"Print eventual lightning CSS parsing errors when the CSS matcher fail\" (#14034)"},{"Id":"2424836292","IsPullRequest":false,"CreatedAt":"2024-07-23T10:31:17","Actor":"Jauharmuhammed","Number":"14038","RawContent":null,"Title":"Overscroll bug across entire site, especially on the docs navbar","State":"closed","Body":"\r\n<img width=\"1440\" alt=\"Screenshot 2024-07-23 at 3 53 00â€¯PM\" src=\"https://github.com/user-attachments/assets/8c5e21e9-36e7-4919-8dac-fd5873757508\">\r\n\r\nBrowser : Chrome\r\nOS: macOS,\r\n\r\n**Describe your issue**\r\n\r\nthere is an overscroll behaviour bug across the entire https://tailwindcss.com/ website. on the docs section navbar look really weird on scroll.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14038","RelatedDescription":"Closed issue \"Overscroll bug across entire site, especially on the docs navbar\" (#14038)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-07-31T03:30:21.8908335Z","RunDurationInMilliseconds":393}