{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"3140595323","IsPullRequest":false,"CreatedAt":"2025-06-12T18:26:47","Actor":"QWERTIOX","Number":"18300","RawContent":null,"Title":"Sources are ignored in gitignored directory even when they are explicity set using hard path","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.1.8 standalone\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nMeson where i call cli\n\n**What version of Node.js are you using?**\n\nNot applicable\n\n**What browser are you using?**\n\nChrome, Zen (doesn't matter)\n\n**What operating system are you using?**\n\nLinux WSL Debian bookworm\n\n**Reproduction URL**\nhttps://codeberg.org/QWERTIOX/bug_reports/src/branch/tailwindcss_gitignore\n\n\n**Describe your issue**\n\nWhen you have html files inside git ignored directory and path in @source is hard cli don't see html files\n(would be nice to have verbose mode so it would be easier to see which html files are read)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18300","RelatedDescription":"Closed issue \"Sources are ignored in gitignored directory even when they are explicity set using hard path\" (#18300)"},{"Id":"3140793859","IsPullRequest":false,"CreatedAt":"2025-06-12T16:14:03","Actor":"luckzilong","Number":"18301","RawContent":null,"Title":"(bug): Custom CSS has no intelligent prompts","State":"closed","Body":"**What version of Tailwind CSS are you using?   **\n\nv4.1.8\n\n**What build tool (or framework if it abstracts the build tool) are you using?   **\n\nVite 6.3.5\n\n**What version of Node.js are you using?   **\n\nv20.14.0\n\n**What browser are you using?   **\n\nChrome\n\n**What operating system are you using?   **\n\nWindows\n\n**Reproduction URL**\n\n**Describe your issue**\n\nUse the following in the css file containing @import \"tailwindcss\" :\n\n``` css\n.flex-center {\n  @apply flex items-center justify-center;\n}\n```\n\nor\n\n``` css\n@layer utilities {\n  .flex-center {\n    @apply flex items-center justify-center;\n  }\n}\n```\n\nWhen I'm on the element tag 'class', it normally has the intelligent prompt of 'tailwindcss', but does not contain 'flex-center'","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18301","RelatedDescription":"Closed issue \"(bug): Custom CSS has no intelligent prompts\" (#18301)"},{"Id":"3140531421","IsPullRequest":false,"CreatedAt":"2025-06-12T14:28:45","Actor":"0x0bit","Number":"18298","RawContent":null,"Title":"Cannot apply unknown utility class button","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: 4.1.10\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n```json\n{\n  \"dependencies\": {\n    \"next\": \"15.3.3\",\n    \"react\": \"^19.0.0\",\n    \"react-dom\": \"^19.0.0\"\n  },\n  \"devDependencies\": {\n    \"@eslint/eslintrc\": \"^3\",\n    \"@tailwindcss/oxide-darwin-x64\": \"^4.1.9\",\n    \"@tailwindcss/postcss\": \"^4.1.10\",\n    \"@types/node\": \"^20\",\n    \"@types/react\": \"^19\",\n    \"@types/react-dom\": \"^19\",\n    \"eslint\": \"^9\",\n    \"eslint-config-next\": \"15.3.3\",\n    \"eslint-config-prettier\": \"^10.1.5\",\n    \"prettier\": \"^3.5.3\",\n    \"tailwindcss\": \"^4.1.10\",\n    \"tailwindcss-animate\": \"^1.0.7\",\n    \"typescript\": \"^5\"\n  }\n}\n```\n\n**What version of Node.js are you using?**\n\nv20.19.2\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\nmacOS\n\n**Reproduction URL**\n\n\n**Describe your issue**\n\nAfter I used `npx@tailwindcss/upgrade` to migrate from `v3` to `v4`, When the project is running, an error will be reported when accessed by chrome:\n```\nError: Cannot apply unknown utility class `button`\n    [at onInvalidCandidate (project/node_modules/tailwindcss/dist/lib.js:18:1509)]\n    [at ge (project/node_modules/tailwindcss/dist/lib.js:13:29503)]\n    [at project/node_modules/tailwindcss/dist/lib.js:18:373]\n    [at I (project/node_modules/tailwindcss/dist/lib.js:3:1656)]\n    [at je (project/node_modules/tailwindcss/dist/lib.js:18:172)]\n    [at bi (project/node_modules/tailwindcss/dist/lib.js:35:780)]\n    [at async yi (project/node_modules/tailwindcss/dist/lib.js:35:1123)]\n    [at async _r (project/node_modules/@tailwindcss/node/dist/index.js:10:3384)]\n    [at async p (project/node_modules/@tailwindcss/postcss/dist/index.js:10:4019)]\n    [at async Object.Once (project/node_modules/@tailwindcss/postcss/dist/index.js:10:4290)]\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18298","RelatedDescription":"Closed issue \"Cannot apply unknown utility class button\" (#18298)"},{"Id":"3140043919","IsPullRequest":false,"CreatedAt":"2025-06-12T12:11:44","Actor":"rettimo","Number":"18296","RawContent":null,"Title":"Inline theme variables do not respond to custom variants","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.8\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example:  @tailwindcss/postcss: 4.0.14,  vite: 5.4.10,  @tailwindcss/vite: 4.1.8,  react: 18.3.1,  react-dom: 18.3.1,\n\n**What version of Node.js are you using?**\n\nv18.20.3\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Describe your issue**\n\nI'm setting up global colors using inline theme variables:\n\n```scss\n@import 'tailwindcss';\n\n@custom-variant dark (&:where(.dark, .dark *));\n\n@theme {\n  --color-content: var(--color-white); // works\n}\n\n@theme static {\n  --color-content: var(--color-white); // works\n}\n\n@theme inline {\n  --color-content: var(--color-white); // does not work\n}\n\n@layer base {\n  @variant dark {\n    --color-content: var(--color-black);\n  }\n}\n```\n\nThe issue is that when switching themes, the `--color-content` variable doesn't update when defined inside `@theme inline {}`. It always stays the same regardless of whether the `.dark` class is present.\n\nThis problem only affects the inline theme type. With `@theme {}` or `@theme static {}`, the variable updates correctly when the theme changes.\n\nA reproduction is **required** when filing an issue — any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18296","RelatedDescription":"Closed issue \"Inline theme variables do not respond to custom variants\" (#18296)"},{"Id":"3138421034","IsPullRequest":true,"CreatedAt":"2025-06-12T00:29:15","Actor":"jlukic","Number":"18292","RawContent":null,"Title":"Feat: Adds rust config options to detect threading support in oxide","State":"open","Body":"This modifies Oxide to use helpers for parallel processing that allow Oxide to compile to `unknown-unknown`. \r\n\r\nThis lets Oxide work in the browser without dealing with the rabbit hole of permissions around using `SharedArrayBuffer` which include custom HTTP header requirements like `Cross-Origin-Embedder-Policy` and `Cross-Origin-Opener-Policy`\r\n\r\n#11610 \r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18292","RelatedDescription":"Open PR \"Feat: Adds rust config options to detect threading support in oxide\" (#18292)"},{"Id":"3138010834","IsPullRequest":true,"CreatedAt":"2025-06-11T20:26:51","Actor":"RobinMalfait","Number":"18290","RawContent":null,"Title":"Prepare v4.1.10","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18290","RelatedDescription":"Closed or merged PR \"Prepare v4.1.10\" (#18290)"},{"Id":"3137902392","IsPullRequest":false,"CreatedAt":"2025-06-11T20:18:15","Actor":"wongjn","Number":"18288","RawContent":null,"Title":"`calc()` in arbitrary class name missing spaces around `-`","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.9\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nTailwind Play\n\n**What version of Node.js are you using?**\n\nN/a\n\n**What browser are you using?**\n\nChrome, Firefox\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/VL4wmKtq0r\n\n**Describe your issue**\n\nSeems like work in #18220 may have introduced some regressions in whitespace handling in `calc()`.\n\nFor `w-[calc(100%-var(--foo))]`, we get:\n\n```css\nwidth: calc(100%-var(--foo));\n```\nBut I would expect:\n\n```css\nwidth: calc(100% - var(--foo));\n```\n\nSource: https://discord.com/channels/486935104384532500/1382440930182828104","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18288","RelatedDescription":"Closed issue \"`calc()` in arbitrary class name missing spaces around `-`\" (#18288)"},{"Id":"3137985999","IsPullRequest":true,"CreatedAt":"2025-06-11T20:18:14","Actor":"RobinMalfait","Number":"18289","RawContent":null,"Title":"Fix missing space around `-` when using `%` regression","State":"closed","Body":"This PR fixes a regression we shipped in v4.1.9, when using arbitrary values and injecting spaces around operator.\n\nWhen you use `w-[calc(100%-var(--foo))]`, you expect that this generates valid CSS:\n\n```css\nwidth: calc(100% - var(--foo));\n```\n\nBut due to a regression, we generated:\n\n```css\nwidth: calc(100%-var(--foo));\n```\n\nWhich is invalid CSS.\n\nThis is because the algorithm we used to know when we had to inject a space around the `-` didn't take the `%` sign into account.\n\nWe also didn't handle uppercase units like `123PX` properly. This PR fixes both issues.\n\n## Test plan\n\n1. Added a regression test for the `%`\n2. Added a regression test for uppercase units like `123PX`\n\nFixes: #18288\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18289","RelatedDescription":"Closed or merged PR \"Fix missing space around `-` when using `%` regression\" (#18289)"},{"Id":"3136731661","IsPullRequest":true,"CreatedAt":"2025-06-11T17:57:02","Actor":"depfu[bot]","Number":"18284","RawContent":null,"Title":"Update @types/react-dom 19.1.5 → 19.1.6 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​types/react-dom (19.1.5 → 19.1.6) · [Repo](https://github.com/DefinitelyTyped/DefinitelyTyped)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18284","RelatedDescription":"Closed or merged PR \"Update @types/react-dom 19.1.5 → 19.1.6 (patch)\" (#18284)"},{"Id":"3137279779","IsPullRequest":true,"CreatedAt":"2025-06-11T15:31:41","Actor":"moshie","Number":"18287","RawContent":null,"Title":"Address No \"exports\" main defined in package json for vite","State":"open","Body":"## Summary\r\n\r\nPackage JSON is missing the main property\r\n\r\nFixes: #16751 \r\n\r\nResolves:\r\n\r\n<img width=\"1162\" alt=\"Screenshot 2025-06-11 at 16 34 19\" src=\"https://github.com/user-attachments/assets/7efbf61b-5608-4ede-b395-d26461ed98b4\" />\r\n\r\n## Test plan\r\n\r\nI applied this fix directly in my local node modules and this fixed the error\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18287","RelatedDescription":"Open PR \"Address No \"exports\" main defined in package json for vite\" (#18287)"},{"Id":"3136731978","IsPullRequest":true,"CreatedAt":"2025-06-11T13:57:38","Actor":"RobinMalfait","Number":"18285","RawContent":null,"Title":"Prepare v4.1.9","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18285","RelatedDescription":"Closed or merged PR \"Prepare v4.1.9\" (#18285)"},{"Id":"3135979966","IsPullRequest":false,"CreatedAt":"2025-06-11T09:06:43","Actor":"CatBot-Crying","Number":"18281","RawContent":null,"Title":"Error command cli","State":"closed","Body":"Error: Missing opening {\nError: Command \"npx @tailwindcss/cli  -i ./src/style.css -o ./dist/style.css\" exited with 1\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18281","RelatedDescription":"Closed issue \"Error command cli\" (#18281)"},{"Id":"3135204331","IsPullRequest":false,"CreatedAt":"2025-06-11T08:02:58","Actor":"audinue","Number":"18276","RawContent":null,"Title":"Starting Style in the Base Layer","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.1.8\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite, Playground\n\n**What version of Node.js are you using?**\n\n23.11.1\n\n**What browser are you using?**\n\nEdge 137.0.3296.68\nChrome 137.0.7151.104\n\n**What operating system are you using?**\n\nWindows 10\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/d5N8skje1t\n\n**Describe your issue**\n\n`starting:opacity-0` doesn't work when it's generated in the `base` layer.\n\nI've provided 4 examples to demonstrated that:\n1. `starting:opacity-0` (generated in base layer)\n2. `[@starting-style]:opacity-0` (generated in base layer)\n3. `starting-opacity-bug` (generated in base layer)\n4. `starting-opacity-0-fix` (not in base layer &rarr; works)\n\nhttps://github.com/user-attachments/assets/b47942a7-f3c3-4478-aac0-87b5e29d858e\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18276","RelatedDescription":"Closed issue \"Starting Style in the Base Layer\" (#18276)"},{"Id":"3135681423","IsPullRequest":false,"CreatedAt":"2025-06-11T07:06:31","Actor":"scheinercc","Number":"18278","RawContent":null,"Title":"Breakpoint sequence off for pixel values","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.1.8\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\npostcss-cli 11.0.1\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What browser are you using?**\n\nFirefox Dev, Chrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nA Tailwind Play link: https://play.tailwindcss.com/JwD8bUESaW \nIn the root `<div>` I added `sm:w-100 min-[45rem]:w-200 min-[800px]:w-300`.\n\n**Describe your issue**\n\nBased on the browsers' default 16px for 1rem, the `sm` selector should be first in the generated file, the `min-[45rem]` second, and `min-[800px]` last.\n\nYou can see in the screenshot that this is not the case, and the pixel value comes first.\n\n<img width=\"653\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/cfb6ff3f-a429-430b-910c-1b76f495431d\" />\n\n\nHere are examples from a project.\n\n`lg:` vs `min-[1665px]`\n<img width=\"496\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e0f5d002-714d-4861-b1cc-204940e5ef5d\" />\n\n`lg:` vs `min-[104rem]`\n<img width=\"501\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/efba1a5f-8660-4313-b614-6492561e4cbe\" />\n\nBoth should be in the same sequence.\n\nIn order to get the media queries into the correct sequence, the pixel values need to be changed into their corresponding `rem` values.\n\nFYI, the example in the docs for arbitrary values uses `px` values, which indicates they should play nicely together: https://tailwindcss.com/docs/responsive-design#using-arbitrary-values","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18278","RelatedDescription":"Closed issue \"Breakpoint sequence off for pixel values\" (#18278)"},{"Id":"3131072667","IsPullRequest":true,"CreatedAt":"2025-06-10T19:16:43","Actor":"depfu[bot]","Number":"18262","RawContent":null,"Title":"Update tree-sitter 0.22.4 → 0.25.0 (major)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this upgrade. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ tree-sitter (0.22.4 → 0.25.0) · [Repo](https://github.com/tree-sitter/node-tree-sitter)\n\n\n\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/tree-sitter/node-tree-sitter/compare/483e1853edd4e3e228dd0b0b3196d7cb85a4b093...3343ab8cf99540caf792eb69a29c243defffa983\">See the full diff on Github</a>. The new version differs by 4 commits:</p>\n<ul>\n<li><a href=\"https://github.com/tree-sitter/node-tree-sitter/commit/3343ab8cf99540caf792eb69a29c243defffa983\"><code>0.25.0</code></a></li>\n<li><a href=\"https://github.com/tree-sitter/node-tree-sitter/commit/6d718f90e901e5a4120368ad7e1fa09ded76ce53\"><code>Bump core lib to 0.25.5</code></a></li>\n<li><a href=\"https://github.com/tree-sitter/node-tree-sitter/commit/8ff5c15c1fb521a42b192f0139ed8e7b5bc67ed9\"><code>chore: update `FUNDING.yml`</code></a></li>\n<li><a href=\"https://github.com/tree-sitter/node-tree-sitter/commit/558bfd4c509332ff1e749dbbe76fd65501342bf0\"><code>chore: add `FUNDING.yml`</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18262","RelatedDescription":"Closed or merged PR \"Update tree-sitter 0.22.4 → 0.25.0 (major)\" (#18262)"},{"Id":"3134097854","IsPullRequest":false,"CreatedAt":"2025-06-10T15:46:38","Actor":"sntran","Number":"18274","RawContent":null,"Title":"[v4][cli] The `--minify` and `--optimize` flags remove CSS from output","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.1.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n`@tailwindcss/cli@4.1.7`\n\n**What version of Node.js are you using?**\n\nv22.11.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction**\n\nI can't reproduce it on Play Tailwind since it does not minify. Below are the steps to reproduce:\n\nCreate a test.css with the following content:\n\n```css\n@import \"tailwindcss\";\n\n@custom-variant @scroll-snapped-x {\n  @container scroll-state(snapped: x) { @slot; }\n  @supports (container-type: scroll-state) {\n    .\\@scroll-snapped-x > & { @slot }\n  }\n}\n```\n\nAnd \"index.html\":\n\n```html\n<section class=\"@container\">\n  <div class=\"@scroll-snapped-x:h-auto\"></div>\n</section>\n```\n\nRun Tailwind CLI on that \"test.css\" file:\n\n```shell\n$ npx tailwindcss --input test.css\n```\n\nInspects the output to see that it contains the following snippet:\n\n```css\n.\\@scroll-snapped-x\\:h-auto {\n  @container scroll-state(snapped: x) {\n    height: auto;\n  }\n  @supports (container-type: scroll-state) {\n    .\\@scroll-snapped-x > & {\n      height: auto;\n    }\n  }\n}\n```\n\nNow run Tailwind CLI with `--minify` flag:\n\n```shell\n$ npx tailwindcss --input test.css --minify\n```\n\nInspects the output and see that only the following snippet is generated (whitespaces and newlines are added for readability):\n\n```css\n@supports (container-type:scroll-state) {\n  .\\@scroll-snapped-x>.\\@scroll-snapped-x\\:h-auto {\n    height:auto\n  }\n}\n```\n\nSimilarly, when run with `--minify` flag, the output only contains the following snippet:\n\n```css\n@supports (container-type: scroll-state) {\n  .\\@scroll-snapped-x > .\\@scroll-snapped-x\\:h-auto {\n    height: auto;\n  }\n}\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18274","RelatedDescription":"Open issue \"[v4][cli] The `--minify` and `--optimize` flags remove CSS from output\" (#18274)"},{"Id":"3131328518","IsPullRequest":true,"CreatedAt":"2025-06-10T11:07:41","Actor":"depfu[bot]","Number":"18267","RawContent":null,"Title":"Update @types/react 19.1.4 → 19.1.6 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​types/react (19.1.4 → 19.1.6) · [Repo](https://github.com/DefinitelyTyped/DefinitelyTyped)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18267","RelatedDescription":"Closed or merged PR \"Update @types/react 19.1.4 → 19.1.6 (patch)\" (#18267)"},{"Id":"3127244303","IsPullRequest":false,"CreatedAt":"2025-06-10T04:46:49","Actor":"Nick-Mazuk","Number":"18254","RawContent":null,"Title":"Devserver w/ vite takes 5+ seconds to reload","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nVersion 4.1.8 (latest as of filing this bug)\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.3.5 (latest as of filing this bug)\n\n**What version of Node.js are you using?**\n\nTested using:\n\n- Node 24.1.0\n- 1.2.14\n\n**What browser are you using?**\n\nTested on:\n\n- Arc, based on Chromium 137.0.7151.56\n- Safari 17.5\n\n**What operating system are you using?**\n\nmacOS 14.5, and macOS 15.15\n\n**Reproduction URL**\n\nhttps://github.com/Nick-Mazuk/sveltekit-tailwindcss-devserver-speed\n\n**Describe your issue**\n\nExpectation: with a vite devserver, loading the page initially and reloading on changes should be near instant.\n\nActual: initial vite devserver takes 10+ seconds to load the webpage. Reloading on any changes take 5+ seconds.\n\nI've confirmed that if I remove tailwindcss, loading and reloading is near instant as expected.\n\nIn the following video, you can watch the terminal refresh immediately on save but see the site itself take ~5 more seconds before updating.\n\nhttps://github.com/user-attachments/assets/febcff46-00ee-4725-a688-826eec0f2357","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18254","RelatedDescription":"Closed issue \"Devserver w/ vite takes 5+ seconds to reload\" (#18254)"},{"Id":"3131206253","IsPullRequest":false,"CreatedAt":"2025-06-09T19:14:54","Actor":"rozsazoltan","Number":"18265","RawContent":null,"Title":"`divide-*` from v4 no longer handles the case where the last child is not visually the last due to ordering","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.1.8\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nTailwind CLI\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/m0waYMBKqD\n\n**Describe your issue**\n\nhttps://discord.com/channels/486935104384532500/1381708995294925013/1381708995294925013\n\nFor example, I want to use it in a flex container where I move the last child to a different position using order; in this case, the divider lines are displayed incorrectly. In v3, it worked correctly (https://play.tailwindcss.com/WZFciT0r4a) due to a different utility declaration.\n\n```html\n<div>\n  <ul class=\"grid grid-cols-1 divide-y divide-gray-500\">\n    <li style=\"order: 1\">Item</li>\n    <li style=\"order: 2\">Item</li>\n    <li style=\"order: 3\">Item</li>\n    <li style=\"order: 4\">Item</li>\n    <li style=\"order: 5\">Item</li>\n    <li style=\"order: 7\">Item</li>\n    <li style=\"order: 8\">Item</li>\n    <li style=\"order: 9\">Item</li>\n    <li style=\"order: 10\">Item</li>\n    <li style=\"order: 6\">Item add after loop</li> <!-- here -->\n  </ul>\n</div>\n```\n\nAlthough the issue can be resolved by placing such special elements in front of the special set of 10 items instead of after them: https://play.tailwindcss.com/ybjqBMHTGA, I believe this is still an unexpected behavior.\n\n**v4**\n```css\n.divide-y {\n  :where(& > :not(:last-child)) {\n    --tw-divide-y-reverse: 0;\n    border-bottom-style: var(--tw-border-style);\n    border-top-style: var(--tw-border-style);\n    border-top-width: calc(1px * var(--tw-divide-y-reverse));\n    border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));\n  }\n}\n```\n\n**v3**\n```css\n.divide-y > :not([hidden]) ~ :not([hidden]) {\n  --tw-divide-y-reverse: 0;\n  border-top-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));\n  border-bottom-width: calc(1px * var(--tw-divide-y-reverse));\n}\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18265","RelatedDescription":"Closed issue \"`divide-*` from v4 no longer handles the case where the last child is not visually the last due to ordering\" (#18265)"},{"Id":"3131123440","IsPullRequest":false,"CreatedAt":"2025-06-09T18:46:31","Actor":"amir20","Number":"18263","RawContent":null,"Title":"Not able to change default color for shadow","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.8\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nUsing playground\n\n**What version of Node.js are you using?**\n\nUsing playground\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nMac\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/hgyZi7Pf4b?file=css\n\n**Describe your issue**\n\nI am trying to override the color for dark and light mode with `--tw-shadow-color: rgb(1 0 0 / 50%);` but I have noticed this doesn't work. \n\nWhen using developer tools, everything seems right and css variables are correct. But still the shadow is black instead of red. \n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18263","RelatedDescription":"Closed issue \"Not able to change default color for shadow\" (#18263)"},{"Id":"3126983367","IsPullRequest":true,"CreatedAt":"2025-06-09T14:03:45","Actor":"cduez","Number":"18251","RawContent":null,"Title":"CSS Parser: Handle string with semi-colon in custom properties.","State":"closed","Body":"Strings are not parsed correctly for custom properties which makes the following CSS raise an `Unterminated string: \";\"` error:\r\n\r\n```css\r\n:root { \r\n  --custom: 'data:text/plain;base64,SGVsbG8sIFdvcmxkIQ==';\r\n}\r\n```\r\n\r\nAccording to the spec, we should accept semi-colon as long as they are not at the top level. \r\n> The allowed syntax for [custom properties](https://drafts.csswg.org/css-variables/#custom-property) is extremely permissive. The <declaration-value> production matches any sequence of one or more tokens, so long as the sequence does not contain bad-string-token, bad-url-token, unmatched )-token, ]-token, or }-token, or top-level semicolon-token tokens or delim-token tokens with a value of \"!\".\r\n\r\nExtract from: https://drafts.csswg.org/css-variables/#syntax\r\n\r\nI was only able to reproduce with **tailwindcss v4**, the previous version seems to support this. This issue is mitigated by the fact that even if you want to use a data URL in a custom property, you would need to wrap the value in a `url()` anyway:\r\n\r\n```css\r\n:root { \r\n  --my-icon-url: url('data:image/svg+xml;base64,...==');\r\n}\r\n\r\n.icon {\r\n  background-image: var(--my-icon-url);\r\n}\r\n```\r\n\r\nWhich works perfectly fine with the current/latest version (v4.1.8).\r\n\r\nThe fix suggested is to share the same code between regular property and custom property when it comes to detect that the value is a string starting with a `SINGLE_QUOTE` or  `DOUBLE_QUOTE`. I have moved the existing code in a `findEndStringIdx` which returns the position of the ending single/double quote.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18251","RelatedDescription":"Closed or merged PR \"CSS Parser: Handle string with semi-colon in custom properties.\" (#18251)"},{"Id":"3127079502","IsPullRequest":true,"CreatedAt":"2025-06-09T13:23:05","Actor":"depfu[bot]","Number":"18252","RawContent":null,"Title":"Update bun 1.2.13 → 1.2.15 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ bun (1.2.13 → 1.2.15) · [Repo](https://github.com/oven-sh/bun)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18252","RelatedDescription":"Closed or merged PR \"Update bun 1.2.13 → 1.2.15 (patch)\" (#18252)"},{"Id":"3128747511","IsPullRequest":false,"CreatedAt":"2025-06-09T01:19:10","Actor":"imadghoummaid","Number":"18258","RawContent":null,"Title":"Remove vertical-align: middle from block elements in default styles","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nFor example: v4.1.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n Tailwindcss-cli ^4.1.7\n\n**What version of Node.js are you using?**\n\n v20.0.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\nhttps://play.tailwindcss.com/\n\nAnd when i install tailwindcss and @tailwindcss/cli via npm.\n\n**Describe your issue**\n\nCurrently, Tailwind CSS applies the following default style to several elements:\n```\nimg, svg, video, canvas, audio, iframe, embed, object {\n    display: block;\n    vertical-align: middle;\n}\n```\n\nHowever, the vertical-align property is ignored when display: block is set. This results in an unnecessary rule that triggers warnings in code editors such as Visual Studio Code:\n\n> Property is ignored due to the display. With 'display: block', vertical-align should not be used. (css(propertyIgnoredDueToDisplay))\n\nWhile vertical-align: middle can be useful for elements with display: inline-block, it serves no purpose in this context. Removing it would improve CSS correctness and eliminate unnecessary warnings.\n\nA better approach could be:\n```\nimg, svg, video, canvas, audio, iframe, embed, object {\n    display: block;\n}\n```\nOr, if necessary, apply vertical-align: middle only when display: inline-block is explicitly used.\n\nWould love to hear thoughts on whether this can be refined in a future release!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18258","RelatedDescription":"Closed issue \"Remove vertical-align: middle from block elements in default styles\" (#18258)"},{"Id":"3127086889","IsPullRequest":false,"CreatedAt":"2025-06-08T15:53:18","Actor":"zzjjbbaa","Number":"18253","RawContent":null,"Title":"Failed to install  tailwindcss @tailwindcss/vite","State":"closed","Body":"tailwindcss v4.1.8\nvite v5.1.4\nnode v20.10.0\n\n![Image](https://github.com/user-attachments/assets/4fcfe7b3-d30f-4e12-8039-9397985b795c)\n\n\n**Is anyone able to help me ?**","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18253","RelatedDescription":"Closed issue \"Failed to install  tailwindcss @tailwindcss/vite\" (#18253)"},{"Id":"3126887383","IsPullRequest":false,"CreatedAt":"2025-06-07T11:27:53","Actor":"markgarrigan","Number":"18248","RawContent":null,"Title":"List bullets don't work with flex items","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.8\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\n[My Example](https://play.tailwindcss.com/kSEiWnNswa)\n[Tailwind Example - Playground default code](https://play.tailwindcss.com/n59WUfaHik)\n\n**Describe your issue**\n\nUsing flex or really any display classes on list items produces strange behavior. Either the bullets don't show up or the content drops to the next line. Unless I'm just doing it wrong.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18248","RelatedDescription":"Closed issue \"List bullets don't work with flex items\" (#18248)"},{"Id":"3125674766","IsPullRequest":true,"CreatedAt":"2025-06-06T19:43:17","Actor":"RobinMalfait","Number":"18246","RawContent":null,"Title":"Use shards when running integration tests","State":"closed","Body":"This PR splits CI integration tests in 3 shards to reduce the time it takes to run them to hopefully prevent timeouts on a single step.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18246","RelatedDescription":"Closed or merged PR \"Use shards when running integration tests\" (#18246)"},{"Id":"3125605821","IsPullRequest":true,"CreatedAt":"2025-06-06T19:43:12","Actor":"itsmefminsaf","Number":"18245","RawContent":null,"Title":"Itsmefminsaf patch 1","State":"closed","Body":"<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create a discussion to first discuss any significant new features.\r\n\r\nFor more info, check out the contributing guide:\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/main/.github/CONTRIBUTING.md\r\n\r\n-->\r\n\r\n## Summary\r\n\r\nI have added some extra breakpoints for mobile screen like 20rem 26rem","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18245","RelatedDescription":"Closed or merged PR \"Itsmefminsaf patch 1\" (#18245)"},{"Id":"3125188663","IsPullRequest":true,"CreatedAt":"2025-06-06T16:14:05","Actor":"depfu[bot]","Number":"18243","RawContent":null,"Title":"Update turbo 2.5.3 → 2.5.4 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ turbo (2.5.3 → 2.5.4) · [Repo](https://github.com/turborepo/turbo)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18243","RelatedDescription":"Closed or merged PR \"Update turbo 2.5.3 → 2.5.4 (patch)\" (#18243)"},{"Id":"3124302410","IsPullRequest":false,"CreatedAt":"2025-06-06T14:29:11","Actor":"denniskaselow","Number":"18241","RawContent":null,"Title":"standalone executable creates 3 node files in temp folder every time it is run without cleaning up","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.1.8\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nStandalone executable\n\n**What operating system are you using?**\n\nWindows 10\n\n**Describe your issue**\n\nWhenever I run `tailwindcss` it creates 3 `.node`-files in the `C:\\Users\\<username>\\AppData\\Local\\Temp`-folder. They don't get cleaned up and accumulate. As shown in this gif:\n\n![Image](https://github.com/user-attachments/assets/2926f89e-a10e-4747-ae07-6e5817f68c55)\n\nAll three files are mostly binary data but contain \"This program cannot be run in DOS mode.\" close to the start. Additionally, the smallest file contains:\n```xml\n<?xml version='1.0' encoding='UTF-8' standalone='yes'?>\n<assembly xmlns='urn:schemas-microsoft-com:asm.v1' manifestVersion='1.0'>\n  <trustInfo xmlns=\"urn:schemas-microsoft-com:asm.v3\">\n    <security>\n      <requestedPrivileges>\n        <requestedExecutionLevel level='asInvoker' uiAccess='false' />\n      </requestedPrivileges>\n    </security>\n  </trustInfo>\n</assembly>\n```\nat the end, while the other two files contain something about some Rust crates in `C:\\Users\\runneradmin\\.cargo\\registry\\src\\index.crates.io` (there is no user runneradmin on my system).","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18241","RelatedDescription":"Closed issue \"standalone executable creates 3 node files in temp folder every time it is run without cleaning up\" (#18241)"},{"Id":"3122651066","IsPullRequest":false,"CreatedAt":"2025-06-06T10:59:23","Actor":"jakubmazanec","Number":"18237","RawContent":null,"Title":"Tailwind v4 doesn't generate CSS variables when using @config directive","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.1.8\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.3.5\n\n**What version of Node.js are you using?**\n\nv24.1.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n\nhttps://github.com/jakubmazanec/tailwind-css-variables-bug\n\n**Describe your issue**\n\nWhen using the old JS config (I **need** it, because my color palette is JS-generated; there really should be a way how to pass JS values to the new CSS config), colors defined in it work, but no CSS variable is created for them.\n\nIn the reproduction, Tailwind class `text-tahiti` that uses color defined in the JS config leads to `color: #3ab7bf;`, but class `text-midnight` leads to `color: var(--color-midnight);` and root has `--color-midnight: #121063;`.\n\nIs there a workaround for this bug? I would like to finish the upgrade soon. Thank you.\n\nEdit: CSS variables are probably not created for other JS config theme definitions, e.g. `fontFamily`.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18237","RelatedDescription":"Closed issue \"Tailwind v4 doesn't generate CSS variables when using @config directive\" (#18237)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-06-13T03:30:23.2839264Z","RunDurationInMilliseconds":510}