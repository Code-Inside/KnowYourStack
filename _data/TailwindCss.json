{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"3111109573","IsPullRequest":false,"CreatedAt":"2025-06-02T18:02:05","Actor":"DARK7177","Number":"18206","RawContent":null,"Title":"Dark mode class toggle not reflecting styles in Tailwind CSS v4","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\n- v4.1.8\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n- Vite 6.3.5\n\n**What version of Node.js are you using?**\n\n- v22.3.0\n\n**What browser are you using?**\n\n- Chrome, Edge and Mozilla Firefox\n\n**What operating system are you using?**\n\n- Windows\n\n**Reproduction URL** \n\nhttps://github.com/DARK7177/crispy-garbanzo\n\nAttached a repo for reproduction and the unexpected behavior encountered\n\n**Describe your issue**\n\nTailwind v4 styles like dark: bg-black and dark: text-white do not apply consistently across components. The background may switch, but nested text elements or buttons do not reflect the dark mode styles.\n\nExpected behavior\nToggling the dark class should apply all dark: prefixed classes immediately, just like it worked in Tailwind v3 with darkMode: 'class'.\n\nActual behavior\n- Some elements (e.g., <body> or wrappers) apply dark: styles correctly.\n- However, elements inside custom React components do not change colors despite using dark:bg-* or dark: text-*.\n- This happens even with transition-colors, duration-300, and correct class placement.\n\n![Image](https://github.com/user-attachments/assets/18ac64b3-8db2-4055-9de5-0496fcc7ca2a)\n\n![Image](https://github.com/user-attachments/assets/17426295-651d-4b35-b9f4-4398be316f9b)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18206","RelatedDescription":"Closed issue \"Dark mode class toggle not reflecting styles in Tailwind CSS v4\" (#18206)"},{"Id":"3110547768","IsPullRequest":false,"CreatedAt":"2025-06-02T16:09:04","Actor":"dbie999","Number":"18204","RawContent":null,"Title":"vite + scss + tailwind doesn't really work","State":"closed","Body":"I want to add tailwind to the project to slowly migrate away from scss.\n\nI have app.scss and App.tsx, followed the documentation, but nothing seems to work to import tailwind.\n\nTried so far:\nin app.scss\n@import url('tailwindcss/index.css'); <-- nothing\n\nvite.config.ts has the tailwindcss(),\n\nThe only way I can use tailwind classes is by importing `import 'tailwindcss/index.css';` in App.tsx. \n\nThe only problem is that custom styling then doesn't work, I've tried creating tailwind.css with\n\n`\n@thema {\n --color-chocolate: #7B3F00\n}\n`\n\nand importing it in app.scss\n`@import './tailwind.css';`\n\n<div className='pt-2 bg-chocolate'>Tailwind</div> \n\nbut the bg didn't work at all, when pt-2 did work.\n\nI've run out of ideas how to make it work.\n\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18204","RelatedDescription":"Closed issue \"vite + scss + tailwind doesn't really work\" (#18204)"},{"Id":"3106820040","IsPullRequest":false,"CreatedAt":"2025-06-02T13:56:02","Actor":"peixin","Number":"18190","RawContent":null,"Title":"Bug: Tailwind CSS Fails to Scan Files Without Git Initialization (git init)","State":"closed","Body":"**What version of Tailwind CSS are you using?**  \nv4.1.8 (confirmed unrelated to the issue)\n\n**What build tool (or framework if it abstracts the build tool) are you using?**  \nNext.js 14.2.3 / Vite 6.3.5 (confirmed unrelated to the issue)\n\n**What version of Node.js are you using?**  \nv22.16.1\n\n**What browser are you using?**  \nChrome / Firefox  (confirmed unrelated to the issue)\n\n**What operating system are you using?**  \nmacOS 15.4.1\n\n**Reproduction URL**  \nN/A  (confirmed unrelated to the issue)\n\n**Describe your issue**  \nWhen initializing a new project, Tailwind CSS fails to properly scan class names in files if `git init` hasn't been executed. The generated `@layer utilities;` remains empty despite containing valid Tailwind classes in the files. The issue is immediately resolved after running `git init`.\n\n### Reproduction Steps (Verified using official tools)\nAll steps folow the official installation guide:  https://tailwindcss.com/docs/installation\n\n### Expected Behavior\nTailwind should scan files and generate utilities regardless of Git repository initialization status.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18190","RelatedDescription":"Closed issue \"Bug: Tailwind CSS Fails to Scan Files Without Git Initialization (git init)\" (#18190)"},{"Id":"3108330215","IsPullRequest":true,"CreatedAt":"2025-06-02T13:39:20","Actor":"depfu[bot]","Number":"18198","RawContent":null,"Title":"Update @types/react-dom 19.1.3 → 19.1.5 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​types/react-dom (19.1.3 → 19.1.5) · [Repo](https://github.com/DefinitelyTyped/DefinitelyTyped)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18198","RelatedDescription":"Closed or merged PR \"Update @types/react-dom 19.1.3 → 19.1.5 (patch)\" (#18198)"},{"Id":"3109426966","IsPullRequest":false,"CreatedAt":"2025-06-02T10:21:02","Actor":"euginepj","Number":"18202","RawContent":null,"Title":"[v4] `Dark Mode` Fails When Additional Classes Are Added to HTML Element","State":"closed","Body":"In my website, I'm enabling dark theme using the following format:\n\n`<html lang=\"en\" class=\"dark\">`\nThis works correctly.\n\nHowever, when I add any additional class to the HTML element:\n\n`<html lang=\"en\" class=\"dark new-class\">`\nthe dark theme becomes disabled.\n\n\n<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: postcss-cli 11.0.0, Next.js 15.1.7, Vite 6.1.0\n\n**What version of Node.js are you using?**\n\nFor example: v20.0.0\n\n**What browser are you using?**\n\nFor example: Chrome, Safari, or N/A\n\n**What operating system are you using?**\n\nFor example: macOS, Windows\n\n**Reproduction URL**\n\nA Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\n\nA reproduction is **required** when filing an issue — any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.\n\n**Describe your issue**\n\nDescribe the problem you're seeing, any important steps to reproduce and what behavior you expect instead.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18202","RelatedDescription":"Closed issue \"[v4] `Dark Mode` Fails When Additional Classes Are Added to HTML Element\" (#18202)"},{"Id":"3109145172","IsPullRequest":false,"CreatedAt":"2025-06-02T08:25:55","Actor":"janplancraft","Number":"18201","RawContent":null,"Title":"\"truncate\" utility cuts off characters on y-axis","State":"open","Body":"**Describe your issue**\n\nDuring development I noticed that the \"g\" in one of my spans was cut-off, since I was using the \"truncate\" utility.\n\nFrom [the docs](https://tailwindcss.com/docs/text-overflow) we can see that it currently is bundling these classes:\n\n```\noverflow: hidden; \ntext-overflow: ellipsis; \nwhite-space: nowrap;\n```\n\nI would argue that this is unintended behaviour and recommend switching to:\n\n```\noverflow-x: clip;\ntext-overflow: ellipsis; \nwhite-space: nowrap;\n```\n\nIf that is deemed too dangerous (since it might affect text written in languages that go top to bottom), maybe another utility (e.g. `truncate-x` or `truncate-text`) could be introduced.\n\nHappy for your feedback!\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18201","RelatedDescription":"Open issue \"\"truncate\" utility cuts off characters on y-axis\" (#18201)"},{"Id":"3108698261","IsPullRequest":false,"CreatedAt":"2025-06-02T05:54:56","Actor":"cx-networks-gmbh","Number":"18199","RawContent":null,"Title":"Tailwind and Nuxt: Docker build hangs at `transforming` step","State":"open","Body":"**What version of Tailwind CSS are you using?**\n```\n    \"@tailwindcss/vite\": \"^4.1.8\",\n    \"nuxt\": \"^3.17.4\",\n    \"tailwindcss\": \"^4.1.8\",\n```\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\nNuxt https://nuxt.com/\n\n**What version of Node.js are you using?**\n```\nnode --version\nv20.11.0\n```\n\n**What browser are you using?**\nNot applicable\n\n**What operating system are you using?**\nWindows 11 as a host OS and then docker desktop.\n```\nMicrosoft Windows 11 Home\nVersion\t10.0.26100 Build 26100\n\ndocker --version\nDocker version 25.0.3, build **4debf41**\n```\n\n\n**Reproduction URL**\nhttps://github.com/cx-networks-gmbh/tailwind-nuxt-docker-build-issue\n\n\n**Describe your issue**\nI am using a plain nuxt project created with the normal starter guide on https://nuxt.com/docs/getting-started/installation.\n\nSo just plain `npm create nuxt tailwind-nuxt-docker-build-issue`.\n\nThen I want to use tailwind so I am following this guide as nuxt uses vite: https://tailwindcss.com/docs/installation/using-vite\n\nIf I run the `npm run dev` command, every thing works fine. If I run the `npm run generate` command, everything works fine.\n\nNow I want to deploy it to a normal docker host, so building a container with this dockerfile (full dockerfile is in the repo above):\n```\nFROM node:20.11.0-alpine AS build\nCOPY package.json ./\nCOPY package-lock.json ./\n\nRUN npm ci\nCOPY . .\nRUN npm run generate\n\nFROM nginx:alpine-slim AS nginx\n// NGINX CONFIG NOW\n```\n\n**Logs**\n```\ndocker build --progress plain -t tailwindtest .\n2025/06/02 07:50:49 http2: server: error reading preface from client //./pipe/docker_engine: file has already been closed\n#0 building with \"default\" instance using docker driver\n\n#1 [internal] load build definition from Dockerfile\n#1 transferring dockerfile: 393B done\n#1 DONE 0.0s\n\n#2 [internal] load metadata for docker.io/library/nginx:alpine-slim\n#2 DONE 0.5s\n\n#3 [internal] load metadata for docker.io/library/node:20.11.0-alpine\n#3 DONE 0.5s\n\n#4 [internal] load .dockerignore\n#4 transferring context: 97B done\n#4 DONE 0.0s\n\n#5 [build 1/6] FROM docker.io/library/node:20.11.0-alpine@sha256:2f46fd49c767554c089a5eb219115313b72748d8f62f5eccb58ef52bc36db4ad\n#5 DONE 0.0s\n\n#6 [nginx 1/5] FROM docker.io/library/nginx:alpine-slim@sha256:b947b2630c97622793113555e13332eec85bdc7a0ac6ab697159af78942bb856\n#6 DONE 0.0s\n\n#7 [internal] load build context\n#7 transferring context: 4.39kB 0.0s done\n#7 DONE 0.0s\n\n#8 [build 3/6] COPY package-lock.json ./\n#8 CACHED\n\n#9 [build 2/6] COPY package.json ./\n#9 CACHED\n\n#10 [build 4/6] RUN npm ci\n#10 CACHED\n\n#11 [build 5/6] COPY . .\n#11 DONE 0.1s\n\n#12 [build 6/6] RUN npm run generate\n#12 0.792\n#12 0.792 > generate\n#12 0.792 > nuxt generate\n#12 0.792\n#12 1.217 [nuxi] Nuxt 3.17.4 with Nitro 2.11.12\n#12 2.930 [nuxi] ℹ Building for Nitro preset: static\n#12 3.962 ℹ Building client...\n#12 3.975 ℹ vite v6.3.5 building for production...\n#12 4.033 ℹ transforming...\n```\n\nIf running the docker build with `docker build -t tailwindtest .` the build process keeps staying at the `transforming...` stage for ever. Even when running overnight for 8 hours, the step is not completing.\n\nI am expecting a build time of around 1 minute.\n\n**Open Issues that I found but did not resolve the issue**\n- https://github.com/tailwindlabs/tailwindcss/issues/17092\n- #18101 \n- #18148","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18199","RelatedDescription":"Open issue \"Tailwind and Nuxt: Docker build hangs at `transforming` step\" (#18199)"},{"Id":"3107781614","IsPullRequest":false,"CreatedAt":"2025-06-01T20:55:03","Actor":"Amoo-Amir","Number":"18196","RawContent":null,"Title":"Color classes not working in TailwindCSS with Vite + React","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\ntailwindcss@4.1.8\n\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\npostcss@8.5.4 , vite@4.5.14\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What browser are you using?**\ngoogel chrom\nmicrosoft Edge\n\n\n**What operating system are you using?**\n\nWindows 11\n\n**Reproduction URL**\n\nA Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\n\nA reproduction is **required** when filing an issue — any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.\n\n**Describe your issue**\n\nWhen using Tailwind CSS with Vite and React, all utility classes work correctly except for color-related classes. For example, classes like `bg-black`, `text-white`, and `text-red-500` have no visual effect. Other utilities such as `flex`, `h-screen`, `border`, `w-40`, etc. are working fine.\n\nI’ve verified that the CSS file is being loaded correctly, the PostCSS setup is working, and Tailwind classes are present in the compiled output. The only issue is that color classes do not apply.\n\nIs this a known issue or am I missing a specific configuration for color support?\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18196","RelatedDescription":"Closed issue \"Color classes not working in TailwindCSS with Vite + React\" (#18196)"},{"Id":"3107601473","IsPullRequest":false,"CreatedAt":"2025-06-01T17:51:07","Actor":"avidtemplates","Number":"18194","RawContent":null,"Title":"Named groups are not working as expected in v4","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n**4.1.8**\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n**Next.js 15.3..2**\n\n**What version of Node.js are you using?**\n**v23.11.0**\n\n**What browser are you using?**\n**Chrome 136.0.7103.116** \n\n**What operating system are you using?**\n**Windows 11**\n\n**Reproduction URL**\nhttps://play.tailwindcss.com/B8s32UAV5K\n\n**Describe your issue**\nAs the title suggests, named groups do not appear to be working in Tailwind CSS v4 when used with my Next.js 15 setup. I also tested the official v4 demo [example ](https://tailwindcss.com/docs/hover-focus-and-other-states#differentiating-nested-groups)from the Tailwind documentation, and it doesn't seem to behave as expected either.\n\n```\n<ul class=\"group/item\">\n    <li class=\"group-hover/item:bg-red-500\">Dream big, start small, act now.</li>\n    <li class=\"group-hover/item:bg-red-500\">Progress, not perfection.</li>\n</ul>\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18194","RelatedDescription":"Closed issue \"Named groups are not working as expected in v4\" (#18194)"},{"Id":"3107056337","IsPullRequest":false,"CreatedAt":"2025-06-01T11:40:14","Actor":"yd4011439","Number":"18192","RawContent":null,"Title":"Feeling BETRAYED they removed bg-opacity-* classes","State":"closed","Body":"💢 Why Was `bg-opacity-*` Removed in Tailwind v4? Bring Back the Basics!\n========================================================================\n\n> I'm just going to say it — the removal of `bg-opacity-*` in Tailwind v4 was **completely unnecessary** and **actively harmful** for real-world developers trying to support less-than-brand-new browsers.\n\n👴 The Old Way Worked. Period.\n------------------------------\n\nThe old `bg-opacity-50` system:\n\n*   ✅ Worked everywhere (even IE11 with polyfills)\n*   ✅ Was easy to override\n*   ✅ Didn’t rely on CSS features from 2022+\n*   ✅ Used a simple and elegant abstraction with `--tw-bg-opacity`\n\nNow we get:\n\n    <div class=\"bg-red-500/50\"></div>\n\nWhich:\n*   ❌ **Uses very recent color-mix function**\n*   ❌ **Breaks in older browsers**\n*   ❌ **Breaks in hybrid WEBVIEW**\n*   ❌ **Breaks in production when you least expect it**\n\nAll to save… what? One line of CSS? Was `rgba(var(--tw-bg-opacity))` too scary now?\n\n💡 You Could've Just Kept Both\n------------------------------\n\nTailwind has utilities like `text-decoration-skip-ink`, `sr-only`, and `accent-color`. Why was **`bg-opacity-*`**, one of the most basic and widely used utilities, the one chosen for removal?\n\nAt the very least, can we get:\n\n*   An **official plugin** to reintroduce `bg-opacity-*`\n*   Or an **opt-in flag** to restore legacy opacity handling\n*   Or a **clear migration guide** for developers with backward compatibility needs\n\n🔥 Devs in the Real World\n-------------------------\n\nNot all of us are building greenfield apps with evergreen browser audiences. Some of us:\n\n*   Build apps inside **native WebViews** that lag behind modern CSS\n*   Need to support **embedded systems** or **older Chromium forks**\n*   Just want our designs to degrade gracefully\n\n😤 TL;DR\n--------\n\n*   Removing `bg-opacity-*` feels like a design-over-users decision\n*   It **hurts backward compatibility** with no clear migration path\n*   Please consider **bringing it back**, or at least **officially supporting a fallback**\n*   Tailwind used to be \"utility-first\" — now it's feeling more like \"Chrome-first\"\n\n* * *","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18192","RelatedDescription":"Closed issue \"Feeling BETRAYED they removed bg-opacity-* classes\" (#18192)"},{"Id":"3104218353","IsPullRequest":false,"CreatedAt":"2025-05-30T22:14:37","Actor":"Coder2195Text","Number":"18188","RawContent":null,"Title":"Svelte files not being detected past 4.0.7 for vite plugin","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\nTailwind CSS 4.1.8\n\nVite 6.2.6 with Sveltekit 2.16.0\n\n**What version of Node.js are you using?**\n\n24.1.0\n\n**What browser are you using?**\n\nZen Browser\n\n**What operating system are you using?**\n\nArch linux\n\n**Reproduction URL**\n\nhttps://github.com/Coder2195Text/broken-tailwind\n\nThis is basic `npx sv create` and then added classes to the h1 in main page. Upon rolling back versions, removing node modules and installing tailwindcss/vite with 4.0.7 allows the styles to reflect.\n\n**Describe your issue**\n\nThis has been opened many times prior, but have been closed for some reason. The issue lays on being unable to detect svelte files and their styles, and therefore the classes styles are pretty much useless.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18188","RelatedDescription":"Closed issue \"Svelte files not being detected past 4.0.7 for vite plugin\" (#18188)"},{"Id":"3103928316","IsPullRequest":false,"CreatedAt":"2025-05-30T18:23:09","Actor":"Francismori7","Number":"18187","RawContent":null,"Title":"Upgrade tool - issue with wire:model","State":"open","Body":"Hello!\n\nI ran the upgrade tool in my codebase, a Laravel codebase that has both Livewire and Alpine in them.\n\nThe upgrade tool mistakenly changed `wire:model.blur` to `wire:model.blur-sm`, thereby causing models to stop behaving properly in Livewire.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18187","RelatedDescription":"Open issue \"Upgrade tool - issue with wire:model\" (#18187)"},{"Id":"3103773288","IsPullRequest":false,"CreatedAt":"2025-05-30T17:51:51","Actor":"taylorfsteele","Number":"18186","RawContent":null,"Title":"`@source` detection not working in a web components monorepo","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.1.8\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.3.5, Lit 3.3.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nStackblitz repro: https://stackblitz.com/edit/stackblitz-starters-ljqtr2v2?file=packages%2Flit-consumer%2Fsrc%2Fmy-element.ts\n\nGitHub: https://github.com/taylorfsteele/tailwind-lit-monorepo\n\n**Describe your issue**\n\nI have a monorepo that exports web components (via lit) from one package that is consumed by another package. I would expect the [`@source` directive would pick up](https://tailwindcss.com/docs/detecting-classes-in-source-files#explicitly-registering-sources) to pick up classes from these elements and apply them to the generated stylesheets.\n\nThe classes are not picked up or added to the stylesheet.\n\nOddly enough, it looks like the color is being generated correctly, but the utility isn't:\n\n![Image](https://github.com/user-attachments/assets/593e8b9f-fa32-4d75-9298-d1f6f2090d33)\n\nOn build, the color and utility are generated, so in theory I could scope these to the element's shadow myself:\n\n```\n@layer components;\n@layer utilities {\n  .static {\n    position: static;\n  }\n  .p-4 {\n    padding: calc(var(--spacing) * 4);\n  }\n  .text-blue-500 {\n    color: var(--color-blue-500);\n  }\n  .text-red-400 {\n    color: var(--color-red-400);\n  }\n}\n```\n\nIs this a web components / shadow dom issue? Probably. But I was under the assumption that the `@source` directive would pick up these classes and then I could handle scoping them correctly.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18186","RelatedDescription":"Closed issue \"`@source` detection not working in a web components monorepo\" (#18186)"},{"Id":"3101808990","IsPullRequest":true,"CreatedAt":"2025-05-30T14:07:30","Actor":"depfu[bot]","Number":"18181","RawContent":null,"Title":"Update @vitejs/plugin-react 4.4.1 → 4.5.0 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​vitejs/plugin-react (4.4.1 → 4.5.0) · [Repo](https://github.com/vitejs/vite) · [Changelog](https://github.com/vitejs/vite/blob/main/packages/plugin-react/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/vitejs/vite/releases/tag/v4.5.0\">4.5.0</a></h4>\n\n<blockquote><p dir=\"auto\">Please refer to <a href=\"https://bounce.depfu.com/github.com/vitejs/vite/blob/v4.5.0/packages/vite/CHANGELOG.md\">CHANGELOG.md</a> for details.</p></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/@vitejs%2Fplugin-react/feedback\">Please let us know.</a></em></p>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18181","RelatedDescription":"Closed or merged PR \"Update @vitejs/plugin-react 4.4.1 → 4.5.0 (minor)\" (#18181)"},{"Id":"3102856300","IsPullRequest":true,"CreatedAt":"2025-05-30T13:32:59","Actor":"RobinMalfait","Number":"18184","RawContent":null,"Title":"Improve upgrade migrations","State":"closed","Body":"This PR fixes 2 issues with the migration tool where certain classes weren't migrated. This PR fixes those 2 scenarios:\r\n\r\n### Scenario 1\r\n\r\nWhen you have an arbitrary opacity modifier that doesn't use `%`, but is just a number typically between `0` and `1` then this was not converted to the bare value equivalent before.\r\n\r\nE.g.:\r\n\r\n```html\r\n<div class=\"bg-[#f00]/[0.16]\"></dv>\r\n```\r\n\r\nWill now be converted to:\r\n\r\n```html\r\n<div class=\"bg-[#f00]/16\"></dv>\r\n```\r\n\r\n### Scenario 2\r\n\r\nFixes a bug when a CSS function was used in a fallback value in the CSS variable shorthand syntax. In that case we didn't migrate the class to the new syntax.\r\n\r\nThis was because we assumed that a `(` was found, that we are dealing with a CSS function. \r\n\r\nE.g.: \r\n```html\r\n<div class=\"w-[--spacing(1)]\"></div>\r\n                        ^  This indicates a CSS function, we should not be \r\n                           converting this to `w-(--spacing(1))`\r\n```\r\n\r\nBut if a function was used as a fallback value, for example:\r\n\r\n```html\r\n<div class=\"bg-[--my-color,theme(colors.red.500)]\"></dv>\r\n```\r\n\r\nThen we also didn't migrate it, but since the function call is in the fallback, we can still migrate it.\r\n\r\nWill now properly be converted to:\r\n\r\n```html\r\n<div class=\"bg-(--my-color,var(--color-red-500))\"></dv>\r\n```\r\n\r\n\r\n## Test plan\r\n\r\n1. Added a test for the first case\r\n2. Added a test for the second case\r\n3. Also added an integration-like test that runs all the migration steps to make sure that the `theme(…)` in the fallback also gets updated to `var(…)`. This one caught an issue because the `var(…)` wasn't handling prefixes correctly.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18184","RelatedDescription":"Closed or merged PR \"Improve upgrade migrations\" (#18184)"},{"Id":"3102823617","IsPullRequest":false,"CreatedAt":"2025-05-30T10:50:12","Actor":"drago1520","Number":"18183","RawContent":null,"Title":"Box shadow is broken","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNot relevant\n\n**What version of Node.js are you using?**\n\nNot relevant\n\n**What browser are you using?**\n\nBrave, Chrome, Safari\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n\n[Literally in the docs](https://tailwindcss.com/docs/box-shadow). You do not need to install anything to see the issue.\n\n**Describe your issue**\n\n`shadow-*` property adds a strange element around the HTML element, together with the actual shadow. This is a screenshot from the v4 docs.\n\n![Image](https://github.com/user-attachments/assets/bd8fe03c-9547-4b52-bcf0-5c2d3e9b345a)\n\nCompare it to the working shadow in v3:\n\n![Image](https://github.com/user-attachments/assets/7538a2b0-9403-4cdd-acf0-f1c6e873b74e)\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18183","RelatedDescription":"Closed issue \"Box shadow is broken\" (#18183)"},{"Id":"3098632238","IsPullRequest":false,"CreatedAt":"2025-05-29T17:54:03","Actor":"GabrielLeandroBS","Number":"18168","RawContent":null,"Title":"Fast Refresh / Hot Reload not working with Next.js 15 and Tailwind CSS 4 — requires full page reload on changes","State":"closed","Body":"I've created a fresh Next.js 15 project from scratch with the default configuration, integrating Tailwind CSS version 4 following the official setup guide.\n\nHowever, fast refresh / hot reload is not working as expected:\n\nWhenever I make any modification to components or styles, the page does not update automatically.\n\nI have to manually refresh the entire page to see changes.\n\nThis severely impacts development productivity and debugging.\n\n**Steps to reproduce:**\n\nCreate a new Next.js 15 project (npx create-next-app@latest)\n\nInstall and configure Tailwind CSS 4 with default settings\n\nStart the development server (next dev)\n\nModify any component or style file\n\nObserve that the page does not update automatically (no fast refresh)\n\n**Expected behavior:**\nChanges in component or style files should trigger a fast refresh / hot reload without a full page reload.\n\nActual **behavior**:\nThe browser requires a full manual reload to reflect changes.\n\nEnvironment:\n\nNext.js version: 15.x\n\nTailwind CSS version: 4.x\n\nNode.js version: 20\n\nOS: Windows 11\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18168","RelatedDescription":"Closed issue \"Fast Refresh / Hot Reload not working with Next.js 15 and Tailwind CSS 4 — requires full page reload on changes\" (#18168)"},{"Id":"3098825724","IsPullRequest":false,"CreatedAt":"2025-05-29T17:02:23","Actor":"carolinecblaker","Number":"18172","RawContent":null,"Title":"Tailwind 4 requires restart to load changes on Webpack 5","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n v4.1.8\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n`\n├── @tailwindcss/postcss@4.1.8\n├── autoprefixer@10.4.21\n├── cross-env@5.2.1\n├── css-loader@7.1.2\n├── file-loader@6.2.0\n├── html-webpack-plugin@5.6.3\n├── lodash@4.17.21\n├── mini-css-extract-plugin@2.9.2\n├── postcss-import@16.1.0\n├── postcss-loader@8.1.1\n├── postcss@8.5.3\n├── tailwindcss@4.1.8\n├── webpack-cli@6.0.1\n├── webpack-dev-server@5.2.1\n└── webpack@5.99.9\n`\n\n**What version of Node.js are you using?**\n\n20.17.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nMac OS Sonoma\n\n**Reproduction URL**\n\n[Ok.](https://github.com/carolinecblaker/cb-com/tree/main)\n\n**Describe your issue**\n\nUpdating a code set to tailwind 4 has resulted in some dev server breakage.\n\nI'm under the impression that tailwind 4 is installed correctly:\n- `npm run prod` produces stylesheets and code as intended\n- `npm run dev` fires up a browser with styles included in referenced html\n\nI'm under the impression that Webpack 5 is set up for Hot Module Reload (HMR):\n- 'npm run dev' creates styles on-the-fly when introduced to index.html, using Tailwind 3.\n\n**Feature I lost with upgrade:**\n- 'npm run dev' to create on-the-fly tailwind styles for the browser to show when I save my work in my html file.\n\n**What's going right:**\n\nThe dev server starts and stops without errors, and serves the page.\nThe dev server does serve a complete stylesheet when it starts.\n\nGenerally, \"it works.\"\n\n**What's not working:**\n\nHMR (or manual) reloads appear to detect tailwindcss changes in the html, but the process of writing that style to the dev server stylesheet doesn't take place. When a tailwind  class is added to the index.html, the style doesn't display. There is a void of style, instead. I am testing this with text colors on this repository. Introduced text color classes yield a dark text treatment (unstyled) and there is no style in the inspector relating to the tailwind class I just added.\n\nI can't get a new text color to appear without shutting down and restarting my dev server, but that does work, see \"what's going right\".\n\nYou may find evidence in the repo of all the ways I've tried to fix this. I apologize if this amounts to errors due to me chasing my tail. I upgraded the code set manually and followed multiple sets of directions and used at least 15 keywords to search around other peoples' questions. It does look like others have reported other Hot Reload questions recently, so it seemed like it could be a bug.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18172","RelatedDescription":"Closed issue \"Tailwind 4 requires restart to load changes on Webpack 5\" (#18172)"},{"Id":"3100824748","IsPullRequest":false,"CreatedAt":"2025-05-29T16:17:48","Actor":"rozsazoltan","Number":"18178","RawContent":null,"Title":"Use a `content` utility with `before`/`after` variants adds the `content` CSS property twice","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nv4.1.8\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nTailwind Play\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/rO3bQlDyWh\n\n**Describe your issue**\n\nThe content utility adds the content property. Since the content property is required to display `::before` and `::after` pseudo-elements, the CSS rule `content: var(--tw-content);` is automatically added to the class when using `before` or `after` variants.\n\nHowever, if I apply a custom content utility together with the before or after variants, the content property is added to the class twice:\n* First, due to the `before`/`after` variant (source: [./src/variants.ts L641 - L667](https://github.com/tailwindlabs/tailwindcss/blob/193eb84f6c4c23ef43166162bed99d0fb3485c8b/packages/tailwindcss/src/variants.ts#L641C5-L667C6))\n* Second, due to the `content` utility\n\n```css\n/* Generated Utilities */\n\n.content-\\[\\'custom\\'\\] {\n  --tw-content: 'custom';\n  content: var(--tw-content);\n}\n.before\\:content-\\[\\'custom\\'\\] {\n  &::before {\n    content: var(--tw-content);\n    --tw-content: 'custom';\n    content: var(--tw-content);\n  }\n}\n.after\\:content-\\[\\'custom\\'\\] {\n  &::after {\n    content: var(--tw-content);\n    --tw-content: 'custom';\n    content: var(--tw-content);\n  }\n}\n```\n\nIn this case, it would be sufficient to keep only one of them.\n\n```css\n/* Expected Generated Utilities */\n\n.content-\\[\\'custom\\'\\] {\n  --tw-content: 'custom';\n  content: var(--tw-content);\n}\n.before\\:content-\\[\\'custom\\'\\] {\n  &::before {\n    --tw-content: 'custom';\n    content: var(--tw-content);\n  }\n}\n.after\\:content-\\[\\'custom\\'\\] {\n  &::after {\n    --tw-content: 'custom';\n    content: var(--tw-content);\n  }\n}\n```\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18178","RelatedDescription":"Open issue \"Use a `content` utility with `before`/`after` variants adds the `content` CSS property twice\" (#18178)"},{"Id":"3099356531","IsPullRequest":false,"CreatedAt":"2025-05-29T12:50:55","Actor":"Alix35301","Number":"18173","RawContent":null,"Title":"peer-checked:after:translate-x-6 works in Tailwind Play but not locally","State":"closed","Body":"## Bug Description\nThe utility class `peer-checked:after:translate-x-6` **works perfectly in Tailwind Play** but fails to generate CSS locally with Tailwind 4.\n\n## Expected Behavior\nShould generate CSS for transforming ::after pseudo-element when peer is checked (like it does in Tailwind Play)\n\n## Actual Behavior\n### Tailwind Play ✅\n- `peer-checked:after:translate-x-6` works correctly\n\n### Local Environment ❌\n- `peer-checked:translate-x-6` works ✅\n- `after:translate-x-6` works ✅  \n- `peer-checked:after:translate-x-6` doesn't work ❌\n\n### Environment\n\nTailwind CSS: 4.x\nBrowser: Chrome\nOS: Arch Linux\nTailwind Play: Works ✅ https://play.tailwindcss.com/\nLocal setup: Doesn't work ❌\nNetwork cache disabled\n\n## Code\n```html\n<div class=\"\">\n    <label class=\"relative m-auto\">\n        <input class=\"peer sr-only\" type=\"checkbox\" />\n        <div class=\"toggle relative w-12 h-6 mt-2 after:content-[''] after:size-4 after:bg-white after:absolute after:top-1 after:start-[4px] after:transition-all transition-all after:rounded-full peer-checked:bg-green-500 rounded-full p-2 peer-checked:after:translate-x-6 bg-gray-300\"></div>\n    </label>\n</div>\n\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18173","RelatedDescription":"Closed issue \"peer-checked:after:translate-x-6 works in Tailwind Play but not locally\" (#18173)"},{"Id":"3098669482","IsPullRequest":false,"CreatedAt":"2025-05-29T07:26:03","Actor":"ozooxo","Number":"18169","RawContent":null,"Title":"Nested component CSS doesn't work well with tailwind","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.8\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 15.3.2\n\nSee https://github.com/ozooxo/tailwind-potential-bug/blob/main/yarn.lock for other dependencies.\n\n**What version of Node.js are you using?**\n\nN/A\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://github.com/ozooxo/tailwind-potential-bug/\n\nSee https://github.com/ozooxo/tailwind-potential-bug/commit/87024df38c87d73b1b23fa64cbdd9066e6758b3d for the diff from the init template.\n\nShould see the issue by `yarn dev`.\n\n**Describe your issue**\n\nI have\n\n```css\nul {\n  list-style: disc;\n}\n\nli {\n  color: blue;\n}\n```\n\nand\n\n```typescript\nimport markdownStyles from \"./markdown.css\";\n\nexport default function Home() {\n  return (\n    <>\n      <div className=\"text-2xl\">UL items blue</div>\n      <div className={markdownStyles}>\n        <ul>\n          <li>First item</li>\n          <li>Second item</li>\n        </ul>\n      </div>\n\n      <div className=\"text-2xl\">UL items default black</div>\n      <div>\n        <ul>\n          <li>First item</li>\n          <li>Second item</li>\n        </ul>\n      </div>\n    </>\n  );\n}\n```\n\nI expect the `markdownStyles` to override the preflight `list-style: none;` ([here](https://tailwindcss.com/docs/preflight#lists-are-unstyled)) so\n\n* disk-shape bubble item\n* the `<li>` colors to turn blue\n\nONLY in the first `<div>` block.\n\nHowever, I see both `<div>` blocks turn blue, and none of them has the disk-shape bubble item.\n![Image](https://github.com/user-attachments/assets/0bd1274c-8a7e-4a45-9ecb-545ae9be930f)\n\n(In a separated repo (I could not reproduce in this simple model), I see disk-shape bubble item, but it propagates to both lists.)\n\nWhy is it useful:\n\nI want to keep my global styles, while for I may want to use markdown for certain part of my page (may through https://nextjs.org/docs/app/guides/mdx) so I need to revert the preflight override only in certain blocks. \n\n![Image](https://github.com/user-attachments/assets/77f838d1-7f41-4700-8967-225e24d24ae8)\nis not an option for me, because I don't want to change the global setup.\n\nI am especially interested in reverting \n```css\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n\nol,\nul,\nmenu {\n  list-style: none;\n}\n```\nbecause those are commonly used in markdown.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18169","RelatedDescription":"Closed issue \"Nested component CSS doesn't work well with tailwind\" (#18169)"},{"Id":"3098702780","IsPullRequest":false,"CreatedAt":"2025-05-29T07:00:55","Actor":"hfournier","Number":"18170","RawContent":null,"Title":"rounded-full stops other radii from working","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.1.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nAstro\n\n**What version of Node.js are you using?**\n\nv22.11.0\n\n**What browser are you using?**\n\nBrave, Edge and Firefox Dev\n\n**What operating system are you using?**\n\nWindows 11 ARM\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/kYnZBxXbZm\n\n**Describe your issue**\n\nIf I set:\n\n```html\n<div class=\"size-48 rounded-l-full rounded-r-2xl bg-lime-500\">\n```\n\nthe left side of the div will be fully rounded, but the right side is square. It doesn't matter which side or corner you pick, if you set `rounded-*-full`, the other corners will not be rounded at all regardless of what you set them to (except full).\n\nDiscovered the issue on an `<input type=\"file\" />`, so I included one of those as well. Shows that it's not limited to a certain html element.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18170","RelatedDescription":"Closed issue \"rounded-full stops other radii from working\" (#18170)"},{"Id":"3097810404","IsPullRequest":false,"CreatedAt":"2025-05-28T18:56:53","Actor":"LarsWesselius","Number":"18166","RawContent":null,"Title":"v4: cellpadding stopped working on tables","State":"closed","Body":"**What version of Tailwind CSS are you using?**\nv4.1.8\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\nDoesn't matter\n\n**What version of Node.js are you using?**\nDoesnt'matter\n\n**What browser are you using?**\nFirefox\n\n**What operating system are you using?**\nWindows\n\n**Reproduction URL**\nhttps://play.tailwindcss.com/HDIvkgiTvz\nAnd then change top right to 3.x version, change cellpadding and see the difference\n\n**Describe your issue**\n\ncellpadding attribute on tables does nothing anymore in v4. I realize the cellpadding attribute was already deprecated for like 20 years at this point but still an unexpected change in tailwind (unless I missed it in the blog post/docs somewhere?)\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18166","RelatedDescription":"Closed issue \"v4: cellpadding stopped working on tables\" (#18166)"},{"Id":"3097179055","IsPullRequest":false,"CreatedAt":"2025-05-28T18:38:10","Actor":"penx","Number":"18165","RawContent":null,"Title":"Revert to browser behaviour for underlined links","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.1.7\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/dDlaG7IwVD\n\n**Describe your issue**\n\nTailwind removes underlines from links by default and sets their colour to the same as the surrounding text:\n\nhttps://github.com/tailwindlabs/tailwindcss/blob/4bfacb33a08a289f7d47846878a6157c200c9d49/packages/tailwindcss/preflight.css#L87-L91\n\nEven when configured with a link colour, removing the underline will fail basic A accessibility (unless 3:1 contrast is used compared to body text).\n\nhttps://www.w3.org/WAI/WCAG21/Understanding/use-of-color.html\n\nPersonally, I would prefer that Tailwind uses browser default behaviour for underlining links, rather than being inaccessible by default. Alternatively, please could you provide and document a way for users to revert to the browser default behaviour for underlining links?\n\nAt the moment, the [only documentation I can find](https://tailwindcss.com/docs/preflight#extending-preflight) seems to lead users to do the following:\n\n```css\n@import \"tailwindcss\";\n\n@layer base {\n  a {\n    text-decoration-line: underline;\n  }\n}\n```\n\n...but this does not result in browser default behaviour, which is to underline anchors with an href and  to __not underline ones without an href__. This is a useful and intentional feature.\n\nUnfortunately in modern web dev, a common antipattern is to render an anchor with an onclick handler but no href.  __A link without an href is not focusable__ so the browser default styles help to discourage this.\n\nBy encouraging users to write CSS that does not distinguish between anchors with and without an href, I think Tailwind encourages this inaccessible antipattern.\n\nThis could be case of adding something like this (note use of :any-link) to the docs:\n\n\n```css\n@import \"tailwindcss\";\n\n@layer base {\n  a:any-link {\n    text-decoration-line: underline;\n  }\n}\n```\n\nThough for better browser compatibility, perhaps a way to remove the lines from preflight would be better.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18165","RelatedDescription":"Closed issue \"Revert to browser behaviour for underlined links\" (#18165)"},{"Id":"3094789208","IsPullRequest":true,"CreatedAt":"2025-05-28T15:01:27","Actor":"RobinMalfait","Number":"18164","RawContent":null,"Title":"Release v4.1.8","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18164","RelatedDescription":"Closed or merged PR \"Release v4.1.8\" (#18164)"},{"Id":"3094580655","IsPullRequest":true,"CreatedAt":"2025-05-27T17:02:10","Actor":"thecrypticace","Number":"18163","RawContent":null,"Title":"Ignore `.pnpm-store` in Oxide","State":"closed","Body":"Fixes #18148\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18163","RelatedDescription":"Closed or merged PR \"Ignore `.pnpm-store` in Oxide\" (#18163)"},{"Id":"3094340415","IsPullRequest":false,"CreatedAt":"2025-05-27T15:24:57","Actor":"sancelot","Number":"18161","RawContent":null,"Title":"loads all system memory","State":"open","Body":"\n**What version of Tailwind CSS are you using?**\n\nv4.1.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\nVite 6.3.5\n\n**What version of Node.js are you using?**\n\nFor example: v22.14.0\n\n**What browser are you using?**\n\nedge\n**What operating system are you using?**\n\nwin10\n\n**Reproduction URL**\nnot possible\n\n**Describe your issue**\n\nMy folder contains vite css/ts project and some folders containing other kind of code (python...)\n\nWhen enabling tailwind css the computer memory goes immediatley to 100% and is no more usable.\n\nenabling means adding import \"@tailwindcss\" in the index.css file.\nthere is no problem calling tailwindcss() in vite.config","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18161","RelatedDescription":"Open issue \"loads all system memory\" (#18161)"},{"Id":"3093577675","IsPullRequest":false,"CreatedAt":"2025-05-27T11:43:15","Actor":"zcnftweb","Number":"18160","RawContent":null,"Title":"[v4] s3 cdn css file not render succful when Next.js build with upload to AWS S3","State":"closed","Body":"What version of Tailwind CSS are you using?\n\nFor example: v4.1.6\n\nWhat build tool (or framework if it abstracts the build tool) are you using?\n\npostcss 8, Next.js 15.5.2\n\nWhat version of Node.js are you using?\n\nFor example: v22.0.0\n\nWhat browser are you using?\n\nChrome 118\nWhat operating system are you using?\n\nWindows\n\nDescribe your issue\n\nMy project build with Vercel and upload assets to S3 cdn succ.\nI got cdn css file succ, but the html element has no effect","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18160","RelatedDescription":"Closed issue \"[v4] s3 cdn css file not render succful when Next.js build with upload to AWS S3\" (#18160)"},{"Id":"3092430828","IsPullRequest":true,"CreatedAt":"2025-05-27T09:12:06","Actor":"depfu[bot]","Number":"18157","RawContent":null,"Title":"Update turbo 2.5.2 → 2.5.3 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ turbo (2.5.2 → 2.5.3) · [Repo](https://github.com/turborepo/turbo)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18157","RelatedDescription":"Closed or merged PR \"Update turbo 2.5.2 → 2.5.3 (patch)\" (#18157)"},{"Id":"3093082632","IsPullRequest":false,"CreatedAt":"2025-05-27T09:03:12","Actor":"zcnftweb","Number":"18158","RawContent":null,"Title":"[v4] s3 cdn css file not render succful when Next.js build with upload to AWS S3","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.1.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\npostcss 8, Next.js 15.5.2\n\n**What version of Node.js are you using?**\n\nFor example: v22.0.0\n\n**What browser are you using?**\n\nChrome 118\n**What operating system are you using?**\n\nWindows\n\n\n**Describe your issue**\n\nMy project build with Vercel and upload assets to S3 cdn succ.\nI got cdn css file succ, but the html element has no effect, here is my [production website](https://thisiscz.vercel.app/en)\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18158","RelatedDescription":"Closed issue \"[v4] s3 cdn css file not render succful when Next.js build with upload to AWS S3\" (#18158)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-06-03T03:30:21.6133019Z","RunDurationInMilliseconds":426}