{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2978028468","IsPullRequest":false,"CreatedAt":"2025-04-07T21:23:15","Actor":"aedwardg","Number":"17602","RawContent":null,"Title":"[v4] `skew` utility classes add phantom border with child element's bg-color on Chrome browsers","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nPhoenix LiveView, but this presents itself in Tailwind playground as well, so it's not Phoenix related.\n\n**What version of Node.js are you using?**\n\nv20.9.0, but this presents itself in Tailwind playground as well\n\n**What browser are you using?**\nThis bug appears in Chrome (and likely chromium-based browsers). I don't see it in Firefox or Safari.\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/k6m7r3zHoZ\n\n(if you don't see it, try moving the horizontal divider between the html and preview -- it randomly disappears at some resolutions)\n\n**Describe your issue**\n\n**Current behavior:**\nTailwind 4.x `skew` utility classes on parent elements add border artifact with inner elements' background color extending to the full size of the parent in Chrome browsers.\n\nAs can be seen in the Tailwind playground link above, the inner div has a `w-1/2`, but what looks like a 1-2px border appears in the child's background color along 1 or more edges of the parent element. \n\n![Image](https://github.com/user-attachments/assets/82ca39a6-a009-4700-9944-0bb6448897d1)\n\nMost commonly, you can see the \"border\" along the bottom edge, but if you drag the horizontal divider between the html and preview, you will see that at some resolutions the border appears along the right edge or even disappears altogether.\n\nNote: the example uses `-skew-x-20`, but it also appears with `skew-x-20`. Additionally, using inline styles: `style=\"transform: skew(-20deg)\"` instead of `-skew-x-20` appears to behave as expected.\n\n**Expected behavior:** \nNone of the background color from the inner div should extend past the bounds of that element. This is current behavior for Tailwind 4.x on Firefox and Safari, and on all browsers for Tailwind 3.x","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17602","RelatedDescription":"Open issue \"[v4] `skew` utility classes add phantom border with child element's bg-color on Chrome browsers\" (#17602)"},{"Id":"2977866333","IsPullRequest":false,"CreatedAt":"2025-04-07T19:59:43","Actor":"mafifi","Number":"17601","RawContent":null,"Title":"@source Not Working as Expected During Build Process","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nFor example: v4.1.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.2.5\n\n**What version of Node.js are you using?**\n\nv20.18.1\n\n**What browser are you using?**\n\nEdge 135.0.3179.54\n\n**What operating system are you using?**\n\nmac OS 15.4\n\n**Reproduction URL**\n\nhttps://github.com/mafifi/monorepo\n\n**Describe your issue**\n\nTry running laifu-nini in preview, this will look visually correct.\nEdit the app.css file inside laifu-nini and edit\n\n```css\n@source '../../../packages/ui/src/lib/components/ui/button/*.svelte';\n```\n\nto\n```css\n@source '../../../packages/ui/src/lib/components/ui/*/*.svelte';\n```\n\nThis will break visually.\n\nThere appears to be an inherit limit on the number of files / directories, `@source` will accept.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17601","RelatedDescription":"Open issue \"@source Not Working as Expected During Build Process\" (#17601)"},{"Id":"2975603981","IsPullRequest":false,"CreatedAt":"2025-04-07T19:26:37","Actor":"gschwim","Number":"17581","RawContent":null,"Title":"twcss very slow in dev, >30s to load page after hmr update/ssr reload","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.1.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nsveltekit 2.20.4, vite 6.2.4 \n\n**What version of Node.js are you using?**\n\n22.14.0\n\n**What browser are you using?**\n\nchrome, brave\n\n**What operating system are you using?**\n\nMacOS\n\n[**Reproduction repo is here**](https://github.com/gschwim/svelte-tcwss/tree/b8695a6a59d1bf9a6acda2e5491383de625c0e5a)\n\n**Describe your issue**\n\nBase sveltekit install, added tailwindcss, imported to src/app.css. Once the import is added any change to content, css, or otherwise takes >30 seconds to refersh in the browser. I found [this issue](https://github.com/tailwindlabs/tailwindcss/issues/17522#issue-2968155486} that describes what I'm seeing very well, but the times are much longer, and I'm running the version of twcss that should have the fix.\n\nI ran `pnpm run dev` with env variable DEBUG=1 and received the following output (annotated):\n\n```text\n➜ ➜ pnpm run dev --host\n\n> sk-demo@0.0.1 dev /Users/demo/tmp/sk-demo\n> vite dev --host\n\n\n  VITE v6.2.4  ready in 2077 ms\n\n  ➜  Local:   http://localhost:5173/\n  ➜  Network: http://172.16.1.194:5173/\n  ➜  Network: http://172.16.3.5:5173/\n  ➜  press h + enter to show help\n\n[27945.47ms] [@tailwindcss/vite] Generate CSS (serve)\n[  198.84ms]   ↳ Setup compiler\n[    2.35ms]   ↳ Setup scanner\n[12870.16ms]   ↳ Scan for candidates\n[  886.94ms]   ↳ Build CSS\n\n\n[25024.72ms] [@tailwindcss/vite] Generate CSS (serve)\n[   48.78ms]   ↳ Setup compiler\n[    0.09ms]   ↳ Setup scanner\n[10152.08ms]   ↳ Scan for candidates\n[  802.87ms]   ↳ Build CSS\n\nend cold start, making change to +page.svelte and saving:\n\n[14450.78ms] [@tailwindcss/vite] Generate CSS (serve)\n[ 7107.51ms]   ↳ Scan for candidates\n[   38.39ms]   ↳ Build CSS\n\n9:24:33 PM [vite] (client) hmr update /src/routes/+page.svelte, /src/app.css\n9:24:33 PM [vite] (ssr) page reload src/routes/+page.svelte\n\n[14511.12ms] [@tailwindcss/vite] Generate CSS (serve)\n[ 7648.28ms]   ↳ Scan for candidates\n[   29.07ms]   ↳ Build CSS\n\n9:24:48 PM [vite] (client) hmr update /src/routes/+page.svelte, /src/app.css\n9:24:48 PM [vite] (ssr) page reload src/routes/+page.svelte\n\nnow a change to +layout.svelte\n\n9:25:25 PM [vite] (client) hmr update /src/routes/+layout.svelte, /src/app.css\n9:25:25 PM [vite] (ssr) page reload src/routes/+layout.svelte\n\n[13850.72ms] [@tailwindcss/vite] Generate CSS (serve)\n[ 6885.26ms]   ↳ Scan for candidates\n[   76.62ms]   ↳ Build CSS\n\n\n[14184.31ms] [@tailwindcss/vite] Generate CSS (serve)\n[ 7385.91ms]   ↳ Scan for candidates\n[   24.50ms]   ↳ Build CSS\n\n```\n\nSo on average, very minor changes to the files above cause a >40 second time for processing before the page reloads. This also extends to app.css changes.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17581","RelatedDescription":"Closed issue \"twcss very slow in dev, >30s to load page after hmr update/ssr reload\" (#17581)"},{"Id":"2977305042","IsPullRequest":true,"CreatedAt":"2025-04-07T16:19:43","Actor":"ABC124elizabeth","Number":"17598","RawContent":null,"Title":"Dynamic list manager","State":"closed","Body":"<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17598","RelatedDescription":"Closed or merged PR \"Dynamic list manager\" (#17598)"},{"Id":"2977227313","IsPullRequest":false,"CreatedAt":"2025-04-07T15:31:29","Actor":"wintercounter","Number":"17596","RawContent":null,"Title":"Container query classes cannot take CSS variable as arbitrary breakpoint value","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.3\n\n**Reproduction URL**\nhttps://play.tailwindcss.com/X6UI3NEaEi\n\n**Describe your issue**\n\nContainer query classes cannot take CSS variable as arbitrary breakpoint value.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17596","RelatedDescription":"Closed issue \"Container query classes cannot take CSS variable as arbitrary breakpoint value\" (#17596)"},{"Id":"2977027803","IsPullRequest":true,"CreatedAt":"2025-04-07T14:17:06","Actor":"RobinMalfait","Number":"17595","RawContent":null,"Title":"Ignore binary extensions, except in folder names","State":"open","Body":"We generate a glob to ignore binary extensions that looks something like this:\r\n```\r\n*.{mp4,pages,exe,…}\r\n```\r\n\r\nHowever, if you have a folder that happens to end in `.pages` for example, then this folder will be ignored in its entirety.\r\n\r\nTo solve this, we will instead generate the following globs:\r\n```\r\n*.{mp4,pages,exe,…}\r\n!*.{mp4,pages,exe,…}/\r\n```\r\n\r\nThis way, the `/` indicates that we are dealing with a folder and that these should _not_ be ignored.\r\n\r\nOnly downside with this approach is that if you have a `.gitignore` file that contains `foo.pages/`, then `!*.pages/` will win from the `.gitignore`. The solution would be to use an explicit `@source not \"foo.pages\"`.\r\n\r\nFixes: #17569\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17595","RelatedDescription":"Open PR \"Ignore binary extensions, except in folder names\" (#17595)"},{"Id":"2974998477","IsPullRequest":false,"CreatedAt":"2025-04-07T13:48:20","Actor":"ediamin","Number":"17576","RawContent":null,"Title":"Unused test data in brace-expansion.test.ts","State":"closed","Body":"I found an issue in the `brace-expansion.test.ts` file where there's an unused test case at line 20.\n\n**File**: [packages/tailwindcss/src/utils/brace-expansion.test.ts](https://github.com/tailwindlabs/tailwindcss/blob/5a77c9dfc4bcc1f83fe3269fbbcc27386d5e8572/packages/tailwindcss/src/utils/brace-expansion.test.ts#L20)\n\n**Issue**: The test case for `'a/{0..10..5}/b'` is incorrectly structured. The third array element `['a/{10..0..5}/b', ['a/10/b', 'a/5/b', 'a/0/b']]` has no effect on the test execution.\n\n**Current code**:\n```ts\n...\n[\n  'a/{0..10..5}/b',\n  ['a/0/b', 'a/5/b', 'a/10/b'],\n  ['a/{10..0..5}/b', ['a/10/b', 'a/5/b', 'a/0/b']],\n],\n...\n```\n\n**Expected structure**:\n```ts\n...\n['a/{0..10..5}/b', ['a/0/b', 'a/5/b', 'a/10/b']],\n['a/{10..0..5}/b', ['a/10/b', 'a/5/b', 'a/0/b']],\n...\n```\n\nI'm not sure what the original intention of this array was. If I move this array to the parent level, the test fails, meaning `expand('a/{10..0..5}/b')` does not return `['a/10/b', 'a/5/b', 'a/0/b']`. The actual output is `['a/0/b', 'a/10/b', 'a/5/b']`.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17576","RelatedDescription":"Closed issue \"Unused test data in brace-expansion.test.ts\" (#17576)"},{"Id":"2976588969","IsPullRequest":true,"CreatedAt":"2025-04-07T13:48:19","Actor":"RobinMalfait","Number":"17591","RawContent":null,"Title":"Fix brace expansion with range going down","State":"closed","Body":"This PR fixes an issue where a test was setup wrong. While fixing the test, I also noticed that the actual computation was wrong. There are a few cases we have to make sure they work when working with ranges:\r\n\r\n- `0..10..5` — range going from low to high, with a positive step. This should result in `0 5 10`.\r\n- `0..10..-5` — range going from low to high, with a negative step. This should result in `10 5 0`.\r\n- `10..0..5` — range going from high to low, with a positive step. This should result in  `10 5 0`.\r\n- `10..0..-5` — range going from high to low, with a negative step. This should result in  `0 5 10`.\r\n\r\nThis technically means that there are multiple ways to do the same thing. And in case of Tailwind CSS the order doesn't really matter because we apply custom sort rules for utilities. Luckily, the order here doesn't have any influence on the actual generated CSS so it's not the end of the world to support it.\r\n\r\nIntellisense does use a more heavy brace expansion library, and if we don't support this, it also means that you can see a preview of generated classes without generating the actual classes. This also fixes that.\r\n\r\nE.g.: Note how the preview shows the correct values, but nothing has been generated (this is before the change of this PR).\r\n\r\n<img width=\"500\" alt=\"image\" src=\"https://github.com/user-attachments/assets/fc2065d2-f2c1-4017-b521-8fd72d41db42\" />\r\n\r\nFixes: #17576\r\n\r\n\r\n## Test plan\r\n\r\n1. Hoisted the test (`a/{10..0..5}/b`), which failed\r\n2. Fixed the implementation to make the test pass\r\n3. Added an additional test (`a/{10..0..-5}/b`)","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17591","RelatedDescription":"Closed or merged PR \"Fix brace expansion with range going down\" (#17591)"},{"Id":"2973279706","IsPullRequest":true,"CreatedAt":"2025-04-07T13:05:57","Actor":"depfu[bot]","Number":"17564","RawContent":null,"Title":"Update all of react 19.0.0 → 19.1.0 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ react (19.0.0 → 19.1.0) · [Repo](https://github.com/facebook/react) · [Changelog](https://github.com/facebook/react/blob/main/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/facebook/react/releases/tag/v19.1.0\">19.1.0</a></h4>\n\n<blockquote><h3 dir=\"auto\">Owner Stack</h3>\n<p dir=\"auto\">An Owner Stack is a string representing the components that are directly responsible for rendering a particular component. You can log Owner Stacks when debugging or use Owner Stacks to enhance error overlays or other development tools. Owner Stacks are only available in development builds. Component Stacks in production are unchanged.</p>\n<ul dir=\"auto\">\n<li>An Owner Stack is a development-only stack trace that helps identify which components are responsible for rendering a particular component. An Owner Stack is distinct from a Component Stacks, which shows the hierarchy of components leading to an error.</li>\n<li>The <a href=\"https://react.dev/reference/react/captureOwnerStack\">captureOwnerStack API</a> is only available in development mode and returns a Owner Stack, if available. The API can be used to enhance error overlays or log component relationships when debugging. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/29923\">#29923</a>, <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32353\">#32353</a>, <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/30306\">#30306</a>,<br>\n<a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32538\">#32538</a>, <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32529\">#32529</a>, <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32538\">#32538</a>\n</li>\n</ul>\n<h3 dir=\"auto\">React</h3>\n<ul dir=\"auto\">\n<li>Enhanced support for Suspense boundaries to be used anywhere, including the client, server, and during hydration. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32069\">#32069</a>, <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32163\">#32163</a>, <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32224\">#32224</a>, <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32252\">#32252</a>\n</li>\n<li>Reduced unnecessary client rendering through improved hydration scheduling <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31751\">#31751</a>\n</li>\n<li>Increased priority of client rendered Suspense boundaries <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31776\">#31776</a>\n</li>\n<li>Fixed frozen fallback states by rendering unfinished Suspense boundaries on the client. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31620\">#31620</a>\n</li>\n<li>Reduced garbage collection pressure by improving Suspense boundary retries. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31667\">#31667</a>\n</li>\n<li>Fixed erroneous “Waiting for Paint” log when the passive effect phase was not delayed <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31526\">#31526</a>\n</li>\n<li>Fixed a regression causing key warnings for flattened positional children in development mode. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32117\">#32117</a>\n</li>\n<li>Updated <code class=\"notranslate\">useId</code> to use valid CSS selectors, changing format from <code class=\"notranslate\">:r123:</code> to <code class=\"notranslate\">«r123»</code>. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32001\">#32001</a>\n</li>\n<li>Added a dev-only warning for null/undefined created in useEffect, useInsertionEffect, and useLayoutEffect. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32355\">#32355</a>\n</li>\n<li>Fixed a bug where dev-only methods were exported in production builds. React.act is no longer available in production builds. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32200\">#32200</a>\n</li>\n<li>Improved consistency across prod and dev to improve compatibility with Google Closure Complier and bindings <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31808\">#31808</a>\n</li>\n<li>Improve passive effect scheduling for consistent task yielding. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31785\">#31785</a>\n</li>\n<li>Fixed asserts in React Native when passChildrenWhenCloningPersistedNodes is enabled for OffscreenComponent rendering. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32528\">#32528</a>\n</li>\n<li>Fixed component name resolution for Portal <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32640\">#32640</a>\n</li>\n<li>Added support for beforetoggle and toggle events on the dialog element. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32479\">#32479</a> <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32479\">#32479</a>\n</li>\n</ul>\n<h3 dir=\"auto\">React DOM</h3>\n<ul dir=\"auto\">\n<li>Fixed double warning when the <code class=\"notranslate\">href</code> attribute is an empty string <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31783\">#31783</a>\n</li>\n<li>Fixed an edge case where <code class=\"notranslate\">getHoistableRoot()</code> didn’t work properly when the container was a Document <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32321\">#32321</a>\n</li>\n<li>Removed support for using HTML comments (e.g. <code class=\"notranslate\">&lt;!-- --&gt;</code>) as a DOM container. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32250\">#32250</a>\n</li>\n<li>Added support for <code class=\"notranslate\">&lt;script&gt;</code> and <code class=\"notranslate\">&lt;template&gt;</code> tags to be nested within <code class=\"notranslate\">&lt;select&gt;</code> tags. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31837\">#31837</a>\n</li>\n<li>Fixed responsive images to be preloaded as HTML instead of headers <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32445\">#32445</a>\n</li>\n</ul>\n<h3 dir=\"auto\">use-sync-external-store</h3>\n<ul dir=\"auto\">\n<li>Added <code class=\"notranslate\">exports</code> field to <code class=\"notranslate\">package.json</code> for <code class=\"notranslate\">use-sync-external-store</code> to support various entrypoints. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/25231\">#25231</a>\n</li>\n</ul>\n<h3 dir=\"auto\">React Server Components</h3>\n<ul dir=\"auto\">\n<li>Added <code class=\"notranslate\">unstable_prerender</code>, a new experimental API for prerendering React Server Components on the server <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31724\">#31724</a>\n</li>\n<li>Fixed an issue where streams would hang when receiving new chunks after a global error <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31840\">#31840</a>, <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31851\">#31851</a>\n</li>\n<li>Fixed an issue where pending chunks were counted twice. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31833\">#31833</a>\n</li>\n<li>Added support for streaming in edge environments <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31852\">#31852</a>\n</li>\n<li>Added support for sending custom error names from a server so that they are available in the client for console replaying. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32116\">#32116</a>\n</li>\n<li>Updated the server component wire format to remove IDs for hints and console.log because they have no return value <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31671\">#31671</a>\n</li>\n<li>Exposed <code class=\"notranslate\">registerServerReference</code> in client builds to handle server references in different environments. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32534\">#32534</a>\n</li>\n<li>Added react-server-dom-parcel package which integrates Server Components with the <a href=\"https://parceljs.org/\">Parcel bundler</a> <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31725\">#31725</a>, <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32132\">#32132</a>, <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31799\">#31799</a>, <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32294\">#32294</a>, <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31741\">#31741</a>\n</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/react/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/facebook/react/compare/7aa5dda3b3e4c2baa905a59b922ae7ec14734b24...4a9df08157f001c01b078d259748512211233dcf\">See the full diff on Github</a>. The new version differs by more commits than we can show here.</p>\n</details>\n\n\n\n\n#### ✳️ react-dom (19.0.0 → 19.1.0) · [Repo](https://github.com/facebook/react) · [Changelog](https://github.com/facebook/react/blob/main/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/facebook/react/releases/tag/v19.1.0\">19.1.0</a></h4>\n\n<blockquote><h3 dir=\"auto\">Owner Stack</h3>\n<p dir=\"auto\">An Owner Stack is a string representing the components that are directly responsible for rendering a particular component. You can log Owner Stacks when debugging or use Owner Stacks to enhance error overlays or other development tools. Owner Stacks are only available in development builds. Component Stacks in production are unchanged.</p>\n<ul dir=\"auto\">\n<li>An Owner Stack is a development-only stack trace that helps identify which components are responsible for rendering a particular component. An Owner Stack is distinct from a Component Stacks, which shows the hierarchy of components leading to an error.</li>\n<li>The <a href=\"https://react.dev/reference/react/captureOwnerStack\">captureOwnerStack API</a> is only available in development mode and returns a Owner Stack, if available. The API can be used to enhance error overlays or log component relationships when debugging. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/29923\">#29923</a>, <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32353\">#32353</a>, <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/30306\">#30306</a>,<br>\n<a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32538\">#32538</a>, <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32529\">#32529</a>, <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32538\">#32538</a>\n</li>\n</ul>\n<h3 dir=\"auto\">React</h3>\n<ul dir=\"auto\">\n<li>Enhanced support for Suspense boundaries to be used anywhere, including the client, server, and during hydration. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32069\">#32069</a>, <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32163\">#32163</a>, <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32224\">#32224</a>, <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32252\">#32252</a>\n</li>\n<li>Reduced unnecessary client rendering through improved hydration scheduling <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31751\">#31751</a>\n</li>\n<li>Increased priority of client rendered Suspense boundaries <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31776\">#31776</a>\n</li>\n<li>Fixed frozen fallback states by rendering unfinished Suspense boundaries on the client. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31620\">#31620</a>\n</li>\n<li>Reduced garbage collection pressure by improving Suspense boundary retries. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31667\">#31667</a>\n</li>\n<li>Fixed erroneous “Waiting for Paint” log when the passive effect phase was not delayed <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31526\">#31526</a>\n</li>\n<li>Fixed a regression causing key warnings for flattened positional children in development mode. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32117\">#32117</a>\n</li>\n<li>Updated <code class=\"notranslate\">useId</code> to use valid CSS selectors, changing format from <code class=\"notranslate\">:r123:</code> to <code class=\"notranslate\">«r123»</code>. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32001\">#32001</a>\n</li>\n<li>Added a dev-only warning for null/undefined created in useEffect, useInsertionEffect, and useLayoutEffect. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32355\">#32355</a>\n</li>\n<li>Fixed a bug where dev-only methods were exported in production builds. React.act is no longer available in production builds. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32200\">#32200</a>\n</li>\n<li>Improved consistency across prod and dev to improve compatibility with Google Closure Complier and bindings <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31808\">#31808</a>\n</li>\n<li>Improve passive effect scheduling for consistent task yielding. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31785\">#31785</a>\n</li>\n<li>Fixed asserts in React Native when passChildrenWhenCloningPersistedNodes is enabled for OffscreenComponent rendering. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32528\">#32528</a>\n</li>\n<li>Fixed component name resolution for Portal <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32640\">#32640</a>\n</li>\n<li>Added support for beforetoggle and toggle events on the dialog element. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32479\">#32479</a> <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32479\">#32479</a>\n</li>\n</ul>\n<h3 dir=\"auto\">React DOM</h3>\n<ul dir=\"auto\">\n<li>Fixed double warning when the <code class=\"notranslate\">href</code> attribute is an empty string <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31783\">#31783</a>\n</li>\n<li>Fixed an edge case where <code class=\"notranslate\">getHoistableRoot()</code> didn’t work properly when the container was a Document <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32321\">#32321</a>\n</li>\n<li>Removed support for using HTML comments (e.g. <code class=\"notranslate\">&lt;!-- --&gt;</code>) as a DOM container. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32250\">#32250</a>\n</li>\n<li>Added support for <code class=\"notranslate\">&lt;script&gt;</code> and <code class=\"notranslate\">&lt;template&gt;</code> tags to be nested within <code class=\"notranslate\">&lt;select&gt;</code> tags. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31837\">#31837</a>\n</li>\n<li>Fixed responsive images to be preloaded as HTML instead of headers <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32445\">#32445</a>\n</li>\n</ul>\n<h3 dir=\"auto\">use-sync-external-store</h3>\n<ul dir=\"auto\">\n<li>Added <code class=\"notranslate\">exports</code> field to <code class=\"notranslate\">package.json</code> for <code class=\"notranslate\">use-sync-external-store</code> to support various entrypoints. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/25231\">#25231</a>\n</li>\n</ul>\n<h3 dir=\"auto\">React Server Components</h3>\n<ul dir=\"auto\">\n<li>Added <code class=\"notranslate\">unstable_prerender</code>, a new experimental API for prerendering React Server Components on the server <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31724\">#31724</a>\n</li>\n<li>Fixed an issue where streams would hang when receiving new chunks after a global error <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31840\">#31840</a>, <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31851\">#31851</a>\n</li>\n<li>Fixed an issue where pending chunks were counted twice. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31833\">#31833</a>\n</li>\n<li>Added support for streaming in edge environments <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31852\">#31852</a>\n</li>\n<li>Added support for sending custom error names from a server so that they are available in the client for console replaying. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32116\">#32116</a>\n</li>\n<li>Updated the server component wire format to remove IDs for hints and console.log because they have no return value <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31671\">#31671</a>\n</li>\n<li>Exposed <code class=\"notranslate\">registerServerReference</code> in client builds to handle server references in different environments. <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32534\">#32534</a>\n</li>\n<li>Added react-server-dom-parcel package which integrates Server Components with the <a href=\"https://parceljs.org/\">Parcel bundler</a> <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31725\">#31725</a>, <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32132\">#32132</a>, <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31799\">#31799</a>, <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/32294\">#32294</a>, <a href=\"https://bounce.depfu.com/github.com/facebook/react/pull/31741\">#31741</a>\n</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/react-dom/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/facebook/react/compare/7aa5dda3b3e4c2baa905a59b922ae7ec14734b24...4a9df08157f001c01b078d259748512211233dcf\">See the full diff on Github</a>. The new version differs by more commits than we can show here.</p>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17564","RelatedDescription":"Closed or merged PR \"Update all of react 19.0.0 → 19.1.0 (minor)\" (#17564)"},{"Id":"2976607077","IsPullRequest":false,"CreatedAt":"2025-04-07T11:53:05","Actor":"crswll","Number":"17593","RawContent":null,"Title":"preflight.css overwrites default `margin: auto` for `[popover]` elements.","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nFor example: v4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: NA\n\n**What version of Node.js are you using?**\n\nFor example: NA\n\n**What browser are you using?**\n\nFor example: NA\n\n**What operating system are you using?**\n\nFor example: NA\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/5vL9gz1YK3\n\n**Describe your issue**\n\npreflight.css overwrites the default `margin: auto` for `[popover]` UA styles. Maybe not a bug but doesn't seem intuitive either? Thought I'd mention it.\n\n![Image](https://github.com/user-attachments/assets/65d6cf74-e704-4124-8965-5a903fd6ba42)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17593","RelatedDescription":"Open issue \"preflight.css overwrites default `margin: auto` for `[popover]` elements.\" (#17593)"},{"Id":"2975013524","IsPullRequest":false,"CreatedAt":"2025-04-07T11:07:13","Actor":"zaib-shekh","Number":"17577","RawContent":null,"Title":"Error after installing with tailwindcss using vite","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n\nUsing: v4.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nUsing : Vite 6.1.0 + react\n\n**What version of Node.js are you using?**\n\nUsing: v20.15.0\n\n**What browser are you using?**\n\nUsing: Chrome, Brave\n\n**What operating system are you using?**\n\nUsing: Windows\n\n**Reproduction URL**\n\nA Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\n\nA reproduction is **required** when filing an issue — any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.\n\n**Describe your issue**\n\nI installed Tailwind CSS for my Vite + React project and followed all the necessary steps from the Tailwind CSS documentation. However, when I run the project, I get the following error:\n\n``` bash\nError: EPERM: operation not permitted, rmdir 'C:\\Users\\<User>\\OneDrive\\Desktop\\<Project Name>\\node_modules\\.vite\\deps'\n```\n\nI've tried several times, but I keep getting the same error. I suspect the issue might be related to OneDrive or file permission conflicts.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17577","RelatedDescription":"Closed issue \"Error after installing with tailwindcss using vite\" (#17577)"},{"Id":"2975219244","IsPullRequest":false,"CreatedAt":"2025-04-07T11:05:19","Actor":"mowabidev","Number":"17579","RawContent":null,"Title":"Infinite rendering with Webpack Encore from Symfony 7.2 and Tailwindcss 4.1.3","State":"closed","Body":"Hello.\n\nI followed the [documentation for Symfony's app](https://tailwindcss.com/docs/installation/framework-guides/symfony) to install tailwindcss 4.1 in my Symfony project. Compilation goes smoothly with Webpack Encore and my page displays well. But I notice in my console that Webpack continues to compile ad infinitum.\n\nHas anyone had this problem before?\nHow can I fix it?\n\nTailwindcss version : \"^4.1.3\"\nSymfony version : \"7.2.*\"","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17579","RelatedDescription":"Closed issue \"Infinite rendering with Webpack Encore from Symfony 7.2 and Tailwindcss 4.1.3\" (#17579)"},{"Id":"2976478025","IsPullRequest":false,"CreatedAt":"2025-04-07T11:04:38","Actor":"ehsanrezaeee","Number":"17587","RawContent":null,"Title":"installing tailwindcss v4.1.3 crashing the react vite app with Error: Cannot find module '../lightningcss.win32-x64-msvc.node'","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.1.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nReact 19.1.0, Vite 6.2.0\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nWindows 10 Education\n\n**Reproduction URL**\n\n[https://github.com/ehsanrezaeee/lightningcss-bug-tailwindcss.git](url)\n\n**Describe your issue**\n\ninstalling fresh react vite application with \"pnpm create vite\" and then installing tailwindcss v4.1 with vite configuration. then starting the development server and facing this error:\n\n\n pnpm dev\n\n> react@0.0.0 dev C:\\Users\\Free\\WebstormProjects\\react\n> vite\n\nfailed to load config from C:\\Users\\Free\\WebstormProjects\\react\\vite.config.ts\nerror when starting dev server:\nError: Cannot find module '../lightningcss.win32-x64-msvc.node'\nRequire stack:\n- C:\\Users\\Free\\WebstormProjects\\react\\node_modules\\.pnpm\\lightningcss@1.29.2\\node_modules\\lightningcss\\node\\index.js\n    at Function._resolveFilename (node:internal/modules/cjs/loader:1225:15)\n    at Function._load (node:internal/modules/cjs/loader:1055:27)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:220:24)\n    at Module.require (node:internal/modules/cjs/loader:1311:12)\n    at require (node:internal/modules/helpers:136:16)\n    at Object.<anonymous> (C:\\Users\\Free\\WebstormProjects\\react\\node_modules\\.pnpm\\lightningcss@1.29.2\\node_modules\\lightningcss\\node\\index.js:22:22)\n    at Module._compile (node:internal/modules/cjs/loader:1554:14)\n    at Object..js (node:internal/modules/cjs/loader:1706:10)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n ELIFECYCLE  Command failed with exit code 1.\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17587","RelatedDescription":"Closed issue \"installing tailwindcss v4.1.3 crashing the react vite app with Error: Cannot find module '../lightningcss.win32-x64-msvc.node'\" (#17587)"},{"Id":"2976252062","IsPullRequest":false,"CreatedAt":"2025-04-07T10:47:51","Actor":"ninjadevpunk","Number":"17585","RawContent":null,"Title":"Dark text shows on dark background","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nReferring to the tailwind website not tailwind itself.\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nnot applicable\n\n**What version of Node.js are you using?**\n\nnot applicable\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nWindows 11\n\n**Reproduction URL**\n\nnot applicable.\n\n**Describe your issue**\n\nSo I went on the site to go learn tailwind and I couldn't see the text well because it was black text on a dark background. I actually found the light mode settings by accident and changing the setting (any change works for dark mode and light mode works fine) from system settings to dark mode removes the issue. It seems like it doesn't really matter what settings I use between system and dark mode settings, just changing the setting at least once fixes the issue. It always does the issue I mentioned when I first visit the site then I have to go down to the bottom of the page and change mode and then it's fixed. Just to be clear simply changing the setting makes the modes work normal.\n\nI'd suggest a fix if it's not just my browser doing this and putting the modes at the top of the page for people to see easier since I found it by mistake.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17585","RelatedDescription":"Closed issue \"Dark text shows on dark background\" (#17585)"},{"Id":"2972837058","IsPullRequest":true,"CreatedAt":"2025-04-07T09:42:03","Actor":"philipp-spiess","Number":"17562","RawContent":null,"Title":"Make  polyfill work when the theme variable resolves to another var","State":"closed","Body":"Discovered while triaging #17556\r\n\r\nThis PR improves the `color-mix(...)` polyfill to ensure it works when a theme key links to another theme key via a `var(...)` call.\r\n\r\nImagine this setup:\r\n\r\n```css\r\n @theme {\r\n  --color-red: var(--color-red-500);\r\n  --color-red-500: oklch(63.7% 0.237 25.331);\r\n}\r\n@source inline(\"text-red/50\");\r\n````\r\n\r\nSince `--color-red` will link to `--color-red-500` _which is also a known theme variable_, we can inline the value of `--color-red-500` into the fallback now:\r\n\r\n```css\r\n.text-red\\\\/50 {\r\n  color: var(--color-red);\r\n}\r\n@supports (color: color-mix(in lab, red, red)) {\r\n  .text-red\\\\/50 {\r\n    color: color-mix(in oklab, var(--color-red) 50%, transparent);\r\n  }\r\n}\r\n```\r\n\r\nThis will allow for slightly less confusing behavior.\r\n\r\nThe code added also handles recursive definitions where a color is linking to another color that is again linking to the first one (by adding a `Set` to keep track of already seen variable names).\r\n\r\n## Test plan\r\n\r\n- Added unit test","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17562","RelatedDescription":"Closed or merged PR \"Make  polyfill work when the theme variable resolves to another var\" (#17562)"},{"Id":"2972476662","IsPullRequest":true,"CreatedAt":"2025-04-07T09:18:48","Actor":"philipp-spiess","Number":"17555","RawContent":null,"Title":"Fix  polyfill in combination with unused CSS variable removal","State":"closed","Body":"This PR fixes an issue we noticed while investigating #17553, where the unused CSS variable removal didn't work properly when the theme variable it tried to remove was modified by a polyfill rule.\r\n\r\nThe way the bookkeeping for the unused CSS variable worked was that it tired to find the declaration inside it's parent after the traversal. However, the `color-mix(…)` polyfill has since then made changes to the declaration so it can't find it's position correctly anymore and will thus instead delete the last declaration of the node (this caused unrelated CSS variables to be eliminated while the ones with `color-mix(…)` were unexpectedly kept).\r\n\r\nTo fix this, we decided to apply the polyfills after any eventual deletions. This also ensures that no `@supports` query for the variables are created and simplifies the code a bit since all polyfills are now colocated.\r\n\r\n## Test plan\r\n\r\n- Added a unit test for the example we discovered in #17553\r\n- Luckily the conditions of this seemed rare enough so that it doesn't cause any other of our tests to update.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17555","RelatedDescription":"Closed or merged PR \"Fix  polyfill in combination with unused CSS variable removal\" (#17555)"},{"Id":"2973964075","IsPullRequest":true,"CreatedAt":"2025-04-05T20:24:18","Actor":"samuel871211","Number":"17565","RawContent":null,"Title":"refactor[integrations/utils.ts]: change `let` to `const` for those references doesn't change ","State":"closed","Body":"Some variables were declared with the `let` keyword but never reassigned. For the reasons below, it would be a better practice to change to `const`.\r\n\r\n1. Prevents accidental reassignment\r\n2. Signals intent clearly to other developers\r\n3. Improves code readability\r\n4. Enables potential compiler optimizations\r\n5. Simplifies debugging\r\n6. Promotes immutability\r\n7. Reduces bugs from mutable state","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17565","RelatedDescription":"Closed or merged PR \"refactor[integrations/utils.ts]: change `let` to `const` for those references doesn't change \" (#17565)"},{"Id":"2973989259","IsPullRequest":true,"CreatedAt":"2025-04-05T20:24:07","Actor":"samuel871211","Number":"17566","RawContent":null,"Title":"refactor[integrations/test]: change `let` to `const` for those references doesn't change","State":"closed","Body":"Some variables were declared with the `let` keyword but never reassigned. For the reasons below, it would be a better practice to change to `const`.\r\n\r\n1. Prevents accidental reassignment\r\n2. Signals intent clearly to other developers\r\n3. Improves code readability\r\n4. Enables potential compiler optimizations\r\n5. Simplifies debugging\r\n6. Promotes immutability\r\n7. Reduces bugs from mutable state","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17566","RelatedDescription":"Closed or merged PR \"refactor[integrations/test]: change `let` to `const` for those references doesn't change\" (#17566)"},{"Id":"2974198457","IsPullRequest":false,"CreatedAt":"2025-04-05T13:20:26","Actor":"jullic","Number":"17569","RawContent":null,"Title":"tailwind .pages folder error","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.2.0\n\n**What version of Node.js are you using?**\n\nv20.18.1\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://github.com/jullic/tailwind-.work-folder-error-\n\n**Describe your issue**\n\n\n\nI'm using vite. \ntailwind version 4.1.1\n\nIf the name of the folder where the components are located ends with “.pages”, then the utility classes used in the components in that folder are not applied.\n\nI spent several hours trying to figure out what the problem might be, but I haven't figured it out yet, maybe there are some other patterns in which utility classes are not applied. \n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17569","RelatedDescription":"Open issue \"tailwind .pages folder error\" (#17569)"},{"Id":"2974006671","IsPullRequest":true,"CreatedAt":"2025-04-05T10:29:58","Actor":"samuel871211","Number":"17567","RawContent":null,"Title":"refactor[packages/test]: change `let` to `const` for those references doesn't change","State":"closed","Body":"Some variables were declared with the `let` keyword but never reassigned. For the reasons below, it would be a better practice to change to `const`.\r\n\r\n1. Prevents accidental reassignment\r\n2. Signals intent clearly to other developers\r\n3. Improves code readability\r\n4. Enables potential compiler optimizations\r\n5. Simplifies debugging\r\n6. Promotes immutability\r\n7. Reduces bugs from mutable state","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17567","RelatedDescription":"Closed or merged PR \"refactor[packages/test]: change `let` to `const` for those references doesn't change\" (#17567)"},{"Id":"2973016438","IsPullRequest":true,"CreatedAt":"2025-04-04T17:54:23","Actor":"RobinMalfait","Number":"17563","RawContent":null,"Title":"Prepare v4.1.3 release","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17563","RelatedDescription":"Closed or merged PR \"Prepare v4.1.3 release\" (#17563)"},{"Id":"2972736645","IsPullRequest":false,"CreatedAt":"2025-04-04T15:38:43","Actor":"saschafuchs","Number":"17559","RawContent":null,"Title":"Text-Shadow declares font-size","State":"closed","Body":"The current version 4.1.2 declares `font-size` instead of `text-shadow`.\n\n![Image](https://github.com/user-attachments/assets/56307a39-d2af-43e4-a6e9-3ca7a4cbd2ad)\n\nThis happens with every text-shadow class that appears in tailwind.css\n\n```css\n .text-shadow-lg {\n    font-size: var(--text-shadow-lg);\n  }\n  .text-shadow-md {\n    font-size: var(--text-shadow-md);\n  }\n  .text-shadow-xs {\n    font-size: var(--text-shadow-xs);\n  }\n```\n\nTailwind is used in combination with Nuxt 3.16.3 and Nuxt UI - although I don't think Nuxt UI manipulates the `text-shadow` classes. The color classes for the shadow are also all available\n\n```css\nshadow-amber-950 {\n    --tw-shadow-color: var(--color-amber-950);\n  }\n  .shadow-neutral-900 {\n    --tw-shadow-color: var(--color-neutral-900);\n  }\n  .shadow-neutral-900\\/80 {\n    --tw-shadow-color: color-mix(in oklab, var(--color-neutral-900) 80%, transparent);\n  }\n```\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17559","RelatedDescription":"Closed issue \"Text-Shadow declares font-size\" (#17559)"},{"Id":"2971049822","IsPullRequest":false,"CreatedAt":"2025-04-04T15:21:36","Actor":"markzalar","Number":"17542","RawContent":null,"Title":"Class not extracted when only occurrence is first element of Slim attribute array","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.2\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n@tailwindcss/cli\n\n**What version of Node.js are you using?**\n\nv22.10.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS 15\n\n**Reproduction URL**\n\nhttps://github.com/markzalar/tailwind-4.0.10-slim-first-in-array\n\n**Describe your issue**\n\nThis issue started happening in tailwindcss 4.0.10\n\nIf the only occurrence of a class is the first element of a Slim attribute array, the class doesn't get extracted. \n\nFor example, if I have the following slim code\n\n```slim\ndiv[\n  class=%w[bg-blue-500 w-10 h-10]\n]\ndiv[\n  class=%w[w-10 bg-green-500 h-10]\n]                \n```\n\nI would expect it to render as\n\n![Image](https://github.com/user-attachments/assets/d2c23b26-04e9-4e02-ac93-b215a52cdb68)\n\nbut if that's the only instance of `bg-blue-500` in the codebase it doesn't get extracted and the slim snippet above renders as\n\n![Image](https://github.com/user-attachments/assets/320c8ddc-6501-499b-b7b9-e8f03907ba5a)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17542","RelatedDescription":"Closed issue \"Class not extracted when only occurrence is first element of Slim attribute array\" (#17542)"},{"Id":"2972602585","IsPullRequest":true,"CreatedAt":"2025-04-04T15:21:35","Actor":"RobinMalfait","Number":"17557","RawContent":null,"Title":"Handle Ruby `%w` syntax in Slim pre processing","State":"closed","Body":"This PR fixes an issue where the Ruby `%w[…]` syntax causes utilities to not be properly extracted.\r\n\r\nThis PR will now ensure that it does get extracted correctly.\r\n\r\nGiven this input:\r\n```slim\r\ndiv[\r\n  class=%w[bg-blue-500 w-10 h-10]\r\n]\r\ndiv[\r\n  class=%w[w-10 bg-green-500 h-10]\r\n]\r\n```\r\n\r\nBefore this PR, we extracted everything but the `bg-blue-500`. The `w-10` was extracted but not because of the second div, but because of the first one.\r\n\r\nFixes: #17542\r\n\r\n## Test plan\r\n\r\n1. Added a test to ensure it's working correctly.\r\n\r\nLooking at the extractor tool, you can see that it now gets extracted correctly. Top is before, bottom is with this change.\r\n\r\n<img width=\"1199\" alt=\"image\" src=\"https://github.com/user-attachments/assets/028d9abd-8917-438c-a423-88ba887b7f97\" />\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17557","RelatedDescription":"Closed or merged PR \"Handle Ruby `%w` syntax in Slim pre processing\" (#17557)"},{"Id":"2972627786","IsPullRequest":true,"CreatedAt":"2025-04-04T14:52:54","Actor":"philipp-spiess","Number":"17558","RawContent":null,"Title":"Add `@tailwindcss/oxide-wasm32-wasi`","State":"open","Body":"<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17558","RelatedDescription":"Open PR \"Add `@tailwindcss/oxide-wasm32-wasi`\" (#17558)"},{"Id":"2972598590","IsPullRequest":false,"CreatedAt":"2025-04-04T14:41:57","Actor":"velut","Number":"17556","RawContent":null,"Title":"Build warning for `css-syntax-error` when using `divider` component from daisyui with tailwind v4.1","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.2\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nSvelteKit 2.20.3\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What version of Daisyui are you using?**\n\nv5.0.12\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nFedora 40\n\n**Reproduction URL**\n\nhttps://github.com/velut/tw-daisyui-divider-issue\n\n**Describe your issue**\n\nAfter upgrading to tailwind v4.1 a warning occurs during the build process if using the [divider](https://daisyui.com/components/divider/) component from daisyui. On tailwind v4.0 this warning did not appear.\n\n```\nrendering chunks (4)...warnings when minifying css:\n▲ [WARNING] Unexpected \")\" [css-syntax-error]\n\n    <stdin>:2:11914:\n      2 │ ...olor-mix(in lab, red, red)){:is(){background-color:color-mix(in ...\n        ╵                                    ^\n```\n\nAfter analyzing the compiled code the empty `:is()` appears here:\n\n```\n@supports (color: color-mix(in lab, red, red)) {\n    :is() {\n      background-color: color-mix(\n        in oklab,\n        var(--color-base-content) 10%,\n        transparent\n      );\n    }\n  }\n```\n\nThis block of css is not generated when building with tailwind v4.0.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17556","RelatedDescription":"Open issue \"Build warning for `css-syntax-error` when using `divider` component from daisyui with tailwind v4.1\" (#17556)"},{"Id":"2972004782","IsPullRequest":true,"CreatedAt":"2025-04-04T12:58:50","Actor":"philipp-spiess","Number":"17554","RawContent":null,"Title":"PostCSS: Fix Turbopack 'one-revision-behind' bug","State":"closed","Body":"Closes #17508\r\n\r\nThis PR fixes another issue we found that caused dev builds with Next.js and Turbopack to resolve the CSS file that was saved one revision before the latest update.\r\n\r\nWhen debugging this we noticed that the PostCSS entry is called twice for every one update when changing the input CSS file directly. That was caused by the input file itself being added as a _dependency_ so you would first get the callback that a _dependency_ has updated (at which point we look at the file system and figure out we need a full-rebuild because the input.css file has changed) and then another callback for when the _input file_ has updated. The problem with the second callback was that the file-system was already scanned for updates and since this includes the `mtimes` for the input file, we seemingly thought that the input file did not change. However, the issue is that the first callback actually came with an outdated PostCSS input AST...\r\n\r\nWe found that this problem arises when you register the input CSS as a dependency of itself. This is not expected and we actually guard against this in the PostCSS client. However, we found that the input `from` argument is _a relative path when using Next.js with Turbopack_ so that check was not working as expected. \r\n\r\n## Test plan\r\n\r\nAdded the change to the repro from #17508 and it seems to work fine now.\r\n\r\nhttps://github.com/user-attachments/assets/2acb0078-f961-4498-be1a-b1c72d5ceda1\r\n\r\nAlso added a unit test to ensure we document that the input file path can be a relative path.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17554","RelatedDescription":"Closed or merged PR \"PostCSS: Fix Turbopack 'one-revision-behind' bug\" (#17554)"},{"Id":"2971920023","IsPullRequest":false,"CreatedAt":"2025-04-04T12:45:56","Actor":"Jordan-Hall","Number":"17551","RawContent":null,"Title":"RSLib with postcss tailwind adding a space on emitted css when calling tailwind function  `theme(spacing. [1.5]) `","State":"closed","Body":"```\nSystem:\n    OS: Windows 11 10.0.27823\n    CPU: (8) x64 Intel(R) Core(TM) i7-8705G CPU @ 3.10GHz\n    Memory: 4.43 GB / 15.85 GB\nBrowsers:\n    Edge: Chromium (135.0.3179.18)\n```\n```json\n{\n  \"name\": \"@repo/ui\",\n  \"version\": \"0.0.0\",\n  \"sideEffects\": false,\n  \"license\": \"MIT\",\n  \"exports\": {\n    \"./alert\": {\n      \"types\": \"./dist/esm/src/Alert/index.d.ts\",\n      \"import\": \"./dist/esm/Alert/index.mjs\",\n      \"require\": \"./dist/cjs/Alert/index.js\"\n    },\n    \"./button\": {\n      \"types\": \"./dist/esm/src/Button/index.d.ts\",\n      \"import\": \"./dist/esm/Button/index.mjs\",\n      \"require\": \"./dist/cjs/Button/index.js\"\n    },\n    \"./navbar\": {\n      \"types\": \"./dist/esm/src/Navbar/index.d.ts\",\n      \"import\": \"./dist/esm//Navbar/index.mjs\",\n      \"require\": \"./dist/cjs/Navbar/index.js\"\n    },\n    \"./sidebar\": {\n      \"types\": \"./dist/esm/src/Sidebar/index.d.ts\",\n      \"import\": \"./dist/esm/Sidebar/index.mjs\",\n      \"require\": \"./dist/cjs/Sidebar/index.js\"\n    },\n    \"./types\": {\n      \"types\": \"./dist/esm/src/types.d.ts\"\n    },\n     \"./style.css\": \"./dist/esm/style.css\",\n     \"./utility.css\": \"./dist/esm/utility.css\"\n  },\n  \"files\": [\n    \"dist\",\n    \"./src/**/*.css\"\n  ],\n  \"scripts\": {\n    \"build\": \"rslib build\",\n    \"dev\": \"rslib build --watch\",\n    \"lint\": \"eslint . --max-warnings 0\",\n    \"test\": \"vitest run\",\n    \"clean\": \"rm -rf .turbo node_modules dist\"\n  },\n  \"dependencies\": {\n    \"@repo/crown-fw\": \"*\"\n  },\n  \"devDependencies\": {\n    \"@module-federation/rsbuild-plugin\": \"^0.11.3\",\n    \"@repo/eslint-config\": \"*\",\n    \"@repo/typescript-config\": \"*\",\n    \"@rslib/core\": \"^0.6.1\",\n    \"@tailwindcss/postcss\": \"^4.1.2\",\n    \"eslint\": \"^8.57.0\",\n    \"postcss\": \"^8.5.3\",\n    \"postcss-loader\": \"^8.1.1\",\n    \"tailwindcss\": \"^4.1.2\",\n    \"typescript\": \"5.5.4\",\n    \"vitest\": \"^3.0.9\"\n  },\n  \"publishConfig\": {\n    \"access\": \"public\"\n  }\n}\n```\n\n\nrslib.config.ts\n```\nimport { type LibConfig, defineConfig } from '@rslib/core'\n\nconst shared: LibConfig = {\n    bundle: false,\n    dts: {\n        bundle: false,\n    },\n}\n\nexport default defineConfig({\n    lib: [\n        {\n            ...shared,\n            source: {\n                entry: {\n                    index: ['./src/**', '!./src/env.d.ts'],\n                },\n            },\n            format: 'esm',\n            output: {\n                distPath: {\n                    root: './dist/esm',\n                },\n                emitCss: true,\n                target: 'web'\n            },\n        },\n        {\n            ...shared,\n            format: 'cjs',\n            source: {\n                entry: {\n                    index: ['./src/**', '!./src/env.d.ts'],\n                },\n            },\n            output: {\n                distPath: {\n                    root: './dist/cjs',\n                },\n                emitCss: true,\n                target: 'web'\n            },\n        },\n    ],\n    // just for dev\n    server: {\n        port: 3001,\n    },\n    plugins: [\n\n    ],\n    tools: {\n        rspack: {\n            module: {\n                rules: [\n                    {\n                        test: /\\.css$/,\n                        use: [\n                            {\n                                loader: 'postcss-loader',\n                                options: {\n                                    postcssOptions: {\n                                        // ...\n                                    },\n                                },\n                            },\n                        ],\n                    },\n                ],\n            }\n        }\n    }\n})\n```\n\n\nwhen you emit the following tailwind code:\n```css\n@utility sidebar-footer-item {\n    @apply flex items-center gap-3 cursor-pointer;\n    @apply text-sm;\n    color: rgb(var(--color-text-muted));\n    padding: theme(spacing.[1.5]) theme(spacing.[3]);\n    border-radius: var(--radius-md);\n    @variant hover {\n        color: rgb(var(--color-text-base));\n        background-color: rgb(var(--color-muted-rgb) / var(--alpha-muted-hover));\n    }\n}\n```\n\nIt produces the following output:\n```css\n@utility sidebar-footer-item {\n  @apply flex items-center gap-3 cursor-pointer; @apply text-sm; color: rgb(var(--color-text-muted)) ; padding: theme(spacing. [1.5]) theme(spacing. [3]) ; border-radius: var(--radius-md) ; @variant hover { color: rgb(var(--color-text-base)) ; background-color: rgb(var(--color-muted-rgb) / var(--alpha-muted-hover)) ; }\n}\n```\n\nLooks ok until you look at the function code of spacing `theme(spacing. [1.5]) ` It has a space between the . and the [1.5] it should be `theme(spacing.[1.5]) `. \n\n\nI'm not sure if this is a rslib issue or a tailwind issue","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17551","RelatedDescription":"Closed issue \"RSLib with postcss tailwind adding a space on emitted css when calling tailwind function  `theme(spacing. [1.5]) `\" (#17551)"},{"Id":"2971396171","IsPullRequest":false,"CreatedAt":"2025-04-04T08:57:02","Actor":"wfllive","Number":"17544","RawContent":null,"Title":"Tailwindcss vite install v4","State":"closed","Body":"Hello, I got a mistake after installing the instructions for vite, there is never such a thing at 3.4.\nI use termux android \n\nyarn dev                   yarn run v1.22.22                               $ vite --host 0.0.0.0 --port 3000               failed to load config from /data/data/com.termux/files/home/MeteoLive7_2_new/vite.config.js     error when starting dev server:                 Error: Cannot find module '../lightningcss.android-arm64.node'                                  Require stack:                                  - /data/data/com.termux/files/home/MeteoLive7_2_new/node_modules/lightningcss/node/index.js\n    at Module._resolveFilename (node:internal/modules/cjs/loader:1405:15)                           at defaultResolveImpl (node:internal/modules/cjs/loader:1061:19)                                at resolveForCJSWithHooks (node:internal/modules/cjs/loader:1066:22)                            at Module._load (node:internal/modules/cjs/loader:1215:37)                                      at TracingChannel.traceSync (node:diagnostics_channel:322:14)                                   at wrapModuleLoad (node:internal/modules/cjs/loader:235:24)                                     at Module.require (node:internal/modules/cjs/loader:1491:12)                                    at require (node:internal/modules/helpers:135:16)                                               at Object.<anonymous> (/data/data/com.termux/files/home/MeteoLive7_2_new/node_modules/lightningcss/node/index.js:22:22)                         at Module._compile (node:internal/modules/cjs/loader:1734:14)                               error Command failed with exit code 1.          info Visit https://yarnpkg.com/en/docs/cli/run for documentation about this command.\n\n\n\nv4.1.2\n\ntailwindcss 4.1.2 @tailwindcss/vite 4.1.2 vite 6.2.0\n\nNode v23.10.0\n\nbrowser\n\nChrome\n\n**What operating system are you using?**\n\nAndroid 14\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17544","RelatedDescription":"Closed issue \"Tailwindcss vite install v4\" (#17544)"},{"Id":"2971650320","IsPullRequest":false,"CreatedAt":"2025-04-04T08:54:52","Actor":"CotulbeaCosmin","Number":"17548","RawContent":null,"Title":"Hot reload doesn't work if I use @use 'tailwindcss'","State":"closed","Body":"@import is depricated so I started to use @use insted but hot realod doesn't work anymore if I use @use with tailwindcss\n\n![Image](https://github.com/user-attachments/assets/9c5d143f-612e-4727-931a-39441b28a26b)\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17548","RelatedDescription":"Closed issue \"Hot reload doesn't work if I use @use 'tailwindcss'\" (#17548)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-04-08T03:30:21.3046339Z","RunDurationInMilliseconds":456}