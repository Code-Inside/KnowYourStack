{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"3455377716","IsPullRequest":false,"CreatedAt":"2025-09-26T00:09:10","Actor":"ali-issa","Number":"18996","RawContent":null,"Title":"Custom text size not being overridden by standard text utilities","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.1.11\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite  7.1.7 \n\n**What version of Node.js are you using?**\n\nbun 1.2.22\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://github.com/ali-issa/tailwind-text-utilities-bug\n\n**Describe your issue**\n\nWhen creating a custom text size utility using CSS theme variables as documented in the Tailwind CSS v4 documentation, the custom size cannot be overridden by standard text utilities when using `tailwind-merge` with `clsx`.\n\nSteps to reproduce:\n\n1. Define a custom text size in CSS:\n\n```css\n@theme {\n  --text-tiny: 0.625rem;\n}\n```\n\n2. Create a component that uses the custom text size:\n\n```tsx\nfunction MyComponent({ className }: { className?: string }) {\n  return (\n    <div className={cn(\"text-tiny\", className)}>\n      Sample text content\n    </div>\n  );\n}\n```\n\n3. Try to override the text size when using the component:\n\n```tsx\n<MyComponent className=\"text-xl\" />\n```\n\nExpected behavior:\n\nThe `text-xl` class should override the `text-tiny` class, resulting in the text being displayed at the xl size.\n\nActual behavior:\n\nThe custom `text-tiny` class takes precedence and the text remains at the tiny size (0.625rem), ignoring the text-xl override and all other text-* classes.\n\nAdditional context:\n\n- tailwind-merge version: ^3.3.1\n- clsx version: ^2.1.1","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18996","RelatedDescription":"Open issue \"Custom text size not being overridden by standard text utilities\" (#18996)"},{"Id":"3454565155","IsPullRequest":true,"CreatedAt":"2025-09-25T17:50:15","Actor":"thecrypticace","Number":"18994","RawContent":null,"Title":"Use custom implementation of canonicalize for wasi","State":"open","Body":"Fixes #18418\r\n\r\nPulled some old code that `oxc-resolver` used. They did switch to `fs::read_link` at some point though. Perhaps we should do the same here?\r\n\r\n- [ ] Needs tests\r\n- [ ] Investigate `read_link`","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18994","RelatedDescription":"Open PR \"Use custom implementation of canonicalize for wasi\" (#18994)"},{"Id":"3452233709","IsPullRequest":false,"CreatedAt":"2025-09-25T07:10:45","Actor":"LarsJK","Number":"18992","RawContent":null,"Title":"Arbitrary px min-width utilities (min-[800px]) lose to smaller named breakpoints (sm) at the same width, unlike rem values","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.13\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\npostcss-loader 8.2.0\n\n**What version of Node.js are you using?**\n\nv22.19.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/IryPEYKmlk?size=1254x807\n\n**Describe your issue**\n\nAt a viewport width of exactly 800px:\n\t•\tThe left column is red-300 (coming from sm:bg-red-300), even though min-[800px]:bg-red-600 should apply.\n\t•\tThe right column is green-600 (coming from min-[50rem]:bg-green-600), which is the expected behavior.\n\nThis shows that arbitrary px values (min-[800px]) are always placed before named breakpoints like sm in the generated CSS, so the named breakpoint wins in the cascade. However, when using rem values (min-[50rem] = 800px), the arbitrary breakpoint appears after sm, so it correctly overrides.\n\nSteps to reproduce:\n\t1.\tOpen the playground link above.\n\t2.\tResize the viewport to exactly 800px.\n\t3.\tObserve that the left column is red-300 instead of red-600, while the right column is green-600.\n\nExpected behavior:\nAt 800px, min-[800px]:bg-red-600 should override sm:bg-red-300, just like min-[50rem]:bg-green-600 does.\n\nActual behavior:\nAt 800px, sm:bg-red-300 wins over min-[800px]:bg-red-600, but only when the arbitrary breakpoint uses px.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18992","RelatedDescription":"Closed issue \"Arbitrary px min-width utilities (min-[800px]) lose to smaller named breakpoints (sm) at the same width, unlike rem values\" (#18992)"},{"Id":"3451949631","IsPullRequest":false,"CreatedAt":"2025-09-25T06:26:28","Actor":"sausir1","Number":"18991","RawContent":null,"Title":"TailwindCSS ignores first class with local css variables defined","State":"closed","Body":"\n**What version of Tailwind CSS are you using?**\n\n4.1.13\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 5.4.20, Vue 3.5.21\n\n**What version of Node.js are you using?**\n\nFor example: v22.18.0\n\n**What browser are you using?**\n\nDoes not matter\n\n**What operating system are you using?**\n\nFor example: Ubuntu 24.04\n\n**Reproduction URL**\n\nA Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\n\nA reproduction is **required** when filing an issue — any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.\n\n**Describe your issue**\n\nSeems like TailwindCSS ignores classes that uses local css variables, but only if they're the first class in the list.  See in the screenshots below. First screen shot is where I'm trying to style checkbox element, but none of the classes apply, but if I move that class a few lines down (after the first more specific selector), then the class gets included in the css output. I've tried removing `scoped` from the style tag in `.vue` file, but it does not seem to work as well.\n\nAdding a reproduction repo soon\n\n\n<img width=\"931\" height=\"761\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/c44bc8c1-5ad1-4743-b67c-567c86b2877d\" />\n\n<img width=\"822\" height=\"762\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/85186246-9be9-421f-9e0c-7e76cf526643\" />\n  \n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18991","RelatedDescription":"Closed issue \"TailwindCSS ignores first class with local css variables defined\" (#18991)"},{"Id":"3450168773","IsPullRequest":false,"CreatedAt":"2025-09-24T16:55:01","Actor":"windsornguyen","Number":"18989","RawContent":null,"Title":"Tailwind v4 cursor:url(hand.cur) parsing error with Next.js Turbopack","State":"closed","Body":"**Describe your issue**\n\nThere is a mysterious error that occurs when using the Next.js `--turbo` flag in a project where there are additional Tailwind directives in non-traditional places that were not meant to be read, e.g. `docs/`.\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.1.13\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 15.5.4\nReact: 19.1.0\nReact-DOM: 19.1.0\n\n**What version of Node.js are you using?**\n\nv22.11.0\n\n**What browser are you using?**\n\nArc\n\n**What operating system are you using?**\n\nMacOS\n\n**Reproduction**\n\n1. Create Next.js app and accept all defaults: `npx create-next-app@latest tailwind-bug --typescript --eslint --app`\n2. Navigate into directory: `cd tailwind-bug`\n3. Install dependencies: `npm install`\n4. Run the Next.js server: `next dev --turbo`\n\nAt this point, the Next.js server should run normally as expected.\n\n5. Clone additional documentation about Tailwind, which may contain Tailwind directives: `git clone https://github.com/windsornguyen/tailwindcss-v4-docs`\n6. Run the server with the `--turbo` flag again, which should trigger the error: `next dev --turbo`\n\nError stack trace:\n```bash\n▲ Next.js 15.5.3 (Turbopack)\n   - Local:        http://localhost:3000\n   - Network:      http://192.168.1.89:3000\n\n ✓ Starting...\n ✓ Ready in 620ms\n ○ Compiling / ...\n ✓ Compiled / in 1331ms\n ⨯ ./tailwind-bug/app/globals.css:4712:25\nModule not found: Can't resolve '...'\n  4710 |     @media (width >= 48rem) {\n  4711 |       list-style-image: url(...);\n> 4712 |     }\n       |      ^\n  4713 |   }\n  4714 |   .md\\:appearance-none {\n  4715 |     @media (width >= 48rem) {\n\n\n\nImport trace:\n  Client Component Browser:\n    ./tailwind-bug/app/globals.css [Client Component Browser]\n    ./tailwind-bug/app/layout.tsx [Server Component]\n\nhttps://nextjs.org/docs/messages/module-not-found\n\n\n\n./tailwind-bug/app/globals.css:3727:13\nModule not found: Can't resolve 'filters.svg#filter-id'\n  3725 |   .filter-\\[url\\(\\'filters\\.svg\\#filter-id\\'\\)\\] {\n  3726 |     filter: url('filters.svg#filter-id');\n> 3727 |   }\n       |    ^\n  3728 |   .filter-none {\n  3729 |     filter: none;\n  3730 |   }\n\n\n\nImport trace:\n  Client Component Browser:\n    ./tailwind-bug/app/globals.css [Client Component Browser]\n    ./tailwind-bug/app/layout.tsx [Server Component]\n\nhttps://nextjs.org/docs/messages/module-not-found\n\n\n\n./tailwind-bug/app/globals.css:1308:13\nModule not found: Can't resolve 'hand.cur'\n  1306 |   .cursor-\\[url\\(hand\\.cur\\)\\,_pointer\\] {\n  1307 |     cursor: url(hand.cur), pointer;\n> 1308 |   }\n       |    ^\n  1309 |   .cursor-pointer {\n  1310 |     cursor: pointer;\n  1311 |   }\n\n\n\nImport trace:\n  Client Component Browser:\n    ./tailwind-bug/app/globals.css [Client Component Browser]\n    ./tailwind-bug/app/layout.tsx [Server Component]\n\nhttps://nextjs.org/docs/messages/module-not-found\n\n\n ○ Compiling /_error ...\n ✓ Compiled /_error in 538ms\nError [ModuleBuildError]: ./tailwind-bug/app/globals.css:4712:25\nModule not found: Can't resolve '...'\n  4710 |     @media (width >= 48rem) {\n  4711 |       list-style-image: url(...);\n> 4712 |     }\n       |      ^\n  4713 |   }\n  4714 |   .md\\:appearance-none {\n  4715 |     @media (width >= 48rem) {\n\n\n\nImport trace:\n  Client Component Browser:\n    ./tailwind-bug/app/globals.css [Client Component Browser]\n    ./tailwind-bug/app/layout.tsx [Server Component]\n\nhttps://nextjs.org/docs/messages/module-not-found\n\n\n\n./tailwind-bug/app/globals.css:3727:13\nModule not found: Can't resolve 'filters.svg#filter-id'\n  3725 |   .filter-\\[url\\(\\'filters\\.svg\\#filter-id\\'\\)\\] {\n  3726 |     filter: url('filters.svg#filter-id');\n> 3727 |   }\n       |    ^\n  3728 |   .filter-none {\n  3729 |     filter: none;\n  3730 |   }\n\n\n\nImport trace:\n  Client Component Browser:\n    ./tailwind-bug/app/globals.css [Client Component Browser]\n    ./tailwind-bug/app/layout.tsx [Server Component]\n\nhttps://nextjs.org/docs/messages/module-not-found\n\n\n\n./tailwind-bug/app/globals.css:1308:13\nModule not found: Can't resolve 'hand.cur'\n  1306 |   .cursor-\\[url\\(hand\\.cur\\)\\,_pointer\\] {\n  1307 |     cursor: url(hand.cur), pointer;\n> 1308 |   }\n       |    ^\n  1309 |   .cursor-pointer {\n  1310 |     cursor: pointer;\n  1311 |   }\n\n\n\nImport trace:\n  Client Component Browser:\n    ./tailwind-bug/app/globals.css [Client Component Browser]\n    ./tailwind-bug/app/layout.tsx [Server Component]\n\nhttps://nextjs.org/docs/messages/module-not-found\n\n\n    at <unknown> (ModuleBuildError: ./tailwind-bug/app/globals.css:4712:25)\n    at <unknown> (https://nextjs.org/docs/messages/module-not-found)\n    at <unknown> (./tailwind-bug/app/globals.css:3727:13)\n    at <unknown> (https://nextjs.org/docs/messages/module-not-found)\n    at <unknown> (./tailwind-bug/app/globals.css:1308:13)\n    at <unknown> (https://nextjs.org/docs/messages/module-not-found)\n[Error: Incompatible React versions: The \"react\" and \"react-dom\" packages must have the exact same version. Instead got:\n  - react:      19.1.1\n  - react-dom:  19.1.0\nLearn more: https://react.dev/warnings/version-mismatch]\n ✓ Compiled /favicon.ico in 85ms\n GET /favicon.ico 500 in 171ms\n```\n\nThis issue also occurs sometimes when using some combination of React 19 and the Next.js experimental compiler, although the reproduction of that is less reliable and will therefore be omitted in this bug report.\n\nThere is also some weird version mismatch error between React 19.1.1 and React-DOM 19.1.0 that may be propagated from the internal versioning of Next.js.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18989","RelatedDescription":"Closed issue \"Tailwind v4 cursor:url(hand.cur) parsing error with Next.js Turbopack\" (#18989)"},{"Id":"3447167362","IsPullRequest":false,"CreatedAt":"2025-09-24T11:33:02","Actor":"Princesseuh","Number":"18984","RawContent":null,"Title":"Tailwind 4.0.10 breaks class extraction from Maud templates in some contexts","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n`>= 4.0.10`\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nTailwind CLI\n\n**What version of Node.js are you using?**\n\nNode v24.8.0\n\n**What browser are you using?**\n\nVivaldi\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://github.com/Princesseuh/tailwind-maud-regression\n\nUnfortunately you cannot reproduce this in the playground since it does not accept non-HTML files.\n\n**Describe your issue**\n\n[Maud](https://maud.lambda.xyz) templates look like this:\n\n```rust\nhtml! {\n    h1 { \"Hello, world!\" }\n    p.intro {\n        \"This is an example of the \"\n        a href=\"https://github.com/lambda-fairy/maud\" { \"Maud\" }\n        \" template language.\"\n    }\n}\n```\n\nWhere `.intro` eventually compiles to `p class=\"intro\"`. \n\nWhen using Tailwind classes, it'll look something like this:\n\n```rust\nheader.px-8.py-4.text-black {}\n```\n\nSince Tailwind 4.0.10, only `text-black` is included in the final CSS file, whereas Tailwind 4.0.9 succesfully include all three expected classes.\n\nHere's a link to a diff between the two versions: https://diffdiff.net/page/34pgajzH3a\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18984","RelatedDescription":"Closed issue \"Tailwind 4.0.10 breaks class extraction from Maud templates in some contexts\" (#18984)"},{"Id":"3448640625","IsPullRequest":true,"CreatedAt":"2025-09-24T11:33:01","Actor":"RobinMalfait","Number":"18988","RawContent":null,"Title":"Add Maud templating support","State":"closed","Body":"This PR adds support for Maud templates in Rust.\r\n\r\nWe already had some pre-processing for Rust but for Leptos `class:` syntax. This PR now added a dedicated Rust pre-processor that handles Leptos and Maud syntax.\r\n\r\nWe only start pre-processing Maud templates if the Rust file includes the `html!` macro.\r\n\r\n## Test plan\r\n\r\nLooking at the extractor, you can see that we now do extract the proper classes in Maud templates:\r\n\r\n<img width=\"1076\" height=\"1856\" alt=\"image\" src=\"https://github.com/user-attachments/assets/e649e1de-289e-466f-8fab-44a938a47dd5\" />\r\n\r\n\r\nFixes: #18984\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18988","RelatedDescription":"Closed or merged PR \"Add Maud templating support\" (#18988)"},{"Id":"3441532714","IsPullRequest":false,"CreatedAt":"2025-09-22T15:59:03","Actor":"jeff-computers","Number":"18978","RawContent":null,"Title":"@theme directives ignored by tailwindcss cli -i when imported via @import","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.1.13\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n    \"@tailwindcss/cli\": \"^4.1.13\",\n\n**What version of Node.js are you using?**\n\nv22\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nIncredibly easy to reproduce: https://github.com/jeff-computers/tailwind-import-bug-repro\n\n**Describe your issue**\nUsing `tailwindcss` to generate built files - you cannot use @import syntax to import css files using @theme directives. \n\n- If an @theme directive is declared in a css file @import(ed) into the input for `tailwindcss -i` - then the @theme declaration is not included in the output:\n<img width=\"777\" height=\"91\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/7f67b60a-8072-49f1-be68-360ce6923a44\" />\n\n- If the file declaring the @theme directive is used as the 'input' for `tailwindcss -i` then the built file is copied directly and missing the `/*! tailwindcss v4.1.13 | MIT License | https://tailwindcss.com */` comment - which suggests something is being skipped\n<img width=\"421\" height=\"113\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/31008af0-0dfe-449d-b94d-a943a379adc6\" />","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18978","RelatedDescription":"Closed issue \"@theme directives ignored by tailwindcss cli -i when imported via @import\" (#18978)"},{"Id":"3441611865","IsPullRequest":true,"CreatedAt":"2025-09-22T15:59:02","Actor":"thecrypticace","Number":"18979","RawContent":null,"Title":"Ensure files with only `@theme` produce no output when built","State":"closed","Body":"Closes #18978\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18979","RelatedDescription":"Closed or merged PR \"Ensure files with only `@theme` produce no output when built\" (#18979)"},{"Id":"3436775783","IsPullRequest":true,"CreatedAt":"2025-09-22T09:11:39","Actor":"depfu[bot]","Number":"18971","RawContent":null,"Title":"Update all pnpm dependencies (2025-09-20)","State":"closed","Body":"This is your weekly update of **all** pnpm dependencies. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n✳️ eslint (9.33.0 → 9.35.0, minor) · [Repo](https://github.com/eslint/eslint) · [Changelog](https://github.com/eslint/eslint/blob/main/CHANGELOG.md) · [Release](https://github.com/eslint/eslint/releases/tag/v9.35.0) · [Diff](https://github.com/eslint/eslint/compare/a90d7c4fe5ef83054e29d21d7ffb442103429d03...8401101d1e3e3e4e1edc2a9e59cafc9956bf2610)\n\n✳️ eslint-config-next (15.4.7 → 15.5.2, minor)\n\n✳️ magic-string (0.30.18 → 0.30.19, minor) · [Repo](https://github.com/rich-harris/magic-string) · [Changelog](https://github.com/Rich-Harris/magic-string/blob/master/CHANGELOG.md) · [Diff](https://github.com/rich-harris/magic-string/compare/0005025c1849f294b3978547e4cb46f2869c9864...bdef7d5ab5087f279d999a9c148f0c5c3a64259e)\n\n✳️ @types/bun (1.2.20 → 1.2.21, patch) · [Repo](https://github.com/DefinitelyTyped/DefinitelyTyped)\n\n✳️ @types/react (19.1.9 → 19.1.13, patch) · [Repo](https://github.com/DefinitelyTyped/DefinitelyTyped)\n\n✳️ @types/react-dom (19.1.7 → 19.1.9, patch) · [Repo](https://github.com/DefinitelyTyped/DefinitelyTyped)\n\n✳️ @types/semver (7.7.0 → 7.7.1, patch) · [Repo](https://github.com/DefinitelyTyped/DefinitelyTyped)\n\n✳️ @vitejs/plugin-react (5.0.0 → 5.0.2, patch) · [Repo](https://github.com/vitejs/vite-plugin-react) · [Changelog](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/CHANGELOG.md)\n\n✳️ bun (1.2.20 → 1.2.21, patch) · [Repo](https://github.com/oven-sh/bun)\n\n✳️ turbo (2.5.4 → 2.5.6, patch) · [Repo](https://github.com/turborepo/turbo)\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will only send you the next scheduled PR once you merge or close this one.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu refresh</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n</dl></blockquote>\n</details>\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18971","RelatedDescription":"Closed or merged PR \"Update all pnpm dependencies (2025-09-20)\" (#18971)"},{"Id":"3438832361","IsPullRequest":false,"CreatedAt":"2025-09-22T06:16:28","Actor":"jankowskiszymon1992-rgb","Number":"18975","RawContent":null,"Title":"Szymon","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: postcss-cli 11.0.0, Next.js 15.1.7, Vite 6.1.0\n\n**What version of Node.js are you using?**\n\nFor example: v20.0.0\n\n**What browser are you using?**\n\nFor example: Chrome, Safari, or N/A\n\n**What operating system are you using?**\n\nFor example: macOS, Windows\n\n**Reproduction URL**\n\nA Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\n\nA reproduction is **required** when filing an issue — any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.\n\n**Describe your issue**\n\nDescribe the problem you're seeing, any important steps to reproduce and what behavior you expect instead.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18975","RelatedDescription":"Closed issue \"Szymon\" (#18975)"},{"Id":"3437507004","IsPullRequest":false,"CreatedAt":"2025-09-21T02:43:48","Actor":"nexxai","Number":"18972","RawContent":null,"Title":"v4 upgrader removing the content of all files in my project","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n```\n⚡️? 78% ➜ npx @tailwindcss/upgrade --version\n≈ tailwindcss v4.1.13\n```\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite: 6.3.6\n\n**What version of Node.js are you using?**\n\nFor example: v21.7.3\n\n**What browser are you using?**\n\nn/a\n\n**What operating system are you using?**\n\nmacOS Tahoe 26.0\n\n**Reproduction URL**\n\nThis is not a rendering issue, it's a problem with the `@tailwindcss/upgrade` package, so I'm not sure how to provide a \"reproduction\" but happy to do so if someone can explain.\n\n**Describe your issue**\n\nI realize this is going to sound crazy, but I swear it's happening and I can't figure out why.  When I run `npx @tailwindcss/upgrade\" to upgrade my app from v3 to v4, it deletes every file in my project tree.  Not just CSS files, but literally every file.\n\nSpecifically, it happens during the \"Migrating templates...\" step.  Originally, it looked like it was hung, but when I killed the process, I checked my git tree and thousands of files had been deleted.  Thankfully, I had run a commit right before I ran the updater so I could revert without issue, but I suspect this is not expected behaviour.\n\nIn this example, I show that there are no changes to be made, I run the upgrader, and then it's showing all of these files having been deleted (it would delete more if I didn't `CTRL-C` out of the upgrader).\n\n```sh\n2:36:03 PM in ipms on  filament-v4-upgrade via 🥟 v1.2.22 via  v8.4.12\n⚡️? 78% ➜ git status\nOn branch filament-v4-upgrade\nnothing to commit, working tree clean\n\n2:36:05 PM in ipms on  filament-v4-upgrade via 🥟 v1.2.22 via  v8.4.12\n⚡️? 78% ➜ npx @tailwindcss/upgrade\n≈ tailwindcss v4.1.13\n\n│ Searching for CSS files in the current directory and its subdirectories…\n\n│ Migrating stylesheets…\n\n│ ↳ Migrated stylesheet: `./resources/css/app.css`\n\n│ Updating dependencies…\n\n│ ↳ Updated package: `tailwindcss`\n\n│ ↳ Updated package: `@tailwindcss/postcss`\n\n│ ↳ Updated package: `@tailwindcss/vite`\n\n│ ↳ Updated package: `prettier-plugin-tailwindcss`\n\n│ Migrating templates…\n\n^C\n\n2:36:17 PM in ipms on  filament-v4-upgrade [!] via 🥟 v1.2.22 via  v8.4.12 took 8s\n⚡️? 78% ➜ git status\nOn branch filament-v4-upgrade\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git restore <file>...\" to discard changes in working directory)\n        modified:   .editorconfig\n        modified:   README.md\n        modified:   _ide_helper_models.php\n        modified:   app/Casts/Markdown.php\n        modified:   app/Console/Commands/AddDuesToAllCommand.php\n        modified:   app/Console/Commands/AddInstructionalVideosCommand.php\n        modified:   app/Console/Commands/ImportContest2024Command.php\n        modified:   app/Console/Commands/ImportMembersCommand.php\n        modified:   app/Console/Commands/MigrateDbEngineCommand.php\n        modified:   app/Enums/ClassifiedAdContactType.php\n        modified:   app/Enums/ClassifiedAdType.php\n        modified:   app/Enums/Config/DuesFrequency.php\n        modified:   app/Enums/ContestEntryAgeClass.php\n        modified:   app/Enums/ContestEntryRanking.php\n        modified:   app/Enums/ExternalMembershipOrganization.php\n        modified:   app/Enums/InstructionalVideoPanel.php\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n\n2:36:19 PM in ipms on  filament-v4-upgrade [!] via 🥟 v1.2.22 via  v8.4.12\n⚡️? 78% ➜\n```\n\nI'm not really sure what else to do.  I tried downloading and compiling the package myself to try and understand why it's even thinking it should touch any non-CSS file but I'm getting this error when I try to `pnpm run build` the main tailwindcss project:\n\n```\nerror[E0463]: can't find crate for `std`\n  |\n  = note: the `wasm32-wasip1-threads` target may not be installed\n  = help: consider downloading the target with `rustup target add wasm32-wasip1-threads`\n```\n\neven though I've already confirmed that target is installed:\n\n```\n⚡️? 78% ➜ rustup target add wasm32-wasip1-threads\ninfo: component 'rust-std' for target 'wasm32-wasip1-threads' is up to date\n```\n\nAny help would be greatly appreciated. Thanks!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18972","RelatedDescription":"Closed issue \"v4 upgrader removing the content of all files in my project\" (#18972)"},{"Id":"3435782503","IsPullRequest":true,"CreatedAt":"2025-09-19T20:17:43","Actor":"thecrypticace","Number":"18970","RawContent":null,"Title":"Support Vite Environment API","State":"open","Body":"Fixes #18002\r\n\r\nVery much a work in progress b/c I don't (yet) understand how the newer APIs are intended to function.\r\n\r\n- [ ] Needs env specific tests that verify the environment API is being used","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18970","RelatedDescription":"Open PR \"Support Vite Environment API\" (#18970)"},{"Id":"3422828727","IsPullRequest":true,"CreatedAt":"2025-09-19T15:08:41","Actor":"philipp-spiess","Number":"18947","RawContent":null,"Title":"Bump napi toolchain to 3.3","State":"closed","Body":"This PR bumps all napi related dependencies to their latest version. Napi 3 has by now officially been released but since we've been using the preview already, there aren't many changes.\r\n\r\nOne thing that ChatGPT found is that `--no-const-enum` is the default behavior now (see default value [in this table](https://napi.rs/docs/cli/build#options))\r\n\r\n## Test plan\r\n\r\n- `pnpm install && pnpm build`\r\n- `cd crates/node/npm/wasm32-wasi`\r\n- `pnpm install --ignore-workspace` (This is necessary for some reason or the bundled dependencies won't work, I have no clue why it's not necessary on CI)\r\n- `pnpm pack`\r\n- Install dependency in a new npm package with a simple config like this:\r\n    ```js\r\n    import { Scanner } from \"@tailwindcss/oxide-wasm32-wasi\";\r\n\r\n    let scanner = new Scanner({\r\n      sources: [\r\n        {\r\n          base: \"/Users/philipp/dev/tailwindcss/packages/@tailwindcss-postcss/src/fixtures/example-project\",\r\n          pattern: \"**/*\",\r\n          negated: false,\r\n        },\r\n      ],\r\n    });\r\n\r\n    console.log(scanner.scan());\r\n    ```\r\n- <img width=\"904\" height=\"494\" alt=\"CleanShot 2025-09-19 at 14 53 52@2x\" src=\"https://github.com/user-attachments/assets/93e32c19-6db4-4d00-9fdb-a6fde22fc69c\" />\r\n\r\n\r\nI also tested the CI build to make sure the `bundledDependencies` are properly added.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18947","RelatedDescription":"Closed or merged PR \"Bump napi toolchain to 3.3\" (#18947)"},{"Id":"3431886368","IsPullRequest":false,"CreatedAt":"2025-09-19T12:43:10","Actor":"WebCimes","Number":"18966","RawContent":null,"Title":"@theme directive not working when importing CSS files in Tailwind CSS v4","State":"closed","Body":"Problem Description\nWhen using Tailwind CSS v4's @theme directive, the custom design tokens work correctly when the CSS file is processed directly, but fail when the file is imported via @import from another CSS file.\n\nSetup\nFile structure:\n├── app.css (contains @theme directive)\n├── fo.css (imports app.css)\n└── bo.css (imports app.css)\n\napp.css:\n```\n@import 'tailwindcss';\n\n@theme {\n    --color-primary-700: #027392;\n    --color-primary-50: #E6F9FF;\n    /* ... other custom tokens */\n}\n...\n```\n\nfo.css:\n```\n@import \"./app.css\";\n/* ... other imports and styles */\n```\n\napp.js:\n`import \"@css/fo.css\";`\n\nExpected Behavior\nCustom tokens defined in @theme should be available as Tailwind utilities (e.g., border-primary-700, bg-primary-50) regardless of whether [core.css] is processed directly or imported.\n\nActual Behavior\n✅ Works: When [app.css] is processed directly as the main entry point\n❌ Fails: When [app.css] is imported via @import in [fo.css] or [bo.css]\nThe custom tokens are not recognized, causing build errors or fallback to default Tailwind colors.\n:root directive not appear.\n\nRoot Cause\nTailwind CSS v4's @theme directive is only processed in the main entry file that Tailwind directly processes. When a file containing @theme is imported via @import, the directive is not recognized or processed.\n\nEnvironment\nTailwind CSS: 4.0.1\nBuild tool: [Vite/Laravel] 7.1.5\nThis appears to be a limitation of how Tailwind v4 processes the @theme directive in imported files. Is this expected behavior, or should @theme work in imported CSS files as well?\n\nThanks","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18966","RelatedDescription":"Closed issue \"@theme directive not working when importing CSS files in Tailwind CSS v4\" (#18966)"},{"Id":"3434217591","IsPullRequest":false,"CreatedAt":"2025-09-19T12:42:34","Actor":"cappuc","Number":"18968","RawContent":null,"Title":"@custom-variant classes missing in production output","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nFor example: v4.1.13\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite v7\n\n**What version of Node.js are you using?**\n\nFor example: v24.8.0\n\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/tyMX67b7II\n\n**Describe your issue**\n\nI added a custom variant with: `@custom-variant stuck-top (@container scroll-state(stuck: top));` and used it like this: `stuck-top:shadow`.\nIn development mode it generate the class correctly but it is missing in production build.\nI'm using vite with official tailwind plugin but I tested also with the cli and the class is missing when using the ` --optimize` flag.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18968","RelatedDescription":"Closed issue \"@custom-variant classes missing in production output\" (#18968)"},{"Id":"3431909973","IsPullRequest":true,"CreatedAt":"2025-09-18T20:53:45","Actor":"thecrypticace","Number":"18967","RawContent":null,"Title":"Detect classes in markdown inline directives","State":"closed","Body":"Fixes #18071","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18967","RelatedDescription":"Closed or merged PR \"Detect classes in markdown inline directives\" (#18967)"},{"Id":"3419501078","IsPullRequest":true,"CreatedAt":"2025-09-18T17:00:35","Actor":"thecrypticace","Number":"18940","RawContent":null,"Title":"Add plugin option documentation to the postcss plugin readme","State":"closed","Body":"Closes https://github.com/tailwindlabs/tailwindcss.com/issues/2061\r\n\r\nIn lieu of finding a place to put this on the docs we can at least document this in the readme for the plugin.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18940","RelatedDescription":"Closed or merged PR \"Add plugin option documentation to the postcss plugin readme\" (#18940)"},{"Id":"3430417707","IsPullRequest":false,"CreatedAt":"2025-09-18T13:39:26","Actor":"TobyPerplex","Number":"18963","RawContent":null,"Title":"Angular: v4.1.13 breaks styling","State":"closed","Body":"With Angular and Postcss + Tailwind 4, when I upgrade from v4.1.**12** to v4.1.**13** all styling breaks\n\nOn v4.1.12:\n```\n<style>\n/* src/app/modules/configurator/custom-element/configurator.component.css */\n@layer properties;\n@layer theme, base, components, utilities;\n@layer theme {\n  :root,\n  :host {\n  all my vars are here \n  }\n}\n\nall my styling is here\n</style>\n```\n\nOn v4.1.13:\n```\n<style>\n/* src/app/modules/configurator/custom-element/configurator.component.css */\n/*# sourceMappingURL=/configurator.component.css.map */\n</style>\n```\n\nVersion:\n\n\"@tailwindcss/postcss\": \"4.1.13\"\n\"postcss\": \"8.5.6\"\nAngular CLI: 20.3.2\nNode: 22.17.0\nPackage Manager: pnpm 10.2.0\nOS: macOS Tahoe 26.0","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18963","RelatedDescription":"Closed issue \"Angular: v4.1.13 breaks styling\" (#18963)"},{"Id":"3427322547","IsPullRequest":true,"CreatedAt":"2025-09-18T09:17:29","Actor":"RobinMalfait","Number":"18960","RawContent":null,"Title":"Bump Prettier","State":"closed","Body":"This PR bumps prettier and solves one of our `- *` formatting issues. Not all, but a few!\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18960","RelatedDescription":"Closed or merged PR \"Bump Prettier\" (#18960)"},{"Id":"3427795689","IsPullRequest":false,"CreatedAt":"2025-09-17T21:04:12","Actor":"msfragala","Number":"18961","RawContent":null,"Title":"Custom variants don't work with @scope","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.13\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 15.5.2\n\n**What version of Node.js are you using?**\n\nv24.7.0\n\n**What browser are you using?**\n\nChrome (v140)\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/0NPeZeXJ61\n\n**Describe your issue**\n\nCustom variants don't work with `@scope` rules. When defining a custom variant using `@scope`, the generated code places the rule inside the class instead of the class inside the rule. But `@scope` rules don't seem to support nesting like this as the resulting class has no effect","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18961","RelatedDescription":"Open issue \"Custom variants don't work with @scope\" (#18961)"},{"Id":"3426904726","IsPullRequest":false,"CreatedAt":"2025-09-17T16:29:11","Actor":"Evillgranny","Number":"18958","RawContent":null,"Title":"z-index doesn't work with \"!\" (!imporant)","State":"closed","Body":"**`!` Doesn't create classes with `!important`** \n\nFor z-index `z-10!` and `!z-10` it's not working. It works for everting, except of z-index\n\n`p-0!`- works and creates a class with value `padding: calc(var(--spacing) * 0) !important;`\n`h-4!` - works and creates a class with value `height: calc(var(--spacing) * 4) !important;`\n`z-10!` - doesn't work and creates class with value `z-index: 10;` without !important\n\n**What version of Tailwind CSS are you using?**\nv4.0.8\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\npostcss: 8.5.3, React 19, Vite 6.3.6\n\n**What version of Node.js are you using?**\n\nv18.19.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\n<img width=\"446\" height=\"113\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/efd24bde-4cbe-42d7-9929-7b3db5075b97\" />\n\n<img width=\"367\" height=\"255\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/4eb10c0b-985c-4c66-a751-7c6cfadbf8b9\" />","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18958","RelatedDescription":"Closed issue \"z-index doesn't work with \"!\" (!imporant)\" (#18958)"},{"Id":"3426280013","IsPullRequest":false,"CreatedAt":"2025-09-17T14:55:02","Actor":"robustadev","Number":"18957","RawContent":null,"Title":"[v4] Vite + Tailwind CSS classes not applying when project is outside a Git repository","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.1.13\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite v7.1.2\n\n**What version of Node.js are you using?**\n\nv22.15.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmaxOS\n\n**Reproduction URL**\n\nhttps://github.com/robustadev/vite-react-tailwind\n\n**Describe your issue**\n\nIssue Description\nTailwind CSS classes are not being applied to elements when the project folder is not under Git version control.\n\nSteps to Reproduce\n\nCreate a new Vite + React + TypeScript project\nInstall and configure Tailwind CSS using @tailwindcss/vite plugin following the official docs\nAdd Tailwind classes to elements (e.g., `<h1 className=\"text-red-500\">Hello</h1>`)\nEnsure the project folder does not contain a .git directory\nRun the development server\n\nResult: Tailwind classes have no effect - text remains default color instead of red.\n\nWorkaround\nThe issue is resolved by either:\n\nInitializing a Git repository (git init) in the project folder, OR\nCreating an empty .git folder in the project root\n\nAfter adding Git (even just an empty .git folder), Tailwind classes work as expected.\n\nExpected Behavior\nTailwind CSS should work regardless of whether the project is under Git version control or not.\n\nActual Behavior\nTailwind CSS only works when a .git directory is present in the project root.\n\nReproduction Repository\nA minimal reproduction case is available at: https://github.com/robustadev/vite-react-tailwind\n\nAdditional Context\nThis suggests there may be a dependency on Git detection in either the Tailwind CSS build process or the Vite plugin that shouldn't exist.\n\nHow to Test the Reproduction\n\nClone the reproduction repository\nRemove the .git folder: rm -rf .git\nInstall dependencies: npm install\nStart dev server: npm run dev\nObserve that Tailwind classes don't work\nCreate empty .git folder: mkdir .git\nRestart the dev server\nRefresh the browser - Tailwind classes now work","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18957","RelatedDescription":"Closed issue \"[v4] Vite + Tailwind CSS classes not applying when project is outside a Git repository\" (#18957)"},{"Id":"3424777575","IsPullRequest":false,"CreatedAt":"2025-09-17T14:37:50","Actor":"ronaldcurtis","Number":"18952","RawContent":null,"Title":"[v4] @tailwindcss/vite not working with vitest","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.1.13\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite ^7.1.2\nVitest 3.2.4\n\n**What version of Node.js are you using?**\n\n22.13.0\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://github.com/ronaldcurtis/tailwind-four-with-vitest-not-working\n\n**Describe your issue**\n\nNot sure if this should be raised here or against the [vitest repo](https://github.com/vitest-dev/vitest), but when running a test with vitest and `css: true`, the error `Could not parse CSS stylesheet` is raised.\n\nThe reproduction URL above uses `jsdom@27`. But when trying with `jsdom@26.1.0`, it will also log the contents of the css file. In the stderr output, you will also see that it contains the unprocessed css with tailwind directives.\n\n<img width=\"3346\" height=\"1770\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/fa22a87a-2dc3-4201-bc2d-d379ec41bd12\" />","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18952","RelatedDescription":"Closed issue \"[v4] @tailwindcss/vite not working with vitest\" (#18952)"},{"Id":"3425657055","IsPullRequest":false,"CreatedAt":"2025-09-17T10:31:08","Actor":"marcospgp","Number":"18954","RawContent":null,"Title":"error: Cannot apply unknown utility class: wrap-break-word","State":"closed","Body":"`    \"tailwindcss\": \"^4.1.13\",`","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18954","RelatedDescription":"Closed issue \"error: Cannot apply unknown utility class: wrap-break-word\" (#18954)"},{"Id":"3423841472","IsPullRequest":false,"CreatedAt":"2025-09-17T07:02:45","Actor":"jcortezevi","Number":"18949","RawContent":null,"Title":"ms/me not working with responsive breakpoints in dev mode","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\n4.1.13\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 15.5.3\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://github.com/jcortezevi/tailwind-ms-me-test\nhttps://play.tailwindcss.com/FrHljSOwC6\n\n**Describe your issue**\n\nms/me margin styles don't seem to work with Tailwind V4 in dev mode when using responsive breakpoints (`sm:`, `md:`, `lg:`, ...). However, I noticed that these styles work in a full production build. The GitHub repo link above is a minimal example of this issue. The Tailwind Play link above is the same code, but it works (my guess is that the CSS is being generated differently compared to my Next.js project).\n\nI noticed something interesting when poking around the generated CSS files in dev mode in `.next/static/chunks`.  The generated CSS source map file has the `ms-4` and `me-4` styles, but the CSS file that corresponds to that source map doesn't have these styles.\n\nWe have used similar styles such as `sm:ms-4` extensively in a different Next.js project that uses Tailwind V3 instead, and these styles work in dev mode in that project.\n\nI also found this similar issue, but it has been closed: https://github.com/tailwindlabs/tailwindcss/issues/16438\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18949","RelatedDescription":"Closed issue \"ms/me not working with responsive breakpoints in dev mode\" (#18949)"},{"Id":"3423017308","IsPullRequest":true,"CreatedAt":"2025-09-16T19:04:13","Actor":"bvandercar-vt","Number":"18948","RawContent":null,"Title":"Use `default` export condition for `@tailwindcss/vite`","State":"closed","Body":"## Summary\r\n\r\nIn `@tailwindcss/vite` 's `package.json`, change the `exports` key from `include` to `default` since there is no `require` case.\r\n\r\nRan into an issue using the `tsx` package to run a script that has a sub-dependency that imports from `@tailwindcss/vite`, where `tsx` converts things to cjs to run, and since there is no `require` case for this package, it can't find the file. Changing to `default` covers the cases for both `import` and `require`.\r\n\r\n## Test plan\r\n\r\nNo testing needed. Functionality is the same.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18948","RelatedDescription":"Closed or merged PR \"Use `default` export condition for `@tailwindcss/vite`\" (#18948)"},{"Id":"3419281835","IsPullRequest":true,"CreatedAt":"2025-09-16T18:03:09","Actor":"thecrypticace","Number":"18938","RawContent":null,"Title":"Fix native ESM config loading in v3","State":"closed","Body":"Unfortunately for backwards compatibility purposes (with `loadConfig` at least) we can't switch things to use `import(…)` because there's baked in knowledge that the config is loaded synchronously for v3.\r\n\r\nThis PR does two things:\r\n- Defers to `require(…)` which allows newer versions that support `require(esm)` to work natively. This works around the need to switch to `import(…)` for those versions.\r\n- Allows newer versions of `postcss-load-config` enabling better ESM+TypeScript support for PostCSS configs in the CLI.\r\n\r\nWe support v4, v5, and v6 of `postcss-load-config` simultaneously so any of those versions should work. I've verified that newer node versions seem to install v6 while earlier ones like Node v14 install v4 of `postcss-load-config`. So this should be a backwards compatible change.\r\n\r\n- [x] needs tests for `import.meta.resolve(…)`\r\n- [x] needs tests for ESM postcss configs\r\n\r\nFixes #14152\r\nFixes #14423","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18938","RelatedDescription":"Closed or merged PR \"Fix native ESM config loading in v3\" (#18938)"},{"Id":"3422808380","IsPullRequest":false,"CreatedAt":"2025-09-16T15:48:08","Actor":"Cephyric-gh","Number":"18946","RawContent":null,"Title":"Divide does not apply to custom HTML elements","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.1.13\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\nActual codebase is angular, but can be recreated in the playground\n\n**What version of Node.js are you using?**\n\n24.2.0\n\n**What browser are you using?**\n\nZen (fork of Firefox, does not alter default Firefox CSS handling)\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/9X9CyHeGx0\n\n**Describe your issue**\n\nWhen using `divide-y`, the styling of the divide does not apply to custom HTML elements. This becomes a problem in angular as angular components output custom elements into the browser.\n\nSide-note that playground doesn't seem to apply _any_ classes to custom elements, which I am assuming is a playground issue as this is fine in angular itself. \n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18946","RelatedDescription":"Closed issue \"Divide does not apply to custom HTML elements\" (#18946)"},{"Id":"3420002549","IsPullRequest":false,"CreatedAt":"2025-09-16T08:54:11","Actor":"boycce","Number":"18942","RawContent":null,"Title":"optimizeUniversalDefaults should be a primary setting","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv3.4.17\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nwebpack 5.92.1\n\n**What version of Node.js are you using?**\n\nv20.0.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nSetting the following in tailwind.config.js:\n```\nexport default {\n  // ...\n  experimental: {\n    optimizeUniversalDefaults: true\n  }\n}\n```\n\nDisplays the following warnings:\n\n> warn - You have enabled experimental features: optimizeUniversalDefaults\n> warn - Experimental features in Tailwind CSS are not covered by semver, may introduce breaking changes, and can change at any time.\n\n**Describe your issue**\n\nAfter realising there’s no way to silence the experimental warnings when this flag is enabled, it made me think this should actually be a primary setting. Without it, I find it very difficult to read and debug CSS classes in DevTools because of the unnecessary class clutter, and use it for all our projects.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18942","RelatedDescription":"Closed issue \"optimizeUniversalDefaults should be a primary setting\" (#18942)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-09-26T03:30:24.8303991Z","RunDurationInMilliseconds":615}