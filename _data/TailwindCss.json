{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"3387672198","IsPullRequest":false,"CreatedAt":"2025-09-05T14:21:02","Actor":"kangwuyi","Number":"18891","RawContent":null,"Title":"about generate CSS by Monorepo mode","State":"closed","Body":"This is a problem that needs to be reopened!!!\n\nI found that Tailwind did not generate CSS styles correctly in Monorepo mode\nFinally, it was found that there was a related issue at https://github.com/tailwindlabs/tailwindcss/issues/13136#issuecomment-2624010237 and the matter was resolved in the same way as others.\n\nBut in the end, I discovered a new issue where in monorepo mode, if a subfolders are ignored by **. gitignore**, it can cause the CSS inside the folder to not be generated correctly!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18891","RelatedDescription":"Closed issue \"about generate CSS by Monorepo mode\" (#18891)"},{"Id":"3374243903","IsPullRequest":false,"CreatedAt":"2025-09-05T14:17:55","Actor":"zyycn","Number":"18852","RawContent":null,"Title":"Hmr not work in monorepo ui lib","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n    \"@tailwindcss/vite\": \"^4.1.12\",\n    \"tailwindcss\": \"^4.1.12\"\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n    \"vite\": \"^7.1.4\"\n\n**What version of Node.js are you using?**\n\n    v22.15.0\n\n**What browser are you using?**\n\n    Chrome/139.0.7258.155\n\n**What operating system are you using?**\n\n    Windows11/24H2/26100.4946\n\n**Reproduction URL**\n\nhttps://github.com/zyycn/tailwindcss-vite-monorepo\n\n**Describe your issue**\n\nIn a monorepo, when code is changed in Tailwind CSS within the packages/ui, the page does not hot-update to apply the latest changes. i thought it was a Vite issue, but I found that commenting out the `@import '@packages/ui/styles.css'`;  in `apps/vue-project/styles/tailwind.css` makes everything work normally. It seems like there might be some conflict between Tailwind CSS and Vite, right?\n\nI also tried writing styles without using tailwind.css and found that everything worked normally, with hot updates functioning perfectly. I'm not sure why this is happening, so I wanted to seek help from Tailwind CSS. Sorry, English is not my native language, so my description might not be clear enough. If there's any confusion, I can provide further details.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18852","RelatedDescription":"Closed issue \"Hmr not work in monorepo ui lib\" (#18852)"},{"Id":"3387621863","IsPullRequest":false,"CreatedAt":"2025-09-05T13:53:55","Actor":"vadimwe","Number":"18889","RawContent":null,"Title":"Ionic 8/Angular 20 - Not all classes handled by tailwind in angular dev mode (ionic serve)","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n4.1.12\n\nFor example: v4.0.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nIonic 8 / Angular 20 (with SCSS mode) / postcss 8.5.6\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What browser are you using?**\n\nChrome, Safari (mobile & desktop)\n\n**What operating system are you using?**\n\nmacOS\n\n**Describe your issue**\n\nTailwind handle classes in src/app/tabs folder but don't for src/app/pages/auth/auth-login.\nIf you stop dev server and remove angular cache, tailwind will fetch new classes on next server start but not in runtime\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18889","RelatedDescription":"Closed issue \"Ionic 8/Angular 20 - Not all classes handled by tailwind in angular dev mode (ionic serve)\" (#18889)"},{"Id":"3372802274","IsPullRequest":false,"CreatedAt":"2025-09-05T13:24:51","Actor":"aaronmahlke","Number":"18849","RawContent":null,"Title":"light-dark function gets wrongly transformed by lightning css","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.12\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 15.5.2\n\n**What version of Node.js are you using?**\n\nv23.11.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://codesandbox.io/p/github/aaronmahlke/nextjs-tailwind-light-dark-issue/main\n\n**Describe your issue**\n\nWhen using the light-dark() CSS function, it gets wrongly transformed to by lightning CSS:\n` --border-color-neutral: light-dark(var(--color-neutral-300), var(--color-neutral-600));`\nturns into\n`--border-color-neutral: var(--lightningcss-light, var(--color-neutral-300)) var(--lightningcss-dark, var(--color-neutral-600))`\n\nwhich leads to weird behaviour like in this example different border colors for each side of the border:\n\n<img width=\"486\" height=\"483\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e2d2a0d1-252d-4b9b-b28b-d7dec46f2ce8\" />","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18849","RelatedDescription":"Closed issue \"light-dark function gets wrongly transformed by lightning css\" (#18849)"},{"Id":"3385607796","IsPullRequest":true,"CreatedAt":"2025-09-05T12:24:12","Actor":"RobinMalfait","Number":"18885","RawContent":null,"Title":"Handle `@variant` inside `@custom-variant`","State":"closed","Body":"This PR fixes an issue where you cannot use `@variant` inside a `@custom-variant`. While you can use `@variant` in normal CSS, you cannot inside of `@custom-variant`. Today this silently fails and emits invalid CSS.\r\n```css\r\n@custom-variant dark {\r\n  @variant data-dark {\r\n    @slot;\r\n  }\r\n}\r\n```\r\n```html\r\n<div class=\"dark:flex\"></div>\r\n```\r\n\r\nWould result in:\r\n```css\r\n.dark\\:flex {\r\n  @variant data-dark {\r\n    display: flex;\r\n  }\r\n}\r\n```\r\n\r\nTo solve it we have 3 potential solutions:\r\n\r\n1. Consider it user error — but since it generates CSS and you don't really get an error you could be shipping broken CSS unknowingly.\r\n1. We could try and detect this and not generate CSS for this and potentially show a warning.\r\n1. We could make it work as expected — which is what this PR does.\r\n\r\nSome important notes:\r\n\r\n1. The evaluation of the `@custom-variant` only happens when you actually need it. That means that `@variant` inside `@custom-variant` will always have the implementation of the last definition of that variant.\r\n\r\n   In other words, if you use `@variant hover` inside a `@custom-variant`, and later you override the `hover` variant, the `@custom-variant` will use the new implementation.\r\n1. If you happen to introduce a circular dependency, then an error will be thrown during the build step.\r\n\r\nYou can consider it a bug fix or a new feature it's a bit of a gray area. But\r\none thing that is cool about this is that you can ship a plugin that looks like\r\nthis:\r\n```css\r\n@custom-variant hocus {\r\n  @variant hover {\r\n    @slot;\r\n  }\r\n\r\n  @variant focus {\r\n    @slot;\r\n  }\r\n}\r\n```\r\n\r\nAnd it will use the implementation of `hover` and `focus` that the user has defined. So if they have a custom `hover` or `focus` variant it will just work.\r\n\r\nBy default `hocus:underline` would generate:\r\n```css\r\n@media (hover: hover) {\r\n  .hocus\\:underline:hover {\r\n    text-decoration-line: underline;\r\n  }\r\n}\r\n\r\n.hocus\\:underline:focus {\r\n  text-decoration-line: underline;\r\n}\r\n```\r\n\r\nBut if you have a custom `hover` variant like:\r\n```css\r\n@custom-variant hover (&:hover);\r\n```\r\n\r\nThen `hocus:underline` would generate:\r\n```css\r\n.hocus\\:underline:hover, .hocus\\:underline:focus {\r\n  text-decoration-line: underline;\r\n}\r\n```\r\n\r\n### Test plan\r\n\r\n1. Existing tests pass\r\n2. Added tests with this new functionality handled\r\n3. Made sure to add a test for circular dependencies + error message\r\n4. Made sure that if you \"fix\" the circular dependency (by overriding a variant) that everything is generated as expected.\r\n\r\nFixes: https://github.com/tailwindlabs/tailwindcss/issues/18524","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18885","RelatedDescription":"Closed or merged PR \"Handle `@variant` inside `@custom-variant`\" (#18885)"},{"Id":"3384607927","IsPullRequest":false,"CreatedAt":"2025-09-05T12:17:08","Actor":"RobinMalfait","Number":"18882","RawContent":null,"Title":"Regression in extracting classes from symbol list in Clojure","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.1.12\n\n**Reproduction URL**\n\nhttps://github.com/tailwindlabs/tailwindcss/pull/18345#issuecomment-3248030836\n\n**Describe your issue**\n\nWe introduced a regression while fixing another Clojure issue in the Oxide candidate extractor that was released in v4.1.12. Extracting classes from a symbol list doesn't work as expected anymore.\n\n```clj\n[:div {:class '[class-1 class-2\n                class-3 class-4]}]\n```\n\nSee:\n\n- https://github.com/tailwindlabs/tailwindcss/pull/18345#issuecomment-3248030836\n- https://github.com/tailwindlabs/tailwindcss/pull/18345#issuecomment-3253403847","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18882","RelatedDescription":"Closed issue \"Regression in extracting classes from symbol list in Clojure\" (#18882)"},{"Id":"3387040149","IsPullRequest":true,"CreatedAt":"2025-09-05T12:17:07","Actor":"RobinMalfait","Number":"18888","RawContent":null,"Title":"Handle `'` syntax in ClojureScript when extracting classes","State":"closed","Body":"This PR fixes an issue where the `'` syntax in ClojureScript was not handled properly, resulting in missing extracted classes.\r\n\r\nThis PR now supports the following ClojureScript syntaxes:\r\n\r\n```cljs\r\n; Keyword\r\n(print 'text-red-500)\r\n\r\n; List\r\n(print '(flex flex-col underline))\r\n\r\n; Vector\r\n(print '[flex flex-col underline])\r\n```\r\n\r\n### Test plan\r\n\r\n1. Added regression tests\r\n2. Verified that we extract classes correctly now in various scenarios:\r\n\r\nTop is before, bottom is with this PR:\r\n\r\n<img width=\"1335\" height=\"1862\" alt=\"image\" src=\"https://github.com/user-attachments/assets/746aa073-25f8-41f8-b71c-ba83a33065aa\" />\r\n\r\n\r\nFixes: #18882 \r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18888","RelatedDescription":"Closed or merged PR \"Handle `'` syntax in ClojureScript when extracting classes\" (#18888)"},{"Id":"3386393775","IsPullRequest":true,"CreatedAt":"2025-09-05T10:42:24","Actor":"depfu[bot]","Number":"18886","RawContent":null,"Title":"Update all pnpm dependencies (2025-09-05)","State":"closed","Body":"This is your weekly update of **all** pnpm dependencies. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n✳️ @emnapi/core (1.4.5 → 1.5.0, minor) · [Repo](https://github.com/toyobayashi/emnapi) · [Release](https://github.com/toyobayashi/emnapi/releases/tag/v1.5.0) · [Diff](https://github.com/toyobayashi/emnapi/compare/4afb0e72e28486a073e55d8fa2e00c9ea916d0f5...61628bd5e27679955f13cbff8f6573d66a5fc00c)\n\n✳️ @emnapi/runtime (1.4.5 → 1.5.0, minor) · [Repo](https://github.com/toyobayashi/emnapi) · [Release](https://github.com/toyobayashi/emnapi/releases/tag/v1.5.0) · [Diff](https://github.com/toyobayashi/emnapi/compare/4afb0e72e28486a073e55d8fa2e00c9ea916d0f5...61628bd5e27679955f13cbff8f6573d66a5fc00c)\n\n✳️ @emnapi/wasi-threads (1.0.4 → 1.1.0, minor) · [Repo](https://github.com/toyobayashi/emnapi) · [Release](https://github.com/toyobayashi/emnapi/releases/tag/v1.1.0) · [Diff](https://github.com/toyobayashi/emnapi/compare/14e3f418fda80d3eff5dd00d8310f3b662f4c09b...571f577dba78867d5403a18bec11fae9da651b04)\n\n✳️ @napi-rs/cli (3.0.0-alpha.78 → 3.1.5, minor) · [Repo](https://github.com/napi-rs/napi-rs)\n\n✳️ eslint-config-next (15.4.7 → 15.5.2, minor)\n\n✳️ @types/react-dom (19.1.7 → 19.1.9, patch) · [Repo](https://github.com/DefinitelyTyped/DefinitelyTyped)\n\n✳️ @vitejs/plugin-react (5.0.0 → 5.0.2, patch) · [Repo](https://github.com/vitejs/vite-plugin-react) · [Changelog](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/CHANGELOG.md)\n\n✳️ tslib (2.8.0 → 2.8.1, patch) · [Repo](https://github.com/Microsoft/tslib) · [Release](https://github.com/microsoft/tslib/releases/tag/v2.8.1) · [Diff](https://github.com/Microsoft/tslib/compare/ca5f7fb791f85ebf17c0102cdc632e9577b3e483...d72d6f70b36286bc3f94a3dda1e64dcb568b1370)\n\n✳️ turbo (2.5.4 → 2.5.6, patch) · [Repo](https://github.com/turborepo/turbo)\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will only send you the next scheduled PR once you merge or close this one.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu refresh</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n</dl></blockquote>\n</details>\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18886","RelatedDescription":"Closed or merged PR \"Update all pnpm dependencies (2025-09-05)\" (#18886)"},{"Id":"3385488273","IsPullRequest":false,"CreatedAt":"2025-09-04T21:42:26","Actor":"nmihaica","Number":"18883","RawContent":null,"Title":"Monorepo issues","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v3.4.17\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: webpack 5\n\n**What version of Node.js are you using?**\n\nFor example: v22\n\n**What browser are you using?**\n\nFor example: Chrome\n\n**What operating system are you using?**\n\nFor example: Fedora\n\n**Reproduction URL**\n\n[[A Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\n\nA reproduction is **required** when filing an issue — any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.]\n\nhttps://github.com/nmihaica/preact-shell)\n\n**Describe your issue**\n\nTailwind does warns Content is empty when building via webpack in Monorepo setting","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18883","RelatedDescription":"Closed issue \"Monorepo issues\" (#18883)"},{"Id":"3379879185","IsPullRequest":true,"CreatedAt":"2025-09-04T17:18:26","Actor":"thecrypticace","Number":"18868","RawContent":null,"Title":"Prepare v4.1.13 release","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18868","RelatedDescription":"Closed or merged PR \"Prepare v4.1.13 release\" (#18868)"},{"Id":"3383189624","IsPullRequest":false,"CreatedAt":"2025-09-04T10:53:49","Actor":"nasrelasri","Number":"18879","RawContent":null,"Title":"[v4.1.12] Content scanning fails to detect utility classes in HTML files","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.12\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n@tailwindcss/cli 4.1.12\n\n**What version of Node.js are you using?**\n\nv20.18.0\n\n**What browser are you using?**\n\nN/A (CSS generation issue)\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://github.com/nasrelasri/tailwind-v4-bug-reproduction\n\n**Describe your issue**\n\nTailwind CSS v4.1.12 fails to generate utility classes for colors (bg-blue-*) and padding (p-4) while grid-related classes are generated correctly. \n\nSteps to reproduce:\n1. Install Tailwind CSS v4.1.12\n2. Create HTML with mixed utility classes: grid grid-cols-3 gap-4 bg-blue-200 p-4\n3. Run: npx @tailwindcss/cli -i input.css -o output.css\n4. Check output.css\n\nExpected behavior:\nAll utility classes should be generated in the output CSS.\n\nActual behavior:\nOnly grid classes (.grid, .grid-cols-3) are generated. Missing classes: .bg-blue-200, .bg-blue-300, .bg-blue-400, .p-4, .gap-4.\n\nWorkaround:\nDowngrading to Tailwind CSS v3.4.17 generates all classes correctly with the same configuration.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18879","RelatedDescription":"Closed issue \"[v4.1.12] Content scanning fails to detect utility classes in HTML files\" (#18879)"},{"Id":"3381981998","IsPullRequest":false,"CreatedAt":"2025-09-04T09:25:12","Actor":"igdswzcd","Number":"18875","RawContent":null,"Title":"Is default border style changeable?","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nBoth 3.x and 4.x\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNo matter\n\n**What version of Node.js are you using?**\n\nNo matter\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nWindows\n\n**Describe your issue**\n\n[Pull Request #116](https://github.com/tailwindlabs/tailwindcss/pull/116)\n`border-style: solid;` may introduce unintended side effects in certain contexts. For instance, when users copy content from a webpage into Microsoft Word, they may encounter unexpected visible lines—these stem from borders defined in the HTML. Specifically, some HTML-to-DOC conversion tools do not interpret a `border` with zero width and `solid` style (e.g., `border: 0 solid;`) as visually absent; instead, they render it as a visible border. While setting `border-style: none` can prevent this rendering artifact, it disrupts components relying on utility-first frameworks like Tailwind CSS, where border visibility is controlled exclusively via `border-width` utilities (which implicitly assume a default `border-style: solid`). This creates a conflict between document interoperability and component integrity. Are there established strategies or workarounds to resolve this issue?\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18875","RelatedDescription":"Closed issue \"Is default border style changeable?\" (#18875)"},{"Id":"3382280250","IsPullRequest":false,"CreatedAt":"2025-09-04T07:04:15","Actor":"human-coder-mj","Number":"18876","RawContent":null,"Title":"MUI Chip comopnent does not support proper tailwind CSS styling","State":"closed","Body":"- Tailwind version : `v4.1.12`\n\n- Build Tool version : `@tailwindcss/postcss@4.1.11 ; postcss@8.5.6`\n\n- Node.js version : `v22.0.0`\n\n- Browser : `Chrome`\n\n- operating system : `macOS` , `Windows`\n\n**Issue description:-**\n\nWhile using Tailwind css to provide color to the text inside the [Chip Componet](https://mui.com/material-ui/react-chip/), below mentioned are the issues that occurs.\n\n1. First Chip component is not initially accepting the tailwind css `text-[color]` property, to get it accepted we have to mark it as important eg:- `!text-yellow`\n\n2. Second while using the important notation, there is a priority issue. When using text color for light and dark mode simulataneously and marking both the text colors for light and dark mode as important, eg :-  `className='!text-fuchsia-400  dark:!text-yellow-300'` , the priority is given to color for dark mode which lets the color in dark mode to also appear in light mode.\n\n- Dark Mode\n<img width=\"428\" height=\"59\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/549559c5-0d5b-4e38-8406-a810b977d190\" />\n\n- Light Mode\n\n<img width=\"1032\" height=\"63\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/05b9555f-9f0a-42c2-8241-e6bc70cc4334\" />\n\n- Code.\n```JavaScript\nimport Chip from '@mui/material/Chip';\nimport LocalOfferIcon from '@mui/icons-material/LocalOffer';\n<Chip \nlabel=\"React\"\nicon={<LocalOfferIcon/>}\nsize='small'\nvariant='outlined'\nclassName='!rounded-full !bg-transparent !text-fuchsia-400 dark:!text-yellow-300'\n/>\n```\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18876","RelatedDescription":"Closed issue \"MUI Chip comopnent does not support proper tailwind CSS styling\" (#18876)"},{"Id":"3380287264","IsPullRequest":true,"CreatedAt":"2025-09-03T15:30:55","Actor":"RobinMalfait","Number":"18872","RawContent":null,"Title":"Do not allow variants to end with `-` or `_`","State":"closed","Body":"This PR is a followup of #18867, but this time we won't allow `@custom-variant` to end with `-` or `_`.\n\nThe same reasoning applies here where Oxide doesn't pick this up but Intellisense and Tailwind CSS' core does.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18872","RelatedDescription":"Closed or merged PR \"Do not allow variants to end with `-` or `_`\" (#18872)"},{"Id":"3380181979","IsPullRequest":false,"CreatedAt":"2025-09-03T14:52:02","Actor":"SanderFlooris","Number":"18870","RawContent":null,"Title":"Include glob path fails when path is also gitignored","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n`v4.1.12`\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite (`6.2.1`)\n\n**What version of Node.js are you using?**\n\n`v22.19.0`\n\n**What browser are you using?**\n\n`Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:142.0) Gecko/20100101 Firefox/142.0`\n\n**What operating system are you using?**\n\n`macOS Sequoia 15.6.1`\n\n**Reproduction URL**\n\nhttps://github.com/SanderFlooris/tailwind-4-gitignore-testcase\n\nInstructions on how to configure the repository and how to trigger the bug has been provided in the README.\n\n> [!NOTE]\n> This example repository uses Express.js as the back-end for simplicity, the actual project we are working on is based on Laravel. \n\n**Describe your issue**\n\nIn a project we are working on we prerender some parts of the page as static HTML files, these HTML files will then dynamically be loaded in our templates to cache sections of the webpage, without caching everything.\n\nHowever we discovered that Tailwind doesn't seem to pick up the classes properly inside of our `cms_content` directory that contains the prerendered sections, even though we manually specify in our Tailwind configuration that that directory should be scanned.\n\nAfter some digging around we figured out it was caused by the directory being gitignored, and we are unable to overwrite this. The compiler just skips over the directory entirely when we checked with `DEBUG=* yarn dev`.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18870","RelatedDescription":"Open issue \"Include glob path fails when path is also gitignored\" (#18870)"},{"Id":"3378084996","IsPullRequest":false,"CreatedAt":"2025-09-03T14:32:19","Actor":"benface","Number":"18863","RawContent":null,"Title":"`-` works as a custom variant, but `--` doesn't","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.1.12\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nTailwind Play, Vite, etc.\n\n**What version of Node.js are you using?**\n\nv24\n\n**What browser are you using?**\n\nFirefox, Safari, Chrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/dYzm7i79CK\n\n**Describe your issue**\n\nLike the title says. Interestingly, IntelliSense seems to say that the following CSS will be generated:\n\n```css\n.--\\:bg-amber-500 {\n  @layer x-unimportant {\n    background-color: var(--color-amber-500) /* oklch(76.9% 0.188 70.08) */;\n  }\n}\n```\n\nHowever, it's not.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18863","RelatedDescription":"Closed issue \"`-` works as a custom variant, but `--` doesn't\" (#18863)"},{"Id":"3379878512","IsPullRequest":true,"CreatedAt":"2025-09-03T14:32:18","Actor":"RobinMalfait","Number":"18867","RawContent":null,"Title":"Do not allow variants to start with `-` or `_`","State":"closed","Body":"This PR fixes an issue where custom variants with just `-` in the name were allowed but weren't actually picked up by Oxide so you couldn't use them anyway.\r\n\r\nThe reason we allow `-` is for `kebab-style-variants`, which is very common, but you shouldn't use `-`, `--` or more in a variant name.\r\n\r\nIt doesn't really solve the issue (#18863), but it fixes the inconsistencies in that exist today.\r\n\r\nInconsistencies:\r\n| &nbsp; | `-:flex` | `--:flex` |\r\n| --: | :--: | :--: |\r\n| Oxide | ❌ | ❌ |\r\n| Tailwind Play | ✅ | ❌ |\r\n| Intellisense | ✅ | ✅ |\r\n\r\n- Oxide already had the correct rules setup, so this is expected\r\n- Tailwind Play uses Tailwind's core compile step, but it considers candidates that start with `--` as a CSS variable instead of a utility. This means that the `--:flex` was considered a CSS variable and skipped during compilation.\r\n- Intellisense uses the same APIs than Tailwind's core, but it didn't have the CSS variable check which resulted in the `--:flex` being \"correct\".\r\n\r\nWith this PR, the matrix looks like this now:\r\n| &nbsp; | `-:flex` | `--:flex` |\r\n| --: | :--: | :--: |\r\n| Oxide | ❌ | ❌ |\r\n| Tailwind Play | ❌ | ❌ |\r\n| Intellisense | ❌ | ❌ |\r\n\r\n\r\nThis should not be considered a breaking change because Oxide didn't pick up candidates with variants that start with a `-`. CSS for these candidates was never generated before.\r\n\r\nCloses: #18863\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18867","RelatedDescription":"Closed or merged PR \"Do not allow variants to start with `-` or `_`\" (#18867)"},{"Id":"3379978133","IsPullRequest":true,"CreatedAt":"2025-09-03T14:07:32","Actor":"RobinMalfait","Number":"18869","RawContent":null,"Title":"Consider variants starting with `@-` to be invalid (e.g. `@-2xl:flex`)","State":"closed","Body":"This PR fixes a small parsing issue where variants such as `@-2xl:flex` would parse, but were handled as-if they were `@2xl:flex` instead.\r\n\r\nNoticed this while working on: #18867 \r\n\r\nThis is because when we parse normal variants like `data-foo` then we want to have a `data` root and a `foo` value, not a `-foo` value.\r\n\r\nIf you are now using `@-2xl:flex`, then no CSS will be generated for this anymore. If you were relying on this for some reason, you should use `@2xl:flex` instead.\r\n\r\n## Test plan\r\n\r\nBefore:\r\n\r\n<img width=\"862\" height=\"586\" alt=\"image\" src=\"https://github.com/user-attachments/assets/b5993ca6-f907-49af-b5bd-b7206c8300e1\" />\r\n\r\nAfter:\r\n\r\n<img width=\"862\" height=\"586\" alt=\"image\" src=\"https://github.com/user-attachments/assets/351f45e4-4cd3-451c-ae2a-c52c3e770629\" />\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18869","RelatedDescription":"Closed or merged PR \"Consider variants starting with `@-` to be invalid (e.g. `@-2xl:flex`)\" (#18869)"},{"Id":"3378747375","IsPullRequest":false,"CreatedAt":"2025-09-03T08:47:40","Actor":"cosbgn","Number":"18866","RawContent":null,"Title":"Tailwind-vite removes CSS styles (preflight) when on shadowDOM","State":"closed","Body":"You can reproduce the bug using this repo: https://github.com/cosbgn/tailwind-shadow\n\n1. Run `npm run dev` to build the script\n2. Run `npm run serve` to preview the bug on port :3000\n\nIf you set `useShadow` in `sdk.js` to either `true` or `false` some of the styles get missing, things like shadows, border, etc. It's a big issue because my widget relies on the shadowdom and I never know what style will work and which won't.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18866","RelatedDescription":"Closed issue \"Tailwind-vite removes CSS styles (preflight) when on shadowDOM\" (#18866)"},{"Id":"3375805399","IsPullRequest":false,"CreatedAt":"2025-09-02T12:50:02","Actor":"spatulatom","Number":"18858","RawContent":null,"Title":"tailwindcss.com homepage fails WCAG for color contrasts","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.6 (the version used on the Tailwind CSS documentation site)\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 15.3.4 (as indicated in the terminal output when running the site locally)\n\n**What version of Node.js are you using?**\n\nv20.0.0\n\n**What browser are you using?**\n\nChrome with Axe DevTools extension for accessibility testing\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n\nhttps://tailwindcss.com/ (The issue appears on the official documentation site itself)\n\n**Describe your issue**\n\nThe Tailwind CSS documentation site has multiple color contrast issues that fail WCAG 2.1 accessibility standards as detected by the Axe DevTools browser extension. Specifically:\n\n1. The utility class indicators throughout the homepage (elements with `aria-hidden=\"true\"` showing Tailwind class names) have insufficient color contrast:\n   - In light mode: Using `text-black/20` (black at 20% opacity) which has a contrast ratio of approximately 2:1\n   - In dark mode: Using `dark:text-white/25` (white at 25% opacity) which has a contrast ratio of approximately 3:1\n\nBoth fail the WCAG AA standard requiring a minimum contrast ratio of 4.5:1 for normal text (or 3:1 for large text).\n\nWhile these elements are correctly marked with `aria-hidden=\"true\"` to hide them from screen readers, they are still visible to users with low vision or color vision deficiencies who aren't using screen readers. Therefore, they should still meet contrast requirements.\n\nIn total, Axe reports 26 failing contrast elements in dark mode and 30 in light mode, mostly related to these utility class indicators.\n\n**Example from `hero.tsx`:**\n```tsx\n<div\n  aria-hidden=\"true\"\n  className=\"flex h-16 items-end px-2 font-mono text-xs/6 whitespace-pre text-black/20 max-sm:px-4 sm:h-24 dark:text-white/25\"\n>\n  <span className=\"hidden max-sm:inline\">text-4xl </span>\n  <span className=\"hidden sm:max-md:inline\">text-5xl </span>\n  <span className=\"hidden lg:max-xl:inline\">text-6xl </span>\n  <span className=\"hidden xl:inline\">text-8xl </span>\n  <span className=\"inline dark:hidden\">text-gray-950 </span>\n  <span className=\"hidden dark:inline\">text-white </span>tracking-tighter{\" \"}\n  <span className=\"max-sm:hidden\">text-balance</span>\n</div>\n\nSuggested fix: Increase the opacity of these indicator elements to meet WCAG AA standards:\n\nFor light mode: Change text-black/20 to text-black/55 (contrast ratio ~4.5:1)\nFor dark mode: Change dark:text-white/25 to dark:text-white/50 (contrast ratio ~5.3:1)\nThis would ensure the site is accessible to users with visual impairments while still maintaining the subtle, secondary visual nature of these indicators.\n\nNote: The fact that these elements have aria-hidden=\"true\" only addresses screen reader accessibility but doesn't exempt them from visual accessibility requirements like color contrast.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18858","RelatedDescription":"Closed issue \"tailwindcss.com homepage fails WCAG for color contrasts\" (#18858)"},{"Id":"3374701393","IsPullRequest":false,"CreatedAt":"2025-09-02T09:29:50","Actor":"Faraz1995","Number":"18854","RawContent":null,"Title":"Tailwind CSS v4 styles not applied in Android 10/11","State":"closed","Body":"hi\ni am using tailwind 4 , vite, tanstack router, i am making a webview loading a url, url looks fine on chrome, but on android device with version 10/11 , the whole style did not load, but when i roll back to tailwind 3, everything is fine!\n\nExpected behavior:\nTailwind v4 should be able to generate compatible CSS when targeting older browsers (e.g., Android 10/11 WebView) using Browserslist.\n\nstyles.css\n`\n@supports not (color: rgb(0 0 0 / 0.5)) {\n  body {\n    background: black !important;\n  }\n}\n\n@import 'tailwindcss';\n\n`\n\npackage.json\n\n`\n{\n  \"dependencies\": {\n    \"tailwindcss\": \"^4.0.6\",\n    \"@tailwindcss/vite\": \"^4.0.6\",\n    \"@tailwindcss/postcss\": \"^4.1.12\",\n    \"vite\": \"^6.1.0\"\n  },\n  \"browserslist\": [\n    \"defaults\",\n    \"Android >= 5\",\n    \"iOS >= 12\"\n  ]\n}\n`\n\nvite.config.js\n\n`import tailwindcss from '@tailwindcss/vite'\nimport viteReact from '@vitejs/plugin-react'\nimport { defineConfig } from 'vite'\nimport autoprefixer from 'autoprefixer'\nimport postcssPresetEnv from 'postcss-preset-env'\nimport tanstackRouter from '@tanstack/router-plugin/vite'\n\nexport default defineConfig({\n  css: {\n    postcss: {\n      plugins: [\n        autoprefixer(),\n        postcssPresetEnv({\n          stage: 2,\n          browsers: ['Android >= 8'],\n          features: {\n            'custom-properties': true,\n          },\n        }),\n      ],\n    },\n  },\n  plugins: [\n    tanstackRouter({ target: 'react', autoCodeSplitting: true }),\n    viteReact(),\n    tailwindcss(),\n  ],\n})\n`\n\nand .broswerslistrc\n\n`defaults\nAndroid >= 5\niOS >= 12\n`\n\npostcss.config.mjs\n`export default {\n  plugins: {\n    '@tailwindcss/postcss': {},\n  },\n}\n`\n\nany idea or solution except rolling back to v3?\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18854","RelatedDescription":"Closed issue \"Tailwind CSS v4 styles not applied in Android 10/11\" (#18854)"},{"Id":"3374738143","IsPullRequest":true,"CreatedAt":"2025-09-02T09:26:06","Actor":"mischnic","Number":"18855","RawContent":null,"Title":"Add '.vercel' to ignored content directories","State":"closed","Body":"Just like `.next` is ignored, ignore `.vercel` as well.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18855","RelatedDescription":"Closed or merged PR \"Add '.vercel' to ignored content directories\" (#18855)"},{"Id":"3374641639","IsPullRequest":true,"CreatedAt":"2025-09-02T08:13:15","Actor":"hustrust","Number":"18853","RawContent":null,"Title":"chore: remove redundant words","State":"closed","Body":"<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create a discussion to first discuss any significant new features.\r\n\r\nFor more info, check out the contributing guide:\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/main/.github/CONTRIBUTING.md\r\n\r\n-->\r\n\r\n## Summary\r\n\r\nremove redundant words\r\n\r\n<!--\r\n\r\nProvide a summary of the issue and the changes you're making. How does your change solve the problem?\r\n\r\n-->\r\n\r\n## Test plan\r\n\r\n<!--\r\n\r\nExplain how you tested your changes. Include the exact commands that you used to verify the change works and include screenshots/screen recordings of the update behavior in the browser if applicable.\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18853","RelatedDescription":"Closed or merged PR \"chore: remove redundant words\" (#18853)"},{"Id":"3369173613","IsPullRequest":true,"CreatedAt":"2025-09-01T09:36:44","Actor":"okonomi","Number":"18837","RawContent":null,"Title":"Fix missing code block delimiters in comment blocks","State":"closed","Body":"## Summary\r\n\r\nI fixed some code blocks inside comment blocks that were missing delimiters.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18837","RelatedDescription":"Closed or merged PR \"Fix missing code block delimiters in comment blocks\" (#18837)"},{"Id":"3368629850","IsPullRequest":true,"CreatedAt":"2025-09-01T09:28:36","Actor":"rollraw","Number":"18834","RawContent":null,"Title":"Add `ring-initial` utility","State":"closed","Body":"## Summary\r\nThere is no way to undo a `ring-inset` at the moment. This PR adds utility `ring-initial` to do that. Has been discussed at #3016 \r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18834","RelatedDescription":"Closed or merged PR \"Add `ring-initial` utility\" (#18834)"},{"Id":"3369546474","IsPullRequest":true,"CreatedAt":"2025-09-01T09:24:56","Actor":"depfu[bot]","Number":"18838","RawContent":null,"Title":"🚨 [security] Update all of nextjs 15.4.4 → 15.4.7 (patch)","State":"closed","Body":"\n\n<hr>\n\n🚨 <b>Your current dependencies have known security vulnerabilities</b> 🚨\n\nThis dependency update fixes known security vulnerabilities. Please see the details below and assess their impact carefully. We recommend to merge and deploy this as soon as possible!\n<hr>\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ eslint-config-next (15.4.4 → 15.4.7)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n#### ✳️ next (15.4.4 → 15.4.7) · [Repo](https://github.com/vercel/next.js)\n\n\n<details>\n\n<summary>Security Advisories 🚨</summary>\n<h4><a href=\"https://bounce.depfu.com/github.com/vercel/next.js/security/advisories/GHSA-xv57-4mr9-wg8v\">🚨 Next.js Content Injection Vulnerability for Image Optimization</a></h4>\n<blockquote><p dir=\"auto\">A vulnerability in <strong>Next.js Image Optimization</strong> has been fixed in <strong>v15.4.5</strong> and <strong>v14.2.31</strong>. The issue allowed attacker-controlled external image sources to trigger file downloads with arbitrary content and filenames under specific configurations. This behavior could be abused for phishing or malicious file delivery.</p>\n<p dir=\"auto\">All users relying on <code class=\"notranslate\">images.domains</code> or <code class=\"notranslate\">images.remotePatterns</code> are encouraged to upgrade and verify that external image sources are strictly validated.</p>\n<p dir=\"auto\">More details at <a href=\"https://vercel.com/changelog/cve-2025-55173\">Vercel Changelog</a></p></blockquote>\n<h4><a href=\"https://bounce.depfu.com/github.com/vercel/next.js/security/advisories/GHSA-g5qg-72qw-gw5v\">🚨 Next.js Affected by Cache Key Confusion for Image Optimization API Routes</a></h4>\n<blockquote><p dir=\"auto\">A vulnerability in Next.js Image Optimization has been fixed in v15.4.5 and v14.2.31. When images returned from API routes vary based on request headers (such as <code class=\"notranslate\">Cookie</code> or <code class=\"notranslate\">Authorization</code>), these responses could be incorrectly cached and served to unauthorized users due to a cache key confusion bug.</p>\n<p dir=\"auto\">All users are encouraged to upgrade if they use API routes to serve images that depend on request headers and have image optimization enabled.</p>\n<p dir=\"auto\">More details at <a href=\"https://vercel.com/changelog/cve-2025-57752\">Vercel Changelog</a></p></blockquote>\n<h4><a href=\"https://bounce.depfu.com/github.com/vercel/next.js/security/advisories/GHSA-4342-x723-ch2f\">🚨 Next.js Improper Middleware Redirect Handling Leads to SSRF</a></h4>\n<blockquote><p dir=\"auto\">A vulnerability in <strong>Next.js Middleware</strong> has been fixed in <strong>v14.2.32</strong> and <strong>v15.4.7</strong>. The issue occurred when request headers were directly passed into <code class=\"notranslate\">NextResponse.next()</code>. In self-hosted applications, this could allow Server-Side Request Forgery (SSRF) if certain sensitive headers from the incoming request were reflected back into the response.</p>\n<p dir=\"auto\">All users implementing custom middleware logic in self-hosted environments are strongly encouraged to upgrade and verify correct usage of the <code class=\"notranslate\">next()</code> function.</p>\n<p dir=\"auto\">More details at <a href=\"https://vercel.com/changelog/cve-2025-57822\">Vercel Changelog</a></p></blockquote>\n</details>\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/vercel/next.js/releases/tag/v15.4.7\">15.4.7</a></h4>\n\n<blockquote><div class=\"markdown-alert markdown-alert-note\" dir=\"auto\">\n<p class=\"markdown-alert-title\" dir=\"auto\"><svg class=\"octicon octicon-info mr-2\" viewbox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z\"></path></svg>Note</p>\n<p dir=\"auto\">This release is backporting bug fixes. It does <strong>not</strong> include all pending features/changes on canary.</p>\n</div>\n<h3 dir=\"auto\">Core Changes</h3>\n<ul dir=\"auto\">\n<li>fix router handling when setting a location response header <a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/82588\">#82588</a>\n</li>\n</ul>\n<h3 dir=\"auto\">Credits</h3>\n<p dir=\"auto\">Huge thanks to <a href=\"https://bounce.depfu.com/github.com/ztanner\">@ztanner</a> for helping!</p></blockquote>\n<h4><a href=\"https://github.com/vercel/next.js/releases/tag/v15.4.6\">15.4.6</a></h4>\n\n<blockquote><div class=\"markdown-alert markdown-alert-note\" dir=\"auto\">\n<p class=\"markdown-alert-title\" dir=\"auto\"><svg class=\"octicon octicon-info mr-2\" viewbox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z\"></path></svg>Note</p>\n<p dir=\"auto\">This release is backporting bug fixes. It does <strong>not</strong> include all pending features/changes on canary.</p>\n</div>\n<h3 dir=\"auto\">Core Changes</h3>\n<ul dir=\"auto\">\n<li>fix: <code class=\"notranslate\">_error</code> page's <code class=\"notranslate\">req.url</code> can be overwritten to dynamic param on minimal mode (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/82347\">#82347</a>)</li>\n<li>fix: add <code class=\"notranslate\">?dpl</code> to fonts in <code class=\"notranslate\">/_next/static/media</code> (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/82384\">#82384</a>)</li>\n</ul>\n<h3 dir=\"auto\">Credits</h3>\n<p dir=\"auto\">Huge thanks to <a href=\"https://bounce.depfu.com/github.com/devjiwonchoi\">@devjiwonchoi</a>, <a href=\"https://bounce.depfu.com/github.com/ijjk\">@ijjk</a>, and <a href=\"https://bounce.depfu.com/github.com/styfle\">@styfle</a> for helping!</p></blockquote>\n<h4><a href=\"https://github.com/vercel/next.js/releases/tag/v15.4.5\">15.4.5</a></h4>\n\n<blockquote><div class=\"markdown-alert markdown-alert-note\" dir=\"auto\">\n<p class=\"markdown-alert-title\" dir=\"auto\"><svg class=\"octicon octicon-info mr-2\" viewbox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z\"></path></svg>Note</p>\n<p dir=\"auto\">This release is backporting bug fixes. It does <strong>not</strong> include all pending features/changes on canary.</p>\n</div>\n<h3 dir=\"auto\">Core Changes</h3>\n<ul dir=\"auto\">\n<li>Fix API stripping JSON incorrectly (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/82062\">#82062</a>)</li>\n<li>Fix i18n fallback: false collision (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/82158\">#82158</a>)</li>\n<li>Revert \"Fix tracing of server actions imported by client components (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/82167\">#82167</a>)</li>\n<li>Ensure setAssetPrefix updates config instance (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/82165\">#82165</a>)</li>\n<li>Turbopack: update mimalloc (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/82166\">#82166</a>)</li>\n<li>fix(next/image): fix image-optimizer.ts headers (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/82175\">#82175</a>)</li>\n<li>fix(next/image): improve and simplify detect-content-type (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/82174\">#82174</a>)</li>\n</ul>\n<h3 dir=\"auto\">Credits</h3>\n<p dir=\"auto\">Huge thanks to <a href=\"https://bounce.depfu.com/github.com/ijjk\">@ijjk</a>, <a href=\"https://bounce.depfu.com/github.com/sokra\">@sokra</a>, and <a href=\"https://bounce.depfu.com/github.com/styfle\">@styfle</a> for helping!</p></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/next/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/vercel/next.js/compare/fe5db65859f0658d1c4701635ec4f4e5ec507e64...f30d815859e932e09222e93bb6e8a376b918d874\">See the full diff on Github</a>. The new version differs by 14 commits:</p>\n<ul>\n<li><a href=\"https://github.com/vercel/next.js/commit/f30d815859e932e09222e93bb6e8a376b918d874\"><code>v15.4.7</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/1a026e338d2b8c977c8949a134168952338d6d01\"><code>fix router handling when setting a location response header (#82588)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/be4aafd4b744fbf6500b311b74c84243f70a3059\"><code>v15.4.6</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/91e5b6b84f56c096dc2bb647eb384388e06489fd\"><code>Backport &quot;fix: add `?dpl` to fonts in `/_next/static/media` (#82384)&quot; (#82421)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/f1629d939597cc46ccbe44fe66bda91eac31e219\"><code>Backport &quot;[Pages] fix: `_error` page&#39;s `req.url` can be overwritten t… (#82377)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/b9aab5dbe926c256d439bfecb226693dcd1a1be4\"><code>v15.4.5</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/a8c93c49dd2d42a2ced8a17bc53b3fea11d25c96\"><code>Disable test new tests jobs</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/ed2a6c754831406f8cd724eb52a562bb124c1504\"><code>[backport]: fix(next/image): improve and simplify detect-content-type (#82118) (#82174)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/f00fcc9011e7d0ef027021fc8424f51b8ac97880\"><code>[backport]: fix(next/image): fix image-optimizer.ts headers (#82114) (#82175)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/55a7568e9d12459f8c5f5ae120fe2e228af284bb\"><code>Backport: Turbopack: update mimalloc (#81993) (#82166)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/5bc4b368e5bc4d301f94955307e37a0328612408\"><code>[backport] Ensure setAssetPrefix updates config instance  (#82165)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/717dfb6ec985ba58b20ce6533ceecab213f72c22\"><code>[Backport] Revert &quot;Fix tracing of server actions imported by client components (#78968) (#82167)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/6372ba03e85ca598b67fe21daa87dbad328f581b\"><code>[backport] Fix i18n fallback: false collision  (#82158)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/1e2c3792f88491ab8cfba580b8f17aad17015d17\"><code>Fix API stripping JSON incorrectly (#82062)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18838","RelatedDescription":"Closed or merged PR \"🚨 [security] Update all of nextjs 15.4.4 → 15.4.7 (patch)\" (#18838)"},{"Id":"3371401339","IsPullRequest":false,"CreatedAt":"2025-09-01T06:38:51","Actor":"dbwhddn10","Number":"18848","RawContent":null,"Title":"[v4] The <button> element default css cursor property issue","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n4.1.12\n\n**What browser are you using?**\nChrome, Edge\n\n**Reproduction URL**\nhttps://play.tailwindcss.com/L0amaBtLvf\n\nThe <button> element has different default css cursor properties in versions 3.4.17 and 4.1.12.\n\ncursor:default <- v4.1.12\ncursor:pointer <- v3.4.17\n\nI think v3.4.17 is correct.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18848","RelatedDescription":"Closed issue \"[v4] The <button> element default css cursor property issue\" (#18848)"},{"Id":"3370250643","IsPullRequest":false,"CreatedAt":"2025-08-31T15:07:46","Actor":"non25","Number":"18841","RawContent":null,"Title":"Mapping complex design systems to tailwind utilities broken in v4 CSS config DSL","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.12\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: postcss: v8.5.6, postcss-loader v8.1.1\n\n**What version of Node.js are you using?**\n\nv22.19.0\n\n**What browser are you using?**\n\nFirefox v142.0.1, Chromium v139.0.7258.154\n\n**What operating system are you using?**\n\nArch Linux\n\nhttps://gist.github.com/non25/6e1ddd3d4667aac9c4511d1be7db38ba\n\n**Describe your issue**\n\nSince the introduction of the new CSS DSL configuration syntax in Tailwind v4, I've found it extremely difficult—if not impossible—to maintain a mapping between a complex, domain/purpose-focused design system and Tailwind's utility classes in a clean, maintainable way.\n\nMy use case involves:\n- A color system with semantic/grouped tokens that should map only to a specific subset of Tailwind's domains (for example, only `background-color` or `text-color` depending on their semantic intent).\n- A spacing system (with its own design tokens) that needs to be mapped predictably and consistently across related Tailwind utilities (like `padding`, `gap`, `size`, etc.).\n\nThe new configuration approach doesn't provide a clean way to express these mappings directly. To achieve the necessary mappings, I have to generate the Tailwind config using a custom code-generation script, which is both ugly and hard to maintain. I'm forced to essentially re-implement or reverse-engineer how Tailwind generates spacing and utility classes, which feels fragile and not in the intended spirit of the framework.\n\n**Steps to Reproduce:**\n1. Attempt to map a complex design system (with domain-focused color and spacing tokens) to Tailwind utility domains using only the new CSS DSL config syntax.\n2. Notice that there is no first-class way to control or limit how each design token maps to only certain Tailwind utility domains or property groups (e.g., ensuring a color token appears only as a background, not a border, or mapping spacing tokens only to padding/gap).\n3. As a workaround, generate the config with your own code, essentially duplicating the logic that Tailwind itself uses internally.\n\n**Expected Behavior:**\nI'd expect to be able to use Tailwind's config and generator in a \"semantic\" or \"domain-aware\" manner, mapping complex design system tokens to only the relevant utility groups, while still taking full advantage of Tailwind's underlying generator and conventions—without having to write custom code-generation tooling. This would make working with complex/enterprise-level design systems much more maintainable and would reinforce Tailwind's place as a flexible foundation for modern web UI work.\n\n<img width=\"490\" height=\"490\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/7865e959-9c1a-4ac6-a9d6-4f81125c0f01\" />\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18841","RelatedDescription":"Closed issue \"Mapping complex design systems to tailwind utilities broken in v4 CSS config DSL\" (#18841)"},{"Id":"3368984600","IsPullRequest":false,"CreatedAt":"2025-08-30T13:24:58","Actor":"alaindeurveilher","Number":"18836","RawContent":null,"Title":"cannot install @tailwindcss/postcss on Stackblitz with v4.1.12","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.1.12\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\npostcss 8.5.6\n\n**What version of Node.js are you using?**\n\nv20.19.1\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nStackblitz\n\n**Reproduction URL**\n\nhttps://stackblitz.com/edit/stackblitz-starters-afdncjbb?file=package.json\n\n**Describe your issue**\n\ntrying to install the latest version of @tailwindcss/postcss fails on Stackblitz:\n\n\nIn the output below, tailwindcss 4.1.12 and postcss 8.5.6 are already installed:\n```\n❯ yarn add @tailwindcss/postcss\nyarn add v1.22.19\nwarning package-lock.json found. Your project contains lock files generated by tools other than Yarn. It is advised not to mix package managers in order to avoid resolution inconsistencies caused by unsynchronized lock files. To clear this warning, remove package-lock.json.\n[1/4] 🔍  Resolving packages...\n[2/4] 🚚  Fetching packages...\nerror @tailwindcss/oxide@4.1.12: The CPU architecture \"x64\" is incompatible with this module.\nerror Found incompatible module.\ninfo Visit https://yarnpkg.com/en/docs/cli/add for documentation about this command.\n\n```\npackage.json at the moment of trying to install the remaining package:\n```json\n{\n  \"name\": \"angular-starter\",\n  \"private\": true,\n  \"scripts\": {\n    \"ng\": \"ng\",\n    \"start\": \"ng serve\",\n    \"build\": \"ng build\"\n  },\n  \"dependencies\": {\n    \"@angular/animations\": \"^20.0.0\",\n    \"@angular/common\": \"^20.0.0\",\n    \"@angular/compiler\": \"^20.0.0\",\n    \"@angular/core\": \"^20.0.0\",\n    \"@angular/forms\": \"^20.0.0\",\n    \"@angular/platform-browser\": \"^20.0.0\",\n    \"@angular/router\": \"^20.0.0\",\n    \"postcss\": \"^8.5.6\",\n    \"rxjs\": \"^7.8.1\",\n    \"tailwindcss\": \"^4.1.12\",\n    \"tslib\": \"^2.5.0\",\n    \"zone.js\": \"~0.15.0\"\n  },\n  \"devDependencies\": {\n    \"@angular/build\": \"^20.0.0\",\n    \"@angular/cli\": \"^20.0.0\",\n    \"@angular/compiler-cli\": \"^20.0.0\",\n    \"typescript\": \"^5.8.2\"\n  }\n}\n\n\n```\n\n<img width=\"877\" height=\"835\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e8afa90c-5d95-4197-aa12-7f6fd785fe37\" />\n\n**Expected**\n\nIt is expected that the installation of all the required packages for tailwindcss v4 succeed even on the Stackblitz platform.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18836","RelatedDescription":"Closed issue \"cannot install @tailwindcss/postcss on Stackblitz with v4.1.12\" (#18836)"},{"Id":"3368535388","IsPullRequest":false,"CreatedAt":"2025-08-30T00:36:41","Actor":"hyperknot","Number":"18833","RawContent":null,"Title":"source() handling different between cli and vite","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\ntailwindcss 4.1.12\n@tailwindcss/vite 4.1.12\n\n**What version of Node.js are you using?**\nv22.13.1\n\n**What browser are you using?**\n\n-\n\n**What operating system are you using?**\n\nmacOS\n\n**Describe your issue**\n\nThe same line\n\n```\n@import \"tailwindcss\" source(\"../../components\");\n```\n\nworks with cli but not with the Vite plugin. Vite says directory doesn't exist.\n\nI'm trying to figure out what is the base directory in Vite plugin, but it's impossible. I enabled DEBUG, but it shows nothing meaningful. \n\n```\ntransforming (1) src/index.tsx\n[78.23ms] [@tailwindcss/vite] Generate CSS (build)\n[77.96ms]   ↳ Setup compiler\n\n✓ 6 modules transformed.\n✗ Build failed in 142ms\nerror during build:\n[@tailwindcss/vite:generate:build] The `source(../../components)` does not exist \n```\n\nEven when it works, it's really not showing anything. The most important information would be:\n- base dir\n- absolute path of the resolved scan target\n- exact file list added by the scanner\n\nInstead, I get this:\n\n```\ntransforming (7) ../packages/shared/components/AppUI.tsx\n[163.03ms] [@tailwindcss/vite] Generate CSS (build)\n[ 81.87ms]   ↳ Setup compiler\n[  3.72ms]   ↳ Setup scanner\n[ 14.76ms]   ↳ Scan for candidates\n[ 14.70ms]   ↳ Build CSS\n[  0.00ms]   ↳ Build Source Map\n[ 12.48ms] [@tailwindcss/vite] Optimize CSS\n```\n\nRight now, I'm at the step when I'm recompiling tailwind/vite to add these debug lines.\n\nSo please take this as both a bug report and a feature request.\n1. Bug: cli can compile a file that vite cannot. \n2. Feature request: allow users to see what's happening, otherwise configuring source() is totally walking in the dark.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18833","RelatedDescription":"Open issue \"source() handling different between cli and vite\" (#18833)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-09-06T03:30:22.4690675Z","RunDurationInMilliseconds":467}