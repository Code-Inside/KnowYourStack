{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"3015341502","IsPullRequest":true,"CreatedAt":"2025-04-23T21:55:09","Actor":"RobinMalfait","Number":"17763","RawContent":null,"Title":"Bump all Tailwind CSS related dependencies during upgrade","State":"open","Body":"This PR bumps all Tailwind CSS related dependencies when running the upgrade tool _if_ the dependency exists in your package.json file.\r\n\r\nE.g.: if you have `tailwindcss` and `@tailwindcss/vite` in your package.json, then both will be updated to the latest version.\r\n\r\nThis PR is not trying to be smart and skip updating if you are already on the latest version. It will just try and update the dependencies and your package manager will do nothing in case it was already the latest version.\r\n\r\n## Test plan\r\n\r\nRan this on one of my personal projects and this was the output:\r\n<img width=\"1023\" alt=\"image\" src=\"https://github.com/user-attachments/assets/a189fe7a-a58a-44aa-9246-b720e7a2a892\" />\r\n\r\n\r\nNotice that I don't have `@tailwindcss/vite` logs because I am using `@tailwindcss/postcss`.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17763","RelatedDescription":"Open PR \"Bump all Tailwind CSS related dependencies during upgrade\" (#17763)"},{"Id":"3014715220","IsPullRequest":false,"CreatedAt":"2025-04-23T17:02:52","Actor":"aaronadamsCA","Number":"17761","RawContent":null,"Title":"`@reference` misses some fallback values","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nN/A\n\n**What version of Node.js are you using?**\n\nv23.11.0\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nN/A\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/lAycX1oWGq?file=css\n\n**Describe your issue**\n\nWe apply Tailwind preflight CSS to the entire page, then use `@reference` to generate utility CSS per module. Unfortunately there are currently a few gaps in the generated CSS. It looks like #16774 misses some fallback values.\n\nI can reproduce the issue on Tailwind Play using this simple config:\n\n```css\n@import \"tailwindcss/preflight.css\";\n@reference \"tailwindcss/theme.css\";\n@tailwind utilities;\n```\n\nRight away you'll notice the default HTML has some broken styles because `--color-gray-950` doesn't have a fallback value:\n\n<details>\n\nhttps://play.tailwindcss.com/lAycX1oWGq?file=css\n\n<img width=\"1217\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0c0f7ef2-cb22-4a61-a1d9-2ba3fdd43a9a\" />\n\n</details>\n\nHere's another example where `--breakpoint-sm` doesn't have a fallback value:\n\n<details>\n\nhttps://play.tailwindcss.com/bbX2smHCx6?layout=horizontal\n\n<img width=\"1233\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/eeb2b74e-03f6-4da5-be9d-a0af2eda4c4b\" />\n\n</details>","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17761","RelatedDescription":"Open issue \"`@reference` misses some fallback values\" (#17761)"},{"Id":"3014496182","IsPullRequest":false,"CreatedAt":"2025-04-23T17:02:41","Actor":"ItzPabz","Number":"17758","RawContent":null,"Title":"EEXIST when running tailwindcss-windows-x64.exe","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.14\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nUsing standalone `tailwindcss-windows-x64.exe` on a Django project.\n\n**What version of Node.js are you using?**\n\nN/A\n\n**What browser are you using?**\n\nEdge \n\n**What operating system are you using?**\n\nWindows 11\n\n**Reproduction URL**\n\nN/A - No issue with the project simply the tailwind standalone exe.\n\n**Describe your issue**\n```\nC:\\Users\\pabz\\OneDrive\\Desktop\\BountryTracker-Rust\\src\\static\\css>tailwindcss.exe -i input.css -o output.css --watch\nEEXIST: file already exists, mkdir 'C:\\Users\\pabz\\OneDrive\\Desktop\\BountryTracker-Rust\\src\\static\\css'\n    path: \"C:\\\\Users\\\\pabz\\\\OneDrive\\\\Desktop\\\\BountryTracker-Rust\\\\src\\\\static\\\\css\",\n syscall: \"mkdir\",\n   errno: -17,\n    code: \"EEXIST\"\n\n\nBun v1.2.8 (Windows x64 baseline)\n```\n\nWhen attempting to run the standalone tailwind file using my input.css which can be seen below. My system throws a `errno: -17` with `code: \"EEXIST\"` (see above for exact output and command ran). I have attempted to run this in several new projects and have ran the executable in both PowerShell and Command Prompt. \n\n\n**`input.css` contents**\n```\n@import \"tailwindcss\" source(none);\n@source \"../../templates\";\n```\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17758","RelatedDescription":"Closed issue \"EEXIST when running tailwindcss-windows-x64.exe\" (#17758)"},{"Id":"3014619515","IsPullRequest":false,"CreatedAt":"2025-04-23T16:33:50","Actor":"eneroth","Number":"17760","RawContent":null,"Title":"Candidate extraction from Clojure/Script files sometimes produce false negatives","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\npostcss-cli 11.0.1\n\n**What version of Node.js are you using?**\n\nv23.11.0\n\n**What browser are you using?**\n\nChrome, Safari, Firefox\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://github.com/tailwindlabs/tailwindcss/pull/17087\n\n<img width=\"524\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/6b8128f4-1f3d-463f-8553-a2154ff0b868\" />\n\n**Describe your issue**\n\nFirst of all, a huge thank you for including Clojure.\n\nThe issue stems from classes written as keywords that contain fractions.  For example,\n\n```clojure\n($ :div {:class [:flex :gap-1.5 :p-1]} …)\n```\n\nIn this case, the candidates extracted from `:gap-1.5` seem to be `:gap-1` and `5`, which will end up not matching any class present in the compiled HTML: `<div class=\"flex gap-1.5 p-1\">…</div>`.\n\nA suggested \"good enough\" solution is to, in addition to considering the keyword when broken down by period (`.`) separation, additionally consider the whole string as a candidate. I.e. such that it goes from considering the candidates,\n\n```clojure\n[\"gap-1\" \"5\"]\n```\n\nTo\n\n```clojure\n[\"gap-1\" \"5\" \"gap-1.5\"]\n```\n\nThis may end up producing some valid classes which are not actually present in the code (`gap-1` in this case), but is still preferable, as it trades precision for accuracy.\n\nAnother, more elaborate solution would be to join candidates pair-wise and accept them iff they produce a valid class. Eg., the candidates `[\"gap-1\" \"5\" \"p-1\"]` are extracted. When the first pair is joined with `.`, they produce the candidate `gap-1.5`, which is therefore accepted in place of the previous two candidates, producing `[\"gap-1.5\" \"p-1\"]`. In the next iteration, the join produces `[\"gap-1.5.p-1\"]`, which is nonsense, and is therefore rejected.\n\nMore discussion can be found towards the end of https://github.com/tailwindlabs/tailwindcss/pull/17087.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17760","RelatedDescription":"Open issue \"Candidate extraction from Clojure/Script files sometimes produce false negatives\" (#17760)"},{"Id":"3011562247","IsPullRequest":true,"CreatedAt":"2025-04-23T13:15:10","Actor":"depfu[bot]","Number":"17745","RawContent":null,"Title":"Update @emnapi/wasi-threads 1.0.1 → 1.0.2 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​emnapi/wasi-threads (1.0.1 → 1.0.2) · [Repo](https://github.com/toyobayashi/emnapi)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17745","RelatedDescription":"Closed or merged PR \"Update @emnapi/wasi-threads 1.0.1 → 1.0.2 (patch)\" (#17745)"},{"Id":"3011614349","IsPullRequest":true,"CreatedAt":"2025-04-23T13:15:09","Actor":"depfu[bot]","Number":"17747","RawContent":null,"Title":"Update @emnapi/core 1.4.0 → 1.4.3 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​emnapi/core (1.4.0 → 1.4.3) · [Repo](https://github.com/toyobayashi/emnapi)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/toyobayashi/emnapi/releases/tag/v1.4.3\">1.4.3</a></h4>\n\n<blockquote><h2 dir=\"auto\">What's Changed</h2>\n<ul dir=\"auto\">\n<li>update @emnapi/wasi-threads@1.0.2 in the package.json dependency of @emnapi/core</li>\n</ul>\n<p dir=\"auto\"><strong>Full Changelog</strong>: <a href=\"https://bounce.depfu.com/github.com/toyobayashi/emnapi/compare/v1.4.2...v1.4.3\"><tt>v1.4.2...v1.4.3</tt></a></p></blockquote>\n<h4><a href=\"https://github.com/toyobayashi/emnapi/releases/tag/v1.4.2\">1.4.2</a></h4>\n\n<blockquote><h2 dir=\"auto\">What's Changed</h2>\n<ul dir=\"auto\">\n<li>fix: check SharedArrayBuffer by <a href=\"https://bounce.depfu.com/github.com/toyobayashi\">@toyobayashi</a> in <a href=\"https://bounce.depfu.com/github.com/toyobayashi/emnapi/pull/144\">#144</a>\n</li>\n</ul>\n<p dir=\"auto\"><strong>Full Changelog</strong>: <a href=\"https://bounce.depfu.com/github.com/toyobayashi/emnapi/compare/v1.4.1...v1.4.2\"><tt>v1.4.1...v1.4.2</tt></a></p></blockquote>\n<h4><a href=\"https://github.com/toyobayashi/emnapi/releases/tag/v1.4.1\">1.4.1</a></h4>\n\n<blockquote><h2 dir=\"auto\">What's Changed</h2>\n<ul dir=\"auto\">\n<li>add checks for message channel usage in web runtime by <a href=\"https://bounce.depfu.com/github.com/gvkhna\">@gvkhna</a> in <a href=\"https://bounce.depfu.com/github.com/toyobayashi/emnapi/pull/142\">#142</a>\n</li>\n</ul>\n<h2 dir=\"auto\">New Contributors</h2>\n<ul dir=\"auto\">\n<li>\n<a href=\"https://bounce.depfu.com/github.com/gvkhna\">@gvkhna</a> made their first contribution in <a href=\"https://bounce.depfu.com/github.com/toyobayashi/emnapi/pull/142\">#142</a>\n</li>\n</ul>\n<p dir=\"auto\"><strong>Full Changelog</strong>: <a href=\"https://bounce.depfu.com/github.com/toyobayashi/emnapi/compare/v1.4.0...v1.4.1\"><tt>v1.4.0...v1.4.1</tt></a></p></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/@emnapi%2Fcore/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/toyobayashi/emnapi/compare/906d8a6505605b27d1a4ddd78c1ede59df0d1e09...90c4c1b1358851d401dd162c5d1925a2dcb2e397\">See the full diff on Github</a>. The new version differs by 5 commits:</p>\n<ul>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/90c4c1b1358851d401dd162c5d1925a2dcb2e397\"><code>1.4.3</code></a></li>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/051f1dd160b4c9775c5b42e37e60e9777949b381\"><code>1.4.2</code></a></li>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/3ca41ecad570c784c508e830f9a0791983a7a071\"><code>fix: check SharedArrayBuffer (#144)</code></a></li>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/c07e9f67c261056cd05d394b2f006f90a9b03874\"><code>1.4.1</code></a></li>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/0e5e62f7f9f9faf86586a1f1f364e945314d66d6\"><code>add checks for message channel usage in web runtime (#142)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17747","RelatedDescription":"Closed or merged PR \"Update @emnapi/core 1.4.0 → 1.4.3 (patch)\" (#17747)"},{"Id":"3011599565","IsPullRequest":true,"CreatedAt":"2025-04-23T13:15:09","Actor":"depfu[bot]","Number":"17746","RawContent":null,"Title":"Update @emnapi/runtime 1.4.0 → 1.4.3 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​emnapi/runtime (1.4.0 → 1.4.3) · [Repo](https://github.com/toyobayashi/emnapi)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/toyobayashi/emnapi/releases/tag/v1.4.3\">1.4.3</a></h4>\n\n<blockquote><h2 dir=\"auto\">What's Changed</h2>\n<ul dir=\"auto\">\n<li>update @emnapi/wasi-threads@1.0.2 in the package.json dependency of @emnapi/core</li>\n</ul>\n<p dir=\"auto\"><strong>Full Changelog</strong>: <a href=\"https://bounce.depfu.com/github.com/toyobayashi/emnapi/compare/v1.4.2...v1.4.3\"><tt>v1.4.2...v1.4.3</tt></a></p></blockquote>\n<h4><a href=\"https://github.com/toyobayashi/emnapi/releases/tag/v1.4.2\">1.4.2</a></h4>\n\n<blockquote><h2 dir=\"auto\">What's Changed</h2>\n<ul dir=\"auto\">\n<li>fix: check SharedArrayBuffer by <a href=\"https://bounce.depfu.com/github.com/toyobayashi\">@toyobayashi</a> in <a href=\"https://bounce.depfu.com/github.com/toyobayashi/emnapi/pull/144\">#144</a>\n</li>\n</ul>\n<p dir=\"auto\"><strong>Full Changelog</strong>: <a href=\"https://bounce.depfu.com/github.com/toyobayashi/emnapi/compare/v1.4.1...v1.4.2\"><tt>v1.4.1...v1.4.2</tt></a></p></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/@emnapi%2Fruntime/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/toyobayashi/emnapi/compare/906d8a6505605b27d1a4ddd78c1ede59df0d1e09...90c4c1b1358851d401dd162c5d1925a2dcb2e397\">See the full diff on Github</a>. The new version differs by 5 commits:</p>\n<ul>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/90c4c1b1358851d401dd162c5d1925a2dcb2e397\"><code>1.4.3</code></a></li>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/051f1dd160b4c9775c5b42e37e60e9777949b381\"><code>1.4.2</code></a></li>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/3ca41ecad570c784c508e830f9a0791983a7a071\"><code>fix: check SharedArrayBuffer (#144)</code></a></li>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/c07e9f67c261056cd05d394b2f006f90a9b03874\"><code>1.4.1</code></a></li>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/0e5e62f7f9f9faf86586a1f1f364e945314d66d6\"><code>add checks for message channel usage in web runtime (#142)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17746","RelatedDescription":"Closed or merged PR \"Update @emnapi/runtime 1.4.0 → 1.4.3 (patch)\" (#17746)"},{"Id":"3012977173","IsPullRequest":true,"CreatedAt":"2025-04-23T13:15:08","Actor":"depfu[bot]","Number":"17752","RawContent":null,"Title":"Update @napi-rs/wasm-runtime 0.2.8 → 0.2.9 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​napi-rs/wasm-runtime (0.2.8 → 0.2.9) · [Repo](https://github.com/napi-rs/napi-rs)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17752","RelatedDescription":"Closed or merged PR \"Update @napi-rs/wasm-runtime 0.2.8 → 0.2.9 (minor)\" (#17752)"},{"Id":"3011624544","IsPullRequest":true,"CreatedAt":"2025-04-23T13:15:08","Actor":"depfu[bot]","Number":"17748","RawContent":null,"Title":"Update emnapi 1.3.1 → 1.4.3 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this upgrade. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ emnapi (1.3.1 → 1.4.3) · [Repo](https://github.com/toyobayashi/emnapi)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/toyobayashi/emnapi/releases/tag/v1.4.3\">1.4.3</a></h4>\n\n<blockquote><h2 dir=\"auto\">What's Changed</h2>\n<ul dir=\"auto\">\n<li>update @emnapi/wasi-threads@1.0.2 in the package.json dependency of @emnapi/core</li>\n</ul>\n<p dir=\"auto\"><strong>Full Changelog</strong>: <a href=\"https://bounce.depfu.com/github.com/toyobayashi/emnapi/compare/v1.4.2...v1.4.3\"><tt>v1.4.2...v1.4.3</tt></a></p></blockquote>\n<h4><a href=\"https://github.com/toyobayashi/emnapi/releases/tag/v1.4.2\">1.4.2</a></h4>\n\n<blockquote><h2 dir=\"auto\">What's Changed</h2>\n<ul dir=\"auto\">\n<li>fix: check SharedArrayBuffer by <a href=\"https://bounce.depfu.com/github.com/toyobayashi\">@toyobayashi</a> in <a href=\"https://bounce.depfu.com/github.com/toyobayashi/emnapi/pull/144\">#144</a>\n</li>\n</ul>\n<p dir=\"auto\"><strong>Full Changelog</strong>: <a href=\"https://bounce.depfu.com/github.com/toyobayashi/emnapi/compare/v1.4.1...v1.4.2\"><tt>v1.4.1...v1.4.2</tt></a></p></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/emnapi/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/toyobayashi/emnapi/compare/3cb78fbc014e545409b72ef05dc71bd7dbe1c2ee...90c4c1b1358851d401dd162c5d1925a2dcb2e397\">See the full diff on Github</a>. The new version differs by 18 commits:</p>\n<ul>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/90c4c1b1358851d401dd162c5d1925a2dcb2e397\"><code>1.4.3</code></a></li>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/051f1dd160b4c9775c5b42e37e60e9777949b381\"><code>1.4.2</code></a></li>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/3ca41ecad570c784c508e830f9a0791983a7a071\"><code>fix: check SharedArrayBuffer (#144)</code></a></li>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/c07e9f67c261056cd05d394b2f006f90a9b03874\"><code>1.4.1</code></a></li>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/0e5e62f7f9f9faf86586a1f1f364e945314d66d6\"><code>add checks for message channel usage in web runtime (#142)</code></a></li>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/906d8a6505605b27d1a4ddd78c1ede59df0d1e09\"><code>1.4.0</code></a></li>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/0e401531002f370c7c39b236e80b5ffea2a47698\"><code>perf: reduce the overhead of binding function call (#139)</code></a></li>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/e2de33f4f0710221d94e3ecff3d471a7ea80df8a\"><code>build: fix spawning `.bat` on Windows</code></a></li>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/cc4b9aa552d86fafc771d812864ecf80b8619bdd\"><code>update learn-wasm.dev link</code></a></li>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/d5e29301d2c221da8efb499ed17964910524e1ab\"><code>add learn-wasm.dev link</code></a></li>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/b6f4770047055bdbcd1d702a8a269239acac18b0\"><code>test: fix operator delete overload</code></a></li>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/290552d505723fec1c35b3be36634974d20b5944\"><code>refactor: store external value in separated WeakMap (#134)</code></a></li>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/1d6522bc6a32ba890128d02b04c4fdccc99eecb1\"><code>test: build napi version 10</code></a></li>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/19e4e1f0f58c2fc08b57e92fec0c98ab699e9c60\"><code>define version 10 (#133)</code></a></li>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/d58801efc969270184cdf7a8b008ca70879c30f8\"><code>explicitly specify emnapiInit in test</code></a></li>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/f04d2529642ae8620cacdae876959fe54795a3d4\"><code>explicitly specify emnapiInit in documentation</code></a></li>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/fb47cdfb398fe93550177d5da6cd44821ea7e867\"><code>remove deprecated attribute from napi_module_register (#132)</code></a></li>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/22defc354f95735cfc30e8da3ebe4db4af227a3f\"><code>allow napi_delete_reference in basic finalizers (#130)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17748","RelatedDescription":"Closed or merged PR \"Update emnapi 1.3.1 → 1.4.3 (minor)\" (#17748)"},{"Id":"3013138337","IsPullRequest":true,"CreatedAt":"2025-04-23T13:15:07","Actor":"philipp-spiess","Number":"17753","RawContent":null,"Title":"Upgrade wasm related dependencies","State":"closed","Body":"Closes #17752\r\nCloses #17748\r\nCloses #17747\r\nCloses #17746\r\nCloses #17745","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17753","RelatedDescription":"Closed or merged PR \"Upgrade wasm related dependencies\" (#17753)"},{"Id":"3013903173","IsPullRequest":true,"CreatedAt":"2025-04-23T12:49:41","Actor":"philipp-spiess","Number":"17754","RawContent":null,"Title":"PostCSS: Improve error recovery","State":"open","Body":"Closes #17295\r\n\r\nThis commit addresses an issue where the PostCSS plugin would get stuck in an error state when processing files with invalid @apply directives. The fix:\r\n\r\n1. Adds error recovery in the `@apply` directive processor to gracefully handle errors. If an `@apply` directive contains unknown classes, it won't break the remainder of the CSS file anymore and instead just remove the faulty directive and print an error in the console.\r\n2. Prevents the PostCSS plugin from getting stuck in an error states particularly when the error happened inside an `@import`ed CSS files (as these were not registered as dependencies correctly before)\r\n\r\n## Error overlays\r\n\r\nSome frameworks (e.g. Angular 19 or Next.js) handle errors inside PostCSS transforms to render a nice error overlay. This works well and gives immediate feedback that something went wrong. However, even when dependencies are registered before an error is thrown, these frameworks _will not consider changes to these dependencies anymore_ when an error occurs, as you can see in this Next.js example:\r\n\r\nhttps://github.com/user-attachments/assets/985c9dd7-daf8-4628-b4ad-6543ef220954\r\n\r\nTo avoid conditions where errors are not recoverable, this PR makes it so that these overlays will no longer show up in the app and only be logged to the output console. This will need follow-up upstream work before we can revisit this.\r\n\r\n## Test plan\r\n\r\n- Tested with the repro in #17295. The error can now be recovered from.\r\n- Tested with a Next.js app where the issue in the screencast above is now no longer happening.\r\n- Added an integration test for errors in `@import`-ed files\r\n- Added a unit test for the changed `@apply` behavior.\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17754","RelatedDescription":"Open PR \"PostCSS: Improve error recovery\" (#17754)"},{"Id":"3006004938","IsPullRequest":true,"CreatedAt":"2025-04-22T15:10:46","Actor":"RobinMalfait","Number":"17717","RawContent":null,"Title":"Ensure `@tailwindcss/upgrade` runs on Tailwind CSS v4 projects and is idempotent","State":"closed","Body":"This PR ensures that the `@tailwindcss/upgrade` tool works on existing Tailwind CSS v4 projects. This PR also ensures that the upgrade tool is idempotent, meaning that it can be run multiple times and it should result in the same output.\r\n\r\nOne awesome feature this unlocks is that you can run the upgrade tool on your codebase at any time and upgrade classes if you still have some legacy syntaxes, such as `bg-[var(--my-color)]`, in your muscle memory.\r\n\r\nOne small note: If something changed in the first run, re-running will not work immediately because your git repository will not be clean and the upgrade tool requires your git repo to be clean. But once you verified and committed your changes, the upgrade tool will be idempotent.\r\n\r\nIdempotency is guaranteed by ensuring that some migrations are skipped by checking what version of Tailwind CSS you are on _before_ the version is upgraded.\r\n\r\nFor the Tailwind CSS version: We will resolve `tailwindcss` itself to know the _actual_ version that is installed (the one resolved from `node_modules`). Not the one available in your package.json. Your `package.json` could be out of sync if you reverted changes but didn't run `npm install` yet.\r\n\r\nBack to Idempotency:\r\n\r\nFor example, we have migrations where we change the variant order of stacked variants. If we would run these migrations every time you run the upgrade tool then we would be flip-flopping the order every run.\r\n\r\nSee: https://tailwindcss.com/docs/upgrade-guide#variant-stacking-order\r\n\r\nAnother example is where we rename some utilities. For example, we rename:\r\n\r\n| Before      | After       |\r\n| ----------- | ----------- |\r\n| `shadow`    | `shadow-sm` |\r\n| `shadow-sm` | `shadow-xs` |\r\n\r\nNotice how we have `shadow-sm` in both the `before` and `after` column.\r\n\r\nIf we would run the upgrade tool again, then we would eventually migrate your original `shadow` to `shadow-sm` (first run) and then to `shadow-xs` (second run). Which would result in the wrong shadow.\r\n\r\nSee: https://tailwindcss.com/docs/upgrade-guide#renamed-utilities\r\n\r\n---\r\n\r\nThe order of upgrade steps changed a bit as well to make the internals are easier to work with and reason about.\r\n\r\n1. Find CSS files\r\n2. Link JS config files (if you are in a Tailwind CSS v3 project)\r\n3. Migrate the JS config files (if you are in a Tailwind CSS v3 project)\r\n4. Upgrade Tailwind CSS to v4 (or the latest version at that point)\r\n5. Migrate the stylesheets (we used to migrate the source files first)\r\n6. Migrate the source files\r\n\r\nThis is done so that step 5 and 6 will always operate on a Tailwind CSS v4 project and we don't need to check the version number again. This is also necessary because your CSS file will now very likely contain `@import \"tailwindcss\";` which doesn't exist in Tailwind CSS v3.\r\n\r\nThis also means that we can rely on the same internals that Tailwind CSS actually uses for locating the source files. We will use `@tailwindcss/oxide`'s scanner to find the source files (and it also keeps your custom `@source` directives into account).\r\n\r\nThis PR also introduces a few actual migrations related to recent features and changes we shipped.\r\n\r\n1. We migrate deprecated classes to their new names:\r\n\r\n   | Before                | After                 |\r\n   | --------------------- | --------------------- |\r\n   | `bg-left-top`         | `bg-top-left`         |\r\n   | `bg-left-bottom`      | `bg-bottom-left`      |\r\n   | `bg-right-top`        | `bg-top-right`        |\r\n   | `bg-right-bottom`     | `bg-bottom-right`     |\r\n   | `object-left-top`     | `object-top-left`     |\r\n   | `object-left-bottom`  | `object-bottom-left`  |\r\n   | `object-right-top`    | `object-top-right`    |\r\n   | `object-right-bottom` | `object-bottom-right` |\r\n\r\n   Introduced in:\r\n\r\n   - https://github.com/tailwindlabs/tailwindcss/pull/17378\r\n   - https://github.com/tailwindlabs/tailwindcss/pull/17437\r\n\r\n2. We migrate simple arbitrary variants to their dedicated variant:\r\n\r\n   | Before                  | After               |\r\n   | ----------------------- | ------------------- |\r\n   | `[&:user-valid]:flex`   | `user-valid:flex`   |\r\n   | `[&:user-invalid]:flex` | `user-invalid:flex` |\r\n\r\n   Introduced in:\r\n\r\n   - https://github.com/tailwindlabs/tailwindcss/pull/12370\r\n\r\n3. We migrate `@media` variants to their dedicated variant:\r\n\r\n   | Before                                                | After                     |\r\n   | ----------------------------------------------------- | ------------------------- |\r\n   | `[@media_print]:flex`                                 | `print:flex`              |\r\n   | `[@media(prefers-reduced-motion:no-preference)]:flex` | `motion-safe:flex`        |\r\n   | `[@media(prefers-reduced-motion:reduce)]:flex`        | `motion-reduce:flex`      |\r\n   | `[@media(prefers-contrast:more)]:flex`                | `contrast-more:flex`      |\r\n   | `[@media(prefers-contrast:less)]:flex`                | `contrast-less:flex`      |\r\n   | `[@media(orientation:portrait)]:flex`                 | `portrait:flex`           |\r\n   | `[@media(orientation:landscape)]:flex`                | `landscape:flex`          |\r\n   | `[@media(forced-colors:active)]:flex`                 | `forced-colors:flex`      |\r\n   | `[@media(inverted-colors:inverted)]:flex`             | `inverted-colors:flex`    |\r\n   | `[@media(pointer:none)]:flex`                         | `pointer-none:flex`       |\r\n   | `[@media(pointer:coarse)]:flex`                       | `pointer-coarse:flex`     |\r\n   | `[@media(pointer:fine)]:flex`                         | `pointer-fine:flex`       |\r\n   | `[@media(any-pointer:none)]:flex`                     | `any-pointer-none:flex`   |\r\n   | `[@media(any-pointer:coarse)]:flex`                   | `any-pointer-coarse:flex` |\r\n   | `[@media(any-pointer:fine)]:flex`                     | `any-pointer-fine:flex`   |\r\n   | `[@media(scripting:none)]:flex`                       | `noscript:flex`           |\r\n\r\n   The new variants related to `inverted-colors`, `pointer`, `any-pointer` and `scripting` were introduced in:\r\n\r\n   - https://github.com/tailwindlabs/tailwindcss/pull/11693\r\n   - https://github.com/tailwindlabs/tailwindcss/pull/16946\r\n   - https://github.com/tailwindlabs/tailwindcss/pull/11929\r\n   - https://github.com/tailwindlabs/tailwindcss/pull/17431\r\n\r\n   This also applies to the `not` case, e.g.:\r\n\r\n   | Before                                                    | After                         |\r\n   | --------------------------------------------------------- | ----------------------------- |\r\n   | `[@media_not_print]:flex`                                 | `not-print:flex`              |\r\n   | `[@media_not(prefers-reduced-motion:no-preference)]:flex` | `not-motion-safe:flex`        |\r\n   | `[@media_not(prefers-reduced-motion:reduce)]:flex`        | `not-motion-reduce:flex`      |\r\n   | `[@media_not(prefers-contrast:more)]:flex`                | `not-contrast-more:flex`      |\r\n   | `[@media_not(prefers-contrast:less)]:flex`                | `not-contrast-less:flex`      |\r\n   | `[@media_not(orientation:portrait)]:flex`                 | `not-portrait:flex`           |\r\n   | `[@media_not(orientation:landscape)]:flex`                | `not-landscape:flex`          |\r\n   | `[@media_not(forced-colors:active)]:flex`                 | `not-forced-colors:flex`      |\r\n   | `[@media_not(inverted-colors:inverted)]:flex`             | `not-inverted-colors:flex`    |\r\n   | `[@media_not(pointer:none)]:flex`                         | `not-pointer-none:flex`       |\r\n   | `[@media_not(pointer:coarse)]:flex`                       | `not-pointer-coarse:flex`     |\r\n   | `[@media_not(pointer:fine)]:flex`                         | `not-pointer-fine:flex`       |\r\n   | `[@media_not(any-pointer:none)]:flex`                     | `not-any-pointer-none:flex`   |\r\n   | `[@media_not(any-pointer:coarse)]:flex`                   | `not-any-pointer-coarse:flex` |\r\n   | `[@media_not(any-pointer:fine)]:flex`                     | `not-any-pointer-fine:flex`   |\r\n   | `[@media_not(scripting:none)]:flex`                       | `not-noscript:flex`           |\r\n\r\nFor each candidate, we run a set of upgrade migrations. If at the end of the migrations the original candidate is still the same as the new candidate, then we will parse & print the candidate one more time to pretty print into consistent classes. Luckily parsing is cached so there is no real downside overhead.\r\n\r\nConsistency (especially with arbitrary variants and values) will reduce your CSS file because there will be fewer \"versions\" of your class.\r\n\r\nConcretely, the pretty printing will apply changes such as:\r\n\r\n| Before                 | After             |\r\n| ---------------------- | ----------------- |\r\n| `bg-[var(--my-color)]` | `bg-(--my-color)` |\r\n| `bg-[rgb(0,_0,_0)]`    | `bg-[rgb(0,0,0)]` |\r\n\r\nAnother big important reason for this change is that these classes on their own\r\nwould have been migrated _if_ another migration was relevant for this candidate.\r\nThis means that there are were some inconsistencies. E.g.:\r\n\r\n| Before                  | After                  | Reason                               |\r\n| ----------------------- | ---------------------- | ------------------------------------ |\r\n| `!bg-[var(--my-color)]` | `bg-(--my-color)!`     | Because the `!` is in the wrong spot |\r\n| `bg-[var(--my-color)]`  | `bg-[var(--my-color)]` | Because no migrations rand           |\r\n\r\nAs you can see, the way the `--my-color` variable is used, is different. This\r\nchanges will make sure it will now always be consistent:\r\n| Before | After |\r\n| ----------------------- | ---------------------- |\r\n| `!bg-[var(--my-color)]` | `bg-(--my-color)!` |\r\n| `bg-[var(--my-color)]` | `bg-(--my-color)` |\r\n\r\nYay!\r\n\r\nOf course, if you don't want these more cosmetic changes, you can always ignore the upgrade and revert these changes and only commit the changes you want.\r\n\r\n# Test plan\r\n\r\n- All existing tests still pass.\r\n  - But I had to delete 1 test (we tested that Tailwind CSS v3 was required).\r\n  - And had to mock the `version.isMajor` call to ensure we run the individual migration tests correctly.\r\n- Added new tests to test:\r\n  1. Migrating Tailwind CSS v4 projects works\r\n  1. Idempotency of the upgrade tool\r\n\r\n[ci-all]","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17717","RelatedDescription":"Closed or merged PR \"Ensure `@tailwindcss/upgrade` runs on Tailwind CSS v4 projects and is idempotent\" (#17717)"},{"Id":"3004451016","IsPullRequest":true,"CreatedAt":"2025-04-22T14:53:11","Actor":"RobinMalfait","Number":"17711","RawContent":null,"Title":"Ignore `.db` files by default","State":"closed","Body":"This PR ignores `.db` files by default. We already ignored `.sqlite` and `.sqlite3` files but we didn't ignore `.db` files which is a common extension for database files as well.\r\n\r\nDue to the binary nature of `.db` files, scanning these could result in hard to debug errors such as:\r\n\r\n![image](https://github.com/user-attachments/assets/52f779ac-cd5f-4f37-9615-2163bf852999)\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17711","RelatedDescription":"Closed or merged PR \"Ignore `.db` files by default\" (#17711)"},{"Id":"3008509564","IsPullRequest":true,"CreatedAt":"2025-04-22T14:02:28","Actor":"thecrypticace","Number":"17733","RawContent":null,"Title":"Handle legacy key behavior in theme-driven suggestions for `@utility`","State":"closed","Body":"Fixes https://github.com/tailwindlabs/tailwindcss-intellisense/issues/1328\r\n\r\nThe alpha and beta releases used `_` in theme keys to represent a `.`. This meant we used `--leading-1_5` instead of `--leading-1\\.5` to add utilities like `leading-1.5`. We prefer the use of the escaped dot now but still want to make sure suggestions for the legacy key format still works as expected when surrounded by numbers.\r\n\r\nThis is the same as #16433 but for `@utility` since we apparently missed this when emitting suggestions for it\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17733","RelatedDescription":"Closed or merged PR \"Handle legacy key behavior in theme-driven suggestions for `@utility`\" (#17733)"},{"Id":"3011086436","IsPullRequest":true,"CreatedAt":"2025-04-22T13:30:20","Actor":"thecrypticace","Number":"17743","RawContent":null,"Title":"Hide default shadow suggestions when missing theme keys","State":"closed","Body":"Right now if you have a completely empty theme we'll still suggest `shadow`, `inset-shadow`, and `text-shadow` as utilities even tho they won't exist. This fixes this by checking for the theme key when computing the suggestions.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17743","RelatedDescription":"Closed or merged PR \"Hide default shadow suggestions when missing theme keys\" (#17743)"},{"Id":"3010602724","IsPullRequest":false,"CreatedAt":"2025-04-22T10:11:01","Actor":"shivankacker","Number":"17741","RawContent":null,"Title":"Variables not being read after loading tailwind inside a container","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.1.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite v6.2.6\n\n**What version of Node.js are you using?**\n\nFor example: v22.14.0\n\n**What browser are you using?**\n\nChrome (Arc)\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nA Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\n\nA reproduction is **required** when filing an issue — any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.\n\n**Describe your issue**\n\nI am trying to import tailwind inside a container, as we are using multiple versions of tailwind through a plugin system. (module federation)\n\nThis is how I am importing tailwind\n\n```\n.plugin-container {\n  @import \"tailwindcss\";\n}\n```\n\nWhich seems to work fine, except that tailwind variables are not working after build.\nWhen I checked the css file that got built, I see\n\n```\n@layer theme{\n.plugin-container :root,.plugin-container :host{........\n```\n\nwhich seems to be causing this issue, as `.plugin-container :root` is invalid. Removing the `:root` here makes everything work fine.\n\n\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17741","RelatedDescription":"Closed issue \"Variables not being read after loading tailwind inside a container\" (#17741)"},{"Id":"3009132890","IsPullRequest":true,"CreatedAt":"2025-04-22T08:54:45","Actor":"depfu[bot]","Number":"17738","RawContent":null,"Title":"Update @types/react 19.0.12 → 19.1.2 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​types/react (19.0.12 → 19.1.2) · [Repo](https://github.com/DefinitelyTyped/DefinitelyTyped)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17738","RelatedDescription":"Closed or merged PR \"Update @types/react 19.0.12 → 19.1.2 (minor)\" (#17738)"},{"Id":"3007177271","IsPullRequest":false,"CreatedAt":"2025-04-22T08:46:36","Actor":"iquito","Number":"17723","RawContent":null,"Title":"Form placeholders are not at 50% opacity for Firefox","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.1.4\n\n**What browser are you using?**\n\nFirefox 128.9.0esr\n\n**What operating system are you using?**\n\nDebian Linux with KDE\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/lBgTaFFT1a\n\n**Describe your issue**\n\nIn Firefox placeholders in input elements are not at 50% opacity, they are shown in the regular text color. On Chrome/Chromium the opacity works. This seems to have changed since the initial v4 release, where opacity worked in Firefox too, and is likely because of this in the base layer:\n\n```css\n::placeholder {\n  opacity: 1;\n}\n@supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {\n  ::placeholder {\n    color: currentcolor;\n    @supports (color: color-mix(in lab, red, red)) {\n      color: color-mix(in oklab, currentcolor 50%, transparent);\n    }\n  }\n}\n```\n\nIt seems the `@supports` inside the first `@supports` is not understood by Firefox and not applied.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17723","RelatedDescription":"Closed issue \"Form placeholders are not at 50% opacity for Firefox\" (#17723)"},{"Id":"3007352623","IsPullRequest":false,"CreatedAt":"2025-04-22T08:21:51","Actor":"kocv59","Number":"17726","RawContent":null,"Title":"Reliable order for utilities","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nwebpack 5.98.0\npostcss 8.5.3\npostcss-loader 8.1.1\n\n**What version of Node.js are you using?**\n\nv20.19.0\n\n**What browser are you using?**\n\nChrome\n\n**Describe your issue**\n\nV4 order of utilities changed. V3 put w-full before other w- utilities so an element could have w-full by default and adding a different w- would override it **without having to remove w-full** which makes simpler code.\n\nNow w-full is last so it doesn't work and breaking layouts. People relied on old order without realizing it isn't meant to be relied on. So it's still a breaking change and it should be part of upgrade guide.\n\nNumbered utilities like these should be added to css file in reliable order. Biggest to smallest makes more sense because smaller is usually used in overriding. But opposite is fine too but it should be consistent and documented.\n\nThen we can use power of css to override by adding classes where it can be done and only remove the old class when it has to be done. Without reliable order the old class always has to be removed.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17726","RelatedDescription":"Closed issue \"Reliable order for utilities\" (#17726)"},{"Id":"3010323780","IsPullRequest":false,"CreatedAt":"2025-04-22T08:21:15","Actor":"Wroud","Number":"17739","RawContent":null,"Title":"No classes generated in monorepo setup with Yarn PnP","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.8 / v4.1+\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.1+\n\n**What version of Node.js are you using?**\n\nv22\n\n**What browser are you using?**\n\nChrome latest\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://github.com/Wroud/tailwindcss-yarn-pnp\n\n**Describe your issue**\n\nI think that this problem is because yarn pnp doesn't use real file system paths, insted it will be something like:\n```\n/Users/user/Documents/working-repo/.yarn/__virtual__/@wroud-vite-plugin-playground-virtual-7ef94fc781/1/packages/@wroud/vite-plugin-playground/src/app/components/Layout.css\n```\n\n`@source` also doesn't work (before v4.1 version it's possible to use absolute paths, but they also not work after v4.1)\n\nthis setup works well on 4.0.7 version and broken after https://github.com/tailwindlabs/tailwindcss/commit/88b762b5393998078d8be523e1c232d7f9bd62bc#diff-00d01a2d38f5f4253651cf9811eab1182c96f0307e78c567b803416e24b98165","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17739","RelatedDescription":"Open issue \"No classes generated in monorepo setup with Yarn PnP\" (#17739)"},{"Id":"3007181964","IsPullRequest":false,"CreatedAt":"2025-04-21T07:32:35","Actor":"evgeniyworkbel","Number":"17724","RawContent":null,"Title":"@import url(\"tailwindcss\") is not worked, only @import 'tailwindcss'","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n v4.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\nreact@18.3, vite@5.3.1, @tailwindcss/vite@4.1.4\n\n**What version of Node.js are you using?**\nv20.14.0\n\n**What browser are you using?**\nChrome 135.0.7049.96 \n\n**What operating system are you using?**\nmacOS\n\n**Reproduction URL**\nhttps://stackblitz.com/edit/tailwind-4-import-url-is-not-working?file=vite.config.ts\n\n**Describe your issue**\nDefining tw styles import @import url(\"tailwindcss\") is not worked, only @import 'tailwindcss' working\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17724","RelatedDescription":"Closed issue \"@import url(\"tailwindcss\") is not worked, only @import 'tailwindcss'\" (#17724)"},{"Id":"3007763227","IsPullRequest":false,"CreatedAt":"2025-04-21T07:11:25","Actor":"kyrylo","Number":"17728","RawContent":null,"Title":"Styles aren't generated when building a Docker image for ARM64 on a 2019 Intel MacBook Pro","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nRails 8.0.2\n\n**What version of Node.js are you using?**\n\n-\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS -> ARM64\n\n**Describe your issue**\n\nI've prepared detailed steps you can follow.\n\n1. I'm on a MacBook Pro 2019 (Intel):\n   ```\n   % arch\n   i386\n\n   % uname\n   Darwin\n   ```\n2. Generate a new Rails 8 app with Tailwind enabled ([zip attached](https://github.com/user-attachments/files/19773720/TailwindOnARM.zip)):\n   ```\n   rails new TailwindOnARM --css tailwind\n   ```\n3. Scaffold a resource that uses Tailwind classes:\n   ```\n   rails g scaffold Post\n   ```\n4. Start the dev server and check that Tailwind styling is applied (https://localhost:3000/posts):\n   ```\n   bin/dev\n   ```\n   \n   <img width=\"843\" alt=\"Screenshot 2025-04-16 at 11 44 38 AM\" src=\"https://github.com/user-attachments/assets/1629ee36-58bf-45fd-80ec-0102de96e7fa\" />\n\n5. Build and push a Docker image for ARM64:\n   ```\n   docker buildx build --platform linux/arm64 -t kyrylo/tailwind-on-arm:latest --push .\n   ```\n6. On an ARM server (I use Hetzner CAX11), install Docker, then run the image:\n   ```\n   docker run -d -p 80:80 -e RAILS_MASTER_KEY=90279f1e5d289cb437ba0c2f959a2ea5 --name tailwind_on_arm kyrylo/tailwind-on-arm\n   ```\n7. Check the result at `http://<IP-ADDRESS>/posts` and notice that Tailwind styling is not applied:\n   | Screenshot | application.css |\n   |------------|-----------------|\n   | <img width=\"843\" alt=\"Screenshot 2025-04-16 at 11 44 53 AM\" src=\"https://github.com/user-attachments/assets/3146703d-df20-4a24-a566-96e325df2723\" /> | <img width=\"790\" alt=\"Screenshot 2025-04-16 at 11 49 39 AM\" src=\"https://github.com/user-attachments/assets/1da77e59-d900-4730-8400-2c70fe2fccec\" /> |\n   \n---\n\nI'm happy to help debug this further. You can pull my image from Docker Hub so you don't have to build it yourself. ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17728","RelatedDescription":"Open issue \"Styles aren't generated when building a Docker image for ARM64 on a 2019 Intel MacBook Pro\" (#17728)"},{"Id":"3004768297","IsPullRequest":false,"CreatedAt":"2025-04-18T13:26:57","Actor":"muchenkezhan","Number":"17714","RawContent":null,"Title":"@apply Is it abandoned in v4","State":"closed","Body":"```\n<template>\n  <div class=\"f-header\">\n\n  </div>\n</template>\n\n<script setup>\n\n</script>\n\n<style lang=\"scss\" scoped>\n.f-header {\n  @apply flex shadow-sm items-center bg-white pl-3 pr-3;\n  height: 60px;\n}\n</style>\n\n```\nError message：\n```\n19:34:07 [vite] hmr update /src/views/markdown/components/header.vue?vue&type=style&index=0&scoped=23126ab5&lang.scss\n19:34:07 [vite] Internal server error: [postcss] [postcss] Cannot apply unknown utility class: shadow-sm\n  Plugin: vite:css\n  File: F:/my-vue/bird_markdown_vue/bird_mardown/src/views/markdown/components/header.vue?vue&type=style&index=0&scoped=23126ab5&lang.scss:undefined:NaN\n      at onInvalidCandidate (F:\\my-vue\\bird_markdown_vue\\bird_mardown\\node_modules\\tailwindcss\\dist\\lib.js:20:348)\n      at me (F:\\my-vue\\bird_markdown_vue\\bird_mardown\\node_modules\\tailwindcss\\dist\\lib.js:15:29596)\n      at De (F:\\my-vue\\bird_markdown_vue\\bird_mardown\\node_modules\\tailwindcss\\dist\\lib.js:20:311)\n      at si (F:\\my-vue\\bird_markdown_vue\\bird_mardown\\node_modules\\tailwindcss\\dist\\lib.js:36:784)\n      at async ui (F:\\my-vue\\bird_markdown_vue\\bird_mardown\\node_modules\\tailwindcss\\dist\\lib.js:36:1079)\n      at async Cr (F:\\my-vue\\bird_markdown_vue\\bird_mardown\\node_modules\\@tailwindcss\\node\\dist\\index.js:12:3305)\n      at async $ (F:\\my-vue\\bird_markdown_vue\\bird_mardown\\node_modules\\@tailwindcss\\postcss\\dist\\index.js:10:3320)\n      at async Object.Once (F:\\my-vue\\bird_markdown_vue\\bird_mardown\\node_modules\\@tailwindcss\\postcss\\dist\\index.js:10:3596)\n      at async LazyResult.runAsync (F:\\my-vue\\bird_markdown_vue\\bird_mardown\\node_modules\\postcss\\lib\\lazy-result.js:293:11)\n      at async compileCSS (file:///F:/my-vue/bird_markdown_vue/bird_mardown/node_modules/vite/dist/node/chunks/dep-DkOS1hkm.js:32271:25)\n\n```\n\nvite +vue3","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17714","RelatedDescription":"Closed issue \"@apply Is it abandoned in v4\" (#17714)"},{"Id":"3004689941","IsPullRequest":false,"CreatedAt":"2025-04-18T10:50:13","Actor":"bronisMateusz","Number":"17713","RawContent":null,"Title":"Group not working with ARIA states","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.3.0\n\n**What version of Node.js are you using?**\n\nv20.19.0\n\n**What browser are you using?**\n\nARC, but that doesn't matter here\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/D247HaVE3L\n\n**Describe your issue**\n\nAccording to documentation: https://tailwindcss.com/docs/hover-focus-and-other-states#aria-states, my code should working, but it's not. Inspecting bars with browser dev tools, we can see empty generated classes:\n\n![Image](https://github.com/user-attachments/assets/59277fc9-0367-4805-b686-fc1bf15dff18)\n\nAfter inspecting more, we see produced code, which not working:\n```css\n  .group-aria-expanded\\:-translate-y-1\\.5 {\n    &:is(:where(.group)[aria-expanded=\"true\"] *) {\n      --tw-translate-y: calc(var(--spacing) * -1.5);\n      translate: var(--tw-translate-x) var(--tw-translate-y);\n    }\n  }\n  .group-aria-expanded\\:translate-y-1\\.5 {\n    &:is(:where(.group)[aria-expanded=\"true\"] *) {\n      --tw-translate-y: calc(var(--spacing) * 1.5);\n      translate: var(--tw-translate-x) var(--tw-translate-y);\n    }\n  }\n  .group-aria-expanded\\:-rotate-45 {\n    &:is(:where(.group)[aria-expanded=\"true\"] *) {\n      rotate: calc(45deg * -1);\n    }\n  }\n  .group-aria-expanded\\:rotate-45 {\n    &:is(:where(.group)[aria-expanded=\"true\"] *) {\n      rotate: 45deg;\n    }\n  }\n  .group-aria-expanded\\:opacity-0 {\n    &:is(:where(.group)[aria-expanded=\"true\"] *) {\n      opacity: 0%;\n    }\n  }\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17713","RelatedDescription":"Closed issue \"Group not working with ARIA states\" (#17713)"},{"Id":"3002430825","IsPullRequest":false,"CreatedAt":"2025-04-18T09:03:29","Actor":"StephanBis","Number":"17710","RawContent":null,"Title":"New Angular installation fails to serve","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?** \n\nv4.1.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nAngular v18.2.1 (but same behaviour on v19.x)\n\n**What version of Node.js are you using?**\n\nv22.13.1 (same issue on v22.14.0)\n\n**What browser are you using?**\n\nChrome v135.x.x\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n[GitHub repo](https://github.com/StephanBis/tailwind-issue-repro). `npm install` won't work as you need to use `npm install tailwindcss @tailwindcss/postcss postcss --force` described in step 2 of the official guide.\n\n**Describe your issue**\n\nWhen exactly following the official guide ([https://tailwindcss.com/docs/installation/framework-guides/angular](https://tailwindcss.com/docs/installation/framework-guides/angular)) to install Tailwind with Angular, step 5 (`ng serve`) fails with the following error: \n```\nAn unhandled exception occurred: Unexpected token '﻿', \"﻿{\n  \"plu\"... is not valid JSON\nSee \"C:\\Users\\xxx\\AppData\\Local\\Temp\\ng-cnJxrA\\angular-errors.log\" for further details.\n```\n\nWe first tried it in an existing Angular project which is running v19.x but it gave the same error. Afterwards we tried it with a completely new project by following the official guide.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17710","RelatedDescription":"Closed issue \"New Angular installation fails to serve\" (#17710)"},{"Id":"2999764840","IsPullRequest":false,"CreatedAt":"2025-04-18T08:46:34","Actor":"emaia","Number":"17699","RawContent":null,"Title":"Vite is very slow if a large GeoJson file is in the backend folder","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.4 (the problem starts from 4.0.10)\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nLaravel 12, Vite ^6.2.4,  @tailwindcss/vite ^4.1.4\n\n**What version of Node.js are you using?**\n\nv20.9.0 | v22.14.0\n\n**What operating system are you using?**\n```\nSystem:\n    OS: Linux 5.15 Ubuntu 24.04.2 LTS 24.04.2 LTS (Noble Numbat)\n    CPU: (32) x64 AMD Ryzen 9 5950X 16-Core Processor\n    Memory: 6.89 GB / 14.63 GB\n    Container: Yes\n    Shell: 5.9 - /usr/bin/zsh\n  Binaries:\n    Node: 22.14.0 - ~/.nvm/versions/node/v22.14.0/bin/node\n    npm: 10.9.2 - ~/.nvm/versions/node/v22.14.0/bin/npm\n    bun: 1.2.9 - ~/.bun/bin/bun\n  npmPackages:\n    vite: ^6.2.4 => 6.2.6\n```\n\n**Reproduction URL**\n\nhttps://github.com/emaia/laravel/tree/vite-bug\n\n**Describe your issue**\n\nI'm working on a Laravel project that uses Vite. Everything was working great, but after adding a GeoJson file in a backend folder, Vite started running very slowly. Build runs changed from 400ms to 1m17s. Dev is also very slow.\n\nThis GeoJson file is unrelated to the frontend stuff and not referenced by any JS/CSS code.\n\nSteps to reproduce\n\n- Clone the repo https://github.com/emaia/laravel/tree/vite-bug\n(It's just a fork from laravel/laravel + 19mb geojson file)\n- npm install, npm run build (runs slow)\n- Delete the file database/seeders/payload/limites_munic_rj.geojson and rerun build. It runs fast.\n- If revert `@tailwindcss/vite to 4.0.9` or change css to `import 'tailwindcss' source(none);` it runs fast.\n- Starting from @tailwindcss/vite v4.0.10, something happens.\n\n_Originally posted by @emaia in [#16911](https://github.com/tailwindlabs/tailwindcss/issues/16911#issuecomment-2809550621)_","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17699","RelatedDescription":"Closed issue \"Vite is very slow if a large GeoJson file is in the backend folder\" (#17699)"},{"Id":"2999894881","IsPullRequest":true,"CreatedAt":"2025-04-18T08:46:33","Actor":"adamwathan","Number":"17700","RawContent":null,"Title":"Ignore .geojson files by default","State":"closed","Body":"Resolves https://github.com/tailwindlabs/tailwindcss/issues/17699\r\n\r\nGeoJSON files are giant JSON files for geographic data structures and will never contain Tailwind classes, but because they are often huge they will slow down the build a lot if scanned.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17700","RelatedDescription":"Closed or merged PR \"Ignore .geojson files by default\" (#17700)"},{"Id":"3000926717","IsPullRequest":false,"CreatedAt":"2025-04-17T09:48:02","Actor":"ajaychip","Number":"17703","RawContent":null,"Title":"aspect-[value] fails to render correctly inside flex containers with min-w-0 in Tailwind CSS v3.4+","State":"closed","Body":"name: Bug report\nabout: If you’ve already asked for help with a problem and confirmed something is broken with Tailwind CSS itself, create a bug report.\ntitle: aspect-[value] breaks layout when combined with min-w-0 inside flex containers\nlabels: bug\nassignees:\n\n⸻\n\nWhat version of Tailwind CSS are you using?\nv3.4.1\n\nWhat build tool (or framework if it abstracts the build tool) are you using?\nVite 5.1.0\n\nWhat version of Node.js are you using?\nv20.11.0\n\nWhat browser are you using?\nChrome 123\n\nWhat operating system are you using?\nmacOS Sonoma 14.3\n\nReproduction URL\nhttps://play.tailwindcss.com/Q3aAsYhxse\n\nDescribe your issue\nWhen using aspect-[16/9] or any arbitrary aspect ratio inside a flex container with min-w-0, the element fails to respect the aspect ratio and collapses to height 0 in Chrome. Removing min-w-0 or replacing aspect-[16/9] with a standard aspect-video fixes it, but that limits flexibility.\nThis bug causes layout breaks in responsive components where aspect ratios are needed dynamically.\n\nExpected behavior: The element should maintain its aspect ratio regardless of min-w-0 when aspect-[16/9] is applied.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17703","RelatedDescription":"Closed issue \"aspect-[value] fails to render correctly inside flex containers with min-w-0 in Tailwind CSS v3.4+\" (#17703)"},{"Id":"3001679139","IsPullRequest":false,"CreatedAt":"2025-04-17T07:28:20","Actor":"Nefcanto","Number":"17706","RawContent":null,"Title":"Circular dependency because of index.css","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.2.6\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nDebian GNU/Linux 12 (bookworm)\n\n**Reproduction URL**\n\nhttps://github.com/Nefcanto/TailwindCyclic\n\n**Describe your issue**\n\nWhen I save my `main.jsx` in my Vite + React + Tailwind project, I see this warning:\n\n> vite:hmr circular imports detected: /src/main.jsx -> /src/index.css -> /src/main.jsx\n\nThe `index.css` should not cause cyclic dependency.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17706","RelatedDescription":"Open issue \"Circular dependency because of index.css\" (#17706)"},{"Id":"3001334249","IsPullRequest":false,"CreatedAt":"2025-04-17T07:10:15","Actor":"AmelloAster","Number":"17704","RawContent":null,"Title":"[4.1.4]If I only use the text-xl in class name, seem the --tw-leading will be not defined","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\nv4.1.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nReactV18 webpackV5\n\n**What version of Node.js are you using?**\n\nv20.0.0\n\n**What browser are you using?**\n\nChrome, Safari\n\n**What operating system are you using?**\n\nmacOS\n\n\n**Describe your issue**\n\n![Image](https://github.com/user-attachments/assets/1c2be39f-0529-40d2-9307-6d33d321cb90)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17704","RelatedDescription":"Closed issue \"[4.1.4]If I only use the text-xl in class name, seem the --tw-leading will be not defined\" (#17704)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-04-24T03:30:24.3717493Z","RunDurationInMilliseconds":518}