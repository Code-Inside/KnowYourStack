{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"3084674779","IsPullRequest":false,"CreatedAt":"2025-05-22T22:20:59","Actor":"gremo","Number":"18118","RawContent":null,"Title":"Standalone CLI watch not working in the Docker dev container, but works (albeit with some quirks) on Windows","State":"open","Body":"**Tailwind CSS CLI v4.1.7 Windows 11 x64** seems to work \"fine\". Editing `templates/test/index.html.twig`:\n\n![Tailwind CSS CLI on Windows](https://github.com/user-attachments/assets/c43f0070-d25e-4fb1-889e-8b1ff27d4c50)\n\n1. Add `text-2xl`, the class is added to the output ✅ \n2. Change the class to `font-bold`, the class is added but previous `text-2xl` isn't removed 🛑 \n\nThis is intended behavior — like a kind of history or cache — where previously 'seen' classes are never removed?\n\nThe main issue I'm facing — however — is running **Tailwind CSS CLI in a Docker container Debian 12 (bookworm) x86_64**: isn't working at all, no class is added to the output:\n\n![Tailwind CSS CLI on Docker](https://github.com/user-attachments/assets/3886d04b-d08c-4189-881b-25b8bc154d91)\n\nNode v22.16.0, very basic CSS file:\n\n```css\n// assets/styles/app.css\n@import 'tailwindcss' source(\"../../templates\");\n```\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18118","RelatedDescription":"Open issue \"Standalone CLI watch not working in the Docker dev container, but works (albeit with some quirks) on Windows\" (#18118)"},{"Id":"3083963063","IsPullRequest":true,"CreatedAt":"2025-05-22T16:37:36","Actor":"woohm402","Number":"18115","RawContent":null,"Title":"Fix lowercase+uppercase keys (camelCase/PascalCase) unexpectedly treated to kebab-case when using JavaScript config file","State":"open","Body":"## Summary\r\n\r\nFixes #18114.\r\n\r\nIt Seems in `apply-config-to-theme.ts#keyPathToCssProperty` function the theme key is transformed as:\r\n- `.` is replaced with `-`\r\n- `/([a-z])([A-Z])/` is replaced with `$1-$2.toLowerCase()`\r\n\r\nHowever in `theme.ts#resolve`, when failed to find exact key, it only replaces\r\n- `.` is replaced with `-`\r\n\r\nIt seems the second transformation step is missing in theme.ts#resolve, causing inconsistencies when using camelCase or PascalCase theme keys.\r\n\r\n## Test plan\r\n\r\nAll unit tests pass, including the new test case covering this behavior.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18115","RelatedDescription":"Open PR \"Fix lowercase+uppercase keys (camelCase/PascalCase) unexpectedly treated to kebab-case when using JavaScript config file\" (#18115)"},{"Id":"3083933619","IsPullRequest":false,"CreatedAt":"2025-05-22T16:25:06","Actor":"woohm402","Number":"18114","RawContent":null,"Title":"Utility class name transforms lowercase+uppercase keys (camelCase/PascalCase) to kebab-case unexpectedly when using JavaScript config file","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n`vite@6.2.0` & `@tailwindcss/vite@4.1.7`\n\n**What version of Node.js are you using?**\n\nv20.18.1\n\n**What browser are you using?**\n\nChrome v136.0.7103.114\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nIn my real project I use vite, but for minimal reproduction, I used `@tailwindcss/cli` here.\n\nhttps://github.com/woohm402/bug-reproduction/tree/9479cdf\n\nReproduction guide is written in readme.\n\n**Describe your issue**\n\nWhen using a JavaScript-based config (tailwind.config.js) and defining theme keys that include a lowercase letter followed by an uppercase letter (e.g., lightGreen or LightGreen), the expected utility class (e.g., bg-lightGreen) is not generated. Instead, Tailwind generates bg-light-green, converting the key to kebab-case.\n\n```js\nexport default {\n  content: [\"./index.html\"],\n  theme: {\n    backgroundColor: {\n      lightGreen: \"#94d3a2\",\n    },\n  },\n};\n```\n\n- Expected: bg-lightGreen\n- Actual: bg-light-green\n\n| generated output.css | devtools element tab |\n| --- | --- |\n| ![Image](https://github.com/user-attachments/assets/dd046dfc-ccc5-4e74-a1ae-68e601fa34f2) | ![Image](https://github.com/user-attachments/assets/4fda89f9-fbba-4421-b512-a02afcf05331) |\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18114","RelatedDescription":"Open issue \"Utility class name transforms lowercase+uppercase keys (camelCase/PascalCase) to kebab-case unexpectedly when using JavaScript config file\" (#18114)"},{"Id":"3083270890","IsPullRequest":false,"CreatedAt":"2025-05-22T13:22:17","Actor":"artaommahe","Number":"18111","RawContent":null,"Title":"[v4] Default theme is not disabled when nested under a selector","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.3.5\n\n**What version of Node.js are you using?**\n\nv20.18.1\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\n- open https://play.tailwindcss.com/2Hixf2cxNi?file=css\n- see that `text-amber-200` is included despite `--*: initial`\n\nit works correct when theme/utilities are not nested under a `.new_design` selector.\n\n**Describe your issue**\n\nIm expecting `--*: initial` to disable all (/most) of default tailwind classes, but for some reason it doesn't work in case of nesting the theme under a selector.\nWe have two different tailwind themes on the same page together (old and new design) while slowly migrating to the newest one. To resolve same-tokens conflicts we're nesting the new design theme under a `.new_design` selector (`important: '.new_design'` in js-based config). While migrating to css-based configuration we've noticed that default tailwind theme is not disabled in such setup.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18111","RelatedDescription":"Closed issue \"[v4] Default theme is not disabled when nested under a selector\" (#18111)"},{"Id":"3081660868","IsPullRequest":false,"CreatedAt":"2025-05-22T12:45:45","Actor":"OdearOgy","Number":"18103","RawContent":null,"Title":"HSL and RGB are converted to HEX after build | vite plugin","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n@tailwindcss/vite: 4.1.7, vite: 6.3.5\n\n**What version of Node.js are you using?**\n\nnot relevant \n\n**What browser are you using?**\n\nBrave\n\n**What operating system are you using?**\n\nMacOS\n\n**Reproduction URL**\n\nhttps://stackblitz.com/edit/vitejs-vite-fjmrwyje\n\n\n**Describe your issue**\nI installed `tailwind` and the `vite` plugin, then configured the vite plugin inside `vite.config.ts` file.\n\nWhen defining color tokens with the `@theme` helper and using `HSL` or `HSLA` my colors are converted to `HEX` after build.\n\nIf I remove the vite plugin from the config.ts file and rebuild, the colors inside dist/minified.css are preserved.\n\nThis happens with `hsl`, `hsla`, `rgb`.\nFor the `oklch` it just converts the regular numbers to percentages which is fine.\n\n- Source code\n\n```css\n@theme static {\n  --color-neutral-300: rgb(123, 44, 128);\n  --color-neutral-400: oklch(0.8059 0.0173 256.73);\n  --color-primary-500: hsl(220, 90%, 38%);\n  --color-primary-600: hsla(220, 90%, 35%, 0.9);\n}\n```\n\n- dist/css\n\n```css\n/*! tailwindcss v4.1.7 | MIT License | https://tailwindcss.com */\n@layer theme {\n  :root,\n  :host {\n    --color-neutral-300: #7b2c80;\n    --color-neutral-400: oklch(80.59% 0.0173 256.73);\n    --color-primary-500: #0a44b8;\n    --color-primary-600: #093eaae6;\n  }\n}\n```\n\nSteps to reproduce\n\n1. Inside your css file create color tokens with rgb, hsl and oklch values.\n2. Use `static` keyword or ommit it and apply the color token classnames directly inside the jsx\n3. Add the vite plugin for tailwindcss - `@tailwindcss/vite`\n4. Run build script\n5. Check the minified css inside the dist folder, find color token values and confirm that the colors are converted to hex except the oklch colors\n6. Disable the vite plugin and do the 4 & 5 again\n7. Colors are preserved as is, no conversion.\n\nNOTE:\nThis only happens on `production` mode, not `dev`\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18103","RelatedDescription":"Closed issue \"HSL and RGB are converted to HEX after build | vite plugin\" (#18103)"},{"Id":"3082818346","IsPullRequest":false,"CreatedAt":"2025-05-22T10:06:33","Actor":"AmelloAster","Number":"18109","RawContent":null,"Title":"Tailwindcss v4 with storybook: Watchpack Error (watcher): Error: EMFILE: too many open files, watch","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.1.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nstorybook: 8.6.12 \npostcss: ^8.4.41\n postcss-loader: ^8.1.1\n\n**What version of Node.js are you using?**\n\nv20.0.0\n\n**What browser are you using?**\n\nChrome, Safari, or N/A\n\n**What operating system are you using?**\n\nmacOS\n\n\n**Describe your issue**\n\n![Image](https://github.com/user-attachments/assets/bfe0da07-f46f-419d-ac8d-2d32645e854e)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18109","RelatedDescription":"Open issue \"Tailwindcss v4 with storybook: Watchpack Error (watcher): Error: EMFILE: too many open files, watch\" (#18109)"},{"Id":"3081843309","IsPullRequest":false,"CreatedAt":"2025-05-22T05:13:10","Actor":"fornof","Number":"18105","RawContent":null,"Title":"Tailwind Vite Plugin does not properly handle variables in class names, but Tailwind Play CDN does.","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\nv4.1.7\n\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\nvite 6.3.5\n\n**What version of Node.js are you using?**\nnode 23.11.0\n\n**What browser are you using?**\nchrome \n\n**What operating system are you using?**\nWSL ubuntu in windows\n\n**Reproduction URL**\n\n```\nexport function ListGrid(props: any) {\n    const num = 5\n    const size = `grid-cols-${num}`\n\n    return (\n            <div className={`grid ${size} gap-0`}>\n                <div>a</div>\n                 <div>b</div>\n                <div>c</div>\n                <div>d</div>\n                <div>e</div>\n                <div>f</div>\n                <div>g</div>\n                <div>h</div>\n                \n            </div>\n        \n    )\n}\n```\n\nA Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\n\nA reproduction is **required** when filing an issue — any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.\n\n**Describe your issue**\n\nThis runs perfectly in the cdn version with script, but with vite plugin, it doesn't render the grid columns at all. just straight down, even though it says the class=\"grid grid-cols-5 gap0\" , it does not have 5 columns (just 1), I tried multiple things like \n\n  safelist: [\n  {\n      pattern: /grid-cols-./,\n  }\n],\netc. When I tried to show an example to my coworker of it not working , everything was working perfectly in the online playgrounds. So, vite and the plugin for vite is the culprit, possibly due to how it renders in conjunction with react. I'm using react 19.1.0\n \n\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18105","RelatedDescription":"Closed issue \"Tailwind Vite Plugin does not properly handle variables in class names, but Tailwind Play CDN does.\" (#18105)"},{"Id":"3081766015","IsPullRequest":false,"CreatedAt":"2025-05-22T01:20:52","Actor":"iannn-nv","Number":"18104","RawContent":null,"Title":"tailwindcss/cli v4 doesn't watch file changes on my Windows","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\n> v4.1.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n> tailwindcss/cli\n\n**What version of Node.js are you using?**\n\n> v22.14.0\n\n**What browser are you using?**\n\n> Latest Chrome\n\n**What operating system are you using?**\n\n> Windows (OS Build 26100.3775)\n\n**Reproduction URL**\n\n> [Repo is here](https://github.com/iannn-nv/tailwind-4-watcher-investigation)\n> [Screen record is here](https://youtu.be/E1rx4J48Mlo)\n\n**Describe your issue**\n\n> The `--watch` command doesn't work on my Windows. But it works normally on my macOS. So I think it's a bug or something is funny with my environment. \n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18104","RelatedDescription":"Open issue \"tailwindcss/cli v4 doesn't watch file changes on my Windows\" (#18104)"},{"Id":"3081362927","IsPullRequest":false,"CreatedAt":"2025-05-21T20:40:14","Actor":"thecrypticace","Number":"18102","RawContent":null,"Title":"No way to ignore certain utilities for a set of theme keys","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nFor example: v4.1.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: Tailwind CLI\n\n**What version of Node.js are you using?**\n\nFor example: v24.0.0\n\n**What browser are you using?**\n\nFor example: N/A\n\n**What operating system are you using?**\n\nFor example: N/A\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/JW4vmJMRW5?file=css\n\n**Describe your issue**\n\nThe map that disambiguates theme keys is not user-modifiable and does not take into account JS plugin theme keys either. This results in things like a custom `text-stoke-*` utility also producing `font-size` properties when they shouldn't.\n\nBasically, given this:\n```css\n@import \"tailwindcss\";\n\n@theme {\n  --text-stroke-red: red;\n}\n\n@utility text-stroke-* {\n  --text-stroke: --value(--text-stroke-*);\n}\n```\n\nThere's no mechanism for the user to say \"I know font-size utilities match on `--text-*` but `--text-stroke-*` shouldn't be included in that\".\n\nWe can *maybe* do this automatically for JS plugins / configs. Doing this for CSS authored theme keys will be more complicated as there's no object structure that can be relied upon there.\n\nSee this discord discussion where this originated from: https://discord.com/channels/486935104384532500/1371289133254971404","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18102","RelatedDescription":"Open issue \"No way to ignore certain utilities for a set of theme keys\" (#18102)"},{"Id":"3081230818","IsPullRequest":false,"CreatedAt":"2025-05-21T19:34:27","Actor":"ameerhamzanawaz","Number":"18101","RawContent":null,"Title":"Tailwindcss 4.1.7 is too slow","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n^4.1.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n\"@tailwindcss/vite\": \"^4.1.7\",\n\"vite\": \"^6.3.5\"\n\n**What version of Node.js are you using?**\n\nv22.12.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n\nA Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\n\nA reproduction is **required** when filing an issue — any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.\n\n**Describe your issue**\n\nDescribe the problem you're seeing, any important steps to reproduce and what behavior you expect instead.\n\nNothing fancy, i'm using Laravel 12, and tailwindcss v4, and it's taking mints more than 5 mints to load app.css file, if i remove @tailwindcss it's super fast even add/removing 'source' isn't solving the problem:\n\n```\n@import \"tailwindcss\";\n/*Scan for utilities*/\n@source \"../views\";\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18101","RelatedDescription":"Open issue \"Tailwindcss 4.1.7 is too slow\" (#18101)"},{"Id":"3078310825","IsPullRequest":true,"CreatedAt":"2025-05-20T21:49:59","Actor":"mondeja","Number":"18093","RawContent":null,"Title":"Support Leptos `class:` attributes","State":"open","Body":"<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create a discussion to first discuss any significant new features.\r\n\r\nFor more info, check out the contributing guide:\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/main/.github/CONTRIBUTING.md\r\n\r\n-->\r\n\r\nFixes #18092\r\n\r\n## Summary\r\n\r\nUsing the Svelte preprocessor for Rust files we can support Leptos `class:` attributes syntax.\r\n\r\n## Test plan\r\n\r\n```\r\npnpm t\r\n```\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18093","RelatedDescription":"Open PR \"Support Leptos `class:` attributes\" (#18093)"},{"Id":"3078267008","IsPullRequest":false,"CreatedAt":"2025-05-20T21:22:24","Actor":"mondeja","Number":"18092","RawContent":null,"Title":"Tailwind not seeing classes in Leptos `class:` attributes","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n`@tailwindcss/cli`\n\n**What version of Node.js are you using?**\n\nv22.9.0\n\n**What browser are you using?**\n\nNone\n\n**What operating system are you using?**\n\nLinux\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/86oxfAOKhi\n\n**Describe your issue**\n\nThe rustacean framework [Leptos](https://leptos.dev) has a [`view!` macro](https://docs.rs/leptos/latest/leptos/macro.view.html) that parses HTML-like code to generate components. It accepts the following syntax:\n\n```rust\nview! { <div class:px-0=true>Whatever</div> }\n```\n\nIn Tailwind v3, you can add the next `content.transform` configuration in *tailwind.config.js* file to be able to support this syntax:\n\n```js\nmodule.exports = {\n  content: {\n    files: [\"*.html\", \"./src/**/*.rs\"],\n    transform: {\n      rs: (content) => content.replace(/(?:^|\\s)class:/g, ' '),\n    },\n  },\n}\n```\n\nBut Tailwind v4 does not support custom transformers.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18092","RelatedDescription":"Open issue \"Tailwind not seeing classes in Leptos `class:` attributes\" (#18092)"},{"Id":"3068860979","IsPullRequest":false,"CreatedAt":"2025-05-20T19:48:17","Actor":"andreww2012","Number":"18058","RawContent":null,"Title":"`@apply` directive not transformed inside sass/scss code","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nvite v6.3.5\n\n**What version of Node.js are you using?**\n\nNot relevant\n\n**What browser are you using?**\n\nNot relevant\n\n**What operating system are you using?**\n\nNot relevant\n\n**Reproduction URL**\n\nhttps://stackblitz.com/edit/vitejs-vite-rsanjkjj\n\n**Describe your issue**\n\nIf you set a custom tailwind prefix like `@import 'tailwindcss' prefix(tw)`, `@apply` directives at least inside Vue's `<style>` blocks will be left as-is (unprocessed) if `lang=\"scss\"` is used.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18058","RelatedDescription":"Closed issue \"`@apply` directive not transformed inside sass/scss code\" (#18058)"},{"Id":"3071036349","IsPullRequest":false,"CreatedAt":"2025-05-20T08:57:53","Actor":"hookenz","Number":"18076","RawContent":null,"Title":"AVX error on older CPUs","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.1.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nhttps://github.com/hookenz/gotailwind\n\n**What version of Node.js are you using?**\n\nN/A\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nMac Amd64\n\n**Reproduction URL**\n\nRequires old hardware\n\n**Describe your issue**\n\nI'm the author of gotailwind.  A go wrapper around tailwindcss which makes it possible to run tailwindcss in go projects with `go tool gotailwind`.  \nSee: https://github.com/hookenz/gotailwind\n\nI have a friend who ran it on his Mac and got this output.\n\n```\ngo tool gotailwind\n\nwarn: CPU lacks AVX support, strange crashes may occur.  \nReinstall Bun or use *-baseline build: https://github.com/oven-sh/bun/releases/download/bun-v1.2.13/bun-darlin-x64-baseline.zip\n\n...\n```\n\nA bit of googling and it seems it would might produce this warning on a CPU lacking AVX2 support actually?  not certain.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18076","RelatedDescription":"Closed issue \"AVX error on older CPUs\" (#18076)"},{"Id":"3074877189","IsPullRequest":true,"CreatedAt":"2025-05-19T20:07:59","Actor":"depfu[bot]","Number":"18085","RawContent":null,"Title":"Update @types/react 19.1.2 → 19.1.4 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​types/react (19.1.2 → 19.1.4) · [Repo](https://github.com/DefinitelyTyped/DefinitelyTyped)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18085","RelatedDescription":"Closed or merged PR \"Update @types/react 19.1.2 → 19.1.4 (patch)\" (#18085)"},{"Id":"3074550260","IsPullRequest":true,"CreatedAt":"2025-05-19T19:19:43","Actor":"depfu[bot]","Number":"18084","RawContent":null,"Title":"Update semver 7.7.1 → 7.7.2 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ semver (7.7.1 → 7.7.2) · [Repo](https://github.com/npm/node-semver) · [Changelog](https://github.com/npm/node-semver/blob/main/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/npm/node-semver/releases/tag/v7.7.2\">7.7.2</a></h4>\n\n<blockquote><h2 dir=\"auto\">\n<a href=\"https://bounce.depfu.com/github.com/npm/node-semver/compare/v7.7.1...v7.7.2\">7.7.2</a> (2025-05-12)</h2>\n<h3 dir=\"auto\">Bug Fixes</h3>\n<ul dir=\"auto\">\n<li>\n<a href=\"https://bounce.depfu.com/github.com/npm/node-semver/commit/fcafb61ed566ff8ccf24818dd94b76738f037aa4\"><code class=\"notranslate\">fcafb61</code></a> <a href=\"https://bounce.depfu.com/github.com/npm/node-semver/pull/780\">#780</a> add missing <code class=\"notranslate\">'use strict'</code> directives (<a href=\"https://bounce.depfu.com/github.com/npm/node-semver/pull/780\">#780</a>) (<a href=\"https://bounce.depfu.com/github.com/Fdawgs\">@Fdawgs</a>)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/npm/node-semver/commit/c99f336fa3bdff465652f9041eab2127d2f52eb2\"><code class=\"notranslate\">c99f336</code></a> <a href=\"https://bounce.depfu.com/github.com/npm/node-semver/pull/781\">#781</a> prerelease identifier starting with digits (<a href=\"https://bounce.depfu.com/github.com/npm/node-semver/pull/781\">#781</a>) (<a href=\"https://bounce.depfu.com/github.com/mbtools\">@mbtools</a>)</li>\n</ul>\n<h3 dir=\"auto\">Chores</h3>\n<ul dir=\"auto\">\n<li>\n<a href=\"https://bounce.depfu.com/github.com/npm/node-semver/commit/c760403b935d3ad35f83e9bbe5ebe1badef2fc71\"><code class=\"notranslate\">c760403</code></a> <a href=\"https://bounce.depfu.com/github.com/npm/node-semver/pull/784\">#784</a> template-oss-apply for workflow permissions (<a href=\"https://bounce.depfu.com/github.com/npm/node-semver/pull/784\">#784</a>) (<a href=\"https://bounce.depfu.com/github.com/wraithgar\">@wraithgar</a>)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/npm/node-semver/commit/2677f2a88334b0e728dbfe9ad9f5f57458437c87\"><code class=\"notranslate\">2677f2a</code></a> <a href=\"https://bounce.depfu.com/github.com/npm/node-semver/pull/778\">#778</a> bump @npmcli/template-oss from 4.23.6 to 4.24.3 (<a href=\"https://bounce.depfu.com/github.com/npm/node-semver/pull/778\">#778</a>) (<a href=\"https://bounce.depfu.com/github.com/dependabot\">@dependabot</a>[bot], <a href=\"https://bounce.depfu.com/github.com/npm-cli-bot\">@npm-cli-bot</a>)</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/semver/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/npm/node-semver/compare/30c438bb46c74f319aa8783f96d233ebf5f4a90d...281055e7716ef0415a8826972471331989ede58c\">See the full diff on Github</a>. The new version differs by 6 commits:</p>\n<ul>\n<li><a href=\"https://github.com/npm/node-semver/commit/281055e7716ef0415a8826972471331989ede58c\"><code>chore: release 7.7.2 (#783)</code></a></li>\n<li><a href=\"https://github.com/npm/node-semver/commit/fcafb61ed566ff8ccf24818dd94b76738f037aa4\"><code>fix: add missing `&#39;use strict&#39;` directives (#780)</code></a></li>\n<li><a href=\"https://github.com/npm/node-semver/commit/c760403b935d3ad35f83e9bbe5ebe1badef2fc71\"><code>chore: template-oss-apply for workflow permissions (#784)</code></a></li>\n<li><a href=\"https://github.com/npm/node-semver/commit/c99f336fa3bdff465652f9041eab2127d2f52eb2\"><code>fix: prerelease identifier starting with digits (#781)</code></a></li>\n<li><a href=\"https://github.com/npm/node-semver/commit/2677f2a88334b0e728dbfe9ad9f5f57458437c87\"><code>chore: bump @npmcli/template-oss from 4.23.6 to 4.24.3 (#778)</code></a></li>\n<li><a href=\"https://github.com/npm/node-semver/commit/0b98655dbc1a9eb79370ed80f557be98d1c06587\"><code>chore: bump @npmcli/template-oss from 4.23.4 to 4.23.6 (#760)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18084","RelatedDescription":"Closed or merged PR \"Update semver 7.7.1 → 7.7.2 (patch)\" (#18084)"},{"Id":"3073813847","IsPullRequest":false,"CreatedAt":"2025-05-19T15:28:10","Actor":"vincent7128","Number":"18082","RawContent":null,"Title":"@tailwindcss/postcss 4.1.6 with @parcel/transformer-postcss: Cannot read properties of undefined (reading 'input')","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\ntailwindcss: 4.1.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nparcel 2.15.1\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What browser are you using?**\n\nSafari\n\n**What operating system are you using?**\n\nmacOS\n\n**Describe your issue**\n\n```\n{\n  \"name\": \"test\",\n  \"version\": \"0.0.0\",\n  \"source\": \"src/index.html\",\n  \"scripts\": {\n    \"start\": \"parcel\",\n    \"build\": \"parcel build\"\n  },\n  \"staticFiles\": {\n    \"staticPath\": \"src/img\",\n    \"distDir\": \"dist/img\"\n  },\n  \"devDependencies\": {\n    \"@tailwindcss/postcss\": \"4.1.6\",\n    \"parcel\": \"^2.15.1\",\n    \"parcel-reporter-static-files-copy\": \"^1.5.3\",\n    \"tailwindcss\": \"^4.1.7\"\n  }\n}\n```\n\nWhen use over @tailwindcss/postcss 4.1.5, run npm start I got follow message:\n\n```\n🚨 Build failed.\n\n@parcel/transformer-postcss: Cannot read properties of undefined (reading 'input')\n\n  TypeError: Cannot read properties of undefined (reading 'input')\n      at Comment.toJSON (/package/node_modules/postcss/lib/node.js:387:40)\n      at /package/node_modules/postcss/lib/node.js:379:22\n      at Array.map (<anonymous>)\n      at Root.toJSON (/package/node_modules/postcss/lib/node.js:377:29)\n      at Object.transform (/package/node_modules/@parcel/transformer-postcss/lib/PostCSSTransformer.js:244:21)\n      at async Transformation.runTransformer (/package/node_modules/@parcel/core/lib/Transformation.js:486:5)\n      at async Transformation.runPipeline (/package/node_modules/@parcel/core/lib/Transformation.js:303:36)\n      at async Transformation.runPipelines (/package/node_modules/@parcel/core/lib/Transformation.js:215:16)\n      at async Transformation.runPipelines (/package/node_modules/@parcel/core/lib/Transformation.js:245:34)\n      at async Transformation.run (/package/node_modules/@parcel/core/lib/Transformation.js:143:21)\n```\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18082","RelatedDescription":"Closed issue \"@tailwindcss/postcss 4.1.6 with @parcel/transformer-postcss: Cannot read properties of undefined (reading 'input')\" (#18082)"},{"Id":"3074032574","IsPullRequest":true,"CreatedAt":"2025-05-19T15:28:09","Actor":"thecrypticace","Number":"18083","RawContent":null,"Title":"Fix PostCSS crash when using toJSON()","State":"closed","Body":"When I added source maps to PostCSS I mistakenly assumed that `.source` on a node could be `undefined`. The comment above the property in PostCSS says that `source` can be `undefined` but this is a commentary on the value upon **access** not its expected value on **write**:\r\n\r\n```ts\r\ndeclare abstract class Node_ {\r\n  /**\r\n   * …\r\n   *\r\n   * The nodes that are created manually using the public APIs\r\n   * provided by PostCSS will have `source` undefined and\r\n   * will be absent in the source map.\r\n   *\r\n   * …\r\n   */\r\n  source?: Node.Source\r\n}\r\n```\r\n\r\nRather, what these types mean is that *if the property exists* it must be defined. But otherwise the property can be missing if a node has no source location metadata. This generally wasn't a problem with the string-returning APIs but the `toJSON()` API in PostCSS expects that `source` is defined if present. This caused a crash because our license comment doesn't have a source location.\r\n\r\nI've addressed this by deleting the `source` property from the node if source location data is not available.\r\n\r\nFixes #18082\r\n\r\nref https://github.com/parcel-bundler/parcel/issues/10161","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18083","RelatedDescription":"Closed or merged PR \"Fix PostCSS crash when using toJSON()\" (#18083)"},{"Id":"3069959429","IsPullRequest":false,"CreatedAt":"2025-05-19T15:09:32","Actor":"Aurailus","Number":"18067","RawContent":null,"Title":"[V4] Regression in ability to order custom variants with built-in ones?","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.1.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nWebpack 5.96.1 + PostCSS 8.4.48\n\n**What version of Node.js are you using?**\n\nv20.18.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nArch Linux\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/UBrKdpd6MD?file=css\n\n**Describe your issue**\n\nIn Tailwind V3, it was possible to re-declare built-in variants (e.g. active:) so that they take priority over custom variants that should have lower precedence. In Tailwind V4, this doesn't seem to be possible, which severely messes with the ability to make custom \"shorthand\" variants for focus and hover states (hocus:) without losing the ability to also have active: or disabled: or any of the builtin variants take precedence. I posted about this in this [discussion](https://github.com/tailwindlabs/tailwindcss/discussions/17860) but I didn't get any response. Is there a way to work around this in V4, or is this just a regression?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18067","RelatedDescription":"Closed issue \"[V4] Regression in ability to order custom variants with built-in ones?\" (#18067)"},{"Id":"3070244175","IsPullRequest":true,"CreatedAt":"2025-05-19T15:09:01","Actor":"Aurailus","Number":"18070","RawContent":null,"Title":"Allow `@custom-variant` to redefine built-in variants with proper `order`.","State":"closed","Body":"## Summary\r\n\r\nAdds an \"override\" property to the object bag passed to `Variants.static` which forces a variant to get a new `order` even if it has already been defined. This property is set in `index.ts:399` for the `@custom-variant` rule to allow custom variants to redefine existing variants like `active:` and have them be properly ordered relative to other custom variants, a.l.a tailwind v3. See #18067 for the motivating regression.\r\n\r\n## Test plan\r\n\r\nTested using the playground directory. This is a very insignificant (~17 LOC) change which I don't expect to cause many new issues. I can add more robust testing if necessary, just let me know.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18070","RelatedDescription":"Closed or merged PR \"Allow `@custom-variant` to redefine built-in variants with proper `order`.\" (#18070)"},{"Id":"3070040350","IsPullRequest":true,"CreatedAt":"2025-05-19T14:41:41","Actor":"RobinMalfait","Number":"18068","RawContent":null,"Title":"Improve performance of upgrade tool","State":"closed","Body":"This PR improves the performance of the upgrade tool due to a regression introduced by https://github.com/tailwindlabs/tailwindcss/pull/18057\n\nEssentially, we had to make sure that we are not in `<style>…</style>` tags because we don't want to migrate declarations in there such as `flex-shrink: 0;`\n\nThe issue with this approach is that we checked _before_ the candidate if a `<style` cold be found and if we found an `</style>` tag after the candidate.\n\nWe would basically do this check for every candidate that matches.\n\nRunning this on our Tailwind UI codebase, this resulted in a bit of a slowdown:\n\n```diff\n- Before: ~13s\n+  After: ~5m 39s\n```\n\n... quite the difference.\n\nThis is because we have a snapshot file that contains ~650k lines of code. Looking for `<style>` and `</style>` tags in a file that large is expensive, especially if we do it a lot.\n\nI ran some numbers and that file contains ~1.8 million candidates.\n\nAnyway, this PR fixes that by doing a few things:\n\n1. We will compute the `<style>` and `</style>` tag positions only once per file and cache it. This allows us to re-use this work for every candidate that needs it.\n2. We track the positions, which means that we can simply check if a candidate's location is within any of 2 start and end tags. If so, we skip it.\n\nRunning the numbers now gets us to:\n\n```diff\n- Before: ~5m 39s\n+  After: ~9s\n```\n\nMuch better!\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18068","RelatedDescription":"Closed or merged PR \"Improve performance of upgrade tool\" (#18068)"},{"Id":"3073558567","IsPullRequest":false,"CreatedAt":"2025-05-19T11:58:00","Actor":"entrenadorhispano","Number":"18081","RawContent":null,"Title":"Tailwind 4.1 oklch colors don't work on old safary if decimal is provided instead of percentage.","State":"closed","Body":"**Subtle bug using safari 15.8**\nTailwind 4.1 oklch colors don't work on old safary if decimal is provided instead of percentage.\n\noklch(70% 0.15 162) This will work ✅\noklch(0.70 0.15 162) This won't ❌\n\n**System**\nUsing Vite (svelte) + Tailwind 4.1.7 + node 22.14\n\n**Reproduction sample:**\nhttps://play.tailwindcss.com/fPW5BsNPNT\n\n**Note**\nUsing decimal for lightness oklch(0.70 0.15 162) works on safari 15.8 plain css... So its seems to be a tailwind bug.\n\nThanks fort the support!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18081","RelatedDescription":"Closed issue \"Tailwind 4.1 oklch colors don't work on old safary if decimal is provided instead of percentage.\" (#18081)"},{"Id":"3069777041","IsPullRequest":true,"CreatedAt":"2025-05-19T10:47:09","Actor":"RobinMalfait","Number":"18065","RawContent":null,"Title":"Improve `@tailwindcss/upgrade` and `pnpm` workspaces support","State":"closed","Body":"This PR fixes an issue where an error such as:\r\n\r\n<img width=\"1702\" alt=\"image\" src=\"https://github.com/user-attachments/assets/4e6f75c7-3182-4497-939e-96cff08c55ae\" />\r\n\r\nWill be thrown during the upgrade process. This can happen when you are using `pnpm` and your CSS file includes a `@import \"tailwindcss\";`. In this scenario, `tailwindcss` will be loaded from a shared `.pnpm` folder outside of the current working directory.\r\n\r\nIn this case, we are also not interested in migrating _that_ file, but we also don't want the upgrade process to just crash.\r\n\r\nI didn't see an option to ignore errors like this, so wrapped it in a try/catch instead.\r\n\r\nIt also fixes another issue where if you are using a pnpm workspace and run the upgrade tool from the root, then it throws you an error that you cannot add dependencies to the workspace root unless `-w` or `--workspace-root` flags are passed.\r\n\r\nFor this, we disable the check entirely using the `--ignore-workspace-root-check` flag. If we always used the `--workspace-root` flag, then the dependencies would always be added to the root, regardless of where you are running the script from which is not what we want. \r\n\r\n## Test plan\r\n\r\nBefore:\r\n\r\n<img width=\"1816\" alt=\"image\" src=\"https://github.com/user-attachments/assets/78246876-3eb6-4539-a557-d3d366f1b3a3\" />\r\n\r\nAfter:\r\n\r\n<img width=\"1816\" alt=\"image\" src=\"https://github.com/user-attachments/assets/a65e4421-d7c5-4d83-b35d-934708543e25\" />\r\n\r\nBefore:\r\n \r\n<img width=\"1816\" alt=\"image\" src=\"https://github.com/user-attachments/assets/53772661-2c4a-4212-84d9-a556a0ad320f\" />\r\n\r\nAfter:\r\n\r\n<img width=\"1816\" alt=\"image\" src=\"https://github.com/user-attachments/assets/5bfaf20e-34b8-44fd-9b59-e72d36738879\" />\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18065","RelatedDescription":"Closed or merged PR \"Improve `@tailwindcss/upgrade` and `pnpm` workspaces support\" (#18065)"},{"Id":"3071840941","IsPullRequest":false,"CreatedAt":"2025-05-18T14:52:23","Actor":"marcospgp","Number":"18079","RawContent":null,"Title":"sizing utilities using --spacing variables instead of --container","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n`\"^4.1.7\",`\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nbun 1.2.13+64ed68c9e\n\n**What version of Node.js are you using?**\n\nbun 1.2.13+64ed68c9e\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nwindows\n\n**Reproduction URL**\n\nn/a\n\n**Describe your issue**\n\nusing utilities like `size-xl` or `max-w-md` should rely on sizing variables with the `--container` prefix as per docs (such as `--container-xl`), but they instead use `--spacing` variables\n\n![Image](https://github.com/user-attachments/assets/063f8312-aa7b-4766-9dd4-0d491d318ccb)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18079","RelatedDescription":"Closed issue \"sizing utilities using --spacing variables instead of --container\" (#18079)"},{"Id":"3070576704","IsPullRequest":false,"CreatedAt":"2025-05-17T09:48:14","Actor":"PhotonQuantum","Number":"18072","RawContent":null,"Title":"Custom font doesn't work with css var","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.1.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nN.A\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What browser are you using?**\n\nFirefox\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/Wqb57TyO7w\n\n**Describe your issue**\n\nAs you can see in the example, only `--font-mono` is correctly set as the provided CSS variable, while `--default-mono-font-family` is not.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18072","RelatedDescription":"Closed issue \"Custom font doesn't work with css var\" (#18072)"},{"Id":"3070557574","IsPullRequest":false,"CreatedAt":"2025-05-17T08:24:37","Actor":"PhotonQuantum","Number":"18071","RawContent":null,"Title":"Markdown class directive syntax not supported","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nN/A\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://github.com/PhotonQuantum/tailwind-mdx-repro\n\n```shell\npnpx @tailwindcss/cli -i global.css -o output.css\n```\n\n**Describe your issue**\n\nClass names in [markdown generic directives](https://talk.commonmark.org/t/generic-directives-plugins-syntax/444) (e.g. `:span[Some Text]{.text-gray-500}`) are not extracted. This proposal is adopted by plugins like https://github.com/remarkjs/remark-directive.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18071","RelatedDescription":"Open issue \"Markdown class directive syntax not supported\" (#18071)"},{"Id":"3069455002","IsPullRequest":false,"CreatedAt":"2025-05-16T16:45:10","Actor":"spiess-demos","Number":"18062","RawContent":null,"Title":"@source glob wildcard ** does not discover files with same child folder name as parent folder","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.1.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nDoes not matter, occurs with Webpack/postcss-loader as well as Vite.\n\n**What version of Node.js are you using?**\n\nv20.19.1\n\n**What browser are you using?**\n\nChrome 134.0.6998.165\n\n**What operating system are you using?**\n\nDebian GNU/Linux trixie/sid Kernel 6.12.12-amd64\n\n**Reproduction URL**\n\nhttps://stackblitz.com/edit/vitejs-vite-xzdvwn3v?file=src%2Fstyle.css\nThe stackblitz seems to work in a recent Google Chrome, however Firefox throsw lots of errors (not related to my things, i suppose).\n\n**Describe your issue**\n\nIn a rather large monorepo, we have recently migrated to Tailwind 4 and came across an issue with how `@source` resolves certain globs. We disable auto detection with `source(none)`, to speed things up, and then add certain folders to discover markup using grep syntax. However if a folder happens to contain a folder with the same name, the `**` wildcard cannot be used to target the source files.\n\nThe style.css file:\n\n```\n@import 'tailwindcss' source(none);\n\n/*\n  This does not work - .bg-black-500 can not be found in the final css file.\n  Issue seems to occur when the ** glob wildcard is used in a situation \n  where a child folder is named the same as a parent folder within the glob string.\n*/\n@source 'addon/path/addon/**/*.html';\n\n/*\n  This works - .bg-green-500 can be found in the final css file.\n  Issue seems to occur only with similar folder names.\n*/\n@source 'addon/path/otherAddon/**/*.html';\n\n/* \n  This works - .bg-cyan-500 can be found in the final css file.\n  Specifying a path without the ** wildcard seems to work even with\n  child folders with the same name as a parant folder.\n*/\n@source 'addon/path/addon/component/*.html';\n```\n\nFolder structure:\n```\nsrc\n  /addon\n    /path\n      /addon\n        /component\n        /otherComponent\n      /otherAddon\n        /component\n```\n\nWith the above `@source` configuration, markup in addon should be discovered as well as in otherAddon. However this is not the case, content in addon (which repeats the name of the outermost addon folder) is only discovered if no `**` wildcard is used to target it.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18062","RelatedDescription":"Closed issue \"@source glob wildcard ** does not discover files with same child folder name as parent folder\" (#18062)"},{"Id":"3069143791","IsPullRequest":false,"CreatedAt":"2025-05-16T14:37:37","Actor":"AiSirachcha21","Number":"18060","RawContent":null,"Title":"`--sizing-*` is not allowed to be used when generating functional utilities","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.1.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNo build tool, using distributed CSS file directly.\n\n**What version of Node.js are you using?**\n\nv22.12.0\n\n**What browser are you using?**\n\nFirefox 138.0.3\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\nhttps://play.tailwindcss.com/fAp6k8fj6E?file=css\n\n**Describe your issue**\nI am attempting to create a utility similar to `size-{--spacing-*}` (ex: `size-4`, `size-8` etc.) but with `min-width` and `min-height` named `min-size-xx` (xx being the value)\n \nI have created multiple functional utilities with v4.1.7 before but for some reason the `--spacing-*` utility is not allowed to be added into the `--value()` function.\n\nIt works when I use `--text-*`, `--leading-*` etc etc.\n\nWhen attempting to use this and build it via the `tailwindcss` script it errors out saying\n\n```bash\nError: Cannot apply unknown utility class: min-size-4\n```\n\nThe script I'm executing via `yarn` is\n\n```bash\ntailwindcss -i ./path/to/file.css -o ./path/to/file.dist.css\n```\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18060","RelatedDescription":"Closed issue \"`--sizing-*` is not allowed to be used when generating functional utilities\" (#18060)"},{"Id":"3068907869","IsPullRequest":true,"CreatedAt":"2025-05-16T12:43:55","Actor":"RobinMalfait","Number":"18059","RawContent":null,"Title":"Improve error messages when `@apply` fails","State":"open","Body":"This PR improves error messages when `@apply` fails. Right now it gives you a generic error message that you cannot apply a certain utility.\r\n\r\n```css\r\n.foo {\r\n  @apply bg-red-500;\r\n}\r\n```\r\n\r\nWould result in:\r\n```\r\nCannot apply unknown utility class: bg-red-500\r\n```\r\n\r\nHowever, there are some situations where we can give you more context about what's happening.\r\n\r\n### Missing `@import \"tailwindcss\"` or `@reference`\r\n\r\nIf you are in a Vue file for example, and you have the following code:\r\n```vue\r\n<template>\r\n  <div class=\"foo\"></div>\r\n</template>\r\n\r\n<style>\r\n.foo {\r\n  @apply bg-red-500;\r\n}\r\n</style>\r\n```\r\n\r\nThen this will now result in:\r\n```\r\nCannot apply unknown utility class: `bg-red-500`.\r\nIt looks like you are missing a `@reference \"app.css\"` or `@import \"tailwindcss\";`\r\n```\r\n\r\nWe do this by checking if we found a `@tailwind utilities` or `@reference`. If not, we throw this more specific error.\r\n\r\n### Explicitly excluded classes via `@source not inline('…')`\r\n\r\nOr via the legacy `blocklist` from a JS config.\r\n\r\nIf you then have the following file:\r\n```css\r\n@import \"tailwindcss\";\r\n\r\n@source not inline('bg-white');\r\n\r\n.foo {\r\n  @apply bg-white;\r\n}\r\n```\r\n\r\nThen this will now result in:\r\n```\r\nCannot apply `bg-white`, it seems like the utility was explicitly excluded and cannot be applied.\r\n\r\nMore info: https://tailwindcss.com/docs/detecting-classes-in-source-files#explicitly-excluding-classes\r\n```\r\n\r\nWe do this by checking if the class was marked as invalid.\r\n\r\n### Applying unprefixed class in prefix mode\r\n\r\nIf you have the prefix option configured, but you are applying a non-prefixed class, then we will show the following error:\r\n\r\nGiven this input:\r\n```css\r\n@import \"tailwindcss\" prefix(tw);\r\n\r\n.foo {\r\n  @apply underline;\r\n}\r\n```\r\n\r\n\r\nThe following error is thrown:\r\n```\r\nCannot apply unprefixed utility class: `underline`, did you mean `tw:underline`?\r\n```\r\n\r\n## Test plan\r\n\r\n1. Everything behaves the same, but the error messages give more details.\r\n2. Updated tests with new error messages\r\n3. Added new unit tests to verify the various scenarios\r\n4. Added a Vue specific integration test with a `<style>…</style>` block using `@apply`","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18059","RelatedDescription":"Open PR \"Improve error messages when `@apply` fails\" (#18059)"},{"Id":"3068617299","IsPullRequest":true,"CreatedAt":"2025-05-16T10:53:35","Actor":"RobinMalfait","Number":"18057","RawContent":null,"Title":"Do not migrate declarations in `<style>` blocks","State":"closed","Body":"This PR improves the upgrade tool by making sure that we don't migrate CSS declarations in `<style>…</style>` blocks.\n\nWe do this by making sure that:\n\n1. We detect a declaration, the current heuristic is that the candidate is:\n   - Preceded by whitespace\n   - Followed by a colon and whitespace\n\n   ```html\n   <style>\n   .foo {\n       flex-shrink: 0;\n      ^           ^^\n   }\n   </style>\n   ```\n\n2. We are in a `<style>…</style>` block\n\n   ```html\n   <style>\n   ^^^^^^\n   .foo {\n       flex-shrink: 0;\n   }\n   </style>\n   ^^^^^^^^\n   ```\n\nThe reason we have these 2 checks is because just relying on the first heuristic alone, also means that we will not be migrating keys in JS objects, because they typically follow the same structure:\n\n```js\nlet classes = {\n flex: 0,\n^    ^^\n}\n```\n\nAnother important thing to note is that we can't just ignore anything in between `<style>…</style>` blocks, because you could still be using `@apply` that we _do_ want to migrate.\n\nLast but not least, the first heuristics is not perfect either. If you are writing minified CSS then this will likely fail if there is no whitespace around the candidate.\n\nBut my current assumption is that nobody should be writing minified CSS, and minified CSS will very likely be generated and gitignored. In either situation, replacements in minified CSS will not be any worse than it is today.\n\nI'm open to suggestions for better heuristics.\n\n## Test plan\n\n1. Added an integration test that verifies that we do migrate `@apply` and don't migrate the `flex-shrink: 0;` declaration.\n\n\nFixes: #17975\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18057","RelatedDescription":"Closed or merged PR \"Do not migrate declarations in `<style>` blocks\" (#18057)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-05-23T03:30:21.5491792Z","RunDurationInMilliseconds":443}