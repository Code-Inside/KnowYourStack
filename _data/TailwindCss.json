{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2852573510","IsPullRequest":false,"CreatedAt":"2025-02-14T03:21:38","Actor":"the-lemonboy","Number":"16525","RawContent":null,"Title":"[V4] How do I rewrite the plugin for V4Ôºü","State":"open","Body":"How do I rewrite the plugin for V4? Is there any documentation?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16525","RelatedDescription":"Open issue \"[V4] How do I rewrite the plugin for V4Ôºü\" (#16525)"},{"Id":"2852125571","IsPullRequest":false,"CreatedAt":"2025-02-13T21:19:47","Actor":"JaquesBotha","Number":"16516","RawContent":null,"Title":"Upgrading to Tailwind v4: Missing Defaults, Broken Dark Mode, and Config Issues","State":"closed","Body":"## Introduction\n\nHello Tailwind CSS Team and Community,\n\nFirst off, I want to say that I really appreciate all the hard work that goes into Tailwind CSS. It‚Äôs an incredible tool that has improved my workflow tremendously. However, after upgrading to v4, I‚Äôve run into several challenges that have made the transition more difficult than expected.\n\nI completely understand that major updates come with changes, but some of the alterations, such as the removal of default styles, changes to dark mode behavior, and unexpected issues with Tailwind config properties, were not clearly outlined in the upgrade guide. I‚Äôve also noticed that I‚Äôm not alone in experiencing these difficulties, as other developers have expressed similar concerns.\n\n### **What I've Done So Far**\n- Updated **everything** as per spec, including fixing prefixes (`tw-` to `tw:` and moving them to the front).\n- Followed the official **upgrade guide** but found certain key changes missing from the documentation.\n- Adjusted multiple UI components to work with v4, but encountered issues with default styles, dark mode, and custom config values.\n\n## Issues Faced\n\n1. **Loss of Default Styles:** Previously, elements like headings and buttons had reasonable defaults. After upgrading, these defaults are gone, which caused a lot of unexpected UI issues. Also the @layer base {} thing does not work. Tried it many times now. \n2. **Dark Mode Behavior Changed:** Dark mode does not seem to work the same way as it did in v3. If this was an intentional change, could you clarify the best practices for handling it in v4? Should that not be a change set outline in Upgrade docs?\n3. **Tailwind Config Custom Properties Not Working:** Specific configurations in `tailwind.config.js`, such as:\n    ```js\n    backgroundImage: {\n        dots: \"radial-gradient(circle, #d4d9e0 1px, transparent 1px)\"\n    },\n    backgroundSize: {\n        dots: \"20px 20px\" // Adjust size as needed\n    },\n    ```\n    These settings appear in the compiled CSS but do not seem to work properly.\n\n![Image](https://github.com/user-attachments/assets/a92caca9-ea56-4183-b47f-da9713a3d777)\n> Dots are not showing as it did in the past!\n\n4. **List (`<ul>`) Padding Changes:** UL elements that were previously well-spaced now have different padding, affecting layouts unexpectedly.\n5. **Heading Default Sizes Removed:** The removal of default font sizes for headings means that all heading elements now require manual fixes across projects.\n6. **`@layer base` Behavior:** Even when attempting to reintroduce styles via `@layer base`, they are not applying as expected.\n7. **Tailwind Class-Based Animations No Longer Work Properly:** TypeScript animations relying on Tailwind classes (`opacity-0`, `opacity-100`, `translate-y-0`, etc.) do not behave the same way as before. HOWEVER, I have not fully investigaged this point just yet!\n\n## Steps Taken\n\n- Read through the [Tailwind CSS v4 Upgrade Guide](https://tailwindcss.com/docs/upgrade-guide) but found no detailed explanation for these issues.\n- Checked through discussions and issues to see if others had encountered the same problems but did not find clear resolutions.\n\n## Request for Assistance\n\nI‚Äôd love to get some clarification on the following:\n\n- Were the removal of default styles for elements (headings, buttons, lists, etc.) intentional? If so, what is the recommended approach for handling this in v4? Or give us the control. Tons of developers want these proper defaults, this is what makes Tailwind so great!\n- What changes were made to dark mode functionality, and how should we approach implementing it moving forward?\n- Why are Tailwind config properties compiling but not working as expected?\n- What is the best way to reintroduce defaults that were removed in a way that is sustainable long-term?\n- Are there any known issues with Tailwind-based animations behaving differently in v4? **AGAIN STILL NEEED TO INVESTIGATE THIS A BIT MORE.** \n\n## Conclusion\n\nI truly appreciate all the work that has gone into Tailwind CSS and understand that updates are necessary for improvement. That said, I believe better documentation and clearer migration steps for these changes would be incredibly helpful for those of us upgrading large projects.\n\nLooking forward to any insights you can provide, and I appreciate your time in addressing these concerns.\n\nBest regards,  \nJaques","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16516","RelatedDescription":"Closed issue \"Upgrading to Tailwind v4: Missing Defaults, Broken Dark Mode, and Config Issues\" (#16516)"},{"Id":"2852115443","IsPullRequest":true,"CreatedAt":"2025-02-13T21:11:57","Actor":"depfu[bot]","Number":"16515","RawContent":null,"Title":"Update h3 1.13.1 ‚Üí 1.15.0 (minor)","State":"open","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ‚ú≥Ô∏è h3 (1.13.1 ‚Üí 1.15.0) ¬∑ [Repo](https://github.com/unjs/h3) ¬∑ [Changelog](https://github.com/unjs/h3/blob/main/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/unjs/h3/releases/tag/v1.15.0\">1.15.0</a></h4>\n\n<blockquote><p dir=\"auto\"><a href=\"https://bounce.depfu.com/github.com/unjs/h3/compare/v1.14.0...v1.15.0\">compare changes</a></p>\n<ul dir=\"auto\">\n<li>Migrate from <code class=\"notranslate\">unenv</code> v1 to <code class=\"notranslate\">node-mock-http</code> (<a href=\"https://bounce.depfu.com/github.com/unjs/h3/pull/970\">#970</a>)</li>\n</ul></blockquote>\n<h4><a href=\"https://github.com/unjs/h3/releases/tag/v1.14.0\">1.14.0</a></h4>\n\n<blockquote><p dir=\"auto\"><a href=\"https://bounce.depfu.com/github.com/unjs/h3/compare/v1.13.1...v1.14.0\">compare changes</a></p>\n<h3 dir=\"auto\">üöÄ Enhancements</h3>\n<ul dir=\"auto\">\n<li>\n<strong>session:</strong> Allow using with crossws hooks (<a href=\"https://bounce.depfu.com/github.com/unjs/h3/pull/960\">#960</a>)</li>\n</ul>\n<h3 dir=\"auto\">‚ù§Ô∏è Contributors</h3>\n<ul dir=\"auto\">\n<li>Pooya Parsa (<a href=\"https://bounce.depfu.com/github.com/pi0\">@pi0</a>)</li>\n<li>Kanonji (<a href=\"https://bounce.depfu.com/github.com/kanonji\">@kanonji</a>)</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/h3/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/unjs/h3/compare/9e0812ca9c339fd16f71c805f26eea0afc12a034...da29b022ada78957fa7c47203c1d15249331d094\">See the full diff on Github</a>. The new version differs by 10 commits:</p>\n<ul>\n<li><a href=\"https://github.com/unjs/h3/commit/da29b022ada78957fa7c47203c1d15249331d094\"><code>chore(release): v1.15.0</code></a></li>\n<li><a href=\"https://github.com/unjs/h3/commit/ae316c9ee2857a4f6e33368e06fcb5dfa091b821\"><code>chore: bump node-mock-http to v1</code></a></li>\n<li><a href=\"https://github.com/unjs/h3/commit/301cb170d420c42ae5d5f32b97cf6d59f36d2f4f\"><code>feat: migrate from `unenv` v1 to `node-mock-http` (#970)</code></a></li>\n<li><a href=\"https://github.com/unjs/h3/commit/d19ca8a346b21cac4f56dca6658b0069ec3dac12\"><code>chore: update branch</code></a></li>\n<li><a href=\"https://github.com/unjs/h3/commit/1fd195092daf7365e2ffbbff766c3a487f59c92e\"><code>chore(deps): update all non-major dependencies (#961)</code></a></li>\n<li><a href=\"https://github.com/unjs/h3/commit/97ccc4d8850a876e98836b2d093a6684f9b37f53\"><code>chore(release): v1.14.0</code></a></li>\n<li><a href=\"https://github.com/unjs/h3/commit/3f9e7031825f4289c142a4d591e0ec46a306cc4f\"><code>feat(session): allow using with crossws hooks (#960)</code></a></li>\n<li><a href=\"https://github.com/unjs/h3/commit/a2338be82691334f24ac8742a4cddccde647d169\"><code>chore: update deps</code></a></li>\n<li><a href=\"https://github.com/unjs/h3/commit/4ed223a2213e472c0da156017a4c01f12300d3b4\"><code>docs: fix jsdoc (#953)</code></a></li>\n<li><a href=\"https://github.com/unjs/h3/commit/75aef6498e6099915c5cdc039a76704af689fdb7\"><code>chore(deps): update autofix-ci/action digest to 551dded (#949)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@‚Äãdepfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@‚Äãdepfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@‚Äãdepfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@‚Äãdepfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@‚Äãdepfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@‚Äãdepfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@‚Äãdepfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@‚Äãdepfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@‚Äãdepfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16515","RelatedDescription":"Open PR \"Update h3 1.13.1 ‚Üí 1.15.0 (minor)\" (#16515)"},{"Id":"2851790605","IsPullRequest":true,"CreatedAt":"2025-02-13T18:22:30","Actor":"RobinMalfait","Number":"16514","RawContent":null,"Title":"Allow `theme(‚Ä¶)` options when using `@import`","State":"open","Body":"This PR improves the developer experience when trying to use `theme(‚Ä¶)` options on an import.\r\n\r\nToday, if you want to use Tailwind CSS, you can import it as:\r\n\r\n```css\r\n@import \"tailwindcss\";\r\n```\r\n\r\nBut if you want to use any of the `theme(‚Ä¶)` options, like the `static` theme option, then you had to use this instead:\r\n\r\n```css\r\n@layer theme, base, components, utilities;\r\n\r\n@import 'tailwindcss/theme' layer(theme) theme(static);\r\n@import 'tailwindcss/preflight' layer(base);\r\n@import 'tailwindcss/utilities' layer(utilities);\r\n```\r\nIn this scenario you have to be careful, because the `layer(‚Ä¶)` _must_ be the first option after an import (according to the spec). So if you use `@import 'tailwindcss/theme' theme(static) layer(theme);` then that's not going to work either.\r\n\r\nThis PR solves that by allowing you to use the `theme(‚Ä¶)` options directly on the `@import` statement:\r\n\r\n```css\r\n@import 'tailwindcss' theme(static);\r\n```\r\n\r\nThe only edge case is when you want to use `theme(reference)`. A typical use case is for projects with `<style>` blocks where you want to _reference_ the CSS variables from the theme. \r\n\r\nIf you use `@import 'tailwindcss' theme(reference);`, then all `@theme` blocks will be references and you can reference theme values. This is good. The bad part is that `@import 'tailwindcss';` also includes preflight CSS. This means that we will import the preflight CSS for every `<style>` block. This is probably not what you want.\r\n\r\nThe solution is to use `@reference 'tailwindcss';` instead which strips all of that information and only gives you access to CSS variables.\r\n\r\nThis PR also makes sure that if you use `theme(reference)` on an import that we still throw an error and suggest you use `@reference` instead. This is not a breaking change because right now if you use `@import` with `theme(‚Ä¶)` options it will already throw an error.\r\n\r\n### Test plan:\r\n\r\n1. Added dedicated tests to make sure we don't throw anymore.\r\n2. Added test to make sure that we _do_ throw when using `theme(reference)` on an import.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16514","RelatedDescription":"Open PR \"Allow `theme(‚Ä¶)` options when using `@import`\" (#16514)"},{"Id":"2851658965","IsPullRequest":true,"CreatedAt":"2025-02-13T17:19:32","Actor":"philipp-spiess","Number":"16513","RawContent":null,"Title":"Allow `border-*` to match both color and size namesaces at the same time","State":"open","Body":"Closes #16343\r\n\r\nIn v3, if you had a `colors` and `borderWidth` key that resolved to the same value, using the `border-*` utility would actually match create both rules: https://play.tailwindcss.com/Loe4Z1eKky?file=config\r\n\r\nIn v4, however, it currently only looks at the color and then ends. This PR changes it to be compatible with v3.\r\n\r\nMy main motivation for fixing this is that this is actually more like the `@utility` API works right now already where this would generate both rules: https://play.tailwindcss.com/bQNe7wXOJb?file=css\r\n\r\n```css\r\n@utility border-* {\r\n  color: --value(--color-*);\r\n  border-width: --value(--border-width-*);\r\n}\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16513","RelatedDescription":"Open PR \"Allow `border-*` to match both color and size namesaces at the same time\" (#16513)"},{"Id":"2851571005","IsPullRequest":false,"CreatedAt":"2025-02-13T16:41:29","Actor":"tsalvetat","Number":"16512","RawContent":null,"Title":"[v4] Loss of Granular Configuration in TailwindCSS v4 - Cannot Restrict Colors to Specific Utilities?","State":"open","Body":"Hello Tailwind team,\n\nI am currently working on a **design system** built with Tailwind CSS, where we define styles in a granular way for various utilities such as text colors, background colors, border colors, margins, spacing, etc.\n\nIn **TailwindCSS v3**, we could configure colors and other properties in a fine-grained manner, restricting them to specific utilities. However, in **TailwindCSS v4**, the configuration system has become more generic, making it impossible (or unclear) how to achieve the same level of control.\n\n### **Loss of Granular Configuration**\n\nPreviously, we could define colors specific to certain properties, such as border colors:\n\n```js\ntheme: {\n  borderColor: {\n    'neutral': '#ccc',\n  }\n}\n```\n\nWhich allowed usage like this:\n\n```html\n<div class=\"border-neutral\"></div>\n```\n\nHowever, in **TailwindCSS v4**, the new system moves towards defining colors under `@theme` like this:\n\n```css\n@theme {\n  --color-neutral: #ccc;\n}\n```\n\nNow, this allows:\n\n```html\n<div class=\"border-neutral\"></div>\n```\n\nBut it also enables:\n\n```html\n<div class=\"bg-neutral\"></div>\n```\n\nWhich is **not** what we want, since we want to restrict certain colors to only `borderColor`, `textColor`, or `backgroundColor`.\n\n### **Impact on Design Systems**\n\n- This results in **less intuitive and stricter utility classes** than before.\n- It can lead to **inconsistencies** when colors meant for borders are mistakenly used for text or backgrounds.\n- The previous flexibility of defining properties per utility (`borderColor`, `textColor`, `backgroundColor`) seems to be lost.\n\n### **Request for a Solution or Roadmap**\n\n- Is there a way to **migrate this behavior** and maintain **granular control over colors and other utilities**?\n- If not, is there a **plan to reintroduce or support this kind of customization** in future releases of TailwindCSS?\n\nThank you for your time and for all your work on TailwindCSS! Any guidance on how to approach this in Tailwind v4 would be greatly appreciated.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16512","RelatedDescription":"Open issue \"[v4] Loss of Granular Configuration in TailwindCSS v4 - Cannot Restrict Colors to Specific Utilities?\" (#16512)"},{"Id":"2851519371","IsPullRequest":false,"CreatedAt":"2025-02-13T16:24:15","Actor":"jeremiahray","Number":"16510","RawContent":null,"Title":"Utilities are not generating in my output.css file","State":"closed","Body":"I am using the standalone tailwindcss CLI, and when I input my input.css and output.css, it is only generating about 541 lines of css in my output.css file. There are no utilities available to use.\n\nTailwindCSS v4.0.6","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16510","RelatedDescription":"Closed issue \"Utilities are not generating in my output.css file\" (#16510)"},{"Id":"2851353651","IsPullRequest":true,"CreatedAt":"2025-02-13T15:16:18","Actor":"philipp-spiess","Number":"16507","RawContent":null,"Title":"Upgrade: Handle `darkMode` value with block syntax","State":"open","Body":"Closes #16171\r\n\r\nThis PR handles `darkMode` variant configs containing braces (so creating sub-rules) the same way we handle it in the interop layer. Since the interop layer runs inside the `addVariant` API that we do not run here, I instead oped to copy the one liner.\r\n\r\n## Test plan\r\n\r\nUpdated one of the migration tests to include a rule that wasn't working before. Ensured the new output works via https://play.tailwindcss.com/nR99uhKtv3 ","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16507","RelatedDescription":"Open PR \"Upgrade: Handle `darkMode` value with block syntax\" (#16507)"},{"Id":"2851066053","IsPullRequest":true,"CreatedAt":"2025-02-13T15:02:59","Actor":"philipp-spiess","Number":"16504","RawContent":null,"Title":"Upgrade: Report errors when updating dependencies","State":"closed","Body":"Closes #16391\r\n\r\nLike the title suggest this PR adds error reporting when the `npm install` or `npm remove` commands fail.\r\n\r\n## Test plan\r\n\r\nTested by swapping out the command for `echo \"bla\"; exit 1` and capturing the output from the integration tests:\r\n\r\n<img width=\"792\" alt=\"Screenshot 2025-02-13 at 14 33 02\" src=\"https://github.com/user-attachments/assets/d1288114-106a-4ac6-a54b-d02b74c98f35\" />\r\n\r\n<img width=\"761\" alt=\"Screenshot 2025-02-13 at 14 31 05\" src=\"https://github.com/user-attachments/assets/6d5b9427-457f-4e67-9723-4e340da61749\" />\r\n\r\nDecided not to add a new test for this since it's unlikely we'll do big changes here and the upgrade integration tests are already quite slow.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16504","RelatedDescription":"Closed or merged PR \"Upgrade: Report errors when updating dependencies\" (#16504)"},{"Id":"2851110078","IsPullRequest":true,"CreatedAt":"2025-02-13T14:52:55","Actor":"philipp-spiess","Number":"16505","RawContent":null,"Title":"Add legacy type exports to `tailwindcss/plugin` export","State":"closed","Body":"Closes #16209\r\n\r\nThis PR exposes the following types that were accessible via `tailwindcss/types/config` in v3 now via the `tailwindcss/plugin` export:\r\n\r\n```ts\r\nimport type {Cofig, PluginAPI, PluginCreator, PluginsConfig, ThemeConfig } from 'tailwindcss/plugin'\r\n```\r\n\r\nNote that these types will not be the same as the v3 and just approximations, however it should be enough to upgrade plugins to work with v4.\r\n\r\n## Test plan\r\n\r\nTested in a standalone project importing a dev build of tailwindcss: \r\n\r\n<img width=\"1784\" alt=\"Screenshot 2025-02-13 at 14 50 48\" src=\"https://github.com/user-attachments/assets/27c04666-0106-414d-ba25-1a853f9d53d1\" />\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16505","RelatedDescription":"Closed or merged PR \"Add legacy type exports to `tailwindcss/plugin` export\" (#16505)"},{"Id":"2848859090","IsPullRequest":false,"CreatedAt":"2025-02-13T13:31:27","Actor":"kefranabg","Number":"16474","RawContent":null,"Title":"[v4] bg-gradient \"via-*\" regression","State":"closed","Body":"The `via-*` doesn't behave exactly the same in v4 compared to v3.\n\nIn v3 the `via-*` would not apply in dark mode unless explicitly defined with `dark:via-*` \n\nSee reproduction below (use dark mode):\n\nv3: https://play.tailwindcss.com/AMQVQTde5u\nv4: https://play.tailwindcss.com/yjYWAUQBCw\n\nSame code in both playground, but result's different\n\n\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16474","RelatedDescription":"Closed issue \"[v4] bg-gradient \"via-*\" regression\" (#16474)"},{"Id":"2850887198","IsPullRequest":false,"CreatedAt":"2025-02-13T12:30:27","Actor":"bbo76","Number":"16503","RawContent":null,"Title":"hover classes broken on lot of browser on Windows but not in chrome","State":"closed","Body":"Hello, I instanciate new react project with Vite and installed TailwindV4 with new vite installation method.\nThis code not work on Edge and Arc for windows but it work perfectly on Chrome :\n\n  <div className=\"bg-blue-700 hover:bg-red-400\">\n      <p>Hello</p>\n    </div>\n\nI'm up to date on every browsers and the :hover classes not work on Edge & Arc but it works on Chrome. Is it a chromium version issue or another problem ?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16503","RelatedDescription":"Closed issue \"hover classes broken on lot of browser on Windows but not in chrome\" (#16503)"},{"Id":"2850049892","IsPullRequest":false,"CreatedAt":"2025-02-13T11:44:24","Actor":"LookAtFr3sn0","Number":"16487","RawContent":null,"Title":"[v4] Can't resolve 'tailwindcss'","State":"closed","Body":"I just updated from v3 if that helps.\n\n[plugin:@tailwindcss/vite:generate:serve] Can't resolve 'tailwindcss' in '...\\assets'.\nThe next line points to the main.css file:\n\n```css\n@import url('https://fonts.googleapis.com/css2?family=Delius&family=Open+Sans:ital,wght@0,300..800;1,300..800')\nlayer(base);\n\n@import 'tailwindcss';\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16487","RelatedDescription":"Closed issue \"[v4] Can't resolve 'tailwindcss'\" (#16487)"},{"Id":"2850748421","IsPullRequest":false,"CreatedAt":"2025-02-13T11:27:34","Actor":"dcmayankavi","Number":"16498","RawContent":null,"Title":"Unexpected unknown at-rule \"@utility\"","State":"closed","Body":"While using TailwindCSS v4.0 getting **Unexpected unknown at-rule \"@utility\"** error in sonarcube while using below code:\n\n```\n@utility display-* {\n    display: --value([*]);\n}\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16498","RelatedDescription":"Closed issue \"Unexpected unknown at-rule \"@utility\"\" (#16498)"},{"Id":"2850730077","IsPullRequest":false,"CreatedAt":"2025-02-13T11:27:18","Actor":"iamalbinnj","Number":"16496","RawContent":null,"Title":"i cant use variable in tailwind react vite latest","State":"closed","Body":"`@import \"tailwindcss\";\n\n\n@theme{\n  --primary : #39db4a;\n}`\n\ngot error Unknown at rule @themecss(unknownAtRules) in index.css","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16496","RelatedDescription":"Closed issue \"i cant use variable in tailwind react vite latest\" (#16496)"},{"Id":"2850738205","IsPullRequest":false,"CreatedAt":"2025-02-13T11:26:12","Actor":"Blackfiskar","Number":"16497","RawContent":null,"Title":"Blazor TW V4 Upgrade - Could not determine config. file","State":"closed","Body":"Hello there \n\nI am fairly new to GitHub so apologies if the same issue was mentioned before, I couldnt find anything related to the displayed error message, which reads as follows: \n\n```\n**********************************************************************\n** Visual Studio 2022 Developer PowerShell v17.12.4\n** Copyright (c) 2022 Microsoft Corporation\n**********************************************************************\nPS C:\\...\\Desktop\\Projects\\EIOS> set-location -path C:\\Users\\dkaus\\Desktop\\Projects\\EIOS\\EIOS.Blazor\\EIOS.Blazor\nPS C:\\...\\Desktop\\Projects\\EIOS\\EIOS.Blazor\\EIOS.Blazor> npx @tailwindcss/upgrade\n‚âà tailwindcss v4.0.6\n\n‚îÇ Searching for CSS files in the current directory and its subdirectories‚Ä¶\n\n‚îÇ ‚Ü≥ Could not determine configuration file for: `.\\Styles\\app.css`\n‚îÇ   Update your stylesheet to use `@config` to specify the correct configuration file explicitly and then run the upgrade tool again.\n\n‚îÇ ‚Ü≥ Could not determine configuration file for: `.\\node_modules\\tailwindcss\\base.css`\n‚îÇ   Update your stylesheet to use `@config` to specify the correct configuration file explicitly and then run the upgrade tool again.\n\n‚îÇ ‚Ü≥ Could not determine configuration file for: `.\\node_modules\\tailwindcss\\components.css`\n‚îÇ   Update your stylesheet to use `@config` to specify the correct configuration file explicitly and then run the upgrade tool again.\n\n‚îÇ ‚Ü≥ Could not determine configuration file for: `.\\node_modules\\tailwindcss\\screens.css`\n‚îÇ   Update your stylesheet to use `@config` to specify the correct configuration file explicitly and then run the upgrade tool again.\n\n‚îÇ ‚Ü≥ Could not determine configuration file for: `.\\node_modules\\tailwindcss\\tailwind.css`\n‚îÇ   Update your stylesheet to use `@config` to specify the correct configuration file explicitly and then run the upgrade tool again.\n\n‚îÇ ‚Ü≥ Could not determine configuration file for: `.\\node_modules\\tailwindcss\\utilities.css`\n‚îÇ   Update your stylesheet to use `@config` to specify the correct configuration file explicitly and then run the upgrade tool again.\n\n‚îÇ ‚Ü≥ Could not determine configuration file for: `.\\node_modules\\tailwindcss\\variants.css`\n‚îÇ   Update your stylesheet to use `@config` to specify the correct configuration file explicitly and then run the upgrade tool again.\n```\n\nI am not sure what exactly causes this issue as I have been using TW V3 for a year now with Blazor and it worked really well. I am not sure if this issue is based on the framework I am using or just me being an absolute noob (which could be the case as I just got into programming a year ago). I am glad for any suggestions or hints! \n\nEdit: Also here is the current project structure I am using, as I am assuming it ahs something to do with it (Styles/app.css would be the input and wwwroot/app.csss the output) \n\n![Image](https://github.com/user-attachments/assets/7438de94-cf52-4e04-a2ef-802e2b75b557)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16497","RelatedDescription":"Closed issue \"Blazor TW V4 Upgrade - Could not determine config. file\" (#16497)"},{"Id":"2849572702","IsPullRequest":false,"CreatedAt":"2025-02-13T10:48:43","Actor":"wenbei","Number":"16480","RawContent":null,"Title":"Automatic source detection finds unused classess","State":"closed","Body":"The source detection is finding files outside of the `src` directory when imported in `src/app.css`. The output contains classes that are not used.\n\nCurrently I can fix it by disabling automatic source detection as noted in the docs. But based on what I understand from the docs, this should be identical to the base path used for source detection.\n```\n@import \"tailwindcss/utilities\" layer(utilities) source(none);\n@source \"../src\";\n```\n\n**Reproduce**\n1. Start with the create-vite template for svelte (https://github.com/vitejs/vite/tree/main/packages/create-vite/template-svelte-ts)\n2. `npm install tailwindcss @tailwindcss/vite` and add the plugin to `vite.config.ts`\n3. Delete all the styles in the files so the output css should be empty.\n4. `npm run build`\n\nBelow is the build output with no styles in `App.svelte` with only the utilities layer in `app.css`. \n`@import \"tailwindcss/utilities\" layer(utilities);`\n\n```\n/*! tailwindcss v4.0.6 | MIT License | https://tailwindcss.com */\n@layer utilities {\n  .absolute {\n    position: absolute;\n  }\n  .fixed {\n    position: fixed;\n  }\n  .relative {\n    position: relative;\n  }\n  .static {\n    position: static;\n  }\n  .container {\n    width: 100%;\n  }\n  .\\!block {\n    display: block !important;\n  }\n  .block {\n    display: block;\n  }\n  .contents {\n    display: contents;\n  }\n  .hidden {\n    display: none;\n  }\n  .inline {\n    display: inline;\n  }\n  .\\!transform {\n    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y) !important;\n  }\n  .transform {\n    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);\n  }\n  .resize {\n    resize: both;\n  }\n  .filter {\n    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);\n  }\n  .transition {\n    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow,\n      transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;\n    transition-timing-function: var(--tw-ease, ease);\n    transition-duration: var(--tw-duration, 0s);\n  }\n}\n@property --tw-rotate-x {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: rotateX(0);\n}\n@property --tw-rotate-y {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: rotateY(0);\n}\n@property --tw-rotate-z {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: rotateZ(0);\n}\n@property --tw-skew-x {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: skewX(0);\n}\n@property --tw-skew-y {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: skewY(0);\n}\n@property --tw-blur {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-brightness {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-contrast {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-grayscale {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-hue-rotate {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-invert {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-opacity {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-saturate {\n  syntax: \"*\";\n  inherits: false;\n}\n@property --tw-sepia {\n  syntax: \"*\";\n  inherits: false;\n}\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16480","RelatedDescription":"Closed issue \"Automatic source detection finds unused classess\" (#16480)"},{"Id":"2850408240","IsPullRequest":false,"CreatedAt":"2025-02-13T10:40:15","Actor":"TomFreudenberg","Number":"16491","RawContent":null,"Title":"Unexpected behavior when using additional screens for theme:","State":"closed","Body":"Using:\n\n```json\n    \"class-variance-authority\": \"0.7.1\",\n    \"clsx\": \"2.1.1\",\n    \"framer-motion\": \"12.4.2\",\n    \"lru-cache\": \"11.0.2\",\n    \"lucide-react\": \"0.475.0\",\n    \"next\": \"15.1.7\",\n    \"shadcn\": \"2.3.0\",\n\n    \"postcss\": \"8.5.2\",\n    \"prettier\": \"3.5.0\",\n    \"prettier-plugin-tailwindcss\": \"0.6.11\",\n    \"sass\": \"1.84.0\",\n    \"tailwind-merge\": \"3.0.1\",\n    \"tailwindcss\": \"3.4.17\",\n    \"tailwindcss-animate\": \"1.0.7\",\n    \"tailwindcss-base-font-size\": \"1.0.1\",\n    \"typescript\": \"5.7.3\"\n```\n\nI extended my theme by:\n\n```js\n    theme: {\n      screens: {\n        xs: '22.5rem',\n        ...defaultTheme.screens,\n      },\n```\n\nusing it like this, does show a warning:\n\n```\nwarn - The `min-*` and `max-*` variants are not supported with a `screens` configuration containing mixed units.\n```\n\nbut this took me a long time to come here, because if I use it like we do (having an additional `ws`):\n\n```js\n    theme: {\n      screens: {\n        xs: '22.5rem',\n        ...defaultTheme.screens,\n        ws: { raw: '(min-aspect-ratio: 3/2) and (max-height: 399px)' },\n      },\n```\n\nthe warning is never printed anymore.\n\nAfter correcting the `xs` into\n\n```js\n    theme: {\n      screens: {\n        xs: '360px',\n        ...defaultTheme.screens,\n        ws: { raw: '(min-aspect-ratio: 3/2) and (max-height: 399px)' },\n      },\n```\n\nour page is stil broken until we remove the `ws` screen even we don't use it.\n\nThis will not wrap anymore while `ws` exists:\n\n```html\n    <div\n      id=\"mission\"\n      className=\"flex justify-center bg-white px-4 text-slate-700 lg:px-12 xl:px-16 portrait:pb-10 portrait:pt-40 landscape:pb-32 landscape:pt-60\"\n    >\n      <div className=\"max-lg:flex-wrap max-lg:px-20 max-md:px-10 max-sm:px-6 flex h-full max-w-7xl items-start justify-center lg:gap-12 xl:gap-20 portrait:lg:px-20 landscape:lg:px-32\">\n```\n\nThese rules\n\n```\nmax-lg:flex-wrap max-lg:px-20 max-md:px-10 max-sm:px-6 \n```\n\ndo not match until `ws` is dropped.\n\n---\n\nI do not have an idea what might happen but would be happy about a feedback.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16491","RelatedDescription":"Closed issue \"Unexpected behavior when using additional screens for theme:\" (#16491)"},{"Id":"2848622960","IsPullRequest":false,"CreatedAt":"2025-02-13T10:34:01","Actor":"CiernaOvca","Number":"16470","RawContent":null,"Title":"[v4] custom color theme is overridden by default","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\n4.0.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite with plugin\n\n**What version of Node.js are you using?**\n\n22.13.1\n\n**What browser are you using?**\n\nChrome 132 / 133\nEdge 132 / 133\nBrave 132 / 133\nFirefox 134 / 135\n\n**What operating system are you using?**\n\nWindows 11. \n\n**Describe your issue**\nMy custom color theme is not reflected in the application after the migration.\n\n`index.css`\n```css\n  --color-*: initial;\n  --color-blue-100: #e8edf3; \n  --color-blue-200: #e8edf3;\n  --color-blue-300: #81d5d5;\n  --color-blue-400: #041938;\n  --color-blue-500: #051938;\n  --color-blue-600: #0000ff;\n  --color-blue-700: #0000ff;\n  --color-blue-800: #0000ff;\n  --color-blue-900: #0000ff;\n```\n\nused in the code as `bg-blue-200`\n\nresult:\n![Image](https://github.com/user-attachments/assets/e7884675-3858-496c-ad34-8432a7c9bf6e)\nthis translates to #bedbff, instead of #e8edf3\n\n\nthis works if I change `--color-blue-200` to just `--color-blue` and use it in code as `bg-blue`\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16470","RelatedDescription":"Closed issue \"[v4] custom color theme is overridden by default\" (#16470)"},{"Id":"2849838717","IsPullRequest":false,"CreatedAt":"2025-02-13T10:27:20","Actor":"callor","Number":"16483","RawContent":null,"Title":"Is this the stable version of tailwind v4?","State":"closed","Body":"\nVery good project, I am using it very well, thank you very much\n\nI tried applying it to Spring Boot and NextJS, but there are too many parts that don't apply. It's burdensome to upgrade.\n\nEven if you change the existing class, there are many cases where the classes in the official document are not applied.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16483","RelatedDescription":"Closed issue \"Is this the stable version of tailwind v4?\" (#16483)"},{"Id":"2850604241","IsPullRequest":false,"CreatedAt":"2025-02-13T10:25:26","Actor":"RemMai","Number":"16492","RawContent":null,"Title":"Difficult upgrade","State":"closed","Body":"I am using the Quasar framework.\nUpgrading from V3 to V4 has been a bumpy journey, with either an error message in my `tailwind.config.js` function or a message in Git stating that there are files with changes in the staging area that have not been committed. Why?\nSecondly, what could have been a pleasant use of 'apply' in every Vue file now requires referencing `@reference` under each tag. Is there a better solution?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16492","RelatedDescription":"Closed issue \"Difficult upgrade\" (#16492)"},{"Id":"2850217513","IsPullRequest":false,"CreatedAt":"2025-02-13T10:21:16","Actor":"nirban256","Number":"16489","RawContent":null,"Title":"Styling for scrollbar","State":"closed","Body":"The new TailwindCss website looks nice, but I feel it would be better and more useful as well as more visually appealing if we change the color of the scrollbar on the y-axis from the default color scrollbar to something which matches with the theme of the website.\n\nJust a suggestion, want to know the opinions of the authors of the repo and other people who are working in the organization.\nIf possible then I would like to work on this issue.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16489","RelatedDescription":"Closed issue \"Styling for scrollbar\" (#16489)"},{"Id":"2850111609","IsPullRequest":false,"CreatedAt":"2025-02-13T06:37:10","Actor":"kuchta","Number":"16488","RawContent":null,"Title":"vite: Type 'DevEnvironment' is not assignable to type 'Environment'.","State":"open","Body":"Simplest possible vite configuratin has TS error:\n\nvite.config.ts:\n```\nexport default defineConfig({\n\tbase: process.env.BASE_URL ?? '/',\n\tbuild: {\n\t\tsourcemap: true,\n\t},\n\tplugins: [\n\t\ttailwindcss(),\n\t]\n}\n```\n\nVite now uses PluginOption instead of Plugin, so maybe it need some update.\n\n\n```\nNo overload matches this call.\n  The last overload gave the following error.\n    Type 'Plugin<any>[]' is not assignable to type 'PluginOption'.\n      Type 'Plugin<any>[]' is not assignable to type 'PluginOption[]'.\n        Type 'Plugin<any>' is not assignable to type 'PluginOption'.\n          Type 'import(\"/Users/kuchta/Projects/radixverse/node_modules/.deno/vite@6.1.0_1/node_modules/vite/dist/node/index\").Plugin<any>' is not assignable to type 'import(\"/Users/kuchta/Projects/radixverse/node_modules/.deno/vite@6.1.0/node_modules/vite/dist/node/index\").Plugin<any>'.\n            Types of property 'hotUpdate' are incompatible.\n              Type 'import(\"/Users/kuchta/Projects/radixverse/node_modules/.deno/rollup@4.34.6/node_modules/rollup/dist/rollup\").ObjectHook<(this: HotUpdatePluginContext, options: import(\"/Users/kuchta/Projects/radixverse/node_modules/.deno/vite@6.1.0_1/node_modules/vite/dist/node/index\").HotUpdateOptions) => void | ... 1 more ... | Pr...' is not assignable to type 'import(\"/Users/kuchta/Projects/radixverse/node_modules/.deno/rollup@4.34.6/node_modules/rollup/dist/rollup\").ObjectHook<(this: HotUpdatePluginContext, options: import(\"/Users/kuchta/Projects/radixverse/node_modules/.deno/vite@6.1.0/node_modules/vite/dist/node/index\").HotUpdateOptions) => void | ... 1 more ... | Prom...'.\n                Type '(this: HotUpdatePluginContext, options: HotUpdateOptions) => void | EnvironmentModuleNode[] | Promise<void | EnvironmentModuleNode[]>' is not assignable to type 'ObjectHook<(this: HotUpdatePluginContext, options: HotUpdateOptions) => void | EnvironmentModuleNode[] | Promise<void | EnvironmentModuleNode[]>> | undefined'.\n                  Type '(this: HotUpdatePluginContext, options: import(\"/Users/kuchta/Projects/radixverse/node_modules/.deno/vite@6.1.0_1/node_modules/vite/dist/node/index\").HotUpdateOptions) => void | ... 1 more ... | Promise<...>' is not assignable to type '(this: HotUpdatePluginContext, options: import(\"/Users/kuchta/Projects/radixverse/node_modules/.deno/vite@6.1.0/node_modules/vite/dist/node/index\").HotUpdateOptions) => void | ... 1 more ... | Promise<...>'.\n                    The 'this' types of each signature are incompatible.\n                      Type 'HotUpdatePluginContext' is not assignable to type 'HotUpdatePluginContext'. Two different types with this name exist, but they are unrelated.\n                        The types of 'environment.pluginContainer.environment' are incompatible between these types.\n                          Type 'import(\"/Users/kuchta/Projects/radixverse/node_modules/.deno/vite@6.1.0/node_modules/vite/dist/node/index\").Environment' is not assignable to type 'import(\"/Users/kuchta/Projects/radixverse/node_modules/.deno/vite@6.1.0_1/node_modules/vite/dist/node/index\").Environment'.\n                            Type 'DevEnvironment' is not assignable to type 'Environment'.\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16488","RelatedDescription":"Open issue \"vite: Type 'DevEnvironment' is not assignable to type 'Environment'.\" (#16488)"},{"Id":"2849968574","IsPullRequest":false,"CreatedAt":"2025-02-13T05:08:17","Actor":"Lornz-","Number":"16486","RawContent":null,"Title":"Cannot apply unknown utility class:","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16486","RelatedDescription":"Closed issue \"Cannot apply unknown utility class:\" (#16486)"},{"Id":"2849572156","IsPullRequest":false,"CreatedAt":"2025-02-13T00:21:05","Actor":"jhackett1","Number":"16479","RawContent":null,"Title":"Simple peer-checked usage not working after v4","State":"closed","Body":"I have a \"concealed radio button\" component in my codebase that looks like:\n\n```\n <div key={vol} className=\"relative\">\n    <input\n        type=\"radio\"\n        value={vol}\n        id={`expected-volumes-${vol}`}\n        className=\"peer absolute opacity-0\"\n        {...helpers.register(\"onboardingInfo.expectedVolumes\")}\n    />\n    <label\n        className=\"text-lg block p-2 rounded-sm  bg-grey-200 text-green-800 cursor-pointer peer-checked:bg-green-800 peer-checked:text-white\"\n        htmlFor={`expected-volumes-${vol}`}\n    >\n        {vol}\n    </label>\n</div>\n```\n\nThe `peer-checked` classes are applied 100% of the time, rather than only when the peer input is checked.\n\nThis usage seems consistent with [the docs](https://tailwindcss.com/docs/hover-focus-and-other-states#styling-based-on-sibling-state), does not seem to be related to the more complex use that was causing a problem in [this issue](https://github.com/tailwindlabs/tailwindcss/discussions/13626) and `peer` isn't mentioned in [this upgrade guide](https://tailwindcss.com/docs/upgrade-guide).\n\nWas working as expected before our v4 upgrade.\n\nWhat am I doing wrong?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16479","RelatedDescription":"Closed issue \"Simple peer-checked usage not working after v4\" (#16479)"},{"Id":"2849413715","IsPullRequest":false,"CreatedAt":"2025-02-12T21:42:45","Actor":"MariusVatasoiu","Number":"16478","RawContent":null,"Title":"[v4][cli] The --minify and --optimize options remove CSS from output","State":"open","Body":"I have the following tailwind file and I get two different results when I use or not the `--minify` or `--optimize` flags. \n\n```css\n@import \"tailwindcss\";\n\n@custom-variant dark {\n  &:where(.dark, .dark *) {\n    @slot;\n  }\n  @container style(--dark-mode) {\n    @slot;\n  }\n}\n```\n\nFor this HTML:\n\n```html\n<div class=\"dark:hidden\">Hello</div>\n```\n\nWithout the `--minify` or `--optimize` flags, I get:\n\n```css\n@layer utilities {\n  .dark\\:hidden {\n    &:where(.dark, .dark *) {\n      display: none;\n    }\n    @container style(--dark-mode) {\n      display: none;\n    }\n  }\n}\n```\n\nWith `--minify` or `--optimize` flags, I get:\n\n```css\n.dark\\:hidden:where(.dark,  .dark *){\n  display:none;\n}\n```\n\nThe `@container style(--dark-mode){...}` part is removed, even though I need it for shadow DOM. If I remove `&:where(.dark, .dark *) {...}`, then I lose support for Light DOM in Firefox and older Chrome and Safari versions.\n\nThe issue seems to be in the optimize mechanism, since minify means minify + optimize.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16478","RelatedDescription":"Open issue \"[v4][cli] The --minify and --optimize options remove CSS from output\" (#16478)"},{"Id":"2849073577","IsPullRequest":false,"CreatedAt":"2025-02-12T18:54:56","Actor":"KEvin-Topiya","Number":"16476","RawContent":null,"Title":"border is not working in firefox ESL","State":"closed","Body":"![Image](https://github.com/user-attachments/assets/fcd38171-35e1-462a-b5ba-f0ca47d12ae5) \nthis is mine firefox in this tailwind border is not working. when i check tailwind docs also there border is not shown \n\n![Image](https://github.com/user-attachments/assets/6a6ffdf2-7359-49ca-8bc9-82387fd01a07)\n\nbut in brave it works\n\n![Image](https://github.com/user-attachments/assets/174f8053-fa92-47bb-afe4-31e5d0a9c87c)\n\nso please do something","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16476","RelatedDescription":"Closed issue \"border is not working in firefox ESL\" (#16476)"},{"Id":"2848627901","IsPullRequest":true,"CreatedAt":"2025-02-12T17:36:03","Actor":"philipp-spiess","Number":"16471","RawContent":null,"Title":"Emit `--tw-drop-shadow` property","State":"closed","Body":"Fixes #16461\r\n\r\nEnsure we also emit `@property --tw-drop-shadow`.\r\n\r\n## Test plan\r\n\r\n```\r\n<div class=\"drop-shadow-2xl size-72 bg-white\">\r\n  <div class=\"size-48 saturate-100 bg-white\"></div>\r\n</div>\r\n```\r\n\r\nnow only drops one shadow (screenshot from Vite playground):\r\n\r\n<img width=\"562\" alt=\"Screenshot 2025-02-12 at 16 37 25\" src=\"https://github.com/user-attachments/assets/94eaaf54-6fd5-4d10-9297-9e7523a02602\" />\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16471","RelatedDescription":"Closed or merged PR \"Emit `--tw-drop-shadow` property\" (#16471)"},{"Id":"2848605791","IsPullRequest":true,"CreatedAt":"2025-02-12T17:16:31","Actor":"philipp-spiess","Number":"16469","RawContent":null,"Title":"Read from `--default-outline-width`","State":"closed","Body":"Closes https://github.com/tailwindlabs/tailwindcss.com/issues/2073\r\n\r\nThis ensures that we can customize `outline` via `--default-outline-width` just like `ring`, `border`, and other utilities. \r\n\r\n## Test plan\r\n\r\nAdded unit tests for `--default-outline-width` and `--default-ring-width`","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16469","RelatedDescription":"Closed or merged PR \"Read from `--default-outline-width`\" (#16469)"},{"Id":"2848837377","IsPullRequest":false,"CreatedAt":"2025-02-12T16:59:53","Actor":"manjindersarkaria","Number":"16473","RawContent":null,"Title":"Vite + Vue: Module `@tailwindcss/vite` Not Found in Existing Project","State":"closed","Body":"\n### Discussed in https://github.com/tailwindlabs/tailwindcss/discussions/16250\n\n<div type='discussions-op-text'>\n\n<sup>Originally posted by **manjindersarkaria** February  4, 2025</sup>\nIs anyone facing issues with Vite? I installed `@tailwindcss/vite` as a dependency following the documentation. Then, in `vite.config.ts`, I added the import:  \r\n\r\n```ts\r\nimport tailwindcss from '@tailwindcss/vite';\r\n\r\nexport default defineConfig({\r\n  plugins: [tailwindcss()],\r\n});\r\n```\r\n\r\nHowever, I‚Äôm getting an error saying that the module `@tailwindcss/vite` could not be found. Has anyone encountered this issue before or found a solution?</div>","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16473","RelatedDescription":"Closed issue \"Vite + Vue: Module `@tailwindcss/vite` Not Found in Existing Project\" (#16473)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-02-14T03:30:21.8993076Z","RunDurationInMilliseconds":535}