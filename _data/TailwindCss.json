{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2855005882","IsPullRequest":false,"CreatedAt":"2025-02-15T01:19:08","Actor":"brunnobb","Number":"16559","RawContent":null,"Title":"Compiler generating invalid syntax that throws on NextJS","State":"open","Body":"What version of Tailwind CSS are you using?\n\nv4.0.6\n\nWhat build tool (or framework if it abstracts the build tool) are you using?\n\nNextJs\n\nWhat version of Node.js are you using?\n\nv22\n\nWhat browser are you using?\n\nChrome\n\nWhat operating system are you using?\n\nWindows\n\nReproduction URL\n\nhttps://github.com/brunnobb/nextjs-tailwind4-error\n\nDescribe your issue\n\n\nJust created a brand new NextJS V15 (same happens on V14) and installed tailwind.\nIf using turbopack (--turbo on npm run dev) tailwind is generating invalid syntax code\n\nError does not happen when using webpack. (turbopack check for this invalid syntax)\nYou can even test on code that is commented out due to the compiler scanning possible tokens\n\n\n![Image](https://github.com/user-attachments/assets/6334722a-0e46-4b9e-ab93-2815538799ea)\n\n\nThat throws an error \n\n\n![Image](https://github.com/user-attachments/assets/a6933ce8-8bbf-4504-862f-d869fb2b5b5f)\n\n\nOn v3.X, I was able to use brackets syntax dynamically all over the code. \nI understand that it got changed, and we should use complete class names but should this token be created in first place?\n\n\n\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16559","RelatedDescription":"Open issue \"Compiler generating invalid syntax that throws on NextJS\" (#16559)"},{"Id":"2854738569","IsPullRequest":true,"CreatedAt":"2025-02-14T21:32:34","Actor":"depfu[bot]","Number":"16558","RawContent":null,"Title":"Update postcss-selector-parser 7.0.0 ‚Üí 7.1.0 (minor)","State":"open","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ‚ú≥Ô∏è postcss-selector-parser (7.0.0 ‚Üí 7.1.0) ¬∑ [Repo](https://github.com/postcss/postcss-selector-parser) ¬∑ [Changelog](https://github.com/postcss/postcss-selector-parser/blob/master/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/postcss/postcss-selector-parser/releases/tag/v7.1.0\">7.1.0</a></h4>\n\n<blockquote><h1 dir=\"auto\">7.1.0</h1>\n<ul dir=\"auto\">\n<li>feat: insert(Before|After) support multiple new node</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/postcss-selector-parser/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/postcss/postcss-selector-parser/compare/6158750aab0aed3046a5920bd58e0e0266a4ada2...ea6cd9324b4be90a4c529c3602deefbc4a2d7a82\">See the full diff on Github</a>. The new version differs by 4 commits:</p>\n<ul>\n<li><a href=\"https://github.com/postcss/postcss-selector-parser/commit/ea6cd9324b4be90a4c529c3602deefbc4a2d7a82\"><code>chore(release): 7.1.0</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss-selector-parser/commit/3f5ecb647910d2d1408f6dd0ec45dedf695ab556\"><code>feat: insert(Before|After) support multiple new node (#302)</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss-selector-parser/commit/e254e601a51aea9df80e9302b314ff7181ece132\"><code>docs: update `replaceWith` arguments (#300)</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss-selector-parser/commit/56d7fea028855adb74c451c435e55580cd0f1679\"><code>chore: fix comments (#296)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@‚Äãdepfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@‚Äãdepfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@‚Äãdepfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@‚Äãdepfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@‚Äãdepfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@‚Äãdepfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@‚Äãdepfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@‚Äãdepfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@‚Äãdepfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16558","RelatedDescription":"Open PR \"Update postcss-selector-parser 7.0.0 ‚Üí 7.1.0 (minor)\" (#16558)"},{"Id":"2854556455","IsPullRequest":false,"CreatedAt":"2025-02-14T19:30:03","Actor":"SisypheOvO","Number":"16557","RawContent":null,"Title":"Adding to <html>,<body> styles seems unelegant implementation for SSG","State":"open","Body":"Adding to <html>,<body> styles seems unelegant for static site generators like vitepress, Jekyll, Hugo, etc.\n\n![Image](https://github.com/user-attachments/assets/fdcc38ba-db81-4f02-af54-337376027754)\n\nThe image showed sentences in the docs but it doesn‚Äôt mention things about adding Tailwind classes to elements like <html> and <body>.\n\nThe frameworks I listed ( probably there are more... like Nextjs, Nuxtjs or something ) generate index.html as compilation results and put it in the */dist directory. To reach the element <html> and <body> I know two ways:\n\n1. Use JS to get the element\n2. Edit styles in the compiled html file ( which is obviously unelegant and away from the original intension of Tailwind )\n\nThe first one WON'T WORK I think, because Tailwind scan files not covered by the content file globs as strings, whether those files contain HTML, JavaScript or any other language.\n\nIf there is a problem with my understanding, I welcome anyone to correct me üò¢  \n\nI‚Äòm asking this to find out, if there is a elegant way we could probably reach these elements?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16557","RelatedDescription":"Open issue \"Adding to <html>,<body> styles seems unelegant implementation for SSG\" (#16557)"},{"Id":"2854246836","IsPullRequest":false,"CreatedAt":"2025-02-14T19:16:12","Actor":"octoper","Number":"16553","RawContent":null,"Title":"[v4] `after:focus-within:ring` is not working as in v3","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite v5.4.14\n\n**What version of Node.js are you using?**\n\nNodeJS v20.13.1\n\n**What browser are you using?**\n\nChrome, but also checked other browsers like Firefox and Safari\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/OAD9WcRBin\n\n**Describe your issue**\n\n`after:focus-within:ring-*` in v4 is not working as in v3 and haven't found any changes in the doc about it","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16553","RelatedDescription":"Closed issue \"[v4] `after:focus-within:ring` is not working as in v3\" (#16553)"},{"Id":"2854520748","IsPullRequest":false,"CreatedAt":"2025-02-14T19:07:19","Actor":"Borzik","Number":"16555","RawContent":null,"Title":"Linux ARM64 standalone build for v4 is just Bun","State":"open","Body":"All standalone builds for linux arm64 (tested versions up to 4.0.6 incl. alpha and beta) are just Bun executables without tailwindcss itself.\n\nTo reproduce:\n```Dockerfile\nFROM ubuntu:24.04\nWORKDIR /app\nRUN apt-get update && apt-get install -y wget\nRUN wget https://github.com/tailwindlabs/tailwindcss/releases/download/v4.0.6/tailwindcss-linux-arm64 && chmod +x tailwindcss-linux-arm64\nCMD \"/app/tailwindcss-linux-arm64\"\n```\n\n```shell\ndocker build --platform=linux/arm64 . -t docker-tailwind && docker run --platform=linux/arm64 --rm -it docker-tailwind\n```\n\nReturn:\n```\nBun is a fast JavaScript runtime, package manager, bundler, and test runner. (1.1.43+76800b049)\n\nUsage: bun <command> [...flags] [...args]\n\nCommands:\n  run       ./my-script.ts       Execute a file with Bun\n[...]\n```\n\nIf I swap v4.0.6 for v3.4.17, it will return correct tailwindcss intro:\n```\ntailwindcss v3.4.17\n\nUsage:\n   tailwindcss [--input input.css] [--output output.css] [--watch] [options...]\n   tailwindcss init [--full] [--postcss] [options...]\n```\n\n### Alpine arm64 musl build has the same issue\n```Dockerfile\nFROM alpine:3.21.3\nWORKDIR /app\nRUN apk add wget libstdc++ libgcc\nRUN wget https://github.com/tailwindlabs/tailwindcss/releases/download/v4.0.6/tailwindcss-linux-arm64-musl && chmod +x tailwindcss-linux-arm64-musl\nCMD \"/app/tailwindcss-linux-arm64-musl\"\n```\n\n```\ndocker build --platform=linux/arm64 . -t docker-tailwind && docker run --platform=linux/arm64 --rm -it docker-tailwind\n```\n\nReturns:\n```\nBun is a fast JavaScript runtime, package manager, bundler, and test runner. (1.1.43+76800b049)\n\nUsage: bun <command> [...flags] [...args]\n```\n\n### Running x64 build on x64 platform works fine:\n```Dockerfile\nFROM ubuntu:24.04\nWORKDIR /app\nRUN apt-get update && apt-get install -y wget\nRUN wget https://github.com/tailwindlabs/tailwindcss/releases/download/v4.0.6/tailwindcss-linux-x64 && chmod +x tailwindcss-linux-arm64\nCMD \"/app/tailwindcss-linux-x64\"\n```\n\nRemoving platform args (running on macos):\n```shell\ndocker build . -t docker-tailwind && docker run --rm -it docker-tailwind\n```\n\nReturn:\n```\n‚âà tailwindcss v4.0.6\n\nUsage:\n  tailwindcss [--input input.css] [--output output.css] [--watch] [options‚Ä¶]\n\nOptions:\n  -i, --input ¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑ Input file\n  -o, --output ¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑ Output file [default:‚ÄØ`-`]\n  -w, --watch ¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑ Watch for changes and rebuild as needed\n  -m, --minify ¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑ Optimize and minify the output\n      --optimize ¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑ Optimize the output without minifying\n      --cwd ¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑ The current working directory [default:‚ÄØ`.`]\n  -h, --help ¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑¬∑ Display usage information\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16555","RelatedDescription":"Open issue \"Linux ARM64 standalone build for v4 is just Bun\" (#16555)"},{"Id":"2854404893","IsPullRequest":false,"CreatedAt":"2025-02-14T19:02:37","Actor":"danwetherald","Number":"16554","RawContent":null,"Title":"v4 - Input border colors not consistent with element border colors. Input borders appear darker","State":"closed","Body":"Here is an example to show the contrast from a div border vs input border\n\n<img width=\"737\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f1767ed7-7ecb-443a-b2b8-1d5f9613bab2\" />\n\n```\n<div class=\"mt-4 border-2 rounded border-blue-600\">\n      <%= form.label :description, \"Description\", class: \"label-primary\" %>\n      <%= form.text_area :description,\n                     rows: 4,\n                     class: \"focus:border-blue-600\",\n                     placeholder: \"Product description\" %>\n</div>\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16554","RelatedDescription":"Closed issue \"v4 - Input border colors not consistent with element border colors. Input borders appear darker\" (#16554)"},{"Id":"2853554570","IsPullRequest":true,"CreatedAt":"2025-02-14T17:14:14","Actor":"philipp-spiess","Number":"16539","RawContent":null,"Title":"Fix plugins with nested rules refering to the utility name","State":"closed","Body":"Closes https://github.com/tailwindlabs/tailwindcss-typography/issues/383\r\n\r\nThis PR fixes an issue that happened when JavaScript plugins create a nested rule that references to the utility name. The previous behavior looked like this:\r\n\r\n![image](https://github.com/user-attachments/assets/93ff869d-c95b-49d0-879c-7c20a852fa09)\r\n\r\nI was able to come up with an approach that can be fixed entirely in the compat layer by leveraging the `raw` field on the candidate. \r\n\r\n## Test plan\r\n\r\n- Added unit tests\r\n- Verified with the reproduction from https://github.com/tailwindlabs/tailwindcss-typography/issues/383:\r\n      \r\n    <img width=\"1458\" alt=\"Screenshot 2025-02-14 at 13 21 22\" src=\"https://github.com/user-attachments/assets/50544abc-e98f-48cd-b78c-ad7697387dd8\" />\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16539","RelatedDescription":"Closed or merged PR \"Fix plugins with nested rules refering to the utility name\" (#16539)"},{"Id":"2854235460","IsPullRequest":false,"CreatedAt":"2025-02-14T16:43:27","Actor":"amendezm","Number":"16552","RawContent":null,"Title":"Tailwind v4: Global reset affecting main project when importing a library","State":"open","Body":"### Problem Description:\n\nSince upgrading from Tailwind v3 to v4, I've encountered an issue where the global reset rules defined by \n```css\n*:not(#\\#), \n:not(#\\#):after, \n:not(#\\#):before, \n:not(#\\#)::backdrop { \n    box-sizing: border-box; \n    border: 0 solid; \n    margin: 0; \n    padding: 0; \n} \n```\nare being applied to my entire project, including elements I do not intend to affect. This was not a problem when using Tailwind v3.\n\nThe issue arises when importing my custom library (which uses Tailwind v4) into my main project. The styles are overriding the intended layout and design in my main project, even though the reset should ideally only affect elements within the library itself.\n\n### Steps to Reproduce:\n- Create a project using Tailwind v4.\n- Import a library that uses Tailwind v4.\n- Observe the global reset being applied to the entire project, which was not the case in Tailwind v3.\n\n### Expected Behavior:\nThe *:not(#\\#) rule (or any other global reset) should only affect elements within the library and not the entire project. This behavior was present in Tailwind v3, but now it is impacting the broader scope of my project in v4.\n\n### Additional Context:\n- Tailwind v3 did not exhibit this behavior.\n- I expect the reset to be scoped more narrowly or configurable to avoid side effects in the main project.\n\n### Environment:\n- Tailwind version: v4\n- Node version: 22.13.1\n- React version: 19\n- Vite version: 2.7.3\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16552","RelatedDescription":"Open issue \"Tailwind v4: Global reset affecting main project when importing a library\" (#16552)"},{"Id":"2851353651","IsPullRequest":true,"CreatedAt":"2025-02-14T15:48:53","Actor":"philipp-spiess","Number":"16507","RawContent":null,"Title":"Upgrade: Handle `darkMode` value with block syntax","State":"closed","Body":"Closes #16171\r\n\r\nThis PR handles `darkMode` variant configs containing braces (so creating sub-rules) the same way we handle it in the interop layer. Since the interop layer runs inside the `addVariant` API that we do not run here, I instead oped to copy the one liner.\r\n\r\n## Test plan\r\n\r\nUpdated one of the migration tests to include a rule that wasn't working before. Ensured the new output works via https://play.tailwindcss.com/nR99uhKtv3 ","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16507","RelatedDescription":"Closed or merged PR \"Upgrade: Handle `darkMode` value with block syntax\" (#16507)"},{"Id":"2853884402","IsPullRequest":true,"CreatedAt":"2025-02-14T15:48:35","Actor":"sonofmagic","Number":"16542","RawContent":null,"Title":"Expose AST scope and parsing methods","State":"closed","Body":"In the current Tailwind CSS functionality, we may need to perform some static analysis on existing projects, including parsing the project's CSS, obtaining the AST, and performing transformations (similar to PostCSS's API). \r\n\r\nHowever, the currently exposed API does not provide such capabilities. Therefore, the purpose of this PR is to introduce these changes.\r\n\r\n```ts\r\nimport { CSS, parseCss, CompileOptions } from 'tailwindcss'\r\n\r\nfunction getContext(css: string, opts: CompileOptions = {}) {\r\n  return parseCss(CSS.parse(css), opts)\r\n}\r\n\r\nconst ctx = await getContext('@import \\'tailwindcss\\';')\r\n// do stuff\r\n// ...\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16542","RelatedDescription":"Closed or merged PR \"Expose AST scope and parsing methods\" (#16542)"},{"Id":"2853653586","IsPullRequest":false,"CreatedAt":"2025-02-14T14:42:37","Actor":"jan-dh","Number":"16540","RawContent":null,"Title":"[v4.0.6] @keyframes animation breaks on build ","State":"closed","Body":"Tailwind v4.0.6\n@tailwindcss/vite 4.0.6\n\nThis keyframe statement (not in a config file, just in my css file\n```\n@keyframes rotate-cover {\n\t0% {\n\t\ttransform: scale(1);\n\t\tz-index: 1;\n\t}\n\t50% {\n\t\tz-index: 10;\n\t\ttransform: scale(1.15);\n\t\tfilter: drop-shadow(0 0 0.75rem crimson);\n\t\t&:before {\n\t\t\topacity: 1;\n\t\t}\n\t}\n\t100% {\n\t\tz-index: 1;\n\t\ttransform: scale(1);\n\t}\n}\n```\nGets transformed on build to:\n```\n@keyframes rotate-cover{0%{z-index:1;transform:scale(1)}100%{z-index:1;transform:scale(1)}\n```\n\nThe 50% step is just left out. ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16540","RelatedDescription":"Closed issue \"[v4.0.6] @keyframes animation breaks on build \" (#16540)"},{"Id":"2853397964","IsPullRequest":false,"CreatedAt":"2025-02-14T11:14:32","Actor":"Leoyang0717","Number":"16537","RawContent":null,"Title":"group-visited doesn't work in Safari and mobile browsers","State":"open","Body":"## What version of Tailwind CSS are you using?\n\nv4.0.0\n\n## What browser are you using?\n\nThis bug appears on Safari and mobile but not in Chrome.\n\n## Chrome it's work\n\n<img width=\"500\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f227220e-06d5-4a58-8d5a-6aacb352689f\" />\n\n## Safari\n\n<img width=\"500\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/dd0da4ba-4920-441b-b2b4-c7e4f7996ed6\" />\n\n## Chrome  & Safari mobile\n<img width=\"300\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/d0c0dfe4-a190-4388-a670-50e5a31a072e\" />\n<img width=\"300\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/7f8bd164-8e9c-49fc-a83c-0b61c2bcca44\" />\n\n## Reproduction URL\n\nhttps://play.tailwindcss.com/TTbwnIDE64\n\n## Describe your issue\n\nWhen upgrading from v3.4.17 to v4.0.0, I encountered an issue on Safari and mobile devices where the visited state does not change the color as expected.\n\nI suspect that `:is` or `:where` combined with `:visited` might not be compatible with Safari or mobile browsers or is it actually not recommended to use `group-visited`?\n\n```\nv4.0.0 compile result, doesn't work!\n.group-visited\\:text-red-600 {\n  &:is(:where(.group):visited *) {\n    color: var(--color-red-600) /* oklch(0.577 0.245 27.325) */;\n  }\n}\n\nv3.4.17 compile result, work!\n.group:visited .group-visited\\:text-red-600 {\n  color: rgb(220 38 38 ) /* #dc2626 */;\n}\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16537","RelatedDescription":"Open issue \"group-visited doesn't work in Safari and mobile browsers\" (#16537)"},{"Id":"2852734529","IsPullRequest":false,"CreatedAt":"2025-02-14T10:44:57","Actor":"dizdep","Number":"16529","RawContent":null,"Title":"Tailwind error with icomoon","State":"closed","Body":"Recently i decided to migrate from tailwind 3 to 4 version and got this type of error\n> src/icomoon/style.css:1:1: `@layer base` is used but no matching `@tailwind base` directive is present.\n\n//style.css\n```\n@font-face {\n  font-family: 'icomoon';\n  src:  url('fonts/icomoon.eot?txz8js');\n  src:  url('fonts/icomoon.eot?txz8js#iefix') format('embedded-opentype'),\n    url('fonts/icomoon.ttf?txz8js') format('truetype'),\n    url('fonts/icomoon.woff?txz8js') format('woff'),\n    url('fonts/icomoon.svg?txz8js#icomoon') format('svg');\n  font-weight: normal;\n  font-style: normal;\n  font-display: block;\n}\n```\n\ni used this command from upgrade guide: \n\n> npx @tailwindcss/upgrade\n\nany idea how to fix it?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16529","RelatedDescription":"Closed issue \"Tailwind error with icomoon\" (#16529)"},{"Id":"2852115443","IsPullRequest":true,"CreatedAt":"2025-02-14T10:44:43","Actor":"depfu[bot]","Number":"16515","RawContent":null,"Title":"Update h3 1.13.1 ‚Üí 1.15.0 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ‚ú≥Ô∏è h3 (1.13.1 ‚Üí 1.15.0) ¬∑ [Repo](https://github.com/unjs/h3) ¬∑ [Changelog](https://github.com/unjs/h3/blob/main/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/unjs/h3/releases/tag/v1.15.0\">1.15.0</a></h4>\n\n<blockquote><p dir=\"auto\"><a href=\"https://bounce.depfu.com/github.com/unjs/h3/compare/v1.14.0...v1.15.0\">compare changes</a></p>\n<ul dir=\"auto\">\n<li>Migrate from <code class=\"notranslate\">unenv</code> v1 to <code class=\"notranslate\">node-mock-http</code> (<a href=\"https://bounce.depfu.com/github.com/unjs/h3/pull/970\">#970</a>)</li>\n</ul></blockquote>\n<h4><a href=\"https://github.com/unjs/h3/releases/tag/v1.14.0\">1.14.0</a></h4>\n\n<blockquote><p dir=\"auto\"><a href=\"https://bounce.depfu.com/github.com/unjs/h3/compare/v1.13.1...v1.14.0\">compare changes</a></p>\n<h3 dir=\"auto\">üöÄ Enhancements</h3>\n<ul dir=\"auto\">\n<li>\n<strong>session:</strong> Allow using with crossws hooks (<a href=\"https://bounce.depfu.com/github.com/unjs/h3/pull/960\">#960</a>)</li>\n</ul>\n<h3 dir=\"auto\">‚ù§Ô∏è Contributors</h3>\n<ul dir=\"auto\">\n<li>Pooya Parsa (<a href=\"https://bounce.depfu.com/github.com/pi0\">@pi0</a>)</li>\n<li>Kanonji (<a href=\"https://bounce.depfu.com/github.com/kanonji\">@kanonji</a>)</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/h3/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/unjs/h3/compare/9e0812ca9c339fd16f71c805f26eea0afc12a034...da29b022ada78957fa7c47203c1d15249331d094\">See the full diff on Github</a>. The new version differs by 10 commits:</p>\n<ul>\n<li><a href=\"https://github.com/unjs/h3/commit/da29b022ada78957fa7c47203c1d15249331d094\"><code>chore(release): v1.15.0</code></a></li>\n<li><a href=\"https://github.com/unjs/h3/commit/ae316c9ee2857a4f6e33368e06fcb5dfa091b821\"><code>chore: bump node-mock-http to v1</code></a></li>\n<li><a href=\"https://github.com/unjs/h3/commit/301cb170d420c42ae5d5f32b97cf6d59f36d2f4f\"><code>feat: migrate from `unenv` v1 to `node-mock-http` (#970)</code></a></li>\n<li><a href=\"https://github.com/unjs/h3/commit/d19ca8a346b21cac4f56dca6658b0069ec3dac12\"><code>chore: update branch</code></a></li>\n<li><a href=\"https://github.com/unjs/h3/commit/1fd195092daf7365e2ffbbff766c3a487f59c92e\"><code>chore(deps): update all non-major dependencies (#961)</code></a></li>\n<li><a href=\"https://github.com/unjs/h3/commit/97ccc4d8850a876e98836b2d093a6684f9b37f53\"><code>chore(release): v1.14.0</code></a></li>\n<li><a href=\"https://github.com/unjs/h3/commit/3f9e7031825f4289c142a4d591e0ec46a306cc4f\"><code>feat(session): allow using with crossws hooks (#960)</code></a></li>\n<li><a href=\"https://github.com/unjs/h3/commit/a2338be82691334f24ac8742a4cddccde647d169\"><code>chore: update deps</code></a></li>\n<li><a href=\"https://github.com/unjs/h3/commit/4ed223a2213e472c0da156017a4c01f12300d3b4\"><code>docs: fix jsdoc (#953)</code></a></li>\n<li><a href=\"https://github.com/unjs/h3/commit/75aef6498e6099915c5cdc039a76704af689fdb7\"><code>chore(deps): update autofix-ci/action digest to 551dded (#949)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@‚Äãdepfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@‚Äãdepfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@‚Äãdepfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@‚Äãdepfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@‚Äãdepfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@‚Äãdepfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@‚Äãdepfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@‚Äãdepfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@‚Äãdepfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16515","RelatedDescription":"Closed or merged PR \"Update h3 1.13.1 ‚Üí 1.15.0 (minor)\" (#16515)"},{"Id":"2852937098","IsPullRequest":false,"CreatedAt":"2025-02-14T10:36:18","Actor":"rozsazoltan","Number":"16532","RawContent":null,"Title":"[v4] Unused variables and classes in the output when using Vite","State":"closed","Body":"I came across a question on StackOverflow that I didn‚Äôt understand at first, as I had a similar issue up until v4.0.4 with CLI and PostCSS, but v4.0.5 fixed it, and I verified that it works in v4.0.6 as well.\n\n* [How to remove unused colors during build?](https://stackoverflow.com/a/79438630/15167500)\n\nHowever, when I create a new Vite project, for example, with Svelte or Vue, the build results include unused variables and classes, so in a simple empty project, I get a 22.53kb result instead of the expected file size, which is the Preflight (4kb?).\n\nThe `.gitignore` by default excludes the mapping of node_modules, so I assume TailwindCSS doesn't pull variables from there. There isn't a single TailwindCSS class used in the project, and still, a lot of unnecessary content is getting into `dist/css/index.css`.\n\nThe problem is, of course, resolved with PurgeCSS, but the real question is why unused variables (e.g., all colors, ...) and class names (e.g., `.shadow, .capitalize, .lowercase`) are included in the output by default.\n\n### Versions\n```json\n\"dependencies\": {\n  \"@tailwindcss/vite\": \"^4.0.6\",\n  \"tailwindcss\": \"^4.0.6\",\n  \"vue\": \"^3.5.13\"\n},\n\"devDependencies\": {\n  \"@vitejs/plugin-vue\": \"^5.2.1\",\n  \"@vue/tsconfig\": \"^0.7.0\",\n  \"typescript\": \"~5.7.3\",\n  \"vite\": \"^6.1.0\",\n  \"vue-tsc\": \"^2.2.0\"\n}\n```\n\n### Reproduction steps\n* Vite create-app\n* TailwindCSS v4 with Vite installation steps\n* `pnpm build`\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16532","RelatedDescription":"Closed issue \"[v4] Unused variables and classes in the output when using Vite\" (#16532)"},{"Id":"2852816235","IsPullRequest":false,"CreatedAt":"2025-02-14T10:21:14","Actor":"y-core","Number":"16530","RawContent":null,"Title":"v4 vite PostCSS plugin error when app root folder contains a hyphen [-]","State":"closed","Body":"It appears that using the @tailwindcss/vite plugin, when app root folder contains a hyphen [-] the following error is thrown.\n\n[postcss] It looks like you're trying to use `tailwindcss` directly as a PostCSS plugin. The PostCSS plugin has moved to a separate package, so to continue using Tailwind CSS with PostCSS you'll need to install `@tailwindcss/postcss` and update your PostCSS configuration.\n\nnode_modules/tailwindcss/dist/lib.js:33:1716 is where the final error is thrown.\n\nWhat version of Tailwind CSS are you using?\n\n4.0.6\n\nWhat build tool (or framework if it abstracts the build tool) are you using?\n\nVite 6.1.0\n\nWhat version of Node.js are you using?\n\n22\n\nWhat browser are you using?\n\nN/A\n\nWhat operating system are you using?\n\nmacOS\n\nmy use case happens to be when using react-router, but I've tracked it down to what appears to be the @tailwindcss/vite plugin.\n\nSteps to reproduce: üî¥\n\n```bash \nmkdir local-app\ncd local-app\nnpx create-react-router . \nnpm i\n```\n\nThis creates a vite.config.ts that includes:\n```javascript\nimport tailwindcss from \"@tailwindcss/vite\";\n...\nexport default defineConfig({\n  plugins: [tailwindcss(), reactRouter(), tsconfigPaths()],\n});\n```\n\n`npm run dev` - when accessing `http://localhost:5173` throws error: [postcss] It looks like you're trying to use `tailwindcss` directly as a PostCSS plugin... \n\nSteps to reproduce: üü¢\nWhen creating a directory without hyphen, it works fine\n```bash \nmkdir localapp\ncd localapp\nnpx create-react-router . \nnpm i\n```\n\n`npm run dev` - `http://localhost:5173` works perfectly  \n\ndowngrading to tailwindcss@3 and not using the v4 plugin or removing the hyphen from the root folder name both resolves the issue\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16530","RelatedDescription":"Closed issue \"v4 vite PostCSS plugin error when app root folder contains a hyphen [-]\" (#16530)"},{"Id":"2852573510","IsPullRequest":false,"CreatedAt":"2025-02-14T10:11:24","Actor":"the-lemonboy","Number":"16525","RawContent":null,"Title":"[V4] How do I rewrite the plugin for V4Ôºü","State":"closed","Body":"How do I rewrite the plugin for V4? Is there any documentation?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16525","RelatedDescription":"Closed issue \"[V4] How do I rewrite the plugin for V4Ôºü\" (#16525)"},{"Id":"2851571005","IsPullRequest":false,"CreatedAt":"2025-02-14T07:46:47","Actor":"tsalvetat","Number":"16512","RawContent":null,"Title":"[v4] Loss of Granular Configuration in TailwindCSS v4 - Cannot Restrict Colors to Specific Utilities?","State":"closed","Body":"Hello Tailwind team,\n\nI am currently working on a **design system** built with Tailwind CSS, where we define styles in a granular way for various utilities such as text colors, background colors, border colors, margins, spacing, etc.\n\nIn **TailwindCSS v3**, we could configure colors and other properties in a fine-grained manner, restricting them to specific utilities. However, in **TailwindCSS v4**, the configuration system has become more generic, making it impossible (or unclear) how to achieve the same level of control.\n\n### **Loss of Granular Configuration**\n\nPreviously, we could define colors specific to certain properties, such as border colors:\n\n```js\ntheme: {\n  borderColor: {\n    'neutral': '#ccc',\n  }\n}\n```\n\nWhich allowed usage like this:\n\n```html\n<div class=\"border-neutral\"></div>\n```\n\nHowever, in **TailwindCSS v4**, the new system moves towards defining colors under `@theme` like this:\n\n```css\n@theme {\n  --color-neutral: #ccc;\n}\n```\n\nNow, this allows:\n\n```html\n<div class=\"border-neutral\"></div>\n```\n\nBut it also enables:\n\n```html\n<div class=\"bg-neutral\"></div>\n```\n\nWhich is **not** what we want, since we want to restrict certain colors to only `borderColor`, `textColor`, or `backgroundColor`.\n\n### **Impact on Design Systems**\n\n- This results in **less intuitive and stricter utility classes** than before.\n- It can lead to **inconsistencies** when colors meant for borders are mistakenly used for text or backgrounds.\n- The previous flexibility of defining properties per utility (`borderColor`, `textColor`, `backgroundColor`) seems to be lost.\n\n### **Request for a Solution or Roadmap**\n\n- Is there a way to **migrate this behavior** and maintain **granular control over colors and other utilities**?\n- If not, is there a **plan to reintroduce or support this kind of customization** in future releases of TailwindCSS?\n\nThank you for your time and for all your work on TailwindCSS! Any guidance on how to approach this in Tailwind v4 would be greatly appreciated.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16512","RelatedDescription":"Closed issue \"[v4] Loss of Granular Configuration in TailwindCSS v4 - Cannot Restrict Colors to Specific Utilities?\" (#16512)"},{"Id":"2852822058","IsPullRequest":false,"CreatedAt":"2025-02-14T06:47:42","Actor":"ailon","Number":"16531","RawContent":null,"Title":"hover in v4 relies on a feature that is buggy in Chromium-based browsers","State":"open","Body":"There's a long-standing bug in Chromium that incorrectly identifies 2-in-1 Windows PCs with external keyboard and mouse attached as having no \"fine\" inputs. Looks like Tailwind CSS 4 now relies on this \"feature\" which makes hover (and possibly other things) not work on projects using v4 on these PCs.\n\nHere's the issue on the Chromium issues tracker:\nhttps://issues.chromium.org/issues/40277167\n\nI'm attaching a video demonstrating this in action.\n\nhttps://github.com/user-attachments/assets/721dc115-e706-4883-9c79-5746dfb57cd9","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16531","RelatedDescription":"Open issue \"hover in v4 relies on a feature that is buggy in Chromium-based browsers\" (#16531)"},{"Id":"2852125571","IsPullRequest":false,"CreatedAt":"2025-02-13T21:19:47","Actor":"JaquesBotha","Number":"16516","RawContent":null,"Title":"Upgrading to Tailwind v4: Missing Defaults, Broken Dark Mode, and Config Issues","State":"closed","Body":"## Introduction\n\nHello Tailwind CSS Team and Community,\n\nFirst off, I want to say that I really appreciate all the hard work that goes into Tailwind CSS. It‚Äôs an incredible tool that has improved my workflow tremendously. However, after upgrading to v4, I‚Äôve run into several challenges that have made the transition more difficult than expected.\n\nI completely understand that major updates come with changes, but some of the alterations, such as the removal of default styles, changes to dark mode behavior, and unexpected issues with Tailwind config properties, were not clearly outlined in the upgrade guide. I‚Äôve also noticed that I‚Äôm not alone in experiencing these difficulties, as other developers have expressed similar concerns.\n\n### **What I've Done So Far**\n- Updated **everything** as per spec, including fixing prefixes (`tw-` to `tw:` and moving them to the front).\n- Followed the official **upgrade guide** but found certain key changes missing from the documentation.\n- Adjusted multiple UI components to work with v4, but encountered issues with default styles, dark mode, and custom config values.\n\n## Issues Faced\n\n1. **Loss of Default Styles:** Previously, elements like headings and buttons had reasonable defaults. After upgrading, these defaults are gone, which caused a lot of unexpected UI issues. Also the @layer base {} thing does not work. Tried it many times now. \n2. **Dark Mode Behavior Changed:** Dark mode does not seem to work the same way as it did in v3. If this was an intentional change, could you clarify the best practices for handling it in v4? Should that not be a change set outline in Upgrade docs?\n3. **Tailwind Config Custom Properties Not Working:** Specific configurations in `tailwind.config.js`, such as:\n    ```js\n    backgroundImage: {\n        dots: \"radial-gradient(circle, #d4d9e0 1px, transparent 1px)\"\n    },\n    backgroundSize: {\n        dots: \"20px 20px\" // Adjust size as needed\n    },\n    ```\n    These settings appear in the compiled CSS but do not seem to work properly.\n\n![Image](https://github.com/user-attachments/assets/a92caca9-ea56-4183-b47f-da9713a3d777)\n> Dots are not showing as it did in the past!\n\n4. **List (`<ul>`) Padding Changes:** UL elements that were previously well-spaced now have different padding, affecting layouts unexpectedly.\n5. **Heading Default Sizes Removed:** The removal of default font sizes for headings means that all heading elements now require manual fixes across projects.\n6. **`@layer base` Behavior:** Even when attempting to reintroduce styles via `@layer base`, they are not applying as expected.\n7. **Tailwind Class-Based Animations No Longer Work Properly:** TypeScript animations relying on Tailwind classes (`opacity-0`, `opacity-100`, `translate-y-0`, etc.) do not behave the same way as before. HOWEVER, I have not fully investigaged this point just yet!\n\n## Steps Taken\n\n- Read through the [Tailwind CSS v4 Upgrade Guide](https://tailwindcss.com/docs/upgrade-guide) but found no detailed explanation for these issues.\n- Checked through discussions and issues to see if others had encountered the same problems but did not find clear resolutions.\n\n## Request for Assistance\n\nI‚Äôd love to get some clarification on the following:\n\n- Were the removal of default styles for elements (headings, buttons, lists, etc.) intentional? If so, what is the recommended approach for handling this in v4? Or give us the control. Tons of developers want these proper defaults, this is what makes Tailwind so great!\n- What changes were made to dark mode functionality, and how should we approach implementing it moving forward?\n- Why are Tailwind config properties compiling but not working as expected?\n- What is the best way to reintroduce defaults that were removed in a way that is sustainable long-term?\n- Are there any known issues with Tailwind-based animations behaving differently in v4? **AGAIN STILL NEEED TO INVESTIGATE THIS A BIT MORE.** \n\n## Conclusion\n\nI truly appreciate all the work that has gone into Tailwind CSS and understand that updates are necessary for improvement. That said, I believe better documentation and clearer migration steps for these changes would be incredibly helpful for those of us upgrading large projects.\n\nLooking forward to any insights you can provide, and I appreciate your time in addressing these concerns.\n\nBest regards,  \nJaques","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16516","RelatedDescription":"Closed issue \"Upgrading to Tailwind v4: Missing Defaults, Broken Dark Mode, and Config Issues\" (#16516)"},{"Id":"2851790605","IsPullRequest":true,"CreatedAt":"2025-02-13T18:22:30","Actor":"RobinMalfait","Number":"16514","RawContent":null,"Title":"Allow `theme(‚Ä¶)` options when using `@import`","State":"open","Body":"This PR improves the developer experience when trying to use `theme(‚Ä¶)` options on an import.\r\n\r\nToday, if you want to use Tailwind CSS, you can import it as:\r\n\r\n```css\r\n@import \"tailwindcss\";\r\n```\r\n\r\nBut if you want to use any of the `theme(‚Ä¶)` options, like the `static` theme option, then you had to use this instead:\r\n\r\n```css\r\n@layer theme, base, components, utilities;\r\n\r\n@import 'tailwindcss/theme' layer(theme) theme(static);\r\n@import 'tailwindcss/preflight' layer(base);\r\n@import 'tailwindcss/utilities' layer(utilities);\r\n```\r\nIn this scenario you have to be careful, because the `layer(‚Ä¶)` _must_ be the first option after an import (according to the spec). So if you use `@import 'tailwindcss/theme' theme(static) layer(theme);` then that's not going to work either.\r\n\r\nThis PR solves that by allowing you to use the `theme(‚Ä¶)` options directly on the `@import` statement:\r\n\r\n```css\r\n@import 'tailwindcss' theme(static);\r\n```\r\n\r\nThe only edge case is when you want to use `theme(reference)`. A typical use case is for projects with `<style>` blocks where you want to _reference_ the CSS variables from the theme. \r\n\r\nIf you use `@import 'tailwindcss' theme(reference);`, then all `@theme` blocks will be references and you can reference theme values. This is good. The bad part is that `@import 'tailwindcss';` also includes preflight CSS. This means that we will import the preflight CSS for every `<style>` block. This is probably not what you want.\r\n\r\nThe solution is to use `@reference 'tailwindcss';` instead which strips all of that information and only gives you access to CSS variables.\r\n\r\nThis PR also makes sure that if you use `theme(reference)` on an import that we still throw an error and suggest you use `@reference` instead. This is not a breaking change because right now if you use `@import` with `theme(‚Ä¶)` options it will already throw an error.\r\n\r\n### Test plan:\r\n\r\n1. Added dedicated tests to make sure we don't throw anymore.\r\n2. Added test to make sure that we _do_ throw when using `theme(reference)` on an import.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16514","RelatedDescription":"Open PR \"Allow `theme(‚Ä¶)` options when using `@import`\" (#16514)"},{"Id":"2851658965","IsPullRequest":true,"CreatedAt":"2025-02-13T17:19:32","Actor":"philipp-spiess","Number":"16513","RawContent":null,"Title":"Allow `border-*` to match both color and size namesaces at the same time","State":"open","Body":"Closes #16343\r\n\r\nIn v3, if you had a `colors` and `borderWidth` key that resolved to the same value, using the `border-*` utility would actually match create both rules: https://play.tailwindcss.com/Loe4Z1eKky?file=config\r\n\r\nIn v4, however, it currently only looks at the color and then ends. This PR changes it to be compatible with v3.\r\n\r\nMy main motivation for fixing this is that this is actually more like the `@utility` API works right now already where this would generate both rules: https://play.tailwindcss.com/bQNe7wXOJb?file=css\r\n\r\n```css\r\n@utility border-* {\r\n  color: --value(--color-*);\r\n  border-width: --value(--border-width-*);\r\n}\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16513","RelatedDescription":"Open PR \"Allow `border-*` to match both color and size namesaces at the same time\" (#16513)"},{"Id":"2851519371","IsPullRequest":false,"CreatedAt":"2025-02-13T16:24:15","Actor":"jeremiahray","Number":"16510","RawContent":null,"Title":"Utilities are not generating in my output.css file","State":"closed","Body":"I am using the standalone tailwindcss CLI, and when I input my input.css and output.css, it is only generating about 541 lines of css in my output.css file. There are no utilities available to use.\n\nTailwindCSS v4.0.6","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16510","RelatedDescription":"Closed issue \"Utilities are not generating in my output.css file\" (#16510)"},{"Id":"2851066053","IsPullRequest":true,"CreatedAt":"2025-02-13T15:02:59","Actor":"philipp-spiess","Number":"16504","RawContent":null,"Title":"Upgrade: Report errors when updating dependencies","State":"closed","Body":"Closes #16391\r\n\r\nLike the title suggest this PR adds error reporting when the `npm install` or `npm remove` commands fail.\r\n\r\n## Test plan\r\n\r\nTested by swapping out the command for `echo \"bla\"; exit 1` and capturing the output from the integration tests:\r\n\r\n<img width=\"792\" alt=\"Screenshot 2025-02-13 at 14 33 02\" src=\"https://github.com/user-attachments/assets/d1288114-106a-4ac6-a54b-d02b74c98f35\" />\r\n\r\n<img width=\"761\" alt=\"Screenshot 2025-02-13 at 14 31 05\" src=\"https://github.com/user-attachments/assets/6d5b9427-457f-4e67-9723-4e340da61749\" />\r\n\r\nDecided not to add a new test for this since it's unlikely we'll do big changes here and the upgrade integration tests are already quite slow.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16504","RelatedDescription":"Closed or merged PR \"Upgrade: Report errors when updating dependencies\" (#16504)"},{"Id":"2851110078","IsPullRequest":true,"CreatedAt":"2025-02-13T14:52:55","Actor":"philipp-spiess","Number":"16505","RawContent":null,"Title":"Add legacy type exports to `tailwindcss/plugin` export","State":"closed","Body":"Closes #16209\r\n\r\nThis PR exposes the following types that were accessible via `tailwindcss/types/config` in v3 now via the `tailwindcss/plugin` export:\r\n\r\n```ts\r\nimport type {Cofig, PluginAPI, PluginCreator, PluginsConfig, ThemeConfig } from 'tailwindcss/plugin'\r\n```\r\n\r\nNote that these types will not be the same as the v3 and just approximations, however it should be enough to upgrade plugins to work with v4.\r\n\r\n## Test plan\r\n\r\nTested in a standalone project importing a dev build of tailwindcss: \r\n\r\n<img width=\"1784\" alt=\"Screenshot 2025-02-13 at 14 50 48\" src=\"https://github.com/user-attachments/assets/27c04666-0106-414d-ba25-1a853f9d53d1\" />\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16505","RelatedDescription":"Closed or merged PR \"Add legacy type exports to `tailwindcss/plugin` export\" (#16505)"},{"Id":"2850887198","IsPullRequest":false,"CreatedAt":"2025-02-13T12:30:27","Actor":"bbo76","Number":"16503","RawContent":null,"Title":"hover classes broken on lot of browser on Windows but not in chrome","State":"closed","Body":"Hello, I instanciate new react project with Vite and installed TailwindV4 with new vite installation method.\nThis code not work on Edge and Arc for windows but it work perfectly on Chrome :\n\n  <div className=\"bg-blue-700 hover:bg-red-400\">\n      <p>Hello</p>\n    </div>\n\nI'm up to date on every browsers and the :hover classes not work on Edge & Arc but it works on Chrome. Is it a chromium version issue or another problem ?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16503","RelatedDescription":"Closed issue \"hover classes broken on lot of browser on Windows but not in chrome\" (#16503)"},{"Id":"2850748421","IsPullRequest":false,"CreatedAt":"2025-02-13T11:27:34","Actor":"dcmayankavi","Number":"16498","RawContent":null,"Title":"Unexpected unknown at-rule \"@utility\"","State":"closed","Body":"While using TailwindCSS v4.0 getting **Unexpected unknown at-rule \"@utility\"** error in sonarcube while using below code:\n\n```\n@utility display-* {\n    display: --value([*]);\n}\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16498","RelatedDescription":"Closed issue \"Unexpected unknown at-rule \"@utility\"\" (#16498)"},{"Id":"2850730077","IsPullRequest":false,"CreatedAt":"2025-02-13T11:27:18","Actor":"iamalbinnj","Number":"16496","RawContent":null,"Title":"i cant use variable in tailwind react vite latest","State":"closed","Body":"`@import \"tailwindcss\";\n\n\n@theme{\n  --primary : #39db4a;\n}`\n\ngot error Unknown at rule @themecss(unknownAtRules) in index.css","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16496","RelatedDescription":"Closed issue \"i cant use variable in tailwind react vite latest\" (#16496)"},{"Id":"2850738205","IsPullRequest":false,"CreatedAt":"2025-02-13T11:26:12","Actor":"Blackfiskar","Number":"16497","RawContent":null,"Title":"Blazor TW V4 Upgrade - Could not determine config. file","State":"closed","Body":"Hello there \n\nI am fairly new to GitHub so apologies if the same issue was mentioned before, I couldnt find anything related to the displayed error message, which reads as follows: \n\n```\n**********************************************************************\n** Visual Studio 2022 Developer PowerShell v17.12.4\n** Copyright (c) 2022 Microsoft Corporation\n**********************************************************************\nPS C:\\...\\Desktop\\Projects\\EIOS> set-location -path C:\\Users\\dkaus\\Desktop\\Projects\\EIOS\\EIOS.Blazor\\EIOS.Blazor\nPS C:\\...\\Desktop\\Projects\\EIOS\\EIOS.Blazor\\EIOS.Blazor> npx @tailwindcss/upgrade\n‚âà tailwindcss v4.0.6\n\n‚îÇ Searching for CSS files in the current directory and its subdirectories‚Ä¶\n\n‚îÇ ‚Ü≥ Could not determine configuration file for: `.\\Styles\\app.css`\n‚îÇ   Update your stylesheet to use `@config` to specify the correct configuration file explicitly and then run the upgrade tool again.\n\n‚îÇ ‚Ü≥ Could not determine configuration file for: `.\\node_modules\\tailwindcss\\base.css`\n‚îÇ   Update your stylesheet to use `@config` to specify the correct configuration file explicitly and then run the upgrade tool again.\n\n‚îÇ ‚Ü≥ Could not determine configuration file for: `.\\node_modules\\tailwindcss\\components.css`\n‚îÇ   Update your stylesheet to use `@config` to specify the correct configuration file explicitly and then run the upgrade tool again.\n\n‚îÇ ‚Ü≥ Could not determine configuration file for: `.\\node_modules\\tailwindcss\\screens.css`\n‚îÇ   Update your stylesheet to use `@config` to specify the correct configuration file explicitly and then run the upgrade tool again.\n\n‚îÇ ‚Ü≥ Could not determine configuration file for: `.\\node_modules\\tailwindcss\\tailwind.css`\n‚îÇ   Update your stylesheet to use `@config` to specify the correct configuration file explicitly and then run the upgrade tool again.\n\n‚îÇ ‚Ü≥ Could not determine configuration file for: `.\\node_modules\\tailwindcss\\utilities.css`\n‚îÇ   Update your stylesheet to use `@config` to specify the correct configuration file explicitly and then run the upgrade tool again.\n\n‚îÇ ‚Ü≥ Could not determine configuration file for: `.\\node_modules\\tailwindcss\\variants.css`\n‚îÇ   Update your stylesheet to use `@config` to specify the correct configuration file explicitly and then run the upgrade tool again.\n```\n\nI am not sure what exactly causes this issue as I have been using TW V3 for a year now with Blazor and it worked really well. I am not sure if this issue is based on the framework I am using or just me being an absolute noob (which could be the case as I just got into programming a year ago). I am glad for any suggestions or hints! \n\nEdit: Also here is the current project structure I am using, as I am assuming it ahs something to do with it (Styles/app.css would be the input and wwwroot/app.csss the output) \n\n![Image](https://github.com/user-attachments/assets/7438de94-cf52-4e04-a2ef-802e2b75b557)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16497","RelatedDescription":"Closed issue \"Blazor TW V4 Upgrade - Could not determine config. file\" (#16497)"},{"Id":"2850604241","IsPullRequest":false,"CreatedAt":"2025-02-13T10:25:26","Actor":"RemMai","Number":"16492","RawContent":null,"Title":"Difficult upgrade","State":"closed","Body":"I am using the Quasar framework.\nUpgrading from V3 to V4 has been a bumpy journey, with either an error message in my `tailwind.config.js` function or a message in Git stating that there are files with changes in the staging area that have not been committed. Why?\nSecondly, what could have been a pleasant use of 'apply' in every Vue file now requires referencing `@reference` under each tag. Is there a better solution?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16492","RelatedDescription":"Closed issue \"Difficult upgrade\" (#16492)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-02-15T03:30:21.4957463Z","RunDurationInMilliseconds":535}