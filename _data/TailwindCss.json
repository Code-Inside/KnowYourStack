{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"3381981998","IsPullRequest":false,"CreatedAt":"2025-09-04T03:20:42","Actor":"igdswzcd","Number":"18875","RawContent":null,"Title":"Is default border style changeable?","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nBoth 3.x and 4.x\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNo matter\n\n**What version of Node.js are you using?**\n\nNo matter\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nWindows\n\n**Describe your issue**\n\n[Pull Request #116](https://github.com/tailwindlabs/tailwindcss/pull/116)\n`border-style: solid;` may introduce unintended side effects in certain contexts. For instance, when users copy content from a webpage into Microsoft Word, they may encounter unexpected visible lines—these stem from borders defined in the HTML. Specifically, some HTML-to-DOC conversion tools do not interpret a `border` with zero width and `solid` style (e.g., `border: 0 solid;`) as visually absent; instead, they render it as a visible border. While setting `border-style: none` can prevent this rendering artifact, it disrupts components relying on utility-first frameworks like Tailwind CSS, where border visibility is controlled exclusively via `border-width` utilities (which implicitly assume a default `border-style: solid`). This creates a conflict between document interoperability and component integrity. Are there established strategies or workarounds to resolve this issue?\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18875","RelatedDescription":"Open issue \"Is default border style changeable?\" (#18875)"},{"Id":"3380287264","IsPullRequest":true,"CreatedAt":"2025-09-03T15:30:55","Actor":"RobinMalfait","Number":"18872","RawContent":null,"Title":"Do not allow variants to end with `-` or `_`","State":"closed","Body":"This PR is a followup of #18867, but this time we won't allow `@custom-variant` to end with `-` or `_`.\n\nThe same reasoning applies here where Oxide doesn't pick this up but Intellisense and Tailwind CSS' core does.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18872","RelatedDescription":"Closed or merged PR \"Do not allow variants to end with `-` or `_`\" (#18872)"},{"Id":"3380181979","IsPullRequest":false,"CreatedAt":"2025-09-03T14:52:02","Actor":"SanderFlooris","Number":"18870","RawContent":null,"Title":"Include glob path fails when path is also gitignored","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n`v4.1.12`\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite (`6.2.1`)\n\n**What version of Node.js are you using?**\n\n`v22.19.0`\n\n**What browser are you using?**\n\n`Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:142.0) Gecko/20100101 Firefox/142.0`\n\n**What operating system are you using?**\n\n`macOS Sequoia 15.6.1`\n\n**Reproduction URL**\n\nhttps://github.com/SanderFlooris/tailwind-4-gitignore-testcase\n\nInstructions on how to configure the repository and how to trigger the bug has been provided in the README.\n\n> [!NOTE]\n> This example repository uses Express.js as the back-end for simplicity, the actual project we are working on is based on Laravel. \n\n**Describe your issue**\n\nIn a project we are working on we prerender some parts of the page as static HTML files, these HTML files will then dynamically be loaded in our templates to cache sections of the webpage, without caching everything.\n\nHowever we discovered that Tailwind doesn't seem to pick up the classes properly inside of our `cms_content` directory that contains the prerendered sections, even though we manually specify in our Tailwind configuration that that directory should be scanned.\n\nAfter some digging around we figured out it was caused by the directory being gitignored, and we are unable to overwrite this. The compiler just skips over the directory entirely when we checked with `DEBUG=* yarn dev`.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18870","RelatedDescription":"Open issue \"Include glob path fails when path is also gitignored\" (#18870)"},{"Id":"3378084996","IsPullRequest":false,"CreatedAt":"2025-09-03T14:32:19","Actor":"benface","Number":"18863","RawContent":null,"Title":"`-` works as a custom variant, but `--` doesn't","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.1.12\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nTailwind Play, Vite, etc.\n\n**What version of Node.js are you using?**\n\nv24\n\n**What browser are you using?**\n\nFirefox, Safari, Chrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/dYzm7i79CK\n\n**Describe your issue**\n\nLike the title says. Interestingly, IntelliSense seems to say that the following CSS will be generated:\n\n```css\n.--\\:bg-amber-500 {\n  @layer x-unimportant {\n    background-color: var(--color-amber-500) /* oklch(76.9% 0.188 70.08) */;\n  }\n}\n```\n\nHowever, it's not.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18863","RelatedDescription":"Closed issue \"`-` works as a custom variant, but `--` doesn't\" (#18863)"},{"Id":"3379878512","IsPullRequest":true,"CreatedAt":"2025-09-03T14:32:18","Actor":"RobinMalfait","Number":"18867","RawContent":null,"Title":"Do not allow variants to start with `-` or `_`","State":"closed","Body":"This PR fixes an issue where custom variants with just `-` in the name were allowed but weren't actually picked up by Oxide so you couldn't use them anyway.\r\n\r\nThe reason we allow `-` is for `kebab-style-variants`, which is very common, but you shouldn't use `-`, `--` or more in a variant name.\r\n\r\nIt doesn't really solve the issue (#18863), but it fixes the inconsistencies in that exist today.\r\n\r\nInconsistencies:\r\n| &nbsp; | `-:flex` | `--:flex` |\r\n| --: | :--: | :--: |\r\n| Oxide | ❌ | ❌ |\r\n| Tailwind Play | ✅ | ❌ |\r\n| Intellisense | ✅ | ✅ |\r\n\r\n- Oxide already had the correct rules setup, so this is expected\r\n- Tailwind Play uses Tailwind's core compile step, but it considers candidates that start with `--` as a CSS variable instead of a utility. This means that the `--:flex` was considered a CSS variable and skipped during compilation.\r\n- Intellisense uses the same APIs than Tailwind's core, but it didn't have the CSS variable check which resulted in the `--:flex` being \"correct\".\r\n\r\nWith this PR, the matrix looks like this now:\r\n| &nbsp; | `-:flex` | `--:flex` |\r\n| --: | :--: | :--: |\r\n| Oxide | ❌ | ❌ |\r\n| Tailwind Play | ❌ | ❌ |\r\n| Intellisense | ❌ | ❌ |\r\n\r\n\r\nThis should not be considered a breaking change because Oxide didn't pick up candidates with variants that start with a `-`. CSS for these candidates was never generated before.\r\n\r\nCloses: #18863\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18867","RelatedDescription":"Closed or merged PR \"Do not allow variants to start with `-` or `_`\" (#18867)"},{"Id":"3379978133","IsPullRequest":true,"CreatedAt":"2025-09-03T14:07:32","Actor":"RobinMalfait","Number":"18869","RawContent":null,"Title":"Consider variants starting with `@-` to be invalid (e.g. `@-2xl:flex`)","State":"closed","Body":"This PR fixes a small parsing issue where variants such as `@-2xl:flex` would parse, but were handled as-if they were `@2xl:flex` instead.\r\n\r\nNoticed this while working on: #18867 \r\n\r\nThis is because when we parse normal variants like `data-foo` then we want to have a `data` root and a `foo` value, not a `-foo` value.\r\n\r\nIf you are now using `@-2xl:flex`, then no CSS will be generated for this anymore. If you were relying on this for some reason, you should use `@2xl:flex` instead.\r\n\r\n## Test plan\r\n\r\nBefore:\r\n\r\n<img width=\"862\" height=\"586\" alt=\"image\" src=\"https://github.com/user-attachments/assets/b5993ca6-f907-49af-b5bd-b7206c8300e1\" />\r\n\r\nAfter:\r\n\r\n<img width=\"862\" height=\"586\" alt=\"image\" src=\"https://github.com/user-attachments/assets/351f45e4-4cd3-451c-ae2a-c52c3e770629\" />\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18869","RelatedDescription":"Closed or merged PR \"Consider variants starting with `@-` to be invalid (e.g. `@-2xl:flex`)\" (#18869)"},{"Id":"3379879185","IsPullRequest":true,"CreatedAt":"2025-09-03T13:29:15","Actor":"thecrypticace","Number":"18868","RawContent":null,"Title":"Prepare v4.1.13 release","State":"open","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18868","RelatedDescription":"Open PR \"Prepare v4.1.13 release\" (#18868)"},{"Id":"3378747375","IsPullRequest":false,"CreatedAt":"2025-09-03T08:47:40","Actor":"cosbgn","Number":"18866","RawContent":null,"Title":"Tailwind-vite removes CSS styles (preflight) when on shadowDOM","State":"closed","Body":"You can reproduce the bug using this repo: https://github.com/cosbgn/tailwind-shadow\n\n1. Run `npm run dev` to build the script\n2. Run `npm run serve` to preview the bug on port :3000\n\nIf you set `useShadow` in `sdk.js` to either `true` or `false` some of the styles get missing, things like shadows, border, etc. It's a big issue because my widget relies on the shadowdom and I never know what style will work and which won't.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18866","RelatedDescription":"Closed issue \"Tailwind-vite removes CSS styles (preflight) when on shadowDOM\" (#18866)"},{"Id":"3375805399","IsPullRequest":false,"CreatedAt":"2025-09-02T12:50:02","Actor":"spatulatom","Number":"18858","RawContent":null,"Title":"tailwindcss.com homepage fails WCAG for color contrasts","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.6 (the version used on the Tailwind CSS documentation site)\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 15.3.4 (as indicated in the terminal output when running the site locally)\n\n**What version of Node.js are you using?**\n\nv20.0.0\n\n**What browser are you using?**\n\nChrome with Axe DevTools extension for accessibility testing\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n\nhttps://tailwindcss.com/ (The issue appears on the official documentation site itself)\n\n**Describe your issue**\n\nThe Tailwind CSS documentation site has multiple color contrast issues that fail WCAG 2.1 accessibility standards as detected by the Axe DevTools browser extension. Specifically:\n\n1. The utility class indicators throughout the homepage (elements with `aria-hidden=\"true\"` showing Tailwind class names) have insufficient color contrast:\n   - In light mode: Using `text-black/20` (black at 20% opacity) which has a contrast ratio of approximately 2:1\n   - In dark mode: Using `dark:text-white/25` (white at 25% opacity) which has a contrast ratio of approximately 3:1\n\nBoth fail the WCAG AA standard requiring a minimum contrast ratio of 4.5:1 for normal text (or 3:1 for large text).\n\nWhile these elements are correctly marked with `aria-hidden=\"true\"` to hide them from screen readers, they are still visible to users with low vision or color vision deficiencies who aren't using screen readers. Therefore, they should still meet contrast requirements.\n\nIn total, Axe reports 26 failing contrast elements in dark mode and 30 in light mode, mostly related to these utility class indicators.\n\n**Example from `hero.tsx`:**\n```tsx\n<div\n  aria-hidden=\"true\"\n  className=\"flex h-16 items-end px-2 font-mono text-xs/6 whitespace-pre text-black/20 max-sm:px-4 sm:h-24 dark:text-white/25\"\n>\n  <span className=\"hidden max-sm:inline\">text-4xl </span>\n  <span className=\"hidden sm:max-md:inline\">text-5xl </span>\n  <span className=\"hidden lg:max-xl:inline\">text-6xl </span>\n  <span className=\"hidden xl:inline\">text-8xl </span>\n  <span className=\"inline dark:hidden\">text-gray-950 </span>\n  <span className=\"hidden dark:inline\">text-white </span>tracking-tighter{\" \"}\n  <span className=\"max-sm:hidden\">text-balance</span>\n</div>\n\nSuggested fix: Increase the opacity of these indicator elements to meet WCAG AA standards:\n\nFor light mode: Change text-black/20 to text-black/55 (contrast ratio ~4.5:1)\nFor dark mode: Change dark:text-white/25 to dark:text-white/50 (contrast ratio ~5.3:1)\nThis would ensure the site is accessible to users with visual impairments while still maintaining the subtle, secondary visual nature of these indicators.\n\nNote: The fact that these elements have aria-hidden=\"true\" only addresses screen reader accessibility but doesn't exempt them from visual accessibility requirements like color contrast.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18858","RelatedDescription":"Closed issue \"tailwindcss.com homepage fails WCAG for color contrasts\" (#18858)"},{"Id":"3374701393","IsPullRequest":false,"CreatedAt":"2025-09-02T09:29:50","Actor":"Faraz1995","Number":"18854","RawContent":null,"Title":"Tailwind CSS v4 styles not applied in Android 10/11","State":"closed","Body":"hi\ni am using tailwind 4 , vite, tanstack router, i am making a webview loading a url, url looks fine on chrome, but on android device with version 10/11 , the whole style did not load, but when i roll back to tailwind 3, everything is fine!\n\nExpected behavior:\nTailwind v4 should be able to generate compatible CSS when targeting older browsers (e.g., Android 10/11 WebView) using Browserslist.\n\nstyles.css\n`\n@supports not (color: rgb(0 0 0 / 0.5)) {\n  body {\n    background: black !important;\n  }\n}\n\n@import 'tailwindcss';\n\n`\n\npackage.json\n\n`\n{\n  \"dependencies\": {\n    \"tailwindcss\": \"^4.0.6\",\n    \"@tailwindcss/vite\": \"^4.0.6\",\n    \"@tailwindcss/postcss\": \"^4.1.12\",\n    \"vite\": \"^6.1.0\"\n  },\n  \"browserslist\": [\n    \"defaults\",\n    \"Android >= 5\",\n    \"iOS >= 12\"\n  ]\n}\n`\n\nvite.config.js\n\n`import tailwindcss from '@tailwindcss/vite'\nimport viteReact from '@vitejs/plugin-react'\nimport { defineConfig } from 'vite'\nimport autoprefixer from 'autoprefixer'\nimport postcssPresetEnv from 'postcss-preset-env'\nimport tanstackRouter from '@tanstack/router-plugin/vite'\n\nexport default defineConfig({\n  css: {\n    postcss: {\n      plugins: [\n        autoprefixer(),\n        postcssPresetEnv({\n          stage: 2,\n          browsers: ['Android >= 8'],\n          features: {\n            'custom-properties': true,\n          },\n        }),\n      ],\n    },\n  },\n  plugins: [\n    tanstackRouter({ target: 'react', autoCodeSplitting: true }),\n    viteReact(),\n    tailwindcss(),\n  ],\n})\n`\n\nand .broswerslistrc\n\n`defaults\nAndroid >= 5\niOS >= 12\n`\n\npostcss.config.mjs\n`export default {\n  plugins: {\n    '@tailwindcss/postcss': {},\n  },\n}\n`\n\nany idea or solution except rolling back to v3?\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18854","RelatedDescription":"Closed issue \"Tailwind CSS v4 styles not applied in Android 10/11\" (#18854)"},{"Id":"3374738143","IsPullRequest":true,"CreatedAt":"2025-09-02T09:26:06","Actor":"mischnic","Number":"18855","RawContent":null,"Title":"Add '.vercel' to ignored content directories","State":"closed","Body":"Just like `.next` is ignored, ignore `.vercel` as well.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18855","RelatedDescription":"Closed or merged PR \"Add '.vercel' to ignored content directories\" (#18855)"},{"Id":"3374641639","IsPullRequest":true,"CreatedAt":"2025-09-02T08:13:15","Actor":"hustrust","Number":"18853","RawContent":null,"Title":"chore: remove redundant words","State":"closed","Body":"<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create a discussion to first discuss any significant new features.\r\n\r\nFor more info, check out the contributing guide:\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/main/.github/CONTRIBUTING.md\r\n\r\n-->\r\n\r\n## Summary\r\n\r\nremove redundant words\r\n\r\n<!--\r\n\r\nProvide a summary of the issue and the changes you're making. How does your change solve the problem?\r\n\r\n-->\r\n\r\n## Test plan\r\n\r\n<!--\r\n\r\nExplain how you tested your changes. Include the exact commands that you used to verify the change works and include screenshots/screen recordings of the update behavior in the browser if applicable.\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18853","RelatedDescription":"Closed or merged PR \"chore: remove redundant words\" (#18853)"},{"Id":"3374243903","IsPullRequest":false,"CreatedAt":"2025-09-02T03:12:21","Actor":"zyycn","Number":"18852","RawContent":null,"Title":"Hmr not work in monorepo ui lib","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n    \"@tailwindcss/vite\": \"^4.1.12\",\n    \"tailwindcss\": \"^4.1.12\"\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n    \"vite\": \"^7.1.4\"\n\n**What version of Node.js are you using?**\n\n    v22.15.0\n\n**What browser are you using?**\n\n    Chrome/139.0.7258.155\n\n**What operating system are you using?**\n\n    Windows11/24H2/26100.4946\n\n**Reproduction URL**\n\nhttps://github.com/zyycn/tailwindcss-vite-monorepo\n\n**Describe your issue**\n\nIn a monorepo, when code is changed in Tailwind CSS within the packages/ui, the page does not hot-update to apply the latest changes. i thought it was a Vite issue, but I found that commenting out the `@import '@packages/ui/styles.css'`;  in `apps/vue-project/styles/tailwind.css` makes everything work normally. It seems like there might be some conflict between Tailwind CSS and Vite, right?\n\nI also tried writing styles without using tailwind.css and found that everything worked normally, with hot updates functioning perfectly. I'm not sure why this is happening, so I wanted to seek help from Tailwind CSS. Sorry, English is not my native language, so my description might not be clear enough. If there's any confusion, I can provide further details.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18852","RelatedDescription":"Open issue \"Hmr not work in monorepo ui lib\" (#18852)"},{"Id":"3372802274","IsPullRequest":false,"CreatedAt":"2025-09-01T13:53:51","Actor":"aaronmahlke","Number":"18849","RawContent":null,"Title":"light-dark function gets wrongly transformed by lightning css","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.12\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 15.5.2\n\n**What version of Node.js are you using?**\n\nv23.11.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://codesandbox.io/p/github/aaronmahlke/nextjs-tailwind-light-dark-issue/main\n\n**Describe your issue**\n\nWhen using the light-dark() CSS function, it gets wrongly transformed to by lightning CSS:\n` --border-color-neutral: light-dark(var(--color-neutral-300), var(--color-neutral-600));`\nturns into\n`--border-color-neutral: var(--lightningcss-light, var(--color-neutral-300)) var(--lightningcss-dark, var(--color-neutral-600))`\n\nwhich leads to weird behaviour like in this example different border colors for each side of the border:\n\n<img width=\"486\" height=\"483\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e2d2a0d1-252d-4b9b-b28b-d7dec46f2ce8\" />","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18849","RelatedDescription":"Open issue \"light-dark function gets wrongly transformed by lightning css\" (#18849)"},{"Id":"3369173613","IsPullRequest":true,"CreatedAt":"2025-09-01T09:36:44","Actor":"okonomi","Number":"18837","RawContent":null,"Title":"Fix missing code block delimiters in comment blocks","State":"closed","Body":"## Summary\r\n\r\nI fixed some code blocks inside comment blocks that were missing delimiters.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18837","RelatedDescription":"Closed or merged PR \"Fix missing code block delimiters in comment blocks\" (#18837)"},{"Id":"3368629850","IsPullRequest":true,"CreatedAt":"2025-09-01T09:28:36","Actor":"rollraw","Number":"18834","RawContent":null,"Title":"Add `ring-initial` utility","State":"closed","Body":"## Summary\r\nThere is no way to undo a `ring-inset` at the moment. This PR adds utility `ring-initial` to do that. Has been discussed at #3016 \r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18834","RelatedDescription":"Closed or merged PR \"Add `ring-initial` utility\" (#18834)"},{"Id":"3369546474","IsPullRequest":true,"CreatedAt":"2025-09-01T09:24:56","Actor":"depfu[bot]","Number":"18838","RawContent":null,"Title":"🚨 [security] Update all of nextjs 15.4.4 → 15.4.7 (patch)","State":"closed","Body":"\n\n<hr>\n\n🚨 <b>Your current dependencies have known security vulnerabilities</b> 🚨\n\nThis dependency update fixes known security vulnerabilities. Please see the details below and assess their impact carefully. We recommend to merge and deploy this as soon as possible!\n<hr>\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ eslint-config-next (15.4.4 → 15.4.7)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n#### ✳️ next (15.4.4 → 15.4.7) · [Repo](https://github.com/vercel/next.js)\n\n\n<details>\n\n<summary>Security Advisories 🚨</summary>\n<h4><a href=\"https://bounce.depfu.com/github.com/vercel/next.js/security/advisories/GHSA-xv57-4mr9-wg8v\">🚨 Next.js Content Injection Vulnerability for Image Optimization</a></h4>\n<blockquote><p dir=\"auto\">A vulnerability in <strong>Next.js Image Optimization</strong> has been fixed in <strong>v15.4.5</strong> and <strong>v14.2.31</strong>. The issue allowed attacker-controlled external image sources to trigger file downloads with arbitrary content and filenames under specific configurations. This behavior could be abused for phishing or malicious file delivery.</p>\n<p dir=\"auto\">All users relying on <code class=\"notranslate\">images.domains</code> or <code class=\"notranslate\">images.remotePatterns</code> are encouraged to upgrade and verify that external image sources are strictly validated.</p>\n<p dir=\"auto\">More details at <a href=\"https://vercel.com/changelog/cve-2025-55173\">Vercel Changelog</a></p></blockquote>\n<h4><a href=\"https://bounce.depfu.com/github.com/vercel/next.js/security/advisories/GHSA-g5qg-72qw-gw5v\">🚨 Next.js Affected by Cache Key Confusion for Image Optimization API Routes</a></h4>\n<blockquote><p dir=\"auto\">A vulnerability in Next.js Image Optimization has been fixed in v15.4.5 and v14.2.31. When images returned from API routes vary based on request headers (such as <code class=\"notranslate\">Cookie</code> or <code class=\"notranslate\">Authorization</code>), these responses could be incorrectly cached and served to unauthorized users due to a cache key confusion bug.</p>\n<p dir=\"auto\">All users are encouraged to upgrade if they use API routes to serve images that depend on request headers and have image optimization enabled.</p>\n<p dir=\"auto\">More details at <a href=\"https://vercel.com/changelog/cve-2025-57752\">Vercel Changelog</a></p></blockquote>\n<h4><a href=\"https://bounce.depfu.com/github.com/vercel/next.js/security/advisories/GHSA-4342-x723-ch2f\">🚨 Next.js Improper Middleware Redirect Handling Leads to SSRF</a></h4>\n<blockquote><p dir=\"auto\">A vulnerability in <strong>Next.js Middleware</strong> has been fixed in <strong>v14.2.32</strong> and <strong>v15.4.7</strong>. The issue occurred when request headers were directly passed into <code class=\"notranslate\">NextResponse.next()</code>. In self-hosted applications, this could allow Server-Side Request Forgery (SSRF) if certain sensitive headers from the incoming request were reflected back into the response.</p>\n<p dir=\"auto\">All users implementing custom middleware logic in self-hosted environments are strongly encouraged to upgrade and verify correct usage of the <code class=\"notranslate\">next()</code> function.</p>\n<p dir=\"auto\">More details at <a href=\"https://vercel.com/changelog/cve-2025-57822\">Vercel Changelog</a></p></blockquote>\n</details>\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/vercel/next.js/releases/tag/v15.4.7\">15.4.7</a></h4>\n\n<blockquote><div class=\"markdown-alert markdown-alert-note\" dir=\"auto\">\n<p class=\"markdown-alert-title\" dir=\"auto\"><svg class=\"octicon octicon-info mr-2\" viewbox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z\"></path></svg>Note</p>\n<p dir=\"auto\">This release is backporting bug fixes. It does <strong>not</strong> include all pending features/changes on canary.</p>\n</div>\n<h3 dir=\"auto\">Core Changes</h3>\n<ul dir=\"auto\">\n<li>fix router handling when setting a location response header <a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/82588\">#82588</a>\n</li>\n</ul>\n<h3 dir=\"auto\">Credits</h3>\n<p dir=\"auto\">Huge thanks to <a href=\"https://bounce.depfu.com/github.com/ztanner\">@ztanner</a> for helping!</p></blockquote>\n<h4><a href=\"https://github.com/vercel/next.js/releases/tag/v15.4.6\">15.4.6</a></h4>\n\n<blockquote><div class=\"markdown-alert markdown-alert-note\" dir=\"auto\">\n<p class=\"markdown-alert-title\" dir=\"auto\"><svg class=\"octicon octicon-info mr-2\" viewbox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z\"></path></svg>Note</p>\n<p dir=\"auto\">This release is backporting bug fixes. It does <strong>not</strong> include all pending features/changes on canary.</p>\n</div>\n<h3 dir=\"auto\">Core Changes</h3>\n<ul dir=\"auto\">\n<li>fix: <code class=\"notranslate\">_error</code> page's <code class=\"notranslate\">req.url</code> can be overwritten to dynamic param on minimal mode (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/82347\">#82347</a>)</li>\n<li>fix: add <code class=\"notranslate\">?dpl</code> to fonts in <code class=\"notranslate\">/_next/static/media</code> (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/82384\">#82384</a>)</li>\n</ul>\n<h3 dir=\"auto\">Credits</h3>\n<p dir=\"auto\">Huge thanks to <a href=\"https://bounce.depfu.com/github.com/devjiwonchoi\">@devjiwonchoi</a>, <a href=\"https://bounce.depfu.com/github.com/ijjk\">@ijjk</a>, and <a href=\"https://bounce.depfu.com/github.com/styfle\">@styfle</a> for helping!</p></blockquote>\n<h4><a href=\"https://github.com/vercel/next.js/releases/tag/v15.4.5\">15.4.5</a></h4>\n\n<blockquote><div class=\"markdown-alert markdown-alert-note\" dir=\"auto\">\n<p class=\"markdown-alert-title\" dir=\"auto\"><svg class=\"octicon octicon-info mr-2\" viewbox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z\"></path></svg>Note</p>\n<p dir=\"auto\">This release is backporting bug fixes. It does <strong>not</strong> include all pending features/changes on canary.</p>\n</div>\n<h3 dir=\"auto\">Core Changes</h3>\n<ul dir=\"auto\">\n<li>Fix API stripping JSON incorrectly (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/82062\">#82062</a>)</li>\n<li>Fix i18n fallback: false collision (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/82158\">#82158</a>)</li>\n<li>Revert \"Fix tracing of server actions imported by client components (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/82167\">#82167</a>)</li>\n<li>Ensure setAssetPrefix updates config instance (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/82165\">#82165</a>)</li>\n<li>Turbopack: update mimalloc (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/82166\">#82166</a>)</li>\n<li>fix(next/image): fix image-optimizer.ts headers (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/82175\">#82175</a>)</li>\n<li>fix(next/image): improve and simplify detect-content-type (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/82174\">#82174</a>)</li>\n</ul>\n<h3 dir=\"auto\">Credits</h3>\n<p dir=\"auto\">Huge thanks to <a href=\"https://bounce.depfu.com/github.com/ijjk\">@ijjk</a>, <a href=\"https://bounce.depfu.com/github.com/sokra\">@sokra</a>, and <a href=\"https://bounce.depfu.com/github.com/styfle\">@styfle</a> for helping!</p></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/next/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/vercel/next.js/compare/fe5db65859f0658d1c4701635ec4f4e5ec507e64...f30d815859e932e09222e93bb6e8a376b918d874\">See the full diff on Github</a>. The new version differs by 14 commits:</p>\n<ul>\n<li><a href=\"https://github.com/vercel/next.js/commit/f30d815859e932e09222e93bb6e8a376b918d874\"><code>v15.4.7</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/1a026e338d2b8c977c8949a134168952338d6d01\"><code>fix router handling when setting a location response header (#82588)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/be4aafd4b744fbf6500b311b74c84243f70a3059\"><code>v15.4.6</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/91e5b6b84f56c096dc2bb647eb384388e06489fd\"><code>Backport &quot;fix: add `?dpl` to fonts in `/_next/static/media` (#82384)&quot; (#82421)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/f1629d939597cc46ccbe44fe66bda91eac31e219\"><code>Backport &quot;[Pages] fix: `_error` page&#39;s `req.url` can be overwritten t… (#82377)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/b9aab5dbe926c256d439bfecb226693dcd1a1be4\"><code>v15.4.5</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/a8c93c49dd2d42a2ced8a17bc53b3fea11d25c96\"><code>Disable test new tests jobs</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/ed2a6c754831406f8cd724eb52a562bb124c1504\"><code>[backport]: fix(next/image): improve and simplify detect-content-type (#82118) (#82174)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/f00fcc9011e7d0ef027021fc8424f51b8ac97880\"><code>[backport]: fix(next/image): fix image-optimizer.ts headers (#82114) (#82175)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/55a7568e9d12459f8c5f5ae120fe2e228af284bb\"><code>Backport: Turbopack: update mimalloc (#81993) (#82166)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/5bc4b368e5bc4d301f94955307e37a0328612408\"><code>[backport] Ensure setAssetPrefix updates config instance  (#82165)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/717dfb6ec985ba58b20ce6533ceecab213f72c22\"><code>[Backport] Revert &quot;Fix tracing of server actions imported by client components (#78968) (#82167)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/6372ba03e85ca598b67fe21daa87dbad328f581b\"><code>[backport] Fix i18n fallback: false collision  (#82158)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/1e2c3792f88491ab8cfba580b8f17aad17015d17\"><code>Fix API stripping JSON incorrectly (#82062)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18838","RelatedDescription":"Closed or merged PR \"🚨 [security] Update all of nextjs 15.4.4 → 15.4.7 (patch)\" (#18838)"},{"Id":"3371401339","IsPullRequest":false,"CreatedAt":"2025-09-01T06:38:51","Actor":"dbwhddn10","Number":"18848","RawContent":null,"Title":"[v4] The <button> element default css cursor property issue","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n4.1.12\n\n**What browser are you using?**\nChrome, Edge\n\n**Reproduction URL**\nhttps://play.tailwindcss.com/L0amaBtLvf\n\nThe <button> element has different default css cursor properties in versions 3.4.17 and 4.1.12.\n\ncursor:default <- v4.1.12\ncursor:pointer <- v3.4.17\n\nI think v3.4.17 is correct.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18848","RelatedDescription":"Closed issue \"[v4] The <button> element default css cursor property issue\" (#18848)"},{"Id":"3370250643","IsPullRequest":false,"CreatedAt":"2025-08-31T15:07:46","Actor":"non25","Number":"18841","RawContent":null,"Title":"Mapping complex design systems to tailwind utilities broken in v4 CSS config DSL","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.12\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: postcss: v8.5.6, postcss-loader v8.1.1\n\n**What version of Node.js are you using?**\n\nv22.19.0\n\n**What browser are you using?**\n\nFirefox v142.0.1, Chromium v139.0.7258.154\n\n**What operating system are you using?**\n\nArch Linux\n\nhttps://gist.github.com/non25/6e1ddd3d4667aac9c4511d1be7db38ba\n\n**Describe your issue**\n\nSince the introduction of the new CSS DSL configuration syntax in Tailwind v4, I've found it extremely difficult—if not impossible—to maintain a mapping between a complex, domain/purpose-focused design system and Tailwind's utility classes in a clean, maintainable way.\n\nMy use case involves:\n- A color system with semantic/grouped tokens that should map only to a specific subset of Tailwind's domains (for example, only `background-color` or `text-color` depending on their semantic intent).\n- A spacing system (with its own design tokens) that needs to be mapped predictably and consistently across related Tailwind utilities (like `padding`, `gap`, `size`, etc.).\n\nThe new configuration approach doesn't provide a clean way to express these mappings directly. To achieve the necessary mappings, I have to generate the Tailwind config using a custom code-generation script, which is both ugly and hard to maintain. I'm forced to essentially re-implement or reverse-engineer how Tailwind generates spacing and utility classes, which feels fragile and not in the intended spirit of the framework.\n\n**Steps to Reproduce:**\n1. Attempt to map a complex design system (with domain-focused color and spacing tokens) to Tailwind utility domains using only the new CSS DSL config syntax.\n2. Notice that there is no first-class way to control or limit how each design token maps to only certain Tailwind utility domains or property groups (e.g., ensuring a color token appears only as a background, not a border, or mapping spacing tokens only to padding/gap).\n3. As a workaround, generate the config with your own code, essentially duplicating the logic that Tailwind itself uses internally.\n\n**Expected Behavior:**\nI'd expect to be able to use Tailwind's config and generator in a \"semantic\" or \"domain-aware\" manner, mapping complex design system tokens to only the relevant utility groups, while still taking full advantage of Tailwind's underlying generator and conventions—without having to write custom code-generation tooling. This would make working with complex/enterprise-level design systems much more maintainable and would reinforce Tailwind's place as a flexible foundation for modern web UI work.\n\n<img width=\"490\" height=\"490\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/7865e959-9c1a-4ac6-a9d6-4f81125c0f01\" />\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18841","RelatedDescription":"Closed issue \"Mapping complex design systems to tailwind utilities broken in v4 CSS config DSL\" (#18841)"},{"Id":"3368984600","IsPullRequest":false,"CreatedAt":"2025-08-30T13:24:58","Actor":"alaindeurveilher","Number":"18836","RawContent":null,"Title":"cannot install @tailwindcss/postcss on Stackblitz with v4.1.12","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.1.12\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\npostcss 8.5.6\n\n**What version of Node.js are you using?**\n\nv20.19.1\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nStackblitz\n\n**Reproduction URL**\n\nhttps://stackblitz.com/edit/stackblitz-starters-afdncjbb?file=package.json\n\n**Describe your issue**\n\ntrying to install the latest version of @tailwindcss/postcss fails on Stackblitz:\n\n\nIn the output below, tailwindcss 4.1.12 and postcss 8.5.6 are already installed:\n```\n❯ yarn add @tailwindcss/postcss\nyarn add v1.22.19\nwarning package-lock.json found. Your project contains lock files generated by tools other than Yarn. It is advised not to mix package managers in order to avoid resolution inconsistencies caused by unsynchronized lock files. To clear this warning, remove package-lock.json.\n[1/4] 🔍  Resolving packages...\n[2/4] 🚚  Fetching packages...\nerror @tailwindcss/oxide@4.1.12: The CPU architecture \"x64\" is incompatible with this module.\nerror Found incompatible module.\ninfo Visit https://yarnpkg.com/en/docs/cli/add for documentation about this command.\n\n```\npackage.json at the moment of trying to install the remaining package:\n```json\n{\n  \"name\": \"angular-starter\",\n  \"private\": true,\n  \"scripts\": {\n    \"ng\": \"ng\",\n    \"start\": \"ng serve\",\n    \"build\": \"ng build\"\n  },\n  \"dependencies\": {\n    \"@angular/animations\": \"^20.0.0\",\n    \"@angular/common\": \"^20.0.0\",\n    \"@angular/compiler\": \"^20.0.0\",\n    \"@angular/core\": \"^20.0.0\",\n    \"@angular/forms\": \"^20.0.0\",\n    \"@angular/platform-browser\": \"^20.0.0\",\n    \"@angular/router\": \"^20.0.0\",\n    \"postcss\": \"^8.5.6\",\n    \"rxjs\": \"^7.8.1\",\n    \"tailwindcss\": \"^4.1.12\",\n    \"tslib\": \"^2.5.0\",\n    \"zone.js\": \"~0.15.0\"\n  },\n  \"devDependencies\": {\n    \"@angular/build\": \"^20.0.0\",\n    \"@angular/cli\": \"^20.0.0\",\n    \"@angular/compiler-cli\": \"^20.0.0\",\n    \"typescript\": \"^5.8.2\"\n  }\n}\n\n\n```\n\n<img width=\"877\" height=\"835\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e8afa90c-5d95-4197-aa12-7f6fd785fe37\" />\n\n**Expected**\n\nIt is expected that the installation of all the required packages for tailwindcss v4 succeed even on the Stackblitz platform.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18836","RelatedDescription":"Closed issue \"cannot install @tailwindcss/postcss on Stackblitz with v4.1.12\" (#18836)"},{"Id":"3368535388","IsPullRequest":false,"CreatedAt":"2025-08-30T00:36:41","Actor":"hyperknot","Number":"18833","RawContent":null,"Title":"source() handling different between cli and vite","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\ntailwindcss 4.1.12\n@tailwindcss/vite 4.1.12\n\n**What version of Node.js are you using?**\nv22.13.1\n\n**What browser are you using?**\n\n-\n\n**What operating system are you using?**\n\nmacOS\n\n**Describe your issue**\n\nThe same line\n\n```\n@import \"tailwindcss\" source(\"../../components\");\n```\n\nworks with cli but not with the Vite plugin. Vite says directory doesn't exist.\n\nI'm trying to figure out what is the base directory in Vite plugin, but it's impossible. I enabled DEBUG, but it shows nothing meaningful. \n\n```\ntransforming (1) src/index.tsx\n[78.23ms] [@tailwindcss/vite] Generate CSS (build)\n[77.96ms]   ↳ Setup compiler\n\n✓ 6 modules transformed.\n✗ Build failed in 142ms\nerror during build:\n[@tailwindcss/vite:generate:build] The `source(../../components)` does not exist \n```\n\nEven when it works, it's really not showing anything. The most important information would be:\n- base dir\n- absolute path of the resolved scan target\n- exact file list added by the scanner\n\nInstead, I get this:\n\n```\ntransforming (7) ../packages/shared/components/AppUI.tsx\n[163.03ms] [@tailwindcss/vite] Generate CSS (build)\n[ 81.87ms]   ↳ Setup compiler\n[  3.72ms]   ↳ Setup scanner\n[ 14.76ms]   ↳ Scan for candidates\n[ 14.70ms]   ↳ Build CSS\n[  0.00ms]   ↳ Build Source Map\n[ 12.48ms] [@tailwindcss/vite] Optimize CSS\n```\n\nRight now, I'm at the step when I'm recompiling tailwind/vite to add these debug lines.\n\nSo please take this as both a bug report and a feature request.\n1. Bug: cli can compile a file that vite cannot. \n2. Feature request: allow users to see what's happening, otherwise configuring source() is totally walking in the dark.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18833","RelatedDescription":"Open issue \"source() handling different between cli and vite\" (#18833)"},{"Id":"3361027109","IsPullRequest":false,"CreatedAt":"2025-08-29T15:01:21","Actor":"benface","Number":"18812","RawContent":null,"Title":"IntelliSense suggests weird `__CSS_VALUES__` value","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.1.12, and actually even the most recent insiders version (`0.0.0-insiders.8165e04`)\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNone, just `tailwindcss` and `@tailwindcss/cli`\n\n**What version of Node.js are you using?**\n\nv24.5.0\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction ~~URL~~ steps / Describe your issue**\n\nIn a legacy `@plugin`:\n```js\nmatchUtilities(\n  {\n    foo: (value) => ({\n      \"--foo\": value,\n    }),\n  },\n  {\n    values: theme(\"colors\"),\n  }\n);\n```\n\nIn the HTML:\n```html\n<div class=\"foo-\n               ^\n               First IntelliSense suggestion:\n               - foo-__CSS_VALUES__\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18812","RelatedDescription":"Closed issue \"IntelliSense suggests weird `__CSS_VALUES__` value\" (#18812)"},{"Id":"3363696439","IsPullRequest":true,"CreatedAt":"2025-08-29T15:01:20","Actor":"thecrypticace","Number":"18820","RawContent":null,"Title":"Hide internal fields from completions in `matchUtilities`","State":"closed","Body":"The `__CSS_VALUES__` field is an internal field we use to transport data about theme options from CSS throug hte JS plugin API. It wasn’t supposed to show up in suggestions but we forgot to remove it from them.\r\n\r\nFixes #18812\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18820","RelatedDescription":"Closed or merged PR \"Hide internal fields from completions in `matchUtilities`\" (#18820)"},{"Id":"3365062376","IsPullRequest":true,"CreatedAt":"2025-08-29T14:22:19","Actor":"depfu[bot]","Number":"18821","RawContent":null,"Title":"Update magic-string 0.30.17 → 0.30.18 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ magic-string (0.30.17 → 0.30.18) · [Repo](https://github.com/rich-harris/magic-string) · [Changelog](https://github.com/Rich-Harris/magic-string/blob/master/CHANGELOG.md)\n\n\n\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/rich-harris/magic-string/compare/5ce04aa19d1f0328711945c895d2519f4c9ba9bd...0005025c1849f294b3978547e4cb46f2869c9864\">See the full diff on Github</a>. The new version differs by 5 commits:</p>\n<ul>\n<li><a href=\"https://github.com/Rich-Harris/magic-string/commit/0005025c1849f294b3978547e4cb46f2869c9864\"><code>chore: release v0.30.18</code></a></li>\n<li><a href=\"https://github.com/Rich-Harris/magic-string/commit/376bafcb30c284a533977f1dd3edef85d6d03365\"><code>chore: update package.json meta</code></a></li>\n<li><a href=\"https://github.com/Rich-Harris/magic-string/commit/e59c925eb8aaa1c6655854520a56accfa9fb5146\"><code>chore: update deps</code></a></li>\n<li><a href=\"https://github.com/Rich-Harris/magic-string/commit/0fd6253e3ef1912ae81ccc35d85ab32275715d5b\"><code>fix: prevent infinite loop on empty input (#302)</code></a></li>\n<li><a href=\"https://github.com/Rich-Harris/magic-string/commit/a8ee7b79c0a7a9ade1585c73fff1ec7152940334\"><code>chore: update eslint config</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18821","RelatedDescription":"Closed or merged PR \"Update magic-string 0.30.17 → 0.30.18 (minor)\" (#18821)"},{"Id":"3365787581","IsPullRequest":true,"CreatedAt":"2025-08-29T14:16:40","Actor":"depfu[bot]","Number":"18823","RawContent":null,"Title":"Update @playwright/test 1.54.2 → 1.55.0 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​playwright/test (1.54.2 → 1.55.0) · [Repo](https://github.com/Microsoft/playwright)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/microsoft/playwright/releases/tag/v1.55.0\">1.55.0</a></h4>\n\n<blockquote><h2 dir=\"auto\">New APIs</h2>\n<ul dir=\"auto\">\n<li>New Property <a href=\"https://playwright.dev/docs/api/class-teststepinfo#test-step-info-title-path\">testStepInfo.titlePath</a> Returns the full title path starting from the test file, including test and step titles.</li>\n</ul>\n<h2 dir=\"auto\">Codegen</h2>\n<ul dir=\"auto\">\n<li>Automatic <code class=\"notranslate\">toBeVisible()</code> assertions: Codegen can now generate automatic <code class=\"notranslate\">toBeVisible()</code> assertions for common UI interactions. This feature can be enabled in the Codegen settings UI.</li>\n</ul>\n<h2 dir=\"auto\">Breaking Changes</h2>\n<ul dir=\"auto\">\n<li>\n<g-emoji class=\"g-emoji\" alias=\"warning\">⚠️</g-emoji> Dropped support for Chromium extension manifest v2.</li>\n</ul>\n<h2 dir=\"auto\">Miscellaneous</h2>\n<ul dir=\"auto\">\n<li>Added support for Debian 13 \"Trixie\".</li>\n</ul>\n<h2 dir=\"auto\">Browser Versions</h2>\n<ul dir=\"auto\">\n<li>Chromium 140.0.7339.16</li>\n<li>Mozilla Firefox 141.0</li>\n<li>WebKit 26.0</li>\n</ul>\n<p dir=\"auto\">This version was also tested against the following stable channels:</p>\n<ul dir=\"auto\">\n<li>Google Chrome 139</li>\n<li>Microsoft Edge 139</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/@playwright%2Ftest/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/Microsoft/playwright/compare/00ce6a8b72f3845b8b45a3af684391d2eb8a5cef...f992162f04ae0b0b5a0f4b6114b894215be98995\">See the full diff on Github</a>. The new version differs by more commits than we can show here.</p>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18823","RelatedDescription":"Closed or merged PR \"Update @playwright/test 1.54.2 → 1.55.0 (minor)\" (#18823)"},{"Id":"3366375993","IsPullRequest":false,"CreatedAt":"2025-08-29T11:35:21","Actor":"vatsake","Number":"18828","RawContent":null,"Title":"Classes are not being generated if using breakpoint","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n4.1.2 Doesn't work,\n3. does work.\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\npostcss 8.5.6\n\n**What version of Node.js are you using?**\n24.4.1\n\n**What browser are you using?**\nChrome\n\n**What operating system are you using?**\nWin11\n\n**Describe your issue**\nI am using tailwind as a postcss plugin. New 4. version requires @tailwindcss/postcss. \nIt generated normal class like flex, p-4, but whenever i'm adding a breakpoint to class sm:flex, then the class isn't generated.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18828","RelatedDescription":"Closed issue \"Classes are not being generated if using breakpoint\" (#18828)"},{"Id":"3362941612","IsPullRequest":true,"CreatedAt":"2025-08-28T14:50:49","Actor":"RobinMalfait","Number":"18817","RawContent":null,"Title":"Migrate `supports` theme keys","State":"closed","Body":"This PR is a follow up of #18815 and #18816, but this time let's migrate the `supports` theme keys.\n\nLet's imagine you have the following Tailwind CSS v3 configuration:\n```ts\nexport default {\n  content: ['./src/**/*.html'],\n  theme: {\n    extend: {\n      supports: {\n        // Automatically handled by bare values (using CSS variable as the value)\n        foo: 'foo: var(--foo)', // parentheses are optional\n        bar: '(bar: var(--bar))',\n\n        // Not automatically handled because names differ\n        baz: 'qux: var(--foo)',\n   //   ^^^   ^^^       ← different names\n\n        // Custom\n        grid: 'display: grid',\n      },\n    },\n  },\n}\n```\n\nThen we would generate the following Tailwind CSS v4 CSS:\n\n```css\n@custom-variant supports-baz {\n  @supports (qux: var(--foo)) {\n    @slot;\n  }\n}\n@custom-variant supports-grid {\n  @supports (display: grid) {\n    @slot;\n  }\n}\n```\n\nNotice how we didn't generate a custom variant for `data-foo` or `data-bar` because those are automatically handled by bare values.\n\nI also went with the longer form of `@custom-variant`, we could use the single selector approach, but that felt less clear to me.\n\n```css\n@custom-variant supports-baz (@supports (qux: var(--foo)));\n@custom-variant supports-grid (@supports (display: grid));\n```\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18817","RelatedDescription":"Closed or merged PR \"Migrate `supports` theme keys\" (#18817)"},{"Id":"3362829258","IsPullRequest":true,"CreatedAt":"2025-08-28T14:45:18","Actor":"RobinMalfait","Number":"18816","RawContent":null,"Title":"Migrate `data` theme keys","State":"closed","Body":"This PR is similar to and a follow up of #18815, but this time to migrate the `data` theme keys.\n\nLet's imagine you have the following Tailwind CSS v3 configuration:\n```ts\nexport default {\n  content: ['./src/**/*.html'],\n  theme: {\n    extend: {\n      data: {\n        // Automatically handled by bare values\n        foo: 'foo',\n    //  ^^^   ^^^       ← same names\n\n        // Not automatically handled by bare values\n        bar: 'baz',\n    //  ^^^   ^^^       ← different names\n\n        // Completely custom\n        checked: 'ui~=\"checked\"',\n      },\n    },\n  },\n}\n```\n\nThen we would generate the following Tailwind CSS v4 CSS:\n\n```css\n@custom-variant data-bar (&[data-baz]);\n@custom-variant data-checked (&[data-ui~=\"checked\"]);\n```\n\nNotice how we didn't generate a custom variant for `data-foo` because those are automatically handled by bare values.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18816","RelatedDescription":"Closed or merged PR \"Migrate `data` theme keys\" (#18816)"},{"Id":"3362764156","IsPullRequest":true,"CreatedAt":"2025-08-28T14:40:39","Actor":"RobinMalfait","Number":"18815","RawContent":null,"Title":"Migrate `aria` theme keys","State":"closed","Body":"This PR migrates `aria` theme keys when migrating from Tailwind CSS v3 to v4.\r\n\r\nWhile working on improving some of the error messages to get more insights into why migrating the JS file changed (https://github.com/tailwindlabs/tailwindcss/pull/18808), I ran into an issue where I couldn't think of a good comment to why `aria` theme keys were not being migrated. (Internally we have `aria` \"blocked\").\r\n\r\nSo instead of figuring out a good error message..., I just went ahead and added the migration for `aria` theme keys.\r\n\r\n\r\nLet's imagine you have the following Tailwind CSS v3 configuration:\r\n```ts\r\nexport default {\r\n  content: ['./src/**/*.html'],\r\n  theme: {\r\n    extend: {\r\n      aria: {\r\n        // Built-in (not really, but visible because of intellisense)\r\n        busy: 'busy=\"true\"',\r\n\r\n        // Automatically handled by bare values\r\n        foo: 'foo=\"true\"',\r\n    //  ^^^   ^^^            ← same names\r\n\r\n        // Not automatically handled by bare values because names differ\r\n        bar: 'baz=\"true\"',\r\n    //  ^^^   ^^^            ← different names\r\n\r\n        // Completely custom\r\n        asc: 'sort=\"ascending\"',\r\n        desc: 'sort=\"descending\"',\r\n      },\r\n    },\r\n  },\r\n}\r\n```\r\n\r\nThen we would generate the following Tailwind CSS v4 CSS:\r\n\r\n```css\r\n@custom-variant aria-bar (&[aria-baz=\"true\"]);\r\n@custom-variant aria-asc (&[aria-sort=\"ascending\"]);\r\n@custom-variant aria-desc (&[aria-sort=\"descending\"]);\r\n```\r\n\r\nNotice how we didn't generate a custom variant for `aria-busy` or `aria-foo` because those are automatically handled by bare values.\r\n\r\nWe could also emit a comment near the CSS to warn about the fact that `@custom-variant` will always be sorted _after_ any other built-in variants.\r\n\r\nThis could result in slightly different behavior, or different order of classes when using `prettier-plugin-tailwindcss`.\r\n\r\nI don't know how important this is, because before this PR we would just use `@config './tailwind.config.js';`.\r\nEdit: when using the `@config` we override `aria` and extend it, which means that it would be in the expected order 🤔 \r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18815","RelatedDescription":"Closed or merged PR \"Migrate `aria` theme keys\" (#18815)"},{"Id":"3363152237","IsPullRequest":false,"CreatedAt":"2025-08-28T13:03:31","Actor":"lflangis","Number":"18818","RawContent":null,"Title":"border-color doesn't process transparency with custom color","State":"closed","Body":"**What version of Tailwind CSS are you using?**\nv4.0.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\nReact, typescript, Vite 6.1.0,  @tailwindcss/postcss ^4, @tailwindcss/vite ^4.1.8\n\n**What version of Node.js are you using?**\nFor example: v20.18.0\n\n**Reproduction URL**\nhttps://play.tailwindcss.com/rhcRcR1vc3\n\n**Describe your issue**\n\nHi, it's seems that tailwind as some issue computing transparency with custom color. In the reproduction URL, I use the same code for both button, one use a custom color `border-primary/20` and the other one a native tailwind color `border-white/20`. \n\n<img width=\"850\" height=\"381\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/a10878ec-5981-4ed4-b6ac-0e7b68bba12e\" />\n\nThe result should be\n\n<img width=\"350\" height=\"157\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/6f980ccc-7382-4226-aa0d-e15bc33d9138\" />\n\nBut the current border doesn't seems to be processed at all\n\n<img width=\"199\" height=\"122\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/d9517f25-ef70-472c-b94d-05a69585180a\" />\n\nMaybe I'm missing something, but I think there is maybe an issue with tailwind. \n\nThanks\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18818","RelatedDescription":"Closed issue \"border-color doesn't process transparency with custom color\" (#18818)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-09-04T03:30:24.5506986Z","RunDurationInMilliseconds":485}