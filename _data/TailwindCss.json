{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"3009132890","IsPullRequest":true,"CreatedAt":"2025-04-21T19:26:43","Actor":"depfu[bot]","Number":"17738","RawContent":null,"Title":"Update @types/react 19.0.12 → 19.1.2 (minor)","State":"open","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​types/react (19.0.12 → 19.1.2) · [Repo](https://github.com/DefinitelyTyped/DefinitelyTyped)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17738","RelatedDescription":"Open PR \"Update @types/react 19.0.12 → 19.1.2 (minor)\" (#17738)"},{"Id":"3008509564","IsPullRequest":true,"CreatedAt":"2025-04-21T14:14:16","Actor":"thecrypticace","Number":"17733","RawContent":null,"Title":"Handle legacy key behavior in theme-driven suggestions for `@utility`","State":"open","Body":"Fixes https://github.com/tailwindlabs/tailwindcss-intellisense/issues/1328\r\n\r\nThe alpha and beta releases used `_` in theme keys to represent a `.`. This meant we used `--leading-1_5` instead of `--leading-1\\.5` to add utilities like `leading-1.5`. We prefer the use of the escaped dot now but still want to make sure suggestions for the legacy key format still works as expected when surrounded by numbers.\r\n\r\nThis is the same as #16433 but for `@utility` since we apparently missed this when emitting suggestions for it\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17733","RelatedDescription":"Open PR \"Handle legacy key behavior in theme-driven suggestions for `@utility`\" (#17733)"},{"Id":"3007181964","IsPullRequest":false,"CreatedAt":"2025-04-21T07:32:35","Actor":"evgeniyworkbel","Number":"17724","RawContent":null,"Title":"@import url(\"tailwindcss\") is not worked, only @import 'tailwindcss'","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n v4.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\nreact@18.3, vite@5.3.1, @tailwindcss/vite@4.1.4\n\n**What version of Node.js are you using?**\nv20.14.0\n\n**What browser are you using?**\nChrome 135.0.7049.96 \n\n**What operating system are you using?**\nmacOS\n\n**Reproduction URL**\nhttps://stackblitz.com/edit/tailwind-4-import-url-is-not-working?file=vite.config.ts\n\n**Describe your issue**\nDefining tw styles import @import url(\"tailwindcss\") is not worked, only @import 'tailwindcss' working\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17724","RelatedDescription":"Closed issue \"@import url(\"tailwindcss\") is not worked, only @import 'tailwindcss'\" (#17724)"},{"Id":"3007763227","IsPullRequest":false,"CreatedAt":"2025-04-21T07:11:25","Actor":"kyrylo","Number":"17728","RawContent":null,"Title":"Styles aren't generated when building a Docker image for ARM64 on a 2019 Intel MacBook Pro","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nRails 8.0.2\n\n**What version of Node.js are you using?**\n\n-\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS -> ARM64\n\n**Describe your issue**\n\nI've prepared detailed steps you can follow.\n\n1. I'm on a MacBook Pro 2019 (Intel):\n   ```\n   % arch\n   i386\n\n   % uname\n   Darwin\n   ```\n2. Generate a new Rails 8 app with Tailwind enabled ([zip attached](https://github.com/user-attachments/files/19773720/TailwindOnARM.zip)):\n   ```\n   rails new TailwindOnARM --css tailwind\n   ```\n3. Scaffold a resource that uses Tailwind classes:\n   ```\n   rails g scaffold Post\n   ```\n4. Start the dev server and check that Tailwind styling is applied (https://localhost:3000/posts):\n   ```\n   bin/dev\n   ```\n   \n   <img width=\"843\" alt=\"Screenshot 2025-04-16 at 11 44 38 AM\" src=\"https://github.com/user-attachments/assets/1629ee36-58bf-45fd-80ec-0102de96e7fa\" />\n\n5. Build and push a Docker image for ARM64:\n   ```\n   docker buildx build --platform linux/arm64 -t kyrylo/tailwind-on-arm:latest --push .\n   ```\n6. On an ARM server (I use Hetzner CAX11), install Docker, then run the image:\n   ```\n   docker run -d -p 80:80 -e RAILS_MASTER_KEY=90279f1e5d289cb437ba0c2f959a2ea5 --name tailwind_on_arm kyrylo/tailwind-on-arm\n   ```\n7. Check the result at `http://<IP-ADDRESS>/posts` and notice that Tailwind styling is not applied:\n   | Screenshot | application.css |\n   |------------|-----------------|\n   | <img width=\"843\" alt=\"Screenshot 2025-04-16 at 11 44 53 AM\" src=\"https://github.com/user-attachments/assets/3146703d-df20-4a24-a566-96e325df2723\" /> | <img width=\"790\" alt=\"Screenshot 2025-04-16 at 11 49 39 AM\" src=\"https://github.com/user-attachments/assets/1da77e59-d900-4730-8400-2c70fe2fccec\" /> |\n   \n---\n\nI'm happy to help debug this further. You can pull my image from Docker Hub so you don't have to build it yourself. ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17728","RelatedDescription":"Open issue \"Styles aren't generated when building a Docker image for ARM64 on a 2019 Intel MacBook Pro\" (#17728)"},{"Id":"3007352623","IsPullRequest":false,"CreatedAt":"2025-04-21T01:16:58","Actor":"kocv59","Number":"17726","RawContent":null,"Title":"Reliable order for utilities","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nwebpack 5.98.0\npostcss 8.5.3\npostcss-loader 8.1.1\n\n**What version of Node.js are you using?**\n\nv20.19.0\n\n**What browser are you using?**\n\nChrome\n\n**Describe your issue**\n\nV4 order of utilities changed. V3 put w-full before other w- utilities so an element could have w-full by default and adding a different w- would override it **without having to remove w-full** which makes simpler code.\n\nNow w-full is last so it doesn't work and breaking layouts. People relied on old order without realizing it isn't meant to be relied on. So it's still a breaking change and it should be part of upgrade guide.\n\nNumbered utilities like these should be added to css file in reliable order. Biggest to smallest makes more sense because smaller is usually used in overriding. But opposite is fine too but it should be consistent and documented.\n\nThen we can use power of css to override by adding classes where it can be done and only remove the old class when it has to be done. Without reliable order the old class always has to be removed.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17726","RelatedDescription":"Open issue \"Reliable order for utilities\" (#17726)"},{"Id":"3007177271","IsPullRequest":false,"CreatedAt":"2025-04-20T19:05:50","Actor":"iquito","Number":"17723","RawContent":null,"Title":"Form placeholders are not at 50% opacity for Firefox","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nv4.1.4\n\n**What browser are you using?**\n\nFirefox 128.9.0esr\n\n**What operating system are you using?**\n\nDebian Linux with KDE\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/lBgTaFFT1a\n\n**Describe your issue**\n\nIn Firefox placeholders in input elements are not at 50% opacity, they are shown in the regular text color. On Chrome/Chromium the opacity works. This seems to have changed since the initial v4 release, where opacity worked in Firefox too, and is likely because of this in the base layer:\n\n```css\n::placeholder {\n  opacity: 1;\n}\n@supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {\n  ::placeholder {\n    color: currentcolor;\n    @supports (color: color-mix(in lab, red, red)) {\n      color: color-mix(in oklab, currentcolor 50%, transparent);\n    }\n  }\n}\n```\n\nIt seems the `@supports` inside the first `@supports` is not understood by Firefox and not applied.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17723","RelatedDescription":"Open issue \"Form placeholders are not at 50% opacity for Firefox\" (#17723)"},{"Id":"3006004938","IsPullRequest":true,"CreatedAt":"2025-04-19T00:43:21","Actor":"RobinMalfait","Number":"17717","RawContent":null,"Title":"Ensure `@tailwindcss/upgrade` runs on Tailwind CSS v4 projects and is idempotent","State":"open","Body":"This PR ensures that the `@tailwindcss/upgrade` tool works on existing Tailwind CSS v4 projects. This PR also ensures that the upgrade tool is idempotent, meaning that it can be run multiple times and it should result in the same output.\r\n\r\nOne awesome feature this unlocks is that you can run the upgrade tool on your codebase at any time and upgrade classes if you still have some legacy syntaxes, such as `bg-[var(--my-color)]`, in your muscle memory.\r\n\r\nOne small note: If something changed in the first run, re-running will not work immediately because your git repository will not be clean and the upgrade tool requires your git repo to be clean. But once you verified and committed your changes, the upgrade tool will be idempotent.\r\n\r\nIdempotency is guaranteed by ensuring that some migrations are skipped by checking what version of Tailwind CSS you are on _before_ the version is upgraded.\r\n\r\nFor the Tailwind CSS version: We will resolve `tailwindcss` itself to know the _actual_ version that is installed (the one resolved from `node_modules`). Not the one available in your package.json. Your `package.json` could be out of sync if you reverted changes but didn't run `npm install` yet.\r\n\r\nBack to Idempotency:\r\n\r\nFor example, we have migrations where we change the variant order of stacked variants. If we would run these migrations every time you run the upgrade tool then we would be flip-flopping the order every run.\r\n\r\nSee: https://tailwindcss.com/docs/upgrade-guide#variant-stacking-order\r\n\r\nAnother example is where we rename some utilities. For example, we rename:\r\n\r\n| Before      | After       |\r\n| ----------- | ----------- |\r\n| `shadow`    | `shadow-sm` |\r\n| `shadow-sm` | `shadow-xs` |\r\n\r\nNotice how we have `shadow-sm` in both the `before` and `after` column.\r\n\r\nIf we would run the upgrade tool again, then we would eventually migrate your original `shadow` to `shadow-sm` (first run) and then to `shadow-xs` (second run). Which would result in the wrong shadow.\r\n\r\nSee: https://tailwindcss.com/docs/upgrade-guide#renamed-utilities\r\n\r\n---\r\n\r\nThe order of upgrade steps changed a bit as well to make the internals are easier to work with and reason about.\r\n\r\n1. Find CSS files\r\n2. Link JS config files (if you are in a Tailwind CSS v3 project)\r\n3. Migrate the JS config files (if you are in a Tailwind CSS v3 project)\r\n4. Upgrade Tailwind CSS to v4 (or the latest version at that point)\r\n5. Migrate the stylesheets (we used to migrate the source files first)\r\n6. Migrate the source files\r\n\r\nThis is done so that step 5 and 6 will always operate on a Tailwind CSS v4 project and we don't need to check the version number again. This is also necessary because your CSS file will now very likely contain `@import \"tailwindcss\";` which doesn't exist in Tailwind CSS v3.\r\n\r\nThis also means that we can rely on the same internals that Tailwind CSS actually uses for locating the source files. We will use `@tailwindcss/oxide`'s scanner to find the source files (and it also keeps your custom `@source` directives into account).\r\n\r\nThis PR also introduces a few actual migrations related to recent features and changes we shipped.\r\n\r\n1. We migrate deprecated classes to their new names:\r\n\r\n   | Before                | After                 |\r\n   | --------------------- | --------------------- |\r\n   | `bg-left-top`         | `bg-top-left`         |\r\n   | `bg-left-bottom`      | `bg-bottom-left`      |\r\n   | `bg-right-top`        | `bg-top-right`        |\r\n   | `bg-right-bottom`     | `bg-bottom-right`     |\r\n   | `object-left-top`     | `object-top-left`     |\r\n   | `object-left-bottom`  | `object-bottom-left`  |\r\n   | `object-right-top`    | `object-top-right`    |\r\n   | `object-right-bottom` | `object-bottom-right` |\r\n\r\n   Introduced in:\r\n\r\n   - https://github.com/tailwindlabs/tailwindcss/pull/17378\r\n   - https://github.com/tailwindlabs/tailwindcss/pull/17437\r\n\r\n2. We migrate simple arbitrary variants to their dedicated variant:\r\n\r\n   | Before                  | After               |\r\n   | ----------------------- | ------------------- |\r\n   | `[&:user-valid]:flex`   | `user-valid:flex`   |\r\n   | `[&:user-invalid]:flex` | `user-invalid:flex` |\r\n\r\n   Introduced in:\r\n\r\n   - https://github.com/tailwindlabs/tailwindcss/pull/12370\r\n\r\n3. We migrate `@media` variants to their dedicated variant:\r\n\r\n   | Before                                                | After                     |\r\n   | ----------------------------------------------------- | ------------------------- |\r\n   | `[@media_print]:flex`                                 | `print:flex`              |\r\n   | `[@media(prefers-reduced-motion:no-preference)]:flex` | `motion-safe:flex`        |\r\n   | `[@media(prefers-reduced-motion:reduce)]:flex`        | `motion-reduce:flex`      |\r\n   | `[@media(prefers-contrast:more)]:flex`                | `contrast-more:flex`      |\r\n   | `[@media(prefers-contrast:less)]:flex`                | `contrast-less:flex`      |\r\n   | `[@media(orientation:portrait)]:flex`                 | `portrait:flex`           |\r\n   | `[@media(orientation:landscape)]:flex`                | `landscape:flex`          |\r\n   | `[@media(forced-colors:active)]:flex`                 | `forced-colors:flex`      |\r\n   | `[@media(inverted-colors:inverted)]:flex`             | `inverted-colors:flex`    |\r\n   | `[@media(pointer:none)]:flex`                         | `pointer-none:flex`       |\r\n   | `[@media(pointer:coarse)]:flex`                       | `pointer-coarse:flex`     |\r\n   | `[@media(pointer:fine)]:flex`                         | `pointer-fine:flex`       |\r\n   | `[@media(any-pointer:none)]:flex`                     | `any-pointer-none:flex`   |\r\n   | `[@media(any-pointer:coarse)]:flex`                   | `any-pointer-coarse:flex` |\r\n   | `[@media(any-pointer:fine)]:flex`                     | `any-pointer-fine:flex`   |\r\n   | `[@media(scripting:none)]:flex`                       | `noscript:flex`           |\r\n\r\n   The new variants related to `inverted-colors`, `pointer`, `any-pointer` and `scripting` were introduced in:\r\n\r\n   - https://github.com/tailwindlabs/tailwindcss/pull/11693\r\n   - https://github.com/tailwindlabs/tailwindcss/pull/16946\r\n   - https://github.com/tailwindlabs/tailwindcss/pull/11929\r\n   - https://github.com/tailwindlabs/tailwindcss/pull/17431\r\n\r\n   This also applies to the `not` case, e.g.:\r\n\r\n   | Before                                                    | After                         |\r\n   | --------------------------------------------------------- | ----------------------------- |\r\n   | `[@media_not_print]:flex`                                 | `not-print:flex`              |\r\n   | `[@media_not(prefers-reduced-motion:no-preference)]:flex` | `not-motion-safe:flex`        |\r\n   | `[@media_not(prefers-reduced-motion:reduce)]:flex`        | `not-motion-reduce:flex`      |\r\n   | `[@media_not(prefers-contrast:more)]:flex`                | `not-contrast-more:flex`      |\r\n   | `[@media_not(prefers-contrast:less)]:flex`                | `not-contrast-less:flex`      |\r\n   | `[@media_not(orientation:portrait)]:flex`                 | `not-portrait:flex`           |\r\n   | `[@media_not(orientation:landscape)]:flex`                | `not-landscape:flex`          |\r\n   | `[@media_not(forced-colors:active)]:flex`                 | `not-forced-colors:flex`      |\r\n   | `[@media_not(inverted-colors:inverted)]:flex`             | `not-inverted-colors:flex`    |\r\n   | `[@media_not(pointer:none)]:flex`                         | `not-pointer-none:flex`       |\r\n   | `[@media_not(pointer:coarse)]:flex`                       | `not-pointer-coarse:flex`     |\r\n   | `[@media_not(pointer:fine)]:flex`                         | `not-pointer-fine:flex`       |\r\n   | `[@media_not(any-pointer:none)]:flex`                     | `not-any-pointer-none:flex`   |\r\n   | `[@media_not(any-pointer:coarse)]:flex`                   | `not-any-pointer-coarse:flex` |\r\n   | `[@media_not(any-pointer:fine)]:flex`                     | `not-any-pointer-fine:flex`   |\r\n   | `[@media_not(scripting:none)]:flex`                       | `not-noscript:flex`           |\r\n\r\nFor each candidate, we run a set of upgrade migrations. If at the end of the migrations the original candidate is still the same as the new candidate, then we will parse & print the candidate one more time to pretty print into consistent classes. Luckily parsing is cached so there is no real downside overhead.\r\n\r\nConsistency (especially with arbitrary variants and values) will reduce your CSS file because there will be fewer \"versions\" of your class.\r\n\r\nConcretely, the pretty printing will apply changes such as:\r\n\r\n| Before                 | After             |\r\n| ---------------------- | ----------------- |\r\n| `bg-[var(--my-color)]` | `bg-(--my-color)` |\r\n| `bg-[rgb(0,_0,_0)]`    | `bg-[rgb(0,0,0)]` |\r\n\r\nAnother big important reason for this change is that these classes on their own\r\nwould have been migrated _if_ another migration was relevant for this candidate.\r\nThis means that there are were some inconsistencies. E.g.:\r\n\r\n| Before                  | After                  | Reason                               |\r\n| ----------------------- | ---------------------- | ------------------------------------ |\r\n| `!bg-[var(--my-color)]` | `bg-(--my-color)!`     | Because the `!` is in the wrong spot |\r\n| `bg-[var(--my-color)]`  | `bg-[var(--my-color)]` | Because no migrations rand           |\r\n\r\nAs you can see, the way the `--my-color` variable is used, is different. This\r\nchanges will make sure it will now always be consistent:\r\n| Before | After |\r\n| ----------------------- | ---------------------- |\r\n| `!bg-[var(--my-color)]` | `bg-(--my-color)!` |\r\n| `bg-[var(--my-color)]` | `bg-(--my-color)` |\r\n\r\nYay!\r\n\r\nOf course, if you don't want these more cosmetic changes, you can always ignore the upgrade and revert these changes and only commit the changes you want.\r\n\r\n# Test plan\r\n\r\n- All existing tests still pass.\r\n  - But I had to delete 1 test (we tested that Tailwind CSS v3 was required).\r\n  - And had to mock the `version.isMajor` call to ensure we run the individual migration tests correctly.\r\n- Added new tests to test:\r\n  1. Migrating Tailwind CSS v4 projects works\r\n  1. Idempotency of the upgrade tool\r\n\r\n[ci-all]","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17717","RelatedDescription":"Open PR \"Ensure `@tailwindcss/upgrade` runs on Tailwind CSS v4 projects and is idempotent\" (#17717)"},{"Id":"3004768297","IsPullRequest":false,"CreatedAt":"2025-04-18T13:26:57","Actor":"muchenkezhan","Number":"17714","RawContent":null,"Title":"@apply Is it abandoned in v4","State":"closed","Body":"```\n<template>\n  <div class=\"f-header\">\n\n  </div>\n</template>\n\n<script setup>\n\n</script>\n\n<style lang=\"scss\" scoped>\n.f-header {\n  @apply flex shadow-sm items-center bg-white pl-3 pr-3;\n  height: 60px;\n}\n</style>\n\n```\nError message：\n```\n19:34:07 [vite] hmr update /src/views/markdown/components/header.vue?vue&type=style&index=0&scoped=23126ab5&lang.scss\n19:34:07 [vite] Internal server error: [postcss] [postcss] Cannot apply unknown utility class: shadow-sm\n  Plugin: vite:css\n  File: F:/my-vue/bird_markdown_vue/bird_mardown/src/views/markdown/components/header.vue?vue&type=style&index=0&scoped=23126ab5&lang.scss:undefined:NaN\n      at onInvalidCandidate (F:\\my-vue\\bird_markdown_vue\\bird_mardown\\node_modules\\tailwindcss\\dist\\lib.js:20:348)\n      at me (F:\\my-vue\\bird_markdown_vue\\bird_mardown\\node_modules\\tailwindcss\\dist\\lib.js:15:29596)\n      at De (F:\\my-vue\\bird_markdown_vue\\bird_mardown\\node_modules\\tailwindcss\\dist\\lib.js:20:311)\n      at si (F:\\my-vue\\bird_markdown_vue\\bird_mardown\\node_modules\\tailwindcss\\dist\\lib.js:36:784)\n      at async ui (F:\\my-vue\\bird_markdown_vue\\bird_mardown\\node_modules\\tailwindcss\\dist\\lib.js:36:1079)\n      at async Cr (F:\\my-vue\\bird_markdown_vue\\bird_mardown\\node_modules\\@tailwindcss\\node\\dist\\index.js:12:3305)\n      at async $ (F:\\my-vue\\bird_markdown_vue\\bird_mardown\\node_modules\\@tailwindcss\\postcss\\dist\\index.js:10:3320)\n      at async Object.Once (F:\\my-vue\\bird_markdown_vue\\bird_mardown\\node_modules\\@tailwindcss\\postcss\\dist\\index.js:10:3596)\n      at async LazyResult.runAsync (F:\\my-vue\\bird_markdown_vue\\bird_mardown\\node_modules\\postcss\\lib\\lazy-result.js:293:11)\n      at async compileCSS (file:///F:/my-vue/bird_markdown_vue/bird_mardown/node_modules/vite/dist/node/chunks/dep-DkOS1hkm.js:32271:25)\n\n```\n\nvite +vue3","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17714","RelatedDescription":"Closed issue \"@apply Is it abandoned in v4\" (#17714)"},{"Id":"3004689941","IsPullRequest":false,"CreatedAt":"2025-04-18T10:50:13","Actor":"bronisMateusz","Number":"17713","RawContent":null,"Title":"Group not working with ARIA states","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.3.0\n\n**What version of Node.js are you using?**\n\nv20.19.0\n\n**What browser are you using?**\n\nARC, but that doesn't matter here\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/D247HaVE3L\n\n**Describe your issue**\n\nAccording to documentation: https://tailwindcss.com/docs/hover-focus-and-other-states#aria-states, my code should working, but it's not. Inspecting bars with browser dev tools, we can see empty generated classes:\n\n![Image](https://github.com/user-attachments/assets/59277fc9-0367-4805-b686-fc1bf15dff18)\n\nAfter inspecting more, we see produced code, which not working:\n```css\n  .group-aria-expanded\\:-translate-y-1\\.5 {\n    &:is(:where(.group)[aria-expanded=\"true\"] *) {\n      --tw-translate-y: calc(var(--spacing) * -1.5);\n      translate: var(--tw-translate-x) var(--tw-translate-y);\n    }\n  }\n  .group-aria-expanded\\:translate-y-1\\.5 {\n    &:is(:where(.group)[aria-expanded=\"true\"] *) {\n      --tw-translate-y: calc(var(--spacing) * 1.5);\n      translate: var(--tw-translate-x) var(--tw-translate-y);\n    }\n  }\n  .group-aria-expanded\\:-rotate-45 {\n    &:is(:where(.group)[aria-expanded=\"true\"] *) {\n      rotate: calc(45deg * -1);\n    }\n  }\n  .group-aria-expanded\\:rotate-45 {\n    &:is(:where(.group)[aria-expanded=\"true\"] *) {\n      rotate: 45deg;\n    }\n  }\n  .group-aria-expanded\\:opacity-0 {\n    &:is(:where(.group)[aria-expanded=\"true\"] *) {\n      opacity: 0%;\n    }\n  }\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17713","RelatedDescription":"Closed issue \"Group not working with ARIA states\" (#17713)"},{"Id":"3002430825","IsPullRequest":false,"CreatedAt":"2025-04-18T09:03:29","Actor":"StephanBis","Number":"17710","RawContent":null,"Title":"New Angular installation fails to serve","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?** \n\nv4.1.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nAngular v18.2.1 (but same behaviour on v19.x)\n\n**What version of Node.js are you using?**\n\nv22.13.1 (same issue on v22.14.0)\n\n**What browser are you using?**\n\nChrome v135.x.x\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n[GitHub repo](https://github.com/StephanBis/tailwind-issue-repro). `npm install` won't work as you need to use `npm install tailwindcss @tailwindcss/postcss postcss --force` described in step 2 of the official guide.\n\n**Describe your issue**\n\nWhen exactly following the official guide ([https://tailwindcss.com/docs/installation/framework-guides/angular](https://tailwindcss.com/docs/installation/framework-guides/angular)) to install Tailwind with Angular, step 5 (`ng serve`) fails with the following error: \n```\nAn unhandled exception occurred: Unexpected token '﻿', \"﻿{\n  \"plu\"... is not valid JSON\nSee \"C:\\Users\\xxx\\AppData\\Local\\Temp\\ng-cnJxrA\\angular-errors.log\" for further details.\n```\n\nWe first tried it in an existing Angular project which is running v19.x but it gave the same error. Afterwards we tried it with a completely new project by following the official guide.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17710","RelatedDescription":"Closed issue \"New Angular installation fails to serve\" (#17710)"},{"Id":"3004451016","IsPullRequest":true,"CreatedAt":"2025-04-18T08:54:01","Actor":"RobinMalfait","Number":"17711","RawContent":null,"Title":"Ignore `.db` files by default","State":"open","Body":"This PR ignores `.db` files by default. We already ignored `.sqlite` and `.sqlite3` files but we didn't ignore `.db` files which is a common extension for database files as well.\r\n\r\nDue to the binary nature of `.db` files, scanning these could result in hard to debug errors such as:\r\n\r\n![image](https://github.com/user-attachments/assets/52f779ac-cd5f-4f37-9615-2163bf852999)\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17711","RelatedDescription":"Open PR \"Ignore `.db` files by default\" (#17711)"},{"Id":"2999764840","IsPullRequest":false,"CreatedAt":"2025-04-18T08:46:34","Actor":"emaia","Number":"17699","RawContent":null,"Title":"Vite is very slow if a large GeoJson file is in the backend folder","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.4 (the problem starts from 4.0.10)\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nLaravel 12, Vite ^6.2.4,  @tailwindcss/vite ^4.1.4\n\n**What version of Node.js are you using?**\n\nv20.9.0 | v22.14.0\n\n**What operating system are you using?**\n```\nSystem:\n    OS: Linux 5.15 Ubuntu 24.04.2 LTS 24.04.2 LTS (Noble Numbat)\n    CPU: (32) x64 AMD Ryzen 9 5950X 16-Core Processor\n    Memory: 6.89 GB / 14.63 GB\n    Container: Yes\n    Shell: 5.9 - /usr/bin/zsh\n  Binaries:\n    Node: 22.14.0 - ~/.nvm/versions/node/v22.14.0/bin/node\n    npm: 10.9.2 - ~/.nvm/versions/node/v22.14.0/bin/npm\n    bun: 1.2.9 - ~/.bun/bin/bun\n  npmPackages:\n    vite: ^6.2.4 => 6.2.6\n```\n\n**Reproduction URL**\n\nhttps://github.com/emaia/laravel/tree/vite-bug\n\n**Describe your issue**\n\nI'm working on a Laravel project that uses Vite. Everything was working great, but after adding a GeoJson file in a backend folder, Vite started running very slowly. Build runs changed from 400ms to 1m17s. Dev is also very slow.\n\nThis GeoJson file is unrelated to the frontend stuff and not referenced by any JS/CSS code.\n\nSteps to reproduce\n\n- Clone the repo https://github.com/emaia/laravel/tree/vite-bug\n(It's just a fork from laravel/laravel + 19mb geojson file)\n- npm install, npm run build (runs slow)\n- Delete the file database/seeders/payload/limites_munic_rj.geojson and rerun build. It runs fast.\n- If revert `@tailwindcss/vite to 4.0.9` or change css to `import 'tailwindcss' source(none);` it runs fast.\n- Starting from @tailwindcss/vite v4.0.10, something happens.\n\n_Originally posted by @emaia in [#16911](https://github.com/tailwindlabs/tailwindcss/issues/16911#issuecomment-2809550621)_","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17699","RelatedDescription":"Closed issue \"Vite is very slow if a large GeoJson file is in the backend folder\" (#17699)"},{"Id":"2999894881","IsPullRequest":true,"CreatedAt":"2025-04-18T08:46:33","Actor":"adamwathan","Number":"17700","RawContent":null,"Title":"Ignore .geojson files by default","State":"closed","Body":"Resolves https://github.com/tailwindlabs/tailwindcss/issues/17699\r\n\r\nGeoJSON files are giant JSON files for geographic data structures and will never contain Tailwind classes, but because they are often huge they will slow down the build a lot if scanned.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17700","RelatedDescription":"Closed or merged PR \"Ignore .geojson files by default\" (#17700)"},{"Id":"2999049530","IsPullRequest":false,"CreatedAt":"2025-04-17T09:57:27","Actor":"artaommahe","Number":"17697","RawContent":null,"Title":"[v4.1.4] Keyframes are not generated for the second config","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nFor example: v4.1.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.0.1\n\n**What version of Node.js are you using?**\n\nv20.18.1\n\n**What browser are you using?**\n\nlatest Chrome\n\n**What operating system are you using?**\n\nlatest macOS\n\n**Reproduction URL**\n\n- clone https://github.com/artaommahe/tailwind-v4-missed-keyframes\n- npm install\n- npm run dev\n- see that a block with red border doesn't wiggle despite having wiggle animation set\n- uncomment empty `@theme {}` declaration in `src/new-design/new-design.css`\n- see that block finally wiggles\n\n\n**Describe your issue**\n\nKeyframes are not generated for animations in 'secondary' config, the animation class itself is present.\n\nWe have a case when we're slowly migrating from one design system with old set of tokens to the new one and for this we have 2 tailwind configs where the second one is scoped under a class by `important: '.new-design',` config value.  \nDuring upgrade to tailwind v4 we've noticed that animation keyframes defined in the second config are not generated and don't work. For some reason there is a workaround with adding an empty `@theme {}` block to the corresponding css file.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17697","RelatedDescription":"Closed issue \"[v4.1.4] Keyframes are not generated for the second config\" (#17697)"},{"Id":"3000926717","IsPullRequest":false,"CreatedAt":"2025-04-17T09:48:02","Actor":"becandev","Number":"17703","RawContent":null,"Title":"aspect-[value] fails to render correctly inside flex containers with min-w-0 in Tailwind CSS v3.4+","State":"closed","Body":"name: Bug report\nabout: If you’ve already asked for help with a problem and confirmed something is broken with Tailwind CSS itself, create a bug report.\ntitle: aspect-[value] breaks layout when combined with min-w-0 inside flex containers\nlabels: bug\nassignees:\n\n⸻\n\nWhat version of Tailwind CSS are you using?\nv3.4.1\n\nWhat build tool (or framework if it abstracts the build tool) are you using?\nVite 5.1.0\n\nWhat version of Node.js are you using?\nv20.11.0\n\nWhat browser are you using?\nChrome 123\n\nWhat operating system are you using?\nmacOS Sonoma 14.3\n\nReproduction URL\nhttps://play.tailwindcss.com/Q3aAsYhxse\n\nDescribe your issue\nWhen using aspect-[16/9] or any arbitrary aspect ratio inside a flex container with min-w-0, the element fails to respect the aspect ratio and collapses to height 0 in Chrome. Removing min-w-0 or replacing aspect-[16/9] with a standard aspect-video fixes it, but that limits flexibility.\nThis bug causes layout breaks in responsive components where aspect ratios are needed dynamically.\n\nExpected behavior: The element should maintain its aspect ratio regardless of min-w-0 when aspect-[16/9] is applied.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17703","RelatedDescription":"Closed issue \"aspect-[value] fails to render correctly inside flex containers with min-w-0 in Tailwind CSS v3.4+\" (#17703)"},{"Id":"3001679139","IsPullRequest":false,"CreatedAt":"2025-04-17T07:28:20","Actor":"Nefcanto","Number":"17706","RawContent":null,"Title":"Circular dependency because of index.css","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.2.6\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nDebian GNU/Linux 12 (bookworm)\n\n**Reproduction URL**\n\nhttps://github.com/Nefcanto/TailwindCyclic\n\n**Describe your issue**\n\nWhen I save my `main.jsx` in my Vite + React + Tailwind project, I see this warning:\n\n> vite:hmr circular imports detected: /src/main.jsx -> /src/index.css -> /src/main.jsx\n\nThe `index.css` should not cause cyclic dependency.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17706","RelatedDescription":"Open issue \"Circular dependency because of index.css\" (#17706)"},{"Id":"3001334249","IsPullRequest":false,"CreatedAt":"2025-04-17T07:10:15","Actor":"AmelloAster","Number":"17704","RawContent":null,"Title":"[4.1.4]If I only use the text-xl in class name, seem the --tw-leading will be not defined","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\nv4.1.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nReactV18 webpackV5\n\n**What version of Node.js are you using?**\n\nv20.0.0\n\n**What browser are you using?**\n\nChrome, Safari\n\n**What operating system are you using?**\n\nmacOS\n\n\n**Describe your issue**\n\n![Image](https://github.com/user-attachments/assets/1c2be39f-0529-40d2-9307-6d33d321cb90)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17704","RelatedDescription":"Closed issue \"[4.1.4]If I only use the text-xl in class name, seem the --tw-leading will be not defined\" (#17704)"},{"Id":"2999107051","IsPullRequest":false,"CreatedAt":"2025-04-16T13:16:35","Actor":"AlexanderFarkas","Number":"17698","RawContent":null,"Title":"Website's strange behavior for `transition-discrete` demo","State":"closed","Body":"\n**What browser are you using?**\n\nFirefox 137.0.1 (aarch64)\n\n**What operating system are you using?**\n\nmacOS 15.0 (24A335)\n\n**Reproduction URL**\n\n[URL](https://tailwindcss.com/docs/transition-behavior#basic-example)\n\n**Describe your issue**\n\nThere is no difference in the behavior of these checkboxes:\n\nhttps://github.com/user-attachments/assets/ca237cdf-5286-41ed-8547-50e1c5d61af7","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17698","RelatedDescription":"Closed issue \"Website's strange behavior for `transition-discrete` demo\" (#17698)"},{"Id":"2997186394","IsPullRequest":false,"CreatedAt":"2025-04-16T09:13:38","Actor":"guidotripaldi","Number":"17691","RawContent":null,"Title":"tailwind-macos-x64 binary >=4.0 fails with \"Illegal instruction: 4\" on older Intel CPUs","State":"closed","Body":"### Description:\nWhen running the `tailwind-macos-x64` binary from Tailwind >=4.0 on an iMac equipped with the **3.4Ghz Intel Core i7 quad-core CPU**, the command returns an` Illegal instruction: 4` error. The same binary instead works fine on a MacBook Air equipped with the **2.2 Ghz Intel Core i7 dual-core CPU**. \nThe only significant hardware difference is that the Intel Core i7 Quad-Core CPU supports **three fewer CPU instructions** compared to the Intel Core i7 Dual-Core CPU.\nOlder Tailwind versions (<4.0) runs regularly on the older i7 CPU.\n\n### Steps to Reproduce:\n1. Download the tailwind-macos-x64 binary from the Tailwind 4.0.9 release (actually, any >=4.0).\n2. On a system with a processor lacking certain advanced instructions (e.g., an older iMac), run, for example, the following command:\n```bash\n$ ./tailwind-macos-x64 --help\n```\n3. The command returns:\n```yaml\nIllegal instruction: 4\n```\n\n### Expected Behavior:\nThe binary should execute normally without producing an illegal instruction error.\n\n### Observed Behavior:\nOn the affected iMac, the command fails with:\n```yaml\nIllegal instruction: 4\n```\n\nIn contrast, on a MacBook Air with a newer Intel Core i7 that supports the necessary instructions, the same binary executes as expected:\n\n``` bash\n$ tailwind-macos-x64 --help\n≈ tailwindcss v4.0.9\n\nUsage:\n  tailwindcss [--input input.css] [--output output.css] [--watch] [options…]\n\nOptions:\n  -i, --input ··········· Input file\n  -o, --output ·········· Output file [default: `-`]\n  -w, --watch ··········· Watch for changes and rebuild as needed\n  -m, --minify ·········· Optimize and minify the output\n      --optimize ········ Optimize the output without minifying\n      --cwd ············· The current working directory [default: `.`]\n  -h, --help ············ Display usage information\n```\n\n**Additional Context:**\n\nRunning `sysctl -a | grep machdep.cpu.features` on both machines shows that the iMac's CPU is missing three instruction sets that are present on the MacBook Air’s CPU.\n```bash\n# Intel Core i7 quad-core\n$ sysctl -a | grep machdep.cpu.features\nmachdep.cpu.features: FPU VME DE PSE TSC MSR PAE MCE CX8 APIC SEP MTRR PGE MCA CMOV PAT PSE36 CLFSH DS ACPI MMX FXSR SSE SSE2 SS HTT TM PBE SSE3 PCLMULQDQ DTES64 MON DSCPL VMX SMX EST TM2 SSSE3 CX16 TPR PDCM SSE4.1 SSE4.2 x2APIC POPCNT AES PCID XSAVE OSXSAVE TSCTMR AVX1.0 RDRAND F16C\n\n# Intel Core i7 dual-core\n$ sysctl -a | grep machdep.cpu.features\nmachdep.cpu.features: FPU VME DE PSE TSC MSR PAE MCE CX8 APIC SEP MTRR PGE MCA CMOV PAT PSE36 CLFSH DS ACPI MMX FXSR SSE SSE2 SS HTT TM PBE SSE3 PCLMULQDQ DTES64 MON DSCPL VMX SMX EST TM2 SSSE3 FMA CX16 TPR PDCM SSE4.1 SSE4.2 x2APIC MOVBE POPCNT AES PCID XSAVE OSXSAVE SEGLIM64 TSCTMR AVX1.0 RDRAND F16C\n\n# Differences:  FMA, MOVBE, SEGLIM64\n\n```\n\nThe issue does not occur with Tailwind 3.0, indicating that version 4.0 may have been compiled with optimizations that require advanced CPU instructions not available on the older processor.\n\n### Potential Solutions:\n\nProvide a variant of the binary compiled with optimizations compatible with older processors or with fallback options for unsupported CPU instructions.\nOffer a configuration option during the build process to target a wider range of CPU instruction sets.\n\nI appreciate your attention to this issue and look forward to any guidance or solutions you can provide.\n\nThank you!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17691","RelatedDescription":"Closed issue \"tailwind-macos-x64 binary >=4.0 fails with \"Illegal instruction: 4\" on older Intel CPUs\" (#17691)"},{"Id":"2998274322","IsPullRequest":false,"CreatedAt":"2025-04-16T03:59:37","Actor":"kocv59","Number":"17695","RawContent":null,"Title":"space-x- and space-y- breaking change","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nwebpack 5.98.0\npostcss 8.5.3\npostcss-loader 8.1.1\n\n**What version of Node.js are you using?**\n\nv20.19.0\n\n**What browser are you using?**\n\nChrome\n\n**Describe your issue**\n\nspace-x- and space-y- don't work with all the values in https://developer.mozilla.org/en-US/docs/Web/CSS/margin-block-start like inherit, initial and revert (space-x-[revert]). It worked in tailwind 3 but it's a breaking change. It's trying to use those words with calc which isn't possible.\n\n```\n\t\n& > :not(:last-child) {\n  --tw-space-x-reverse: 0;\n  margin-inline-start: calc(<value> * var(--tw-space-x-reverse));\n  margin-inline-end: calc(<value> * calc(1 - var(--tw-space-x-reverse)));\n};\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17695","RelatedDescription":"Open issue \"space-x- and space-y- breaking change\" (#17695)"},{"Id":"2997542842","IsPullRequest":false,"CreatedAt":"2025-04-15T20:31:20","Actor":"bigboggy","Number":"17693","RawContent":null,"Title":"@reference causing re-renders in non related component with HMR","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nv4.1.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.2.5\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nUbuntu\n\n**Reproduction URL**\n\nThere is none because it's related to the npm run dev process. But attached is a screenshot where I change only something in ProgressSection.vue, the style is scoped and it re-builds basically all components\n\n![Image](https://github.com/user-attachments/assets/d4dfa0fa-8d53-463b-9f68-3a698f3bafa5)\n\n**Describe your issue**\n\nWhen running `npm run dev`, and making a change to one component, instead of the HMR triggering change only for this component, it triggers changes to ALL components that have @reference '@/style.css';\n\nWe need the @reference, because we want to use @apply instead of writing the styles inline. Falling back to inline is not an option for us, because the project then will not be maintainable and the code not readable.\n\nIn tailwindcss 3, the apply did not create such issues, because we didn't have to use @reference to use it.\n\nNow it takes around 5-10 seconds to show a letter change from a vue component over vite, it's like going back to webpack 😆 \n\nYes, I have read the documentation that we could use var(--bg-blue-500) or something, but then we can't use spacings, breakspoints etc, all the benefits of tailwind.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17693","RelatedDescription":"Open issue \"@reference causing re-renders in non related component with HMR\" (#17693)"},{"Id":"2997271661","IsPullRequest":false,"CreatedAt":"2025-04-15T18:34:40","Actor":"FLCN-16","Number":"17692","RawContent":null,"Title":"[4.1.4] Getting parser error : Cannot convert undefined or null to object","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.1.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.2.6\n\n**What version of Node.js are you using?**\n\nv22.14.1\n\n**What browser are you using?**\n\nChrome, Safari\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nNot Deployed\n\n**Describe your issue**\n\nGetting below issue when running the application\n\n@phoenix/panel:dev:   Plugin: @tailwindcss/vite:generate:serve\n@phoenix/panel:dev:   File: /Users/flcn-16/something/apps/panel/src/index.css\n@phoenix/panel:dev:       at M.generate (file:///Users/flcn-16/something/node_modules/.pnpm/@tailwindcss+vite@4.0.6_vite@6.2.6_@types+node@22.14.1_jiti@2.4.2_lightningcss@1.29.3_s_1ee1951df1de3fb2e272ed9875e003cd/node_modules/@tailwindcss/vite/dist/index.mjs:336:24)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17692","RelatedDescription":"Open issue \"[4.1.4] Getting parser error : Cannot convert undefined or null to object\" (#17692)"},{"Id":"2996362848","IsPullRequest":false,"CreatedAt":"2025-04-15T13:21:13","Actor":"nenene3","Number":"17690","RawContent":null,"Title":"@apply doesn't detect theme tokens from parent file, but var() works fine","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\nv4.1.3\nFor example: v4.0.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\nvite 6.2.0,react 19.0.0 ,\n\n\n**What version of Node.js are you using?**\nv22.14.0\n\n\n**What browser are you using?**\nChrome\n\n\n**What operating system are you using?**\nlinux\n\n\n@apply doesn't detect theme tokens from another file, but var() works fine\n\nfor example \n\n\n\n//index.css  (for react main.jsx vite)\n```css\n@import \"tailwindcss\";\n\n@theme {\n    --color-gray2: #9DA9A0;\n  }\n\n```\n\nhere in the another file (inside the main component)\n// btn.css\n```css\n@import \"tailwindcss\";\n\n@layer components {\n    .actionBtn{\n        /* will work */\n        /* background-color:var(--color-gray2)  */ \n        \n        /* will not work */\n        @apply text-6xl bg-gray2;\n    }\n}\n```\n\nDescribe the problem you're seeing, any important steps to reproduce and what behavior you expect instead.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17690","RelatedDescription":"Closed issue \"@apply doesn't detect theme tokens from parent file, but var() works fine\" (#17690)"},{"Id":"2994683036","IsPullRequest":true,"CreatedAt":"2025-04-15T10:03:19","Actor":"depfu[bot]","Number":"17678","RawContent":null,"Title":"Update turbo 2.4.4 → 2.5.0 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ turbo (2.4.4 → 2.5.0) · [Repo](https://github.com/turborepo/turbo)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17678","RelatedDescription":"Closed or merged PR \"Update turbo 2.4.4 → 2.5.0 (minor)\" (#17678)"},{"Id":"2995873726","IsPullRequest":false,"CreatedAt":"2025-04-15T10:02:11","Actor":"Hacedor2003","Number":"17687","RawContent":null,"Title":"Standole Windows dont use tailwind.config.js","State":"closed","Body":"\n\n**What version of Tailwind CSS are you using?**\n\n v4.1.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nstandole \n\n**What operating system are you using?**\n\nWindows\n\n**Describe your issue**\n\n//Test proyect\n tailwindcss -i ./app/globals.css -o ./main.css                \nError: Cannot apply unknown utility class: bg-black\n//My real project\n tailwindcss -i ./Styles/tailwind.css -o ./wwwroot/css/main.css\n≈ tailwindcss v4.1.4\n\nDone in 71ms\n\n//tailwind.config.js\nexport default {\n\tcontent: [\n\t\t\"./pages/**/*.{js,ts,jsx,tsx,mdx}\",\n\t\t\"./components/**/*.{js,ts,jsx,tsx,mdx}\",\n\t\t\"./app/**/*.{js,ts,jsx,tsx,mdx}\",\n\t],\n\ttheme: {\n\t\textend: {\n\t\t\tcolors: {\n\t\t\t\tprincipal: \"#D9D9D9\",\n\t\t\t\tsecundario: \"#69b9f9\",\n\t\t\t\tnegro: \"#000000c2\",\n\t\t\t\tazul: \"#07858a\",\n\t\t\t\tactive: \"#00d26a\"\n\t\t\t},\n\t\t\tfontFamily: {\n\t\t\t\t\"ProstoOne-Regular\": [\"ProstoOne-Regular\"],\n\t\t\t\tsans: [\"Inter\", \"ui-sans-serif\", \"system-ui\", \"sans-serif\", \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"],\n\t\t\t},\n\t\t},\n\t},\n\tplugins: [],\n};\n\n\n// *********\n\nOn my real project dont read some clases for example the bg\n\n//main.css\n/*! tailwindcss v4.1.4 | MIT License | https://tailwindcss.com */\n@layer properties;\n.static {\n  position: static;\n}\n.container {\n  width: 100%;\n}\n.mx-auto {\n  margin-inline: auto;\n}\n.contents {\n  display: contents;\n}\n.flex {\n  display: flex;\n}\n.hidden {\n  display: none;\n}\n.h-screen {\n  height: 100vh;\n}\n.w-1\\/4 {\n  width: calc(1/4 * 100%);\n}\n.min-w-full {\n  min-width: 100%;\n}\n.flex-1 {\n  flex: 1;\n}\n.cursor-pointer {\n  cursor: pointer;\n}\n.list-inside {\n  list-style-position: inside;\n}\n.list-disc {\n  list-style-type: disc;\n}\n.flex-col {\n  flex-direction: column;\n}\n.items-center {\n  align-items: center;\n}\n.justify-between {\n  justify-content: space-between;\n}\n.justify-center {\n  justify-content: center;\n}\n.overflow-x-auto {\n  overflow-x: auto;\n}\n.border {\n  border-style: var(--tw-border-style);\n  border-width: 1px;\n}\n.border-b {\n  border-bottom-style: var(--tw-border-style);\n  border-bottom-width: 1px;\n}\n.transition {\n  transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter;\n  transition-timing-function: var(--tw-ease, ease);\n  transition-duration: var(--tw-duration, 0s);\n}\n.duration-200 {\n  --tw-duration: 200ms;\n  transition-duration: 200ms;\n}\n.hover\\:underline {\n  &:hover {\n    @media (hover: hover) {\n      text-decoration-line: underline;\n    }\n  }\n}\n@property --tw-border-style {\n  syntax: \"*\";\n  inherits: false;\n  initial-value: solid;\n}\n@property --tw-duration {\n  syntax: \"*\";\n  inherits: false;\n}\n@layer properties {\n  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {\n    *, ::before, ::after, ::backdrop {\n      --tw-border-style: solid;\n      --tw-duration: initial;\n    }\n  }\n}\n\n<div class=\"flex flex-col items-center bg-blue-100 p-10 rounded-lg shadow-lg\">\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17687","RelatedDescription":"Closed issue \"Standole Windows dont use tailwind.config.js\" (#17687)"},{"Id":"2995711154","IsPullRequest":false,"CreatedAt":"2025-04-15T09:39:27","Actor":"noook","Number":"17684","RawContent":null,"Title":"Font-family variable not detected after reaching specific (valid) line","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.1.0\n\n**What version of Node.js are you using?**\n\nv22.0.0\n\n**What browser are you using?**\n\nFirefox\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/YoWr0vrT1B?file=css\n\n**Describe your issue**\n\nThe `--font-inter` (and other font-family utilities) utility class does not appear if it is inserted after a very specific line, I can't tell why.\n\n```css\n@theme {\n  --color-mdm-grey-0: #ffffff;\n  --color-mdm-grey-1: #f5f5f8;\n  --color-mdm-grey-2: #e6e6ee;\n  --color-mdm-grey-3: #cdcedd;\n  --color-mdm-grey-4: #acaec5;\n  --color-mdm-grey-5: #878ba5;\n  --color-mdm-grey-6: #626880;\n  --color-mdm-grey-7: #3f4556;\n  --color-mdm-grey-8: #20252d;\n  --color-mdm-grey-9: #07080A;\n\n  /* ....... */\n  \n  --font-telegraf: 'PPTelegraf';\n\n  /* // Will work *\n  // --font-inter: 'Inter';\n  */\n  --color-alpha-black-0: --alpha(var(--color-mdm-grey-9) / 0%);\n  --color-alpha-black-10: --alpha(var(--color-mdm-grey-9) / 10%);\n  --color-alpha-black-20: --alpha(var(--color-mdm-grey-9) / 20%);\n  --color-alpha-black-30: --alpha(var(--color-mdm-grey-9) / 30%);\n  --color-alpha-black-40: --alpha(var(--color-mdm-grey-9) / 40%);\n  --color-alpha-black-50: --alpha(var(--color-mdm-grey-9) / 50%);\n  --color-alpha-black-60: --alpha(var(--color-mdm-grey-9) / 60%);\n  --color-alpha-black-70: --alpha(var(--color-mdm-grey-9) / 70%);\n  --color-alpha-black-80: --alpha(var(--color-mdm-grey-9) / 80%);\n  --color-alpha-black-90: --alpha(var(--color-mdm-grey-9) / 90%);\n  --color-alpha-black-100: --alpha(var(--color-mdm-grey-9) / 100%);\n  \n  --color-alpha-white-0: --alpha(var(--color-mdm-grey-0) / 0%);\n  --color-alpha-white-10: --alpha(var(--color-mdm-grey-0) / 10%);\n  --color-alpha-white-20: --alpha(var(--color-mdm-grey-0) / 20%);\n  --color-alpha-white-30: --alpha(var(--color-mdm-grey-0) / 30%);\n  --color-alpha-white-40: --alpha(var(--color-mdm-grey-0) / 40%);\n  /* // Will work *\n  // --font-inter: 'Inter';\n  */\n  --color-alpha-white-50: --alpha(var(--color-mdm-grey-0) / 50%);\n  /* Doesn't work from this line */\n  --font-inter: 'Inter';\n  --color-alpha-white-60: --alpha(var(--color-mdm-grey-0) / 60%);\n  --color-alpha-white-70: --alpha(var(--color-mdm-grey-0) / 70%);\n  /* // Will not work *\n  // --font-inter: 'Inter';\n  */\n  --color-alpha-white-80: --alpha(var(--color-mdm-grey-0) / 80%);\n  --color-alpha-white-90: --alpha(var(--color-mdm-grey-0) / 90%);\n  --color-alpha-white-100: --alpha(var(--color-mdm-grey-0) / 100%);\n\n  /* ....... */\n\n}\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17684","RelatedDescription":"Closed issue \"Font-family variable not detected after reaching specific (valid) line\" (#17684)"},{"Id":"2994557024","IsPullRequest":false,"CreatedAt":"2025-04-15T09:23:31","Actor":"adrianlb","Number":"17676","RawContent":null,"Title":"shadow opacity classes not being generated","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.4 in one project and  v3.4.17 in another - both have the same result\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nfor v4 - vite.config.ts\n\nfor v3 - \"postcss\": \"^8.5.3\",\n\n**What version of Node.js are you using?**\n\nv20.11.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://codesandbox.io/p/sandbox/vite-tailwind-forked-zd74gh\n\n**Describe your issue**\n\nDescribe the problem you're seeing, any important steps to reproduce and what behavior you expect instead.\n\nThe expected tailwind css class is not being generated for any of the shadow classes with opacity parameter, eg shadow-lg/50\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17676","RelatedDescription":"Closed issue \"shadow opacity classes not being generated\" (#17676)"},{"Id":"2994922329","IsPullRequest":false,"CreatedAt":"2025-04-15T08:52:18","Actor":"AmelloAster","Number":"17680","RawContent":null,"Title":"[4.1.4] tailwindcss v4 in storybook not work","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.1.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n@storybook/builder-webpack5\n\n**What version of Node.js are you using?**\n v20.0.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\n macOS\n\n**Describe your issue**\nMy project is monorepo\n```\nproject/\n│\n│──.storybook/\n│   │   │── preview.ts\n│   │   │── tailwind.css\n│   │   │── main.ts\n│── packages/\n│   │   │── core\n│   │   │── components\n│   │   │── othres\n│──tailwind.config.cjs\n│──postcss.config.cjs\n```\n\n```\n// tailwind.css\n@import \"tailwindcss/utilities\";\n@import \"tailwindcss/theme\";\n\n@config \"../tailwind.config.cjs\";\n```\n```\n//  preview.ts\n\nimport './tailwind.css'\n\nconst preview: Preview = {...}\n```\n\n```\n// postcss.config.cjs\nmodule.exports = {\n  plugins: {\n    '@tailwindcss/postcss': {},\n  },\n};\n```\n\n```\n// main.ts\n{\n            loader: 'postcss-loader',\n            options: {\n              postcssOptions: {\n                config: path.resolve(__dirname, '../postcss.config.cjs'),\n              },\n            },\n          },\n```\n\n```\n// project/packages/components/Component/__stories/Component.story.tsx\n\nconst meta = {...}\nexport default meta;\n\nexport const Default = () => {\n// not working\nreturn <div className=\"w-full\">...</div>\n}\n\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17680","RelatedDescription":"Closed issue \"[4.1.4] tailwindcss v4 in storybook not work\" (#17680)"},{"Id":"2994923036","IsPullRequest":false,"CreatedAt":"2025-04-15T08:45:31","Actor":"ritiksharmarj","Number":"17681","RawContent":null,"Title":"double underscore (__) in class names is causing the problem","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.17\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 15.1.7\n\n**What version of Node.js are you using?**\n\nFor example: v22.13.10\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nTailwind Play link https://play.tailwindcss.com/jKLBthDq3z\n\n**Describe your issue**\n\nI want to target class `sh__line` inside the `pre` tag so that I am using `[&_.sh__line]:px-4` or `[&:where(.sh__line)]:px-4`, but it doesn't work because somehow the CSS output treats `sh__line` as `sh` and `line` instead of a single class name.\n\nBut it works when I do this: `[&_.sh\\_\\_line]:px-4`.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17681","RelatedDescription":"Closed issue \"double underscore (__) in class names is causing the problem\" (#17681)"},{"Id":"2994573508","IsPullRequest":false,"CreatedAt":"2025-04-15T00:00:22","Actor":"dmitrc","Number":"17677","RawContent":null,"Title":"[4.1.4] Multiple drop-shadows are still broken","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js v15.3.0\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What browser are you using?**\n\nEdge\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/CgUI30hrFk?file=css\n\n**Describe your issue**\n\nSeems like the multiple drop-shadow are still not working after the fix from #17515 (tagging @thecrypticace for awareness).\n\nGiven this theme token:\n```\n--drop-shadow-multi: 0 0 20px rgb(0 0 0 / 0.2), 0 1px 2px rgb(0 0 0 / 0.25);\n```\n\nYou get the following CSS output:\n```\n.drop-shadow-multi {\n    --tw-drop-shadow-size: drop-shadow(0 0 20px var(--tw-drop-shadow-color, rgb(0 0 0 / 0.2))) drop-shadow(0 1px 2px var(--tw-drop-shadow-color, rgb(0 0 0 / 0.25)));\n    --tw-drop-shadow: drop-shadow(var(--drop-shadow-multi));\n    filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow);\n}\n```\n\nNote how `--tw-drop-shadow-size` contains the properly expanded shadows (where each segment is wrapped in `drop-shadow(...)`), while the resulting `--tw-drop-shadow` ignores that prior declaration and simply refers to the underlying theme variable (which is comma-separated and does not work).","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17677","RelatedDescription":"Open issue \"[4.1.4] Multiple drop-shadows are still broken\" (#17677)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-04-22T03:30:22.9144776Z","RunDurationInMilliseconds":510}