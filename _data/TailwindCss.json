{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"3257428893","IsPullRequest":true,"CreatedAt":"2025-07-24T00:22:42","Actor":"depfu[bot]","Number":"18595","RawContent":null,"Title":"Update turbo 2.5.4 → 2.5.5 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ turbo (2.5.4 → 2.5.5) · [Repo](https://github.com/turborepo/turbo)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18595","RelatedDescription":"Closed or merged PR \"Update turbo 2.5.4 → 2.5.5 (patch)\" (#18595)"},{"Id":"3255377445","IsPullRequest":false,"CreatedAt":"2025-07-23T08:12:32","Actor":"mamiu","Number":"18591","RawContent":null,"Title":"Vite plugin converts HSL and RGB colors to HEX during build","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.1.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: SevlteKit 2.21.1, Vite 6.3.5, @sveltejs/vite-plugin-svelte 5.0.3\n\n**What version of Node.js are you using?**\n\nNot relevant\n\n**What browser are you using?**\n\nFor example: Chrome, Arc, Brave\n\n**What operating system are you using?**\n\nFor example: macOS\n\n**Reproduction URL**\n\nNot happening in Tailwind Play, only with Vite plugin.\n\nHere's a link to Tailwind Play where it works correctly (I guess Tailwind Play doesn't use the Vite plugin): https://play.tailwindcss.com/wd6xBLjL8R\n\n**Describe your issue**\n\nThe Vite plugin converts HSL and RGB colors to HEX during build. This can cause problems, as you can see in the example below:\n\nWe have a SvelteKit app.\n\nThis is the `vite.config.ts`:\n\n```ts\nimport { sveltekit } from '@sveltejs/kit/vite';\nimport { defineConfig } from 'vite';\nimport tailwindcss from '@tailwindcss/vite';\n\nexport default defineConfig({\n  plugins: [tailwindcss(), sveltekit()]\n});\n```\n\nIn our `app.css` we have some gradient stops for the primary color.\n\n```css\n@theme inline {\n  /* Common Tailwind gradient stops for primary color */\n  --color-primary-50: color-mix(in hsl, var(--primary) 7%, hsl(193deg 100% 100%) 93%);\n  --color-primary-100: color-mix(in hsl, var(--primary) 20%, hsl(193deg 100% 100%) 80%);\n  --color-primary-200: color-mix(in hsl, var(--primary) 40%, hsl(193deg 100% 100%) 60%);\n  --color-primary-300: color-mix(in hsl, var(--primary) 60%, hsl(193deg 100% 100%) 40%);\n  --color-primary-400: color-mix(in hsl, var(--primary) 80%, hsl(193deg 100% 100%) 20%);\n  --color-primary-500: var(--primary);\n  --color-primary-600: color-mix(in hsl, var(--primary) 90%, hsl(193deg 0% 0%) 10%);\n  --color-primary-700: color-mix(in hsl, var(--primary) 78%, hsl(193deg 0% 0%) 22%);\n  --color-primary-800: color-mix(in hsl, var(--primary) 65%, hsl(193deg 0% 0%) 35%);\n  --color-primary-900: color-mix(in hsl, var(--primary) 50%, hsl(193deg 0% 0%) 50%);\n  --color-primary-950: color-mix(in hsl, var(--primary) 35%, hsl(193deg 0% 0%) 65%);\n}\n```\n\nWith this we can use gradient stops for the primary color the same way as with the default Tailwind colors.\n\nWhen I use the class `border-primary-200`, I get this code in my dev environment:\n\n```css\n.border-primary-200 {\n    @supports (color: color-mix(in lab, red, red)) {\n        border-color: color-mix(in hsl, var(--primary) 40%, hsl(193deg 100% 100%) 60%);\n    }\n}\n```\n\nWhich looks as expected:\n\n![image](https://github.com/user-attachments/assets/1bae57fd-066e-4439-b1c2-8374879b4563)\n\nBut in the prod environment the `color-mix` doesn't work correctly anymore:\n\n```css\n@supports (color:color-mix(in lab,red,red)) {\n    .border-primary-200 {\n        border-color: color-mix(in hsl, var(--primary) 40%, #fff 60%);\n    }\n}\n```\n\nAs you can see the border color for the box in the center looks different:\n\n![image](https://github.com/user-attachments/assets/fd60d073-c92c-47cc-af42-26f3a9840a4f)\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18591","RelatedDescription":"Open issue \"Vite plugin converts HSL and RGB colors to HEX during build\" (#18591)"},{"Id":"3244021302","IsPullRequest":true,"CreatedAt":"2025-07-21T19:39:35","Actor":"thecrypticace","Number":"18571","RawContent":null,"Title":"Don’t output CSS objects with `false` or `undefined` in the AST","State":"closed","Body":"Fixes https://github.com/tailwindlabs/tailwindcss-typography/issues/384\r\n\r\nBasically when addUtilities/addComponents/matchUtilities/matchComponents saw a value of `false` it was being output instead of being discarded like it was in v3.\r\n\r\nThe types really require these to be strings but for things like the typography plugin this isn't really carried through from its theme config so it was easy to put anything in there and not realize it doesn't match the expected types.\r\n\r\nBasically this:\r\n```js\r\naddUtilities({\r\n  '.foo': {\r\n    a: 'red',\r\n    'z-index': 0,\r\n    '.bar': false,\r\n    '.baz': null, // this one already worked\r\n    '.qux': undefined,\r\n  },\r\n})\r\n```\r\n\r\nNow works like it did in v3 and omits `.bar`, `.baz`, and `.qux`","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18571","RelatedDescription":"Closed or merged PR \"Don’t output CSS objects with `false` or `undefined` in the AST\" (#18571)"},{"Id":"3249055706","IsPullRequest":false,"CreatedAt":"2025-07-21T16:54:52","Actor":"jacobfriedman","Number":"18582","RawContent":null,"Title":"Z-index is inaccurate","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n 3.4.1\n\n\n\nWhy in the name of Odin would a z-1 and z-2 index be incompatible, using z-10 and z-20?\n\nThe more I use this library the more I don't get — even the gotchas.\n\n\n\n\n\n\n\n\n\n\nFor example: v4.0.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNode\n\nFor example: postcss-cli 11.0.0, Next.js 15.1.7, Vite 6.1.0\n\n**What version of Node.js are you using?**\n\n20\n\nFor example: v20.0.0\n\n**What browser are you using?**\n\nChrome\n\nFor example: Chrome, Safari, or N/A\n\n**What operating system are you using?**\n\nFor example: macOS, Windows\n\n**Reproduction URL**\n\nA Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\n\nA reproduction is **required** when filing an issue — any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.\n\n**Describe your issue**\n\nDescribe the problem you're seeing, any important steps to reproduce and what behavior you expect instead.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18582","RelatedDescription":"Closed issue \"Z-index is inaccurate\" (#18582)"},{"Id":"3245137944","IsPullRequest":true,"CreatedAt":"2025-07-21T14:20:28","Actor":"depfu[bot]","Number":"18575","RawContent":null,"Title":"Update @types/bun 1.2.17 → 1.2.18 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​types/bun (1.2.17 → 1.2.18) · [Repo](https://github.com/DefinitelyTyped/DefinitelyTyped)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18575","RelatedDescription":"Closed or merged PR \"Update @types/bun 1.2.17 → 1.2.18 (patch)\" (#18575)"},{"Id":"3245108691","IsPullRequest":true,"CreatedAt":"2025-07-21T14:14:44","Actor":"depfu[bot]","Number":"18574","RawContent":null,"Title":"Update bun 1.2.17 → 1.2.18 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ bun (1.2.17 → 1.2.18) · [Repo](https://github.com/oven-sh/bun)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18574","RelatedDescription":"Closed or merged PR \"Update bun 1.2.17 → 1.2.18 (patch)\" (#18574)"},{"Id":"3241049830","IsPullRequest":false,"CreatedAt":"2025-07-18T16:31:20","Actor":"sntran","Number":"18566","RawContent":null,"Title":"Functional utility does not support wildcard without hyphen prefix","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.11\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/dVTUCMxH7i\n\n**Describe your issue**\n\nError on the `col-start-c*` functional utility with the following message: \n\n> `@utility col-start-c*` defines an invalid utility name. Utilities should be alphanumeric and start with a lowercase letter.\n\nFirst, the error message is not right, since the utility name both is alphanumeric and starts with a lowercase letter.\n\nSecondly, I would expect it to be valid.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18566","RelatedDescription":"Closed issue \"Functional utility does not support wildcard without hyphen prefix\" (#18566)"},{"Id":"3241106773","IsPullRequest":true,"CreatedAt":"2025-07-18T16:31:19","Actor":"thecrypticace","Number":"18568","RawContent":null,"Title":"Show more specific error for functional-like but invalid utility names","State":"closed","Body":"Fixes #18566\r\n\r\nThe behavior is by design but the error message could definitely be improved.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18568","RelatedDescription":"Closed or merged PR \"Show more specific error for functional-like but invalid utility names\" (#18568)"},{"Id":"3243252061","IsPullRequest":false,"CreatedAt":"2025-07-18T13:54:09","Actor":"LZL0","Number":"18570","RawContent":null,"Title":"PostCSS + TailwindCSS 4 throws error on important! and ! modifiers","State":"closed","Body":"**What version of Tailwind CSS are you using?**\nTailwind: 4.1.11\nPostCSS: 8.5.6\nNextJS: 15.4.1\nNode: 22.x\n\n**Describe your issue**\n```\n./apps/next/src/styles/tailwind.scss\n\nError evaluating Node.js code\nError: expected \";\".\n    ╷\n111 │   @apply text-black dark:text-white !important;\n```\n```\n./apps/next/src/styles/tailwind.scss\n\nError evaluating Node.js code\nError: expected \";\".\n    ╷\n111 │   @apply text-black! dark:text-white!;\n```\n```\nmodule.exports = {\n  plugins: {\n    \"@tailwindcss/postcss\": {},\n  },\n};\n\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18570","RelatedDescription":"Closed issue \"PostCSS + TailwindCSS 4 throws error on important! and ! modifiers\" (#18570)"},{"Id":"3240344670","IsPullRequest":true,"CreatedAt":"2025-07-17T18:10:19","Actor":"hugopl","Number":"18565","RawContent":null,"Title":"Add support for Slang template","State":"closed","Body":"## Summary\r\n\r\nSlang is basically a Slim template language for Crystal language, so the very same Slim parser works fine.\r\n\r\nSlim template: https://github.com/slim-template/slim\r\nSlang template: https://github.com/jeromegn/slang\r\n\r\n## Test plan\r\n\r\nCreate a simple slang file with some tailwind-css and check if the CSS is being extracted:\r\n```slim\r\ndoctype html\r\nhtml\r\n  head\r\n    title This is a title\r\n  body.min-h-screen\r\n    header.stick.top-0.z-10\r\n      section.max-w-4xl.mx-auto.p-4.flex.items-center.justify-between\r\n        h1.text-3xl.font-medium This is a slang file\r\n``` \r\nTo test it, get any slim template, rename the extension to .slang \r\n\r\nFixes #17851","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18565","RelatedDescription":"Closed or merged PR \"Add support for Slang template\" (#18565)"},{"Id":"3239801967","IsPullRequest":true,"CreatedAt":"2025-07-17T15:00:59","Actor":"depfu[bot]","Number":"18562","RawContent":null,"Title":"Update @napi-rs/wasm-runtime 0.2.11 → 0.2.12 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​napi-rs/wasm-runtime (0.2.11 → 0.2.12) · [Repo](https://github.com/napi-rs/napi-rs)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18562","RelatedDescription":"Closed or merged PR \"Update @napi-rs/wasm-runtime 0.2.11 → 0.2.12 (minor)\" (#18562)"},{"Id":"3239080252","IsPullRequest":true,"CreatedAt":"2025-07-17T10:43:24","Actor":"Gazler","Number":"18559","RawContent":null,"Title":"fix watchers never being cleaned up","State":"open","Body":"Previously, there was an issue, where a slow compilation could cause the watchers to build up and never be cleaned. This would result in both excessive logging and the compilation time increasing exponentially.\r\n\r\nThis fix is a naive patch, simply locking if there is a build in progress, and unlocking when it completes. **I'm marking it as a draft because I believe this lock can get stuck in a locked state resulting in the project never rebuilding.**\r\n\r\nThe setup for this is a little involved, as it requires slowing down tailwind compilation enough so that the callback is triggered multiple times concurrently, but using the script below I was able to reproduce it fairly reliably:\r\n\r\n---\r\n\r\n# Requirements\r\n\r\nWe need a way to stress the CPU to slow down tailwind compilation, for example stress-ng.\r\n\r\n```\r\nstress-ng --cpu 16 --timeout 10\r\n```\r\n\r\nIt can be install with apt, homebrew or similar.\r\n\r\n# Installation\r\n\r\nThere is a one-liner at the bottom to perform the required setup and run the tailwindcli.\r\n\r\nCreate a new directory:\r\n\r\n```shell\r\nmkdir twtest && cd twtest\r\n```\r\n\r\nCreate a package.json with the correct deps.\r\n\r\n```shell\r\ncat << 'EOF' > package.json\r\n{\r\n  \"dependencies\": {\r\n    \"@tailwindcss/cli\": \"^4.1.11\",\r\n    \"daisyui\": \"^5.0.46\",\r\n    \"tailwindcss\": \"^4.1.11\"\r\n  }\r\n}\r\nEOF\r\n```\r\n\r\nCreate the input css:\r\n\r\n```shell\r\nmkdir src\r\ncat << 'EOF' > src/.input.css\r\n@import \"tailwindcss\" source(none);\r\n@plugin \"daisyui\";\r\n@source \"../core_components.ex\";\r\n@source \"../home.html.heex\";\r\n@source \"./input.css\";\r\n\r\nEOF\r\n```\r\n\r\nInstall tailwind, daisyui, and some HTML to make tailwind do some work:\r\n\r\n```\r\nnpm install\r\nwget https://raw.githubusercontent.com/phoenixframework/phoenix/refs/heads/main/installer/templates/phx_web/components/core_components.ex\r\nwget https://github.com/phoenixframework/phoenix/blob/main/installer/templates/phx_web/controllers/page_html/home.html.heex\r\n```\r\n\r\n# Usage\r\n\r\nThis is easiest with 3 terminal windows:\r\n\r\nStart a tailwindcli watcher in one terminal:\r\n\r\n```shell\r\nnpx @tailwindcss/cli -i src/input.css -o src/output.css --watch\r\n```\r\n\r\nStart a stress test in another:\r\n\r\n```shell\r\nstress-ng --cpu 16 --timeout 30\r\n```\r\n\r\nForce repeated compilation in another:\r\n\r\n```shell\r\nfor i in $(seq 1 50); do touch src/input.css; sleep 0.1; done\r\n```\r\n\r\n# Result\r\n\r\nOnce the stress test has completed, you can run:\r\n\r\n```shell\r\ntouch src/input.css\r\n```\r\n\r\nYou should see that there is repeated output, and the duration is in the multiple seconds.\r\n\r\nIf this setup doesn't cause the issue, you can also add the `-p` flag which causes the\r\nCSS to be printed, slowing things down further:\r\n\r\n```shell\r\nnpx @tailwindcss/cli -i src/input.css -p --watch\r\n```\r\n\r\n## One-liner\r\n\r\n```shell\r\nmkdir twtest && cd twtest\r\ncat << 'EOF' > package.json\r\n{\r\n  \"dependencies\": {\r\n    \"@tailwindcss/cli\": \"^4.1.11\",\r\n    \"daisyui\": \"^5.0.46\",\r\n    \"tailwindcss\": \"^4.1.11\"\r\n  }\r\n}\r\nEOF\r\n\r\nmkdir src\r\ncat << 'EOF' > src/input.css\r\n@import \"tailwindcss\" source(none);\r\n@plugin \"daisyui\";\r\n@source \"../core_components.ex\";\r\n@source \"../home.html.heex\";\r\n@source \"./input.css\";\r\n\r\nEOF\r\n\r\nnpm install\r\nwget https://raw.githubusercontent.com/phoenixframework/phoenix/refs/heads/main/installer/templates/phx_web/components/core_components.ex\r\nwget https://github.com/phoenixframework/phoenix/blob/main/installer/templates/phx_web/controllers/page_html/home.html.heex\r\nnpx @tailwindcss/cli -i src/input.css -o src/output.css --watch\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18559","RelatedDescription":"Open PR \"fix watchers never being cleaned up\" (#18559)"},{"Id":"3238937164","IsPullRequest":false,"CreatedAt":"2025-07-17T09:58:40","Actor":"Freymaurer","Number":"18558","RawContent":null,"Title":"Enable plugins to rename layer names","State":"open","Body":"Based on my comment on another discussion ([link](https://github.com/tailwindlabs/tailwindcss/discussions/18123#discussioncomment-13354712)). For context, i am working on a component library using the new vite tailwind plugin.\n\nIf you export tailwind 4 css into a tailwind 3 project (even with prefix) it throws due to: `@layer base is used but no matching @tailwind base directive is present.`. \n\nThe recommended workaround is to rename the layers as detailed [here](https://github.com/tailwindlabs/tailwindcss/discussions/18123#discussioncomment-13245038).\n\nIn my case this looks like this:\n\n```css\n@layer swt-theme, swt-base, swt-components, swt-utilities;\n@import \"tailwindcss/theme.css\" layer(swt-theme) prefix(swt);\n@import \"tailwindcss/preflight.css\" layer(swt-base) prefix(swt);\n@import \"tailwindcss/utilities.css\" layer(swt-utilities) prefix(swt);\n\n@plugin \"daisyui\" {\n    themes: all;\n}\n```\n\nIn addition to tailwind i use daisyui 5 (compatible with tailwind 4). Because of the daisyui plugin, the final .css file still contains references to `@layer base` resulting in `@layer base is used but no matching @tailwind base directive is present`.\n\nI reported this as [issue](https://github.com/saadeghi/daisyui/issues/3937) with a [tailwind play link](https://play.tailwindcss.com/z19vEIqURl?file=css), but it seems that this issue cannot be adressed by the author of daisyui. \n\nI quote:\n> I understand.\n> Unfortunately, it's not possible yet to use another layer name due to Tailwind CSS plugin API.\n> Tailwind CSS provides APIs like addBase, addComponents, addUtilities\n> addBase always adds styles to Tailwind's predefined @layer base and addComponents, addUtilities always add styles to Tailwind's predefined @layer utilities.\n>\n> If Tailwind provides more access regarding this behavior, we may be able to provide an option as well.\n\nI hope that you can provide a way for plugin provider to either customize layer names or to correctly propagate any name changes in the tailwind config to the plugins.\n\nThis issue currently forces me to update the css file by hand before publishing, so it is really annoying 😅 \n\nThanks for your time, reading this!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18558","RelatedDescription":"Open issue \"Enable plugins to rename layer names\" (#18558)"},{"Id":"3234197609","IsPullRequest":true,"CreatedAt":"2025-07-16T14:20:14","Actor":"askdevai-bot","Number":"18549","RawContent":null,"Title":"docs: Add comprehensive LLM-friendly API reference","State":"closed","Body":"## Summary\n\nThis PR adds a comprehensive LLM-friendly API reference document (`LLM.md`) to the TailwindCSS repository. The documentation provides detailed information about all user-facing APIs, functions, and types in TailwindCSS v4, structured specifically for easy consumption by both developers and Large Language Models.\n\n## What's Included\n\n- **Core API Documentation**: Complete reference for the main `tailwindcss` package including `compile()`, `compileAst()`, and design system APIs\n- **Integration Packages**: Documentation for PostCSS, Vite, Node.js, and CLI integrations\n- **Plugin System**: Comprehensive guide to creating and using plugins with examples\n- **Theme System**: Detailed documentation of the theme API and design system\n- **Type Definitions**: Complete TypeScript interfaces and enums\n- **Usage Examples**: Practical examples for all major APIs\n\n## Benefits\n\n1. **Developer Experience**: Provides a single, comprehensive reference for all TailwindCSS APIs\n2. **LLM Integration**: Structured format makes it easy for AI tools to understand and use TailwindCSS APIs\n3. **Documentation Completeness**: Covers all user-facing functionality with proper type information\n4. **Maintainability**: Centralized documentation that can be easily updated as APIs evolve\n\n## Test Plan\n\n- ✅ Verified all documented APIs exist in the codebase\n- ✅ Checked type definitions match actual implementations\n- ✅ Validated examples work with current API\n- ✅ Ensured documentation follows project conventions\n\n## Contribution Guidelines Compliance\n\n- ✅ Follows the project's documentation standards\n- ✅ Does not introduce breaking changes\n- ✅ Provides value to the developer community\n- ✅ Maintains consistency with existing documentation\n\n---\n\n**Note**: A developer on Askdev.AI requested this update to improve the developer experience when working with TailwindCSS APIs, especially in AI-assisted development workflows.\n\nSigned-off-by: Askdev.AI bot <bot@askdev.ai>\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18549","RelatedDescription":"Closed or merged PR \"docs: Add comprehensive LLM-friendly API reference\" (#18549)"},{"Id":"3235927750","IsPullRequest":false,"CreatedAt":"2025-07-16T13:09:52","Actor":"mgd216","Number":"18555","RawContent":null,"Title":"@tailwindcss/vite plugin not processing pseudo classes","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\ntailwindcss: \"4.1.10\",\n\"@nuxtjs/tailwindcss\": \"^7.0.0-beta.0\",\n`\"@tailwindcss/vite\": \"^4.1.4\"\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n`\"@tailwindcss/postcss\": \"^4.1.11\"\n\n**What version of Node.js are you using?**\n\nv23.7.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nRed Hat Linux 9 (RHEL9)\n\n**Reproduction URL**\n\n [Stackblitz](https://stackblitz.com/edit/nuxt-starter-zvqjn5ne?file=apps%2FmyApp%2Fpackage.json)\nOriginally reported to Nuxt [#32575](https://github.com/nuxt/nuxt/issues/32575)\n\n**Describe your issue**\n\n### Environment\n\n- We are creating a Nuxt mono repo (using pnpm and [Turbo Repo](https://turborepo.com/)) for a client that will have a 'base layer' with shared [TailwindCSS](https://tailwindcss.com/) and [Daisy UI](https://daisyui.com/) components.\n- We have configured the base layer to use [@nuxtjs/tailwindcss](https://tailwindcss.nuxtjs.org/?utm_source=nuxt.com&utm_medium=aside-module&utm_campaign=nuxt.com) to configure Tailwind.\n\n### Reproduction\n\n- A minimal example can be found in this [Stackblitz](https://stackblitz.com/edit/nuxt-starter-zvqjn5ne?file=apps%2FmyApp%2Fpackage.json)\n- Note, Stackblitz defaults to pnpm but I ran into errors trying to get turborepo running with pnpm\n- To setup, cd packages/myUi > npm install > npm run dev\n- Open a second terminal window, cd apps/myApp > npm install > npm run dev\n\n<img width=\"1911\" height=\"950\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/02028fb9-628a-479b-82ea-197672fe359b\" />\n\n### Describe the bug\n\n<img width=\"1905\" height=\"638\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/06ff3ccb-b017-401f-be7b-182ed9af02ac\" />\n\n- On the left you will see the Base Layer with a Dialog that says \"Hello\".  This shows that Tailwind / Daisy are configured and running correctly in the base layer\n- On the right you will see the App with a card, button, and alert to show that Tailwind / Daisy are configured from the Base Layer and running correctly.\n- **ERROR**:  The Issue is the dialog in the App Layer, notice in the base layer, the Hello DIalog has a 'backdrop' and the dialog is centered.  However in the App layer, there is no backdrop and the dialog div is actually just unstyled in the upper left corner.\n- We are using the Daisy Ui '[dialog method](https://daisyui.com/components/modal/#method-1-html-dialog-element)'\n- The Chrome dev tools are showing a 'psuedo css' variable ::backdrop being append directly to the dialog.\n\n<img width=\"492\" height=\"211\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/ae121631-d69d-4fad-ac09-1c9d7907464a\" />\n\n- Not sure where this error is occurring, is it Nuxt, PostCss, NuxtJS/Tailwind module?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18555","RelatedDescription":"Open issue \"@tailwindcss/vite plugin not processing pseudo classes\" (#18555)"},{"Id":"3233848289","IsPullRequest":false,"CreatedAt":"2025-07-15T22:24:10","Actor":"SIFAR786","Number":"18547","RawContent":null,"Title":"darkMode: 'class' not respected in Tailwind CSS v4 CLI with Hugo (class-based dark utilities not generated)","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\nTailwind CSS v4.1.11 \n\n**What build tool (or framework if it abstracts the build tool) are you using?**\npostcss 11.0.1, hugo v0.148.1+extended+withdeploy darwin/arm64 BuildDate=2025-07-11T12:56:21Z VendorInfo=brew\n\n**What version of Node.js are you using?**\nNode v23.5.0\n\n**What browser are you using?**\nChrome\n\n**What operating system are you using?**\nmacOS\n\n**Reproduction URL**\n\nA Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\n\nA reproduction is **required** when filing an issue — any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.\n\n**Describe your issue**\nWhen using Tailwind CSS v4.1.11 with a Hugo static site and the following config:\n\n```\nmodule.exports = {\n  darkMode: 'class',\n  content: [\n    './layouts/**/*.html',\n    './content/**/*.md'\n  ],\n  theme: {\n    extend: {\n      fontFamily: {\n        sans: ['Inter', 'Montserrat', 'sans-serif']\n      },\n      colors: {\n        primary: '#1e3a8a',\n        accent: '#38bdf8',\n        bgLight: '#f8fafc',\n        bgDark: '#181825'\n      }\n    }\n  },\n  plugins: [require('@tailwindcss/typography')],\n}\n```\n\nand running the CLI with:\n\n```\n\"tailwind\": \"tailwindcss -i ./assets/css/tailwind.css --config ./tailwind.config.js --content './layouts/**/*.html,./content/**/*.md' --minify -o static/css/output.css\"\n```\n\nso i initially created this workaround script in package.json, that worked in generating all the styles in output.css and being applied to site (except dark mode was still not working). I think it was still not reading darkMode setting from tailwind.config.js.\n```\n\"tailwind\": \"tailwindcss -i ./assets/css/tailwind.css --config $PWD/tailwind.config.js --content './layouts/**/*.html,./content/**/*.md' --minify > static/css/output.css\"\n```\n\n**Expected**:\nClass-based dark mode utilities (e.g., .dark\\:bg-gray-800) are generated, and toggling the dark class on <html> enables dark mode.\n\n**Actual**:\nOnly media-query-based dark utilities are generated (inside @media (prefers-color-scheme: dark) { ... }).\nToggling the dark class has no effect.\nDowngrading to Tailwind v3 (e.g., 3.4.3) with the same config and CLI command works perfectly and generates class-based dark utilities.\n\n**Steps to Reproduce:**\nUse the config and CLI command above in a Hugo project.\nInspect the generated CSS for .dark\\:bg-gray-800 or similar class-based selectors.\nObserve that only media-query-based dark utilities are present.\n\n**Environment:**\n- Tailwind CSS v4.1.11\n- Node.js v23.5.0\n- macOS \n- Hugo v0.148.1\n\n**Repo/Minimal** (package.json):\n\n```\n{\n  \"name\": \"modern\",\n  \"version\": \"1.0.0\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"tailwind\": \"tailwindcss -i ./assets/css/tailwind.css --config $PWD/tailwind.config.js --content './layouts/**/*.html,./content/**/*.md' --minify -o static/css/output.css\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"devDependencies\": {\n    \"@tailwindcss/cli\": \"^4.1.11\",\n    \"@tailwindcss/typography\": \"^0.5.9\",\n    \"autoprefixer\": \"^10.4.21\",\n    \"postcss\": \"^8.5.6\",\n    \"tailwindcss\": \"^3.4.3\"\n  },\n  \"dependencies\": {\n    \"browserslist\": \"^4.25.1\",\n    \"caniuse-lite\": \"^1.0.30001727\",\n    \"electron-to-chromium\": \"^1.5.182\",\n    \"escalade\": \"^3.2.0\",\n    \"fraction.js\": \"^4.3.7\",\n    \"nanoid\": \"^3.3.11\",\n    \"node-releases\": \"^2.0.19\",\n    \"normalize-range\": \"^0.1.2\",\n    \"picocolors\": \"^1.1.1\",\n    \"postcss-value-parser\": \"^4.2.0\",\n    \"source-map-js\": \"^1.2.1\",\n    \"update-browserslist-db\": \"^1.1.3\"\n  },\n  \"description\": \"\"\n}\n```\n\n**Notes:**\nUsing the -o flag, absolute config path, and all recommended CLI options does not resolve the issue.\nThis breaks all class-based dark mode toggling for Hugo and similar static site generators.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18547","RelatedDescription":"Closed issue \"darkMode: 'class' not respected in Tailwind CSS v4 CLI with Hugo (class-based dark utilities not generated)\" (#18547)"},{"Id":"3231322680","IsPullRequest":true,"CreatedAt":"2025-07-15T14:14:58","Actor":"depfu[bot]","Number":"18541","RawContent":null,"Title":"Update @tybys/wasm-util 0.9.0 → 0.10.0 (major)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this upgrade. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​tybys/wasm-util (0.9.0 → 0.10.0) · [Repo](https://github.com/toyobayashi/wasm-util)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18541","RelatedDescription":"Closed or merged PR \"Update @tybys/wasm-util 0.9.0 → 0.10.0 (major)\" (#18541)"},{"Id":"3230693859","IsPullRequest":false,"CreatedAt":"2025-07-15T04:13:47","Actor":"GICodeWarrior","Number":"18540","RawContent":null,"Title":"tailwindcss CLI no longer works with Docker bind mounts","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.1.11\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n@tailwindcss/cli\n\n**What version of Node.js are you using?**\n\nnode:22-slim\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS (w/docker)\n\n**Reproduction URL**\n\nCreate a Dockerfile similar to the following:\n```Dockerfile\nFROM node:22-slim\n\nWORKDIR /opt/app/\nCOPY package.json package-lock.json tailwind.css ./\nRUN npm install\n\nCMD [\"npm\", \"run\", \"build-css:dev\"]\n```\n\nCreate a package.json similar to the following:\n```json\n{\n  \"scripts\": {\n    \"build-css\": \"tailwindcss -i ./tailwind.css -o ./static/tailwind.css\",\n    \"build-css:dev\": \"tailwindcss -i ./tailwind.css -o ./static/tailwind.css --watch --poll\"\n  },\n  \"devDependencies\": {\n    \"@tailwindcss/cli\": \"^4.1.11\",\n    \"@tailwindcss/typography\": \"^0.5.16\",\n    \"tailwind-scrollbar\": \"^4.0.2\",\n    \"tailwindcss\": \"^4.1.11\"\n  }\n}\n```\n\nCreate a tailwind.css similar to the following:\n```\n@import \"tailwindcss\" source(none);\n@source \"templates\";\n```\n\nBuild and launch the docker image with `templates` bind mounted into the container.\n\nModify a file in the `templates` directory.\n\nNote tailwindcss CLI does not detect the change.\n\n**Describe your issue**\n\nThe `--poll` option was removed from the tailwindcss CLI and as a result, the `--watch` option no longer works with docker bind mounts.\n\nThe advantage of a bind mount is that we can run the tailwindcss CLI inside a docker container as part of our docker compose file, and the output from the CLI is then available to our app running in a separate container (during development).\n\nHowever, a bind mount on macOS docker doesn't forward filesystem events, so it's necessary to poll.\n\nThe new watcher library being used offers a \"brute-force\" backend which might help(?), but I don't see a way to select that backend in tailwindcss.\nhttps://www.npmjs.com/package/@parcel/watcher\n\n(see also #7725)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18540","RelatedDescription":"Open issue \"tailwindcss CLI no longer works with Docker bind mounts\" (#18540)"},{"Id":"3230395116","IsPullRequest":false,"CreatedAt":"2025-07-15T00:40:46","Actor":"fabian-hiller","Number":"18539","RawContent":null,"Title":"Problem with dark mode because Tailwind v4 loads two CSS versions in dev mode","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.1.11\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: Vite v5.4.14 and @tailwindcss/vite v4.1.11\n\n**What version of Node.js are you using?**\n\nFor example: v22.12.0\n\n**What browser are you using?**\n\nFor example: Brave\n\n**What operating system are you using?**\n\nFor example: macOS\n\n**Reproduction URL**\n\nI am not able to reproduce it in a minimal demo, but still hope this issue provides some value. The issue occurred after migrating the [Valibot docs](https://valibot.dev/) [in this PR](https://github.com/fabian-hiller/valibot/pull/1248) to Tailwind v4. \n\n**Describe your issue**\n\nI am using `@custom-variant dark (&:where(.dark, .dark *))` to overwrite the default `prefers-color-scheme` behavior, but Tailwind loads inconsistent CSS code in dev mode. It loads an `index.css` file from the Tailwind `node_modules` folder, as well as my own custom `root.css` file, which includes `@import 'tailwindcss'`. My CSS file includes the correct dark mode declarations, but the `index.css` file does not, which mixes up the declarations if you choose a color mode that is not the current `prefers-color-scheme`.\n\n<img width=\"1922\" height=\"940\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/bf04da75-2b34-4a8c-ab87-30577539a51e\" />\n\nSo I ended up with two versions of Tailwind  v4.1.11, each with CSS declarations that contradict each other.\n\n<img width=\"1682\" height=\"150\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/b7600609-fa18-4a8a-885e-ec417c7669b2\" />\n\nI have already tried various methods of debugging and fixing it, but with no success.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18539","RelatedDescription":"Open issue \"Problem with dark mode because Tailwind v4 loads two CSS versions in dev mode\" (#18539)"},{"Id":"3229150681","IsPullRequest":true,"CreatedAt":"2025-07-14T15:59:51","Actor":"depfu[bot]","Number":"18535","RawContent":null,"Title":"Update @emnapi/core 1.4.3 → 1.4.4 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​emnapi/core (1.4.3 → 1.4.4) · [Repo](https://github.com/toyobayashi/emnapi)\n\n\n\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/toyobayashi/emnapi/compare/90c4c1b1358851d401dd162c5d1925a2dcb2e397...87bb86c3a5c718ab72fb228505ffde58d7ebea3e\">See the full diff on Github</a>. The new version differs by 2 commits:</p>\n<ul>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/87bb86c3a5c718ab72fb228505ffde58d7ebea3e\"><code>1.4.4</code></a></li>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/92d5bba8c7c3da32d9aa9d2571555f517b847d4e\"><code>fix: `worker.onerror` may receive an `Event`</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18535","RelatedDescription":"Closed or merged PR \"Update @emnapi/core 1.4.3 → 1.4.4 (patch)\" (#18535)"},{"Id":"3229122586","IsPullRequest":true,"CreatedAt":"2025-07-14T15:59:39","Actor":"depfu[bot]","Number":"18534","RawContent":null,"Title":"Update emnapi 1.4.3 → 1.4.4 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this upgrade. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ emnapi (1.4.3 → 1.4.4) · [Repo](https://github.com/toyobayashi/emnapi)\n\n\n\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/toyobayashi/emnapi/compare/90c4c1b1358851d401dd162c5d1925a2dcb2e397...87bb86c3a5c718ab72fb228505ffde58d7ebea3e\">See the full diff on Github</a>. The new version differs by 2 commits:</p>\n<ul>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/87bb86c3a5c718ab72fb228505ffde58d7ebea3e\"><code>1.4.4</code></a></li>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/92d5bba8c7c3da32d9aa9d2571555f517b847d4e\"><code>fix: `worker.onerror` may receive an `Event`</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18534","RelatedDescription":"Closed or merged PR \"Update emnapi 1.4.3 → 1.4.4 (patch)\" (#18534)"},{"Id":"3229092198","IsPullRequest":true,"CreatedAt":"2025-07-14T15:44:32","Actor":"thecrypticace","Number":"18532","RawContent":null,"Title":"Ignore consecutive semicolons in the CSS parser","State":"closed","Body":"Fixes #18523\r\n\r\nI swear I'd already landed this but apparently not.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18532","RelatedDescription":"Closed or merged PR \"Ignore consecutive semicolons in the CSS parser\" (#18532)"},{"Id":"3226339859","IsPullRequest":false,"CreatedAt":"2025-07-14T15:44:32","Actor":"ChenPeleg","Number":"18523","RawContent":null,"Title":"Dev server returns 500 \"Internal server error: Unexpected semicolon\" if there is an additional semicolon in a module.css file","State":"closed","Body":"\n**What version of Tailwind CSS are you using?**\n\n4.1.11\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: postcss-cli 11.0.0, Next.js 15.1.7, Vite 6.1.0\n\n**What version of Node.js are you using?**\n\n\"vite\": \"^7.0.0\",\n\n**What browser are you using?**\n\n Chrome \n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n\nA Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\n\nA reproduction is **required** when filing an issue — any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.\n\n**Describe your issue**\n\n # Description\n\nDev server returns 500 \"Internal server error: Unexpected semicolon\" if there is an additional semicolon in a module.css file\n\n# How to reproduce (only the bare minimum)\n\n  \"dependencies\": {\n    \"react\": \"^19.1.0\",\n    \"react-dom\": \"^19.1.0\"\n  },\n  \"devDependencies\": { \n    \"@tailwindcss/vite\": \"^4.1.11\",\n    \"@vitejs/plugin-react\": \"^4.5.2\",\n    \"tailwindcss\": \"^4.1.11\",\n    \"vite\": \"^7.0.0\",\n   }\n\n// Component.tsx\nimport styles from \"./Component.module.css\"\n\n\n// Component.module.css\n.abc {\n    color: black;;\n}\n**This happens if there are two consecutive semicolons**\n\n# Current behavior\nDev server returns 500 \"Internal server error: Unexpected semicolon\"\n\n# Expected behavior\n\nThrow something else \n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18523","RelatedDescription":"Closed issue \"Dev server returns 500 \"Internal server error: Unexpected semicolon\" if there is an additional semicolon in a module.css file\" (#18523)"},{"Id":"3229094243","IsPullRequest":true,"CreatedAt":"2025-07-14T15:11:29","Actor":"depfu[bot]","Number":"18533","RawContent":null,"Title":"Update @emnapi/runtime 1.4.3 → 1.4.4 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​emnapi/runtime (1.4.3 → 1.4.4) · [Repo](https://github.com/toyobayashi/emnapi)\n\n\n\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/toyobayashi/emnapi/compare/90c4c1b1358851d401dd162c5d1925a2dcb2e397...87bb86c3a5c718ab72fb228505ffde58d7ebea3e\">See the full diff on Github</a>. The new version differs by 2 commits:</p>\n<ul>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/87bb86c3a5c718ab72fb228505ffde58d7ebea3e\"><code>1.4.4</code></a></li>\n<li><a href=\"https://github.com/toyobayashi/emnapi/commit/92d5bba8c7c3da32d9aa9d2571555f517b847d4e\"><code>fix: `worker.onerror` may receive an `Event`</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18533","RelatedDescription":"Closed or merged PR \"Update @emnapi/runtime 1.4.3 → 1.4.4 (patch)\" (#18533)"},{"Id":"3229063236","IsPullRequest":true,"CreatedAt":"2025-07-14T15:08:42","Actor":"depfu[bot]","Number":"18531","RawContent":null,"Title":"Update @emnapi/wasi-threads 1.0.2 → 1.0.3 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​emnapi/wasi-threads (1.0.2 → 1.0.3) · [Repo](https://github.com/toyobayashi/emnapi)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18531","RelatedDescription":"Closed or merged PR \"Update @emnapi/wasi-threads 1.0.2 → 1.0.3 (patch)\" (#18531)"},{"Id":"3226334640","IsPullRequest":false,"CreatedAt":"2025-07-14T14:40:02","Actor":"sehrish30","Number":"18522","RawContent":null,"Title":"Nesting with &__suffix no longer works after upgrading to Tailwind CSS v4","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\nv4.1.11\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\npostcss: v8.5.6 and nextjs: v15.3.2\n\n**What version of Node.js are you using?** \nv20.11.1\n\n**What browser are you using?**\nChrome\n\n**What operating system are you using?**\nmacOS\n\n**DESCRIPTION**\nAfter upgrading from Tailwind CSS v3 to v4, the following CSS nesting pattern stopped working:\n\n```jsx\n<div class=\"duration-normal__done\"></div>\n```\n\nstyle.css\n```css\n.duration-normal {\n  background-color: blue;\n  width: 100px;\n  height: 100px;\n\n  &__done {\n    background-color: red;\n    width: 100px;\n    height: 100px;\n  }\n}\n\n```\n\nThis used to work perfectly in Tailwind v3 when using the ` tailwindcss/nesting` plugin.\n\nNow in Tailwind v4, the class `.duration-normal__done` doesn't get applied. However, `.duration-normal` still works:\n```jsx\n<div class=\"duration-normal\"></div>\n```\n\n**❓Question:**\nHow can I use `&__done` style nesting again in Tailwind v4?\n\n**🔍 What I Tried:**\nI previously had this in postcss.config.js (Tailwind v3):\n```jsx\nplugins: {\n  'tailwindcss/nesting': {},\n  tailwindcss: {},\n  autoprefixer: {}\n}\n```\n\nBut in Tailwind v4, the docs recommend:\n```jsx\nplugins: {\n    '@tailwindcss/postcss': {}\n  }\n```\nAnd now the same nested &__done pattern doesn't compile.\n\n**⚠️ Why this matters:** \nI have 100+ files using this nesting style.Native CSS nesting syntax does not support this BEM-style shorthand.Refactoring all of this would be disruptive and risky.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18522","RelatedDescription":"Closed issue \"Nesting with &__suffix no longer works after upgrading to Tailwind CSS v4\" (#18522)"},{"Id":"3228733485","IsPullRequest":false,"CreatedAt":"2025-07-14T14:27:53","Actor":"ivodolenc","Number":"18529","RawContent":null,"Title":"Unexpected behavior when custom `@theme` vars and `@utility` share same names","State":"closed","Body":"Hi, I just bumped into an issue where having a custom CSS variable defined in `@theme` with the same name as a custom `tw` `@utility` causes duplicate classes to be generated, with incorrect properties. This breaks the CSS and results in styles not rendering properly on the page.\n\nI'm using the latest version of `tailwind` in a `sveltekit` project with the default configuration. I also tested this in the official `tw` playground and I see the same behavior. Screenshots are attached so you can immediately see that something's wrong.\n\n<img width=\"375\" height=\"165\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/5e57fd84-205a-4972-b4b2-4985582f8faf\" />\n\n<img width=\"946\" height=\"375\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3e8270f5-f457-4ca4-90d6-aebc825f7742\" />\n\n<img width=\"347\" height=\"155\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/cebcd21f-f6f8-4b8a-9738-0ef031dd9ef0\" />\n\n[Playground link](https://play.tailwindcss.com/U04WjTgJzA?file=css)\n\nI spent more than half an hour trying to find the problem. After renaming the custom variable, everything worked fine again. I believe this should be addressed, since CSS variables `--custom-name` and `tw` utilities `.custom-name` are diffirent concepts and shouldn't interfere with each other.\n\nI'm running into this because I want to define a custom utils and vars for variable font in the `@theme` config:\n\n```css\n@theme {\n  --font-400: 'wght' 400;\n  --font-ss-3: 'ss03' 1;\n}\n```\n\nSo I can use it later with custom util:\n\n```css\n@utility font-400 {\n  font-variation-settings: var(--font-400);\n}\n\n@utility font-ss-3 {\n  font-feature-settings: var(--font-ss-3);\n}\n```\n\nor via custom css directly if needed:\n\n```css\np {\n  font-variation-settings: var(--font-600);\n  font-feature-settings: var(--font-ss-3);\n}\n```\n\nThese variable names should remain isolated, custom properties under `@theme` shouldn’t conflict with custom `@utilities`.\n\n**In short**: everything works as expected unless a custom `@theme` variable shares its name with a custom `@utility`, in that case, CSS breaks due to conflicting class generation.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18529","RelatedDescription":"Closed issue \"Unexpected behavior when custom `@theme` vars and `@utility` share same names\" (#18529)"},{"Id":"3228171216","IsPullRequest":false,"CreatedAt":"2025-07-14T13:09:12","Actor":"carlin978","Number":"18528","RawContent":null,"Title":"Preflight styles break native Dialog","State":"closed","Body":"Tailwind v4.1.11\n\nVite 7.0.4\n\nNode.js v23.8.0\n\nBrowser: Firefox, reproducible in Chrome\n\nOS: Windows\n\n[Reproduction URL](https://github.com/carlin978/dialog-issue-tailwind)\n\nIn a project using Tailwind, a native Dialog opened using showModal isn't centered, which is the default and expected behavior.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18528","RelatedDescription":"Closed issue \"Preflight styles break native Dialog\" (#18528)"},{"Id":"3226674400","IsPullRequest":false,"CreatedAt":"2025-07-13T17:22:28","Actor":"sntran","Number":"18524","RawContent":null,"Title":"Nested `@variant` inside `@custom-variant`","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.11\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/BK1Bs5n1jp?file=css\n\n**Describe your issue**\n\nFor the purpose of reusing, I declare a `@custom-variant` for `@support`. In another custom variant `@scroll-stuck-top`, I would like to use that `supports-scroll-state` variant to add fallback. I expected the nested `@variant` would be replaced with the definition of the corresponding `@custom-variant`, but instead, it was kept as-is.\n\n```css\n@custom-variant supports-scroll-state {\n  @supports (container-type: scroll-state) {\n    @slot;\n  }\n}\n\n@custom-variant @scroll-stuck-top {\n  @container scroll-state(stuck: top) { @slot; }\n\n  @variant not-supports-scroll-state {\n    \\@scroll-stuck-top & { @slot }\n  }\n}\n```\n\n### Expected Output\n\n```css\n.\\@scroll-stuck-top\\:border-b-2 {\n  @container scroll-state(stuck: top) {\n    border-bottom-style: var(--tw-border-style);\n    border-bottom-width: 2px;\n  }\n  @supports not (container-type: scroll-state) {\n    \\@scroll-stuck-top & {\n      border-bottom-style: var(--tw-border-style);\n      border-bottom-width: 2px;\n    }\n  }\n}\n```\n\n### Actual Output\n\n```css\n.\\@scroll-stuck-top\\:border-b-2 {\n  @container scroll-state(stuck: top) {\n    border-bottom-style: var(--tw-border-style);\n    border-bottom-width: 2px;\n  }\n  @variant not-supports-scroll-state {\n    \\@scroll-stuck-top & {\n      border-bottom-style: var(--tw-border-style);\n      border-bottom-width: 2px;\n    }\n  }\n}\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18524","RelatedDescription":"Open issue \"Nested `@variant` inside `@custom-variant`\" (#18524)"},{"Id":"3225643154","IsPullRequest":false,"CreatedAt":"2025-07-12T19:11:28","Actor":"weilinzung","Number":"18519","RawContent":null,"Title":"[v4] Regression: Media queries inside @apply not working as expected compared to v3","State":"closed","Body":" \n\n**What version of Tailwind CSS are you using?**\n\nv4.1.11\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nAngualr Materail - NG20\n\n**What version of Node.js are you using?**\n\nv20.19.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://stackblitz.com/edit/stackblitz-starters-smcvdl5w?file=src%2Fapp%2Fchecklist.scss\n\n**Describe your issue**\n\nIn Tailwind CSS v4, applying utility classes using `@apply` inside nested media queries (e.g., `@apply md:...` or `hover:md:...`) within SCSS context does not behave as expected. This pattern worked in Tailwind CSS v3 but appears broken in v4.\n\nIn particular, combining `@apply` with responsive and pseudo-class utilities inside Angular's SCSS context (`::ng-deep`) no longer compiles or applies styles as it used to.\n\n---\n\n### Example SCSS Code Illustrating the Problem:\n\n```scss\n@use '@angular/material' as mat;\n@reference 'tailwindcss';\n\n:host {\n  ::ng-deep {\n    .task-list {\n      @include mat.form-field-density(-1);\n\n      @apply hover:md:bg-red-500; // ❌ Not working in v4, worked in v3\n\n      &:hover {\n        @apply md:bg-red-500; // ❌ Not working in v4, worked in v3\n      }\n\n      .mdc-label {\n        @apply font-medium text-red-500; // ✅ Still works\n      }\n\n      .mat-mdc-checkbox-checked {\n        @apply pointer-events-none opacity-50;\n\n        .mdc-label {\n          @apply line-through!; // ✅ Still works\n        }\n      }\n\n      .action-trigger {\n        @apply md:opacity-0; // ❌ Not working as it did in v3 — no longer hidden on large screens\n      }\n    }\n  }\n}\n```\n\nThese patterns are used widely across our large Angular application, and after the v4 upgrade, many component styles have silently broken. While base utilities like `@apply text-red-500` still function, any usage of `@apply` with media queries or pseudo-classes(hover,placeholder...) appears to be ignored or stripped during build.\n\n### Impact\nThis is a critical issue for us:\n- We have a large codebase heavily reliant on these patterns.\n- Refactoring hundreds of components manually would be a major setback.\n- There was no mention of this change in the upgrade guide as of now.\n\n### Please confirm:\n\n- Is this behavior expected in Tailwind CSS v4?\n- Was support for `@apply + media/pseudo` utilities removed by design?\n- If so, is there a workaround or plugin we can adopt short-term?\n\nAny guidance or fix would be hugely appreciated. We're happy to provide further context or contribute to a fix if this is unintended.\n\nThank you!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18519","RelatedDescription":"Closed issue \"[v4] Regression: Media queries inside @apply not working as expected compared to v3\" (#18519)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-07-24T03:30:23.3455343Z","RunDurationInMilliseconds":510}