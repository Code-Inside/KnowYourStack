{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2824217868","IsPullRequest":false,"CreatedAt":"2025-01-31T19:17:17","Actor":"DaniGuardiola","Number":"16133","RawContent":null,"Title":"[v4] In Solid Start, `&` is outputted as `&amp;` which breaks the styles","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\n`tailwindcss`: v4.0.1\n\n`@tailwindcss/vite`: 0.0.0-insiders.7f1d097\n\nThe insiders version is the latest as of this issue's publication, needed because https://github.com/tailwindlabs/tailwindcss/pull/16052 hasn't been released stable yet. However, as mentioned below, the issue also happens with a PostCSS setup, so it doesn't seem tied to vite.\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: Solid Start (repo version directly)\n\n**What version of Node.js are you using?**\n\nFor example: v23.6.1\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nN/A\n\n**Reproduction URL**\n\nhttps://github.com/solidjs/solid-start/pull/1748\n\n**Describe your issue**\n\n> Related Solid Start issue: https://github.com/solidjs/solid-start/issues/1749\n\nTailwind CSS v4 (recently fixed to work with Solid Start) outputs `&` as `&amp;` which breaks the styles.\n\nFor example, a class using a \"dark theme\" variant like this:\n\n```css\n.dark\\:bg-red-500 {\n  &:where(.dark, .dark *) {\n    background-color: var(--color-red-500);\n  }\n}\n```\n\nThis is actually outputted like this:\n\n```css\n.dark\\:bg-red-500 {\n  &amp;:where(.dark, .dark *) {\n    background-color: var(--color-red-500);\n  }\n}\n```\n\nIt doesn't depend on the vite setup because it also happened with the alternative PostCSS-based setup. Unsure if the issue is on Solid Start's side or Tailwind CSS's side.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16133","RelatedDescription":"Open issue \"[v4] In Solid Start, `&` is outputted as `&amp;` which breaks the styles\" (#16133)"},{"Id":"2824134806","IsPullRequest":true,"CreatedAt":"2025-01-31T18:30:36","Actor":"RobinMalfait","Number":"16131","RawContent":null,"Title":"Prepare for v4.0.2 release","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16131","RelatedDescription":"Closed or merged PR \"Prepare for v4.0.2 release\" (#16131)"},{"Id":"2824018380","IsPullRequest":true,"CreatedAt":"2025-01-31T18:18:11","Actor":"thecrypticace","Number":"16129","RawContent":null,"Title":"Allow `@variant` to be used at the top-level","State":"closed","Body":"This makes it so `@variant` is replaced at the top level and not just within rules. This also fixes a bug where `@variant` wasn't handled when inside an `@media` at-rule.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16129","RelatedDescription":"Closed or merged PR \"Allow `@variant` to be used at the top-level\" (#16129)"},{"Id":"2824037975","IsPullRequest":false,"CreatedAt":"2025-01-31T17:25:28","Actor":"flx-sta","Number":"16130","RawContent":null,"Title":"[v4] Removing default breakpoints not reflected in `plugin()` API/method","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\n`v4.0.1`\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n- @tailwindcss/cli 4.0.0\n- @tailwindcss/postcss 4.0.0\n- postcss 8.5.1\n\n**What version of Node.js are you using?**\n\nFor example: v12.0.0\n\n**What browser are you using?**\n\nv20.13.0\n\n**What operating system are you using?**\n\nmacOS 14.6.1 (23G93)\n\n**Reproduction URL**\n\nhttps://codesandbox.io/p/live/27a50c21-9a15-410a-be6e-f846fdbb6102\n\nRun the `build` script and check the terminal output.\n\n**Describe your issue**\n\nWhen defining my `@theme` with :\n```css\n@theme {\n  --breakpoint-*: initial;\n\n  --breakpoint-phone: 30rem;\n  --breakpoint-tablet: 48rem;\n  --breakpoint-default: 75rem;\n}\n```\nI was expecting for only my custom breakpoints/screens to exist.\nBut instead it's adding them **on top** of the existing one when definition a plugin:\n\n```shell\n{\n  sm: '40rem',\n  md: '48rem',\n  lg: '64rem',\n  xl: '80rem',\n  '2xl': '96rem',\n  phone: '30rem',\n  tablet: '48rem',\n  default: '75rem',\n  __CSS_VALUES__: { phone: 0, tablet: 0, default: 0 }\n}\n≈ tailwindcss v4.0.1\n\nDone in 113ms\n```\n\n-----\n\nUnless, is it expected to use the `__CSS_VALUES__` object?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16130","RelatedDescription":"Open issue \"[v4] Removing default breakpoints not reflected in `plugin()` API/method\" (#16130)"},{"Id":"2823642116","IsPullRequest":true,"CreatedAt":"2025-01-31T16:56:52","Actor":"RobinMalfait","Number":"16121","RawContent":null,"Title":"Do not emit empty rules/at-rules","State":"closed","Body":"This PR is an optimization where it will not emit empty rules and at-rules. I noticed this while working on https://github.com/tailwindlabs/tailwindcss/pull/16120 where we emitted:\r\n```css\r\n:root, :host {\r\n}\r\n```\r\n\r\nThere are some exceptions for \"empty\" at-rules, such as:\r\n\r\n```css\r\n@charset \"UTF-8\";\r\n@layer foo, bar, baz;\r\n@custom-media --modern (color), (hover);\r\n@namespace \"http://www.w3.org/1999/xhtml\";\r\n```\r\n\r\nThese don't have a body, but they still have a purpose and therefore they will be emitted.\r\n\r\nHowever, if you look at this:\r\n\r\n```css\r\n/* Empty rule */\r\n.foo {\r\n}\r\n\r\n/* Empty rule, with nesting */\r\n.foo {\r\n  .bar {\r\n  }\r\n  .baz {\r\n  }\r\n}\r\n\r\n/* Empty rule, with special case '&' rules */\r\n.foo {\r\n  & {\r\n    &:hover {\r\n    }\r\n    &:focus {\r\n    }\r\n  }\r\n}\r\n\r\n/* Empty at-rule */\r\n@media (min-width: 768px) {\r\n}\r\n\r\n/* Empty at-rule with nesting*/\r\n@media (min-width: 768px) {\r\n  .foo {\r\n  }\r\n\r\n  @media (min-width: 1024px) {\r\n    .bar {\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nNone of these will be emitted.\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16121","RelatedDescription":"Closed or merged PR \"Do not emit empty rules/at-rules\" (#16121)"},{"Id":"2823923600","IsPullRequest":false,"CreatedAt":"2025-01-31T16:24:01","Actor":"chasegiunta","Number":"16128","RawContent":null,"Title":"[v4] tailwindcss-forms plugin applies reset classes at incorrect layer","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite / Vue\n\n**What version of Node.js are you using?**\n\nv20.18.2\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/5y73wPxEOR?file=css\n\n**Describe your issue**\n\nWhen using tailwindcss-forms `class` strategy (via `@plugin` directive), the reset classes are being applied at the `utilities` layer, rather than the `base` or `components` layer. This causes unreliability when trying to setup custom base `form-` classes, or override those styles on a case-by-case basis within markup. This didn't seem to be an issue on v3 (perhaps the reset classes were applied at the `components` layer?) so it might be considered a regression.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16128","RelatedDescription":"Open issue \"[v4] tailwindcss-forms plugin applies reset classes at incorrect layer\" (#16128)"},{"Id":"2822233110","IsPullRequest":true,"CreatedAt":"2025-01-31T14:53:02","Actor":"thecrypticace","Number":"16093","RawContent":null,"Title":"Discard invalid declarations when parsing CSS","State":"closed","Body":"I discovered this when triaging an error someone had on Tailwind Play.\r\n\r\n1. When we see a `;` we often assume a valid declaration precedes it but that may not be the case\r\n2. When we see the name of a custom property we assume everything that follows will be a valid declaration but that is not necessarily the case\r\n3. A bare identifier inside of a rule is treated as a declaration which is not the case\r\n\r\nThis PR fixes all three of these by ignoring these invalid cases. Though some should probably be turned into errors.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16093","RelatedDescription":"Closed or merged PR \"Discard invalid declarations when parsing CSS\" (#16093)"},{"Id":"2821019609","IsPullRequest":true,"CreatedAt":"2025-01-31T14:26:45","Actor":"philipp-spiess","Number":"16069","RawContent":null,"Title":"Vite: Transform `<style>` blocks in html files","State":"closed","Body":"Fixes #16036\r\n\r\nThis adds a new rule to treat `<style>` blocks found within `.html` file as Tailwind CSS targets.\r\n\r\n## Test plan\r\n\r\n- Tested using the Vite extension (dev) and a new integration test (prod)","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16069","RelatedDescription":"Closed or merged PR \"Vite: Transform `<style>` blocks in html files\" (#16069)"},{"Id":"2821360883","IsPullRequest":true,"CreatedAt":"2025-01-31T14:23:33","Actor":"philipp-spiess","Number":"16078","RawContent":null,"Title":"Vite: Don't rebase urls that appear to be aliases","State":"closed","Body":"Closes #16039\r\n\r\nThis PR changes our URL rebasing logic used with Vite so that it does not rebase URLs that look like common alias paths (e.g. urls starting in `~`, `@` or `#`, etc.). Unfortunately this is only an approximation and you can configure an alias for a path that starts with a regular alphabetical character (e.g. `foo` => `./my/foo`) so this isn't a perfect fix, however in practice most aliases will be prefixed with a symbol to make it clear that it's an alias anyways.\r\n\r\nOne alternative we have considered is to only rebase URLs that we know are relative (so they need to start with a `.`). This, however, will break common CSS use cases where urls are loaded like this:\r\n\r\n```css\r\nbackground: image-set(\r\n  url('image1.jpg') 1x,\r\n  url('image2.jpg') 2x\r\n);\r\n``` \r\n\r\nSo making this change felt like we only trade one GitHub issue for another one. \r\n\r\nIn a more ideal scenario we try to resolve the URL with the Vite resolver (we have to run the resolver and can't rely on the `resolve` setting alone due to packages like [`vite-tsconfig-paths`](https://www.npmjs.com/package/vite-tsconfig-paths)), however even then we can have relative paths being resolvable to different files based on wether they were rebased or not (e.g. when an image with the same filename exists in two different paths).\r\n\r\nSo ultimately we settled on extending the already existing blocklist (which we have taken from the Vite implementation) for now.\r\n\r\n## Test plan\r\n\r\n- Added unit test and it was tested with the Vite playground.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16078","RelatedDescription":"Closed or merged PR \"Vite: Don't rebase urls that appear to be aliases\" (#16078)"},{"Id":"2823532440","IsPullRequest":true,"CreatedAt":"2025-01-31T14:13:17","Actor":"RobinMalfait","Number":"16120","RawContent":null,"Title":"Do not emit `@keyframes` in `@theme reference`","State":"closed","Body":"This PR fixes na issue where `@keyframes` were emitted if they wre in a `@theme\r\nreference` and anothe `@theme {}` (that is not a reference) was present.\r\n\r\nE.g.:\r\n\r\n```css\r\n@reference \"tailwindcss\";\r\n\r\n@theme {\r\n  /* ... */\r\n}\r\n```\r\n\r\nProduces:\r\n```css\r\n:root, :host {\r\n}\r\n@keyframes spin {\r\n  to {\r\n    transform: rotate(360deg);\r\n  }\r\n}\r\n@keyframes ping {\r\n  75%, 100% {\r\n    transform: scale(2);\r\n    opacity: 0;\r\n  }\r\n}\r\n@keyframes pulse {\r\n  50% {\r\n    opacity: 0.5;\r\n  }\r\n}\r\n@keyframes bounce {\r\n  0%, 100% {\r\n    transform: translateY(-25%);\r\n    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);\r\n  }\r\n  50% {\r\n    transform: none;\r\n    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);\r\n  }\r\n}\r\n```\r\n\r\nWith this PR, the produced CSS looks like this instead:\r\n```css\r\n:root, :host {\r\n}\r\n```\r\n\r\nNote: the empty `:root, :host` will be solved in a subsequent PR.\r\n\r\n### Test plan\r\n\r\nAdded some unit tests, and a dedicated integration test.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16120","RelatedDescription":"Closed or merged PR \"Do not emit `@keyframes` in `@theme reference`\" (#16120)"},{"Id":"2823205441","IsPullRequest":false,"CreatedAt":"2025-01-31T11:54:38","Actor":"rashthedude","Number":"16115","RawContent":null,"Title":"Upgrade tool v4 returns error","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n3.4.17\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNextJS 15.1.4\n\n**What version of Node.js are you using?**\n\nv22.13.1\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\nmacOS\n\n**Reproduction URL**\n\nN/A\n\n**Describe your issue**\n\nRunning tailwindcss/upgrade@next returns this error:\n\n│ Migrating JavaScript configuration files…\n\n│ ↳ Could not load the configuration file: (0 , _deepmerge.default) is not a function\n\nThe tailwind config file contains a theme object that is a few levels deep.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16115","RelatedDescription":"Closed issue \"Upgrade tool v4 returns error\" (#16115)"},{"Id":"2822821276","IsPullRequest":false,"CreatedAt":"2025-01-31T11:44:32","Actor":"siriwatknp","Number":"16100","RawContent":null,"Title":"CSS variables created by plugins are modified","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.1\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\n- Pull tailwindcss project\n- Add the test below to `packages/tailwindcss/src/plugin.test.ts`\n\n```diff\ndiff --git a/packages/tailwindcss/src/plugin.test.ts b/packages/tailwindcss/src/plugin.test.ts\nindex 9af3a55f..89129df7 100644\n--- a/packages/tailwindcss/src/plugin.test.ts\n+++ b/packages/tailwindcss/src/plugin.test.ts\n@@ -32,6 +32,36 @@ test('plugin', async () => {\n   `)\n })\n \n+test('plugin CSS variables', async () => {\n+  let input = css`\n+    @plugin \"my-plugin\";\n+  `\n+\n+  let compiler = await compile(input, {\n+    loadModule: async () => ({\n+      module: plugin(function ({ addBase }) {\n+        addBase({\n+          body: {\n+            '--jun-drawerOpen': '1',\n+            '--jun-ES-drawerWidth': '18rem',\n+          },\n+        })\n+      }),\n+      base: '/root',\n+    }),\n+  })\n+\n+  expect(compiler.build([])).toMatchInlineSnapshot(`\n+    \"@layer base {\n+      body {\n+        --jun-drawerOpen: 1;\n+        --jun-ES-drawerWidth: 18rem;\n+      }\n+    }\n+    \"\n+  `)\n+})\n+\n test('plugin.withOptions', async () => {\n   let input = css`\n     @plugin \"my-plugin\";\n\n```\n\nRun the test to see the error:\n\n<img width=\"631\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/b61ffa5a-4630-4b40-bf3d-3759a8a9feb3\" />\n\n**Describe your issue**\n\nTailwind CSS should not modify the CSS variables created by plugins.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16100","RelatedDescription":"Closed issue \"CSS variables created by plugins are modified\" (#16100)"},{"Id":"2822861261","IsPullRequest":true,"CreatedAt":"2025-01-31T11:44:30","Actor":"siriwatknp","Number":"16103","RawContent":null,"Title":"Prevent modifying CSS variables in plugins","State":"closed","Body":"closes #16100 \r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16103","RelatedDescription":"Closed or merged PR \"Prevent modifying CSS variables in plugins\" (#16103)"},{"Id":"2823171639","IsPullRequest":true,"CreatedAt":"2025-01-31T11:39:52","Actor":"baptisthecht","Number":"16113","RawContent":null,"Title":"Feat: Adding a warning in the upgrade CLI when a config file contains non-migratable values.","State":"open","Body":"I encountered an issue in several of my projects during migration. I was unable to migrate correctly because my config file contained the now-deprecated \"safelist\" key. I had to reverse-engineer the problem to identify what was blocking me. To help others facing the same issue, I added this warning to inform them that they need to edit their config file for a smooth automatic migration.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16113","RelatedDescription":"Open PR \"Feat: Adding a warning in the upgrade CLI when a config file contains non-migratable values.\" (#16113)"},{"Id":"2823062011","IsPullRequest":false,"CreatedAt":"2025-01-31T11:26:51","Actor":"pedenys","Number":"16110","RawContent":null,"Title":"[v4] Classes defined in @layer components no longer generated with modifiers","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n`v4.0.1`\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nAstro.js `v5.1.9` but can be reproduced with the Tailwind playground\n\n**What version of Node.js are you using?**\n\n`v22.11.0`\n\n**What browser are you using?**\n\nFirefox Developer Edition `v22.11.0`\n\n**What operating system are you using?**\n\nMacOS 15.2 (24C101)\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/aRX8gpP3Vu?file=css\n\n**Describe your issue**\n\nIt seems classes defined inside `@layer components` are no longer generated with their modifiers along-side.\n\nOriginal code : \n\n```html\n<div class=\"baba md:yaga hover:jeff\">\n  <p>Slayer</p>\n</div>\n```\n\n```css\n@import \"tailwindcss\";\n\n@theme {\n  /* ... */\n}\n\n@layer components {\n  .baba {\n    background-color: green;\n    border-radius: var(--rounded-sm);\n    padding: var(--spacing-1);\n    box-shadow: var(--shadow-sm);\n  }\n\n  .yaga {\n    background-color: yellow;\n    border-radius: var(--rounded-xl);\n    padding: var(--spacing-5);\n    box-shadow: var(--shadow-xl);\n  }\n\n  .jeff {\n    opacity: 0.1;\n  }\n}\n\n```\n\nGenerated CSS : \n\n```css\n/* generated css in v4.0.1 for `@layer components` */\n.baba {\n  background-color: green;\n  border-radius: var(--rounded-sm);\n  padding: var(--spacing-1);\n  box-shadow: var(--shadow-sm);\n}\n\n.yaga {\n  background-color: yellow;\n  border-radius: var(--rounded-xl);\n  padding: var(--spacing-5);\n  box-shadow: var(--shadow-xl);\n}\n\n.jeff {\n  opacity: 0.1;\n}\n```\n\n```css\n/* generated css in v3.4.17 for `@layer components`  */\n.baba {\n  background-color: green;\n  border-radius: var(--rounded-sm);\n  padding: var(--spacing-1);\n  box-shadow: var(--shadow-sm);\n}\n\n.hover\\:jeff:hover {\n  opacity: 0.1;\n}\n\n@media (min-width: 768px) {\n  .md\\:yaga {\n    background-color: yellow;\n    border-radius: var(--rounded-xl);\n    padding: var(--spacing-5);\n    box-shadow: var(--shadow-xl);\n  }\n}\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16110","RelatedDescription":"Closed issue \"[v4] Classes defined in @layer components no longer generated with modifiers\" (#16110)"},{"Id":"2821940821","IsPullRequest":false,"CreatedAt":"2025-01-31T11:03:02","Actor":"lifeiscontent","Number":"16088","RawContent":null,"Title":"tailwind upgrade doesn't explain what failed during the migration of js to css config","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: postcss-cli 8.3.1, Next.js 10.0.9, webpack 5.28.0\n\n**What version of Node.js are you using?**\n\nFor example: v22.x\n\n**What browser are you using?**\n\nFor example: Chrome, Safari, or N/A\n\n**What operating system are you using?**\n\nFor example: macOS, Windows\n\n**Reproduction URL**\n\nhttps://gist.github.com/lifeiscontent/860943b535af0fa846967a613b668c6b\n\nA reproduction is **required** when filing an issue — any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.\n\n**Describe your issue**\n\nwhen using `npx @tailwindcss/upgrade` it fails to migrate to a css config but doesn't explain why it failed","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16088","RelatedDescription":"Closed issue \"tailwind upgrade doesn't explain what failed during the migration of js to css config\" (#16088)"},{"Id":"2821677587","IsPullRequest":true,"CreatedAt":"2025-01-31T11:01:13","Actor":"depfu[bot]","Number":"16084","RawContent":null,"Title":"Update turbo 2.3.3 → 2.3.4 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ turbo (2.3.3 → 2.3.4) · [Repo](https://github.com/turborepo/turbo)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16084","RelatedDescription":"Closed or merged PR \"Update turbo 2.3.3 → 2.3.4 (patch)\" (#16084)"},{"Id":"2822948219","IsPullRequest":false,"CreatedAt":"2025-01-31T10:49:19","Actor":"WebCimes","Number":"16104","RawContent":null,"Title":"Issue with Tailwind v4 Changing the Order of @layer component","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\n^4.0.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nLaravel 11, Vite 5.4.11\n\n**What version of Node.js are you using?**\n\nv20.16.0\n\n**What browser are you using?**\n\nChrome, Firefox\n\n**What operating system are you using?**\n\nWindows\n\n\n**Description**\n\nIn Tailwind v3, styles defined inside @layer component were applied after external library styles, allowing developers to override third-party styles easily. However, in Tailwind v4, the order has changed, and external stylesheets are now loaded after @layer component, which causes them to override custom styles.\n\n**Steps to Reproduce**\n\nImport an external library's stylesheet inside a TypeScript file:\n\n`import \"external-library/style.css\";`\n\nImport Tailwind styles and define custom overrides inside @layer component:\n\n`import \"./style.css\"; // This file includes Tailwind and custom overrides`\n\nInside style.css, define a rule in @layer component:\n\n```\n@layer component {\n  .custom-button {\n    background-color: red;\n  }\n}\n```\n\nIf external-library/style.css has a .custom-button rule with a different background color, Tailwind v4 now applies the external styles after @layer component, overriding the custom styles.\n\n**Expected Behavior**\n\nThe styles defined inside @layer component should be applied after external stylesheets, as it was in Tailwind v3.\n\n**Actual Behavior**\n\nExternal styles are applied after @layer component, causing third-party styles to override custom styles.\n\nThanks for your help","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16104","RelatedDescription":"Closed issue \"Issue with Tailwind v4 Changing the Order of @layer component\" (#16104)"},{"Id":"2821239908","IsPullRequest":false,"CreatedAt":"2025-01-31T10:39:51","Actor":"kefranabg","Number":"16075","RawContent":null,"Title":"[v4] generated css for dark variant looks wrong compared to 3.4","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.1\n\n**What version of Node.js are you using?**\n\nFor example: v22.1\n\n**What browser are you using?**\n\nAll major browsers\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nBug reproduction link: https://play.tailwindcss.com/oTvhvobEoO?file=css\n\n**Describe your issue**\n\nFollowing up on https://github.com/tailwindlabs/tailwindcss/issues/16068\n\nSorry I think my last issue was not explicit enough.\nI posted a new reproduction link to demonstrate the issue: https://play.tailwindcss.com/oTvhvobEoO?file=css\n\nI think there is an issue with the generated css order:\n\n<img width=\"453\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0f39a22e-8655-4e1f-ab8e-63852f46c427\" />\n\nBut I believe the order should be this one:\n\n```\n.text-black {\n  color: var(--color-black);\n}\n@media (prefers-color-scheme: dark) {\n  .text-black {\n    color: yellow;\n  }\n}\n.dark\\:text-blue-900 {\n  @media (prefers-color-scheme: dark) {\n    color: var(--color-blue-900);\n  }\n}\n```\n\nI compared with v3.4.17 and the order was the above, so I guess this is a regression right?\n\nJust to explain our use case: we have a large code base and we didn't want to apply the following `text-black dark:text-gray-200` everytime we were using `text-black`. So for some `text-*` or `bg-*` colors we override it at the global level by doing this:\n```\n@media (prefers-color-scheme: dark) {\n    .text-black {\n\t\t@apply text-gray-200;\n\t}\n}\n``` \n\n**But still** in some cases we'd like to have the option to override it with another color (e.g `text-black dark:text-blue`)\n\nThe options you suggested [here](https://github.com/tailwindlabs/tailwindcss/discussions/16070#discussioncomment-12008381) are not really what we expect since it will affect global colors\n\nLet me know if I can clarify more 👍 \n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16075","RelatedDescription":"Closed issue \"[v4] generated css for dark variant looks wrong compared to 3.4\" (#16075)"},{"Id":"2821601595","IsPullRequest":false,"CreatedAt":"2025-01-31T10:23:46","Actor":"MickL","Number":"16082","RawContent":null,"Title":"Improve treeshaking","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.0.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nvite 6.0.5\n\n**What version of Node.js are you using?**\n\nBun 1.2.1\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\nhttps://stackblitz.com/edit/vitejs-vite-qn84o4zm?file=src%2FApp.vue\n\n**Describe your issue**\n\nI just realized that an empty project, with no classes used at all, builds up a 21,9 kB css file. I see for example `.lowercase`, `.uppercase`, `.shadow`, `.filter`, `.transition` as well as tons of css variables and @property's.\n\nI was kinda expecting that Tailwind will not add classes that are not used. Also I would kindof expect the 364 css variables to be not included if they are not used.\n\n**Built css file (post-formatted):**\nhttps://pastebin.com/WNZ1C5f5","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16082","RelatedDescription":"Closed issue \"Improve treeshaking\" (#16082)"},{"Id":"2822180496","IsPullRequest":true,"CreatedAt":"2025-01-31T10:22:45","Actor":"depfu[bot]","Number":"16091","RawContent":null,"Title":"Update @playwright/test 1.49.1 → 1.50.0 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​playwright/test (1.49.1 → 1.50.0) · [Repo](https://github.com/Microsoft/playwright)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/microsoft/playwright/releases/tag/v1.50.0\">1.50.0</a></h4>\n\n<blockquote><h2 dir=\"auto\">Test runner</h2>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">New option <a href=\"https://playwright.dev/docs/api/class-test#test-step-option-timeout\"><code class=\"notranslate\">timeout</code></a> allows specifying a maximum run time for an individual test step. A timed-out step will fail the execution of the test.</p>\n<div class=\"highlight highlight-source-js\" dir=\"auto\"><pre class=\"notranslate\"><span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'some test'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> page <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">await</span> <span class=\"pl-s1\">test</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">step</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'a step'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">// This step can time out separately from the test</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">timeout</span>: <span class=\"pl-c1\">1000</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n</li>\n<li>\n<p dir=\"auto\">New method <a href=\"https://playwright.dev/docs/api/class-test#test-step-skip\">test.step.skip()</a> to disable execution of a test step.</p>\n<div class=\"highlight highlight-source-js\" dir=\"auto\"><pre class=\"notranslate\"><span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'some test'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> page <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">await</span> <span class=\"pl-s1\">test</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">step</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'before running step'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">// Normal step</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-k\">await</span> <span class=\"pl-s1\">test</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">step</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">skip</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'not yet ready'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">// This step is skipped</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-k\">await</span> <span class=\"pl-s1\">test</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">step</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'after running step'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">// This step still runs even though the previous one was skipped</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n</li>\n<li>\n<p dir=\"auto\">Expanded <a href=\"https://playwright.dev/docs/api/class-locatorassertions#locator-assertions-to-match-aria-snapshot-2\">expect(locator).toMatchAriaSnapshot()</a> to allow storing of aria snapshots in separate YAML files.</p>\n</li>\n<li>\n<p dir=\"auto\">Added method <a href=\"https://playwright.dev/docs/api/class-locatorassertions#locator-assertions-to-have-accessible-error-message\">expect(locator).toHaveAccessibleErrorMessage()</a> to assert the Locator points to an element with a given <a href=\"https://w3c.github.io/aria/#aria-errormessage\">aria errormessage</a>.</p>\n</li>\n<li>\n<p dir=\"auto\">Option <a href=\"https://playwright.dev/docs/api/class-testconfig#test-config-update-snapshots\">testConfig.updateSnapshots</a> added the configuration enum <code class=\"notranslate\">changed</code>. <code class=\"notranslate\">changed</code> updates only the snapshots that have changed, whereas <code class=\"notranslate\">all</code> now updates all snapshots, regardless of whether there are any differences.</p>\n</li>\n<li>\n<p dir=\"auto\">New option <a href=\"https://playwright.dev/docs/api/class-testconfig#test-config-update-source-method\">testConfig.updateSourceMethod</a> defines the way source code is updated when <a href=\"https://playwright.dev/docs/api/class-testconfig#test-config-update-snapshots\">testConfig.updateSnapshots</a> is configured. Added <code class=\"notranslate\">overwrite</code> and <code class=\"notranslate\">3-way</code> modes that write the changes into source code, on top of existing <code class=\"notranslate\">patch</code> mode that creates a patch file.</p>\n<div class=\"highlight highlight-source-shell\" dir=\"auto\"><pre class=\"notranslate\">npx playwright <span class=\"pl-c1\">test</span> --update-snapshots=changed --update-source-method=3way</pre></div>\n</li>\n<li>\n<p dir=\"auto\">Option <a href=\"https://playwright.dev/docs/api/class-testconfig#test-config-web-server\">testConfig.webServer</a> added a <code class=\"notranslate\">gracefulShutdown</code> field for specifying a process kill signal other than the default <code class=\"notranslate\">SIGKILL</code>.</p>\n</li>\n<li>\n<p dir=\"auto\">Exposed <a href=\"https://playwright.dev/docs/api/class-teststep#test-step-attachments\">testStep.attachments</a> from the reporter API to allow retrieval of all attachments created by that step.</p>\n</li>\n</ul>\n<h2 dir=\"auto\">UI updates</h2>\n<ul dir=\"auto\">\n<li>Updated default HTML reporter to improve display of attachments.</li>\n<li>New button for picking elements to produce aria snapshots.</li>\n<li>Additional details (such as keys pressed) are now displayed alongside action API calls in traces.</li>\n<li>Display of <code class=\"notranslate\">canvas</code> content in traces is error-prone. Display is now disabled by default, and can be enabled via the <code class=\"notranslate\">Display canvas content</code> UI setting.</li>\n<li>\n<code class=\"notranslate\">Call</code> and <code class=\"notranslate\">Network</code> panels now display additional time information.</li>\n</ul>\n<h2 dir=\"auto\">Breaking</h2>\n<ul dir=\"auto\">\n<li>\n<a href=\"https://playwright.dev/docs/api/class-locatorassertions#locator-assertions-to-be-editable\">expect(locator).toBeEditable()</a> and <a href=\"https://playwright.dev/docs/api/class-locator#locator-is-editable\">locator.isEditable()</a> now throw if the target element is not <code class=\"notranslate\">&lt;input&gt;</code>, <code class=\"notranslate\">&lt;select&gt;</code>, or a number of other editable elements.</li>\n<li>Option <a href=\"https://playwright.dev/docs/api/class-testconfig#test-config-update-snapshots\">testConfig.updateSnapshots</a> now updates all snapshots when set to <code class=\"notranslate\">all</code>, rather than only the failed/changed snapshots. Use the new enum <code class=\"notranslate\">changed</code> to keep the old functionality of only updating the changed snapshots.</li>\n</ul>\n<h2 dir=\"auto\">Browser Versions</h2>\n<ul dir=\"auto\">\n<li>Chromium 133.0.6943.16</li>\n<li>Mozilla Firefox 134.0</li>\n<li>WebKit 18.2</li>\n</ul>\n<p dir=\"auto\">This version was also tested against the following stable channels:</p>\n<ul dir=\"auto\">\n<li>Google Chrome 132</li>\n<li>Microsoft Edge 132</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/@playwright%2Ftest/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/Microsoft/playwright/compare/88bc8afc78ea6ff13d2bbb312b99eb924962766c...9d221785334d22b0606b746bffe8a89b8f652e1c\">See the full diff on Github</a>. The new version differs by more commits than we can show here.</p>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16091","RelatedDescription":"Closed or merged PR \"Update @playwright/test 1.49.1 → 1.50.0 (minor)\" (#16091)"},{"Id":"2822182586","IsPullRequest":false,"CreatedAt":"2025-01-31T00:57:01","Actor":"mattkrick","Number":"16092","RawContent":null,"Title":"v4 Regression: Keyframe animations defined in JS must be referred to using kebab case, even if defined in camelCase","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nwebpack 89.0\n\n**What version of Node.js are you using?**\n\nFor example: v20.18.1\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nProbably just a documentation issue, but can make one if helpful\n\n**Describe your issue**\n\nMy theme is defined in my config.js as follows\n\n```ts\n{\n  theme: {\n    keyframes: {\n      slideUp: {\n        from: {opacity: 0, transform: 'translate(-50%, -50%) translateY(32px) scale(0.96)'}\n      }\n    },\n    animation: {\n      slideUp: 'slideUp 200ms cubic-bezier(0, 0, 0.2, 1)',\n    }\n  }\n} \n```\n\nMy legacy code references it using the name as defined, in camelCase:\n\n```html\n<div className='animate-slideUp'></div> // worked in v3. doesn't work in v4!\n<div className='animate-slide-up'></div> // works in v4!\n```\n\nI'm OK if this is working as intended, but it was a surprise when all my animations broke.\nI suggest documenting it in the upgrade guide & maybe adding the rename codemod to the migrator so it doesn't surprise others.\n\nThank you so much for what you do ❤ ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16092","RelatedDescription":"Open issue \"v4 Regression: Keyframe animations defined in JS must be referred to using kebab case, even if defined in camelCase\" (#16092)"},{"Id":"2821947490","IsPullRequest":true,"CreatedAt":"2025-01-30T22:33:42","Actor":"lifeiscontent","Number":"16089","RawContent":null,"Title":"add user-invalid and user-valid static variants","State":"closed","Body":"Update variants.ts\r\n\r\n<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16089","RelatedDescription":"Closed or merged PR \"add user-invalid and user-valid static variants\" (#16089)"},{"Id":"2821510934","IsPullRequest":false,"CreatedAt":"2025-01-30T18:53:46","Actor":"Bogatovmi","Number":"16080","RawContent":null,"Title":"[v4] bg-(<custom-property>) for backgorund-image generate background-color property","State":"closed","Body":"**bg-(--icon-caret-down) class generate background-color property for me**\n\n![Image](https://github.com/user-attachments/assets/41794e65-1d90-4272-b45f-d2d5f963943a)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16080","RelatedDescription":"Closed issue \"[v4] bg-(<custom-property>) for backgorund-image generate background-color property\" (#16080)"},{"Id":"2821456646","IsPullRequest":false,"CreatedAt":"2025-01-30T18:50:38","Actor":"arkhaiel","Number":"16079","RawContent":null,"Title":"Compatibility issues with not-so-old browsers","State":"closed","Body":"Thanks a lot for this amazing v4 release ! I use Nuxt UI which uses Tailwind v4 and it's a pleasure to use these new amazing features. Still, I spotted a problem with the `ring` class on 1-2 years old firefox, which is not so old and which may be adressed.\nCheers from France ! \n\n---\n\n**What version of Tailwind CSS are you using?**\n\nFrom the official docs, I guess it's Tailwind v4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nI don't know, it's the tool you use for your docs (but I encountered the problem with Nuxt / Nuxt UI which uses Vite)\n\n**What version of Node.js are you using?**\n\nIt's your website.\n\n**What browser are you using?**\n\nFirefox v.114\n\n**What operating system are you using?**\n\nThe problem has been spotted on Windows, and I reproduce it on macOS\n\n**Reproduction URL**\n\nhttps://tailwindcss.com/docs/box-shadow#adding-a-ring\n\n**Describe your issue**\n\nThe `ring` class has problems : rings don't show at all. I encountered the problem because I use Nuxt UI on my website, and Nuxt UI uses Tailwind v4. Users reported me they don't see the rings on my website. The version of firefox is 114.\n\nI don't know if the problem is wider or if it's just on the `ring` class.\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16079","RelatedDescription":"Closed issue \"Compatibility issues with not-so-old browsers\" (#16079)"},{"Id":"2821527350","IsPullRequest":false,"CreatedAt":"2025-01-30T18:24:56","Actor":"paulomotta-cc","Number":"16081","RawContent":null,"Title":"This part is broken on mobile, I'm just warning you because I love this tool","State":"closed","Body":"![Image](https://github.com/user-attachments/assets/c9c312cf-4600-4086-884f-ebca4d4cb78d)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16081","RelatedDescription":"Closed issue \"This part is broken on mobile, I'm just warning you because I love this tool\" (#16081)"},{"Id":"2821065192","IsPullRequest":true,"CreatedAt":"2025-01-30T15:46:30","Actor":"RobinMalfait","Number":"16072","RawContent":null,"Title":"Refactor gradient implementation to work around prettier/prettier#17058","State":"closed","Body":"This PR fixes an issue where tools like Prettier remove important trailing commas in CSS variables, making gradients invalid.\r\n\r\nWe encoded the `,` in the `--tw-gradient-position` to ensure that _if_ the `var(--tw-gradient-position)` is used, that the `,` was there. And if the variable was _not_ used that we didn't end up with a double `,,` rendering the gradient invalid.\r\n\r\nHowever, when running Prettier (there might be other tools that do this as well), the trailing comma in the `--tw-gradient-position` was removed which made the entire gradient invalid. E.g.:\r\n```diff\r\n  .bg-gradient-to-r {\r\n-   --tw-gradient-position: to right in oklab,;\r\n+   --tw-gradient-position: to right in oklab;\r\n    background-image: linear-gradient(var(--tw-gradient-stops));\r\n  }\r\n```\r\nNotice how the `,` is removed.\r\n\r\nThis PR fixes that, by moving the `,` to where the variable is being used. The only side effect is that we have to guarantee that the `--tw-gradient-position` is always present. In our testing (and using UI tests) this should be the case.\r\n\r\nRelated Prettier issue: https://github.com/prettier/prettier/issues/17058\r\n\r\nFixes: #16037\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16072","RelatedDescription":"Closed or merged PR \"Refactor gradient implementation to work around prettier/prettier#17058\" (#16072)"},{"Id":"2821128144","IsPullRequest":false,"CreatedAt":"2025-01-30T15:32:02","Actor":"frederikhors","Number":"16073","RawContent":null,"Title":"v4: `md:gap-y-8` and custom classes","State":"closed","Body":"With Tailwind 3 this works:\n\n```css\n.custom {\n    @apply grid gap-6;\n}\n```\n\n```html\n<div class=\"custom md:gap-y-8\">\n```\n\nWith Tailwind 4.0.1 the `md:gap-y-8` doesn't work, but it works if I use `!`, why?\n\n- app.css:\n\n```css\n@import 'tailwindcss';\n\n.custom {\n    @apply grid gap-6;\n}\n```\n\n```html\n<div class=\"custom md:gap-y-8!\">\n```\n\nI'm using vite config with this:\n\n```js\nimport tailwindcss from '@tailwindcss/vite';\n\nexport default defineConfig(({ mode }) => {\n    return {\n        plugins: [sveltekit(), tailwindcss()],\n    }\n});\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16073","RelatedDescription":"Closed issue \"v4: `md:gap-y-8` and custom classes\" (#16073)"},{"Id":"2821000661","IsPullRequest":false,"CreatedAt":"2025-01-30T14:57:20","Actor":"kefranabg","Number":"16068","RawContent":null,"Title":"[v4] dark variant doesn't apply style properly in some cases","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.1\n\n**What version of Node.js are you using?**\n\nv22.1\n\n**What browser are you using?**\n\nAll major browsers\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nBug reproduction (v4.0.1): https://play.tailwindcss.com/qtyHMLpV36\n\nExpected (v3.4.17): https://play.tailwindcss.com/0TVYfNUrcC  \n\n**Describe your issue**\n\nPreviously in v3.4.17, we were able to force a style in dark mode with `dark:` for a tailwind class that was overloaded in base css file.\n\nYou can easily see the issue with the reproduction links (Make sure you've dark mode enabled): with the v4.0.1 play link the text appears yellow, but should be blue because of the `dark:text-blue-900` as you can seen on the v3.4.17 play link. But it's displayed in yellow because of the following in css file:\n\n```\n@media (prefers-color-scheme: dark) {\n  .text-black {\n    color: yellow;\n  }\n}\n```\n\nBoth css and html are similar in the 2 versions. ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16068","RelatedDescription":"Closed issue \"[v4] dark variant doesn't apply style properly in some cases\" (#16068)"},{"Id":"2820929451","IsPullRequest":false,"CreatedAt":"2025-01-30T14:30:59","Actor":"nikomuse","Number":"16065","RawContent":null,"Title":"PostCSS not working anymore with Standalone CLI v4","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\nv4.0.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\nTailwind standalone CLI\n\n**What version of Node.js are you using?**\nNone\n\n**What browser are you using?**\nNo browser : CLI\n\n**What operating system are you using?**\nMac OS 14.5\n\n**Reproduction URL**\n./tailwindcss-macos-x64 -i app-v4.css -o app.built.css --postcss ./postcss.config.js\n\nWith `postcss.config.js` content : \n```\nmodule.exports = {\n  plugins: [\n    {\n      postcssPlugin: 'dummy',\n      Once (root) {\n        root.append('.dummy {}')\n      },\n    },\n  ],\n}\n```\n\n**Describe your issue**\n\nThe `.dummy {}` content should be in the app.built.css but it doesn't work. It seems that PostCSS argument is useless. I noticed that PostCSS reference was removed in [the standalone repo](https://github.com/tailwindlabs/tailwindcss/tree/main/packages/%40tailwindcss-standalone).","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16065","RelatedDescription":"Closed issue \"PostCSS not working anymore with Standalone CLI v4\" (#16065)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-02-01T03:30:24.737559Z","RunDurationInMilliseconds":464}