{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2229856109","IsPullRequest":true,"CreatedAt":"2024-04-10T01:04:58","Actor":"barvian","Number":"13469","RawContent":null,"Title":"[v4] Switch default breakpoints to rem","State":"closed","Body":"This was seemingly considered/planned for v4 (mentioned by @adamwathan in https://github.com/tailwindlabs/tailwindcss/discussions/8378), but I didn't see it in the codebase. Feel free to delete this PR if plans changed! I used `rem` instead of `em` because the functionality seems to be the same, and it's consistent with the spacing and type scales.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13469","RelatedDescription":"Closed or merged PR \"[v4] Switch default breakpoints to rem\" (#13469)"},{"Id":"2234089587","IsPullRequest":true,"CreatedAt":"2024-04-09T18:55:54","Actor":"RobinMalfait","Number":"13487","RawContent":null,"Title":"4.0.0-alpha.14","State":"closed","Body":"This PR preps the `4.0.0-alpha.14` release.\n<!--\n\n👋 Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13487","RelatedDescription":"Closed or merged PR \"4.0.0-alpha.14\" (#13487)"},{"Id":"2228527782","IsPullRequest":true,"CreatedAt":"2024-04-09T16:59:09","Actor":"adamwathan","Number":"13459","RawContent":null,"Title":"Don't accommodate hidden elements in space/divide","State":"closed","Body":"This PR changes the implementation of the `space-*` and `divide-*` utilities to use a different selector, and apply the \"between\" styling to the first/left element instead of the last/right element:\r\n\r\n```diff\r\n- .space-y-4 > :not([hidden]) ~ :not([hidden]) {\r\n+ .space-y-4 > :not(:last-child) {\r\n-   margin-top: 1rem;\r\n+   margin-bottom: 1rem;\r\n  }\r\n```\r\n\r\nThis is a small breaking change, specifically when the very last child of an element has the `hidden` attribute:\r\n\r\n```html\r\n<ul class=\"space-y-4\">\r\n  <li>One</li>\r\n  <li>Two</li>\r\n  <li>Three</li>\r\n  <li hidden>Hidden</li>\r\n</ul>\r\n```\r\n\r\nPrior to this PR, the \"Three\" element would have no space below it, but with this new implementation it does. I suspect this change will impact almost nobody though, because in all of the real-world scenarios I've explored, hidden elements are never the very last element. They are almost always the very first element, or first few elements, and in those situations this new implementation has the same behavior as the old implementation.\r\n\r\n## Motivation\r\n\r\nThe \"between\" styling that we do with `space-*` and `divide-*` is most commonly achieved in CSS with the \"lobotomized owl selector\", like this:\r\n\r\n```css\r\n.space-y-4 > * + * {\r\n  margin-top: 1rem;\r\n}\r\n```\r\n\r\nOur implementation in Tailwind though has always used selectors that look like this:\r\n\r\n```css\r\n.space-y-4 > :not([hidden]) ~ :not([hidden]) {\r\n  margin-top: 1rem;\r\n}\r\n```\r\n\r\nPretty much the only reason we did this was so that you could use these utilities with [`x-for` in Alpine.js](https://alpinejs.dev/directives/for)\r\n\r\n```html\r\n<ul class=\"space-y-4\" x-data=\"{ colors: ['Red', 'Orange', 'Yellow'] }\">\r\n  <template x-for=\"color in colors\">\r\n    <li x-text=\"color\"></li>\r\n  </template>\r\n</ul>\r\n```\r\n\r\nAlpine leaves that `<template>` tag in the DOM, which means the first `<li>` is actually the second child of the `<ul>`, and receives the \"between\" styling even when it shouldn't:\r\n\r\nhttps://play.tailwindcss.com/7q6MiKZnRg\r\n\r\nBy using the implementation we've used up until now, Alpine users could throw the `hidden` attribute on their `<template>` element and now the \"between\" styling would only show up where it's supposed to:\r\n\r\nhttps://play.tailwindcss.com/p6ZGpSw1zt\r\n\r\nThe problem is on pages with a lot of DOM nodes, the selector we use is _fucking_ slow 😄\r\n\r\nhttps://twitter.com/cramforce/status/1774847095171862943\r\n\r\n![image](https://github.com/tailwindlabs/tailwindcss/assets/4323180/2e7c3f55-d475-41ef-9029-60102861d65b)\r\n\r\nIt's not just \"technically slow but you can't actually tell because it's still fast\" either — if you have a really big list or table or something it's very, very noticeable:\r\n\r\nhttps://github.com/tailwindlabs/tailwindcss/discussions/13445\r\n\r\nThe new implementation introduced in this PR is almost 2000x faster, getting things back down to \"feels as fast as any other normal selector\" speeds.\r\n\r\nOne nice benefit of the new implementation is that you don't need to use the `hidden` attribute on `template` tags anymore — the \"between\" styling just works as expected without it because the `template` tag is receiving a `margin-bottom` for example but the entire element is hidden so that margin isn't actually rendered in the browser anyways.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13459","RelatedDescription":"Closed or merged PR \"Don't accommodate hidden elements in space/divide\" (#13459)"},{"Id":"2232317369","IsPullRequest":true,"CreatedAt":"2024-04-09T15:37:56","Actor":"RobinMalfait","Number":"13478","RawContent":null,"Title":"Invert variant order application","State":"closed","Body":"This PR can be a breaking change, but it will make the order of variants more intuitive. Instead of applying the variants \"inside-out\", they will be applied \"left-to-right\".\r\n\r\nWhat is affected:\r\n\r\n- Utilities with multiple variants, where the order matters.\r\n\r\n  E.g.: In combination with pseudo elements:\r\n\r\n  - `before:hover:flex` — This means: \"when the before pseudo element is hovered, apply flex\". This doesn't work in CSS.\r\n  - `hover:before:flex` — This means: \"when the element is hovered, apply flex to the before pseudo element\".\r\n\r\n  E.g.: Variants that rely on another class in the selector. This will now change the order of the classes.\r\n\r\n  - `*:first:underline`\r\n    ```\r\n    *:first:underline\r\n      ^^^^^ first child `&:first-child`\r\n    ^       Child selector `& > *`\r\n    ```\r\n\r\n    - Previous behavior:  \"when the current element is the first child, add an underline to all its direct children\"\r\n      E.g.: `.foo:first-child > *`\r\n    - New behavior: \"add an underline to the first child of the current element\"\r\n      E.g.: `.foo > *:first-child`\r\n\r\nWhat's not affected:\r\n\r\n- Utilities used without variants. E.g.: `flex`\r\n- Utilities used with a single variant. E.g.: `hover:flex`\r\n- Utilities used with multiple variants, but where the order doesn't matter. E.g.: `hover:focus:flex`\r\n\r\n<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13478","RelatedDescription":"Closed or merged PR \"Invert variant order application\" (#13478)"},{"Id":"2232890193","IsPullRequest":false,"CreatedAt":"2024-04-09T09:34:25","Actor":"Simon-He95","Number":"13479","RawContent":null,"Title":"feat: text-shadow","State":"closed","Body":"Is there any plan to add the use of text-shadow?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13479","RelatedDescription":"Closed issue \"feat: text-shadow\" (#13479)"},{"Id":"2233002347","IsPullRequest":true,"CreatedAt":"2024-04-09T09:32:18","Actor":"Fariba-shamseh","Number":"13480","RawContent":null,"Title":"Update README.md","State":"closed","Body":"updated conti to contiton\r\n\r\n<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13480","RelatedDescription":"Closed or merged PR \"Update README.md\" (#13480)"},{"Id":"2233008427","IsPullRequest":true,"CreatedAt":"2024-04-09T09:31:11","Actor":"Fariba-shamseh","Number":"13481","RawContent":null,"Title":"change nnn","State":"closed","Body":"change to coimnonnnn\r\n\r\n<!--\r\nhi iam learnin\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13481","RelatedDescription":"Closed or merged PR \"change nnn\" (#13481)"},{"Id":"2230852581","IsPullRequest":false,"CreatedAt":"2024-04-08T23:08:28","Actor":"brandonmcconnell","Number":"13475","RawContent":null,"Title":"Vendor prefix not being applied for `backdrop-filter`, using CLI tool","State":"closed","Body":"## What version of Tailwind CSS are you using?\r\n\r\nv3.4.3\r\n\r\n## What browser are you using?\r\n\r\nChrome v123.0.6312.107 (Official Build) (arm64)\r\nSafari v17.4.1 (19618.1.15.11.14)\r\n\r\n## What operating system are you using?\r\n\r\nmacOS Sonoma v14.4.1 (23E224)\r\n\r\n## Reproduction URL\r\n\r\nhttps://play.tailwindcss.com/gO656Xsgjh\r\n\r\n## Describe your issue\r\n\r\nThe [documentation states](https://tailwindcss.com/docs/browser-support#vendor-prefixes) that \"If you’re using the Tailwind CLI tool, vendor prefixes like this will be added automatically.\"\r\n\r\nHowever, in the case of `backdrop-filter`, the needed `webkit` filter does not appear to get applied, preventing Safari from blurring the backdrop.\r\n\r\n| Chrome | Safari |\r\n|--------|--------|\r\n| ![](https://github.com/tailwindlabs/tailwindcss/assets/5913254/087ab04c-4582-4b9e-ab76-d32ec19155cc) | ![](https://github.com/tailwindlabs/tailwindcss/assets/5913254/2dd56697-36c1-4ce6-a4ca-5780b2d45541) | \r\n\r\nIn this example below, I add the vendor-prefixed style, and you can see the blur take effect:\r\nhttps://play.tailwindcss.com/6KUJEBtoue\r\n\r\n![](https://github.com/tailwindlabs/tailwindcss/assets/5913254/694af0ce-4bb9-401b-8aa7-c07246be56be)\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13475","RelatedDescription":"Closed issue \"Vendor prefix not being applied for `backdrop-filter`, using CLI tool\" (#13475)"},{"Id":"2224323724","IsPullRequest":false,"CreatedAt":"2024-04-08T22:10:10","Actor":"Brian-Pob","Number":"13441","RawContent":null,"Title":"[v4] Styles not being generated on project build","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n## Environment\r\n\r\n```\r\nAstro                    v4.5.15\r\nNode                     v18.17.1\r\nSystem                   macOS (arm64)\r\nPackage Manager          bun\r\nOutput                   static\r\nAdapter                  none\r\nIntegrations             @astrojs/svelte\r\n\r\ntailwindcss             v4.0.0-alpha.11\r\n@tailwindcss/vite       v4.0.0-alpha.11\r\n```\r\nCan also reproduce the issue with using npm instead of bun.\r\n\r\n**Reproduction URL**\r\n\r\nRepo: https://github.com/Brian-Pob/tailwind-v4-vite/tree/alpha-11-bug\r\n\r\nVercel deploy preview: https://tailwind-v4-vite-git-alpha-11-bug-brian-pobletes-projects.vercel.app/?_vercel_share=HBCiq51fIy1xjh2hdYtOnZrineQnVvSn\r\n\r\nVercel working deploy: https://tailwind-v4-vite.vercel.app/\r\n\r\n**Describe your issue**\r\n\r\nOutcome\r\n\r\nRunning `bun run build` does not generate Tailwind styles. The build process completes successfully but the styles are not applied to the output.\r\n\r\n![alpha 11 bug](https://github.com/Brian-Pob/tailwind-v4-vite/raw/alpha-11-bug/alpha-11-bug.png)\r\n\r\nExpected outcome\r\n\r\nRunning `bun run build` should generate Tailwind styles and apply them to the output.\r\n\r\nUsing Tailwind `4.0.0-alpha.10` with same versions for every other package produces the expected outcome.\r\n\r\n## Steps to Reproduce\r\n1. Clone this branch of the repository.\r\n2. Ensure Tailwind version is `v4.0.0-alpha.11`. Same for `@tailwindcss/vite`.\r\n3. Run `bun install`.\r\n4. Run `bun run build` and `bun run preview`.\r\n5. Open the preview URL in the browser.\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13441","RelatedDescription":"Closed issue \"[v4] Styles not being generated on project build\" (#13441)"},{"Id":"2227992881","IsPullRequest":true,"CreatedAt":"2024-04-08T22:10:09","Actor":"RobinMalfait","Number":"13457","RawContent":null,"Title":"Ensure deterministic SSR builds in `@tailwindcss/vite`","State":"closed","Body":"This PR fixes an issue where running `astro build` doesn't generate the correct CSS when using `@tailwindcss/vite`. This issue only seems to happen when running a build, and not when running in `dev` mode.\n\nTo fix this, we apply the same code (`waitForRequestsIdle`) as we do in the `apply: \"server\"` step.\n\nAdding this to the `apply: \"build\"` step as well does generate the correct result.\n\nWhile this does fix the issue, I'm not 100% convinced that this is the correct solution /cc @thecrypticace.\n\nFixes: #13441\n\n<!--\n\n👋 Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13457","RelatedDescription":"Closed or merged PR \"Ensure deterministic SSR builds in `@tailwindcss/vite`\" (#13457)"},{"Id":"2230450898","IsPullRequest":false,"CreatedAt":"2024-04-08T07:19:28","Actor":"brandonmcconnell","Number":"13473","RawContent":null,"Title":"Breaking changes in plugins potentially caused by parser changes","State":"open","Body":"## What version of Tailwind CSS are you using?\r\n\r\nv3.4.3\r\n\r\n## What browser are you using?\r\n\r\nChrome v123.0.6312.107 (Official Build) (arm64)\r\n\r\n## What operating system are you using?\r\n\r\nmacOS Sonoma v14.4.1 (23E224)\r\n\r\n## Reproduction URL\r\n\r\n* for MultiTool for Tailwind CSS: https://play.tailwindcss.com/T6ELlblWLw\r\n* for JS Tool for Tailwind CSS: https://play.tailwindcss.com/ZID1xrVAra\r\n\r\n## Describe your issue\r\n\r\nI was auditing some of the plugins in my growing collection of plugins I've developed for the Tailwind CSS community this past week, and a couple of them appear to now break due to what I perceive to be changes in the way the parser handles arbitrary values in plugins.\r\n\r\nAffected plugins:\r\n\r\n### 1. MultiTool for Tailwind CSS ([github](https://github.com/brandonmcconnell/tailwindcss-multitool) | [npm](https://www.npmjs.com/package/tailwindcss-multitool))\r\n\r\nMy MultiTool for Tailwind CSS plugin breaks when it contains a string including the `:` symbol, likely due to the parser terminating/splitting variants when it encounters the `:` symbol.\r\n\r\nI've done some testing, and this doesn't appear to be something my plugin can account for internally. If you look at the reproduction URL linked above ([also here](https://play.tailwindcss.com/T6ELlblWLw)), the first two lines receive the expected styles, but the last breaks entirely if it contains that character.\r\n\r\nThe problematic instances (those that contain `:`) don't appear to trigger the plugin and are likely seen as erroneous since, assuming my guesses here are correct, a usage like `multi-[underline;hover:font-bold]` would be split into `:multi-[underline;hover` and `font-bold]`.\r\n\r\nWith some slight tweaking to the parser, values could whitelist any instances of `:` within brackets.\r\n* current: `'a:b:[c:d]:e'` ➞ `['a', 'b', '[c', 'd]', 'e']`\r\n* desired: `'a:b:[c:d]:e'` ➞ `['a', 'b', '[c:d]', 'e']`\r\n\r\nIt's also important to note here that this was not always the case, or at least I am convinced it is not, as I include this example in the plugin's README, which worked when I tested it before including it in the README:\r\n\r\n```html\r\n<div class=\"sm:[&>div]:hover:active:multi-[font-bold;text-[red];[font-family:'Open_Sans',sans-serif]]\">\r\n  When hovered, this text will appear bold, red, and in Open Sans font.\r\n</div>\r\n```\r\n\r\nEven a more `:`-riddled nested variant should be perfectly fine:\r\n\r\n```html\r\n<div class=\"hover:multi-[[&:is(*)]:focus:underline;[--some-var:{whatever}]]\">…</div>\r\n```\r\n\r\n### 2. JS Tool for Tailwind CSS ([github](https://github.com/brandonmcconnell/tailwindcss-jstool) | [npm](https://www.npmjs.com/package/tailwindcss-jstool))\r\n\r\nWithout rehashing many of the same points I did above, if you take a look at this Tailwind Play example linked above ([also here](https://play.tailwindcss.com/ZID1xrVAra)), you'll see many examples I use to showcase how JS can expose specific values to Tailwind CSS using plugins. Admittedly, I seldom use this one, but it is nice sometimes when I need to break glass and expose JSON values to CSS while testing. I could expose them as CSS variables alternatively, but it's helpful to have some means to directly interface with raw data like this, even if only used on occasion.\r\n\r\nHere are those same examples from the linked Tailwind Play example, all of which previously worked:\r\n```html\r\n<div class=\"before:js-[content-['fontSize.2xl_===_#{theme('fontSize.2xl')}']]\"></div>\r\n<div class=\"before:js-[content-['the_registered_config_keys_are_#{Object.keys(config()).join(',_')}']]\"></div>\r\n<div class=\"before:js-[content-['A_random_digit_is_#{randomDigit()}']]\"></div>\r\n<div class=\"js-[[--random-color:#{randomColor()}]] js-[[--random-color-2:#{randomColor()}]] text-[--random-color] font-semibold [text-shadow:1px_2px_0_var(--random-color-2)]\">Random_colors_ftw!</div>\r\n<div class=\"js-[[--random-length:#{randomRange(16,22)}px]] text-[length:--random-length]\">Random sizes too 🤯</div>\r\n```\r\n\r\n---\r\n\r\nIn both of these examples, I'm primarily addressing how these regressions limit plugin authors from achieving some of the powerful tasks plugins were formerly able to perform.\r\n\r\nBoth of these plugins may seem to operate unconventionally, but that's why they're plugins. This is part of what excites a community like this one—testing the limits of a technology like Tailwind CSS, finding various ways it can be extended to achieve different tasks, and ultimately building within those limits to make someone else's work easier.\r\n\r\nI've heard from real users of my plugins how my tools have improved their experience building with Tailwind CSS, and I would hate to discontinue some of them due to breaking changes.\r\n\r\nEven this past week, I've been prepping content for a blog post or video—perhaps both—on the powerful ways Tailwind CSS plugins supercharge the developer experience, demonstrating examples and providing a crash course on how to build effective plugins.\r\n\r\n\"The power of JavaScript in the simple and familiar form factor of Tailwind CSS utilities.\" (still bikeshedding the name)\r\n\r\nBecause many people primarily associate Tailwind CSS with CSS (for obvious reasons), they miss that with plugins, we can interject all sorts of sophisticated and useful functionality into our utilities. Plugins are essentially middleware that allow us to bridge the parser/compiler to our frontend in dynamic and performant ways, leveraging build-time processing.\r\n\r\nMany things that are not yet possible in pure CSS **_are_** possible with Tailwind CSS because of this JS processing, so it acts more like mixins and functions than just variable interpolation.\r\n\r\nThat said, it would be helpful to use examples like these to demonstrate the flexibility of Tailwind CSS plugins. Thanks!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13473","RelatedDescription":"Open issue \"Breaking changes in plugins potentially caused by parser changes\" (#13473)"},{"Id":"2229853823","IsPullRequest":true,"CreatedAt":"2024-04-07T17:05:56","Actor":"barvian","Number":"13468","RawContent":null,"Title":"Switch breakpoints to rem","State":"closed","Body":"This was seemingly planned for v4 (mentioned by @adamwathan in #8378), but I didn't see it in the codebase. Feel free to delete this PR if plans changed! I used `rem` instead of `em` because the functionality seems to be the same, and it's more consistent with the spacing and type scales.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13468","RelatedDescription":"Closed or merged PR \"Switch breakpoints to rem\" (#13468)"},{"Id":"2229804922","IsPullRequest":false,"CreatedAt":"2024-04-07T14:51:27","Actor":"herzaso","Number":"13465","RawContent":null,"Title":"group not working in conjunction to data selectors?","State":"open","Body":"Version 3.4.3\r\nReproduction URL: https://play.tailwindcss.com/5PGfLBp9gF\r\n(Move focus with TAB and notice that the background color doesn't change. If you remove either the `group-focus` or the `data` selector it does work)\r\n\r\nAm I doing something wrong?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13465","RelatedDescription":"Open issue \"group not working in conjunction to data selectors?\" (#13465)"},{"Id":"2228220250","IsPullRequest":false,"CreatedAt":"2024-04-05T15:05:26","Actor":"The-Code-Monkey","Number":"13458","RawContent":null,"Title":"[V4] - @keyframes not being hoisted into built css","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n4.0.0-alpha.13\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nTailwindcss/cli\r\n\r\n**What version of Node.js are you using?**\r\n\r\nNot using node using bun\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nMAC\r\n\r\n**Reproduction URL**\r\n\r\n[repoduction](https://codesandbox.io/p/devbox/trusting-black-rwpl6n?layout=%257B%2522sidebarPanel%2522%253A%2522EXPLORER%2522%252C%2522rootPanelGroup%2522%253A%257B%2522direction%2522%253A%2522horizontal%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522id%2522%253A%2522ROOT_LAYOUT%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522clums4zgt00083b6iav5neh6g%2522%252C%2522sizes%2522%253A%255B70%252C30%255D%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522EDITOR%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522id%2522%253A%2522clums4zgt00033b6iszuw4zz0%2522%257D%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522SHELLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522id%2522%253A%2522clums4zgt00063b6i2me8z3l6%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522DEVTOOLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522id%2522%253A%2522clums4zgt00073b6iisvv707h%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%255D%252C%2522sizes%2522%253A%255B50%252C50%255D%257D%252C%2522tabbedPanels%2522%253A%257B%2522clums4zgt00033b6iszuw4zz0%2522%253A%257B%2522id%2522%253A%2522clums4zgt00033b6iszuw4zz0%2522%252C%2522tabs%2522%253A%255B%255D%257D%252C%2522clums4zgt00073b6iisvv707h%2522%253A%257B%2522id%2522%253A%2522clums4zgt00073b6iisvv707h%2522%252C%2522activeTabId%2522%253A%2522clums5g10001y3b6ixpz7muvr%2522%252C%2522tabs%2522%253A%255B%257B%2522type%2522%253A%2522UNASSIGNED_PORT%2522%252C%2522port%2522%253A5173%252C%2522id%2522%253A%2522clums5g10001y3b6ixpz7muvr%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522path%2522%253A%2522%252F%2522%257D%255D%257D%252C%2522clums4zgt00063b6i2me8z3l6%2522%253A%257B%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clums4zgt00043b6in3qal21y%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522TASK_LOG%2522%252C%2522taskId%2522%253A%2522dev%2522%257D%252C%257B%2522id%2522%253A%2522clums4zgt00053b6ixr07cfg7%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522TERMINAL%2522%252C%2522shellId%2522%253A%2522clthehtu2004tdijpdg4g358j%2522%257D%255D%252C%2522id%2522%253A%2522clums4zgt00063b6i2me8z3l6%2522%252C%2522activeTabId%2522%253A%2522clums4zgt00043b6in3qal21y%2522%257D%257D%252C%2522showDevtools%2522%253Atrue%252C%2522showShells%2522%253Atrue%252C%2522showSidebar%2522%253Atrue%252C%2522sidebarPanelSize%2522%253A15%257D)\r\n\r\n**Describe your issue**\r\n\r\nThe keyframe value should be put into the css but it isnt being","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13458","RelatedDescription":"Closed issue \"[V4] - @keyframes not being hoisted into built css\" (#13458)"},{"Id":"2227174311","IsPullRequest":false,"CreatedAt":"2024-04-05T10:13:34","Actor":"mohammadhosseinmoradi","Number":"13453","RawContent":null,"Title":"Add group values to Tailwind CSS","State":"closed","Body":"Hi there,\r\n\r\nI hope this message finds you well. I've been thoroughly enjoying using the Tailwind CSS library for my projects, and I recently came across a couple of points I'd like to bring to your attention.\r\n\r\nTailwind utility classes sometimes is very verbose like this situation:\r\n\r\n```\r\n\"group-focus-within/text-field:text-xs\",\r\n\"[label.group:has(input:not(:placeholder-shown))_&]:text-xs\",\r\n\"group-focus-within/text-field:start-4\",\r\n\"[label.group:has(input:not(:placeholder-shown))_&]:start-4\",\r\n\"group-focus-within/text-field:top-0\",\r\n\"[label.group:has(input:not(:placeholder-shown))_&]:top-0\",\r\n```\r\n\r\nIt would be great if you add ability to group values something like below:\r\n\r\n```\r\n\"group-focus-within/text-field:text-xs_start-4_top-0\",\r\n\"[label.group:has(input:not(:placeholder-shown))_&]:text-xs_start-4_top-0\",\r\n```\r\n\r\nThank you for your continuous efforts in maintaining and improving the Tailwind CSS library. I appreciate your time and consideration.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13453","RelatedDescription":"Closed issue \"Add group values to Tailwind CSS\" (#13453)"},{"Id":"2226653179","IsPullRequest":false,"CreatedAt":"2024-04-05T01:22:45","Actor":"brandonmcconnell","Number":"13450","RawContent":null,"Title":"Shadow does not apply when size is instantiated on hover","State":"closed","Body":"### What version of Tailwind CSS are you using?\r\n\r\nv3.4.3\r\n\r\n### What browser are you using?\r\n\r\nChrome v123.0.6312.87 (Official Build) (arm64)\r\n\r\n### What operating system are you using?\r\n\r\nmacOS Sonoma v14.4\r\n\r\n### Reproduction URL\r\n\r\nhttps://play.tailwindcss.com/jngJ1mOTKS\r\n\r\n### Describe your issue\r\n\r\nChanging the size of a shadow does not reveal the shadow if its size is instantiated on hover. My workaround was to show the shadow by default without a variant and hide it when it's not being hovered using a `:not` pseudo selector.\r\n\r\nThis bug appears to be easily reproducible.\r\n\r\nI demonstrate the issue on this Loom as well:\r\nhttps://www.loom.com/share/585482a718584525a1f3fae5c1a1c4f9?sid=d329fa46-54b6-4811-aa76-93b3053249fa","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13450","RelatedDescription":"Closed issue \"Shadow does not apply when size is instantiated on hover\" (#13450)"},{"Id":"2223851212","IsPullRequest":false,"CreatedAt":"2024-04-04T22:01:38","Actor":"alexhtech","Number":"13438","RawContent":null,"Title":"[V4] Box Shadow Color doesn't work","State":"closed","Body":"\r\n**What version of Tailwind CSS are you using?**\r\n\r\nFor example: 4.0.0-alpha.11\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nnextjs@14\r\n\r\n**What version of Node.js are you using?**\r\n\r\nFor example: v21.7.1\r\n\r\n**What browser are you using?**\r\n\r\nFor example: Chrome\r\n\r\n**What operating system are you using?**\r\n\r\nFor example: macOS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://github.com/alexhtech/tailwindcss4-test\r\n\r\n**Describe your issue**\r\n\r\n`<div className=\"h-20 w-20 shadow-xl shadow-red-500\" />` - color isn't applied it tends to be `rgba(0,0,0, 0.1)`","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13438","RelatedDescription":"Closed issue \"[V4] Box Shadow Color doesn't work\" (#13438)"},{"Id":"2226180798","IsPullRequest":true,"CreatedAt":"2024-04-04T22:01:37","Actor":"adamwathan","Number":"13449","RawContent":null,"Title":"Don't read variables for shadow sizes","State":"closed","Body":"Resolves https://github.com/tailwindlabs/tailwindcss/issues/13438\r\n\r\nIn https://github.com/tailwindlabs/tailwindcss/pull/13177 we changed the way utility values are referenced in utility classes to use variables with fallbacks instead of raw values:\r\n\r\n```diff\r\n  .pt-4 {\r\n-   padding-top: 1rem;\r\n+   padding-top: var(--spacing-4, 1rem);\r\n  }\r\n```\r\n\r\nThis creates an issue with colored shadows, because colored shadows rely on being able to override the value of a sub-variable that is reference by the actual shadow variable created based on your theme configuration.\r\n\r\nSimplified but representative code:\r\n\r\n```css\r\n:root {\r\n  --shadow-sm: 0 1px 2px 0 var(--tw-shadow-color, black);\r\n}\r\n\r\n.shadow-sm {\r\n  box-shadow: var(--shadow-sm, 0 1px 2px 0 var(--tw-shadow-color, black));\r\n}\r\n\r\n.shadow-blue {\r\n  --tw-shadow-color: blue;\r\n}\r\n```\r\n\r\nThe problem here is that `var(--shadow-sm, ...)` will see that `--shadow-sm` is defined on `:root`, and use the computed value of that variable from `:root`, where `--tw-shadow-color` is yet to be defined, so the color falls back to `black` even when using the `shadow-blue` utility:\r\n\r\n```html\r\n<!-- Shadow is still black, not blue like you might expect -->\r\n<div class=\"shadow-sm shadow-blue\">\r\n  <!-- ... -->\r\n</div>\r\n```\r\n\r\nThis caught me by surprise personally as I expected CSS variables to be evaluated lazily but it seems like they are not. The only solution I've found here is to _not_ reference the `--shadow-sm` variable in the `.shadow-sm` class, to make sure the value of `--tw-shadow-color` on the current element is respected, rather than looking for the value of `--tw-shadow-color` where `--shadow-sm` is defined:\r\n\r\n```diff\r\n  :root {\r\n    --shadow-sm: 0 1px 2px 0 var(--tw-shadow-color, black);\r\n  }\r\n  \r\n  .shadow-sm {\r\n-   box-shadow: var(--shadow-sm, 0 1px 2px 0 var(--tw-shadow-color, black));\r\n+   box-shadow: 0 1px 2px 0 var(--tw-shadow-color, black);\r\n  }\r\n  \r\n  .shadow-blue {\r\n    --tw-shadow-color: blue;\r\n  }\r\n```\r\n\r\nThis is pretty unfortunate because now our box shadow utilities behave subtly differently than every other utility in the framework. I'm hoping we can find some trick to make these variables lazily evaluated, and [tweeted about it](https://twitter.com/adamwathan/status/1775937299919859961) in case someone else out there has any ideas.\r\n\r\nFor now though we should merge this to effectively selectively revert https://github.com/tailwindlabs/tailwindcss/pull/13177 for the affected utilities.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13449","RelatedDescription":"Closed or merged PR \"Don't read variables for shadow sizes\" (#13449)"},{"Id":"2225797897","IsPullRequest":true,"CreatedAt":"2024-04-04T15:43:02","Actor":"RobinMalfait","Number":"13448","RawContent":null,"Title":"Prepare next release: `4.0.0-alpha.12`","State":"closed","Body":"This PR prepares the release of `4.0.0-alpha.12`\r\n<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13448","RelatedDescription":"Closed or merged PR \"Prepare next release: `4.0.0-alpha.12`\" (#13448)"},{"Id":"2224831735","IsPullRequest":false,"CreatedAt":"2024-04-04T11:11:31","Actor":"2eron","Number":"13444","RawContent":null,"Title":"Tailwind classes not work in mfe remote module","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n3.3.3\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nnx 18.0.0\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv18.16.0\r\n\r\n**What browser are you using?**\r\n\r\nChrome latest\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Describe your issue**\r\n\r\nMy front-end architecture is a host application and multiple remote modules, and the language is angular. Managed via nx mfe. Both the main application and the remote module use tailwindcss. The current problem is that the tailwindcss classes style does not take effect after the remote module is loaded through the main application.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13444","RelatedDescription":"Closed issue \"Tailwind classes not work in mfe remote module\" (#13444)"},{"Id":"2221980564","IsPullRequest":false,"CreatedAt":"2024-04-03T10:12:41","Actor":"jdlien","Number":"13435","RawContent":null,"Title":"In Firefox v124, some styles fail to apply due to missing fallback values for custom properties.","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n4.0.0-alpha.11\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\n@tailwindcss/cli@next\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv21.7.1\r\n\r\n**What browser are you using?**\r\n\r\nFirefox Stable v124.0.2\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://github.com/jdlien/tailwindv4-missing-custom-props\r\n\r\n\r\n**Describe your issue**\r\n\r\nIn tailwindcss 4.0.0-alpha.11, several styles are not applied in current stable builds of Firefox (v124). The ones I've noticed thus far are:\r\n\r\n- space-x utilities\r\n- border utilities\r\n\r\nThis is because Firefox v124 [does not yet support the @property rule](https://caniuse.com/mdn-css_at-rules_property), and thus several CSS custom properties are left undefined.\r\n\r\nConsequently, styles like space-x-_ and border-_ are not applied in Firefox v124.\r\n\r\nThe properties are set by Tailwind v4 like using @property rule like:\r\n\r\n```css\r\n@property --tw-space-x-reverse {\r\n  syntax: \"<number>\";\r\n  inherits: false;\r\n  initial-value: 0;\r\n}\r\n```\r\n\r\nThis currently results in code like the following that uses the undefined custom props without a fallback value:\r\n\r\n```css\r\n.space-x-8 {\r\n  :where(& > :not([hidden]) ~ :not([hidden])) {\r\n    margin-inline-end: calc(var(--spacing-8, 2rem) * var(--tw-space-x-reverse));\r\n    margin-inline-start: calc(var(--spacing-8, 2rem) * calc(1 - var(--tw-space-x-reverse)));\r\n  }\r\n}\r\n```\r\n\r\nThe most straightforward solution is to add the appropriate fallback values to the custom properties where they are used, unless there are compelling reasons not to do this, e.g., for performance or safety. For example, the above code could be modified to:\r\n\r\n```css\r\n.space-x-8 {\r\n  :where(& > :not([hidden]) ~ :not([hidden])) {\r\n    margin-inline-end: calc(var(--spacing-8, 2rem) * var(--tw-space-x-reverse, 0));\r\n    margin-inline-start: calc(var(--spacing-8, 2rem) * calc(1 - var(--tw-space-x-reverse, 0)));\r\n  }\r\n}\r\n```\r\n\r\nSee also cases where the `--tw-border-style` is used. There should also be a fallback to `solid`:\r\n\r\nCurrent:\r\n\r\n```\r\n  .border {\r\n    border-style: var(--tw-border-style);\r\n    border-width: 1px;\r\n  }\r\n```\r\n\r\nSuggested:\r\n\r\n```\r\n  .border {\r\n    border-style: var(--tw-border-style, solid);\r\n    border-width: 1px;\r\n  }\r\n```\r\n\r\nThis demo can be viewed at:\r\nhttps://jdlien.com/tailwindv4-missing-custom-props/","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13435","RelatedDescription":"Closed issue \"In Firefox v124, some styles fail to apply due to missing fallback values for custom properties.\" (#13435)"},{"Id":"2221105609","IsPullRequest":false,"CreatedAt":"2024-04-02T20:10:44","Actor":"jagthedrummer","Number":"13433","RawContent":null,"Title":"3.4.2 contains a breaking change related to `@apply`","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv3.4.2\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\npostcss 8.4.38\r\n\r\n**What version of Node.js are you using?**\r\n\r\nFor example: v20.11.1\r\n\r\n**What browser are you using?**\r\n\r\nN/A\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS, Linux\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/1igX3RZ4zc?size=540x720&file=css\r\n\r\n**Describe your issue**\r\n\r\nCSS like this works just fine in version 3.4.1:\r\n\r\n```css\r\n.button {\r\n  @apply rounded-md border border-gray-200 px-4 py-2;\r\n  @apply inline-flex items-center whitespace-nowrap;\r\n  &.button-smaller {\r\n    @apply px-3 py-1 text-xs;\r\n  }\r\n}\r\n\r\n.test-button {\r\n  @apply button;\r\n}\r\n```\r\n\r\nBut starting in 3.4.2 the build step throws this error:\r\n\r\n```\r\n/sourcePath:14:3: The `button` class cannot be used with `@apply` because `@apply`\r\n  does not currently support nested CSS. Rewrite the selector without nesting or\r\n  configure the `tailwindcss/nesting` plugin:\r\n  https://tailwindcss.com/docs/using-with-preprocessors#nesting\r\n```\r\n\r\nThe error still happens even with the `tailwindcss/nesting` plugin configured.\r\n\r\nIt looks like the new behavior was added here: https://github.com/tailwindlabs/tailwindcss/pull/13325\r\n\r\nIt's unexpected for a breaking change like this to come through on a `patch` level version bump.\r\n\r\nGiven that `tailwindcss/nesting` doesn't fix the issue, is there something else we should do to get past the failing build?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13433","RelatedDescription":"Closed issue \"3.4.2 contains a breaking change related to `@apply`\" (#13433)"},{"Id":"2219147140","IsPullRequest":true,"CreatedAt":"2024-04-02T19:35:07","Actor":"0xqd","Number":"13424","RawContent":null,"Title":"Chore refactor repeated tests","State":"closed","Body":"1. Refactor repeated tests\r\n2. Add `rust-toolchain.toml`\r\n3. Ignore .idea folder","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13424","RelatedDescription":"Closed or merged PR \"Chore refactor repeated tests\" (#13424)"},{"Id":"2220004717","IsPullRequest":false,"CreatedAt":"2024-04-02T09:48:50","Actor":"kiranaryal","Number":"13430","RawContent":null,"Title":"line clamp bug","State":"closed","Body":"![image](https://github.com/tailwindlabs/tailwindcss/assets/29688675/297da7be-4d7c-431b-8c22-e339006f0842)\r\n\r\nline-clamp-2\r\nafter 2 liness there is half line\r\n\r\nlaravel 10\r\ntailwind ^4\r\nchrome\r\n\r\n\r\nfor eg \r\ntruncate\r\n![Screenshot from 2024-04-02 15-22-53](https://github.com/tailwindlabs/tailwindcss/assets/29688675/7ce771f3-77e7-45c4-83b0-c05b6682f495)\r\n\r\nvs  line-clamp-1\r\n![Screenshot from 2024-04-02 15-24-16](https://github.com/tailwindlabs/tailwindcss/assets/29688675/ec269fab-9b4b-4cfe-ae90-05280f5a8751)\r\n\r\n\r\nsupposed to be same thing  right  line-clamp-1  and truncate\r\n\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13430","RelatedDescription":"Closed issue \"line clamp bug\" (#13430)"},{"Id":"2219525139","IsPullRequest":false,"CreatedAt":"2024-04-02T08:05:28","Actor":"ezani92","Number":"13429","RawContent":null,"Title":"Tailwind CDN page is empty","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nFor example: v2.0.4\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nFor example: postcss-cli 8.3.1, Next.js 10.0.9, webpack 5.28.0\r\n\r\n**What version of Node.js are you using?**\r\n\r\nFor example: v12.0.0\r\n\r\n**What browser are you using?**\r\n\r\nFor example: Chrome, Safari, or N/A\r\n\r\n**What operating system are you using?**\r\n\r\nMAC OS CHROME\r\n\r\n**Reproduction URL**\r\n\r\nhttps://cdn.tailwindcss.com/\r\n\r\n**Describe your issue**\r\n\r\nCDN stop working. When i visit the CDN site. it return empty instead of showing script","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13429","RelatedDescription":"Closed issue \"Tailwind CDN page is empty\" (#13429)"},{"Id":"2219126518","IsPullRequest":true,"CreatedAt":"2024-04-01T21:57:28","Actor":"0xqd","Number":"13423","RawContent":null,"Title":"Chore: refactor candidate_slicing_tests","State":"closed","Body":"This PR refactor the repeated candidate_slicing_test and add `rust-toolchain.toml` so cargo will pick the right version of rust to build the lib.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13423","RelatedDescription":"Closed or merged PR \"Chore: refactor candidate_slicing_tests\" (#13423)"},{"Id":"2218354891","IsPullRequest":false,"CreatedAt":"2024-04-01T14:41:25","Actor":"vipzhicheng","Number":"13422","RawContent":null,"Title":"safelist pattern can not find some classes but can find others","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv3.4.3\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nvite\r\n\r\n**What version of Node.js are you using?**\r\n\r\nNode v20.10\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nMacOS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/Yr6ypHh8px\r\n\r\n**Describe your issue**\r\n\r\nAs the reproduction URL says, look at the generated CSS Utilities section, you will see one pattern is correct but the other was not.\r\n\r\nActually as I tested, not just this one, but a lot of patterns are not supported for safelist.  I think they may be related.\r\n\r\n```\r\n  safelist:[\r\n    // { pattern: /!-(p|px|py|pl|pr|pt|pb|ps|pe)-([0-9]+|auto|px)$/ }, // -- not work\r\n    // { pattern: /!-(m|mx|my|ml|mr|mt|mb|ms|me)-([0-9]+|auto|px)$/ }, // -- work\r\n    // { pattern: /!(p|px|py|pl|pr|pt|pb|ps|pe)-([0-9]+|auto|px)$/ }, // -- work\r\n  ],\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13422","RelatedDescription":"Closed issue \"safelist pattern can not find some classes but can find others\" (#13422)"},{"Id":"2217563297","IsPullRequest":false,"CreatedAt":"2024-04-01T05:35:32","Actor":"sshmaxime","Number":"13419","RawContent":null,"Title":"No `Hot Reload` when importing TailwindConfig from another `tailwind.config.ts` file","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n**3.3**\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\n**Next: 14.1.0**\r\n**Postcss: 8**\r\n\r\n**What version of Node.js are you using?**\r\n\r\n**20.11.0**\r\n\r\n**What browser are you using?**\r\n\r\n**Chrome**\r\n\r\n**What operating system are you using?**\r\n\r\n**MacOS**\r\n\r\n**Reproduction URL**\r\n\r\n[Codesandbox](https://codesandbox.io/p/github/dan5py/turborepo-shadcn-ui/csb-3hx9l8/draft/cranky-smoke?file=%2Fapps%2Fdocs%2Fapp%2Fpage.tsx%3A11%2C1&layout=%257B%2522sidebarPanel%2522%253A%2522EXPLORER%2522%252C%2522rootPanelGroup%2522%253A%257B%2522direction%2522%253A%2522horizontal%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522id%2522%253A%2522ROOT_LAYOUT%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522UNKNOWN%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522clugibfd800073b6jx8nfrfx7%2522%252C%2522sizes%2522%253A%255B70%252C30%255D%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522EDITOR%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522EDITOR%2522%252C%2522id%2522%253A%2522clugibfd800023b6jz0fhb4xx%2522%257D%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522direction%2522%253A%2522horizontal%2522%252C%2522id%2522%253A%2522SHELLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522SHELLS%2522%252C%2522id%2522%253A%2522clugibfd800043b6jwxrt3s2p%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%255D%257D%252C%257B%2522type%2522%253A%2522PANEL_GROUP%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522direction%2522%253A%2522vertical%2522%252C%2522id%2522%253A%2522DEVTOOLS%2522%252C%2522panels%2522%253A%255B%257B%2522type%2522%253A%2522PANEL%2522%252C%2522contentType%2522%253A%2522DEVTOOLS%2522%252C%2522id%2522%253A%2522clugibfd800063b6jzhen1f8y%2522%257D%255D%252C%2522sizes%2522%253A%255B100%255D%257D%255D%252C%2522sizes%2522%253A%255B50%252C50%255D%257D%252C%2522tabbedPanels%2522%253A%257B%2522clugibfd800023b6jz0fhb4xx%2522%253A%257B%2522id%2522%253A%2522clugibfd800023b6jz0fhb4xx%2522%252C%2522activeTabId%2522%253A%2522clugiei0t00463b6jal7hu3th%2522%252C%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clugidn0d00023b6jtmw1hiec%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522FILE%2522%252C%2522initialSelections%2522%253A%255B%257B%2522startLineNumber%2522%253A11%252C%2522startColumn%2522%253A1%252C%2522endLineNumber%2522%253A11%252C%2522endColumn%2522%253A1%257D%255D%252C%2522filepath%2522%253A%2522%252Fapps%252Fdocs%252Fapp%252Fpage.tsx%2522%252C%2522state%2522%253A%2522IDLE%2522%257D%252C%257B%2522type%2522%253A%2522FILE%2522%252C%2522filepath%2522%253A%2522%252F.codesandbox%252Ftasks.json%2522%252C%2522id%2522%253A%2522clugiei0t00463b6jal7hu3th%2522%252C%2522mode%2522%253A%2522permanent%2522%257D%255D%257D%252C%2522clugibfd800063b6jzhen1f8y%2522%253A%257B%2522id%2522%253A%2522clugibfd800063b6jzhen1f8y%2522%252C%2522activeTabId%2522%253A%2522clugibfd800053b6jqy6b37ho%2522%252C%2522tabs%2522%253A%255B%257B%2522id%2522%253A%2522clugibfd800053b6jqy6b37ho%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522type%2522%253A%2522TASK_PORT%2522%252C%2522taskId%2522%253A%2522dev%2522%252C%2522port%2522%253A3001%252C%2522path%2522%253A%2522%252F%2522%257D%252C%257B%2522type%2522%253A%2522UNASSIGNED_PORT%2522%252C%2522port%2522%253A3001%252C%2522id%2522%253A%2522clugifemm00dd3b6j5bc6ndqn%2522%252C%2522mode%2522%253A%2522permanent%2522%252C%2522path%2522%253A%2522%252F%2522%257D%255D%257D%252C%2522clugibfd800043b6jwxrt3s2p%2522%253A%257B%2522id%2522%253A%2522clugibfd800043b6jwxrt3s2p%2522%252C%2522activeTabId%2522%253A%2522clugiiybh01bx3b6jdkct0yc2%2522%252C%2522tabs%2522%253A%255B%257B%2522type%2522%253A%2522TASK_LOG%2522%252C%2522taskId%2522%253A%2522dev%2522%252C%2522id%2522%253A%2522clugiiybh01bx3b6jdkct0yc2%2522%252C%2522mode%2522%253A%2522permanent%2522%257D%255D%257D%257D%252C%2522showDevtools%2522%253Atrue%252C%2522showShells%2522%253Atrue%252C%2522showSidebar%2522%253Atrue%252C%2522sidebarPanelSize%2522%253A15%257D)\r\n\r\n**Describe your issue**\r\n\r\nI'm using a monorepo and have my `tailwind.config.ts` in a `ui` package that I import from my Nextjs apps like so `export * from \"@repo/ui/tailwind.config\";` in my apps `tailwind.config.ts`.\r\n\r\nBasically, what I expect is that when I change something in that file it `hot reload` like it does in a normal setup. But it doesn't hot reload and I have to shutdown dev and reload it manually.\r\n\r\nThanks for your help 🙏 ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13419","RelatedDescription":"Open issue \"No `Hot Reload` when importing TailwindConfig from another `tailwind.config.ts` file\" (#13419)"},{"Id":"2217554993","IsPullRequest":false,"CreatedAt":"2024-04-01T05:30:09","Actor":"trongbinh15","Number":"13418","RawContent":null,"Title":"Arbitrary groups is not working","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n^3.4.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\n    \"vite\": \"^5.1.6\",\r\n\r\n**What version of Node.js are you using?**\r\n\r\nFor example: v18.17.1\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\nhttps://play.tailwindcss.com/CKyylaAt70\r\n\r\n\r\nA Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\r\n\r\nA reproduction is **required** when filing an issue — any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.\r\n\r\n**Describe your issue**\r\n\r\nI can not get correct css when the group has the `active` class, please help","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13418","RelatedDescription":"Closed issue \"Arbitrary groups is not working\" (#13418)"},{"Id":"2217116674","IsPullRequest":true,"CreatedAt":"2024-03-31T19:20:54","Actor":"aaronadamsCA","Number":"13416","RawContent":null,"Title":"Correct repository fields in package.json files","State":"closed","Body":"This is a super minor thing, but the `package.json` files currently have inconsistent/invalid repository metadata.\r\n\r\nI noticed because I configured Renovate to group this repo's updates on a `tailwindcss-monorepo` branch, but `@tailwindcss/vite` updates remained ungrouped. I am pretty sure it's the slightly invalid metadata that's the problem.\r\n\r\nThis PR would update `\"repository\"` to exactly match [the examples in the NPM docs](https://docs.npmjs.com/cli/v10/configuring-npm/package-json#repository).\r\n\r\nThis change may also fix the [missing repository links on the NPM pages for your new packages](https://www.npmjs.com/package/@tailwindcss/vite/v/4.0.0-alpha.11), though I'm a lot less sure of that!","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13416","RelatedDescription":"Closed or merged PR \"Correct repository fields in package.json files\" (#13416)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-04-10T03:30:20.5936414Z","RunDurationInMilliseconds":426}