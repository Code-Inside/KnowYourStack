{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2817078438","IsPullRequest":false,"CreatedAt":"2025-01-29T02:09:05","Actor":"vipexv","Number":"15985","RawContent":null,"Title":"bug(v4): gradients not working on CEF with chrome version: 103.0.5060.141","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: 4.0.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: Vite 6.0.11\n\n**What version of Node.js are you using?**\n\nFor example: v22.13.0\n\n**What browser are you using?**\n\nFor example: FiveM CEF Browser, Chrome Version: 103.0.5060.141\n\n**What operating system are you using?**\n\nFor example: Windows\n\n**Reproduction URL**\n\nTry to use Tailwind CSS V4 Gradients on FiveM, it will cause issues and will not work, this is due to the fact that they are using an outdated chrome version, which i cannot change.\n\n**Describe your issue**\n\nGradients don't work on FiveM CEF, that's what FiveM uses for NUI, most Cfx.re projects do, basically some of these new \"modern\" features cause things to break, is there a workaround?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15985","RelatedDescription":"Open issue \"bug(v4): gradients not working on CEF with chrome version: 103.0.5060.141\" (#15985)"},{"Id":"2817064675","IsPullRequest":false,"CreatedAt":"2025-01-29T02:02:00","Actor":"saadeghi","Number":"15984","RawContent":null,"Title":"[v4] CDN utility classes don't work if there's existing styles in page","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nhttps://unpkg.com/@tailwindcss/browser@4\n\n**Reproduction URL**\n\nhttps://codepen.io/saadeghi/pen/qEWgRem?editors=1000\n\n**Describe your issue**\n\nUsing the previous CDN file `https://cdn.tailwindcss.com` all utility classes used to work regardless of existing styles in page.  \nFor example in this code, `p-10 m-10` used to override the existing style.\n```html\n<button class=\"p-10 m-10 bg-red-300\">Button</button>\n\n<style>\n  * {\n    padding: 0;\n    margin: 0;\n  }\n</style>\n```\nNow using `https://unpkg.com/@tailwindcss/browser@4` it doesn't work anymore. Apparently the styles injected by the CDN file have the lowest importance.\n\n**Expected behavior**\nUtility classes are expected to have higher priority than existing styles, similar to how `https://cdn.tailwindcss.com` used to work.  \nOr at least there should be a config for it.  \n\n**Why it matters**\n\nI understand CDN file is not for production, but there are many development-stage projects out there using the CDN file and I guess updating `https://cdn.tailwindcss.com` to `https://unpkg.com/@tailwindcss/browser@4` will break many of them.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15984","RelatedDescription":"Closed issue \"[v4] CDN utility classes don't work if there's existing styles in page\" (#15984)"},{"Id":"2817017442","IsPullRequest":false,"CreatedAt":"2025-01-29T01:10:33","Actor":"aptinio","Number":"15983","RawContent":null,"Title":"Standalone CLI outputs \"watchman not found\"","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nstandalone executable, specifically, `tailwindcss-linux-x64`\n\n**What version of Node.js are you using?**\n\nN/A\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nLinux\n\n**Reproduction URL**\n\nhttps://github.com/aptinio/tailwind-linux-cli-watchman-issue\n\n**Describe your issue**\n\n1. Download https://github.com/tailwindlabs/tailwindcss/releases/download/v4.0.0/tailwindcss-linux-x64 into root of reproduction project\n2. Run:\n```\n./tailwindcss-linux-x64 --input input.css --output output.css --watch\n```\n\nThe following is included in the output, even if the standalone CLI successfully rebuilds the output when Tailwind classes are changed in `index.html`\n\n```\nsh: line 1: watchman: command not found\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15983","RelatedDescription":"Open issue \"Standalone CLI outputs \"watchman not found\"\" (#15983)"},{"Id":"2816802400","IsPullRequest":false,"CreatedAt":"2025-01-28T22:01:56","Actor":"teemzero","Number":"15982","RawContent":null,"Title":"Tailwind 4 Intellisense autocomplete not reflecting @theme classes","State":"open","Body":"Tailwind v4.0.0\nTailwind CSS IntelliSense v0.14.1\n\nVite 6.0.5, Vue 3.5.13\n\nNodeJS v20.16.0\nChrome\nWindows\n\n**Reproduction repo:**\nhttps://github.com/teemzero/tw4_bug\n\n**Issue:**\nWhen I use _./assets/main.css_ instead of _./styles.css_ and I add a class in theme, or change a classname, Intellisense autocomplete doesn't pick up those changes in _App.vue_.\nWhen I switch back to ./styles.css, any changes in theme are directly picked up by the autocompletion in _App.vue_.\nThis is very consistent behavior.\nBut. \nThere might be a lot more going down, as it took me a while to get to this reproducible situation, and during the process I came across many unexpected behaviors (that I haven't nailed down). \nFor now I see that the above situation doesn't apply to _./index.html_, changes in theme classes are not reflected in autocomplete there, which I consider a bug.\nYou may wanna have an extra look at those neat detection heuristics üôèthank you for the awesome work.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15982","RelatedDescription":"Open issue \"Tailwind 4 Intellisense autocomplete not reflecting @theme classes\" (#15982)"},{"Id":"2815948088","IsPullRequest":true,"CreatedAt":"2025-01-28T16:36:53","Actor":"rtritto","Number":"15973","RawContent":null,"Title":"chore: move tailwindcss from dependencies to peer dependencies","State":"closed","Body":"Follow up of #15751","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15973","RelatedDescription":"Closed or merged PR \"chore: move tailwindcss from dependencies to peer dependencies\" (#15973)"},{"Id":"2816175979","IsPullRequest":true,"CreatedAt":"2025-01-28T16:31:54","Actor":"RobinMalfait","Number":"15980","RawContent":null,"Title":"Rename `next` to `main`","State":"closed","Body":"This PR renames `next` to `main` in GitHub Action Workflows and the CONTRIBUTING.md file.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15980","RelatedDescription":"Closed or merged PR \"Rename `next` to `main`\" (#15980)"},{"Id":"2816160061","IsPullRequest":true,"CreatedAt":"2025-01-28T16:24:23","Actor":"RobinMalfait","Number":"15979","RawContent":null,"Title":"Merge `next` into `main`","State":"closed","Body":"Merge `next` into `main`.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15979","RelatedDescription":"Closed or merged PR \"Merge `next` into `main`\" (#15979)"},{"Id":"2815990554","IsPullRequest":true,"CreatedAt":"2025-01-28T16:19:31","Actor":"philipp-spiess","Number":"15974","RawContent":null,"Title":"Fix Oxide scanner bugs","State":"closed","Body":"Fixes #15632\r\nFixes #15740\r\n\r\nThis PR fixes a number of Oxide scanner bugs reported over various channels, specifically:\r\n\r\n- When using the Svelte class shorthand split over various lines, we weren't extracting class names properly: \r\n   \r\n   ```svelte\r\n   <div\r\n     class:underline={isUnderline}>\r\n   </div>\r\n   ```\r\n- We now extract classes when using the class shortcut in Angular:\r\n   \r\n   ```html\r\n   <div [class.underline]=\\\"bool\\\"></div>\r\n   ```\r\n- We now validate parentheses within arbitrary candidates so that we don't consume invalid arbitrary candidates anymore which allows us to parse the following case properly:\r\n   \r\n   ```js\r\n   const classes = [wrapper(\"bg-red-500\")]\r\n   ```\r\n\r\n\r\n## Test plan\r\n\r\nAdded unit tests","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15974","RelatedDescription":"Closed or merged PR \"Fix Oxide scanner bugs\" (#15974)"},{"Id":"2813874054","IsPullRequest":true,"CreatedAt":"2025-01-28T16:13:16","Actor":"thecrypticace","Number":"15941","RawContent":null,"Title":"Don‚Äôt look at ignore files outside initialized repos","State":"closed","Body":"Right now, when Oxide is scanning for files, it considers ignore files in the \"root\" directory it is scanning as well as all parent directories.\r\n\r\nWe honor .gitignore files even when not in a git repo as an optimization in case a project has been created, contains a .gitignore, but no repo has actually been initialized. However, this has an unintended side effect of including ignore files _ouside of a repo_ when there is one. This means that if you have a .gitignore file in your home folder it'll get applied even when you're inside a git repo which is not what you'd expect.\r\n\r\nThis PR addresses this by checking to see the folder being scanned is inside a repo and turns on a flag that ensures .gitignore files from the repo are the only ones used (global ignore files configured in git still work tho).\r\n\r\nThis still needs lots of tests to make sure things work as expected.\r\n\r\nFixes #15876\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15941","RelatedDescription":"Closed or merged PR \"Don‚Äôt look at ignore files outside initialized repos\" (#15941)"},{"Id":"2816003305","IsPullRequest":false,"CreatedAt":"2025-01-28T15:58:10","Actor":"rozsazoltan","Number":"15977","RawContent":null,"Title":"[v4] CDN jQuery compatibility","State":"closed","Body":"The CDN version also includes the `$()` function starting from v4.0.0, so it's quite interesting to work with jQuery. Although, for me, this is a bizarre combination, I noticed the issue on StackOverflow: [TailwindCSS v4 Play CDN not working with jQuery](https://stackoverflow.com/a/79394252/15167500)\n\n### Reproduction#01\n\n```html\n<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"></script>\n<script src=\"https://unpkg.com/@tailwindcss/browser@4\"></script>\n```\n\n```js\n$(document).ready(function () {\n  alert(\"Hello world\");\n});\n```\n\n> Uncaught TypeError: $(...).ready is not a function\n\n### Reproduction#02\n\n```html\n<script src=\"https://unpkg.com/@tailwindcss/browser@4\"></script>\n```\n\n```js\nconsole.log($)\n```\n\n> ```\n> function $(t,r,o){return P(\"@property\",t,[a(\"syntax\",o?`\"${o}\"`:'\"*\"'),a(\"inherits\",\"false\"),...r?[a(\"initial-value\",r)]:[]])}\n> ```\n\nIt doesn't have much of an impact on me, so I haven't tested whether this affects the npm package, but my initial assumption is that it doesn't. I just wanted to mention the incompatibility between the CDN and jQuery.\n\n\n\n\n\n\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15977","RelatedDescription":"Closed issue \"[v4] CDN jQuery compatibility\" (#15977)"},{"Id":"2816085075","IsPullRequest":true,"CreatedAt":"2025-01-28T15:58:08","Actor":"philipp-spiess","Number":"15978","RawContent":null,"Title":"Ensure browser package does not pollute global namespace","State":"closed","Body":"Resolves #15977\r\n\r\nOur `@tailwindcss/browser` build is intended to run inside a `<script>` tag inside browsers. Because of how variable assignment within `<script>` tags work, all variables that were defined within that script are currently assigned on the global namespace. \r\n\r\nThis is especially troublesome as eslint uses `$` as a valid mangling character so importing the CDN build would now redefine `globalThis.$` which collides with many very popular JavaScript libraries.\r\n\r\nIn order to avoid polluting the global namespace, this PR changes the build step to emit an IIFE (so all vars defined are scroped to the function closure instead of the global namespace).\r\n\r\n## Test plan\r\n\r\n- Ensure UI tests still work\r\n-  <img width=\"533\" alt=\"Screenshot 2025-01-28 at 16 49 27\" src=\"https://github.com/user-attachments/assets/1e027451-f58b-4252-bf97-c016a90eb78b\" />\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15978","RelatedDescription":"Closed or merged PR \"Ensure browser package does not pollute global namespace\" (#15978)"},{"Id":"2812935074","IsPullRequest":true,"CreatedAt":"2025-01-28T15:40:10","Actor":"depfu[bot]","Number":"15922","RawContent":null,"Title":"Update bun 1.1.43 ‚Üí 1.2.0 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this upgrade. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ‚ú≥Ô∏è bun (1.1.43 ‚Üí 1.2.0) ¬∑ [Repo](https://github.com/oven-sh/bun)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@‚Äãdepfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@‚Äãdepfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@‚Äãdepfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@‚Äãdepfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@‚Äãdepfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@‚Äãdepfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@‚Äãdepfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@‚Äãdepfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@‚Äãdepfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15922","RelatedDescription":"Closed or merged PR \"Update bun 1.1.43 ‚Üí 1.2.0 (minor)\" (#15922)"},{"Id":"2815994597","IsPullRequest":true,"CreatedAt":"2025-01-28T15:35:50","Actor":"depfu[bot]","Number":"15976","RawContent":null,"Title":"Update vitest 2.0.5 ‚Üí 3.0.4 (major)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this upgrade. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ‚ú≥Ô∏è vitest (2.0.5 ‚Üí 3.0.4) ¬∑ [Repo](https://github.com/vitest-dev/vitest)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<p><em>Too many releases to show here. View the <a href=\"https://github.com/vitest-dev/vitest/releases\">full release notes</a>.</em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/vitest-dev/vitest/compare/99452a712c83e4e90a8afd5675e6573e1c22a43a...9e404375825d870ed9d90db854d96f77a7abeaff\">See the full diff on Github</a>. The new version differs by more commits than we can show here.</p>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@‚Äãdepfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@‚Äãdepfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@‚Äãdepfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@‚Äãdepfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@‚Äãdepfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@‚Äãdepfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@‚Äãdepfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@‚Äãdepfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@‚Äãdepfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15976","RelatedDescription":"Closed or merged PR \"Update vitest 2.0.5 ‚Üí 3.0.4 (major)\" (#15976)"},{"Id":"2815882185","IsPullRequest":true,"CreatedAt":"2025-01-28T15:21:19","Actor":"RobinMalfait","Number":"15971","RawContent":null,"Title":"Ensure we set the version before running build","State":"closed","Body":"This PR ensures we set the version before running the build. Otherwise the embedded version number is incorrect.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15971","RelatedDescription":"Closed or merged PR \"Ensure we set the version before running build\" (#15971)"},{"Id":"2815994030","IsPullRequest":true,"CreatedAt":"2025-01-28T15:18:11","Actor":"hugo-vrijswijk","Number":"15975","RawContent":null,"Title":"Add `:host` rule to `@theme` layer","State":"open","Body":"Add `:host` rule to `@theme` layer\n\nFixes #15799\n\nAdds a `:host` selector for the `@theme` layer. This is necessary for the `@theme` layer to work correctly in shadow DOM.\n\nAlso updates the snapshots for the tests that were affected by this change (in a separate commit).\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15975","RelatedDescription":"Open PR \"Add `:host` rule to `@theme` layer\" (#15975)"},{"Id":"2815941018","IsPullRequest":true,"CreatedAt":"2025-01-28T15:13:00","Actor":"hugo-vrijswijk","Number":"15972","RawContent":null,"Title":"Use `:host` rule instead of `:root` for `@theme` layer","State":"closed","Body":"Fixes #15799\n\nThis replaces the `:root` selector with `:host` in the `@theme` layer. This is necessary for the `@theme` layer to work correctly in shadow DOM.\n\nAlso updates the snapshots for the tests that were affected by this change (in a separate commit).\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15972","RelatedDescription":"Closed or merged PR \"Use `:host` rule instead of `:root` for `@theme` layer\" (#15972)"},{"Id":"2815507062","IsPullRequest":false,"CreatedAt":"2025-01-28T12:28:23","Actor":"icaroperetti","Number":"15966","RawContent":null,"Title":"Internal server error: Cannot apply unknown utility class. border-primary-400","State":"closed","Body":"**What version of Tailwind CSS are you using?**\nv4.0.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\"postcss\": \"^8.5.1\",\n\"vite\": \"^6.0.11\"\n\"react\": \"^18.3.1\"\n\n**What version of Node.js are you using?**\n v22.12.0\n\n**What browser are you using?**\nArc, Chrome \n\n**What operating system are you using?**\nWindows\n\nI followed all the steps https://tailwindcss.com/docs/installation/using-vite in this documentation but i keep getting the error in the image bellow. The class is declared in tailwind.config.js (older version works). \n\n![Image](https://github.com/user-attachments/assets/82bd378f-c0f1-45a8-8aad-d56e3703c5b8)\n\nAll I've done is upgrade my tailwindcss from v3.4.7 to 4.0.0\n\nMy postcss.config.cjs\n```\nmodule.exports = {\n  plugins: {\n    tailwindcss: {},\n    autoprefixer: {},\n  },\n}\n```\n\nimports in css:\n```@import \"tailwindcss\";\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n```\n\nvite.config.ts\n```import tailwindcss from '@tailwindcss/vite'\nimport react from '@vitejs/plugin-react'\nimport { resolve } from 'path'\nimport { visualizer } from 'rollup-plugin-visualizer'\nimport { defineConfig } from 'vite'\n\n// https://vitejs.dev/config/\nexport default defineConfig({\n  build: {\n    rollupOptions: {\n      output: {\n        manualChunks: {\n          // 'date-fns': ['date-fns'],\n          react: ['react', 'react-dom', 'react-select', 'react-router-dom'],\n          '@mui/material': ['@mui/material'],\n          zod: ['zod'],\n        },\n      },\n    },\n  },\n  resolve: {\n    alias: {\n      '@': resolve(__dirname, 'src'),\n    },\n  },\n  plugins: [tailwindcss(), react(), visualizer()],\n})\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15966","RelatedDescription":"Closed issue \"Internal server error: Cannot apply unknown utility class. border-primary-400\" (#15966)"},{"Id":"2815325642","IsPullRequest":true,"CreatedAt":"2025-01-28T11:51:34","Actor":"RobinMalfait","Number":"15961","RawContent":null,"Title":"Setup v4 releases","State":"closed","Body":"Now that Tailwind CSS v4 is released, we can setup a proper release workflow again. This setup mimics the workflow of how we did it in v3, but adjusted to make it work on the v4 codebase.\r\n\r\nWhenever a PR is merged into the `next` branch, we will publish an insiders release to npm using the following version number: `0.0.0-insiders.<commit-hash>`. Note: insiders releases will not have a GitHub release associated with them, therefore the `standalone-cli` won't be available as an insiders release.\r\n\r\nFor the normal release procedure, the following steps are required:\r\n\r\n1. Manually version the packages (e.g.: `pnpm run version-packages`)\r\n2. Create a git tag for the version you want to release\r\n3. Push the updated package.json files and the git tag to the repository\r\n\r\nNext, a GitHub action will kick in once a `tag` is being pushed.\r\n\r\nThe GitHub action will run a build, and create a draft release on GitHub that will contain:\r\n\r\n1. The CHANGELOG.md contents for the last version\r\n2. The `standalone-cli` artifacts attached to the drafted release\r\n\r\nOnce you are happy with the draft, you can publish the draft on GitHub.\r\n\r\nThis in turn will trigger another GitHub action that will publish the packages to npm.\r\n\r\nWhenever an insiders release or a normal release completes, we will also trigger Tailwind Play, to update its dependencies to the latest version of Tailwind CSS.\r\n\r\n---\r\n\r\nNote: some of the GitHub Action workflows still refer to the `next` branch instead of the `main` branch. If we later today want to get a new release out, we can merge `next` into `main` and update the workflows accordingly.\r\n\r\n\r\n---\r\n\r\nThis is hard to test, but I started from the existing release.yml file and adjusted things accordingly. The biggest change is related to the insiders version. If you look at this temporary [commit](https://github.com/tailwindlabs/tailwindcss/pull/15961/commits/572dddfc33ec95f87f7e31f57ef73ae7c7235510), you can see that the publishing (dry-run) seems to work as expected:\r\n<img width=\"1508\" alt=\"image\" src=\"https://github.com/user-attachments/assets/c075e788-dcbc-4200-aa32-2b9a3c54d629\" />\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15961","RelatedDescription":"Closed or merged PR \"Setup v4 releases\" (#15961)"},{"Id":"2815380094","IsPullRequest":false,"CreatedAt":"2025-01-28T11:47:18","Actor":"Almexn-Studio","Number":"15962","RawContent":null,"Title":"\"p-\" is not effective in v4(Maybe it is my problem)","State":"closed","Body":"When I upgraded to v4 to develop an electron app, I found that the padding class was not working, so now I can only use px- py- instead.I guess it should be a bug","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15962","RelatedDescription":"Closed issue \"\"p-\" is not effective in v4(Maybe it is my problem)\" (#15962)"},{"Id":"2813183915","IsPullRequest":true,"CreatedAt":"2025-01-28T11:42:30","Actor":"philipp-spiess","Number":"15927","RawContent":null,"Title":"Fix handling of absolute config files in upgrade tool","State":"closed","Body":"Closes #15220\r\n\r\nThis PR fixes an issue where the upgrade tool would not be able to load some JavaScript config files across different drive letters on Windows.\r\n\r\nThe issue in detail is that `path.relative(‚Ä¶)` tries to build a relative path but if the file is inside the same folder, it won't start the relative path with a `./` so we manually appended it in case that it isn't there. The issue on Windows specifically is that `file.relative(‚Ä¶)` can also return a legit absolute path, e.g. when the file is on a different drive. In this case we obviously don't want to prefix a path with `./`.\r\n\r\n## Test plan\r\n\r\nTo reproduce this issue, I checked out a Tailwind v3 project _on a different drive letter than my Windows installation_. In that case, I was adding a repo inside `D:` while `npm` was installed in `C:`. I then run `npx @tailwindcss/upgrade` to reproduce the issue.\r\n\r\nThe fix was validated with a local `bun` run of the upgrade tool:\r\n\r\n![telegram-cloud-photo-size-4-5818901845756725194-y](https://github.com/user-attachments/assets/d32b21e3-a08d-4608-b65a-93dddc04f890)\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15927","RelatedDescription":"Closed or merged PR \"Fix handling of absolute config files in upgrade tool\" (#15927)"},{"Id":"2813905571","IsPullRequest":false,"CreatedAt":"2025-01-28T11:16:49","Actor":"kju4q","Number":"15942","RawContent":null,"Title":"Unable to run npx tailwindcss init with TailwindCSS 4.0.0: command not found","State":"closed","Body":"I am having issues installing the latest version of Tailwind! In my case, I‚Äôm not using Vite, but I encountered this problem after attempting to install the latest version of TailwindCSS in an existing project.\n\nEnvironment:\n‚Ä¢ OS: macOS Sequoia Version 15.2 (24C101)\n‚Ä¢ Node.js version: 18.17.0\n‚Ä¢ TailwindCSS version: ^4.0.0\n\nSteps I took:\n\nInstalled TailwindCSS using the command (and its installing the latest version: 4.0.0):\nnpm install -D tailwindcss\nTried initializing the TailwindCSS configuration:\nnpx tailwindcss init\nActual Behavior:\nsh: tailwind: command not found -- This error indicated that the tailwindcss package was not installed globally, but it actually was! Surprisingly, when I switched to an older version of TailwindCSS, the command worked as expected.\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15942","RelatedDescription":"Closed issue \"Unable to run npx tailwindcss init with TailwindCSS 4.0.0: command not found\" (#15942)"},{"Id":"2814614580","IsPullRequest":false,"CreatedAt":"2025-01-28T10:56:50","Actor":"bcorcoran","Number":"15952","RawContent":null,"Title":"[v4] Cannot apply unknown utility class X without @reference directive","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 5.4.14\n\n**Describe your issue**\n\nIn the [upgrade guide](https://tailwindcss.com/docs/upgrade-guide#using-apply-with-vue-svelte-or-css-modules) for v4, the following is stated:\n\n> In v4, stylesheets that are bundled separately from your main CSS file (e.g. CSS modules files, <style> blocks in Vue, Svelte, or Astro, etc.) do not have access to theme variables, custom utilities, and custom variants defined in other files.\n\nThis makes it seem like you wouldn't have to use the `@reference` directive to include all util classes included out of the box with tailwindcss. That doesn't seem to be the case, as I had the following code:\n\n```css\n<style>\n.ui-multiselect-option em {\n  @apply font-bold underline text-brand-blue-800;\n}\n.text-white .ui-multiselect-option em {\n  @apply font-bold underline text-brand-blue-100;\n}\n</style>\n```\n\nThe following error was thrown:\n\n```\nCannot apply unknown utility class: font-bold\n```\n\nThe issue is fixed by including the appropriate `@reference` directive. I would have expected to get an error on the `text-brand-blue-*` classes which were actually custom. Not sure if this is a bug or documentation issue, so reporting it as a bug.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15952","RelatedDescription":"Closed issue \"[v4] Cannot apply unknown utility class X without @reference directive\" (#15952)"},{"Id":"2815024632","IsPullRequest":false,"CreatedAt":"2025-01-28T10:56:01","Actor":"heidkaemper","Number":"15956","RawContent":null,"Title":"[v4] Unused keyframes are included in generated CSS","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nTailwind CLI\n\n**What version of Node.js are you using?**\n\nv21.6.1\n\n**What operating system are you using?**\n\nLinux / macOS\n\n**Reproduction URL**\n\nCheck out this repo:\nhttps://github.com/heidkaemper/tailwind4-keyframes-issue\n\nRun the Tailwind CLI with `npm run dev`\n\n**Describe your issue**\n\nI've added a custom animation just as described in the docs:\nhttps://tailwindcss.com/docs/theme#defining-animation-keyframes\n\nBut although the animation is not used at all, the CSS property and keyframes are included in the generated CSS file:\n\n```\n/*! tailwindcss v4.0.0 | MIT License | https://tailwindcss.com */\n@layer theme, base, components, utilities;\n@layer theme {\n  :root {\n    ...\n\n    --animate-fade-in-scale: fade-in-scale 0.3s ease-out;\n  }\n}\n\n...\n\n@keyframes fade-in-scale {\n  0% {\n    opacity: 0;\n    transform: scale(0.95);\n  }\n  100% {\n    opacity: 1;\n    transform: scale(1);\n  }\n}\n```\n\nThe same goes for the default animations spin, ping, pulse and bounce. CSS properties and keyframes are included, only utility classes are not.\n\nI would expect --animate-* variables and keyframes to only be included in the generated CSS file if they are actually used.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15956","RelatedDescription":"Closed issue \"[v4] Unused keyframes are included in generated CSS\" (#15956)"},{"Id":"2814882337","IsPullRequest":false,"CreatedAt":"2025-01-28T08:22:53","Actor":"randi-raharja","Number":"15954","RawContent":null,"Title":"[v4] Upgrade tailwindcss v3 to v4 with upgading tool","State":"closed","Body":"I try upgrade my tailwind to latest with upgrading tool. I try use npm & bun but same error. \n\n```\nCould not load the configuration file: Can't resolve '././D:\\Project\\satu-janji\\tailwind.config.ts' in\n‚îÇ   'C:\\Users\\SCYTHE~1\\AppData\\Local\\Temp\\bunx-3212163552-@tailwindcss\\upgrade@next\\node_modules\\@tailwindcss\\upgrade\\dist'\n```\n\nTailiwindCSS : v3\nNextJS : 15.1.5\nNode : 22.13.1\nBun : 1.2.1\nBrowser: Chrome\nOS : Windows\n\n![Image](https://github.com/user-attachments/assets/e433bb6b-d5bf-491b-826e-f3b325b7d02d)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15954","RelatedDescription":"Closed issue \"[v4] Upgrade tailwindcss v3 to v4 with upgading tool\" (#15954)"},{"Id":"2814701841","IsPullRequest":false,"CreatedAt":"2025-01-28T08:21:52","Actor":"rjvim","Number":"15953","RawContent":null,"Title":"Nesting Preflight Classes doesn't work in Dev mode","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\n^4.0.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite ^6.0.5\n\n**What version of Node.js are you using?**\n\nv22.13.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Describe your issue**\n\nIn index.css use the following:\n\n```\n@layer theme, base, components, utilities;\n@import \"tailwindcss/theme.css\" layer(theme) prefix(eln);\n@import \"tailwindcss/utilities.css\" layer(utilities);\n\n.twp {\n  @import \"tailwindcss/preflight.css\" layer(base);\n}\n```\n\nI am trying to prefix and also limit effect of preflight by using nesting.\n\nWhen I run `npm run build` it produces\n\n```\n@layer base {\n  .twp *,\n  .twp :after,\n  .twp :before,\n  .twp ::backdrop {\n    box-sizing: border-box;\n    border: 0 solid;\n    margin: 0;\n    padding: 0;\n  }\n}\n```\n\nBut in local development, `npm run dev`, it produces:\n\n```\n.twp \n@layer base {\n  *,\n  :after,\n  :before,\n  ::backdrop {\n    box-sizing: border-box;\n    border: 0 solid;\n    margin: 0;\n    padding: 0;\n  }\n}\n```\n\nIt's not clear if this tailwindcss issue or vite's, but I am also posting here if there are alternate solutions to handle scoping of preflight.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15953","RelatedDescription":"Closed issue \"Nesting Preflight Classes doesn't work in Dev mode\" (#15953)"},{"Id":"2813947969","IsPullRequest":false,"CreatedAt":"2025-01-27T20:07:02","Actor":"CicerBro","Number":"15943","RawContent":null,"Title":"[v4] Ignore certain paths from scanning no longer supported","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6\n\n**What version of Node.js are you using?**\n\n22.13\n\n**Describe your issue**\n\nIn v3 one could add a line with an exclamation mark `!` prefix in the `tailwind.config.js` to exclude certain files or paths from being scanned:\n\n```js\n    content: [\n        './resources/views/**/*.blade.php',\n        '!./resources/views/somefoldername/*',\n    ],\n```\n\nbut that option seems to have vanished in v4. I know I can do `@import 'tailwindcss' source(none);` and then  `@source '../../../resources/views';` which works but there is no way to exclude a subfolder from that path.\n\nOne work around is to add all the subfolders by hand, but that's a bit of a PITA when the project grows and you forget you need to add every view subfolder to the config css now.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15943","RelatedDescription":"Open issue \"[v4] Ignore certain paths from scanning no longer supported\" (#15943)"},{"Id":"2813538103","IsPullRequest":true,"CreatedAt":"2025-01-27T16:52:05","Actor":"thecrypticace","Number":"15934","RawContent":null,"Title":"Make JS APIs available to plugins and configs in the Standalone CLI","State":"open","Body":"wip","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15934","RelatedDescription":"Open PR \"Make JS APIs available to plugins and configs in the Standalone CLI\" (#15934)"},{"Id":"2813060811","IsPullRequest":false,"CreatedAt":"2025-01-27T13:39:47","Actor":"yash-k-s-7span","Number":"15925","RawContent":null,"Title":"Not able to install tailwindcss v4.0","State":"open","Body":"when i started the dev server i face following issue\r\n\r\nfailed to load config from D:\\internship\\sample-test\\vite.config.js\r\nError: The specified module could not be found.\r\n\\\\?\\D:\\internship\\sample-test\\node_modules\\@tailwindcss\\oxide-win32-x64-msvc\\tailwindcss-oxide.win32-x64-msvc.node\r\n    at Module._extensions..node (node:internal/modules/cjs/loader:1586:18)\r\n    at Module.load (node:internal/modules/cjs/loader:1288:32)\r\n    at Module._load (node:internal/modules/cjs/loader:1104:12)\r\n    at Module.require (node:internal/modules/cjs/loader:1311:19)\r\n    at require (node:internal/modules/helpers:179:18)\r\n    at Object.<anonymous> (D:\\internship\\sample-test\\node_modules\\@tailwindcss\\oxide\\index.js:72:29)\r\n    at Module._compile (node:internal/modules/cjs/loader:1469:14)\r\n    at Module._extensions..js (node:internal/modules/cjs/loader:1548:10)\r\n    at Module.load (node:internal/modules/cjs/loader:1288:32)\r\n    at Module._load (node:internal/modules/cjs/loader:1104:12) \r\n\r\n**Steps to Reproduce:**\r\n\r\n1. Clone the repository [https://github.com/prathamaaaaa/sample-react-vite-app](url).\r\n2. Install dependencies using npm install or yarn install.\r\n3. Try running the development server with npm run dev or yarn dev.\r\n\r\n**Expected Behavior:**\r\nThe development server should start without errors.\r\n\r\n**Actual Behavior:**\r\nThe error message about the missing module tailwindcss-oxide.win32-x64-msvc.node appears, and the server fails to start.\r\n\r\n**Environment:**\r\nOS: (e.g., Windows 10)\r\nNode.js version: (e.g., 20.18.2)\r\nTailwind CSS version: (@tailwindcss/vite: ^4.0.0)\r\nVite version: (6.0.5)\r\n\r\n**Possible Causes:**\r\nThe error may be due to the missing native module required by Tailwind CSS's oxide package.\r\n\r\n**Attachments:**\r\nError logs:  this already mention above.\r\nConfiguration files such as vite.config.js or tailwind.config.js.\r\nSteps or code to reproduce if possible (such as your package.json dependencies).\r\n\r\n_**here is the content of vite.config.js**_ \r\nimport { defineConfig } from 'vite'\r\nimport react from '@vitejs/plugin-react'\r\nimport tailwindcss from '@tailwindcss/postcss';\r\nimport autoprefixer from 'autoprefixer';\r\n\r\n// https://vite.dev/config/\r\nexport default defineConfig({\r\n  plugins: [react(), tailwindcss(), autoprefixer()],\r\n})\r\n\r\n**_here is the package.json content_** \r\n{\r\n  \"name\": \"sample-test\",\r\n  \"private\": true,\r\n  \"version\": \"0.0.0\",\r\n  \"type\": \"module\",\r\n  \"scripts\": {\r\n    \"dev\": \"vite\",\r\n    \"build\": \"vite build\",\r\n    \"lint\": \"eslint .\",\r\n    \"preview\": \"vite preview\"\r\n  },\r\n  \"dependencies\": {\r\n    \"react\": \"^18.3.1\",\r\n    \"react-dom\": \"^18.3.1\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@eslint/js\": \"^9.17.0\",\r\n    \"@tailwindcss/postcss\": \"^4.0.0\",\r\n    \"@tailwindcss/vite\": \"^4.0.0\",\r\n    \"@types/react\": \"^18.3.18\",\r\n    \"@types/react-dom\": \"^18.3.5\",\r\n    \"@vitejs/plugin-react\": \"^4.3.4\",\r\n    \"autoprefixer\": \"^10.4.20\",\r\n    \"eslint\": \"^9.17.0\",\r\n    \"eslint-plugin-react\": \"^7.37.2\",\r\n    \"eslint-plugin-react-hooks\": \"^5.0.0\",\r\n    \"eslint-plugin-react-refresh\": \"^0.4.16\",\r\n    \"globals\": \"^15.14.0\",\r\n    \"vite\": \"^6.0.5\"\r\n  }\r\n}\r\n\r\n_Originally posted by @prathamaaaaa in https://github.com/tailwindlabs/tailwindcss/discussions/15914_","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15925","RelatedDescription":"Open issue \"Not able to install tailwindcss v4.0\" (#15925)"},{"Id":"2813042839","IsPullRequest":false,"CreatedAt":"2025-01-27T13:32:23","Actor":"RobinMalfait","Number":"15924","RawContent":null,"Title":"Upgrade tool incorrectly migrates `leading-[1]` to `leading-1`","State":"open","Body":"The `@tailwindcss/upgrade` tool incorrectly migrates `leading-[1]` to `leading-1`.\n\nThe leading utility supports bare values that map to a value directly, e.g.:\n\n`leading-123`\n```css\n/*! tailwindcss v4.0.0 | MIT License | https://tailwindcss.com */\n.leading-123 {\n  --tw-leading: calc(var(--spacing) * 123);\n  line-height: calc(var(--spacing) * 123);\n}\n@property --tw-leading {\n  syntax: \"*\";\n  inherits: false;\n}\n```\n\nHowever, some values exist in your `@theme`, such as `leading-1`, which maps to:\n```css\n/*! tailwindcss v4.0.0 | MIT License | https://tailwindcss.com */\n.leading-1 {\n  --tw-leading: calc(var(--spacing) * 1);\n  line-height: calc(var(--spacing) * 1);\n}\n@property --tw-leading {\n  syntax: \"*\";\n  inherits: false;\n}\n```\n\nWhich is now equivalent to `4px` instead of `1` which makes this transformation unsafe.\n\nThanks @jeroenreumkens!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15924","RelatedDescription":"Open issue \"Upgrade tool incorrectly migrates `leading-[1]` to `leading-1`\" (#15924)"},{"Id":"2812899565","IsPullRequest":true,"CreatedAt":"2025-01-27T13:10:09","Actor":"RobinMalfait","Number":"15921","RawContent":null,"Title":"Ensure font-size utilities with `none` modifier works e.g.: `text-sm/none`","State":"closed","Body":"This PR fixes an issue where classes such as `text-sm/none` don't work as expected. The reason for this is that `leading-none` is the only hardcoded leading utility and is not coming from the `@theme`. This means that `text-sm/none` tries to do a lookup for `none` but it won't resolve. \n\nThis PR fixes that by allowing `none` as a modifier.\n\nWhile working on this, I noticed that `text-sm/none` _did_ generate CSS:\n\n```css\n.text-sm\\/none {\n  font-size: var(--text-sm);\n}\n```\n\nNotice that the `line-height` is missing. This means that any modifier that can't be resolved doesn't get the `line-height` set, but it _will_ generate CSS. In this case, no CSS should have been generated.\n\nOtherwise, all of these generate CSS which will only bloat your CSS and won't\nwork as expected. E.g.: `text-sm/foo`, `text-sm/bar`, and `text-sm/baz`:\n\n```css\n.text-sm\\/bar {\n  font-size: var(--text-sm);\n}\n.text-sm\\/baz {\n  font-size: var(--text-sm);\n}\n.text-sm\\/foo {\n  font-size: var(--text-sm);\n}\n```\n\nFixes: #15911\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15921","RelatedDescription":"Closed or merged PR \"Ensure font-size utilities with `none` modifier works e.g.: `text-sm/none`\" (#15921)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-01-29T03:30:22.0224923Z","RunDurationInMilliseconds":395}