{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2677586774","IsPullRequest":false,"CreatedAt":"2024-11-20T23:59:08","Actor":"HummingMind","Number":"15057","RawContent":null,"Title":"[v4] Issue with vite-plugin-vue-devtools and v4 alpha 34","State":"open","Body":"**What version of Tailwind CSS are you using?**\r\n\r\n4.0.0-alpha.34\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nVite 5.4.11\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv22.11.0\r\n\r\n**What browser are you using?**\r\n\r\nChrome 131.0.6778.86\r\n\r\n**What operating system are you using?**\r\n\r\nWindows 11 24H2\r\n\r\n**Reproduction URL**\r\n\r\n[StackBlitz](https://stackblitz.com/edit/vitejs-vite-y3qdps)\r\nCan't run it there though. They don't seem to allow plugins like tailwindcss in vite.config.js\r\n\r\n![image](https://github.com/user-attachments/assets/1516e077-c008-462e-ae41-1571f250b96f)\r\n\r\nAnother way to reproduce is just to `npm create vue@latest` with vue router and just add TailwindCSS v4 alpha/beta to it and run the dev server.\r\n\r\n**Describe your issue**\r\n\r\nWhen using vue and vue-router, during vite HMR, the vite-plugin-vue-devtools, version 7.6.4, freaks out with this error:\r\n\r\n![image](https://github.com/user-attachments/assets/74631828-88ea-4548-9267-c0d2b8ca05e1)\r\n\r\nand the page looks like this:\r\n\r\n![image](https://github.com/user-attachments/assets/c2e3b393-3915-4a1f-a8db-254de58d04af)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15057","RelatedDescription":"Open issue \"[v4] Issue with vite-plugin-vue-devtools and v4 alpha 34\" (#15057)"},{"Id":"2677325199","IsPullRequest":true,"CreatedAt":"2024-11-20T22:01:36","Actor":"thecrypticace","Number":"15056","RawContent":null,"Title":"Inline theme values in `drop-shadow`","State":"open","Body":"Utilities like `drop-shadow-xl` didn't work when the theme key was defined with multiple shadows because we generated `drop-shadow(var(--drop-shadow-xl))`. This would then expand to `drop-shadow(0 20px 13px rgb(0 0 0 / 0.03), 0 8px 5px rgb(0 0 0 / 0.08))` which is invalid.\r\n\r\nNow we read the theme value and split it directly into two drop shadows filters that don't reference the CSS variable:\r\n`drop-shadow(0 20px 13px rgb(0 0 0 / 0.03)) drop-shadow(0 8px 5px rgb(0 0 0 / 0.08))`","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15056","RelatedDescription":"Open PR \"Inline theme values in `drop-shadow`\" (#15056)"},{"Id":"2676785039","IsPullRequest":true,"CreatedAt":"2024-11-20T18:35:35","Actor":"RobinMalfait","Number":"15055","RawContent":null,"Title":"Disallow empty arbitrary values","State":"open","Body":"This PR makes the candidate parser more strict by not allowing empty arbitrary values.\n\nExamples that are not allowed anymore:\n\n- `bg-[]` — arbitrary value\n- `bg-()` — arbitrary value, var shorthand\n- `bg-[length:]` — arbitrary value, with typehint\n- `bg-(length:)` — arbitrary value, with typehint, var shorthand\n- `bg-red-500/[]` — arbitrary modifier\n- `bg-red-500/()` — arbitrary modifier, var shorthand\n- `data-[]:flex` — arbitrary value for variant\n- `data-():flex` — arbitrary value for variant, var shorthand\n- `group-visible/[]:flex` — arbitrary modifier for variant\n- `group-visible/():flex` — arbitrary modifier for variant, var shorthand\n\nIf you are trying to trick the parser by injecting some spaces like this:\n\n- `bg-[_]`\n\nThen that is also not allowed.\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15055","RelatedDescription":"Open PR \"Disallow empty arbitrary values\" (#15055)"},{"Id":"2676021450","IsPullRequest":true,"CreatedAt":"2024-11-20T14:47:26","Actor":"RobinMalfait","Number":"15054","RawContent":null,"Title":"Improve `in-*` variant migrations","State":"closed","Body":"While testing the codemods on some projects, I noticed some issues with the migration to the new `in-*` variant.\r\n\r\nOne such example is that we checked for `&` at the end, instead of ` &` (the whitespace is significant).\r\n\r\nThis meant that `[figure>&]:my-0` was converted to `in-[figure>]:my-0` which is wrong. In this case, we want to keep it as `[figure>&]:my-0`.\r\n\r\nAdditionally this PR brings back the migration from `group-[]:flex` to `in-[.group]:flex`. If you are using a prefix, then `group-[]:tw-flex` is migrated to `tw:in-[.tw\\:group]:flex`.\r\n\r\nLast but not least, this does some internal refactors to group migrations logically together.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15054","RelatedDescription":"Closed or merged PR \"Improve `in-*` variant migrations\" (#15054)"},{"Id":"2675500564","IsPullRequest":true,"CreatedAt":"2024-11-20T11:13:37","Actor":"philipp-spiess","Number":"15053","RawContent":null,"Title":"Fix Next.js endless loop when setting a custom `distDir`","State":"open","Body":"Closes #15050\r\n\r\nIn Tailwind CSS v4 Alpha 31 we changed how we scan template files. This changes included a new folder-dependency that is emitted for the `base` directory, so we can listen for new files being added as part of the postcss dependency.\r\n\r\nIn our testing, this worked fine with the Next.js integration meaning a new file in the project root would be picked up by Oxide and we could update the CSS files accordingly. \r\n\r\nThis change is now, however, causing an issue. With Next.js 15 **and with a custom `distDir` configured**, the postcss build, that will write into the `distDir`, will cause another postcss run to be triggered, starting an endless loop (regardless of wether or not the `distDir` was also part of your gitignore list).\r\n\r\nThis PR now changes the postcss client to not emit the base directory as a dependency to revert this changes. This does mean that new files and folders created _directly in the project root_ will require a restart of the Next.js server again (just like it did in Alpha 31 and before) for now.\r\n\r\n## Test Plan\r\n\r\nNext 15 does not seem to run in our current integration test setup (for some reason the server does not close correctly and it will fail on the cleanup step), so this change was tested manually:\r\n\r\n- First, clone the [templates repo](https://github.com/philipp-spiess/tailwindcss-playgrounds) I use for third party frameworks\r\n- Then, do a full build in the parent repo `tailwindcss` via `pnpm build`\r\n- Now, install the local tarballs in the `tailwindcss-playgrounds` repo via `pnpm install`\r\n\r\nWith this setup I have tested changes to a template file (that causes new utilities to be added) and the CSS file (that will rebuild properly) across both `pnpm dev` and `pnpm dev --turbo`.  Furthermore integration tests assert it still works in Next 14 like it did before:\r\n\r\nhttps://github.com/user-attachments/assets/b0ccb3dd-d090-4e4c-97c5-74129a2789be\r\n\r\nOne thing to make sure of is to include the new `distDir` into the `.gitignore` file as well, otherwise we will scrape it for changes which inherently causes an endless loop issue again.\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15053","RelatedDescription":"Open PR \"Fix Next.js endless loop when setting a custom `distDir`\" (#15053)"},{"Id":"2675380535","IsPullRequest":true,"CreatedAt":"2024-11-20T11:12:32","Actor":"RobinMalfait","Number":"15052","RawContent":null,"Title":"Prepare v4.0.0-alpha.35 release","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15052","RelatedDescription":"Closed or merged PR \"Prepare v4.0.0-alpha.35 release\" (#15052)"},{"Id":"2675297200","IsPullRequest":true,"CreatedAt":"2024-11-20T10:39:17","Actor":"RobinMalfait","Number":"15051","RawContent":null,"Title":"Add new `transition-discrete` and `transition-normal` utilities","State":"closed","Body":"This PR adds two new utilities for the `transition-behavior` property:\r\n\r\n| Name | Definition |\r\n| --- | --- |\r\n| `transition-discrete` | `transition-behavior: allow-discrete` |\r\n| `transition-normal` | `transition-behavior: normal` |\r\n\r\n\r\n# Test plan\r\n\r\nNot a lot too test here, but verified in the browser that these properties generate correct CSS:\r\n<img width=\"301\" alt=\"image\" src=\"https://github.com/user-attachments/assets/db314750-e129-47d6-b605-d3b367ae81a4\">\r\n<img width=\"253\" alt=\"image\" src=\"https://github.com/user-attachments/assets/24da5a6e-0b6a-48aa-a042-5ec19773bc6b\">\r\n\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15051","RelatedDescription":"Closed or merged PR \"Add new `transition-discrete` and `transition-normal` utilities\" (#15051)"},{"Id":"2675081135","IsPullRequest":false,"CreatedAt":"2024-11-20T09:11:16","Actor":"vladmoroz","Number":"15050","RawContent":null,"Title":"v4 blows up Next.js with custom `distDir`","State":"open","Body":"HMR blows up the server when using v4 in a project with a custom `distDir` in the Next.js config\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n```\r\n\"@tailwindcss/postcss\": \"4.0.0-alpha.34\",\r\n\"tailwindcss\": \"4.0.0-alpha.34\",\r\n```\r\n\r\nThis wasn't an issue in `\"4.0.0-alpha.30\"`, started happening in `\"4.0.0-alpha.31\"`\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nNext.js 15\r\n\r\n**What version of Node.js are you using?**\r\n\r\nNode.js 20\r\n\r\n**Reproduction URL**\r\n\r\nhttps://codesandbox.io/p/devbox/tphzmv?file=%2Fnext.config.js%3A4%2C3\r\n\r\nhttps://github.com/user-attachments/assets/f2cf5118-c83a-42c5-91a4-56152dbb759d","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15050","RelatedDescription":"Open issue \"v4 blows up Next.js with custom `distDir`\" (#15050)"},{"Id":"2673999713","IsPullRequest":false,"CreatedAt":"2024-11-20T01:20:39","Actor":"tremby","Number":"15049","RawContent":null,"Title":"Child selector + :last-of-type do not work together as expected","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\n3.4.15\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nn/a / unknown (occurs in tailwind play)\r\n\r\n**What version of Node.js are you using?**\r\n\r\nna / unknown\r\n\r\n**What browser are you using?**\r\n\r\nFirefox\r\n\r\n**What operating system are you using?**\r\n\r\nLinux\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/v4z3gZxhXm\r\n\r\n**Describe your issue**\r\n\r\nI'm putting this class on a blockquote: `[&_p]:last-of-type:bg-red-500`. It has paragraph children. I expect the last of those child paragraphs to have a red background.\r\n\r\n\"Test 1\" shows the expected behaviour: only the last paragraph has a background colour applied.\r\n\r\n\"Test 2\" shows broken behaviour: all paragraphs have the background colour applied.\r\n\r\nTailwind is generating this style rule:\r\n\r\n```css\r\n.\\[\\&_p\\]\\:last-of-type\\:bg-red-500:last-of-type p {\r\n  ...\r\n}\r\n```\r\n\r\nSince a child is being selected via `&_p`, the `:last-of-type` part should be after the trailing `p`, not after the base selector.\r\n\r\nActual use case: combining with `:before` and `:after` to put quotes around paragraphs of a blockquote.\r\n\r\nIt's interesting to note that if I use `:after` on a selector like this, that part is put in the right place. For example, in my actual use case, `[&_p]:last-of-type:after:content-['”']` generates `.\\[\\&_p\\]\\:last-of-type\\:after\\:content-\\[\\'”\\'\\]:last-of-type p::after`, which you'll see has `::after` in the right place, but `:last-of-type` in the wrong place.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15049","RelatedDescription":"Closed issue \"Child selector + :last-of-type do not work together as expected\" (#15049)"},{"Id":"2673812297","IsPullRequest":true,"CreatedAt":"2024-11-19T23:20:40","Actor":"RobinMalfait","Number":"15048","RawContent":null,"Title":"Improve root file detection","State":"closed","Body":"This PR fixes an issue where the Tailwind root file detection was wrong.\r\n\r\nWhenever a CSS file contains any of the `@tailwind` directives or an `@import` to any of the Tailwind files, the file is considered a Tailwind root file.\r\n\r\nIf multiple CSS files are part of the same tree, then we make the nearest common parent the root file.\r\n\r\nThis root file will be the file where we add `@config` and/or inject other changes during the migration process.\r\n\r\nHowever, if your folder structure looked like this:\r\n\r\n```css\r\n/* index.css */\r\n@import \"./base.css\";\r\n@import \"./typography.css\";\r\n@import \"tailwindcss/components\"; /* This makes index.css a root file */\r\n@import \"./utilities.css\";\r\n\r\n/* base.css */\r\n@tailwind base; /* This makes base.css a root file */\r\n\r\n/* utilities.css */\r\n@tailwind utilities; /* This makes utilities.css a root file */\r\n```\r\n\r\nThen we computed that `index.css` nad `base.css` were considered root files even though they belong to the same tree (because `base.css` is imported by `index.css`).\r\n\r\nThis PR fixes that behaviour by essentially being less smart, and just checking again if any sheets are part of the same tree.\r\n\r\n# Test plan:\r\n\r\nAdded an integration test that covers this scenario and fails before the fix.\r\n\r\nAlso ran it on our tailwindcss.com codebase.\r\n\r\n| Before | After |\r\n| --- | --- |\r\n| <img width=\"1072\" alt=\"image\" src=\"https://github.com/user-attachments/assets/8ee99a59-335e-4221-b368-a8cd81e85191\"> | <img width=\"1072\" alt=\"image\" src=\"https://github.com/user-attachments/assets/fe5acae4-d3fc-43a4-bd31-eee768a3a6a5\"> |\r\n\r\n(Yes, I know the migration still fails, but that's a different issue.)\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15048","RelatedDescription":"Closed or merged PR \"Improve root file detection\" (#15048)"},{"Id":"2673718819","IsPullRequest":false,"CreatedAt":"2024-11-19T22:28:25","Actor":"spaceemotion","Number":"15047","RawContent":null,"Title":"[v4] Vite plugin providing a virtual file can't be resolved from within main CSS file","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n```\r\n@tailwindcss/cli 4.0.0-alpha.33\r\n└── tailwindcss 4.0.0-alpha.33\r\n@tailwindcss/typography 0.5.15\r\n└── tailwindcss 4.0.0-alpha.33 peer\r\n@tailwindcss/vite 4.0.0-alpha.33\r\n└── tailwindcss 4.0.0-alpha.33\r\ntailwindcss 4.0.0-alpha.33\r\n```\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n`astro 5.0.0-beta.8`, using `vite 6.0.0-beta.10`\r\n\r\n**What version of Node.js are you using?**\r\nv20\r\n\r\n**What browser are you using?**\r\nChrome/Edge/Brave\r\n\r\n**What operating system are you using?**\r\nLinux/Windows\r\n\r\n**Reproduction URL**\r\nWe got the following stylesheet:\r\n\r\n```css\r\n@import 'tailwindcss';\r\n@import 'virtual:fontawesome.css';\r\n```\r\n\r\nThe custom vite plugin is quite simple:\r\n```ts\r\nimport { dom } from '@fortawesome/fontawesome-svg-core';\r\nimport type { Plugin } from 'vite';\r\n\r\nconst VIRTUAL_MODULE_ID = 'virtual:fontawesome.css';\r\nconst RESOLVED_VIRTUAL_MODULE_ID = '\\0' + VIRTUAL_MODULE_ID;\r\n\r\nexport function fontAwesomeCss(): Plugin {\r\n  return {\r\n    name: 'vite-plugin-fontawesome-css',\r\n\r\n    resolveId(id) {\r\n      if (id !== VIRTUAL_MODULE_ID) {\r\n        return;\r\n      }\r\n\r\n      return RESOLVED_VIRTUAL_MODULE_ID;\r\n    },\r\n\r\n    load(id) {\r\n      if (id !== RESOLVED_VIRTUAL_MODULE_ID) {\r\n        return;\r\n      }\r\n\r\n      return {\r\n        code: `@layer base { ${dom.css()} }`,\r\n      };\r\n    }\r\n  };\r\n}\r\n```\r\n\r\nWe need the fontawesome CSS to be included in the base layer of our CSS, since we want to be able to overwrite some things (like icon size) via the utility classes. We also don't want to include the CSS on every page, and instead have it in the global stylesheet.\r\n\r\nSadly, FontAwesome does not offer a simple static CSS we can use, since the classes are built at run-/build-time.\r\n\r\n**Describe your issue**\r\nI ran `astro dev` with verbose enabled:\r\n\r\n```\r\n  vite:transform 9.96ms /src/layouts/default.astro +12ms\r\n  vite:load 0.28ms [fs] /src/styles/main.css +14ms\r\n  astro:vite Error when evaluating SSR module /home/spaceemotion/code/nc-website/novelcrafter/src/pages/courses/[...course]/[...lesson].astro:\r\n  astro:vite |- Error: Can't resolve 'virtual:fontawesome.css' in '/home/spaceemotion/code/nc-website/novelcrafter/src/styles'\r\n  astro:vite     at finishWithoutResolve (/home/spaceemotion/code/nc-website/novelcrafter/node_modules/.pnpm/enhanced-resolve@5.17.1/node_modules/enhanced-resolve/lib/Resolver.js:564:18)\r\n  astro:vite     at /home/spaceemotion/code/nc-website/novelcrafter/node_modules/.pnpm/enhanced-resolve@5.17.1/node_modules/enhanced-resolve/lib/Resolver.js:656:15\r\n  astro:vite     at /home/spaceemotion/code/nc-website/novelcrafter/node_modules/.pnpm/enhanced-resolve@5.17.1/node_modules/enhanced-resolve/lib/Resolver.js:718:5\r\n  astro:vite     at eval (eval at create (/home/spaceemotion/code/nc-website/novelcrafter/node_modules/.pnpm/tapable@2.2.1/node_modules/tapable/lib/HookCodeFactory.js:33:10), <anonymous>:15:1)\r\n  astro:vite     at /home/spaceemotion/code/nc-website/novelcrafter/node_modules/.pnpm/enhanced-resolve@5.17.1/node_modules/enhanced-resolve/lib/Resolver.js:718:5\r\n  astro:vite     at eval (eval at create (/home/spaceemotion/code/nc-website/novelcrafter/node_modules/.pnpm/tapable@2.2.1/node_modules/tapable/lib/HookCodeFactory.js:33:10), <anonymous>:27:1)\r\n  astro:vite     at /home/spaceemotion/code/nc-website/novelcrafter/node_modules/.pnpm/enhanced-resolve@5.17.1/node_modules/enhanced-resolve/lib/DescriptionFilePlugin.js:89:43\r\n  astro:vite     at /home/spaceemotion/code/nc-website/novelcrafter/node_modules/.pnpm/enhanced-resolve@5.17.1/node_modules/enhanced-resolve/lib/Resolver.js:718:5\r\n  astro:vite     at eval (eval at create (/home/spaceemotion/code/nc-website/novelcrafter/node_modules/.pnpm/tapable@2.2.1/node_modules/tapable/lib/HookCodeFactory.js:33:10), <anonymous>:15:1)\r\n  astro:vite     at /home/spaceemotion/code/nc-website/novelcrafter/node_modules/.pnpm/enhanced-resolve@5.17.1/node_modules/enhanced-resolve/lib/Resolver.js:718:5\r\n  astro:vite  +0ms\r\n23:17:35 [ERROR] Can't resolve 'virtual:fontawesome.css' in '/home/spaceemotion/code/nc-website/novelcrafter/src/styles'\r\n  Stack trace:\r\n    at finishWithoutResolve (/home/spaceemotion/code/nc-website/novelcrafter/node_modules/.pnpm/enhanced-resolve@5.17.1/node_modules/enhanced-resolve/lib/Resolver.js:564:18)\r\n    at /home/spaceemotion/code/nc-website/novelcrafter/node_modules/.pnpm/enhanced-resolve@5.17.1/node_modules/enhanced-resolve/lib/Resolver.js:718:5\r\n    at /home/spaceemotion/code/nc-website/novelcrafter/node_modules/.pnpm/enhanced-resolve@5.17.1/node_modules/enhanced-resolve/lib/Resolver.js:718:5\r\n    at /home/spaceemotion/code/nc-website/novelcrafter/node_modules/.pnpm/enhanced-resolve@5.17.1/node_modules/enhanced-resolve/lib/DescriptionFilePlugin.js:89:43\r\n    at eval (eval at create (/home/spaceemotion/code/nc-website/novelcrafter/node_modules/.pnpm/tapable@2.2.1/node_modules/tapable/lib/HookCodeFactory.js:33:10), <anonymous>:15:1)\r\n```\r\n\r\nFrom what I can tell, the resolving is being handled by tailwind, and not Astro/Vite? I tried to see if there is a way to still make this worth, but not sure why the virtual module isn't being picked up - the same approach (using virtual modules) works without issue in other parts of the pipeline where we just import things into Vue/Astro/JS.\r\n\r\nhttps://stackblitz.com/edit/vite-u8kysb?file=vite.config.mjs (doesn't load inside of stackblitz due to oxide, but has a minimal example)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15047","RelatedDescription":"Open issue \"[v4] Vite plugin providing a virtual file can't be resolved from within main CSS file\" (#15047)"},{"Id":"2673643398","IsPullRequest":true,"CreatedAt":"2024-11-19T21:56:30","Actor":"RobinMalfait","Number":"15046","RawContent":null,"Title":"Improve PostCSS migration","State":"closed","Body":"If you have a PostCSS config file, that is not simple (has functions, requires, ...). In that case we don't migrate the PostCSS file. Because we don't migrate, the `didMigrate` is still false and we continue with the next migration.\n\nThe issue here is that there are 2 states encoded in the same variable and they should be two separate variables because there is a difference between:\n\n1. Not finding a file at all\n2. Finding a file, but not migrating it\n\nBefore this change, the output looks like this if you have a complex PostCSS file:\n```\n│ Migrating PostCSS configuration…\n\n│ The PostCSS config contains dynamic JavaScript and can not be automatically migrated.\n\n│ No PostCSS config found, skipping migration.\n```\n\nAfter this change, the output looks like this:\n```\n│ Migrating PostCSS configuration…\n\n│ ↳ The PostCSS config contains dynamic JavaScript and can not be automatically migrated.\n```\n\nAlso updated the output to include `↳ ` to be consistent with the other logs.\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15046","RelatedDescription":"Closed or merged PR \"Improve PostCSS migration\" (#15046)"},{"Id":"2673368317","IsPullRequest":true,"CreatedAt":"2024-11-19T20:27:47","Actor":"thecrypticace","Number":"15044","RawContent":null,"Title":"Fix negative rotate utilities","State":"closed","Body":"This fixes the negative versions of rotate:\r\n`-rotate-y-*`, `-rotate-x-*`, and `-rotate-z-*`\r\n\r\nThey were producing CSS like `--tw-rotate-x: calc(rotateX(Xdeg) * -1)` instead of `--tw-rotate-x: rotateX(calc(Xdeg * -1))`. This fixes all of those. The skew utilities have a similar structure but were already handled correctly.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15044","RelatedDescription":"Closed or merged PR \"Fix negative rotate utilities\" (#15044)"},{"Id":"2673393232","IsPullRequest":false,"CreatedAt":"2024-11-19T20:07:19","Actor":"saadeghi","Number":"15045","RawContent":null,"Title":"[v4] `addComponents` is adding styles to `@layer utilities` instead of `@layer components`","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv4.0.0-alpha.34\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\n`@tailwindcss/cli`\r\n\r\n**Reproduction URL**\r\n\r\nhttps://github.com/saadeghi/tw4-component-layer-issue\r\n\r\n**Describe your issue**\r\n\r\nThese are the layers in output CSS file:\r\n```\r\n@layer theme, base, components, utilities;\r\n```\r\n**Expectation**  \r\nIt's expected for `addComponents` to add styles to `@layer components`  \r\n\r\n**Current behavior**  \r\nCurrently `addComponents` adds styles to `@layer utilities`, similar to `addUtilities`\r\n\r\nPlugin example:  \r\nhttps://github.com/saadeghi/tw4-component-layer-issue/blob/master/myplugin.js\r\n\r\nGenerated style:  \r\nhttps://github.com/saadeghi/tw4-component-layer-issue/blob/9b7a944690a35d55c7406756e30cc98c7a239623/output.css#L516","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15045","RelatedDescription":"Open issue \"[v4] `addComponents` is adding styles to `@layer utilities` instead of `@layer components`\" (#15045)"},{"Id":"2673021650","IsPullRequest":true,"CreatedAt":"2024-11-19T17:54:52","Actor":"philipp-spiess","Number":"15043","RawContent":null,"Title":"Upgrade `jiti` dependency to stable","State":"closed","Body":"This PR updates the `jiti` dependency we use for plugin loading to the latest stable release.\r\n\r\n## Test Plan\r\n\r\nThis was relying on integration tests which contains example of TypeScript configs. It's also rebased to include the new examples from https://github.com/tailwindlabs/tailwindcss/pull/15041.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15043","RelatedDescription":"Closed or merged PR \"Upgrade `jiti` dependency to stable\" (#15043)"},{"Id":"2672645154","IsPullRequest":true,"CreatedAt":"2024-11-19T17:39:50","Actor":"RobinMalfait","Number":"15041","RawContent":null,"Title":"Use `resolveJsId` when resolving `tailwindcss/package.json`","State":"closed","Body":"This PR uses the `enhanced-resolve` instead of `createRequire(…).resolve` which improves the usability when running the upgrade tool locally using Bun.\r\n\r\nWhile testing, we also noticed that it is not possible to use a `cjs`-only plugin inside of an `esm` project. It was also not possible to use an `esm`-only plugin inside of a `cjs` project.\r\n\r\n# Test plan\r\n\r\nWe added integration tests in both the CLI (the CLI is an mjs project) and in the PostCSS (where we can configure a `cjs` and `esm` PostCSS config) integration tests where we created an `esm` and `cjs` based project with 4 plugins (`cjs`-only, `esm`-only, and TypeScript based plugins: `cts`-only and `mts`-only).","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15041","RelatedDescription":"Closed or merged PR \"Use `resolveJsId` when resolving `tailwindcss/package.json`\" (#15041)"},{"Id":"2668008348","IsPullRequest":true,"CreatedAt":"2024-11-19T15:19:08","Actor":"philipp-spiess","Number":"15028","RawContent":null,"Title":"Bundle core plugins with the standalone build","State":"closed","Body":"Closes #15012\r\n\r\nWe do not have replacements for these plugins _just yet_. In order to increase compatibility with setups that rely on some of these legacy plugins, this PR bundles `@tailwindcss/forms`, `@tailwindcss/typography`, and `@tailwindcss/aspect-ratio` (after https://github.com/tailwindlabs/tailwindcss/pull/15029) with the standalone build now. \r\n\r\nIn comparison to v3, this omits the `@tailwindcss/container-queries` plugin since is not a first-party feature of Tailwind CSS v4.\r\n\r\n## Test Plan\r\n\r\nAdded an integration test. I also tested this by running the standalone binary in a temporary folder with as simple input css:\r\n\r\n```css\r\n@import \"tailwindcss\";\r\n@plugin \"@tailwindcss/typography\";\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15028","RelatedDescription":"Closed or merged PR \"Bundle core plugins with the standalone build\" (#15028)"},{"Id":"2669707931","IsPullRequest":true,"CreatedAt":"2024-11-19T15:01:45","Actor":"thecrypticace","Number":"15033","RawContent":null,"Title":"Implement compat for `<alpha-value>` from v3","State":"closed","Body":"This implements backwards compatibility for colors that use the old `<alpha-value>` feature from v3. We can do this by replacing `<alpha-value>` with `1` because we use `color-mix` to actually apply opacity modifiers in v4.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15033","RelatedDescription":"Closed or merged PR \"Implement compat for `<alpha-value>` from v3\" (#15033)"},{"Id":"2672237016","IsPullRequest":true,"CreatedAt":"2024-11-19T14:52:30","Actor":"RobinMalfait","Number":"15040","RawContent":null,"Title":"Upgrade: don't show error during upgrade when analyzing external URL import","State":"closed","Body":"This PR improves the output of the upgrade tool when we are handling imports and the import happens to be an external URL.\r\n\r\nExternal URLs shouldn't and can't be upgraded, so printing an error message doesn't help the user.\r\n\r\nAdditionally, if an `@import` is using the `url(…)` function, then we skip over it and continue with the rest of the imports. \r\n\r\n| Before | After |\r\n| --- | --- |\r\n| <img width=\"1455\" alt=\"image\" src=\"https://github.com/user-attachments/assets/1ee00ea4-68e1-4252-b1cf-30a04f608b75\"> | <img width=\"1455\" alt=\"image\" src=\"https://github.com/user-attachments/assets/da1f3eaf-dedb-4b1b-bf73-93bdfee65759\"> |\r\n\r\nRunning this on github.com/parcel-bundler/parcel\r\n\r\n| Before | After |\r\n| -- | -- |\r\n| <img width=\"1552\" alt=\"image\" src=\"https://github.com/user-attachments/assets/89987444-8008-4edd-a907-6ad9276a86a0\"> | <img width=\"1552\" alt=\"image\" src=\"https://github.com/user-attachments/assets/cc2a34ae-ef17-4ad1-b06d-097874400b4d\"> |\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15040","RelatedDescription":"Closed or merged PR \"Upgrade: don't show error during upgrade when analyzing external URL import\" (#15040)"},{"Id":"2668441555","IsPullRequest":true,"CreatedAt":"2024-11-19T14:52:06","Actor":"philipp-spiess","Number":"15029","RawContent":null,"Title":"Support complex `addUtilities()` configs","State":"closed","Body":"This PR adds support for complex `addUtilities()` configuration objects that use child combinators and other features.\r\n\r\nFor example, in v3 it was possible to add a utility that changes the behavior of all children of the utility class node by doing something like this:\r\n\r\n```ts\r\naddUtilities({\r\n  '.red-children > *': {\r\n    color: 'red',\r\n  },\r\n});\r\n```\r\n\r\nThis is a pattern that was used by first-party plugins like `@tailwindcss/aspect-ratio` but that we never made working in v4, since it requires parsing the selector and properly extracting all utility candidates.\r\n\r\nWhile working on the codemod that can transform `@layer utilities` scoped declarations like the above, we found out a pretty neat heuristics on how to migrate these cases. We're basically finding all class selectors and replace them with `&`. Then we create a nested CSS structure like this:\r\n\r\n```css\r\n.red-children {\r\n  & > * {\r\n    color: red;\r\n  }\r\n}\r\n```\r\n\r\nDue to first party support for nesting, this works as expected in v4.\r\n\r\n## Test Plan\r\n\r\nWe added unit tests to ensure the rewriting works in some edge cases. Furthermore we added an integration test running the `@tailwindcss/aspect-ratio` plugin. We've also installed the tarballs in the Remix example from the [playgrounds](https://github.com/philipp-spiess/tailwindcss-playgrounds) and ensure we can use the `@tailwindcss/aspect-ratio` plugin just like we could in v3:\r\n \r\n<img width=\"2560\" alt=\"Screenshot 2024-11-18 at 13 44 52\" src=\"https://github.com/user-attachments/assets/31889131-fad0-4c37-b574-cfac2b99f786\">\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15029","RelatedDescription":"Closed or merged PR \"Support complex `addUtilities()` configs\" (#15029)"},{"Id":"2672024298","IsPullRequest":true,"CreatedAt":"2024-11-19T13:29:51","Actor":"RobinMalfait","Number":"15038","RawContent":null,"Title":"Improve robustness when upgrading","State":"closed","Body":"This PR improves the robustness when running the upgrade script.\r\n\r\nRight now when you run it and if you run into issues, it could be that an error with stack trace is printed in the terminal. This PR improves most of the cases where this happens to ensure the output is easier to parse as a human.\r\n\r\n# Test plan:\r\n\r\nUsed SourceGraph to find some popular open source repositories that use Tailwind and tried to run the upgrade tool on those repositories. If a repository fails to upgrade, then that's a good candidate for this PR to showcase the improved error messages.\r\n\r\ngithub.com/docker/docs\r\n\r\n| Before | After |\r\n| --- | --- |\r\n| <img width=\"1455\" alt=\"image\" src=\"https://github.com/user-attachments/assets/ae28c1c1-8472-45a2-89f7-ed74a703e216\"> | <img width=\"1455\" alt=\"image\" src=\"https://github.com/user-attachments/assets/6bf4ec79-ddfc-47c4-8ba0-051566cb0116\"> |\r\n\r\ngithub.com/parcel-bundler/parcel\r\n\r\n| Before | After |\r\n| --- | --- |\r\n| <img width=\"1455\" alt=\"image\" src=\"https://github.com/user-attachments/assets/826e510f-df7a-4672-9895-8e13da1d03a8\"> | <img width=\"1455\" alt=\"image\" src=\"https://github.com/user-attachments/assets/a75146f5-bfac-4c96-a02b-be00ef671f73\"> |\r\n\r\ngithub.com/vercel/next.js\r\n\r\n| Before | After |\r\n| --- | --- |\r\n| <img width=\"1455\" alt=\"image\" src=\"https://github.com/user-attachments/assets/8d6c3744-f210-4164-b1ee-51950d44b349\"> | <img width=\"1455\" alt=\"image\" src=\"https://github.com/user-attachments/assets/b2739a9a-9629-411d-a506-3993a5867caf\"> |\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15038","RelatedDescription":"Closed or merged PR \"Improve robustness when upgrading\" (#15038)"},{"Id":"2671458676","IsPullRequest":false,"CreatedAt":"2024-11-19T13:24:13","Actor":"Neutrovertido","Number":"15035","RawContent":null,"Title":"OS Fractional Scaling interferes with mx-auto's spacing","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.4.15\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nUnsure about that, will list all dependencies:\r\n\"autoprefixer\": \"^10.4.20\"\r\n\"postcss\": \"^8.4.49\"\r\n\"tailwindcss\": \"^3.4.15\"\r\n\r\nI'm using ReactJS v13.4.0 as my framework too.\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv22.11\r\n\r\n**What browser are you using?**\r\n\r\nMozilla Firefox, but I confirmed it also happens in Chromium.\r\n\r\n**What operating system are you using?**\r\n\r\nWindows 11\r\n\r\n**Reproduction URL**\r\n\r\nBug Report source code: https://github.com/Neutrovertido/tailwind-fractional-scaling-bug\r\n\r\nLive preview: https://glowing-sunshine-667537.netlify.app/\r\n\r\n**Describe your issue**\r\n\r\nThe issue seemingly appears only when using fractional scaling (ie. 125%, 150%) on the OS configuration and also only when tailwind uses the `xl` viewport.\r\n\r\nThis also seemingly doesn't happen when scaling using the web browser on 100% system scaling.\r\n\r\nWhat happens is `mx-auto` considerably decreases the horizontal margin, making it look too close to the screen borders in comparison to 100% scaling.\r\n\r\nTo replicate this bug, simply put your \"Scale\" system setting to anything above 100% and load a site that uses `mx-auto` with a viewport of `xl`:\r\n![image](https://github.com/user-attachments/assets/821765fb-a7ea-44e0-938b-11186cd841ec)\r\n\r\nThen, compare it to how it looks on 100% scaling, and voila.\r\n\r\n\r\nExpected:\r\n![image](https://github.com/user-attachments/assets/2da2865c-7e5e-4932-9705-dc47f02bd1ff)\r\n\r\n\r\nResult:\r\n![image](https://github.com/user-attachments/assets/23802274-591e-48d4-95ba-78fc48cd39b7)\r\n\r\n__This bug does _NOT_ happen on viewports other than `xl`__:\r\n![image](https://github.com/user-attachments/assets/e4e92e83-0732-49cb-8a19-15f2fee6bbbb)\r\n\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15035","RelatedDescription":"Closed issue \"OS Fractional Scaling interferes with mx-auto's spacing\" (#15035)"},{"Id":"2666251985","IsPullRequest":false,"CreatedAt":"2024-11-19T11:06:11","Actor":"Hugos68","Number":"15021","RawContent":null,"Title":"Plugin config extensions aren't deepmerged.","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n- 3.4.9\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\n- vite:  5.0.3\r\n\r\n**What version of Node.js are you using?**\r\n\r\n- 22.11.0\r\n\r\n**What browser are you using?**\r\n\r\n- Chrome\r\n\r\n**What operating system are you using?**\r\n\r\n- Windows\r\n\r\n**Reproduction URL**\r\n\r\nUnsure how to reproduce in tailwind.play as it's a config issue and I can't access the post merge config.\r\n\r\n**Describe your issue**\r\n\r\n[In the tailwind docs](https://tailwindcss.com/docs/plugins#extending-the-configuration) it states quote:\r\n> Plugins can merge their own set of configuration values into the user’s tailwind.config.js configuration by providing an object as the second argument to the plugin function.\r\n\r\nSo when doing the following:\r\n```js\r\nimport plugin from 'tailwindcss/plugin';\r\n\r\nexport default {\r\n    content: ['one']\r\n    plugins: [\r\n       plugin(() => {}, { content: ['two'] })\r\n    ]\r\n}\r\n```\r\n\r\nI would expect the merged config to look like:\r\n```js\r\nexport default {\r\n    content: ['one', 'two']\r\n}\r\n```\r\nBut the actual resulted config is:\r\n```js\r\nexport default {\r\n    content: ['one']\r\n}\r\n```\r\n\r\nThis means because the `content` field is present in the config, the plugin's `content` field is completely ignored. This makes authoring plugins more painful as know I need to instruct users to add stuff to their `content` field manually instead of have my plugin do this *for* them.\r\n\r\nIs this intended behaviour?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15021","RelatedDescription":"Closed issue \"Plugin config extensions aren't deepmerged.\" (#15021)"},{"Id":"2671750345","IsPullRequest":true,"CreatedAt":"2024-11-19T10:57:30","Actor":"philipp-spiess","Number":"15036","RawContent":null,"Title":"Add consistent base styles for buttons and form controls","State":"open","Body":"This PR introduces consistent base styles for buttons and form controls in Tailwind CSS v4.\r\n\r\n## Motivation\r\n\r\nIn v3, form elements lack default styles, which can be confusing—especially when certain elements, like a text input without a placeholder or value, are rendered completely invisible on the page.\r\n\r\nThe goal of this change is to provide reasonable default styles for buttons, inputs, selects, and textareas that are (mostly) consistent across all browsers while remaining easy to customize with your own styles.\r\n\r\nThis improvement should make Tailwind more accessible for developers new to the framework and more convenient in scenarios where you need to quickly create demos (e.g., using Tailwind Play).\r\n\r\n## Light and dark mode support\r\n\r\nThese styles support both light and dark mode, achieved using the `light-dark()` CSS function. While browser support for this function is still somewhat limited, Lightning CSS transpiles it to a CSS variable-based approach that works in older browsers.\r\n\r\nFor this approach to function correctly, a default `color-scheme` must be set in your CSS (as explained in [the Lightning CSS documentation](https://lightningcss.dev/transpilation.html#light-dark()-color-function)). This PR addresses this requirement by setting the `color-scheme` to `light` on the `html` element in Preflight.\r\n\r\n<img width=\"1712\" alt=\"image\" src=\"https://github.com/user-attachments/assets/dba56368-1427-47b3-9419-7c2f6313a944\">\r\n\r\n<img width=\"1709\" alt=\"image\" src=\"https://github.com/user-attachments/assets/3d84fcd2-9606-4626-8e03-164a1dce9018\">\r\n\r\n## Breaking changes\r\n\r\nWhile we don’t expect these changes to significantly impact v3 users upgrading to v4, there may be minor differences for those relying on the simpler v3 styles.\r\n\r\nFor example, Preflight now applies a `border-radius` to buttons and form controls. If you weren’t explicitly setting the border radius to `0` in your project, you’ll need to do so to restore the previous look.\r\n\r\nThankfully, reverting to the v3 styles is straightforward—just add the following reset to your CSS:\r\n\r\n```css\r\n@layer base {\r\n  input,\r\n  textarea,\r\n  select,\r\n  button {\r\n    border: 0px solid;\r\n    border-radius: 0;\r\n    padding: 0;\r\n    background-color: transparent;\r\n  }\r\n}\r\n```\r\n\r\nIt’s worth noting that this reset doesn't touch the `::file-selector-button` styles that were added in this PR. This is because it's not possible to reliably \"undo\" these styles and restore the original user-agent styles (which is what was used in v3), as these are different in each browser. However, these new styles actually match the defaults in most browsers pretty closely, so hopefully this just won't be an issue.\r\n\r\n## Codemod\r\n\r\nThis PR includes a codemod that automatically inserts the above mentioned v3 reset to help avoid breaking changes during the upgrade. The codemod will insert the following CSS:\r\n\r\n```css\r\n/*\r\n  In Tailwind CSS v4, basic styles are applied to form elements by default. To\r\n  maintain compatibility with v3, the following resets have been added:\r\n*/\r\n@layer base {\r\n  input,\r\n  textarea,\r\n  select,\r\n  button {\r\n    border: 0px solid;\r\n    border-radius: 0;\r\n    padding: 0;\r\n    background-color: transparent;\r\n  }\r\n}\r\n```\r\n\r\n## Testing\r\n\r\nThese changes have been tested across a wide range of browsers, including Chrome, Safari, Firefox, Edge, and Opera on macOS and Windows, as well as Safari, Chrome, Firefox, and several lesser-known browsers on iOS and Android.\r\n\r\nHowever, some quirks still exist in certain mobile browsers, such as iOS Safari, which adds too much bottom padding below date and time inputs:\r\n\r\n<img width=\"1548\" alt=\"Screenshot 2024-11-20 at 3 57 20 PM\" src=\"https://github.com/user-attachments/assets/507c7724-ac41-4634-a2b3-61ac4917ebce\">\r\n\r\nThe only reliable way to address these issues is by applying `appearance: none` to these form controls. However, this felt too opinionated for Preflight, so we’ve opted to leave such adjustments to user-land implementations.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15036","RelatedDescription":"Open PR \"Add consistent base styles for buttons and form controls\" (#15036)"},{"Id":"2669130900","IsPullRequest":false,"CreatedAt":"2024-11-18T16:32:43","Actor":"flavorjones","Number":"15031","RawContent":null,"Title":"[v4] Musl/Alpine is not supported in the V4 alphas","State":"open","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv4.0.0-alpha.34\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nBinary CLI executable from https://github.com/tailwindlabs/tailwindcss/releases/tag/v4.0.0-alpha.34\r\n\r\n**What version of Node.js are you using?**\r\n\r\nN/A\r\n\r\n**What browser are you using?**\r\n\r\nN/A\r\n\r\n**What operating system are you using?**\r\n\r\nAlpine Linux (musl libc)\r\n\r\n**Reproduction URL**\r\n\r\nYou can see the failure in CI here: https://github.com/flavorjones/tailwindcss-ruby/actions/runs/11896261069/job/33147810896?pr=21#step:7:5\r\n\r\nCompare with successful build run on a glibc system here: https://github.com/flavorjones/tailwindcss-ruby/actions/runs/11896261069/job/33147810459?pr=21#step:5:5\r\n\r\n**Describe your issue**\r\n\r\nWhen running the binary x86_64-linux executable on an Alpine (musl libc) system, I see:\r\n\r\n```\r\n/bin/sh: ./tailwindcss: not found\r\n```\r\n\r\nRunning `ldd` to see whether shared libraries are resolved properly reveals the problem:\r\n\r\n```\r\n# ldd ./tailwindcss\r\n        /lib64/ld-linux-x86-64.so.2 (0x72662d672000)\r\n        libc.so.6 => /lib64/ld-linux-x86-64.so.2 (0x72662d672000)\r\nError loading shared library ld-linux-x86-64.so.2: No such file or directory (needed by ./tailwindcss)\r\n        libpthread.so.0 => /lib64/ld-linux-x86-64.so.2 (0x72662d672000)\r\n        libdl.so.2 => /lib64/ld-linux-x86-64.so.2 (0x72662d672000)\r\n        libm.so.6 => /lib64/ld-linux-x86-64.so.2 (0x72662d672000)\r\nError relocating ./tailwindcss: gnu_get_libc_version: symbol not found\r\nError relocating ./tailwindcss: backtrace: symbol not found\r\nError relocating ./tailwindcss: backtrace_symbols: symbol not found\r\nError relocating ./tailwindcss: __cxa_thread_atexit_impl: symbol not found\r\nError relocating ./tailwindcss: __cxa_at_quick_exit: symbol not found\r\nError relocating ./tailwindcss: __register_atfork: symbol not found\r\nError relocating ./tailwindcss: __strftime_l: symbol not found\r\nError relocating ./tailwindcss: __cxa_thread_atexit_impl: symbol not found\r\nError relocating ./tailwindcss: unsupported relocation type 37\r\nError relocating ./tailwindcss: unsupported relocation type 37\r\nError relocating ./tailwindcss: unsupported relocation type 37\r\n```\r\n\r\nA previous issue (#14569) reported this, and the outcome was to open an upstream `bun` bug at https://github.com/oven-sh/bun/issues/14292. The reply there was, essentially:\r\n\r\n- musl is not supported by bun and won't be\r\n- you should be able to `apk install gcompat` to make it work\r\n\r\nUnfortunately, `gcompat` does not help:\r\n\r\n```\r\n# apk add gcompat\r\n(1/3) Installing musl-obstack (1.2.3-r2)\r\n(2/3) Installing libucontext (1.2-r3)\r\n(3/3) Installing gcompat (1.1.0-r4)\r\nOK: 89 MiB in 55 packages\r\n\r\n# ./tailwindcss\r\nError relocating /tailwindcss-ruby-mount/exe/x86_64-linux/tailwindcss: unsupported relocation type 37\r\nError relocating /tailwindcss-ruby-mount/exe/x86_64-linux/tailwindcss: unsupported relocation type 37\r\nError relocating /tailwindcss-ruby-mount/exe/x86_64-linux/tailwindcss: unsupported relocation type 37\r\n\r\n# ldd ./tailwindcss\r\n        /lib64/ld-linux-x86-64.so.2 (0x7db1dbfca000)\r\n        libc.so.6 => /lib64/ld-linux-x86-64.so.2 (0x7db1dbfca000)\r\n        ld-linux-x86-64.so.2 => /lib/ld-linux-x86-64.so.2 (0x7db1dbfbc000)\r\n        libpthread.so.0 => /lib64/ld-linux-x86-64.so.2 (0x7db1dbfca000)\r\n        libdl.so.2 => /lib64/ld-linux-x86-64.so.2 (0x7db1dbfca000)\r\n        libm.so.6 => /lib64/ld-linux-x86-64.so.2 (0x7db1dbfca000)\r\nError relocating ./tailwindcss: gnu_get_libc_version: symbol not found\r\nError relocating ./tailwindcss: backtrace: symbol not found\r\nError relocating ./tailwindcss: backtrace_symbols: symbol not found\r\nError relocating ./tailwindcss: __cxa_thread_atexit_impl: symbol not found\r\nError relocating ./tailwindcss: __cxa_at_quick_exit: symbol not found\r\nError relocating ./tailwindcss: __register_atfork: symbol not found\r\nError relocating ./tailwindcss: __strftime_l: symbol not found\r\nError relocating ./tailwindcss: __cxa_thread_atexit_impl: symbol not found\r\nError relocating ./tailwindcss: unsupported relocation type 37\r\nError relocating ./tailwindcss: unsupported relocation type 37\r\nError relocating ./tailwindcss: unsupported relocation type 37\r\n```\r\n\r\nI suspect this is going to be a blocker to adoption for many people given how widespread Alpine images are, particularly in CI/CD pipelines.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15031","RelatedDescription":"Open issue \"[v4] Musl/Alpine is not supported in the V4 alphas\" (#15031)"},{"Id":"2666665485","IsPullRequest":true,"CreatedAt":"2024-11-18T15:28:16","Actor":"RobinMalfait","Number":"15025","RawContent":null,"Title":"Add new `in-*` variant","State":"closed","Body":"This PR adds a new `in-*` variant that allows you to apply utilities when you are in a certain selector.\r\n\r\nWhile doing research for codemods, we notice that some people use `group-[]:flex` (yep, the arbitrary value is empty…). The idea behind is that people want to know if you are in a `.group` or not.\r\n\r\nSimilarly, some people use `group-[]/name:flex` to know when you are in a `.group/name` class or not.\r\n\r\nThis new `in-*` variant allows you to do that without any hacks.\r\n\r\nIf you want to check whether you are inside of a `p` tag, then you can write `in-[p]:flex`. If you want to check that you are inside of a `.group`, you can write `in-[.group]`.\r\n\r\nThis variant is also a compound variant, which means that you can write `in-data-visible:flex` which generates the following CSS:\r\n```css\r\n:where([data-visible]) .in-data-visible\\:flex {\r\n  display: flex;\r\n}\r\n```\r\n\r\nThis variant also compounds with `not-*`, for example: `not-in-[.group]:flex`.\r\n\r\nAdditionally, this PR also includes a codemod to convert `group-[]:flex` to `in-[.group]:flex`.\r\n\r\n---\r\n\r\nThis was proposed before for v3 in #13912\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15025","RelatedDescription":"Closed or merged PR \"Add new `in-*` variant\" (#15025)"},{"Id":"2666514239","IsPullRequest":true,"CreatedAt":"2024-11-18T15:19:16","Actor":"RobinMalfait","Number":"15022","RawContent":null,"Title":"Migrate `[&>*]` to `*` variant, and `[&_*]` to `**` variant","State":"closed","Body":"This PR adds a migration to convert the `[&>*]` variant to the `*` variant. Additionally this PR also converts the `[&_*]` variant to the `**` variant.\r\n\r\nWe use this variant in Catalyst for example, and now that the specificity is the same as `*`, we can use the more modern syntax instead.\r\n\r\n\r\n# Test plan:\r\n\r\nRunning this on Catalyst results in a diff like:\r\n<img width=\"615\" alt=\"image\" src=\"https://github.com/user-attachments/assets/f384885e-cae1-4b6b-80ab-85f76fa89a33\">\r\n\r\n<img width=\"833\" alt=\"image\" src=\"https://github.com/user-attachments/assets/8a185e1d-0f1b-4fe6-9e06-ca7597534398\">\r\n\r\n\r\nNote: the swapped order of variants is another codemod at work\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15022","RelatedDescription":"Closed or merged PR \"Migrate `[&>*]` to `*` variant, and `[&_*]` to `**` variant\" (#15022)"},{"Id":"2665965228","IsPullRequest":true,"CreatedAt":"2024-11-18T14:47:48","Actor":"RobinMalfait","Number":"15020","RawContent":null,"Title":"Re-introduce automatic var injection shorthand","State":"closed","Body":"This PR re-introduces the automatic var injection feature.\r\n\r\nFor some backstory, we used to support classes such as `bg-[--my-color]` that resolved as-if you wrote `bg-[var(--my-color)]`. \r\n\r\nThe is issue is that some newer CSS properties accepts dashed-idents (without the `var(…)`). This means that some properties accept `view-timeline-name: --my-name;` (see: https://developer.mozilla.org/en-US/docs/Web/CSS/view-timeline-name).\r\n\r\nTo make this a tiny bit worse, these properties _also_ accept `var(--my-name-reference)` where the variable `--my-name-reference` could reference a dashed-ident such as `--my-name`.\r\n\r\nThis makes the `bg-[--my-color]` ambiguous because we don't know if you want `var(--my-color)` or `--my-color`.\r\n\r\nWith this PR, we bring back the automatic var injection feature as syntactic sugar, but we use a different syntax to avoid the ambiguity. Instead of `bg-[--my-color]`, you can now write `bg-(--my-color)` to get the same effect as `bg-[var(--my-color)]`.\r\n\r\nThis also applies to modifiers, so `bg-red-500/[var(--my-opacity)]` can be written as `bg-red-500/(--my-opacity)`. To go full circle, you can rewrite `bg-[var(--my-color)]/[var(--my-opacity)]` as `bg-(--my-color)/(--my-opacity)`.\r\n\r\n---\r\n\r\nThis is implemented as syntactical sugar at the parsing stage and handled when re-printing. Internally the system (and every plugin) still see the proper `var(--my-color)` value.\r\n\r\nSince this is also handled during printing of the candidate, codemods don't need to be changed but they will provide the newly updated syntax. \r\n\r\nE.g.: running this on the Catalyst codebase, you'll now see changes like this:\r\n<img width=\"542\" alt=\"image\" src=\"https://github.com/user-attachments/assets/8f0e26f8-f4c9-4cdc-9f28-52307c38610e\">\r\n\r\nWhereas before we converted this to the much longer `min-w-[var(--button-width)]`.\r\n\r\n---\r\n\r\nAdditionally, this required some changes to the Oxide scanner to make sure that `(` and `)` are valid characters for arbitrary-like values.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15020","RelatedDescription":"Closed or merged PR \"Re-introduce automatic var injection shorthand\" (#15020)"},{"Id":"2666577481","IsPullRequest":true,"CreatedAt":"2024-11-18T09:30:46","Actor":"depfu[bot]","Number":"15024","RawContent":null,"Title":"Update postcss 8.4.47 → 8.4.49 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this upgrade. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ postcss (8.4.47 → 8.4.49) · [Repo](https://github.com/postcss/postcss) · [Changelog](https://github.com/postcss/postcss/blob/main/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/postcss/postcss/releases/tag/8.4.49\">8.4.49</a></h4>\n\n<blockquote><ul dir=\"auto\">\n<li>Fixed custom syntax without <code class=\"notranslate\">source.offset</code> (by <a href=\"https://bounce.depfu.com/github.com/romainmenke\">@romainmenke</a>).</li>\n</ul></blockquote>\n<h4><a href=\"https://github.com/postcss/postcss/releases/tag/8.4.48\">8.4.48</a></h4>\n\n<blockquote><ul dir=\"auto\">\n<li>Fixed position calculation in error/warnings methods (by <a href=\"https://bounce.depfu.com/github.com/romainmenke\">@romainmenke</a>).</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/postcss/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/postcss/postcss/compare/5e6fd1302d2cc9a844ac99282b2b7745e4ac0ed3...aed8b899884db4bc89f60782771eecd8c7861b32\">See the full diff on Github</a>. The new version differs by 7 commits:</p>\n<ul>\n<li><a href=\"https://github.com/postcss/postcss/commit/aed8b899884db4bc89f60782771eecd8c7861b32\"><code>Release 8.4.49 version</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/345063010bf5a9724589a9ee420bd511ec2b12bf\"><code>Fix position calculations when offset is missing (#1983)</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/77420d62919b4d53921a113bbc939ad5e5b49fe6\"><code>Release 8.4.48 version</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/341529ff4e78d7b90526e6e2eb178573192b47e3\"><code>Update dependencies</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/66fa667831bae59696d0b9ba54c2ee5b9dd74b6a\"><code>Add Node.js 23 to CI</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/1a8b261404348c7ba495af0707d6d244d66cf566\"><code>fix inconsistent position calculations (#1980)</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/1cc6ac3bf43a12460d3396e2cb76f14075daea1b\"><code>Clarify usage in docs</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15024","RelatedDescription":"Closed or merged PR \"Update postcss 8.4.47 → 8.4.49 (patch)\" (#15024)"},{"Id":"2666990652","IsPullRequest":true,"CreatedAt":"2024-11-18T09:23:22","Actor":"depfu[bot]","Number":"15026","RawContent":null,"Title":"Update tree-sitter-typescript 0.23.0 → 0.23.2 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ tree-sitter-typescript (0.23.0 → 0.23.2)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15026","RelatedDescription":"Closed or merged PR \"Update tree-sitter-typescript 0.23.0 → 0.23.2 (minor)\" (#15026)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-11-21T03:30:24.8039788Z","RunDurationInMilliseconds":446}