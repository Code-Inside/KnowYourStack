{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2968155486","IsPullRequest":false,"CreatedAt":"2025-04-03T03:10:49","Actor":"zyycn","Number":"17522","RawContent":null,"Title":"[4.1.1] Tailwindcss v4.1.x too slower，twenty times slower than 4.0.x","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nv4.1.x\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.2.4\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What browser are you using?**\n\nChrome,\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n\nhttps://github.com/zyycn/tailwindcss-v4.1.x-speed\n\n**Describe your issue**\n\nTailwindcss v4.1.x ，hot update in 4.0.x is between 100ms-200ms，but in 4.1.x is 2.3s-3s !\n\n![Image](https://github.com/user-attachments/assets/bc4a0c28-b992-49d1-a368-93e2c39fb582)\n![Image](https://github.com/user-attachments/assets/bc0c3958-f936-4b25-97f7-61ac929be420)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17522","RelatedDescription":"Open issue \"[4.1.1] Tailwindcss v4.1.x too slower，twenty times slower than 4.0.x\" (#17522)"},{"Id":"2967876265","IsPullRequest":false,"CreatedAt":"2025-04-03T00:49:33","Actor":"tremby","Number":"17520","RawContent":null,"Title":"inset-shadow-[spec1,spec2] renders all but the first shadow spec outset, not inset","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.17 in my app, v4.11 in \"Tailwind Play\"\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 15.2.4 but n/a\n\n**What version of Node.js are you using?**\n\nv20.10.0 but n/a\n\n**What browser are you using?**\n\nFirefox but affects all\n\n**What operating system are you using?**\n\nLinux but affects all\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/gI32O7VLv6\n\n**Describe your issue**\n\nI would expect `inset-shadow-[shadowspec1,shadowspec2]` to render 2 inset shadows, but in fact all but the first are rendered as outer shadows.\n\nIn my reproduction the second shadow is red, and should appear inside the element on the right side, but it appears outside the element on the left side.\n\nI can work around it by adding `inset_` at the start of the 2nd (and further) shadow specs, such as with `inset-shadow-[shadowspec1,inset_shadowspec2]`","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17520","RelatedDescription":"Open issue \"inset-shadow-[spec1,spec2] renders all but the first shadow spec outset, not inset\" (#17520)"},{"Id":"2967434026","IsPullRequest":false,"CreatedAt":"2025-04-02T20:09:37","Actor":"epic-rinn","Number":"17517","RawContent":null,"Title":"Tailwind CSS (@tailwindcss/vite) Base Styles Incorrectly Overridden by `md:` Media Queries in Chrome/Arc, but not Firefox/Safari","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nv4.1.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nAstro v5.5.6, @tailwindcss/vite v4.1.1\n\n**What version of Node.js are you using?**\n\nv23.10.0\n\n**What browser are you using?**\n\nChrome 134.0.6998.166 (Official Build) (arm64), Arc 134.0.6998.166 (Official Build) (arm64)\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\n[Repository](https://github.com/epic-rinn/chrome-tailwind-vite-bug)\n\n**Describe your issue**\n\nTailwind CSS base styles (without media query prefixes) are being incorrectly overridden by `md:` media query prefixed styles in Google Chrome and Arc browsers, even when the screen size is below the `md` breakpoint. However, `lg:` media query prefixed styles work as expected when the screen size meets or exceeds the `lg` breakpoint. This issue does not occur in Firefox or Safari, where base styles are applied correctly on smaller screens.\n\n**Steps to Reproduce:**\n\n1.  Create an Astro component or page with the following code (replace `property` and `value` with your specific Tailwind utility classes):\n\n    ```html\n    <div class=\"property-value md:property-value-md lg:property-value-lg\"></div>\n    ```\n\n    For example, using background color:\n    ```html\n    <div class=\"bg-black md:bg-white lg:bg-black\"></div>\n    ```\n    Or using text color:\n    ```html\n    <div class=\"text-red-500 md:text-blue-500 lg:text-green-500\"></div>\n    ```\n\n2.  Run the Astro development server.\n3.  Open the page in Google Chrome or Arc browser.\n4.  Observe that the `md:property-value-md` style is applied, even when the browser window is smaller than the `md` breakpoint (768px by default).\n5.  Resize the browser window to be larger than the `lg` breakpoint (1024px by default).\n6.  Observe that the `lg:property-value-lg` style is correctly applied.\n7.  Open the same page in Firefox or Safari.\n8.  Observe that the `property-value` style is applied on smaller screens and `md:property-value-md` on medium screens and larger, as expected.\n\n**Expected Behavior:**\n\nThe base styles (without media query prefixes) should apply on all screen sizes below the `md` breakpoint in all browsers.\n\n**Actual Behavior:**\n\nIn Chrome and Arc, the `md:` media query prefixed styles override the base styles even on smaller screens.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17517","RelatedDescription":"Open issue \"Tailwind CSS (@tailwindcss/vite) Base Styles Incorrectly Overridden by `md:` Media Queries in Chrome/Arc, but not Firefox/Safari\" (#17517)"},{"Id":"2967048687","IsPullRequest":false,"CreatedAt":"2025-04-02T17:08:31","Actor":"ZeldOcarina","Number":"17516","RawContent":null,"Title":"[v4] @theme font and text variables do not combine properly anymore","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.1.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nTailwind Play\n\n**What version of Node.js are you using?**\n\nUnknown\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/2B3dTvVvst?file=css\n\n**Describe your issue**\n\nBefore on v3 when using the js config I could combine font weights, colors and families under the same name. Now size and weight is overlooked and only color and font family is used.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17516","RelatedDescription":"Open issue \"[v4] @theme font and text variables do not combine properly anymore\" (#17516)"},{"Id":"2966980324","IsPullRequest":true,"CreatedAt":"2025-04-02T16:36:25","Actor":"thecrypticace","Number":"17515","RawContent":null,"Title":"Fix drop shadow filters with multiple shadows","State":"open","Body":"It seems that I broke support for multiple drop-shadow filters when `@theme inline` was used in v4.1. This PR fixes that by segmenting the drop shadow value on top-level commas and wrapping each segment with `drop-shadow(…)` like we did in v4.0.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17515","RelatedDescription":"Open PR \"Fix drop shadow filters with multiple shadows\" (#17515)"},{"Id":"2966961314","IsPullRequest":true,"CreatedAt":"2025-04-02T16:27:46","Actor":"RobinMalfait","Number":"17514","RawContent":null,"Title":"Fix race condition in Next.js with `--turbopack`","State":"open","Body":"This PR fixes an issue where if you use Next.js with `--turbopack` a race condition happens because the `@tailwindcss/postcss` plugin is called twice in rapid succession. \n\nThe first call sees an update and does a partial update with the new classes. Next some internal `mtimes` are updated. The second call therefore doesn't see any changes anymore because the `mtimes` are the same, therefore it's serving its stale data.\n\nFixes: #17508\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17514","RelatedDescription":"Open PR \"Fix race condition in Next.js with `--turbopack`\" (#17514)"},{"Id":"2966265837","IsPullRequest":true,"CreatedAt":"2025-04-02T16:16:29","Actor":"philipp-spiess","Number":"17506","RawContent":null,"Title":"Use `@layer properties` for `@property` polyfills","State":"closed","Body":"This PR changes how polyfills for `@property` are inserted. The main motivation is to remove the need to rely on the correct placement of `@layer base;`—Something that's not really required right not in Tailwind CSS v4 and we'd like to keep it this way.\r\n\r\nThe idea is that the polyfills are inserted for you automatically. To ensure they always take precedence, we insert an empty `@layer properties;` at the top of the CSS file so that later, when we emit all `@property` rules and their fallback, we can use this new named layer to ensure the rules have a higher order.\r\n\r\nUnfortunately, just putting `@layer properties;` at the beginning of a file would not work as `lightningcss` incorrectly hoists all content into the first occurrence of a layer name meaning these rules might be inserted _before_ eventual external imports: \r\n\r\n![image](https://github.com/user-attachments/assets/c5a1694d-1549-47ed-ad0f-266807be4730)\r\n\r\nTo work around this, we have to insert that layer name after any eventual remaining external `@imports` for now.\r\n\r\n## Test plan\r\n\r\n- Updated snapshot tests\r\n- Deployed a new version of the website with the patch applied to ensure it works across browsers: https://tailwindcss-com-git-legacy-browsers-tailwindlabs.vercel.app/. Tested on: Safari on iOS 15.5, Safari on iOS 16.0, Firefox 127, Firefox 128, Chrome 110, Chrome latest, Safari latest, Firefox latest\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17506","RelatedDescription":"Closed or merged PR \"Use `@layer properties` for `@property` polyfills\" (#17506)"},{"Id":"2966927014","IsPullRequest":true,"CreatedAt":"2025-04-02T16:11:25","Actor":"philipp-spiess","Number":"17513","RawContent":null,"Title":"Polyfill: Fall back to first color value when `color-mix(…)` contains unresolvable `var(…)`","State":"open","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17513","RelatedDescription":"Open PR \"Polyfill: Fall back to first color value when `color-mix(…)` contains unresolvable `var(…)`\" (#17513)"},{"Id":"2966807777","IsPullRequest":false,"CreatedAt":"2025-04-02T15:35:14","Actor":"rasmus-dybmose","Number":"17512","RawContent":null,"Title":"Missing global.css file when using Tailwindcss Vite plugin","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nQwik 1.13.0, Vite 5.3.5\n\n**What version of Node.js are you using?**\n\nv23.8.0\n\n**What browser are you using?**\n\nEdge\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n\nhttps://github.com/[rasmus-dybmose/qwik-tailwindcss](https://github.com/rasmus-dybmose/qwik-tailwindcss)\n\n**Describe your issue**\n\nTailwindcss is not working when using the latest version (v4.1.1) if I change the version to v4.0.17 (fixed) it works again.\n\nIt-looks like the browser can't fetch the ./src/global.css file, it dissaperes if I add the tailwindcss plugin to vite\n\nhttps://github.com/user-attachments/assets/e008d5eb-f92b-4b96-9fc1-27e8b15235ee","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17512","RelatedDescription":"Open issue \"Missing global.css file when using Tailwindcss Vite plugin\" (#17512)"},{"Id":"2966559584","IsPullRequest":true,"CreatedAt":"2025-04-02T14:24:41","Actor":"philipp-spiess","Number":"17511","RawContent":null,"Title":"Fix slow builds (especially on Windows)","State":"open","Body":"This PR fixes slow rebuilds on Windows where rebuilds go from ~650ms to ~15ms.\r\n\r\nFixes: #16911","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17511","RelatedDescription":"Open PR \"Fix slow builds (especially on Windows)\" (#17511)"},{"Id":"2966552107","IsPullRequest":true,"CreatedAt":"2025-04-02T14:21:56","Actor":"teddybradford","Number":"17510","RawContent":null,"Title":"Replace currentColor with currentcolor (lowercase)","State":"open","Body":"Replaces `currentColor` with `currentcolor` (lowercase) to match what's defined in [CSS Color Module Level 4](https://www.w3.org/TR/css-color-4/#currentcolor-color) and [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#currentcolor_keyword) (see: https://github.com/mdn/content/pull/16592).","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17510","RelatedDescription":"Open PR \"Replace currentColor with currentcolor (lowercase)\" (#17510)"},{"Id":"2966496123","IsPullRequest":true,"CreatedAt":"2025-04-02T14:02:40","Actor":"DotwoodMedia","Number":"17509","RawContent":null,"Title":"fix: enhance hover variant to include pointer fine media query","State":"open","Body":"<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n\r\nAdded an extra check that disables hover on chrome mobile. At the moment hover remains active in the latest version of chrome","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17509","RelatedDescription":"Open PR \"fix: enhance hover variant to include pointer fine media query\" (#17509)"},{"Id":"2966441923","IsPullRequest":false,"CreatedAt":"2025-04-02T13:43:37","Actor":"aydinvivik","Number":"17508","RawContent":null,"Title":"Tailwind CSS Not Updating Global Styles on Latest Version","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 15.2.4\n\n**What version of Node.js are you using?**\n\nv22.12.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n\nAfter updating to the latest version of Tailwind CSS, global styles defined in global.css are not updating properly. The issue persists even after clearing the Next.js cache and restarting the development server. This was not an issue in the previous versions.\n\nhttps://github.com/user-attachments/assets/69c7097e-9d47-48ab-8352-b90c0791c194\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17508","RelatedDescription":"Open issue \"Tailwind CSS Not Updating Global Styles on Latest Version\" (#17508)"},{"Id":"2964463999","IsPullRequest":true,"CreatedAt":"2025-04-02T12:40:21","Actor":"RobinMalfait","Number":"17490","RawContent":null,"Title":"Ensure polyfills exist after external `@import` at-rules","State":"closed","Body":"This PR fixes an issue where external `@import url(…)` at-rules were not at the top anymore due to the polyfills being pre-pended to the CSS output.\n\nTo solve this, we will inject a `@layer __tw-properties;` as a placeholder to at the top of the file. A body-less `@layer` is allowed to exist before any other rules in the file.\n\nLater we inject all the polyfills at the bottom of the file inside the `@layer __tw-polyfills;` at-rule.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17490","RelatedDescription":"Closed or merged PR \"Ensure polyfills exist after external `@import` at-rules\" (#17490)"},{"Id":"2966059768","IsPullRequest":false,"CreatedAt":"2025-04-02T12:15:14","Actor":"christophsaile","Number":"17505","RawContent":null,"Title":"[v4] Child Selector (*:) not working with component classes","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n v4.1.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nreact 19.1.0, Vite 6.2.4\n\n**What version of Node.js are you using?**\n\n v20.18.0\n\n**What browser are you using?**\n\nEdge\n\n**What operating system are you using?**\n\n macOS\n\n**Reproduction URL**\n\nhttps://github.com/christophsaile/tw-child-selector\n\n**Describe your issue**\n\nI recently updated to TailwindCSS v4. I noticed that child selectors are not working anymore with custom classes.\n\n![Image](https://github.com/user-attachments/assets/59dd1c86-fe31-443e-bea6-0af828306a83)\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17505","RelatedDescription":"Closed issue \"[v4] Child Selector (*:) not working with component classes\" (#17505)"},{"Id":"2965444293","IsPullRequest":false,"CreatedAt":"2025-04-02T10:38:09","Actor":"chenjmdgjl","Number":"17498","RawContent":null,"Title":"v4.1.0 handling different layer orders in conditional rules is unsupported","State":"closed","Body":"\"vite\": \"^6.2.4\"\n\"@tailwindcss/vite\": \"^4.1.0\",\n\"tailwindcss\": \"^4.1.0\",\n\n\n14:58:18 [WARN] [vite] [vite:css][postcss] handling different layer orders in conditional rules is unsupported by this plugin and will cause style differences between browser versions.\n1 | /*! tailwindcss v4.1.0 | MIT License | https://tailwindcss.com/ */\n2 | @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {\n3 | @layer base {\n| ^^^^^^^^^^^^^\n4 | *, ::before, ::after, ::backdrop {\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n5 | --tw-space-y-reverse: 0;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n6 | --tw-border-style: solid;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n7 | --tw-font-weight: initial;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n8 | --tw-shadow: 0 0 #0000;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n9 | --tw-shadow-color: initial;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n10 | --tw-shadow-alpha: 100%;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n11 | --tw-inset-shadow: 0 0 #0000;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n12 | --tw-inset-shadow-color: initial;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n13 | --tw-inset-shadow-alpha: 100%;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n14 | --tw-ring-color: initial;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n15 | --tw-ring-shadow: 0 0 #0000;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n16 | --tw-inset-ring-color: initial;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n17 | --tw-inset-ring-shadow: 0 0 #0000;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n18 | --tw-ring-inset: initial;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n19 | --tw-ring-offset-width: 0px;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n20 | --tw-ring-offset-color: #fff;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n21 | --tw-ring-offset-shadow: 0 0 #0000;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n22 | --tw-outline-style: solid;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n23 | }\n| ^^^^^\n24 | }\n| ^^^","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17498","RelatedDescription":"Closed issue \"v4.1.0 handling different layer orders in conditional rules is unsupported\" (#17498)"},{"Id":"2965495291","IsPullRequest":false,"CreatedAt":"2025-04-02T09:49:13","Actor":"madsenmm","Number":"17499","RawContent":null,"Title":"Custom utility duplicates when using `@source inline(…)`","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n`\"@tailwindcss/cli\": \"^4.1.0\"`\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What browser are you using?**\n\nChromium (Arc)\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nTailwind playground doesn't include the v4.1.0 yet, and doesn't work in the builders version?\nhttps://play.tailwindcss.com/OAr3yqRpwD\n\nBut this generates in an environment the following, both in watch mode, and in production builds.\n\n```css\n.pb-large {\n    padding-bottom: var(--padding-large);\n  }\n  .pb-large {\n    padding-bottom: var(--padding-large);\n  }\n  .pb-medium {\n    padding-bottom: var(--padding-medium);\n  }\n  .pb-medium {\n    padding-bottom: var(--padding-medium);\n  }\n  .pb-normal {\n    padding-bottom: var(--padding-normal);\n  }\n  .pb-normal {\n    padding-bottom: var(--padding-normal);\n  }\n  .pb-small {\n    padding-bottom: var(--padding-small);\n  }\n  .pb-small {\n    padding-bottom: var(--padding-small);\n  }\n  .pb-xlarge {\n    padding-bottom: var(--padding-xlarge);\n  }\n  .pb-xlarge {\n    padding-bottom: var(--padding-xlarge);\n  }\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17499","RelatedDescription":"Closed issue \"Custom utility duplicates when using `@source inline(…)`\" (#17499)"},{"Id":"2964905827","IsPullRequest":false,"CreatedAt":"2025-04-02T09:38:51","Actor":"sntran","Number":"17495","RawContent":null,"Title":"[v4] Combine `has` with `only` and custom variant","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.17\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/U8YlnE1BtV\n\n**Describe your issue**\n\nWhen combining multiple variants, not sure which order would work. In this case, I have a custom variant to select a link, and I try to style any element that has only link inside. `has-link` works fine, as well as `has-only`, but other cases I try do not work, i.e., `has-only-link`, `has-link-only`, `only-has-link`.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17495","RelatedDescription":"Closed issue \"[v4] Combine `has` with `only` and custom variant\" (#17495)"},{"Id":"2965775794","IsPullRequest":true,"CreatedAt":"2025-04-02T09:27:59","Actor":"RobinMalfait","Number":"17503","RawContent":null,"Title":"Prepare release v4.1.1","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17503","RelatedDescription":"Closed or merged PR \"Prepare release v4.1.1\" (#17503)"},{"Id":"2965713054","IsPullRequest":false,"CreatedAt":"2025-04-02T09:16:59","Actor":"JonnyBurger","Number":"17501","RawContent":null,"Title":"`@tailwindcss/cli@4.1.0` misses `jiti` dependency","State":"closed","Body":"https://unpkg.com/@tailwindcss/cli@4.1.0/dist/index.mjs contains\n\n```js\nimport{createJiti as Xl}from\"jiti\"\n```\n\nHowever, `jiti` is not in `dependencies` of `@tailwindcss/cli`:\n\n\n```\n  \"dependencies\": {\n    \"@parcel/watcher\": \"^2.5.1\",\n    \"enhanced-resolve\": \"^5.18.1\",\n    \"mri\": \"^1.2.0\",\n    \"picocolors\": \"^1.1.1\",\n    \"@tailwindcss/node\": \"4.1.0\",\n    \"@tailwindcss/oxide\": \"4.1.0\",\n    \"tailwindcss\": \"4.1.0\"\n  },\n```\n\nGranted, `@tailwindcss/node` does have `jiti` as a dependency.\nBut my monorepo does have a different version of `jiti` which is on version 1.x, which means the unintended version was resolved.\n\nMy suggestion is to add it as an explicit dependency and pin the version for robustness.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17501","RelatedDescription":"Closed issue \"`@tailwindcss/cli@4.1.0` misses `jiti` dependency\" (#17501)"},{"Id":"2965743388","IsPullRequest":true,"CreatedAt":"2025-04-02T09:16:58","Actor":"philipp-spiess","Number":"17502","RawContent":null,"Title":"Use `@tailwindcss/node` for import in CLI","State":"closed","Body":"Closes #17501\r\n\r\nSeems like an oversight. The CLI does have a dependency on `@tailwindcss/node` so it should use it from the public import like the other stuff.\r\n\r\n## Test plan\r\n\r\nLooked at the minified `dist/` output to ensure the import for `jiti` is gone","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17502","RelatedDescription":"Closed or merged PR \"Use `@tailwindcss/node` for import in CLI\" (#17502)"},{"Id":"2965658108","IsPullRequest":false,"CreatedAt":"2025-04-02T09:09:38","Actor":"JonnyBurger","Number":"17500","RawContent":null,"Title":"Brittle \"depencies\" field potentially breaks Tailwind 4.0.0","State":"closed","Body":"This might already be fixed in the latest version, but still filing my investigation, just in case somebody has this problem and the maintainers want to know about it:\n\n`@tailwindcss/postcss@4.0.0` has the following dependencies:\n\n\n```\n \"dependencies\": {\n    \"@alloc/quick-lru\": \"^5.2.0\",\n    \"lightningcss\": \"^1.29.1\",\n    \"postcss\": \"^8.4.41\",\n    \"@tailwindcss/node\": \"^4.0.0\",\n    \"@tailwindcss/oxide\": \"^4.0.0\",\n    \"tailwindcss\": \"4.0.0\"\n  },\n```\n\nIf you now install `@tailwindcss/postcss@4.0.0`, it will install `@tailwindcss/node@4.1.0`, which is incompatible.\n\nThe following error will come up in a Webpack project:\n\n```\nERROR in ./src/index.css (./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./src/index.css)\nModule build failed (from ./node_modules/postcss-loader/dist/cjs.js):\nError: Missing field `negated` on ScannerOptions.sources\n```\n\nThis issue seems to have been fixed, 4.1.0 now pins the exact versions.\nSo the issue can be closed, I just wanted to document it somewhere.\n\nSolution is to just use Tailwind 4.1.0+.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17500","RelatedDescription":"Closed issue \"Brittle \"depencies\" field potentially breaks Tailwind 4.0.0\" (#17500)"},{"Id":"2964581546","IsPullRequest":false,"CreatedAt":"2025-04-02T09:05:37","Actor":"liborjelinek","Number":"17494","RawContent":null,"Title":"v4.1.0 CLI does not put @import at the beginning","State":"closed","Body":"Few minutes ago released v4.1.0 generated broken CSS. `@import URL()` like for Google Fonts are not preserved at the top when they are at the top of `input.css`.\n\ninput.css:\n```\n@import url(\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700;800;900&display=fallback\");\n@import \"tailwindcss\";\n...\n```\n\noutput.css in v4.1.0 (incorrect):\n```\n/*! tailwindcss v4.1.0 | MIT License | https://tailwindcss.com */\n@supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {\n  @layer base {\n    *, ::before, ::after, ::backdrop {\n      --tw-translate-x: 0;\n      --tw-translate-y: 0;\n      --tw-translate-z: 0;\n      --tw-scale-x: 1;\n      --tw-scale-y: 1;\n      --tw-scale-z: 1;\n      --tw-rotate-x: rotateX(0);\n      --tw-rotate-y: rotateY(0);\n      --tw-rotate-z: rotateZ(0);\n      --tw-skew-x: skewX(0);\n      --tw-skew-y: skewY(0);\n      --tw-space-y-reverse: 0;\n      --tw-space-x-reverse: 0;\n      --tw-border-style: solid;\n      --tw-gradient-position: initial;\n      --tw-gradient-from: #0000;\n      --tw-gradient-via: #0000;\n      --tw-gradient-to: #0000;\n      --tw-gradient-stops: initial;\n      --tw-gradient-via-stops: initial;\n      --tw-gradient-from-position: 0%;\n      --tw-gradient-via-position: 50%;\n      --tw-gradient-to-position: 100%;\n      --tw-leading: initial;\n      --tw-font-weight: initial;\n      --tw-tracking: initial;\n      --tw-ordinal: initial;\n      --tw-slashed-zero: initial;\n      --tw-numeric-figure: initial;\n      --tw-numeric-spacing: initial;\n      --tw-numeric-fraction: initial;\n      --tw-shadow: 0 0 #0000;\n      --tw-shadow-color: initial;\n      --tw-shadow-alpha: 100%;\n      --tw-inset-shadow: 0 0 #0000;\n      --tw-inset-shadow-color: initial;\n      --tw-inset-shadow-alpha: 100%;\n      --tw-ring-color: initial;\n      --tw-ring-shadow: 0 0 #0000;\n      --tw-inset-ring-color: initial;\n      --tw-inset-ring-shadow: 0 0 #0000;\n      --tw-ring-inset: initial;\n      --tw-ring-offset-width: 0px;\n      --tw-ring-offset-color: #fff;\n      --tw-ring-offset-shadow: 0 0 #0000;\n      --tw-blur: initial;\n      --tw-brightness: initial;\n      --tw-contrast: initial;\n      --tw-grayscale: initial;\n      --tw-hue-rotate: initial;\n      --tw-invert: initial;\n      --tw-opacity: initial;\n      --tw-saturate: initial;\n      --tw-sepia: initial;\n      --tw-drop-shadow: initial;\n      --tw-drop-shadow-color: initial;\n      --tw-drop-shadow-alpha: 100%;\n      --tw-drop-shadow-size: initial;\n      --tw-backdrop-blur: initial;\n      --tw-backdrop-brightness: initial;\n      --tw-backdrop-contrast: initial;\n      --tw-backdrop-grayscale: initial;\n      --tw-backdrop-hue-rotate: initial;\n      --tw-backdrop-invert: initial;\n      --tw-backdrop-opacity: initial;\n      --tw-backdrop-saturate: initial;\n      --tw-backdrop-sepia: initial;\n      --tw-duration: initial;\n      --tw-ease: initial;\n      --tw-content: \"\";\n    }\n  }\n}\n@import url(\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700;800;900&display=fallback\");\n@import url(\"https://fonts.googleapis.com/css2?family=Rubik:ital,wght@0,400;0,700;1,400;1,700&display=swap\");\n@import url(\"vendors/aos.css\");\n@layer theme, base, components, utilities;\n@layer theme {\n  :root, :host {\n...\n```\n\nbut v4.0.17 generates (correct):\n\n```\n/*! tailwindcss v4.0.17 | MIT License | https://tailwindcss.com */\n@import url(\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700;800;900&display=fallback\");\n@import url(\"https://fonts.googleapis.com/css2?family=Rubik:ital,wght@0,400;0,700;1,400;1,700&display=swap\");\n@import url(\"vendors/aos.css\");\n@layer theme, base, components, utilities;\n@layer theme {\n...\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17494","RelatedDescription":"Closed issue \"v4.1.0 CLI does not put @import at the beginning\" (#17494)"},{"Id":"2964569989","IsPullRequest":true,"CreatedAt":"2025-04-02T09:05:35","Actor":"RobinMalfait","Number":"17493","RawContent":null,"Title":"Inject polyfills after `@import` and body-less `@layer`","State":"closed","Body":"This PR fixes an issue where polyfills were injected at the top, but they should be after `@import` and body-less `@layer` rules.\r\n\r\nThis is necessary in case you are using Google fonts like this for example:\r\n```css\r\n@import url('https://fonts.google.com');\r\n@import \"tailwindcss\";\r\n```\r\n\r\nWhile the `@import url(…);` sits above `@import \"tailwindcss\";` in the final generated CSS we injected the polyfills at the very beginning.\r\n\r\nThis PR will inject the polyfills after the first AST Node that is not:\r\n1. A comment\r\n2. An external import — `@import url(…)`\r\n3. A body-less layer — `@layer foo, bar, baz;`\r\n\r\nThe snapshots look a little confusing, but that's because Lightning CSS is optimizing the output and moving things around a bit:\r\n\r\n<img width=\"1482\" alt=\"image\" src=\"https://github.com/user-attachments/assets/a0552c8b-93df-4e1d-ad90-8b8abf9492b1\" />\r\n\r\n[Lightning CSS Playground](https://lightningcss.dev/playground/index.html#%7B%22minify%22%3Afalse%2C%22customMedia%22%3Atrue%2C%22cssModules%22%3Afalse%2C%22analyzeDependencies%22%3Afalse%2C%22targets%22%3A%7B%22chrome%22%3A6225920%7D%2C%22include%22%3A0%2C%22exclude%22%3A0%2C%22source%22%3A%22%40layer%20theme%2C%20base%2C%20components%2C%20utilities%3B%5Cn%5Cn%40supports%20(((-webkit-hyphens%3A%20none))%20and%20(not%20(margin-trim%3A%20inline)))%20or%20((-moz-orient%3A%20inline)%20and%20(not%20(color%3A%20rgb(from%20red%20r%20g%20b))))%20%7B%5Cn%20%20%40layer%20base%20%7B%5Cn%20%20%20%20*%2C%20%3Abefore%2C%20%3Aafter%2C%20%3A%3Abackdrop%20%7B%5Cn%20%20%20%20%20%20--tw-font-weight%3A%20initial%3B%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%7D%5Cn%5Cn%40layer%20theme%20%7B%5Cn%20%20%3Aroot%2C%20%3Ahost%20%7B%5Cn%20%20%20%20--font-sans%3A%20ui-sans-serif%2C%20system-ui%2C%20sans-serif%2C%20%5C%22Apple%20Color%20Emoji%5C%22%2C%20%5C%22Segoe%20UI%20Emoji%5C%22%2C%20%5C%22Segoe%20UI%20Symbol%5C%22%2C%20%5C%22Noto%20Color%20Emoji%5C%22%3B%5Cn%20%20%20%20--font-mono%3A%20ui-monospace%2C%20SFMono-Regular%2C%20Menlo%2C%20Monaco%2C%20Consolas%2C%20%5C%22Liberation%20Mono%5C%22%2C%20%5C%22Courier%20New%5C%22%2C%20monospace%3B%5Cn%20%20%20%5Cn%20%20%7D%5Cn%7D%5Cn%5Cn%40layer%20base%20%7B%5Cn%20%20*%2C%20%3Aafter%2C%20%3Abefore%2C%20%3A%3Abackdrop%20%7B%5Cn%20%20%20%20box-sizing%3A%20border-box%3B%5Cn%20%20%20%20border%3A%200%20solid%3B%5Cn%20%20%20%20margin%3A%200%3B%5Cn%20%20%20%20padding%3A%200%3B%5Cn%20%20%7D%5Cn%7D%5Cn%5Cn%40layer%20utilities%20%7B%5Cn%20%20.text-2xl%20%7B%5Cn%20%20%20%20font-size%3A%20var(--text-2xl)%3B%5Cn%20%20%20%20line-height%3A%20var(--tw-leading%2C%20var(--text-2xl--line-height))%3B%5Cn%20%20%7D%5Cn%7D%5Cn%5Cn%40property%20--tw-font-weight%20%7B%5Cn%20%20syntax%3A%20%5C%22*%5C%22%3B%5Cn%20%20inherits%3A%20false%5Cn%7D%22%2C%22visitorEnabled%22%3Afalse%2C%22visitor%22%3A%22%7B%5Cn%20%20Color(color)%20%7B%5Cn%20%20%20%20if%20(color.type%20%3D%3D%3D%20'rgb')%20%7B%5Cn%20%20%20%20%20%20color.g%20%3D%200%3B%5Cn%20%20%20%20%20%20return%20color%3B%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%7D%22%2C%22unusedSymbols%22%3A%5B%5D%2C%22version%22%3A%22local%22%7D)\r\n\r\nFixes: #17494 \r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17493","RelatedDescription":"Closed or merged PR \"Inject polyfills after `@import` and body-less `@layer`\" (#17493)"},{"Id":"2964554087","IsPullRequest":false,"CreatedAt":"2025-04-01T20:55:05","Actor":"wongjn","Number":"17492","RawContent":null,"Title":"`@source inline(…)` incorrectly pads number values for unequal significant number ranges","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n`@tailwindcss/cli`\n\n**What version of Node.js are you using?**\n\nv20.11.0\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nUbuntu 20.04.6 LTS in WSL2\n\n**Reproduction URL**\n\nNot needed, see below.\n\n**Describe your issue**\n\nIn `packages/tailwindcss/src/utils/brace-expansion.test.ts`, add the following test:\n\n```css\n[\n  'z-{10..100..10}',\n  [\n    'z-10',\n    'z-20',\n    'z-30',\n    'z-40',\n    'z-50',\n    'z-60',\n    'z-70',\n    'z-80',\n    'z-90',\n    'z-100',\n  ],\n],\n```\nThe relevant test output is as follows:\n```diff\n FAIL  |tailwindcss| src/utils/brace-expansion.test.ts > expand(…) > should expand z-{10..100..10}\nAssertionError: expected [ 'z-010', 'z-020', 'z-030', …(7) ] to deeply equal [ 'z-10', 'z-100', 'z-20', …(7) ]\n\n- Expected\n+ Received\n\n  Array [\n-   \"z-10\",\n+   \"z-010\",\n+   \"z-020\",\n+   \"z-030\",\n+   \"z-040\",\n+   \"z-050\",\n+   \"z-060\",\n+   \"z-070\",\n+   \"z-080\",\n+   \"z-090\",\n    \"z-100\",\n-   \"z-20\",\n-   \"z-30\",\n-   \"z-40\",\n-   \"z-50\",\n-   \"z-60\",\n-   \"z-70\",\n-   \"z-80\",\n-   \"z-90\",\n  ]\n\n ❯ src/utils/brace-expansion.test.ts:81:34\n     79|     ['{1.1..2.2}', ['1.1..2.2']],*/\n     80|   ])('should expand %s', (input, expected) => {\n     81|     expect(expand(input).sort()).toEqual(expected.sort())\n       |                                  ^\n     82|   })\n     83| \n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17492","RelatedDescription":"Closed issue \"`@source inline(…)` incorrectly pads number values for unequal significant number ranges\" (#17492)"},{"Id":"2964539222","IsPullRequest":true,"CreatedAt":"2025-04-01T20:55:04","Actor":"philipp-spiess","Number":"17491","RawContent":null,"Title":"Disable padding in `@source inline(…)` brace expansion","State":"closed","Body":"Closes #17492\r\n\r\nThe padding code we had was incorrect as it would always pad on the largest string representation. So for an input like this:\r\n\r\n```\r\n@source inline(\"z-{10..100..10}\");\r\n```\r\n\r\nIt would create the following candidates: \r\n\r\n- `z-010`\r\n- `z-020`\r\n- `z-030`\r\n- `z-040`\r\n- `z-050`\r\n- `z-060`\r\n- `z-070`\r\n- `z-060`\r\n- `z-070`\r\n- `z-100`\r\n\r\nInstead of fixing the padding logic we realized that Tailwind utilities don't need padding at all so this PR removes this feature\r\n\r\n## Test plan\r\n\r\n- Added the following to the Vite playground: `@source inline(\"z-{10..100..10}\");`\r\n- Ensure it works: \r\n![image](https://github.com/user-attachments/assets/f4714729-4ef7-4678-a531-70b471e75e6e)\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17491","RelatedDescription":"Closed or merged PR \"Disable padding in `@source inline(…)` brace expansion\" (#17491)"},{"Id":"2964457980","IsPullRequest":false,"CreatedAt":"2025-04-01T20:10:35","Actor":"pmlk","Number":"17489","RawContent":null,"Title":"Arbitrary properties no longer work in v4.1.0","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n@tailwindcss/cli\n\n**What version of Node.js are you using?**\n\nv23.9.0\n\n**What browser are you using?**\n\nChrome, Safari, or N/A\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://github.com/pmlk/tailwindcss-issue-v4-1-0\n\n**Describe your issue**\n\nArbitrary properties no longer seem to work, e.g. `<h1 class=\"[background-color:red;]\">foo</h1>` will no longer render a red background on the element.\n\nSteps to reproduce with the reproduction repo:\n\n1. `npm run build`\n    * generates `dist/styles.css` and\n    * copies `src/index.html` to `dist/index.html`\n2. `open dist/index.html` \n    * background of the `<h1>` **is not red** but SHOULD be red\n4. edit the version of `@tailwindcss/cli` in `package.json` to `4.0.17`\n5. `npm update`\n6. `npm run build`\n7. `open dist/index.html`\n    * background of the `<h1>` **is red** as expected","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17489","RelatedDescription":"Closed issue \"Arbitrary properties no longer work in v4.1.0\" (#17489)"},{"Id":"2963358454","IsPullRequest":true,"CreatedAt":"2025-04-01T16:05:18","Actor":"philipp-spiess","Number":"17483","RawContent":null,"Title":"Prepare 4.1.0 release","State":"closed","Body":"[ci-all]","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17483","RelatedDescription":"Closed or merged PR \"Prepare 4.1.0 release\" (#17483)"},{"Id":"2963505581","IsPullRequest":true,"CreatedAt":"2025-04-01T15:12:22","Actor":"RobinMalfait","Number":"17484","RawContent":null,"Title":"Refactor codemod structure","State":"closed","Body":"This PR is an internal refactor of the codemods package structure that will make a few follow-up PRs easier.\r\n\r\nEssentially what happens is:\r\n\r\n\r\n1. Moved `./src/template/` into `src/codemods/template/`\r\n2. Moved `./src/codemods` into `./src/codemods/css` (because the CSS related codemods already)\r\n3. Moved the migration files for the JS config, PostCSS config and Prettier config into `./src/codemods/config/`.\r\n4. Made filenames with actual migrations consistent by prefixing them with `migrate-`.\r\n5. Made sure that all the migration functions also use `migrate…`\r\n\r\nWhen looking at this PR, go commit by commit, it will be easier. In a lot of cases, it's just moving files around but those commits also come with changes to the code just to update the imports.\r\n\r\n[ci-all]\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17484","RelatedDescription":"Closed or merged PR \"Refactor codemod structure\" (#17484)"},{"Id":"2963321023","IsPullRequest":true,"CreatedAt":"2025-04-01T12:37:41","Actor":"AlemTuzlak","Number":"17482","RawContent":null,"Title":"feat: add ignore option to tailwind plugin","State":"open","Body":"Added an optional ignore flag for the tailwind plugin to ignore certain files and allow for easier configuration with other plugins\r\n\r\nNeeded for better interop with other plugins, eg:\r\nhttps://github.com/tailwindlabs/tailwindcss/discussions/16712","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17482","RelatedDescription":"Open PR \"feat: add ignore option to tailwind plugin\" (#17482)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-04-03T03:30:20.7206358Z","RunDurationInMilliseconds":399}