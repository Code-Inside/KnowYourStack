{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2839247762","IsPullRequest":false,"CreatedAt":"2025-02-07T23:01:44","Actor":"wongjn","Number":"16358","RawContent":null,"Title":"Vue static vdom stringifier breaks PostCSS in Nuxt Production build","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nnuxt@3.15.4\n\n**What version of Node.js are you using?**\n\nv20.11.0\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nUbuntu 20.04.6 LTS (in Windows Subsystem for Linux)\n\n**Reproduction URL**\n\nhttps://github.com/wongjn/tailwind-nuxt\n\n**Describe your issue**\n\nSee my original debugging journey at https://github.com/tailwindlabs/tailwindcss/discussions/15818#discussioncomment-12098822\n\nPerhaps related to https://github.com/tailwindlabs/tailwindcss/issues/16133 in terms of HTML entity encoding causing the issue.\n\nWhen you have a template with enough elements with props on them, i.e:\n\n```html\n<script setup lang=\"ts\">\nconst includedFeatures = [\"Foo\", \"Bar\", \"Baz\"];\n</script>\n\n<template>\n  <main class=\"\" lang=\"de\">\n    <div class=\"\">\n      <div class=\"\">\n        <div class=\"\">\n          <div class=\"\">\n            <img class=\"\" src=\"\" alt=\"\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  </main>\n</template>\n```\n\nIt [passes a threshold in Vue's compiler to compile the template as a \"static\" VNode](https://github.com/vuejs/core/blob/119f18c773b8d437fada3e0b8b847a282182c8dd/packages/compiler-dom/src/transforms/stringifyStatic.ts#L93-L106):\n\n```js\nimport { defineComponent as _defineComponent } from 'vue'\nimport { createElementVNode as _createElementVNode, createStaticVNode as _createStaticVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = {\n  class: \"\",\n  lang: \"de\"\n}\n\n\nexport default /*@__PURE__*/_defineComponent({\n  __name: 'index',\n  setup(__props) {\n\nconst includedFeatures = [\"Foo\", \"Bar\", \"Baz\"];\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"main\", _hoisted_1, _cache[0] || (_cache[0] = [\n    _createStaticVNode(\"<div class=\\\\\"\\\\\"><div class=\\\\\"\\\\\"><div class=\\\\\"\\\\\"><div class=\\\\\"\\\\\"><img class=\\\\\"\\\\\" src=\\\\\"\\\\\" alt=\\\\\"\\\\\"></div></div></div></div>\", 1)\n  ])))\n}\n}\n\n})\n```\n\nHowever, if we have a valid Tailwind class in there:\n\n```diff\n <div class=\"\">\n-  <div class=\"\">\n+  <div class=\"after:content-['']\">\n     <img class=\"\" src=\"\" alt=\"\" />\n```\n\nThen Vue compiles it to (snipped for brevity):\n\n```js\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createElementBlock(\"main\", _hoisted_1, _cache[0] || (_cache[0] = [\n    _createStaticVNode(\"<div class=\\\\\"\\\\\"><div class=\\\\\"\\\\\"><div class=\\\\\"after:content-[&#39;&#39;]\\\\\"><div class=\\\\\"\\\\\"><img class=\\\\\"\\\\\" src=\\\\\"\\\\\" alt=\\\\\"\\\\\"></div></div></div></div>\", 1)\n  ])))\n}\n}\n```\nNotice the `after:content-[&#39;&#39;]`. Since this is a module in Vite's module graph, this gets scanned for class candidates by Tailwind. It sees `after:content-[&#39;&#39;]` as a valid class and generates a rule for it:\n\n```css\n.after\\:content-\\[\\&\\#39\\;\\&\\#39\\;\\] {\n  &::after {\n    content: var(--tw-content);\n    --tw-content: &#39;&#39;;\n    content: var(--tw-content);\n  }\n}\n```\nAnd then when the default PostCSS pipeline in Nuxt runs on this, it errors out:\n```\n ERROR  Nuxt Build Error: [vite:css] [postcss] /path/to/project/assets/css/main.css:128:24: Unknown word                                                                                  nuxi 11:01:10 PM\nfile: /path/to/project/assets/css/main.css:128:23\n\n    file: assets/css/main.css:128:23\n    at Input.error (node_modules/postcss/lib/input.js:109:16)\n    at Parser.unknownWord (node_modules/postcss/lib/parser.js:593:22)\n    at Parser.other (node_modules/postcss/lib/parser.js:435:12)\n    at Parser.parse (node_modules/postcss/lib/parser.js:470:16)\n    at parse (node_modules/postcss/lib/parse.js:11:12)\n    at new LazyResult (node_modules/postcss/lib/lazy-result.js:133:16)\n    at Processor.process (node_modules/postcss/lib/processor.js:53:14)\n    at compileCSS (node_modules/vite/dist/node/chunks/dep-M1IYMR16.js:48784:59)\n    at async Object.transform (node_modules/vite/dist/node/chunks/dep-M1IYMR16.js:48039:11)\n    at async transform (node_modules/rollup/dist/es/shared/node-entry.js:19787:16)\n```\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16358","RelatedDescription":"Open issue \"Vue static vdom stringifier breaks PostCSS in Nuxt Production build\" (#16358)"},{"Id":"2839186748","IsPullRequest":true,"CreatedAt":"2025-02-07T22:12:30","Actor":"depfu[bot]","Number":"16357","RawContent":null,"Title":"Update eslint 9.18.0 → 9.19.0 (minor)","State":"open","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ eslint (9.18.0 → 9.19.0) · [Repo](https://github.com/eslint/eslint) · [Changelog](https://github.com/eslint/eslint/blob/main/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/eslint/eslint/releases/tag/v9.19.0\">9.19.0</a></h4>\n\n<blockquote><h2 dir=\"auto\">Features</h2>\n<ul dir=\"auto\">\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/1637b8e87df5c7f58ab71e0e159f4b96c998e070\"><code class=\"notranslate\">1637b8e</code></a> feat: add <code class=\"notranslate\">--report-unused-inline-configs</code> (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/19201\">#19201</a>) (Josh Goldberg ✨)</li>\n</ul>\n<h2 dir=\"auto\">Bug Fixes</h2>\n<ul dir=\"auto\">\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/aae67172ab9631b4267fc03f64d3c3d6d1fcda73\"><code class=\"notranslate\">aae6717</code></a> fix: sync rule type header comments automatically (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/19276\">#19276</a>) (Francesco Trotta)</li>\n</ul>\n<h2 dir=\"auto\">Documentation</h2>\n<ul dir=\"auto\">\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/cfea9abe0e27cf2ce1d27232b8c70555397e141b\"><code class=\"notranslate\">cfea9ab</code></a> docs: Clarify overrideConfig option (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/19370\">#19370</a>) (Nicholas C. Zakas)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/2b84f666cd7474bb061e2f12205af57f5dbb89d6\"><code class=\"notranslate\">2b84f66</code></a> docs: Update README (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/19362\">#19362</a>) (Nicholas C. Zakas)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/044f93cbbe71a45130156004509083814e2b9669\"><code class=\"notranslate\">044f93c</code></a> docs: clarify frozen rule description (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/19351\">#19351</a>) (Pavel)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/797ee7c0d669678b90c5d5742228bc7b24353f79\"><code class=\"notranslate\">797ee7c</code></a> docs: fix Bluesky links (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/19368\">#19368</a>) (Milos Djermanovic)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/81a9c0ebc33dd33765711296f827c4448c80163d\"><code class=\"notranslate\">81a9c0e</code></a> docs: Update README (GitHub Actions Bot)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/093fb3d40286588c2c425b738426ebfe5d142a63\"><code class=\"notranslate\">093fb3d</code></a> docs: replace <code class=\"notranslate\">var</code> with <code class=\"notranslate\">let</code> and <code class=\"notranslate\">const</code> in rule examples (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/19365\">#19365</a>) (Tanuj Kanti)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/417de3298527e4f257e1ae7b02e1df9db3c9ed33\"><code class=\"notranslate\">417de32</code></a> docs: replace var with const in rule examples (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/19352\">#19352</a>) (jj)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/17f2aaec16d5afbb0d219bce6ae01d7b15d74828\"><code class=\"notranslate\">17f2aae</code></a> docs: update getting-started config to match default generated config (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/19308\">#19308</a>) (0xDev)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/8a0a5a8851f72982327c2aa3a41403963f025771\"><code class=\"notranslate\">8a0a5a8</code></a> docs: better <code class=\"notranslate\">global ignores</code> instruction (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/19297\">#19297</a>) (Jacopo Marrone)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/6671a2cd8ccc710fefbccad9a813c3bea5f76c68\"><code class=\"notranslate\">6671a2c</code></a> docs: Update README (GitHub Actions Bot)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/e39d3f22ff793db42e1f1fc3808cbb12fc513118\"><code class=\"notranslate\">e39d3f2</code></a> docs: fix divider for rule category (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/19264\">#19264</a>) (Tanuj Kanti)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/e0cf53f80a4b127524e0badc8999d5d1a247143f\"><code class=\"notranslate\">e0cf53f</code></a> docs: fix search result box position for small screens (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/19328\">#19328</a>) (Tanuj Kanti)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/f92a6803a10c66cf77408b2bf29c17bcd63b1049\"><code class=\"notranslate\">f92a680</code></a> docs: replace var with let or const in rule examples (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/19331\">#19331</a>) (Ravi Teja Kolla)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/b04b84bc17d4aaaea1326cb08196593624db02a2\"><code class=\"notranslate\">b04b84b</code></a> docs: revert accidental changes in TS config files docs (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/19336\">#19336</a>) (Francesco Trotta)</li>\n</ul>\n<h2 dir=\"auto\">Chores</h2>\n<ul dir=\"auto\">\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/9b9cb0584867916d50aa2e9590b132e2ef8ca59c\"><code class=\"notranslate\">9b9cb05</code></a> chore: upgrade @eslint/js@9.19.0 (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/19371\">#19371</a>) (Milos Djermanovic)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/58560e70bb4dcb305343fcd7c893ac56a404f674\"><code class=\"notranslate\">58560e7</code></a> chore: package.json update for @eslint/js release (Jenkins)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/20897070913418078d8f1ea9a877d223650dff73\"><code class=\"notranslate\">2089707</code></a> test: fix failing test in Node.js v22.13.0 (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/19345\">#19345</a>) (Francesco Trotta)</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/eslint/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/eslint/eslint/compare/1c87b415313b4aacda496b3b26efc4e0b93dc13a...208e0b199f5d5f9dd173e58e3f5db19c1f0c38ed\">See the full diff on Github</a>. The new version differs by 21 commits:</p>\n<ul>\n<li><a href=\"https://github.com/eslint/eslint/commit/208e0b199f5d5f9dd173e58e3f5db19c1f0c38ed\"><code>9.19.0</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/196dfdace64d095f2facb3d8ebed1be9cb2ccab3\"><code>Build: changelog update for 9.19.0</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/9b9cb0584867916d50aa2e9590b132e2ef8ca59c\"><code>chore: upgrade @eslint/js@9.19.0 (#19371)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/58560e70bb4dcb305343fcd7c893ac56a404f674\"><code>chore: package.json update for @eslint/js release</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/cfea9abe0e27cf2ce1d27232b8c70555397e141b\"><code>docs: Clarify overrideConfig option (#19370)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/2b84f666cd7474bb061e2f12205af57f5dbb89d6\"><code>docs: Update README (#19362)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/044f93cbbe71a45130156004509083814e2b9669\"><code>docs: clarify frozen rule description (#19351)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/797ee7c0d669678b90c5d5742228bc7b24353f79\"><code>docs: fix Bluesky links (#19368)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/81a9c0ebc33dd33765711296f827c4448c80163d\"><code>docs: Update README</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/093fb3d40286588c2c425b738426ebfe5d142a63\"><code>docs: replace `var` with `let` and `const` in rule examples (#19365)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/417de3298527e4f257e1ae7b02e1df9db3c9ed33\"><code>docs: replace var with const in rule examples (#19352)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/17f2aaec16d5afbb0d219bce6ae01d7b15d74828\"><code>docs: update getting-started config to match default generated config (#19308)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/aae67172ab9631b4267fc03f64d3c3d6d1fcda73\"><code>fix: sync rule type header comments automatically (#19276)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/8a0a5a8851f72982327c2aa3a41403963f025771\"><code>docs: better `global ignores` instruction (#19297)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/20897070913418078d8f1ea9a877d223650dff73\"><code>test: fix failing test in Node.js v22.13.0 (#19345)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/6671a2cd8ccc710fefbccad9a813c3bea5f76c68\"><code>docs: Update README</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/1637b8e87df5c7f58ab71e0e159f4b96c998e070\"><code>feat: add `--report-unused-inline-configs` (#19201)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/e39d3f22ff793db42e1f1fc3808cbb12fc513118\"><code>docs: fix divider for rule category (#19264)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/e0cf53f80a4b127524e0badc8999d5d1a247143f\"><code>docs: fix search result box position for small screens (#19328)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/f92a6803a10c66cf77408b2bf29c17bcd63b1049\"><code>docs: replace var with let or const in rule examples (#19331)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/b04b84bc17d4aaaea1326cb08196593624db02a2\"><code>docs: revert accidental changes in TS config files docs (#19336)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16357","RelatedDescription":"Open PR \"Update eslint 9.18.0 → 9.19.0 (minor)\" (#16357)"},{"Id":"2839075939","IsPullRequest":false,"CreatedAt":"2025-02-07T21:20:35","Actor":"mckoda09","Number":"16354","RawContent":null,"Title":"@tailwindcss/vite spamming path of css files","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nAstro v5.2.5\n\n**What version of Node.js are you using?**\n\nBun v1.2.1\n\n**What browser are you using?**\n\nYandex Browser\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n\nhttps://github.com/mckoda09/tailwind-repro\n\n**Describe your issue**\n\n![Issue](https://github.com/user-attachments/assets/933e5582-3dcd-4999-92d6-26cc80073af1)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16354","RelatedDescription":"Closed issue \"@tailwindcss/vite spamming path of css files\" (#16354)"},{"Id":"2839015768","IsPullRequest":true,"CreatedAt":"2025-02-07T20:18:05","Actor":"thecrypticace","Number":"16353","RawContent":null,"Title":"Show suggestions for fractions in IntelliSense","State":"open","Body":"Fixes https://github.com/tailwindlabs/tailwindcss-intellisense/issues/1178 (partially)\r\n\r\nAn IntelliSense PR (+ Play update) is required to make this work better with v4: https://github.com/tailwindlabs/tailwindcss-intellisense/pull/1182 \r\n\r\n<img width=\"671\" alt=\"Screenshot 2025-02-07 at 15 19 59\" src=\"https://github.com/user-attachments/assets/7642b80c-f431-4a1e-964d-2a98ffe7a67a\" />\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16353","RelatedDescription":"Open PR \"Show suggestions for fractions in IntelliSense\" (#16353)"},{"Id":"2838943420","IsPullRequest":false,"CreatedAt":"2025-02-07T19:48:36","Actor":"finkrer","Number":"16351","RawContent":null,"Title":"New colors don't work for 7% of users worldwide, need fallbacks","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\n4.0.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\npostcss 8.4.21, Next.js 14.2.4\n\n**What version of Node.js are you using?**\n\nv20.18.0\n\n**What browser are you using?**\n\nChrome 109\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n\n—\n\n**Describe your issue**\n\n`oklch()` as a color function in CSS has been widely supported for about 2 years. Tailwind CSS 4.0 now ships with OKLCH colors by default (which is cool). However, according to [caniuse](https://caniuse.com/?search=oklch), the global penetration of supporting browsers is just short of 93%. In some countries, this falls to as low as 70%.\n\nThis is for a few reasons, for example, the first Chrome version supporting OKLCH is 111, while the latest Chrome version for Windows 7 is 109. This means that Windows 7 users will not have access to OKLCH until they switch devices (or browsers).\n\nMore importantly, this means that version 4.0 breaks colors completely for around 7% of users worldwide, making it necessary to manually add fallback colors. Despite this, the upgrade guide doesn't mention such a need.\n\nI think that shipping fallback RGB colors with Tailwind would be a great idea for now, and the old colors would be just fine, considering the new colors are the same but with upped chroma. If that is not possible or desirable, perhaps it is necessary to communicate in the upgrade guide or elsewhere that new colors might require additional attention in order not to break things for a significant number of users with older hardware and software.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16351","RelatedDescription":"Closed issue \"New colors don't work for 7% of users worldwide, need fallbacks\" (#16351)"},{"Id":"2838847881","IsPullRequest":false,"CreatedAt":"2025-02-07T18:45:13","Actor":"nomad-mystic","Number":"16350","RawContent":null,"Title":"Capitalized classnames in `addUtilities()` and `addComponents()` breaks build","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: JSX (Solid.js)\n\n**What version of Node.js are you using?**\n\nFor example: v22.13.1\n\n**What browser are you using?**\n\nFor example: N/A\n\n**What operating system are you using?**\n\nFor example: macOS\n\n**Reproduction URL**\n\nhttps://github.com/nomad-mystic/tailwindcss-capitalized-utilities\n\n**Describe your issue**\n\nDescribe the problem you're seeing, any important steps to reproduce and what behavior you expect instead.\n\nWhen creating custom Utilities and Components my capitalized classnames in `addUtilities()` and `addComponents()` functions breaks using Tailwind v4.\n\n### Breaks\n```js\n'.TestUtility': {\n  backgroundColor: '#ffffff',\n},\n```\n\n<img width=\"1492\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/ef5dcae7-db78-439b-b0a0-e298a3c0f19b\" />\n\n\n### Expectation \n**Capitalization is allowed when creating custom Utilities and Components**\n\n### Breaking code in package\n```js\n// https://github.com/tailwindlabs/tailwindcss/blob/main/packages/tailwindcss/src/compat/plugin-api.ts (Line 87)\n\nconst IS_VALID_UTILITY_NAME = /^[a-z@][a-zA-Z0-9/%._-]*$/\n```\n\n### Message code in package\n```js\n// https://github.com/tailwindlabs/tailwindcss/blob/main/packages/tailwindcss/src/compat/plugin-api.ts (Line 264)\n\n`\\`addUtilities({ '${name}' : … })\\` defines an invalid utility selector. Utilities must be a single class name and start with a lowercase letter, eg. \\`.scrollbar-none\\`.`,\n```\n\n\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16350","RelatedDescription":"Open issue \"Capitalized classnames in `addUtilities()` and `addComponents()` breaks build\" (#16350)"},{"Id":"2838373107","IsPullRequest":false,"CreatedAt":"2025-02-07T14:57:12","Actor":"JaquesBotha","Number":"16346","RawContent":null,"Title":"`@apply`Broken in Tailwind CSS v4.0 – No Clear Fix or Docs!","State":"open","Body":"# Tailwind CSS v4.0 `@apply` Bug Report\n\n## Introduction\nI'm in the process of upgrading a large project, actually, five Blazor projects that all conjoin into one via components and different backends. Our focus with this project is to deliver an optimal UI experience to the end-user, which is why we use TypeScript, C#, and of course, our favorite, Tailwind CSS. Btw, huge fans! \n\nNow, with that said, we have certain native components where we cannot add CSS classes to the component itself, making `@apply` an essential part of our workflow. However, after upgrading to Tailwind CSS v4.0, `@apply` is no longer working as expected, and there seems to be little guidance on how to transition projects that rely on it. This bug report aims to outline the issue clearly and request either a fix or detailed documentation on what exactly we need to do to overcome this.\n\n## What version of Tailwind CSS are you using?\n**v4.0.0**\n\n## What build tool (or framework if it abstracts the build tool) are you using?\n**Webpack 5.97.1**\n\n## What version of Node.js are you using?\n**v20.11.1**\n\n## What version of npm are you using?\n**v10.7.0**\n\n## What IDE are you using?\n**Rider IDE**\n\n## What operating system are you using?\n**macOS**\n\n## Reproduction URL\nThere's an active discussion on this issue where many developers are experiencing the same problem but no one has officially reported it yet. Rather than debating, I’d rather get a solution, so here’s the link to the discussion: [https://github.com/tailwindlabs/tailwindcss/discussions/13336#discussioncomment-12046971](https://github.com/tailwindlabs/tailwindcss/discussions/13336#discussioncomment-12046971)(https://github.com/yourusername/tailwind-v4-apply-issue)\n\n\n## Describe your issue\n\nAfter upgrading to Tailwind CSS v4.0, I encountered the following issues:\n\n### 1. `@apply` Directive Not Functioning\n- The `@apply` directive, previously used extensively in our CSS for class composition, no longer functions as expected. \n- Example:\n  \n  ```css\n  .quickgrid thead th {\n      @apply tw-bg-slate-100 dark:tw-bg-slate-800/70 tw-py-4;\n  }\n  ```\n  \n  - This results in build errors indicating unknown utility classes such as:\n  ```\n  Error: Cannot apply unknown utility class: tw-transform\n  Error: Cannot apply unknown utility class: tw-table-auto\n  ```\n  \n### 2. Lack of Clear Documentation for `@apply` Usage in v4.0\n- The v4.0 documentation does not provide explicit guidance on how to use the `@apply` directive in non-Vue projects.\n- One part of the documentation states that `@apply` should still work, but this is only relevant for Vue projects.\n- Another section in the documentation ([CSS Modules Compatibility](https://tailwindcss.com/docs/compatibility#css-modules)) suggests using CSS variables instead:\n  ```css\n  background: var(--color-blue-500);\n  ```\n  - This is not an ideal solution because it significantly increases the workload, especially in large projects where `@apply` is heavily used.\n\n### 3. Backward Compatibility with `tailwind.config.js`\n- The `tailwind.config.js` file appears to be deprecated or its usage has changed in v4.0 without clear documentation.\n- Projects relying on configurations such as `prefix: 'tw-'` are experiencing issues with styles not applying correctly.\n\n### 4. `@apply` is Necessary for Native Blazor QuickGrid Components\n- In my case, I use `@apply` with Native Blazor QuickGrid components, where there is no alternative way to apply Tailwind classes.\n- The current documentation does not provide any solutions for frameworks outside of Vue.\n\n## Expected Outcome\n- A fix for `@apply` so that it functions as expected in Tailwind CSS v4.0.\n- Clear documentation outlining the necessary steps to transition existing projects that rely on `@apply`.\n- An explicit guide on how `tailwind.config.js` should be updated for v4.0.\n\n---\n\nThank you for your attention to this issue!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16346","RelatedDescription":"Open issue \"`@apply`Broken in Tailwind CSS v4.0 – No Clear Fix or Docs!\" (#16346)"},{"Id":"2838337959","IsPullRequest":false,"CreatedAt":"2025-02-07T14:43:18","Actor":"mvanduijker","Number":"16344","RawContent":null,"Title":"Wrapped in PHP Symfony/Process with tty enabled cli crashes","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\ntonysm/tailwindcss-laravel\n\n**What version of Node.js are you using?**\n\nNA\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nI think it's more of an issue with tty support, but if required I can make a repo with a clean laravel install and tonysm/tailwind-css-laravel package.\n\n**Describe your issue**\n\nwhen running `php artisan tailwind:watch` (or build) it fails with the following error:\n\n```\nBuilding assets...\n3605 |   if (typeof sink === \"object\")\n3606 |     if (typeof sink.write === \"function\")\n3607 |       return stream[_fileSink] = sink;\n3608 |     else\n3609 |       throw new Error(\"Invalid FileSink\");\n3610 |     return stream[_fileSink] = Bun.file(sink).writer();\n                             ^\nerror: Invalid argument\n syscall: \"kqueue\",\n   errno: -22,\n    code: \"EINVAL\",\n\n      at NativeWritable_lazyConstruct (node:stream:3610:53)\n      at NativeWritablePrototypeWrite (node:stream:3613:65)\n      at eprintln (/$bunfs/root/tailwindcss-macos-arm64:61742:23)\n      at <anonymous> (/$bunfs/root/tailwindcss-macos-arm64:62001:13)\n\nBun v1.1.43 (macOS arm64)\nDone!\n```\n\nIt was working with 3.4.* releases.\nWhen I remove the enabling of tty (https://github.com/tonysm/tailwindcss-laravel/blob/main/src/Commands/BuildCommand.php#L52) it starts working again. My guess it has something to do with tty support in the current released cli. Maybe other programming environments will have the same issue.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16344","RelatedDescription":"Open issue \"Wrapped in PHP Symfony/Process with tty enabled cli crashes\" (#16344)"},{"Id":"2838319847","IsPullRequest":false,"CreatedAt":"2025-02-07T14:35:28","Actor":"KarthikeyanRanasthala","Number":"16343","RawContent":null,"Title":"Generated CSS for border-width is not consistent with v3 when importing a config with `@config` directive","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.0.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nvite 6.1.0, @tailwindcss/vite 4.0.4, @tailwindcss/postcss 4.0.0\n\n**What version of Node.js are you using?**\n\nv22.11.0\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nRefer to this [repo](https://github.com/KarthikeyanRanasthala/tailwind-config-debug) in the following branches,\n\nwith v3: `tw-v3-with-preset`\nwith v4 & vite plugin: `tw-v4-with-preset-and-vite-plugin`\n\n\n**Describe your issue**\n\nInconsistent output between v3 & v4\n\nThe generated css is incorrect when importing a tailwind config using `@config` directive. \n\n```js\n// preset.js\nexport default {\n  theme: {\n    colors: {\n      default: \"#0000ff\",\n    },\n    borderWidth: {\n      default: \"1px\",\n    },\n  },\n};\n```\n\n```js\n// tailwind.config.js\nimport preset from './preset'\n\nexport default {\n  content: [\n    \"./index.html\",\n    \"./src/**/*.{js,ts,jsx,tsx}\",\n  ],\n  presets: [preset],\n}\n```\n\n```css\n/* output in v3 */\n.border-b-default {\n    border-bottom-width: 1px\n}\n```\n\n```css\n/* output in v4 */\n.border-b-default {\n    border-bottom-color: #00f\n}\n```\n\nFor the above example, a custom theme has the same key `default` defined for properties borderWidth and color. Then for a class `border-b-default`, it should've generated `border-bottom-width: 1px` (as it did in v3) but it generates `border-bottom-color: #00f` (in v4)\n\nv4 still seems to respect that explicitly defined properties should have higher priority ie `textColor > colors`, `fill > colors` etc. So it looks like border is the only one having this issue as `border-` is used for multiple properties like border-width, border-style and border-color.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16343","RelatedDescription":"Open issue \"Generated CSS for border-width is not consistent with v3 when importing a config with `@config` directive\" (#16343)"},{"Id":"2837979788","IsPullRequest":true,"CreatedAt":"2025-02-07T11:55:35","Actor":"philipp-spiess","Number":"16341","RawContent":null,"Title":"Add feature flag setup","State":"open","Body":"<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16341","RelatedDescription":"Open PR \"Add feature flag setup\" (#16341)"},{"Id":"2836672971","IsPullRequest":false,"CreatedAt":"2025-02-07T10:35:20","Actor":"austinwilcox","Number":"16316","RawContent":null,"Title":"Version 4.0.4 - Breaks desktop first support","State":"closed","Body":"Tailwind: 4.0.4\nBuild-tool: Vite 6.0.11\nNode: 23.5.0\nBrowser: Chrome/Brave\nOS: Windows and Linux\n\n**Describe your issue**\nWe are using an anti-pattern with our project. We have been building desktop first and this worked just fine with tailwind v3. When we upgraded to v4 all of our media breakpoints have changed. We have scoured the docs and didn't see any reference to this changing. Here is what we see with the v3 code, and here is what the v4 code is generating.\n\n## V3\nCode Snippet\n```html\n<div class=\"hidden w-full justify-center md:hidden sm:flex\">\n```\nResult in DOM\n\n![Image](https://github.com/user-attachments/assets/427de9f3-1e0c-4a1b-ac58-a6f9e76a5640)\n\n![Image](https://github.com/user-attachments/assets/0037f60f-ad36-49b8-bccc-70d40be00094)\n\n\n## V4\nCode Snippet\n```html\n<div className=\"hidden w-full justify-center md:hidden sm:flex\">\n```\nResult in DOM\n\n![Image](https://github.com/user-attachments/assets/612a668c-1b1c-425b-8650-39b1894c5460)\n\n![Image](https://github.com/user-attachments/assets/b3550384-a5ee-4872-b70f-f768963cb3f6)\n\n\nHere is relevant part of the tailwind.config.js. \n```javascript\n/** @type {import('tailwindcss').Config} */\nexport default {\n  darkMode: \"selector\",\n  content: [\"./index.html\", \"./src/**/*.{js,ts,jsx,tsx}\"],\n  theme: {\n    screens: {\n      \"2xl\": { max: \"1536px\" },\n      xl: { max: \"1280px\" },\n      lg: { max: \"1024px\" },\n      md: { max: \"900px\" },\n      sm: { max: \"600px\" },\n    }\n  },\n  plugins: [],\n}\n\n```\n\nThis worked fine in v3 and hopefully we are just missing something small and this can be fixed without us having to downgrade back to v3.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16316","RelatedDescription":"Closed issue \"Version 4.0.4 - Breaks desktop first support\" (#16316)"},{"Id":"2836872255","IsPullRequest":false,"CreatedAt":"2025-02-07T10:34:32","Actor":"LemuelKL","Number":"16320","RawContent":null,"Title":"[v4] Missing Base Styles on html and body Elements","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: Vite 6.1.0 with SvelteKit and Svelte 5\n\n**What version of Node.js are you using?**\n\nFor example: v22.9.0\n\n**What browser are you using?**\n\nFor example: Brave, Safari\n\n**What operating system are you using?**\n\nFor example: macOS\n\n**Reproduction URL**\n\nThis code shows `text-orange-600` and `text-red-600` in the html and body tag respectively does not take effect.\n\nhttps://play.tailwindcss.com/kse6I0muoR\n\n**Describe your issue**\n\nI believe Tailwind classes does not work on the html or body tag despite the [documentation](https://tailwindcss.com/docs/adding-custom-styles#adding-base-styles) saying that is possible.\n\nI discovered this when I upgraded from v3.4.4 to v4.0.3. I was originally using a custom font and has `class=\"font-xxx\"` in the `body` tag of `app.html`. The font displayed correctly in v4 while in development hot-reload mode, but not when built. Using my browser's dev tool I saw in the built version that the final css class `.font-xxx` was no where to be found.\n\nAm I missing something stupidly simple? Perhaps the support for html and body tags were dropped in v4?\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16320","RelatedDescription":"Closed issue \"[v4] Missing Base Styles on html and body Elements\" (#16320)"},{"Id":"2837282831","IsPullRequest":false,"CreatedAt":"2025-02-07T10:28:24","Actor":"lkingch310","Number":"16326","RawContent":null,"Title":"[V4] Custom Colors Not Displaying in Tailwind CSS v4 with Vite Setup","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n v4.0.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.1.0\n\n**What version of Node.js are you using?**\n\n22.13.1\n\n**What browser are you using?**\n\nChrome, Edge\n\n**What operating system are you using?**\n\nFor example:  Windows\n\n**Reproduction URL**\n\nPlayground support HTML+CSS, but not TSX\n\n**Describe your issue**\n\n### Environment: Vite + Tailwind CSS\n```bash\nnpm create vite@latest\n# (react+ts)\n\nnpm install tailwindcss @tailwindcss/vite\n```\n\n### Configuration:\n```javascript\nimport { defineConfig } from \"vite\";\nimport react from \"@vitejs/plugin-react\";\nimport tailwindcss from \"@tailwindcss/vite\";\n\n// https://vite.dev/config/\nexport default defineConfig({\n  plugins: [react(), tailwindcss()],\n  server: {\n    port: 12222\n  }\n});\n```\n\n```css\n@import \"tailwindcss\";\n\n@theme {\n  --color-primary: #0024d3;\n  --color-info: #00a9eb;\n  --color-danger: #f06473;\n}\n```\n\n### Issue:\n1. None of the custom colors are displaying. `App.tsx`\n```typescript\ninterface TextProps {\n  type: \"primary\" | \"info\" | \"danger\";\n  text: string;\n}\nconst Text: React.FC<TextProps> = ({ type, text }) => {\n  const className = `text-${type}`;\n  return <span className={className}>{text}</span>;\n};\n\nfunction App() {\n  const typeInfo = \"text-info\";\n  const typePrimary = \"primary\";\n  return (\n    <>\n      <div className=\"flex flex-col gap-2\">\n        <Text type={typePrimary} text=\"This is a primary text\" />\n        <Text type=\"info\" text=\"This is an info text\" />\n        <Text type=\"danger\" text=\"This is a danger text\" />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n```\n\n2. `info` and `danger` colors display. `App.tsx`\n```typescript\ninterface TextProps {\n  type: \"primary\" | \"info\" | \"danger\";\n  text: string;\n}\nconst Text: React.FC<TextProps> = ({ type, text }) => {\n  const className = `text-${type}`;\n  return <span className={className}>{text}</span>;\n};\n\nfunction App() {\n  const typeInfo = \"text-info\";\n  const typePrimary = \"primary\";\n  return (\n    <>\n      <div className=\"flex flex-col gap-2\">\n        <Text type={typePrimary} text=\"This is a primary text\" />\n        <Text type=\"info\" text=\"This is an info text\" />\n        <Text type=\"danger\" text=\"This is a danger text\" />\n      </div>\n\n      <div className=\"flex flex-col gap-2\">\n        <span className={`text-${typePrimary}`}>This is a primary text</span>\n        <span className={`${typeInfo}`}>This is an info text</span>\n        <span className=\"text-danger\">This is a danger text</span>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n```\n\n### Expected Result:\nAll custom colors should display correctly.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16326","RelatedDescription":"Closed issue \"[V4] Custom Colors Not Displaying in Tailwind CSS v4 with Vite Setup\" (#16326)"},{"Id":"2837745686","IsPullRequest":false,"CreatedAt":"2025-02-07T10:27:54","Actor":"khalilou88","Number":"16333","RawContent":null,"Title":"Angular can't load CSS and web font after installing tailwind 4","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nAngular cli 19\n\n**What version of Node.js are you using?**\n\n20\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\nhttps://github.com/khalilou88/angular-inter\n\n**Describe your issue**\n\nI installed `Inter`  font from npm, but It's not possible to use it with Angular + Tailwind V4. I works great with v3.\nMaybe the issue come from Angular!\n\n\n\n\n```\nX [ERROR] Could not resolve \"web/Inter-BoldItalic.woff2?v=4.0\" [plugin angular-css-resource]\n\n    src/styles.css:98:11:\n      98 │   src: url(\"web/Inter-BoldItalic.woff2?v=4.0\") format(\"woff2\");\n         ╵            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n  You can mark the path \"web/Inter-BoldItalic.woff2?v=4.0\" as external to exclude it from the bundle, which will remove this error and leave the unresolved path in the bundle.\n\n```\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16333","RelatedDescription":"Closed issue \"Angular can't load CSS and web font after installing tailwind 4\" (#16333)"},{"Id":"2837150241","IsPullRequest":false,"CreatedAt":"2025-02-07T03:32:09","Actor":"unional","Number":"16324","RawContent":null,"Title":"layer theme generates duplicate nesting style","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\n4.0.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\ntailwind cli\n\n**What version of Node.js are you using?**\n\nv20.0.0\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/7u9dOQWA3C?file=css\n\n**Describe your issue**\n\nThe theme in the Play link will generate style like this:\n\n```css\n@layer theme {\n  @layer theme {\n    * {\n      &:where(.tw-dark, .tw-dark *) {\n        &:where(.tw-dark, .tw-dark *) {\n          --tw-color-primary: ...;\n        }\n      }\n    }\n  }\n}\n```\n\nref: https://github.com/tailwindlabs/tailwindcss/discussions/16313","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16324","RelatedDescription":"Open issue \"layer theme generates duplicate nesting style\" (#16324)"},{"Id":"2836491985","IsPullRequest":false,"CreatedAt":"2025-02-06T21:26:47","Actor":"MrPixel1","Number":"16314","RawContent":null,"Title":"[v4] Tailwind no longer correctly processed in .svelte files","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\n4.0.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nSvelte 5.19.8\nvite 6.1.0\n\n**What version of Node.js are you using?**\n\nDeno 2.0.2 (not node)\n\n**What browser are you using?**\n\nFirefox\n\n**What operating system are you using?**\n\nArch Linux\n\n**Describe your issue**\n\nIt seems like Tailwind no longer correctly processes CSS in `<style lang=\"postcss\">` tags in .svelte files, _unless_ I include `@reference \"tailwindcss/theme\";`.\n\nIf I don't include it, errors such as this one appear:\n\n```\n[plugin:vite:css] [postcss] Cannot apply unknown utility class: text-neutral-700\n```\n\nWhile I may have overseen a detail, it seems like adding the said code was **not** necessary in v3, that code - in *every* svelte file - seems overly redundant.\n\nTherefore, I came to the conclusion that this is a regression.\n\nIs there a known workaround, other than downgrading?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16314","RelatedDescription":"Closed issue \"[v4] Tailwind no longer correctly processed in .svelte files\" (#16314)"},{"Id":"2836340940","IsPullRequest":false,"CreatedAt":"2025-02-06T18:58:09","Actor":"Chadh13","Number":"16311","RawContent":null,"Title":"Tailwind 4.0.4 - Command failed with exit 1 - Heroku Deploys Rejected","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nRails - [tailwindcss-](https://github.com/rails/tailwindcss-rails) w/ https://github.com/flavorjones/tailwindcss-ruby underneath\n\n**What version of Node.js are you using?**\n\nN/A\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nStack track suggests that the server is targeting the `x86_64-linux-gnu` distribution\n\n**Reproduction URL**\n\nThis is a deploy issue so it's a bit hard to provide a repro URL. I've included a deploy stack trace below. I haven't figured out how to extend/patch into the rake deploy task yet within the heroku deploy process but will try to do so and provide the extended trace if I am able to.\n\nMy current hypothesis is that any app targeting Tailwind 4.0+ that is attempting to deploy to a heroku dyno is experiencing this.\n\n```\nremote: -----> Detecting rake tasks\nremote: -----> Preparing app for Rails asset pipeline\nremote: cp: warning: behavior of -n is non-portable and may change in future; use --update=none instead\nremote:        Running: rake assets:precompile\nremote:        I, [2025-02-06T18:32:25.438556 #1542]  INFO -- honeybadger: ** [Honeybadger] Reporting error id=29aba613-30a1-4e52-891f-9a3588871127 level=1 pid=1542\nremote:        rake aborted!\nremote:        Command failed with exit 1: /tmp/build_f389ed2a/vendor/bundle/ruby/3.2.0/gems/tailwindcss-ruby-4.0.4-x86_64-linux-gnu/exe/x86_64-linux-gnu/tailwindcss\nremote:        /tmp/build_f389ed2a/vendor/bundle/ruby/3.2.0/gems/tailwindcss-rails-4.0.0/lib/tasks/build.rake:7:in `system'\nremote:        /tmp/build_f389ed2a/vendor/bundle/ruby/3.2.0/gems/tailwindcss-rails-4.0.0/lib/tasks/build.rake:7:in `block (2 levels) in <main>'\nremote:        Tasks: TOP => assets:precompile => tailwindcss:build\nremote:        (See full trace by running task with --trace)\nremote:        I, [2025-02-06T18:32:25.507438 #1542]  INFO -- honeybadger: ** [Honeybadger] Success ⚡ https://app.honeybadger.io/notice/29aba613-30a1-4e52-891f-9a3588871127 id=29aba613-30a1-4e52-891f-9a3588871127 code=201 level=1 pid=1542\nremote:\nremote:  !\nremote:  !     Precompiling assets failed.\nremote:  !\nremote:  !     Push rejected, failed to compile Ruby app.\nremote:\nremote:  !     Push failed\nremote:\nremote: Verifying deploy...\nremote:\nremote: !\tPush rejected to [app-name].\nremote:\nTo https://git.heroku.com/[app-name].git\n ! [remote rejected]     get-operations-outta-here-mister -> master (pre-receive hook declined)\nerror: failed to push some refs to 'https://git.heroku.com/[app-name].git'\n```\n\n**Describe your issue**\n\nAttempts to deploy version 4.X+ of Tailwind to Heroku servers fail due to\n`Command failed with exit 1: /tmp/build_f389ed2a/vendor/bundle/ruby/3.2.0/gems/tailwindcss-ruby-4.0.4-x86_64-linux-gnu/exe/x86_64-linux-gnu/tailwindcss`\n\nWas following https://github.com/tailwindlabs/tailwindcss/issues/15181 and hoping that it was a related issue that would be resolved from the same changes. Unfortunately it's not.\n\nOriginally reported here: https://github.com/rails/tailwindcss-rails/discussions/450#discussioncomment-12037908\n\nI'm also going to submit a ticket to Heroku to see if I can get any insight from their end since end users like me have very limited access and control over what's going on within the deploy process. I'll reply with updates as they come.\n\nPlease let me know how I can help debug or understand this.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16311","RelatedDescription":"Open issue \"Tailwind 4.0.4 - Command failed with exit 1 - Heroku Deploys Rejected\" (#16311)"},{"Id":"2836333426","IsPullRequest":true,"CreatedAt":"2025-02-06T18:56:30","Actor":"RobinMalfait","Number":"16310","RawContent":null,"Title":"Cleanup Tailwind Play workflow","State":"closed","Body":"This PR cleans up the Tailwind Play update by removing unnecessary inputs because Tailwind Play will take care of this.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16310","RelatedDescription":"Closed or merged PR \"Cleanup Tailwind Play workflow\" (#16310)"},{"Id":"2836026169","IsPullRequest":false,"CreatedAt":"2025-02-06T18:03:11","Actor":"wolf-yuan-6115","Number":"16308","RawContent":null,"Title":"[v4] tailwindcss vite plugin logs all included css files","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n`v4.0.3`\n\n**What build tool (or framework if it abstracts the build tool) are you using?** \n\n- Astro `5.2.3`\n\n**What version of Node.js are you using?**\n\n`22.12.0`\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nLinux\n\n**Reproduction URL**\n\nNo need to reproduce in this case.\n\n**Describe your issue**\n\nOne line of code which *probably* was used to debug was included into `@tailwindcss/vite@4.0.4`:\n\nhttps://github.com/tailwindlabs/tailwindcss/blob/e1a85ac260e065c069307deb7f908bc46035a3e5/packages/%40tailwindcss-vite/src/index.ts#L321\n\nThis causes Astro project dev server log and build log looks like this:\n\n```\n00:23:40 watching for file changes...\n<truncated>/node_modules/.pnpm/astro@5.2.3_@types+node@22.13.0_jiti@2.4.2_lightningcss@1.29.1_rollup@4.32.1_typescript@5.7.3_yaml@2.7.0/node_modules/astro/components/ClientRouter.astro?astro&type=style&index=0&lang.css\n<truncated>/scrapyard-website/node_modules/.pnpm/astro@5.2.3_@types+node@22.13.0_jiti@2.4.2_lightningcss@1.29.1_rollup@4.32.1_typescript@5.7.3_yaml@2.7.0/node_modules/astro/components/ClientRouter.astro?astro&type=style&index=0&lang.css\n<truncated>/node_modules/.pnpm/@fontsource-variable+inter@5.1.1/node_modules/@fontsource-variable/inter/index.css\n<truncated>/node_modules/.pnpm/@fontsource-variable+inter@5.1.1/node_modules/@fontsource-variable/inter/index.css\n<truncated>/src/styles/global.css\n<truncated>/src/styles/global.css\n<truncated>/src/styles/global.css\n<truncated>/src/styles/global.css\n<truncated>/node_modules/.pnpm/astro@5.2.3_@types+node@22.13.0_jiti@2.4.2_lightningcss@1.29.1_rollup@4.32.1_typescript@5.7.3_yaml@2.7.0/node_modules/astro/components/ClientRouter.astro?inline&astro&type=style&index=0&lang.css\n<truncated>/node_modules/.pnpm/astro@5.2.3_@types+node@22.13.0_jiti@2.4.2_lightningcss@1.29.1_rollup@4.32.1_typescript@5.7.3_yaml@2.7.0/node_modules/astro/components/ClientRouter.astro?inline&astro&type=style&index=0&lang.css\n00:23:42 [200] / 64ms\n```\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16308","RelatedDescription":"Closed issue \"[v4] tailwindcss vite plugin logs all included css files\" (#16308)"},{"Id":"2836020145","IsPullRequest":true,"CreatedAt":"2025-02-06T16:54:21","Actor":"martinschneider01","Number":"16307","RawContent":null,"Title":"Remove useless `console.log` in `@tailwind/vite` package","State":"closed","Body":"<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n\r\nThis PR removes a (seemingly) unwanted `console.log` in the `@tailwind/vite` package.\r\n\r\nI discovered this when I updated tailwind in my `astro` project, each `.astro` component log the full path of an imported `.css` file.\r\n\r\nIt seems that this was the commit that introduced it: https://github.com/tailwindlabs/tailwindcss/commit/e1a85ac260e065c069307deb7f908bc46035a3e5\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16307","RelatedDescription":"Closed or merged PR \"Remove useless `console.log` in `@tailwind/vite` package\" (#16307)"},{"Id":"2835975278","IsPullRequest":true,"CreatedAt":"2025-02-06T16:15:27","Actor":"RobinMalfait","Number":"16306","RawContent":null,"Title":"Improve Oxide scanner","State":"open","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16306","RelatedDescription":"Open PR \"Improve Oxide scanner\" (#16306)"},{"Id":"2835757255","IsPullRequest":false,"CreatedAt":"2025-02-06T14:52:34","Actor":"moritz-baecker-integra","Number":"16305","RawContent":null,"Title":"Upgrade tool blur event renaming problem","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.0.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nvite 6\n\n**What version of Node.js are you using?**\n\n22.13.1\n\n**What browser are you using?**\n\nEdge\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n\nhttps://play.vuejs.org/#eNqVUttKw0AQ/ZV1X9JCbRB90rSgUrDiDS/4si8xmaZbN7PLXtJCyL87SWltoVTMQ9iZc87smZmt+bUxwyoAv+SJy6w0njnwwYwFytJo61nNNH5gqQN6yFnDZlaXLCJJdLXHefyDYWG2hwkUuFX1en02GrNaIKNvKTHXy2Ga55MK0D9I5wHB9qIvFWw0oFLkcUo6W6WqT5c07W/H5sFyFkpdwX8qCsw0Os9KV7BR20AvugOlNPvUVuUnUV9gEq+nRvOiwENpVOqBIsaS+dm4rjtx0yQxRV1WogmeVaelzkGNBCdccBYTmMQ7ej7g3tH1M1kMF04jLahrR/BMl0YqsM/GS7In+OWmUcFTcre873LeBhhs8tkcsu8D+YVbtTnBX9oJ2AoE32I+tQX4NTx5e4IVnbcguQ+K2EfAV3BahdbjmnYTMCfbO7zO7bR7IBKLdzdZ0VbcpqnWaMtsOr7g9Ghuj7T+a/d8eNHpaIu8+QFC7vjy\n\n**Describe your issue**\n\nIf you have a .vue file that assigns a blur event, running the upgrade tool renames the blur event to blur-sm. This should not happen.\n\n$ npx @tailwindcss/upgrade@next\n\n\n```\nonMounted(() => {\n    window.addEventListener('blur', resetInterval);\n    window.addEventListener('blur-sm', resetInterval);\n});\nonUnmounted(() => {\n    window.removeEventListener('blur', resetInterval);\n    window.removeEventListener('blur-sm', resetInterval);\n});\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16305","RelatedDescription":"Open issue \"Upgrade tool blur event renaming problem\" (#16305)"},{"Id":"2835547519","IsPullRequest":true,"CreatedAt":"2025-02-06T14:18:13","Actor":"RobinMalfait","Number":"16302","RawContent":null,"Title":"Prepare v4.0.4","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16302","RelatedDescription":"Closed or merged PR \"Prepare v4.0.4\" (#16302)"},{"Id":"2833805762","IsPullRequest":true,"CreatedAt":"2025-02-06T13:55:11","Actor":"GameLord2011","Number":"16285","RawContent":null,"Title":"Add .scss files to upgrade script.","State":"closed","Body":"I use an index.scss file in my project, and the upgrade script did not detect it.\r\n\r\n<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16285","RelatedDescription":"Closed or merged PR \"Add .scss files to upgrade script.\" (#16285)"},{"Id":"2834977764","IsPullRequest":false,"CreatedAt":"2025-02-06T13:30:05","Actor":"Joxeur2","Number":"16298","RawContent":null,"Title":"[v4] \"Maximum call stack size exceeded\" when using @resource with @slot","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.0.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nangular: 19.1.4, tailwindcss: 4.0.3, tailwindcss/postcss: 4.0.3\n\n**What version of Node.js are you using?**\n\n23.7.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://github.com/Joxeur2/tailwind-test.git\n\n**Describe your issue**\n\nI have an Angular application that I am migrating to Tailwind 4. I'm also using a purchased theme that is based on Tailwind and has also been migrated to Tailwind 4.\nHowever, when I use the theme, I get the error \"Maximum call stack size exceeded.\"\n\nAfter some investigation, I managed to reproduce the issue and created a separate repo with minimal setup here: https://github.com/Joxeur2/tailwind-test.git\n\nMy problem occurs when these two things are present:\n\n- I use a @resource pointing to my main.css to be able to use @apply\n- I use a @slot in main.css\n\nI imagine I could move my @variant along with my @slot into another CSS file and only reference the rest with @resource, but as I mentioned, I am using a purchased theme and I would really hate to have to mess with the theme’s code...","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16298","RelatedDescription":"Closed issue \"[v4] \"Maximum call stack size exceeded\" when using @resource with @slot\" (#16298)"},{"Id":"2835376123","IsPullRequest":true,"CreatedAt":"2025-02-06T13:30:04","Actor":"philipp-spiess","Number":"16300","RawContent":null,"Title":"Properly skip over nodes when using `replaceNode`","State":"closed","Body":"Fixes #16298 \r\n\r\nThis PR fixes an issue where using an AST walk in combination with `replaceNode` and various `SkipAction` would either cause children to be visited multiple times or not visited at all even though it should. This PR fixes the issue which also means we can get rid of a custom walk for `@variant` inside the `@media` that was used to apply `@variant` because we never recursively visited children inside the `@media` rule.\r\n\r\nBecause we now can use the regular walk for `@variant`, we now properly convert `@variant` to `@custom-variant` inside `@reference`-ed stylesheet which also fixes #16298\r\n\r\n## Test plan\r\n\r\nLots of tests added to ensure the combinations of `WalkAction` and `replaceWith()` works as expected.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16300","RelatedDescription":"Closed or merged PR \"Properly skip over nodes when using `replaceNode`\" (#16300)"},{"Id":"2834705493","IsPullRequest":false,"CreatedAt":"2025-02-06T08:15:26","Actor":"unional","Number":"16296","RawContent":null,"Title":"prefix not applied to CSS variable reference","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nvite: 4\n\n**What version of Node.js are you using?**\n\n20\nFor example: v12.0.0\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nTailwind Play doesn't work with prefix: https://play.tailwindcss.com/EdqmzkKuDE\n\n**Describe your issue**\n\nWhen using prefix, the variable references are not updated with the prefix.\ne.g. the css in the play link generates:\n\n```css\n:root, :host {\n  --tw-color-red-100: #f0d0d0;\n  --tw-color-primary: var(--color-red-100);\n}\n```\n\nThe `var(--color-red-100)` is not prefixed so the variable doesn't exist.\n\nThis means the prefix needs to be hardcoded, resulting the theme is not shareable.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16296","RelatedDescription":"Closed issue \"prefix not applied to CSS variable reference\" (#16296)"},{"Id":"2834501683","IsPullRequest":true,"CreatedAt":"2025-02-06T04:16:40","Actor":"zackradisic","Number":"16295","RawContent":null,"Title":"Bun plugin","State":"open","Body":"> (Sorry for creating this PR without opening an issue first)\r\n\r\nThis PR implements a Bun plugin that makes TailwindCSS fast in Bun.\r\n\r\n<img width=\"619\" alt=\"c612d2faa37f2cff03c8620a08bb2def7268851bb183c2fa8e2763246b9243e5\" src=\"https://github.com/user-attachments/assets/547e3dd7-61a9-4674-b4a1-44597f7a8ee8\" />\r\n\r\n(bundling 2048 html + react + tailwind files)\r\n\r\n# Overview\r\n\r\nThis plugins is comprised of two parts:\r\n\r\n- A regular Bun bundler plugin which is the main driver of everything and invokes the native bundler plugin\r\n- A [native bundler plugin](https://bun.sh/docs/bundler/plugins#native-plugins) which parallelizes the module graph scanning of candidates. Tailwind was part of the motivation for implementing this API.\r\n \r\n## Native bundler plugin\r\n\r\nThe native bundler plugin is used to scan the module graph in parallel with the `Scanner` struct from `@tailwindcss/oxide`.\r\n\r\nThe main logic for this code is in the `tw_on_before_parse` function.\r\n\r\nNative bundler plugins run in parallel on Bun's bundler threads and do not need to do UTF-16 <-> UTF-8 string conversions. This speeds up the plugin a lot.\r\n\r\nNative bundler plugins are NAPI modules which export additional symbols (since NAPI modules themselves are dynamically loaded libraries which can be `dlopen()`'d). The [`bun-native-plugin`](https://crates.io/crates/bun-native-plugin) crate handles the boilerplate for creating one.\r\n\r\nI placed the Bun plugin inside the existing `crates/node/lib.rs` (the `@tailwindcss/oxide` package). This reduces the need to create more compiled artifacts at the cost of a relatively small binary size change:\r\n\r\n```sh\r\n# original size\r\n❯ ls -lhS dist/tailwindcss-oxide-darwin-arm64.tgz\r\n-rw-r--r--@ 1 zackradisic  staff   2.1M Feb  4 20:42 dist/tailwindcss-oxide-darwin-arm64.tgz\r\n\r\n# new size\r\n❯ ls -lhS dist/tailwindcss-oxide-darwin-arm64.tgz\r\n-rw-r--r--@ 1 zackradisic  staff   2.2M Feb  4 18:42 dist/tailwindcss-oxide-darwin-arm64.tgz\r\n```\r\n\r\nPlease let me know if you would like me to split it out into its own separate package if you don't like the binary size change.\r\n\r\n### Sharing state between the native plugin and JS\r\n\r\nThe scanned candidates and other state are held inside a NAPI External. The struct in the code that does\r\nthis is called `TailwindContextExternal`.\r\n\r\nA NAPI External is a NAPI value which can be given to JS and which holds a `void*` data pointer. This data is inaccessible to JS, but a NAPI module can dereference the data and convert it to NAPI values.\r\n\r\nThis looks a bit like this on the Rust side:\r\n\r\n```rust\r\n/// Create the TailwindContextExternal and return it to JS wrapped in a Napi External.\r\n///\r\n/// Napi has an `External<T>` type which allows us to wrap it in an\r\n/// external easily.\r\n#[no_mangle]\r\n#[napi]\r\npub fn twctx_create() -> External<TailwindContextExternal> {\r\n  let external = External::new(TailwindContextExternal {\r\n    module_graph_candidates: Default::default(),\r\n    dirty: AtomicBool::new(false),\r\n  });\r\n\r\n  external\r\n}\r\n```\r\n\r\nAnd the JS side:\r\n\r\n```ts\r\n// import napi functions which let us manipulate the external\r\nimport { twctxCreate, twctxIsDirty, twctxToJs } from '@tailwindcss/oxide'\r\n\r\n// create the state, the returned value\r\n// is a Napi External\r\nconst external = twctxCreate()\r\n\r\n/* ... other code ... */\r\n\r\nlet moduleGraphCandidates = new Map<string, Set<string>>()\r\nfunction getSharedCandidates() {\r\n  // check if there are changes\r\n  if (twctxIsDirty(external)) {\r\n    // convert the state into js values\r\n    let rawCandidates: Array<{ id: string; candidates: string[] }> = twctxToJs(external)\r\n    for (let { id, candidates } of rawCandidates) {\r\n      moduleGraphCandidates.set(id, new Set(candidates))\r\n    }\r\n  }\r\n  return moduleGraphCandidates\r\n}\r\n```\r\n\r\n### `napi-rs` version bump\r\n\r\nThe `napi-rs` crate was updated to version `2.16.15` so we can use the [`External::inner_from_raw()`](https://docs.rs/napi/latest/napi/bindgen_prelude/struct.External.html#method.inner_from_raw) function to turn an `External`'s `*mut c_void` pointer back into `TailwindContextExternal`.\r\n\r\n## JS plugin\r\n\r\nThe JS plugin `@tailwindcss-bun/src/index.ts` uses logic copied over from the vite plugin implementation but modified to work with Bun's plugin API.\r\n\r\nIt invokes the native bundler plugin using the `.onBeforeParse` plugin API function:\r\n\r\n```ts\r\n// Called on every file which matches the filter\r\n// before it is parsed by Bun\r\nbuild.onBeforeParse(\r\n  // filter which files the native plugin apply to\r\n  { filter: NON_CSS_ROOT_FILE_RE },\r\n\r\n  // pass the napi module, the symbol which points to the plugin main function,\r\n  // and the external which holds the tailwind state\r\n  { napiModule: addon, symbol: 'tw_on_before_parse', external },\r\n)\r\n```\r\n\r\nOne thing to note is that Bun's bundler currently does not have an API that is analogous to `.addWatchedFile()`, so there is currently no way to add additional files to the module graph.\r\n\r\n## Testing\r\n\r\nI added a `integrations/bun/index.test.ts` file, please let me know if you would like more tests","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16295","RelatedDescription":"Open PR \"Bun plugin\" (#16295)"},{"Id":"2833847167","IsPullRequest":false,"CreatedAt":"2025-02-06T02:02:09","Actor":"jthibeaux","Number":"16286","RawContent":null,"Title":"bg-[value] seems to be overloaded for setting both size and position, and only position works","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv3.3.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 14.2.22\n\n**What version of Node.js are you using?**\n\nv18.20.2\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nMacOS\n\n**Reproduction URL**\n\nI don't think a URL is needed since the bug appears to be described in the documentation itself.\n\n**Describe your issue**\n\nThis appears to be a documented bug if you look at both the documentation for both background-size and background-position, you will see the same syntax for explicitly setting the value `bg-[value]`.  In my testing, this syntax only sets the position and not the size.\n\nhttps://tailwindcss.com/docs/background-size\nhttps://tailwindcss.com/docs/background-position\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16286","RelatedDescription":"Closed issue \"bg-[value] seems to be overloaded for setting both size and position, and only position works\" (#16286)"},{"Id":"2833859201","IsPullRequest":false,"CreatedAt":"2025-02-05T20:06:36","Actor":"nicksergeant","Number":"16287","RawContent":null,"Title":"[v4] Source glob pattern `./**/*.{js,ts,jsx,tsx,mdx}` does not match Next.js-style catchall route segments like `[...slug]`.","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n- Next.js 15.1.6\n- PostCSS 8\n\n**What version of Node.js are you using?**\n\n23.5.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://github.com/nicksergeant/tailwind-v4-dynamic-params/\n\n**Describe your issue**\n\nIf you are [disabling automatic detection](https://tailwindcss.com/docs/detecting-classes-in-source-files#disabling-automatic-detection) with:\n\n```\n@import 'tailwindcss' source(none);\n```\n\nand then configuring a glob pattern like [this](https://github.com/nicksergeant/tailwind-v4-dynamic-params/blob/main/app/globals.css#L1-L3):\n\n```\n@source './**/*.{js,ts,jsx,tsx,mdx}';\n```\n\nSource files in directories such as `[...slug]` will not be picked up: https://github.com/nicksergeant/tailwind-v4-dynamic-params/blob/main/app/%5B...slug%5D/page.tsx\n\nI'm not sure if this is a bug per se, and I have found this workaround:\n\n```\n@source './**/*.{js,ts,jsx,tsx,mdx}';\n@source './[[]**[]]/*.{js,ts,jsx,tsx,mdx}';\n```\n\nExample page showing missing style: https://github.com/nicksergeant/tailwind-v4-dynamic-params/blob/main/app/%5B...slug%5D/page.tsx#L4\n\nBut I was surprised that `./**/*` was not working to pick those up.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16287","RelatedDescription":"Open issue \"[v4] Source glob pattern `./**/*.{js,ts,jsx,tsx,mdx}` does not match Next.js-style catchall route segments like `[...slug]`.\" (#16287)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-02-08T03:30:23.5122247Z","RunDurationInMilliseconds":508}