{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2659934221","IsPullRequest":false,"CreatedAt":"2024-11-14T20:09:53","Actor":"blittle","Number":"15005","RawContent":null,"Title":"@property isn't supported in shadow roots","State":"open","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nFor example: `4.0.0-alpha.34`\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nWeb components with shadow roots.\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv22.2.0\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://github.com/blittle/tw-shadow\r\n\r\n**Describe your issue**\r\n\r\nTailwind v4 uses `@property` to define defaults for custom properties. At the moment, shadow roots do _not support_ `@property`. It used to be explicitly denied in the spec, but it looks like there's talk on adding it: https://github.com/w3c/css-houdini-drafts/pull/1085\r\n\r\nI don't know if this is something tailwind should fix, but it took me a while to find the issue, so it's probably worth keeping this issue to document the limitation.\r\n\r\nHere is a work-around, [just attaching the `@property` definitions to the base document](https://benfrain.com/using-css-property-inside-shadowroot-web-components-workaround/). It would be nice if tailwind provided an easy way to import just that content.\r\n\r\nAn easy way to do that with Vite is to create a tailwind css file specifically for the properties and apply a transform:\r\n\r\n```js\r\nexport default defineConfig(() => {\r\n  return {\r\n    ...\r\n    plugins: [\r\n      tailwindcss(),\r\n      {\r\n        name: \"tailwind-properties\",\r\n        transform(code, id) {\r\n          if (id.endsWith(\"tailwind-properties.css?inline\")) {\r\n            // Change custom properties to inherit\r\n            code = code.replaceAll(\"inherits: false\", \"inherits: true\");\r\n\r\n            // Remove everything before the property declarations\r\n            code = code.substring(code.indexOf(\"@property\"));\r\n\r\n            return code;\r\n          }\r\n        },\r\n      },\r\n    ],\r\n  };\r\n});\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15005","RelatedDescription":"Open issue \"@property isn't supported in shadow roots\" (#15005)"},{"Id":"2659145188","IsPullRequest":false,"CreatedAt":"2024-11-14T20:00:07","Actor":"schenney-chromium","Number":"15000","RawContent":null,"Title":"Selection is broken in Chrome 131 due to --tw-text-opacity and friends","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nNot sure what version sites are using, but I suspect less than a year old.\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nDon't know\r\n\r\n**What version of Node.js are you using?**\r\n\r\nDon't know\r\n\r\n**What browser are you using?**\r\n\r\nChrome and Edge\r\n\r\n**What operating system are you using?**\r\n\r\nAll\r\n\r\n**Reproduction URL**\r\n\r\nSee https://issues.chromium.org/issues/378754060 for numerous reproductions. From The Verge:\r\n```\r\n.selection\\:bg-franklin-20::selection {\r\n    --tw-bg-opacity: 1;\r\n    background-color: rgb(216 255 246/var(--tw-bg-opacity));\r\n}\r\n```\r\nAll selection is blank in Chrome 131 and later on The Verge, Bloomberg news, ...\r\n\r\n**Describe your issue**\r\n\r\nChrome 131 and browsers using Chromium enable CSS Highlight Inheritance for ::selection. In this model custom properties for ::selection and other highlight pseudos are taken from the originating element, and not the pseudo itself. All custom properties defined on highlight pseudos are ignored. But Tailwind defines a custom property for opacity on every use of a color, including ::selection colors. There is no practical use for this because the variable is redefined all over the place and any given usage inside ::selection applies only within that ::selection block (with the old behavior).\r\n\r\nSee https://developer.chrome.com/blog/selection-styling and https://blogs.igalia.com/schenney/css-custom-properties-in-highlight-pseudos/\r\n\r\nI might try to figure out how to fix this and put up a PR for you.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15000","RelatedDescription":"Closed issue \"Selection is broken in Chrome 131 due to --tw-text-opacity and friends\" (#15000)"},{"Id":"2659790744","IsPullRequest":false,"CreatedAt":"2024-11-14T19:09:58","Actor":"ranseur92","Number":"15004","RawContent":null,"Title":"[V4] - Loading PostCSS Plugin failed: The URL must be of scheme file","State":"open","Body":"**What version of Tailwind CSS are you using?**\r\n\r\n4.0.0-alpha.21 onwards\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nVite ^5.4.8\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv22.11.0\r\n\r\n**What browser are you using?**\r\n\r\nEdge\r\n\r\n**What operating system are you using?**\r\n\r\nWindows 11\r\n\r\n**Reproduction URL**\r\n\r\nhttps://github.com/ranseur92/twind-test\r\n\r\n**Describe your issue**\r\n\r\nCannot get any version higher than v4 Alpha 20 to work, within a AdonisJS + InertiaJS setup.\r\n\r\n```\r\n[Failed to load PostCSS config: Failed to load PostCSS config (searchPath: D:/JS/twind-test): [Error] Loading PostCSS Plugin failed: The URL must be of scheme file\r\n\r\n(@D:\\JS\\twind-test\\postcss.config.cjs)\r\nError: Loading PostCSS Plugin failed: The URL must be of scheme file\r\n```\r\n\r\nI'm guessing the underlying issue, is related to https://github.com/tailwindlabs/tailwindcss/issues/14420 but that fix isn't appropriate in this case. ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15004","RelatedDescription":"Open issue \"[V4] - Loading PostCSS Plugin failed: The URL must be of scheme file\" (#15004)"},{"Id":"2659531872","IsPullRequest":true,"CreatedAt":"2024-11-14T18:33:27","Actor":"thecrypticace","Number":"15003","RawContent":null,"Title":"Add variable fallback to fix Chrome issue","State":"closed","Body":"This works around an issue in Chrome where `::selection` does not read from variables defined on `::selection` thus breaking all uses of color utilities with the selection variant. e.g. `selection::bg-red-200`.\r\n\r\nWe now add a fallback value of `1` to all uses of `var(--tw-bg-opacity)`, `var(--tw-text-opacity)`, `var(--tw-border-opacity)`, etc… since Chrome treats the variable as if it did not exist because it's not defined on the parent.\r\n\r\nIn Chrome 131 (until the change is rolled back) existing utilities like these will not work:\r\n- `selection:text-opacity-50`\r\n- `selection:[--tw-text-opacity:0.5]`\r\n\r\nFixes #15000 ","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15003","RelatedDescription":"Closed or merged PR \"Add variable fallback to fix Chrome issue\" (#15003)"},{"Id":"2659518446","IsPullRequest":true,"CreatedAt":"2024-11-14T17:23:40","Actor":"philipp-spiess","Number":"15002","RawContent":null,"Title":"Prepare v4.0.0-alpha.34","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15002","RelatedDescription":"Closed or merged PR \"Prepare v4.0.0-alpha.34\" (#15002)"},{"Id":"2658673469","IsPullRequest":true,"CreatedAt":"2024-11-14T17:19:22","Actor":"philipp-spiess","Number":"14999","RawContent":null,"Title":"Add codemod and interop for legacy `container` component configu","State":"closed","Body":"This PR adds support for handling v3 [`container` customizations ](https://tailwindcss.com/docs/container#customizing). This is done by adding a custom utility to extend the core `container` utility. A concrete example can be taken from the added integration test.\r\n\r\n### Input\r\n\r\n```ts\r\n/** @type {import('tailwindcss').Config} */\r\nexport default {\r\n  content: ['./src/**/*.html'],\r\n  theme: {\r\n    container: {\r\n      center: true,\r\n      padding: {\r\n        DEFAULT: '2rem',\r\n        '2xl': '4rem',\r\n      },\r\n      screens: {\r\n        md: '48rem', // Matches a default --breakpoint\r\n        xl: '1280px',\r\n        '2xl': '1536px',\r\n      },\r\n    },\r\n  },\r\n}\r\n```\r\n\r\n### Output\r\n\r\n```css\r\n@import \"tailwindcss\";\r\n\r\n@utility container {\r\n  margin-inline: auto;\r\n  padding-inline: 2rem;\r\n\r\n  @media (width >= theme(--breakpoint-sm)) {\r\n    max-width: none;\r\n  }\r\n\r\n  @media (width >= 48rem) {\r\n    max-width: 48rem;\r\n  }\r\n\r\n  @media (width >= 1280px) {\r\n    max-width: 1280px;\r\n  }\r\n\r\n  @media (width >= 1536px) {\r\n    max-width: 1536px;\r\n    padding-inline: 4rem;\r\n  }\r\n}\r\n````\r\n\r\n\r\n## Test Plan\r\n\r\nThis PR adds extensive tests to the compat layer as part of unit tests. Additionally it does at a test to the codemod setup that shows that the right `@utility` code is generated. Furthermore I compared the implementation against v3 on both the compat layer and the custom `@utility`:\r\n\r\nhttps://github.com/user-attachments/assets/44d6cbfb-4861-4225-9593-602b719f628f\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14999","RelatedDescription":"Closed or merged PR \"Add codemod and interop for legacy `container` component configu\" (#14999)"},{"Id":"2653175070","IsPullRequest":true,"CreatedAt":"2024-11-14T17:05:14","Actor":"RobinMalfait","Number":"14982","RawContent":null,"Title":"Add missing `layer(…)` to imports above Tailwind directives","State":"closed","Body":"This PR fixes an issue where imports above Tailwind directives didn't get a `layer(…)` argument.\r\n\r\nGiven this CSS:\r\n```css\r\n@import \"./typography.css\";\r\n@tailwind base;\r\n@tailwind components;\r\n@tailwind utilities;\r\n```\r\n\r\nIt was migrated to:\r\n```css\r\n@import \"./typography.css\";\r\n@import \"tailwindcss\";\r\n```\r\n\r\nBut to ensure that the typography styles end up in the correct location, it requires the `layer(…)` argument.\r\n\r\nThis PR now migrates the input to:\r\n```css\r\n@import \"./typography.css\" layer(base);\r\n@import \"tailwindcss\";\r\n```\r\n\r\nTest plan:\r\n---\r\n\r\nAdded an integration test where an import receives the `layer(…)`, but an import that eventually contains `@utility` does not receive the `layer(…)` argument. This is necessary otherwise the `@utility` will be nested when we are processing the inlined CSS.\r\n\r\nRunning this on the Commit template, we do have a proper `layer(…)`\r\n<img width=\"585\" alt=\"image\" src=\"https://github.com/user-attachments/assets/538055e6-a9ac-490d-981f-41065a6b59f9\">\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14982","RelatedDescription":"Closed or merged PR \"Add missing `layer(…)` to imports above Tailwind directives\" (#14982)"},{"Id":"2659464653","IsPullRequest":true,"CreatedAt":"2024-11-14T16:57:03","Actor":"RobinMalfait","Number":"15001","RawContent":null,"Title":"Improve multi-root `@config` linking","State":"open","Body":"This PR improves the codemod when dealing with multi-root CSS files. \r\n\r\n\r\nTest plan:\r\n---\r\n\r\nRunning this on Tailwind UI's codebase it looks like this:\r\n\r\n<img width=\"1682\" alt=\"image\" src=\"https://github.com/user-attachments/assets/41f9e183-a118-4ec3-b326-760468bf5ffb\">\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15001","RelatedDescription":"Open PR \"Improve multi-root `@config` linking\" (#15001)"},{"Id":"2655839209","IsPullRequest":true,"CreatedAt":"2024-11-14T10:48:31","Actor":"RobinMalfait","Number":"14989","RawContent":null,"Title":"Ensure `@config` is injected in common ancestor sheet","State":"closed","Body":"This PR fixes an issue where an `@config` was injected in a strange location if you have multiple CSS files with Tailwind directives. \r\n\r\nLet's say you have this setup:\r\n```css\r\n/* ./src/index.css */\r\n@import \"./tailwind-setup.css\";\r\n\r\n/* ./src/tailwind-setup.css */\r\n@import \"./base.css\";\r\n@import \"./components.css\";\r\n@import \"./utilities.css\";\r\n\r\n/* ./src/base.css */\r\n@tailwind base;\r\n\r\n/* ./src/components.css */\r\n@tailwind components;\r\n\r\n/* ./src/utilities.css */\r\n@tailwind utilities;\r\n```\r\n\r\nIn this case, `base.css`, `components.css`, and `utilities.css` are all considered Tailwind roots because they contain Tailwind directives or imports.\r\n\r\nSince there are multiple roots, the nearest common ancestor should become the tailwind root (where `@config` is injected). In this case, the nearest common ancestor is `tailwind-setup.css` (not `index.css` because that's further away).\r\n\r\nBefore this change, we find the common ancestor between `base.css` and `components.css` which would be `index.css` instead of `tailwind-setup.css`.\r\n\r\nIn a next iteration, we compare `index.css` with `utilities.css` and find that there is no common ancestor (because the `index.css` file has no parents). This resulted in the `@config` being injected in `index.css` and in `utilities.css`.\r\n\r\nContinuing with the rest of the migrations, we migrate the `index.css`'s `@config` away, but we didn't migrate the `@config` from `utilities.css`.\r\n\r\nWith this PR, we don't even have the `@config` in the `utilities.css` file anymore.\r\n\r\nTest plan\r\n---\r\n\r\n1. Added an integration test with a non-migrateable config file to ensure that the `@config` is injected in the correct file.\r\n2. Added an integration test with a migrateable config file to ensure that the CSS config is injected in the correct file. h/t @philipp-spiess \r\n3. Ran the upgrade on the https://commit.tailwindui.com project and ensured that \r\n  1. The `@config` does not exist in the `utilities.css` file (this was the first bug we solved)\r\n  2. The `@config` is replaced in the `tailwind.css` file correctly.\r\n\r\n<img width=\"592\" alt=\"image\" src=\"https://github.com/user-attachments/assets/02e3f6ea-a85d-46c2-ac93-09f34ac4a4b8\">\r\n\r\n<img width=\"573\" alt=\"image\" src=\"https://github.com/user-attachments/assets/e372eb5f-5732-4052-ab39-096ba7970ff6\">\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14989","RelatedDescription":"Closed or merged PR \"Ensure `@config` is injected in common ancestor sheet\" (#14989)"},{"Id":"2652192357","IsPullRequest":true,"CreatedAt":"2024-11-14T10:31:05","Actor":"RobinMalfait","Number":"14976","RawContent":null,"Title":"Do not migrate legacy classes with custom values","State":"closed","Body":"This PR fixes an issue where we migrated classes such as `rounded` to `rounded-sm` (see: https://github.com/tailwindlabs/tailwindcss/pull/14875)\n\nHowever, if you override the values in your `tailwind.config.js` file, then the migration might not be correct.\n\nThis PR makes sure to only migrate the classes if you haven't overridden the values in your `tailwind.config.js` file.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14976","RelatedDescription":"Closed or merged PR \"Do not migrate legacy classes with custom values\" (#14976)"},{"Id":"2657839088","IsPullRequest":false,"CreatedAt":"2024-11-14T10:26:38","Actor":"BVPritesh","Number":"14998","RawContent":null,"Title":"Need to resolve the :has() empty sub selector after build the angular project.","State":"closed","Body":"After building the Angular project, I found that a warning was displayed. However, the style.css file is not empty; the .has() selector has a value. Please check the screenshot below.\r\n\r\nLet me know if you need further adjustments!\r\n\r\nWarning message as below:\r\n```\r\nWARNING] 7 rules skipped due to selector errors:\r\n  .has-\\[\\:checked\\]\\:border-indigo-200:has() -> Empty sub-selector\r\n  .has-\\[\\:checked\\]\\:bg-indigo-50:has() -> Empty sub-selector\r\n  .has-\\[\\:checked\\]\\:bg-indigo-500:has() -> Empty sub-selector\r\n  .has-\\[\\:checked\\]\\:text-indigo-900:has() -> Empty sub-selector\r\n  .has-\\[\\:checked\\]\\:text-white:has() -> Empty sub-selector\r\n  .has-\\[\\:checked\\]\\:ring-2:has() -> Empty sub-selector\r\n  .has-\\[\\:checked\\]\\:ring-indigo-600:has() -> Empty sub-selector\r\n```  \r\nScreenshot:  \r\n![image](https://github.com/user-attachments/assets/18c83f7f-c195-4cf4-b422-90571236a645)\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14998","RelatedDescription":"Closed issue \"Need to resolve the :has() empty sub selector after build the angular project.\" (#14998)"},{"Id":"2655567876","IsPullRequest":false,"CreatedAt":"2024-11-13T18:46:24","Actor":"maxdeichmann","Number":"14988","RawContent":null,"Title":"[Security] SNYK-JS-CROSSSPAWN-8303230","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nFor example: tailwindcss 3.4.14\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nFor example: next 14.2.15\r\n\r\n**What version of Node.js are you using?**\r\n\r\nFor example: [v12.0.0](node:20-alpine3.20)\r\n\r\n**What browser are you using?**\r\n\r\nFor example: Chrome\r\n\r\n**What operating system are you using?**\r\n\r\nFor example: macOS\r\n\r\n**Reproduction URL**\r\n\r\n- pnpm lock file from tailwind: https://github.com/tailwindlabs/tailwindcss/blob/0b908f3992d83ded583bf59f2457c41670418eca/pnpm-lock.yaml#L1826 \r\n\r\n**Describe your issue**\r\n\r\nWe are faced with the SNYK-JS-CROSSSPAWN-8303230 vulnerability which occurs in cross-spawn < 7.0.5. Can you please upgrade the dependencies on your end?\r\n\r\nhttps://security.snyk.io/vuln/SNYK-JS-CROSSSPAWN-8303230","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14988","RelatedDescription":"Closed issue \"[Security] SNYK-JS-CROSSSPAWN-8303230\" (#14988)"},{"Id":"2656137078","IsPullRequest":true,"CreatedAt":"2024-11-13T18:39:21","Actor":"philipp-spiess","Number":"14993","RawContent":null,"Title":"Reintroduce `container` component as a utility","State":"closed","Body":"Closes #13129\r\n\r\nWe're adding back the v3 `container` component, this time as a utility. The idea is that we support the default `container` behavior but we will not have an API to configure this similar to what v3 offered. Instead, the recommended approach is to configure it by creating a custom utility like so:\r\n\r\n```css\r\n@import \"tailwindcss\";\r\n\r\n@utility container {\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding-left: 2rem;\r\n  padding-right: 2rem;\r\n}\r\n```\r\n\r\nWe do have an idea of how to migrate existing JS configuration files to the new `@utility` as part of the interop layer and the codemod. This is going to be a follow-up PR though.\r\n\r\n## Test Plan\r\n\r\nWe added a unit test but we've also played around with it in the Vite playground. Yep, looks like a `container`:\r\n\r\nhttps://github.com/user-attachments/assets/ea7a5a4c-4cde-4ef5-9062-03e16239eb85\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14993","RelatedDescription":"Closed or merged PR \"Reintroduce `container` component as a utility\" (#14993)"},{"Id":"2655863498","IsPullRequest":false,"CreatedAt":"2024-11-13T18:21:50","Actor":"JasonKleban","Number":"14990","RawContent":null,"Title":"Performance Monitoring flags two regex taking majority of cli time","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\n3.4.14\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\npostcss-loader: 8.1, webpack 5.96\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv21.1.0\r\n\r\n**What operating system are you using?**\r\n\r\nMac, Windows\r\n\r\n**Describe your issue**\r\n\r\nIn a fairly small project tailwind is taking 26 seconds.  I profiled it with Chrome DevTools `npx --node-options=--inspect-brk tailwindcss -i .\\src\\input.css` and see that some specific regexes are taking up a majority of the time:\r\n\r\n![image](https://github.com/user-attachments/assets/4884d5ed-c456-4d83-94df-d20829b6f117)\r\n\r\nI don't think this is project-specific.  I'm suspecting that these regexes should be re-evaluated for performance - but I have not been able to find where these regexes are in the source.\r\n\r\n> ```((?=(((?:([^\\s\"'`\\[\\\\]+-)?\\[[^\\s`]+\\]\\/[\\w_-]+:|([^\\s\"'`\\[\\\\]+-)?\\[[^\\s`]+\\]:|[^\\s`\\[\\\\]+:))+))\\2)?!?(?:\\[[^\\s:'\"`]+:[^\\s\\[\\]]+\\]|\\[[^\\s:'\"`\\]]+:[^\\s]+?\\[[^\\s]+\\][^\\s]+?\\]|(?:-?(?:\\w+)|@(?:\\w+))(?:(?:(?:-(?:\\w+-)*\\['[^\\s]+'\\]|-(?:\\w+-)*\\[\"[^\\s]+\"\\]|-(?:\\w+-)*\\[`[^\\s]+`\\]|-(?:\\w+-)*\\[(?:[^\\s\\[\\]]+\\[[^\\s\\[\\]]+\\])*[^\\s:\\[\\]]+\\])(?![{([]])(?:\\/[^\\s'\"`\\\\><$]*)?|(?:-(?:\\w+-)*\\['[^\\s]+'\\]|-(?:\\w+-)*\\[\"[^\\s]+\"\\]|-(?:\\w+-)*\\[`[^\\s]+`\\]|-(?:\\w+-)*\\[(?:[^\\s\\[\\]]+\\[[^\\s\\[\\]]+\\])*[^\\s\\[\\]]+\\])(?![{([]])(?:\\/[^\\s'\"`\\\\$]*)?|[-\\/][^\\s'\"`\\\\$={><]*))?)```\r\n\r\n> ```((?=(((?:@\\[[^\\s\"'`]+\\](\\/[^\\s\"'`]+)?:|([^\\s\"'`\\[\\\\]+-)?\\[[^\\s\"'`]+\\]\\/[\\w_-]+:|([^\\s\"'`\\[\\\\]+-)?\\[[^\\s\"'`]+\\]:|[^\\s\"'`\\[\\\\]+:))+))\\2)?!?(?:\\[[^\\s:'\"`]+:[^\\s\\[\\]]+\\]|\\[[^\\s:'\"`\\]]+:[^\\s]+?\\[[^\\s]+\\][^\\s]+?\\]|(?:-?(?:\\w+)|@(?:\\w+))(?:(?:(?:-(?:\\w+-)*\\['[^\\s]+'\\]|-(?:\\w+-)*\\[\"[^\\s]+\"\\]|-(?:\\w+-)*\\[`[^\\s]+`\\]|-(?:\\w+-)*\\[(?:[^\\s\\[\\]]+\\[[^\\s\\[\\]]+\\])*[^\\s:\\[\\]]+\\])(?![{([]])(?:\\/[^\\s'\"`\\\\><$]*)?|(?:-(?:\\w+-)*\\['[^\\s]+'\\]|-(?:\\w+-)*\\[\"[^\\s]+\"\\]|-(?:\\w+-)*\\[`[^\\s]+`\\]|-(?:\\w+-)*\\[(?:[^\\s\\[\\]]+\\[[^\\s\\[\\]]+\\])*[^\\s\\[\\]]+\\])(?![{([]])(?:\\/[^\\s'\"`\\\\$]*)?|[-\\/][^\\s'\"`\\\\$={><]*))?)```\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14990","RelatedDescription":"Closed issue \"Performance Monitoring flags two regex taking majority of cli time\" (#14990)"},{"Id":"2656007640","IsPullRequest":false,"CreatedAt":"2024-11-13T17:35:11","Actor":"simonmaass","Number":"14992","RawContent":null,"Title":"Lexical error on line 1: Unrecognized text. in v4","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nFor example: v4.0.0-alpha.30\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\n\"@tailwindcss/node@4.0.0-alpha.30\"\r\n\"@tailwindcss/postcss@4.0.0-alpha.30\"\r\n\"@tailwindcss/vite@4.0.0-alpha.30\"\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv20.11.1\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nWindows\r\n\r\n**Describe your issue**\r\n\r\n WARN  [vite:css] Lexical error on line 1: Unrecognized text.                                                                                                                                     17:04:20\r\n\r\n  Erroneous area:\r\n1: infinity * 1px\r\n^..^\r\n1117|    }\r\n1118|    .rounded-full {\r\n1119|      border-radius: calc(infinity * 1px);\r\n   |      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n1120|    }\r\n1121|    .rounded-lg { (x2)\r\n\r\n![image](https://github.com/user-attachments/assets/baca0ffb-066b-4109-b52a-274669d690ca)\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14992","RelatedDescription":"Closed issue \"Lexical error on line 1: Unrecognized text. in v4\" (#14992)"},{"Id":"2655994531","IsPullRequest":true,"CreatedAt":"2024-11-13T16:03:27","Actor":"adamwathan","Number":"14991","RawContent":null,"Title":"Ensure consistent opacity for disabled form controls in all browsers","State":"open","Body":"We noticed that in Chrome, disabled `<select>` elements were being rendered at 70% opacity, but were being rendered at 100% opacity in Firefox and Safari. After some research, we learned that all form controls in all browsers are rendered at a lower opacity when disabled _if you don't include our other Preflight styles_, but some of the other normalizations we do in Preflight (specifically stuff around borders) causes each browser to abandon their default/native control styles, and only Chrome persists the user-agent opacity setting it was using for the untouched native control.\r\n\r\nThis PR just sets the opacity for all disabled elements to `1` so that there are no surprises and you can style your disabled elements however you want. This is something we ran into on Catalyst, and had to add `disabled:opacity-100` to our select controls to avoid since we had our own custom styles for them.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14991","RelatedDescription":"Open PR \"Ensure consistent opacity for disabled form controls in all browsers\" (#14991)"},{"Id":"2650299100","IsPullRequest":false,"CreatedAt":"2024-11-13T15:42:51","Actor":"emmbm","Number":"14965","RawContent":null,"Title":"[v4] Vite plugin breaks svelte global animation keyframes handling","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv4.0.0-alpha.32\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nVite with SvelteKit 2.8.0 (latest)\r\n\r\n**What version of Node.js are you using?**\r\n\r\nFor example: v23.1.0\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nMacOS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://github.com/emmbm/tailwind-svelte-keyframes\r\n\r\n**Describe your issue**\r\n\r\nUpdating from `@tailwindcss/vite@4.0.0-alpha.31` to `@tailwindcss/vite@4.0.0-alpha.32` breaks svelte's expected handling (read here _renaming_) of global keyframes defined in style blocks.\r\n\r\nIn svelte components, styles are scoped by default. This scoping also applies to keyframes, [unless they are defined with a `-global-` prefix which svelte then removes during build](https://svelte.dev/docs/svelte/global-styles#:global()). This behavior is broken in the current `next` version of tailwind.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14965","RelatedDescription":"Closed issue \"[v4] Vite plugin breaks svelte global animation keyframes handling\" (#14965)"},{"Id":"2652852608","IsPullRequest":true,"CreatedAt":"2024-11-13T15:42:49","Actor":"philipp-spiess","Number":"14981","RawContent":null,"Title":"Vite: Don't track candidate changes for Svelte `<style>` tags","State":"closed","Body":"Closes #14965\r\n\r\nThis PR changes the way we register Tailwind CSS as a Svelte preprocessor when using the Vite plugin. The idea is to reduce the bookkeeping for interacting with CSS inside `<style>` tags so that we have a more consistent behavior and make sure the Svelte-specific post-processing (e.g. local class mangling) works as expected.\r\n\r\nPrior to this change, we were running Tailwind CSS as a Svelte preprocessor and then we would transform the file again when necessary inside the Vite `transform` hook. This is necessary to have the right list of candidates when we build the final CSS, but it did cause some situation to not apply the Svelte post-processors anymore. The repro for this seemed to indicate a timing specific issue and I did notice that specifically the code where we invalidate modules in Vite would cause unexpected processing orders.\r\n\r\nWe do, however, not officially support rendering utilities (`@tailwind utilities;`) inside `<style>` tag. This is because the `<style>` block is scoped by default and emitting utilities will always include utilities for all classes in your whole project. For this case, we highly recommend creating as separate `.css` file and importing it explicitly.\r\n\r\nWith this limitation in place, the additional bookkeeping where we need to invalidate modules because the candidate list has changed is no longer necessary and removing it allows us to reduce the complexity of the Svelte integration.\r\n\r\n## Test Plan\r\n\r\nhttps://github.com/user-attachments/assets/32c8e91f-ab21-48c6-aeaf-2582273b9bac\r\n\r\nNot seen in the test plan above I also tested the `pnpm build --watch` step of the Vite project. This does require the `pnpm preview` server to restart but the build artifact are updated as expected.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14981","RelatedDescription":"Closed or merged PR \"Vite: Don't track candidate changes for Svelte `<style>` tags\" (#14981)"},{"Id":"2652765147","IsPullRequest":true,"CreatedAt":"2024-11-13T15:23:34","Actor":"RobinMalfait","Number":"14979","RawContent":null,"Title":"Ensure it's safe to perform suffix-less migrations","State":"closed","Body":"This PR makes sure that migrations from suffix-less candidates (e.g.: `rounded`, `blur`, `shadow`) are safe to be migrated. \n\nIn some code snippets that's not always the case.\n\nGiven the following code snippet:\n```tsx\ntype Star = [\n  x: number,\n  y: number,\n  dim?: boolean,\n  blur?: boolean,\n  rounded?: boolean,\n  shadow?: boolean,\n]\n\nfunction Star({ point: [cx, cy, dim, blur, rounded, shadow] }: { point: Star }) {\n  return <svg class=\"rounded shadow blur\" filter={blur ? 'url(…)' : undefined} />\n}\n```\n\nWithout this change, it would result in:\n```tsx\ntype Star = [\n  x: number,\n  y: number,\n  dim?: boolean,\n  blur-sm?: boolean,\n  rounded-sm?: boolean,\n  shadow-sm?: boolean,\n]\n\nfunction Star({ point: [cx, cy, dim, blur-sm, rounded-sm, shadow-sm] }: { point: Star }) {\n  return <svg class=\"rounded-sm shadow-sm blur-sm\" filter={blur-sm ? 'url(…)' : undefined} />\n}\n```\n\nBut with this change, it results in:\n```tsx\ntype Star = [\n  x: number,\n  y: number,\n  dim?: boolean,\n  blur?: boolean,\n  rounded?: boolean,\n  shadow?: boolean,\n]\n\nfunction Star({ point: [cx, cy, dim, blur, rounded, shadow] }: { point: Star }) {\n  return <svg class=\"rounded-sm shadow-sm blur-sm\" filter={blur ? 'url(…)' : undefined} />\n}\n```\n\nNotice how the classes inside the `class` attribute _are_ converted, but the ones in the types or as part of the JavaScript code (e.g.: `filter={blur ? 'url(…)' : undefined}`) are not.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14979","RelatedDescription":"Closed or merged PR \"Ensure it's safe to perform suffix-less migrations\" (#14979)"},{"Id":"2653850492","IsPullRequest":true,"CreatedAt":"2024-11-13T15:18:59","Actor":"adamwathan","Number":"14984","RawContent":null,"Title":"Support specifying gradient interpolation method via modifier","State":"closed","Body":"This PR adds support for specifying a color interpolation method for all gradient utilities using a modifier:\r\n\r\n```html\r\n<div class=\"bg-linear-to-r/oklab\">\r\n```\r\n\r\nSupported bare values are any valid color space keyword, as well as the special keywords `shorter`, `longer`, `increasing`, and `decreasing`, which are shortcuts for `in oklch {keyword} hue`.\r\n\r\nArbitrary values are also supported and are used as-is, so the `in` keyword is not automatically included for you:\r\n\r\n```html\r\n<div class=\"bg-linear-to-r/[in_oklab]\">\r\n```\r\n\r\nModifiers are not supported when using arbitrary values for the actual gradient, as it's expected that your arbitrary gradient value contain all of the details you want in your gradient:\r\n\r\n\r\n```html\r\n<!-- Won't work -->\r\n<div class=\"bg-linear-[to_right]/oklab\">\r\n\r\n<!-- Do this -->\r\n<div class=\"bg-linear-[to_right_in_oklab]\">\r\n```\r\n\r\nResolves https://github.com/tailwindlabs/tailwindcss/issues/14955, but it may still be wise to make `oklab` the default since I do sort of agree with the poster there that most people probably expect a gradient between two colors to sort of just \"fade\" between them rather than interpolate between them around the color wheel.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14984","RelatedDescription":"Closed or merged PR \"Support specifying gradient interpolation method via modifier\" (#14984)"},{"Id":"2651835678","IsPullRequest":true,"CreatedAt":"2024-11-13T10:38:46","Actor":"depfu[bot]","Number":"14971","RawContent":null,"Title":"Update @parcel/watcher-linux-x64-glibc 2.4.2-alpha.0 → 2.5.0 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​parcel/watcher-linux-x64-glibc (2.4.2-alpha.0 → 2.5.0) · [Repo](https://github.com/parcel-bundler/watcher)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/parcel-bundler/watcher/releases/tag/v2.5.0\">2.5.0</a></h4>\n\n<blockquote><h2 dir=\"auto\">Added</h2>\n<ul dir=\"auto\">\n<li>Support 32-bit arm musl platform</li>\n<li>Support npm <code class=\"notranslate\">--build-from-source</code> flag to optionally build from source instead of using prebuilt packages. Can be used in conjunction with <code class=\"notranslate\">--no-optional</code> to prevent installing platform-specific dependencies.</li>\n</ul>\n<h2 dir=\"auto\">Fixed</h2>\n<ul dir=\"auto\">\n<li>Fix use after free errors (<a href=\"https://bounce.depfu.com/github.com/parcel-bundler/watcher/pull/177\">#177</a>)</li>\n<li>Fix deadlock between Watcher and Debounce threads (<a href=\"https://bounce.depfu.com/github.com/parcel-bundler/watcher/pull/189\">#189</a>)</li>\n<li>Avoid <code class=\"notranslate\">open()</code> calls on <code class=\"notranslate\">stat()</code> failures on macOS to prevent security dialogs (<a href=\"https://bounce.depfu.com/github.com/parcel-bundler/watcher/pull/186\">#186</a>)</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/@parcel%2Fwatcher-linux-x64-glibc/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/parcel-bundler/watcher/compare/02ebcbe7ab1931e78495f0be93a54f06f6d6e68a...0ed1564ca45bd28440b383bb2fbf9d8f2274e49b\">See the full diff on Github</a>. The new version differs by 18 commits:</p>\n<ul>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/0ed1564ca45bd28440b383bb2fbf9d8f2274e49b\"><code>2.5.0</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/86a6cd3c695d3962afe2eeadae703d7a0b226979\"><code>Fix wasm tests</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/15fc604e259c55a6cb0adb9a83f70e49df5f0160\"><code>Fix CI build</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/8efcb0ff5b6b85e2fc3b853275cab0c20bbea652\"><code>Add install script to optionally build from source</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/3d5de6a79c560dc8b009071ac017c92d994e53c6\"><code>Fix WASM build</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/2c05a3db29c358febfc000321a221b11e94356af\"><code>add musl build for arm platform (#192)</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/f0f7df6cd6cf91984fb99d804d8b112b15026f2e\"><code>macos: avoid open() calls on stat failures (#186)</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/9b7dac3dc2c5d9a3d609d371dde012ba397c0848\"><code>Deadlock between Watcher and Debounce threads (fix #187) (#189)</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/99cf43b739b25bbd3538506dbc4e87a202f7af84\"><code>fix publish script</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/c1f80a06baf7a7df2e65057385c3d0eb4ada6802\"><code>fix version number</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/b752cfac2445abde7d22b5a43d599349373a9b4f\"><code>fix windows ia32 build</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/709d053a6944dbd9fd61f04e90d59fa0c013bc04\"><code>update prebuildify to fix windows build</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/6845acc62af1028cda6cf0b61627a1dd6adfa0c0\"><code>bump to node 18</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/ec063a8a17c5a2a8fb40b7fc5f0f9adf88d8e523\"><code>2.4.1-alpha.0</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/e9af634b80470658ae06ec4b6c28dd6ec7d7301b\"><code>Fix use after free errors (#177)</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/8dfd99440b8666e81cc6865f68697ab272dfe83d\"><code>Publish watcher from sub-directory so binding.gyp is excluded</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/cc904f8016936e672e7f8a322b096f783db7ce57\"><code>Throw original error when it is not MODULE_NOT_FOUND</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/93e911c0462966e6206b895222af036de18378b3\"><code>define node_use_dtrace for freebsd</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14971","RelatedDescription":"Closed or merged PR \"Update @parcel/watcher-linux-x64-glibc 2.4.2-alpha.0 → 2.5.0 (minor)\" (#14971)"},{"Id":"2651811970","IsPullRequest":true,"CreatedAt":"2024-11-13T10:38:46","Actor":"depfu[bot]","Number":"14970","RawContent":null,"Title":"Update @parcel/watcher-linux-arm64-musl 2.4.2-alpha.0 → 2.5.0 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​parcel/watcher-linux-arm64-musl (2.4.2-alpha.0 → 2.5.0) · [Repo](https://github.com/parcel-bundler/watcher)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/parcel-bundler/watcher/releases/tag/v2.5.0\">2.5.0</a></h4>\n\n<blockquote><h2 dir=\"auto\">Added</h2>\n<ul dir=\"auto\">\n<li>Support 32-bit arm musl platform</li>\n<li>Support npm <code class=\"notranslate\">--build-from-source</code> flag to optionally build from source instead of using prebuilt packages. Can be used in conjunction with <code class=\"notranslate\">--no-optional</code> to prevent installing platform-specific dependencies.</li>\n</ul>\n<h2 dir=\"auto\">Fixed</h2>\n<ul dir=\"auto\">\n<li>Fix use after free errors (<a href=\"https://bounce.depfu.com/github.com/parcel-bundler/watcher/pull/177\">#177</a>)</li>\n<li>Fix deadlock between Watcher and Debounce threads (<a href=\"https://bounce.depfu.com/github.com/parcel-bundler/watcher/pull/189\">#189</a>)</li>\n<li>Avoid <code class=\"notranslate\">open()</code> calls on <code class=\"notranslate\">stat()</code> failures on macOS to prevent security dialogs (<a href=\"https://bounce.depfu.com/github.com/parcel-bundler/watcher/pull/186\">#186</a>)</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/@parcel%2Fwatcher-linux-arm64-musl/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/parcel-bundler/watcher/compare/02ebcbe7ab1931e78495f0be93a54f06f6d6e68a...0ed1564ca45bd28440b383bb2fbf9d8f2274e49b\">See the full diff on Github</a>. The new version differs by 18 commits:</p>\n<ul>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/0ed1564ca45bd28440b383bb2fbf9d8f2274e49b\"><code>2.5.0</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/86a6cd3c695d3962afe2eeadae703d7a0b226979\"><code>Fix wasm tests</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/15fc604e259c55a6cb0adb9a83f70e49df5f0160\"><code>Fix CI build</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/8efcb0ff5b6b85e2fc3b853275cab0c20bbea652\"><code>Add install script to optionally build from source</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/3d5de6a79c560dc8b009071ac017c92d994e53c6\"><code>Fix WASM build</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/2c05a3db29c358febfc000321a221b11e94356af\"><code>add musl build for arm platform (#192)</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/f0f7df6cd6cf91984fb99d804d8b112b15026f2e\"><code>macos: avoid open() calls on stat failures (#186)</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/9b7dac3dc2c5d9a3d609d371dde012ba397c0848\"><code>Deadlock between Watcher and Debounce threads (fix #187) (#189)</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/99cf43b739b25bbd3538506dbc4e87a202f7af84\"><code>fix publish script</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/c1f80a06baf7a7df2e65057385c3d0eb4ada6802\"><code>fix version number</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/b752cfac2445abde7d22b5a43d599349373a9b4f\"><code>fix windows ia32 build</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/709d053a6944dbd9fd61f04e90d59fa0c013bc04\"><code>update prebuildify to fix windows build</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/6845acc62af1028cda6cf0b61627a1dd6adfa0c0\"><code>bump to node 18</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/ec063a8a17c5a2a8fb40b7fc5f0f9adf88d8e523\"><code>2.4.1-alpha.0</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/e9af634b80470658ae06ec4b6c28dd6ec7d7301b\"><code>Fix use after free errors (#177)</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/8dfd99440b8666e81cc6865f68697ab272dfe83d\"><code>Publish watcher from sub-directory so binding.gyp is excluded</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/cc904f8016936e672e7f8a322b096f783db7ce57\"><code>Throw original error when it is not MODULE_NOT_FOUND</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/93e911c0462966e6206b895222af036de18378b3\"><code>define node_use_dtrace for freebsd</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14970","RelatedDescription":"Closed or merged PR \"Update @parcel/watcher-linux-arm64-musl 2.4.2-alpha.0 → 2.5.0 (minor)\" (#14970)"},{"Id":"2651792659","IsPullRequest":true,"CreatedAt":"2024-11-13T10:38:45","Actor":"depfu[bot]","Number":"14969","RawContent":null,"Title":"Update @parcel/watcher-linux-arm64-glibc 2.4.2-alpha.0 → 2.5.0 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​parcel/watcher-linux-arm64-glibc (2.4.2-alpha.0 → 2.5.0) · [Repo](https://github.com/parcel-bundler/watcher)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/parcel-bundler/watcher/releases/tag/v2.5.0\">2.5.0</a></h4>\n\n<blockquote><h2 dir=\"auto\">Added</h2>\n<ul dir=\"auto\">\n<li>Support 32-bit arm musl platform</li>\n<li>Support npm <code class=\"notranslate\">--build-from-source</code> flag to optionally build from source instead of using prebuilt packages. Can be used in conjunction with <code class=\"notranslate\">--no-optional</code> to prevent installing platform-specific dependencies.</li>\n</ul>\n<h2 dir=\"auto\">Fixed</h2>\n<ul dir=\"auto\">\n<li>Fix use after free errors (<a href=\"https://bounce.depfu.com/github.com/parcel-bundler/watcher/pull/177\">#177</a>)</li>\n<li>Fix deadlock between Watcher and Debounce threads (<a href=\"https://bounce.depfu.com/github.com/parcel-bundler/watcher/pull/189\">#189</a>)</li>\n<li>Avoid <code class=\"notranslate\">open()</code> calls on <code class=\"notranslate\">stat()</code> failures on macOS to prevent security dialogs (<a href=\"https://bounce.depfu.com/github.com/parcel-bundler/watcher/pull/186\">#186</a>)</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/@parcel%2Fwatcher-linux-arm64-glibc/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/parcel-bundler/watcher/compare/02ebcbe7ab1931e78495f0be93a54f06f6d6e68a...0ed1564ca45bd28440b383bb2fbf9d8f2274e49b\">See the full diff on Github</a>. The new version differs by 18 commits:</p>\n<ul>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/0ed1564ca45bd28440b383bb2fbf9d8f2274e49b\"><code>2.5.0</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/86a6cd3c695d3962afe2eeadae703d7a0b226979\"><code>Fix wasm tests</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/15fc604e259c55a6cb0adb9a83f70e49df5f0160\"><code>Fix CI build</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/8efcb0ff5b6b85e2fc3b853275cab0c20bbea652\"><code>Add install script to optionally build from source</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/3d5de6a79c560dc8b009071ac017c92d994e53c6\"><code>Fix WASM build</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/2c05a3db29c358febfc000321a221b11e94356af\"><code>add musl build for arm platform (#192)</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/f0f7df6cd6cf91984fb99d804d8b112b15026f2e\"><code>macos: avoid open() calls on stat failures (#186)</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/9b7dac3dc2c5d9a3d609d371dde012ba397c0848\"><code>Deadlock between Watcher and Debounce threads (fix #187) (#189)</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/99cf43b739b25bbd3538506dbc4e87a202f7af84\"><code>fix publish script</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/c1f80a06baf7a7df2e65057385c3d0eb4ada6802\"><code>fix version number</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/b752cfac2445abde7d22b5a43d599349373a9b4f\"><code>fix windows ia32 build</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/709d053a6944dbd9fd61f04e90d59fa0c013bc04\"><code>update prebuildify to fix windows build</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/6845acc62af1028cda6cf0b61627a1dd6adfa0c0\"><code>bump to node 18</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/ec063a8a17c5a2a8fb40b7fc5f0f9adf88d8e523\"><code>2.4.1-alpha.0</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/e9af634b80470658ae06ec4b6c28dd6ec7d7301b\"><code>Fix use after free errors (#177)</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/8dfd99440b8666e81cc6865f68697ab272dfe83d\"><code>Publish watcher from sub-directory so binding.gyp is excluded</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/cc904f8016936e672e7f8a322b096f783db7ce57\"><code>Throw original error when it is not MODULE_NOT_FOUND</code></a></li>\n<li><a href=\"https://github.com/parcel-bundler/watcher/commit/93e911c0462966e6206b895222af036de18378b3\"><code>define node_use_dtrace for freebsd</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14969","RelatedDescription":"Closed or merged PR \"Update @parcel/watcher-linux-arm64-glibc 2.4.2-alpha.0 → 2.5.0 (minor)\" (#14969)"},{"Id":"2652709269","IsPullRequest":true,"CreatedAt":"2024-11-13T10:38:43","Actor":"philipp-spiess","Number":"14978","RawContent":null,"Title":"Upgrade `@parcel/watcher` to `2.5.0`","State":"closed","Body":"This PR upgrades parcel watcher to 2.5.0.\r\n\r\nCloses #14957\r\nCloses #14958 \r\nCloses #14969 \r\nCloses #14970\r\nCloses #14971","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14978","RelatedDescription":"Closed or merged PR \"Upgrade `@parcel/watcher` to `2.5.0`\" (#14978)"},{"Id":"2653885602","IsPullRequest":false,"CreatedAt":"2024-11-13T10:32:06","Actor":"F-fengzi","Number":"14985","RawContent":null,"Title":"[v4] font family config breaks in `4.0.0-alpha.32`","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv4.0.0-alpha.33\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nvite 5.4.11, @tailwindcss/vite 4.0.0-alpha.33, svelte 5.4.16\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv20.17.0\r\n\r\n**What browser are you using?**\r\n\r\nChrome 130\r\n\r\n**What operating system are you using?**\r\n\r\nWindows\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/8JDdWlTAd5\r\n\r\n**Describe your issue**\r\n\r\nCustom font family config in `@theme` stops working at `4.0.0-alpha.32`.  Confirmed working in `4.0.0-alpha.31`.\r\n\r\nElements fell back to the default font. The expected behavior is to use the font family defined in `@theme`.\r\nSuccessfully reproduced the issue in the above Playground url. To reproduce yourself, use Tailwind `4.0.0-alpha.32` and configure a custom font family.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14985","RelatedDescription":"Closed issue \"[v4] font family config breaks in `4.0.0-alpha.32`\" (#14985)"},{"Id":"2652773054","IsPullRequest":true,"CreatedAt":"2024-11-12T19:04:13","Actor":"adamwathan","Number":"14980","RawContent":null,"Title":"Support opacity values in increments of 0.25 by default","State":"closed","Body":"This PR updates all areas in the framework that accept opacity values (`opacity-*`, `backdrop-opacity-*`, `bg-red-500/*`, etc.) to accept fractional values in increments of 0.25 instead of just whole numbers.\r\n\r\nWe noticed we use values like `2.5` and `7.5` pretty regularly in our templates and don't see why those should be treated as any more \"weird\" than something like `opacity-63` which we already support, so baking this in to core.\r\n\r\nIntelliSense will still only suggest values in increments of `5` like it did before.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14980","RelatedDescription":"Closed or merged PR \"Support opacity values in increments of 0.25 by default\" (#14980)"},{"Id":"2652398293","IsPullRequest":true,"CreatedAt":"2024-11-12T14:40:30","Actor":"MartijnCuppens","Number":"14977","RawContent":null,"Title":"Align empty date/time inputs in Safari iOS","State":"open","Body":"Safari adds `display: inline-flex` to date/time inputs, and this causes some alignment issues to empty dates:\r\n\r\n![image](https://github.com/user-attachments/assets/7162705e-167a-4526-b4de-cad3ebf3f740)\r\n\r\nIssue demo: https://play.tailwindcss.com/5LRvozLfrJ\r\n\r\nBy setting the display to `display: inline-block` (like the other browsers), and changing the vertical alignment of a pseudo element, the alignment is fixed again: \r\n\r\n![image](https://github.com/user-attachments/assets/b13692b3-e1cf-4392-929d-29576c2f06ee)\r\n\r\nFix demo: https://play.tailwindcss.com/5juwgUQI6s","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14977","RelatedDescription":"Open PR \"Align empty date/time inputs in Safari iOS\" (#14977)"},{"Id":"2651864429","IsPullRequest":false,"CreatedAt":"2024-11-12T11:14:34","Actor":"vnphanquang","Number":"14973","RawContent":null,"Title":"[v4] Usage of `@tailwindcss/postcss^4.0.0-alpha.25` with `svelte-preprocess` for svelte file with style tag: problematic dependency scanning","State":"open","Body":"## Version\r\n\r\n`@tailwindcss/postcss^4.0.0-alpha.25` & `tailwindcss^4.0.0-alpha.25`, i.e all versions of v4 alpha from **25** to **33** (as of this writing).\r\n\r\n## Environment\r\n\r\nOutput of `npx envinfo --system --binaries --browsers --npmPackages \"{svelte,@sveltejs/*,vite,tailwindcss,@tailwindcss/postcss}\"`:\r\n\r\n```\r\n  System:\r\n    OS: Linux 6.6 Arch Linux\r\n    CPU: (4) x64 Intel(R) Core(TM) i5-4590 CPU @ 3.30GHz\r\n    Memory: 6.01 GB / 15.57 GB\r\n    Container: Yes\r\n    Shell: 3.7.1 - /usr/bin/fish\r\n  Binaries:\r\n    Node: 22.11.0 - ~/.volta/tools/image/node/22.11.0/bin/node\r\n    npm: 10.9.0 - ~/.volta/tools/image/node/22.11.0/bin/npm\r\n    pnpm: 9.12.3 - ~/.volta/bin/pnpm\r\n  Browsers:\r\n    Chromium: 130.0.6723.116\r\n  npmPackages:\r\n    @sveltejs/adapter-auto: ^3.0.0 => 3.3.1\r\n    @sveltejs/kit: ^2.0.0 => 2.8.0\r\n    @sveltejs/vite-plugin-svelte: ^4.0.0 => 4.0.0\r\n    @tailwindcss/postcss: 4.0.0-alpha.25 => 4.0.0-alpha.25\r\n    svelte: ^5.0.0 => 5.1.15\r\n    tailwindcss: 4.0.0-alpha.25 => 4.0.0-alpha.25\r\n    vite: ^5.0.3 => 5.4.11\r\n```\r\n\r\n## Reproduction\r\n\r\nhttps://github.com/vnphanquang/sveltekit-tailwind-4-reproduction. Please see README for steps.\r\n\r\n## Description\r\n\r\n> [!NOTE]\r\n> Please note that tailwind is being used as a `postcss` plugin here, reported issue is not observed when using `vite` plugin.\r\n\r\nIn the reproduction, any `svelte` file with a `style` tag will cause the following two warnings from `svelte-preprocess` during both `dev` and `build`:\r\n\r\n```\r\n[vite-plugin-svelte] [...truncated_path...]/*.svelte svelte.preprocess returned this file as a dependency of itself. This can be caused by an invalid configuration or importing generated code that depends on .svelte files (eg. tailwind base css)\r\n```\r\n\r\nThere have been instances where similar warning was observed: https://github.com/sveltejs/svelte-preprocess/issues/619, https://github.com/sveltejs/svelte-preprocess/issues/346. But I don't exactly know what is causing this now. I'm guessing parsing `style` tags calls for parsing Tailwind entry css, which in turns requires parsing all matching source files 🔄.\r\n \r\n---\r\n\r\n```\r\n[...truncated_path...]/*.svelte svelte.preprocess depends on more than 10 external files which can cause slow builds and poor DX, try to reduce them. Found: [list_of_all_source_files_except_raster_images]\r\n```\r\n\r\nSimilarly, this is causing a lot of parsing during dev. In our real project with lots of such svelte files, the server quickly crashed with `Maximum Call Stack Size Exceeded`.\r\n\r\n## Use case\r\n\r\nHi all thanks for the good work, Tailwind 4 has been really good and I'm trying to test it out on some existing v3 projects with relatively complex setup. In our case we use tailwind as a postcss plugin because we also rely on some other postcss plugins (mixins, custom properties, custom media queries). We tried to use tailwind as vite plugin which works well in dev but the plugins do not apply during production build.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14973","RelatedDescription":"Open issue \"[v4] Usage of `@tailwindcss/postcss^4.0.0-alpha.25` with `svelte-preprocess` for svelte file with style tag: problematic dependency scanning\" (#14973)"},{"Id":"2650764033","IsPullRequest":true,"CreatedAt":"2024-11-12T01:28:41","Actor":"adamwathan","Number":"14967","RawContent":null,"Title":"Prepare v4.0.0-alpha.33 release","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14967","RelatedDescription":"Closed or merged PR \"Prepare v4.0.0-alpha.33 release\" (#14967)"},{"Id":"2650394003","IsPullRequest":true,"CreatedAt":"2024-11-11T21:49:35","Actor":"adamwathan","Number":"14966","RawContent":null,"Title":"Support spacing scale as line-height modifiers","State":"closed","Body":"This PR fixes an issue where utilities like `text-sm/6` failed to include a line-height because `--leading-6` is no longer an explicitly defined theme value by default.\r\n\r\nI don't really love seeing `calc(var(--spacing) * 9)` in the output here admittedly and it's making me consider again if we should register this variable as `inline` so we see the final computed value in the CSS, but if we do that it's something we should change in a separate PR.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14966","RelatedDescription":"Closed or merged PR \"Support spacing scale as line-height modifiers\" (#14966)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-11-15T03:30:23.4711805Z","RunDurationInMilliseconds":445}