{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2380561256","IsPullRequest":true,"CreatedAt":"2024-06-28T14:23:41","Actor":"eloyesp","Number":"13912","RawContent":null,"Title":"Parent state modifier without explicit parent (in-*)","State":"open","Body":"I'm doing a follow up on https://github.com/tailwindlabs/tailwindcss/discussions/13751 where I propose a new modifier, that is a simplified \"group-*\" without an explicit parent.\r\n\r\nThere are many times when the styling is based on the parent state, but it is not important which parent, there are many examples of that on the tests with the form of: `[.checked &]:underline`, but there are many other cases, for example:\r\n\r\n- `in-aria-busy`: If any parent is busy is enough, we don't care which parent it is.\r\n- `in-data-active`: This is part of an active element.\r\n\r\nThe syntax is quite simple, the implementation is clean and the generated css is shorter than using `group-*` or `[.checked_&]:underline`, and it also allows using variants like data- and aria-.\r\n\r\nHope you like the idea.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13912","RelatedDescription":"Open PR \"Parent state modifier without explicit parent (in-*)\" (#13912)"},{"Id":"2379358834","IsPullRequest":true,"CreatedAt":"2024-06-28T08:28:20","Actor":"Grogogoll","Number":"13908","RawContent":null,"Title":"Create generator-generic-ossf-slsa3-publish.yml","State":"closed","Body":"<!--\r\n\r\nüëã Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13908","RelatedDescription":"Closed or merged PR \"Create generator-generic-ossf-slsa3-publish.yml\" (#13908)"},{"Id":"2379241482","IsPullRequest":true,"CreatedAt":"2024-06-27T23:15:30","Actor":"benface","Number":"13907","RawContent":null,"Title":"Revert ‚ÄúPrevent Preflight from affecting list semantics‚Äù","State":"open","Body":"Unfortunately, I realized after my previous PR (#13815) got merged that there is one case where there is a visual difference between `list-style: none` and `list-style: \"\"`, which is when the `<li>` is empty. With `list-style: \"\"`, it still takes up space, as you can see in this CodePen: https://codepen.io/benface/pen/MWdRdyY. I guess we'll have to keep using `role=\"list\"` when we want to keep the list semantics.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13907","RelatedDescription":"Open PR \"Revert ‚ÄúPrevent Preflight from affecting list semantics‚Äù\" (#13907)"},{"Id":"2374908967","IsPullRequest":false,"CreatedAt":"2024-06-27T09:54:42","Actor":"hirasso","Number":"13898","RawContent":null,"Title":"[Bug] Adding a custom directive to `theme.extend.screens` breaks other breakpoints.","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv3.4.4\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\n- webpack 5.92.0\r\n- postcss-loader 8.1.1\r\n- postcss-preset-env 9.5.14\r\n\r\n**What version of Node.js are you using?**\r\n\r\nFor example: v20.11.0\r\n\r\n**What browser are you using?**\r\n\r\nArc\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/csci1nIOS9?file=config\r\n\r\n**Describe your issue**\r\n\r\nThe reproduction URL basically shows my issue. As soon as I add a custom directive `hoversupport` to my `theme.screens.extend` in `tailwind.config.js`, my breakpoints stop working. Is this intended behavior or a bug? It feels like a bug to me.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13898","RelatedDescription":"Closed issue \"[Bug] Adding a custom directive to `theme.extend.screens` breaks other breakpoints.\" (#13898)"},{"Id":"2377289424","IsPullRequest":false,"CreatedAt":"2024-06-27T06:40:23","Actor":"dimiatr","Number":"13905","RawContent":null,"Title":" the watcher does not work when adding a custom style to tailwind","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n\"tailwindcss\": \"^3.4.4\"\r\n\r\nFor example: v2.0.4\r\n\r\nI don't use any.\r\n\r\nFor example: postcss-cli 8.3.1, Next.js 10.0.9, webpack 5.28.0\r\n\r\nv20.14.0\r\n\r\nFor example: v12.0.0\r\n\r\nFirefox\r\n\r\nFor example: Chrome, Safari, or N/A\r\n\r\nWindows 10\r\n\r\nFor example: macOS, Windows\r\n\r\nhttps://play.tailwindcss.com/MHLQaZ7rcK?file=config\r\n\r\nA Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\r\n\r\nA reproduction is **required** when filing an issue ‚Äî any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.\r\n\r\nthe watcher does not work when adding a custom style to tailwind\r\n\r\nI encountered such a problem that when I enter custom properties into tailwind.config.js file, for example, in colors I enter new colors firmBlack: \"https://github.com/tailwindlabs/tailwindcss/issues/333\", which I need and they do not appear in html file, when I explicitly specify a class, for example text-firmBlack, it is not applied.\r\n\r\nbut if I exit vsCode and log in again, everything works, has anyone encountered this problem? it is not profitable to restart vsCode each time\r\n\r\nMaybe it's a general glitch, it happened only today, yesterday it didn't happen.\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13905","RelatedDescription":"Open issue \" the watcher does not work when adding a custom style to tailwind\" (#13905)"},{"Id":"2375625028","IsPullRequest":true,"CreatedAt":"2024-06-26T15:11:15","Actor":"joshwilsonvu","Number":"13900","RawContent":null,"Title":"Loosen :is() wrapping rules in applyImportantSelector for more readable output","State":"open","Body":"Hi, this is just a small quality of life improvement to the changes made in #10835, intended for a v3.x.\r\n\r\nI'm using the `important` selector strategy, and noticed that for most cases, output like\r\n\r\n```css\r\n.tw :is(.text-citrine-500) {\r\n  --tw-text-opacity: 1;\r\n  color: rgb(246 220 82 / var(--tw-text-opacity)) /* #f6dc52 */;\r\n}\r\n```\r\n\r\ncan be reduced to simply\r\n\r\n```css\r\n.tw .text-citrine-500 {\r\n  --tw-text-opacity: 1;\r\n  color: rgb(246 220 82 / var(--tw-text-opacity)) /* #f6dc52 */;\r\n}\r\n```\r\n\r\nbecause the nested selector doesn't contain a descendant selector like `.dark .text-citrine-500`. I'm sure the unnecessary `:is()` would be removed in minification, but having the \"cleanest\" possible output for Intellisense would be nice. (Trying to convince my coworkers to get on board, and making the previews feel more \"hand-written\" might help! üòÅ)\r\n\r\nAs far as I can tell, this change can't affect the behavior of any possible selector passed in. Feel free to close if you can find a counterexample. Thank you!\r\n\r\n<!--\r\n\r\nüëã Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13900","RelatedDescription":"Open PR \"Loosen :is() wrapping rules in applyImportantSelector for more readable output\" (#13900)"},{"Id":"2373000969","IsPullRequest":false,"CreatedAt":"2024-06-25T15:34:49","Actor":"mDeram","Number":"13895","RawContent":null,"Title":"Shadow color is not automatically set on hover:shadow","State":"open","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv3.4.4\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nvite v5.2.0, postcss v8.4.38, autoprefixer v10.4.19\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv20.12.2\r\n\r\n**What browser are you using?**\r\n\r\nTested on:\r\nMozilla Firefox 126.0.1\r\nChromium 125.0.6422.112 for Linux Mint\r\n\r\n**What operating system are you using?**\r\n\r\nLinux Mint\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/cr3sF7yq4d\r\n\r\n**Describe your issue**\r\n\r\nHello,\r\n\r\nI noticed that shadow colors are not being applied automatically when using hover shadows. I feel like it is not the expected behavior. It needs to be reapplied. Here is the code I expected to work in order to apply a color to a shadow:\r\n\r\n`\r\nshadow-purple-500 shadow-lg hover:shadow-2xl\r\n`\r\n\r\nTo make the expected behavior work I need to repeat the shadow color with the hover like so:\r\n`\r\nshadow-purple-500 shadow-lg hover:shadow-purple-500 hover:shadow-2xl\r\n`\r\n\r\nThanks you for tailwind it is amazing,\r\nHave a nice day!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13895","RelatedDescription":"Open issue \"Shadow color is not automatically set on hover:shadow\" (#13895)"},{"Id":"2366007274","IsPullRequest":true,"CreatedAt":"2024-06-24T13:13:13","Actor":"Simon-He95","Number":"13872","RawContent":null,"Title":"refactor(util): code refactor","State":"closed","Body":"<!--\r\n\r\nüëã Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13872","RelatedDescription":"Closed or merged PR \"refactor(util): code refactor\" (#13872)"},{"Id":"2368909679","IsPullRequest":true,"CreatedAt":"2024-06-23T22:08:51","Actor":"hbendev","Number":"13888","RawContent":null,"Title":"Add `items-first-baseline` and `items-last-baseline` utilities - v4","State":"open","Body":"This PR adds the `items-first-baseline` and `items-last-baseline` utility classes that can control [`baseline-position`](https://developer.mozilla.org/en-US/docs/Web/CSS/align-items#formal_syntax) for the [align-items property](https://developer.mozilla.org/en-US/docs/Web/CSS/align-items#baseline).\r\n\r\nBrowser support:\r\n- MDN: https://developer.mozilla.org/en-US/docs/Web/CSS/align-items#browser_compatibility\r\n- Can I use `first baseline`: https://caniuse.com/?search=align%20items%3A%20first%20baseline\r\n- Can I use `last baseline`: https://caniuse.com/?search=align%20items%3A%20last%20baseline\r\n\r\nThe feature were requested multiple times:\r\n- https://github.com/tailwindlabs/tailwindcss/discussions/13518\r\n- https://github.com/tailwindlabs/tailwindcss/discussions/12406\r\n- https://github.com/tailwindlabs/tailwindcss/discussions/11623\r\n- https://github.com/tailwindlabs/tailwindcss/discussions/4855\r\n\r\nA special plugin in `tailwind.config.js` can be used as an existing workaround: \r\n\r\n```typescript\r\nplugin(function extendItemsBaselineUtilities({ addUtilities }) {\r\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/align-items#start\r\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/align-items#end\r\n  addUtilities({\r\n    \".items-first-baseline\": { \"align-items\": \"first baseline\" },\r\n    \".items-last-baseline\": { \"align-items\": \"last baseline\" },\r\n  });\r\n});\r\n```\r\n\r\nV3 counterpart PR: https://github.com/tailwindlabs/tailwindcss/pull/13887\r\n\r\n<!--\r\n\r\nüëã Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13888","RelatedDescription":"Open PR \"Add `items-first-baseline` and `items-last-baseline` utilities - v4\" (#13888)"},{"Id":"2368909301","IsPullRequest":true,"CreatedAt":"2024-06-23T22:07:43","Actor":"hbendev","Number":"13887","RawContent":null,"Title":"Add `items-first-baseline` and `items-last-baseline` utilities - v3","State":"open","Body":"This PR adds the `items-first-baseline` and `items-last-baseline` utility classes that can control [`baseline-position`](https://developer.mozilla.org/en-US/docs/Web/CSS/align-items#formal_syntax) for the [align-items property](https://developer.mozilla.org/en-US/docs/Web/CSS/align-items#baseline).\r\n\r\nBrowser support:\r\n- MDN: https://developer.mozilla.org/en-US/docs/Web/CSS/align-items#browser_compatibility\r\n- Can I use `first baseline`: https://caniuse.com/?search=align%20items%3A%20first%20baseline\r\n- Can I use `last baseline`: https://caniuse.com/?search=align%20items%3A%20last%20baseline\r\n\r\nThe feature were requested multiple times:\r\n- https://github.com/tailwindlabs/tailwindcss/discussions/13518\r\n- https://github.com/tailwindlabs/tailwindcss/discussions/12406\r\n- https://github.com/tailwindlabs/tailwindcss/discussions/11623\r\n- https://github.com/tailwindlabs/tailwindcss/discussions/4855\r\n\r\nA special plugin in `tailwind.config.js` can be used as an existing workaround: \r\n\r\n```typescript\r\nplugin(function extendItemsBaselineUtilities({ addUtilities }) {\r\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/align-items#start\r\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/align-items#end\r\n  addUtilities({\r\n    \".items-first-baseline\": { \"align-items\": \"first baseline\" },\r\n    \".items-last-baseline\": { \"align-items\": \"last baseline\" },\r\n  });\r\n});\r\n```\r\n\r\nV4 counterpart PR: https://github.com/tailwindlabs/tailwindcss/pull/13888\r\n\r\n<!--\r\n\r\nüëã Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13887","RelatedDescription":"Open PR \"Add `items-first-baseline` and `items-last-baseline` utilities - v3\" (#13887)"},{"Id":"2368585257","IsPullRequest":false,"CreatedAt":"2024-06-23T18:58:55","Actor":"bep","Number":"13886","RawContent":null,"Title":"[v4] \"Done in xms\" mismatch","State":"closed","Body":"I have taken the v4 for a spin, and it's very impressive. I have one question/bug report.\r\n\r\n* The \"Done in xms\" reported at the end from the TailwindCSS CLI seems to be off by a factor of about 10 compared to the wall time reported by `time`.\r\n* What is this overhead and are there ways to improve this?\r\n\r\n```\r\ntime npx tailwindcss -i assets/css/styles.css -o foo.css\r\n‚âà tailwindcss v4.0.0-alpha.16\r\n\r\nDone in 24ms\r\nnpx tailwindcss -i assets/css/styles.css -o foo.css  0.29s user 0.07s system 99% cpu 0.362 total\r\n```\r\n\r\n\r\nThe CSS file used as input:\r\n\r\n```css\r\n@import \"tailwindcss\";\r\n\r\n@theme {\r\n  --color-*: initial;\r\n\r\n  --color-blue-100: #3483eb;\r\n\r\n  --color-gray-50: #f8fafc;\r\n  --color-gray-100: #f1f5f9;\r\n  --color-gray-200: #e2e8f0;\r\n\r\n  /* ... */\r\n  --color-green-800: #3f6212;\r\n  --color-green-900: #365314;\r\n  --color-green-950: #1a2e05;\r\n}\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13886","RelatedDescription":"Closed issue \"[v4] \"Done in xms\" mismatch\" (#13886)"},{"Id":"2367441228","IsPullRequest":false,"CreatedAt":"2024-06-22T10:57:19","Actor":"JuanVargas","Number":"13878","RawContent":null,"Title":"SyntaxError: Unexpected token '?' ","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nI am trying to use 3.4.4. which is the one that is installed when issuing the command  \r\nnpm install -D tailwindcss\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?** \r\n\r\nNONE. This error happens when I  try to install the framework under ubuntu 22.04.4 LTS\r\n\r\n**What version of Node.js are you using?**\r\n\r\nI am using v12.22.9\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nubuntu 22.04.4 LTS\r\n\r\n**Reproduction URL**\r\n\r\n**Describe your issue**\r\n\r\nWhen I issue the command\r\n\r\nnpx tailwindcss init\r\n\r\nthe install emits error \r\n\r\nmydir/.npm/_npx/bc7494899bbce1ca/node_modules/postcss-load-config/node_modules/lilconfig/src/index.js:163\r\n\t} = getOptions(name, options ?? {}, false);\r\n\t                              ^\r\nSyntaxError: Unexpected token '?'\r\n    at wrapSafe (internal/modules/cjs/loader.js:915:16)\r\n    at Module._compile (internal/modules/cjs/loader.js:963:27)\r\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1027:10)\r\n    at Module.load (internal/modules/cjs/loader.js:863:32)\r\n    at Function.Module._load (internal/modules/cjs/loader.js:708:14)\r\n    at Module.require (internal/modules/cjs/loader.js:887:19)\r\n    at require (internal/modules/cjs/helpers.js:85:18)\r\n    at Object.<anonymous> (/home/juan/.npm/_npx/bc7494899bbce1ca/node_modules/postcss-load-config/src/index.js:6:16)\r\n    at Module._compile (internal/modules/cjs/loader.js:999:30)\r\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1027:10)\r\njuan@JuanAsusBuntu:/drv3/hm3/code/tailwind$ \r\n\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13878","RelatedDescription":"Closed issue \"SyntaxError: Unexpected token '?' \" (#13878)"},{"Id":"2367146421","IsPullRequest":true,"CreatedAt":"2024-06-21T21:36:59","Actor":"adamwathan","Number":"13876","RawContent":null,"Title":"Support combining arbitrary shadows without a color with shadow color utilities","State":"closed","Body":"This PR fixes an issue I discovered when live-streaming a few weeks ago that prevents code like this from working:\r\n\r\n```html\r\n<div class=\"shadow-[0px_2px_4px] shadow-red-500\">\r\n```\r\n\r\nCurrently in the v4 engine, arbitrary shadows require a color to be specified in the arbitrary value in order for shadow color utilities to properly replace the color. This was not the case in the v3 engine, and is definitely something we want to work in v4.\r\n\r\nThe fix is to append the color variable to the arbitrary shadow if no color can be parsed from the shadow value, instead of bailing if no color is found.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13876","RelatedDescription":"Closed or merged PR \"Support combining arbitrary shadows without a color with shadow color utilities\" (#13876)"},{"Id":"2367270967","IsPullRequest":false,"CreatedAt":"2024-06-21T21:27:57","Actor":"moshest","Number":"13877","RawContent":null,"Title":"Invalid CSS generated for class like `[&>&]:before:XXX`","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nFor example: v3.4.4\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/nQleJ1grpC\r\n\r\n<img width=\"758\" alt=\"image\" src=\"https://github.com/tailwindlabs/tailwindcss/assets/534911/877158b3-e651-4ac7-91b2-b5d2ff2ffd47\">\r\n\r\n**Describe your issue**\r\n\r\nWhen using a class like `[&>&]:before:content-['']` the generated CSS output contain invalid class with `::before::before` instead of only one `::before`:\r\n\r\n```diff\r\n+.\\[\\&\\>\\&\\]\\:before\\:content-\\[\\'\\'\\]>.\\[\\&\\>\\&\\]\\:before\\:content-\\[\\'\\'\\]::before::before {\r\n-.\\[\\&\\>\\&\\]\\:before\\:content-\\[\\'\\'\\]>.\\[\\&\\>\\&\\]\\:before\\:content-\\[\\'\\'\\]::before {\r\n  --tw-content: '';\r\n  content: var(--tw-content);\r\n}\r\n```\r\n\r\nThe same apply for classes like `[&+&]:before:XXX`.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13877","RelatedDescription":"Open issue \"Invalid CSS generated for class like `[&>&]:before:XXX`\" (#13877)"},{"Id":"2366036816","IsPullRequest":false,"CreatedAt":"2024-06-21T08:41:00","Actor":"sbimochan","Number":"13873","RawContent":null,"Title":"Compiled CSS being differently with different OS.","State":"open","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv3.3.3\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nwebpack v5\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv20\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n\r\n**Describe your issue**\r\n\r\nAfter compiling, the css generated are different from macOS and Linux(maybe or could be of different according to machines)\r\nFor e.g:\r\n\r\nIf we use classNames like `top-1` and `top-1\\/2`\r\nIn one machines (macOS) the output.css file contains:\r\n\r\n```\r\n.nv-top-1 {\r\n  top: 0.25rem;\r\n}\r\n\r\n.nv-top-1\\/2 {\r\n  top: 50%;\r\n}\r\n```\r\n\r\nand on some other place: it's opposite\r\n\r\n```\r\n.nv-top-1\\/2 {\r\n  top: 50%;\r\n}\r\n\r\n.nv-top-1 {\r\n  top: 0.25rem;\r\n}\r\n```\r\n\r\nMaybe it's something with oxide compiler and system setting how to treat \\ and number on ascending order.\r\n\r\n<img width=\"885\" alt=\"Screenshot 2024-06-21 at 2 32 16‚ÄØPM\" src=\"https://github.com/tailwindlabs/tailwindcss/assets/11685953/8f6feb7f-04ef-4845-a693-31c49482f356\">\r\n\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13873","RelatedDescription":"Open issue \"Compiled CSS being differently with different OS.\" (#13873)"},{"Id":"2364695956","IsPullRequest":false,"CreatedAt":"2024-06-20T15:30:56","Actor":"herzaso","Number":"13868","RawContent":null,"Title":"visibility issues with some SVGs","State":"closed","Body":"Some SVGs have a problem when working with visibility as demonstrated in https://play.tailwindcss.com/b6q2tGNoCM\r\nNotice - this is the same code and the only change is the replacements of the SVGs and adding `group-hover:visible`\r\n\r\nIf you hover over the first item (Customizing your tailwind.config.js file) you'll see the SVG, but on other items you probably won't","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13868","RelatedDescription":"Closed issue \"visibility issues with some SVGs\" (#13868)"},{"Id":"2363982099","IsPullRequest":true,"CreatedAt":"2024-06-20T10:02:11","Actor":"Simon-He95","Number":"13864","RawContent":null,"Title":"fix: typo","State":"closed","Body":"<!--\r\n\r\nüëã Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13864","RelatedDescription":"Closed or merged PR \"fix: typo\" (#13864)"},{"Id":"2363994060","IsPullRequest":false,"CreatedAt":"2024-06-20T10:01:32","Actor":"jacobeugene40","Number":"13865","RawContent":null,"Title":"Could Tailwind be the best for Next.Js? ","State":"closed","Body":"I tried Tailwind with Next.Js and when I refresh my page after making sone updates  but my updates won't refresh not until I start the app from my terminal.\r\n\r\nIs there a way out guys? ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13865","RelatedDescription":"Closed issue \"Could Tailwind be the best for Next.Js? \" (#13865)"},{"Id":"2355631934","IsPullRequest":false,"CreatedAt":"2024-06-17T18:46:09","Actor":"t3duk","Number":"13844","RawContent":null,"Title":"`backdrop-blur-` does not work on webkit browsers (ie safari)","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n`v3.4.4`\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nNext `v14.2.2`\r\nPostCSS `v8`\r\n\r\n**What version of Node.js are you using?**\r\n\r\nNode `v20.11.1`\r\nBun `v1.1.8`\r\n\r\n**What browser are you using?**\r\n\r\nSafari [macOS/iOS] (does **NOT** work as expected) `v17.5`\r\nBrave [Windows] (works as expected) `v1.67.116`\r\nArc [macOS] (works as expected) `v1.47.1`\r\nEdge [Windows] (works as expected) `v126.0.2592.56`\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS 14.5\r\nWindows 11 23H2\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/s0uKhW1RIh\r\n\r\n<img src=\"https://my.fags.men/ted/24-06/Untitlfd.png\">\r\n<img src=\"https://my.fags.men/ted/24-06/Untitled.png\">\r\n\r\n**Describe your issue**\r\n\r\nThe `backdrop-blur-` classes do not add the `-webkit-` style, so Safari and other webkit browsers aren't being styled with a backdrop blur.\r\n\r\nIn this mean while, ot solve this I manually added each of the classes to my global css file\r\n```css\r\n.backdrop-blur-3xl {\r\n  --tw-backdrop-blur: blur(64px);\r\n  -webkit-backdrop-filter: var(--tw-backdrop-blur);\r\n  backdrop-filter: var(--tw-backdrop-blur);\r\n}\r\n...etc\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13844","RelatedDescription":"Closed issue \"`backdrop-blur-` does not work on webkit browsers (ie safari)\" (#13844)"},{"Id":"2354157351","IsPullRequest":false,"CreatedAt":"2024-06-15T11:26:47","Actor":"willwill96","Number":"13837","RawContent":null,"Title":"addBase will not work with vanilla class names","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n`3.4.4`\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\nPostcss, but my repro is using the tailwindcss cli\r\n\r\n**What version of Node.js are you using?**\r\nv18\r\n\r\n**What browser are you using?**\r\nN/A\r\n\r\n**What operating system are you using?**\r\nWindows/macOS\r\n\r\n**Reproduction URL**\r\nhttps://github.com/willwill96/tailwindcss-addBase-repro\r\n\r\nSteps to reproduce:\r\n1. `npm install`\r\n2. `npm run build:broken` for the broken version\r\n3. `npm run build:working` for the working version\r\n\r\n**Describe your issue**\r\n\r\nWe are trying to use the `addBase` plugin to implement theming based on a parent class name, but it's not working, without a workaround.\r\n\r\nWhat *does not* work:\r\n```js\r\nconst plugin = require('tailwindcss/plugin')\r\n\r\n/** @type {import('tailwindcss').Config} */\r\nmodule.exports = {\r\n    content: [\"./src/**/*.{html,js}\"],\r\n    theme: {\r\n      extend: {},\r\n    },\r\n    plugins: [plugin(({addBase})=>{\r\n      addBase({\r\n        '.theme-1': {\r\n          color: 'red'\r\n        }\r\n      })\r\n    })],\r\n  }\r\n```\r\n After generating the css (using `npm run build:broken`), note nothing referencing `.theme-1` is present in the `output.css` file.\r\n\r\n\r\nWhat *does work* (as a workaround):\r\n```js\r\nconst plugin = require('tailwindcss/plugin')\r\n\r\n/** @type {import('tailwindcss').Config} */\r\nmodule.exports = {\r\n    content: [\"./src/**/*.{html,js}\"],\r\n    theme: {\r\n      extend: {},\r\n    },\r\n    plugins: [plugin(({addBase})=>{\r\n      addBase({\r\n        '[theme-1], .theme-1': {\r\n          color: 'red'\r\n        }\r\n      })\r\n    })],\r\n  }\r\n```\r\n\r\nAfter generating the css (using `npm run build:working`), note the following is present in the `output.css` file:\r\n```css\r\n[theme-1], .theme-1 {\r\n  color: red;\r\n}\r\n```\r\nThis has the end result we are looking for which is applying css based on a parent class name, however, it adds unnecessary css that ultimately does not get used.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13837","RelatedDescription":"Closed issue \"addBase will not work with vanilla class names\" (#13837)"},{"Id":"2342517447","IsPullRequest":true,"CreatedAt":"2024-06-14T19:52:51","Actor":"benface","Number":"13815","RawContent":null,"Title":"Prevent Preflight from affecting list semantics","State":"closed","Body":"The comment should be self-explanatory. I learned this trick thanks to Sara Soueidan's talk at CSS Day. üôÉ","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13815","RelatedDescription":"Closed or merged PR \"Prevent Preflight from affecting list semantics\" (#13815)"},{"Id":"2352810050","IsPullRequest":false,"CreatedAt":"2024-06-14T13:25:06","Actor":"lubomirblazekcz","Number":"13834","RawContent":null,"Title":"[v4] Default values do not include CSS variables","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv4.0.0-alpha.16\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nVite 5.3.0\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv18.20.0\r\n\r\n**What browser are you using?**\r\n\r\nN/A\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\nhttps://play.tailwindcss.com/A2WnHpJjBq\r\n\r\n**Describe your issue**\r\nDefault values such as `rounded`, `blur`, `shadow` etc. doesn't include correct variable eg. `var(--rounded, 0.25rem)` same way as `rounded-xl` and others.\r\n\r\nThese values are included correctly in default theme though.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13834","RelatedDescription":"Closed issue \"[v4] Default values do not include CSS variables\" (#13834)"},{"Id":"2353150319","IsPullRequest":true,"CreatedAt":"2024-06-14T13:25:05","Actor":"adamwathan","Number":"13836","RawContent":null,"Title":"Include variable in output for bare utilities like `rounded`","State":"closed","Body":"This PR ensures that utilities like `rounded` still include their associated CSS variable in the generated CSS.\r\n\r\nPreviously, utilities like `rounded-sm` would generate this output:\r\n\r\n```css\r\n.rounded-sm {\r\n  border-radius: var(--radius-sm, 0.125rem /* 2px */);\r\n}\r\n```\r\n\r\n...but `rounded` generated this:\r\n\r\n```css\r\n.rounded {\r\n  border-radius: 0.25rem /* 4px */;\r\n}\r\n```\r\n\r\nThis PR fixes things so `rounded` generates this:\r\n\r\n```css\r\n.rounded {\r\n  border-radius: var(--radius, 0.25rem /* 4px */);\r\n}\r\n```\r\n\r\nOpen to feedback from @RobinMalfait and @thecrypticace on the implementation ‚Äî I reworked `theme.resolveValue` to be able to handle this situation by accepting `null` in the slot that you'd normally pass the candidate value like `sm` or `md` which works but I'm not sure feels 100% great. It doesn't feel wrong though either, feels reasonable to need to resolve a theme value for a namespace but provide no value, since that literally is the case with things like `--radius`.\r\n\r\nIt's kind of weird that we use `desc.themeKeys` (as an array) at all in the default case because there are no utilities that would ever check multiple namespaces for a default value, but maybe there could be in the future?\r\n\r\nResolves #13834.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13836","RelatedDescription":"Closed or merged PR \"Include variable in output for bare utilities like `rounded`\" (#13836)"},{"Id":"2351271578","IsPullRequest":false,"CreatedAt":"2024-06-13T14:18:51","Actor":"bot2x","Number":"13832","RawContent":null,"Title":"Uncontrolled resource consumption in braces - https://github.com/advisories/GHSA-grv7-fg5c-xmjg","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n**What version of Tailwind CSS are you using?**\r\n\r\nFor example: v3.4.3\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nFor example: next@14.1.4, postcss@8.4.38\r\n\r\n**Describe your issue**\r\n\r\nMy npm audit reported: \r\n\r\nbraces  <3.0.3\r\nSeverity: high\r\nUncontrolled resource consumption in braces - https://github.com/advisories/GHSA-grv7-fg5c-xmjg\r\n\r\nResult of \"npm ls braces\" \r\n‚îî‚îÄ‚î¨ tailwindcss@3.4.3\r\n  ‚îú‚îÄ‚î¨ chokidar@3.6.0\r\n  ‚îÇ ‚îî‚îÄ‚îÄ braces@3.0.2\r\n  ‚îî‚îÄ‚î¨ micromatch@4.0.5\r\n    ‚îî‚îÄ‚îÄ braces@3.0.2 deduped\r\n\r\nChecked the version 3.4.4 which still uses braces 3.0.2.\r\n\r\nAs per [this](https://nvd.nist.gov/vuln/detail/CVE-2024-4068), the issue is noticed in versions prior to 3.0.3. Also, [this](https://github.com/micromatch/braces/pull/40) has fixed the issue in braces 3.0.3","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13832","RelatedDescription":"Closed issue \"Uncontrolled resource consumption in braces - https://github.com/advisories/GHSA-grv7-fg5c-xmjg\" (#13832)"},{"Id":"2347291223","IsPullRequest":false,"CreatedAt":"2024-06-13T13:50:56","Actor":"adamwathan","Number":"13821","RawContent":null,"Title":"backdrop-blur-none still applies a blur","State":"closed","Body":"### Discussed in https://github.com/tailwindlabs/tailwindcss/discussions/13820\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **skoshx** June 11, 2024</sup>\r\nUsing `backdrop-blur-none` still applies a blur (although it is 0px)\r\n\r\n```css\r\n.backdrop-blur-none {\r\n    --tw-backdrop-blur: blur(0);\r\n    -webkit-backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);\r\n    backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);\r\n}\r\n```\r\n\r\nThe expected behavior is to remove any backdrop blur?\r\n\r\nBasically, I have a component that merges tailwind classes, and by default has `backdrop-blur-sm`, after merging the `backdrop-blur-none` class overrides the previous, but it doesn't set `--tw-backdrop-blur: none`, instead it sets it to `blur(0)` which actually still creates a blur effect.</div>","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13821","RelatedDescription":"Closed issue \"backdrop-blur-none still applies a blur\" (#13821)"},{"Id":"2350832851","IsPullRequest":true,"CreatedAt":"2024-06-13T13:49:59","Actor":"RobinMalfait","Number":"13830","RawContent":null,"Title":"Use no value instead of `blur(0px)` for `backdrop-blur-none` and `blur-none` utilities","State":"closed","Body":"This PR maps the values for `backdrop-blur-none` and `blur-none` to no value at all instead of `blur(0px)`. This makes sure that filter is completely gone.\n\n```diff\n    .backdrop-blur-none {\n-     --tw-backdrop-blur: blur(0);\n+     --tw-backdrop-blur: ;\n      backdrop-filter: var(--tw-backdrop-blur)\n        var(--tw-backdrop-brightness) var(--tw-backdrop-contrast)\n        var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate)\n        var(--tw-backdrop-invert) var(--tw-backdrop-opacity)\n        var(--tw-backdrop-saturate) var(--tw-backdrop-sepia);\n    }\n```\n\n```diff\n    .blur-none {\n-     --tw-blur: blur(0);\n+     --tw-blur: ;\n      filter: var(--tw-blur) var(--tw-brightness)\n        var(--tw-contrast) var(--tw-grayscale)\n        var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate)\n        var(--tw-sepia) var(--tw-drop-shadow);\n    }\n```\n\nFixes: #13821\n\n<!--\n\nüëã Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13830","RelatedDescription":"Closed or merged PR \"Use no value instead of `blur(0px)` for `backdrop-blur-none` and `blur-none` utilities\" (#13830)"},{"Id":"2350851782","IsPullRequest":true,"CreatedAt":"2024-06-13T13:27:45","Actor":"RobinMalfait","Number":"13831","RawContent":null,"Title":"Add `backdrop-blur-none` and `blur-none` utilities","State":"closed","Body":"This PR adds `backdrop-blur-none` and `blur-none` utilities to v4. These were already available in v3.\r\n\r\nThese new utilities also apply the fix introduced in #13830 that were necessary for v3.\r\n\r\n```css\r\n.blur-none {\r\n  --tw-blur: ;\r\n  filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );\r\n}\r\n\r\n.backdrop-blur-none {\r\n  --tw-backdrop-blur: ;\r\n  -webkit-backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );\r\n  backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );\r\n}\r\n```\r\n<!--\r\n\r\nüëã Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13831","RelatedDescription":"Closed or merged PR \"Add `backdrop-blur-none` and `blur-none` utilities\" (#13831)"},{"Id":"2345103977","IsPullRequest":false,"CreatedAt":"2024-06-13T13:21:56","Actor":"mitchuman","Number":"13818","RawContent":null,"Title":"Arbitrary value for `anchor-name` outputs as custom variable instead of identifier value","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n`v3.4.4`\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\n`\"next\": \"^14.2.3\"`\r\n\r\n**What version of Node.js are you using?**\r\n\r\n`v18.15.0`\r\n\r\n**What browser are you using?**\r\n\r\nN/A\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/fagqAhZl3j\r\n\r\n```html\r\n<div class=\"[anchor-name:--foo]\"></div>\r\n\r\n<div class=\"hover:[anchor-name:--foo]\"></div>\r\n```\r\n\r\n**Describe your issue**\r\n\r\nArbitrary value for `anchor-name` outputs as custom variable (`var(--foo)`) instead of the desired identifier value (`--foo`).\r\n\r\nPer specs by Chrome: https://developer.chrome.com/blog/anchor-positioning-api\r\n\r\n[Current issue] the above outputs as:\r\n```css\r\n.\\[anchor-name\\:--foo\\] {\r\n  anchor-name: var(--foo);\r\n}\r\n\r\n.hover\\:\\[anchor-name\\:--foo\\]:hover {\r\n  anchor-name: var(--foo);\r\n}\r\n```\r\n\r\n[Desired] `--foo` instead of `var(--foo)`\r\n```css\r\n.\\[anchor-name\\:--foo\\] {\r\n  anchor-name: --foo;\r\n}\r\n\r\n.hover\\:\\[anchor-name\\:--foo\\]:hover {\r\n  anchor-name: --foo;\r\n}\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13818","RelatedDescription":"Closed issue \"Arbitrary value for `anchor-name` outputs as custom variable instead of identifier value\" (#13818)"},{"Id":"2348869984","IsPullRequest":true,"CreatedAt":"2024-06-13T13:19:08","Actor":"thecrypticace","Number":"13826","RawContent":null,"Title":"Disable automatic `var()` injection for anchor properties","State":"closed","Body":"This PR disables automatic var() injsection for the following properties related to CSS Anchor Positioning as they all take dashed identifiers as values:\r\n\r\n- `anchor-name`\r\n- `anchor-scope`\r\n- `position-anchor`\r\n- `position-try-options`\r\n- `position-try`\r\n\r\nBefore this PR when using these properties with custom properties you'd get output like this ‚Äî notice how we wrap the identifier in `var()`:\r\n\r\n```css\r\n.\\[anchor-name\\:--tooltip\\] {\r\n  anchor-name: var(--tooltip);\r\n}\r\n\r\n.\\[position-anchor\\:--tooltip\\] {\r\n  position-anchor: var(--tooltip);\r\n}\r\n```\r\n\r\nNormally, this behavior is reasonable for most properties like colors, sizes, spacing, etc‚Ä¶ but these properties take a dashed ident directly as a custom name and are not referencing a custom property. So, after this PR you'll get the following output:\r\n\r\n```css\r\n.\\[anchor-name\\:--tooltip\\] {\r\n  anchor-name: --tooltip;\r\n}\r\n\r\n.\\[position-anchor\\:--tooltip\\] {\r\n  position-anchor: --tooltip;\r\n}\r\n```\r\n\r\nFixes #13818","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13826","RelatedDescription":"Closed or merged PR \"Disable automatic `var()` injection for anchor properties\" (#13826)"},{"Id":"2349159725","IsPullRequest":true,"CreatedAt":"2024-06-12T16:22:37","Actor":"RobinMalfait","Number":"13827","RawContent":null,"Title":"Add `rounded-4xl` utility","State":"closed","Body":"This PR adds a new `rounded-4xl` utility.\n\n<!--\n\nüëã Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13827","RelatedDescription":"Closed or merged PR \"Add `rounded-4xl` utility\" (#13827)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-06-29T03:30:21.152682Z","RunDurationInMilliseconds":402}