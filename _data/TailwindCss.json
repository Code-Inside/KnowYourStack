{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2600703648","IsPullRequest":true,"CreatedAt":"2024-10-20T17:19:30","Actor":"gkmk","Number":"14733","RawContent":null,"Title":"fix: Update preflight.css","State":"open","Body":"Add support for both light and dark color schemes.\r\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme#declaring_color_scheme_preferences\r\n\r\nThis fixes a bug where dark mode is not respected on some built-in html elements.\r\n\r\nIssue found when using the ```<input type=\"date\" />```, the icon would not change color based on selected theme.\r\n\r\nBefore fix:\r\n![image](https://github.com/user-attachments/assets/474838ff-1626-4b03-94a8-8837150ec5f2)\r\n\r\n\r\nAfter fix:\r\n![image](https://github.com/user-attachments/assets/8a9c2dcf-7c31-42ea-9b88-41f949fc3d64)\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14733","RelatedDescription":"Open PR \"fix: Update preflight.css\" (#14733)"},{"Id":"2600559285","IsPullRequest":false,"CreatedAt":"2024-10-20T15:14:17","Actor":"ajayvignesh01","Number":"14732","RawContent":null,"Title":"v4 alpha 0.28 breaks plugin (tailwindcss-animate) & weird behavior with new p3 color opacity","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv4.0.0-alpha.28\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\npostcss 8.4.47, Next.js 15.0.0-rc.1\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv20.16.0\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nFor example: macOS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://github.com/ajayvignesh01/tailwind-v4.0.0-alpha.28-plugins\r\n\r\n**Describe your issue**\r\n\r\nThe `tailwindcss-animate` plugin was working since plugin support landed a few weeks ago. But when I upgrade to alpha 0.28, it stops working. No errors are thrown, but animations that rendered with alpha 0.21 - 0.27 are now not rendering.\r\n\r\nAnother bug is from the introduction of p3 colors. If you hover over the primary button which has `bg-primary hover:bg-primary/90`, the hover color shows a hue of green for some reason.\r\n\r\nPreview with alpha 0.27 - https://tailwind-v4-0-0-alpha-28-plugins-gjaplla02.vercel.app/\r\nPreview with alpha 0.28 - https://tailwind-v4-0-0-alpha-28-plugins-4pzuz8jxf.vercel.app/","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14732","RelatedDescription":"Open issue \"v4 alpha 0.28 breaks plugin (tailwindcss-animate) & weird behavior with new p3 color opacity\" (#14732)"},{"Id":"2599676978","IsPullRequest":false,"CreatedAt":"2024-10-20T05:43:51","Actor":"pinzonjulian","Number":"14730","RawContent":null,"Title":"`--watch` command does not clean output up when classes are removed from watched files","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\n- 3.4.14\r\n- 4.0.0-alpha28\r\n\r\nBoth using macOS-arm64\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nStandalone CLI\r\n\r\n**What version of Node.js are you using?**\r\n\r\nNot relevant\r\n\r\n**What browser are you using?**\r\n\r\nNot relevant\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS Sonoma 14.6.1 \r\n\r\n**Reproduction**\r\n\r\nhttps://github.com/pinzonjulian/tailwind_css_cli_watch_bug\r\n\r\nThere are folders for Tailwind 3 and 4 here. Follow the steps to download the executables from:\r\n- https://tailwindcss.com/blog/standalone-cli\r\n- https://github.com/tailwindlabs/tailwindcss/releases\r\n\r\n**Describe your issue**\r\n\r\nThe watch command successfully adds classes when they are identified in the watched files (in the case of the reproduction repo, the `application.html` file). However when the classes are removed from the file, the watcher does not remove them from the output file.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14730","RelatedDescription":"Closed issue \"`--watch` command does not clean output up when classes are removed from watched files\" (#14730)"},{"Id":"2598292802","IsPullRequest":true,"CreatedAt":"2024-10-19T13:19:10","Actor":"RobinMalfait","Number":"14724","RawContent":null,"Title":"Ensure we migrate `theme(spacing.1)` to `var(--spacing-1)` correctly","State":"closed","Body":"This PR fixes an issue where `theme(…)` calls that contain a `.1` weren't correctly converted to `var(--spacing-1)`. The reason for this is that `.1` has some special meaning in cases like `fontSize.xs.1.lineHeight` where it should be converted to `--font-size-xs--line-height`, not `--font-size-xs-1-line-height`.\n\nTo solve this, we make sure to only apply the `--` check if the `1` occurs somewhere in the middle instead of at the very end.\n\nWith this change, the following migrations will happen correctly:\n\n```diff\n- [--value:theme(spacing.1)]\n+ [--value:var(--spacing-1)]\n```\n\n```diff\n- [--value:theme(fontSize.xs.1.lineHeight)]\n+ [--value:var(--font-size-xs--line-height)]\n```\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14724","RelatedDescription":"Closed or merged PR \"Ensure we migrate `theme(spacing.1)` to `var(--spacing-1)` correctly\" (#14724)"},{"Id":"2598604255","IsPullRequest":true,"CreatedAt":"2024-10-19T13:18:50","Actor":"depfu[bot]","Number":"14728","RawContent":null,"Title":"Update @types/react-dom 18.3.0 → 18.3.1 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​types/react-dom (18.3.0 → 18.3.1) · [Repo](https://github.com/DefinitelyTyped/DefinitelyTyped)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14728","RelatedDescription":"Closed or merged PR \"Update @types/react-dom 18.3.0 → 18.3.1 (patch)\" (#14728)"},{"Id":"2598599623","IsPullRequest":true,"CreatedAt":"2024-10-19T13:18:39","Actor":"depfu[bot]","Number":"14727","RawContent":null,"Title":"Update @types/bun 1.1.10 → 1.1.11 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​types/bun (1.1.10 → 1.1.11) · [Repo](https://github.com/DefinitelyTyped/DefinitelyTyped)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14727","RelatedDescription":"Closed or merged PR \"Update @types/bun 1.1.10 → 1.1.11 (patch)\" (#14727)"},{"Id":"2598357094","IsPullRequest":true,"CreatedAt":"2024-10-19T13:05:38","Actor":"RobinMalfait","Number":"14725","RawContent":null,"Title":"Migrate `from`, `via`, and `to` arbitrary values to bare values","State":"closed","Body":"This PR migrates arbitrary values for the `from-*`, `via-*` and `to-*` utilities\nto bare values.\n\nInput:\n```html\n<div class=\"from-[28%]\"></div>\n<div class=\"via-[28%]\"></div>\n<div class=\"to-[28%]\"></div>\n```\n\nOutput:\n```html\n<div class=\"from-28%\"></div>\n<div class=\"via-28%\"></div>\n<div class=\"to-28%\"></div>\n```\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14725","RelatedDescription":"Closed or merged PR \"Migrate `from`, `via`, and `to` arbitrary values to bare values\" (#14725)"},{"Id":"2598473175","IsPullRequest":false,"CreatedAt":"2024-10-18T22:08:39","Actor":"pinzonjulian","Number":"14726","RawContent":null,"Title":"V4 Alpha 27/28 - `--watch` command does not work with the Standalone CLI nor the regular CLI","State":"open","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv4.0.0.alpha28 (also tried on alpha27)\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nTailwind CLI executable only.\r\n\r\n**What version of Node.js are you using?**\r\n\r\nNone. I'm using the Standalone CLI\r\n\r\n**What browser are you using?**\r\n\r\nNot relevant\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS Sonoma 14.6.1\r\n\r\n**Reproduction URL**\r\n\r\nUploading the whole executable to a Git repo doesn't make much sense but here are the instructions to reproduce the issue locally:\r\n\r\n1. Create a new directory for the test\r\n2. `cd` into that directory\r\n3. [Download the version of the executable](https://github.com/tailwindlabs/tailwindcss/releases/tag/v4.0.0-alpha.28) appropriate for your OS. Assuming your version is `macos-arm64`\r\n4. run `chmod +x tailwindcss-macos-arm64`\r\n5. run `mv tailwindcss-macos-arm64 tailwindcss4alpha28`. I've named the executable with the specific version to make it more explicit\r\n6. Create an empty input.css file\r\n7. Create an empty output.css file\r\n8. Add `@import \"tailwindcss\";` to the `input.css` file\r\n9. Run `./tailwindcss4alpha28 --input input.css --output output.css --watch`\r\n10. 🚨 Check the `output.css` file. Tailwind classes should be present but are not.\r\n11. Run `./tailwindcss4alpha28 --input input.css --output output.css`. Note that this time it's not using the `--watch` flag\r\n12. ✅ Check the `output.css` file. Tailwind classes are present.\r\n \r\n**Describe your issue**\r\n\r\nWe've been trying to make the Tailwind 4 alphas work in Rails but noticed that the watch command isn't working when using the Standalone CLI.\r\n\r\nhttps://github.com/rails/tailwindcss-rails/issues/419\r\n\r\nAfter some debugging we realised that the problem is not coming from our Rails implementation but from the executable provided by Tailwind. ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14726","RelatedDescription":"Open issue \"V4 Alpha 27/28 - `--watch` command does not work with the Standalone CLI nor the regular CLI\" (#14726)"},{"Id":"2597848120","IsPullRequest":true,"CreatedAt":"2024-10-18T20:44:26","Actor":"RobinMalfait","Number":"14720","RawContent":null,"Title":"Minify arbitrary values when printing candidates","State":"closed","Body":"This PR will optimize and simplify the candidates when printing the candidate again after running codemods.\r\n\r\nWhen we parse a candidate, we will add spaces around operators, for example `p-[calc(1px+1px)]]` will internally be handled as `calc(1px + 1px)`. Before this change, we would re-print this as: `p-[calc(1px_+_1px)]`.\r\n\r\nThis PR changes that by simplifying the candidate again so that the output is `p-[calc(1px+1px)]`. In addition, if _you_ wrote `p-[calc(1px_+_1px)]` then we will also simplify it to the concise form `p-[calc(1px_+_1px)]`.\r\n\r\n\r\nSome examples:\r\n\r\nInput:\r\n```html\r\n<div class=\"[p]:flex\"></div>\r\n<div class=\"[&:is(p)]:flex\"></div>\r\n<div class=\"has-[p]:flex\"></div>\r\n<div class=\"px-[theme(spacing.4)-1px]\"></div>\r\n```\r\n\r\nOutput before:\r\n```html\r\n<div class=\"[&:is(p)]:flex\"></div>\r\n<div class=\"[&:is(p)]:flex\"></div>\r\n<div class=\"has-[&:is(p)]:flex\"></div>\r\n<div class=\"px-[var(--spacing-4)_-_1px]\"></div>\r\n```\r\n\r\nOutput after:\r\n```html\r\n<div class=\"[p]:flex\"></div>\r\n<div class=\"[p]:flex\"></div>\r\n<div class=\"has-[p]:flex\"></div>\r\n<div class=\"px-[var(--spacing-4)-1px]\"></div>\r\n```\r\n\r\n---\r\n\r\nThis is alternative implementation to #14717 and #14718\r\nCloses: #14717 \r\nCloses: #14718","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14720","RelatedDescription":"Closed or merged PR \"Minify arbitrary values when printing candidates\" (#14720)"},{"Id":"2598285840","IsPullRequest":true,"CreatedAt":"2024-10-18T19:58:05","Actor":"RobinMalfait","Number":"14723","RawContent":null,"Title":"Ensure we migrate `theme(spacing.1)` to `var(--spacing-1)` correctly","State":"closed","Body":"This PR fixes an issue where `theme(…)` calls that contain a `.1` weren't correctly converted to `var(--spacing-1)`. The reason for this is that `.1` has some special meaning in cases like `fontSize.xs.1.lineHeight` where it should be converted to `--font-size-xs--line-height`, not `--font-size-xs-1-line-height`.\n\nTo solve this, we make sure to only apply the `--` check if the `1` occurs somewhere in the middle instead of at the very end.\n\nWith this change, the following migrations will happen correctly:\n\n```diff\n- [--value:theme(spacing.1)]\n+ [--value:var(--spacing-1)]\n```\n\n```diff\n- [--value:theme(fontSize.xs.1.lineHeight)]\n+ [--value:var(--font-size-xs--line-height)]\n```\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14723","RelatedDescription":"Closed or merged PR \"Ensure we migrate `theme(spacing.1)` to `var(--spacing-1)` correctly\" (#14723)"},{"Id":"2597582905","IsPullRequest":true,"CreatedAt":"2024-10-18T18:05:24","Actor":"RobinMalfait","Number":"14717","RawContent":null,"Title":"Make `decodeArbitraryValue` overridable","State":"closed","Body":"This PR allows us to override the `decodeArbitraryValue` function used when parsing candidates and variants.\n\nI'm not 100% happy with this (open for suggestions!) but it was either this, or introducing some class where we mock a method or as a last resort, copy the whole `parseCandidate` implementation and make the necessary changes there when running codemods.\n\nWhile the last one seems to be the cleanest, I'm afraid that the implementation will diverge over time.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14717","RelatedDescription":"Closed or merged PR \"Make `decodeArbitraryValue` overridable\" (#14717)"},{"Id":"2597583124","IsPullRequest":true,"CreatedAt":"2024-10-18T18:05:06","Actor":"RobinMalfait","Number":"14718","RawContent":null,"Title":"Override `designSystem` methods by introducing a `mockDesignSystem`","State":"closed","Body":"We can definitely change the name, also open for suggestions here.\n\nThe idea is as follows:\n\n1. We reuse the existing `designSystem` (and therefore keep all the existing functionality)\n2. We override the `decodeArbitraryValues` function such that we don't add spaces around operators anymore. This is a divergence from the actual implementation. This allows us to keep the whitespace from the candidate without trying to be smart about it.\n3. When parsing arbitrary variants, we wrap them in `&:is(…)`. We do get rid of this wrapper in this `mockDesignSystem` function as well. This has a downside that if people literally wrote `[&:is(p)]:flex` that it will be converted to `[p]:flex` but I think that's reasonable.\n\nAnother thing that this unlocks is that by overriding the `parseCandidate` and `parseVariant` functions, that we can remove the layer of caching. This means that we don't have to cache anymore, and even better, we don't have to use `structuredClone(candidate)` anymore. We used `structuredClone` before to make sure that we didn't mutate existing candidates in the cached design system. But now everything is fresh.\n\nSome examples:\n\nInput:\n```html\n<div class=\"[p]:flex\"></div>\n<div class=\"has-[p]:flex\"></div>\n<div class=\"px-[theme(spacing.4)-1px]\"></div>\n```\n\nOutput before:\n```html\n<div class=\"[&:is(p)]:flex\"></div>\n<div class=\"has-[&:is(p)]:flex\"></div>\n<div class=\"px-[var(--spacing-4)_-_1px]\"></div>\n```\n\nOutput after:\n```html\n<div class=\"[p]:flex\"></div>\n<div class=\"has-[p]:flex\"></div>\n<div class=\"px-[var(--spacing-4)-1px]\"></div>\n```\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14718","RelatedDescription":"Closed or merged PR \"Override `designSystem` methods by introducing a `mockDesignSystem`\" (#14718)"},{"Id":"2597926994","IsPullRequest":true,"CreatedAt":"2024-10-18T17:58:02","Actor":"RobinMalfait","Number":"14721","RawContent":null,"Title":"Migrate `flex-grow` -> `grow` and `flex-shrink` -> `shrink`","State":"closed","Body":"This PR adds missing legacy migrations for migrating `flex-grow` to `grow` and `flex-shrink` to `shrink`.\n\nWe already migrated `flex-grow-0` to `grow-0` and `flex-shrink-0` to `shrink-0`, but forgot about these cases.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14721","RelatedDescription":"Closed or merged PR \"Migrate `flex-grow` -> `grow` and `flex-shrink` -> `shrink`\" (#14721)"},{"Id":"2594673130","IsPullRequest":true,"CreatedAt":"2024-10-18T17:51:44","Actor":"RobinMalfait","Number":"14703","RawContent":null,"Title":"Ensure existing spaces in attribute selectors are valid","State":"closed","Body":"This PR fixes an issue where spaces in a selector generated invalid CSS.\r\n\r\nLightning CSS will throw those incorrect lines of CSS out, but if you are in an environment where Lightning CSS doesn't run then invalid CSS is generated.\r\n\r\nGiven this input:\r\n\r\n```html\r\ndata-[foo_=_\"true\"]:flex\r\n```\r\n\r\nThis will be generated:\r\n\r\n```css\r\n.data-\\[foo_\\=_\\\"true\\\"\\]\\:flex[data-foo=\"\"true] {\r\n  display: flex;\r\n}\r\n```\r\n\r\nWith this PR in place, the generated CSS will now be:\r\n\r\n```css\r\n.data-\\[foo_\\=_\\\"true\\\"\\]\\:flex[data-foo=\"true\"] {\r\n  display: flex;\r\n}\r\n```\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14703","RelatedDescription":"Closed or merged PR \"Ensure existing spaces in attribute selectors are valid\" (#14703)"},{"Id":"2597209191","IsPullRequest":true,"CreatedAt":"2024-10-18T13:48:57","Actor":"philipp-spiess","Number":"14714","RawContent":null,"Title":"`content` rules from the JS config that are also covered by the automatic source detection should not be migrated to CSS","State":"closed","Body":"This PR changes the migration of `content` rules in the JS config to CSS codemods.\n\nWhen a `content` rule is processed which matches files that are _also matched by the automatic content discovery in v4_, we do not need to emit CSS for that rule. \n\nTake, for example this v3 configuration file:\n\n```ts\nimport { type Config } from 'tailwindcss'\n\nmodule.exports = {\n  content: [\n    './src/**/*.{html,js}', \n    './node_modules/my-external-lib/**/*.{html}'\n  ],\n} satisfies Config\n```\n\nProvided the base directories match up, the first rule will also be covered by the automatic content discovery in v4 and thus we only need to convert the second rule to CSS:\n\n```css\n@import \"tailwindcss\";\n@source '../node_modules/my-external-lib/**/*.{html}';\n```","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14714","RelatedDescription":"Closed or merged PR \"`content` rules from the JS config that are also covered by the automatic source detection should not be migrated to CSS\" (#14714)"},{"Id":"2594581082","IsPullRequest":true,"CreatedAt":"2024-10-18T13:16:27","Actor":"philipp-spiess","Number":"14700","RawContent":null,"Title":"Migrate static plugins with options to CSS","State":"closed","Body":"This PR extends our JS configuration to CSS migration by also allowing `plugins` with options.  \n\nAn example of such config would be:\n\n```js\nimport { type Config } from 'tailwindcss'\nimport myPlugin from \"./myPlugin\";\n\nexport default {\n  plugins: [\n    myPlugin({\n      class: \"tw\",\n    }),\n  ],\n} satisfies Config;\n```\n\nIf the option object contains only values allowed in our CSS API, we can convert this to CSS entirely:\n\n```css\n@plugin './myPlugin' {\n  class: 'tw';\n}\n```","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14700","RelatedDescription":"Closed or merged PR \"Migrate static plugins with options to CSS\" (#14700)"},{"Id":"2594478585","IsPullRequest":true,"CreatedAt":"2024-10-18T13:10:21","Actor":"philipp-spiess","Number":"14699","RawContent":null,"Title":"Include simple config objects when extracting static plugins","State":"closed","Body":"This PR updates the `extractStaticPlugins` function to also emit options as long as these are objects containing of only `string` and `number` values.\n\nWhile doing this I also cleaned up the `require('custom-plugin')` detector to use a Tree-Sitter query instead of operating on the AST.\n\nHere are the two cases we considered:\n\n```js\nimport plugin1 from 'plugin1';\n\nexport default {\n  plugins: [\n    plugin1({\n      foo: 'bar',\n      num: 19,\n    }),\n    require('./plugin2')({\n      foo: 'bar',\n      num: 19,\n    }),\n  ]\n}\n```\n\nThe test plan also contains a number of scenarios that we do not want to migrate to CSS (because we do not have a CSS API we can use for e.g. nested objects). We do support all types that we also support in the CSS API.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14699","RelatedDescription":"Closed or merged PR \"Include simple config objects when extracting static plugins\" (#14699)"},{"Id":"2597384395","IsPullRequest":true,"CreatedAt":"2024-10-18T12:22:32","Actor":"philipp-spiess","Number":"14716","RawContent":null,"Title":"Vite: Fix issues when loading files via static asset queries","State":"open","Body":"Fixes: #14558\r\n\r\nThis PR fixes an issue where our Vite plugin would crash when trying to load stylesheets via certain static asset query parameters:\r\n\r\n```ts\r\nimport raw from './style.css?raw'\r\nimport url from './style.css?url'\r\n```\r\n\r\nThe proper behavior for our extension is to _not touch these file at all_. The `?raw` identifier should never transform anything and the `?url` one will emit a module which points to the asset URL. However, if that URL is loaded as a stylesheet, another transform hook is called and the file is properly transformed. I verified this in the Vite setup and have added an integration test ensuring these two features work as expected.\r\n\r\nI've also greatly reduced the complexity of the Vite playground to make it easier to set up examples like this in the future.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14716","RelatedDescription":"Open PR \"Vite: Fix issues when loading files via static asset queries\" (#14716)"},{"Id":"2597290218","IsPullRequest":false,"CreatedAt":"2024-10-18T11:38:30","Actor":"aaronadamsCA","Number":"14715","RawContent":null,"Title":"`work-break` typo (and also a sort order suggestion)","State":"open","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv4.0.0-alpha.28\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/AU8RQ3P1UP\r\n\r\n**Describe your issue**\r\n\r\nThe only true bug in this bug report is this `word-break` typo that's been lurking since the start of v4:\r\n\r\nhttps://github.com/tailwindlabs/tailwindcss/blob/b701ed6916573c84567984780ab30c286ac0397f/packages/tailwindcss/src/property-order.ts#L170-L176\r\n\r\nBut instead of just fixing that, what I actually want to bring up is the sort order itself, which feels a bit off:\r\n\r\n```html\r\n<div class=\"text-balance bg-linear-to-b from-red-500 to-blue-500 p-8 text-base leading-7 text-white\">Balance</div>\r\n<div class=\"text-pretty bg-linear-to-b from-red-500 to-blue-500 p-8 text-base leading-7 text-white\">Pretty</div>\r\n```\r\n\r\nI feel like these six properties should move further down the sort order to be with the rest of the text properties.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14715","RelatedDescription":"Open issue \"`work-break` typo (and also a sort order suggestion)\" (#14715)"},{"Id":"2595740352","IsPullRequest":true,"CreatedAt":"2024-10-17T21:03:28","Actor":"adamwathan","Number":"14709","RawContent":null,"Title":"Prepare v4.0.0-alpha.28 release","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14709","RelatedDescription":"Closed or merged PR \"Prepare v4.0.0-alpha.28 release\" (#14709)"},{"Id":"2595472566","IsPullRequest":true,"CreatedAt":"2024-10-17T20:16:14","Actor":"adamwathan","Number":"14708","RawContent":null,"Title":"Interpolate gradients using OKLCH by default","State":"closed","Body":"This PR updates all of our gradient utilities to interpolate using OKLCH by default instead of sRGB. This results in a smoother transition between colors that preserves saturation throughout the gradient, rather than hitting the dreaded dull gray zone in between your color stops.\r\n\r\nHere are a few examples comparing sRGB (top) to OKLCH (bottom):\r\n\r\n<img width=\"736\" alt=\"image\" src=\"https://github.com/user-attachments/assets/57a158b6-a3a2-4eda-813e-1b596c7d4b3a\">\r\n\r\nWe only apply a default interpolation mode when _not_ using arbitrary values with the gradient utility.\r\n\r\nSimplified but clear:\r\n\r\n```css\r\n.bg-linear-to-r {\r\n  background-image: linear-gradient(to right in oklch, var(--gradient-color-stops));\r\n}\r\n\r\n.bg-linear-[to_right] {\r\n  background-image: linear-gradient(to right, var(--gradient-color-stops));\r\n}\r\n\r\n.bg-linear-[to_right_in_hsl] {\r\n  background-image: linear-gradient(to right in hsl, var(--gradient-color-stops));\r\n}\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14708","RelatedDescription":"Closed or merged PR \"Interpolate gradients using OKLCH by default\" (#14708)"},{"Id":"2595383888","IsPullRequest":true,"CreatedAt":"2024-10-17T18:29:32","Actor":"adamwathan","Number":"14707","RawContent":null,"Title":"Support linear gradient angles as bare values","State":"closed","Body":"This PR adds support for linear gradient angles as bare values, like this:\r\n\r\n```\r\nbg-linear-45 => linear-gradient(45deg, …)\r\n```\r\n\r\nWe already support this for [conic gradients](https://github.com/tailwindlabs/tailwindcss/pull/14467), so this makes these utilities more consistent.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14707","RelatedDescription":"Closed or merged PR \"Support linear gradient angles as bare values\" (#14707)"},{"Id":"2595041919","IsPullRequest":true,"CreatedAt":"2024-10-17T17:48:58","Actor":"adamwathan","Number":"14705","RawContent":null,"Title":"Remove invalid gradient fallbacks","State":"closed","Body":"Prior to this PR we were providing fallback values for certain CSS variables in our gradient utilities that just weren't necessary and didn't do anything.\r\n\r\nFor example `bg-linear-to-r` was generating this:\r\n\r\n```css\r\n.bg-linear-to-r {\r\n  --tw-gradient-position: to right;\r\n  background-image: linear-gradient(\r\n    var(--tw-gradient-stops, to right)\r\n  );\r\n}\r\n```\r\n\r\n…but `background-image: linear-gradient(to right)` is not valid CSS and is thrown out by the browser.\r\n\r\nThis PR removes these fallback values entirely since there is nothing sensible to fall back to anyways — you need to combine these utilities with the `from-*`/`to-*` utilities or provide the complete gradient as an arbitrary value for things to make sense.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14705","RelatedDescription":"Closed or merged PR \"Remove invalid gradient fallbacks\" (#14705)"},{"Id":"2593644794","IsPullRequest":false,"CreatedAt":"2024-10-17T16:38:16","Actor":"zanuka","Number":"14696","RawContent":null,"Title":"update fast-glob 3.3.2 which will fix micromatch 4.0.8 dependency (ReDoS) issue","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\n3.4.14\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nVue 3.4.21, Vite 5.1.5\r\n\r\n**What version of Node.js are you using?**\r\n\r\nNode 20.15.1\r\n\r\n**What browser are you using?**\r\n\r\nN/A\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nN/A\r\n\r\n**Describe your issue**\r\n\r\nOnce this fast-glob PR gets merged: https://github.com/mrmlnc/fast-glob/pull/456\r\n\r\nam proposing an update to their next release ( current is 3.3.2 ) and causes the following audit issue \r\n\r\n```\r\nRegular Expression Denial of Service (ReDoS) in micromatch (Severity: moderate)\r\n  - Affected package: micromatch\r\n  - Patched in: >=4.0.8\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14696","RelatedDescription":"Closed issue \"update fast-glob 3.3.2 which will fix micromatch 4.0.8 dependency (ReDoS) issue\" (#14696)"},{"Id":"2594811746","IsPullRequest":true,"CreatedAt":"2024-10-17T13:50:03","Actor":"RobinMalfait","Number":"14704","RawContent":null,"Title":"Run tests without optimization","State":"open","Body":"This PR improves the tests by not running the optimization step (via Lightning CSS) in places where we know that nothing should be generated.\n\nIn fact, if _we_ generate invalid CSS where we expected that nothing was being generated, then Lightning CSS will throw the CSS out. This means that we have a bug somewhere in our code, and we should fix it but we don't know about it.\n\nBonus points: this improves the performance of the tests a tiny bit.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14704","RelatedDescription":"Open PR \"Run tests without optimization\" (#14704)"},{"Id":"2594586780","IsPullRequest":true,"CreatedAt":"2024-10-17T13:06:05","Actor":"RobinMalfait","Number":"14702","RawContent":null,"Title":"Add `CODEOWNERS` file","State":"closed","Body":"This PR adds a new `CODEOWNERS` file so that the `@tailwindlabs/engineering` will be automatically requested for review when changes are made to the repository.\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14702","RelatedDescription":"Closed or merged PR \"Add `CODEOWNERS` file\" (#14702)"},{"Id":"2594586752","IsPullRequest":true,"CreatedAt":"2024-10-17T13:05:44","Actor":"RobinMalfait","Number":"14701","RawContent":null,"Title":"Add `CODEOWNERS` file","State":"closed","Body":"This PR adds a new `CODEOWNERS` file so that the `@tailwindlabs/engineering` will be automatically requested for review when changes are made to the repository.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14701","RelatedDescription":"Closed or merged PR \"Add `CODEOWNERS` file\" (#14701)"},{"Id":"2594240447","IsPullRequest":true,"CreatedAt":"2024-10-17T10:41:15","Actor":"RobinMalfait","Number":"14697","RawContent":null,"Title":"Bump dependencies to fix vulnerabilities","State":"closed","Body":"This PR fixes some package vulnerabilities that you will see when running `npm install`. This PR fixes that by bumping dependencies to get rid of the vulnerabilities.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14697","RelatedDescription":"Closed or merged PR \"Bump dependencies to fix vulnerabilities\" (#14697)"},{"Id":"2593222128","IsPullRequest":true,"CreatedAt":"2024-10-17T09:50:27","Actor":"RobinMalfait","Number":"14695","RawContent":null,"Title":"Migrate `theme(…)` to `var(…)` in CSS","State":"closed","Body":"This PR is a follow up from https://github.com/tailwindlabs/tailwindcss/pull/14664 migrates all the `theme(…)` calls in your CSS to `var(…)` if we can.\n\nIn at-rules, like `@media` we can't use `var(…)` so we have to use the modern version of `theme(…)`.\n\nIn declarations, we can convert to `var(…)` unless there is a modifier used in the `theme(…)` function, then we can only convert to the new `theme(…)` syntax without dot notation.\n\nInput:\n```css\n@media theme(spacing.4) {\n  .foo {\n    background-color: theme(colors.red.900);\n    color: theme(colors.red.900 / 75%); /* With spaces around the `/` */\n    border-color: theme(colors.red.200/75%); /* Without spaces around the `/` */\n  }\n}\n```\n\nOutput:\n```css\n@media theme(--spacing-4) {\n/*     ^^^^^^^^^^^^^^^^^^     Use `theme(…)` since `var(…)` is invalid in this position*/\n  .foo {\n    background-color: var(--color-red-900); /* Converted to var(…) */\n    color: theme(--color-red-900 / 75%); /* Convert to modern theme(…) */\n    border-color: theme(--color-red-200 / 75%); /* Convert to modern theme(…) — pretty printed*/\n  }\n}\n```\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14695","RelatedDescription":"Closed or merged PR \"Migrate `theme(…)` to `var(…)` in CSS\" (#14695)"},{"Id":"2593222057","IsPullRequest":true,"CreatedAt":"2024-10-17T09:44:40","Actor":"RobinMalfait","Number":"14694","RawContent":null,"Title":"Make `themeToVar` reusable","State":"closed","Body":"This PR makes the `themeToVar` code we already use for migrating the `theme(…)` calls to `var(…)` calls in the candidates (found in source files), reusable for the next PR where we want to migrate `theme(…)` calls in your actual CSS.\n\n(This shouldn't really require a separate PR, but I'm playing with Graphite's stacked PR feature to see how it works in practice 😅)\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14694","RelatedDescription":"Closed or merged PR \"Make `themeToVar` reusable\" (#14694)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-10-21T03:30:24.8195736Z","RunDurationInMilliseconds":646}