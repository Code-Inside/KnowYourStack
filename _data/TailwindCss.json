{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2813947969","IsPullRequest":false,"CreatedAt":"2025-01-27T20:07:02","Actor":"CicerBro","Number":"15943","RawContent":null,"Title":"[v4] Ignore certain paths from scanning no longer supported","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6\n\n**What version of Node.js are you using?**\n\n22.13\n\n**Describe your issue**\n\nIn v3 one could add a line with an exclamation mark `!` prefix in the `tailwind.config.js` to exclude certain files or paths from being scanned:\n\n```js\n    content: [\n        './resources/views/**/*.blade.php',\n        '!./resources/views/somefoldername/*',\n    ],\n```\n\nbut that option seems to have vanished in v4. I know I can do `@import 'tailwindcss' source(none);` and then  `@source '../../../resources/views';` which works but there is no way to exclude a subfolder from that path.\n\nOne work around is to add all the subfolders by hand, but that's a bit of a PITA when the project grows and you forget you need to add every view subfolder to the config css now.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15943","RelatedDescription":"Open issue \"[v4] Ignore certain paths from scanning no longer supported\" (#15943)"},{"Id":"2813905571","IsPullRequest":false,"CreatedAt":"2025-01-27T19:43:07","Actor":"kju4q","Number":"15942","RawContent":null,"Title":"Unable to run npx tailwindcss init with TailwindCSS 4.0.0: command not found","State":"open","Body":"I am having issues installing the latest version of Tailwind! In my case, I’m not using Vite, but I encountered this problem after attempting to install the latest version of TailwindCSS in an existing project.\n\nEnvironment:\n• OS: macOS Sequoia Version 15.2 (24C101)\n• Node.js version: 18.17.0\n• TailwindCSS version: ^4.0.0\n\nSteps I took:\n\nInstalled TailwindCSS using the command (and its installing the latest version: 4.0.0):\nnpm install -D tailwindcss\nTried initializing the TailwindCSS configuration:\nnpx tailwindcss init\nActual Behavior:\nsh: tailwind: command not found -- This error indicated that the tailwindcss package was not installed globally, but it actually was! Surprisingly, when I switched to an older version of TailwindCSS, the command worked as expected.\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15942","RelatedDescription":"Open issue \"Unable to run npx tailwindcss init with TailwindCSS 4.0.0: command not found\" (#15942)"},{"Id":"2813874054","IsPullRequest":true,"CreatedAt":"2025-01-27T19:26:20","Actor":"thecrypticace","Number":"15941","RawContent":null,"Title":"Don’t look at ignore files outside initialized repos","State":"open","Body":"Right now, when Oxide is scanning for files, it considers ignore files in the \"root\" directory it is scanning as well as all parent directories.\r\n\r\nWe honor .gitignore files even when not in a git repo as an optimization in case a project has been created, contains a .gitignore, but no repo has actually been initialized. However, this has an unintended side effect of including ignore files _ouside of a repo_ when there is one. This means that if you have a .gitignore file in your home folder it'll get applied even when you're inside a git repo which is not what you'd expect.\r\n\r\nThis PR addresses this by checking to see the folder being scanned is inside a repo and turns on a flag that ensures .gitignore files from the repo are the only ones used (global ignore files configured in git still work tho).\r\n\r\nThis still needs lots of tests to make sure things work as expected.\r\n\r\nFixes #15876\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15941","RelatedDescription":"Open PR \"Don’t look at ignore files outside initialized repos\" (#15941)"},{"Id":"2813538103","IsPullRequest":true,"CreatedAt":"2025-01-27T16:52:05","Actor":"thecrypticace","Number":"15934","RawContent":null,"Title":"Make JS APIs available to plugins and configs in the Standalone CLI","State":"open","Body":"wip","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15934","RelatedDescription":"Open PR \"Make JS APIs available to plugins and configs in the Standalone CLI\" (#15934)"},{"Id":"2813183915","IsPullRequest":true,"CreatedAt":"2025-01-27T14:29:52","Actor":"philipp-spiess","Number":"15927","RawContent":null,"Title":"Fix handling of absolute config files in upgrade tool","State":"open","Body":"Closes #15220\r\n\r\nThis PR fixes an issue where the upgrade tool would not be able to load some JavaScript config files across different drive letters on Windows.\r\n\r\nThe issue in detail is that `path.relative(…)` tries to build a relative path but if the file is inside the same folder, it won't start the relative path with a `./` so we manually appended it in case that it isn't there. The issue on Windows specifically is that `file.relative(…)` can also return a legit absolute path, e.g. when the file is on a different drive. In this case we obviously don't want to prefix a path with `./`.\r\n\r\n## Test plan\r\n\r\nTo reproduce this issue, I checked out a Tailwind v3 project _on a different drive letter than my Windows installation_. In that case, I was adding a repo inside `D:` while `npm` was installed in `C:`. I then run `npx @tailwindcss/upgrade` to reproduce the issue.\r\n\r\nThe fix was validated with a local `bun` run of the upgrade tool:\r\n\r\n![telegram-cloud-photo-size-4-5818901845756725194-y](https://github.com/user-attachments/assets/d32b21e3-a08d-4608-b65a-93dddc04f890)\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15927","RelatedDescription":"Open PR \"Fix handling of absolute config files in upgrade tool\" (#15927)"},{"Id":"2813060811","IsPullRequest":false,"CreatedAt":"2025-01-27T13:39:47","Actor":"yash-k-s-7span","Number":"15925","RawContent":null,"Title":"Not able to install tailwindcss v4.0","State":"open","Body":"when i started the dev server i face following issue\r\n\r\nfailed to load config from D:\\internship\\sample-test\\vite.config.js\r\nError: The specified module could not be found.\r\n\\\\?\\D:\\internship\\sample-test\\node_modules\\@tailwindcss\\oxide-win32-x64-msvc\\tailwindcss-oxide.win32-x64-msvc.node\r\n    at Module._extensions..node (node:internal/modules/cjs/loader:1586:18)\r\n    at Module.load (node:internal/modules/cjs/loader:1288:32)\r\n    at Module._load (node:internal/modules/cjs/loader:1104:12)\r\n    at Module.require (node:internal/modules/cjs/loader:1311:19)\r\n    at require (node:internal/modules/helpers:179:18)\r\n    at Object.<anonymous> (D:\\internship\\sample-test\\node_modules\\@tailwindcss\\oxide\\index.js:72:29)\r\n    at Module._compile (node:internal/modules/cjs/loader:1469:14)\r\n    at Module._extensions..js (node:internal/modules/cjs/loader:1548:10)\r\n    at Module.load (node:internal/modules/cjs/loader:1288:32)\r\n    at Module._load (node:internal/modules/cjs/loader:1104:12) \r\n\r\n**Steps to Reproduce:**\r\n\r\n1. Clone the repository [https://github.com/prathamaaaaa/sample-react-vite-app](url).\r\n2. Install dependencies using npm install or yarn install.\r\n3. Try running the development server with npm run dev or yarn dev.\r\n\r\n**Expected Behavior:**\r\nThe development server should start without errors.\r\n\r\n**Actual Behavior:**\r\nThe error message about the missing module tailwindcss-oxide.win32-x64-msvc.node appears, and the server fails to start.\r\n\r\n**Environment:**\r\nOS: (e.g., Windows 10)\r\nNode.js version: (e.g., 20.18.2)\r\nTailwind CSS version: (@tailwindcss/vite: ^4.0.0)\r\nVite version: (6.0.5)\r\n\r\n**Possible Causes:**\r\nThe error may be due to the missing native module required by Tailwind CSS's oxide package.\r\n\r\n**Attachments:**\r\nError logs:  this already mention above.\r\nConfiguration files such as vite.config.js or tailwind.config.js.\r\nSteps or code to reproduce if possible (such as your package.json dependencies).\r\n\r\n_**here is the content of vite.config.js**_ \r\nimport { defineConfig } from 'vite'\r\nimport react from '@vitejs/plugin-react'\r\nimport tailwindcss from '@tailwindcss/postcss';\r\nimport autoprefixer from 'autoprefixer';\r\n\r\n// https://vite.dev/config/\r\nexport default defineConfig({\r\n  plugins: [react(), tailwindcss(), autoprefixer()],\r\n})\r\n\r\n**_here is the package.json content_** \r\n{\r\n  \"name\": \"sample-test\",\r\n  \"private\": true,\r\n  \"version\": \"0.0.0\",\r\n  \"type\": \"module\",\r\n  \"scripts\": {\r\n    \"dev\": \"vite\",\r\n    \"build\": \"vite build\",\r\n    \"lint\": \"eslint .\",\r\n    \"preview\": \"vite preview\"\r\n  },\r\n  \"dependencies\": {\r\n    \"react\": \"^18.3.1\",\r\n    \"react-dom\": \"^18.3.1\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@eslint/js\": \"^9.17.0\",\r\n    \"@tailwindcss/postcss\": \"^4.0.0\",\r\n    \"@tailwindcss/vite\": \"^4.0.0\",\r\n    \"@types/react\": \"^18.3.18\",\r\n    \"@types/react-dom\": \"^18.3.5\",\r\n    \"@vitejs/plugin-react\": \"^4.3.4\",\r\n    \"autoprefixer\": \"^10.4.20\",\r\n    \"eslint\": \"^9.17.0\",\r\n    \"eslint-plugin-react\": \"^7.37.2\",\r\n    \"eslint-plugin-react-hooks\": \"^5.0.0\",\r\n    \"eslint-plugin-react-refresh\": \"^0.4.16\",\r\n    \"globals\": \"^15.14.0\",\r\n    \"vite\": \"^6.0.5\"\r\n  }\r\n}\r\n\r\n_Originally posted by @prathamaaaaa in https://github.com/tailwindlabs/tailwindcss/discussions/15914_","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15925","RelatedDescription":"Open issue \"Not able to install tailwindcss v4.0\" (#15925)"},{"Id":"2813042839","IsPullRequest":false,"CreatedAt":"2025-01-27T13:32:23","Actor":"RobinMalfait","Number":"15924","RawContent":null,"Title":"Upgrade tool incorrectly migrates `leading-[1]` to `leading-1`","State":"open","Body":"The `@tailwindcss/upgrade` tool incorrectly migrates `leading-[1]` to `leading-1`.\n\nThe leading utility supports bare values that map to a value directly, e.g.:\n\n`leading-123`\n```css\n/*! tailwindcss v4.0.0 | MIT License | https://tailwindcss.com */\n.leading-123 {\n  --tw-leading: calc(var(--spacing) * 123);\n  line-height: calc(var(--spacing) * 123);\n}\n@property --tw-leading {\n  syntax: \"*\";\n  inherits: false;\n}\n```\n\nHowever, some values exist in your `@theme`, such as `leading-1`, which maps to:\n```css\n/*! tailwindcss v4.0.0 | MIT License | https://tailwindcss.com */\n.leading-1 {\n  --tw-leading: calc(var(--spacing) * 1);\n  line-height: calc(var(--spacing) * 1);\n}\n@property --tw-leading {\n  syntax: \"*\";\n  inherits: false;\n}\n```\n\nWhich is now equivalent to `4px` instead of `1` which makes this transformation unsafe.\n\nThanks @jeroenreumkens!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15924","RelatedDescription":"Open issue \"Upgrade tool incorrectly migrates `leading-[1]` to `leading-1`\" (#15924)"},{"Id":"2811992287","IsPullRequest":false,"CreatedAt":"2025-01-27T13:10:10","Actor":"scullion","Number":"15911","RawContent":null,"Title":"Font size / line height shorthand doesn't apply `line-height` when leading value is `none`","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n@tailwindcss/vite 4.0.0, Vite 6.0.11\n\n**What version of Node.js are you using?**\n\nNode.js 20.x\n\n**What browser are you using?**\n\nAppears in all browsers tested.\n\n**What operating system are you using?**\n\nWindows 11\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/ZmoWtl9NX5\n\n**Describe your issue**\n\nThe `font-size` / `line-height` shorthand syntax (e.g., `text-3xl/none`) doesn't apply the `line-height` for `none` leading. The generated ruleset for, e.g. `text-3xl/none` doesn't contain the expected `line-height: 1`.\n\nThe example shows pairs of identical text at different sizes. Each pair shows:\n- Left (red border): Using shorthand syntax (e.g., `text-3xl/none`)\n- Right (blue border): Using separate classes (e.g., `text-3xl leading-none`)\n\nExpected behavior:\n- Both syntaxes should produce identical line heights\n- The shorthand `text-3xl/none` should be equivalent to `text-3xl leading-none`\n- The columns should look the same\n\nActual behavior:\n- Text in the red column has its default line height.\n\nToggling the example to Tailwind v3 shows that this behavior is new with v4.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15911","RelatedDescription":"Closed issue \"Font size / line height shorthand doesn't apply `line-height` when leading value is `none`\" (#15911)"},{"Id":"2812899565","IsPullRequest":true,"CreatedAt":"2025-01-27T13:10:09","Actor":"RobinMalfait","Number":"15921","RawContent":null,"Title":"Ensure font-size utilities with `none` modifier works e.g.: `text-sm/none`","State":"closed","Body":"This PR fixes an issue where classes such as `text-sm/none` don't work as expected. The reason for this is that `leading-none` is the only hardcoded leading utility and is not coming from the `@theme`. This means that `text-sm/none` tries to do a lookup for `none` but it won't resolve. \n\nThis PR fixes that by allowing `none` as a modifier.\n\nWhile working on this, I noticed that `text-sm/none` _did_ generate CSS:\n\n```css\n.text-sm\\/none {\n  font-size: var(--text-sm);\n}\n```\n\nNotice that the `line-height` is missing. This means that any modifier that can't be resolved doesn't get the `line-height` set, but it _will_ generate CSS. In this case, no CSS should have been generated.\n\nOtherwise, all of these generate CSS which will only bloat your CSS and won't\nwork as expected. E.g.: `text-sm/foo`, `text-sm/bar`, and `text-sm/baz`:\n\n```css\n.text-sm\\/bar {\n  font-size: var(--text-sm);\n}\n.text-sm\\/baz {\n  font-size: var(--text-sm);\n}\n.text-sm\\/foo {\n  font-size: var(--text-sm);\n}\n```\n\nFixes: #15911\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15921","RelatedDescription":"Closed or merged PR \"Ensure font-size utilities with `none` modifier works e.g.: `text-sm/none`\" (#15921)"},{"Id":"2812935074","IsPullRequest":true,"CreatedAt":"2025-01-27T12:46:30","Actor":"depfu[bot]","Number":"15922","RawContent":null,"Title":"Update bun 1.1.43 → 1.2.0 (minor)","State":"open","Body":"\n\n\n\n\nHere is everything you need to know about this upgrade. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ bun (1.1.43 → 1.2.0) · [Repo](https://github.com/oven-sh/bun)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15922","RelatedDescription":"Open PR \"Update bun 1.1.43 → 1.2.0 (minor)\" (#15922)"},{"Id":"2811550094","IsPullRequest":false,"CreatedAt":"2025-01-27T10:36:33","Actor":"rudyhadoux","Number":"15887","RawContent":null,"Title":"The update with Angular 19 fails","State":"closed","Body":"I upgrade to v4 but a lot of errors like this \n✘ [ERROR] Cannot apply unknown utility class: py-0.5 [plugin angular-sass]\n\n    node_modules/tailwindcss/dist/lib.js:17:296:\n      17 │ ...r,{onInvalidCandidate:x=>{throw new Error(`Cannot apply unknown...\n         ╵                                    ^\n\n    at onInvalidCandidate","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15887","RelatedDescription":"Closed issue \"The update with Angular 19 fails\" (#15887)"},{"Id":"2811617091","IsPullRequest":false,"CreatedAt":"2025-01-27T10:34:56","Actor":"liamduckett","Number":"15895","RawContent":null,"Title":"[v4] Upgrade tool doesn't handle \"Removed deprecated utilities\"","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\npostcss 8.4.31\n\n**What version of Node.js are you using?**\n\nv22.12.0\n\n**What browser are you using?**\n\nFirefox\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\n* [Code on v3](https://play.tailwindcss.com/yfcOkl8UD0)\n* [Code on v4](https://play.tailwindcss.com/y7D6I8MSqe)\n\n**Describe your issue**\n\nRan upgrade tool on the v3 code, and got the v4 code. No surprise these look different - covered in the upgrade guide: https://tailwindcss.com/docs/upgrade-guide#removed-deprecated-utilities.\n\nCould the upgrade tool handle this automatically?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15895","RelatedDescription":"Closed issue \"[v4] Upgrade tool doesn't handle \"Removed deprecated utilities\"\" (#15895)"},{"Id":"2811678954","IsPullRequest":false,"CreatedAt":"2025-01-27T10:32:10","Actor":"peernohell","Number":"15899","RawContent":null,"Title":"Tailwindcss4 with meteor won't work unless you add import in each CSS files.","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\n4.0.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\npostcss 8.4.47 with Meteor 3.0.4\n\n**What version of Node.js are you using?**\n\nv20.12.2\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nMeteor simple demo https://github.com/peernohell/meteor-tailwind4\n\n\n**Describe your issue**\n\nBuild will failed.\nIn other.css file if you uncomment line 2 it will fix the build.\nWith tailwindcss v3 you don't have to include somethings on all files.\nIt make migration really complicated as we have to add the import on each css file of our project.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15899","RelatedDescription":"Closed issue \"Tailwindcss4 with meteor won't work unless you add import in each CSS files.\" (#15899)"},{"Id":"2811842283","IsPullRequest":false,"CreatedAt":"2025-01-27T09:57:55","Actor":"AlanKha","Number":"15908","RawContent":null,"Title":"SVG backgrounds not working for Tailwind v4.0.0","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 5.2.12\n\n**What version of Node.js are you using?**\n\n10.9.0\n\n**What browser are you using?**\n\nArc/Chrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/K2Rma8KsrH\n\n**Describe your issue**\n\nWhen migrating to tailwind v4, I noticed that one of my background patterns disappeared. When recreating this scenario with the tailwind sandbox, I noticed that this is only an issue with svgs. In my attempt, I tried 3 different ways to get it to work: using @theme variables, using :root variables, and inserting the link inline. None of these worked\n\nYou can see what I am attempting to do if you go to https://alan-khalili.com/ and look and look at the sliding text with my github repos.\n\nedit: After tinkering with this more, I noticed that when the url directly contains the '.svg' extension, it works ([playground link](https://play.tailwindcss.com/WmtKbl7FnP?file=css)), but that still does not work with some services like https://uploadthing.com/ that do not have file extensions in the link","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15908","RelatedDescription":"Closed issue \"SVG backgrounds not working for Tailwind v4.0.0\" (#15908)"},{"Id":"2812296490","IsPullRequest":false,"CreatedAt":"2025-01-27T08:26:49","Actor":"Skulli","Number":"15915","RawContent":null,"Title":"[v4] Error: Can't resolve  error with postcss","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.0.0 release\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\npostcss 8.5.1\n\n**What version of Node.js are you using?**\n\n20.18.2\n\n**What browser are you using?**\n\nlatest chrome\n\n**What operating system are you using?**\n\nmacos 15.2\n\n**Describe your issue**\n\nI habe a rails project, which uses tailwind via postcss. I did the upgrade steps at https://tailwindcss.com/docs/upgrade-guide (postcss file and using the tailwindcss/cli\n\nFollowing build-command is used:\n\n    npx @tailwindcss/cli --minify --postcss -i ./app/assets/stylesheets/application.tailwind.css -o ./app/assets/builds/application.css\n\nI get the following error on execution:\n\n> Error: Can't resolve 'components/base' in '/.../app/assets/stylesheets'\n\nThe tailwindcss looks like that\n\n```\n@import \"tailwindcss\";\n@import \"tom-select/dist/css/tom-select.css\";\n\n@import \"components/base\";\n...\n\n@import \"tippy.js/dist/tippy.css\";\n@import \"tippy.js/animations/scale.css\";\n\n```\n\nimports of the node modules are working, own files cannot be resolved.\nbase.css etc. are just regular css codes, no exports etc.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15915","RelatedDescription":"Closed issue \"[v4] Error: Can't resolve  error with postcss\" (#15915)"},{"Id":"2811852014","IsPullRequest":false,"CreatedAt":"2025-01-26T23:53:43","Actor":"ramrami","Number":"15910","RawContent":null,"Title":"[v4] Linear gradients behave differently: there is no smoothness between \"via\" and \"to\"","State":"open","Body":"**What version of Tailwind CSS are you using?**\nv4.0.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\ngulp v5.0.0\n\n**What version of Node.js are you using?**\nv20.18.1\n\n**What browser are you using?**\nBrave + Safari\n\n**What operating system are you using?**\nmacOS\n\n**Reproduction URL**\nhttps://play.tailwindcss.com/9WOZcQlXDT\n\n**Describe your issue**\n\nNot sure if this is intentional or a regression, but in v4 there is no smoothness between \"via\" and \"to\"\n\nThe classes I'm using:\n`bg-gradient-to-r from-white/0 from-20% via-white to-50%`\n(I'm using bg-gradient instead of bg-linear to toggle between versions in the playground)\n\n\nv4\n![Image](https://github.com/user-attachments/assets/6aca9b06-a136-4c30-9802-838bbe33b920)\n\n\nv3\n![Image](https://github.com/user-attachments/assets/da6202c4-9302-44c2-81de-47047894726c)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15910","RelatedDescription":"Open issue \"[v4] Linear gradients behave differently: there is no smoothness between \"via\" and \"to\"\" (#15910)"},{"Id":"2811787387","IsPullRequest":true,"CreatedAt":"2025-01-26T21:08:05","Actor":"EricGusmao","Number":"15906","RawContent":null,"Title":"Bundle @tailwindcss/container-queries plugin with the standalone CLI","State":"closed","Body":"Enhances plugin support for the standalone CLI.\r\n\r\n### Integration of `@tailwindcss/container-queries` plugin:\r\n\r\n* [`integrations/cli/standalone.test.ts`](diffhunk://#diff-1c2acef79df0743d1800f3332dffcbd2b64ceeca3b8d28fbcfbec06f9d993e88R36): Added `@container` class and included the `@tailwindcss/container-queries` plugin in the test setup. [[1]](diffhunk://#diff-1c2acef79df0743d1800f3332dffcbd2b64ceeca3b8d28fbcfbec06f9d993e88R36) [[2]](diffhunk://#diff-1c2acef79df0743d1800f3332dffcbd2b64ceeca3b8d28fbcfbec06f9d993e88R45) [[3]](diffhunk://#diff-1c2acef79df0743d1800f3332dffcbd2b64ceeca3b8d28fbcfbec06f9d993e88R58)\r\n* [`packages/@tailwindcss-standalone/package.json`](diffhunk://#diff-f42dafff9cd47f65a1841f83969413055153a6e8069f42f18fe0e46204011b76R30): Added `@tailwindcss/container-queries` as a dependency.\r\n* [`packages/@tailwindcss-standalone/src/index.ts`](diffhunk://#diff-dd232e8dd74633b5b861c20074813152101f0eda78fed64dadbedf67883ffcfeR47): Updated the resolver and loader functions to handle the `@tailwindcss/container-queries` plugin. [[1]](diffhunk://#diff-dd232e8dd74633b5b861c20074813152101f0eda78fed64dadbedf67883ffcfeR47) [[2]](diffhunk://#diff-dd232e8dd74633b5b861c20074813152101f0eda78fed64dadbedf67883ffcfeR60-R61)\r\n* [`pnpm-lock.yaml`](diffhunk://#diff-32824c984905bb02bc7ffcef96a77addd1f1602cff71a11fbbfdd7f53ee026bbR234-R236): Updated to include `@tailwindcss/container-queries` with its dependencies and resolution integrity. [[1]](diffhunk://#diff-32824c984905bb02bc7ffcef96a77addd1f1602cff71a11fbbfdd7f53ee026bbR234-R236) [[2]](diffhunk://#diff-32824c984905bb02bc7ffcef96a77addd1f1602cff71a11fbbfdd7f53ee026bbR1814-R1818) [[3]](diffhunk://#diff-32824c984905bb02bc7ffcef96a77addd1f1602cff71a11fbbfdd7f53ee026bbR4922-R4925)","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15906","RelatedDescription":"Closed or merged PR \"Bundle @tailwindcss/container-queries plugin with the standalone CLI\" (#15906)"},{"Id":"2811726568","IsPullRequest":false,"CreatedAt":"2025-01-26T19:21:11","Actor":"Abdulrahmanelheyb","Number":"15902","RawContent":null,"Title":"background-color and background-image are same class","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: postcss-cli 8, Next.js 15.1.6\n\n**What version of Node.js are you using?**\n\nFor example: v20.12.2\n\n**What browser are you using?**\n\nMicrosoft Edge v132.0.2957.115\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/RATwRl63sa\n\nA Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\n\nA reproduction is **required** when filing an issue — any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.\n\n**Describe your issue**\n\nDescribe the problem you're seeing, any important steps to reproduce and what behavior you expect instead.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15902","RelatedDescription":"Closed issue \"background-color and background-image are same class\" (#15902)"},{"Id":"2811672200","IsPullRequest":false,"CreatedAt":"2025-01-26T17:01:55","Actor":"emirhangumus","Number":"15897","RawContent":null,"Title":"Invalid css transformation on build","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nsvelte 5.19.2, tailwindcss/vite 4.0.0, vite 6.0.11\n\n**What version of Bun js are you using?**\n\nv1.2.0\n\n**What browser are you using?**\n\nZen Browser (Firefox)\n\n**What operating system are you using?**\n\nUbuntu 22.04\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/czuZLwTt4a\n\n**Describe your issue**\n\n![On development mode](https://github.com/user-attachments/assets/6efb24f3-da28-4d36-84d2-92c3af0d6779)\n![On production mode ](https://github.com/user-attachments/assets/b754af96-5c0f-4433-82db-431348e727a3)\n\nThe bug is, i have a class like this `lg:bg-[center_bottom_-15rem]` and on development mode, tailwind puts all thing as is. When build the app, transformation is convert that into invalid status.\n`center` turning into `50%` and its invalid.\nExpectation is, not creating a invalid value.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15897","RelatedDescription":"Open issue \"Invalid css transformation on build\" (#15897)"},{"Id":"2811293103","IsPullRequest":false,"CreatedAt":"2025-01-26T13:32:35","Actor":"fs-projects","Number":"15877","RawContent":null,"Title":"When using tailwindcss4.0.0 with ChakraUI3.5.1, the styles are conflicting and overriden.","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nvite with react + typescript template using  `npm create vite@latest`\n\n**What version of Node.js are you using?**\n\nv22.13.0(Jod)\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n\nhttps://github.com/fs-projects/chakra-tailwind. Please clone this repo and run `npm install` and `npm run dev` correspondingly.\n\n**Describe your issue**\nI created a started project with vite(react+typescript) and then added tailwindcss4.0.0 with ChakraUI3.5.1. I just have a heading in my code and when I try to run it I can see that styles are not getting applied except for the underline. \n\n`<h1 className=\"text-8xl font-bold underline\">Hello world!</h1>`\n\nWhen I inspect above in browser I see font-size, font-weight are getting set and are striked off in the browser.\n\nPlease see below snap - \n\n![Image](https://github.com/user-attachments/assets/4bb5ce4f-e1ef-456c-84a0-158316bd926f)\n\nPlease suggest anything that I can do solve this issue. Thank you very much for your support. \n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15877","RelatedDescription":"Closed issue \"When using tailwindcss4.0.0 with ChakraUI3.5.1, the styles are conflicting and overriden.\" (#15877)"},{"Id":"2811493897","IsPullRequest":false,"CreatedAt":"2025-01-26T12:38:38","Actor":"vikingnope","Number":"15885","RawContent":null,"Title":"Update script did not update dependency","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nCurrent 3.4.1 updating to v4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nSomewhat old Create-React-App project\n\n**What version of Node.js are you using?**\n\nv 23.6.0\n\n**What browser are you using?**\n\nFor example: Chrome, Safari, or N/A\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n\nN/A\n\n**Describe your issue**\n\nIt says it is going to update the dependencies but it does not actually updated the dependencies to v4\n\nhttps://github.com/vikingnope/worther\n\n![Image](https://github.com/user-attachments/assets/72b0e508-aef6-49fa-a951-0cce464284bc)\n\n![Image](https://github.com/user-attachments/assets/f1fac3b0-5684-4bb4-87bd-1a80db1fadbe)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15885","RelatedDescription":"Closed issue \"Update script did not update dependency\" (#15885)"},{"Id":"2811487135","IsPullRequest":false,"CreatedAt":"2025-01-26T11:55:35","Actor":"iquito","Number":"15884","RawContent":null,"Title":"[v4] \"hidden\" is not the last display utility anymore","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/1XH8TJa6s3 for v4 (element is shown)\nhttps://play.tailwindcss.com/Ajm578zcYz for v3.4.15 (element is not shown)\n\n**Describe your issue**\n\nThe order of the `display` utilities has slightly changed in v4, putting `hidden` somewhere in the middle of these utilities by default (after `block`, but before `inline-block` or `inline-flex`), where in v3.4 it was at the end of all the `display` utilities. I have used TailwindCSS often like this:\n\n```html\n<div class=\"inline-block hidden\">Some text that is either displayed as inline-block or hidden</div>\n```\n\nThen I remove or re-add the hidden class with Javascript, which worked fine in v3. In v4 this does not work with `inline-block` anymore (because `inline-block` comes after `hidden` in the generated CSS), while it does work with `block` (as it comes before `hidden`). I found the behavior better in v3.4, where `hidden` was assumed to be the preferred/overriding value (if set) of all the display utilities and comes last in the definitions. I could imagine many people used `hidden` in this way and will find the new order surprising.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15884","RelatedDescription":"Open issue \"[v4] \"hidden\" is not the last display utility anymore\" (#15884)"},{"Id":"2811444463","IsPullRequest":false,"CreatedAt":"2025-01-26T10:16:42","Actor":"lentscode","Number":"15882","RawContent":null,"Title":"[v4] Tailwind running with Next v15 on Docker takes ton of time and resources for first load","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js v15.1.4\n\n**What version of Node.js are you using?**\n\nv23.0.0\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nMacOS\n\n[**Reproduction URL**](https://github.com/lentscode/tailwind-issue-replication)\n\nI have an issue running Next v15 + Tailwind v4 on a Docker container: the first compiling takes a huge amount of time compared to running `yarn dev` on local. Furthermore, it takes a ton of CPU and memory just for the first rendering.\n\n**Local `yarn dev`**\n![Image](https://github.com/user-attachments/assets/d95626bb-c4a8-4416-b4a0-20afe756af18)\n\n**Docker container**\n![Image](https://github.com/user-attachments/assets/d586f763-bc30-4029-970e-a5dd2b71d882)\n\n**`docker stats`**\n![Image](https://github.com/user-attachments/assets/18a4868d-348e-476e-84a6-54b6cbc5c93b)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15882","RelatedDescription":"Open issue \"[v4] Tailwind running with Next v15 on Docker takes ton of time and resources for first load\" (#15882)"},{"Id":"2811397807","IsPullRequest":false,"CreatedAt":"2025-01-26T09:37:10","Actor":"jesspinklet","Number":"15880","RawContent":null,"Title":"V4 background size and background position custom value classes are same.","State":"closed","Body":"![Image](https://github.com/user-attachments/assets/5c0f79aa-047c-427b-9dd8-e9643ad13ce7)\n\n![Image](https://github.com/user-attachments/assets/7fddcb20-390a-4441-bc12-ccf37135e482)\n\nThey are both using `bg-[value]`.\n\nIs that how it's supposed to be?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15880","RelatedDescription":"Closed issue \"V4 background size and background position custom value classes are same.\" (#15880)"},{"Id":"2811286769","IsPullRequest":false,"CreatedAt":"2025-01-26T02:54:28","Actor":"AssisrMatheus","Number":"15876","RawContent":null,"Title":"[v4] Sources are not being taken into consideration with Next.js 15","State":"open","Body":"Tailwind: `4.0.0`\nNext.js: `15.1.6`\nMacOS: `Sequoia 15.2`\nNode: `v22.13.1`\npnpm: `9.15.3`\nArc Browser: `1.79.0`\n\n**Reproduction URL**\n\nhttps://github.com/AssisrMatheus/tailwindv4-next15-no-output-repro\n\nSetup process:\n1. `pnpx create-next-app@latest`\n1. `pnpx @tailwindcss/upgrade@next`\n1. `pnpm run dev`\n\n**Describe your issue**\n\nIn a brand new next.js 15 project. Tailwind v4 is only building base css and theme variables, all classes used within source files are ignored.\n\nI have tried to turn off turbopack with no success. Rolling back node to v20 also doesn't help. Tried using `postcss.config.json` file format instead of current one also with no success.\n\nCurrent behaviour:  \n![Image](https://github.com/user-attachments/assets/0f2d6280-b1c8-4d47-95e8-52abd65a8e47)\n\nExpected behaviour:  \n![Image](https://github.com/user-attachments/assets/a97380cc-f19b-4264-a01b-a138e882f171)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15876","RelatedDescription":"Open issue \"[v4] Sources are not being taken into consideration with Next.js 15\" (#15876)"},{"Id":"2811249242","IsPullRequest":false,"CreatedAt":"2025-01-26T00:53:26","Actor":"sangrepura","Number":"15874","RawContent":null,"Title":"Bug: CSS Variables in `@theme`, `@layer base`, and `:root` do Not Inherit Inline style Values in Tailwind CSS v4","State":"open","Body":"## What version of Tailwind CSS are you using?\nv4.0.0\n\n## What build tool are you using?\nTailwind Playground\n\n## What version of Node.js are you using?\nN/A\n\n## What browser are you using?\nChromium to 132.0.6834.111.\n\n## What operating system are you using?\nmacOS Sonoma 14.5\n\n## Reproduction URL\n[Tailwind Play](https://play.tailwindcss.com/7N0n8QrcVe)\n\n## Describe your issue\n\n### Expected Behavior:\n\nCSS variables defined via `@theme`, `@layer base`, `:root`, and global scope should inherit the value set inline via `style=\"--var: foo;\"`\n\n### Actual Behavior:\n\n#### Only these scenarios work:\n\n- Direct Tailwind color w or w/out use of var (`text-[var(--color-red-500)])`)\n\n- Direct Custom Tailwind color  (`text-less-cool`)\n\n- Class-scoped variable (`text-[var(--color-class-cool)]` - i.e. when using my `.cool` class)\n\n#### These scenarios fail:\n\n- Theme-layer variable (`--color-theme-cool`)\n\n- Base-layer variable (`--color-base-cool`)\n\n- Root-scoped variable (`--color-root-cool`)\n\n### Steps to Reproduce:\n\nDefine CSS variables using multiple scoping methods:\n\n```css\n@import \"tailwindcss\";\n\n@theme {\n  --color-less-cool: #A5B937;\n  --color-theme-cool: var(--cool);\n}\n\n@layer base {\n  :root {\n    --color-base-cool: var(--cool);\n  }\n}\n\n.cool {\n  --color-class-cool: var(--cool);\n}\n\n:root {\n  --color-root-cool: var(--cool);\n}\n\n```\n\n```html\n<h1 class=\"text-6xl text-[var(--color-red-500)]\" style=\"--cool: #FE9900;\">Hello</h1>\n\n<h1 class=\"text-6xl text-less-cool\" style=\"--cool: #FE9900;\">Hello</h1>\n\n<h1 class=\"text-6xl text-theme-cool\" style=\"--cool: #FE9900;\">Hello</h1>\n\n<h1 class=\"text-6xl text-[var(--color-theme-cool)]\" style=\"--cool: #FE9900;\">Hello</h1>\n\n<h1 class=\"text-6xl text-[var(--color-base-cool)]\" style=\"--cool: #FE9900;\">Hello</h1>\n\n<h1 class=\"text-6xl text-[var(--color-root-cool)]\" style=\"--cool: #FE9900;\">Hello</h1>\n\n<h1 class=\"cool text-6xl text-[var(--color-class-cool)]\" style=\"--cool: #FE9900;\">Hello</h1>\n```\n\n\n\n\n### Workaround: \n\nVariables scoped to a class (.cool) work correctly, suggesting a scoping/context issue with theme/base-layer variables.\n\n### Additional Notes:\n\nTailwind's layer system doesn't appear to respect inline variable definitions\n\nVariables declared in :root don't inherit values from element-scoped --cool\n\nOnly class-scoped variables work as expected\n\nThis used to work for me in v3","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15874","RelatedDescription":"Open issue \"Bug: CSS Variables in `@theme`, `@layer base`, and `:root` do Not Inherit Inline style Values in Tailwind CSS v4\" (#15874)"},{"Id":"2811230652","IsPullRequest":false,"CreatedAt":"2025-01-25T23:58:10","Actor":"tkafka","Number":"15872","RawContent":null,"Title":"v4: @tailwindcss/vite: Invalid css in @theme section causes the styles to be silently broken in production build only","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n\"@tailwindcss/vite\": \"^4.0.0\"\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n\"vite\": \"^6.0.5\"\n\n**What version of Node.js are you using?**\n\nv22.13.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://github.com/tkafka/tailwind-v4-css-parsing-bug/tree/main\n\n**Describe your issue**\n\nThe above demo demonstrates, how a single typo in `@theme` section in `style.css` causes the page to have broken css in production.\nThe dev build is fine, and there is no error message in production.\nThis can let to a single typo silently breaking the production.\n\n## Reproduction steps:\n\n1. Install dependencies:\n\n```bash\npnpm install\n```\n\n2. Dev build looks fine:\n\n```bash\npnpm dev\n```\n\n<img width=\"516\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0ef9a83c-1ef3-4969-a385-e3ef10dc22a5\" />\n\n3. Production build has broken styling, no error is produced:\n\n```bash\npnpm build && pnpm preview\n```\n\n<img width=\"802\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/3c3255f0-ab2e-4eaf-bfcb-db421b533958\" />\n\nThis is caused by a typo in `style.css` in `--shadow-inset-bad` - it has invalid `rgb(var(from --color-secondary-500) r g b / 0.08)` instead of `rgb(from var(--color-secondary-500) r g b / 0.08)` (`from` is in the wrong place).\n\nCommenting out the `--shadow-inset-bad` style causes the production build to have a proper styling.\n\nThis seems like an error caused by different behavior of css parsing in development vs. in production. I believe that either the parser should work in a same way in development and production mode, or it should report found errors in css.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15872","RelatedDescription":"Open issue \"v4: @tailwindcss/vite: Invalid css in @theme section causes the styles to be silently broken in production build only\" (#15872)"},{"Id":"2811184066","IsPullRequest":true,"CreatedAt":"2025-01-25T21:28:14","Actor":"userquin","Number":"15869","RawContent":null,"Title":"fix: default package exports","State":"open","Body":"<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n\r\nThis PR includes the following changes to the `packages/tailwindcss` package (check **Context**):\r\n- fixes the default packages exports for node10 and node16 cjs types\r\n- export types in `plugin.ts` module, cannot be used with Typescript 5.7\r\n- add `\"type\": \"commonjs\"` to package.json\r\n- add `./lib/util/flattenColorPalette.js` variant to package.json exports (`publishConfig`)\r\n\r\n**Context**\r\nThe current version at npm registry has all types broken for all packages exports. The problem seems to be with tsup since it is not applying the `.cts` hack, all `d.ts` files using `export { X as default };`, check https://arethetypeswrong.github.io/?p=tailwindcss%404.0.0 .\r\n\r\nWith this PR (for context check this PR https://github.com/unjs/unbuild/pull/475 and this md file https://github.com/unjs/unbuild/blob/a011a7831e2004688bf44716f5e9c9377d08ebec/src/builders/rollup/plugins/cjs.md):\r\n\r\n![image](https://github.com/user-attachments/assets/1cbfcdf7-a573-4465-8191-95dea9fabd56)\r\n\r\n\r\nThis PR includes a new script module that runs after tsup finish building the dist, extracting the default export and applying some replacements in the files including the default `export` correclty: `export = X;` and remaining named exports in the default export statement.\r\n\r\nAbout exporting the types in the `plugin.ts` module, when using TypeScript 5.7 there is an error. Using the following code with any module resolution\r\n\r\n```ts\r\nimport plugin from 'tailwindcss/plugin'\r\n\r\nconst exportedPlugin = plugin.withOptions(() => {\r\n\treturn ({ matchComponents }) => {\r\n\t\tmatchComponents({\r\n\t\t\ttest: (content: string) => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tcolor: content,\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n});\r\n\r\nexport default exportedPlugin;\r\n```\r\n\r\nand building it via `tsc -b`, there is an error about required annotation:\r\n\r\n![image](https://github.com/user-attachments/assets/dc092554-6467-4c50-b18c-7b0d8dd40274)\r\n\r\nUsing a local tgz from this PR, TypeScript is fine when building the module:\r\n\r\n![image](https://github.com/user-attachments/assets/625ea542-6ac4-41ee-9aa6-670f08d6ca4c)\r\n\r\nYou can generate the local tgz using this PR in the following repository (use packages/plugin): https://github.com/iconify/iconify-tailwind\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/15869","RelatedDescription":"Open PR \"fix: default package exports\" (#15869)"},{"Id":"2811165589","IsPullRequest":false,"CreatedAt":"2025-01-25T20:50:42","Actor":"eyalch","Number":"15868","RawContent":null,"Title":"Upgrade tool converts component classes to custom utilities","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n@tailwindcss/cli 4.0.0\n\n**What version of Node.js are you using?**\n\nv20.12.0\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nN/A\n\n**Describe your issue**\n\nWhile upgrading to Tailwind CSS v4.0 (from v3.4.14), the [upgrade tool](https://tailwindcss.com/docs/upgrade-guide#using-the-upgrade-tool) seems to convert [component classes](https://tailwindcss.com/docs/adding-custom-styles#adding-component-classes) to [custom utilities](https://tailwindcss.com/docs/adding-custom-styles#adding-custom-utilities). Reading the code, looks like this behavior is intentional: https://github.com/tailwindlabs/tailwindcss/blob/7e20c3b58750f769d9b6e35bf283689c86341b1d/packages/%40tailwindcss-upgrade/src/codemods/migrate-at-layer-utilities.ts#L277\n\nThe question is—why? Since both Tailwind CSS v3.0 and v4.0 support the `components` layer, I'd expect the upgrade tool to leave component classes _unmodified_.\n\nHere's a unit test for a simple case (would be added to `packages/@tailwindcss-upgrade/src/codemods/migrate-at-layer-utilities.test.ts`):\n\n```ts\nit('should keep components', async () => {\n  expect(\n    await migrate(css`\n      @layer components {\n        .foo {\n          color: red;\n        }\n      }\n    `),\n  ).toMatchInlineSnapshot(`\n    \"@layer components {\n      .foo {\n        color: red;\n      }\n    }\"\n  `)\n})\n```\n\nThis test fails with the following output:\n\n```diff\n FAIL  src/codemods/migrate-at-layer-utilities.test.ts > should keep components\nError: Snapshot `should keep components 1` mismatched\n\n- Expected\n+ Received\n\n- \"@layer components {\n-   .foo {\n+ \"@utility foo {\n-     color: red;\n+   color: red;\n-   }\n  }\"\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15868","RelatedDescription":"Closed issue \"Upgrade tool converts component classes to custom utilities\" (#15868)"},{"Id":"2811132585","IsPullRequest":false,"CreatedAt":"2025-01-25T19:05:19","Actor":"nilshelmig","Number":"15864","RawContent":null,"Title":"[v4] preflight removed margins conflicts with web-component :host styles","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n@tailwindcss/vite@4.0.0, vite@6.0.11, @material/web@2.2.0\n\n**What version of Node.js are you using?**\n\nv22.9.0\n\n**What browser are you using?**\n\nFirefox 134.0.2, Chromium 132.0.6834.83\n\n**What operating system are you using?**\n\nKubuntu 24.10.\n\n**Reproduction URL**\nhttps://github.com/nilshelmig/tailwindcss-4-webcomponents-bug\n\n```bash\nnpm ci\nnpm start\n```\n\n**Describe your issue**\n\nWe use [material web-components](https://m3.material.io/components) in our project. While upgrading to tailwindcss-v4 we encountered wrong paddings of buttons and wrong position and size of dialog boxes.\n\nIt seems because of preflight setting `padding` and `margin` for every element `*` to zero, it overrides the styling rules from `:host` of the custom-web-elements.\n\nCurrently, the only workaround I see is to create a custom preflight, so that setting `padding` and `margin` won't apply to `:host` elements, or set the `padding` and `margin` for the custom element with tailwindcss. The later one would mean more control on our side, but we have to reapply every sizing of material web-components 😕 \n\n**With preflight enabled**\n![Image](https://github.com/user-attachments/assets/17e29f80-a5dd-4e4d-9f8a-8d94f3bfd8d5)\n\n**With preflight disabled**\n![Image](https://github.com/user-attachments/assets/86383a9d-0439-43f5-bc5c-4607af61923e)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/15864","RelatedDescription":"Open issue \"[v4] preflight removed margins conflicts with web-component :host styles\" (#15864)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-01-28T03:30:22.6957478Z","RunDurationInMilliseconds":384}