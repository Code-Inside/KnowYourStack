{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2595740352","IsPullRequest":true,"CreatedAt":"2024-10-17T21:03:28","Actor":"adamwathan","Number":"14709","RawContent":null,"Title":"Prepare v4.0.0-alpha.28 release","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14709","RelatedDescription":"Closed or merged PR \"Prepare v4.0.0-alpha.28 release\" (#14709)"},{"Id":"2589134480","IsPullRequest":true,"CreatedAt":"2024-10-17T20:36:47","Actor":"philipp-spiess","Number":"14675","RawContent":null,"Title":"Resolve theme keys when migrating JS config to CSS","State":"closed","Body":"With the changes in #14672, it now becomes trivial to actually resolve the config (while still retaining the reset behavior). This means that we can now convert JS configs that use _functions_, e.g.:\r\n\r\n```ts\r\nimport { type Config } from 'tailwindcss'\r\n\r\nexport default {\r\n  theme: {\r\n    extend: {\r\n      colors: ({ colors }) => ({\r\n        gray: colors.neutral,\r\n      }),\r\n    },\r\n  },\r\n} satisfies Config\r\n```\r\n\r\nThis becomes:\r\n\r\n```css\r\n@import 'tailwindcss';\r\n\r\n@theme {\r\n  --color-gray-50: #fafafa;\r\n  --color-gray-100: #f5f5f5;\r\n  --color-gray-200: #e5e5e5;\r\n  --color-gray-300: #d4d4d4;\r\n  --color-gray-400: #a3a3a3;\r\n  --color-gray-500: #737373;\r\n  --color-gray-600: #525252;\r\n  --color-gray-700: #404040;\r\n  --color-gray-800: #262626;\r\n  --color-gray-900: #171717;\r\n  --color-gray-950: #0a0a0a;\r\n}\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14675","RelatedDescription":"Closed or merged PR \"Resolve theme keys when migrating JS config to CSS\" (#14675)"},{"Id":"2595472566","IsPullRequest":true,"CreatedAt":"2024-10-17T20:16:14","Actor":"adamwathan","Number":"14708","RawContent":null,"Title":"Interpolate gradients using OKLCH by default","State":"closed","Body":"This PR updates all of our gradient utilities to interpolate using OKLCH by default instead of sRGB. This results in a smoother transition between colors that preserves saturation throughout the gradient, rather than hitting the dreaded dull gray zone in between your color stops.\r\n\r\nHere are a few examples comparing sRGB (top) to OKLCH (bottom):\r\n\r\n<img width=\"736\" alt=\"image\" src=\"https://github.com/user-attachments/assets/57a158b6-a3a2-4eda-813e-1b596c7d4b3a\">\r\n\r\nWe only apply a default interpolation mode when _not_ using arbitrary values with the gradient utility.\r\n\r\nSimplified but clear:\r\n\r\n```css\r\n.bg-linear-to-r {\r\n  background-image: linear-gradient(to right in oklch, var(--gradient-color-stops));\r\n}\r\n\r\n.bg-linear-[to_right] {\r\n  background-image: linear-gradient(to right, var(--gradient-color-stops));\r\n}\r\n\r\n.bg-linear-[to_right_in_hsl] {\r\n  background-image: linear-gradient(to right in hsl, var(--gradient-color-stops));\r\n}\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14708","RelatedDescription":"Closed or merged PR \"Interpolate gradients using OKLCH by default\" (#14708)"},{"Id":"2595383888","IsPullRequest":true,"CreatedAt":"2024-10-17T18:29:32","Actor":"adamwathan","Number":"14707","RawContent":null,"Title":"Support linear gradient angles as bare values","State":"closed","Body":"This PR adds support for linear gradient angles as bare values, like this:\r\n\r\n```\r\nbg-linear-45 => linear-gradient(45deg, …)\r\n```\r\n\r\nWe already support this for [conic gradients](https://github.com/tailwindlabs/tailwindcss/pull/14467), so this makes these utilities more consistent.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14707","RelatedDescription":"Closed or merged PR \"Support linear gradient angles as bare values\" (#14707)"},{"Id":"2595041919","IsPullRequest":true,"CreatedAt":"2024-10-17T17:48:58","Actor":"adamwathan","Number":"14705","RawContent":null,"Title":"Remove invalid gradient fallbacks","State":"closed","Body":"Prior to this PR we were providing fallback values for certain CSS variables in our gradient utilities that just weren't necessary and didn't do anything.\r\n\r\nFor example `bg-linear-to-r` was generating this:\r\n\r\n```css\r\n.bg-linear-to-r {\r\n  --tw-gradient-position: to right;\r\n  background-image: linear-gradient(\r\n    var(--tw-gradient-stops, to right)\r\n  );\r\n}\r\n```\r\n\r\n…but `background-image: linear-gradient(to right)` is not valid CSS and is thrown out by the browser.\r\n\r\nThis PR removes these fallback values entirely since there is nothing sensible to fall back to anyways — you need to combine these utilities with the `from-*`/`to-*` utilities or provide the complete gradient as an arbitrary value for things to make sense.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14705","RelatedDescription":"Closed or merged PR \"Remove invalid gradient fallbacks\" (#14705)"},{"Id":"2593644794","IsPullRequest":false,"CreatedAt":"2024-10-17T16:38:16","Actor":"zanuka","Number":"14696","RawContent":null,"Title":"update fast-glob 3.3.2 which will fix micromatch 4.0.8 dependency (ReDoS) issue","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\n3.4.14\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nVue 3.4.21, Vite 5.1.5\r\n\r\n**What version of Node.js are you using?**\r\n\r\nNode 20.15.1\r\n\r\n**What browser are you using?**\r\n\r\nN/A\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nN/A\r\n\r\n**Describe your issue**\r\n\r\nOnce this fast-glob PR gets merged: https://github.com/mrmlnc/fast-glob/pull/456\r\n\r\nam proposing an update to their next release ( current is 3.3.2 ) and causes the following audit issue \r\n\r\n```\r\nRegular Expression Denial of Service (ReDoS) in micromatch (Severity: moderate)\r\n  - Affected package: micromatch\r\n  - Patched in: >=4.0.8\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14696","RelatedDescription":"Closed issue \"update fast-glob 3.3.2 which will fix micromatch 4.0.8 dependency (ReDoS) issue\" (#14696)"},{"Id":"2594811746","IsPullRequest":true,"CreatedAt":"2024-10-17T13:50:03","Actor":"RobinMalfait","Number":"14704","RawContent":null,"Title":"Run tests without optimization","State":"open","Body":"This PR improves the tests by not running the optimization step (via Lightning CSS) in places where we know that nothing should be generated.\n\nIn fact, if _we_ generate invalid CSS where we expected that nothing was being generated, then Lightning CSS will throw the CSS out. This means that we have a bug somewhere in our code, and we should fix it but we don't know about it.\n\nBonus points: this improves the performance of the tests a tiny bit.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14704","RelatedDescription":"Open PR \"Run tests without optimization\" (#14704)"},{"Id":"2594586780","IsPullRequest":true,"CreatedAt":"2024-10-17T13:06:05","Actor":"RobinMalfait","Number":"14702","RawContent":null,"Title":"Add `CODEOWNERS` file","State":"closed","Body":"This PR adds a new `CODEOWNERS` file so that the `@tailwindlabs/engineering` will be automatically requested for review when changes are made to the repository.\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14702","RelatedDescription":"Closed or merged PR \"Add `CODEOWNERS` file\" (#14702)"},{"Id":"2594586752","IsPullRequest":true,"CreatedAt":"2024-10-17T13:05:44","Actor":"RobinMalfait","Number":"14701","RawContent":null,"Title":"Add `CODEOWNERS` file","State":"closed","Body":"This PR adds a new `CODEOWNERS` file so that the `@tailwindlabs/engineering` will be automatically requested for review when changes are made to the repository.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14701","RelatedDescription":"Closed or merged PR \"Add `CODEOWNERS` file\" (#14701)"},{"Id":"2594673130","IsPullRequest":true,"CreatedAt":"2024-10-17T12:59:13","Actor":"RobinMalfait","Number":"14703","RawContent":null,"Title":"Ensure existing spaces in attribute selectors are valid","State":"open","Body":"This PR fixes an issue where spaces in a selector generated invalid CSS.\r\n\r\nLightning CSS will throw those incorrect lines of CSS out, but if you are in an environment where Lightning CSS doesn't run then invalid CSS is generated.\r\n\r\nGiven this input:\r\n\r\n```html\r\ndata-[foo_=_\"true\"]:flex\r\n```\r\n\r\nThis will be generated:\r\n\r\n```css\r\n.data-\\[foo_\\=_\\\"true\\\"\\]\\:flex[data-foo=\"\"true] {\r\n  display: flex;\r\n}\r\n```\r\n\r\nWith this PR in place, the generated CSS will now be:\r\n\r\n```css\r\n.data-\\[foo_\\=_\\\"true\\\"\\]\\:flex[data-foo=\"true\"] {\r\n  display: flex;\r\n}\r\n```\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14703","RelatedDescription":"Open PR \"Ensure existing spaces in attribute selectors are valid\" (#14703)"},{"Id":"2594581082","IsPullRequest":true,"CreatedAt":"2024-10-17T12:24:41","Actor":"philipp-spiess","Number":"14700","RawContent":null,"Title":"Migrate static plugins with options to CSS","State":"open","Body":"This PR extends our JS configuration to CSS migration by also allowing `plugins` with options.  \n\nAn example of such config would be:\n\n```js\nimport { type Config } from 'tailwindcss'\nimport myPlugin from \"./myPlugin\";\n\nexport default {\n  plugins: [\n    myPlugin({\n      class: \"tw\",\n    }),\n  ],\n} satisfies Config;\n```\n\nIf the option object contains only values allowed in our CSS API, we can convert this to CSS entirely:\n\n```css\n@plugin './myPlugin' {\n  class: 'tw';\n}\n```","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14700","RelatedDescription":"Open PR \"Migrate static plugins with options to CSS\" (#14700)"},{"Id":"2594478585","IsPullRequest":true,"CreatedAt":"2024-10-17T11:46:22","Actor":"philipp-spiess","Number":"14699","RawContent":null,"Title":"Include simple config objects when extracting static plugins","State":"open","Body":"This PR updates the `extractStaticPlugins` function to also emit options as long as these are objects containing of only `string` and `number` values.\n\nWhile doing this I also cleaned up the `require('custom-plugin')` detector to use a Tree-Sitter query instead of operating on the AST.\n\nHere are the two cases we considered:\n\n```js\nimport plugin1 from 'plugin1';\n\nexport default {\n  plugins: [\n    plugin1({\n      foo: 'bar',\n      num: 19,\n    }),\n    require('./plugin2')({\n      foo: 'bar',\n      num: 19,\n    }),\n  ]\n}\n```\n\nThe test plan also contains a number of scenarios that we do not want to migrate to CSS (because we do not have a CSS API we can use for e.g. nested objects). We do support all types that we also support in the CSS API.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14699","RelatedDescription":"Open PR \"Include simple config objects when extracting static plugins\" (#14699)"},{"Id":"2594240447","IsPullRequest":true,"CreatedAt":"2024-10-17T10:41:15","Actor":"RobinMalfait","Number":"14697","RawContent":null,"Title":"Bump dependencies to fix vulnerabilities","State":"closed","Body":"This PR fixes some package vulnerabilities that you will see when running `npm install`. This PR fixes that by bumping dependencies to get rid of the vulnerabilities.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14697","RelatedDescription":"Closed or merged PR \"Bump dependencies to fix vulnerabilities\" (#14697)"},{"Id":"2593222128","IsPullRequest":true,"CreatedAt":"2024-10-17T09:50:27","Actor":"RobinMalfait","Number":"14695","RawContent":null,"Title":"Migrate `theme(…)` to `var(…)` in CSS","State":"closed","Body":"This PR is a follow up from https://github.com/tailwindlabs/tailwindcss/pull/14664 migrates all the `theme(…)` calls in your CSS to `var(…)` if we can.\n\nIn at-rules, like `@media` we can't use `var(…)` so we have to use the modern version of `theme(…)`.\n\nIn declarations, we can convert to `var(…)` unless there is a modifier used in the `theme(…)` function, then we can only convert to the new `theme(…)` syntax without dot notation.\n\nInput:\n```css\n@media theme(spacing.4) {\n  .foo {\n    background-color: theme(colors.red.900);\n    color: theme(colors.red.900 / 75%); /* With spaces around the `/` */\n    border-color: theme(colors.red.200/75%); /* Without spaces around the `/` */\n  }\n}\n```\n\nOutput:\n```css\n@media theme(--spacing-4) {\n/*     ^^^^^^^^^^^^^^^^^^     Use `theme(…)` since `var(…)` is invalid in this position*/\n  .foo {\n    background-color: var(--color-red-900); /* Converted to var(…) */\n    color: theme(--color-red-900 / 75%); /* Convert to modern theme(…) */\n    border-color: theme(--color-red-200 / 75%); /* Convert to modern theme(…) — pretty printed*/\n  }\n}\n```\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14695","RelatedDescription":"Closed or merged PR \"Migrate `theme(…)` to `var(…)` in CSS\" (#14695)"},{"Id":"2593222057","IsPullRequest":true,"CreatedAt":"2024-10-17T09:44:40","Actor":"RobinMalfait","Number":"14694","RawContent":null,"Title":"Make `themeToVar` reusable","State":"closed","Body":"This PR makes the `themeToVar` code we already use for migrating the `theme(…)` calls to `var(…)` calls in the candidates (found in source files), reusable for the next PR where we want to migrate `theme(…)` calls in your actual CSS.\n\n(This shouldn't really require a separate PR, but I'm playing with Graphite's stacked PR feature to see how it works in practice 😅)\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14694","RelatedDescription":"Closed or merged PR \"Make `themeToVar` reusable\" (#14694)"},{"Id":"2592487295","IsPullRequest":true,"CreatedAt":"2024-10-16T19:24:54","Actor":"adamwathan","Number":"14693","RawContent":null,"Title":"Add first draft of new wide-gamut color palette","State":"closed","Body":"This PR updates all of the colors in our default theme to use OKLCH instead of RGB and increases the overall chroma to take advantage of the wider color gamut.\r\n\r\nJust a first draft based on @danhollick's initial work — expecting these will be further refined before a stable release as we continue to test them.\r\n\r\n<img width=\"628\" alt=\"image\" src=\"https://github.com/user-attachments/assets/2de1bfca-fddd-47f9-b609-39f26abdee41\">\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14693","RelatedDescription":"Closed or merged PR \"Add first draft of new wide-gamut color palette\" (#14693)"},{"Id":"2591766422","IsPullRequest":true,"CreatedAt":"2024-10-16T16:08:27","Actor":"philipp-spiess","Number":"14691","RawContent":null,"Title":"Don't generate invalid CSS when migrating a complex `screens` config","State":"closed","Body":"<!--\n\n👋 Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14691","RelatedDescription":"Closed or merged PR \"Don't generate invalid CSS when migrating a complex `screens` config\" (#14691)"},{"Id":"2588654198","IsPullRequest":true,"CreatedAt":"2024-10-16T14:06:09","Actor":"philipp-spiess","Number":"14672","RawContent":null,"Title":"Reset `default` @theme values for non `extend` JS theme config","State":"closed","Body":"Imagine the following setup:\r\n\r\n```css\r\n/* src/input.css */\r\n@import \"tailwindcss\";\r\n@config \"../tailwind.config.ts\";\r\n@theme {\r\n  --color-red-500: #ef4444;\r\n}\r\n```\r\n\r\n```ts\r\n/* tailwind.config.ts */\r\nexport default {\r\n  theme: {\r\n    colors: {\r\n      red: {\r\n        600: '#dc2626'\r\n      } \r\n    },\r\n    extend: {\r\n      colors: {\r\n        400: '#f87171'\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nSince the theme object in the JS config contains `colors` in the non-`extends` block, you would expect this to _not pull in all the default colors imported via `@import \"tailwindcss\";`_. This, however, wasn't the case right now since all theme options were purely _additive_ to the CSS.\r\n\r\nThis PR makes it so that non-`extend` theme keys _overwrite default CSS theme values_. The emphasis is on `default` here since you still want to be able to overwrite your options via `@theme {}` in user space.\r\n\r\nThis now generates the same CSS that our upgrade codemods would also generate as this would apply the new CSS right after the `@import \"tailwindcss\";` rule resulting in:\r\n\r\n```css\r\n@import \"tailwindcss\";\r\n@theme {\r\n  --color-*: initial;\r\n  --color-red-400: #f87171;\r\n  --color-red-600: #dc2626;\r\n}\r\n@theme {\r\n  --color-red-500: #ef4444;\r\n}\r\n```\r\n\r\n## Keyframes\r\n\r\nThis PR also adds a new core API to unset keyframes the same way. We previously had no option of doing that but while working on the above codemods we noticed that keyframes should behave the same way:\r\n\r\n```css\r\n@import \"tailwindcss\";\r\n@theme {\r\n  --keyframes-*: initial;\r\n  @keyframes spin {\r\n    to {\r\n      transform: rotate(361deg);\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nTo do this, the keyframes bookeeping was moved from the main Tailwind CSS v4 file into the `Theme` class. \r\n\r\n\r\n_I’m not sure super of the API yet but we would need a way for the codemods to behave the same as out interop layer here. Option B is that we don't reset keyframes the same way we reset other theme variables_.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14672","RelatedDescription":"Closed or merged PR \"Reset `default` @theme values for non `extend` JS theme config\" (#14672)"},{"Id":"2591626982","IsPullRequest":true,"CreatedAt":"2024-10-16T11:55:15","Actor":"RobinMalfait","Number":"14687","RawContent":null,"Title":"`@apply` is not allowed inside `@keyframes`","State":"closed","Body":"This PR makes sure that you cannot use `@apply` inside `@keyframes`. \n\nWhile some utilities can be used in `@keyframes`, the moment you introduce a variant, that's not going to work anymore because they need to operate on selectors which `@keyframes` don't have.\n\nThis PR now removes all usages of `@apply` in `@keyframes`.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14687","RelatedDescription":"Closed or merged PR \"`@apply` is not allowed inside `@keyframes`\" (#14687)"},{"Id":"2591546444","IsPullRequest":true,"CreatedAt":"2024-10-16T11:25:53","Actor":"RobinMalfait","Number":"14686","RawContent":null,"Title":"Add missing changelog entry","State":"closed","Body":"<!--\n\n👋 Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14686","RelatedDescription":"Closed or merged PR \"Add missing changelog entry\" (#14686)"},{"Id":"2589333983","IsPullRequest":true,"CreatedAt":"2024-10-16T11:13:48","Actor":"thecrypticace","Number":"14679","RawContent":null,"Title":"Speed up template migrations","State":"closed","Body":"This PR does two things:\r\n- Computes UTF-16 string positions in Rust rather than in JS — eliminating a significant number of traversals of the input string\r\n- Applies replacements to the content in ascending order so we only ever move forward through the source string — this lets v8 optimize string concatenation","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14679","RelatedDescription":"Closed or merged PR \"Speed up template migrations\" (#14679)"},{"Id":"2591498036","IsPullRequest":true,"CreatedAt":"2024-10-16T11:04:33","Actor":"RobinMalfait","Number":"14685","RawContent":null,"Title":"Add user search","State":"closed","Body":"# Expand Search Functionality to Include Users\n\nThis PR enhances the search functionality by including user data alongside tasks. The changes include:\n\n- Renamed `TaskSearch` component to `TaskAndUserSearch`\n- Added state management for users in the frontend\n- Updated the search input placeholder to reflect the expanded scope\n- Modified the backend to return both filtered tasks and users\n- Implemented sorting for both tasks and users in alphabetical order\n- Added a new section in the UI to display matching users\n\nThese updates provide a more comprehensive search experience, allowing users to find both relevant tasks and team members in a single query.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14685","RelatedDescription":"Closed or merged PR \"Add user search\" (#14685)"},{"Id":"2591488072","IsPullRequest":true,"CreatedAt":"2024-10-16T11:04:28","Actor":"RobinMalfait","Number":"14684","RawContent":null,"Title":"Add frontend for search","State":"closed","Body":"# Add TaskSearch Component for Frontend\n\nThis pull request introduces a new `TaskSearch` component for the frontend. The component provides a search functionality for tasks, including:\n\n- A search input field for users to enter their query\n- Fetching and displaying search results from the server\n- Loading and error state handling\n\nThe component uses React hooks (`useState` and `useEffect`) to manage state and side effects. It performs a search request to the server whenever the search query changes, updating the displayed results accordingly.\n\nKey features:\n- Real-time search updates as the user types\n- Proper error handling for network issues\n- Loading indicator during search requests\n- Display of task descriptions in a list format\n\nThis addition will enhance the user experience by allowing quick and easy searching of tasks within the application.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14684","RelatedDescription":"Closed or merged PR \"Add frontend for search\" (#14684)"},{"Id":"2591484100","IsPullRequest":true,"CreatedAt":"2024-10-16T11:03:54","Actor":"RobinMalfait","Number":"14683","RawContent":null,"Title":"Add server API","State":"closed","Body":"# Add Express server with task search functionality\n\nThis pull request introduces a new Express server with a `/search` endpoint for task management. The server includes:\n\n- A basic Express setup listening on port 3000\n- A mock dataset of tasks with IDs and descriptions\n- A `/search` endpoint that:\n  - Accepts a query parameter for filtering tasks\n  - Filters tasks based on the provided query\n  - Sorts the filtered tasks alphabetically by description\n  - Returns the sorted and filtered tasks as JSON\n\nThis addition provides a foundation for a task management API, allowing for easy integration with front-end applications.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14683","RelatedDescription":"Closed or merged PR \"Add server API\" (#14683)"},{"Id":"2591468487","IsPullRequest":true,"CreatedAt":"2024-10-16T10:50:58","Actor":"RobinMalfait","Number":"14682","RawContent":null,"Title":"Add activity feed API","State":"closed","Body":"Test from graphite?","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14682","RelatedDescription":"Closed or merged PR \"Add activity feed API\" (#14682)"},{"Id":"2590136238","IsPullRequest":true,"CreatedAt":"2024-10-15T23:13:30","Actor":"depfu[bot]","Number":"14680","RawContent":null,"Title":"Update typescript 5.5.4 → 5.6.3 (minor)","State":"open","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ typescript (5.5.4 → 5.6.3) · [Repo](https://github.com/Microsoft/TypeScript)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/microsoft/TypeScript/releases/tag/v5.6.3\">5.6.3</a></h4>\n\n<blockquote><p dir=\"auto\">For release notes, check out the <a href=\"https://devblogs.microsoft.com/typescript/announcing-typescript-5-6/\">release announcement</a>.</p>\n<p dir=\"auto\">For the complete list of fixed issues, check out the</p>\n<ul dir=\"auto\">\n<li>\n<a href=\"https://bounce.depfu.com/github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93&amp;q=milestone%3A%22TypeScript+5.6.0%22+is%3Aclosed+\">fixed issues query for Typescript 5.6.0 (Beta)</a>.</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93&amp;q=milestone%3A%22TypeScript+5.6.1%22+is%3Aclosed+\">fixed issues query for Typescript 5.6.1 (RC)</a>.</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93&amp;q=milestone%3A%22TypeScript+5.6.2%22+is%3Aclosed+\">fixed issues query for Typescript 5.6.2 (Stable)</a>.</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93&amp;q=milestone%3A%22TypeScript+5.6.3%22+is%3Aclosed+\">fixed issues query for Typescript 5.6.3 (Stable)</a>.</li>\n</ul>\n<p dir=\"auto\">Downloads are available on:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://www.npmjs.com/package/typescript\">npm</a></li>\n<li><a href=\"https://www.nuget.org/packages/Microsoft.TypeScript.MSBuild\">NuGet package</a></li>\n</ul></blockquote>\n<h4><a href=\"https://github.com/microsoft/TypeScript/releases/tag/v5.6.2\">5.6.2</a></h4>\n\n<blockquote><p dir=\"auto\">For release notes, check out the <a href=\"https://devblogs.microsoft.com/typescript/announcing-typescript-5-6/\">release announcement</a>.</p>\n<p dir=\"auto\">For the complete list of fixed issues, check out the</p>\n<ul dir=\"auto\">\n<li>\n<a href=\"https://bounce.depfu.com/github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93&amp;q=milestone%3A%22TypeScript+5.6.0%22+is%3Aclosed+\">fixed issues query for Typescript 5.6.0 (Beta)</a>.</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93&amp;q=milestone%3A%22TypeScript+5.6.1%22+is%3Aclosed+\">fixed issues query for Typescript 5.6.1 (RC)</a>.</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/Microsoft/TypeScript/issues?utf8=%E2%9C%93&amp;q=milestone%3A%22TypeScript+5.6.2%22+is%3Aclosed+\">fixed issues query for Typescript 5.6.2 (Stable)</a>.</li>\n</ul>\n<p dir=\"auto\">Downloads are available on:</p>\n<ul dir=\"auto\">\n<li><a href=\"https://www.npmjs.com/package/typescript\">npm</a></li>\n<li><a href=\"https://www.nuget.org/packages/Microsoft.TypeScript.MSBuild\">NuGet package</a></li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/typescript/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/Microsoft/TypeScript/compare/c8a7d589e647e19c94150d9892909f3aa93e48eb...d48a5cf89a62a62d6c6ed53ffa18f070d9458b85\">See the full diff on Github</a>. The new version differs by more commits than we can show here.</p>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14680","RelatedDescription":"Open PR \"Update typescript 5.5.4 → 5.6.3 (minor)\" (#14680)"},{"Id":"2589161826","IsPullRequest":true,"CreatedAt":"2024-10-15T15:47:25","Actor":"philipp-spiess","Number":"14676","RawContent":null,"Title":"Remove .gitattributes file","State":"closed","Body":"I added the `.gitattributes` a while back because I thought it would help us make it simpler when rebasing changes to the `CHANGELOG.md` file. However, I don't think this is actually true. Now, instead of a merge conflict, the rebase just ends up duplicating a lot of lines which we only see when we review the PR on GitHub later which is really annoying.\r\n\r\nSo, for now, let's remove it again. Ideally we can have a better merge strategy here (or potentially other tools).","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14676","RelatedDescription":"Closed or merged PR \"Remove .gitattributes file\" (#14676)"},{"Id":"2589042252","IsPullRequest":true,"CreatedAt":"2024-10-15T15:36:05","Actor":"depfu[bot]","Number":"14673","RawContent":null,"Title":"Update @playwright/test 1.47.1 → 1.48.0 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​playwright/test (1.47.1 → 1.48.0) · [Repo](https://github.com/Microsoft/playwright)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/microsoft/playwright/releases/tag/v1.48.0\">1.48.0</a></h4>\n\n<blockquote><h2 dir=\"auto\">WebSocket routing</h2>\n<p dir=\"auto\">New methods <a href=\"https://playwright.dev/docs/api/class-page#page-route-web-socket\">page.routeWebSocket()</a> and <a href=\"https://playwright.dev/docs/api/class-browsercontext#browser-context-route-web-socket\">browserContext.routeWebSocket()</a> allow to intercept, modify and mock WebSocket connections initiated in the page. Below is a simple example that mocks WebSocket communication by responding to a <code class=\"notranslate\">\"request\"</code> with a <code class=\"notranslate\">\"response\"</code>.</p>\n<div class=\"highlight highlight-source-js\" dir=\"auto\"><pre class=\"notranslate\"><span class=\"pl-k\">await</span> <span class=\"pl-s1\">page</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">routeWebSocket</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'/ws'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s1\">ws</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-s1\">ws</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">onMessage</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">message</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-k\">if</span> <span class=\"pl-kos\">(</span><span class=\"pl-s1\">message</span> <span class=\"pl-c1\">===</span> <span class=\"pl-s\">'request'</span><span class=\"pl-kos\">)</span>\n      <span class=\"pl-s1\">ws</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">send</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'response'</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">See <a href=\"https://playwright.dev/docs/api/class-websocketroute\">WebSocketRoute</a> for more details.</p>\n<h2 dir=\"auto\">UI updates</h2>\n<ul dir=\"auto\">\n<li>New \"copy\" buttons for annotations and test location in the HTML report.</li>\n<li>Route method calls like <a href=\"https://playwright.dev/docs/api/class-route#route-fulfill\">route.fulfill()</a> are not shown in the report and trace viewer anymore. You can see which network requests were routed in the network tab instead.</li>\n<li>New \"Copy as cURL\" and \"Copy as fetch\" buttons for requests in the network tab.</li>\n</ul>\n<h2 dir=\"auto\">Miscellaneous</h2>\n<ul dir=\"auto\">\n<li>Option <a href=\"https://playwright.dev/docs/api/class-apirequestcontext#api-request-context-fetch-option-form\"><code class=\"notranslate\">form</code></a> and similar ones now accept <a href=\"https://playwright.dev/docs/api/class-formdata\">FormData</a>.</li>\n<li>New method <a href=\"https://playwright.dev/docs/api/class-page#page-request-gc\">page.requestGC()</a> may help detect memory leaks.</li>\n<li>New option <a href=\"https://playwright.dev/docs/api/class-test#test-step-option-location\"><code class=\"notranslate\">location</code></a> to pass custom step location.</li>\n<li>Requests made by <a href=\"https://playwright.dev/docs/api/class-apirequestcontext\">APIRequestContext</a> now record detailed timing and security information in the HAR.</li>\n</ul>\n<h2 dir=\"auto\">Browser Versions</h2>\n<ul dir=\"auto\">\n<li>Chromium 130.0.6723.19</li>\n<li>Mozilla Firefox 130.0</li>\n<li>WebKit 18.0</li>\n</ul>\n<p dir=\"auto\">This version was also tested against the following stable channels:</p>\n<ul dir=\"auto\">\n<li>Google Chrome 129</li>\n<li>Microsoft Edge 129</li>\n</ul></blockquote>\n<h4><a href=\"https://github.com/microsoft/playwright/releases/tag/v1.47.2\">1.47.2</a></h4>\n\n<blockquote><h3 dir=\"auto\">Highlights</h3>\n<p dir=\"auto\"><a href=\"https://bounce.depfu.com/github.com/microsoft/playwright/pull/32699\">#32699</a> [REGRESSION]: fix(codegen): use content_frame property in python/.NET<br>\n<a href=\"https://bounce.depfu.com/github.com/microsoft/playwright/issues/32706\">#32706</a> [REGRESSION]: page.pause() does not pause test timeout after 1.47<br>\n<a href=\"https://bounce.depfu.com/github.com/microsoft/playwright/pull/32661\">#32661</a> - fix(trace-viewer): time delta between local and remote actions</p>\n<h2 dir=\"auto\">Browser Versions</h2>\n<ul dir=\"auto\">\n<li>Chromium 129.0.6668.29</li>\n<li>Mozilla Firefox 130.0</li>\n<li>WebKit 18.0</li>\n</ul>\n<p dir=\"auto\">This version was also tested against the following stable channels:</p>\n<ul dir=\"auto\">\n<li>Google Chrome 128</li>\n<li>Microsoft Edge 128</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/@playwright%2Ftest/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/Microsoft/playwright/compare/3d2ffd0fe97f23f480092054da5928539a3c5beb...0cdbb11068f86671c05d57391ac3701610f853df\">See the full diff on Github</a>. The new version differs by more commits than we can show here.</p>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14673","RelatedDescription":"Closed or merged PR \"Update @playwright/test 1.47.1 → 1.48.0 (minor)\" (#14673)"},{"Id":"2588206036","IsPullRequest":true,"CreatedAt":"2024-10-15T10:28:34","Actor":"philipp-spiess","Number":"14671","RawContent":null,"Title":"Release v4.0.0-alpha.27","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14671","RelatedDescription":"Closed or merged PR \"Release v4.0.0-alpha.27\" (#14671)"},{"Id":"2588193711","IsPullRequest":true,"CreatedAt":"2024-10-15T09:39:05","Actor":"RobinMalfait","Number":"14670","RawContent":null,"Title":"Ensure `font-stretch` utilities only accepts positive integer bare values","State":"closed","Body":"This PR fixes an issue where bare values in the `font-stretch` utility such as `font-stretch-50.5%` compiled. But for bare values, we want these values to be positive integers only so that we don't have too many special characters.\n\nIf you want to use `50.5%`, you can still use `font-stretch-[50.5%]` as a utility.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14670","RelatedDescription":"Closed or merged PR \"Ensure `font-stretch` utilities only accepts positive integer bare values\" (#14670)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-10-18T03:30:25.7775942Z","RunDurationInMilliseconds":457}