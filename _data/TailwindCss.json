{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2879990363","IsPullRequest":false,"CreatedAt":"2025-02-26T02:37:57","Actor":"QadiymStewart","Number":"16814","RawContent":null,"Title":"Hover visiblity not working","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.9\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nSimple standard html \n\n\n**What browser are you using?**\n\nChrome, Firefox, Edge\n\n**What operating system are you using?**\n\nWindows 11\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/fiE9YSnMa9\n\n**Describe your issue**\n\nHover doesn't work with visiblity\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16814","RelatedDescription":"Open issue \"Hover visiblity not working\" (#16814)"},{"Id":"2878305989","IsPullRequest":false,"CreatedAt":"2025-02-26T01:23:19","Actor":"mattholy","Number":"16796","RawContent":null,"Title":"Upgrade to 4.x using @tailwindcss/upgrade breaks so many things","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv3.4.17 -> v4.0.8\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.2.0\n\n**What version of Node.js are you using?**\n\nv22.13.1\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nWindows WSL Ubuntu 22.04\n\n**Reproduction URL**\n\nWill make one later\n\n**Describe your issue**\n\nAfter running `npx @tailwindcss/upgrade`, I noticed that @tailwindcss/upgrade automatically changed the names of all Tailwind CSS classes.\n\nFor example:\n\n- `blur` was changed to `blur-sm`\n- `shadow` was changed to `shadow-sm`\n\nHowever, the real issue is that it not only changed Tailwind CSS classes but also modified every value of text variable in my `.vue` files, regardless of whether they were Tailwind CSS classes.\n \ne.g. A configurable item of ECharts called `trigger`, and the valid value is `blur`, but @tailwindcss/upgrade changed it to `blur-sm`\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16796","RelatedDescription":"Closed issue \"Upgrade to 4.x using @tailwindcss/upgrade breaks so many things\" (#16796)"},{"Id":"2879843552","IsPullRequest":false,"CreatedAt":"2025-02-26T00:51:09","Actor":"nrthbound","Number":"16813","RawContent":null,"Title":"@theme breaks all classes on brand new Sveltekit app.","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nTailwind v4.0.9\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite v6.2.0, Svelte v5.20.4, Tailwindcss/Vite v4.0.9 \n\n**What version of Node.js are you using?**\n\nv23.3.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS & Windows (tested on both)\n\n**Reproduction URL**\n\nNote: The reproduction link works fine. \nhttps://play.tailwindcss.com/ZZyTepKxVV\n\nGithub Repo\nhttps://github.com/nrthbound/recipe-ui\n\n**Describe your issue**\n\nUsing Sveltes recommended setup process:\n```\nnpx sv create myapp\ncd myapp\nnpm install\nnpm run dev\n```\nChoices:\n- Sveltekit Minimal\n- Yes, using Typescript syntax\n- Add: Tailwindcss\n\nIn my `app.css`, under the `@import 'tailwindcss'` line, I've added\n```css\n@theme {\n  --color-peach-500: #FCB660;\n}\n```\nand it breaks every class, thus breaking the layout. I don't get any errors in the terminal while `npm run dev` is running. It seems to work fine using Tailwind Play. Even if I remove the `--color-peach-500: #FCB660` line and just leave `@theme {}`, it still causes all the styling to break. Apologies if I didn't provide enough.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16813","RelatedDescription":"Closed issue \"@theme breaks all classes on brand new Sveltekit app.\" (#16813)"},{"Id":"2879135900","IsPullRequest":true,"CreatedAt":"2025-02-25T21:12:14","Actor":"benface","Number":"16806","RawContent":null,"Title":"Fix link in CHANGELOG.md","State":"closed","Body":"The proper PR for this changelog entry is #16800.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16806","RelatedDescription":"Closed or merged PR \"Fix link in CHANGELOG.md\" (#16806)"},{"Id":"2879486408","IsPullRequest":false,"CreatedAt":"2025-02-25T20:23:33","Actor":"medbenmakhlouf","Number":"16810","RawContent":null,"Title":"!important Not Applied in Custom Tailwind @utility in Angular","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.9\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nAngular 19.1.8\n\n**What version of Node.js are you using?**\n\nFor example: v22.14.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nN/A\n\n**Describe your issue**\n\nWhen defining a custom Tailwind utility using @utility, adding ! as a prefix (e.g., !ion-opacity-0) does not generate the expected CSS with the !important flag.\n\n``` css\n\n/* Add application styles & imports to this file! */\n@import 'tailwindcss';\n\n@utility ion-opacity-* {\n  --opacity: --value(integer);\n}\n\n```\n\n``` ts\n@Component({\n  selector: 'app-root',\n  template: `\n    <h1 class=\"ion-opacity-0!\">Hello from {{ name }}!</h1>\n    <!-- Expected: CSS should be generated with !important -->\n    <a target=\"_blank\" href=\"https://angular.dev/overview\">\n      Learn more about Angular\n    </a>\n  `,\n})\nexport class App {\n  name = 'Angular';\n}\n\n```\n\nObserve that the generated CSS does not include the !important flag when using ion-opacity-0!.\n\n**Expected Behavior**\nThe ! prefix should apply the !important flag to the generated CSS rule, ensuring higher specificity.\n\n**Actual Behavior**\nThe generated CSS does not include !important, even when explicitly using the ! prefix in the class.\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16810","RelatedDescription":"Open issue \"!important Not Applied in Custom Tailwind @utility in Angular\" (#16810)"},{"Id":"2879352470","IsPullRequest":false,"CreatedAt":"2025-02-25T19:35:27","Actor":"cpt-n3mo","Number":"16808","RawContent":null,"Title":"vue 3 & tailwindcss v4 @theme not working","State":"closed","Body":"Using a clean Vue 3 project then  adding tailwind to vite, adding `@import \"tailwindcss\" ` to css file.\nthen importing it into  `main.ts`.\n\nThis makes tailwindcss work like a charm,\nbut when one uses `@theme` then tailwindcss stops working completely.\n\n`/public/css/tailwindcss.css`\n```css\n@import \"tailwindcss\"\n@theme{\n  --color-primary: var(--color-green-600);\n}\n```\n\nwhen creating a second css file then doing the same as above will make tailwindcss work again. but the custom `@theme` is not applied at all\n\n `/public/css/custom_theme.css`\n```css\n@import \"tailwindcss\"\n@theme{\n  --color-primary: var(--color-green-600);\n}\n```\n\nAny ideas on why this happens..\nI get no errors in console, not in browser nor on build.\n\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16808","RelatedDescription":"Closed issue \"vue 3 & tailwindcss v4 @theme not working\" (#16808)"},{"Id":"2878873918","IsPullRequest":true,"CreatedAt":"2025-02-25T16:33:28","Actor":"philipp-spiess","Number":"16804","RawContent":null,"Title":"Prepare v4.0.9 release","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16804","RelatedDescription":"Closed or merged PR \"Prepare v4.0.9 release\" (#16804)"},{"Id":"2878526851","IsPullRequest":false,"CreatedAt":"2025-02-25T16:00:57","Actor":"saadeghi","Number":"16799","RawContent":null,"Title":"Incorrect rendering of `:has()` and `:not()` selectors since `4.0.7`","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.7 and v4.0.8  \n(It was working correctly in `4.0.6`)\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: Vite 6\n\n**Reproduction URL**\n\nhttps://github.com/saadeghi/tw-has-bug\n\n**Describe your issue**\nPlugin:\n```js\nexport default ({ addComponents }) => {\n  addComponents({\n    \".parent-bug\": {\n      \"&:has(.child:nth-child(2))\": {\n        background: \"green\",\n      },\n    },\n    \".empty-has-bug\": {\n      \"&:has(:nth-child(2))\": {\n        background: \"yellow\",\n      },\n    },\n    \".empty-not-bug\": {\n      \"&:not(:nth-child(1))\": {\n        background: \"blue\",\n      },\n    },\n  });\n};\n```\nexpected output:\n```css\n.parent-bug {\n  &:has(.child:nth-child(2)) {\n    background: green;\n  }\n}\n\n.empty-has-bug {\n  &:has(:nth-child(2)) {\n    background: yellow;\n  }\n}\n\n.empty-not-bug {\n  &:not(:nth-child(1)) {\n    background: blue;\n  }\n}\n```\ngenerated style in v4.0.7 and v4.0.8\n```css\n.parent-bug {\n  &:has():nth-child(2) {\n    background: green;\n  }\n}\n\n.empty-has-bug {\n  &:has():nth-child(2) {\n    background: yellow;\n  }\n}\n\n.empty-not-bug {\n  &:not():nth-child(1) {\n    background: blue;\n  }\n}\n```\n\nThe first 2 selectors were working correctly in `4.0.6`.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16799","RelatedDescription":"Closed issue \"Incorrect rendering of `:has()` and `:not()` selectors since `4.0.7`\" (#16799)"},{"Id":"2878786002","IsPullRequest":true,"CreatedAt":"2025-02-25T16:00:55","Actor":"philipp-spiess","Number":"16802","RawContent":null,"Title":"Ensure nested functions in selectors used with JavaScript plugins are not truncated","State":"closed","Body":"Fixes #16799\r\n\r\nThis was caused by a wrong condition in the CSS value parser that put child function arguments into the parent function by accident.\r\n\r\n## Test plan\r\n\r\n- Added a unit test to guard against regressions\r\n- Validated against the repro:  \r\n     <img width=\"914\" alt=\"Screenshot 2025-02-25 at 16 31 14\" src=\"https://github.com/user-attachments/assets/f5fdf2e7-9c1b-4b04-89a8-1fa78a27f0f5\" />\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16802","RelatedDescription":"Closed or merged PR \"Ensure nested functions in selectors used with JavaScript plugins are not truncated\" (#16802)"},{"Id":"2878549062","IsPullRequest":true,"CreatedAt":"2025-02-25T15:07:16","Actor":"philipp-spiess","Number":"16800","RawContent":null,"Title":"Handle BOM","State":"closed","Body":"Resolves #15662 \r\nResolves #15467\r\n\r\n## Test plan\r\n\r\nAdded integration tests for upgrade tooling (which already worked surprisingly?) and CLI.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16800","RelatedDescription":"Closed or merged PR \"Handle BOM\" (#16800)"},{"Id":"2876070849","IsPullRequest":false,"CreatedAt":"2025-02-25T14:59:44","Actor":"aaronadamsCA","Number":"16785","RawContent":null,"Title":"4.0.8 + Vite + Storybook = new crash","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.8\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nStorybook v8.5.8\nVite v5.4.14\n\n**What version of Node.js are you using?**\n\nNode.js v23.8.0\n\n**What operating system are you using?**\n\nUbuntu 24.04.1 LTS\n\n**Reproduction URL**\n\nDon't think you need one yet, can put one together if it's helpful.\n\n**Describe your issue**\n\n(This is not the same as #16751, which is about `package.json` CJS compatibility.)\n\nJust reporting a new crash when using the Vite plugin with Storybook:\n\n```\nError: ENOENT: no such file or directory, stat 'SOME_PATH/iframe.html'\n```\n\nI'm guessing #16780 may fix it.\n\nLMK if you need help putting together an integration test fixture for Storybook Vite, I think it would be worthwhile.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16785","RelatedDescription":"Closed issue \"4.0.8 + Vite + Storybook = new crash\" (#16785)"},{"Id":"2878554651","IsPullRequest":false,"CreatedAt":"2025-02-25T14:20:58","Actor":"Stephan-MC","Number":"16801","RawContent":null,"Title":"Tailwindcss classes not generated when used with angular class binding.","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\nv4.0.8\n\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\nangular 19.1.7, postcss 8.5.3\n\n\n**What version of Node.js are you using?**\nnode 23.8.0\n\n**What browser are you using?**\nMicrosoft Edge\n\n**What operating system are you using?**\nLinux\n\n**Reproduction URL**\nN/A\n\n**Describe your issue**\n```typescript\nimport { NgClass } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, input } from '@angular/core';\n\n@Component({\n  selector: 'app-button, [app-button]',\n  imports: [NgClass],\n  templateUrl: './button.component.html',\n  styleUrl: './button.component.scss',\n  host: {\n    '[attr.role]': \"'button'\",\n    '[attr.variant]': 'variant()',\n    '[ngClass]': `{\"variant\": variant(), \"no-variant\": !variant() }`,\n    '[class]': '\"bg-gradient-to-b px-6 py-3 rounded-3xl from-5%\"',\n    '[class.from-secondary-light]': `variant() === 'secondary'`,  // tailwindcss class not generated\n    '[class.to-secondary]': `variant() === 'secondary'`,   // tailwind class not generated\n    '[class.from-5%]': `variant() === 'secondary'`,   // tailiwind class not generated\n    '[class.from-1%]': `variant() === 'primary'`,    // tailwind class not generated\n    '[class.from-light-blue]': `variant() === 'primary'`,  // tailiwind class not generated\n    '[class.to-primary]': `variant() === 'primary'`,  // tailwind class not generate\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ButtonComponent {\n  variant = input<'primary' | 'secondary'>('secondary');\n\n  /** The tailwindcss color to use as button shadow */\n  shadow = input<string>('blue-500');\n\n  /** The tailwindcss color to use as button background */\n  background = input<string>('blue-600');\n}\n\n```\n\nAs shown on the piece of code above, any tailwindcss classes used with angular class binding ```[class.xxx-xxx]``` are not generated.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16801","RelatedDescription":"Open issue \"Tailwindcss classes not generated when used with angular class binding.\" (#16801)"},{"Id":"2878482605","IsPullRequest":false,"CreatedAt":"2025-02-25T14:03:07","Actor":"niels-k-86","Number":"16797","RawContent":null,"Title":"Name clashing between --(text-)color and --text (font-size) variables","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.8\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 15.1.7\n\n**What version of Node.js are you using?**\n\nv20.0.0\n\n**What browser are you using?**\n\nAll of them\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/ADM8EOMQFs\n\n**Describe your issue**\n\nThe `--text-*` (font-size) and `--(text-)color-*` spaces clash when generating utility classes. Adding both a `--color-example` and a `--text-example` variable will generate a utility class with an invalid CSS variable:\n\n```css\n.text-body {\n  font-size: var(--text-example);\n}\n\n:root {\n  --text-example: 24px --text-color-example: #0000ff;\n}\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16797","RelatedDescription":"Closed issue \"Name clashing between --(text-)color and --text (font-size) variables\" (#16797)"},{"Id":"2878025741","IsPullRequest":false,"CreatedAt":"2025-02-25T11:20:12","Actor":"Navidtm","Number":"16794","RawContent":null,"Title":"!z-40 not working in Tailwind CSS v4","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.8\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n[tailwind play](https://play.tailwindcss.com)\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nLinux\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/QP00crgkmX\n\n**Describe your issue**\n\nUsing `!z-40` in Tailwind CSS v4 does not apply the expected\n\nExpected\n```css\n.\\!z-40 {\n  z-index: 40 !important;\n}\n```\n\nActual\n```css\n.\\!z-40 {\n  z-index: 40;\n}\n```\n\nEven testing in [Tailwind Play](https://play.tailwindcss.com/) does not produce the correct result.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16794","RelatedDescription":"Closed issue \"!z-40 not working in Tailwind CSS v4\" (#16794)"},{"Id":"2878047598","IsPullRequest":true,"CreatedAt":"2025-02-25T11:20:11","Actor":"philipp-spiess","Number":"16795","RawContent":null,"Title":"Fix `z-*!` utilities","State":"closed","Body":"Closes #16794\r\n\r\nDe Morgan striking 😬 \r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16795","RelatedDescription":"Closed or merged PR \"Fix `z-*!` utilities\" (#16795)"},{"Id":"2877847033","IsPullRequest":false,"CreatedAt":"2025-02-25T10:42:18","Actor":"simPod","Number":"16792","RawContent":null,"Title":"TW 4 with Vite ignores SCSS","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.8\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.2.0\n\n**What version of Node.js are you using?**\n\nv22\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nMacos\n\n**Reproduction URL**\n\nhttps://github.com/simPod/tw-vite-repro\n\n**Describe your issue**\n\nI have created\n\nindex.css\n\n```css\n@import \"tailwindcss\";\n\nhtml {\n  color: red;\n  @apply bg-gray-900 text-gray-100;\n}\n\n```\n\nindex.scss\n\n```scss\n@import \"tailwindcss\";\n\nhtml {\n  color: green;\n  @apply bg-yellow-500 text-black;\n}\n\n```\n\nImported both files in index.html.\n\n`npm run dev`\n\nyou can see TW styles from css files are applied while from scss file are not. All other styles are applied.\n\n![Image](https://github.com/user-attachments/assets/ffb589eb-6e3f-4a64-832b-a67be972e809)\n\nTailwind vite plugin somehow ignores scss files.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16792","RelatedDescription":"Closed issue \"TW 4 with Vite ignores SCSS\" (#16792)"},{"Id":"2874696841","IsPullRequest":true,"CreatedAt":"2025-02-25T10:36:43","Actor":"philipp-spiess","Number":"16774","RawContent":null,"Title":"Make `@reference` emit variable fallbacks instead of CSS variable declarations","State":"closed","Body":"Fixes #16725\r\n\r\nWhen using `@reference \"tailwindcss\";` inside a separate CSS root (e.g. Svelte `<style>` components, CSS modules, etc.), we have no guarantee that the CSS variables will be defined in the main stylesheet (or if there even is one). To work around potential issues with this we decided in #16676 that we would emit all used CSS variables from the `@theme` inside the `@reference` block.\r\n\r\nHowever, this is not only a bit surprising but also unexpected in CSS modules and Next.js that **requires CSS module files to only create scope-able declarations**. To fix this issue, we decided to not emit CSS variables but instead ensure all `var(…)` calls we create for theme values in reference mode will simply have their fallback value added.\r\n\r\nThis ensures styles work as-expected even if the root Tailwind file does not pick up the variable as being used or _if you don't add a root at all_. Furthermore we do not duplicate any variable declarations across your stylesheets and you still have the ability to change variables at runtime.\r\n\r\n## Test plan\r\n\r\n- Updated snapshots everywhere (see diff)\r\n- New Next.js CSS modules integration test","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16774","RelatedDescription":"Closed or merged PR \"Make `@reference` emit variable fallbacks instead of CSS variable declarations\" (#16774)"},{"Id":"2875548598","IsPullRequest":true,"CreatedAt":"2025-02-25T10:29:58","Actor":"philipp-spiess","Number":"16780","RawContent":null,"Title":"Vite: Don't crash with virtual module dependencies","State":"closed","Body":"Fixes #16732\r\n\r\nIf we can not get the mtime from a file, chances are that the resource is a virtual module. This is perfectly legit and we can fall back to what we did before the changes in `4.0.8` (which is to rebuild the root every time a change contains a dependency like that).\r\n\r\n## Test plan\r\n\r\nAdded a test to mimic the setup from the repor in #16732. Also ensured the repro now passes:\r\n\r\n<img width=\"1278\" alt=\"Screenshot 2025-02-24 at 17 29 38\" src=\"https://github.com/user-attachments/assets/d111273d-579f-44c2-82f5-aa32d6a1879a\" />\r\n\r\nNote that importing virtual modules directly in CSS does not work as the resolver we use does not resolve against the Vite runtime it seems. This is unrelated to the regression added in `4.0.8` though and something to look into in the future.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16780","RelatedDescription":"Closed or merged PR \"Vite: Don't crash with virtual module dependencies\" (#16780)"},{"Id":"2876379779","IsPullRequest":false,"CreatedAt":"2025-02-25T08:02:38","Actor":"tol-is","Number":"16786","RawContent":null,"Title":"NextJs 13 / Tw4 - Utilities not applied","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.8\n\n**What build tool\n\nFor example: PostCss, Next.js 13.5.3\n\n**What version of Node.js are you using?**\n\nv18.20.4\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://github.com/tol-is/tw4-next13\n\n**Describe your issue**\n\nIt appears that preflight and base theme is indeed loaded, but utilities are not applied. I suppose it fails to parse the content directory.\n\n<img width=\"1511\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/56b35063-84f6-4ff1-aac5-f4519bd84f6e\" />\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16786","RelatedDescription":"Closed issue \"NextJs 13 / Tw4 - Utilities not applied\" (#16786)"},{"Id":"2876967926","IsPullRequest":false,"CreatedAt":"2025-02-25T04:58:50","Actor":"borama","Number":"16790","RawContent":null,"Title":"[v4] Slim template regression - 2xl variant classes not extracted","State":"open","Body":"There is a regression in v4 in Slim templates - the 2xl variant classes are not extracted from source files.\n\n**What version of Tailwind CSS are you using?**\n\n4.0.8\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\ntailwindcss CLI\n\n**What version of Node.js are you using?**\n\nn/a\n\n**What browser are you using?**\n\nn/a\n\n**What operating system are you using?**\n\nLinux\n\n**Reproduction URL**\n\nhttps://github.com/borama/tailwind4-slim-issue\n\n**Describe your issue**\n\nThere is a regression similar to #14005 but present in Tailwind v4 (4.0.8). The `2xl:` variant classes are not extracted from sources by the Tailwind CLI.\n\nSample project:\n\n```\n$ tree\n.\n├── sample.slim\n├── tw3.config.js\n├── tw3.css\n└── tw4.css\n\n$ head *\n==> sample.slim <==\n.bg-blue-100.2xl:bg-red-100\n ' Hi!\n\n==> tw3.config.js <==\nmodule.exports = {\n  content: [\"sample.slim\"]\n}\n\n==> tw3.css <==\n@import \"tailwindcss/base\";\n@import \"tailwindcss/components\";\n@import \"tailwindcss/utilities\";\n\n==> tw4.css <==\n@import \"tailwindcss\" source(none);\n@source \"sample.slim\";\n```\n\n#### 1. This works OK in v3 (tailwindcss v3.4.17):\n\n```\n$ tailwindcss -i tw3.css -c tw3.config.js\n\n...\n.bg-blue-100 {\n  --tw-bg-opacity: 1;\n  background-color: rgb(219 234 254 / var(--tw-bg-opacity, 1));\n}\n\n@media (min-width: 1536px) {\n  .\\32xl\\:bg-red-100 {\n    --tw-bg-opacity: 1;\n    background-color: rgb(254 226 226 / var(--tw-bg-opacity, 1));\n  }\n}\n```\n\n#### 2. The same Slim template does NOT work in v4:\n\n```\n$ tailwindcss -i tw4.css\n\n...\n@layer utilities;\n\n≈ tailwindcss v4.0.8\n\nDone in 20ms\n```\n\nI.e. not only it does not extract the `2xl:bg-red-100` class, it ignores all classes in the Slim template on the same line.\n\n#### 3. When the `2xl:` class is the first on the line, it works again\n\nInterestingly, when I swap the order of the classes, making the `2xl:` class be the first on the line, it starts working:\n\n```\n$ cat sample.slim\n.2xl:bg-red-100.bg-blue-100\n ' Hi!\n\n$ tailwindcss -i tw4.css\n\n...\n@layer utilities {\n  .bg-blue-100 {\n    background-color: var(--color-blue-100);\n  }\n  .\\32 xl\\:bg-red-100 {\n    @media (width >= 96rem) {\n      background-color: var(--color-red-100);\n    }\n  }\n}\n\n≈ tailwindcss v4.0.8\n\nDone in 20ms\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16790","RelatedDescription":"Open issue \"[v4] Slim template regression - 2xl variant classes not extracted\" (#16790)"},{"Id":"2876775069","IsPullRequest":false,"CreatedAt":"2025-02-25T03:49:42","Actor":"Ekefrancisokechukwu","Number":"16789","RawContent":null,"Title":"Documentation initial  Flickering Theme State  on refresh","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: postcss-cli 11.0.0, Next.js 15.1.7, Vite 6.1.0\n\n**What version of Node.js are you using?**\n\nFor example: v20.0.0\n\n**What browser are you using?**\n\nFor example: Chrome, Safari, or N/A\n\n**What operating system are you using?**\n\nFor example: macOS, Windows\n\n**Reproduction URL**\n\nA Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\n\nA reproduction is **required** when filing an issue — any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.\n\n**Describe your issue**\n\nDescribe the problem you're seeing, any important steps to reproduce and what behavior you expect instead.\n\nhttps://github.com/user-attachments/assets/36f22cd5-1d79-44db-8f50-55199d6984d8\n\nSame thing happens in Chrome browser also","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16789","RelatedDescription":"Closed issue \"Documentation initial  Flickering Theme State  on refresh\" (#16789)"},{"Id":"2875975580","IsPullRequest":false,"CreatedAt":"2025-02-24T19:36:28","Actor":"Siphonophora","Number":"16784","RawContent":null,"Title":"npx watch is case sensitve","State":"open","Body":"Version 4.0.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nCLI only `npx tailwindcss`\n\n**What version of Node.js are you using?**\n\nv16.20.2\n\n**What browser are you using?**\n\nChrome\n\n\n\n\n\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\nhttps://github.com/Siphonophora/tailwind-watch-case-sensitive-repo\n\n**Describe your issue**\n\nWhen running the --watch command, it does not rebuild when the input file string has casing that is different than the actual casing. So, case insensitivity of windows paths is being only partially honored. Feels like it would be fine if this generated an error, but it appearing to build but failing was pretty confusing.\n\n* This has paths with the correct casing. Works as expected `npx tailwindcss -i ./styles/site.css -o ./build/output.css --watch`\n* When there are casing issues, including the examples below, the output is generated once. File changes still lead to `Done in ##ms` messages, even when the input with the casing issue is what changed. However, output never changes after the initial run.\n    * `npx tailwindcss -i ./Styles/site.css -o ./build/output.css --watch`\n    * `npx tailwindcss -i ./styles/Site.css -o ./build/output.css --watch`\n* Casing issue on the output file path doesn't cause a problem\n    * `npx tailwindcss -i ./styles/site.css -o ./Build/output.css --watch`\n\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16784","RelatedDescription":"Open issue \"npx watch is case sensitve\" (#16784)"},{"Id":"2875474095","IsPullRequest":false,"CreatedAt":"2025-02-24T16:08:05","Actor":"subproject22","Number":"16777","RawContent":null,"Title":"Using background-position instead of background-size","State":"closed","Body":"In v4 using custom size for background, like `bg-[4px_4px]` generates `background-position` instead.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16777","RelatedDescription":"Closed issue \"Using background-position instead of background-size\" (#16777)"},{"Id":"2873176856","IsPullRequest":false,"CreatedAt":"2025-02-24T15:08:08","Actor":"amirsinaa","Number":"16763","RawContent":null,"Title":"Infinite Compile Loop When Using `next-pwa` (service worker) with TailwindCSS v4","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 15.1.7\n\n**What version of Node.js are you using?**\n\nv22.12.0\n\n**What browser are you using?**\n\nFirefox and Chrome\n\n**What operating system are you using?**\n\nmacOS and Linux\n\n**Reproduction URL**\n\nGithub : https://github.com/amirsinaa/tailwindcss4-sw-bug\nCodesandbox : https://codesandbox.io/p/github/amirsinaa/tailwindcss4-sw-bug/\n\n--\n\n**Description:**  \n\nHello,  \nI've recently upgraded TailwindCSS in my project from version 3 to version 4 and followed all necessary migration steps. However, I've encountered an issue when using `next-pwa`—or more specifically, service workers—along with the new Tailwind setup.  \n\nWhen I export my Next.js configuration with `next-pwa`, it results in an infinite compilation loop, as shown below:  \n\n```\n✓ Compiled in 613ms (1705 modules)  \n✓ Compiled in 210ms (1705 modules)  \n✓ Compiled in 224ms (1705 modules)  \n✓ Compiled in 225ms (1705 modules)  \n✓ Compiled in 213ms (1705 modules)  \n✓ Compiled in 240ms (1705 modules)  \n✓ Compiled in 215ms (1705 modules)  \n✓ Compiled in 212ms (1705 modules)  \n✓ Compiled in 212ms (1705 modules)  \n✓ Compiled in 205ms (1705 modules)  \n✓ Compiled in 206ms (1705 modules)  \n✓ Compiled in 210ms (1705 modules)  \n✓ Compiled in 205ms (1705 modules)  \n✓ Compiled in 206ms (1705 modules)  \n...\n... and so on.\n```  \n\nHowever, if I export my Next.js config **without** `next-pwa` and do not register any service worker, everything works fine.  \n\nI dug deeper into this issue and found that when the service worker is enabled, removing the `global.css` file (which contains all the new Tailwind `@theme` directives and imports) from the root layout eliminates the problem. This suggests that there might be a conflict between service workers and the Tailwind PostCSS plugin when used together.  \n\n**Additional Notes:**  \n- I have tested this scenario with both `next-pwa` and `@serwist`, and the issue does not seem to be related to the tool used for generating the service worker.  \n\nAny insights or potential fixes would be greatly appreciated!\n\nThanks!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16763","RelatedDescription":"Closed issue \"Infinite Compile Loop When Using `next-pwa` (service worker) with TailwindCSS v4\" (#16763)"},{"Id":"2874707958","IsPullRequest":true,"CreatedAt":"2025-02-24T12:21:52","Actor":"depfu[bot]","Number":"16775","RawContent":null,"Title":"Update @types/react 19.0.8 → 19.0.10 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​types/react (19.0.8 → 19.0.10) · [Repo](https://github.com/DefinitelyTyped/DefinitelyTyped)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16775","RelatedDescription":"Closed or merged PR \"Update @types/react 19.0.8 → 19.0.10 (patch)\" (#16775)"},{"Id":"2874687148","IsPullRequest":true,"CreatedAt":"2025-02-24T12:06:25","Actor":"depfu[bot]","Number":"16773","RawContent":null,"Title":"Update @types/react-dom 19.0.3 → 19.0.4 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​types/react-dom (19.0.3 → 19.0.4) · [Repo](https://github.com/DefinitelyTyped/DefinitelyTyped)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16773","RelatedDescription":"Closed or merged PR \"Update @types/react-dom 19.0.3 → 19.0.4 (patch)\" (#16773)"},{"Id":"2874310303","IsPullRequest":false,"CreatedAt":"2025-02-24T10:09:41","Actor":"syahz","Number":"16767","RawContent":null,"Title":"issues with Tailwind CSS Spacing in Next.js 15 (Missing Classes in globals.css)","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\nv3.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\nNext.js 15.1.7\n\n**What version of Node.js are you using?**\nv20.0.0\n\n**What browser are you using?**\nBrave\n\n**What operating system are you using?**\nWindows\n\n\n**Describe your issue**\n\nI recently installed **Next.js 15** and **Tailwind CSS (Tailwind 3.4)**. After that, I installed **ShadCN** normally (without using the Canary version) since I'm still using Tailwind 3.4.\n\nHowever, I encountered an issue where some Tailwind classes do not apply correctly. For example, when I use py-4, there is no spacing, but **py-2** works fine. After investigating, I noticed that not all Tailwind CSS classes are included in **globals.css** in **Next.js 15**.\n\nHas anyone experienced this issue? How can I fix it and ensure that all Tailwind classes work as expected in Next.js 15?\n\nhere is if i using py-4 : [Py-4](https://i.sstatic.net/wjrVqOXY.png)\n\nHere is if using py-2 : [Py-2](https://i.sstatic.net/bm4NOaZU.png)\n\nnot just padding, font colors too, gap too\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16767","RelatedDescription":"Closed issue \"issues with Tailwind CSS Spacing in Next.js 15 (Missing Classes in globals.css)\" (#16767)"},{"Id":"2873736990","IsPullRequest":false,"CreatedAt":"2025-02-24T03:00:44","Actor":"borama","Number":"16765","RawContent":null,"Title":"@source directive does not glob across symlink directories","State":"open","Body":"The `@source` directive does not work when it contains a glob matching a symlink. It is a problem when we need to source a symlink directory that is versioned.\n\n**What version of Tailwind CSS are you using?**\n\n4.0.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nnone\n\n**What version of Node.js are you using?**\n\n23.8\n\n**What browser are you using?**\n\nn/a\n\n**What operating system are you using?**\n\nLinux\n\n**Reproduction URL**\n\nhttps://github.com/borama/tw4-symlink-glob\n\nReproduction steps:\n\n1. benchmark test - globbing a real directory name (works OK)\n\n```sh\n$ cat input.css\n@import \"tailwindcss\" source(none);\n@source \"ab*/*.html\";\n\n$ tree\n.\n├── abcd\n│   └── xyz.html\n└── input.css\n\n$ cat abcd/xyz.html\n<div class=\"bg-red-100\">Hi</div>\n\n$ tailwindcss -i input.css | grep bg-red-100\n≈ tailwindcss v4.0.7\n\nDone in 19ms\n  .bg-red-100 {\n# the class has been added\n```\n\n2. trying to glob a symlink name (does NOT work)\n\n```sh\n$ ln -s abcd efgh\n\n$ tree\n.\n├── abcd\n│   └── xyz.html\n├── efgh -> abcd\n└── input.css\n\n# amend input.css to glob the symlink instead\n$ cat input.css\n@import \"tailwindcss\" source(none);\n@source \"ef*/*.html\";\n\n$ tailwindcss -i input.css | grep bg-red-100\n≈ tailwindcss v4.0.7\n\nDone in 19ms\n# the class has not been added\n```\n\n**Describe your issue**\n\nWhen the glob pattern in the `@source` directive matches a directory name that is a symlink, Tailwind does not recognize it as a match and does not source the files inside it. This is a problem when a dependency that we want to source is versioned and symlinked (think `efgh-3.4.123` in the test above) and we don't want to update the source whenever we upgrade the dependency.\n\nMight be related to #16038 but I came across it in the context of ruby gems and this might be rather about the suffix `*` matching than symlinked directory traversal.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16765","RelatedDescription":"Open issue \"@source directive does not glob across symlink directories\" (#16765)"},{"Id":"2873338111","IsPullRequest":false,"CreatedAt":"2025-02-23T17:13:48","Actor":"wcshds","Number":"16764","RawContent":null,"Title":"When I modify a source file, Vite always reloads the page instead of using HMR.","State":"open","Body":"https://github.com/user-attachments/assets/f8a42db9-7fbc-4e4f-b31f-80e368f5adfb\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.8\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.1.1\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What browser are you using?**\n\nChrome and Firefox\n\n**What operating system are you using?**\n\nWSL\n\n**Reproduction URL**\n\nhttps://github.com/wcshds/nuxt-tailwind-source-reload-everytime\n\n**Describe your issue**\n\nI tried to use tailwind v4 in my Nuxt project. I use `@source` to explicitly register source path, but when I modify a source file, Vite always reloads the page instead of only using HMR.\n\n\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16764","RelatedDescription":"Open issue \"When I modify a source file, Vite always reloads the page instead of using HMR.\" (#16764)"},{"Id":"2873140165","IsPullRequest":false,"CreatedAt":"2025-02-23T11:59:10","Actor":"Sourav9063","Number":"16760","RawContent":null,"Title":"With Tailwind v4 HMR not working in server in NuxtJs","State":"open","Body":"[issue](https://github.com/nuxt/nuxt/issues/31096)\n\n### Environment\n\n```\n- Operating System: `Linux`\n- Node Version:     `v22.14.0`\n- Nuxt Version:     `3.15.4`\n- CLI Version:      `3.22.2`\n- Nitro Version:    `2.10.4`\n- Package Manager:  `yarn@1.22.22`\n- Builder:          `-`\n- User Config:      `compatibilityDate`, `devtools`, `css`, `vite`\n- Runtime Modules:  `-`\n- Build Modules:    `-`\n```\n\n### Reproduction\n\n Follow the official tailwind guide [https://tailwindcss.com/docs/installation/framework-guides/nuxt](https://tailwindcss.com/docs/installation/framework-guides/nuxt) \n\nhttps://stackblitz.com/edit/github-dye83azh?file=server%2Fapi%2Fhealth.js\n\n### Describe the bug\n\nWhile following this guide tailwind official guide [https://tailwindcss.com/docs/installation/framework-guides/nuxt](https://tailwindcss.com/docs/installation/framework-guides/nuxt)  setting up nuxt project, the client side work fine. But when any changes or any file save on the sever folder it gives error\n```\n{\n  \"statusCode\": 404,\n  \"statusMessage\": \"Cannot find any path matching /.\",\n  \"stack\": []\n}\n```\n\n\n![Image](https://github.com/user-attachments/assets/72349652-c2f2-4033-8a1b-98a695fddc3a)\nConsole\n```bash\nyarn dev\nyarn run v1.22.22\n$ nuxt dev\nNuxt 3.15.4 with Nitro 2.10.4                                                                         nuxi  5:25:52 PM\n                                                                                                            5:25:52 PM\n  ➜ Local:    http://localhost:3000/\n  ➜ Network:  use --host to expose\n\n  ➜ DevTools: press Shift + Alt + D in the browser (v1.7.0)                                                 5:25:54 PM\n\n✔ Vite client built in 25ms                                                                                5:25:54 PM\n✔ Vite server built in 393ms                                                                               5:25:55 PM\n✔ Nuxt Nitro server built in 484 ms                                                                  nitro 5:25:55 PM\nℹ Vite client warmed up in 2ms                                                                             5:25:55 PM\nℹ Vite server warmed up in 567ms                                                                           5:25:56 PM\nℹ page reload server/api/health.js                                                                         5:26:02 PM\n✔ Nuxt Nitro server built in 189 ms                                                                  nitro 5:26:02 PM\n✔ Vite server hmr 6 files in 13.597ms\n```\n\n### Additional context\n\n_No response_\n\n### Logs\n\n```shell-script\nyarn dev\nyarn run v1.22.22\n$ nuxt dev\nNuxt 3.15.4 with Nitro 2.10.4                                                                         nuxi  5:25:52 PM\n                                                                                                            5:25:52 PM\n  ➜ Local:    http://localhost:3000/\n  ➜ Network:  use --host to expose\n\n  ➜ DevTools: press Shift + Alt + D in the browser (v1.7.0)                                                 5:25:54 PM\n\n✔ Vite client built in 25ms                                                                                5:25:54 PM\n✔ Vite server built in 393ms                                                                               5:25:55 PM\n✔ Nuxt Nitro server built in 484 ms                                                                  nitro 5:25:55 PM\nℹ Vite client warmed up in 2ms                                                                             5:25:55 PM\nℹ Vite server warmed up in 567ms                                                                           5:25:56 PM\nℹ page reload server/api/health.js                                                                         5:26:02 PM\n✔ Nuxt Nitro server built in 189 ms                                                                  nitro 5:26:02 PM\n✔ Vite server hmr 6 files in 13.597ms\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16760","RelatedDescription":"Open issue \"With Tailwind v4 HMR not working in server in NuxtJs\" (#16760)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-02-26T03:30:27.5101095Z","RunDurationInMilliseconds":502}