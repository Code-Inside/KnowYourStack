{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2971049822","IsPullRequest":false,"CreatedAt":"2025-04-04T01:28:11","Actor":"markzalar","Number":"17542","RawContent":null,"Title":"Class not extracted when only occurrence is first element of Slim attribute array","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.2\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n@tailwindcss/cli\n\n**What version of Node.js are you using?**\n\nv22.10.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS 15\n\n**Reproduction URL**\n\nhttps://github.com/markzalar/tailwind-4.0.10-slim-first-in-array\n\n**Describe your issue**\n\nThis issue started happening in tailwindcss 4.0.10\n\nIf the only occurrence of a class is the first element of a Slim attribute array, the class doesn't get extracted. \n\nFor example, if I have the following slim code\n\n```slim\ndiv[\n  class=%w[bg-blue-500 w-10 h-10]\n]\ndiv[\n  class=%w[w-10 bg-green-500 h-10]\n]                \n```\n\nI would expect it to render as\n\n![Image](https://github.com/user-attachments/assets/d2c23b26-04e9-4e02-ac93-b215a52cdb68)\n\nbut if that's the only instance of `bg-blue-500` in the codebase it doesn't get extracted and the slim snippet above renders as\n\n![Image](https://github.com/user-attachments/assets/320c8ddc-6501-499b-b7b9-e8f03907ba5a)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17542","RelatedDescription":"Open issue \"Class not extracted when only occurrence is first element of Slim attribute array\" (#17542)"},{"Id":"2970541606","IsPullRequest":true,"CreatedAt":"2025-04-03T19:56:54","Actor":"depfu[bot]","Number":"17538","RawContent":null,"Title":"Update @playwright/test 1.51.0 → 1.51.1 (patch)","State":"open","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​playwright/test (1.51.0 → 1.51.1) · [Repo](https://github.com/Microsoft/playwright)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/microsoft/playwright/releases/tag/v1.51.1\">1.51.1</a></h4>\n\n<blockquote><h3 dir=\"auto\">Highlights</h3>\n<p dir=\"auto\"><a href=\"https://bounce.depfu.com/github.com/microsoft/playwright/issues/35093\">#35093</a> - [Regression]: TimeoutOverflowWarning: 2149630296.634 does not fit into a 32-bit signed integer<br>\n<a href=\"https://bounce.depfu.com/github.com/microsoft/playwright/issues/35138\">#35138</a> - [Regression]: TypeError: Cannot read properties of undefined (reading 'expectInfo')</p>\n<h2 dir=\"auto\">Browser Versions</h2>\n<ul dir=\"auto\">\n<li>Chromium 134.0.6998.35</li>\n<li>Mozilla Firefox 135.0</li>\n<li>WebKit 18.4</li>\n</ul>\n<p dir=\"auto\">This version was also tested against the following stable channels:</p>\n<ul dir=\"auto\">\n<li>Google Chrome 133</li>\n<li>Microsoft Edge 133</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/@playwright%2Ftest/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/Microsoft/playwright/compare/3707a93754368ec1e0e2876767e8a9209f036f8a...0ad26b38902449d9347536c97a34cc5dedbec729\">See the full diff on Github</a>. The new version differs by 3 commits:</p>\n<ul>\n<li><a href=\"https://github.com/microsoft/playwright/commit/0ad26b38902449d9347536c97a34cc5dedbec729\"><code>chore: mark v1.51.1 (#35098)</code></a></li>\n<li><a href=\"https://github.com/microsoft/playwright/commit/25c0deb74cc899913c823160bf20d552caccc9e1\"><code>cherry-pick(#35149): fix(expect): properly handle custom asymmetric matcher regression (#35167)</code></a></li>\n<li><a href=\"https://github.com/microsoft/playwright/commit/4ecf5e099c4f6481657b10d5aa0024974d1c9d23\"><code>cherry-pick(#35096): chore: do not use |0 for rounding large numbers</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17538","RelatedDescription":"Open PR \"Update @playwright/test 1.51.0 → 1.51.1 (patch)\" (#17538)"},{"Id":"2966807777","IsPullRequest":false,"CreatedAt":"2025-04-03T16:50:17","Actor":"rasmus-dybmose","Number":"17512","RawContent":null,"Title":"Missing global.css file when using Tailwindcss Vite plugin","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nQwik 1.13.0, Vite 5.3.5\n\n**What version of Node.js are you using?**\n\nv23.8.0\n\n**What browser are you using?**\n\nEdge\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n\nhttps://github.com/[rasmus-dybmose/qwik-tailwindcss](https://github.com/rasmus-dybmose/qwik-tailwindcss)\n\n**Describe your issue**\n\nTailwindcss is not working when using the latest version (v4.1.1) if I change the version to v4.0.17 (fixed) it works again.\n\nIt-looks like the browser can't fetch the ./src/global.css file, it dissaperes if I add the tailwindcss plugin to vite\n\nhttps://github.com/user-attachments/assets/e008d5eb-f92b-4b96-9fc1-27e8b15235ee","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17512","RelatedDescription":"Closed issue \"Missing global.css file when using Tailwindcss Vite plugin\" (#17512)"},{"Id":"2970145037","IsPullRequest":true,"CreatedAt":"2025-04-03T16:50:16","Actor":"philipp-spiess","Number":"17533","RawContent":null,"Title":"Vite: Don't register the current CSS file as a dependency on itself","State":"closed","Body":"Closes #17512\r\n\r\nOne of the changes of the Oxide API in 4.1 is that it now emits the input CSS file itself as a dependency. This was fine in most of our testing but it turns out that certain integrations (in this case a Qwik project) don't like this and will silently crash with no CSS file being added anymore.\r\n\r\nThis PR fixes this by making sure we don't add the input file as a dependency on itself and also adds an integration test to ensure this won't regress again.\r\n\r\n## Test plan\r\n\r\n- Tested with the repro provided in #17512\r\n- Added a minimal integration test based on that reproduction that I also validated will _fail_, if the fix is reverted.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17533","RelatedDescription":"Closed or merged PR \"Vite: Don't register the current CSS file as a dependency on itself\" (#17533)"},{"Id":"2970091892","IsPullRequest":false,"CreatedAt":"2025-04-03T16:12:27","Actor":"geomaster","Number":"17532","RawContent":null,"Title":"Deleting an SVG asset causes a Vite HMR crash while processing `@import \"tailwindcss\"`","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\ntailwindcss v4.1.1, @tailwindcss/vite v4.1.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite v6.2.5\n\n**What version of Node.js are you using?**\n\nv22.13.1\n\n**What browser are you using?**\n\nN/A (Issue occurs in Vite dev server during HMR)\n\n**What operating system are you using?**\n\nLinux 6.13.7-arch1-1 #1 SMP PREEMPT_DYNAMIC Thu, 13 Mar 2025 18:12:00 +0000 x86_64 GNU/Linux\n\n**Reproduction URL**\n\nhttps://github.com/geomaster/vite-tailwind-v4-svg-delete-repro\n\n**Describe your issue**\n\nWhen using Tailwind CSS v4 via `@import \"tailwindcss\";` in `index.css` and the `@tailwindcss/vite` plugin, the Vite development server crashes during Hot Module Replacement (HMR) if an asset (e.g., an SVG imported via standard `?url` import) is deleted.\n\n**Steps to Reproduce:**\n\n1.  Clone the reproduction repository: `git clone https://github.com/geomaster/vite-tailwind-v4-svg-delete-repro`\n2.  Install dependencies: `pnpm install`\n3.  Start the Vite dev server: `pnpm dev`\n4.  In **another terminal**, run the following command while the dev server is running:\n    ```bash\n    sed -i '/import iconUrl from/d' src/App.tsx && sed -i '/<img src={iconUrl}/d' src/App.tsx && rm src/assets/icon.svg && echo \"Triggered bug sequence.\"\n    ```\n    *(This removes the JS import, the usage in JSX, and then deletes the SVG file)*\n5.  Observe the terminal running `pnpm dev`.\n\n**Observed Behavior:**\n\nThe Vite dev server crashes with an `ENOENT: no such file or directory` error trying to open the deleted SVG file. The error trace points to the `vite:css-analysis` plugin and mentions the `src/index.css` file, even though `src/index.css` does not directly reference the SVG via `url()`:\n\n```\n[plugin:vite:css-analysis] ENOENT: no such file or directory, open '/home/geomaster/Projects/test/vite-tailwind4-asset-delete-repro/src/assets/icon.svg'\n\n/home/geomaster/Projects/test/vite-tailwind4-asset-delete-repro/src/index.css\n\n    at async open (node:internal/fs/promises:638:25)\n    at async Object.readFile (node:internal/fs/promises:1242:14)\n    at async fileToDevUrl (file:///home/geomaster/Projects/test/vite-tailwind4-asset-delete-repro/node_modules/.pnpm/vite@6.2.5_jiti@2.4.2_lightningcss@1.29.2/node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:13597:21)\n    at async TransformPluginContext.transform (file:///home/geomaster/Projects/test/vite-tailwind4-asset-delete-repro/node_modules/.pnpm/vite@6.2.5_jiti@2.4.2_lightningcss@1.29.2/node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:48876:27)\n    at async EnvironmentPluginContainer.transform (file:///home/geomaster/Projects/test/vite-tailwind4-asset-delete-repro/node_modules/.pnpm/vite@6.2.5_jiti@2.4.2_lightningcss@1.29.2/node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:47680:18)\n    at async loadAndTransform (file:///home/geomaster/Projects/test/vite-tailwind4-asset-delete-repro/node_modules/.pnpm/vite@6.2.5_jiti@2.4.2_lightningcss@1.29.2/node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:41327:27)\n    at async viteTransformMiddleware (file:///home/geomaster/Projects/test/vite-tailwind4-asset-delete-repro/node_modules/.pnpm/vite@6.2.5_jiti@2.4.2_lightningcss@1.29.2/node_modules/vite/dist/node/chunks/dep-Pj_jxEzN.js:42807:24\n```\n\n**Expected Behavior:**\n\nThe Vite dev server should handle the file deletion gracefully via HMR without crashing. The component using the deleted asset should update (likely showing an error or missing image in the browser), but the server itself should remain running.\n\n**Important Notes:**\n\n*   This crash **does not** occur if the `@import \"tailwindcss\";` line is removed from `src/index.css`.\n*   This crash **does not** occur when using Tailwind CSS v3 (with `@tailwind` directives and the PostCSS plugin setup) under the same conditions.\n*   The issue seems independent of how the SVG is imported (tested with standard `?url` import here, originally found with `vite-plugin-svgr`).","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17532","RelatedDescription":"Open issue \"Deleting an SVG asset causes a Vite HMR crash while processing `@import \"tailwindcss\"`\" (#17532)"},{"Id":"2969951317","IsPullRequest":true,"CreatedAt":"2025-04-03T15:36:42","Actor":"RobinMalfait","Number":"17530","RawContent":null,"Title":"Prepare release v4.1.2","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17530","RelatedDescription":"Closed or merged PR \"Prepare release v4.1.2\" (#17530)"},{"Id":"2969949000","IsPullRequest":true,"CreatedAt":"2025-04-03T15:24:27","Actor":"philipp-spiess","Number":"17529","RawContent":null,"Title":"Fix test that relies on mtimes","State":"closed","Body":"Fixes a timing issue added to a new unit test on `main`. Going to wait for the `CI / Linux` unit tests to pass 3 times before merging this.\r\n\r\n[ci-all]","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17529","RelatedDescription":"Closed or merged PR \"Fix test that relies on mtimes\" (#17529)"},{"Id":"2968155486","IsPullRequest":false,"CreatedAt":"2025-04-03T15:13:17","Actor":"zyycn","Number":"17522","RawContent":null,"Title":"[4.1.1] Tailwindcss v4.1.x too slower，twenty times slower than 4.0.x","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.1.x\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.2.4\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What browser are you using?**\n\nChrome,\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n\nhttps://github.com/zyycn/tailwindcss-v4.1.x-speed\n\n**Describe your issue**\n\nTailwindcss v4.1.x ，hot update in 4.0.x is between 100ms-200ms，but in 4.1.x is 2.3s-3s !\n\n![Image](https://github.com/user-attachments/assets/bc4a0c28-b992-49d1-a368-93e2c39fb582)\n![Image](https://github.com/user-attachments/assets/bc0c3958-f936-4b25-97f7-61ac929be420)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17522","RelatedDescription":"Closed issue \"[4.1.1] Tailwindcss v4.1.x too slower，twenty times slower than 4.0.x\" (#17522)"},{"Id":"2966559584","IsPullRequest":true,"CreatedAt":"2025-04-03T15:13:15","Actor":"philipp-spiess","Number":"17511","RawContent":null,"Title":"Fix slow incremental builds (especially on Windows)","State":"closed","Body":"Fixes: #16911\r\nFixes: #17522\r\n\r\nWhen debugging this issue, we noticed that the `resolve_glob()` function from `detect_sources.rs` was really slow, specifically on Windows. It turns out that we're now computing the list of globs that we use to attach the file system watchers _repeatedly on every change_ instead of doing it only _once per compiler setup_. This changed with the updates we added to support `@source not \"…\";` in 4.1.\r\n\r\nMore specifically, we noticed that the way we compute these sources is causing a recursive scan through _all_ folders inside your working directory (including `node_modules/` and `.git/`). This happens because that logic uses a vanilla file-system walker and not our `ignore` crate for this.\r\n\r\nWhen we started investigating it, our first reaction was to change both Vite and PostCSS to use the new `normalized_sources` list instead. This is a list of globs to watch that is computed solely on the input sources and does not require any file-system access and it's what we use in the CLI as well. Think of it as being a `**/*` rule for the current working-directory in the basic auto-content case.\r\n\r\nWhen we made this change, to our surprise, nothing in our existing integration test broke. From memory, though, we remembered that it's important for PostCSS though to _not register a blanket watcher for the current working-directory_. It took us quite a bit of tinkering until we were able to craft an example that would cause an endless re-render loop with this patch applied. We've now [added a new integration test](https://github.com/tailwindlabs/tailwindcss/pull/17511/files#diff-7bc765548a52132ede460508e58dca709c4a00c9c56669bf9954cc4bc3d93c88) to have this context in the repository for the future but also it meant that we have to go back to creating a \"smarter\" list of globs for the file system watcher again.\r\n\r\nTo fix the regressions, this PR now does two things:\r\n\r\n1. We now cache the list of calculated globs again since it's based only on input form the CSS file. This means that rebuilds are instant as we don't have to compute these globs anymore. This was the same behavior that we had in previous 4.0 releases.\r\n2. Furthermore we also updated the file system walk to include our new globally ignored content directories. By bailing on any subdirectories in `node_modules` and `.git`, that walk is now _much_ faster. We also made sure that you can still add a custom source rule to point _inside_ a `node_modules` folder and it will still pick up changes like you would suggest (e.g. via `@source \"../node_modules/my-ui-lib\";`). \r\n \r\nThe results? This PR fixes slow rebuilds on Windows where rebuilds go from ~2s to ~20ms.\r\n\r\nWe suspect that this issue is more pronounced on Windows because of a slower file system in general.\r\n\r\n## Test plan\r\n\r\nTested it on a reproduction with the following results:\r\n\r\n**Before:**\r\n\r\nhttps://github.com/user-attachments/assets/10c5e9e0-3c41-4e1d-95f6-ee8d856577ef\r\n\r\n**After:**\r\n\r\nhttps://github.com/user-attachments/assets/2c7597e9-3fff-4922-a2da-a8d06eab9047\r\n\r\nZooming in on the times, it looks like this:\r\n\r\n| Before    | After |\r\n| -------- | ------- |\r\n| <img width=\"674\" alt=\"image\" src=\"https://github.com/user-attachments/assets/85eee69c-bbf6-4c28-8ce3-6dcdad74be9c\" /> | <img width=\"719\" alt=\"image\" src=\"https://github.com/user-attachments/assets/d89cefda-0711-4f84-bfaf-2bea11977bf7\" /> |\r\n\r\nBut with these changes:\r\n\r\nWe also tested this on Windows with the following results:\r\n\r\n| Before    | After |\r\n| -------- | ------- |\r\n| <img width=\"961\" alt=\"image\" src=\"https://github.com/user-attachments/assets/3a42f822-f103-4598-9a91-e659ae09800c\" />  | <img width=\"956\" alt=\"image\" src=\"https://github.com/user-attachments/assets/05b6b6bc-d107-40d1-a207-3638aba3fc3a\" /> |\r\n\r\n\r\n[ci-all]\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17511","RelatedDescription":"Closed or merged PR \"Fix slow incremental builds (especially on Windows)\" (#17511)"},{"Id":"2966927014","IsPullRequest":true,"CreatedAt":"2025-04-03T15:12:34","Actor":"philipp-spiess","Number":"17513","RawContent":null,"Title":"Polyfill: Fall back to first color value when `color-mix(…)` contains unresolvable `var(…)`","State":"closed","Body":"This PR further improves the `color-mix(…)` polyfill to create a reasonable fallback if dynamic values that can not statically be resolved are used. This refers to either the use of `currentcolor` or any variables that are not static theme variables.\r\n\r\nHere are two examples that now generate a reasonable fallback instead of not showing any color at all:\r\n\r\n```css\r\n.text-\\\\(--my-color\\\\)\\\\/\\\\(--my-opacity\\\\) {\r\n  color: var(--my-color);\r\n}\r\n@supports (color: color-mix(in lab, red, red)) {\r\n  .text-\\\\(--my-color\\\\)\\\\/\\\\(--my-opacity\\\\) {\r\n    color: color-mix(in oklab, var(--my-color) var(--my-opacity), transparent);\r\n  }\r\n}\r\n```\r\n\r\n```css\r\n.text-current\\\\/50 {\r\n  color: currentColor;\r\n}\r\n\r\n@supports (color: color-mix(in lab, red, red)) {\r\n  .text-current\\\\/50 {\r\n    color: color-mix(in oklab, currentColor 50%, transparent);\r\n  }\r\n}\r\n```\r\n\r\n## Test plan\r\n\r\n- Made sure the test diffs are looking reasonable\r\n- Tested this on a production site with `<p className=\"text-shadow-lg/50 [--my-color:red] text-shadow-(color:--my-color)\">shadow test</p>`\r\n   - Browsers that do not support `color-mix(…)` will properly show a red shadow now albeit with 100% opacity: iOS 15.5 and Chrome 110\r\n   - Browsers that I have tested to make sure it still works there with opacity: Firefox 127, Firefox 128, Latest Chrome, Safari, Firefox\r\n   - Browsers that do show a black shadow because of `var(…)var(…)` being chained with no space by lightningcss: Chrome 111","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17513","RelatedDescription":"Closed or merged PR \"Polyfill: Fall back to first color value when `color-mix(…)` contains unresolvable `var(…)`\" (#17513)"},{"Id":"2966441923","IsPullRequest":false,"CreatedAt":"2025-04-03T15:07:39","Actor":"aydinvivik","Number":"17508","RawContent":null,"Title":"Tailwind CSS Not Updating Global Styles on Latest Version","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 15.2.4\n\n**What version of Node.js are you using?**\n\nv22.12.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n\nAfter updating to the latest version of Tailwind CSS, global styles defined in global.css are not updating properly. The issue persists even after clearing the Next.js cache and restarting the development server. This was not an issue in the previous versions.\n\nhttps://github.com/user-attachments/assets/69c7097e-9d47-48ab-8352-b90c0791c194\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17508","RelatedDescription":"Closed issue \"Tailwind CSS Not Updating Global Styles on Latest Version\" (#17508)"},{"Id":"2966961314","IsPullRequest":true,"CreatedAt":"2025-04-03T15:07:38","Actor":"RobinMalfait","Number":"17514","RawContent":null,"Title":"Fix race condition in Next.js with `--turbopack`","State":"closed","Body":"This PR fixes an issue where if you use Next.js with `--turbopack` a race condition happens because the `@tailwindcss/postcss` plugin is called twice in rapid succession. \r\n\r\nThe first call sees an update and does a partial update with the new classes. Next some internal `mtimes` are updated. The second call therefore doesn't see any changes anymore because the `mtimes` are the same, therefore it's serving its stale data.\r\n\r\nFixes: #17508\r\n\r\n## Processing CSS files with only `@tailwind utilities;`\r\n\r\nWhile working on a unit test for this, we also noticed that the PostCSS client did nothing at all when the input css contained only the `@tailwind utilities;` directive. It turns out that this was a directive that was not being checked for in the fast-bail code so in this PR we also changed it to account for that.\r\n\r\n## Test plan\r\n\r\n- Tested with the repro provided in #17508\r\n- Added a new unit test that calls into the PostCSS plugin directly for the same change from the same JavaScript run-loop.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17514","RelatedDescription":"Closed or merged PR \"Fix race condition in Next.js with `--turbopack`\" (#17514)"},{"Id":"2966980324","IsPullRequest":true,"CreatedAt":"2025-04-03T14:37:56","Actor":"thecrypticace","Number":"17515","RawContent":null,"Title":"Fix drop shadow filters with multiple shadows","State":"closed","Body":"It seems that I broke support for multiple drop-shadow filters when `@theme inline` was used in v4.1. This PR fixes that by segmenting the drop shadow value on top-level commas and wrapping each segment with `drop-shadow(…)` like we did in v4.0.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17515","RelatedDescription":"Closed or merged PR \"Fix drop shadow filters with multiple shadows\" (#17515)"},{"Id":"2966552107","IsPullRequest":true,"CreatedAt":"2025-04-03T14:09:12","Actor":"teddybradford","Number":"17510","RawContent":null,"Title":"Replace currentColor with currentcolor (lowercase)","State":"closed","Body":"Replaces `currentColor` with `currentcolor` (lowercase) to match what's defined in [CSS Color Module Level 4](https://www.w3.org/TR/css-color-4/#currentcolor-color) and [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#currentcolor_keyword) (see: https://github.com/mdn/content/pull/16592).","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17510","RelatedDescription":"Closed or merged PR \"Replace currentColor with currentcolor (lowercase)\" (#17510)"},{"Id":"2969301685","IsPullRequest":true,"CreatedAt":"2025-04-03T14:05:41","Actor":"depfu[bot]","Number":"17528","RawContent":null,"Title":"Update @types/bun 1.2.4 → 1.2.8 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​types/bun (1.2.4 → 1.2.8) · [Repo](https://github.com/DefinitelyTyped/DefinitelyTyped)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17528","RelatedDescription":"Closed or merged PR \"Update @types/bun 1.2.4 → 1.2.8 (patch)\" (#17528)"},{"Id":"2969265320","IsPullRequest":true,"CreatedAt":"2025-04-03T13:53:27","Actor":"depfu[bot]","Number":"17527","RawContent":null,"Title":"Update bun 1.2.4 → 1.2.8 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ bun (1.2.4 → 1.2.8) · [Repo](https://github.com/oven-sh/bun)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17527","RelatedDescription":"Closed or merged PR \"Update bun 1.2.4 → 1.2.8 (patch)\" (#17527)"},{"Id":"2967876265","IsPullRequest":false,"CreatedAt":"2025-04-03T09:15:31","Actor":"tremby","Number":"17520","RawContent":null,"Title":"inset-shadow-[spec1,spec2] renders all but the first shadow spec outset, not inset","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.17 in my app, v4.11 in \"Tailwind Play\"\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 15.2.4 but n/a\n\n**What version of Node.js are you using?**\n\nv20.10.0 but n/a\n\n**What browser are you using?**\n\nFirefox but affects all\n\n**What operating system are you using?**\n\nLinux but affects all\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/gI32O7VLv6\n\n**Describe your issue**\n\nI would expect `inset-shadow-[shadowspec1,shadowspec2]` to render 2 inset shadows, but in fact all but the first are rendered as outer shadows.\n\nIn my reproduction the second shadow is red, and should appear inside the element on the right side, but it appears outside the element on the left side.\n\nI can work around it by adding `inset_` at the start of the 2nd (and further) shadow specs, such as with `inset-shadow-[shadowspec1,inset_shadowspec2]`","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17520","RelatedDescription":"Closed issue \"inset-shadow-[spec1,spec2] renders all but the first shadow spec outset, not inset\" (#17520)"},{"Id":"2968709711","IsPullRequest":true,"CreatedAt":"2025-04-03T09:15:30","Actor":"wongjn","Number":"17523","RawContent":null,"Title":"Fix multi-value arbitrary inset shadow","State":"closed","Body":"Fixes #17520\r\n\r\nFixes multi-value inset shadows to apply the `inset` prefix to each component instead of only the first.\r\n\r\nFeel free to make the code nicer 😄\r\n\r\n## Test plan\r\n\r\nEnsure that a multi-value inset shadow now applies each shadow _inset_: \r\n<img width=\"505\" alt=\"Screenshot 2025-04-03 at 10 50 29\" src=\"https://github.com/user-attachments/assets/5d38de45-a16f-48fd-8e3c-b50d2740eb49\" />\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17523","RelatedDescription":"Closed or merged PR \"Fix multi-value arbitrary inset shadow\" (#17523)"},{"Id":"2967048687","IsPullRequest":false,"CreatedAt":"2025-04-03T08:41:15","Actor":"ZeldOcarina","Number":"17516","RawContent":null,"Title":"[v4] @theme font and text variables do not combine properly anymore","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.1.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nTailwind Play\n\n**What version of Node.js are you using?**\n\nUnknown\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\n*https://play.tailwindcss.com/MUNYU3xfEq?file=css*\n\n**Describe your issue**\n\nBefore on v3 when using the js config I could combine font weights, colors and families under the same name. Now size and weight is overlooked and only color and font family is used.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17516","RelatedDescription":"Closed issue \"[v4] @theme font and text variables do not combine properly anymore\" (#17516)"},{"Id":"2967434026","IsPullRequest":false,"CreatedAt":"2025-04-03T06:57:08","Actor":"epic-rinn","Number":"17517","RawContent":null,"Title":"Tailwind CSS (@tailwindcss/vite) Base Styles Incorrectly Overridden by `md:` Media Queries in Chrome/Arc, but not Firefox/Safari","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.1.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nAstro v5.5.6, @tailwindcss/vite v4.1.1\n\n**What version of Node.js are you using?**\n\nv23.10.0\n\n**What browser are you using?**\n\nChrome 134.0.6998.166 (Official Build) (arm64), Arc 134.0.6998.166 (Official Build) (arm64)\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\n[Repository](https://github.com/epic-rinn/chrome-tailwind-vite-bug)\n\n**Describe your issue**\n\nTailwind CSS base styles (without media query prefixes) are being incorrectly overridden by `md:` media query prefixed styles in Google Chrome and Arc browsers, even when the screen size is below the `md` breakpoint. However, `lg:` media query prefixed styles work as expected when the screen size meets or exceeds the `lg` breakpoint. This issue does not occur in Firefox or Safari, where base styles are applied correctly on smaller screens.\n\n**Steps to Reproduce:**\n\n1.  Create an Astro component or page with the following code (replace `property` and `value` with your specific Tailwind utility classes):\n\n    ```html\n    <div class=\"property-value md:property-value-md lg:property-value-lg\"></div>\n    ```\n\n    For example, using background color:\n    ```html\n    <div class=\"bg-black md:bg-white lg:bg-black\"></div>\n    ```\n    Or using text color:\n    ```html\n    <div class=\"text-red-500 md:text-blue-500 lg:text-green-500\"></div>\n    ```\n\n2.  Run the Astro development server.\n3.  Open the page in Google Chrome or Arc browser.\n4.  Observe that the `md:property-value-md` style is applied, even when the browser window is smaller than the `md` breakpoint (768px by default).\n5.  Resize the browser window to be larger than the `lg` breakpoint (1024px by default).\n6.  Observe that the `lg:property-value-lg` style is correctly applied.\n7.  Open the same page in Firefox or Safari.\n8.  Observe that the `property-value` style is applied on smaller screens and `md:property-value-md` on medium screens and larger, as expected.\n\n**Expected Behavior:**\n\nThe base styles (without media query prefixes) should apply on all screen sizes below the `md` breakpoint in all browsers.\n\n**Actual Behavior:**\n\nIn Chrome and Arc, the `md:` media query prefixed styles override the base styles even on smaller screens.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17517","RelatedDescription":"Closed issue \"Tailwind CSS (@tailwindcss/vite) Base Styles Incorrectly Overridden by `md:` Media Queries in Chrome/Arc, but not Firefox/Safari\" (#17517)"},{"Id":"2966265837","IsPullRequest":true,"CreatedAt":"2025-04-02T16:16:29","Actor":"philipp-spiess","Number":"17506","RawContent":null,"Title":"Use `@layer properties` for `@property` polyfills","State":"closed","Body":"This PR changes how polyfills for `@property` are inserted. The main motivation is to remove the need to rely on the correct placement of `@layer base;`—Something that's not really required right not in Tailwind CSS v4 and we'd like to keep it this way.\r\n\r\nThe idea is that the polyfills are inserted for you automatically. To ensure they always take precedence, we insert an empty `@layer properties;` at the top of the CSS file so that later, when we emit all `@property` rules and their fallback, we can use this new named layer to ensure the rules have a higher order.\r\n\r\nUnfortunately, just putting `@layer properties;` at the beginning of a file would not work as `lightningcss` incorrectly hoists all content into the first occurrence of a layer name meaning these rules might be inserted _before_ eventual external imports: \r\n\r\n![image](https://github.com/user-attachments/assets/c5a1694d-1549-47ed-ad0f-266807be4730)\r\n\r\nTo work around this, we have to insert that layer name after any eventual remaining external `@imports` for now.\r\n\r\n## Test plan\r\n\r\n- Updated snapshot tests\r\n- Deployed a new version of the website with the patch applied to ensure it works across browsers: https://tailwindcss-com-git-legacy-browsers-tailwindlabs.vercel.app/. Tested on: Safari on iOS 15.5, Safari on iOS 16.0, Firefox 127, Firefox 128, Chrome 110, Chrome latest, Safari latest, Firefox latest\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17506","RelatedDescription":"Closed or merged PR \"Use `@layer properties` for `@property` polyfills\" (#17506)"},{"Id":"2966496123","IsPullRequest":true,"CreatedAt":"2025-04-02T14:02:40","Actor":"DotwoodMedia","Number":"17509","RawContent":null,"Title":"fix: enhance hover variant to include pointer fine media query","State":"open","Body":"<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n\r\nAdded an extra check that disables hover on chrome mobile. At the moment hover remains active in the latest version of chrome","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17509","RelatedDescription":"Open PR \"fix: enhance hover variant to include pointer fine media query\" (#17509)"},{"Id":"2966059768","IsPullRequest":false,"CreatedAt":"2025-04-02T12:15:14","Actor":"christophsaile","Number":"17505","RawContent":null,"Title":"[v4] Child Selector (*:) not working with component classes","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n v4.1.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nreact 19.1.0, Vite 6.2.4\n\n**What version of Node.js are you using?**\n\n v20.18.0\n\n**What browser are you using?**\n\nEdge\n\n**What operating system are you using?**\n\n macOS\n\n**Reproduction URL**\n\nhttps://github.com/christophsaile/tw-child-selector\n\n**Describe your issue**\n\nI recently updated to TailwindCSS v4. I noticed that child selectors are not working anymore with custom classes.\n\n![Image](https://github.com/user-attachments/assets/59dd1c86-fe31-443e-bea6-0af828306a83)\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17505","RelatedDescription":"Closed issue \"[v4] Child Selector (*:) not working with component classes\" (#17505)"},{"Id":"2965444293","IsPullRequest":false,"CreatedAt":"2025-04-02T10:38:09","Actor":"chenjmdgjl","Number":"17498","RawContent":null,"Title":"v4.1.0 handling different layer orders in conditional rules is unsupported","State":"closed","Body":"\"vite\": \"^6.2.4\"\n\"@tailwindcss/vite\": \"^4.1.0\",\n\"tailwindcss\": \"^4.1.0\",\n\n\n14:58:18 [WARN] [vite] [vite:css][postcss] handling different layer orders in conditional rules is unsupported by this plugin and will cause style differences between browser versions.\n1 | /*! tailwindcss v4.1.0 | MIT License | https://tailwindcss.com/ */\n2 | @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {\n3 | @layer base {\n| ^^^^^^^^^^^^^\n4 | *, ::before, ::after, ::backdrop {\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n5 | --tw-space-y-reverse: 0;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n6 | --tw-border-style: solid;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n7 | --tw-font-weight: initial;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n8 | --tw-shadow: 0 0 #0000;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n9 | --tw-shadow-color: initial;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n10 | --tw-shadow-alpha: 100%;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n11 | --tw-inset-shadow: 0 0 #0000;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n12 | --tw-inset-shadow-color: initial;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n13 | --tw-inset-shadow-alpha: 100%;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n14 | --tw-ring-color: initial;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n15 | --tw-ring-shadow: 0 0 #0000;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n16 | --tw-inset-ring-color: initial;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n17 | --tw-inset-ring-shadow: 0 0 #0000;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n18 | --tw-ring-inset: initial;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n19 | --tw-ring-offset-width: 0px;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n20 | --tw-ring-offset-color: #fff;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n21 | --tw-ring-offset-shadow: 0 0 #0000;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n22 | --tw-outline-style: solid;\n| ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n23 | }\n| ^^^^^\n24 | }\n| ^^^","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17498","RelatedDescription":"Closed issue \"v4.1.0 handling different layer orders in conditional rules is unsupported\" (#17498)"},{"Id":"2965495291","IsPullRequest":false,"CreatedAt":"2025-04-02T09:49:13","Actor":"madsenmm","Number":"17499","RawContent":null,"Title":"Custom utility duplicates when using `@source inline(…)`","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n`\"@tailwindcss/cli\": \"^4.1.0\"`\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What browser are you using?**\n\nChromium (Arc)\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nTailwind playground doesn't include the v4.1.0 yet, and doesn't work in the builders version?\nhttps://play.tailwindcss.com/OAr3yqRpwD\n\nBut this generates in an environment the following, both in watch mode, and in production builds.\n\n```css\n.pb-large {\n    padding-bottom: var(--padding-large);\n  }\n  .pb-large {\n    padding-bottom: var(--padding-large);\n  }\n  .pb-medium {\n    padding-bottom: var(--padding-medium);\n  }\n  .pb-medium {\n    padding-bottom: var(--padding-medium);\n  }\n  .pb-normal {\n    padding-bottom: var(--padding-normal);\n  }\n  .pb-normal {\n    padding-bottom: var(--padding-normal);\n  }\n  .pb-small {\n    padding-bottom: var(--padding-small);\n  }\n  .pb-small {\n    padding-bottom: var(--padding-small);\n  }\n  .pb-xlarge {\n    padding-bottom: var(--padding-xlarge);\n  }\n  .pb-xlarge {\n    padding-bottom: var(--padding-xlarge);\n  }\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17499","RelatedDescription":"Closed issue \"Custom utility duplicates when using `@source inline(…)`\" (#17499)"},{"Id":"2964905827","IsPullRequest":false,"CreatedAt":"2025-04-02T09:38:51","Actor":"sntran","Number":"17495","RawContent":null,"Title":"[v4] Combine `has` with `only` and custom variant","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.17\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/U8YlnE1BtV\n\n**Describe your issue**\n\nWhen combining multiple variants, not sure which order would work. In this case, I have a custom variant to select a link, and I try to style any element that has only link inside. `has-link` works fine, as well as `has-only`, but other cases I try do not work, i.e., `has-only-link`, `has-link-only`, `only-has-link`.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17495","RelatedDescription":"Closed issue \"[v4] Combine `has` with `only` and custom variant\" (#17495)"},{"Id":"2965775794","IsPullRequest":true,"CreatedAt":"2025-04-02T09:27:59","Actor":"RobinMalfait","Number":"17503","RawContent":null,"Title":"Prepare release v4.1.1","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17503","RelatedDescription":"Closed or merged PR \"Prepare release v4.1.1\" (#17503)"},{"Id":"2965713054","IsPullRequest":false,"CreatedAt":"2025-04-02T09:16:59","Actor":"JonnyBurger","Number":"17501","RawContent":null,"Title":"`@tailwindcss/cli@4.1.0` misses `jiti` dependency","State":"closed","Body":"https://unpkg.com/@tailwindcss/cli@4.1.0/dist/index.mjs contains\n\n```js\nimport{createJiti as Xl}from\"jiti\"\n```\n\nHowever, `jiti` is not in `dependencies` of `@tailwindcss/cli`:\n\n\n```\n  \"dependencies\": {\n    \"@parcel/watcher\": \"^2.5.1\",\n    \"enhanced-resolve\": \"^5.18.1\",\n    \"mri\": \"^1.2.0\",\n    \"picocolors\": \"^1.1.1\",\n    \"@tailwindcss/node\": \"4.1.0\",\n    \"@tailwindcss/oxide\": \"4.1.0\",\n    \"tailwindcss\": \"4.1.0\"\n  },\n```\n\nGranted, `@tailwindcss/node` does have `jiti` as a dependency.\nBut my monorepo does have a different version of `jiti` which is on version 1.x, which means the unintended version was resolved.\n\nMy suggestion is to add it as an explicit dependency and pin the version for robustness.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17501","RelatedDescription":"Closed issue \"`@tailwindcss/cli@4.1.0` misses `jiti` dependency\" (#17501)"},{"Id":"2965743388","IsPullRequest":true,"CreatedAt":"2025-04-02T09:16:58","Actor":"philipp-spiess","Number":"17502","RawContent":null,"Title":"Use `@tailwindcss/node` for import in CLI","State":"closed","Body":"Closes #17501\r\n\r\nSeems like an oversight. The CLI does have a dependency on `@tailwindcss/node` so it should use it from the public import like the other stuff.\r\n\r\n## Test plan\r\n\r\nLooked at the minified `dist/` output to ensure the import for `jiti` is gone","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17502","RelatedDescription":"Closed or merged PR \"Use `@tailwindcss/node` for import in CLI\" (#17502)"},{"Id":"2965658108","IsPullRequest":false,"CreatedAt":"2025-04-02T09:09:38","Actor":"JonnyBurger","Number":"17500","RawContent":null,"Title":"Brittle \"depencies\" field potentially breaks Tailwind 4.0.0","State":"closed","Body":"This might already be fixed in the latest version, but still filing my investigation, just in case somebody has this problem and the maintainers want to know about it:\n\n`@tailwindcss/postcss@4.0.0` has the following dependencies:\n\n\n```\n \"dependencies\": {\n    \"@alloc/quick-lru\": \"^5.2.0\",\n    \"lightningcss\": \"^1.29.1\",\n    \"postcss\": \"^8.4.41\",\n    \"@tailwindcss/node\": \"^4.0.0\",\n    \"@tailwindcss/oxide\": \"^4.0.0\",\n    \"tailwindcss\": \"4.0.0\"\n  },\n```\n\nIf you now install `@tailwindcss/postcss@4.0.0`, it will install `@tailwindcss/node@4.1.0`, which is incompatible.\n\nThe following error will come up in a Webpack project:\n\n```\nERROR in ./src/index.css (./node_modules/css-loader/dist/cjs.js!./node_modules/postcss-loader/dist/cjs.js!./src/index.css)\nModule build failed (from ./node_modules/postcss-loader/dist/cjs.js):\nError: Missing field `negated` on ScannerOptions.sources\n```\n\nThis issue seems to have been fixed, 4.1.0 now pins the exact versions.\nSo the issue can be closed, I just wanted to document it somewhere.\n\nSolution is to just use Tailwind 4.1.0+.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17500","RelatedDescription":"Closed issue \"Brittle \"depencies\" field potentially breaks Tailwind 4.0.0\" (#17500)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-04-04T03:30:22.5629932Z","RunDurationInMilliseconds":962}