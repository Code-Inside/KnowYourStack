{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2639332884","IsPullRequest":true,"CreatedAt":"2024-11-07T01:50:31","Actor":"adamwathan","Number":"14898","RawContent":null,"Title":"Rename `--width-*` namespace to `--container-*`","State":"closed","Body":"This PR renames all of the `--width-*` variables to `--container-*` to better communicate the purpose of these tokens as layout container sizes. These are the values that were historically stored under `maxWidth` in the v3 and earlier eras, and were also re-used by the container queries plugin.\r\n\r\nThe name `--container-*` feels like a better match alongside the `--breakpoint-*` namespace and since these both serve that same sort of purpose it makes sense to me that the name should be optimized for feeling \"right\" in that context.\r\n\r\nI like that this also sort of advertises Tailwind's support for container queries directly in the CSS variables themselves, and helps people understand what these are really intended to be used for.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14898","RelatedDescription":"Closed or merged PR \"Rename `--width-*` namespace to `--container-*`\" (#14898)"},{"Id":"2636556633","IsPullRequest":true,"CreatedAt":"2024-11-06T15:51:34","Actor":"adamwathan","Number":"14886","RawContent":null,"Title":"Rename `--transition-timing-function-*` variables to `--ease-*`","State":"closed","Body":"This PR renames the `--transition-timing-function-*` theme variables to `--ease-*` to more closely match the utility names and be a bit more terse in general.\r\n\r\n```diff\r\n  @theme {\r\n-   --transition-timing-function-in: cubic-bezier(0.4, 0, 1, 1);\r\n-   --transition-timing-function-out: cubic-bezier(0, 0, 0.2, 1);\r\n-   --transition-timing-function-in-out: cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n+   --ease-in: cubic-bezier(0.4, 0, 1, 1);\r\n+   --ease-out: cubic-bezier(0, 0, 0.2, 1);\r\n+   --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n```\r\n\r\nThis is part of a bigger set of changes where we're renaming other theme variables as well with the same goals, since many existing theme variables like `--shadow-*` and `--radius-*` are already not using the explicit CSS property name.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14886","RelatedDescription":"Closed or merged PR \"Rename `--transition-timing-function-*` variables to `--ease-*`\" (#14886)"},{"Id":"2636525751","IsPullRequest":true,"CreatedAt":"2024-11-06T15:33:44","Actor":"adamwathan","Number":"14885","RawContent":null,"Title":"Rename `--font-family-*` variables to `--font-*`","State":"closed","Body":"This PR renames the `--font-family-*` theme variables to `--font-*` to more closely match the utility names and be a bit more terse in general.\r\n\r\n```diff\r\n  @theme {\r\n-   --font-family-sans: ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\r\n-   --font-family-serif: ui-serif, Georgia, Cambria, 'Times New Roman', Times, serif;\r\n-   --font-family-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;\r\n    \r\n+   --font-sans: ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\r\n+   --font-serif: ui-serif, Georgia, Cambria, 'Times New Roman', Times, serif;\r\n+   --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New', monospace;\r\n  }\r\n```\r\n\r\nThis is part of a bigger set of changes where we're renaming other theme variables as well with the same goals, since many existing theme variables like `--shadow-*` and `--radius-*` are already not using the explicit CSS property name.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14885","RelatedDescription":"Closed or merged PR \"Rename `--font-family-*` variables to `--font-*`\" (#14885)"},{"Id":"2638405808","IsPullRequest":true,"CreatedAt":"2024-11-06T15:19:49","Actor":"RobinMalfait","Number":"14896","RawContent":null,"Title":"Fix crash during upgrade when content globs escape root of project","State":"open","Body":"This PR fixes an issue where globs in you `content` configuration escape the current \"root\" of the project.\r\n\r\nThis can happen if you have a folder, and you need to look up in the tree (e.g.: when looking at another package in a monorepo, or in case of a Laravel project where you want to look at mail templates).\r\n\r\nThis applies a similar strategy we already implement on the Rust side.\r\n\r\n1. Expand braces in the globs\r\n2. Move static parts of the `pattern` to the `base` of the glob entry object\r\n\r\n---\r\n\r\nGiven a project setup like this:\r\n```\r\n.\r\n├── admin\r\n│   ├── my-tailwind.config.ts\r\n│   └── src\r\n│       ├── abc.jpg\r\n│       ├── index.html\r\n│       ├── index.js\r\n│       └── styles\r\n│           └── input.css\r\n├── dashboard\r\n│   ├── src\r\n│   │   ├── index.html\r\n│   │   ├── index.js\r\n│   │   ├── input.css\r\n│   │   └── pickaday.css\r\n│   └── tailwind.config.ts\r\n├── package-lock.json\r\n├── package.json\r\n├── postcss.config.js\r\n└── unrelated\r\n    └── index.html\r\n\r\n7 directories, 14 files\r\n```\r\n\r\n\r\nIf you then have this config:\r\n```ts\r\n// admin/my-tailwind.config.ts\r\nexport default {\r\n  content: {\r\n    relative: true,\r\n    files: ['./src/**/*.html', '../dashboard/src/**/*.html'],\r\n                            //  ^^  this is the important part, which escapes\r\n                            //      the current root of the project.\r\n  },\r\n  theme: {\r\n    extend: {\r\n      colors: {\r\n        primary: 'red',\r\n      },\r\n    },\r\n  },\r\n}\r\n```\r\n\r\n\r\nThen before this change, running the command looks like this:\r\n<img width=\"1760\" alt=\"image\" src=\"https://github.com/user-attachments/assets/60e2dfc7-3751-4432-80e3-8b4b8f1083d4\">\r\n\r\n\r\nAfter this change, running the command looks like this:\r\n<img width=\"1452\" alt=\"image\" src=\"https://github.com/user-attachments/assets/5c47182c-119c-4732-a253-2dace7086049\">\r\n\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14896","RelatedDescription":"Open PR \"Fix crash during upgrade when content globs escape root of project\" (#14896)"},{"Id":"2637519973","IsPullRequest":false,"CreatedAt":"2024-11-06T14:11:17","Actor":"orelhindi-abra","Number":"14891","RawContent":null,"Title":" Expected identifier but found \"peernot\" warning on vite build","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.4.13\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nVite v5.4.10\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv20.17.0\r\n\r\n**What browser are you using?**\r\n\r\nChrome,\r\n\r\n**What operating system are you using?**\r\n\r\nLinux\r\n\r\n**Reproduction URL**\r\n\r\nIts not a project bug but build issue\r\n\r\n**Describe your issue**\r\n\r\nWhen building the project with vite build for production, the following warning appears:\r\n\r\n```\r\n▲ [WARNING] Expected identifier but found \"peernot(\" [css-syntax-error]\r\n\r\n    <stdin>:1825:1:\r\n      1825 │ .peernot(:hover) ~ .peer-\\[not\\(\\:hover\\)\\]\\:hidden {\r\n           ╵  ~~~~~~~~\r\n```\r\nIt seems that during the build process, Tailwind CSS is generating a class .peernot(:hover), which results in this minification error.\r\n\r\nI didnt write this class anywhere in my app\r\nany suggestion? \r\n\r\nthanks!\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14891","RelatedDescription":"Closed issue \" Expected identifier but found \"peernot\" warning on vite build\" (#14891)"},{"Id":"2637891526","IsPullRequest":true,"CreatedAt":"2024-11-06T12:36:55","Actor":"RobinMalfait","Number":"14894","RawContent":null,"Title":"Remove `theme(inline)` option from CSS API","State":"closed","Body":"This PR removes the `theme(inline)` option for now. We might re-introduce this in the future but for now we get rid of it to ensure there are fewer knobs to turn.\n\nWe still have the `inline` option internally because it is used in the v3 compat layer.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14894","RelatedDescription":"Closed or merged PR \"Remove `theme(inline)` option from CSS API\" (#14894)"},{"Id":"2635346710","IsPullRequest":true,"CreatedAt":"2024-11-06T11:39:10","Actor":"RobinMalfait","Number":"14873","RawContent":null,"Title":"Optimize generated CSS output","State":"closed","Body":"This PR improves the generated CSS by running it through Lightning CSS twice.Right now Lightning CSS merges adjacent at-rules and at the end flattens the nesting. This means that after the nesting is flattened, the at-rules that are adjacent and could be merged together will not be merged.\n\nThis PR improves our output by running Lightning CSS twice on the generated CSS which will make sure to merge adjacent at-rules after the nesting is flattened.\n\nNote: in the diff output you'll notice that some properties are duplicated. These need some fixes in Lightning CSS itself but they don't break anything for us right now.\n\nRelated PR in Lightning CSS for the double `-webkit-backdrop-filter` can be found here: https://github.com/parcel-bundler/lightningcss/pull/850\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14873","RelatedDescription":"Closed or merged PR \"Optimize generated CSS output\" (#14873)"},{"Id":"2635664933","IsPullRequest":true,"CreatedAt":"2024-11-06T11:28:38","Actor":"RobinMalfait","Number":"14875","RawContent":null,"Title":"Migrate default utilities to have a value suffix","State":"closed","Body":"This PR adds a migration for migrating the changes we implemented in https://github.com/tailwindlabs/tailwindcss/pull/14849\n\nThis is the migration we perform:\n\n| Old               | New                |\n| ----------------- | ------------------ |\n| `shadow`          | `shadow-sm`        |\n| `shadow-sm`       | `shadow-xs`        |\n| `shadow-xs`       | `shadow-2xs`       |\n| `inset-shadow`    | `inset-shadow-sm`  |\n| `inset-shadow-sm` | `inset-shadow-xs`  |\n| `inset-shadow-xs` | `inset-shadow-2xs` |\n| `drop-shadow`     | `drop-shadow-sm`   |\n| `drop-shadow-sm`  | `drop-shadow-xs`   |\n| `rounded`         | `rounded-sm`       |\n| `rounded-sm`      | `rounded-xs`       |\n| `blur`            | `blur-sm`          |\n| `blur-sm`         | `blur-xs`          |\n\nAlso added an integration test to ensure that `shadow` is properly migrated to `shadow-sm`, and doesn't get migrated to `shadow-xs` (because `shadow-sm` is migrated to `shadow-xs`).\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14875","RelatedDescription":"Closed or merged PR \"Migrate default utilities to have a value suffix\" (#14875)"},{"Id":"2635970864","IsPullRequest":true,"CreatedAt":"2024-11-06T11:06:49","Actor":"RobinMalfait","Number":"14879","RawContent":null,"Title":"Fix parsing `url(…)` with special characters such as `;` or `{}`","State":"closed","Body":"This PR fixes an issue where some special characters (with an actual meaning CSS) were used inside of the `url(…)` function, would result in incorrectly parsed CSS.\n\nFor example, when we encounter a `{`, then we would start a new \"block\" for nesting purposes. If we encounter an `}`, then the block would end. If we encounter a `;`, then that would be the end of a declaration.\n\nAll of that is true, unless we are in a `url(…)` function. In that case, we should ignore all of those characters and treat them as part of the URL.\n\nThis is only an issue because:\n\n1. We are allowed to use these characters in URLs.\n2. We can write an url inside `url(…)` without quotes. With quotes, this would not be an issue. \n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14879","RelatedDescription":"Closed or merged PR \"Fix parsing `url(…)` with special characters such as `;` or `{}`\" (#14879)"},{"Id":"2637602922","IsPullRequest":false,"CreatedAt":"2024-11-06T10:05:43","Actor":"Serator","Number":"14892","RawContent":null,"Title":"The `theme()` function from the Tailwind config is not expanded in arbitrary values","State":"open","Body":"**What version of Tailwind CSS are you using?**\r\n\r\n3.4.14\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/jhNKe63ed5\r\n\r\n**Describe your issue**\r\n\r\n`tailwind.config.js`\r\n```\r\nmodule.exports = {\r\n  theme: {\r\n    boxShadow: {\r\n      base: '0 0 0 theme(spacing.2) green inset',\r\n    },\r\n  },\r\n}\r\n```\r\n\r\n`HTML`\r\n```\r\n<div class=\"[box-shadow:_theme(boxShadow.base)]\">❌</div>\r\n\r\n<div class=\"shadow-base\">✅</div>\r\n```\r\n\r\n<img width=\"958\" alt=\"image\" src=\"https://github.com/user-attachments/assets/d2283f1f-f97f-46da-a4c5-27ee76edb8fd\">\r\n\r\nThe `theme()` function does not expand to its actual value when an arbitrary property is used with `theme()`.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14892","RelatedDescription":"Open issue \"The `theme()` function from the Tailwind config is not expanded in arbitrary values\" (#14892)"},{"Id":"2637194690","IsPullRequest":false,"CreatedAt":"2024-11-06T09:12:46","Actor":"arnurkuatov","Number":"14889","RawContent":null,"Title":"Nextjs, MUI and tailwindcss, shadcn style conflicts","State":"closed","Body":"Our project is large, stack next 14.0,\r\nSince the early project we have MUI, and a large number of components, styles, etc. have been written. Now we have decided to gradually migrate from MUI to Tailwind, sorry. Everything was fine until we discovered a conflict of styles.\r\n`corePlugins: {\r\n    preflight: false,\r\n  }` And I read that this can be solved with perfligt, but it seems to solve conflicts, but then the styles with tailwind crash. And yes, I did the prefix 'tw', but something is wrong, I have already written a bunch of components, styles, layouts, and I will have to put the prefix tv on each style?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14889","RelatedDescription":"Closed issue \"Nextjs, MUI and tailwindcss, shadcn style conflicts\" (#14889)"},{"Id":"2636458364","IsPullRequest":true,"CreatedAt":"2024-11-05T21:06:47","Actor":"adamwathan","Number":"14883","RawContent":null,"Title":"Derive all font-weight values from theme","State":"closed","Body":"This PR removes all of the static `font-weight` utilities that were previously hard-coded into the framework in favor of deriving those utilities from the `--font-weight-*` theme values instead.\r\n\r\nBiggest motivation for this is giving people a way to explicitly disable font-weight utilities they don't want to use in their project, which previously wasn't possible.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14883","RelatedDescription":"Closed or merged PR \"Derive all font-weight values from theme\" (#14883)"},{"Id":"2636095403","IsPullRequest":true,"CreatedAt":"2024-11-05T20:44:21","Actor":"adamwathan","Number":"14881","RawContent":null,"Title":"Remove fallbacks from theme `var(...)` calls","State":"closed","Body":"This PR changes how we render `var(...)` calls for theme values, removing the fallback values we were previously including.\r\n\r\n```diff\r\n  .text-white {\r\n-   color: var(--color-white, #fff);\r\n+   color: var(--color-white);\r\n  }\r\n```\r\n\r\nWe previously included the fallbacks only so you could see the value in dev tools but this feels like a bad reason to bloat the CSS. I'd rather just convince the Chrome team to surface this stuff better in dev tools in the first place.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14881","RelatedDescription":"Closed or merged PR \"Remove fallbacks from theme `var(...)` calls\" (#14881)"},{"Id":"2630097193","IsPullRequest":true,"CreatedAt":"2024-11-05T20:22:50","Actor":"adamwathan","Number":"14857","RawContent":null,"Title":"Replace default explicit spacing scale with multiplier system","State":"closed","Body":"This PR replaces the default spacing scale (`--spacing-*`) with a generative system based on a default spacing _unit_.\r\n\r\nInstead of the default theme containing values like `--spacing-4`, `--spacing-6`, `--spacing-8`, etc., instead we just define a single `--spacing` value:\r\n\r\n```css\r\n@theme {\r\n  --spacing: 0.25rem;\r\n}\r\n```\r\n\r\nUtilities like `px-4` are derived from this unit by multiplying it by the value in the utility (4 in this case):\r\n\r\n```css\r\n.px-4 {\r\n  padding-inline: calc(var(--spacing) * 4);\r\n}\r\n```\r\n\r\nThe biggest consequence of this change is that every value is available now, rather than just the explicitly configured values.\r\n\r\nThis means utilities like `px-42` will work now, whereas prior to this PR only `px-40` and `px-44` were valid utilities. I personally found it very difficult to know which values actually existed at the higher end of the scale without IntelliSense, and in practice even when working with a skilled designer like [Steve](https://x.com/steveschoger) who helped design Tailwind's default spacing scale, I'd very often need to break out of it to implement a design, and trying to round to a value that was in the scale made the design worse, not better.\r\n\r\nThis PR allows you to use any whole number, as well as decimal numbers that are multiples of `0.25` to ensure classes like `px-1.5` continue to work. While this means you can now technically do things like `pt-97.25`, I think the presence of the fractional value will be enough of a signal to developers that they are doing something a little unusual, and they can use their judgment as to whether they are making the right decision or not.\r\n\r\nI'll update this PR with a lot more detail when I have a chance, as there are a few other things to explain like:\r\n\r\n- Unifying all of the values for width/min-width/max-width/height/min-height/max-height utilities\r\n- Deriving numeric line-height values from the spacing multiplier instead of a separate line-height scale\r\n- Using `--spacing: initial` to disable the multiplier\r\n- How you can still use an explicit spacing scale and ignore this change\r\n- How we plan to use IntelliSense to surface a more curated set of spacing values even if smaller increments work when you type them explicitly","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14857","RelatedDescription":"Closed or merged PR \"Replace default explicit spacing scale with multiplier system\" (#14857)"},{"Id":"2636225411","IsPullRequest":false,"CreatedAt":"2024-11-05T19:47:53","Actor":"rei-shaholli","Number":"14882","RawContent":null,"Title":"Tailwind CSS Classes (border-spacing-y-*, border-separate) Not Applying in Next.js App Router with Nested Component","State":"closed","Body":"tailwind version: v3.4.14\r\nNext.js 14.2.16\r\nNode v20.9.0\r\nChrome\r\nmacOS, Windows\r\n\r\n**Reproduction URL**\r\nhttps://github.com/rei-shaholli/tailwind_border_spacing_table_issue\r\n\r\n**Issue**\r\n\r\n# Tailwind CSS Classes Not Applying in Next.js App Router with Nested Component\r\n\r\n## Description\r\n\r\nWhen using Tailwind CSS with Next.js (App Router), certain table-specific Tailwind classes such as border-separate and\r\nborder-spacing-y-* are not applied if the `<table>` is embedded within a nested component that is then used inside a\r\nroute (e.g., page.tsx). However, if the `<table>` is directly in the route file, the styles are applied correctly.\r\n\r\n## Steps to Reproduce\r\n\r\n1. Create a new Next.js project with the App Router and Tailwind CSS installed. \r\n2. Create a new component (e.g., Table.tsx) that contains a `<table>` with Tailwind CSS classes in question (\r\n   border-separate and border-spacing-y-*). Ex:\r\n   ```tsx\r\n       export default function SomeTableComponent() {\r\n         return (\r\n           <table className=\"table-auto w-full shadow-lg mt-5 rounded border-separate border-spacing-y-3\">\r\n           <thead className=\"text-left text-gray-500 tracking-wider\">\r\n           <tr>\r\n             <th className=\"p-4\">Col A</th>\r\n             <th className=\"p-4\">Col B</th>\r\n             <th className=\"p-4\">Col C</th>\r\n           </tr>\r\n           </thead>\r\n           <tbody>\r\n           <tr className=\"bg-card rounded text-gray-200 bg-neutral-900\">\r\n             <td className=\"p-4\">Value A</td>\r\n             <td className=\"p-4\">Value B</td>\r\n             <td className=\"p-4\">Value C</td>\r\n           </tr>\r\n           </tbody>\r\n          </table>\r\n        );\r\n        }\r\n   ```\r\n3. Import the component into a route file (e.g., index.tsx) and use it. Ex:\r\n   ```tsx\r\n   import SomeTableComponent from \"@/features/tst/components/SomeTableComponent\";\r\n\r\n   export default function Home() {\r\n   return (\r\n     <main className=\"flex min-h-screen flex-col items-center justify-between p-24\">\r\n       <SomeTableComponent />\r\n     </main>\r\n   );\r\n   }\r\n   ```\r\n\r\n4. Run the Next.js development server and inspect the rendered table.\r\n\r\n    - When `<SomeTableComponent />` is used within a route file (page.tsx), the `border-separate` and\r\n      `border-spacing-y-3` classes are not applied to the `<table />` element. As a result, no spacing appears between\r\n      rows.\r\n    - If the `<table>` is defined directly in page.tsx without being nested in a separate component, the\r\n      `border-separate` and `border-spacing-y-3` styles are applied correctly, and spacing appears between rows as\r\n      expected.\r\n\r\n5. Please refer to the `./app/test/page.tsx` and `./app/test/components/SomeTableComponent.tsx` files for the relevant\r\n   code.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14882","RelatedDescription":"Closed issue \"Tailwind CSS Classes (border-spacing-y-*, border-separate) Not Applying in Next.js App Router with Nested Component\" (#14882)"},{"Id":"2636030620","IsPullRequest":true,"CreatedAt":"2024-11-05T17:34:44","Actor":"adamwathan","Number":"14880","RawContent":null,"Title":"Make `ease-linear` a static utility","State":"closed","Body":"This PR removes `--transition-timing-function-linear` from the default theme in favor of a static `ease-linear` utility. Doesn't make sense for this to be a design token since `linear` can only mean `linear`.\r\n\r\nThis is consistent with how we handle basically every other similar case in the framework.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14880","RelatedDescription":"Closed or merged PR \"Make `ease-linear` a static utility\" (#14880)"},{"Id":"2635699760","IsPullRequest":true,"CreatedAt":"2024-11-05T15:56:53","Actor":"depfu[bot]","Number":"14876","RawContent":null,"Title":"Update @playwright/test 1.48.0 → 1.48.2 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​playwright/test (1.48.0 → 1.48.2) · [Repo](https://github.com/Microsoft/playwright)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/microsoft/playwright/releases/tag/v1.48.2\">1.48.2</a></h4>\n\n<blockquote><h3 dir=\"auto\">Highlights</h3>\n<p dir=\"auto\"><a href=\"https://bounce.depfu.com/github.com/microsoft/playwright/issues/33141\">#33141</a> - [Bug]: UI Mode crashed<br>\n<a href=\"https://bounce.depfu.com/github.com/microsoft/playwright/issues/33219\">#33219</a> - [BUG] Trace Viewer PWA crashes with \"Aw, Snap!\"<br>\n<a href=\"https://bounce.depfu.com/github.com/microsoft/playwright/issues/33086\">#33086</a> - [Bug]: UI Mode Memory problem<br>\n<a href=\"https://bounce.depfu.com/github.com/microsoft/playwright/issues/33000\">#33000</a> - [Regression]: Inspector and Browser doesn't close on CTRL+C<br>\n<a href=\"https://bounce.depfu.com/github.com/microsoft/playwright/issues/33204\">#33204</a> - [Bug]: Chrome tab and inspector not closing after terminating session in terminal</p>\n<h2 dir=\"auto\">Browser Versions</h2>\n<ul dir=\"auto\">\n<li>Chromium 130.0.6723.19</li>\n<li>Mozilla Firefox 130.0</li>\n<li>WebKit 18.0</li>\n</ul>\n<p dir=\"auto\">This version was also tested against the following stable channels:</p>\n<ul dir=\"auto\">\n<li>Google Chrome 129</li>\n<li>Microsoft Edge 129</li>\n</ul></blockquote>\n<h4><a href=\"https://github.com/microsoft/playwright/releases/tag/v1.48.1\">1.48.1</a></h4>\n\n<blockquote><h3 dir=\"auto\">Highlights</h3>\n<p dir=\"auto\"><a href=\"https://bounce.depfu.com/github.com/microsoft/playwright/issues/33023\">#33023</a> - [Bug]: command line flag --headed has no effect in ui mode<br>\n<a href=\"https://bounce.depfu.com/github.com/microsoft/playwright/issues/33107\">#33107</a> - [REGRESSION]: page.waitForRequest does not get resolved since 1.48.0<br>\n<a href=\"https://bounce.depfu.com/github.com/microsoft/playwright/issues/33085\">#33085</a> - [Bug]: WebSocket route does not handle full URLs in Playwright<br>\n<a href=\"https://bounce.depfu.com/github.com/microsoft/playwright/issues/33052\">#33052</a> - [Regression]: Inspector not showing recorded steps<br>\n<a href=\"https://bounce.depfu.com/github.com/microsoft/playwright/issues/33132\">#33132</a> - [Bug]: Wrong Ubuntu release name in Dockerfile.noble<br>\n<a href=\"https://bounce.depfu.com/github.com/microsoft/playwright/pull/32996\">#32996</a> - [BUG] Trace attachments have small unusable height</p>\n<h2 dir=\"auto\">Browser Versions</h2>\n<ul dir=\"auto\">\n<li>Chromium 130.0.6723.19</li>\n<li>Mozilla Firefox 130.0</li>\n<li>WebKit 18.0</li>\n</ul>\n<p dir=\"auto\">This version was also tested against the following stable channels:</p>\n<ul dir=\"auto\">\n<li>Google Chrome 129</li>\n<li>Microsoft Edge 129</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/@playwright%2Ftest/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/Microsoft/playwright/compare/0cdbb11068f86671c05d57391ac3701610f853df...dc80964a3f84dc120b5fed8837ff492a38ddb26e\">See the full diff on Github</a>. The new version differs by 18 commits:</p>\n<ul>\n<li><a href=\"https://github.com/microsoft/playwright/commit/dc80964a3f84dc120b5fed8837ff492a38ddb26e\"><code>chore: mark v1.48.2 (#33290)</code></a></li>\n<li><a href=\"https://github.com/microsoft/playwright/commit/ffd19e580ea9a8afee6eeeafd61169f78e9c5c7d\"><code>cherry-pick(#33269): fix(codegen): SIGINT handling was leading to zombie processes</code></a></li>\n<li><a href=\"https://github.com/microsoft/playwright/commit/f26c6fc226d161f9139e7bf590faf404a542ba5f\"><code>cherry-pick(#33240, #33264): fix(recorder): do not leak when instantiated in snapshots (#33259)</code></a></li>\n<li><a href=\"https://github.com/microsoft/playwright/commit/ff1932b68c57d81ea625c7a0d4c176d5a4b4f562\"><code>cherry-pick(#33244): fix(trace viewer): limit the number of contexts loaded in sw (#33261)</code></a></li>\n<li><a href=\"https://github.com/microsoft/playwright/commit/a96f4832e157f2e38cb230a346158c214335ed59\"><code>cherry-pick(#33245): fix(trace viewer): make LRUCache per-trace (#33260)</code></a></li>\n<li><a href=\"https://github.com/microsoft/playwright/commit/8e96d946aaa08d7afa1d9f4d5c8c502955a86d74\"><code>cherry-pick(#33211): docs: use WebSocketFrame abstraction for Java &amp; .NET</code></a></li>\n<li><a href=\"https://github.com/microsoft/playwright/commit/5b540676f29856c2592fc2268d416cc550e80ee4\"><code>cherry-pick(#33147): docs: add video to release notes</code></a></li>\n<li><a href=\"https://github.com/microsoft/playwright/commit/ceb756dad3a3089d470890fd5c75aa585a47cb7c\"><code>chore: mark v1.48.1 (#33136)</code></a></li>\n<li><a href=\"https://github.com/microsoft/playwright/commit/c3740d37afcb789fa8925fda096069e6164d933a\"><code>cherry-pick(#33133): (docker): correct Ubuntu Noble name in name template</code></a></li>\n<li><a href=\"https://github.com/microsoft/playwright/commit/2ec0c86b9347f882def7d7ddd384a3fb972f322c\"><code>cherry-pick(#33124): test: unflake ff debugger test</code></a></li>\n<li><a href=\"https://github.com/microsoft/playwright/commit/8ef381fc5f1615dec6c238cee45750ffa886e66f\"><code>cherry-pick(#33122): chore: fix ff test for codegen</code></a></li>\n<li><a href=\"https://github.com/microsoft/playwright/commit/c72a2538bc51ce789b87bfee384b875720e4552d\"><code>cherry-pick(#33110): fix(chromium): disable PlzDedicatedWorker again (#33113)</code></a></li>\n<li><a href=\"https://github.com/microsoft/playwright/commit/3d7ef3c0624f9b4f3a5fc3077bf01cf168d81dbc\"><code>cherry-pick(#33095): fix(routeWebSocket): make sure ws url without trailing slash is supported (#33112)</code></a></li>\n<li><a href=\"https://github.com/microsoft/playwright/commit/78c43bc5d39dec47d627823ecaf48af3dc66c056\"><code>cherry-pick(#33097): docs: improve docs for WebSocketRoute</code></a></li>\n<li><a href=\"https://github.com/microsoft/playwright/commit/6dc9ec7fe913776fa38d5653d301526cf343bdf6\"><code>cherry-pick(#33099): chore: fix codegen selector while debugging</code></a></li>\n<li><a href=\"https://github.com/microsoft/playwright/commit/e5bbd5effe7383c9398d9e082627d4d0cf728592\"><code>cherry-pick(#33096): chore: various v1.48.0 roll fixes for .NET</code></a></li>\n<li><a href=\"https://github.com/microsoft/playwright/commit/daff1a9025d90bbfab2fc085caa825939f5608bd\"><code>cherry-pick(#33030): fix(ui): bring back the headed param</code></a></li>\n<li><a href=\"https://github.com/microsoft/playwright/commit/8d524e24ce9cfe45aa730bb72e2e41d5664bc1c2\"><code>cherry-pick(#32996): chore: allow minimal height for trace attachments</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14876","RelatedDescription":"Closed or merged PR \"Update @playwright/test 1.48.0 → 1.48.2 (patch)\" (#14876)"},{"Id":"2635796860","IsPullRequest":true,"CreatedAt":"2024-11-05T15:33:38","Actor":"thecrypticace","Number":"14877","RawContent":null,"Title":"Rewrite urls in CSS files when using Vite","State":"open","Body":"Fixes #14784\r\n\r\nThis is an alternative to #14850 in which we actually perform url rewriting / rebasing ourselves. We ported a large portion of the URL-rewriting code from Vite (with attribution) to use here with some minor modifications. We've added test cases for the url rewriting so verifying individual cases is easy. We also wrote integration tests for Vite that use PostCSS and Lightning CSS that verify that files are found and inlined or relocated/renamed as necessary.\r\n\r\nWe also did some manual testing in the Playground to verify that this works as expected across several CSS files and directories which you can see a screenshot from here:\r\n\r\n<img width=\"1344\" alt=\"Screenshot 2024-11-05 at 10 25 16\" src=\"https://github.com/user-attachments/assets/ff0b3ac8-cdc9-4e26-af79-36396a5b77b9\">\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14877","RelatedDescription":"Open PR \"Rewrite urls in CSS files when using Vite\" (#14877)"},{"Id":"2635300644","IsPullRequest":true,"CreatedAt":"2024-11-05T12:17:46","Actor":"philipp-spiess","Number":"14871","RawContent":null,"Title":"Apply non-Tailwind CSS transforms in Vite plugin","State":"open","Body":"Fixes: #14839\r\nFixes: #14796\r\n\r\nThis PR fixes an issue in the Vite extension where we previously only ran a small list of allow-listed plugins for the second stage transform in the build step. This caused some CSS features to unexpectedly not work in production builds (one such example is Vue's `:deep(...)` selector).\r\n\r\nTo fix this, I changed the allow listed plugins that we do want to run to a block list to filter out some plugins we know we don't want to run (e.g. the Tailwind Vite plugin for example or some built-in Vite plugins that are not necessary).\r\n\r\n\r\n## Test plan\r\n\r\nThis PR adds a new integration test suite to test interop with a custom Vite transformer that looks like this:\r\n\r\n```js\r\n{\r\n  name: 'recolor',\r\n  transform(code, id) {\r\n    if (id.includes('.css')) {\r\n      return code.replace(/red/g, 'blue')\r\n    }\r\n  },\r\n}\r\n```\r\n\r\nI also validated that this does indeed fix the Vue `:deep(...)` selector related issue that we were seeing by copying the repro of #14839 into our playground:\r\n\r\n![Screenshot 2024-11-05 at 13.35.26.png](https://graphite-user-uploaded-assets-prod.s3.amazonaws.com/0Y77ilPI2WoJfMLFiAEw/4e46ab61-4acf-461a-9e40-f7c9ec3c69b2.png)\r\n\r\nYou can see in the screenshot above that the `:deep()` selector overwrites the scoped styles as expected in both the dev mode and the prod build (screenshotted).\r\n\r\nFurthermore I reproduced the issue reported in https://github.com/tailwindlabs/tailwindcss/issues/14796 and was able to confirm that in a production build, the styling works as expected:\r\n\r\n<img width=\"517\" alt=\"Screenshot 2024-11-06 at 14 26 50\" src=\"https://github.com/user-attachments/assets/ade6fe38-be0d-4bd0-9a9a-67b6fec05ae0\">\r\n\r\nLastly, I created a repository out of the biggest known-to-me Vite projects: [Astro, Nuxt, Remix, SolidStart, and SvelteKit](https://github.com/philipp-spiess/tailwind-playgrounds) and verified that both dev and prod builds show no issue and the candidate list is properly appended in each case.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14871","RelatedDescription":"Open PR \"Apply non-Tailwind CSS transforms in Vite plugin\" (#14871)"},{"Id":"2633369708","IsPullRequest":true,"CreatedAt":"2024-11-04T18:07:26","Actor":"thecrypticace","Number":"14869","RawContent":null,"Title":"Fix macOS test flakiness","State":"closed","Body":"This fixes a potential race condition with watcher cleanup but that was not the source of the flakiness.\r\n\r\nWe discovered that if Parcel watcher was subscribed to a directory _and_ a child directory it could result in events not firing — even for different directories. Oddly, this only seemed to happen if we:\r\n- Scanned a directory from oxide\r\n- Passed the returned candidates through to `compile(…).build(…)`\r\n- And subsquently wrote that result to the output CSS file\r\n\r\nHowever, if we hardcoded the list of candidates passed to `build(…)` regardless of whether or not Oxide scanned the filesystem for candidates the issue did not occur (though maybe it was just _less_ reproducible — this was after all a VERY flaky test).\r\n\r\nGiven that watching children of an already watched directory is doing unnecessary work, we decided to cleanup the list of watched directories such that this does not happen. It appears to fix the flakiness but we'll want to keep an eye on it in case the flakiness returns.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14869","RelatedDescription":"Closed or merged PR \"Fix macOS test flakiness\" (#14869)"},{"Id":"2631124380","IsPullRequest":true,"CreatedAt":"2024-11-04T16:52:12","Actor":"RobinMalfait","Number":"14863","RawContent":null,"Title":"Support migrating projects with multiple config files","State":"closed","Body":"When migrating a project from Tailwind CSS v3 to Tailwind CSS v4, then we started the migration process in the following order:\n\n1. Migrate the JS/TS config file\n2. Migrate the source files (found via the `content` option)\n3. Migrate the CSS files\n\nHowever, if you have a setup where you have multiple CSS root files (e.g.: `frontend` and `admin` are separated), then that typically means that you have an `@config` directive in your CSS files. These point to the Tailwind CSS config file.\n\nThis PR changes the migration order to do the following:\n\n1. Build a tree of all the CSS files\n2. For each `@config` directive, migrate the JS/TS config file\n3. For each JS/TS config file, migrate the source files\n\nIf a CSS file does not contain any `@config` directives, then we start by filling in the `@config` directive with the default Tailwind CSS config file (if found, or the one passed in). If no default config file or passed in config file can be found, then we will error out (just like we do now)\n\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14863","RelatedDescription":"Closed or merged PR \"Support migrating projects with multiple config files\" (#14863)"},{"Id":"2630235962","IsPullRequest":true,"CreatedAt":"2024-11-04T14:14:47","Actor":"depfu[bot]","Number":"14858","RawContent":null,"Title":"Update tree-sitter 0.21.1 → 0.22.0 (major)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this upgrade. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ tree-sitter (0.21.1 → 0.22.0) · [Repo](https://github.com/tree-sitter/node-tree-sitter)\n\n\n\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/tree-sitter/node-tree-sitter/compare/bbdba663dc0b8487f1212524a83a7c39e8a5c3ca...9743116fd3368d8130778f555a9763ed6f362325\">See the full diff on Github</a>. The new version differs by 15 commits:</p>\n<ul>\n<li><a href=\"https://github.com/tree-sitter/node-tree-sitter/commit/9743116fd3368d8130778f555a9763ed6f362325\"><code>0.22.0</code></a></li>\n<li><a href=\"https://github.com/tree-sitter/node-tree-sitter/commit/003dcf5231d006c78e012d1ecac4bfae438d81e7\"><code>ci: rework release workflow</code></a></li>\n<li><a href=\"https://github.com/tree-sitter/node-tree-sitter/commit/0034491e6dab9305ff4219012b622a84e8c36f62\"><code>build: use c++20</code></a></li>\n<li><a href=\"https://github.com/tree-sitter/node-tree-sitter/commit/2df090b9810c6098289eec2d37616019e5dcc684\"><code>feat!: update core library</code></a></li>\n<li><a href=\"https://github.com/tree-sitter/node-tree-sitter/commit/367418b3ec78e66488d017d05b44b2f21bb24b23\"><code>feat: improve type-checking</code></a></li>\n<li><a href=\"https://github.com/tree-sitter/node-tree-sitter/commit/6910a5f8f015cc10d581af4108d5606fb7cdb776\"><code>refactor(test): use node&#39;s builtin test module</code></a></li>\n<li><a href=\"https://github.com/tree-sitter/node-tree-sitter/commit/c5a49764e7dac0f1ed722eae6df8bdbb3e4739fe\"><code>Prebuild for arm64 for Linux and Windows (#226)</code></a></li>\n<li><a href=\"https://github.com/tree-sitter/node-tree-sitter/commit/9ea6558f5e732abed81511c7966c88e8d6d06f24\"><code>fix: parsing issue when string is larger than buffer length</code></a></li>\n<li><a href=\"https://github.com/tree-sitter/node-tree-sitter/commit/59469711cecb2f042f091207aeca4fbddc629c4f\"><code>fix: remove `QueryCapture.text` from typings</code></a></li>\n<li><a href=\"https://github.com/tree-sitter/node-tree-sitter/commit/fe7a212fa5767ee06c5fcd75dc5623b4e67451af\"><code>fix: add missing types in QueryMatch</code></a></li>\n<li><a href=\"https://github.com/tree-sitter/node-tree-sitter/commit/c1a64f46646cef0af21a077a919ed7a076a62417\"><code>fix: account for user-provided file descriptors in `Tree.printDotGraph`</code></a></li>\n<li><a href=\"https://github.com/tree-sitter/node-tree-sitter/commit/b7bc2add661e11bd6f0b548d87bb361b91ada4f7\"><code>Build prebuilds on Ubuntu 20.04 (#205)</code></a></li>\n<li><a href=\"https://github.com/tree-sitter/node-tree-sitter/commit/d07a2adda3fef42e52e0d3a9b3f4b6069a0208e9\"><code>fix: reset resources in  destructor to avoid memory leak</code></a></li>\n<li><a href=\"https://github.com/tree-sitter/node-tree-sitter/commit/a90b361cb5ac45e8e2f6f6e7fd56d0892de30cc7\"><code>fix: compilation with clang &gt;=18</code></a></li>\n<li><a href=\"https://github.com/tree-sitter/node-tree-sitter/commit/419da7d40a76046d53ae1c00aeafa2e0587a3e12\"><code>build: bump dependencies</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14858","RelatedDescription":"Closed or merged PR \"Update tree-sitter 0.21.1 → 0.22.0 (major)\" (#14858)"},{"Id":"2631407441","IsPullRequest":true,"CreatedAt":"2024-11-03T19:05:25","Actor":"RobinMalfait","Number":"14866","RawContent":null,"Title":"Sort upgraded CSS","State":"open","Body":"During the migration process, a lot of changes to the CSS file happen. Some parts are converted, some parts are deleted and some new CSS is added.\n\nTo make sure we are generating a sensible and good looking CSS file, we will sort the final CSS and pretty print it.\n\nThe order we came up with looks like this:\n\n```css\n/* Imports */\n@import \"tailwindcss\";\n@import \"../other.css\";\n\n/* Configuration */\n@config \"../path/to/tailwindcss.config.js\";\n\n@plugin \"my-plugin-1\";\n@plugin \"my-plugin-2\";\n\n@source \"./foo/**/*.ts\";\n@source \"./bar/**/*.ts\";\n\n@variant foo {}\n@variant bar {}\n\n@theme {}\n\n/* Border compatibility CSS */\n@layer base {}\n\n/* Utilities */\n@utility foo {}\n@utility bar {}\n\n/* Rest of your own CSS if any */\n```\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14866","RelatedDescription":"Open PR \"Sort upgraded CSS\" (#14866)"},{"Id":"2631157189","IsPullRequest":false,"CreatedAt":"2024-11-03T11:50:50","Actor":"dmk","Number":"14864","RawContent":null,"Title":"Flickering/disappearing items in Safari with Tailwind CSS hover effects in masonry layout","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.4.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nNext.js 14.2.14 (15.0.2 as well), with Tailwind CSS integrated via PostCSS configuration.\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv22.9.0\r\n\r\n**What browser are you using?**\r\n\r\nSafari (the issue is not present in Chrome)\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS, IOS\r\n\r\n**Reproduction URL**\r\n\r\n* Cards with content: https://www.dkoval.pro/projects\r\n  <img width=\"500\" alt=\"image\" src=\"https://github.com/user-attachments/assets/1cd6e5c0-ccba-4713-af88-e914c2466b9f\">\r\n  Code:\r\n  * https://github.com/dmk/dkoval.pro/blob/main/src/components/Projects/ProjectList.tsx\r\n  * https://github.com/dmk/dkoval.pro/blob/main/src/components/Projects/ProjectCard.tsx\r\n\r\n* Images: https://www.dkoval.pro/cats \r\n  <img width=\"500\" alt=\"image\" src=\"https://github.com/user-attachments/assets/bc45e73a-a3d5-47f3-b825-1e799caaf795\">\r\n  Code:\r\n  * https://github.com/dmk/dkoval.pro/blob/main/src/components/CatGallery/PhotoGallery.tsx\r\n  * https://github.com/dmk/dkoval.pro/blob/main/src/components/CatGallery/PhotoCard.tsx\r\n\r\n**Describe your issue**\r\n\r\nWhen hovering over the items in a Tailwind CSS-based masonry grid layout in Safari, elements in the top row, except for the first (leftmost) item, flicker or disappear momentarily. This issue affects cards with images as well as other non-image cards. The hover effect utilizes hover:shadow-2xl, hover:scale-105, transform, and transition-all classes on each item.\r\n\r\nIt appears that the bottom of the last element in one column is somehow overlapping onto the top of the element in the next column.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14864","RelatedDescription":"Closed issue \"Flickering/disappearing items in Safari with Tailwind CSS hover effects in masonry layout\" (#14864)"},{"Id":"2630970051","IsPullRequest":false,"CreatedAt":"2024-11-03T04:51:53","Actor":"wjonesusna2012","Number":"14862","RawContent":null,"Title":"Documented integration with angular does not work per your documentation","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nFor example: v3.4.14\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nFor example: postcss 8.4.47\r\n\r\n**What version of Node.js are you using?**\r\n\r\nFor example: v18.18.0\r\n\r\n**What browser are you using?**\r\n\r\nFor example: Chrome\r\n\r\n**What operating system are you using?**\r\n\r\nFor example: macOS\r\n\r\n[**Reproduction URL**](https://github.com/wjonesusna2012/photos)\r\n\r\nI know this is a link to a project, but I can assure you this is absolutely a minimally reproducible example of what's going on.\r\n\r\n**Describe your issue**\r\n\r\nQuite simply, I'm trying to start a new angular (w/ CSS) project that uses tailwind CSS. I followed the steps in this guide that you published exactly, and I am left with an h1 that has no styles applied to it. It appears that as documented, the styles.css resouce that includes the built Tailwind CSS classes is not being made. I don't know why, I just expect the guide that you publish to actually work. https://tailwindcss.com/docs/guides/angular","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14862","RelatedDescription":"Open issue \"Documented integration with angular does not work per your documentation\" (#14862)"},{"Id":"2630453530","IsPullRequest":true,"CreatedAt":"2024-11-02T13:25:04","Actor":"BiswajitThakur","Number":"14860","RawContent":null,"Title":"Refactor `Cursor::new` to initialize `curr` and `next` directly from `input`","State":"open","Body":"<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14860","RelatedDescription":"Open PR \"Refactor `Cursor::new` to initialize `curr` and `next` directly from `input`\" (#14860)"},{"Id":"2629961856","IsPullRequest":true,"CreatedAt":"2024-11-01T22:26:59","Actor":"tremby","Number":"14856","RawContent":null,"Title":"Fix config types for boxShadow","State":"open","Body":"`boxShadow` accepts multiple shadows just like `dropShadow` does. This patch fixes the TS typings to reflect that.\r\n\r\nSee demo showing that multiple shadows are supported (complete with it incorrectly complaining that the config is bad) here: https://play.tailwindcss.com/VHqWbbEIrz?file=config","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14856","RelatedDescription":"Open PR \"Fix config types for boxShadow\" (#14856)"},{"Id":"2629501958","IsPullRequest":true,"CreatedAt":"2024-11-01T17:48:43","Actor":"adamwathan","Number":"14855","RawContent":null,"Title":"Ensure `--inset-ring=*` and `--inset-shadow-*` variables are ignored by `inset-*` utilities","State":"closed","Body":"This PR fixes a issue where utilities like `inset-x-*`, `left-*`, `top-*`, etc. mistakenly pull values from the `--inset-ring-*` and `--inset-shadow-*` theme namespaces.\r\n\r\nFor example, the class `left-shadow-sm` currently generates this CSS:\r\n\r\n```css\r\n.left-shadow-sm {\r\n  left: var(\r\n    --inset-shadow-sm,\r\n    inset 0 1px 1px rgb(0 0 0 / 0.05)\r\n  );\r\n}\r\n```\r\n\r\nThis happens because the `--inset-ring-*` and `--inset-shadow-*` namespaces collide with the `--inset-*` namespace.\r\n\r\nWe were already handling this manually for just the `inset-*` utilities but didn't realize we needed to handle it for every related utility, so this PR fixes that.\r\n\r\nThis also fixes an issue where IntelliSense would suggest classes like `inset-x-shadow-sm` when they shouldn't actually exist.\r\n\r\nTo do this we've created this new concept of `ignoredThemeKeys` in the relevant APIs to make sure these are filtered out at the source.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14855","RelatedDescription":"Closed or merged PR \"Ensure `--inset-ring=*` and `--inset-shadow-*` variables are ignored by `inset-*` utilities\" (#14855)"},{"Id":"2628743518","IsPullRequest":false,"CreatedAt":"2024-11-01T15:33:00","Actor":"JackMcBride98","Number":"14854","RawContent":null,"Title":"Vulnerable dependency lilconfig@2.1.0 in pnpm-lock.yaml ","State":"closed","Body":"\r\n![image](https://github.com/user-attachments/assets/81003c68-a0c7-4173-b22b-5b77605bb463)\r\n\r\nIt's odd that there are two versions of lilconfig in the pnpm-lock.yaml\r\n\r\nVersions before 3.1.1 are vulnerable to  \"Arbitrary Code Execution due to the insecure usage of eval in the dynamicImport function\"\r\n[src](https://ossindex.sonatype.org/vulnerability/CVE-2024-21537?component-type=npm&component-name=lilconfig&utm_source=auditjs&utm_medium=integration&utm_content=4.0.45)\r\n\r\nHaving cloned the repo and looked at the git history it appears this was caused by PR #14769 @adamwathan  \r\n\r\nThe project I'm working on has strict security requirements, so would appreciate if this could get fixed :)\r\n\r\nThanks for all your hard work. Absolutely love tailwindcss 😍\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14854","RelatedDescription":"Closed issue \"Vulnerable dependency lilconfig@2.1.0 in pnpm-lock.yaml \" (#14854)"},{"Id":"2627707773","IsPullRequest":true,"CreatedAt":"2024-10-31T19:53:43","Actor":"thecrypticace","Number":"14850","RawContent":null,"Title":"Generate CSS after Vite handles imports during prod builds","State":"open","Body":"When we started handling `@import` ourselves in #14446 we inadvertently broke Vite's URL asset url rewriting inside of some imported CSS files. \r\n\r\nFor example, given the following files:\r\n```css\r\n/* ./main.css */\r\n@import \"./dir/imported.css\";\r\n\r\n/* ./dir/imported.css */\r\n.foo {\r\n  background: url(../image.png);\r\n}\r\n\r\n/* ./image.png */\r\n/* … */\r\n```\r\n\r\nWe'd flatten the import CSS and you'd end up with the following:\r\n```css\r\n/* main.css */\r\n.foo {\r\n  background: url(../image.png);\r\n}\r\n\r\n/* ./image.png */\r\n/* … */\r\n```\r\n\r\nAnd, as you can see, `../image.png` does not exist relative to the \"final\" CSS. It should've been rewritten to `./image.png` but was not. Letting Vite handle the imports will rewrite these urls properly — which is what this PR does. It achieves this by running our CSS generation when typtical Vite plugins do rather than before (via `enforce: 'pre'`).\r\n\r\nAdditionally, because we were running the generation step early, Vue had not handled `:deep(…)` selectors in `<style scoped>` blocks yet and we were caching the unprocessed CSS. This is also fixed by this PR.\r\n\r\nIdeally both of these things would be fixable by changing how we handle imports but that will require additional APIs so this is a reasonable stopgap measure until we can do that.\r\n\r\nFixes #14839\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14850","RelatedDescription":"Open PR \"Generate CSS after Vite handles imports during prod builds\" (#14850)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-11-07T03:30:22.9383518Z","RunDurationInMilliseconds":460}