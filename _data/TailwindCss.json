{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2987396691","IsPullRequest":false,"CreatedAt":"2025-04-11T02:32:48","Actor":"birtles","Number":"17643","RawContent":null,"Title":"`shadow-inherit` is broken","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nFor example: v4.1.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nTailwind Play\n\n**What version of Node.js are you using?**\n\nTailwind Play\n\n**What browser are you using?**\n\nFirefox and Chrome\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/FYzL24UYiA\n\n**Describe your issue**\n\nNo shadow is shown when using `shadow-inherit`.\n\nWhen using `shadow-inherit` the following property is generated:\n\n```css\n--tw-shadow-color: color-mix(in oklab, inherit var(--tw-shadow-alpha), transparent);\n```\n\nI don't think `inherit` is a [`<color>`](https://developer.mozilla.org/docs/Web/CSS/color_value) as required by [`color-mix()`](https://developer.mozilla.org/docs/Web/CSS/color_value/color-mix). I also suppose browsers don't reject the declaration as invalid because it's assigning to a CSS variable with syntax \"*\".\n\nRegression from 60b0da9?\n\ncc @philipp-spiess ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17643","RelatedDescription":"Open issue \"`shadow-inherit` is broken\" (#17643)"},{"Id":"2987395600","IsPullRequest":false,"CreatedAt":"2025-04-11T02:31:41","Actor":"vitiskina","Number":"17642","RawContent":null,"Title":"[v4.0.8] Value in disabled modifier class is empty in IOS 15","State":"open","Body":"\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.8\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.1.0\n\n**What version of Node.js are you using?**\n\nv18.20.3\n\n**What browser are you using?**\n\nSafari\n\n**What operating system are you using?**\n\nmacOS 15.2\n\n\n\n**Describe your issue**\n\nI have created a button with class below\n\n```\n<button className=\"text-default bg-gray-200 disabled:bg-white disabled:opacity-20 disabled:text-default \">Hello</button>\n```\n\nIt works great in my Chrome and also Safari in macOS 15.2, but when I tested it in an IOS 15.7.9 device, the class is disabled modifier has nothing inside when I check it.\n\n<img width=\"148\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/9d6b511f-2da4-47d0-9905-deacab73c920\" />\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17642","RelatedDescription":"Open issue \"[v4.0.8] Value in disabled modifier class is empty in IOS 15\" (#17642)"},{"Id":"2986470814","IsPullRequest":false,"CreatedAt":"2025-04-10T18:12:17","Actor":"adarsh4d","Number":"17637","RawContent":null,"Title":"Safari bug: Element resizes on hover with gradient and transition","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.1.3\n\n\n**What browser are you using?**\n\nSafari Version 18.3.1 (20620.2.4.11.6)\n\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/aJdi9HF8UO\n\n**Describe your issue**\n\nIn Safari (of course), a weird bug happens when an element has a gradient background, a CSS transition, and a hover state. On hover, the element’s size changes unexpectedly, even though no dimensions are being modified. This doesn’t happen in other browsers, and in Safari, removing any one of the three (gradient, transition, or hover) makes the issue go away. So it's clearly a rendering quirk when all three are combined. This also doesn’t happen when the same properties are written in plain CSS.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17637","RelatedDescription":"Closed issue \"Safari bug: Element resizes on hover with gradient and transition\" (#17637)"},{"Id":"2985234255","IsPullRequest":true,"CreatedAt":"2025-04-10T12:47:14","Actor":"NankoPrinzhorn","Number":"17633","RawContent":null,"Title":"Add word-break: break-word to Tailwindcss","State":"closed","Body":"# Add word-break: break-word to Tailwindcss\r\nHi, \r\n\r\nI've noticed that there is no class for word-break: break-word;. \r\n\r\nWith this PR a new class called `break-word` will be added that allows text to be wrapped by word.\r\nThis is an improvement on the already existing `break-all` class.\r\n\r\nThe difference is that break-all will not take words into account when slicing content on multiple lines, while break-word does. See [Mozilla docs on work break](https://developer.mozilla.org/en-US/docs/Web/CSS/word-break)\r\n\r\n# Break-all\r\n![image](https://github.com/user-attachments/assets/ad3f7189-2b7c-449c-b86d-60c0be484920)\r\n\r\n# Break-word\r\n![image](https://github.com/user-attachments/assets/6e3a4327-e0de-476f-88c9-22e3a054aef4)\r\n\r\n\r\n### Please let me know if anything needs to be added or changed, i'll be happy to help 😊. Also if this gets approved, I'll make a PR for the docs\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17633","RelatedDescription":"Closed or merged PR \"Add word-break: break-word to Tailwindcss\" (#17633)"},{"Id":"2985230232","IsPullRequest":false,"CreatedAt":"2025-04-10T10:37:13","Actor":"kuon","Number":"17632","RawContent":null,"Title":"tailwind watch mode not refreshing files in assets folder","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\ntailwind cli\n\n**What version of Node.js are you using?**\n\nv23.4.0\n\n**What browser are you using?**\n\nfirefox\n\n**What operating system are you using?**\n\nlinux\n\n**Reproduction URL**\n\nhttps://github.com/kuon/bug-tailwind\n\n**Describe your issue**\n\nThe watch does not work for files located in the \"assets\" folder.\n\nI think [this][1] is the same issue.\n\n[1]: https://github.com/tailwindlabs/tailwindcss/discussions/16182","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17632","RelatedDescription":"Open issue \"tailwind watch mode not refreshing files in assets folder\" (#17632)"},{"Id":"2985032364","IsPullRequest":true,"CreatedAt":"2025-04-10T09:20:47","Actor":"wongjn","Number":"17630","RawContent":null,"Title":"Fix `fontSize` array upgrade","State":"open","Body":"Fixes #17622.\n\nAdds a specific handling case in `themeableValues()` in `packages/tailwindcss/src/compat/apply-config-to-theme.ts`. It seems like this has unique handling in v3 for an array value, whereby the second value is treated as a `line-height`.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17630","RelatedDescription":"Open PR \"Fix `fontSize` array upgrade\" (#17630)"},{"Id":"2983334413","IsPullRequest":true,"CreatedAt":"2025-04-09T16:31:38","Actor":"wongjn","Number":"17628","RawContent":null,"Title":"Fix container names with hyphens","State":"open","Body":"Fixes #17614.\n\nCandidate parsing for variants only account for the root `@` if there no hyphens. It seems like the current logic assumes if it *does* have a hyphen, then it would be one of `@min` or `@max`. However, with:\n\n```css\n@theme {\n  --container-foo-bar: 1440px;\n}\n```\nThen `@foo-bar` should be valid. However, we only check for `@foo-bar` and `@foo` as roots, but never `@`. This PR adds a check for `@` at the very end after iterating through root permutations.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17628","RelatedDescription":"Open PR \"Fix container names with hyphens\" (#17628)"},{"Id":"2983303550","IsPullRequest":true,"CreatedAt":"2025-04-09T16:19:44","Actor":"philipp-spiess","Number":"17627","RawContent":null,"Title":"Workaround Chrome rendering bug for `skew-*` utilities","State":"open","Body":"Closes #17621\r\n\r\nChrome as a pretty ugly rendering glitch when using a `skew-*` utility in Tailwind 4: https://play.tailwindcss.com/HuiZtbrHOc\r\n\r\nThe was not an issue in v3 since transforms were set up in a different way. Without the `var(…)` syntax, the difference boils down to this:\r\n\r\n```css\r\n.skew-v3 {\r\n  transform: rotate(0) skewX(-20deg);\r\n}\r\n\r\n.skew-v4 {\r\n  transform: rotateX(0) rotateY(0) rotateZ(0) skewX(-20deg);\r\n}\r\n```\r\n\r\nIt appears that using any of the single-dimension rotate functions will cause the Chrome rendering to glitch.\r\n\r\nAfter doing some digging, we found [that initially these `@property`s were defined as type `<transform-function>` and later changed to `*`](https://github.com/tailwindlabs/tailwindcss/issues/15144). With a type of `*`, it makes sense that the initial value of these variables can default to `initial` without any compromises, allowing us to default to something like this now:\r\n\r\n```css\r\n.skew-new {\r\n  transform: skewX(-20deg);\r\n}\r\n```\r\n\r\nTested this change in the latest version of Chrome (135) and it does make the rendering glitch in the initial issue disappear. By using the `var(--tw-rotate-x,)` syntax we also ensure this works on older versions of Safari (tested on Safari 15.5 and 16.4). \r\n\r\nNote, however, that there are still glitches happening when you combine rotate and skew in the latest version of Chrome or when you transition the `skew(…)` variable. This also happens in plain CSS with no variables though, so there isn't something we can do about this: https://play.tailwindcss.com/g3FXPEJHpn\r\n\r\n## Test plan\r\n\r\n- Tested on latest Chrome, Firefox, and Safari as well as Safari 15.5 and 16.4. \r\n\r\n<img width=\"564\" alt=\"Screenshot 2025-04-09 at 18 01 51\" src=\"https://github.com/user-attachments/assets/2e0b1c96-7c4d-41a8-b3d0-0f6134a3e635\" />\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17627","RelatedDescription":"Open PR \"Workaround Chrome rendering bug for `skew-*` utilities\" (#17627)"},{"Id":"2983286294","IsPullRequest":true,"CreatedAt":"2025-04-09T16:12:18","Actor":"mririgoyen","Number":"17626","RawContent":null,"Title":"Add the default container sizes to the default theme","State":"open","Body":"# What?\r\n\r\nThis PR adds the default container sizes to the exposed `defaultTheme` to coincide with the [documentation](https://tailwindcss.com/docs/responsive-design#container-size-reference).\r\n\r\n```\r\ncontainer: {\r\n  '@3xs': '16rem',\r\n  '@2xs': '18rem',\r\n  '@xs': '20rem',\r\n  '@sm': '24rem',\r\n  '@md': '28rem',\r\n  '@lg': '32rem',\r\n  '@xl': '36rem',\r\n  '@2xl': '42rem',\r\n  '@3xl': '48rem',\r\n  '@4xl': '56rem',\r\n  '@5xl': '64rem',\r\n  '@6xl': '72rem',\r\n  '@7xl': '80rem',\r\n},\r\n```\r\n\r\n# Why?\r\n\r\nThe `defaultTheme` [exposed by Tailwind v4 includes an empty `container` object](https://github.com/tailwindlabs/tailwindcss/blob/cdecb55702b456383f1b857756532dfdbc45b554/packages/tailwindcss/src/compat/default-theme.ts#L239). However, the [documentation defines](https://tailwindcss.com/docs/responsive-design#container-size-reference) what the default container sizes are.\r\n\r\nBecause there is no `resolveConfig` option in v4 ([see this discussion](https://github.com/tailwindlabs/tailwindcss/discussions/14764) for more on that), when creating utilities, it may be necessary to refer to the default theme in JS.\r\n\r\n```\r\nimport defaultTheme from 'tailwindcss/defaultTheme';\r\nconsole.log(defaultTheme.screens);\r\nconsole.log(defaultTheme.container);\r\n```\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17626","RelatedDescription":"Open PR \"Add the default container sizes to the default theme\" (#17626)"},{"Id":"2982221700","IsPullRequest":false,"CreatedAt":"2025-04-09T09:40:25","Actor":"johurul-haque","Number":"17622","RawContent":null,"Title":"Upgrade cli does not output line height separately from the fontsize array","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 15.2.5\n\n**What version of Node.js are you using?**\n\nFor example: v22.14.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nUbuntu Linux (24.10)\n\n**Reproduction URL**\n\n/\n\n**Describe your issue**\n\nIn tailwind config, we could do something like this:\n\n```ts\nextend: {\n  fontSize: {\n    \"title-custom\": [\"50px\", \"62px\"]\n  }\n}\n```\nWhich would generate\n```css\n.title-custom {\n  font-size: 50px;\n  line-height: 62px;\n}\n```\nUpgrading to v4, the cli outputs\n```css\n --text-title-custom: 50px, 62px;\n```\nAnd it does not generate any classes.\n\n**Expected Behaviour**\n\nThe cli should treat the second element of the array as line-height and add a new variable for it rather than adding it to one variable separated by a comma.\n\n```css\n--text-title-custom: 50px;\n--text-title-custom--line-height: 62px;\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17622","RelatedDescription":"Open issue \"Upgrade cli does not output line height separately from the fontsize array\" (#17622)"},{"Id":"2978028468","IsPullRequest":false,"CreatedAt":"2025-04-09T09:07:44","Actor":"aedwardg","Number":"17602","RawContent":null,"Title":"[v4] `skew` utility classes add phantom border with child element's bg-color on Chrome browsers","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nPhoenix LiveView, but this presents itself in Tailwind playground as well, so it's not Phoenix related.\n\n**What version of Node.js are you using?**\n\nv20.9.0, but this presents itself in Tailwind playground as well\n\n**What browser are you using?**\nThis bug appears in Chrome (and likely chromium-based browsers). I don't see it in Firefox or Safari.\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/k6m7r3zHoZ\n\n(if you don't see it, try moving the horizontal divider between the html and preview -- it randomly disappears at some resolutions)\n\n**Describe your issue**\n\n**Current behavior:**\nTailwind 4.x `skew` utility classes on parent elements add border artifact with inner elements' background color extending to the full size of the parent in Chrome browsers.\n\nAs can be seen in the Tailwind playground link above, the inner div has a `w-1/2`, but what looks like a 1-2px border appears in the child's background color along 1 or more edges of the parent element. \n\n![Image](https://github.com/user-attachments/assets/82ca39a6-a009-4700-9944-0bb6448897d1)\n\nMost commonly, you can see the \"border\" along the bottom edge, but if you drag the horizontal divider between the html and preview, you will see that at some resolutions the border appears along the right edge or even disappears altogether.\n\nNote: the example uses `-skew-x-20`, but it also appears with `skew-x-20`. Additionally, using inline styles: `style=\"transform: skew(-20deg)\"` instead of `-skew-x-20` appears to behave as expected.\n\n**Expected behavior:** \nNone of the background color from the inner div should extend past the bounds of that element. This is current behavior for Tailwind 4.x on Firefox and Safari, and on all browsers for Tailwind 3.x","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17602","RelatedDescription":"Closed issue \"[v4] `skew` utility classes add phantom border with child element's bg-color on Chrome browsers\" (#17602)"},{"Id":"2981922765","IsPullRequest":true,"CreatedAt":"2025-04-09T08:26:52","Actor":"depfu[bot]","Number":"17619","RawContent":null,"Title":"Update @types/react-dom 19.0.4 → 19.1.1 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​types/react-dom (19.0.4 → 19.1.1) · [Repo](https://github.com/DefinitelyTyped/DefinitelyTyped)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17619","RelatedDescription":"Closed or merged PR \"Update @types/react-dom 19.0.4 → 19.1.1 (minor)\" (#17619)"},{"Id":"2981866987","IsPullRequest":false,"CreatedAt":"2025-04-09T08:26:37","Actor":"sibersky","Number":"17618","RawContent":null,"Title":"Tailwind CSS v4.1.3: npm install fails to create .bin links / npx error \"could not determine executable\"","State":"closed","Body":"When installing `tailwindcss@4.1.3` using npm v10.8+ (tested on Node v20 LTS and Node v22 Current), the necessary executable links (`tailwindcss`, `tailwindcss.cmd`, etc.) are not created in the `node_modules/.bin` directory. Consequently, attempting to run the CLI via `npx tailwindcss` fails with the error `npm error could not determine executable to run`.\n\nThis issue occurs even in a minimal, clean project setup and has been reproduced on both Windows and Linux (Kali).\n\nImportantly, installing `tailwindcss@3` under the *exact same environment conditions* works correctly: the `.bin` links are created, and `npx tailwindcss --version` executes successfully. This strongly suggests the issue is specific to the v4.1.3 package or its interaction with recent npm versions.\n\n**Steps to Reproduce:**\n\n1.  Create a new directory and navigate into it:\n    ```bash\n    mkdir test-tailwind && cd test-tailwind\n    ```\n2.  Initialize a new npm project:\n    ```bash\n    npm init -y\n    ```\n3.  Install Tailwind CSS v4.1.3:\n    ```bash\n    npm install tailwindcss@4.1.3 --save-dev\n    ```\n4.  Check for bin links (this step fails):\n    ```bash\n    # On Linux/macOS/Git Bash:\n    ls ./node_modules/.bin/tailwind*\n    # On PowerShell:\n    Get-ChildItem ./node_modules/.bin/tailwind*\n    ```\n5.  Attempt to run via npx (this step fails):\n    ```bash\n    npx tailwindcss -v\n    ```\n\n**Expected Behavior:**\n\n*   Step 4 should list the executable links (`tailwindcss`, `tailwindcss.cmd`, etc.).\n*   Step 5 should execute the Tailwind CLI (and potentially output version info or ask for input, but *not* produce the npx error).\n\n**Actual Behavior:**\n\n*   Step 4 produces no output (or a \"No such file or directory\" / \"PathNotFound\" error).\n*   Step 5 fails with the error:\n    ```\n    npm error could not determine executable to run\n    npm error A complete log of this run can be found in: <path-to-log-file>\n    ```\n    (The debug log indicates the failure occurs in `libnpmexec`'s `getBinFromManifest` function).\n\n**Environment:**\n\n*   **Tailwind CSS Version:** 4.1.3\n*   **Node.js Versions Tested:** v20.19.0 (LTS), v22.14.0 (\"Current\")\n*   **NPM Versions Tested:** v10.8.2 (with Node 20), v10.9.2 (with Node 22)\n*   **Operating Systems Tested:** Windows 10/11, Kali Linux (Issue occurs identically on both)\n\n**Additional Context:**\n\n*   Running `npm install tailwindcss@3 --save-dev` in the same environments works correctly, creating the `.bin` links and allowing `npx tailwindcss --version` to execute.\n*   Other packages (e.g., `next`) installed in the same projects *do* correctly create their `.bin` links.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17618","RelatedDescription":"Closed issue \"Tailwind CSS v4.1.3: npm install fails to create .bin links / npx error \"could not determine executable\"\" (#17618)"},{"Id":"2981337727","IsPullRequest":false,"CreatedAt":"2025-04-09T02:01:50","Actor":"AntonyZ89","Number":"17615","RawContent":null,"Title":"Nuxt build breaks CSS with when using `@media (width <= theme('screen.lg'))`","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.1.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.2.5\n\n**What version of Node.js are you using?**\n\nv20.17.0\n\n**What browser are you using?**\n\nChromium & Opera\n\n**What operating system are you using?**\n\nLinux, Arch Linux\n\n**Reproduction URL**\n\nhttps://codesandbox.io/p/devbox/autumn-snow-pgtnw9\n\n**Describe your issue**\n\nI have the following CSS used in `components/Logo.vue`:\n\n```css\n.logo {\n  --stroke: var(--width-md);\n\n  &.full-stroke {\n    .logo-g,\n    .logo-y,\n    .logo-w {\n      letter-spacing: var(--tracking-wide);\n\n      text-shadow:\n        calc(1px * -1) var(--stroke) var(--color),\n        calc(1px * -1) calc(1px * -1) var(--color),\n        var(--stroke) calc(1px * -1) var(--color),\n        calc(1px * -1) 0px var(--color),\n        0px var(--stroke) var(--color),\n        var(--stroke) var(--stroke) var(--color);\n    }\n  }\n}\n```\n\nIn development mode, it loads correctly:\n\n![Image](https://github.com/user-attachments/assets/904f7691-7a40-4556-a634-0cf1e8fb63d0)\n\nHowever, after building the project, the CSS doesn't load as expected:\n\n![Image](https://github.com/user-attachments/assets/e3aca315-92dd-4440-9dfe-43ab26f29ff2)\n\nThe issue seems to be caused by missing spaces in the compiled CSS output:\n\n```css\n.logo.full-stroke .logo-g[data-v-75e84bac],.logo.full-stroke .logo-w[data-v-75e84bac],.logo.full-stroke .logo-y[data-v-75e84bac] {\n    letter-spacing: var(--tracking-wide);\n/*                                                    \\/ missing space */\n    text-shadow: -1pxvar(--stroke)var(--color),-1px-1pxvar(--color),var(--stroke)-1pxvar(--color),-1px0px var(--color),0 var(--stroke)var(--color),var(--stroke)var(--stroke)var(--color)\n/*                               /\\ missing space */\n}\n```\n\nAs you can see, there are missing spaces between values like `-1px`, `var(--stroke)`, and `var(--color)`.\n\nI have tested the same code using only Vue (without Nuxt), and this issue does not occur. The text-shadow with CSS variables renders correctly both in development and after build.\n\nThe bug apparently occurs when using `@media` with `theme()` inside a CSS block.\n\nCauses the bug:\n```css\n@media (width <= theme('screens.lg')) {\n  .logo {\n    --stroke: var(--width);\n  }\n}\n```\n\nWorks fine::\n```css\n@media (width <= var(--breakpoint-lg)) {\n  .logo {\n    --stroke: var(--width);\n  }\n}\n```\n\nIt seems that using theme() directly inside a media query might break CSS parsing or value resolution during the build process (especially when combined with other custom properties).","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17615","RelatedDescription":"Open issue \"Nuxt build breaks CSS with when using `@media (width <= theme('screen.lg'))`\" (#17615)"},{"Id":"2981010848","IsPullRequest":false,"CreatedAt":"2025-04-08T21:39:32","Actor":"tremby","Number":"17614","RawContent":null,"Title":"Hyphenated custom container sizes aren't handled properly","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nv4.1.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nTailwind Play\n\n**What version of Node.js are you using?**\n\nTailwind Play\n\n**What browser are you using?**\n\nn/a\n\n**What operating system are you using?**\n\nn/a\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/OFXbKDyZ5G\n\n**Describe your issue**\n\nIt seems hyphenated custom theme properties are supposed to be supported, like in the example the `--color-nice-blue` works just fine with a `bg-nice-blue`.\n\nBut if I try the same with a custom container size I get broken behaviour.\n\nIf I set `--container-custom`, I can apply `@custom:font-bold` and I see it render bold (since we're wider than the specified 2rem). In Tailwind Play's autocomplete, when I type `@cus` I see `@custom:` and `@max-custom:` and `@min-custom:`. This is all as expected.\n\nBut if I set `--container-hyphenated-custom`, the same doesn't work, and I don't see it render bold. In the autocomplete, interestingly, I see `@max-hyphenated-custom:` and `@min-hyphenated-custom:`, but no `@hyphenated-custom:`.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17614","RelatedDescription":"Open issue \"Hyphenated custom container sizes aren't handled properly\" (#17614)"},{"Id":"2980953995","IsPullRequest":false,"CreatedAt":"2025-04-08T21:11:28","Actor":"andymerskin","Number":"17612","RawContent":null,"Title":"[v4.1.3] Saved changes not reflected between hot-reloads / refreshes","State":"open","Body":"I'm not sure if this is directly [related to this PR](https://github.com/tailwindlabs/tailwindcss/pull/17554), but after updating to Tailwind v4.1.3 which includes this change, I'm still not seeing changes reflected on each hot reload (but sometimes it works!), forcing me to restart my dev server for simple className changes in any context. For some reason Tailwind isn't picking up on new utilities being used. I haven't fully pinned down the cases where it's happening, but it's difficult to reproduce reliably.\n\nMost recently, I changed the ordering inside a `clsx` + `tailwind-merge` call (`cn`), to change a string className, and move a `className` prop value at the end:\n```tsx\n// before\n<div className={cn(\"bg-white\", className, getMyClassnames(props))} />\n\n// after\n<div className={cn(\"bg-black\", getMyClassnames(props), className)} />\n```\n\nNo hot reload and no update after a hard refresh, but after restarting the dev server, my change looked correct. Note that `getMyClassnames(...)` is returning a string of Tailwind classes.\n\n### Project details:\n- React 17 SPA on Vite ~4~ 6 and Turborepo, with SWC plugin\n- We previously used Twin.Macro w/ Tailwind v3 and migrated it over to Tailwind v4\n\n### Environment:\n- turbo 2.0.4\n- vite ~4.5.6~ 6.2.5\n  - @vitejs/plugin-react-swc 3.8.1\n  - @swc/plugin-styled-components 7.1.0\n- react 17.x\n- tailwind 4.1.3\n- typescript 4.9.3\n\nOverall things are working fine. If upgrading Vite or Turbo is necessary to squash some of this behavior, happy to do it, but it may be quite a lift for us depending on how smoothly that goes.\n\nI don't currently have time to put together a repro repo, but if my schedule opens up I may give it a shot. I'm more curious if anyone else is experiencing this with the latest version.\n\n_Originally posted by @andymerskin in https://github.com/tailwindlabs/tailwindcss/issues/17554#issuecomment-2787164027_\n            ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17612","RelatedDescription":"Open issue \"[v4.1.3] Saved changes not reflected between hot-reloads / refreshes\" (#17612)"},{"Id":"2980593984","IsPullRequest":false,"CreatedAt":"2025-04-08T18:11:00","Actor":"jasonohdz1501","Number":"17610","RawContent":null,"Title":"Webpack hot reloading loop with Gatsby + Tailwind v4 (after migration)","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nTailwind 4.1.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n \"gatsby\": \"^5.14.1\",  \"gatsby-plugin-postcss\": \"^6.13.1\"\n\n**What version of Node.js are you using?**\n\n v20.13.1\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Describe your issue**\n\nAfter upgrading to Tailwind v4, I've found issues when running gatsby develop, cause seems that the new configuration of Tailwind is crashing with the way Webpack and Gatsby watch the css changes through postcss. My guessing is that since Gatsby is using 'gatsby-plugin-postcss', seems that now the separate postcss package for tailwind is crashing the hot reload and it's causing an infinite loop, by console it's throwing this:\n\n```\n[HMR] css reload http://localhost:8000/commons.css\nclient.js:247 [HMR] bundle 'develop' rebuilt in 226ms\nclient.js:238 [HMR] bundle rebuilding\nclient.js:247 [HMR] bundle 'develop' rebuilt in 229ms\nclient.js:238 [HMR] bundle rebuilding\nclient.js:247 [HMR] bundle 'develop' rebuilt in 232ms\nclient.js:238 [HMR] bundle rebuilding\nclient.js:247 [HMR] bundle 'develop' rebuilt in 245ms\nclient.js:238 [HMR] bundle rebuilding\nprocess-update.js:123 [HMR] Updated modules:\nprocess-update.js:125 [HMR]  - ./.cache/blank.css\nprocess-update.js:125 [HMR]  - ./src/styles/globals.css\n```\nSo, I've tried several things such as: included importing the tailwind.config.js [per as docs](https://tailwindcss.com/docs/upgrade-guide#using-a-javascript-config-file), keep the `@tailwind base; @tailwind components; @tailwind utilities;`, among others\n\nBefore, to try implement a different way of using tailwind, which will be stay apart of webpack-postcss, instead going down through a separate build process using tailwindcss/cli and include that extra step in the build pipeline. I'd like to validate with you if there's some solution that I'm not seeing, thanks","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17610","RelatedDescription":"Open issue \"Webpack hot reloading loop with Gatsby + Tailwind v4 (after migration)\" (#17610)"},{"Id":"2979151433","IsPullRequest":false,"CreatedAt":"2025-04-08T09:39:38","Actor":"envygeeks","Number":"17604","RawContent":null,"Title":"Range ({1..9..1}) not working for size, w, h","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n* Tailwind: 4.1.3\n* Tailwind/Vite: 4.1.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n* Nuxt.js: 3.17.0-29067302.1ff9d728\n* Nuxt.js: 3.16\n* Vite: 3.1.1\n\n**What version of Node.js are you using?**: v18.20.5\n**What browser are you using?**: Safari\n**What operating system are you using?**: macOS Sequoia \n\n**Reproduction URL**: \n\nhttps://stackblitz.com/edit/nuxt-starter-mdqexezm\n\n[_You'll have to download it and boot it locally because it won't boot on StackBlitz for some reason_](https://github.com/stackblitz/webcontainer-core/issues/1812)\n\n**Describe your issue**\n\nFor a certain component which can take a dynamic size, I opted to try and safelist some classes using a range to avoid having a long list, however, this doesn't seem to be working:\n\n```\n<style scoped>\n  @reference \"~/assets/css/main.css\";\n\n  /**\n   * Works\n   */\n  @source inline(\"size-1\");\n  @source inline(\"size-2\");\n  @source inline(\"size-3\");\n  @source inline(\"size-4\");\n  @source inline(\"size-5\");\n  @source inline(\"size-6\");\n  @source inline(\"size-7\");\n  @source inline(\"size-8\");\n\n  /**\n   * Broken\n   */\n  @source inline(\"h-{1..9..1}\");\n  @source inline(\"size-{1..9..1}\");\n  @source inline(\"size-{1,2,3,4,5,6,7,8,9}\")\n  @source inline(\"w-{1..9..1}\");\n</style>\n```\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17604","RelatedDescription":"Closed issue \"Range ({1..9..1}) not working for size, w, h\" (#17604)"},{"Id":"2977866333","IsPullRequest":false,"CreatedAt":"2025-04-07T19:59:43","Actor":"mafifi","Number":"17601","RawContent":null,"Title":"@source Not Working as Expected During Build Process","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nFor example: v4.1.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.2.5\n\n**What version of Node.js are you using?**\n\nv20.18.1\n\n**What browser are you using?**\n\nEdge 135.0.3179.54\n\n**What operating system are you using?**\n\nmac OS 15.4\n\n**Reproduction URL**\n\nhttps://github.com/mafifi/monorepo\n\n**Describe your issue**\n\nTry running laifu-nini in preview, this will look visually correct.\nEdit the app.css file inside laifu-nini and edit\n\n```css\n@source '../../../packages/ui/src/lib/components/ui/button/*.svelte';\n```\n\nto\n```css\n@source '../../../packages/ui/src/lib/components/ui/*/*.svelte';\n```\n\nThis will break visually.\n\nThere appears to be an inherit limit on the number of files / directories, `@source` will accept.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17601","RelatedDescription":"Open issue \"@source Not Working as Expected During Build Process\" (#17601)"},{"Id":"2975603981","IsPullRequest":false,"CreatedAt":"2025-04-07T19:26:37","Actor":"gschwim","Number":"17581","RawContent":null,"Title":"twcss very slow in dev, >30s to load page after hmr update/ssr reload","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.1.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nsveltekit 2.20.4, vite 6.2.4 \n\n**What version of Node.js are you using?**\n\n22.14.0\n\n**What browser are you using?**\n\nchrome, brave\n\n**What operating system are you using?**\n\nMacOS\n\n[**Reproduction repo is here**](https://github.com/gschwim/svelte-tcwss/tree/b8695a6a59d1bf9a6acda2e5491383de625c0e5a)\n\n**Describe your issue**\n\nBase sveltekit install, added tailwindcss, imported to src/app.css. Once the import is added any change to content, css, or otherwise takes >30 seconds to refersh in the browser. I found [this issue](https://github.com/tailwindlabs/tailwindcss/issues/17522#issue-2968155486} that describes what I'm seeing very well, but the times are much longer, and I'm running the version of twcss that should have the fix.\n\nI ran `pnpm run dev` with env variable DEBUG=1 and received the following output (annotated):\n\n```text\n➜ ➜ pnpm run dev --host\n\n> sk-demo@0.0.1 dev /Users/demo/tmp/sk-demo\n> vite dev --host\n\n\n  VITE v6.2.4  ready in 2077 ms\n\n  ➜  Local:   http://localhost:5173/\n  ➜  Network: http://172.16.1.194:5173/\n  ➜  Network: http://172.16.3.5:5173/\n  ➜  press h + enter to show help\n\n[27945.47ms] [@tailwindcss/vite] Generate CSS (serve)\n[  198.84ms]   ↳ Setup compiler\n[    2.35ms]   ↳ Setup scanner\n[12870.16ms]   ↳ Scan for candidates\n[  886.94ms]   ↳ Build CSS\n\n\n[25024.72ms] [@tailwindcss/vite] Generate CSS (serve)\n[   48.78ms]   ↳ Setup compiler\n[    0.09ms]   ↳ Setup scanner\n[10152.08ms]   ↳ Scan for candidates\n[  802.87ms]   ↳ Build CSS\n\nend cold start, making change to +page.svelte and saving:\n\n[14450.78ms] [@tailwindcss/vite] Generate CSS (serve)\n[ 7107.51ms]   ↳ Scan for candidates\n[   38.39ms]   ↳ Build CSS\n\n9:24:33 PM [vite] (client) hmr update /src/routes/+page.svelte, /src/app.css\n9:24:33 PM [vite] (ssr) page reload src/routes/+page.svelte\n\n[14511.12ms] [@tailwindcss/vite] Generate CSS (serve)\n[ 7648.28ms]   ↳ Scan for candidates\n[   29.07ms]   ↳ Build CSS\n\n9:24:48 PM [vite] (client) hmr update /src/routes/+page.svelte, /src/app.css\n9:24:48 PM [vite] (ssr) page reload src/routes/+page.svelte\n\nnow a change to +layout.svelte\n\n9:25:25 PM [vite] (client) hmr update /src/routes/+layout.svelte, /src/app.css\n9:25:25 PM [vite] (ssr) page reload src/routes/+layout.svelte\n\n[13850.72ms] [@tailwindcss/vite] Generate CSS (serve)\n[ 6885.26ms]   ↳ Scan for candidates\n[   76.62ms]   ↳ Build CSS\n\n\n[14184.31ms] [@tailwindcss/vite] Generate CSS (serve)\n[ 7385.91ms]   ↳ Scan for candidates\n[   24.50ms]   ↳ Build CSS\n\n```\n\nSo on average, very minor changes to the files above cause a >40 second time for processing before the page reloads. This also extends to app.css changes.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17581","RelatedDescription":"Closed issue \"twcss very slow in dev, >30s to load page after hmr update/ssr reload\" (#17581)"},{"Id":"2977305042","IsPullRequest":true,"CreatedAt":"2025-04-07T16:19:43","Actor":"ABC124elizabeth","Number":"17598","RawContent":null,"Title":"Dynamic list manager","State":"closed","Body":"<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17598","RelatedDescription":"Closed or merged PR \"Dynamic list manager\" (#17598)"},{"Id":"2977227313","IsPullRequest":false,"CreatedAt":"2025-04-07T15:31:29","Actor":"wintercounter","Number":"17596","RawContent":null,"Title":"Container query classes cannot take CSS variable as arbitrary breakpoint value","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.3\n\n**Reproduction URL**\nhttps://play.tailwindcss.com/X6UI3NEaEi\n\n**Describe your issue**\n\nContainer query classes cannot take CSS variable as arbitrary breakpoint value.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17596","RelatedDescription":"Closed issue \"Container query classes cannot take CSS variable as arbitrary breakpoint value\" (#17596)"},{"Id":"2977027803","IsPullRequest":true,"CreatedAt":"2025-04-07T14:17:06","Actor":"RobinMalfait","Number":"17595","RawContent":null,"Title":"Ignore binary extensions, except in folder names","State":"open","Body":"We generate a glob to ignore binary extensions that looks something like this:\r\n```\r\n*.{mp4,pages,exe,…}\r\n```\r\n\r\nHowever, if you have a folder that happens to end in `.pages` for example, then this folder will be ignored in its entirety.\r\n\r\nTo solve this, we will instead generate the following globs:\r\n```\r\n*.{mp4,pages,exe,…}\r\n!*.{mp4,pages,exe,…}/\r\n```\r\n\r\nThis way, the `/` indicates that we are dealing with a folder and that these should _not_ be ignored.\r\n\r\nOnly downside with this approach is that if you have a `.gitignore` file that contains `foo.pages/`, then `!*.pages/` will win from the `.gitignore`. The solution would be to use an explicit `@source not \"foo.pages\"`.\r\n\r\nFixes: #17569\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17595","RelatedDescription":"Open PR \"Ignore binary extensions, except in folder names\" (#17595)"},{"Id":"2974998477","IsPullRequest":false,"CreatedAt":"2025-04-07T13:48:20","Actor":"ediamin","Number":"17576","RawContent":null,"Title":"Unused test data in brace-expansion.test.ts","State":"closed","Body":"I found an issue in the `brace-expansion.test.ts` file where there's an unused test case at line 20.\n\n**File**: [packages/tailwindcss/src/utils/brace-expansion.test.ts](https://github.com/tailwindlabs/tailwindcss/blob/5a77c9dfc4bcc1f83fe3269fbbcc27386d5e8572/packages/tailwindcss/src/utils/brace-expansion.test.ts#L20)\n\n**Issue**: The test case for `'a/{0..10..5}/b'` is incorrectly structured. The third array element `['a/{10..0..5}/b', ['a/10/b', 'a/5/b', 'a/0/b']]` has no effect on the test execution.\n\n**Current code**:\n```ts\n...\n[\n  'a/{0..10..5}/b',\n  ['a/0/b', 'a/5/b', 'a/10/b'],\n  ['a/{10..0..5}/b', ['a/10/b', 'a/5/b', 'a/0/b']],\n],\n...\n```\n\n**Expected structure**:\n```ts\n...\n['a/{0..10..5}/b', ['a/0/b', 'a/5/b', 'a/10/b']],\n['a/{10..0..5}/b', ['a/10/b', 'a/5/b', 'a/0/b']],\n...\n```\n\nI'm not sure what the original intention of this array was. If I move this array to the parent level, the test fails, meaning `expand('a/{10..0..5}/b')` does not return `['a/10/b', 'a/5/b', 'a/0/b']`. The actual output is `['a/0/b', 'a/10/b', 'a/5/b']`.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17576","RelatedDescription":"Closed issue \"Unused test data in brace-expansion.test.ts\" (#17576)"},{"Id":"2976588969","IsPullRequest":true,"CreatedAt":"2025-04-07T13:48:19","Actor":"RobinMalfait","Number":"17591","RawContent":null,"Title":"Fix brace expansion with range going down","State":"closed","Body":"This PR fixes an issue where a test was setup wrong. While fixing the test, I also noticed that the actual computation was wrong. There are a few cases we have to make sure they work when working with ranges:\r\n\r\n- `0..10..5` — range going from low to high, with a positive step. This should result in `0 5 10`.\r\n- `0..10..-5` — range going from low to high, with a negative step. This should result in `10 5 0`.\r\n- `10..0..5` — range going from high to low, with a positive step. This should result in  `10 5 0`.\r\n- `10..0..-5` — range going from high to low, with a negative step. This should result in  `0 5 10`.\r\n\r\nThis technically means that there are multiple ways to do the same thing. And in case of Tailwind CSS the order doesn't really matter because we apply custom sort rules for utilities. Luckily, the order here doesn't have any influence on the actual generated CSS so it's not the end of the world to support it.\r\n\r\nIntellisense does use a more heavy brace expansion library, and if we don't support this, it also means that you can see a preview of generated classes without generating the actual classes. This also fixes that.\r\n\r\nE.g.: Note how the preview shows the correct values, but nothing has been generated (this is before the change of this PR).\r\n\r\n<img width=\"500\" alt=\"image\" src=\"https://github.com/user-attachments/assets/fc2065d2-f2c1-4017-b521-8fd72d41db42\" />\r\n\r\nFixes: #17576\r\n\r\n\r\n## Test plan\r\n\r\n1. Hoisted the test (`a/{10..0..5}/b`), which failed\r\n2. Fixed the implementation to make the test pass\r\n3. Added an additional test (`a/{10..0..-5}/b`)","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17591","RelatedDescription":"Closed or merged PR \"Fix brace expansion with range going down\" (#17591)"},{"Id":"2976607077","IsPullRequest":false,"CreatedAt":"2025-04-07T11:53:05","Actor":"crswll","Number":"17593","RawContent":null,"Title":"preflight.css overwrites default `margin: auto` for `[popover]` elements.","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nFor example: v4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: NA\n\n**What version of Node.js are you using?**\n\nFor example: NA\n\n**What browser are you using?**\n\nFor example: NA\n\n**What operating system are you using?**\n\nFor example: NA\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/5vL9gz1YK3\n\n**Describe your issue**\n\npreflight.css overwrites the default `margin: auto` for `[popover]` UA styles. Maybe not a bug but doesn't seem intuitive either? Thought I'd mention it.\n\n![Image](https://github.com/user-attachments/assets/65d6cf74-e704-4124-8965-5a903fd6ba42)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17593","RelatedDescription":"Open issue \"preflight.css overwrites default `margin: auto` for `[popover]` elements.\" (#17593)"},{"Id":"2975013524","IsPullRequest":false,"CreatedAt":"2025-04-07T11:07:13","Actor":"zaib-shekh","Number":"17577","RawContent":null,"Title":"Error after installing with tailwindcss using vite","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n\nUsing: v4.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nUsing : Vite 6.1.0 + react\n\n**What version of Node.js are you using?**\n\nUsing: v20.15.0\n\n**What browser are you using?**\n\nUsing: Chrome, Brave\n\n**What operating system are you using?**\n\nUsing: Windows\n\n**Reproduction URL**\n\nA Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\n\nA reproduction is **required** when filing an issue — any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.\n\n**Describe your issue**\n\nI installed Tailwind CSS for my Vite + React project and followed all the necessary steps from the Tailwind CSS documentation. However, when I run the project, I get the following error:\n\n``` bash\nError: EPERM: operation not permitted, rmdir 'C:\\Users\\<User>\\OneDrive\\Desktop\\<Project Name>\\node_modules\\.vite\\deps'\n```\n\nI've tried several times, but I keep getting the same error. I suspect the issue might be related to OneDrive or file permission conflicts.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17577","RelatedDescription":"Closed issue \"Error after installing with tailwindcss using vite\" (#17577)"},{"Id":"2975219244","IsPullRequest":false,"CreatedAt":"2025-04-07T11:05:19","Actor":"mowabidev","Number":"17579","RawContent":null,"Title":"Infinite rendering with Webpack Encore from Symfony 7.2 and Tailwindcss 4.1.3","State":"closed","Body":"Hello.\n\nI followed the [documentation for Symfony's app](https://tailwindcss.com/docs/installation/framework-guides/symfony) to install tailwindcss 4.1 in my Symfony project. Compilation goes smoothly with Webpack Encore and my page displays well. But I notice in my console that Webpack continues to compile ad infinitum.\n\nHas anyone had this problem before?\nHow can I fix it?\n\nTailwindcss version : \"^4.1.3\"\nSymfony version : \"7.2.*\"","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17579","RelatedDescription":"Closed issue \"Infinite rendering with Webpack Encore from Symfony 7.2 and Tailwindcss 4.1.3\" (#17579)"},{"Id":"2976478025","IsPullRequest":false,"CreatedAt":"2025-04-07T11:04:38","Actor":"ehsanrezaeee","Number":"17587","RawContent":null,"Title":"installing tailwindcss v4.1.3 crashing the react vite app with Error: Cannot find module '../lightningcss.win32-x64-msvc.node'","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.1.3\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nReact 19.1.0, Vite 6.2.0\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nWindows 10 Education\n\n**Reproduction URL**\n\n[https://github.com/ehsanrezaeee/lightningcss-bug-tailwindcss.git](url)\n\n**Describe your issue**\n\ninstalling fresh react vite application with \"pnpm create vite\" and then installing tailwindcss v4.1 with vite configuration. then starting the development server and facing this error:\n\n\n pnpm dev\n\n> react@0.0.0 dev C:\\Users\\Free\\WebstormProjects\\react\n> vite\n\nfailed to load config from C:\\Users\\Free\\WebstormProjects\\react\\vite.config.ts\nerror when starting dev server:\nError: Cannot find module '../lightningcss.win32-x64-msvc.node'\nRequire stack:\n- C:\\Users\\Free\\WebstormProjects\\react\\node_modules\\.pnpm\\lightningcss@1.29.2\\node_modules\\lightningcss\\node\\index.js\n    at Function._resolveFilename (node:internal/modules/cjs/loader:1225:15)\n    at Function._load (node:internal/modules/cjs/loader:1055:27)\n    at TracingChannel.traceSync (node:diagnostics_channel:322:14)\n    at wrapModuleLoad (node:internal/modules/cjs/loader:220:24)\n    at Module.require (node:internal/modules/cjs/loader:1311:12)\n    at require (node:internal/modules/helpers:136:16)\n    at Object.<anonymous> (C:\\Users\\Free\\WebstormProjects\\react\\node_modules\\.pnpm\\lightningcss@1.29.2\\node_modules\\lightningcss\\node\\index.js:22:22)\n    at Module._compile (node:internal/modules/cjs/loader:1554:14)\n    at Object..js (node:internal/modules/cjs/loader:1706:10)\n    at Module.load (node:internal/modules/cjs/loader:1289:32)\n ELIFECYCLE  Command failed with exit code 1.\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17587","RelatedDescription":"Closed issue \"installing tailwindcss v4.1.3 crashing the react vite app with Error: Cannot find module '../lightningcss.win32-x64-msvc.node'\" (#17587)"},{"Id":"2976252062","IsPullRequest":false,"CreatedAt":"2025-04-07T10:47:51","Actor":"ninjadevpunk","Number":"17585","RawContent":null,"Title":"Dark text shows on dark background","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nReferring to the tailwind website not tailwind itself.\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nnot applicable\n\n**What version of Node.js are you using?**\n\nnot applicable\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nWindows 11\n\n**Reproduction URL**\n\nnot applicable.\n\n**Describe your issue**\n\nSo I went on the site to go learn tailwind and I couldn't see the text well because it was black text on a dark background. I actually found the light mode settings by accident and changing the setting (any change works for dark mode and light mode works fine) from system settings to dark mode removes the issue. It seems like it doesn't really matter what settings I use between system and dark mode settings, just changing the setting at least once fixes the issue. It always does the issue I mentioned when I first visit the site then I have to go down to the bottom of the page and change mode and then it's fixed. Just to be clear simply changing the setting makes the modes work normal.\n\nI'd suggest a fix if it's not just my browser doing this and putting the modes at the top of the page for people to see easier since I found it by mistake.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17585","RelatedDescription":"Closed issue \"Dark text shows on dark background\" (#17585)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-04-11T03:30:23.0379897Z","RunDurationInMilliseconds":581}