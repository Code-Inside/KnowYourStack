{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2565192512","IsPullRequest":true,"CreatedAt":"2024-10-04T00:21:40","Actor":"thecrypticace","Number":"14590","RawContent":null,"Title":"Pass options when using `addComponents` and `matchComponents`","State":"open","Body":"WIP (needs tests)","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14590","RelatedDescription":"Open PR \"Pass options when using `addComponents` and `matchComponents`\" (#14590)"},{"Id":"2565171509","IsPullRequest":true,"CreatedAt":"2024-10-03T23:55:58","Actor":"thecrypticace","Number":"14589","RawContent":null,"Title":"Provide auto complete suggestions when using matchUtilities","State":"open","Body":"Discovered `matchUtilities(…)` wasn't populating intellisense on v4 when working on Tailwind Play earlier today. This PR fixes this so plugins using matchUtilities also have intellisense suggestions.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14589","RelatedDescription":"Open PR \"Provide auto complete suggestions when using matchUtilities\" (#14589)"},{"Id":"2564939702","IsPullRequest":true,"CreatedAt":"2024-10-03T20:23:55","Actor":"thecrypticace","Number":"14588","RawContent":null,"Title":"Don’t crash when scanning candidate matching the prefix","State":"open","Body":"When a prefix is set in a stylesheet and we found a candidate that is equal to the prefix we would crash:\r\n```css\r\n@import \"tailwindcss\" prefix(tomato);\r\n```\r\n\r\n```js\r\nconsole.log(\"tomato\")\r\n```\r\n\r\nThis PR fixes this case by ensuring that we have something that looks like a variant before considering a prefix.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14588","RelatedDescription":"Open PR \"Don’t crash when scanning candidate matching the prefix\" (#14588)"},{"Id":"2564298944","IsPullRequest":true,"CreatedAt":"2024-10-03T15:12:05","Actor":"philipp-spiess","Number":"14587","RawContent":null,"Title":"Try namespace worker","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14587","RelatedDescription":"Closed or merged PR \"Try namespace worker\" (#14587)"},{"Id":"2564236491","IsPullRequest":true,"CreatedAt":"2024-10-03T15:11:23","Actor":"philipp-spiess","Number":"14586","RawContent":null,"Title":"Update CI wording","State":"closed","Body":"We want to include a link to the build.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14586","RelatedDescription":"Closed or merged PR \"Update CI wording\" (#14586)"},{"Id":"2564216454","IsPullRequest":true,"CreatedAt":"2024-10-03T14:37:24","Actor":"philipp-spiess","Number":"14585","RawContent":null,"Title":"Bring back `rust-toolchain.toml`","State":"closed","Body":"We accidentally removed this in #14565.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14585","RelatedDescription":"Closed or merged PR \"Bring back `rust-toolchain.toml`\" (#14585)"},{"Id":"2559429662","IsPullRequest":true,"CreatedAt":"2024-10-03T14:21:54","Actor":"RobinMalfait","Number":"14565","RawContent":null,"Title":"Improve `@tailwindcss/postcss` performance for initial builds","State":"closed","Body":"This PR improves the performance of the `@tailwindcss/postcss` plugin. Before this change we created 2 compiler instances instead of a single one. On a project where a `tailwindcss.config.ts` file is used, this means that the timings look like this:\n\n```\n[@tailwindcss/postcss] Setup compiler: 137.525ms\n⋮\n[@tailwindcss/postcss] Setup compiler: 43.95ms\n```\n\nThis means that with this small change, we can easily shave of ~50ms for initial PostCSS builds.\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14565","RelatedDescription":"Closed or merged PR \"Improve `@tailwindcss/postcss` performance for initial builds\" (#14565)"},{"Id":"2561260986","IsPullRequest":true,"CreatedAt":"2024-10-03T13:35:28","Actor":"philipp-spiess","Number":"14574","RawContent":null,"Title":"Migrate at-apply utilites with template migrations","State":"closed","Body":"This PR extracts all _candidate migrations_ from the existing _template migrations_ and reuses these in the `@apply` CSS migration. Seems like this _JustWorks✨_.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14574","RelatedDescription":"Closed or merged PR \"Migrate at-apply utilites with template migrations\" (#14574)"},{"Id":"2561510407","IsPullRequest":true,"CreatedAt":"2024-10-03T13:23:03","Actor":"philipp-spiess","Number":"14576","RawContent":null,"Title":"Fix `@apply` and CSS functions inside imported files","State":"closed","Body":"Part-of #14558\r\n\r\nAfter handling `@import` of stylesheets in core, we can no longer gate out features based on finding a specific sequence in the input CSS, as this string will not contain contents from other stylesheets.\r\n\r\nSo, consider the following input CSS:\r\n\r\n```css\r\n@import \"tailwindcsss\";\r\n@import \"./styles.css\";\r\n```\r\n\r\nWe can't opt-out of the traversal to search for `@apply` based on it because it, of course, does not contain the contents of `./styles.css` yet.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14576","RelatedDescription":"Closed or merged PR \"Fix `@apply` and CSS functions inside imported files\" (#14576)"},{"Id":"2563824986","IsPullRequest":true,"CreatedAt":"2024-10-03T12:40:07","Actor":"philipp-spiess","Number":"14584","RawContent":null,"Title":"Add binary extensions found in macOS traces","State":"closed","Body":"While we were doing some tracing for Rust memory issues, we noticed that the builds became slower and slower. Turns out we did store the macOS `.trace` dirs within the auto content directory of the Tailwind CSS instance we were profiling and that _some of the files were massive binary files that we were now scanning_.\r\n\r\nHere's the anatomy of a single trace:\r\n\r\n\r\n```\r\n[ 320]  .\r\n├── [497K]  form.template\r\n├── [5.1K]  open.creq\r\n├── [ 261]  UI_state_metadata.bin\r\n├── [ 160]  corespace\r\n│   ├── [1.2K]  MANIFEST.plist\r\n│   ├── [  96]  currentRun\r\n│   │   └── [  96]  core\r\n│   │       └── [ 128]  uniquing\r\n│   │           ├── [ 128]  arrayUniquer\r\n│   │           │   ├── [10.0K]  integeruniquer.data\r\n│   │           │   └── [   0]  integeruniquer.index\r\n│   │           └── [ 128]  typedArrayUniquer\r\n│   │               ├── [10.0K]  integeruniquer.data\r\n│   │               └── [   0]  integeruniquer.index\r\n│   └── [  96]  run1\r\n│       └── [ 192]  core\r\n│           ├── [ 224]  uniquing\r\n│           │   ├── [6.5K]  EngineeringTypes.etypes\r\n│           │   ├── [3.5K]  strings\r\n│           │   ├── [ 344]  TOC\r\n│           │   ├── [ 128]  arrayUniquer\r\n│           │   │   ├── [1.1K]  integeruniquer.data\r\n│           │   │   └── [  96]  integeruniquer.index\r\n│           │   └── [ 128]  typedArrayUniquer\r\n│           │       ├── [1.0K]  integeruniquer.data\r\n│           │       └── [  28]  integeruniquer.index\r\n│           ├── [ 192]  stores\r\n│           │   ├── [ 224]  indexed-store-0\r\n│           │   │   ├── [1.6K]  bulkstore\r\n│           │   │   ├── [1.2K]  spindex.0\r\n│           │   │   ├── [1.1K]  bulkstore_descriptor\r\n│           │   │   ├── [ 433]  spec.plist\r\n│           │   │   └── [ 188]  schema.xml\r\n│           │   ├── [ 224]  indexed-store-1\r\n│           │   │   ├── [7.5K]  bulkstore\r\n│           │   │   ├── [7.0K]  spindex.0\r\n│           │   │   ├── [1.6K]  bulkstore_descriptor\r\n│           │   │   ├── [ 522]  spec.plist\r\n│           │   │   └── [ 352]  schema.xml\r\n│           │   ├── [ 224]  indexed-store-2\r\n│           │   │   ├── [ 17K]  bulkstore\r\n│           │   │   ├── [7.2K]  spindex.0\r\n│           │   │   ├── [2.0K]  bulkstore_descriptor\r\n│           │   │   ├── [ 532]  spec.plist\r\n│           │   │   └── [ 412]  schema.xml\r\n│           │   └── [ 192]  indexed-store-3\r\n│           │       ├── [1.8K]  bulkstore_descriptor\r\n│           │       ├── [ 426]  spec.plist\r\n│           │       ├── [ 399]  schema.xml\r\n│           │       └── [  50]  bulkstore\r\n│           ├── [  96]  core-config\r\n│           │   └── [2.0K]  exposedTableInfo.plist\r\n│           └── [  96]  table-manager\r\n│               └── [1.6K]  tables.plist\r\n├── [ 128]  Trace1.run\r\n│   ├── [966M]  event_data_52237.oa\r\n│   └── [ 52K]  RunIssues.storedata\r\n├── [ 128]  instrument_data\r\n│   ├── [  96]  EF4DC038-8A17-421A-8050-39DD0980C06F\r\n│   │   └── [  96]  run_data\r\n│   │       └── [ 17K]  1.run.zip\r\n│   └── [  96]  F9F2B147-A042-43F0-A791-EA6D63C7C1E8\r\n│       └── [  96]  run_data\r\n│           └── [2.2K]  1.run.zip\r\n├── [ 128]  symbols\r\n│   ├── [ 608]  stores\r\n│   │   ├── [453K]  D14A8304-5F09-385D-9AA6-1B0C815B6356.symbolsarchive\r\n│   │   ├── [ 36K]  4E9DB999-EFF4-3C83-B4E8-E1914D2C331E.symbolsarchive\r\n│   │   ├── [3.7K]  B5D897DF-D536-3668-BBAD-A17119439EF0.symbolsarchive\r\n│   │   ├── [3.1K]  57FFCB9D-A6C9-3E9A-AA82-40F192626527.symbolsarchive\r\n│   │   ├── [2.9K]  69AA9AB7-C5DE-3CAE-BF1A-384F9F36A3E0.symbolsarchive\r\n│   │   ├── [2.8K]  F453C5AE-3568-3AAA-AAA0-D2FDFBB9BC7A.symbolsarchive\r\n│   │   ├── [2.6K]  62D27203-665F-3AA7-8BE9-7E3C3A847353.symbolsarchive\r\n│   │   ├── [2.4K]  9896C713-054D-377D-88B4-45E1DE3FB6C5.symbolsarchive\r\n│   │   ├── [2.1K]  249D8F21-72A2-3A80-ADC1-7BEAF24B5B58.symbolsarchive\r\n│   │   ├── [2.1K]  FA954AC0-FCC5-3711-800B-432011ACD89E.symbolsarchive\r\n│   │   ├── [2.0K]  E7ED11EE-AFB0-3B96-90A8-F1835726B9B8.symbolsarchive\r\n│   │   ├── [1.3K]  5B476F9B-DF8B-356A-8582-615D4AD08504.symbolsarchive\r\n│   │   ├── [1.3K]  6102110F-7ED8-34C2-95D3-C5ACCB41497E.symbolsarchive\r\n│   │   ├── [1.1K]  EC86EDBF-30B9-3BF8-A358-C8D51805B016.symbolsarchive\r\n│   │   ├── [1.0K]  6740FF57-8D20-3FC7-97F5-B2AFB6E5F48A.symbolsarchive\r\n│   │   ├── [ 963]  9A72FD37-D827-3D6D-B6F4-422621E36C94.symbolsarchive\r\n│   │   └── [ 948]  67A46592-439B-36DA-8A08-A7CD777A43A8.symbolsarchive\r\n│   └── [ 290]  MANIFEST.plist\r\n└── [  96]  shared_data\r\n    └── [  96]  1.run\r\n        └── [ 14M]  533F36D4-2C90-4030-95CA-74077F2E26D7.zip\r\n\r\n29 directories, 59 files\r\n```\r\n\r\nNote that the biggest binary file is a `.oa` but I've also added `.storedata` and `.symbolsarchive` as binary extensions to this PR.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14584","RelatedDescription":"Closed or merged PR \"Add binary extensions found in macOS traces\" (#14584)"},{"Id":"2562884813","IsPullRequest":true,"CreatedAt":"2024-10-03T09:27:55","Actor":"depfu[bot]","Number":"14582","RawContent":null,"Title":"Update jiti 2.0.0-beta.3 → 2.1.0 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ jiti (2.0.0-beta.3 → 2.1.0) · [Repo](https://github.com/unjs/jiti) · [Changelog](https://github.com/unjs/jiti/blob/main/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/unjs/jiti/releases/tag/v2.1.0\">2.1.0</a></h4>\n\n<blockquote><p dir=\"auto\"><a href=\"https://bounce.depfu.com/github.com/unjs/jiti/compare/v2.0.0...v2.1.0\">compare changes</a></p>\n<h3 dir=\"auto\">🚀 Enhancements</h3>\n<ul dir=\"auto\">\n<li>Enable <code class=\"notranslate\">interopDefault</code> by default (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/pull/310\">#310</a>)</li>\n<li>Support <code class=\"notranslate\">import.meta.dirname</code> and <code class=\"notranslate\">import.meta.filename</code> (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/pull/308\">#308</a>)</li>\n</ul>\n<h3 dir=\"auto\">🔥 Performance</h3>\n<ul dir=\"auto\">\n<li>\n<strong>cli:</strong> Enable node 22 compile cache (%17 faster) (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/pull/312\">#312</a>)</li>\n</ul>\n<h3 dir=\"auto\">🩹 Fixes</h3>\n<ul dir=\"auto\">\n<li>Make <code class=\"notranslate\">TransformOptions</code> type strict to allow auto-complete (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/pull/305\">#305</a>)</li>\n<li>Properly handle tsx (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/pull/311\">#311</a>)</li>\n</ul>\n<h3 dir=\"auto\">💅 Refactors</h3>\n<ul dir=\"auto\">\n<li>Deprecate commonjs api (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/pull/313\">#313</a>)</li>\n</ul>\n<h3 dir=\"auto\">📦 Build</h3>\n<ul dir=\"auto\">\n<li>Fix <code class=\"notranslate\">/register</code> and <code class=\"notranslate\">/native</code> subpath types for <code class=\"notranslate\">Node10</code> module resolution (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/pull/304\">#304</a>)</li>\n</ul>\n<h3 dir=\"auto\">❤️ Contributors</h3>\n<ul dir=\"auto\">\n<li>Pooya Parsa (<a href=\"https://bounce.depfu.com/github.com/pi0\">@pi0</a>)</li>\n<li>Arya Emami (<a href=\"https://bounce.depfu.com/github.com/aryaemami59\">@aryaemami59</a>)</li>\n</ul></blockquote>\n<h4><a href=\"https://github.com/unjs/jiti/releases/tag/v2.0.0\">2.0.0</a></h4>\n\n<blockquote><h2 dir=\"auto\">🌟 Highlights</h2>\n<h3 dir=\"auto\">🔥  Native ESM</h3>\n<p dir=\"auto\">jiti v2 now natively supports ESM import and resolution with new API <code class=\"notranslate\">await jiti.import(id)</code> and <code class=\"notranslate\">jiti.esmResolve(id)</code>. This allows top-level <code class=\"notranslate\">await</code> and native+faster importing of ES-only modules with increased compatibility</p>\n<h3 dir=\"auto\">⚛️ JSX Support</h3>\n<p dir=\"auto\">You can now directly import <code class=\"notranslate\">.jsx</code>/<code class=\"notranslate\">.tsx</code> files with jiti! See examples with <a href=\"https://bounce.depfu.com/github.com/unjs/jiti/blob/main/test/fixtures/jsx/nano-jsx.jsx\">nano-js</a>,  <a href=\"https://bounce.depfu.com/github.com/unjs/jiti/blob/main/test/fixtures/jsx/preact.jsx\">preact</a>, <a href=\"https://bounce.depfu.com/github.com/unjs/jiti/blob/main/test/fixtures/jsx/react.jsx\">React</a> and <a href=\"https://bounce.depfu.com/github.com/unjs/jiti/blob/main/test/fixtures/jsx/vue.jsx\">Vue</a>. This feature is opt-in for now (using <code class=\"notranslate\">jsx: true</code> or <code class=\"notranslate\">JITI_JSX=true</code>). Jiti is considering a <a href=\"https://bounce.depfu.com/github.com/unjs/jiti/issues/302\">smarter lib detection</a> for wider support before enabling JSX support by default.</p>\n<h3 dir=\"auto\">📦 Dual format package exports</h3>\n<p dir=\"auto\"><code class=\"notranslate\">jiti</code> package exports are now in a dual (ESM/CJS) format for better importing of jiti in ESM contexts.</p>\n<h3 dir=\"auto\">🎈 <code class=\"notranslate\">jiti/native</code>\n</h3>\n<p dir=\"auto\">As native ESM and Typescript support is being increased across runtimes, a new export in jiti allows easing up the transition by giving the same API of jiti but instead only depending on runtime <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/import.meta/resolve\"><code class=\"notranslate\">import.meta.resolve</code></a> and dynamic <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/import\"><code class=\"notranslate\">import()</code></a> support. This is possible by making an alias for <code class=\"notranslate\">jiti</code> to <code class=\"notranslate\">jiti/native</code>.</p>\n<h3 dir=\"auto\">🚚 ESM Loader</h3>\n<p dir=\"auto\">You can globally register jiti using Node.js <a href=\"https://nodejs.org/api/module.html#initialize\">global hooks</a> (experimental).</p>\n<p dir=\"auto\">CLI:</p>\n<div class=\"highlight highlight-source-shell\" dir=\"auto\"><pre class=\"notranslate\"><span class=\"pl-c\"><span class=\"pl-c\">#</span> Instead of `npx jiti index.ts`</span>\nnode --import jiti/register index.ts</pre></div>\n<p dir=\"auto\">Programmatic:</p>\n<div class=\"highlight highlight-source-js\" dir=\"auto\"><pre class=\"notranslate\"><span class=\"pl-k\">import</span> <span class=\"pl-s\">\"jiti/register\"</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-c\">// or</span>\n<span class=\"pl-k\">await</span> <span class=\"pl-k\">import</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"jiti/register\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<h3 dir=\"auto\">🔍 Better inspection</h3>\n<p dir=\"auto\">You can inspect what jiti internals using <a href=\"https://bounce.depfu.com/github.com/unjs/jiti#debug\"><code class=\"notranslate\">debug</code></a> option or <code class=\"notranslate\">JITI_DEBUG=1</code> environment variable. The output is now more readable and with colors to easily find slow imports.</p>\n<p dir=\"auto\">jiti will also use <code class=\"notranslate\">node_modules/.cache/jiti</code> directory instead of temp dir (if <code class=\"notranslate\">node_modules</code> exists) to store caches for easier local inspections.</p>\n<a href=\"https://private-user-images.githubusercontent.com/5158436/370833961-cf813cc3-546e-410a-a9cf-f713279a095c.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3Mjc4Mjc2NzUsIm5iZiI6MTcyNzgyNzM3NSwicGF0aCI6Ii81MTU4NDM2LzM3MDgzMzk2MS1jZjgxM2NjMy01NDZlLTQxMGEtYTljZi1mNzEzMjc5YTA5NWMucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MTAwMiUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDEwMDJUMDAwMjU1WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9ZTg0OGY5NWYwMWFmNDllNzY1ODIzZjhhMTk4YzdkYjhiOTU5NDI2NjE4YzBkYjQyOGJlZDQyOGYzNGZhNDZmNiZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QifQ.Z-4y9QLKE1Pk7HpqMcFbBTvuZ_ya2JY9tRo4QGe08cA\"><img width=\"708\" alt=\"image\" src=\"https://private-user-images.githubusercontent.com/5158436/370833961-cf813cc3-546e-410a-a9cf-f713279a095c.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3Mjc4Mjc2NzUsIm5iZiI6MTcyNzgyNzM3NSwicGF0aCI6Ii81MTU4NDM2LzM3MDgzMzk2MS1jZjgxM2NjMy01NDZlLTQxMGEtYTljZi1mNzEzMjc5YTA5NWMucG5nP1gtQW16LUFsZ29yaXRobT1BV1M0LUhNQUMtU0hBMjU2JlgtQW16LUNyZWRlbnRpYWw9QUtJQVZDT0RZTFNBNTNQUUs0WkElMkYyMDI0MTAwMiUyRnVzLWVhc3QtMSUyRnMzJTJGYXdzNF9yZXF1ZXN0JlgtQW16LURhdGU9MjAyNDEwMDJUMDAwMjU1WiZYLUFtei1FeHBpcmVzPTMwMCZYLUFtei1TaWduYXR1cmU9ZTg0OGY5NWYwMWFmNDllNzY1ODIzZjhhMTk4YzdkYjhiOTU5NDI2NjE4YzBkYjQyOGJlZDQyOGYzNGZhNDZmNiZYLUFtei1TaWduZWRIZWFkZXJzPWhvc3QifQ.Z-4y9QLKE1Pk7HpqMcFbBTvuZ_ya2JY9tRo4QGe08cA\" style=\"max-width: 100%;\"></a>\n<h2 dir=\"auto\">⬆️ Migration</h2>\n<p dir=\"auto\">Upgrade <code class=\"notranslate\">jiti</code> dependency to <code class=\"notranslate\">^2.0.0</code> in <code class=\"notranslate\">package.json</code></p>\n<p dir=\"auto\">Use new <code class=\"notranslate\">createJiti</code> named export :</p>\n<p dir=\"auto\">ESM:</p>\n<div class=\"highlight highlight-source-diff\" dir=\"auto\"><pre class=\"notranslate\"><span class=\"pl-md\">--- import createJiti from \"jiti\"</span>\n<span class=\"pl-mi1\">+++ import { createJiti } from \"jiti\"</span>\nconst jiti = createJiti(import.meta.url)</pre></div>\n<p dir=\"auto\">CommonJS:</p>\n<div class=\"highlight highlight-source-diff\" dir=\"auto\"><pre class=\"notranslate\"><span class=\"pl-md\">--- const createJiti = require(\"jiti\")</span>\n<span class=\"pl-mi1\">+++ const { createJiti } = require(\"jiti\")</span>\nconst jiti = createJiti(__filename)</pre></div>\n<p dir=\"auto\">Migrate from CommonJS to ESM API: (<strong>highly recommended!</strong>)</p>\n<p dir=\"auto\">Importing modules:</p>\n<div class=\"highlight highlight-source-diff\" dir=\"auto\"><pre class=\"notranslate\"><span class=\"pl-md\">--- const mood = jiti('mod')</span>\n<span class=\"pl-mi1\">+++ const mood = await jiti.import('mod')</span></pre></div>\n<p dir=\"auto\">Resolving modules:</p>\n<div class=\"highlight highlight-source-diff\" dir=\"auto\"><pre class=\"notranslate\"><span class=\"pl-md\">--- const path = jiti.resolve('mod')</span>\n<span class=\"pl-mi1\">+++ const path = jiti.esmResolve('mod')</span></pre></div>\n<h2 dir=\"auto\">❤️ Thank you!</h2>\n<p dir=\"auto\">This release wasn't possible without valuable ecosystem feedback and <a href=\"https://bounce.depfu.com/github.com/unjs/jiti/graphs/contributors\">contributors</a>.  With the trust of <a href=\"https://bounce.depfu.com/github.com/unjs/jiti/tree/v2.0.0?tab=readme-ov-file#-used-in\">users</a> with astonishing <a href=\"https://npm.chart.dev/jiti\"><strong>60M+</strong> monthly downloads</a>, i hope jiti v2 can help speed up the ecosystem transition to ESM and Typescript.</p>\n<hr>\n<h2 dir=\"auto\">Changes since v1</h2>\n<p dir=\"auto\"><a href=\"https://bounce.depfu.com/github.com/unjs/jiti/compare/v1.21.6...main\">compare changes</a></p>\n<h3 dir=\"auto\">🚀 Enhancements</h3>\n<ul dir=\"auto\">\n<li>top-level <code class=\"notranslate\">await</code> support (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/pull/239\">#239</a>)</li>\n<li>Native ESM support (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/pull/259\">#259</a>)</li>\n<li>Add experimental ESM loader support (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/pull/266\">#266</a>)</li>\n<li>Allow try and other resolve options for <code class=\"notranslate\">jiti.esmResolve</code> (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/pull/268\">#268</a>)</li>\n<li>Allow configure <code class=\"notranslate\">interopDefault</code> using <code class=\"notranslate\">JITI_INTEROP_DEFAULT</code> env (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/commit/1c080a1\">1c080a1</a>)</li>\n<li>\n<code class=\"notranslate\">jiti/native</code> subpath (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/pull/289\">#289</a>) (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/pull/294\">#294</a>) (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/pull/293\">#293</a>)</li>\n<li>Handle <code class=\"notranslate\">data:</code> imports (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/pull/299\">#299</a>)</li>\n<li>Support opt-in JSX (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/pull/200\">#200</a>)</li>\n<li>Eval ESM modules with fallback loader (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/pull/300\">#300</a>)</li>\n<li>Support <code class=\"notranslate\">import.meta.resolve</code> (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/pull/301\">#301</a>)</li>\n</ul>\n<h3 dir=\"auto\">📦 Build</h3>\n<ul dir=\"auto\">\n<li>Overhaul package exports (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/pull/262\">#262</a>)</li>\n<li>Fix type resolution issue (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/pull/269\">#269</a>)</li>\n</ul>\n<h3 dir=\"auto\">🔥 Performance</h3>\n<ul dir=\"auto\">\n<li>Reduce overhead of jiti sub-instances (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/pull/265\">#265</a>)</li>\n<li>Use native <code class=\"notranslate\">createRequire</code> (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/commit/69da3c5\">69da3c5</a>)</li>\n</ul>\n<h3 dir=\"auto\">🩹 Fixes</h3>\n<ul dir=\"auto\">\n<li>Use distinct cache paths for async mode (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/commit/6e8ec7a\">6e8ec7a</a>)</li>\n<li>Resolve with ESM conditions in async context (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/pull/264\">#264</a>)</li>\n<li>\n<strong>cache:</strong> Prefer <code class=\"notranslate\">node_modules/.cache</code> if exists (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/commit/832f206\">832f206</a>)</li>\n<li>Use native ESM import for built-ins (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/commit/54d6b4a\">54d6b4a</a>)</li>\n<li>Respect <code class=\"notranslate\">interopDefault</code> in babel transform (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/commit/485b4e9\">485b4e9</a>)</li>\n<li>Split cache based on <code class=\"notranslate\">interopDefault</code> (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/commit/f820a15\">f820a15</a>)</li>\n<li>Remove extention from cache path (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/commit/50b1b3a\">50b1b3a</a>)</li>\n<li>Properly resolve <code class=\"notranslate\">.mts</code>/<code class=\"notranslate\">.cts</code> with <code class=\"notranslate\">.mjs</code>/<code class=\"notranslate\">.cjs</code> imports (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/commit/a5aefad\">a5aefad</a>)</li>\n<li>\n<strong>resolve:</strong> Make sure <code class=\"notranslate\">parentURL</code> is a dir (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/commit/d224e84\">d224e84</a>)</li>\n<li>Handle global <code class=\"notranslate\">URL</code> instance mismatch (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/pull/298\">#298</a>)</li>\n<li>Optional access to <code class=\"notranslate\">Reflect.metadata</code> for typescript decorators (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/pull/165\">#165</a>)</li>\n<li>Only pass <code class=\"notranslate\">paths</code> option to native <code class=\"notranslate\">require.resolve</code> (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/commit/50e4280\">50e4280</a>)</li>\n</ul>\n<h3 dir=\"auto\">💅 Refactors</h3>\n<ul dir=\"auto\">\n<li>Split option normalization (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/pull/172\">#172</a>)</li>\n<li>Split logic (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/pull/240\">#240</a>)</li>\n<li>Remove legacy Node.js syntax polyfills (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/pull/260\">#260</a>)</li>\n<li>3rd arg to <code class=\"notranslate\">createJiti</code> is optional (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/commit/60a23e3\">60a23e3</a>)</li>\n<li>Upgrade cache version to 8 (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/commit/99224ae\">99224ae</a>)</li>\n<li>Use more clear <code class=\"notranslate\">fsCache</code> and <code class=\"notranslate\">moduleCache</code> options (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/pull/263\">#263</a>)</li>\n<li>Use ESM imports for babel plugins (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/commit/22e259f\">22e259f</a>)</li>\n<li>Improve debug logging (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/commit/463a8a3\">463a8a3</a>)</li>\n<li>Rename <code class=\"notranslate\">importResolve</code> to <code class=\"notranslate\">esmResolve</code> (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/commit/aac88e6\">aac88e6</a>)</li>\n<li>Improve env handling (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/commit/ee4489d\">ee4489d</a>)</li>\n<li>Use <code class=\"notranslate\">import</code>/<code class=\"notranslate\">require</code> in debug logs (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/commit/934a5bb\">934a5bb</a>)</li>\n<li>Improve internal babel types (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/pull/271\">#271</a>)</li>\n<li>Rename <code class=\"notranslate\">experimentalBun</code> option to <code class=\"notranslate\">tryNative</code> (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/pull/295\">#295</a>)</li>\n<li>Make <code class=\"notranslate\">jiti.esmResolve</code> consistent with <code class=\"notranslate\">import.meta.resolve</code> (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/pull/303\">#303</a>)</li>\n</ul>\n<h3 dir=\"auto\">📖 Documentation</h3>\n<ul dir=\"auto\">\n<li>Update bundlephobia link (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/pull/179\">#179</a>)</li>\n<li>Add example for inline <code class=\"notranslate\">JITI_ALIAS</code> (<a href=\"https://bounce.depfu.com/github.com/unjs/jiti/commit/a53715a\">a53715a</a>)</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/jiti/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/unjs/jiti/compare/fca09ee60ea0128adab135e7171d0e8dbed03baa...f99a1d7df0064e201df760e17470cc34bb330618\">See the full diff on Github</a>. The new version differs by 12 commits:</p>\n<ul>\n<li><a href=\"https://github.com/unjs/jiti/commit/f99a1d7df0064e201df760e17470cc34bb330618\"><code>chore(release): v2.1.0</code></a></li>\n<li><a href=\"https://github.com/unjs/jiti/commit/31228096175d82e1983744708735c3b5145f0658\"><code>refactor: deprecate commonjs api (#313)</code></a></li>\n<li><a href=\"https://github.com/unjs/jiti/commit/85d7c4141f0d3632433154d107db1ae5f11f0b59\"><code>chore: lint</code></a></li>\n<li><a href=\"https://github.com/unjs/jiti/commit/ee90ecacfbbefd466c6581ff56492da6fd2c25d8\"><code>chore: update dependencies</code></a></li>\n<li><a href=\"https://github.com/unjs/jiti/commit/36e095771bfc696c373a897ccf8aa80b0b247f5f\"><code>perf(cli): enable node 22 compile cache (#312)</code></a></li>\n<li><a href=\"https://github.com/unjs/jiti/commit/2ae340f4f2357702d5dec3ef60285af86a904ee8\"><code>fix: properly handle tsx (#311)</code></a></li>\n<li><a href=\"https://github.com/unjs/jiti/commit/6a4e13ab4d9c5c9d97c9552767af7dcd7e0b04c9\"><code>chore: add jsx field</code></a></li>\n<li><a href=\"https://github.com/unjs/jiti/commit/e4a9bae81195153cc6a7400274822fe60b6b13c5\"><code>chore: remove ext for consistency</code></a></li>\n<li><a href=\"https://github.com/unjs/jiti/commit/35ddef7c0c59f92ddba686b32f3a74ba0b83a1d1\"><code>feat: support `import.meta.dirname` and `import.meta.filename` (#308)</code></a></li>\n<li><a href=\"https://github.com/unjs/jiti/commit/2f0a0130ed8203de53c5e9b83a49916f71ec94d8\"><code>feat: enable `interopDefault` by default (#310)</code></a></li>\n<li><a href=\"https://github.com/unjs/jiti/commit/a5cfae93e164c618a7f89208383835792251fcf7\"><code>fix: make `TransformOptions` type strict to allow auto-complete (#305)</code></a></li>\n<li><a href=\"https://github.com/unjs/jiti/commit/a842d2d1f3777bf34e9604554b520dba37a9d564\"><code>build: fix `/register` and `/native` subpath types for `Node10` module resolution (#304)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14582","RelatedDescription":"Closed or merged PR \"Update jiti 2.0.0-beta.3 → 2.1.0 (minor)\" (#14582)"},{"Id":"2562864013","IsPullRequest":true,"CreatedAt":"2024-10-03T09:15:18","Actor":"depfu[bot]","Number":"14581","RawContent":null,"Title":"Update postcss 8.4.41 → 8.4.47 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this upgrade. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ postcss (8.4.41 → 8.4.47) · [Repo](https://github.com/postcss/postcss) · [Changelog](https://github.com/postcss/postcss/blob/main/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/postcss/postcss/releases/tag/8.4.47\">8.4.47</a></h4>\n\n<blockquote><ul dir=\"auto\">\n<li>Removed debug code.</li>\n</ul></blockquote>\n<h4><a href=\"https://github.com/postcss/postcss/releases/tag/8.4.46\">8.4.46</a></h4>\n\n<blockquote><ul dir=\"auto\">\n<li>Fixed <code class=\"notranslate\">Cannot read properties of undefined (reading 'before')</code>.</li>\n</ul></blockquote>\n<h4><a href=\"https://github.com/postcss/postcss/releases/tag/8.4.45\">8.4.45</a></h4>\n\n<blockquote><ul dir=\"auto\">\n<li>Removed unnecessary fix which could lead to infinite loop.</li>\n</ul></blockquote>\n<h4><a href=\"https://github.com/postcss/postcss/releases/tag/8.4.44\">8.4.44</a></h4>\n\n<blockquote><ul dir=\"auto\">\n<li>Another way to fix <code class=\"notranslate\">markClean is not a function</code> error.</li>\n</ul></blockquote>\n<h4><a href=\"https://github.com/postcss/postcss/releases/tag/8.4.43\">8.4.43</a></h4>\n\n<blockquote><ul dir=\"auto\">\n<li>Fixed <code class=\"notranslate\">markClean is not a function</code> error.</li>\n</ul></blockquote>\n<h4><a href=\"https://github.com/postcss/postcss/releases/tag/8.4.42\">8.4.42</a></h4>\n\n<blockquote><ul dir=\"auto\">\n<li>Fixed CSS syntax error on long minified files (by <a href=\"https://bounce.depfu.com/github.com/varpstar\">@varpstar</a>).</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/postcss/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/postcss/postcss/compare/57e02115e41c91cb67974092eea58c649b24d7b1...5e6fd1302d2cc9a844ac99282b2b7745e4ac0ed3\">See the full diff on Github</a>. The new version differs by 33 commits:</p>\n<ul>\n<li><a href=\"https://github.com/postcss/postcss/commit/5e6fd1302d2cc9a844ac99282b2b7745e4ac0ed3\"><code>Release 8.4.47 version</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/714bc10258bfa96be26bc201d218c67df09da82c\"><code>Typo</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/439d20e651098d9d16d31ede62df6f7916925e91\"><code>Release 8.4.46 version</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/b93582f68e1f4796618cfef3377a10198a5af800\"><code>Update dependencies</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/c51e46767d1b76d91ab3ba3b19e4b43b847755b8\"><code>Fix error on inserting node without raws in some cases</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/829ae47d6bf7a58a84a7633d9e4e45e2eb7a375a\"><code>Update dependencies</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/5aaaec2214117e353962f8d862a31ba0211e0f8b\"><code>Update remaining workflow jobs to use latest version of actions (#1968)</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/448c4f34d6540181e8ceb499dd9ffe4518356d1c\"><code>Release 8.4.45 version</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/1c77d2e33396a314dce558d63ffdbcae7e5c5014\"><code>Update unnecessary check</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/f38b329323b050fde56c2760b6ffe9e3786a23dc\"><code>Try to fix CI</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/d442dc75e36b90e2a8c7fa30a7ec969b5e105743\"><code>Release 8.4.44 version</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/3c7cda099cb7ed9ab8a8eb5b566660373d74f6c1\"><code>Another way to fix markClean() is undefined issue</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/b985ed16677abfc5d903f2b5c775d1cf284699f5\"><code>Release 8.4.43 version</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/3025b743bff14dc8fc95f3f49e8b4f294d9281ef\"><code>Update dependencies</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/79ff9800c3158964bc837be0d6878b4471b3b794\"><code>Update AST if it is not made by PostCSS &gt;= 8.4.41</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/0fda48a1b1e27c443681849411c2bb65521da8df\"><code>Release 8.4.42 version</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/cd5b08cfa2434f9ba2970b454692190b45b3b320\"><code>Add ESLint to CI</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/0975cc209dc8425d61960633049aab73cb5bd3fe\"><code>Sort source code and fix ESLint</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/36950b4ff95d4077c0875a34a9c06821586589a8\"><code>Try to fix old Node.js tests</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/fbb6d60eae1d65ef99a9ef5a7dc2528da6d96db5\"><code>Update dependencies</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/118ebc9a9af683702d027f7e1e607261237764d3\"><code>Clean up code</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/9e7bdca1d2904478e9017971ddc5b4a24eb2ffbd\"><code>Pretty CssSyntaxError from onelined (minified) css (#1965)</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/45a24250ee0160b9e187d34e3a43c26fef59af95\"><code>Merge pull request #1961 from nex3/readonly-array</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/0cb325a1d56a6b2d9657c9b7a557a2f245ca1fcc\"><code>Use `ReadonlyArray` for argument types that aren&#39;t modified</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/a88662860392ed3d2410aa2bf661c69c56198d7f\"><code>Merge pull request #1957 from nex3/protected-normalize</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/13a16b0dc8fc24f32ddee3fc249df06cdc1e555c\"><code>Merge pull request #1958 from nex3/typedoc</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/51022c2a42bc0dd5cfb7c118c063034b2215b608\"><code>Fix a few TypeDoc warnings</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/d6fa30b3cc35e85f50cf2171c2a03883a7c26525\"><code>Add a protected `markDirty()` method on `Node`</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/58c50ad1918b521c8b7d084ddf9ae0ee91614d1d\"><code>Declare `Container.normalize()` as a protected method</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/ea262f3b3fa6ef7e87a1cde3b128ac1c0b6766d2\"><code>Merge pull request #1956 from Juneezee/refactor/replace-indexOf-with-startsWith</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/c37da3c225ecce2f26cc70c570ecc17203411ee5\"><code>Replace `indexOf === 0` with `startsWith`</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/4b96e7df148d05a0614782a9efd5e5adce8186b4\"><code>Merge pull request #1955 from Marukome0743/Marukome0743-patch-1</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/edcc9b13b910c84c486c2686ba6567d05b590ef7\"><code>chore(docs): improve visual appearance of images in README.md</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14581","RelatedDescription":"Closed or merged PR \"Update postcss 8.4.41 → 8.4.47 (patch)\" (#14581)"},{"Id":"2562992414","IsPullRequest":false,"CreatedAt":"2024-10-03T03:01:40","Actor":"abivelj","Number":"14583","RawContent":null,"Title":"Custom Classes are not being generated by TailwindCSS","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n`Version: 3.4.13`\r\n`Tool: 'npx tailwindcss' command`\r\n`Node: 16.16.0`\r\n`Browser: Brave`\r\n`OS: Windows`\r\n\r\n**Describe your issue**\r\n\r\nI am trying to create some custom classes in the `@layer base` and `@layer components` but the classes are skipped.\r\nWhat I had to do was move the `.validation-message` outside of the layer and then it was added to the output file.\r\n\r\nIs there some class names that are ignored, like `validation` and `components`.\r\nDoes this happen because it tokenizes the `@layer`? If so, should it tokenize only the line where `@apply` is placed?\r\n\r\nHere is my code:\r\n```\r\n.validation-message {\r\n    display: block;\r\n    font-size: 0.875rem;\r\n    line-height: 1.25rem;\r\n    --tw-text-opacity: 1;\r\n    color: rgb(248 113 113 / var(--tw-text-opacity));\r\n}\r\n\r\n@layer components {\r\n    .components-reconnect-modal {\r\n        @apply dark:!bg-black/80;\r\n    }\r\n}\r\n```\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14583","RelatedDescription":"Closed issue \"Custom Classes are not being generated by TailwindCSS\" (#14583)"},{"Id":"2562819821","IsPullRequest":false,"CreatedAt":"2024-10-03T02:00:38","Actor":"dx1ded","Number":"14580","RawContent":null,"Title":"Tailwind puts desktop-first media queries in a wrong order causing specificy issue","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.4.3\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\npostcss v8.4.21\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv18.6.0\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Describe your issue**\r\n\r\nI tried to use desktop-first approach using Tailwind and it causes a specificy issue. Let's start with my config for `screens`:\r\n\r\n```javascript\r\nscreens: {\r\n    xl: { max: \"80em\" }, // 1280px\r\n    lg: { max: \"64em\" }, // 1024px\r\n    md: { max: \"48em\" }, // 768px\r\n    sm: { max: \"36em\" }, // 576px\r\n    xs: { max: \"26.25em\" }, // 420px\r\n    xss: { max: \"23.4375em\" }, // 375px\r\n  },\r\n```\r\n\r\nThen let's apply it to the element:\r\n\r\n```html\r\n<ul className=\"flex list-none items-center gap-8 md:flex-col md:gap-2 lg:gap-6\"></ul>\r\n```\r\n\r\nHere's what we see in browser:\r\n\r\n![image](https://github.com/user-attachments/assets/cfa71112-1b64-469a-bdc3-68e9f067e53a)\r\n\r\nThe query for smaller screens didn't work because Tailwind always puts queries in mobile-first way regarless of `tailwind.config` settings:\r\n\r\n![image](https://github.com/user-attachments/assets/735fd5ed-00c1-4815-81da-133698795198)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14580","RelatedDescription":"Closed issue \"Tailwind puts desktop-first media queries in a wrong order causing specificy issue\" (#14580)"},{"Id":"2560499838","IsPullRequest":true,"CreatedAt":"2024-10-02T10:07:55","Actor":"adamwathan","Number":"14567","RawContent":null,"Title":"Add color-scheme utilities","State":"closed","Body":"Replaces #11271 — the merge conflicts are killing me and it's way easier to just do it again (added you as a co-author though @lukewarlow so you're still credited!)\r\n\r\nThis PR adds the following new utilities for the `color-scheme` property:\r\n\r\n| Class               | CSS                        |\r\n| ------------------- | -------------------------- |\r\n| `scheme-normal`     | `color-scheme: normal`     |\r\n| `scheme-dark`       | `color-scheme: dark`       |\r\n| `scheme-light`      | `color-scheme: light`      |\r\n| `scheme-light-dark` | `color-scheme: light dark` |\r\n| `scheme-only-dark`  | `color-scheme: dark only`  |\r\n| `scheme-only-light` | `color-scheme: light only` |\r\n\r\nWent with `scheme-*` for the utilities because there are currently no other CSS properties with the word `scheme` in them and `scheme-light-dark` is going to be a common value which is three words already even with the shortened property name.\r\n\r\nI considered setting `color-scheme: light dark` by default as part of Preflight for this PR but decided against it, at least for this PR. I think that could still be a useful default but we should think about it a bit more because if you're building a light-mode-only site it'll force you to do some extra work.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14567","RelatedDescription":"Closed or merged PR \"Add color-scheme utilities\" (#14567)"},{"Id":"2561035366","IsPullRequest":false,"CreatedAt":"2024-10-02T09:44:29","Actor":"jahangirdev","Number":"14571","RawContent":null,"Title":"Text Color and Text Size classes have issues","State":"closed","Body":"\"text-white\" defines text color.\r\n\"text-xl\" defines text size.\r\nBoth of them are started with \"text-\" prefix.\r\n\r\nFor custom text colors we can use \"text-[#ffffff]\". It works fine.\r\nFor custom text color using css variable we can use \"text-[var(--text-color)]\". It also works fine.\r\n\r\nFor custom text size we can use \"text-[26px]\". It also works fine.\r\nBut when I use the custom font size using css variable \"text-[var(--text-size)]\". It doesn't work.\r\n\r\n### It renders the CSS like below:\r\n\r\n```\r\n.text-\\[var\\(--text-size\\)\\] {\r\n    color: var(--text-size);\r\n}\r\n```\r\n\r\n### But it should be:\r\n\r\n```\r\n.text-\\[var\\(--text-size\\)\\] {\r\n    font-size: var(--text-size);\r\n}\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14571","RelatedDescription":"Closed issue \"Text Color and Text Size classes have issues\" (#14571)"},{"Id":"2560955190","IsPullRequest":false,"CreatedAt":"2024-10-02T08:27:17","Actor":"henrikbjorn","Number":"14569","RawContent":null,"Title":"[v4] Standalone on Alpine ARM64 is just bun and not the compiled binary","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv4 Alpha 25 (Also tested with alpha 24)\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nNone.\r\n\r\n**What version of Node.js are you using?**\r\n\r\n20.11.1, \r\n\r\n**What browser are you using?**\r\n\r\nNot relevant\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS, Alpine on a MacBook Pro M2\r\n\r\n**Reproduction URL**\r\n\r\nNot relevant\r\n\r\n**Describe your issue**\r\n\r\nThis does not work for me.\r\n\r\nIf I download the standalone from the latest release and run the binary  in an alpine container I get this output:\r\n\r\n```\r\n/app # /bin/tailwindcss\r\n\r\nBun is a fast JavaScript runtime, package manager, bundler, and test runner. (1.1.26+0a37423ba)\r\n\r\nUsage: bun <command> [...flags] [...args]\r\n\r\nCommands:\r\n  run       ./my-script.ts       Execute a file with Bun\r\n            lint                 Run a package.json script\r\n  test                           Run unit tests with Bun\r\n  x         bun-repl             Execute a package binary (CLI), installing if needed (bunx)\r\n  repl                           Start a REPL session with Bun\r\n  exec                           Run a shell script directly with Bun\r\n\r\n  install                        Install dependencies for a package.json (bun i)\r\n  add       @shumai/shumai       Add a dependency to package.json (bun a)\r\n  remove    babel-core           Remove a dependency from package.json (bun rm)\r\n  update    hono                 Update outdated dependencies\r\n  outdated                       Display latest versions of outdated dependencies\r\n  link      [<package>]          Register or link a local npm package\r\n  unlink                         Unregister a local npm package\r\n  patch <pkg>                    Prepare a package for patching\r\n  pm <subcommand>                Additional package management utilities\r\n\r\n  build     ./a.ts ./b.jsx       Bundle TypeScript & JavaScript into a single file\r\n\r\n  init                           Start an empty Bun project from a blank template\r\n  create    svelte               Create a new project from a template (bun c)\r\n  upgrade                        Upgrade to latest version of Bun.\r\n  <command> --help               Print help text for command.\r\n\r\nLearn more about Bun:            https://bun.sh/docs\r\nJoin our Discord community:      https://bun.sh/discord\r\n```\r\n\r\nWhich is just bun. The above is done in an Alpine container on a M2 MacBook Pro.\r\n\r\nGetting the same binary but for macos gives the correct and following output:\r\n```\r\n~/Downloads ❯❯❯ xattr -d com.apple.quarantine  tailwindcss-macos-arm64                                                                                                                                                                                                                                             ✘\r\n~/Downloads ❯❯❯ ./tailwindcss-macos-arm64\r\n≈ tailwindcss v4.0.0-alpha.25\r\n\r\nUsage:\r\n  tailwindcss [--input input.css] [--output output.css] [--watch] [options…]\r\n\r\nOptions:\r\n  -i, --input ··········· Input file\r\n  -o, --output ·········· Output file\r\n  -w, --watch ··········· Watch for changes and rebuild as needed\r\n  -m, --minify ·········· Optimize and minify the output\r\n      --optimize ········ Optimize the output without minifying\r\n      --cwd ············· The current working directory [default: `.`]\r\n  -h, --help ············ Display usage information\r\n~/Downloads ❯❯❯\r\n```\r\n\r\nAlso tried downloading the repository. Turning on corepack and then running `pnpm run build`. Which results in the same result.\r\n\r\n![Skærmbillede 2024-10-02 kl  10 27 07](https://github.com/user-attachments/assets/79d0bed3-a3ee-4d53-8303-2bde3fe9c789)\r\n\r\nAttached screenshot.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14569","RelatedDescription":"Open issue \"[v4] Standalone on Alpine ARM64 is just bun and not the compiled binary\" (#14569)"},{"Id":"2560696023","IsPullRequest":false,"CreatedAt":"2024-10-02T05:21:59","Actor":"ionurboz","Number":"14568","RawContent":null,"Title":"Theme -> Extend -> Fallback: not working on negative margin","State":"open","Body":"### Discussed in https://github.com/tailwindlabs/tailwindcss/discussions/14563\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **ionurboz** October  1, 2024</sup>\r\nI have this variable:\r\n```css\r\n--space-container: clamp(1rem, 3vw, 3rem);\r\n```\r\n\r\nI have also extended \"padding\" and \"margin\" spacings via name of \"container\" below.\r\n\r\n```mjs\r\nexport default {\r\n      padding: {\r\n        container: [\"1rem\", \"var(--space-container)\"]\r\n      },\r\n      margin: {\r\n        container: [\"1rem\", \"var(--space-container)\"]\r\n      },\r\n}\r\n```\r\n\r\nI have add \"1rem\" fallback if browser doesn't support `clamp` feature. In this case, \"p-container\" and \"m-container\" works well,\r\n\r\n```css\r\n.pr-container {\r\n    padding-right: 1rem;\r\n    padding-right: var(--space-container);\r\n}\r\n.ml-container {\r\n    margin-left: 1rem;\r\n    margin-left: var(--space-container);\r\n}\r\n```\r\n\r\nbut negative margin be confused while making css;\r\n\r\n```css\r\n.-ml-container {\r\n    margin-left: calc(1rem, var(--space-container)* -1);\r\n}\r\n```\r\n\r\nexpected behavior:\r\n\r\n```css\r\n.-ml-container {\r\n    margin-left: -1rem;\r\n    margin-left: calc(var(--space-container)* -1);\r\n}\r\n```\r\n\r\nDo I have a problem?\r\n\r\n</div>","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14568","RelatedDescription":"Open issue \"Theme -> Extend -> Fallback: not working on negative margin\" (#14568)"},{"Id":"2559508944","IsPullRequest":true,"CreatedAt":"2024-10-01T17:20:18","Actor":"adamwathan","Number":"14566","RawContent":null,"Title":"Test `@import \"tailwindcss\" prefix(tw)` explicitly + move prefix tests","State":"closed","Body":"I noticed our prefix tests were missing an explicit test for `@import \"tailwindcss\" prefix(tw)` so this PR tweaks an existing test to test that case.\r\n\r\nAlso noticed that `prefix.test.ts` was in the `compat` folder even though this is a v4 feature, so moved it out to the root.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14566","RelatedDescription":"Closed or merged PR \"Test `@import \"tailwindcss\" prefix(tw)` explicitly + move prefix tests\" (#14566)"},{"Id":"2557032558","IsPullRequest":true,"CreatedAt":"2024-10-01T16:04:08","Actor":"philipp-spiess","Number":"14557","RawContent":null,"Title":"Template migrations: Migrate v3 prefixes to v4","State":"closed","Body":"This PR adds a new migration that can migrate Tailwind CSS v3 style prefixes into Tailwind CSS v4.\r\n\r\nThe migration is split into three separate pieces of work:\r\n\r\n1. Firstly, we need to read the full JavaScript config to get the _old_ prefix option. This is necessary because in v4, we will not allow things like custom-separators for the prefix. From this option we will then try and compute a new prefix (in 90% of the cases this is going to just remove the trailing `-` but it can also work in more complex cases).\r\n2. Then we migrate all Candidates. The important thing here is that we need to operate on the raw candidate string because by relying on `parseCandidate` (which we do for all other migrations) would not work, as the candidates are not valid in v4 syntax. More on that in a bit.\r\n3. Lastly we also make sure to update the CSS config to include the new prefix. This is done by prepending the prefix option like so:\r\n    \r\n    ```css\r\n    @import \"tailwindcss\" prefix(tw);\r\n    ```\r\n\r\n### Migrating candidates\r\n\r\nThe main difference between v3 prefixes and v4 prefixes is that in v3, the prefix was _part of the utility_ where as in v4 it is _always in front of the CSS class. \r\n\r\nSo, for example, this candidate in v3: \r\n\r\n```\r\nhover:-tw-mr-4\r\n```\r\n\r\nWould be converted to the following in v4:\r\n\r\n```\r\ntw:hover:-mr-4\r\n```\r\n\r\nSince the first example _won't parse as a valid Candidate in v4, as the `tw-mr` utility does not exist, we have to operate on the raw candidate string first. To do this I created a fork of the `parseCandidate` function _without any validation of utilities or variants_. This is used to identify part of the candidate that is the `base` and then ensuring the `base` starts with the old prefix. We then remove this to create an \"unprefixed\" candidate that we validate against a version of the DesignSystem _with no prefixes configured_. If the variant is valid this way, we can then print it again with the `DesignSystem` that has the new prefix to get the migrated version.\r\n\r\nSince we set up the `DesignSystem` to include the new prefix, we can also be certain that migrations that happen afterwards would still disqualify candidates that aren't valid according to the new prefix policy. This does mean we need to have the prefix fixup be the first step in our pipeline.\r\n\r\nOne interesting bit is that in v3, arbitrary properties did not require prefixes where as in v4 they do. So the following candidate:\r\n\r\n```\r\n[color:red]\r\n```\r\n\r\nWill be converted to:\r\n\r\n```\r\ntw:[color:red]\r\n```\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14557","RelatedDescription":"Closed or merged PR \"Template migrations: Migrate v3 prefixes to v4\" (#14557)"},{"Id":"2559281756","IsPullRequest":true,"CreatedAt":"2024-10-01T15:00:20","Actor":"philipp-spiess","Number":"14564","RawContent":null,"Title":"Add integration tests for multi-root builds","State":"closed","Body":"When your Vite or postcss project has multiple Tailwind CSS roots with different configs, they should not influence each other (with the exception of the same candidates being used).","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14564","RelatedDescription":"Closed or merged PR \"Add integration tests for multi-root builds\" (#14564)"},{"Id":"2559083931","IsPullRequest":true,"CreatedAt":"2024-10-01T14:06:43","Actor":"philipp-spiess","Number":"14562","RawContent":null,"Title":"Bare values: Disallow zeros in decimal places","State":"closed","Body":"I noticed some more unexpected values being passed through as _bare values_: Decimal places with zero. \r\n\r\nThese should not generate CSS but currently does:\r\n\r\n- `from-25.%`\r\n- `from-25.0%`\r\n- `from-25.00%`\r\n- etc.\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14562","RelatedDescription":"Closed or merged PR \"Bare values: Disallow zeros in decimal places\" (#14562)"},{"Id":"2558877085","IsPullRequest":true,"CreatedAt":"2024-10-01T11:52:12","Actor":"RobinMalfait","Number":"14561","RawContent":null,"Title":"Fix rebuilds when editing imported CSS files","State":"closed","Body":"This PR fixes an issue where importing other CSS files, then changing those CSS files didn't trigger a rebuild. This PR fixes that by making sure that the imported CSS files are properly watched.\n\nThis PR also adds some integration tests for `@tailwindcss/postcss`, `@tailwindcss/vite` and `@tailwindcss/cli` to make sure this works as expected.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14561","RelatedDescription":"Closed or merged PR \"Fix rebuilds when editing imported CSS files\" (#14561)"},{"Id":"2558864608","IsPullRequest":true,"CreatedAt":"2024-10-01T11:45:52","Actor":"philipp-spiess","Number":"14560","RawContent":null,"Title":"Only run Ubuntu tests on feature branches","State":"closed","Body":"This PR changes it so that only the Ubuntu runner starts when doing a pull request. On a successfull `next` merge, all runners shoould start.\r\n\r\nFurthermore this increases the retry count for integration test to 3. This is mainly so that rare Windows flakes we still see won't become noise when we enabled the Discord notification.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14560","RelatedDescription":"Closed or merged PR \"Only run Ubuntu tests on feature branches\" (#14560)"},{"Id":"2558527616","IsPullRequest":false,"CreatedAt":"2024-10-01T10:43:36","Actor":"Matheun","Number":"14559","RawContent":null,"Title":"[V4] preflight overrides components layer","State":"closed","Body":"Using tailwind v4.0.0.25\r\n\r\n```scss\r\n@import \"tailwindcss/preflight\" layer(base);\r\n@import \"../components/_index.scss\" layer(components);\r\n```\r\nIn the images below you can see that the font styles are being overridden bij the tailwind preflight\r\n\r\n<img width=\"333\" alt=\"image\" src=\"https://github.com/user-attachments/assets/3ea9d2c9-c6ee-49be-9d5d-84ef82ef4b68\">\r\n\r\n<img width=\"332\" alt=\"image\" src=\"https://github.com/user-attachments/assets/6f3e8691-c64b-4e40-8a18-ebf936c0a24a\">\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14559","RelatedDescription":"Closed issue \"[V4] preflight overrides components layer\" (#14559)"},{"Id":"2556912391","IsPullRequest":true,"CreatedAt":"2024-09-30T19:12:04","Actor":"thecrypticace","Number":"14556","RawContent":null,"Title":"Add `blocklist` support from v3 config files","State":"closed","Body":"This PR adds support for the `blocklist` config option when using a JS config file in v4. You can now block certain classes from being generated at all. This is useful in cases where scanning files sees things that look like classes but are actually not used. For example, in paragraphs in a markdown file:\r\n\r\n  ```js\r\n  // tailwind.config.js\r\n  export default {\r\n    blocklist: ['bg-red-500'],\r\n  }\r\n  ```\r\n  \r\n  ```html\r\n  <!-- index.html -->\r\n  <div class=\"bg-red-500 text-black/75\"></div>\r\n  ```\r\n\r\nOutput:\r\n  \r\n  ```css\r\n  .text-black/75 {\r\n    color: rgba(0, 0, 0, 0.75);\r\n  }\r\n  ```\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14556","RelatedDescription":"Closed or merged PR \"Add `blocklist` support from v3 config files\" (#14556)"},{"Id":"2557407826","IsPullRequest":false,"CreatedAt":"2024-09-30T18:45:03","Actor":"bitofbreeze","Number":"14558","RawContent":null,"Title":"[v4] Something has broken since alpha.15, causing imports in CSS files and vite URL imports to not work","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv4.0.0-alpha.25\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nvite 5.4.8\r\n\r\n**What version of Node.js are you using?**\r\n\r\nbun 1.1.27\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nUnfortunately Stackblitz doesn't support creating a repro since it can't run the tailwind wasm module used in the @tailwindcss/vite plugin.\r\n\r\n**Describe your issue**\r\n\r\nWith v4.0.0-alpha.15, I can have a css file that does:\r\n\r\n```\r\n@import \"tailwindcss\";\r\n@import \"common/base.css\";\r\n```\r\n\r\nand use that stylesheet as a [vite URL import](https://vitejs.dev/guide/assets#explicit-url-imports):\r\n\r\n```\r\nimport stylesUrl from \"./root.css?url\";\r\n```\r\n\r\nHowever, when I just upgrade to v4.0.0-alpha.25, I get\r\n\r\n1. `Uncaught SyntaxError: The requested module '/app/root.css?url' does not provide an export named 'default'` because the vite URL imports have broken.\r\n\r\nIf I just import normally without the URL suffix (`import \"./root.css\";`),\r\n\r\n2. Now not all the styles from common/base.css which is imported in ./root.css apply, and trying to do something basic like reassign a CSS variable in ./root.css no longer works:\r\n\r\n```\r\n@theme {\r\n\t--color-bg: orange;\r\n}\r\n```\r\n\r\nThat works back on v4.0.0-alpha.15.\r\n\r\nPlease let me know if I can provide more info, or if instead of Stackblitz, there is another provider that does support wasm.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14558","RelatedDescription":"Open issue \"[v4] Something has broken since alpha.15, causing imports in CSS files and vite URL imports to not work\" (#14558)"},{"Id":"2556687603","IsPullRequest":false,"CreatedAt":"2024-09-30T17:38:44","Actor":"JustCreateDeveloper","Number":"14555","RawContent":null,"Title":"Next Js -  Hot reloading occurs on every save when having badly defined content in tailwing config file.","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n3.4.13\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\nNextJs 14.2.2\r\n\r\n**What version of Node.js are you using?**\r\n\r\n21.3.0\r\n\r\n**What browser are you using?**\r\n\r\nChrome, Opera\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS, Windows\r\n\r\n**Reproduction URL**\r\n\r\nhttps://github.com/vercel/next.js/discussions/25712#discussioncomment-10354430\r\n\r\n**Describe your issue**\r\n\r\nHot reloading occurs on every save when having badly defined content in tailwing config file.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14555","RelatedDescription":"Closed issue \"Next Js -  Hot reloading occurs on every save when having badly defined content in tailwing config file.\" (#14555)"},{"Id":"2556403101","IsPullRequest":true,"CreatedAt":"2024-09-30T14:39:21","Actor":"RobinMalfait","Number":"14553","RawContent":null,"Title":"Expose timing information in debug mode","State":"closed","Body":"This PR exposes when using the the `DEBUG` environment variable. This follows the `DEBUG` conventions where:\n\n- `DEBUG=1`\n- `DEBUG=true`\n- `DEBUG=*`\n- `DEBUG=tailwindcss`\n\nWill enable the debug information, but when using:\n\n- `DEBUG=0`\n- `DEBUG=false`\n- `DEBUG=-tailwindcss`\n\nIt will not.\n\nThis currently only exposes some timings related to:\n\n1. Scanning for candidates\n2. Building the CSS\n3. Optimizing the CSS\n\nWe can implement a more advanced version of this where we also expose more fine grained information such as the files we scanned, the amount of candidates we found and so on. But I believe that this will be enough to start triaging performance related issues.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14553","RelatedDescription":"Closed or merged PR \"Expose timing information in debug mode\" (#14553)"},{"Id":"2554910009","IsPullRequest":true,"CreatedAt":"2024-09-29T13:34:35","Actor":"fcrozatier","Number":"14548","RawContent":null,"Title":"Add a sensible default for alt texts","State":"closed","Body":"Hey! \r\n\r\nIn the rare cases of a broken image, when the alt text is displayed it's is styled as raw text by default. So it's unclear where the alt text starts / ends.\r\n\r\nThis PR makes the alt text italic by default, which seems like a sensible default and a slight improved which doesn't impact most users.  \r\n\r\n<img width=\"1328\" alt=\"Capture d’écran 2024-09-29 à 14 26 33\" src=\"https://github.com/user-attachments/assets/b04b5e4c-a014-49cf-b239-cc75299b2316\">\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14548","RelatedDescription":"Closed or merged PR \"Add a sensible default for alt texts\" (#14548)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-10-04T03:30:24.2723127Z","RunDurationInMilliseconds":482}