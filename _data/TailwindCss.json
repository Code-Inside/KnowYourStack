{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2582124668","IsPullRequest":true,"CreatedAt":"2024-10-11T20:19:14","Actor":"RobinMalfait","Number":"14653","RawContent":null,"Title":"Fix `var(…)` as the opacity value inside the `theme(…)` function","State":"open","Body":"Inside the `theme(…)` function, we can use the `/` character for applying an opacity. For example `theme(colors.red.500 / 50%)` will apply a 50% opacity to the `colors.red.500` value.\n\nHowever, if you used a variable instead of the hardcoded `50%` value, then this was not parsed correctly. E.g.: `theme(colors.red.500 / var(--opacity))`\n\n_If_ we have this exact syntax (with the spaces), then it parses, but some information is lost:\n\n```html\n<div class=\"bg-[theme(colors.red.500_/_var(--opacity))]\"></div>\n```\n\nResults in:\n```css\n.bg-\\[theme\\(colors\\.red\\.500_\\/_var\\(--opacity\\)\\)\\] {\n  background-color: color-mix(in srgb, #ef4444 calc(var * 100%), transparent);\n}\n```\nNotice that the `var(--opacity)` is just parsed as `var`, and the `--opacity` is lost.\n\nAdditionally, if we drop the spaces, then it doesn't parse at all:\n\n```html\n<div class=\"bg-[theme(colors.red.500/var(--opacity))]\"></div>\n```\n\nResults in:\n```css\n```\n\nThis means that we have to handle 2 issues to make this work:\n1. We have to properly handle the `/` character as a proper separator.\n2. If we have sub-functions, we have to make sure to print them in full (instead of only the very first node (`var` in this case)).\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14653","RelatedDescription":"Open PR \"Fix `var(…)` as the opacity value inside the `theme(…)` function\" (#14653)"},{"Id":"2581608165","IsPullRequest":true,"CreatedAt":"2024-10-11T16:07:59","Actor":"philipp-spiess","Number":"14651","RawContent":null,"Title":"Support the `color` property in JS theme configuration callbacks","State":"closed","Body":"While working on some fixes for #14639 I noticed that the following v3 configuration file would not load properly in v4:\r\n\r\n```ts\r\nimport { type Config } from 'tailwindcss'\r\n\r\nexport default {\r\n  content: ['./src/**/*.{js,jsx,ts,tsx}'],\r\n  theme: {\r\n    extend: {\r\n      colors: ({ colors }) => ({\r\n        gray: colors.neutral,\r\n      }),\r\n  },\r\n} satisfies Config\r\n```\r\n\r\nThe reason for this is that we did not pass the `colors` property to the callback function. Since we have colors available now, we can easily add it.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14651","RelatedDescription":"Closed or merged PR \"Support the `color` property in JS theme configuration callbacks\" (#14651)"},{"Id":"2581598633","IsPullRequest":true,"CreatedAt":"2024-10-11T15:01:25","Actor":"philipp-spiess","Number":"14650","RawContent":null,"Title":"Address follow-up work for #14639","State":"open","Body":"This PR adds a few more test cases to #14639 and updates the documentation.\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14650","RelatedDescription":"Open PR \"Address follow-up work for #14639\" (#14650)"},{"Id":"2579863982","IsPullRequest":true,"CreatedAt":"2024-10-11T14:41:38","Actor":"RobinMalfait","Number":"14644","RawContent":null,"Title":"Migrate `aria-*`, `data-*` and `supports-*` variants from arbitrary values to bare values","State":"closed","Body":"This PR adds a new codemod that can migrate `data-*` and `aria-*` variants using arbitrary values to bare values.\r\n\r\nIn Tailwind CSS v3, if you want to conditionally apply a class using data attributes, then you can write `data-[selected]:flex`. This requires the DOM element to have a `data-selected=\"\"` attribute. In Tailwind CSS v4 we can simplify this, by dropping the brackets and by using `data-selected:flex` directly.\r\n\r\nThis migration operates on the internal AST, which means that this also just works for compound variants such as `group-has-data-[selected]:flex` (which turns into `group-has-data-selected:flex`).\r\n\r\nAdditionally, this codemod is also applicable to `aria-*` variants. The biggest difference is that in v4 `aria-selected` maps to an attribute of `aria-selected=\"true\"`. This means that we can only migrate `aria=[selected=\"true\"]:flex` to `aria-selected:flex`.\r\n\r\nLast but not least, we also migrate `supports-[gap]` to `supports-gap` if the passed in value looks like a property. If not, e.g.: `supports-[display:grid]` then it stays as-is.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14644","RelatedDescription":"Closed or merged PR \"Migrate `aria-*`, `data-*` and `supports-*` variants from arbitrary values to bare values\" (#14644)"},{"Id":"2581527787","IsPullRequest":true,"CreatedAt":"2024-10-11T14:38:46","Actor":"adamwathan","Number":"14649","RawContent":null,"Title":"Tweak changelog entries","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14649","RelatedDescription":"Closed or merged PR \"Tweak changelog entries\" (#14649)"},{"Id":"2579664872","IsPullRequest":true,"CreatedAt":"2024-10-11T14:24:54","Actor":"thecrypticace","Number":"14642","RawContent":null,"Title":"Convert to/from v3 theme keys in configs and plugins","State":"closed","Body":"A few theme keys have changed in v4 relative to v3:\r\n- `screens` -> `--breakpoint-*`\r\n- `colors` -> `--color-*`\r\n- `animation` -> `--animate-*`\r\n- `borderRadius` -> `--radius-*`\r\n- `boxShadow` -> `--shadow-*`\r\n\r\nWhen using the `theme()` function we wouldn't pick up values from the CSS for some of these. Likewise, when loading a v3 config not all of these would be pushed back into the CSS theme and they should've been.\r\n\r\nThis PR addresses both of these problems.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14642","RelatedDescription":"Closed or merged PR \"Convert to/from v3 theme keys in configs and plugins\" (#14642)"},{"Id":"2578672399","IsPullRequest":true,"CreatedAt":"2024-10-11T13:27:53","Actor":"philipp-spiess","Number":"14639","RawContent":null,"Title":"Add simple JS config migration","State":"closed","Body":"This PR implements the first version of JS config file migration to CSS. It is based on the most simple config setups we are using in the Tailwind UI templates Commit, Primer, Radiant, and Studio.\r\n\r\nThe example we use in the integration test is a config that looks like this:\r\n\r\n```js\r\nimport { type Config } from 'tailwindcss'\r\nimport defaultTheme from 'tailwindcss/defaultTheme'\r\n\r\nmodule.exports = {\r\n  darkMode: 'selector',\r\n  content: ['./src/**/*.{html,js}'],\r\n  theme: {\r\n    boxShadow: {\r\n      sm: '0 2px 6px rgb(15 23 42 / 0.08)',\r\n    },\r\n    colors: {\r\n      red: {\r\n        500: '#ef4444',\r\n      },\r\n    },\r\n    fontSize: {\r\n      xs: ['0.75rem', { lineHeight: '1rem' }],\r\n      sm: ['0.875rem', { lineHeight: '1.5rem' }],\r\n      base: ['1rem', { lineHeight: '2rem' }],\r\n    },\r\n    extend: {\r\n      colors: {\r\n        red: {\r\n          600: '#dc2626',\r\n        },\r\n      },\r\n      fontFamily: {\r\n        sans: 'Inter, system-ui, sans-serif',\r\n        display: ['Cabinet Grotesk', ...defaultTheme.fontFamily.sans],\r\n      },\r\n      borderRadius: {\r\n        '4xl': '2rem',\r\n      },\r\n    },\r\n  },\r\n  plugins: [],\r\n} satisfies Config\r\n```\r\n\r\nAs you can see, this file only has a `darkMode` selector, custom `content` globs, a `theme` (with some theme keys being overwriting the default theme and some others extending the defaults). Note that it does not support `plugins` and/or `presets` yet.\r\n\r\nIn the case above, we will find the CSS file containing the existing `@tailwind` directives and are migrating it to the following:\r\n\r\n```css\r\n@import 'tailwindcss';\r\n\r\n@source './**/*.{html,js}';\r\n\r\n@variant dark (&:where(.dark, .dark *));\r\n\r\n@theme {\r\n  --box-shadow-*: initial;\r\n  --box-shadow-sm: 0 2px 6px rgb(15 23 42 / 0.08);\r\n\r\n  --color-*: initial;\r\n  --color-red-500: #ef4444;\r\n\r\n  --font-size-*: initial;\r\n  --font-size-xs: 0.75rem;\r\n  --font-size-xs--line-height: 1rem;\r\n  --font-size-sm: 0.875rem;\r\n  --font-size-sm--line-height: 1.5rem;\r\n  --font-size-base: 1rem;\r\n  --font-size-base--line-height: 2rem;\r\n\r\n  --color-red-600: #dc2626;\r\n\r\n  --font-family-sans: Inter, system-ui, sans-serif;\r\n  --font-family-display: Cabinet Grotesk, ui-sans-serif, system-ui, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\r\n\r\n  --border-radius-4xl: 2rem;\r\n} \r\n```\r\n\r\nThis replicates all features of the JS config so we can even delete the existing JS config in this case. ","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14639","RelatedDescription":"Closed or merged PR \"Add simple JS config migration\" (#14639)"},{"Id":"2579804731","IsPullRequest":true,"CreatedAt":"2024-10-11T12:22:55","Actor":"RobinMalfait","Number":"14643","RawContent":null,"Title":"Migrate legacy classes to the v4 alternative","State":"closed","Body":"This PR adds a mapping from legacy classes to new classes. For example, the `flex-shrink-0` is still used in our projects, but is deprecated in v3.\r\n\r\nThe migration does a tiny bit of parsing because we can't rely on `designSystem.parseCandidate(…)` because this requires the utility to be defined which is not the case for legacy classes.\r\n\r\nThis migration runs _after_ the migration where we handle prefixes, so we don't have to worry about that. We do have to worry about the `!` location, because the `important` migration also relies on the `designSystem`.\r\n\r\n| Old                 | New                    |\r\n| ------------------- | ---------------------- |\r\n| `overflow-clip`     | `text-clip`            |\r\n| `overflow-ellipsis` | `text-ellipsis`        |\r\n| `flex-grow-0`       | `grow-0`               |\r\n| `flex-shrink-0`     | `shrink-0`             |\r\n| `decoration-clone`  | `box-decoration-clone` |\r\n| `decoration-slice`  | `box-decoration-slice` |\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14643","RelatedDescription":"Closed or merged PR \"Migrate legacy classes to the v4 alternative\" (#14643)"},{"Id":"2581247449","IsPullRequest":true,"CreatedAt":"2024-10-11T12:18:00","Actor":"philipp-spiess","Number":"14648","RawContent":null,"Title":"Detect and migrate static plugin usages","State":"open","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14648","RelatedDescription":"Open PR \"Detect and migrate static plugin usages\" (#14648)"},{"Id":"2580329191","IsPullRequest":true,"CreatedAt":"2024-10-11T10:50:15","Actor":"depfu[bot]","Number":"14646","RawContent":null,"Title":"Update turbo 2.1.2 → 2.1.3 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ turbo (2.1.2 → 2.1.3) · [Repo](https://github.com/turborepo/turbo)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14646","RelatedDescription":"Closed or merged PR \"Update turbo 2.1.2 → 2.1.3 (patch)\" (#14646)"},{"Id":"2578991874","IsPullRequest":true,"CreatedAt":"2024-10-10T14:29:36","Actor":"RobinMalfait","Number":"14640","RawContent":null,"Title":"Use consistent quotes","State":"closed","Body":"Small improvement, we noticed that some quotes were not consistent with others. Let's make them consistent!\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14640","RelatedDescription":"Closed or merged PR \"Use consistent quotes\" (#14640)"},{"Id":"2576447105","IsPullRequest":true,"CreatedAt":"2024-10-10T14:02:42","Actor":"RobinMalfait","Number":"14635","RawContent":null,"Title":"Inject `@config \"...\"` when a `tailwind.config.{js,ts,...}` is detected","State":"closed","Body":"This PR injects a `@config \"…\"` in the CSS file if a JS based config has been found.\r\n\r\nWe will try to inject the `@config` in a sensible place:\r\n1. Above the very first `@theme`\r\n2. If that doesn't work, below the last `@import`\r\n3. If that doesn't work, at the top of the file (as a last resort)\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14635","RelatedDescription":"Closed or merged PR \"Inject `@config \"...\"` when a `tailwind.config.{js,ts,...}` is detected\" (#14635)"},{"Id":"2571186534","IsPullRequest":true,"CreatedAt":"2024-10-10T13:44:04","Actor":"thecrypticace","Number":"14617","RawContent":null,"Title":"Migrate utilities in CSS files imported into layers","State":"closed","Body":"When a stylesheet is imported with `@import “…” layer(utilities)` that means that all classes in that stylesheet and any of its imported stylesheets become candidates for `@utility` conversion.\r\n\r\nDoing this correctly requires us to place `@utility` rules into separate stylesheets (usually) and replicate the import tree without layers as `@utility` MUST be root-level. If a file consists of only utilities we won't create a separate file for it and instead place the `@utility` rules in the same stylesheet.\r\n\r\nBeen doing a LOT of pairing with @RobinMalfait on this one but I think this is finally ready to be looked at","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14617","RelatedDescription":"Closed or merged PR \"Migrate utilities in CSS files imported into layers\" (#14617)"},{"Id":"2570334280","IsPullRequest":true,"CreatedAt":"2024-10-10T13:09:14","Actor":"philipp-spiess","Number":"14612","RawContent":null,"Title":"Migrate simple PostCSS setup","State":"closed","Body":"This PR attempts to detect simple postcss setups: These are setups that do not load dynamic modules and are based off the examples we are [recommending in our docs](https://tailwindcss.com/docs/installation/using-postcss). We detect wether a config is appropriate by having it use the object plugin config and by not requiring any other modules:\r\n\r\n```js\r\nmodule.exports = {\r\n  plugins: {\r\n    tailwindcss: {},\r\n    autoprefixer: {},\r\n  },\r\n}\r\n```\r\n\r\nWhen we find such a config file, we will go over it line-by-line and attempt to:\r\n\r\n- Upgrade `tailwindcss:` to `'@tailwindcss/postcss':`\r\n- Remove `autoprefixer` if used\r\n\r\nWe then attempt to install and remove the respective npm packages based on the package manger we detect.\r\n\r\nAnd since we now have logic to upgrade packages, this also makes sure to install `tailwindcss@next` at the end of a sucessful migration. ","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14612","RelatedDescription":"Closed or merged PR \"Migrate simple PostCSS setup\" (#14612)"},{"Id":"2570632462","IsPullRequest":true,"CreatedAt":"2024-10-10T10:31:46","Actor":"philipp-spiess","Number":"14614","RawContent":null,"Title":"Fix CSS `theme()` function resolution issue","State":"closed","Body":"We currently have three different implementations of the `resolveThemeValue()` Theme method:\r\n\r\n1. The _core_ version which only resolves based on the exact CSS variable name. This is the v4-only version.\r\n2. A _compat light_ version which attempts to translate a dot-notation keypath to a CSS variable name.\r\n3. A _full compat_ version which resolves the legacy theme object which is used whenever a `@plugin` or `@config` is added.\r\n\r\nUnfortunately, there are some issues with this approach that we've encountered when testing the CSS `theme()` function while upgrading Tailwind Templates to v4 using our upgrading toolkit. \r\n\r\n1. The _compat light_ resolver was trying to convert `theme(spacing.1)` to tuple syntax. Tuples require a nested property access, though, and instead this should be convert to `theme(--spacing-1)`.\r\n2. We currently only load _full compat_ version if `@plugin` or `@config` directives are used. It is possible, though, that we need the full compat mapping in other cases as well. One example we encountered is `theme(fontWeight.semibold)` which maps to a dictionary in the default theme that that we do not have an equivalent for in v4 variables.\r\n\r\nTo fix both issues, we decided to remove the _compat light_ version of the `theme()` function in favor of adding this behavior to an upgrade codemod. Instead, the second layer now only decides wether it can use the _core_ version or wether it needs to upgrade to the _full compat_ version. Since typos would trigger a _hard error_, we do not think this has unintended performance consequences if someone wants to use the _core_ version only (they would get an error regardless which they need to fix in order to continue).","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14614","RelatedDescription":"Closed or merged PR \"Fix CSS `theme()` function resolution issue\" (#14614)"},{"Id":"2578319069","IsPullRequest":true,"CreatedAt":"2024-10-10T10:14:51","Actor":"philipp-spiess","Number":"14637","RawContent":null,"Title":"Ensure custom variants using the JS API have access to modifiers","State":"closed","Body":"Fixes https://github.com/tailwindlabs/tailwindcss/discussions/14623\r\n\r\nWe didn't properly pass through modifiers for all custom variant calls. This PR fixes that. ","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14637","RelatedDescription":"Closed or merged PR \"Ensure custom variants using the JS API have access to modifiers\" (#14637)"},{"Id":"2570354517","IsPullRequest":false,"CreatedAt":"2024-10-09T14:56:10","Actor":"krompaco","Number":"14613","RawContent":null,"Title":"Temporary files created and removed causing cli to crash with ENOENT no such file or directory lstat error","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv4.0.0-alpha.26\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nnpx @tailwindcss/cli@next -i ./styles.css -o ./wwwroot/dist/styles.css --postcss --watch --verbose\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv20.9.0\r\n\r\n**What operating system are you using?**\r\n\r\nWindows\r\n\r\n**Describe your issue**\r\n\r\nThe watcher in the cli crashes quite frequently. It can work for hours so this is not a massive blocker - in general v4 is great!\r\n\r\n```\r\n..\r\nDone in 1ms <<< It works for a awhile but then an edit can get this thrown:\r\nnode:internal/process/promises:289\r\n            triggerUncaughtException(err, true /* fromPromise */);\r\n            ^\r\n\r\n[Error: ENOENT: no such file or directory, lstat 'C:\\a-full-path\\in-a-dotnet-project\\1jufg13t.3fy~'] {\r\n  errno: -4058,\r\n  code: 'ENOENT',\r\n  syscall: 'lstat',\r\n  path: 'C:\\\\a-full-path\\\\in-a-dotnet-project\\\\1jufg13t.3fy~'\r\n}\r\n```\r\n\r\nThe files ending with ~ are not part of my project. I think they are used to swap compiled bits of code when running my dotnet web project and doing hot reload. Or they are just temporary files that exists for a shorter while during compilation/build.\r\n\r\nMaybe the error handling can be improved or the list of watched files (if there is one) needs to adapt more quickly on temp files being added and removed in the space?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14613","RelatedDescription":"Closed issue \"Temporary files created and removed causing cli to crash with ENOENT no such file or directory lstat error\" (#14613)"},{"Id":"2570870266","IsPullRequest":true,"CreatedAt":"2024-10-09T14:56:09","Actor":"philipp-spiess","Number":"14616","RawContent":null,"Title":"Fix CLI client crash when a file is removed before we process the change notification","State":"closed","Body":"Fixes #14613\r\n\r\nDon't crash when trying to read the modification time of a file that might already be deleted. \r\n\r\nNote: This fix is purely theoretical right now as I wasn't able to reproduce the issue yet.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14616","RelatedDescription":"Closed or merged PR \"Fix CLI client crash when a file is removed before we process the change notification\" (#14616)"},{"Id":"2575817539","IsPullRequest":false,"CreatedAt":"2024-10-09T12:41:11","Actor":"lusayo-nyondo","Number":"14632","RawContent":null,"Title":"Tailwind CLI Hot Reload Not Working When Parent Directories Contain Parenthesis i.e. \"(\" and \")\" in their name.","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.4.13\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\ntailwindcss-cli\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv20.12.2\r\n\r\n**What browser are you using?**\r\n\r\nEdge\r\n\r\n**What operating system are you using?**\r\n\r\nWindows 11\r\n\r\n**Reproduction URL**\r\n\r\nhttps://github.com/lusayo-nyondo/tailwindcss_bug_report_sayo\r\n\r\nThe above Repo contains a more detailed explanation of the issue I've faced as well as steps to reproduce the bug int he README section.\r\n\r\n**Describe your issue**\r\n\r\nThe hot reload feature isn't working with tailwindcss-cli under specific circumstances. To be exact:\r\n\r\n- `npx tailwindcss -i ./src/input.css -o ./src/output.css --watch` fails to watch the file system and trigger hot reloads if any of the parent directories containing the project have parenthesis in their name.\r\n\r\nI've included a more detailed explanation in the README section of the repo I've provided, including how to reproduce the bug on my end.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14632","RelatedDescription":"Open issue \"Tailwind CLI Hot Reload Not Working When Parent Directories Contain Parenthesis i.e. \"(\" and \")\" in their name.\" (#14632)"},{"Id":"2575597218","IsPullRequest":true,"CreatedAt":"2024-10-09T11:55:58","Actor":"RobinMalfait","Number":"14631","RawContent":null,"Title":"Don't set `display: none` on elements that use `hidden=\"until-found\"`","State":"closed","Body":"Fixes an issue reported by the React Aria Components team here:\n\nhttps://github.com/adobe/react-spectrum/issues/7160\n\nBasically `hidden=\"until-found\"` behaves very differently than `hidden` and doesn't actually use `display: none`, so we don't want to apply the behavior we apply for the regular `hidden` attribute.\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14631","RelatedDescription":"Closed or merged PR \"Don't set `display: none` on elements that use `hidden=\"until-found\"`\" (#14631)"},{"Id":"2574185269","IsPullRequest":true,"CreatedAt":"2024-10-09T11:55:48","Actor":"adamwathan","Number":"14625","RawContent":null,"Title":"Don't set `display: none` on elements that use `hidden=\"until-found\"`","State":"closed","Body":"Fixes an issue reported by the React Aria Components team here:\r\n\r\nhttps://github.com/adobe/react-spectrum/issues/7160\r\n\r\nBasically `hidden=\"until-found\"` behaves very differently than `hidden` and doesn't actually use `display: none`, so we don't want to apply the behavior we apply for the regular `hidden` attribute.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14625","RelatedDescription":"Closed or merged PR \"Don't set `display: none` on elements that use `hidden=\"until-found\"`\" (#14625)"},{"Id":"2575495368","IsPullRequest":false,"CreatedAt":"2024-10-09T10:45:38","Actor":"Yueyanc","Number":"14629","RawContent":null,"Title":"tailwind.config.js not work at monorepo","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.4.13\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nreact@18.3.1\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv20.11.1\r\n\r\n**What browser are you using?**\r\n\r\nelectron\r\n\r\n**What operating system are you using?**\r\n\r\nWindows\r\n\r\n**Reproduction URL**\r\n\r\nhttps://github.com/Yueyanc/template/tree/electron-template\r\n\r\n**Describe your issue**\r\n\r\nIf I set tailwind.config.js in the root directory of the monorepo project, the configuration takes effect. However, it does not take effect when I set tailwind.config.js in the root directory of the web project\r\n\r\n![image](https://github.com/user-attachments/assets/106ffa5b-3614-47b8-978a-3d5b376c5649)\r\n![image](https://github.com/user-attachments/assets/e2e95372-994b-42cb-95b5-dd6988e4ebe9)\r\n![image](https://github.com/user-attachments/assets/9ea1b518-b6d5-45f2-b69f-c175f4638bd3)\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14629","RelatedDescription":"Closed issue \"tailwind.config.js not work at monorepo\" (#14629)"},{"Id":"2573131324","IsPullRequest":false,"CreatedAt":"2024-10-08T13:47:13","Actor":"Matheun","Number":"14622","RawContent":null,"Title":"[V4]: Custom keyframes in `@theme` won't apply correctly","State":"closed","Body":"For some reason, the custom keyframes in my theme config wont correctly apply in my component layer. i'm using scss files","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14622","RelatedDescription":"Closed issue \"[V4]: Custom keyframes in `@theme` won't apply correctly\" (#14622)"},{"Id":"2571488883","IsPullRequest":true,"CreatedAt":"2024-10-08T11:47:55","Actor":"RobinMalfait","Number":"14618","RawContent":null,"Title":"Make custom `@at-root` private API","State":"closed","Body":"This PR makes the internal `@at-root` API private. Before this PR you could use `@at-root` in your own CSS, which means that it was part of the public API. If you (accidentally) used it in variants, you could generate CSS that was completely broken.\n\nThis now introduces a new private `AtRoot` node (similar to the recently introduced `Context` node) and can only be constructed within the framework.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14618","RelatedDescription":"Closed or merged PR \"Make custom `@at-root` private API\" (#14618)"},{"Id":"2572836017","IsPullRequest":false,"CreatedAt":"2024-10-08T10:53:00","Actor":"The-io-dev","Number":"14621","RawContent":null,"Title":"BroadPattern check is still quite resource hungry","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n3.4.8\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nnx@19.7.2 monorepo with angular@18.2.4 apps and libs, with esbuild\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv20.17.0\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nWindows\r\n\r\n**Reproduction URL**\r\n\r\nI tried to make a reproduction link but due to the source of the problem, making a reproduction link is tedious. There would be the need to make many libs, with many components.\r\n\r\nIf the description of the issues doesn't give satisfaction, i will try again to make scripts to make a repo big enough\r\n\r\n**Describe your issue**\r\n\r\nThe issues comes from this PR #14140.\r\n\r\nWhat happens is : \r\n- nx automatically creates patterns with `createGlobPatternsForDependencies` (finds all libs to be included in tailwind compilation)\r\n  - in our project, that may mean 150 libs, times two since we parse `.ts` and `.html` files, so 300 paths.\r\n- when we check for the alert, for each file, we check if the path match with any paths, resulting in great amount of checks.\r\n\r\nWhen compiling prior to this version or comment the feature, we compile in *~90 seconds* with the check, it takes *~180 seconds*.\r\n\r\nWhen removing the use of `createGlobPatternsForDependencies` and switching to a wider pattern, we still get *~105 seconds* and could be considered a loss (we would be generating the same big CSS file for each of or application, regardless of what it actually needs)\r\n\r\nWhen upgrading to the 3.4.13 version where an optimization was implemented, we get *~120 seconds*, witch is still quite long.\r\n\r\nPS: i should add that tailwind being recompiled on serve, the X seconds increase of compilation times makes live development that much more painful, transforming a few needed seconds into a minute of waiting, maybe more.\r\n\r\nCould there be an option to remove this check entirely for thoses who are sure of their patterns and look for performance ?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14621","RelatedDescription":"Open issue \"BroadPattern check is still quite resource hungry\" (#14621)"},{"Id":"2569867973","IsPullRequest":true,"CreatedAt":"2024-10-07T09:38:01","Actor":"RobinMalfait","Number":"14611","RawContent":null,"Title":"Pretty print `!important` in declarations","State":"closed","Body":"This PR is a very small improvement. We started pretty printing the generated CSS (proper indentation) a while ago, so that we can use the output as-is for intellisense (on hover).\n\nThe other day I noticed that when you use `!important` that we attach it directly to the declaration. Not the end of the world, but this PR injects a little space to make sure that the `!important` is separated from the value which makes it a little easier to read and looks more like what you would write by hand.\n\nBefore:\n```css\n.flex\\! {\n  display: flex!important;\n}\n```\n\nAfter:\n```css\n.flex\\! {\n  display: flex !important;\n}\n```\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14611","RelatedDescription":"Closed or merged PR \"Pretty print `!important` in declarations\" (#14611)"},{"Id":"2568065534","IsPullRequest":true,"CreatedAt":"2024-10-07T09:25:00","Actor":"depfu[bot]","Number":"14608","RawContent":null,"Title":"Update bun 1.1.26 → 1.1.29 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ bun (1.1.22 → 1.1.29) · [Repo](https://github.com/oven-sh/bun)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14608","RelatedDescription":"Closed or merged PR \"Update bun 1.1.26 → 1.1.29 (patch)\" (#14608)"},{"Id":"2568100599","IsPullRequest":false,"CreatedAt":"2024-10-05T14:10:36","Actor":"topherfangio","Number":"14609","RawContent":null,"Title":"Support the :where pseudo-class","State":"closed","Body":"Most browsers now support the `:where()` pseudo-class which allows you to reduce the specificity of an added class allowing other classes to take precedence.\r\n\r\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/:where\r\n\r\nWhen building custom Tailwind components, this allows us to add some default classes to our components that can be easily overridden by users' custom classes without resorting to the `!important` variant that Tailwind provides.\r\n\r\nI'm currently doing this by defining a custom selector in my code, but this looks messy and makes the code a bit less readable.\r\n\r\n```haml\r\n#some_element{ class: \"[:where(&)]:text-lg [:where(&)]:text-red-400\" }\r\n```\r\n\r\nIf it was fully supported, my code would look much cleaner:\r\n\r\n\r\n```haml\r\n#some_element{ class: \"where:text-lg where:text-red-400\" }\r\n```\r\n\r\nTailwind [already supports](https://tailwindcss.com/docs/hover-focus-and-other-states#quick-reference) most of the other modifiers out of the box, and although we can easily add this through a custom variant / plugin, it seems like it would be useful to have in the base library.\r\n\r\nWould love to know if there was a particular reason that it was left out or if it causes trouble when added!\r\n\r\nThank you! I really love using Tailwind ❤️ ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/14609","RelatedDescription":"Closed issue \"Support the :where pseudo-class\" (#14609)"},{"Id":"2568061256","IsPullRequest":true,"CreatedAt":"2024-10-05T13:38:11","Actor":"benface","Number":"14607","RawContent":null,"Title":"Add safe alignment utilities","State":"open","Body":"Fixes #7929 and #12916\r\n\r\nThis PR adds [safe alignment utilities](https://www.stefanjudis.com/today-i-learned/safe-unsafe-alignment-in-css-flexbox/) to Tailwind 4. I opted to include them for every justify/align content/items/self property, but only for the `end` and `center` values. I know that it doesn't make sense for `start` (as the point of safe alignment is to fall back to `start` when it overflows), but I'm not sure about `space-between`, `space-around`, or other values. I certainly never encountered a situation where I needed `safe` with those.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14607","RelatedDescription":"Open PR \"Add safe alignment utilities\" (#14607)"},{"Id":"2567725623","IsPullRequest":true,"CreatedAt":"2024-10-05T08:01:39","Actor":"bogdan","Number":"14605","RawContent":null,"Title":"Avoid printing the entire file source code on error when watching","State":"open","Body":"Avoid printing the entire source file to console when watcher encounters an error.\r\n\r\nCurrently, the `CssSyntaxError` is highly unreadable when printed because the source file is printed entirely after the backtrace which makes it necessary to scroll up the console to see more useful information.\r\nThis patch only leaves the part that is usually useful: file name, line color, error message and backtrace:\r\n\r\n```\r\nRebuilding...\r\nCssSyntaxError: tailwindcss: /Users/bogdan/makabu/brad/seven-figures/app/assets/stylesheets/application.tailwind.css:9:5: The `qq` class does not exist. If `qq` is a custom class, make sure it is defined within a `@layer` directive.\r\n    at Input.error (/Users/bogdan/makabu/brad/seven-figures/node_modules/postcss/lib/input.js:106:16)\r\n    at AtRule.error (/Users/bogdan/makabu/brad/seven-figures/node_modules/postcss/lib/node.js:115:32)\r\n    at processApply (/Users/bogdan/makabu/brad/seven-figures/node_modules/tailwindcss/lib/lib/expandApplyAtRules.js:380:29)\r\n    at /Users/bogdan/makabu/brad/seven-figures/node_modules/tailwindcss/lib/lib/expandApplyAtRules.js:551:9\r\n    at /Users/bogdan/makabu/brad/seven-figures/node_modules/tailwindcss/lib/processTailwindFeatures.js:55:50\r\n    at async Object.Once (/Users/bogdan/makabu/brad/seven-figures/node_modules/tailwindcss/lib/cli/build/plugin.js:246:17)\r\n    at async LazyResult.runAsync (/Users/bogdan/makabu/brad/seven-figures/node_modules/postcss/lib/lazy-result.js:261:11)\r\n    at async Object.watch (/Users/bogdan/makabu/brad/seven-figures/node_modules/tailwindcss/lib/cli/build/plugin.js:371:13)\r\n    at async build (/Users/bogdan/makabu/brad/seven-figures/node_modules/tailwindcss/lib/cli/build/index.js:47:9)\r\n```\r\n\r\n<details>\r\n<summary> Example Before the patch</summary>\r\n\r\n```\r\nRebuilding...\r\nCssSyntaxError: tailwindcss: /Users/bogdan/makabu/brad/seven-figures/app/assets/stylesheets/application.tailwind.css:9:5: The `qq` class does not exist. If `qq` is a custom class, make sure it is defined within a `@layer` directive.\r\n    at Input.error (/snapshot/tailwindcss/node_modules/postcss/lib/input.js:106:16)\r\n    at AtRule.error (/snapshot/tailwindcss/node_modules/postcss/lib/node.js:115:32)\r\n    at processApply (/snapshot/tailwindcss/lib/lib/expandApplyAtRules.js:380:29)\r\n    at /snapshot/tailwindcss/lib/lib/expandApplyAtRules.js:551:9\r\n    at /snapshot/tailwindcss/lib/processTailwindFeatures.js:55:50\r\n    at async Object.Once (/snapshot/tailwindcss/lib/cli/build/plugin.js:245:17)\r\n    at async LazyResult.runAsync (/snapshot/tailwindcss/node_modules/postcss/lib/lazy-result.js:261:11)\r\n    at async Object.watch (/snapshot/tailwindcss/lib/cli/build/plugin.js:370:13)\r\n    at async build (/snapshot/tailwindcss/lib/cli/build/index.js:47:9) {\r\n  reason: 'The `qq` class does not exist. If `qq` is a custom class, make sure it is defined within a `@layer` directive.',\r\n  file: '/Users/bogdan/makabu/brad/seven-figures/app/assets/stylesheets/application.tailwind.css',\r\n  source: '@import \"choices.css\";\\n' +\r\n    '\\n' +\r\n    '@tailwind base;\\n' +\r\n    '@tailwind components;\\n' +\r\n    '@tailwind utilities;\\n' +\r\n    '\\n' +\r\n    '@layer components {\\n' +\r\n    '  .page-header {\\n' +\r\n    '    @apply text-4xl font-bold mb-4 text-center qq; \\n' +\r\n    '  }\\n' +\r\n    '  .card-standard {\\n' +\r\n    '    @apply bg-white shadow-xl dark:bg-gray-800;\\n' +\r\n    '  };\\n' +\r\n    '  .card-central {\\n' +\r\n    '    @apply mx-auto max-w-lg w-full;\\n' +\r\n    '  }\\n' +\r\n    '  .text-fade {\\n' +\r\n    '    @apply text-base-300;\\n' +\r\n    '  }\\n' +\r\n    '  .admin-filters-grid {\\n' +\r\n    '    /* @apply columns-1 sm:columns-2 lg:columns-3 2xl:columns-4 w-full break-inside-avoid */\\n' +\r\n    '    /* @apply grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 2xl:grid-cols-4 w-full */\\n' +\r\n    '  }\\n' +\r\n    '  .h1 {\\n' +\r\n    '    @apply text-4xl\\n' +\r\n    '  }\\n' +\r\n    '  .h2 {\\n' +\r\n    '    @apply text-3xl\\n' +\r\n    '  }\\n' +\r\n    '  .h3 {\\n' +\r\n    '    @apply text-2xl\\n' +\r\n    '  }\\n' +\r\n    '  .h4 {\\n' +\r\n    '    @apply text-xl\\n' +\r\n    '  }\\n' +\r\n    '  .h5 {\\n' +\r\n    '    @apply text-lg\\n' +\r\n    '  }\\n' +\r\n    '}\\n' +\r\n    '\\n' +\r\n    'input[type=\"number\"]::-webkit-outer-spin-button, input[type=\"number\"]::-webkit-inner-spin-button {\\n' +\r\n    '  -webkit-appearance: none;\\n' +\r\n    '  margin: 0;\\n' +\r\n    '}\\n' +\r\n    '\\n' +\r\n    'input[type=\"number\"] {\\n' +\r\n    '  -moz-appearance: textfield;\\n' +\r\n    '}\\n' +\r\n    '.field-with-errors {\\n' +\r\n    '  display: contents;\\n' +\r\n    '}\\n',\r\n  line: 9,\r\n  column: 5,\r\n  endLine: 9,\r\n  endColumn: 51,\r\n  input: {\r\n    column: 5,\r\n    endColumn: 51,\r\n    endLine: 9,\r\n    line: 9,\r\n    source: '@import \"choices.css\";\\n' +\r\n      '\\n' +\r\n      '@tailwind base;\\n' +\r\n      '@tailwind components;\\n' +\r\n      '@tailwind utilities;\\n' +\r\n      '\\n' +\r\n      '@layer components {\\n' +\r\n      '  .page-header {\\n' +\r\n      '    @apply text-4xl font-bold mb-4 text-center qq; \\n' +\r\n      '  }\\n' +\r\n      '  .card-standard {\\n' +\r\n      '    @apply bg-white shadow-xl dark:bg-gray-800;\\n' +\r\n      '  };\\n' +\r\n      '  .card-central {\\n' +\r\n      '    @apply mx-auto max-w-lg w-full;\\n' +\r\n      '  }\\n' +\r\n      '  .text-fade {\\n' +\r\n      '    @apply text-base-300;\\n' +\r\n      '  }\\n' +\r\n      '  .admin-filters-grid {\\n' +\r\n      '    /* @apply columns-1 sm:columns-2 lg:columns-3 2xl:columns-4 w-full break-inside-avoid */\\n' +\r\n      '    /* @apply grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 2xl:grid-cols-4 w-full */\\n' +\r\n      '  }\\n' +\r\n      '  .h1 {\\n' +\r\n      '    @apply text-4xl\\n' +\r\n      '  }\\n' +\r\n      '  .h2 {\\n' +\r\n      '    @apply text-3xl\\n' +\r\n      '  }\\n' +\r\n      '  .h3 {\\n' +\r\n      '    @apply text-2xl\\n' +\r\n      '  }\\n' +\r\n      '  .h4 {\\n' +\r\n      '    @apply text-xl\\n' +\r\n      '  }\\n' +\r\n      '  .h5 {\\n' +\r\n      '    @apply text-lg\\n' +\r\n      '  }\\n' +\r\n      '}\\n' +\r\n      '\\n' +\r\n      'input[type=\"number\"]::-webkit-outer-spin-button, input[type=\"number\"]::-webkit-inner-spin-button {\\n' +\r\n      '  -webkit-appearance: none;\\n' +\r\n      '  margin: 0;\\n' +\r\n      '}\\n' +\r\n      '\\n' +\r\n      'input[type=\"number\"] {\\n' +\r\n      '  -moz-appearance: textfield;\\n' +\r\n      '}\\n' +\r\n      '.field-with-errors {\\n' +\r\n      '  display: contents;\\n' +\r\n      '}\\n',\r\n    url: 'file:///Users/bogdan/makabu/brad/seven-figures/app/assets/stylesheets/application.tailwind.css',\r\n    file: '/Users/bogdan/makabu/brad/seven-figures/app/assets/stylesheets/application.tailwind.css'\r\n  },\r\n  plugin: 'tailwindcss'\r\n}\r\n```\r\n</details>","Url":"https://github.com/tailwindlabs/tailwindcss/pull/14605","RelatedDescription":"Open PR \"Avoid printing the entire file source code on error when watching\" (#14605)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-10-12T03:30:26.2132901Z","RunDurationInMilliseconds":622}