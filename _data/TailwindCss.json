{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"1691640120","IsPullRequest":false,"CreatedAt":"2023-05-02T01:18:31","Actor":"enesdikmen","Number":"11137","RawContent":null,"Title":"create-react-app tutorial won't work","State":"closed","Body":"I am following the exact steps provided in the tutorial but I couldn't get to work any of the classes to apply the styles.\r\n\r\nThe url is: https://tailwindcss.com/docs/guides/create-react-app\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11137","RelatedDescription":"Closed issue \"create-react-app tutorial won't work\" (#11137)"},{"Id":"1690450477","IsPullRequest":false,"CreatedAt":"2023-05-01T13:01:00","Actor":"epoberezkin","Number":"11135","RawContent":null,"Title":"Error in v3.3.2 on Linux (works in v3.3.1 and on MacOS in v3.3.2)","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.3.2\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nN/A\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv16.14.0\r\n\r\n**What browser are you using?**\r\n\r\nN/A\r\n\r\n**What operating system are you using?**\r\n\r\nLinux\r\n\r\n**Describe your issue**\r\n\r\n```\r\nnpx tailwindcss -i tailwind.css -o _site/css/tailwind.css\r\n```\r\n\r\nIt works on MacOS in 3.3.2, and it works on linux in 3.3.1, but terminates with an error on linux in 3.3.2 and logs this:\r\n\r\n```\r\nUnexpected token '.'\r\n```\r\n\r\ntailwind.css:\r\n\r\n```\r\n@tailwind base;\r\n@tailwind components;\r\n@tailwind utilities;\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11135","RelatedDescription":"Closed issue \"Error in v3.3.2 on Linux (works in v3.3.1 and on MacOS in v3.3.2)\" (#11135)"},{"Id":"1689980153","IsPullRequest":false,"CreatedAt":"2023-04-30T17:28:29","Actor":"haijie-x","Number":"11134","RawContent":null,"Title":"The param `addBase` api of plugin functions does not work for `class css style`","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n^3.3.2\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\"vite\": \"^4.3.2\"\r\n\r\n**What version of Node.js are you using?**\r\nv16.15.0\r\n\r\n**What browser are you using?**\r\nChrome version: 112.0.5615.137\r\nFor example: Chrome, Safari, or N/A\r\n\r\n**What operating system are you using?**\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nA Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\r\n\r\nA reproduction is **required** when filing an issue ‚Äî any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.\r\n\r\nThe param `addBase` api of plugin functions does not work with `html.dark` but work with `html#dark`\r\n<img width=\"806\" alt=\"image\" src=\"https://user-images.githubusercontent.com/98948357/235363897-09be60d0-a085-4cff-9344-ce6cef3bfa15.png\">\r\n<img width=\"804\" alt=\"image\" src=\"https://user-images.githubusercontent.com/98948357/235363937-07b34703-6aa1-4bd5-910b-0de0d14333e2.png\">\r\nthe code is like: \r\n```js \r\nplugins: [\r\n    plugin(function ({ addBase }) {\r\n      addBase({\r\n        'html.dark': {\r\n          background: 'black'\r\n        }\r\n      })\r\n    })\r\n  ] \r\n```\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11134","RelatedDescription":"Closed issue \"The param `addBase` api of plugin functions does not work for `class css style`\" (#11134)"},{"Id":"1689654817","IsPullRequest":false,"CreatedAt":"2023-04-29T19:33:36","Actor":"A7med3bdulBaset","Number":"11128","RawContent":null,"Title":"Add :not() the negation pseudo-class.","State":"closed","Body":"### Discussed in https://github.com/tailwindlabs/tailwindcss/discussions/10172\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **A7med3bdulBaset** December 24, 2022</sup>\r\n## Firstly, what is `not()`\r\nAccording to mdn:\r\n> The :not() [CSS](https://developer.mozilla.org/en-US/docs/Web/CSS) [pseudo-class](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes) represents elements that do not match a list of selectors. Since it prevents specific items from being selected, it is known as the negation pseudo-class.\r\n\r\n## Some of use cases\r\nI use it alot. But The most important use case i use it in form validation. like this:\r\n```<input <!-- ... --> class=\"[&:not(:placeholder-shown):invalid]:ring-pink-400\" />```. \r\nWhat does that mean? It blocks the input validition until input has a value.\r\n\r\nI walk around it by the example above but if `tailwindcss` has class for it `not:placeholder-shown:isvalid` will be well.</div>","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11128","RelatedDescription":"Closed issue \"Add :not() the negation pseudo-class.\" (#11128)"},{"Id":"1689221516","IsPullRequest":false,"CreatedAt":"2023-04-29T02:35:32","Actor":"ARiyou2000","Number":"11123","RawContent":null,"Title":"Next.JS/React.JS - Style not apply if using variable as class name outside of component file","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n\"^3.3.2\"\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nnext: \"13.3.0\", react: \"18.2.0\", postcss: \"8.4.21\"\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv18.16.0\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nUbuntu 20.4\r\n\r\n**Reproduction URL**\r\n\r\nIt is not reproducible with Tailwind Playgroung, but here is a temp link to get a gist of it:\r\n[GitHub](https://github.com/ARiyou2000/tailwind-styleWithGlobalClass-issue)\r\n\r\n**Describe your issue**\r\n\r\nAs the doc suggests I have created class variables for similar styles for my components.\r\n\r\n> export const blurredCard = \"rounded-[20px] backdrop-blur-[10px] bg-[#C2C2C266]\";\r\n\r\nBut when importing it to use it with components, even though the class will apply (checked in Chroom devTool [F12]), styles will not apply.\r\nMore accurately only styles that have been mentioned in other components as inline class names will apply.\r\n\r\nMy guess is that the class name will apply as a string, but the relevant style will not be delivered in the bundle.\r\n\r\nAs far as I know, Tailwind and Webpack will try to keep bundle size as small as possible by omitting unused styles (styles that their respective class name has not mentioned)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11123","RelatedDescription":"Closed issue \"Next.JS/React.JS - Style not apply if using variable as class name outside of component file\" (#11123)"},{"Id":"1688931514","IsPullRequest":true,"CreatedAt":"2023-04-28T17:54:13","Actor":"PixelJanitor","Number":"11122","RawContent":null,"Title":"Sort classes width then height","State":"open","Body":"Dimensions are pretty much universally documented as `{width} x {height}` but due to the current ordering here the prettier plugin sorts these classes as `{height} x {width}`.\r\n\r\nThis PR swaps those orderings to align with the universal size descriptions üìè","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11122","RelatedDescription":"Open PR \"Sort classes width then height\" (#11122)"},{"Id":"1688859559","IsPullRequest":true,"CreatedAt":"2023-04-28T16:57:14","Actor":"depfu[bot]","Number":"11121","RawContent":null,"Title":"Upgrade webpack-cli: 4.10.0 ‚Üí 5.0.2 (major)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this upgrade. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ‚ú≥Ô∏è webpack-cli (4.10.0 ‚Üí 5.0.2) ¬∑ [Repo](https://github.com/webpack/webpack-cli) ¬∑ [Changelog](https://github.com/webpack/webpack-cli/blob/master/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n\n<h4>5.0.2 (from changelog)</h4>\n<blockquote><h3 dir=\"auto\">\n<a href=\"#bug-fixes\"></a>Bug Fixes</h3>\n<ul dir=\"auto\">\n<li>error message for missing default export in configuration (<a href=\"https://bounce.depfu.com/github.com/webpack/webpack-cli/issues/3685\">#3685</a>) (<a href=\"https://bounce.depfu.com/github.com/webpack/webpack-cli/commit/e0a4a0991cdfccdaf18e7eb479f87bc2ee4e2e5f\">e0a4a09</a>)</li>\n<li>\n<strong>perf:</strong> reduced startup time (<a href=\"https://bounce.depfu.com/github.com/webpack/webpack-cli/commit/3b79059fe2ee16f4b4ad1f1ed3dfeb680d624128\">3b79059</a>)</li>\n</ul></blockquote>\n\n<h4>5.0.1 (from changelog)</h4>\n<blockquote><h3 dir=\"auto\">\n<a href=\"#bug-fixes\"></a>Bug Fixes</h3>\n<ul dir=\"auto\">\n<li>make <code class=\"notranslate\">define-process-env-node-env</code> alias <code class=\"notranslate\">node-env</code> (<a href=\"https://bounce.depfu.com/github.com/webpack/webpack-cli/issues/3514\">#3514</a>) (<a href=\"https://bounce.depfu.com/github.com/webpack/webpack-cli/commit/346a518dd7423a726810ef1012031f92d318c9c5\">346a518</a>)</li>\n</ul></blockquote>\n\n<h4>5.0.0 (from changelog)</h4>\n<blockquote><h3 dir=\"auto\">\n<a href=\"#bug-fixes\"></a>Bug Fixes</h3>\n<ul dir=\"auto\">\n<li>improve description of the <code class=\"notranslate\">--disable-interpret</code> option (<a href=\"https://bounce.depfu.com/github.com/webpack/webpack-cli/issues/3364\">#3364</a>) (<a href=\"https://bounce.depfu.com/github.com/webpack/webpack-cli/commit/bdb7e20a3fc5a676bf5ba9912c091a2c9b3a1cfd\">bdb7e20</a>)</li>\n<li>remove the redundant <code class=\"notranslate\">utils</code> export (<a href=\"https://bounce.depfu.com/github.com/webpack/webpack-cli/issues/3343\">#3343</a>) (<a href=\"https://bounce.depfu.com/github.com/webpack/webpack-cli/commit/a9ce5d077f90492558e2d5c14841b3b5b85f1186\">a9ce5d0</a>)</li>\n<li>respect <code class=\"notranslate\">NODE_PATH</code> env variable (<a href=\"https://bounce.depfu.com/github.com/webpack/webpack-cli/issues/3411\">#3411</a>) (<a href=\"https://bounce.depfu.com/github.com/webpack/webpack-cli/commit/83d1f58fb52d9dcfa3499efb342dfc47d0cca73a\">83d1f58</a>)</li>\n<li>show all CLI specific flags in the minimum help output (<a href=\"https://bounce.depfu.com/github.com/webpack/webpack-cli/issues/3354\">#3354</a>) (<a href=\"https://bounce.depfu.com/github.com/webpack/webpack-cli/commit/35843e87c61fd27be92afce11bd66ebf4f9519ae\">35843e8</a>)</li>\n</ul>\n<h3 dir=\"auto\">\n<a href=\"#features\"></a>Features</h3>\n<ul dir=\"auto\">\n<li>failOnWarnings option (<a href=\"https://bounce.depfu.com/github.com/webpack/webpack-cli/issues/3317\">#3317</a>) (<a href=\"https://bounce.depfu.com/github.com/webpack/webpack-cli/commit/c48c848c6c84eb73fbd829dc41bee301b0b7e2de\">c48c848</a>)</li>\n<li>update commander to v9 (<a href=\"https://bounce.depfu.com/github.com/webpack/webpack-cli/issues/3460\">#3460</a>) (<a href=\"https://bounce.depfu.com/github.com/webpack/webpack-cli/commit/6621c023ab59cc510a5f76e262f2c81676d1920b\">6621c02</a>)</li>\n<li>added the <code class=\"notranslate\">--define-process-env-node-env</code> option</li>\n<li>update <code class=\"notranslate\">interpret</code> to v3 and <code class=\"notranslate\">rechoir</code> to v0.8</li>\n<li>add an option for preventing interpret (<a href=\"https://bounce.depfu.com/github.com/webpack/webpack-cli/issues/3329\">#3329</a>) (<a href=\"https://bounce.depfu.com/github.com/webpack/webpack-cli/commit/c7373832b96af499ad0813e07d114bdc927afdf4\">c737383</a>)</li>\n</ul>\n<h3 dir=\"auto\">\n<a href=\"#breaking-changes\"></a>BREAKING CHANGES</h3>\n<ul dir=\"auto\">\n<li>the minimum supported webpack version is v5.0.0 (<a href=\"https://bounce.depfu.com/github.com/webpack/webpack-cli/pull/3342\">#3342</a>) (<a href=\"https://bounce.depfu.com/github.com/webpack/webpack-cli/commit/b1af0dc7ebcdf746bc37889e4c1f978c65acc4a5\">b1af0dc</a>), closes <a href=\"https://bounce.depfu.com/github.com/webpack/webpack-cli/issues/3342\">#3342</a>\n</li>\n<li>webpack-cli no longer supports webpack v4, the minimum supported version is webpack v5.0.0</li>\n<li>webpack-cli no longer supports webpack-dev-server v3, the minimum supported version is webpack-dev-server v4.0.0</li>\n<li>remove the <code class=\"notranslate\">migrate</code> command (<a href=\"https://bounce.depfu.com/github.com/webpack/webpack-cli/pull/3291\">#3291</a>) (<a href=\"https://bounce.depfu.com/github.com/webpack/webpack-cli/commit/56b43e4baf76c166ade3b282b40ad9d007cc52b6\">56b43e4</a>), closes <a href=\"https://bounce.depfu.com/github.com/webpack/webpack-cli/issues/3291\">#3291</a>\n</li>\n<li>remove the <code class=\"notranslate\">--prefetch</code> option in favor the <code class=\"notranslate\">PrefetchPlugin</code> plugin</li>\n<li>remove the <code class=\"notranslate\">--node-env</code> option in favor <code class=\"notranslate\">--define-process-env-node-env</code>\n</li>\n<li>remove the <code class=\"notranslate\">--hot</code> option in favor of directly using the <code class=\"notranslate\">HotModuleReplacement</code> plugin (only for <code class=\"notranslate\">build</code> command, for <code class=\"notranslate\">serve</code> it will work)</li>\n<li>the behavior logic of the <code class=\"notranslate\">--entry</code> option has been changed - previously it replaced your entries, now the option adds a specified entry, if you want to return the previous behavior please use <code class=\"notranslate\"> webpack --entry-reset --entry './src/my-entry.js'</code>\n</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/webpack-cli/feedback\">Please let us know.</a></em></p>\n</details>\n\n\n\n\n\n#### ‚ú≥Ô∏è resolve (1.22.2 ‚Üí 1.22.3) ¬∑ [Repo](https://github.com/browserify/resolve)\n\n\n\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/browserify/resolve/compare/c2f9ce254f0157b5e2e53e9aee0403c510909f7d...d3332a20d1c06e4056fdb976c2bbbaf9a5dba7e2\">See the full diff on Github</a>. The new version differs by 3 commits:</p>\n<ul>\n<li><a href=\"https://github.com/browserify/resolve/commit/d3332a20d1c06e4056fdb976c2bbbaf9a5dba7e2\"><code>v1.22.3</code></a></li>\n<li><a href=\"https://github.com/browserify/resolve/commit/5e3fbba65b6c30254dfe815e5007cde2ac4d3cd2\"><code>[Deps] update `is-core-module`</code></a></li>\n<li><a href=\"https://github.com/browserify/resolve/commit/122bb64be2f4fcf927fd264d4b2c9ea622611c58\"><code>[Refactor] deprecated `lib/core.js` now uses data from `is-core-module` also</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@‚Äãdepfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@‚Äãdepfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@‚Äãdepfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@‚Äãdepfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@‚Äãdepfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@‚Äãdepfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@‚Äãdepfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@‚Äãdepfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11121","RelatedDescription":"Closed or merged PR \"Upgrade webpack-cli: 4.10.0 ‚Üí 5.0.2 (major)\" (#11121)"},{"Id":"1680079749","IsPullRequest":true,"CreatedAt":"2023-04-28T16:51:53","Actor":"eranhirsch","Number":"11069","RawContent":null,"Title":"Reset dialog element styles","State":"closed","Body":"The [HTML dialog element](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog) has a lot of default styling coming from the user agent ([chromium](https://chromium.googlesource.com/chromium/blink/+/master/Source/core/css/html.css#1084), [mozilla](https://searchfox.org/mozilla-central/source/layout/style/res/html.css#790-805), *looks like safari don't style dialogs at all*).\r\n\r\nI noticed this when trying to debug why I was getting a 16px padding regardless of what my styling was. Except padding it looks like there are also styles for colors and a border. This feels like a bug as I'm used to tailwind's preflight providing a pretty good \"blank slate\" of expected styling. Some of the other styles (like the positioning) seem reasonable as they are pretty close to what I came up defining by myself for the dialog.\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11069","RelatedDescription":"Closed or merged PR \"Reset dialog element styles\" (#11069)"},{"Id":"1680082642","IsPullRequest":false,"CreatedAt":"2023-04-28T02:39:40","Actor":"eranhirsch","Number":"11070","RawContent":null,"Title":"Dialog element styles are not reset by preflight","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nlatest (3.3.1)\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\ncreate-react-app (post-css)\r\n\r\n**What version of Node.js are you using?**\r\n\r\nn/a\r\n\r\n**What browser are you using?**\r\n\r\nChrome (Version 112.0.5615.138 (Official Build) (64-bit))\r\n\r\n**What operating system are you using?**\r\n\r\nWindows 11 (22H2)\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/H833bFMZwQ\r\n\r\n**Describe your issue**\r\n\r\nHTML Dialog elements are styled by the useragent, specifically a padding of 16px is added, a border of 1, and text and background colors are set. All of this feels like stuff missing from preflight. It actually took me some time debugging just to find out that the padding is coming from the useragent, as I was not expecting it.\r\n\r\nSome links:\r\n* https://developer.mozilla.org/en-US/docs/Web/HTML/Element/dialog\r\n* https://searchfox.org/mozilla-central/source/layout/style/res/html.css#790-805\r\n* https://chromium.googlesource.com/chromium/blink/+/master/Source/core/css/html.css#1084","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11070","RelatedDescription":"Closed issue \"Dialog element styles are not reset by preflight\" (#11070)"},{"Id":"1683896583","IsPullRequest":false,"CreatedAt":"2023-04-28T02:20:40","Actor":"phatify","Number":"11097","RawContent":null,"Title":"Tailwind Config file: modules alias import errors","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nFor example: v3.3.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nFor example: postcss-cli 8.4.18, Next.js 13.3.1\r\n\r\n**What version of Node.js are you using?**\r\n\r\nFor example: v16.16.0\r\n\r\n**What browser are you using?**\r\n\r\nFor example: Chrome\r\n\r\n**What operating system are you using?**\r\n\r\nFor example: Windows\r\n\r\n**Describe your issue**\r\n\r\nI am getting import errors on modules when using alias name in tailwind.config.js. This causing `Error: Cannot find module '@/my-plugin'`\r\n\r\ntailwind.config.js:\r\n\r\n```\r\nimport { myPlugin } from '@/my-plugin';\r\n\r\nconst twConfig = {\r\n    darkMode: 'class',\r\n    content: [\r\n        './pages/**/*.{js,ts,jsx,tsx}',\r\n        './components/**/*.{js,ts,jsx,tsx}',\r\n    ],\r\n    theme: {\r\n    },\r\n    corePlugins: {\r\n        preflight: true,\r\n    },\r\n    plugins: [\r\n        myPlugin(),\r\n    ],\r\n};\r\n\r\nexport default twConfig;\r\n```\r\n\r\njsconfig.json:\r\n\r\n```\r\n{\r\n    \"compilerOptions\": {\r\n        \"module\": \"esnext\",\r\n        \"target\": \"es5\",\r\n        \"lib\": [\"dom\", \"dom.iterable\", \"esnext\"],\r\n        \"allowJs\": true,\r\n        \"skipLibCheck\": true,\r\n        \"strict\": true,\r\n        \"forceConsistentCasingInFileNames\": true,\r\n        \"noEmit\": true,\r\n        \"esModuleInterop\": true,\r\n        \"moduleResolution\": \"node\",\r\n        \"resolveJsonModule\": true,\r\n        \"isolatedModules\": true,\r\n        \"jsx\": \"preserve\",\r\n        \"baseUrl\": \".\",\r\n        \"paths\": {\r\n            \"@/*\": [\"./*\"],       \r\n            \"@/my-plugin/*\": [\"my-plugin/*\"],   \r\n        }\r\n    },\r\n    \"include\": [\"**/*.js\", \"**/*.jsx\"],\r\n    \"exclude\": [\"node_modules\"]\r\n}\r\n```\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11097","RelatedDescription":"Closed issue \"Tailwind Config file: modules alias import errors\" (#11097)"},{"Id":"1687572301","IsPullRequest":true,"CreatedAt":"2023-04-27T21:34:09","Actor":"RobinMalfait","Number":"11116","RawContent":null,"Title":"[oxide] Expose experimental Rust parser setup","State":"closed","Body":"This PR introduces a new internal API that is only used for testing and benchmarking purposes. This\nis not a public API and will be removed in the future.\n\n---\n\nUsage example:\n\n```js\nimport { parseCandidateStrings, IO, Parsing } from '@tailwindcss/oxide'\n\nparseCandidateStrings(input, IO.Sequential | Parsing.Sequential)\nparseCandidateStrings(input, IO.Sequential | Parsing.Parallel)\nparseCandidateStrings(input, IO.Parallel | Parsing.Sequential)\nparseCandidateStrings(input, IO.Parallel | Parsing.Parallel)\n```\n\n<!--\n\nüëã Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11116","RelatedDescription":"Closed or merged PR \"[oxide] Expose experimental Rust parser setup\" (#11116)"},{"Id":"1686501293","IsPullRequest":false,"CreatedAt":"2023-04-27T16:58:56","Actor":"ChiahongHong","Number":"11107","RawContent":null,"Title":"Unexpected behavior of pseudo-elements such as marker","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nFor example: v3.3.2\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nvite 4.3.3, vue 3.2.47, postcss 8.4.23\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv20.0.0\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nAs v3.3.2 is currently unavailable in Tailwind Play, this is the Insiders version.\r\n[https://play.tailwindcss.com/3SbW3c1AhG](https://play.tailwindcss.com/3SbW3c1AhG)\r\n\r\n<img width=\"50\" src=\"https://user-images.githubusercontent.com/36815907/234824052-0245f5dc-5045-4a89-b241-a21edf9218e5.png\">\r\n\r\nIn v3.3.1, it works as expected.\r\n[https://play.tailwindcss.com/1nJxOORQv7](https://play.tailwindcss.com/1nJxOORQv7)\r\n\r\n<img width=\"50\" src=\"https://user-images.githubusercontent.com/36815907/234824207-9d53f56f-edb1-4898-816d-162b81f4fc1a.png\">\r\n\r\n**Describe your issue**\r\n\r\nIn v3.3.2, some behaviors of pseudo-elements are not as expected, for example, the marker color cannot be changed correctly, while this works correctly in v3.3.1.\r\n\r\n```html\r\n<div class=\"[&>li]:marker:text-red-500\">\r\n  <li>A</li>\r\n  <li>B</li>\r\n  <li>C</li>\r\n</div>\r\n\r\n<div class=\"prose prose-li:marker:text-purple-500\">\r\n  <li>D</li>\r\n  <li>E</li>\r\n  <li>F</li>\r\n</div>\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11107","RelatedDescription":"Closed issue \"Unexpected behavior of pseudo-elements such as marker\" (#11107)"},{"Id":"1686870956","IsPullRequest":true,"CreatedAt":"2023-04-27T16:21:28","Actor":"thecrypticace","Number":"11111","RawContent":null,"Title":"Fix issues with some pseudo-elements","State":"closed","Body":"We‚Äôve included pseudo elements for `::backdrop`, `::marker`, `::placeholder`, and `::selection` and they were all ‚Äújumpable‚Äù before we made changes in v3.3.2. Ideally they wouldn‚Äôt be because if they ever eventually have any interactivity that could become a problem. However, we need to preserve backwards compatibility here so we'll mark them as such.\r\n\r\nFixes #11107","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11111","RelatedDescription":"Closed or merged PR \"Fix issues with some pseudo-elements\" (#11111)"},{"Id":"1687019212","IsPullRequest":false,"CreatedAt":"2023-04-27T16:13:42","Actor":"Biki-das","Number":"11113","RawContent":null,"Title":"bug: Font not working","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n3.3.1\r\n\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nFor example: vite postcss 3.3.1\r\n\r\n**What version of Node.js are you using?**\r\n\r\nFor example: v12.0.0\r\n\r\n**What browser are you using?**\r\n\r\nFor example: Chrome, Safari, or N/A\r\n\r\n**What operating system are you using?**\r\n\r\nFor example: macOS, Windows\r\n\r\n**Reproduction URL**\r\n\r\nA Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\r\n\r\nA reproduction is **required** when filing an issue ‚Äî any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.\r\nA Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\r\n\r\nA reproduction is **required** when filing an issue ‚Äî any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.\r\n\r\n**Describe your issue**\r\n\r\nI am using a set of font families which one of them gets applied, for some reason when i do something like font-${xxxxx} , this does not apply the font but just doing this like font-${\"xxxx\"} works?!! also on restarting the server the font families do not load, they only load after i write font-xxxx","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11113","RelatedDescription":"Closed issue \"bug: Font not working\" (#11113)"},{"Id":"1686651430","IsPullRequest":false,"CreatedAt":"2023-04-27T11:25:31","Actor":"patrikholcak","Number":"11109","RawContent":null,"Title":"`hoverOnlyWhenSupported` doesn‚Äôt work with iPad trackpad","State":"open","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv3.2.1. I checked the code and there have been no changes (master)\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nTailwind play\r\n\r\n**What version of Node.js are you using?**\r\n\r\n‚Äî\r\n\r\n**What browser are you using?**\r\n\r\nSafari 16.4\r\n\r\n**What operating system are you using?**\r\n\r\niOS 16.4\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/p2MO5uc3gD\r\n\r\n**Describe your issue**\r\n\r\nhttps://github.com/tailwindlabs/tailwindcss/pull/8394 introduced a new future flag `hoverOnlyWhenSupported`, which uses [hover](https://developer.mozilla.org/en-US/docs/Web/CSS/@media/hover) and [pointer](https://developer.mozilla.org/en-US/docs/Web/CSS/@media/pointer) media to get rid of sticky hovers on touch devices. Both `pointer` and `hover` only test for the **primary** input. This means a touch device with trackpad connected (eg. iPad with Magic Keyboard) doesn‚Äôt show any hovers when using the trackpad when this flag is enabled.\r\n\r\nUsing [any-hover](https://developer.mozilla.org/en-US/docs/Web/CSS/@media/any-hover) and [any-pointer](https://developer.mozilla.org/en-US/docs/Web/CSS/@media/any-pointer) should solve that issue, however simply changing the value might not be the best option, as some people could want the current behaviour. There also might be some edge cases I‚Äôm not seeing right now ‚Äî likely some hybrid device which does some weird stuff in tablet vs laptop mode, etc. which could result in sticky hovers even with the flag enabled‚Ä¶\r\n\r\nA viable option might be to have control over which property is used, eg.\r\n\r\n```ts\r\nfuture: {\r\n  hoverOnlyWhenSupported: \"primary\" | \"any\" | false,\r\n}\r\n```\r\n\r\nAnyway, this is reproducible in XCode Simulator (click the \"Capture pointer\" button in top right) using the play link above. Here‚Äôs also a great page which shows the difference between the selectors and shows you what media your device currently matches:\r\nhttps://patrickhlauke.github.io/touch/pointer-hover-any-pointer-any-hover/\r\n\r\n---\r\n\r\nI tried to solve this locally by first disabling the `hover` core plugin and wasn‚Äôt able to:\r\n\r\n```ts\r\ncorePlugins: {\r\n  hover: false,\r\n},\r\n```\r\n\r\nLooks like it‚Äôs not even specified in `CorePluginList` type. But then I tried simply adding a new custom `hover` variant and it allows me to override the core plugin, css output looks üëå too ‚Äî https://play.tailwindcss.com/TT1IC2V7xN\r\n\r\nSeems like this could be a viable short term solution for me, but it just doesn‚Äôt feel right‚Ä¶\r\n\r\n```ts\r\nplugins: [\r\n  function ({ addVariant }) {\r\n    addVariant('hover', '@media (any-hover: hover) and (any-pointer: fine) { &:hover }')\r\n  }\r\n]\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11109","RelatedDescription":"Open issue \"`hoverOnlyWhenSupported` doesn‚Äôt work with iPad trackpad\" (#11109)"},{"Id":"1685839392","IsPullRequest":true,"CreatedAt":"2023-04-27T09:41:24","Actor":"depfu[bot]","Number":"11104","RawContent":null,"Title":"Update lightningcss: 1.18.0 ‚Üí 1.20.0 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ‚ú≥Ô∏è resolve (1.22.2 ‚Üí 1.22.3) ¬∑ [Repo](https://github.com/browserify/resolve)\n\n\n\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/browserify/resolve/compare/c2f9ce254f0157b5e2e53e9aee0403c510909f7d...d3332a20d1c06e4056fdb976c2bbbaf9a5dba7e2\">See the full diff on Github</a>. The new version differs by 3 commits:</p>\n<ul>\n<li><a href=\"https://github.com/browserify/resolve/commit/d3332a20d1c06e4056fdb976c2bbbaf9a5dba7e2\"><code>v1.22.3</code></a></li>\n<li><a href=\"https://github.com/browserify/resolve/commit/5e3fbba65b6c30254dfe815e5007cde2ac4d3cd2\"><code>[Deps] update `is-core-module`</code></a></li>\n<li><a href=\"https://github.com/browserify/resolve/commit/122bb64be2f4fcf927fd264d4b2c9ea622611c58\"><code>[Refactor] deprecated `lib/core.js` now uses data from `is-core-module` also</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@‚Äãdepfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@‚Äãdepfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@‚Äãdepfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@‚Äãdepfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@‚Äãdepfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@‚Äãdepfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@‚Äãdepfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@‚Äãdepfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11104","RelatedDescription":"Closed or merged PR \"Update lightningcss: 1.18.0 ‚Üí 1.20.0 (minor)\" (#11104)"},{"Id":"1685057537","IsPullRequest":true,"CreatedAt":"2023-04-26T13:39:21","Actor":"LorenzoBloedow","Number":"11102","RawContent":null,"Title":"Log error for default config file not found.","State":"open","Body":"So here's the story:\r\nAfter spending probably about 2 hours stuck on a bug where Tailwind would only log:\r\n```\r\nwarn - No utility classes were detected in your source files. If this is unexpected, double-check the `content` option in your Tailwind CSS configuration.\r\nwarn - https://tailwindcss.com/docs/content-configuration\r\n```\r\nI finally realized that it was because I was using `npx tailwindcss` in an npm script (thus executing from package.json) while my tailwind config was actually nested in a lower directory (a test server).\r\nWhen I went to the code that resolved the default path, I noticed that it wasn't logging anything, so I thought it'd be really helpful to log what happened so that it, hopefully, will save someone else some time in the future!","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11102","RelatedDescription":"Open PR \"Log error for default config file not found.\" (#11102)"},{"Id":"1684591310","IsPullRequest":false,"CreatedAt":"2023-04-26T09:04:23","Actor":"hujjumiyanji27","Number":"11099","RawContent":null,"Title":"Tailwind CSS IntelliSense","State":"closed","Body":"In my vs code I install the Tailwind CSS IntelliSense for autocomplete class for css but unfortunately its not working. Can you please help me how can i fix this error.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11099","RelatedDescription":"Closed issue \"Tailwind CSS IntelliSense\" (#11099)"},{"Id":"1683977302","IsPullRequest":false,"CreatedAt":"2023-04-26T00:58:25","Actor":"voxxal","Number":"11098","RawContent":null,"Title":"Classes made using `@layer` does not apply classes with special characters","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n3.3.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\nvite 4.3.0\r\n\r\n**What version of Node.js are you using?**\r\n19.8.1\r\n\r\n**What browser are you using?**\r\nFirefox\r\n\r\n**What operating system are you using?**\r\nLinux\r\n\r\n**Reproduction URL**\r\nhttps://play.tailwindcss.com/bMRcaHW3Cg\r\n\r\n**Describe your issue**\r\n\r\nWhen using `@layer`, and trying to create a class that uses something like `via-75%`, when using said class, `via-75%` will not be applied to the element. I expect `via-75%` to be applied to the element and have the gradient stop at 75%.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11098","RelatedDescription":"Closed issue \"Classes made using `@layer` does not apply classes with special characters\" (#11098)"},{"Id":"1681765188","IsPullRequest":false,"CreatedAt":"2023-04-25T22:42:39","Actor":"dykatz","Number":"11081","RawContent":null,"Title":"TailwindCSS depends on an outdated version of postcss-load-config","State":"closed","Body":"TailwindCSS depends on `yaml` indirectly through `postcss-load-config`. [This CVE](https://huntr.dev/bounties/4b494e99-5a3e-40d9-8678-277f3060e96c/) was released earlier today, and was patched in `yaml@2.2.2`. It can be used by `postcss-load-config@4.0.1`, but tailwind depends on `postcss-load-config@^3.1.4`. This is causing our static analysis tools to yell at us.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11081","RelatedDescription":"Closed issue \"TailwindCSS depends on an outdated version of postcss-load-config\" (#11081)"},{"Id":"1682901991","IsPullRequest":true,"CreatedAt":"2023-04-25T20:28:20","Actor":"RobinMalfait","Number":"11089","RawContent":null,"Title":"Drop support for Node.js v12","State":"closed","Body":"This PR drops support for Node.js v12 and updates any dependencies that were locked to old versions to their latest maintained versions. This makes Node.js v14 a minimum requirement for Tailwind CSS.\r\n\r\nThe primary motivation for this change is to update our transitive dependency on `yaml` to resolve [CVE-2023-2251](https://huntr.dev/bounties/4b494e99-5a3e-40d9-8678-277f3060e96c/). While this CVE is not really relevant to a build-time project like Tailwind, it causes warnings for lots of people who check for these sorts of things in CI (by running `npm audit` for example) and creates a lot of headache.\r\n\r\nWe were originally going to wait until Tailwind CSS v4.0 to drop support for Node.js v12, but since it is end-of-life and hasn't been receiving security updates since 2022-04-30, we've decided we're comfortable making this change sooner even though it will require upgrading to a maintained version of Node.js for people that are still using v12.\r\n\r\nResolves #11081.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11089","RelatedDescription":"Closed or merged PR \"Drop support for Node.js v12\" (#11089)"},{"Id":"1680216758","IsPullRequest":false,"CreatedAt":"2023-04-25T15:22:25","Actor":"gustavotcabral","Number":"11072","RawContent":null,"Title":"transform variables don't work inside keyframes","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.3.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\npostcss/Svelte v3.58.0\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv18.14.0\r\n\r\n**What browser are you using?**\r\n\r\nBuggy on Chrome; the example works on Firefox.\r\n\r\n**What operating system are you using?**\r\n\r\nUbuntu 18.04\r\n\r\n**Reproduction URL**\r\n\r\nThe bug occurs when removing the `@property` declarations: https://play.tailwindcss.com/6r2AMqX4r9\r\n\r\n**Describe your issue**\r\n\r\nCSS Custom Properties are not animatable by default. I think we just need to declare all `--tw-*` variables using [`@property`](https://developer.mozilla.org/en-US/docs/Web/CSS/@property).","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11072","RelatedDescription":"Closed issue \"transform variables don't work inside keyframes\" (#11072)"},{"Id":"1682994770","IsPullRequest":false,"CreatedAt":"2023-04-25T11:39:07","Actor":"hellosanbao","Number":"11090","RawContent":null,"Title":"jit mode compilet error with font-size","State":"closed","Body":"I  set the `font-size` like it: `text-[30rpx]`.\r\nI expect get`font-size:30rpx`,but the result is :`color:30rpx`,\r\nIt must end width 'px',but i want set 'rpx'\r\nversion: 3.3.1","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11090","RelatedDescription":"Closed issue \"jit mode compilet error with font-size\" (#11090)"},{"Id":"1682891816","IsPullRequest":false,"CreatedAt":"2023-04-25T10:29:31","Actor":"jiri-thiemel-te","Number":"11088","RawContent":null,"Title":"Improve default reset of button styles for high contrast mode","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nFor example: v3.3.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nFor example: Next.js 13.3.1\r\n\r\n**What version of Node.js are you using?**\r\n\r\nFor example: v17.9.1\r\n\r\n**What browser are you using?**\r\n\r\nChrome, Firefox, Edge\r\n\r\n**What operating system are you using?**\r\n\r\nWindows\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/4DgqvH5JDl\r\n\r\n**Describe your issue**\r\n\r\nButtons that don't have a border defined won't be recognizable as a button in [high contrast mode](https://support.microsoft.com/en-us/windows/change-color-contrast-in-windows-fedc744c-90ac-69df-aed5-c8a90125e696). Each button should have a border, even though it would be a transparent one. In high contrast mode background colours are overridden and buttons without border are very hard to identify in many scenarios as they look just like a regular text. Any border is also overridden with a custom contrast colour even the transparent one, which solves the issue. The problem is that many developers know about this issue and won't set a transparent border or custom appearance for high contrast scheme. And even those that do about this issue don't want to do this every time. There definitely should be reasonable defaults.\r\n\r\n**Solution**\r\n\r\nChange the default button reset to include a transparent border.\r\n\r\nIf you consider this change problematic because of backwards compatibility, let's discuss alternative approach.\r\n\r\n**Related issues**\r\n\r\nhttps://github.com/tailwindlabs/tailwindcss/pull/2460","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11088","RelatedDescription":"Open issue \"Improve default reset of button styles for high contrast mode\" (#11088)"},{"Id":"1682687245","IsPullRequest":false,"CreatedAt":"2023-04-25T10:12:59","Actor":"AndyOGo","Number":"11084","RawContent":null,"Title":"Avoid using !important to override specificity.","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nAny version with the `!` important modifier\r\nhttps://tailwindcss.com/docs/configuration#important-modifier\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/3juwpssaqx\r\n\r\n**Describe your issue**\r\n\r\n> Avoid using `!important` to override specificity.\r\nhttps://developer.mozilla.org/en-US/docs/Web/CSS/important#best_practices\r\n\r\nA better way is to increase CSS specificity by repeating the selector.\r\n\r\n> **Note:** Repeated occurrences of the same simple selector are allowed and do increase specificity.\r\nhttps://www.w3.org/TR/selectors-3/#specificity\r\n\r\n---\r\n\r\nI published a plugin to do this:\r\n```js\r\nconst plugin = require('tailwindcss/plugin')\r\n\r\nmodule.exports = {\r\n  // ...\r\n  plugins: [\r\n    plugin(function({ addVariant }) {\r\n      addVariant('trump', '&&')\r\n    })\r\n  ]\r\n}\r\n```\r\n\r\nPlay with it here\r\nhttps://play.tailwindcss.com/v5ZpuKy2hH\r\n\r\n---\r\n\r\nRelated discussion:\r\nhttps://github.com/tailwindlabs/tailwindcss/discussions/10924","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11084","RelatedDescription":"Closed issue \"Avoid using !important to override specificity.\" (#11084)"},{"Id":"1682741175","IsPullRequest":true,"CreatedAt":"2023-04-25T09:02:05","Actor":"nathanaelytj","Number":"11087","RawContent":null,"Title":"Deps update CVE fix","State":"closed","Body":"Check Build","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11087","RelatedDescription":"Closed or merged PR \"Deps update CVE fix\" (#11087)"},{"Id":"1681102417","IsPullRequest":false,"CreatedAt":"2023-04-24T12:32:27","Actor":"TomGjeka","Number":"11080","RawContent":null,"Title":"Issue with spacing on the Y-axis and X-axis","State":"closed","Body":"As the title implies there is a logic issue when using space-xy-(number) with row-reverse or column-reverse.\r\n\r\nwe got two divs which we give spacing-x-2 and it works in row -> the second div has the margin applied.\r\n\r\nordering div with row-reverse -> first div has the spacing on the left and the second div is next to the first one without spacing.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11080","RelatedDescription":"Closed issue \"Issue with spacing on the Y-axis and X-axis\" (#11080)"},{"Id":"1680623732","IsPullRequest":true,"CreatedAt":"2023-04-24T08:25:45","Actor":"depfu[bot]","Number":"11075","RawContent":null,"Title":"Update sucrase: 3.31.0 ‚Üí 3.32.0 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ‚ú≥Ô∏è sucrase (3.31.0 ‚Üí 3.32.0) ¬∑ [Repo](https://github.com/alangpierce/sucrase) ¬∑ [Changelog](https://github.com/alangpierce/sucrase/blob/main/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n\n<h4>3.32.0 (from changelog)</h4>\n<blockquote><ul dir=\"auto\">\n<li>Improve source map quality by adding column information. This fixes several\nsource map use cases, such as Jest inline snapshots, source map composition,\nand some debugger features. (<a href=\"https://bounce.depfu.com/github.com/alangpierce/sucrase/pull/759\">#759</a>) (Emily Marigold Klassen)\n<ul dir=\"auto\">\n<li>Unfortunately, this change comes at some performance cost. Previously, the\nslowdown from enabling source maps was about 10%, and now it is about 30%.\nIn most cases, the more detailed source maps are probably still preferable,\nso for configuration simplicity, there is currently no option to switch\nback to source maps without column information. If you would like to still\nuse the faster but less accurate implementation, feel free to file an issue\nto request a new config option, or create the source map yourself in\nwrapper code by copying the\n<a href=\"https://bounce.depfu.com/github.com/alangpierce/sucrase/blob/9b20ea57aa95d0926fcb560f1500f984d598aa00/src/computeSourceMap.ts\">original simple implementation</a>.</li>\n</ul>\n</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/sucrase/feedback\">Please let us know.</a></em></p>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@‚Äãdepfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@‚Äãdepfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@‚Äãdepfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@‚Äãdepfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@‚Äãdepfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@‚Äãdepfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@‚Äãdepfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@‚Äãdepfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11075","RelatedDescription":"Closed or merged PR \"Update sucrase: 3.31.0 ‚Üí 3.32.0 (minor)\" (#11075)"},{"Id":"1680661854","IsPullRequest":false,"CreatedAt":"2023-04-24T08:24:31","Actor":"prophet1996","Number":"11076","RawContent":null,"Title":"tailwind config important true not working","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n3.3.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\nnode + Post css  to generate css\r\n\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv16.19.1 \r\n\r\n**What browser are you using?**\r\n\r\nN/A\r\n\r\n**What operating system are you using?**\r\n\r\n macOS m1\r\n\r\n**Reproduction URL**\r\nusing node js script should be easy to reproduce anywhere\r\n**Describe your issue**\r\ntailwind generation does not contain !important modified event if theconfig has it. It works when i put the !<utility-class>\r\nI feed this source as string to a node script\r\n```\r\n  export default {\r\n    class: \"flex bg-red-100\",\r\n    id: 'repository_panel',\r\n    view: {\r\n      className: '',\r\n      }\r\n     }\r\n``` \r\n```\r\n/** @type {import('tailwindcss').Config} */\r\nexport default {\r\n  content: [\r\n    \"./index.html\",\r\n    \"./src/**/*.{js,ts}\",\r\n  ],\r\n  content: [],\r\n  theme: {\r\n    extend: {},\r\n  },\r\n  plugins: [],\r\n  important: true,\r\n}\r\n\r\n```\r\nNode function that generates css for me\r\n```\r\n return (\r\n    await postcss([\r\n      tailwind({\r\n        content: [{ raw: contentRaw }],\r\n      }),\r\n    ]).process(\r\n      `@tailwind base;@tailwind components;@tailwind utilities;`,\r\n      {\r\n        from: undefined,\r\n      }\r\n    )\r\n  ).css;\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11076","RelatedDescription":"Closed issue \"tailwind config important true not working\" (#11076)"},{"Id":"1680553713","IsPullRequest":true,"CreatedAt":"2023-04-24T06:34:43","Actor":"AutoYa","Number":"11074","RawContent":null,"Title":"Fix custom theme, all color properties of boxShadow are reset to `var(--tw-shadow-color)`.","State":"open","Body":"I was configuring `boxShadow` in my `tailwind.config.js` file and found that all my color values were replaced with the `-tw-shadow-color` variable.\r\nI think this should be a bug.\r\n\r\n```\r\nconst tailwindcssConfig = {\r\n  theme: {\r\n    extend: {\r\n      boxShadow: {\r\n        'jz-black': 'inset 0 0 0 2px, 2px 2px 0 0 rgb(255,255,255), 4px 4px 0 0',\r\n      },\r\n    },\r\n  },\r\n};\r\n```\r\n> The current effect\r\n\r\n![image](https://user-images.githubusercontent.com/114130827/233915132-79f95c2a-bfd3-499d-9d04-3e2a5df3da0a.png)\r\n\r\n> The values are replaced with `-tw-shadow-color`\r\n\r\n![2023-04-24 14 24 34](https://user-images.githubusercontent.com/114130827/233915775-3a54409e-9a7b-4770-9997-8c739c9ba9d9.png)\r\n\r\n> The effect after the fix\r\n\r\n![image](https://user-images.githubusercontent.com/114130827/233917209-0b47ac1b-00ba-4215-9fb1-52647a75e18d.png)\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11074","RelatedDescription":"Open PR \"Fix custom theme, all color properties of boxShadow are reset to `var(--tw-shadow-color)`.\" (#11074)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-05-02T03:30:26.4995112Z","RunDurationInMilliseconds":609}