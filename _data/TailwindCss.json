{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"1334832909","IsPullRequest":false,"CreatedAt":"2022-08-10T15:51:38","Actor":"willdean","Number":"9072","RawContent":null,"Title":"Transient read failure may cause permanent failure to watch file","State":"open","Body":"V3.1.18\r\nTailwind CLI, Visual Studio 2022 as editor.\r\nNode v14.18.1\r\nChrome\r\nWindow 10 (No Docker or WSL)\r\n\r\nThis issue is a very close relative of #7759, but I think it might be quite specialised so I don't want to pollute that one.\r\n\r\nI have a rather odd web project, which has a single HTML file.  So the content section of tailwind.config.js looks like this:\r\n\r\n```\r\n  content: [\r\n      \"./wwwroot/index.html\"\r\n  ],\r\n```\r\n\r\nI run a tailwind CLI watcher with a command like this:\r\n```\r\nnpx tailwindcss --output wwwroot/css/tailwind.css --watch -i css/twbase.css\r\n```\r\n\r\nI am suffering from the problem described in #7759 where the watcher stops watching after a while - anywhere between almost immediately and after lots and lots of successful rebuilds.\r\n\r\nBy using the \"Process Monitor\" utility to observe the filesystem activity on the index.html file, I have observed that when Visual Studio (devenv.exe) is saving index.html, it goes through a rename/replace process which means there is a window of time in which the index.html file does not actually exist.   It appears that node.exe (i.e. Tailwind) sometimes tries to read the file during this window and finds it to be missing.    \r\n\r\nThis apparently causes Tailwind to stop watching that file.\r\n\r\n![image](https://user-images.githubusercontent.com/1306085/183951128-98b84dcd-166f-4d9d-b97f-6f98b9275266.png)\r\n\r\nThe blue selected line in the image is Node getting a file-not-found failure doing a CreateFile (it's actually an open-to-read) on index.html in the middle of devenv doing a rename dance.  I think that's a smoking gun.\r\n\r\nIf I change the content file specification to be a wildcard, then my first impression is that things are much more robust:\r\n\r\n```\r\n  content: [\r\n      \"./wwwroot/*.html\"\r\n  ],\r\n```\r\n\r\nSo:\r\n\r\n1. Is it possible/likely that TW is converting a transient read-failure on a watched file into a permanent failure to watch that file?\r\n2. If so, could this be fixed?   \r\n \r\nEven without the specific Visual Studio rename thing, transient read failures are probably an inescapable feature of Windows, because it's so common that people have tools like anti-virus and cloud-backup and indexers which do lots of automatic file opening.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/9072","RelatedDescription":"Open issue \"Transient read failure may cause permanent failure to watch file\" (#9072)"},{"Id":"1334311323","IsPullRequest":false,"CreatedAt":"2022-08-10T14:36:05","Actor":"dcastil","Number":"9066","RawContent":null,"Title":"Not possible to set ring color with `future.respectDefaultRingColorOpacity` enabled","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.1.7\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nn/a\r\n\r\n**What version of Node.js are you using?**\r\n\r\nn/a\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/N1ko1lZjzn?file=config\r\n\r\n**Describe your issue**\r\n\r\nWhen `future.respectDefaultRingColorOpacity` is set to `true` in Tailwind config, I can't set ring colors like `ring-gray-500` anymore. The respective class is not created by the Tailwind compiler.\r\n\r\nRelated: https://github.com/tailwindlabs/tailwindcss/issues/9016#issuecomment-1210378693","Url":"https://github.com/tailwindlabs/tailwindcss/issues/9066","RelatedDescription":"Closed issue \"Not possible to set ring color with `future.respectDefaultRingColorOpacity` enabled\" (#9066)"},{"Id":"1334719314","IsPullRequest":true,"CreatedAt":"2022-08-10T14:36:04","Actor":"thecrypticace","Number":"9070","RawContent":null,"Title":"Fix ring color utility generation when using `respectDefaultRingColorOpacity`","State":"closed","Body":"Fix #9066","Url":"https://github.com/tailwindlabs/tailwindcss/pull/9070","RelatedDescription":"Closed or merged PR \"Fix ring color utility generation when using `respectDefaultRingColorOpacity`\" (#9070)"},{"Id":"1334559544","IsPullRequest":false,"CreatedAt":"2022-08-10T12:43:54","Actor":"VictorPulzz","Number":"9069","RawContent":null,"Title":"Arbitrary values color with opacity tailwind","State":"closed","Body":"### Discussed in https://github.com/tailwindlabs/tailwindcss/discussions/9068\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **VictorPulzz** August 10, 2022</sup>\r\nHello!\r\nСan you help me?\r\nI want add dynamic color with opacity in component with css variables\r\nComponent:\r\n```ts\r\n <div\r\n      className={styles.block}\r\n      style={{  '--color': color} as CSSProperties}\r\n   />\r\n```\r\nScss module: \r\n```css\r\n.block {\r\n  @apply text-[color:var(--color)] bg-[color:var(--color)]/10;\r\n}\r\n```\r\nThis class `bg-[color:var(--color)]/10` not work(</div>","Url":"https://github.com/tailwindlabs/tailwindcss/issues/9069","RelatedDescription":"Closed issue \"Arbitrary values color with opacity tailwind\" (#9069)"},{"Id":"1334324518","IsPullRequest":false,"CreatedAt":"2022-08-10T09:16:19","Actor":"Zokor","Number":"9067","RawContent":null,"Title":"On doing ng-build shows [WARNING] Expected identifier but found \"!\"","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n3.1.8\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nUsing tailwind with Angular 14\r\n\r\n**What version of Node.js are you using?**\r\n\r\n16.14.2\r\n\r\nFor example: Chrome, Safari, or N/A\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Describe your issue**\r\n\r\nOn doing ng-build a warning appears due to a wrong \";\" --tw-shadow:inset 0 0 30px 0 rgb(0 0 0 / 10%); !important;\r\n\r\n\r\nWarning: ▲ [WARNING] Expected identifier but found \"!\"\r\n\r\n    styles.e7c4f6bee7583309.css:14192:49:\r\n      14192 │   --tw-shadow:inset 0 0 30px 0 rgb(0 0 0 / 10%); !important;\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/9067","RelatedDescription":"Open issue \"On doing ng-build shows [WARNING] Expected identifier but found \"!\"\" (#9067)"},{"Id":"1333838103","IsPullRequest":true,"CreatedAt":"2022-08-09T22:14:06","Actor":"depfu[bot]","Number":"9060","RawContent":null,"Title":"Update esbuild: 0.14.48 → 0.14.54 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n#### ✳️ esbuild (0.14.48 → 0.14.54) · [Repo](https://github.com/evanw/esbuild) · [Changelog](https://github.com/evanw/esbuild/blob/master/CHANGELOG.md)\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/evanw/esbuild/releases/tag/v0.14.54\">0.14.54</a></h4>\n\n<blockquote><ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Fix optimizations for calls containing spread arguments (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/2445\">#2445</a>)</p>\n<p dir=\"auto\">This release fixes the handling of spread arguments in the optimization of <code class=\"notranslate\">/* @__PURE__ */</code> comments, empty functions, and identity functions:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-c\">// Original code</span>\n<span class=\"pl-k\">function</span> <span class=\"pl-en\">empty</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span>\n<span class=\"pl-k\">function</span> <span class=\"pl-en\">identity</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">x</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">{</span> <span class=\"pl-k\">return</span> <span class=\"pl-s1\">x</span> <span class=\"pl-kos\">}</span>\n<span class=\"pl-c\">/* <span class=\"pl-k\">@__PURE__</span> */</span> <span class=\"pl-en\">a</span><span class=\"pl-kos\">(</span>...<span class=\"pl-s1\">x</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-c\">/* <span class=\"pl-k\">@__PURE__</span> */</span> <span class=\"pl-k\">new</span> <span class=\"pl-s1\">b</span><span class=\"pl-kos\">(</span>...<span class=\"pl-s1\">x</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-en\">empty</span><span class=\"pl-kos\">(</span>...<span class=\"pl-s1\">x</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-en\">identity</span><span class=\"pl-kos\">(</span>...<span class=\"pl-s1\">x</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-c\">// Old output (with --minify --tree-shaking=true)</span>\n<span class=\"pl-kos\">.</span><span class=\"pl-kos\">.</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">x</span><span class=\"pl-kos\">;</span>...<span class=\"pl-s1\">x</span><span class=\"pl-kos\">;</span>...<span class=\"pl-s1\">x</span><span class=\"pl-kos\">;</span>...<span class=\"pl-s1\">x</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">// New output (with --minify --tree-shaking=true)</span>\n<span class=\"pl-k\">function</span> <span class=\"pl-en\">identity</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">n</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">{</span><span class=\"pl-k\">return</span> <span class=\"pl-s1\">n</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">[</span>...<span class=\"pl-s1\">x</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span><span class=\"pl-kos\">[</span>...<span class=\"pl-s1\">x</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span><span class=\"pl-kos\">[</span>...<span class=\"pl-s1\">x</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">;</span><span class=\"pl-en\">identity</span><span class=\"pl-kos\">(</span>...<span class=\"pl-s1\">x</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">Previously esbuild assumed arguments with side effects could be directly inlined. This is almost always true except for spread arguments, which are not syntactically valid on their own and which have the side effect of causing iteration, which might have further side effects. Now esbuild will wrap these elements in an unused array so that they are syntactically valid and so that the iteration side effects are preserved.</p>\n</li>\n</ul></blockquote>\n<h4><a href=\"https://github.com/evanw/esbuild/releases/tag/v0.14.53\">0.14.53</a></h4>\n\n<blockquote><p dir=\"auto\">This release fixes a minor issue with the previous release: I had to rename the package <code class=\"notranslate\">esbuild-linux-loong64</code> to <code class=\"notranslate\">@esbuild/linux-loong64</code> in the contributed PR because someone registered the package name before I could claim it, and I missed a spot. Hopefully everything is working after this release. I plan to change all platform-specific package names to use the <code class=\"notranslate\">@esbuild/</code> scope at some point to avoid this problem in the future.</p></blockquote>\n<h4><a href=\"https://github.com/evanw/esbuild/releases/tag/v0.14.52\">0.14.52</a></h4>\n\n<blockquote><ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Allow binary data as input to the JS <code class=\"notranslate\">transform</code> and <code class=\"notranslate\">build</code> APIs (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/2424\">#2424</a>)</p>\n<p dir=\"auto\">Previously esbuild's <code class=\"notranslate\">transform</code> and <code class=\"notranslate\">build</code> APIs could only take a string. However, some people want to use esbuild to convert binary data to base64 text. This is problematic because JavaScript strings represent UTF-16 text and esbuild internally operates on arrays of bytes, so all strings coming from JavaScript undergo UTF-16 to UTF-8 conversion before use. This meant that using esbuild in this way was doing base64 encoding of the UTF-8 encoding of the text, which was undesired.</p>\n<p dir=\"auto\">With this release, esbuild now accepts <code class=\"notranslate\">Uint8Array</code> in addition to string as an input format for the <code class=\"notranslate\">transform</code> and <code class=\"notranslate\">build</code> APIs. Now you can use esbuild to convert binary data to base64 text:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-c\">// Original code</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-s1\">esbuild</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'esbuild'</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span>\n  <span class=\"pl-kos\">(</span><span class=\"pl-k\">await</span> <span class=\"pl-s1\">esbuild</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">transform</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'\\xFF'</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">loader</span>: <span class=\"pl-s\">'base64'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">code</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">(</span><span class=\"pl-k\">await</span> <span class=\"pl-s1\">esbuild</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">build</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">stdin</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">contents</span>: <span class=\"pl-s\">'\\xFF'</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">loader</span>: <span class=\"pl-s\">'base64'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">write</span>: <span class=\"pl-c1\">false</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">outputFiles</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">text</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span>\n  <span class=\"pl-kos\">(</span><span class=\"pl-k\">await</span> <span class=\"pl-s1\">esbuild</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">transform</span><span class=\"pl-kos\">(</span><span class=\"pl-k\">new</span> <span class=\"pl-v\">Uint8Array</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">0xFF</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">loader</span>: <span class=\"pl-s\">'base64'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">code</span><span class=\"pl-kos\">,</span>\n  <span class=\"pl-kos\">(</span><span class=\"pl-k\">await</span> <span class=\"pl-s1\">esbuild</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">build</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> <span class=\"pl-c1\">stdin</span>: <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">contents</span>: <span class=\"pl-k\">new</span> <span class=\"pl-v\">Uint8Array</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">0xFF</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">loader</span>: <span class=\"pl-s\">'base64'</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">write</span>: <span class=\"pl-c1\">false</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">outputFiles</span><span class=\"pl-kos\">[</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">text</span><span class=\"pl-kos\">,</span>\n<span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-c\">// Old output</span>\n<span class=\"pl-kos\">[</span> <span class=\"pl-s\">'module.exports = \"w78=\";\\n'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'module.exports = \"w78=\";\\n'</span> <span class=\"pl-kos\">]</span>\n<span class=\"pl-c\">/* ERROR: The input to \"transform\" must be a string */</span>\n\n<span class=\"pl-c\">// New output</span>\n<span class=\"pl-kos\">[</span> <span class=\"pl-s\">'module.exports = \"w78=\";\\n'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'module.exports = \"w78=\";\\n'</span> <span class=\"pl-kos\">]</span>\n<span class=\"pl-kos\">[</span> <span class=\"pl-s\">'module.exports = \"/w==\";\\n'</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'module.exports = \"/w==\";\\n'</span> <span class=\"pl-kos\">]</span></pre></div>\n</li>\n<li>\n<p dir=\"auto\">Update the getter for <code class=\"notranslate\">text</code> in build results (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/2423\">#2423</a>)</p>\n<p dir=\"auto\">Output files in build results returned from esbuild's JavaScript API have both a <code class=\"notranslate\">contents</code> and a <code class=\"notranslate\">text</code> property to return the contents of the output file. The <code class=\"notranslate\">contents</code> property is a binary UTF-8 Uint8Array and the <code class=\"notranslate\">text</code> property is a JavaScript UTF-16 string. The <code class=\"notranslate\">text</code> property is a getter that does the UTF-8 to UTF-16 conversion only if it's needed for better performance.</p>\n<p dir=\"auto\">Previously if you mutate the build results object, you had to overwrite both <code class=\"notranslate\">contents</code> and <code class=\"notranslate\">text</code> since the value returned from the <code class=\"notranslate\">text</code> getter is the original text returned by esbuild. Some people find this confusing so with this release, the getter for <code class=\"notranslate\">text</code> has been updated to do the UTF-8 to UTF-16 conversion on the current value of the <code class=\"notranslate\">contents</code> property instead of the original value.</p>\n</li>\n<li>\n<p dir=\"auto\">Publish builds for Linux LoongArch 64-bit (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/1804\">#1804</a>, <a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/pull/2373\">#2373</a>)</p>\n<p dir=\"auto\">This release upgrades to <a href=\"https://go.dev/doc/go1.19\">Go 1.19</a>, which now includes support for LoongArch 64-bit processors. LoongArch 64-bit builds of esbuild will now be published to npm, which means that in theory they can now be installed with <code class=\"notranslate\">npm install esbuild</code>. This was contributed by <a href=\"https://bounce.depfu.com/github.com/beyond-1234\">@beyond-1234</a>.</p>\n</li>\n</ul></blockquote>\n<h4><a href=\"https://github.com/evanw/esbuild/releases/tag/v0.14.51\">0.14.51</a></h4>\n\n<blockquote><ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Add support for React 17's <code class=\"notranslate\">automatic</code> JSX transform (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/334\">#334</a>, <a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/718\">#718</a>, <a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/1172\">#1172</a>, <a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/2318\">#2318</a>, <a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/pull/2349\">#2349</a>)</p>\n<p dir=\"auto\">This adds support for the <a href=\"https://reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html\">new \"automatic\" JSX runtime from React 17+</a> to esbuild for both the build and transform APIs.</p>\n<p dir=\"auto\"><strong>New CLI flags and API options:</strong></p>\n<ul dir=\"auto\">\n<li>\n<code class=\"notranslate\">--jsx</code>, <code class=\"notranslate\">jsx</code> — Set this to <code class=\"notranslate\">\"automatic\"</code> to opt in to this new transform</li>\n<li>\n<code class=\"notranslate\">--jsx-dev</code>, <code class=\"notranslate\">jsxDev</code> — Toggles development mode for the automatic runtime</li>\n<li>\n<code class=\"notranslate\">--jsx-import-source</code>, <code class=\"notranslate\">jsxImportSource</code> — Overrides the root import for runtime functions (default <code class=\"notranslate\">\"react\"</code>)</li>\n</ul>\n<p dir=\"auto\"><strong>New JSX pragma comments:</strong></p>\n<ul dir=\"auto\">\n<li>\n<code class=\"notranslate\">@jsxRuntime</code> — Sets the runtime (<code class=\"notranslate\">automatic</code> or <code class=\"notranslate\">classic</code>)</li>\n<li>\n<code class=\"notranslate\">@jsxImportSource</code> — Sets the import source (only valid with automatic runtime)</li>\n</ul>\n<p dir=\"auto\">The existing <code class=\"notranslate\">@jsxFragment</code> and <code class=\"notranslate\">@jsxFactory</code> pragma comments are only valid with \"classic\" runtime.</p>\n<p dir=\"auto\"><strong>TSConfig resolving:</strong><br>\nAlong with accepting the new options directly via CLI or API, option inference from <code class=\"notranslate\">tsconfig.json</code> compiler options was also implemented:</p>\n<ul dir=\"auto\">\n<li>\n<code class=\"notranslate\">\"jsx\": \"preserve\"</code> or <code class=\"notranslate\">\"jsx\": \"react-native\"</code> → Same as <code class=\"notranslate\">--jsx=preserve</code> in esbuild</li>\n<li>\n<code class=\"notranslate\">\"jsx\": \"react\"</code> → Same as <code class=\"notranslate\">--jsx=transform</code> in esbuild (which is the default behavior)</li>\n<li>\n<code class=\"notranslate\">\"jsx\": \"react-jsx\"</code> → Same as <code class=\"notranslate\">--jsx=automatic</code> in esbuild</li>\n<li>\n<code class=\"notranslate\">\"jsx\": \"react-jsxdev\"</code> → Same as <code class=\"notranslate\">--jsx=automatic --jsx-dev</code> in esbuild</li>\n</ul>\n<p dir=\"auto\">It also reads the value of <code class=\"notranslate\">\"jsxImportSource\"</code> from <code class=\"notranslate\">tsconfig.json</code> if specified.</p>\n<p dir=\"auto\">For <code class=\"notranslate\">react-jsx</code> it's important to note that it doesn't implicitly disable <code class=\"notranslate\">--jsx-dev</code>. This is to support the case where a user sets <code class=\"notranslate\">\"react-jsx\"</code> in their <code class=\"notranslate\">tsconfig.json</code> but then toggles development mode directly in esbuild.</p>\n<p dir=\"auto\"><strong>esbuild vs Babel vs TS vs...</strong></p>\n<p dir=\"auto\">There are a few differences between the various technologies that implement automatic JSX runtimes. The JSX transform in esbuild follows a mix of Babel's and TypeScript's behavior:</p>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">When an element has <code class=\"notranslate\">__source</code> or <code class=\"notranslate\">__self</code> props:</p>\n<ul dir=\"auto\">\n<li>Babel: Print an error about a deprecated transform plugin</li>\n<li>TypeScript: Allow the props</li>\n<li>swc: Hard crash</li>\n<li>\n<strong>esbuild</strong>: Print an error — Following Babel was chosen for this one because this might help people catch configuration issues where JSX files are being parsed by multiple tools</li>\n</ul>\n</li>\n<li>\n<p dir=\"auto\">Element has an \"implicit true\" key prop, e.g. <code class=\"notranslate\">&lt;a key /&gt;</code>:</p>\n<ul dir=\"auto\">\n<li>Babel: Print an error indicating that \"key\" props require an explicit value</li>\n<li>TypeScript: Silently omit the \"key\" prop</li>\n<li>swc: Hard crash</li>\n<li>\n<strong>esbuild</strong>: Print an error like Babel — This might help catch legitimate programming mistakes</li>\n</ul>\n</li>\n<li>\n<p dir=\"auto\">Element has spread children, e.g. <code class=\"notranslate\">&lt;a&gt;{...children}&lt;/a&gt;</code></p>\n<ul dir=\"auto\">\n<li>Babel: Print an error stating that React doesn't support spread children</li>\n<li>TypeScript: Use static jsx function and pass children as-is, including spread operator</li>\n<li>swc: same as Babel</li>\n<li>\n<strong>esbuild</strong>: Same as TypeScript</li>\n</ul>\n</li>\n</ul>\n<p dir=\"auto\">Also note that TypeScript has some bugs regarding JSX development mode and the generation of <code class=\"notranslate\">lineNumber</code> and <code class=\"notranslate\">columnNumber</code> values. Babel's values are accurate though, so esbuild's line and column numbers match Babel. Both numbers are 1-based and columns are counted in terms of UTF-16 code units.</p>\n<p dir=\"auto\">This feature was contributed by <a href=\"https://bounce.depfu.com/github.com/jgoz\">@jgoz</a>.</p>\n</li>\n</ul></blockquote>\n<h4><a href=\"https://github.com/evanw/esbuild/releases/tag/v0.14.50\">0.14.50</a></h4>\n\n<blockquote><ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Emit <code class=\"notranslate\">names</code> in source maps (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/1296\">#1296</a>)</p>\n<p dir=\"auto\">The <a href=\"https://sourcemaps.info/spec.html\">source map specification</a> includes an optional <code class=\"notranslate\">names</code> field that can associate an identifier with a mapping entry. This can be used to record the original name for an identifier, which is useful if the identifier was renamed to something else in the generated code. When esbuild was originally written, this field wasn't widely used, but now there are some debuggers that make use of it to provide better debugging of minified code. With this release, esbuild now includes a <code class=\"notranslate\">names</code> field in the source maps that it generates. To save space, the original name is only recorded when it's different from the final name.</p>\n</li>\n<li>\n<p dir=\"auto\">Update parser for arrow functions with initial default type parameters in <code class=\"notranslate\">.tsx</code> files (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/2410\">#2410</a>)</p>\n<p dir=\"auto\">TypeScript 4.6 introduced a <a href=\"https://bounce.depfu.com/github.com/microsoft/TypeScript/issues/47062\">change to the parsing of JSX syntax in <code class=\"notranslate\">.tsx</code> files</a>. Now a <code class=\"notranslate\">&lt;</code> token followed by an identifier and then a <code class=\"notranslate\">=</code> token is parsed as an arrow function with a default type parameter instead of as a JSX element. This release updates esbuild's parser to match TypeScript's parser.</p>\n</li>\n<li>\n<p dir=\"auto\">Fix an accidental infinite loop with <code class=\"notranslate\">--define</code> substitution (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/2407\">#2407</a>)</p>\n<p dir=\"auto\">This is a fix for a regression that was introduced in esbuild version 0.14.44 where certain <code class=\"notranslate\">--define</code> substitutions could result in esbuild crashing with a stack overflow. The problem was an incorrect fix for <a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/2292\">#2292</a>. The fix merged the code paths for <code class=\"notranslate\">--define</code> and <code class=\"notranslate\">--jsx-factory</code> rewriting since the value substitution is now the same for both. However, doing this accidentally made <code class=\"notranslate\">--define</code> substitution recursive since the JSX factory needs to be able to match against <code class=\"notranslate\">--define</code> substitutions to integrate with the <code class=\"notranslate\">--inject</code> feature. The fix is to only do one additional level of matching against define substitutions, and to only do this for JSX factories. Now these cases are able to build successfully without a stack overflow.</p>\n</li>\n<li>\n<p dir=\"auto\">Include the \"public path\" value in hashes (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/2403\">#2403</a>)</p>\n<p dir=\"auto\">The <code class=\"notranslate\">--public-path=</code> configuration value affects the paths that esbuild uses to reference files from other files and is used in various situations such as cross-chunk imports in JS and references to asset files from CSS files. However, it wasn't included in the hash calculations used for file names due to an oversight. This meant that changing the public path setting incorrectly didn't result in the hashes in file names changing even though the contents of the files changed. This release fixes the issue by including a hash of the public path in all non-asset output files.</p>\n</li>\n<li>\n<p dir=\"auto\">Fix a cross-platform consistency bug (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/2383\">#2383</a>)</p>\n<p dir=\"auto\">Previously esbuild would minify <code class=\"notranslate\">0xFFFF_FFFF_FFFF_FFFF</code> as <code class=\"notranslate\">0xffffffffffffffff</code> (18 bytes) on arm64 chips and as <code class=\"notranslate\">18446744073709552e3</code> (19 bytes) on x86_64 chips. The reason was that the number was converted to a 64-bit unsigned integer internally for printing as hexadecimal, the 64-bit floating-point number <code class=\"notranslate\">0xFFFF_FFFF_FFFF_FFFF</code> is actually <code class=\"notranslate\">0x1_0000_0000_0000_0180</code> (i.e. it's rounded up, not down), and converting <code class=\"notranslate\">float64</code> to <code class=\"notranslate\">uint64</code> is implementation-dependent in Go when the input is out of bounds. This was fixed by changing the upper limit for which esbuild uses hexadecimal numbers during minification to <code class=\"notranslate\">0xFFFF_FFFF_FFFF_F800</code>, which is the next representable 64-bit floating-point number below <code class=\"notranslate\">0x1_0000_0000_0000_0180</code>, and which fits in a <code class=\"notranslate\">uint64</code>. As a result, esbuild will now consistently never minify <code class=\"notranslate\">0xFFFF_FFFF_FFFF_FFFF</code> as <code class=\"notranslate\">0xffffffffffffffff</code> anymore, which means the output should now be consistent across platforms.</p>\n</li>\n<li>\n<p dir=\"auto\">Fix a hang with the synchronous API when the package is corrupted (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/2396\">#2396</a>)</p>\n<p dir=\"auto\">An error message is already thrown when the esbuild package is corrupted and esbuild can't be run. However, if you are using a synchronous call in the JavaScript API in worker mode, esbuild will use a child worker to initialize esbuild once so that the overhead of initializing esbuild can be amortized across multiple synchronous API calls. However, errors thrown during initialization weren't being propagated correctly which resulted in a hang while the main thread waited forever for the child worker to finish initializing. With this release, initialization errors are now propagated correctly so calling a synchronous API call when the package is corrupted should now result in an error instead of a hang.</p>\n</li>\n<li>\n<p dir=\"auto\">Fix <code class=\"notranslate\">tsconfig.json</code> files that collide with directory names (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/2411\">#2411</a>)</p>\n<p dir=\"auto\">TypeScript lets you write <code class=\"notranslate\">tsconfig.json</code> files with <code class=\"notranslate\">extends</code> clauses that refer to another config file using an implicit <code class=\"notranslate\">.json</code> file extension. However, if the config file without the <code class=\"notranslate\">.json</code> extension existed as a directory name, esbuild and TypeScript had different behavior. TypeScript ignores the directory and continues looking for the config file by adding the <code class=\"notranslate\">.json</code> extension while esbuild previously terminated the search and then failed to load the config file (because it's a directory). With this release, esbuild will now ignore exact matches when resolving <code class=\"notranslate\">extends</code> fields in <code class=\"notranslate\">tsconfig.json</code> files if the exact match results in a directory.</p>\n</li>\n<li>\n<p dir=\"auto\">Add <code class=\"notranslate\">platform</code> to the transform API (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/2362\">#2362</a>)</p>\n<p dir=\"auto\">The <code class=\"notranslate\">platform</code> option is mainly relevant for bundling because it mostly affects path resolution (e.g. activating the <code class=\"notranslate\">\"browser\"</code> field in <code class=\"notranslate\">package.json</code> files), so it was previously only available for the build API. With this release, it has additionally be made available for the transform API for a single reason: you can now set <code class=\"notranslate\">--platform=node</code> when transforming a string so that esbuild will add export annotations for node, which is only relevant when <code class=\"notranslate\">--format=cjs</code> is also present.</p>\n<p dir=\"auto\">This has to do with an implementation detail of node that parses the AST of CommonJS files to discover named exports when importing CommonJS from ESM. However, this new addition to esbuild's API is of questionable usefulness. Node's loader API (the main use case for using esbuild's transform API like this) actually bypasses the content returned from the loader and parses the AST that's present on the file system, so you won't actually be able to use esbuild's API for this. See the linked issue for more information.</p>\n</li>\n</ul></blockquote>\n<h4><a href=\"https://github.com/evanw/esbuild/releases/tag/v0.14.49\">0.14.49</a></h4>\n\n<blockquote><ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Keep inlined constants when direct <code class=\"notranslate\">eval</code> is present (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/2361\">#2361</a>)</p>\n<p dir=\"auto\">Version 0.14.19 of esbuild added inlining of certain <code class=\"notranslate\">const</code> variables during minification, which replaces all references to the variable with the initializer and then removes the variable declaration. However, this could generate incorrect code when direct <code class=\"notranslate\">eval</code> is present because the direct <code class=\"notranslate\">eval</code> could reference the constant by name. This release fixes the problem by preserving the <code class=\"notranslate\">const</code> variable declaration in this case:</p>\n<div class=\"highlight highlight-source-js\"><pre><span class=\"pl-c\">// Original code</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span> <span class=\"pl-k\">const</span> <span class=\"pl-s1\">x</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">123</span><span class=\"pl-kos\">;</span> <span class=\"pl-k\">return</span> <span class=\"pl-s1\">x</span> <span class=\"pl-c1\">+</span> <span class=\"pl-en\">eval</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'x'</span><span class=\"pl-kos\">)</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-c\">// Old output (with --minify)</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-c1\">=&gt;</span><span class=\"pl-c1\">123</span><span class=\"pl-c1\">+</span><span class=\"pl-en\">eval</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"x\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n<span class=\"pl-c\">// New output (with --minify)</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span><span class=\"pl-c1\">=&gt;</span><span class=\"pl-kos\">{</span><span class=\"pl-k\">const</span> <span class=\"pl-s1\">x</span><span class=\"pl-c1\">=</span><span class=\"pl-c1\">123</span><span class=\"pl-kos\">;</span><span class=\"pl-k\">return</span> <span class=\"pl-c1\">123</span><span class=\"pl-c1\">+</span><span class=\"pl-en\">eval</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">\"x\"</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n</li>\n<li>\n<p dir=\"auto\">Fix an incorrect error in TypeScript when targeting ES5 (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/2375\">#2375</a>)</p>\n<p dir=\"auto\">Previously when compiling TypeScript code to ES5, esbuild could incorrectly consider the following syntax forms as a transformation error:</p>\n<div class=\"highlight highlight-source-ts\"><pre><span class=\"pl-c1\">0</span> ? <span class=\"pl-kos\">(</span><span class=\"pl-kos\">[</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span> : <span class=\"pl-c1\">1</span> ? <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span><span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> : <span class=\"pl-c1\">2</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">The error messages looked like this:</p>\n<pre class=\"notranslate\"><code class=\"notranslate\">✘ [ERROR] Transforming destructuring to the configured target environment (\"es5\") is not supported yet\n\n    example.ts:1:5:\n      1 │ 0 ? ([]) : 1 ? ({}) : 2;\n        ╵      ^\n\n✘ [ERROR] Transforming destructuring to the configured target environment (\"es5\") is not supported yet\n\n    example.ts:1:16:\n      1 │ 0 ? ([]) : 1 ? ({}) : 2;\n        ╵                 ^\n</code></pre>\n<p dir=\"auto\">These parenthesized literals followed by a colon look like the start of an arrow function expression followed by a TypeScript return type (e.g. <code class=\"notranslate\">([]) : 1</code> could be the start of the TypeScript arrow function <code class=\"notranslate\">([]): 1 =&gt; 1</code>). Unlike in JavaScript, parsing arrow functions in TypeScript requires backtracking. In this case esbuild correctly determined that this expression wasn't an arrow function after all but the check for destructuring was incorrectly not covered under the backtracking process. With this release, the error message is now only reported if the parser successfully parses an arrow function without backtracking.</p>\n</li>\n<li>\n<p dir=\"auto\">Fix generated TypeScript <code class=\"notranslate\">enum</code> comments containing <code class=\"notranslate\">*/</code> (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/2369\">#2369</a>, <a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/pull/2371\">#2371</a>)</p>\n<p dir=\"auto\">TypeScript <code class=\"notranslate\">enum</code> values that are equal to a number or string literal are inlined (references to the enum are replaced with the literal value) and have a <code class=\"notranslate\">/* ... */</code> comment after them with the original enum name to improve readability. However, this comment is omitted if the enum name contains the character sequence <code class=\"notranslate\">*/</code> because that would end the comment early and cause a syntax error:</p>\n<div class=\"highlight highlight-source-ts\"><pre><span class=\"pl-c\">// Original TypeScript</span>\n<span class=\"pl-k\">enum</span> <span class=\"pl-smi\">Foo</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s\">'/*'</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'*/'</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">2</span> <span class=\"pl-kos\">}</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-smi\">Foo</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">'/*'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">Foo</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">'*/'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-c\">// Generated JavaScript</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1</span> <span class=\"pl-c\">/* /* */</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">This was originally handled correctly when TypeScript <code class=\"notranslate\">enum</code> inlining was initially implemented since it was only supported within a single file. However, when esbuild was later extended to support TypeScript <code class=\"notranslate\">enum</code> inlining across files, this special case where the enum name contains <code class=\"notranslate\">*/</code> was not handled in that new code. Starting with this release, esbuild will now handle enums with names containing <code class=\"notranslate\">*/</code> correctly when they are inlined across files:</p>\n<div class=\"highlight highlight-source-ts\"><pre><span class=\"pl-c\">// foo.ts</span>\n<span class=\"pl-k\">export</span> <span class=\"pl-k\">enum</span> <span class=\"pl-smi\">Foo</span> <span class=\"pl-kos\">{</span> <span class=\"pl-s\">'/*'</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-s\">'*/'</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">2</span> <span class=\"pl-kos\">}</span>\n\n<span class=\"pl-c\">// bar.ts</span>\n<span class=\"pl-k\">import</span> <span class=\"pl-kos\">{</span> <span class=\"pl-smi\">Foo</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">from</span> <span class=\"pl-s\">'./foo'</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-smi\">Foo</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">'/*'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">Foo</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">'*/'</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">)</span>\n\n<span class=\"pl-c\">// Old output (with --bundle --format=esm)</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1</span> <span class=\"pl-c\">/* /* */</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span> <span class=\"pl-c\">/* */</span> <span class=\"pl-c1\">*</span><span class=\"pl-c1\">/</span><span class=\"pl-kos\">)</span>;\n\n<span class=\"pl-c\">// New output (with --bundle --format=esm)</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1</span> <span class=\"pl-c\">/* /* */</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">2</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\"></span><span class=\"pl-kos\">;</span></pre></div>\n<p dir=\"auto\">This fix was contributed by <a href=\"https://bounce.depfu.com/github.com/magic-akari\">@magic-akari</a>.</p>\n</li>\n<li>\n<p dir=\"auto\">Allow <code class=\"notranslate\">declare</code> class fields to be initialized (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/2380\">#2380</a>)</p>\n<p dir=\"auto\">This release fixes an oversight in the TypeScript parser that disallowed initializers for <code class=\"notranslate\">declare</code> class fields. TypeScript actually allows the following limited initializer expressions for <code class=\"notranslate\">readonly</code> fields:</p>\n<div class=\"highlight highlight-source-ts\"><pre><span class=\"pl-k\">declare</span> <span class=\"pl-k\">const</span> <span class=\"pl-k\">enum</span> <span class=\"pl-s1\">a</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">b</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">0</span> <span class=\"pl-kos\">}</span>\n\n<span class=\"pl-k\">class</span> <span class=\"pl-smi\">Foo</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-c\">// These are allowed by TypeScript</span>\n  <span class=\"pl-k\">declare</span> <span class=\"pl-k\">readonly</span> <span class=\"pl-c1\">a</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">0</span>\n  <span class=\"pl-k\">declare</span> <span class=\"pl-k\">readonly</span> <span class=\"pl-c1\">b</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">-</span><span class=\"pl-c1\">0</span>\n  <span class=\"pl-k\">declare</span> <span class=\"pl-k\">readonly</span> <span class=\"pl-c1\">c</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">0n</span>\n  <span class=\"pl-k\">declare</span> <span class=\"pl-k\">readonly</span> <span class=\"pl-c1\">d</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">-</span><span class=\"pl-c1\">0n</span>\n  <span class=\"pl-k\">declare</span> <span class=\"pl-k\">readonly</span> <span class=\"pl-c1\">e</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">'x'</span>\n  <span class=\"pl-k\">declare</span> <span class=\"pl-k\">readonly</span> <span class=\"pl-c1\">f</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s\">`x`</span>\n  <span class=\"pl-k\">declare</span> <span class=\"pl-k\">readonly</span> <span class=\"pl-c1\">g</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">a</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">b</span>\n  <span class=\"pl-k\">declare</span> <span class=\"pl-k\">readonly</span> <span class=\"pl-c1\">h</span> <span class=\"pl-c1\">=</span> <span class=\"pl-s1\">a</span><span class=\"pl-kos\">[</span><span class=\"pl-s\">'b'</span><span class=\"pl-kos\">]</span>\n\n  <span class=\"pl-c\">// These are not allowed by TypeScript</span>\n  <span class=\"pl-k\">declare</span> <span class=\"pl-k\">readonly</span> <span class=\"pl-c1\">x</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">(</span><span class=\"pl-c1\">0</span><span class=\"pl-kos\">)</span>\n  <span class=\"pl-k\">declare</span> <span class=\"pl-k\">readonly</span> <span class=\"pl-c1\">y</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">null</span>\n  <span class=\"pl-k\">declare</span> <span class=\"pl-k\">readonly</span> <span class=\"pl-c1\">z</span> <span class=\"pl-c1\">=</span> <span class=\"pl-c1\">-</span><span class=\"pl-s1\">a</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">b</span>\n<span class=\"pl-kos\">}</span></pre></div>\n<p dir=\"auto\">So with this release, esbuild now allows initializers for <code class=\"notranslate\">declare</code> class fields too. To future-proof this in case TypeScript allows more expressions as initializers in the future (such as <code class=\"notranslate\">null</code>), esbuild will allow any expression as an initializer and will leave the specifics of TypeScript's special-casing here to the TypeScript type checker.</p>\n</li>\n<li>\n<p dir=\"auto\">Fix a bug in esbuild's feature compatibility table generator (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/2365\">#2365</a>)</p>\n<p dir=\"auto\">Passing specific JavaScript engines to esbuild's <code class=\"notranslate\">--target</code> flag restricts esbuild to only using JavaScript features that are supported on those engines in the output files that esbuild generates. The data for this feature is automatically derived from this compatibility table with a script: <a href=\"https://kangax.github.io/compat-table/\">https://kangax.github.io/compat-table/</a>.</p>\n<p dir=\"auto\">However, the script had a bug that could incorrectly consider a JavaScript syntax feature to be supported in a given engine even when it doesn't actually work in that engine. Specifically this bug happened when a certain aspect of JavaScript syntax has always worked incorrectly in that engine and the bug in that engine has never been fixed. This situation hasn't really come up before because previously esbuild pretty much only targeted JavaScript engines that always fix their bugs, but the two new JavaScript engines that were added in the previous release (<a href=\"https://hermesengine.dev/\">Hermes</a> and <a href=\"https://bounce.depfu.com/github.com/mozilla/rhino\">Rhino</a>) have many aspects of the JavaScript specification that have never been implemented, and may never be implemented. For example, the <code class=\"notranslate\">let</code> and <code class=\"notranslate\">const</code> keywords are not implemented correctly in those engines.</p>\n<p dir=\"auto\">With this release, esbuild's compatibility table generator script has been fixed and as a result, esbuild will now correctly consider a JavaScript syntax feature to be unsupported in a given engine if there is some aspect of that syntax that is broken in all known versions of that engine. This means that the following JavaScript syntax features are no longer considered to be supported by these engines (represented using esbuild's internal names for these syntax features):</p>\n<p dir=\"auto\">Hermes:</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">arrow</code></li>\n<li><code class=\"notranslate\">const-and-let</code></li>\n<li><code class=\"notranslate\">default-argument</code></li>\n<li><code class=\"notranslate\">generator</code></li>\n<li><code class=\"notranslate\">optional-catch-binding</code></li>\n<li><code class=\"notranslate\">optional-chain</code></li>\n<li><code class=\"notranslate\">rest-argument</code></li>\n<li><code class=\"notranslate\">template-literal</code></li>\n</ul>\n<p dir=\"auto\">Rhino:</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">arrow</code></li>\n<li><code class=\"notranslate\">const-and-let</code></li>\n<li><code class=\"notranslate\">destructuring</code></li>\n<li><code class=\"notranslate\">for-of</code></li>\n<li><code class=\"notranslate\">generator</code></li>\n<li><code class=\"notranslate\">object-extensions</code></li>\n<li><code class=\"notranslate\">template-literal</code></li>\n</ul>\n<p dir=\"auto\">IE:</p>\n<ul dir=\"auto\">\n<li><code class=\"notranslate\">const-and-let</code></li>\n</ul>\n</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/esbuild/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/evanw/esbuild/compare/71be8bc24e70609ab50a80e90a17a1f5770c89b5...04ef75fd7ff534a636962f14e11d224c84aa2020\">See the full diff on Github</a>. The new version differs by 58 commits:</p>\n<ul>\n<li><a href=\"https://github.com/evanw/esbuild/commit/04ef75fd7ff534a636962f14e11d224c84aa2020\"><code>publish 0.14.54 to npm</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/20878ce1c1cd6bbd2b4e36b3ed35d3e31ebe5381\"><code>fix #2445: fixes for spread arguments and --minify</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/b2b5a602e4d0bcdb514dcc013d11be4dbf2cd3b3\"><code>ci: move uglify into slow tests</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/b9cae1453d7f77e4c28d0ed01482dafc762e7f55\"><code>ci: clarify some test labels</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/fe9b71189ceb3af1e7eb14d72758e156d07c2c48\"><code>attempt to speed up ci: isolate rollup tests</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/4e65c73fcb05846fc5b1f6451849f88d0fb0b6cf\"><code>publish 0.14.53 to npm</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/adbb4753f120027a6a2152220a7d83575dfda5a9\"><code>missed two `esbuild-linux-loong64` names</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/39eccb81dc11dff13ce720b6b8cd4a0dc799c740\"><code>publish 0.14.52 to npm</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/d6cf390388d8f796f6a0f90ff5a3666e49d80363\"><code>Support Loongarch LE architecture  (#2373)</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/296870e5bde714156850890efab546197980341a\"><code>workarounds for bad go comment formatting behavior</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/af0ab3e2a73b1dde8b1fde132e3545fc2004eef1\"><code>run the new go formatter, which mangles comments</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/21deb419184864b3c6cb327e15118dadde1a6153\"><code>update go 1.18.4 =&gt; 1.19</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/ea63c87b826d61bc9123a4f611ac0f270bd3bffc\"><code>add a note about go 1.13 (#2431)</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/7bd490073081c0001f213e82eb83163c952c1211\"><code>Revert &quot;fix #2417: autmatically add `module` to conditions&quot;</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/5e918f449ace01dc3a5c9b911827551fb92ef93e\"><code>fix #2417: autmatically add `module` to conditions</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/08c67446733ec2690ea5da42bcdbae26e8943828\"><code>fix large binary input on deno</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/e23e1818f87bfd6532caaa6a12352ae34008c4d0\"><code>fix #2424: allow binary in `transform` and `build`</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/2f6c89990d4257019abe608c552bc24b31e2262b\"><code>fix #2423: update `text` getter on output files</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/40ef6339d30cf7b07291bfc904823036c03c4ea3\"><code>fix #2422: use original case for watch mode logs</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/19429aaf6cbef7cc5586aa7f953abcd3068a9d31\"><code>fix typo in release notes</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/4402c7649a83e80866d9b62638628b805f02fb2f\"><code>publish 0.14.51 to npm</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/013722433bb4a0c8f7e91ec82e5ab6c9feb14284\"><code>fix #334: support automatic JSX runtime (#2349)</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/7a268da808b1f9b240b1dbdd8c553e9b31caeacb\"><code>scan over template string ranges in error messages</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/e2830ae35cafa04ce4d3aeee24b23803629ca156\"><code>publish 0.14.50 to npm</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/87595902e2cf63202dcc3468bb18082d47b6bc75\"><code>fix #2362: add `platform` to the transform API</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/09cbb59a87fe01eca6b3eeef213d24994558902b\"><code>update internal typescript 4.5 =&gt; 4.7</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/69d356b95c70f0c3f43840ffd2cf780bd6125211\"><code>fix #2411: ignore tsconfig `extends` directories</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/72088462ae161b452ec896462baa882863689d87\"><code>generate `&quot;names&quot;` in source maps (#2415)</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/98ab5e19fa11272818d878d905bc1928fa00e42b\"><code>warn about duplicate attributes in jsx elements</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/8c6c39a05b7904bb49b072938146098f4a27f3b8\"><code>improve the error message for generic arrow in tsx</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/2c2ef24c4be435b6ef71c99c2a1d1f11a210c059\"><code>fix #2410: new tsx/arrow parsing rules for ts 4.6</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/f41b38de32e038f2ea8c3d2571310062961829a0\"><code>fix #2403: include public path in hash</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/50c04d6edba30d0c3a064814cea01cfd923427cf\"><code>update go 1.18.3 =&gt; 1.18.4</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/49c229f71d325c4dbc788c5775bfa2e416f8fbda\"><code>fix #2407: undo recursive `--define` substitution</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/fd13718c6195afb9e63682476a774fa6d4483be0\"><code>fix #2399: update golang.org/x/sys</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/f5f5b57733865cf0968f05a5ef38b3604c997950\"><code>add some additional source mappings</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/4c5318f487fcc36e7798071c5a8d8e95db1dc6b1\"><code>move statement source mappings into cases</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/d8e401d2059d0b9470b7cb14b38c063f2ed39117\"><code>avoid allocations during vlq encoding</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/61dd5f449941f676e4ff7ae5cfa5dc93fd6e2499\"><code>avoid mutating symbols when mangling props</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/c05ece77b11d64d69582351aa3968da1776c8eaf\"><code>move expression source mappings into cases</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/e70d8e20b1cea40de50c8ffda11e1c844149a1ef\"><code>move json quoting out of js printer</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/8e78ac67967938d6a63a0a237bb652d48dde7b23\"><code>fix some go warnings</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/a1a70723d8aa4e362a3aca7b070c6e0829e8fcda\"><code>use 32-bit integers in source map parser</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/96a5fb43fe326a5b04eb06bbd10cedfcc457fae3\"><code>preserve newlines in call arguments</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/ecae25db0d8007071eaf62fc5e3b99e1c8ec0919\"><code>fix #2396: propagate sync api errors from workers</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/f730c03dc7be43c3c908fbd6e106120a99ebb4a0\"><code>fix #2383: cross-platform hex number consistency</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/4a4fd6e569f4b98e4a4ff4ab3910a5b32be02666\"><code>add `image/avif` to mime types</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/3b6b964be03b555902484d6775b335e7d5098eed\"><code>publish 0.14.49 to npm</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/04b65729e72c1be671f32e8674c3c9c6e22c0fc2\"><code>fix #2361: keeps inlined `const` for direct `eval`</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/4aa18688262536b8742c8ad88bf9ab8a899cb46c\"><code>Fix documentation link (#2376)</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/147163e2bb80c4b25a4a6cce04b2cd07ab6604c3\"><code>#2380: allow `declare` class field initializers</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/a2789bf9b4b44bf0db50b9122a324b1458c16da7\"><code>fix #2375: avoid bad es5 error when backtracking</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/580ad40a9dd050b67916cb3453faf4d0407d2e62\"><code>experiment with equality operand orderings (#2364)</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/ffbc5c25e3b276e251bfcd6e8af5facd438d365b\"><code>remove canonicalization of equality order</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/4a00ba9af247f6d6dd565dad9d818480c124a181\"><code>improve printed diffs in tests</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/18ef7becb931f09bfd83e098fad6956cba4a1989\"><code>fix #2365, close #2372: bug in compat-table code</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/8b5e048786ecb72364f1ff6ab4c7bc30a0ea7e06\"><code>follow-up to #2371</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/46d352ed4004275b565c85d40aed3c6a08d78c7c\"><code>fix(bundle): omit enum comments if name contains `*/` in bundle mode (#2371)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/9060","RelatedDescription":"Closed or merged PR \"Update esbuild: 0.14.48 → 0.14.54 (minor)\" (#9060)"},{"Id":"1333289693","IsPullRequest":false,"CreatedAt":"2022-08-09T13:49:04","Actor":"TastyPi","Number":"9056","RawContent":null,"Title":"CSS rules of the form `.foo.bar` don't behave as expected with `peer-checked:bar`","State":"open","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv3.1.8\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\npostcss-cli 10.0.0\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv16.14.0\r\n\r\n**What browser are you using?**\r\n\r\nN/A\r\n\r\n**What operating system are you using?**\r\n\r\nLinux\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/4zvuUG5xci\r\n\r\nSeems Tailwind Play is still on v3.1.5, but I see the issue in v3.1.8\r\n\r\n**Describe your issue**\r\n\r\nIf I have a standard CSS rule defined like this:\r\n\r\n```css\r\n@layer components {\r\n  .foo.bar {\r\n    background-color: green;\r\n  }\r\n}\r\n```\r\n\r\nThen I would expect `peer-checked:bar` to define the following:\r\n\r\n```css\r\n.peer:checked ~ .foo.peer-checked\\:bar {\r\n  background-color: green;\r\n}\r\n```\r\n\r\nInstead it generates:\r\n\r\n```css\r\n.foo.peer:checked ~ .peer-checked\\:bar {\r\n  background-color: green;\r\n}\r\n```\r\n\r\n`.foo` is applied to the `.peer` instead of the `.peer-checked\\:bar`.\r\n\r\nChanging the original rule to `.bar.foo` fixes the issue (i.e. it works as expected with the first class in the list).","Url":"https://github.com/tailwindlabs/tailwindcss/issues/9056","RelatedDescription":"Open issue \"CSS rules of the form `.foo.bar` don't behave as expected with `peer-checked:bar`\" (#9056)"},{"Id":"1330782018","IsPullRequest":true,"CreatedAt":"2022-08-08T19:02:08","Actor":"adamwathan","Number":"9039","RawContent":null,"Title":"Add support for configuring default font-feature-settings for a font-family","State":"closed","Body":"This PR adds support for an options object when configuring custom font families where you can specify default [font-feature-settings](https://developer.mozilla.org/en-US/docs/Web/CSS/font-feature-settings) for that font.\r\n\r\nInspired by this discussion: https://github.com/tailwindlabs/tailwindcss/discussions/9034\r\n\r\n```js\r\nmodule.exports = {\r\n  // ...\r\n  theme: {\r\n    fontFamily: {\r\n      sans: [\r\n        \"Inter var, sans-serif\",\r\n        { fontFeatureSettings: '\"cv11\", \"ss01\"' },\r\n      ],\r\n    },\r\n  },\r\n}\r\n```\r\n\r\n```js\r\nmodule.exports = {\r\n  // ...\r\n  theme: {\r\n    fontFamily: {\r\n      sans: [\r\n        [\"Inter var\", \"sans-serif\"],\r\n        { fontFeatureSettings: '\"cv11\", \"ss01\"' },\r\n      ],\r\n    },\r\n  },\r\n}\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/pull/9039","RelatedDescription":"Closed or merged PR \"Add support for configuring default font-feature-settings for a font-family\" (#9039)"},{"Id":"1331722102","IsPullRequest":true,"CreatedAt":"2022-08-08T18:33:42","Actor":"zepfietje","Number":"9050","RawContent":null,"Title":"Set -webkit-tap-highlight-color to transparent in Preflight","State":"closed","Body":"This PR removes the highlight over a link while it's being tapped.\r\n\r\nFor many, the blue highlight over a link on mobile is unexpected and personally I disable it on every project. There's also some bigger projects I know of that set the highlight color to transparent. In my opinion it would be good to have this as a default in Preflight. I'm open to discussion though, if you think this is a bad idea.\r\n\r\nFor reference, this has been requested in several discussions here as well:\r\n\r\n- https://github.com/tailwindlabs/tailwindcss/discussions/2984\r\n- https://github.com/tailwindlabs/tailwindcss/discussions/3023\r\n- https://github.com/tailwindlabs/tailwindcss/discussions/6122","Url":"https://github.com/tailwindlabs/tailwindcss/pull/9050","RelatedDescription":"Closed or merged PR \"Set -webkit-tap-highlight-color to transparent in Preflight\" (#9050)"},{"Id":"1331966259","IsPullRequest":true,"CreatedAt":"2022-08-08T14:51:46","Actor":"xstevenyung","Number":"9054","RawContent":null,"Title":"fix cli output stream for performance message","State":"closed","Body":"I was fiddling with executing Tailwind CLI command from a script and realized the output was directed to `stderr` instead of the standard `stdout`.\r\n\r\nThis should fix it","Url":"https://github.com/tailwindlabs/tailwindcss/pull/9054","RelatedDescription":"Closed or merged PR \"fix cli output stream for performance message\" (#9054)"},{"Id":"1329368231","IsPullRequest":true,"CreatedAt":"2022-08-08T14:47:23","Actor":"jardenliu","Number":"9032","RawContent":null,"Title":"Fix vite3 postcss statSync not found","State":"closed","Body":"<img width=\"1378\" alt=\"image\" src=\"https://user-images.githubusercontent.com/15191056/182988398-00ab6978-6837-48b5-bb6c-203a04012c6a.png\">\r\nI use tailwind+vite3+tauri to build my application, and I will get the above error. It seems to be `cwd()` has changed when fs.Statsync is called. \r\nUsing an absolute address can better ensure the correct path of the files","Url":"https://github.com/tailwindlabs/tailwindcss/pull/9032","RelatedDescription":"Closed or merged PR \"Fix vite3 postcss statSync not found\" (#9032)"},{"Id":"1331158556","IsPullRequest":false,"CreatedAt":"2022-08-08T02:18:08","Actor":"Sijad99","Number":"9046","RawContent":null,"Title":"1 Warning of base Component","State":"closed","Body":"<img width=\"1440\" alt=\"Screen Shot 2022-08-08 at 04 27 10\" src=\"https://user-images.githubusercontent.com/49100288/183316178-703c2d6c-ab3c-40ef-8cca-2a8645f6d459.png\">\r\n\r\nHi. \r\nmy Vscode  showing to me this warning and because my extension often say correctly, I should report this to you.\r\nThanks","Url":"https://github.com/tailwindlabs/tailwindcss/issues/9046","RelatedDescription":"Closed issue \"1 Warning of base Component\" (#9046)"},{"Id":"1330824712","IsPullRequest":false,"CreatedAt":"2022-08-06T19:59:12","Actor":"westernwontons","Number":"9043","RawContent":null,"Title":"Not detecting class names with template literals","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\nv3.1.7\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\nNext.js 12.2.2\r\n\r\n**What version of Node.js are you using?**\r\nv16.13.2\r\n\r\n**What browser are you using?**\r\nTried in Chrome v104, Safari v15.6 and Firefox v103.0.1\r\n\r\n**What operating system are you using?**\r\nmacOS\r\n\r\n**Reproduction URL**\r\nhttps://github.com/westernwontons/tailwind-classnames-bug-reproduction\r\n\r\n**Describe your issue**\r\n\r\nDescribe the problem you're seeing, any important steps to reproduce and what behavior you expect instead.\r\n\r\nThe problem is the following:\r\n\r\nThe component `InputWithLabelThatWorks` as it's name implies, works. It has static classNames.\r\nThe component `InputWithLabelThatDoesntWork` will not render the classNames if they are inserted dynamically with template literals.\r\n\r\nTo reproduce the issue:\r\n\r\n1. Go to line 64 and add `colour='accent'` prop to the component\r\n2. Check your browser. It doesn't render.\r\n3. Go to line 34 and replace `input-primary` with `input-accent`\r\n4. Now the new colour is visible in `InputWithLabelThatDoesntWork` component.\r\n\r\nMy idea is that Tailwind doesn't recognize dynamically inserted classNames with template literals UNTIL that specific CSS class has been written into a className property.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/9043","RelatedDescription":"Closed issue \"Not detecting class names with template literals\" (#9043)"},{"Id":"1329827756","IsPullRequest":true,"CreatedAt":"2022-08-05T11:44:35","Actor":"depfu[bot]","Number":"9035","RawContent":null,"Title":"Update autoprefixer: 10.4.7 → 10.4.8 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n#### ✳️ autoprefixer (10.4.7 → 10.4.8) · [Repo](https://github.com/postcss/autoprefixer) · [Changelog](https://github.com/postcss/autoprefixer/blob/main/CHANGELOG.md)\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/postcss/autoprefixer/releases/tag/10.4.8\">10.4.8</a></h4>\n\n<blockquote><ul dir=\"auto\">\n<li>Do not print <code class=\"notranslate\">color-adjust</code> warning if <code class=\"notranslate\">print-color-adjust</code> also is in rule.</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/autoprefixer/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/postcss/autoprefixer/compare/20fd9994a92a22d467b837fd6a8ddab9e2dce476...65e2dae12cb64aab79efa73ddb204f3577f4e8f6\">See the full diff on Github</a>. The new version differs by 4 commits:</p>\n<ul>\n<li><a href=\"https://github.com/postcss/autoprefixer/commit/65e2dae12cb64aab79efa73ddb204f3577f4e8f6\"><code>Release 10.4.8 version</code></a></li>\n<li><a href=\"https://github.com/postcss/autoprefixer/commit/9b670b4f6e2162a034eb6ea9acf17bb6e3f92055\"><code>Do not print warning if print-color-adjust is also in the rule</code></a></li>\n<li><a href=\"https://github.com/postcss/autoprefixer/commit/bcc5ff604757982f9d8852fff278101d7911061f\"><code>Update dependencies and example in docs</code></a></li>\n<li><a href=\"https://github.com/postcss/autoprefixer/commit/616c44240a1478e54d8b7bc79ed8fa5db6392d11\"><code>Simplify CI config</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/9035","RelatedDescription":"Closed or merged PR \"Update autoprefixer: 10.4.7 → 10.4.8 (patch)\" (#9035)"},{"Id":"1327305211","IsPullRequest":false,"CreatedAt":"2022-08-04T20:03:25","Actor":"dcastil","Number":"9016","RawContent":null,"Title":"Using CSS variable or alpha-value in `theme.ringColor.DEFAULT` doesn't work","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.1.7\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nvite 3.0.4\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv14.14.0\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/V7MWdx7jh3\r\n\r\n**Describe your issue**\r\n\r\nUsing a CSS variable for `theme.ringColor.DEFAULT` in the Tailwind config makes Tailwind use its default value instead of the specified one.\r\n\r\nNone of these values work:\r\n- `rgb(var(--primary, 113 97 236) / <alpha-value>)`\r\n- `rgb(var(--primary, 113 97 236))`\r\n- `var(--primary, rgb(113 97 236))`\r\n- `rgb(113 97 236 / <alpha-value>)`","Url":"https://github.com/tailwindlabs/tailwindcss/issues/9016","RelatedDescription":"Closed issue \"Using CSS variable or alpha-value in `theme.ringColor.DEFAULT` doesn't work\" (#9016)"},{"Id":"1327281596","IsPullRequest":false,"CreatedAt":"2022-08-04T19:16:20","Actor":"Triloworld","Number":"9015","RawContent":null,"Title":"Separator not forcing usage","State":"closed","Body":"Tailwind not forced on use of different separator\r\nLive example have same issue: https://play.tailwindcss.com/3Ic58ImPqc (styles apply which is bug)\r\n\r\nSeparator is required to separate added styles from other existing systems\r\n\r\nMaybe this is because of weird one? Then need to be some documentation what is allowed","Url":"https://github.com/tailwindlabs/tailwindcss/issues/9015","RelatedDescription":"Closed issue \"Separator not forcing usage\" (#9015)"},{"Id":"1329034573","IsPullRequest":false,"CreatedAt":"2022-08-04T18:53:18","Actor":"DavidWhit","Number":"9028","RawContent":null,"Title":"Drop-Shadow class breaks child absolute positioning","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\nv3.1.7\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\"postcss\": \"^8.4.14\", \"node\": \"16.9.0\", svelte kit\r\n\r\n**What version of Node.js are you using?**\r\n \"node\": \"16.9.0\"\r\n\r\n**What browser are you using?**\r\nChrome latest \r\n\r\n**What operating system are you using?**\r\nWindows 10\r\n\r\n```\r\n\r\n<div class=\"drop-shadow-sm\">\r\n    <div class=\" grid grid-cols-3 gap-1 place-items-center\">\r\n    <h1 class=\"text-xl\">A</h1>\r\n    <h1 class=\"text-xl\">B</h1>\r\n    <h1 class=\"text-xl\">C</h1>\r\n    <div class=\"fixed bottom-0 left-0 ...\">\r\n          </div>\r\n          <label for=\"my-modal\" class=\"btn modal-button h-9 btn-sm w-24 bg-red-500 hover:bg-gray-700  hover:text-white text-white\">\r\n            <i class=\"fa-duotone fa-trash mr-1\"></i>\r\n            Delete\r\n            </label> \r\n            <input type=\"checkbox\" id=\"my-modal\" class=\"modal-toggle\" />\r\n            <div class=\"modal\">\r\n            <div class=\"modal-box\">\r\n                <h3 class=\"font-bold text-lg\">Are you sure?</h3>\r\n                <div class=\"modal-action\">\r\n                <label for=\"my-modal\" class=\"btn btn-sm w-24 bg-green-500 text-white hover:bg-gray-700 hover:text-white\" on:click={()=> console.log(\"asdfasdf\")}>\r\n                    <i class=\"fa-duotone fa-square-check mr-1\"></i>\r\n                    Yes</label>\r\n                <label for=\"my-modal\" class=\"btn btn-sm w-24 bg-red-500 text-white hover:bg-gray-700 hover:text-white\">\r\n                    <i class=\"fa-duotone fa-square-x mr-1\"></i>\r\n                    No</label>\r\n                </div>\r\n            </div>\r\n            </div>\r\n    </div>\r\n</div>\r\n\r\n```\r\n**Describe your issue**\r\nWhen adding the drop-shadow to an element it breaks child absolute/fixed positioning.  \r\n\r\nDescribe the problem you're seeing, any important steps to reproduce and what behavior you expect instead.\r\nThe modal appears inside the div but should be absolute visible outside the parent. To get the expected result remove the drop-shadow from the top div.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/9028","RelatedDescription":"Closed issue \"Drop-Shadow class breaks child absolute positioning\" (#9028)"},{"Id":"1328790642","IsPullRequest":false,"CreatedAt":"2022-08-04T18:24:19","Actor":"innoscience","Number":"9023","RawContent":null,"Title":"When defining dash-prefixed utility classes in a @layer, using them in an @apply statement throws a build error","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nTailwind v3.1.7\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nTailwindcss CLI tool\r\n\r\n**What version of Node.js are you using?**\r\n\r\nNode v16.6.2\r\n\r\n**What browser are you using?**\r\n\r\nN/A, CLI issue\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nRepo with basic demo code: https://github.com/lform/tailwind-dash-demo\r\n\r\n**Describe your issue**\r\n\r\nWe're creating some utility classes in a `@layer utilities` layer that extend each other using `@apply` statements to create a simple header font-sizing system that utilizes modular scale. \r\n\r\nThe classes work fine except if you try to use a dash-prefixed class thats been defined in the utilites layer in one of the `@apply` statements. There are workarounds but they would break the consistency of using the dash-prefix for negative values that tailwind employs uniformly. We're building out some re-usable components and want to utilize those font-sizing classes in them so this is a bit of a hindrence. We've temporarily changed the syntax to `h-ms--1` to work around this but its not ideal as it doesnt obey the consistency.\r\n\r\nThe above repo has the full code demo but basically the following is the problem:\r\n\r\n```\r\n@layer utilities {\r\n\t.h-ms {\r\n\t\t/* Works fine */\r\n\t\t@apply font-header leading-tight;\r\n\t}\r\n\r\n\t.h-ms-1 {\r\n\t\t/* Works fine */\r\n\t\t@apply h-ms text-ms-1 font-bold;\r\n\t}\r\n\r\n\t.-h-ms-1 {\r\n\t\t/* Works fine, `-text-ms-1` is defined in the tailwind config */\r\n\t\t@apply h-ms -text-ms-1 font-bold;\r\n\t}\r\n\r\n\t.new-class {\r\n\t\t/* This throws the below error */\r\n\t\t@apply -h-ms-1 italic;\r\n\t}\r\n}\r\n```\r\n\r\nWhich then throws the following error (the error goes away if you remove the offending dash-prefixed item in question from the apply statement):\r\n```\r\nTypeError: Cannot read property 'parent' of undefined\r\n    at Root.normalize (/Users/bmf/sites/tailwind-dash-test/node_modules/postcss/lib/container.js:292:15)\r\n    at Root.normalize (/Users/bmf/sites/tailwind-dash-test/node_modules/postcss/lib/root.js:25:23)\r\n    at Root.insertAfter (/Users/bmf/sites/tailwind-dash-test/node_modules/postcss/lib/container.js:201:22)\r\n    at Rule.after (/Users/bmf/sites/tailwind-dash-test/node_modules/postcss/lib/node.js:161:17)\r\n    at processApply (/Users/bmf/sites/tailwind-dash-test/node_modules/tailwindcss/lib/lib/expandApplyAtRules.js:453:16)\r\n    at /Users/bmf/sites/tailwind-dash-test/node_modules/tailwindcss/lib/lib/expandApplyAtRules.js:471:9\r\n    at /Users/bmf/sites/tailwind-dash-test/node_modules/tailwindcss/lib/processTailwindFeatures.js:55:50\r\n    at Object.Once (/Users/bmf/sites/tailwind-dash-test/node_modules/tailwindcss/lib/cli.js:682:27)\r\n    at LazyResult.runOnRoot (/Users/bmf/sites/tailwind-dash-test/node_modules/postcss/lib/lazy-result.js:337:23)\r\n    at LazyResult.runAsync (/Users/bmf/sites/tailwind-dash-test/node_modules/postcss/lib/lazy-result.js:393:26)\r\n```\r\n\r\nIs there another way to approach this that would work? Not sure if this is a bug, expected or the wrong way to create these utility classes. Open to suggestions if there's a more correct approach, was unable to find any help when searching this issue online.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/9023","RelatedDescription":"Closed issue \"When defining dash-prefixed utility classes in a @layer, using them in an @apply statement throws a build error\" (#9023)"},{"Id":"1329021730","IsPullRequest":true,"CreatedAt":"2022-08-04T18:24:18","Actor":"thecrypticace","Number":"9027","RawContent":null,"Title":"Fix `@apply` of user utilities when negative and non-negative versions both exist","State":"closed","Body":"`-foo-1` and `foo-1` are both matches for the class `-foo-1` but `@apply` only wants the first one. It would remove the second one and cause an error because it’s an entirely separate match that had its only rule removed 😱 \r\n\r\nFixes #9023","Url":"https://github.com/tailwindlabs/tailwindcss/pull/9027","RelatedDescription":"Closed or merged PR \"Fix `@apply` of user utilities when negative and non-negative versions both exist\" (#9027)"},{"Id":"1328855509","IsPullRequest":true,"CreatedAt":"2022-08-04T15:59:11","Actor":"depfu[bot]","Number":"9025","RawContent":null,"Title":"Update prettier-plugin-tailwindcss: 0.1.12 → 0.1.13 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n#### ✳️ prettier-plugin-tailwindcss (0.1.12 → 0.1.13)\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/9025","RelatedDescription":"Closed or merged PR \"Update prettier-plugin-tailwindcss: 0.1.12 → 0.1.13 (minor)\" (#9025)"},{"Id":"1328237571","IsPullRequest":false,"CreatedAt":"2022-08-04T12:48:47","Actor":"federicocappellotto97","Number":"9021","RawContent":null,"Title":"Class delay-0 doesn't exist","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n3.1.7\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nTailwind CLI\r\n\r\n**What version of Node.js are you using?**\r\n\r\n14.18.3\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Describe your issue**\r\n\r\nDelay class' docs says to use the class **hover:delay-0** but the class delay-0 doesn't exist, so it doesn't work. I need to use delay-[0s]","Url":"https://github.com/tailwindlabs/tailwindcss/issues/9021","RelatedDescription":"Closed issue \"Class delay-0 doesn't exist\" (#9021)"},{"Id":"1327738267","IsPullRequest":false,"CreatedAt":"2022-08-03T20:49:09","Actor":"Lancelotbronner","Number":"9019","RawContent":null,"Title":"Unable to run CLI, access error for something it really shouldn't be accessing","State":"closed","Body":"### Discussed in https://github.com/tailwindlabs/tailwindcss/discussions/9005\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **Lancelotbronner** August  1, 2022</sup>\r\nOn running the following command (on macOS):\r\n\r\n```console\r\nnpx tailwindcss -i tailwind.src.css -o wwwroot/css/tailwind.out.css\r\n```\r\n\r\nWith the following `package.json`:\r\n\r\n```json\r\n{\r\n  \"devDependencies\": {\r\n    \"tailwindcss\": \"^3.1.7\"\r\n  }\r\n}\r\n```\r\n\r\nI get the following error, the CLI cannot access my backup drive, something it really shouldn't be trying to scan.\r\n\r\n```\r\nnode:fs:1450\r\n  handleErrorFromBinding(ctx);\r\n  ^\r\n\r\nError: EACCES: permission denied, scandir '/Volumes/MyBackupDrive'\r\n    at Object.readdirSync (node:fs:1450:3)\r\n    at readdirWithFileTypes (/[redacted]/node_modules/@nodelib/fs.scandir/out/providers/sync.js:16:33)\r\n    at Object.read (/[redacted]/node_modules/@nodelib/fs.scandir/out/providers/sync.js:10:16)\r\n    at SyncReader.scandirSync [as _scandir] (/[redacted]/node_modules/@nodelib/fs.scandir/out/index.js:18:17)\r\n    at SyncReader._handleDirectory (/[redacted]/node_modules/@nodelib/fs.walk/out/readers/sync.js:28:34)\r\n    at SyncReader._handleQueue (/[redacted]/node_modules/@nodelib/fs.walk/out/readers/sync.js:23:18)\r\n    at SyncReader.read (/[redacted]/node_modules/@nodelib/fs.walk/out/readers/sync.js:15:14)\r\n    at SyncProvider.read (/[redacted]/node_modules/@nodelib/fs.walk/out/providers/sync.js:11:29)\r\n    at ReaderSync.walkSync [as _walkSync] (/[redacted]/node_modules/@nodelib/fs.walk/out/index.js:20:21)\r\n    at ReaderSync.dynamic (/[redacted]/node_modules/fast-glob/out/readers/sync.js:13:21) {\r\n  errno: -13,\r\n  syscall: 'scandir',\r\n  code: 'EACCES',\r\n  path: '/Volumes/MyBackupDrive'\r\n}\r\n\r\nNode.js v18.4.0\r\n```</div>","Url":"https://github.com/tailwindlabs/tailwindcss/issues/9019","RelatedDescription":"Closed issue \"Unable to run CLI, access error for something it really shouldn't be accessing\" (#9019)"},{"Id":"1327277043","IsPullRequest":false,"CreatedAt":"2022-08-03T15:39:06","Actor":"Triloworld","Number":"9014","RawContent":null,"Title":"CDN: disabling core plugins not working","State":"closed","Body":"Container core plugin is used even if disabled in settings\r\n\r\n```html\r\n    <script src=\"https://cdn.tailwindcss.com\"></script>\r\n    <script>\r\n      tailwind.config = {\r\n        separator: '§',\r\n        corePlugins: {\r\n          container: false,\r\n        },\r\n        theme: {\r\n          container: {\r\n            center: true,\r\n            padding: {\r\n              DEFAULT: '15px',\r\n            },\r\n            screens: {\r\n              sm: '1536px',\r\n              md: '1536px',\r\n              lg: '1536px',\r\n              xl: '1536px',\r\n            },\r\n          },\r\n    </script>\r\n```\r\n\r\nLive is same as no settings:\r\n<img width=\"417\" alt=\"Zrzut ekranu 2022-08-3 o 16 00 21\" src=\"https://user-images.githubusercontent.com/2671726/182627333-140d6759-5a8d-435f-95ef-f97b67bbc9c1.png\">\r\n\r\nPlay version is compiling styles and problem exist only in cdn version\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/9014","RelatedDescription":"Closed issue \"CDN: disabling core plugins not working\" (#9014)"},{"Id":"1327048476","IsPullRequest":false,"CreatedAt":"2022-08-03T11:21:59","Actor":"Alvinnn1","Number":"9010","RawContent":null,"Title":"Disable color form rgba to hex","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nFor example: v3.1.2\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nFor example: react@18 vitejs@2.8.6\r\n\r\n**What version of Node.js are you using?**\r\n\r\nFor example: v16.16.0\r\n\r\n**What browser are you using?**\r\n\r\nFor example: Chrome\r\n\r\n**What operating system are you using?**\r\n\r\nFor example: macOS 12.1\r\n\r\n**Describe your issue**\r\n\r\nDescribe the problem you're seeing, any important steps to reproduce and what behavior you expect instead\r\n1. When i define some custom color with rgba in tailwind.config.js\r\n```\r\nmodule.exports = {\r\n  content: [\r\n    // Example content paths...\r\n    './public/**/*.html',\r\n    './src/**/*.{js,jsx,ts,tsx,vue}',\r\n  ],\r\n  theme: {\r\n    extend: {\r\n      colors: {\r\n        'font-primary': 'rgba(51, 51, 64, 0.88)',\r\n        'font-secondary': 'rgba(71, 71, 101, 0.55)',\r\n        'font-tertiary': 'rgba(58, 58, 89, 0.33)',\r\n        'font-quarternary': 'rgba(61, 61, 89, 0.18)',\r\n      },\r\n    },\r\n  },\r\n}\r\n```\r\n2. Use in jsx\r\n`<p className=\"text-font-quarternary\">User</p>`\r\n3. Work as expect in develop env\r\n![2967AE02-266B-41B5-9B63-DD2A7E8E50BB](https://user-images.githubusercontent.com/13961032/182590764-9d0546ad-bd8b-4339-86a6-164400de92c4.png)\r\n4. Transfromed rrggbbaa(hex) after build in production env\r\n![14751D1B-90B3-497A-9682-801628348EAA](https://user-images.githubusercontent.com/13961032/182591524-dcd5737e-03e8-4394-ab8c-bd45a50c040b.png)\r\n5. I just want to use rgba color instead of hex(In fact, rrggbbaa color does not working in some broswer).So Is there some way i can disable this option? THANKS\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/9010","RelatedDescription":"Closed issue \"Disable color form rgba to hex\" (#9010)"},{"Id":"1325994826","IsPullRequest":true,"CreatedAt":"2022-08-02T15:13:04","Actor":"thecrypticace","Number":"9008","RawContent":null,"Title":"Fix resolution of alpha values inside color functions","State":"closed","Body":"The default config in Tailwind CSS makes `theme.colors` a function that gets resolved. This coupled with a single-level custom color function or alpha value didn't work (e.g. `theme('colors.primary / 50%')`) whereas colors with 2+ levels worked fine. This was caused by an off-by-1 error when determining whether or not things needed to be resolved as a function.\r\n\r\n> There are 2 hard problems in computer science: cache invalidation, naming things, and off-by-1 errors.\r\n\r\nFixes #8991","Url":"https://github.com/tailwindlabs/tailwindcss/pull/9008","RelatedDescription":"Closed or merged PR \"Fix resolution of alpha values inside color functions\" (#9008)"},{"Id":"1324101944","IsPullRequest":false,"CreatedAt":"2022-08-01T10:54:39","Actor":"dmitry-lomakin","Number":"9002","RawContent":null,"Title":"\"info - Tailwind CSS is watching for changes...\" is duplicated in the CLI output","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv3.0.0\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nAngular CLI + @angular-builders/custom-webpack:browser\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv12.22.12\r\n\r\n**What browser are you using?**\r\n\r\nN/A\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nN/A\r\n\r\n**Describe your issue**\r\n\r\nHello there!\r\n\r\nI'm trying to utilize TailwindCSS in my Angular project and noticed that a dev process (the one that's watching for file changes) started to fail with OOM error. When I rename my `tailwind.config.js` file (to disable TailwindCSS watcher) I get no OOM even if the process continues working for hours.\r\n\r\nOne suspicious thing that I'm noticing when watching CLI output is these lines:\r\n```\r\n[watch] - Generating browser application bundles...\r\n[watch]\r\n[watch] info - Tailwind CSS is watching for changes...\r\ninfo - https://tailwindcss.com/docs/just-in-time-mode#watch-mode-and-one-off-builds\r\n[watch]\r\n[watch] info - Tailwind CSS is watching for changes...\r\n[watch] info - https://tailwindcss.com/docs/just-in-time-mode#watch-mode-and-one-off-builds\r\n```\r\n\r\nCan you please help me understand and come up with a fix for the issue? I really love the TailwindCSS concept but these OOMs are driving me crazy.\r\n\r\nThanks! ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/9002","RelatedDescription":"Closed issue \"\"info - Tailwind CSS is watching for changes...\" is duplicated in the CLI output\" (#9002)"},{"Id":"1323474895","IsPullRequest":true,"CreatedAt":"2022-07-31T14:51:10","Actor":"jeetto","Number":"9000","RawContent":null,"Title":"Centered the project name","State":"closed","Body":"A centered project name makes documentation much better looking and appealing.\r\n\r\n<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/9000","RelatedDescription":"Closed or merged PR \"Centered the project name\" (#9000)"},{"Id":"1323425579","IsPullRequest":false,"CreatedAt":"2022-07-31T10:44:38","Actor":"jabed-dev","Number":"8998","RawContent":null,"Title":"Failed to compile. Global CSS cannot be imported from within node_modules.","State":"closed","Body":"I'd run the project with 'yarn dev' but it's an error. How can I solve the problem?\r\n\r\n![image](https://user-images.githubusercontent.com/59810760/182012865-a97a1c94-0071-422b-979a-2ad96afbf76d.png)\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/8998","RelatedDescription":"Closed issue \"Failed to compile. Global CSS cannot be imported from within node_modules.\" (#8998)"},{"Id":"1323264289","IsPullRequest":true,"CreatedAt":"2022-07-30T19:14:55","Actor":"depfu[bot]","Number":"8996","RawContent":null,"Title":"Update eslint: 8.19.0 → 8.20.0 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n#### ✳️ eslint (8.19.0 → 8.20.0) · [Repo](https://github.com/eslint/eslint) · [Changelog](https://github.com/eslint/eslint/blob/main/CHANGELOG.md)\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/eslint/eslint/releases/tag/v8.20.0\">8.20.0</a></h4>\n\n<blockquote><h2 dir=\"auto\">Features</h2>\n<ul dir=\"auto\">\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/ca83178b18cd5d649bd52a20aef8f8b3f48d3085\"><code class=\"notranslate\">ca83178</code></a> feat: catch preprocess errors (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16105\">#16105</a>) (JounQin)</li>\n</ul>\n<h2 dir=\"auto\">Bug Fixes</h2>\n<ul dir=\"auto\">\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/30be0ed4d84dd436e6c2e345e264c10b2bd37308\"><code class=\"notranslate\">30be0ed</code></a> fix: no-warning-comments rule escapes special RegEx characters in terms (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16090\">#16090</a>) (Lachlan Hunt)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/bfe5e884098874bb512609bcd94a5e5ed797839d\"><code class=\"notranslate\">bfe5e88</code></a> fix: ignore spacing before <code class=\"notranslate\">]</code> and <code class=\"notranslate\">}</code> in comma-spacing (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16113\">#16113</a>) (Milos Djermanovic)</li>\n</ul>\n<h2 dir=\"auto\">Documentation</h2>\n<ul dir=\"auto\">\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/845c4f40274ccb3727c624db44c7a23aafa71318\"><code class=\"notranslate\">845c4f4</code></a> docs: Add website team details (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16115\">#16115</a>) (Nicholas C. Zakas)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/5a0dfdb9938ffdcea52047466bac11ea983f4b29\"><code class=\"notranslate\">5a0dfdb</code></a> docs: Link to blog post in no-constant-binary-expression (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16112\">#16112</a>) (Jordan Eldredge)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/bc692a9bf5c664c646ce386eff44eb706c231127\"><code class=\"notranslate\">bc692a9</code></a> docs: remove install command (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16084\">#16084</a>) (Strek)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/49ca3f090425e06fdf6e66bcf2415508c46671e1\"><code class=\"notranslate\">49ca3f0</code></a> docs: don't show toc when content not found (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16095\">#16095</a>) (Amaresh  S M)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/ba19e3f80a32ceae82e0ed6c0acf16061d8370da\"><code class=\"notranslate\">ba19e3f</code></a> docs: enhance 404 page UI (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16097\">#16097</a>) (Amaresh  S M)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/a75d3b47b84f59c080c0c8301ae859fa64aa0f0f\"><code class=\"notranslate\">a75d3b4</code></a> docs: remove unused meta.docs.category field in working-with-rules page (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16109\">#16109</a>) (Brandon Scott)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/cdc020639022dd931863460273de61f4ed4ce0f8\"><code class=\"notranslate\">cdc0206</code></a> docs: add formatters page edit link (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16094\">#16094</a>) (Amaresh  S M)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/4d1ed22dede531108c8a7899d513f64f0662c135\"><code class=\"notranslate\">4d1ed22</code></a> docs: preselect default theme (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16098\">#16098</a>) (Strek)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/4b79612f0bdf860142401033f32fe9a5b8cd7d03\"><code class=\"notranslate\">4b79612</code></a> docs: add missing correct/incorrect containers (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16087\">#16087</a>) (Milos Djermanovic)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/09f6acbf2136e3084a3174607ab29a48d5d519b0\"><code class=\"notranslate\">09f6acb</code></a> docs: fix UI bug on rules index and details pages (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16082\">#16082</a>) (Deepshika S)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/f5db264931fd6259e064b5cf24b4233f5aaa4c7d\"><code class=\"notranslate\">f5db264</code></a> docs: remove remaining duplicate rule descriptions (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16093\">#16093</a>) (Milos Djermanovic)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/32a6b2a5caae8fa3734dfbdb9640bb4963fc5f4f\"><code class=\"notranslate\">32a6b2a</code></a> docs: Add scroll behaviour smooth (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16056\">#16056</a>) (Amaresh  S M)</li>\n</ul>\n<h2 dir=\"auto\">Chores</h2>\n<ul dir=\"auto\">\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/bbf8df41c901d41753ca4f3f0baf021944782597\"><code class=\"notranslate\">bbf8df4</code></a> chore: Mark autogenerated release blog post as draft (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16130\">#16130</a>) (Nicholas C. Zakas)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/eee43067f635c0ec3b61e416f47849029d12268d\"><code class=\"notranslate\">eee4306</code></a> chore: update internal lint dependencies (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16088\">#16088</a>) (Bryan Mishkin)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/9615a42c9f065188024423a28b603cb93dad18d4\"><code class=\"notranslate\">9615a42</code></a> chore: update formatter examples template to avoid markdown lint error (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16085\">#16085</a>) (Milos Djermanovic)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/62541edf5843ff8e01f14f870701d5df0b2c1cb5\"><code class=\"notranslate\">62541ed</code></a> chore: fix markdown linting error (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16083\">#16083</a>) (唯然)</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/eslint/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/eslint/eslint/compare/568af4e90b458c4c30dd666a864ba5ad14844a3c...0bcd2255c40b5c115a95181864776b0dd456c2dc\">See the full diff on Github</a>. The new version differs by 21 commits:</p>\n<ul>\n<li><a href=\"https://github.com/eslint/eslint/commit/0bcd2255c40b5c115a95181864776b0dd456c2dc\"><code>8.20.0</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/2a91fb66af91012da36a0ba678d411dbf1a03293\"><code>Build: changelog update for 8.20.0</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/bbf8df41c901d41753ca4f3f0baf021944782597\"><code>chore: Mark autogenerated release blog post as draft (#16130)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/845c4f40274ccb3727c624db44c7a23aafa71318\"><code>docs: Add website team details (#16115)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/5a0dfdb9938ffdcea52047466bac11ea983f4b29\"><code>docs: Link to blog post in no-constant-binary-expression (#16112)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/bc692a9bf5c664c646ce386eff44eb706c231127\"><code>docs: remove install command (#16084)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/30be0ed4d84dd436e6c2e345e264c10b2bd37308\"><code>fix: no-warning-comments rule escapes special RegEx characters in terms (#16090)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/ca83178b18cd5d649bd52a20aef8f8b3f48d3085\"><code>feat: catch preprocess errors (#16105)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/49ca3f090425e06fdf6e66bcf2415508c46671e1\"><code>docs: don&#39;t show toc when content not found (#16095)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/ba19e3f80a32ceae82e0ed6c0acf16061d8370da\"><code>docs: enhance 404 page UI (#16097)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/bfe5e884098874bb512609bcd94a5e5ed797839d\"><code>fix: ignore spacing before `]` and `}` in comma-spacing (#16113)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/a75d3b47b84f59c080c0c8301ae859fa64aa0f0f\"><code>docs: remove unused meta.docs.category field in working-with-rules page (#16109)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/cdc020639022dd931863460273de61f4ed4ce0f8\"><code>docs: add formatters page edit link (#16094)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/4d1ed22dede531108c8a7899d513f64f0662c135\"><code>docs: preselect default theme (#16098)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/4b79612f0bdf860142401033f32fe9a5b8cd7d03\"><code>docs: add missing correct/incorrect containers (#16087)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/09f6acbf2136e3084a3174607ab29a48d5d519b0\"><code>docs: fix UI bug on rules index and details pages (#16082)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/f5db264931fd6259e064b5cf24b4233f5aaa4c7d\"><code>docs: remove remaining duplicate rule descriptions (#16093)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/32a6b2a5caae8fa3734dfbdb9640bb4963fc5f4f\"><code>docs: Add scroll behaviour smooth (#16056)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/eee43067f635c0ec3b61e416f47849029d12268d\"><code>chore: update internal lint dependencies (#16088)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/9615a42c9f065188024423a28b603cb93dad18d4\"><code>chore: update formatter examples template to avoid markdown lint error (#16085)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/62541edf5843ff8e01f14f870701d5df0b2c1cb5\"><code>chore: fix markdown linting error (#16083)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/8996","RelatedDescription":"Closed or merged PR \"Update eslint: 8.19.0 → 8.20.0 (minor)\" (#8996)"},{"Id":"1323019126","IsPullRequest":false,"CreatedAt":"2022-07-30T13:55:47","Actor":"Seaniak","Number":"8993","RawContent":null,"Title":"Extended rem value not applied without space","State":"closed","Body":"Next.js project using version 12.1.6 and tailwindcss version ^3.0.24.\r\n\r\nI have extended a few properties in tailwind.config.js, when extending the minHeight like so: \r\n\r\n```\r\nminHeight: {\r\n  20: '5 rem',\r\n  'product-preview': '85 rem',\r\n},\r\n```\r\n\r\nThe rem is applied, but it is **not** applied when setting it like this (as the documentation suggests):\r\n```\r\nminHeight: {\r\n  20: '5rem',\r\n  'product-preview': '85rem',\r\n},\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/8993","RelatedDescription":"Closed issue \"Extended rem value not applied without space\" (#8993)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-08-11T03:30:29.5431433Z","RunDurationInMilliseconds":656}