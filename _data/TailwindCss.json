{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2964905827","IsPullRequest":false,"CreatedAt":"2025-04-02T01:32:34","Actor":"sntran","Number":"17495","RawContent":null,"Title":"[v4] Combine `has` with `only` and custom variant","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.17\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/U8YlnE1BtV\n\n**Describe your issue**\n\nWhen combining multiple variants, not sure which order would work. In this case, I have a custom variant to select a link, and I try to style any element that has only link inside. `has-link` works fine, as well as `has-only`, but other cases I try do not work, i.e., `has-only-link`, `has-link-only`, `only-has-link`.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17495","RelatedDescription":"Open issue \"[v4] Combine `has` with `only` and custom variant\" (#17495)"},{"Id":"2964581546","IsPullRequest":false,"CreatedAt":"2025-04-01T21:09:35","Actor":"liborjelinek","Number":"17494","RawContent":null,"Title":"v4.1.0 CLI does not put @import at the beginning","State":"open","Body":"Few minutes ago released v4.1.0 generated broken CSS. `@import URL()` like for Google Fonts are not preserved at the top when they are at the top of `input.css`.\n\ninput.css:\n```\n@import url(\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700;800;900&display=fallback\");\n@import \"tailwindcss\";\n...\n```\n\noutput.css in v4.1.0 (incorrect):\n```\n/*! tailwindcss v4.1.0 | MIT License | https://tailwindcss.com */\n@supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {\n  @layer base {\n    *, ::before, ::after, ::backdrop {\n      --tw-translate-x: 0;\n      --tw-translate-y: 0;\n      --tw-translate-z: 0;\n      --tw-scale-x: 1;\n      --tw-scale-y: 1;\n      --tw-scale-z: 1;\n      --tw-rotate-x: rotateX(0);\n      --tw-rotate-y: rotateY(0);\n      --tw-rotate-z: rotateZ(0);\n      --tw-skew-x: skewX(0);\n      --tw-skew-y: skewY(0);\n      --tw-space-y-reverse: 0;\n      --tw-space-x-reverse: 0;\n      --tw-border-style: solid;\n      --tw-gradient-position: initial;\n      --tw-gradient-from: #0000;\n      --tw-gradient-via: #0000;\n      --tw-gradient-to: #0000;\n      --tw-gradient-stops: initial;\n      --tw-gradient-via-stops: initial;\n      --tw-gradient-from-position: 0%;\n      --tw-gradient-via-position: 50%;\n      --tw-gradient-to-position: 100%;\n      --tw-leading: initial;\n      --tw-font-weight: initial;\n      --tw-tracking: initial;\n      --tw-ordinal: initial;\n      --tw-slashed-zero: initial;\n      --tw-numeric-figure: initial;\n      --tw-numeric-spacing: initial;\n      --tw-numeric-fraction: initial;\n      --tw-shadow: 0 0 #0000;\n      --tw-shadow-color: initial;\n      --tw-shadow-alpha: 100%;\n      --tw-inset-shadow: 0 0 #0000;\n      --tw-inset-shadow-color: initial;\n      --tw-inset-shadow-alpha: 100%;\n      --tw-ring-color: initial;\n      --tw-ring-shadow: 0 0 #0000;\n      --tw-inset-ring-color: initial;\n      --tw-inset-ring-shadow: 0 0 #0000;\n      --tw-ring-inset: initial;\n      --tw-ring-offset-width: 0px;\n      --tw-ring-offset-color: #fff;\n      --tw-ring-offset-shadow: 0 0 #0000;\n      --tw-blur: initial;\n      --tw-brightness: initial;\n      --tw-contrast: initial;\n      --tw-grayscale: initial;\n      --tw-hue-rotate: initial;\n      --tw-invert: initial;\n      --tw-opacity: initial;\n      --tw-saturate: initial;\n      --tw-sepia: initial;\n      --tw-drop-shadow: initial;\n      --tw-drop-shadow-color: initial;\n      --tw-drop-shadow-alpha: 100%;\n      --tw-drop-shadow-size: initial;\n      --tw-backdrop-blur: initial;\n      --tw-backdrop-brightness: initial;\n      --tw-backdrop-contrast: initial;\n      --tw-backdrop-grayscale: initial;\n      --tw-backdrop-hue-rotate: initial;\n      --tw-backdrop-invert: initial;\n      --tw-backdrop-opacity: initial;\n      --tw-backdrop-saturate: initial;\n      --tw-backdrop-sepia: initial;\n      --tw-duration: initial;\n      --tw-ease: initial;\n      --tw-content: \"\";\n    }\n  }\n}\n@import url(\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700;800;900&display=fallback\");\n@import url(\"https://fonts.googleapis.com/css2?family=Rubik:ital,wght@0,400;0,700;1,400;1,700&display=swap\");\n@import url(\"vendors/aos.css\");\n@layer theme, base, components, utilities;\n@layer theme {\n  :root, :host {\n...\n```\n\nbut v4.0.17 generates (correct):\n\n```\n/*! tailwindcss v4.0.17 | MIT License | https://tailwindcss.com */\n@import url(\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700;800;900&display=fallback\");\n@import url(\"https://fonts.googleapis.com/css2?family=Rubik:ital,wght@0,400;0,700;1,400;1,700&display=swap\");\n@import url(\"vendors/aos.css\");\n@layer theme, base, components, utilities;\n@layer theme {\n...\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17494","RelatedDescription":"Open issue \"v4.1.0 CLI does not put @import at the beginning\" (#17494)"},{"Id":"2964569989","IsPullRequest":true,"CreatedAt":"2025-04-01T21:02:58","Actor":"RobinMalfait","Number":"17493","RawContent":null,"Title":"Inject polyfills after `@import` and body-less `@layer`","State":"open","Body":"This PR fixes an issue where polyfills were injected at the top, but they should be after `@import` and body-less `@layer` rules.\r\n\r\nThis is necessary in case you are using Google fonts like this for example:\r\n```css\r\n@import url('https://fonts.google.com');\r\n@import \"tailwindcss\";\r\n```\r\n\r\nWhile the `@import url(…);` sits above `@import \"tailwindcss\";` in the final generated CSS we injected the polyfills at the very beginning.\r\n\r\nThis PR will inject the polyfills after the first AST Node that is not:\r\n1. A comment\r\n2. An external import — `@import url(…)`\r\n3. A body-less layer — `@layer foo, bar, baz;`\r\n\r\nThe snapshots look a little confusing, but that's because Lightning CSS is optimizing the output and moving things around a bit:\r\n\r\n<img width=\"1482\" alt=\"image\" src=\"https://github.com/user-attachments/assets/a0552c8b-93df-4e1d-ad90-8b8abf9492b1\" />\r\n\r\n[Lightning CSS Playground](https://lightningcss.dev/playground/index.html#%7B%22minify%22%3Afalse%2C%22customMedia%22%3Atrue%2C%22cssModules%22%3Afalse%2C%22analyzeDependencies%22%3Afalse%2C%22targets%22%3A%7B%22chrome%22%3A6225920%7D%2C%22include%22%3A0%2C%22exclude%22%3A0%2C%22source%22%3A%22%40layer%20theme%2C%20base%2C%20components%2C%20utilities%3B%5Cn%5Cn%40supports%20(((-webkit-hyphens%3A%20none))%20and%20(not%20(margin-trim%3A%20inline)))%20or%20((-moz-orient%3A%20inline)%20and%20(not%20(color%3A%20rgb(from%20red%20r%20g%20b))))%20%7B%5Cn%20%20%40layer%20base%20%7B%5Cn%20%20%20%20*%2C%20%3Abefore%2C%20%3Aafter%2C%20%3A%3Abackdrop%20%7B%5Cn%20%20%20%20%20%20--tw-font-weight%3A%20initial%3B%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%7D%5Cn%5Cn%40layer%20theme%20%7B%5Cn%20%20%3Aroot%2C%20%3Ahost%20%7B%5Cn%20%20%20%20--font-sans%3A%20ui-sans-serif%2C%20system-ui%2C%20sans-serif%2C%20%5C%22Apple%20Color%20Emoji%5C%22%2C%20%5C%22Segoe%20UI%20Emoji%5C%22%2C%20%5C%22Segoe%20UI%20Symbol%5C%22%2C%20%5C%22Noto%20Color%20Emoji%5C%22%3B%5Cn%20%20%20%20--font-mono%3A%20ui-monospace%2C%20SFMono-Regular%2C%20Menlo%2C%20Monaco%2C%20Consolas%2C%20%5C%22Liberation%20Mono%5C%22%2C%20%5C%22Courier%20New%5C%22%2C%20monospace%3B%5Cn%20%20%20%5Cn%20%20%7D%5Cn%7D%5Cn%5Cn%40layer%20base%20%7B%5Cn%20%20*%2C%20%3Aafter%2C%20%3Abefore%2C%20%3A%3Abackdrop%20%7B%5Cn%20%20%20%20box-sizing%3A%20border-box%3B%5Cn%20%20%20%20border%3A%200%20solid%3B%5Cn%20%20%20%20margin%3A%200%3B%5Cn%20%20%20%20padding%3A%200%3B%5Cn%20%20%7D%5Cn%7D%5Cn%5Cn%40layer%20utilities%20%7B%5Cn%20%20.text-2xl%20%7B%5Cn%20%20%20%20font-size%3A%20var(--text-2xl)%3B%5Cn%20%20%20%20line-height%3A%20var(--tw-leading%2C%20var(--text-2xl--line-height))%3B%5Cn%20%20%7D%5Cn%7D%5Cn%5Cn%40property%20--tw-font-weight%20%7B%5Cn%20%20syntax%3A%20%5C%22*%5C%22%3B%5Cn%20%20inherits%3A%20false%5Cn%7D%22%2C%22visitorEnabled%22%3Afalse%2C%22visitor%22%3A%22%7B%5Cn%20%20Color(color)%20%7B%5Cn%20%20%20%20if%20(color.type%20%3D%3D%3D%20'rgb')%20%7B%5Cn%20%20%20%20%20%20color.g%20%3D%200%3B%5Cn%20%20%20%20%20%20return%20color%3B%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%7D%22%2C%22unusedSymbols%22%3A%5B%5D%2C%22version%22%3A%22local%22%7D)\r\n\r\nFixes: #17494 \r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17493","RelatedDescription":"Open PR \"Inject polyfills after `@import` and body-less `@layer`\" (#17493)"},{"Id":"2964554087","IsPullRequest":false,"CreatedAt":"2025-04-01T20:55:05","Actor":"wongjn","Number":"17492","RawContent":null,"Title":"`@source inline(…)` incorrectly pads number values for unequal significant number ranges","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n`@tailwindcss/cli`\n\n**What version of Node.js are you using?**\n\nv20.11.0\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nUbuntu 20.04.6 LTS in WSL2\n\n**Reproduction URL**\n\nNot needed, see below.\n\n**Describe your issue**\n\nIn `packages/tailwindcss/src/utils/brace-expansion.test.ts`, add the following test:\n\n```css\n[\n  'z-{10..100..10}',\n  [\n    'z-10',\n    'z-20',\n    'z-30',\n    'z-40',\n    'z-50',\n    'z-60',\n    'z-70',\n    'z-80',\n    'z-90',\n    'z-100',\n  ],\n],\n```\nThe relevant test output is as follows:\n```diff\n FAIL  |tailwindcss| src/utils/brace-expansion.test.ts > expand(…) > should expand z-{10..100..10}\nAssertionError: expected [ 'z-010', 'z-020', 'z-030', …(7) ] to deeply equal [ 'z-10', 'z-100', 'z-20', …(7) ]\n\n- Expected\n+ Received\n\n  Array [\n-   \"z-10\",\n+   \"z-010\",\n+   \"z-020\",\n+   \"z-030\",\n+   \"z-040\",\n+   \"z-050\",\n+   \"z-060\",\n+   \"z-070\",\n+   \"z-080\",\n+   \"z-090\",\n    \"z-100\",\n-   \"z-20\",\n-   \"z-30\",\n-   \"z-40\",\n-   \"z-50\",\n-   \"z-60\",\n-   \"z-70\",\n-   \"z-80\",\n-   \"z-90\",\n  ]\n\n ❯ src/utils/brace-expansion.test.ts:81:34\n     79|     ['{1.1..2.2}', ['1.1..2.2']],*/\n     80|   ])('should expand %s', (input, expected) => {\n     81|     expect(expand(input).sort()).toEqual(expected.sort())\n       |                                  ^\n     82|   })\n     83| \n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17492","RelatedDescription":"Closed issue \"`@source inline(…)` incorrectly pads number values for unequal significant number ranges\" (#17492)"},{"Id":"2964539222","IsPullRequest":true,"CreatedAt":"2025-04-01T20:55:04","Actor":"philipp-spiess","Number":"17491","RawContent":null,"Title":"Disable padding in `@source inline(…)` brace expansion","State":"closed","Body":"Closes #17492\r\n\r\nThe padding code we had was incorrect as it would always pad on the largest string representation. So for an input like this:\r\n\r\n```\r\n@source inline(\"z-{10..100..10}\");\r\n```\r\n\r\nIt would create the following candidates: \r\n\r\n- `z-010`\r\n- `z-020`\r\n- `z-030`\r\n- `z-040`\r\n- `z-050`\r\n- `z-060`\r\n- `z-070`\r\n- `z-060`\r\n- `z-070`\r\n- `z-100`\r\n\r\nInstead of fixing the padding logic we realized that Tailwind utilities don't need padding at all so this PR removes this feature\r\n\r\n## Test plan\r\n\r\n- Added the following to the Vite playground: `@source inline(\"z-{10..100..10}\");`\r\n- Ensure it works: \r\n![image](https://github.com/user-attachments/assets/f4714729-4ef7-4678-a531-70b471e75e6e)\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17491","RelatedDescription":"Closed or merged PR \"Disable padding in `@source inline(…)` brace expansion\" (#17491)"},{"Id":"2964457980","IsPullRequest":false,"CreatedAt":"2025-04-01T20:10:35","Actor":"pmlk","Number":"17489","RawContent":null,"Title":"Arbitrary properties no longer work in v4.1.0","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n@tailwindcss/cli\n\n**What version of Node.js are you using?**\n\nv23.9.0\n\n**What browser are you using?**\n\nChrome, Safari, or N/A\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://github.com/pmlk/tailwindcss-issue-v4-1-0\n\n**Describe your issue**\n\nArbitrary properties no longer seem to work, e.g. `<h1 class=\"[background-color:red;]\">foo</h1>` will no longer render a red background on the element.\n\nSteps to reproduce with the reproduction repo:\n\n1. `npm run build`\n    * generates `dist/styles.css` and\n    * copies `src/index.html` to `dist/index.html`\n2. `open dist/index.html` \n    * background of the `<h1>` **is not red** but SHOULD be red\n4. edit the version of `@tailwindcss/cli` in `package.json` to `4.0.17`\n5. `npm update`\n6. `npm run build`\n7. `open dist/index.html`\n    * background of the `<h1>` **is red** as expected","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17489","RelatedDescription":"Closed issue \"Arbitrary properties no longer work in v4.1.0\" (#17489)"},{"Id":"2964463999","IsPullRequest":true,"CreatedAt":"2025-04-01T20:05:55","Actor":"RobinMalfait","Number":"17490","RawContent":null,"Title":"Ensure polyfills exist after external `@import` at-rules","State":"open","Body":"This PR fixes an issue where external `@import url(…)` at-rules were not at the top anymore due to the polyfills being pre-pended to the CSS output.\n\nTo solve this, we will inject a `@layer __tw-properties;` as a placeholder to at the top of the file. A body-less `@layer` is allowed to exist before any other rules in the file.\n\nLater we inject all the polyfills at the bottom of the file inside the `@layer __tw-polyfills;` at-rule.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17490","RelatedDescription":"Open PR \"Ensure polyfills exist after external `@import` at-rules\" (#17490)"},{"Id":"2963358454","IsPullRequest":true,"CreatedAt":"2025-04-01T16:05:18","Actor":"philipp-spiess","Number":"17483","RawContent":null,"Title":"Prepare 4.1.0 release","State":"closed","Body":"[ci-all]","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17483","RelatedDescription":"Closed or merged PR \"Prepare 4.1.0 release\" (#17483)"},{"Id":"2963505581","IsPullRequest":true,"CreatedAt":"2025-04-01T15:12:22","Actor":"RobinMalfait","Number":"17484","RawContent":null,"Title":"Refactor codemod structure","State":"closed","Body":"This PR is an internal refactor of the codemods package structure that will make a few follow-up PRs easier.\r\n\r\nEssentially what happens is:\r\n\r\n\r\n1. Moved `./src/template/` into `src/codemods/template/`\r\n2. Moved `./src/codemods` into `./src/codemods/css` (because the CSS related codemods already)\r\n3. Moved the migration files for the JS config, PostCSS config and Prettier config into `./src/codemods/config/`.\r\n4. Made filenames with actual migrations consistent by prefixing them with `migrate-`.\r\n5. Made sure that all the migration functions also use `migrate…`\r\n\r\nWhen looking at this PR, go commit by commit, it will be easier. In a lot of cases, it's just moving files around but those commits also come with changes to the code just to update the imports.\r\n\r\n[ci-all]\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17484","RelatedDescription":"Closed or merged PR \"Refactor codemod structure\" (#17484)"},{"Id":"2963321023","IsPullRequest":true,"CreatedAt":"2025-04-01T12:37:41","Actor":"AlemTuzlak","Number":"17482","RawContent":null,"Title":"feat: add ignore option to tailwind plugin","State":"open","Body":"Added an optional ignore flag for the tailwind plugin to ignore certain files and allow for easier configuration with other plugins\r\n\r\nNeeded for better interop with other plugins, eg:\r\nhttps://github.com/tailwindlabs/tailwindcss/discussions/16712","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17482","RelatedDescription":"Open PR \"feat: add ignore option to tailwind plugin\" (#17482)"},{"Id":"2963127955","IsPullRequest":true,"CreatedAt":"2025-04-01T11:55:42","Actor":"philipp-spiess","Number":"17476","RawContent":null,"Title":"Add `self-baseline-last`","State":"closed","Body":"This PR also adds a new `self-baseline-last` utility similar to `items-baseline-last` added previously. We've also discussed adding a `content-baseline-last` utility but since the browser support for this [is very limited](https://caniuse.com/mdn-css_properties_align-content_flex_context_last_baseline) and we weren't able to get this to do anything even in the supported browsers, we decided against it.\r\n\r\n## Test plan\r\n\r\nUpdated the utility tests.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17476","RelatedDescription":"Closed or merged PR \"Add `self-baseline-last`\" (#17476)"},{"Id":"2962838298","IsPullRequest":false,"CreatedAt":"2025-04-01T11:42:42","Actor":"senneclaeskens","Number":"17473","RawContent":null,"Title":"BG custom value incorrect generation in next.js build","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.17\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 15.2.4\n\n**What version of Node.js are you using?**\n\nv22.12.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nWindows\n\n[**Reproduction URL**](https://github.com/senneclaeskens/tailwind4-repro)\n\n**Describe your issue**\n\nSo I'm not sure if this is a tailwind or next issue.\nWhen running next dev, this is the generated CSS:\n\n![Image](https://github.com/user-attachments/assets/cc895ae7-db4d-4969-96d8-363086ff7d45)\n\n![Image](https://github.com/user-attachments/assets/78a659d5-692d-4528-9fe4-8fa61f476b6a)\n\nAll good.\n\nNow when running next build & next start, we see the following:\n\n![Image](https://github.com/user-attachments/assets/185945db-82c4-443e-aa75-3c4ddeda8869)\n\n![Image](https://github.com/user-attachments/assets/51bd6ea1-666a-4043-909c-d887908ac647)\n\nCenter gets replaced by 50% and the rem value is being ignored, which makes the CSS have an incorrect value.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17473","RelatedDescription":"Closed issue \"BG custom value incorrect generation in next.js build\" (#17473)"},{"Id":"2962904201","IsPullRequest":false,"CreatedAt":"2025-04-01T11:40:57","Actor":"yaowangmx","Number":"17474","RawContent":null,"Title":"Tailwindcss causes Vue2 project to stuck and stopped","State":"closed","Body":"What version of Tailwind CSS are you using?\n\n[v4.0.17](npm:@tailwindcss/postcss7-compat@^2.2.17)\n\nWhat build tool (or framework if it abstracts the build tool) are you using?\n\nvue-cli 4.5.0\n\nWhat version of Node.js are you using?\n\nv16\n\nWhat browser are you using?\n\nChromium 134.0.6998.178\n\nWhat operating system are you using?\n\nwin10\n\n\nWhen I removed Tailwind, the page was very smooth\n\nAfter investigation, it was found that I introduced @ tailwind utilities in tailwindcss.css;\n\n![Image](https://github.com/user-attachments/assets/1f662d42-a831-4de9-978d-d6829086b61b)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17474","RelatedDescription":"Closed issue \"Tailwindcss causes Vue2 project to stuck and stopped\" (#17474)"},{"Id":"2962100583","IsPullRequest":false,"CreatedAt":"2025-04-01T09:08:39","Actor":"fengshancui","Number":"17472","RawContent":null,"Title":" version 4.0, when configuring @theme colors, the names may be invalid if they are capitalized.","State":"closed","Body":"\nFor example, --color-5A45E0: #5A45E0; needs to be converted to --color-5a45e0: #5A45E0; to be displayed normally.\n\n@import \"tailwindcss\";\n@custom-variant dark (&:where([data-theme=dark], [data-theme=dark] *));\n@theme {\n  --color-5a45e0: #5A45E0;\n}\n\n\n<div className=\"className=\"p-4.5 text-3xl text-5a45e0 bg-DFDBFE rounded-xl\"\"></div>","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17472","RelatedDescription":"Closed issue \" version 4.0, when configuring @theme colors, the names may be invalid if they are capitalized.\" (#17472)"},{"Id":"2961877345","IsPullRequest":true,"CreatedAt":"2025-04-01T08:48:54","Actor":"depfu[bot]","Number":"17471","RawContent":null,"Title":"Update all of nextjs 15.2.3 → 15.2.4 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ eslint-config-next (15.2.3 → 15.2.4)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n#### ✳️ next (15.2.3 → 15.2.4) · [Repo](https://github.com/vercel/next.js)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/vercel/next.js/releases/tag/v15.2.4\">15.2.4</a></h4>\n\n<blockquote><div class=\"markdown-alert markdown-alert-note\" dir=\"auto\">\n<p class=\"markdown-alert-title\" dir=\"auto\"><svg class=\"octicon octicon-info mr-2\" viewbox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z\"></path></svg>Note</p>\n<p dir=\"auto\">This release is backporting bug fixes. It does <strong>not</strong> include all pending features/changes on canary.</p>\n</div>\n<h3 dir=\"auto\">Core Changes</h3>\n<ul dir=\"auto\">\n<li>Match subrequest handling for edge and node (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/77474\">#77474</a>)</li>\n<li>exclude images and static media from dev origin check (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/77417\">#77417</a>)</li>\n<li>ensure /__next middleware URLs are included in the origin check (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/77416\">#77416</a>)</li>\n<li>remove direct ip/port bypass in dev origin check (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/77414\">#77414</a>)</li>\n<li>switch development origin verification to be opt-in rather than opt-out (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/77395\">#77395</a>)</li>\n</ul>\n<h3 dir=\"auto\">Credits</h3>\n<p dir=\"auto\">Huge thanks to <a href=\"https://bounce.depfu.com/github.com/ijjk\">@ijjk</a> and <a href=\"https://bounce.depfu.com/github.com/ztanner\">@ztanner</a> for helping!</p></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/next/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/vercel/next.js/compare/535e26d3c69de49df8bd17618a424cbe65ec897b...804aa35c71cc65cf3ddc29cdadcd29f06b368285\">See the full diff on Github</a>. The new version differs by 6 commits:</p>\n<ul>\n<li><a href=\"https://github.com/vercel/next.js/commit/804aa35c71cc65cf3ddc29cdadcd29f06b368285\"><code>v15.2.4</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/ecb72ee9ead86aaa1e3992b427bfb43b046aa08d\"><code>Match subrequest handling for edge and node (#77474)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/25f810b596cdb6875d1f068ae8d203f1a5df7a46\"><code>exclude images and static media from dev origin check (#77417)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/d9bcb833dd2a8dd5c13f30775d688f7015cd75b1\"><code>ensure /__next middleware URLs are included in the origin check (#77416)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/cfeaa86fa718f1fecce9fb5f5fad3c310117fc53\"><code>remove direct ip/port bypass in dev origin check (#77414)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/f84730266087817b39c9b87c42ccf1c3bb7de0c5\"><code>switch development origin verification to be opt-in rather than opt-out (#77395)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17471","RelatedDescription":"Closed or merged PR \"Update all of nextjs 15.2.3 → 15.2.4 (patch)\" (#17471)"},{"Id":"2961028836","IsPullRequest":true,"CreatedAt":"2025-03-31T17:21:51","Actor":"RobinMalfait","Number":"17470","RawContent":null,"Title":"Ensure `webpack` executable is found in CI","State":"closed","Body":"This PR will fix CI on the main branch where `webpack` could not be found on macOS (but it worked on Linux).\n\nGoing to run [ci-all] to verify the changes.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17470","RelatedDescription":"Closed or merged PR \"Ensure `webpack` executable is found in CI\" (#17470)"},{"Id":"2960762734","IsPullRequest":true,"CreatedAt":"2025-03-31T16:44:06","Actor":"RobinMalfait","Number":"17467","RawContent":null,"Title":"Watch CSS module files for changes","State":"closed","Body":"This PR is a follow-up PR for: https://github.com/tailwindlabs/tailwindcss/pull/17433\r\n\r\nIn the other PR we allow scanning CSS files for extracting usages of CSS variables. This is important for `.module.css` files that reference these variables but aren't in the same big AST of the main CSS file.\r\n\r\nThis PR also makes sure to watch for changes in those registered CSS files and re-extract the variables when they change.\r\n\r\nThis PR took a bit longer than expected because I was trying to make sure that writing to `./dist/out.css` works without infinite-looping (e.g.: we had issues with this in Tailwind CSS v3 with webpack).\r\n\r\nBut I couldn't reproduce the issue at all. I did had some code that tried to detect if the CSS file contained license headers and skip in (because then it's very likely an output CSS file) but even without it the tests were fine.\r\n\r\nI setup integration tests with `@tailwindcss/cli` itself, and with tools that use webpack. Added a test for Next.js, and a dedicated webpack test as well.\r\n\r\nEven without tests, locally, I couldn't reproduce an infinite loop due to changes in an output CSS file...\r\n\r\nEventually dropped the code that tries to detect output CSS files.\r\n\r\nOne thing to keep in mind is that if you change any of your \"main\" CSS files, then we will trigger a full rebuild anyway, so this change is only required for unrelated CSS files (like CSS module files) that use CSS variables.\r\n\r\n## Test plan\r\n\r\n1. Added integration tests for the CLI and Next.js\r\n2. Added new dedicated test for webpack\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17467","RelatedDescription":"Closed or merged PR \"Watch CSS module files for changes\" (#17467)"},{"Id":"2960544128","IsPullRequest":false,"CreatedAt":"2025-03-31T16:35:58","Actor":"jamesmogambi","Number":"17466","RawContent":null,"Title":"[v4] hover property not working in tailwind v4","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNextJS 15\n\n**What version of Node.js are you using?**\n\nv22.0.0\n\n**What browser are you using?**\n\n Chrome, Microsoft Edge\n\n**What operating system are you using?**\n\nWindows 11\n\n\n**Describe your issue**\n\nHover does not work in Tailwind v4. Keeps breaking.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17466","RelatedDescription":"Closed issue \"[v4] hover property not working in tailwind v4\" (#17466)"},{"Id":"2960984269","IsPullRequest":false,"CreatedAt":"2025-03-31T16:34:46","Actor":"skstuder","Number":"17469","RawContent":null,"Title":"Oxide module not found for Cloud Build CI run","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.17\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite v6.0.3\n\n**What version of Node.js are you using?**\n\nFor example: v20.15.0\n\n**What browser are you using?**\n\nNot relevant\n\n**What operating system are you using?**\n\nGoogle Cloud Build -> X64\n\n**Reproduction URL**\n\nNot relevant\n\n**Describe your issue**\n\nThe new oxide engine failed to find the proper module in our CI/CD run. We use GCP Cloud Build, and the default architecture, which is X64. \n\n![Image](https://github.com/user-attachments/assets/15b51f37-402b-43d1-b200-90de61e3d226)\n\n**I have a workaround**. Manually installing 'lightningcss-linux-x64-gnu' and '@tailwindcss/oxide-linux-x64-gnu' in my `cloudbuild.yaml` file before building the application allows build to succeed. \n\nBut shouldn't Tailwind (via npm) be able to install the correct native sub-dependency automatically? \n\nReproduction: \nYou'd have to make a dummy repo and set up a Cloud Build CI/CD for it. ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17469","RelatedDescription":"Closed issue \"Oxide module not found for Cloud Build CI run\" (#17469)"},{"Id":"2960790379","IsPullRequest":false,"CreatedAt":"2025-03-31T15:18:02","Actor":"sarabEriced","Number":"17468","RawContent":null,"Title":"line-clamp doesn't work correctly","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n    \"@tailwindcss/vite\": \"^4.0.17\",\n    \"tailwindcss\": \"^4.0.17\"\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n    \"vite\": \"^6.2.4\"\n\n**What version of Node.js are you using?**\n\n    Node interpreter: 18.20.4\n\n**What browser are you using?**\n\n    Chrome & Firefox\n\n**What operating system are you using?**\n\n    Windows 10\n\n**Describe your issue**\n\n    Line-clamp-*n* \"truncates\"/\"clamps\" the second to last line, not the *n*th line (the last one)\n\n[package.json](https://github.com/user-attachments/files/19537325/package.json)\n\n![Image](https://github.com/user-attachments/assets/501588c9-41f8-48fb-bd63-549c2b979d2e)\n\n![Image](https://github.com/user-attachments/assets/58ad95e5-2f9b-464a-94ca-4da7f0fe0f91)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17468","RelatedDescription":"Closed issue \"line-clamp doesn't work correctly\" (#17468)"},{"Id":"2960430210","IsPullRequest":true,"CreatedAt":"2025-03-31T13:26:02","Actor":"philipp-spiess","Number":"17465","RawContent":null,"Title":"Fix slow unit test","State":"closed","Body":"This PR reworks a unit test that created a file in the project root and then proceeded by scanning everything in the git root for candidates. The issue specifically is that with the `.debug/` folder, our project root can grow quite a bit which makes this test slower the more you work on other tests...\r\n\r\nTo fix this we now simply create a tmp folder with only that one test file. 🚀 ","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17465","RelatedDescription":"Closed or merged PR \"Fix slow unit test\" (#17465)"},{"Id":"2959920262","IsPullRequest":true,"CreatedAt":"2025-03-31T11:06:28","Actor":"philipp-spiess","Number":"17458","RawContent":null,"Title":"Fix `--theme(…)` function when legacy JS plugins are used","State":"closed","Body":"Closes #17346\r\n\r\nThis PR fixes an issue that caused the `--theme(…)` function to behave differently after a legacy JS plugin or config was configured. The issue was that the compatibility layer would patch the theme value resolver to always inline the value. This, however, is only expected to happen if the path does not look like a CSS variable in which case this legacy code path should not be run.\r\n\r\nTo fix this, I'm now keeping a reference to the regular theme resolution function and call into it if the path starts with `--`.\r\n\r\n## Test plan\r\n\r\n- Tested with the repro in #17346 by adding pnpm overrides and confirmed that this fixes the issue\r\n- Added a unit test to the `--theme(…)` resolution tests","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17458","RelatedDescription":"Closed or merged PR \"Fix `--theme(…)` function when legacy JS plugins are used\" (#17458)"},{"Id":"2960096092","IsPullRequest":true,"CreatedAt":"2025-03-31T10:24:10","Actor":"RobinMalfait","Number":"17464","RawContent":null,"Title":"Show warning when using unsupported bare value data type","State":"open","Body":"This PR will show a warning if you are using a bare value data type that is not supported.\r\n\r\nLet's say you want to create a new utility that allows `color` to be a bare value data type like this:\r\n```css\r\n@utility paint-* {\r\n  paint: --value([color], color);\r\n}\r\n```\r\n\r\nThis means that this would enable new syntax that we don't support yet. E.g.: `paint-#0088cc`.\r\n\r\nThe only supported data types for bare values are:\r\n\r\n- `number` — `2.5`\r\n- `integer` — `2`\r\n- `ratio` — `1/2`\r\n- `percentage` — `50%`\r\n\r\nAll other data types are not supported in this position. This PR will now show a warning:\r\n~~~\r\nUnsupported bare value data type: \"color\".\r\nOnly valid data types are: \"number\", \"integer\", \"ratio\", \"percentage\"\r\n\r\n```css\r\n--value([color],color)\r\n                ^^^^^\r\n```\r\n~~~\r\nOnce we have better sourcemap / location tracking support, this warning will point to the exact spot, but for now, only a re-print of the AST can be used.\r\n\r\n\r\nIf you _do_ want to use other data types, then you will have to use arbitrary value syntax with `[…]` instead.\r\n\r\n\r\n```css\r\n@utility paint-* {\r\n  paint: --value([color]);\r\n}\r\n```\r\n\r\nThis will allow for `paint-[#0088cc]` for example.\r\n\r\nNote: this is not a behavioral change, we already didn't support other data types, but we silently ignored them. This means that we have to do more parsing at runtime when evaluating the utility. \r\n\r\nWith this change, a warning is shown when registering the `@utility`, not when using it.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17464","RelatedDescription":"Open PR \"Show warning when using unsupported bare value data type\" (#17464)"},{"Id":"2959953577","IsPullRequest":false,"CreatedAt":"2025-03-31T09:51:43","Actor":"philnind","Number":"17459","RawContent":null,"Title":"Tailwind Ignoring some classes but adding others in the same div","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.17\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\npostcss-cli 11.0.0\n\n**What version of Node.js are you using?**\n\nFor example: v20.0.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Describe your issue**\n\nRunning on a Flask app with Tailwnd CLI.\n\nTailwind is not adding classes for some styles even when they are being used.\n\n<body class=\"bg-[#121212] text-white text-center\">\n</body>\n\nIn the block above it is adding a class for text-center but it is not for text-white\n\nThis is happening across the app for colors, text sizes, padding but things like flex and flex col is working","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17459","RelatedDescription":"Closed issue \"Tailwind Ignoring some classes but adding others in the same div\" (#17459)"},{"Id":"2959225609","IsPullRequest":true,"CreatedAt":"2025-03-31T00:51:05","Actor":"ehsan7672","Number":"17455","RawContent":null,"Title":"Create npm-gulp.ymlesiom","State":"closed","Body":"<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17455","RelatedDescription":"Closed or merged PR \"Create npm-gulp.ymlesiom\" (#17455)"},{"Id":"2959138751","IsPullRequest":true,"CreatedAt":"2025-03-30T22:32:02","Actor":"aUsABuisnessman","Number":"17454","RawContent":null,"Title":"Help project #35","State":"closed","Body":"<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17454","RelatedDescription":"Closed or merged PR \"Help project #35\" (#17454)"},{"Id":"2958960246","IsPullRequest":false,"CreatedAt":"2025-03-30T22:27:03","Actor":"ebharathi","Number":"17450","RawContent":null,"Title":"Tailwindcss v4 not working in nextjs shadcn","State":"closed","Body":"\n\nI use shadcn, the shadcn components are rendered correctly using tailwindv4 but if i try to use it in my own code, it is not.\n\nEdit:\nbg-destructive is working but not text-destructive. flex is working everywhere but grid is not working anywhere\nThen if i add new color,its not working\n--color-success ,its not even shown/updated in browser's inspect\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17450","RelatedDescription":"Closed issue \"Tailwindcss v4 not working in nextjs shadcn\" (#17450)"},{"Id":"2959129366","IsPullRequest":false,"CreatedAt":"2025-03-30T22:10:54","Actor":"vtamara","Number":"17452","RawContent":null,"Title":"On OpenBSD/adJ 7.6 tailwindcss 4 produces \"Unsupported OS: openbsd, architecture: x64\"","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.17\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nvite 6.2.0\n\n**What version of Node.js are you using?**\n\nv20.18.2\n\n**What browser are you using?**\n\nChromium 128.0.6613.137\n\n**What operating system are you using?**\n\nOpenBSD/adJ 7.6\n\n**Reproduction URL**\n\nhttps://github.com/vtamara/minvt4\n\nCloning and running \n```sh\n% npm install\n% npm run dev\n```\nwill present the problem on OpenBSD/adJ 7.6.\n\n**Describe your issue**\n\nThe steps to reproduce the problem from scratch on an OpenBSD/adJ 7.6 are:\n\n```sh\n% npm create vite@latest minvt4 -- --template react\n% cd minvt4\n```\nEditing `package.json` to add:\n```json\n  \"overrides\": {\n    \"rollup\": \"npm:@rollup/wasm-node\"\n  }\n```\nThen starting the development server with\n```sh\n% npm install\n% npm run dev\n```\nAnd opening in a browser <http://localhost:5173/> will work:\n\n![image](https://github.com/user-attachments/assets/5df1d746-3b1e-4db7-9e67-4fcbcc1ca165)\n\nAfter we stop the server and add `tailwindcss` by following the instructions of <https://tailwindcss.com/docs/installation/using-vite>\n\n```sh\n% npm install tailwindcss @tailwindcss/vite\n```\n\nThen we edit `vite.config.js` to make it:\n```js\nimport { defineConfig } from 'vite'                                                                                                                             \nimport react from '@vitejs/plugin-react'                                                                                                                        \nimport tailwindcss from '@tailwindcss/vite'                                                                                                                     \n                                                                                                                                                                \nexport default defineConfig({                                                                                                                                   \n  plugins: [                                                                                                                                                    \n    react(),                                                                                                                                                    \n    tailwindcss(),                                                                                                                                              \n  ],                                                                                                                                                            \n})       \n```\n\nThen we add at the beginning  of `src/index.css`:\n\n```css\n@import \"tailwindcss\";\n```\n\nAnd finally running with `` and trying to open http://localhost:\n```sh\n% npm run dev\n```\n\nwill produce the error:\n```\nfailed to load config from /home/vtamara/comp/tailwindcss/minv/vite.config.js\nerror when starting dev server:\nError: Unsupported OS: openbsd, architecture: x64\n    at Object.<anonymous> (/home/vtamara/comp/tailwindcss/minv/node_modules/@tailwindcss/oxide/index.js:303:11)\n    at Module._compile (node:internal/modules/cjs/loader:1469:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1548:10)\n...\n```\n\nWe experienced the same problem with tailwindcss v4 in a new project with next.js, we wrote the steps to reproduce it at https://github.com/vtamara/tailwindcss/wiki/Problem-with-tailwind-4-on-adJ-OpenBSD\n\nThere we also described a workaround by downgrading to tailwindcss v3.\n\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17452","RelatedDescription":"Open issue \"On OpenBSD/adJ 7.6 tailwindcss 4 produces \"Unsupported OS: openbsd, architecture: x64\"\" (#17452)"},{"Id":"2959062812","IsPullRequest":false,"CreatedAt":"2025-03-30T19:45:49","Actor":"niconisoria","Number":"17451","RawContent":null,"Title":"[4.0.17] Any command hanging forever on macOS with chip M1","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.17\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nhttps://github.com/rails/tailwindcss-rails\n\n**What operating system are you using?**\n\nmacOS Ventura - Chip M1\n\n**Reproduction URL**\n\nCreation of a new Rails app that includes TailwindCSS.\n\n`rails new test --css=tailwind`\n\nExecution of the watch command.\n\n`rails tailwindcss:watch`\n\n**Describe your issue**\n\nThe terminal hangs after executing the watch command. Same application worked well after downgrading it back to v3.\n\nI believe this is related to the hardware since I saw another user with M1 reporting the same issue here https://github.com/rails/tailwindcss-rails/issues/509#issuecomment-2754490380.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17451","RelatedDescription":"Open issue \"[4.0.17] Any command hanging forever on macOS with chip M1\" (#17451)"},{"Id":"2958517410","IsPullRequest":false,"CreatedAt":"2025-03-29T22:09:47","Actor":"WouterDeGeringel","Number":"17448","RawContent":null,"Title":"[v4] Breaking change: When using the important flag, @apply now also make all of the declarations !important","State":"open","Body":"Hi there,\n\nI am trying to upgrade a project from tailwind v3 to v4.\n\nI found that in v4 when [using the important flag](https://tailwindcss.com/docs/styling-with-utility-classes#using-the-important-flag) and then use @apply to inline any existing utility classes into my own custom CSS, these lines get \"!important\" added to them. \n\nIn v3 this was not the so. \n\nI am not sure if this is a bug or an change. If it is intentional, then maybe the upgrade guide should be mention this.\n\nIf there is a way to prevent @apply to add the \"!mportant\" rule, I would love to know.\n\nRegards","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17448","RelatedDescription":"Open issue \"[v4] Breaking change: When using the important flag, @apply now also make all of the declarations !important\" (#17448)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-04-02T03:30:21.901305Z","RunDurationInMilliseconds":436}