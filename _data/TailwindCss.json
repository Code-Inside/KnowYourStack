{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2898726444","IsPullRequest":false,"CreatedAt":"2025-03-05T22:47:43","Actor":"hugotiger","Number":"16973","RawContent":null,"Title":"Custom utilities sorted incorrectly","State":"open","Body":"**What version of Tailwind CSS are you using?**\nv4.0.10\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\nTested on:\nNext.js 15.1.7\nPostCSS 8.5.2\n\n**What version of Node.js are you using?**\nv23.8.0\n\n**What browser are you using?**\nChrome\n\n**What operating system are you using?**\nmacOS\n\n**Reproduction URL**\nhttps://play.tailwindcss.com/RhJ7x3kQUN\n\n**Describe your issue**\nIn the upgrade guide it is mentioned that custom utilities are sorted based on the number of properties they define. See [this section](https://tailwindcss.com/docs/upgrade-guide#adding-custom-utilities).\n\nNow as shown in the reproduction URL, this does not seem to function properly. The `type-h1` utility specified 3 properties, but are still sorted last in the CSS output. This makes it's specificity the highest and you can't override the font size with e.g. the `text-sm` class. \n\nIf we however instead use the `@apply` directive it seems to work as expected.\n\nTo me this seems to be a bug, but I might just misunderstand the docs, or there might be some alternative preferred solution.\n\nI looked into using [component classes](https://tailwindcss.com/docs/adding-custom-styles#adding-component-classes) instead, but this was not really feasible as it doesn't work with IntelliSense (see [this play link](https://play.tailwindcss.com/CLjzTW6JKq)). Maybe this is the most suitable solution, but due to the IntelliSense issue it's not really feasible for our team right now.\n\nReally love v4! Thanks for the hard work 🙌 \n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16973","RelatedDescription":"Open issue \"Custom utilities sorted incorrectly\" (#16973)"},{"Id":"2898539016","IsPullRequest":true,"CreatedAt":"2025-03-05T21:46:43","Actor":"RobinMalfait","Number":"16972","RawContent":null,"Title":"Ensure `--` is allowed inside candidates","State":"closed","Body":"This PR fixes an issue where named utilities that contain double dashes `--` are not extracted correctly.\n\nSome people use `--` in the middle of the utility to create some form of namespaced utility. \n\nGiven this input:\n```js\nlet x = 'foo--bar'\n```\n\nThe extracted candidates before this change:\n```js\n[ \"let\", \"x\", \"--bar\" ]\n```\n\nThe extracted candidates after this change:\n```js\n[ \"let\", \"x\", \"foo--bar\", \"--bar\" ]\n```\n\nThe reason `--bar` is still extracted in both cases is because of the CSS variable machine. We could improve its extraction by checking its boundary characters but that's a different issue.\n\nFor now, the important thing is that `foo--bar` was extracted.\n\n# Test plan\n\n1. Added new test\n2. Existing tests pass\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16972","RelatedDescription":"Closed or merged PR \"Ensure `--` is allowed inside candidates\" (#16972)"},{"Id":"2898204764","IsPullRequest":false,"CreatedAt":"2025-03-05T19:06:02","Actor":"michielvandermeer","Number":"16970","RawContent":null,"Title":"Two Tailwind v4 CSS files, only styles of the last-linked file work","State":"open","Body":"I have a components project that generates its own Tailwind output CSS. I use that shared project in all my other projects so that I have a single source for my components. Each of my application projects build their own Tailwind CSS file for the styles specific to that application.\r\n\r\nI include the two Tailwind files in my HTML like this:\r\n```html\r\n<head>\r\n   <link rel=\"stylesheet\" href=\"comonent.css\" />\r\n   <link rel=\"stylesheet\" href=\"application.css\" />\r\n<head>\r\n```\r\n\r\nI recently upgraded to Tailwind v4 and now my component styles are not loaded anymore.\r\n\r\nI suspect it has to do with the `@layer theme, base, components, utilities;` directive on top of the Tailwind output files. I think this resets the layers when loading the second file.\r\n\r\n1. Is my suspicion correct?\r\n2. Is this a bug?\r\n3. Any ideas on how to get this to work?\r\n\r\nAny help would be much appreciated.\r\n\r\n_Originally posted by @michielvandermeer in https://github.com/tailwindlabs/tailwindcss/discussions/15989_","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16970","RelatedDescription":"Open issue \"Two Tailwind v4 CSS files, only styles of the last-linked file work\" (#16970)"},{"Id":"2897733325","IsPullRequest":false,"CreatedAt":"2025-03-05T17:58:06","Actor":"xichtop","Number":"16964","RawContent":null,"Title":"\"Unexpected semicolon\" error when using @plugin \"daisyui/theme\" to custom theme for daisyui","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.9\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.2.0\n\n**What version of Node.js are you using?**\n\nv22.11.0\n\n**What browser are you using?**\n\nBrave\n\n**What operating system are you using?**\n\nMacOS\n\n**Describe your issue**\n\nWhen using @plugin \"daisyui/theme\" to custom theme for daisyui, i got an issue like: [vite] Internal server error: Unexpected semicolon.\nBut with the same code, it works when i use postcss as a build tool.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16964","RelatedDescription":"Closed issue \"\"Unexpected semicolon\" error when using @plugin \"daisyui/theme\" to custom theme for daisyui\" (#16964)"},{"Id":"2897511525","IsPullRequest":true,"CreatedAt":"2025-03-05T17:32:15","Actor":"philipp-spiess","Number":"16963","RawContent":null,"Title":"Prepare v4.0.10 release","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16963","RelatedDescription":"Closed or merged PR \"Prepare v4.0.10 release\" (#16963)"},{"Id":"2897760072","IsPullRequest":false,"CreatedAt":"2025-03-05T16:33:04","Actor":"dimaMachina","Number":"16966","RawContent":null,"Title":"[v4] used `@keyframes` are removed when using `prefix` option","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nplayground\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nplayground\n\n**What version of Node.js are you using?**\n\nplayground\n\n**What browser are you using?**\n\nchrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/8k0xGZ2vL1\n\n**Describe your issue**\n\ngenerated output doesn't contain\n\n```css\n@keyframes spin {\n  to {\n    transform: rotate(360deg);\n  }\n}\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16966","RelatedDescription":"Closed issue \"[v4] used `@keyframes` are removed when using `prefix` option\" (#16966)"},{"Id":"2897752880","IsPullRequest":true,"CreatedAt":"2025-03-05T16:05:01","Actor":"philipp-spiess","Number":"16965","RawContent":null,"Title":"WIP","State":"open","Body":"Fixes #16636 and potentially even more. Will clean this up later, in a hurry right now.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16965","RelatedDescription":"Open PR \"WIP\" (#16965)"},{"Id":"2897444515","IsPullRequest":false,"CreatedAt":"2025-03-05T15:31:42","Actor":"VulcanTech-io","Number":"16962","RawContent":null,"Title":"@tailwindcss/postcss","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n    \"postcss\": \"^8.5.3\",\n    \"tailwindcss\": \"^4.0.9\"\n    \"@tailwindcss/postcss\": \"4.0.0-alpha.13\",\n    \"autoprefixer\": \"^10.4.20\",\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n \"next\": \"^15.2.1\",\n  \"turbo\": \"^2.4.4\",\n\n\n**What version of Node.js are you using?**\n\nFor example: v18.19.0\n\n**What browser are you using?**\n\nfirefox\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\nhttps://github.com/VulcanTech-io/tailwindcss-postcss-plugin-issue\n**Describe your issue**\n```js\nconst config = {\n  plugins: {\n    \"@tailwindcss/postcss\": {},\n  },\n};\nexport default config;\n```\nAdding this plugin breaks support for global imports from node modules when there is a font being imported from them. \nfor minimal reproduction \"fix\" comment out the plugin. But then tailwindcss is no longer working.\n\n ⨯ ./node_modules/@milkdown/crepe/lib/theme/common/style.css\nError evaluating Node.js code\nCssSyntaxError: postcss-import: ~/turbo-test/node_modules/@milkdown/crepe/lib/theme/common/prosemirror.css:1:1: Failed to find '@milkdown/kit/prose/view/style/prosemirror.css'\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16962","RelatedDescription":"Closed issue \"@tailwindcss/postcss\" (#16962)"},{"Id":"2891927526","IsPullRequest":false,"CreatedAt":"2025-03-05T14:07:16","Actor":"leetcow","Number":"16922","RawContent":null,"Title":"CLI instructions don't work with bun","State":"closed","Body":"https://tailwindcss.com/docs/installation/tailwind-cli\n\nThe CLI instructions tell users to run\n\n```\nnpm install tailwindcss @tailwindcss/cli\nnpx @tailwindcss/cli -i ./src/input.css -o ./src/output.css --watch\n```\n\nThe mix of npm and npx is interesting - the point of npx was to not install packages, right? Won't running npx install the package again?\n\nNevertheless, one can make this work with bun without using bunx by running the following:\n\n```\nbun add tailwindcss @tailwindcss/cli\nbun run tailwindcss -i ./src/input.css -o ./src/output.css --watch\n```\n\nwith the main change being `bun run tailwindcss` instead of `bunx @tailwindcss/cli`.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16922","RelatedDescription":"Closed issue \"CLI instructions don't work with bun\" (#16922)"},{"Id":"2897131109","IsPullRequest":true,"CreatedAt":"2025-03-05T13:55:07","Actor":"philipp-spiess","Number":"16957","RawContent":null,"Title":"Vite: Work around crash when `.svg` file contains `#` or `?`","State":"closed","Body":"Closes #16877\r\n\r\nThis PR works around #16877 by not registering `.svg` files containing a `#` or `?` as a watch dependency for now.\r\n\r\n## Test plan\r\n\r\n- Add a file to the Vite playground called `src/c#.svg`\r\n- Observe Vite no longer prints errors","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16957","RelatedDescription":"Closed or merged PR \"Vite: Work around crash when `.svg` file contains `#` or `?`\" (#16957)"},{"Id":"2897397744","IsPullRequest":true,"CreatedAt":"2025-03-05T13:52:25","Actor":"philipp-spiess","Number":"16960","RawContent":null,"Title":"Add `--prefix(…)` CSS function","State":"open","Body":"<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16960","RelatedDescription":"Open PR \"Add `--prefix(…)` CSS function\" (#16960)"},{"Id":"2897357820","IsPullRequest":true,"CreatedAt":"2025-03-05T13:38:18","Actor":"philipp-spiess","Number":"16959","RawContent":null,"Title":"Link to upgrade gudie in PostCSS compat message","State":"open","Body":"As the title suggests, this adds a link to the upgrade guide in the postcss compat message (= that is the message you see when trying to use `tailwindcss@4` as a PostCSS plugin.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16959","RelatedDescription":"Open PR \"Link to upgrade gudie in PostCSS compat message\" (#16959)"},{"Id":"2897054472","IsPullRequest":true,"CreatedAt":"2025-03-05T12:30:46","Actor":"depfu[bot]","Number":"16955","RawContent":null,"Title":"Update @types/bun 1.2.3 → 1.2.4 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​types/bun (1.2.3 → 1.2.4) · [Repo](https://github.com/DefinitelyTyped/DefinitelyTyped)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16955","RelatedDescription":"Closed or merged PR \"Update @types/bun 1.2.3 → 1.2.4 (patch)\" (#16955)"},{"Id":"2893811689","IsPullRequest":false,"CreatedAt":"2025-03-05T12:18:17","Actor":"nachoaldamav","Number":"16939","RawContent":null,"Title":"`@tailwindcss/vite@^4.0.8` is not able to find classes from component based config and components","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n`v4.0.9` (`4.0.7` works fine)\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n- Vite `6.2.0`\n\n**What version of Node.js are you using?**\n\n`v22.13.1`\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nDebian (WSL2)\n\n**Reproduction URL**\n\nhttps://github.com/nachoaldamav/tailwind-debug-4.0.9\n\n**Describe your issue**\n\nWith the change from the PR https://github.com/tailwindlabs/tailwindcss/pull/16631 loading config files and component as packages break the candidates search.\n\n### Key points\n\n- The config file (css) is loaded from `@my-org/tailwind-config/styles.css`.\n- A button component loaded from `@my-org/button`.\n- Theorically, using `@source \"../node_modules/@my-org/button` would fix it, but it doesn't.\n- This could be caused by pnpm `node_modules` structure, as the config file is not loaded from `node_modules/@my-org/tailwind-config/styles.css`, but from `node_modules/.pnpm/@my-org+tailwind-config@1.0.0/node_modules/@my-org/tailwind-config/styles.css`.\n- About pnpm, it means that `@source` needs to be `../../../../../@my-org/button/dist` which is not very reliable.\n\nI think re-opening this PR (https://github.com/tailwindlabs/tailwindcss/pull/16425) could fix this issue, maybe making the default be the FileSystem one and optionally the Module Graph system. ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16939","RelatedDescription":"Closed issue \"`@tailwindcss/vite@^4.0.8` is not able to find classes from component based config and components\" (#16939)"},{"Id":"2894816210","IsPullRequest":true,"CreatedAt":"2025-03-05T11:05:17","Actor":"philipp-spiess","Number":"16946","RawContent":null,"Title":"Add `pointer-*` variants","State":"closed","Body":"Adds new variants under a feature flag:\r\n\r\n- `pointer-none`\r\n- `pointer-coarse`\r\n- `pointer-fine`\r\n- `any-pointer-none`\r\n- `any-pointer-coarse`\r\n- `any-pointer-fine`","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16946","RelatedDescription":"Closed or merged PR \"Add `pointer-*` variants\" (#16946)"},{"Id":"2891186163","IsPullRequest":true,"CreatedAt":"2025-03-05T10:59:33","Actor":"philipp-spiess","Number":"16917","RawContent":null,"Title":"Remove `max-w-auto` and `max-h-auto`","State":"closed","Body":"Closes #16916\r\n\r\nThis PR removes `max-w-auto` and `max-h-auto` due to them not being part of v3 and not being valid CSS:\r\n\r\n- https://developer.mozilla.org/en-US/docs/Web/CSS/max-width#syntax\r\n- https://developer.mozilla.org/en-US/docs/Web/CSS/max-height#syntax\r\n\r\n<img width=\"886\" alt=\"Screenshot 2025-03-03 at 14 00 39\" src=\"https://github.com/user-attachments/assets/2c7fa17c-975b-4e1f-ae56-99b703d6ca70\" />\r\n\r\n<img width=\"163\" alt=\"Screenshot 2025-03-03 at 13 54 26\" src=\"https://github.com/user-attachments/assets/12902a14-5a1e-4d7f-8127-fc2a3833221d\" />\r\n\r\nI decided to keep `max-w-auto` and `max-h-auto` since these values are valid even though these were not in v3 either:\r\n\r\n<img width=\"886\" alt=\"Screenshot 2025-03-03 at 13 55 11\" src=\"https://github.com/user-attachments/assets/83bf6543-06a3-429e-b39e-ef3ac3290f0b\" />\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16917","RelatedDescription":"Closed or merged PR \"Remove `max-w-auto` and `max-h-auto`\" (#16917)"},{"Id":"2895125262","IsPullRequest":true,"CreatedAt":"2025-03-05T10:59:27","Actor":"depfu[bot]","Number":"16949","RawContent":null,"Title":"Update tsup 8.3.6 → 8.4.0 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ tsup (8.3.6 → 8.4.0)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16949","RelatedDescription":"Closed or merged PR \"Update tsup 8.3.6 → 8.4.0 (minor)\" (#16949)"},{"Id":"2896948834","IsPullRequest":true,"CreatedAt":"2025-03-05T10:56:50","Actor":"depfu[bot]","Number":"16954","RawContent":null,"Title":"Update bun 1.2.3 → 1.2.4 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ bun (1.2.3 → 1.2.4) · [Repo](https://github.com/oven-sh/bun)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16954","RelatedDescription":"Closed or merged PR \"Update bun 1.2.3 → 1.2.4 (patch)\" (#16954)"},{"Id":"2896451324","IsPullRequest":false,"CreatedAt":"2025-03-05T07:25:24","Actor":"prtmwrkr","Number":"16951","RawContent":null,"Title":"Custom breakpoints are overridden after upgrade to TailwindCss 4","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.9\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 15.1.5\n\n**What version of Node.js are you using?**\n\nv22.13.1\n\n**What browser are you using?**\n\nChrome (latest)\n\n**What operating system are you using?**\n\nmacOS Sequoia 15.2\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/UVfubYIgHg\n\n```html\n<div class=\"p-10 text-lg\">\n  <p class=\"text-black 3xl:text-red-500 2xl:text-blue-500\">Some text</p>\n  <p class=\"text-black 3xl:text-red-500\">Another text without 2xl</p>\n</div>\n```\n\n```css\n@import \"tailwindcss\";\n\n@theme {\n  --breakpoint-3xl: 1700px;\n}\n```\n\n**Describe your issue**\n\nI'm upgrading an existing tailwind project to tailwind v4.\n\nWe had a custom breakpoint `3xl at 1700px`… I can still see it being present in the generated CSS, but for some reason it is now overridden by the breakpoint at 2xl.\nIn this example I would expect the color of the text to be red on screen bigger than 1700px, but it actually remains blue.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16951","RelatedDescription":"Closed issue \"Custom breakpoints are overridden after upgrade to TailwindCss 4\" (#16951)"},{"Id":"2895115104","IsPullRequest":false,"CreatedAt":"2025-03-04T18:36:40","Actor":"RobinMalfait","Number":"16948","RawContent":null,"Title":"CSS based functional `@utility` with same name results in missing classes","State":"open","Body":"When defining custom functional `@utility` with the same name for different purposes results in unwanted behavior. \n\nIf you want to use the same name, similar to how we can use `text-red-500` and `text-2xl` then the order matters and only the first one \"wins\" right now.\n\n```css\n@utility foo-* {\n  color: --value(--color- *);\n}\n\n@utility foo-* {\n  font-size: --spacing(--value(number));\n}\n```\nIn this case, `foo-red-500` will work, but `foo-123` will not.\n\nPlay: https://play.tailwindcss.com/1VmWKocy9O?file=css\n\nIf you swap the order, then `foo-123` will win, but `foo-red-500` won't result in anything.\n```css\n@utility foo-* {\n  font-size: --spacing(--value(number));\n}\n\n@utility foo-* {\n  color: --value(--color- *);\n}\n```\n\nPlay: https://play.tailwindcss.com/71oBj8xrI1?file=css\n\n---\n\nThe expected behavior is that both work.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16948","RelatedDescription":"Open issue \"CSS based functional `@utility` with same name results in missing classes\" (#16948)"},{"Id":"2894834075","IsPullRequest":true,"CreatedAt":"2025-03-04T16:45:59","Actor":"sntran","Number":"16947","RawContent":null,"Title":"doc(CHANGELOG): correct PR number for `scripting`","State":"closed","Body":"Tiny correction of the CHANGLOG\r\n\r\n<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16947","RelatedDescription":"Closed or merged PR \"doc(CHANGELOG): correct PR number for `scripting`\" (#16947)"},{"Id":"2893660814","IsPullRequest":false,"CreatedAt":"2025-03-04T15:54:06","Actor":"willans","Number":"16935","RawContent":null,"Title":"Nested CSS utilities and @apply rules fails","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.9\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.2.0\n\n**What version of Node.js are you using?**\n\nFor example: v22.0.0\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/zVH1cgIGl7\n\n**Describe your issue**\n\nI'm creating a bunch of utility classes in a project, and I stumbled across a bug in which utility classes are not being generated, if they're also used within some custom components/classes.\n\nWithin the example, all of the setups work except Example 2. Within Example 2, no class is being generated for 'type-block-1', despite it being in the markup.\n\nI've narrowed it down to when there's multiple @apply rules within the same block. This also only happens with these newly defined utility classes. If the nested @apply uses a default Tailwind utility (e.g. rotate-45), then the issue doesn't persist. So it doesn't look like it's an issue with the structure of the CSS.\n\nAt first I thought this was my own personal setup, but I've managed to recreate within Tailwind Play.\n\nIf I'm doing anything glaringly obvious, let me know.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16935","RelatedDescription":"Closed issue \"Nested CSS utilities and @apply rules fails\" (#16935)"},{"Id":"2893844531","IsPullRequest":true,"CreatedAt":"2025-03-04T15:54:05","Actor":"philipp-spiess","Number":"16940","RawContent":null,"Title":"Don't swallow `@utility` declarations when `@apply` is used in nested rules","State":"closed","Body":"Fixes #16935\r\n\r\nThis PR fixes an issue where the order of how `@apply` was resolved was incorrect for nested rules. Consider this example:\r\n\r\n```css\r\n.rule {\r\n  @apply underline;\r\n  .nested-rule {\r\n    @apply custom-utility;\r\n  }\r\n}\r\n\r\n@utility custom-utility {\r\n  @apply flex;\r\n}\r\n```\r\n\r\nThe way we topologically sort these, we end up with a list that looks roughly like this:\r\n\r\n```css\r\n.rule {\r\n  @apply underline;\r\n  .nested-rule {\r\n    @apply custom-utility;\r\n  }\r\n}\r\n\r\n@utility custom-utility {\r\n  @apply flex;\r\n}\r\n\r\n.nested-rule {\r\n  @apply custom-utility;\r\n}\r\n```\r\n\r\nAs you can see here the nested rule is now part of the top-level list. This is correct because we first have to substitute the `@apply` inside the `@utility custom-utility` before we can apply the `custom-utility` inside `.nested-rule`. However, because we were using a regular AST walk and because the initial `.rule` also contains the `.nested-rule` as child, we would first substitute the `@apply` inside the `.nested-rule`, causing the design-system to force resolve (and cache) the wrong value for `custom-utility`.\r\n\r\nBecause the list is already flattened, we do not need to recursively look into child declarations when we traverse the sorted list. This PR changes it to use a regular `for` loop instead of the `walk`.\r\n\r\n## Test plan\r\n\r\n- Added a regression test\r\n- Rest of tests still green ","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16940","RelatedDescription":"Closed or merged PR \"Don't swallow `@utility` declarations when `@apply` is used in nested rules\" (#16940)"},{"Id":"2892050001","IsPullRequest":false,"CreatedAt":"2025-03-04T15:36:50","Actor":"benwilliams140","Number":"16926","RawContent":null,"Title":"`outline-hidden` only applies transparent outline when `forced-colors` is active?","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.0.9\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.0.11\n\n**What version of Node.js are you using?**\n\n22.13.1\n\n**What browser are you using?**\n\nChromium, Firefox, Safari\n\n**What operating system are you using?**\n\nMacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/SOQPkOEDC9\n\n**Describe your issue**\n\nI'm currently upgrading a project from v3 to v4. The upgrade guide states that `outline-none` was renamed to `outline-hidden`, although this is only true when `forced-colors` media feature is active. Curious why this change was made, and if there's another utility class I could use to have the same behaviour as v3.\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16926","RelatedDescription":"Closed issue \"`outline-hidden` only applies transparent outline when `forced-colors` is active?\" (#16926)"},{"Id":"2893949473","IsPullRequest":true,"CreatedAt":"2025-03-04T15:36:29","Actor":"philipp-spiess","Number":"16943","RawContent":null,"Title":"Ensure `outline-hidden` behaves like `outline-none` in non-`forced-colors` mode","State":"closed","Body":"Part-of #16926\r\n\r\nI noticed that `outline-hidden` would not set `--tw-outline-style` (contrary to `outline-none`), thus stacking it with other outline classes won't work as expected: https://play.tailwindcss.com/Y0lPGgekYh\r\n\r\n\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16943","RelatedDescription":"Closed or merged PR \"Ensure `outline-hidden` behaves like `outline-none` in non-`forced-colors` mode\" (#16943)"},{"Id":"2894656677","IsPullRequest":false,"CreatedAt":"2025-03-04T15:29:34","Actor":"cvharris","Number":"16945","RawContent":null,"Title":"v4 preflight theme variables aren't prefixed","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\nVersions:\n- Tailwind: v4.0.9\n- Vite: 5.2.11\n- Node: 20.14.0\n- Chrome, Mac OS\n\n[Reproduction URL](https://play.tailwindcss.com/fPhQksGLVR)\n\nIf you look at the reproduction URL above (took awhile to prefix all those classes lol) you can see that the `--default-font-family` does not map to the prefixed `--font-sans` declared in the `@theme`. It seems that since `--default-font-family: var(--font-sans);` it isn't getting updated to map to the prefixed value later. This was not an issue in v3.\n\nThe workaround I have is to declare `--default-font-family` in my own `@layer base`:\n\n```css\n@layer base {\n  html {\n    --default-font-family: 'Salesforce Sans', Helvetica, Arial, sans-serif;\n  }\n}\n```\n\nWhat ought to happen is the preflight reference points to the prefixed font so that the theme can correctly override it: `--default-font-family: var(--tw-font-sans);`","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16945","RelatedDescription":"Open issue \"v4 preflight theme variables aren't prefixed\" (#16945)"},{"Id":"2893291502","IsPullRequest":false,"CreatedAt":"2025-03-04T10:12:01","Actor":"seonwoo94","Number":"16932","RawContent":null,"Title":"Arbitrary values with responsive modifiers not working properly in Tailwind CSS v4","State":"closed","Body":"### Description\nWhen using arbitrary values with responsive modifiers in Tailwind CSS v4, the responsive styles are not being applied correctly. This behavior differs from previous versions where it worked as expected.\n\n### Current Behavior\n- When using arbitrary values with responsive modifiers, only the base style is applied\n- The responsive modifier with arbitrary value is ignored\n\n### Expected Behavior\nAll responsive modifiers should be applied according to the breakpoint, regardless of whether they use arbitrary values or utility classes.\n\n-----\n#### Working Cases:\n// Utility + Utility\n`<p className=\"font-light md:font-bold\">`\n// Both light and bold are applied at respective breakpoints\n\n// Utility + Arbitrary\n`<p className=\"font-light md:font-[600]\">`\n// Both light and 600 are applied at respective breakpoints\n\n-----\n#### Not Working Cases:\n// Arbitrary + Utility\n`<p className=\"font-[300] md:font-bold\">`\n// Only font-[300] is applied, md:font-bold is ignored\n\n// Arbitrary + Arbitrary\n`<p className=\"font-[300] md:font-[600]\">`\n// Only font-[300] is applied, md:font-[600] is ignored\n\n// Similar issues with other properties\n`<p className=\"text-[12px] sm:text-[15px]\">`\n\n-----\n\n### Environment\n- Tailwind CSS version: 4.0.9\n- Build tool: Vite\n- React version: 18.3.1\n- Browser: Chrome 133.0.6943.142, Safari 18.1.1\n- OS: macOS 15.1.1\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16932","RelatedDescription":"Closed issue \"Arbitrary values with responsive modifiers not working properly in Tailwind CSS v4\" (#16932)"},{"Id":"2891523566","IsPullRequest":false,"CreatedAt":"2025-03-03T15:10:20","Actor":"kingmesal","Number":"16920","RawContent":null,"Title":".gitignore is too powerful and cannot be stopped","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.9\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\npostcss: 8.5.3\n\n**What version of Node.js are you using?**\n\nNode: v22.11.0\nBun: 1.2.5\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nLinux\n\n**Describe your issue**\n\nI have a mulitple wildcard patterns like `special-*.hbs` in my `.gitignore` and I cannot find a way to tell tailwind v4 to ignore my gitignore or to be able to specify an `@source \"../src/special-*.hbs\"`\n\nLet me explain my process. My toolset copies a bunch of templates into my users site. They match `special-*.hbs`. These are in the `.gitignore` because they are not intended to be checked into their repository.\n\nI have tried `@import \"tailwindcss\" source(none);` then specify `@source \"../src\";` but the `.gitignore` is still in effect, which I thought would get turned off using the `source(none)`.\n\nWhat can I do here?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16920","RelatedDescription":"Open issue \".gitignore is too powerful and cannot be stopped\" (#16920)"},{"Id":"2891098091","IsPullRequest":false,"CreatedAt":"2025-03-03T14:07:26","Actor":"vikramnagwal","Number":"16913","RawContent":null,"Title":"RsPack Deprecated Setup Documentation","State":"closed","Body":"The RsPack setup guide is not applicable due to the absence of Postcss.config files. Clear setup steps would be helpful.\n\n**What version of Tailwind CSS are you using?**\n\nTailwindcss v4.0.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nRsPack(React)\n\n**What version of Node.js are you using?**\n\nNode v22.13.1\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\n Windows\n\n**Reproduction URL**\nhttps://tailwindcss.com/docs/installation/framework-guides/rspack/react\n\n\n1. Visit the official documentation for framework setup and open RsPack. \n2. Follow the steps mentioned in the documentation. \n3. Note that there is no post.config.mjs file generated, and the instructions do not mention how to create it manually or what steps to take if it is not present.\n\n**Issue**\n\nThe framework setup guide for RsPack is not applicable, as it does not generate any Postcss.config files. It would be helpful if accurate steps for setup were provided\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16913","RelatedDescription":"Closed issue \"RsPack Deprecated Setup Documentation\" (#16913)"},{"Id":"2890795334","IsPullRequest":false,"CreatedAt":"2025-03-03T10:18:20","Actor":"terryupton","Number":"16911","RawContent":null,"Title":"\"@tailwindcss/vite\": \"4.0.8\"  and  \"@tailwindcss/vite\": \"4.0.9\"  have massively increased load times for the CSS in Vite.","State":"open","Body":"So I have noticed drastically increased load times when using Vite and Tailwind when updating to \"@tailwindcss/vite\": \"4.0.8\"  and  \"@tailwindcss/vite\": \"4.0.9\".\n\n\"@tailwindcss/vite\": \"4.0.8\"  and  \"@tailwindcss/vite\": \"4.0.9\"\n<img width=\"1331\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/9b284158-be5f-4a4b-994e-ed3b4624befa\" />\n\n\n\"@tailwindcss/vite\": \"4.0.7\"  and  lower.\n<img width=\"1421\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/b76206e7-effb-4d97-9583-77a5be53937e\" />\n\nNot sure what is causing this. \nHappy to share more information about my setup or debug further with instructions.\n\nThanks","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16911","RelatedDescription":"Open issue \"\"@tailwindcss/vite\": \"4.0.8\"  and  \"@tailwindcss/vite\": \"4.0.9\"  have massively increased load times for the CSS in Vite.\" (#16911)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-03-06T03:30:21.9283904Z","RunDurationInMilliseconds":485}