{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"1708266871","IsPullRequest":false,"CreatedAt":"2023-05-12T22:35:13","Actor":"mattmischuk","Number":"11220","RawContent":null,"Title":"[v3.3.2] Docs: sticky element not working as expected","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\nv3.3.2\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\nn/a\r\n\r\n**What version of Node.js are you using?**\r\nn/a\r\n\r\n**What browser are you using?**\r\nChrome\r\n\r\n**What operating system are you using?**\r\nmacOS latest\r\n\r\n**Reproduction URL**\r\nhttps://tailwindcss.com/docs/position#sticky-positioning-elements\r\n\r\n**Describe your issue**\r\nOn the sticky section of the documentation there is a bug where in some cases the category sticky element does not show up as they are expected to.\r\n\r\nhttps://github.com/tailwindlabs/tailwindcss/assets/3485831/9253a536-e457-4ac9-b214-eaec19e5df51","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11220","RelatedDescription":"Closed issue \"[v3.3.2] Docs: sticky element not working as expected\" (#11220)"},{"Id":"1708270340","IsPullRequest":true,"CreatedAt":"2023-05-12T22:15:31","Actor":"RobinMalfait","Number":"11221","RawContent":null,"Title":"[Oxide] Ensure generated `tailwind.config.js` file is formatted properly","State":"closed","Body":"This PR fixes a small formatting issue when generating the `tailwind.config.js` file when using the `npx tailwindcss init` command using the oxide engine.\r\n\r\nWe dropped the `content: []` by default such that the auto content detection can be used as a default. However we used a regex to replace the `content: []` which included a `\\s` in the regex.\r\nThis is problematic because `\\s` includes `\\n` so therefore the previous `\\n` was removed as well.\r\n\r\nEverything still worked, but the formatting of the generated file was off.\r\n\r\n<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11221","RelatedDescription":"Closed or merged PR \"[Oxide] Ensure generated `tailwind.config.js` file is formatted properly\" (#11221)"},{"Id":"1698842856","IsPullRequest":true,"CreatedAt":"2023-05-12T14:13:30","Actor":"adamwathan","Number":"11173","RawContent":null,"Title":"[Oxide] Automatic content detection","State":"closed","Body":"This PR adds experimental support for what we're calling \"automatic content detection\" — a feature that lets Tailwind detect the paths it needs to scan to figure out which classes it needs to generate completely automatically, no `content` configuration required.\r\n\r\nTo use it, just omit the `content` option from your configuration file:\r\n\r\n```diff\r\n  // tailwind.config.js\r\n  module.exports = {\r\n    // Bye bye, you won't be missed\r\n-   content: [\r\n-     \"./app/**/*.{js,ts,jsx,tsx,mdx}\",\r\n-     \"./pages/**/*.{js,ts,jsx,tsx,mdx}\",\r\n-     \"./components/**/*.{js,ts,jsx,tsx,mdx}\",\r\n-   ],\r\n    theme: {\r\n      extend: {},\r\n    },\r\n    plugins: [],\r\n  }\r\n```\r\n\r\nYou can also enable it explicitly by configuring `content` to `'auto'`:\r\n\r\n```js\r\n// tailwind.config.js\r\nmodule.exports = {\r\n  content: 'auto',\r\n  theme: {\r\n    extend: {},\r\n  },\r\n  plugins: [],\r\n}\r\n```\r\n\r\nTailwind will automatically scan every file in your project (excluding gitignored files) that might contain classes and generate all the CSS you need with no configuration.\r\n\r\nSince this feature is currently experimental, a warning is issued in the terminal any time it's enabled to make sure you know it's not stable.\r\n\r\nThis feature is only planned for the new Oxide engine, so it will only be available on the `oxide-insiders` tag and not the regular `insiders` tag. Will share a lot more about what Oxide is and when we really want people to start playing with it when it's a bit further along over the coming weeks.\r\n\r\n## How it works\r\n\r\nGetting this to _\"just work\"_ given all of the different places people use Tailwind is a serious challenge. This first stab at the problem uses a few heuristics and assumptions that are working very well for the types of projects we've tested it in:\r\n\r\n- **Files are scanned using the current working directory** — there's no magical way to know what the \"root\" of your project is, so Tailwind assumes that the current working directory is the root of your project. You should always run your build scripts from the root of your project to make sure the right files are scanned. This is only likely to be something you need to think about in complex monorepo-type setups, where you'll want to `cd` to the right folder in your scripts or use `npm run` with the `--prefix` option to explicitly set the CWD.\r\n- **Any gitignored paths are skipped** — any files or folders matched by your `.gitignore` file will not be scanned for classes. This prevents giant dependency folders like `node_modules` from being scanned, as well as any directories where you are storing generated files (like compiled CSS or JS), which avoids infinite rebuild loops.\r\n- **All top-level folders are registered as content paths** — we watch every top-level folder for changes as if you configured them yourself with globs like `./components/**/*.js` and `./pages/**/*.js`. This makes sure we notice any new files or folders you create and scan them without you needing to restart your build process.\r\n- **...except `./public`** — we explicitly don't watch `./public/**/*.{whatever}` because it's common to store generated assets like compiled CSS and JS in the `./public` folder which can cause infinite rebuild loops, particularly in webpack where we can't actually register globs to watch and can only register directories. Instead, we explicitly watch each individual file in `./public` that could contain classes, like an `index.html` file for instance.\r\n- **Top-level files are watched individually** — we can't watch `./**/*` because webpack doesn't support globs which means we'd end up watching `./node_modules`, so instead we watch every top-level file that might contain classes individually. This means creating a new top-level file currently requires restarting your build process. In practice though it's extremely rare to create new top-level files that contain classes.\r\n- **All binary file extensions are skipped** — we don't scan files that obviously won't contain classes, like images, videos, zip files, etc.\r\n- **Stylesheet files are skipped** — we don't look for classes in `css`, `scss`, `sass`, `less`, or `styl` files.\r\n- **Common generated files are skipped** — we explicitly don't scan known generated files like `package-lock.json`.\r\n- **Tailwind configuration files are skipped** — your `tailwind.config.js` file is never going to be a source of classes to include in the final CSS so we don't scan it.\r\n- **Classes are detected using a known list of file extensions** — we automatically watch for a long list of common file types that could contain Tailwind classes, like `.js`, `.html`, `.php`, even `.json`. This way you don't need to restart your dev server the first time you create one of these files in an existing project.\r\n- **Additional template extensions are detected based on your specific project** — when we scan your project for classes, we keep track of every file extension we see and add them to our master list of extensions to watch for your project. So if you are using some obscure templating language I've never heard of that uses the `*.potato` extension, we'll watch `*.potato` files in all folders as long as we see at least one `*.potato` file when the build process starts.\r\n\r\nIn our testing these heuristics work great, and we've been able to remove the `content` configuration from every one of our own projects that we've tried it in.\r\n\r\nIf for whatever reason these heuristics don't work properly for your project, you can explicitly configure `content` just like you were doing before, and Tailwind will respect that configuration and not try to do any automatic content detection at all. This way you always have the option of full control over which files are scanned for classes.\r\n\r\n## Known limitations\r\n\r\nHow things work currently isn't perfect, and there are a few known limitations you might run into depending on how your project is structured.\r\n\r\n- **Creating a new file with an unseen extension that isn't in our safelist requires restarting your build process** — if your build process is already running and you try to create your very first `*.piledriver` file, Tailwind won't notice it and you'll need to restart your script.\r\n- **Running your build command from a different directory will scan the wrong paths** — because we treat the current working directory as your project root, you need to run your build script from the right place or Tailwind will scan the wrong files. In practice you probably will never notice this — you are already doing this if you use `npm run {command}` because that's how `npm run` already works.\r\n- **You can't force specific gitignored files to be scanned while automatically detecting every other file** — if you have some specific files you need to scan that live in `node_modules` but you want to ignore everything else in `node_modules`, you currently need to opt-out of automatic content detection and go back to explicitly configuring your content paths.\r\n- **Creating a new top-level folder that includes files that need to be scanned requires restarting your build process** — since we only watch top-level folders for new file events and not the entire project root, creating new top-level folders requires restarting your build process. A common example of where you might run into this is creating a `./components` folder for the first time in a Next.js project while your dev server is already running.\r\n- **The only way to explicitly prevent scanning a path is to gitignore it** — you can't tell Tailwind not to scan a folder for classes without also gitignoring that folder. If you need more control, you need to opt-out of automatic content detection and configure `content` explicitly.\r\n\r\nDespite these limitations, we're still finding automatic content detection to be miles ahead of explicit content configuration in terms of developer experience, and for projects that are structured in a conventional way you pretty much don't ever see or feel these limitations at all.\r\n\r\n## Planned improvements\r\n\r\nWhile we're ready to start shipping support for this in our `oxide-insiders` builds as-is, we do have some improvements we plan to explore that will hopefully make the experience even better:\r\n\r\n- **Skipping gitignored folders within top-level folders** — because of limitations with webpack's dependency tracking APIs our current implementation doesn't skip gitignored folders unless they are top-level. So if you have something like `./src/node_modules`, we still scan that folder. We should be able to solve this though, maybe even before we merge this PR.\r\n- **Support for scanning specific paths in addition to automatically detected paths** — using something like a new `@source \"./node_modules/my-library/dist/**/*.js\"` directive in your CSS, we hope to make it possible to scan paths that live within ignored directories without opting out of automatic content detection. This will also make it possible to scan for classes in parent/sibling directories, which some people might need in certain monorepo setups.\r\n- **Configure content paths more intelligently based on the running build tool** — not all build tools offer the same amount of control when it comes to registering paths we need to watch for changes, with webpack being the most limited. Currently we are solving for the lowest common denominator, but that's where limitations like \"can't notice newly created top-level folders\" come from. We can technically solve that in tools like Vite that offer more control, but to do that we need to detect the build tool you're using and intelligently register different dependency paths. We plan to explore this and see what we can come up with.\r\n\r\n---\r\n\r\nReally excited about this one, I think it's the biggest step-function improvement to the developer experience in Tailwind since the JIT engine. Looking forward to getting everyone playing with it so we can refine our heuristics and get things feeling as rock-solid as possible.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11173","RelatedDescription":"Closed or merged PR \"[Oxide] Automatic content detection\" (#11173)"},{"Id":"1706602297","IsPullRequest":true,"CreatedAt":"2023-05-11T21:43:47","Actor":"brandonmcconnell","Number":"11217","RawContent":null,"Title":"Add support for dimension prefix when using dynamic `min-*` and `max-*`","State":"open","Body":"This PR adds support for using a new dimension prefix with dynamic `min-*` and `max-*` variants. \r\n\r\n### Syntax:\r\n`type-[length]` or `type-[dimension:length]`, where…\r\n* `type`: `'min' | 'max'`\r\n* `dimension`: `'w' | 'h'` (optional, can be excluded to omit and default to `width`)\r\n* `length`: any valid CSS length\r\n\r\n### Syntax examples:\r\n\r\n```css\r\n/* min-[100px]   */ @media (min-width: 100px)\r\n/* min-[w:100px] */ @media (min-width: 100px)\r\n/* min-[h:100px] */ @media (min-height: 100px)\r\n/* max-[100px]   */ @media (max-width: 100px)\r\n/* max-[w:100px] */ @media (max-width: 100px)\r\n/* max-[h:100px] */ @media (max-height: 100px)\r\n```\r\n\r\n### Real use case examples:\r\n* only applied on screens taller than `100px`\r\n\r\n  ```html\r\n  <div class=\"min-[h:100px]:font-bold\" />\r\n  ```\r\n* only applied on screens taller and narrower than `100px`\r\n\r\n  ```html\r\n  <!-- without `w:` -->\r\n  <div class=\"min-[h:100px]:max-[100px]:font-bold\" />\r\n  <!-- or with `w:` -->\r\n  <div class=\"min-[h:100px]:max-[w:100px]:font-bold\" />\r\n  ```\r\n* only applied on screens shorter and narrower than `100px` (no conflict between `max-[w?:]` and `max-[h:]`)\r\n\r\n  ```html\r\n  <!-- without `w:` -->\r\n  <div class=\"max-[h:100px]:max-[100px]:font-bold\" />\r\n  <!-- or with `w:` -->\r\n  <div class=\"max-[h:100px]:max-[w:100px]:font-bold\" />\r\n  ```\r\n* only applied on screens taller and wider than `100px` (no conflict between `min-[w?:]` and `min-[h:]`)\r\n\r\n  ```html\r\n  <!-- without `w:` -->\r\n  <div class=\"min-[h:100px]:min-[100px]:font-bold\" />\r\n  <!-- or with `w:` -->\r\n  <div class=\"min-[h:100px]:min-[w:100px]:font-bold\" />\r\n  ```\r\n\r\n### Gotcha / usage note\r\n\r\nUsing `w:` is 100% optional and only exists so either dimension can be defined explicitly if the user so desires. If any prefix is used other than `h:` it defaults to using `width:`, though one consideration could be to throw a `log.risk` or `log.warn` if any non-`''`/`'w:'`/`'h:'` dimension prefix is used.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11217","RelatedDescription":"Open PR \"Add support for dimension prefix when using dynamic `min-*` and `max-*`\" (#11217)"},{"Id":"1706296890","IsPullRequest":false,"CreatedAt":"2023-05-11T18:09:59","Actor":"chrissantamaria","Number":"11215","RawContent":null,"Title":"[Prettier Plugin] Incompatible with `@ianvs/prettier-plugin-sort-imports` when using `prettier.config.js`","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\n`tailwindcss` v3.3.2, `prettier-plugin-tailwindcss` v0.2.8\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\n`vite` v4.3.1 (but in my reproduction repo that's not too relevant, this is just a Prettier issue)\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv18.8.0\r\n\r\n**What browser are you using?**\r\n\r\nN/A\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://github.com/chrissantamaria/prettier-plugin-tailwindcss-sort-order-bug\r\n\r\n**Describe your issue**\r\n\r\nI noticed that, despite being [listed as a compatible plugin](https://github.com/tailwindlabs/prettier-plugin-tailwindcss#compatibility-with-other-prettier-plugins) in the README, `@ianvs/prettier-plugin-sort-imports` is incompatible with `prettier-plugin-tailwindcss`. With the Tailwind plugin listed last in the `plugins` array (as instructed in the README), it still takes precedence over the sort plugin and effectively disables it.\r\n\r\nNotably, this only occurs when using a JS-based `prettier.config.js` file (where plugins are `require`'d) rather than a JSON-based `.prettierrc`. I suspect this is due to the `require` changing how plugins are loaded, but I'm not familiar with the internals of either plugin to be sure.\r\n\r\nSome alternatives I tried:\r\n- using `@trivago/prettier-plugin-sort-imports` instead - this has the same issue\r\n- using a different package manager - npm v8.18, Yarn v1.22 and pnpm v8.3 all have the same issue\r\n- using `prettier-plugin-tailwindcss` [v0.2.3](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/releases/tag/v0.2.3), as this was the first version to officially support `@ianvs/prettier-plugin-sort-imports` - no luck\r\n- creating a custom plugin [combining aspects of both](https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/31#issuecomment-1403682137) - this actually _did_ work, but is far from elegant\r\n\r\nIf this is expected functionality, it may be a good idea to make a note of the differences between `prettier.config.js` and `.prettierrc` in `prettier-plugin-tailwindcss`'s README (especially given that it shows examples using both).\r\n\r\n(this is a duplicate of a [discussion I opened a few weeks ago](https://github.com/tailwindlabs/tailwindcss/discussions/11051) - didn't get any traction there, but if you'd rather move discussion back feel free to close this!)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11215","RelatedDescription":"Closed issue \"[Prettier Plugin] Incompatible with `@ianvs/prettier-plugin-sort-imports` when using `prettier.config.js`\" (#11215)"},{"Id":"1705882705","IsPullRequest":false,"CreatedAt":"2023-05-11T14:28:01","Actor":"uncaught","Number":"11213","RawContent":null,"Title":"Tailwind causes webpack to recompile for any file change","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\n3.3.2\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\ncreate-react-app 5.0.1\r\n\r\n**What version of Node.js are you using?**\r\n\r\n18.15.0\r\n\r\n**What operating system are you using?**\r\n\r\nUbuntu 20.04.6 under Window 10 WSL\r\n\r\n**Reproduction**\r\n\r\nFollow https://tailwindcss.com/docs/guides/create-react-app to the letter:\r\n\r\n```\r\nnpx create-react-app my-project\r\ncd my-project\r\nnpm install -D tailwindcss\r\nnpx tailwindcss init\r\nsed -i 's|content: \\[\\]|content: [\"./src/**/*.{js,jsx,ts,tsx}\"]|g' tailwind.config.js\r\nprintf \"@tailwind base;\\n@tailwind components;\\n@tailwind utilities;\\n\" >> src/index.css\r\nnpm run start\r\n```\r\n\r\n**Describe your issue**\r\n\r\nWhen you save/touch/modify _any_ file inside `src` the webpack recompile triggers. It doesn't matter if the file matches the provided pattern or not. E.g. `touch src/x.x`.\r\n\r\nWithout tailwind, webpack does not trigger in this manner.\r\n\r\nUnfortunately this gets quite annoying when working on purely backend files in a larger project where the recompile takes some time and it shouldn't trigger at all.\r\n\r\nCould you change the watch system so that webpack isn't triggered if the files don't actually match the pattern? Or maybe integrate with webpack's file detection - there won't be any other files to include other than those webpack is bundling anyway, I guess.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11213","RelatedDescription":"Closed issue \"Tailwind causes webpack to recompile for any file change\" (#11213)"},{"Id":"1705856051","IsPullRequest":false,"CreatedAt":"2023-05-11T13:52:26","Actor":"olets","Number":"11211","RawContent":null,"Title":"breaks `editor.defaultColorDecorators` in VS Code 1.78","State":"closed","Body":"**What version of Tailwind CSS IntelliSense are you using?**\r\n\r\n0.9.11\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n3.3.1\r\n\r\n**What package manager are you using?**\r\n\r\nnpm\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Tailwind config**\r\n\r\nLmk if this is really needed. Minimal config for reproduction:\r\n\r\n```js\r\n/** @type {import('tailwindcss').Config} */\r\nmodule.exports = {\r\n  content: [/* fill me in */],\r\n  theme: {\r\n    extend: {\r\n      colors: {\r\n        example: '#ff0000',\r\n      }\r\n    }\r\n  },\r\n}\r\n```\r\n\r\n**VS Code settings**\r\n\r\nLmk if this is really needed.\r\n\r\n**Reproduction URL**\r\n\r\nLmk if you have a recommended way of creating cloud reproductions for this plugin.\r\n\r\n**Describe your issue**\r\n\r\nVS Code 1.78 (April 2023) adds inline color decorators\r\n\r\n> It is also now possible to visualize inline color decorators for CSS-formatted colors in all file types. To display these decorators, enable the Editor: Default Color Decorators (`editor.defaultColorDecorators`) setting.\r\n\r\n(source: https://code.visualstudio.com/updates/v1_78#_standalone-color-picker)\r\n\r\nWithout Tailwind CSS Intellisense enabled, color decorators appear. Screenshot example of the Tailwind config file (but the bug is not limited to this one file):\r\n\r\n![tailwind config screenshot showing a red color decorator next to the color value ff0000](https://user-images.githubusercontent.com/3282350/236341098-6a75d1ac-f77d-4da9-97d0-4bec9863c47b.png)\r\n\r\n\r\nWithout Tailwind CSS Intellisense enabled, color decorators appear in the Tailwind config file only until Tailwind CSS Intellisense loads, at which point they disappear.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11211","RelatedDescription":"Closed issue \"breaks `editor.defaultColorDecorators` in VS Code 1.78\" (#11211)"},{"Id":"1704640053","IsPullRequest":false,"CreatedAt":"2023-05-11T01:00:12","Actor":"federicocappellotto97","Number":"11206","RawContent":null,"Title":"Blog and docs difference for multi-config","State":"closed","Body":"[Here](https://tailwindcss.com/blog/tailwindcss-v3-2#multiple-config-files-in-one-project-using-config) the @config directive is on top of the file, but [here](https://tailwindcss.com/docs/functions-and-directives#config) it says you don't have to put @config before the imports","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11206","RelatedDescription":"Closed issue \"Blog and docs difference for multi-config\" (#11206)"},{"Id":"1704274084","IsPullRequest":true,"CreatedAt":"2023-05-10T17:44:03","Actor":"RobinMalfait","Number":"11205","RawContent":null,"Title":"Support `@import \"tailwindcss\"` using top-level `index.css` file","State":"closed","Body":"This PR adds an `index.css` file to the root of the package that contains the `@tailwind` directives for each of Tailwind's layers.\n\n```css\n/* node_modules/tailwindcss/index.css */\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n```\n\nIf you have `postcss-import` configured in your project, this makes it possible to add Tailwind to your CSS using a simple `@import` instead of writing out the `@tailwind` directives yourself:\n\n```css\n@import \"tailwindcss\";\n```\n\n<!--\n\n👋 Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11205","RelatedDescription":"Closed or merged PR \"Support `@import \"tailwindcss\"` using top-level `index.css` file\" (#11205)"},{"Id":"1703076769","IsPullRequest":true,"CreatedAt":"2023-05-10T13:25:13","Actor":"Simon-He95","Number":"11202","RawContent":null,"Title":"refactor(corePlugins): borderColor","State":"closed","Body":"<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11202","RelatedDescription":"Closed or merged PR \"refactor(corePlugins): borderColor\" (#11202)"},{"Id":"1702887432","IsPullRequest":true,"CreatedAt":"2023-05-09T23:44:58","Actor":"depfu[bot]","Number":"11201","RawContent":null,"Title":"Update sass: 1.62.0 → 1.62.1 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ sass (1.62.0 → 1.62.1) · [Repo](https://github.com/sass/dart-sass) · [Changelog](https://github.com/sass/dart-sass/blob/main/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/sass/dart-sass/releases/tag/1.62.1\">1.62.1</a></h4>\n\n<blockquote><p dir=\"auto\">To install Sass 1.62.1, download one of the packages below and <a href=\"https://katiek2.github.io/path-doc/\">add it to your PATH</a>, or see <a href=\"https://sass-lang.com/install\">the Sass website</a> for full installation instructions.</p>\n<h1 dir=\"auto\">Changes</h1>\n<ul dir=\"auto\">\n<li>Fix a bug where <code class=\"notranslate\">:has(+ &amp;)</code> and related constructs would drop the leading combinator.</li>\n</ul>\n<p dir=\"auto\">See the <a href=\"https://bounce.depfu.com/github.com/sass/dart-sass/blob/master/CHANGELOG.md#1621\">full changelog</a> for changes in earlier releases.</p></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/sass/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/sass/dart-sass/compare/c55235d166591e86ed342a1b5937b3d600e4d4de...8dddcb7b7db13984fea69fa85438acf30b56b4bb\">See the full diff on Github</a>. The new version differs by 2 commits:</p>\n<ul>\n<li><a href=\"https://github.com/sass/dart-sass/commit/8dddcb7b7db13984fea69fa85438acf30b56b4bb\"><code>Split SilentComment nodes on empty lines in SCSS (#1945)</code></a></li>\n<li><a href=\"https://github.com/sass/dart-sass/commit/3091de542c78a6b30e99b47681399a1c9a551213\"><code>Fix :has(+ &amp;) (#1938)</code></a></li>\n</ul>\n</details>\n\n\n\n\n#### ✳️ cssnano (6.0.0 → 6.0.1) · [Repo](https://github.com/cssnano/cssnano) · [Changelog](https://github.com/cssnano/cssnano/blob/master/packages/cssnano/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n\n<h4>6.0.1 (from changelog)</h4>\n<blockquote><h3 dir=\"auto\">\n<a href=\"#patch-changes\"></a>Patch Changes</h3>\n<ul dir=\"auto\">\n<li>chore: updage postcss-calc to version 9</li>\n<li>fix(postcss-merge-rules): do not merge nested rules</li>\n<li>Updated dependencies\n<ul dir=\"auto\">\n<li>cssnano-preset-default@6.0.1</li>\n</ul>\n</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/cssnano/feedback\">Please let us know.</a></em></p>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11201","RelatedDescription":"Closed or merged PR \"Update sass: 1.62.0 → 1.62.1 (patch)\" (#11201)"},{"Id":"1702877184","IsPullRequest":true,"CreatedAt":"2023-05-09T23:24:20","Actor":"brandonmcconnell","Number":"11200","RawContent":null,"Title":"Extend preflight `html` styles to support other `:root, :host` scopes","State":"open","Body":"This PR simply replaces `html` with `:root, :host` to support all `:root` and `:host` contexts:\r\n\r\n* `:root` supports…\r\n  * `html` (same as plainly using `html`)\r\n  * SVG root scope\r\n* `:host` supports…\r\n  * ShadowDOM shadow root scope","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11200","RelatedDescription":"Open PR \"Extend preflight `html` styles to support other `:root, :host` scopes\" (#11200)"},{"Id":"1702663375","IsPullRequest":false,"CreatedAt":"2023-05-09T22:36:30","Actor":"ahosker","Number":"11195","RawContent":null,"Title":"Failed to load PostCSS config","State":"closed","Body":"**MISC**\r\nThis could be a bug(s) in Laravel Sail, Livewire or Tailwind CSS.\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.3.2\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\nVite\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv18.16.0\r\n\r\n**What operating system are you using?**\r\n\r\nUsing Laravel Sail on Ubuntu\r\n\r\n**Describe your issue**\r\n\r\nI installed ubuntu server.\r\nI updated ubuntu server.\r\nI used Laravel Sail Linux Guide ( https://laravel.com/docs/10.x )\r\nI installed Tall Stack ( https://tallstack.dev/ )\r\n\r\n```\r\n$ sail npm run dev\r\n\r\n> dev\r\n> vite\r\n\r\n\r\n  VITE v4.3.5  ready in 556 ms\r\n\r\n  ➜  Local:   http://localhost:5173/\r\n  ➜  Network: http://172.19.0.7:5173/\r\n  ➜  press h to show help\r\n\r\n  LARAVEL v10.10.0  plugin v\r\n\r\n  ➜  APP_URL: http://localhost\r\nnode:internal/process/promises:288\r\n            triggerUncaughtException(err, true /* fromPromise */);\r\n            ^\r\n\r\n[Failed to load PostCSS config: Failed to load PostCSS config (searchPath: /var/www/html): [Failed to load PostCSS config] Failed to load PostCSS config (searchPath: /var/www/html): [ReferenceError] module is not defined in ES module scope\r\nThis file is being treated as an ES module because it has a '.js' file extension and '/var/www/html/package.json' contains \"type\": \"module\". To treat it as a CommonJS script, rename it to use the '.cjs' file extension.\r\nReferenceError: module is not defined in ES module scope\r\nThis file is being treated as an ES module because it has a '.js' file extension and '/var/www/html/package.json' contains \"type\": \"module\". To treat it as a CommonJS script, rename it to use the '.cjs' file extension.\r\n    at file:///var/www/html/postcss.config.js:1:1\r\n    at ModuleJob.run (node:internal/modules/esm/module_job:194:25)\r\n]\r\n\r\nNode.js v18.16.0\r\n```\r\n\r\nThe following command fixes the issue:\r\n\r\n`mv postcss.config.js postcss.config.cjs`\r\n\r\nThough this shouldn't be required? \r\n\r\nAfter that fix, running NPM run dev I get the error:\r\n```\r\n8:06:19 PM [vite] Internal server error: __dirname is not defined\r\n      at file:///var/www/html/node_modules/laravel-vite-plugin/dist/index.mjs:126:39\r\n      at call (file:///var/www/html/node_modules/vite/dist/node/chunks/dep-934dbc7c.js:49019:7)\r\n      at next (file:///var/www/html/node_modules/vite/dist/node/chunks/dep-934dbc7c.js:48963:5)\r\n      at file:///var/www/html/node_modules/vite/dist/node/chunks/dep-934dbc7c.js:61287:17\r\n      at viteHtmlFallbackMiddleware (file:///var/www/html/node_modules/vite/dist/node/chunks/dep-934dbc7c.js:61367:16)\r\n      at call (file:///var/www/html/node_modules/vite/dist/node/chunks/dep-934dbc7c.js:49019:7)\r\n      at next (file:///var/www/html/node_modules/vite/dist/node/chunks/dep-934dbc7c.js:48963:5)\r\n      at viteServeStaticMiddleware (file:///var/www/html/node_modules/vite/dist/node/chunks/dep-934dbc7c.js:46030:20)\r\n      at call (file:///var/www/html/node_modules/vite/dist/node/chunks/dep-934dbc7c.js:49019:7)\r\n      at next (file:///var/www/html/node_modules/vite/dist/node/chunks/dep-934dbc7c.js:48963:5)\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11195","RelatedDescription":"Closed issue \"Failed to load PostCSS config\" (#11195)"},{"Id":"1701908788","IsPullRequest":false,"CreatedAt":"2023-05-09T12:46:06","Actor":"ethernalarts","Number":"11191","RawContent":null,"Title":"Tailwind CSS not working well with django-weasyprint","State":"closed","Body":"### Discussed in https://github.com/tailwindlabs/tailwindcss/discussions/11187\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **ethernalarts** May  9, 2023</sup>\r\nHello.\r\n\r\nI am working on a django app using Tailwind CSS at the frontend. When outputing an HTML template as a PDF file using django-weasy print, Tailwind CSS stylesheet isn't applied and it looks bland, disorderly and ugly. The error log file showed a lot of \"ignored\" and \"invalid\" errors. Please has anyone come across this problem, and any ideas how to solve this? Thanks.\r\n\r\nAttached is a copy of the weasyprint log file.\r\n\r\n[weasyprint.log](https://github.com/tailwindlabs/tailwindcss/files/11429816/weasyprint.log)\r\n</div>","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11191","RelatedDescription":"Closed issue \"Tailwind CSS not working well with django-weasyprint\" (#11191)"},{"Id":"1701908690","IsPullRequest":false,"CreatedAt":"2023-05-09T12:45:55","Actor":"ethernalarts","Number":"11190","RawContent":null,"Title":"Tailwind CSS not working well with django-weasyprint","State":"closed","Body":"### Discussed in https://github.com/tailwindlabs/tailwindcss/discussions/11187\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **ethernalarts** May  9, 2023</sup>\r\nHello.\r\n\r\nI am working on a django app using Tailwind CSS at the frontend. When outputing an HTML template as a PDF file using django-weasy print, Tailwind CSS stylesheet isn't applied and it looks bland, disorderly and ugly. The error log file showed a lot of \"ignored\" and \"invalid\" errors. Please has anyone come across this problem, and any ideas how to solve this? Thanks.\r\n\r\nAttached is a copy of the weasyprint log file.\r\n\r\n[weasyprint.log](https://github.com/tailwindlabs/tailwindcss/files/11429816/weasyprint.log)\r\n</div>","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11190","RelatedDescription":"Closed issue \"Tailwind CSS not working well with django-weasyprint\" (#11190)"},{"Id":"1698213791","IsPullRequest":true,"CreatedAt":"2023-05-08T14:44:43","Actor":"depfu[bot]","Number":"11166","RawContent":null,"Title":"Upgrade postcss-loader: 4.3.0 → 7.3.0 (major)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this upgrade. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ postcss-loader (4.3.0 → 7.3.0) · [Repo](https://github.com/webpack-contrib/postcss-loader) · [Changelog](https://github.com/webpack-contrib/postcss-loader/blob/master/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<p><em>Too many releases to show here. View the <a href=\"https://github.com/webpack-contrib/postcss-loader/blob/master/CHANGELOG.md\">full release notes</a>.</em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/webpack-contrib/postcss-loader/compare/aa37278872329bd3435fea5dd07de631d75b9801...34eb9450c44fc07c2b21f56fe854ea5cd9a3fa8c\">See the full diff on Github</a>. The new version differs by more commits than we can show here.</p>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11166","RelatedDescription":"Closed or merged PR \"Upgrade postcss-loader: 4.3.0 → 7.3.0 (major)\" (#11166)"},{"Id":"1699498020","IsPullRequest":false,"CreatedAt":"2023-05-08T07:33:34","Actor":"benface","Number":"11178","RawContent":null,"Title":"`bg-[repeating-conic-gradient(...)]` generates a `background-color` declaration instead of `background-image`","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\n3.3.2\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nJust the CLI.\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv20.0.0\r\n\r\n**What browser are you using?**\r\n\r\nN/A\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/n33mDmU8bq\r\n\r\nLook at the \"Generated CSS\":\r\n\r\n<img width=\"702\" alt=\"CleanShot 2023-05-08 at 00 30 42@2x\" src=\"https://user-images.githubusercontent.com/1059139/236734266-210b75b4-9a67-4b6e-96e5-fc735e28c83b.png\">\r\n\r\n**Describe your issue**\r\n\r\nI would expect the generated CSS rule to be:\r\n\r\n```css\r\n.bg-\\[repeating-conic-gradient\\(\\#F8F9FA_0\\%_25\\%\\2c _white_0\\%_50\\%\\)\\] {\r\n  background-image: repeating-conic-gradient(#F8F9FA 0% 25%, white 0% 50%);\r\n}\r\n```\r\n\r\nJust like it works with `bg-[conic-gradient(...)]`. Thank you!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11178","RelatedDescription":"Closed issue \"`bg-[repeating-conic-gradient(...)]` generates a `background-color` declaration instead of `background-image`\" (#11178)"},{"Id":"1699694932","IsPullRequest":true,"CreatedAt":"2023-05-08T07:32:58","Actor":"RobinMalfait","Number":"11180","RawContent":null,"Title":"Ensure `repeating-conic-gradient` is detected as an image","State":"closed","Body":"This PR improves the type detection for `repeating-conic-gradient`, it used to fallback to\n`background-color` but similar to `repeating-linear-gradient` this is actually a `background-image`.\n\nFixes: #11178\n<!--\n\n👋 Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11180","RelatedDescription":"Closed or merged PR \"Ensure `repeating-conic-gradient` is detected as an image\" (#11180)"},{"Id":"1699404626","IsPullRequest":false,"CreatedAt":"2023-05-08T03:15:26","Actor":"Godsex","Number":"11177","RawContent":null,"Title":"The two versions have the same class but behave differently","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nV3.3.2\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nAngular14.1.1\r\n\r\n**What version of Node.js are you using?**\r\n\r\nV16.16.0\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/7aef44vzB0\r\nhttps://play.tailwindcss.com/jIaPV6P7ZS\r\n\r\n**Describe your issue**\r\nThe two versions have the same class but behave differently\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11177","RelatedDescription":"Closed issue \"The two versions have the same class but behave differently\" (#11177)"},{"Id":"1698980825","IsPullRequest":true,"CreatedAt":"2023-05-07T09:45:17","Actor":"depfu[bot]","Number":"11174","RawContent":null,"Title":"Update cssnano: 6.0.0 → 6.0.1 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ postcss-selector-parser (6.0.11 → 6.0.12) · [Repo](https://github.com/postcss/postcss-selector-parser) · [Changelog](https://github.com/postcss/postcss-selector-parser/blob/master/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/postcss/postcss-selector-parser/releases/tag/v6.0.12\">6.0.12</a></h4>\n\n<blockquote><h1 dir=\"auto\">6.0.12</h1>\n<ul dir=\"auto\">\n<li>Fixed: <code class=\"notranslate\">clone</code> arguments should be optional</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/postcss-selector-parser/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/postcss/postcss-selector-parser/compare/e6b4029387572dce965345f6de00b5e3bf666bc9...66b51528c1a74f98c387e767c5564ace2a8d271f\">See the full diff on Github</a>. The new version differs by 4 commits:</p>\n<ul>\n<li><a href=\"https://github.com/postcss/postcss-selector-parser/commit/66b51528c1a74f98c387e767c5564ace2a8d271f\"><code>chore(release): 6.0.12</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss-selector-parser/commit/63b463e075ddeb4e1670de5635f1f2fb23b303e2\"><code>fix(types): clone (#276)</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss-selector-parser/commit/6d3bd5728a787127021ab82e874c2e6bc582a5dd\"><code>chore(deps): bump json5 from 2.2.1 to 2.2.3 (#274)</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss-selector-parser/commit/fe807ad92fe0091d81c55866bdb9a1ed2726801b\"><code>chore: update dependencies (#268)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11174","RelatedDescription":"Closed or merged PR \"Update cssnano: 6.0.0 → 6.0.1 (patch)\" (#11174)"},{"Id":"1692523664","IsPullRequest":true,"CreatedAt":"2023-05-07T01:23:53","Actor":"RobinMalfait","Number":"11142","RawContent":null,"Title":"WIP: [oxide] Auto content","State":"closed","Body":"This PR adds a new auto content feature.\n\n<!-- Will improve this description once we finalize this PR a bit more with all the exact features. -->\n<!-- Dropping this message in here such that you know I didn't forget about this 😉 -->\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11142","RelatedDescription":"Closed or merged PR \"WIP: [oxide] Auto content\" (#11142)"},{"Id":"1698641945","IsPullRequest":true,"CreatedAt":"2023-05-06T14:00:45","Actor":"depfu[bot]","Number":"11168","RawContent":null,"Title":"Update postcss-selector-parser: 6.0.11 → 6.0.12 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ postcss-selector-parser (6.0.11 → 6.0.12) · [Repo](https://github.com/postcss/postcss-selector-parser) · [Changelog](https://github.com/postcss/postcss-selector-parser/blob/master/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/postcss/postcss-selector-parser/releases/tag/v6.0.12\">6.0.12</a></h4>\n\n<blockquote><h1 dir=\"auto\">6.0.12</h1>\n<ul dir=\"auto\">\n<li>Fixed: <code class=\"notranslate\">clone</code> arguments should be optional</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/postcss-selector-parser/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/postcss/postcss-selector-parser/compare/e6b4029387572dce965345f6de00b5e3bf666bc9...66b51528c1a74f98c387e767c5564ace2a8d271f\">See the full diff on Github</a>. The new version differs by 4 commits:</p>\n<ul>\n<li><a href=\"https://github.com/postcss/postcss-selector-parser/commit/66b51528c1a74f98c387e767c5564ace2a8d271f\"><code>chore(release): 6.0.12</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss-selector-parser/commit/63b463e075ddeb4e1670de5635f1f2fb23b303e2\"><code>fix(types): clone (#276)</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss-selector-parser/commit/6d3bd5728a787127021ab82e874c2e6bc582a5dd\"><code>chore(deps): bump json5 from 2.2.1 to 2.2.3 (#274)</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss-selector-parser/commit/fe807ad92fe0091d81c55866bdb9a1ed2726801b\"><code>chore: update dependencies (#268)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11168","RelatedDescription":"Closed or merged PR \"Update postcss-selector-parser: 6.0.11 → 6.0.12 (patch)\" (#11168)"},{"Id":"1696060847","IsPullRequest":true,"CreatedAt":"2023-05-04T14:20:01","Actor":"thecrypticace","Number":"11157","RawContent":null,"Title":"Fix parsing of `theme()` inside `calc()` when there are no spaces around operators","State":"closed","Body":"This is ultimately a bug in `postcss-value-parser` so we've inlined the package and tweaked the parsing to handle this situation.\r\n\r\nFixes #11027","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11157","RelatedDescription":"Closed or merged PR \"Fix parsing of `theme()` inside `calc()` when there are no spaces around operators\" (#11157)"},{"Id":"1694513717","IsPullRequest":false,"CreatedAt":"2023-05-03T20:02:02","Actor":"mightymatth","Number":"11152","RawContent":null,"Title":"Hover variant overrides a custom hover utility class styles in plugin","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv3.3.2\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nTailwind Playground\r\n\r\n**What version of Node.js are you using?**\r\n\r\nTailwind Playground\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/3lvxwrvQBx\r\n\r\n**Describe your issue**\r\n\r\nI have a custom CSS styling for `hover` in a 3rd-party library in _CSS-in-JS_ syntax that I import as a utility class in a custom Tailwind plugin. \r\n\r\nThe whole setup looks like this:\r\n```js\r\n/** @type {import('tailwindcss').Config} */\r\nmodule.exports = {\r\n  plugins: [\r\n    plugin(({ addUtilities }) => {\r\n      addUtilities({\r\n        '.custom-hover': getHoverStyle,\r\n      });\r\n    })\r\n  ],\r\n}\r\n\r\n// style from a 3rd-party library\r\nconst getHoverStyle = {\r\n    borderRadius: \"medium\",\r\n    marginLeft: \"-2px\",\r\n    marginRight: \"-2px\",\r\n    paddingLeft: \"2px\",\r\n    paddingRight: \"2px\",\r\n    '@media(hover:hover)': {\r\n        '&': {\r\n            transition: \"background var(--p-transition-duration, .24s) ease\",\r\n        },\r\n        '&:hover': {\r\n            background: \"rgba(148, 149, 152, .18)\",\r\n        },\r\n    },\r\n};\r\n\r\n```\r\n\r\nIn template, I have this:\r\n```html\r\n<span class=\"custom-hover\">custom-hover (works)</span>\r\n\r\n<span class=\"hover:custom-hover\">hover:custom-hover (doesn't work)</span>\r\n```\r\n\r\nThe problem is that, if I want to use `hover:custom-hover`, it wouldn't work because it gets overwritten by `hover` variant, I suppose. (denied in EDIT1).\r\n\r\n1. Is there are way to fix this issue just by proper configuration?\r\n  - or modifying `getHoverStyle` CSS-in-JS variable is the only way?\r\n2. Do you consider this as a correct behavior or maybe a bug?\r\n  - if it's clear, move to discussions/help, please.\r\n\r\nThanks!\r\n\r\n---\r\n\r\nEDIT1:\r\n\r\nI noticed that it generated a broken CSS when using it with the hover variant:\r\n\r\n<details>\r\n<summary>Generated CSS - Utilities</summary>\r\n\r\n```\r\n.custom-hover {\r\n  border-radius: medium;\r\n  margin-left: -2px;\r\n  margin-right: -2px;\r\n  padding-left: 2px;\r\n  padding-right: 2px;\r\n  @media(hover:hover) {\r\n    & {\r\n      transition: background var(--p-transition-duration, .24s) ease;\r\n    }\r\n\r\n    &:hover {\r\n      background: rgba(148, 149, 152, .18);\r\n    }\r\n  }\r\n}\r\n\r\n.hover\\:custom-hover:hover {\r\n  border-radius: medium;\r\n  margin-left: -2px;\r\n  margin-right: -2px;\r\n  padding-left: 2px;\r\n  padding-right: 2px;\r\n  @media(hover:hover) {\r\n     {\r\n      transition: background var(--p-transition-duration, .24s) ease;\r\n    }\r\n\r\n     {\r\n      background: rgba(148, 149, 152, .18);\r\n    }\r\n  }\r\n}\r\n```\r\n</details>\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11152","RelatedDescription":"Closed issue \"Hover variant overrides a custom hover utility class styles in plugin\" (#11152)"},{"Id":"1694358715","IsPullRequest":true,"CreatedAt":"2023-05-03T15:59:27","Actor":"depfu[bot]","Number":"11151","RawContent":null,"Title":"Update vite: 4.3.2 → 4.3.4 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ vite (4.3.2 → 4.3.4) · [Repo](https://github.com/vitejs/vite) · [Changelog](https://github.com/vitejs/vite/blob/main/packages/vite/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/vitejs/vite/releases/tag/v4.3.4\">4.3.4</a></h4>\n\n<blockquote><p dir=\"auto\">Please refer to <a href=\"https://bounce.depfu.com/github.com/vitejs/vite/blob/v4.3.4/packages/vite/CHANGELOG.md\">CHANGELOG.md</a> for details.</p></blockquote>\n<h4><a href=\"https://github.com/vitejs/vite/releases/tag/v4.3.3\">4.3.3</a></h4>\n\n<blockquote><p dir=\"auto\">Please refer to <a href=\"https://bounce.depfu.com/github.com/vitejs/vite/blob/v4.3.3/packages/vite/CHANGELOG.md\">CHANGELOG.md</a> for details.</p></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/vite/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/vitejs/vite/compare/1bc42cfb2abb2912a613f8f1d9de3d4348b41144...5890aa9f4f3101fc722f2d6cf5a27362644dbb03\">See the full diff on Github</a>. The new version differs by 19 commits:</p>\n<ul>\n<li><a href=\"https://github.com/vitejs/vite/commit/5890aa9f4f3101fc722f2d6cf5a27362644dbb03\"><code>release: v4.3.4</code></a></li>\n<li><a href=\"https://github.com/vitejs/vite/commit/422dc7546baed427bd419ff036baccea3331ebe7\"><code>docs: update Vue 2 plugins (#13063)</code></a></li>\n<li><a href=\"https://github.com/vitejs/vite/commit/1ee0014caa7ecf91ac147dca3801820020a4b8a0\"><code>fix(server): should respect hmr port when middlewareMode=false (#13040)</code></a></li>\n<li><a href=\"https://github.com/vitejs/vite/commit/0c9f1f4a8a94623c4b46d1fa6d8c29908f379a68\"><code>chore: add changelog for vite 4.2.2 and 3.2.6 (#13055)</code></a></li>\n<li><a href=\"https://github.com/vitejs/vite/commit/8f4cf0752abd1bd51af6726f24ceeca47f6d5ba6\"><code>fix(define): incorrect raw expression value type in build (#13003)</code></a></li>\n<li><a href=\"https://github.com/vitejs/vite/commit/447df7cba987b30e3621076a74e2227f8232f64a\"><code>fix(importAnalysisBuild): support parsing &#39;__VITE_PRELOAD__&#39; (#13023)</code></a></li>\n<li><a href=\"https://github.com/vitejs/vite/commit/fe73198d2412b786aa050b7fd58a9a543b9d07a7\"><code>test(resolve): ssr deep import resolve (#13022)</code></a></li>\n<li><a href=\"https://github.com/vitejs/vite/commit/2f8502fd64071af669d5871ea3f0d5edb86f9690\"><code>fix(ssr): track for statements as block scope (#13021)</code></a></li>\n<li><a href=\"https://github.com/vitejs/vite/commit/f749c3e5802c9d8adb653b591be79148bbaf5df8\"><code>release: v4.3.3</code></a></li>\n<li><a href=\"https://github.com/vitejs/vite/commit/30a41ffbeb583311ec227e53c0cd2331d26993b0\"><code>fix(resolve): deep import resolvedId error (#13010)</code></a></li>\n<li><a href=\"https://github.com/vitejs/vite/commit/08c1452a8459ae55c01c94f111232a1502341c0b\"><code>fix: undefined document in worker (#12988)</code></a></li>\n<li><a href=\"https://github.com/vitejs/vite/commit/bd86375c1610f8a43599327675b26a4f124e013b\"><code>feat: optimize deps option to turn off auto discovery (#13000)</code></a></li>\n<li><a href=\"https://github.com/vitejs/vite/commit/5731ac9caaef629e892e20394f0cc73c565d9a87\"><code>chore(deps): update all non-major dependencies (#12805)</code></a></li>\n<li><a href=\"https://github.com/vitejs/vite/commit/84c4118d5f1e73fe964d680aa316bf0fd7d5ee20\"><code>fix: address file path mismatch when loading Vite config file on Windows (fix #12923) (#13005)</code></a></li>\n<li><a href=\"https://github.com/vitejs/vite/commit/ad1ae3ed6a32baf5d56823f8004555c68d3ad405\"><code>docs: releases page (#12909)</code></a></li>\n<li><a href=\"https://github.com/vitejs/vite/commit/ef7b720432cb67b4684a9d430ab3264572305c67\"><code>test(server): vite server restart flow (#12777)</code></a></li>\n<li><a href=\"https://github.com/vitejs/vite/commit/061e48b0a35d94b9f976c28e4d92154a340000bd\"><code>release: create-vite@4.3.1</code></a></li>\n<li><a href=\"https://github.com/vitejs/vite/commit/14cd93979265700677bcc8322ff729a33bebe514\"><code>chore(create-vite): update to plugin-react 4.0.0</code></a></li>\n<li><a href=\"https://github.com/vitejs/vite/commit/0a5c90ca89c086639257953963f21f26cfa90cc5\"><code>release: plugin-legacy@4.0.3</code></a></li>\n</ul>\n</details>\n\n\n\n\n#### ✳️ @​swc/core (1.3.55 → 1.3.56) · [Repo](https://github.com/swc-project/swc) · [Changelog](https://github.com/swc-project/swc/blob/main/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n\n<h4>1.3.56 (from changelog)</h4>\n<blockquote><h3 dir=\"auto\">\n<a href=\"#bug-fixes\"></a>Bug Fixes</h3>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><strong>(es/codegen)</strong> Emit type arguments for call expressions (<a href=\"https://bounce.depfu.com/github.com/swc-project/swc/pull/7335\">#7335</a>) (<a href=\"https://bounce.depfu.com/github.com/swc-project/swc/commit/7e99e5fd2c3d15aba6bf29958bd9305e29312e6a\">7e99e5f</a>)</p>\n</li>\n<li>\n<p dir=\"auto\"><strong>(es/parser)</strong> Parse decorators after <code class=\"notranslate\">export</code> (<a href=\"https://bounce.depfu.com/github.com/swc-project/swc/pull/7340\">#7340</a>) (<a href=\"https://bounce.depfu.com/github.com/swc-project/swc/commit/985f0cad06b9de5f9e98bed3ad62769e0f3c7528\">985f0ca</a>)</p>\n</li>\n<li>\n<p dir=\"auto\"><strong>(es/typescript)</strong> Fix typescript strip pass (<a href=\"https://bounce.depfu.com/github.com/swc-project/swc/pull/7342\">#7342</a>) (<a href=\"https://bounce.depfu.com/github.com/swc-project/swc/commit/d061d295ff2ca6ebb03d9c62c367f42f7186c2d7\">d061d29</a>)</p>\n</li>\n<li>\n<p dir=\"auto\"><strong>(plugin/runner)</strong> Revert <a href=\"https://bounce.depfu.com/github.com/swc-project/swc/pull/7341\">#7341</a> (<a href=\"https://bounce.depfu.com/github.com/swc-project/swc/pull/7344\">#7344</a>) (<a href=\"https://bounce.depfu.com/github.com/swc-project/swc/commit/d6999ba1ac454a1617bab00c740d99f81ff1a18d\">d6999ba</a>)</p>\n</li>\n</ul>\n<h3 dir=\"auto\">\n<a href=\"#features\"></a>Features</h3>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\"><strong>(es/minifier)</strong> Drop expressions using sequential inliner (<a href=\"https://bounce.depfu.com/github.com/swc-project/swc/pull/6936\">#6936</a>) (<a href=\"https://bounce.depfu.com/github.com/swc-project/swc/commit/246300ae25be0cfdbbb266e02f80d06013a96d85\">246300a</a>)</p>\n</li>\n<li>\n<p dir=\"auto\"><strong>(plugin/runner)</strong> Improve caching (<a href=\"https://bounce.depfu.com/github.com/swc-project/swc/pull/7341\">#7341</a>) (<a href=\"https://bounce.depfu.com/github.com/swc-project/swc/commit/245163a77827767ab0b4df59d00597c4af62d745\">245163a</a>)</p>\n</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/@swc%2Fcore/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/swc-project/swc/compare/c67900278e9cafff4daa8519fe877616a9be060b...fee0ec4d0116cca7c66ef1b3644b6f4b4011ab90\">See the full diff on Github</a>. The new version differs by 14 commits:</p>\n<ul>\n<li><a href=\"https://github.com/swc-project/swc/commit/fee0ec4d0116cca7c66ef1b3644b6f4b4011ab90\"><code>chore: Publish `v1.3.56` with `swc_core` `v0.75.41` (#7345)</code></a></li>\n<li><a href=\"https://github.com/swc-project/swc/commit/4ad18beca34e60bafb6ddbd14218e9ff4148c93e\"><code>chore: Publish crates</code></a></li>\n<li><a href=\"https://github.com/swc-project/swc/commit/d061d295ff2ca6ebb03d9c62c367f42f7186c2d7\"><code>fix(es/typescript): Fix typescript strip pass (#7342)</code></a></li>\n<li><a href=\"https://github.com/swc-project/swc/commit/767284e27fbdafc006faa7a9c42c4297f68467fd\"><code>chore: Publish crates</code></a></li>\n<li><a href=\"https://github.com/swc-project/swc/commit/985f0cad06b9de5f9e98bed3ad62769e0f3c7528\"><code>fix(es/parser): Parse decorators after `export` (#7340)</code></a></li>\n<li><a href=\"https://github.com/swc-project/swc/commit/b80ceaed03bb5425f1f50881f510ec8b8df6c4b1\"><code>chore: Publish crates</code></a></li>\n<li><a href=\"https://github.com/swc-project/swc/commit/246300ae25be0cfdbbb266e02f80d06013a96d85\"><code>feat(es/minifier): Drop expressions using sequential inliner (#6936)</code></a></li>\n<li><a href=\"https://github.com/swc-project/swc/commit/098b9387c172b45f507434edb0d1184792d709bb\"><code>chore: Publish crates</code></a></li>\n<li><a href=\"https://github.com/swc-project/swc/commit/d6999ba1ac454a1617bab00c740d99f81ff1a18d\"><code>fix(plugin/runner): Revert #7341 (#7344)</code></a></li>\n<li><a href=\"https://github.com/swc-project/swc/commit/2c7f94f1ac6c55b2452a4d4ea60766447534c3d3\"><code>chore: Publish crates</code></a></li>\n<li><a href=\"https://github.com/swc-project/swc/commit/245163a77827767ab0b4df59d00597c4af62d745\"><code>feat(plugin/runner): Improve caching (#7341)</code></a></li>\n<li><a href=\"https://github.com/swc-project/swc/commit/e7911ee594ec1c85b4f0a4fe19833f737d4576dd\"><code>chore: Publish crates</code></a></li>\n<li><a href=\"https://github.com/swc-project/swc/commit/7e99e5fd2c3d15aba6bf29958bd9305e29312e6a\"><code>fix(es/codegen): Emit type arguments for call expressions (#7335)</code></a></li>\n<li><a href=\"https://github.com/swc-project/swc/commit/1ecc4385b6f49207e011b9fde60c310fc0612d0c\"><code>chore: Publish crates</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11151","RelatedDescription":"Closed or merged PR \"Update vite: 4.3.2 → 4.3.4 (patch)\" (#11151)"},{"Id":"1693948520","IsPullRequest":false,"CreatedAt":"2023-05-03T12:55:54","Actor":"kwiat1990","Number":"11148","RawContent":null,"Title":"Classes for `flex-direction` are missing in bundled CSS","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nFor example: v3.2.2\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nFor example: Remix 1.16.0 with an express server\r\n\r\n**What version of Node.js are you using?**\r\n\r\nFor example: v16.18.1\r\n\r\n**What browser are you using?**\r\n\r\nFor example: Chrome\r\n\r\n**What operating system are you using?**\r\n\r\nFor example: macOS\r\n\r\n**Reproduction URL**\r\nConsidering following JSX/HTML\r\n```tsx\r\n<div className=\"flex flex-row-reverse\">\r\n    <div>1</div>\r\n    <div>2</div>\r\n</div>\r\n```\r\n`.flex-row-reverse` class won't be included in the CSS files loaded in the browser.\r\n\r\n**Describe your issue**\r\n\r\nNone of the [classes](https://tailwindcss.com/docs/flex-direction) related to`flex-direction` is included in the bundled Tailwind CSS file.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11148","RelatedDescription":"Closed issue \"Classes for `flex-direction` are missing in bundled CSS\" (#11148)"},{"Id":"1693106645","IsPullRequest":false,"CreatedAt":"2023-05-02T21:10:15","Actor":"jaketodaro","Number":"11146","RawContent":null,"Title":"Mixing certain pseudo selectors produces invalid css rules","State":"open","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv3.0.24\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\npostcss ^8.4.12\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv16.20.0\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/74pcKVCzJX\r\n\r\n**Describe your issue**\r\n\r\nMixing certain psuedo selectors produces in valid css rules. For example `first-line:first-letter:bg-transparent` produces the following CSS\r\n\r\n```\r\n.first-letter\\:first-line\\:bg-transparent::first-line::first-letter {\r\n  background-color: transparent;\r\n}\r\n```\r\n\r\nThis is a dumb classname to write since you can't actually use `:first-line` and `:first-letter` together, but the fact that this classname causes tailwind to produce an invalid selector causes problems when selectors are merged because it will break the entire css rule.\r\n\r\nRecently someone wrote this exact selector in our app and it didn't do anything at the time, but it was a ticking time bomb. When I came along months later and added the first use of the `bg-transparent` class, it got merged with the bad selector and didn't work and was a pain to debug.\r\n\r\n```\r\n.bg-transparent,.first-letter\\:first-line\\:bg-transparent::first-line::first-letter {\r\n  background-color: transparent;\r\n}\r\n```\r\n\r\nIdeally tailwind wouldn't produce invalid selectors that will break when merged with other selectors. The bad classname that caused the invalid selector should fail gracefully.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11146","RelatedDescription":"Open issue \"Mixing certain pseudo selectors produces invalid css rules\" (#11146)"},{"Id":"1692975163","IsPullRequest":false,"CreatedAt":"2023-05-02T20:38:06","Actor":"ImaCrea","Number":"11144","RawContent":null,"Title":"yarn package not updated?","State":"closed","Body":"Hi there,\r\n\r\nThanks for TailwindCS, it's an amazing tool I discovered recently... I wish I tried it before!\r\n\r\nI'm using yarn but it seems package is not following latest updates. As you can see on https://yarnpkg.com/package/tailwindcss it says 3.2.7 whereas latest is 3.3.\r\n\r\nI'm a novice on yarn and all so I'm maybe missing something..\r\n\r\nbest,","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11144","RelatedDescription":"Closed issue \"yarn package not updated?\" (#11144)"},{"Id":"1692398412","IsPullRequest":false,"CreatedAt":"2023-05-02T13:11:31","Actor":"zhugexinxin","Number":"11140","RawContent":null,"Title":"h-screen not work","State":"closed","Body":"node v14.21.3\r\n\"tailwindcss\": \"^3.3.2\"\r\n\r\n<img width=\"466\" alt=\"image\" src=\"https://user-images.githubusercontent.com/42615243/235675646-4f3555ba-b22a-48f9-b321-9e1dd6ad9894.png\">\r\n<img width=\"560\" alt=\"image\" src=\"https://user-images.githubusercontent.com/42615243/235675851-783aa634-7c15-4b9d-9e7e-d0338b603500.png\">\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/11140","RelatedDescription":"Closed issue \"h-screen not work\" (#11140)"},{"Id":"1692373924","IsPullRequest":true,"CreatedAt":"2023-05-02T13:00:56","Actor":"depfu[bot]","Number":"11139","RawContent":null,"Title":"Update @swc/core: 1.3.55 → 1.3.56 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ resolve (1.22.2 → 1.22.3) · [Repo](https://github.com/browserify/resolve)\n\n\n\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/browserify/resolve/compare/c2f9ce254f0157b5e2e53e9aee0403c510909f7d...d3332a20d1c06e4056fdb976c2bbbaf9a5dba7e2\">See the full diff on Github</a>. The new version differs by 3 commits:</p>\n<ul>\n<li><a href=\"https://github.com/browserify/resolve/commit/d3332a20d1c06e4056fdb976c2bbbaf9a5dba7e2\"><code>v1.22.3</code></a></li>\n<li><a href=\"https://github.com/browserify/resolve/commit/5e3fbba65b6c30254dfe815e5007cde2ac4d3cd2\"><code>[Deps] update `is-core-module`</code></a></li>\n<li><a href=\"https://github.com/browserify/resolve/commit/122bb64be2f4fcf927fd264d4b2c9ea622611c58\"><code>[Refactor] deprecated `lib/core.js` now uses data from `is-core-module` also</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/11139","RelatedDescription":"Closed or merged PR \"Update @swc/core: 1.3.55 → 1.3.56 (patch)\" (#11139)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-05-13T03:30:26.9501739Z","RunDurationInMilliseconds":554}