{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"3064617714","IsPullRequest":false,"CreatedAt":"2025-05-15T01:23:19","Actor":"mmm8955405","Number":"18026","RawContent":null,"Title":"V4 version, CDN plugin not available","State":"open","Body":"v3:\n <script src=\"https://cdn.tailwindcss.com?plugins=forms,typography,aspect-ratio,line-clamp\"></script>","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18026","RelatedDescription":"Open issue \"V4 version, CDN plugin not available\" (#18026)"},{"Id":"3063721512","IsPullRequest":true,"CreatedAt":"2025-05-14T16:48:29","Actor":"RobinMalfait","Number":"18025","RawContent":null,"Title":"Make candidate template migrations faster","State":"open","Body":"This PR makes the migrations for templates much faster. To make this work, I also had to move things around a bit (so you might want to check this PR commit by commit). I also solved an issue by restructuring the code.\r\n\r\n### Performance\r\n\r\nFor starters, we barely applied any caching when migrating candidates from α to β. The problem with this is that in big projects the same candidates will appear _everywhere_, so caching is going to be useful here.\r\n\r\nOne of the reasons why we didn't do any caching is that some migrations were checking if a migration is actually safe to do. To do this, we were checking the `location` (the location of the candidate in the template). Since this location is unique for each template, caching was not possible.\r\n\r\nSo the first order of business was to hoist the `isSafeMigration` check up as the very first thing we do in the migration.\r\n\r\nIf we do this first, then the only remaining code relies on the `DesignSystem`, `UserConfig` and `rawCandidate`. \r\n\r\nIn a project, the `DesignSystem` and `UserConfig` will be the same during the migration, only the `rawCandidate` will be different which means that we can move all this logic in a good old `DefaultMap` and cache the heck out of it. \r\n\r\nRunning the numbers on our Tailwind Plus repo, this results in:\r\n```\r\n    Total seen candidates: 2 211 844\r\nTotal migrated candidates: 7 775 \r\n               Cache hits: 1 575 700\r\n```\r\n\r\nThat's a lot of work we _don't_ have to do. Looking at the timings, the template migration step goes from ~45s to ~10s because of this.\r\n\r\nAnother big benefit of this is that this makes migrations _actually_ safe. Before we were checking if a migration was safe to do in specific migrations. But other migrations were still printing the candidate which could still result in an unsafe migration.\r\n\r\nFor example when migrating the `blur` and the `shadow` classes, the `isSafeMigration` was used. But if the input was `!flex` then the safety check wasn't even checked in this specific migration.\r\n\r\n### Safe migrations\r\n\r\nAlso made some changes to the `isSafeMigration` logic itself. We used to start by checking the location, but thinking about the problem again, the actual big problem we were running into is classes that are short like `blur`, and `shadow` because they could be used in other contexts than a Tailwind CSS class.\r\n\r\nInverting this logic means that more specific Tailwind CSS classes will very likely _not_ cause any issues at all. \r\n\r\nFor example:\r\n- If you have variants: `hover:focus:flex`\r\n- If you have arbitrary properties: `[color:red]`\r\n- If you have arbitrary values: `bg-[red]`\r\n- If you have a modifier: `bg-red-500/50`\r\n- If you have a `-` in the name: `bg-red-500`\r\n\r\nEven better if we can't parse a candidate at all, we can skip the migrations all together.\r\n\r\nThis brings us to the issue in #17974, one of the issues was already solved by just hoisting the `isSafeMigration`. But to make the issue was completely solved I also made sure that in Vue attributes like `:active=\"…\"` are also considered unsafe (note: `:class` is allowed).\r\n\r\nLast but not least, in case of the `!duration` that got replaced with `duration!` was solved by verifying that the candidate actually produces valid CSS. We can compute the signature for this class.\r\n\r\nThe reason this wasn't thrown away earlier is because we can correctly parse `duration` but `duration` on its own doesn't exist, `duration-<number>` does exist as a functional utility which is why it parsed in the first place.\r\n\r\nFixes: #17974\r\n\r\n## Test plan\r\n\r\n1. Ran the tool on our Tailwind UI Templates repo to compare the new output with the \"old\" behavior and there were no differences in output.\r\n2. Ran the tool on our Tailwind Plus repo, and the template migration step went from ~45s to ~10s.\r\n3. Added additional tests to verify the issues in #17974 are fixed.\r\n\r\n\r\n[ci-all] let's run this on all CI platforms...","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18025","RelatedDescription":"Open PR \"Make candidate template migrations faster\" (#18025)"},{"Id":"3063604951","IsPullRequest":false,"CreatedAt":"2025-05-14T16:05:11","Actor":"AbdullahAhmadAAK","Number":"18023","RawContent":null,"Title":"line-clamp-3 not being applied on conditional rendering","State":"closed","Body":"\n**What version of Tailwind CSS are you using?**\n\n    \"tailwindcss\": \"^3.4.1\",\n  \"tailwind-merge\": \"^2.6.0\",\n    \"tailwind-scrollbar-hide\": \"^2.0.0\",\n    \"tailwindcss-animate\": \"^1.0.7\",\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n    \"next\": \"^15.2.4\",\n\n**What version of Node.js are you using?**\n\n    \"@types/node\": \"^20\",\n\n**What browser are you using?**\n\nChrome Version 136.0.7103.93\n\n**What operating system are you using?**\n\nWindows 10\n\n**Reproduction URL**\n\n[see the issue here](https://play.tailwindcss.com/rUJC1Ypdgf?size=322x773)\n\n![Image](https://github.com/user-attachments/assets/9d7e3c32-3826-4b20-9e34-679763084891)\n\n**Describe your issue**\n\nI am trying to have this clamped at 3 lines, but it's not working. The tailwind class definition does show up in inspect element mode, so it is not an issue of tailwind classes being purged. I am using a recent version of tailwind which already has the line clamp plugin being used by default.\n\n```\n <div className=\"flex flex-col gap-3 py-3 px-4 text-[#24272D] border-b-[1px] border-custom-neutral-100\">\n                <div className=\"flex items-center gap-1\">\n                    <span className=\"flex-1 title-2\">{drawingName}</span>\n                    <Button variant={'minimal'} size={'minimal'} onClick={() => setShow(true)}>\n                        <Pencil width={16} height={16} className=\"text-[#24272D]\" />\n                    </Button>\n                </div>\n                <p className=\"body-3 line-clamp-3\">{drawingDescription}</p>\n            </div>\n```\n\nMy editor page's page.tsx file has this, where the snippet above can be found within **PixelArtEditorClientComponent**:\n\n```\nreturn (\n    // The main container takes up the full viewport width and height\n    <main className=\"flex w-[100vw] h-[100vh]\">\n\n      {userData.userIdentifier.length === 0 ? (\n        <AnonUserView displayText=\"User unauthenticated. Please sign in.\" />\n      ) : (\n        <ReadOnlyRoom>\n          {/* Client-side component that renders the pixel art editor */}\n          <PixelArtEditorClientComponent />\n        </ReadOnlyRoom>\n      )}\n\n    </main >\n  );\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18023","RelatedDescription":"Closed issue \"line-clamp-3 not being applied on conditional rendering\" (#18023)"},{"Id":"3063228667","IsPullRequest":true,"CreatedAt":"2025-05-14T13:56:43","Actor":"philipp-spiess","Number":"18020","RawContent":null,"Title":"Ignore custom variants with `:merge(…)` selectors","State":"open","Body":"Closes #15617\r\n\r\n## Summary\r\n\r\nThis PR ignores `addVariant(…)` legacy JS plugin calls for variants that are using the [`:merge(…)` selector](https://v3.tailwindcss.com/docs/plugins#parent-and-sibling-states) for parent and sibling states. We can ignore these now because in v4, `group-*` and `peer-*` variants _compound automatically_ and you don't have to define them anymore.\r\n\r\n## Test plan\r\n\r\nAdded a unit test to ensure that the `optional` variant example from the v3 docs work as expected.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18020","RelatedDescription":"Open PR \"Ignore custom variants with `:merge(…)` selectors\" (#18020)"},{"Id":"3063039443","IsPullRequest":false,"CreatedAt":"2025-05-14T13:14:25","Actor":"weirdlooop","Number":"18018","RawContent":null,"Title":"source inline doesn't work with custom css vars","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.1.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nvite\n\n**What version of Node.js are you using?**\n\n20.13.0\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/brrHHhlSJp?size=540x720&file=css\n\n**Describe your issue**\n\nThe brace syntax does not work for custom css vars defined in `@theme`, see below:\n\n```\n@source inline('{hover:,}{bg,text,border}-{primary,secondary,accent,neutral,info,success,warning,error}');\n\n@theme {\n  --color-primary: #00abb3;\n  --color-secondary: #7fe9de;\n  --color-accent: #90f;\n  --color-neutral: #5e5d5d;\n  --color-info: #09f;\n  --color-success: #48bb78;\n  --color-warning: #f80;\n  --color-error: #e53e3e;\n}\n\n@layer base {\n  [data-theme='dark'] {\n    --color-primary: #00abb3;\n    --color-secondary: #7fe9de;\n    --color-accent: #90f;\n    --color-neutral: #a8a7a7;\n    --color-info: #09f;\n    --color-success: #48bb78;\n    --color-warning: #f80;\n    --color-error: #e53e3e;\n  }\n}\n\n```\n\nThe classes are simply not being generated in the final css. You can also verify this by using the link I provided to the playground. You can see the brace syntax is correct and does generate the classes, but tailwind fails to include them in the final css.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18018","RelatedDescription":"Closed issue \"source inline doesn't work with custom css vars\" (#18018)"},{"Id":"3062786076","IsPullRequest":true,"CreatedAt":"2025-05-14T12:51:51","Actor":"philipp-spiess","Number":"18017","RawContent":null,"Title":"Change casing of utilities with named values to kebab-case to match u…","State":"closed","Body":"Fixes #16156\r\n\r\n## Summary\r\n\r\nThis PR adds a new 3 -> 4 template migration that changes the casing of in both utility values and modifier values from camelCase to kebab-case to match the updated CSS variable names.\r\n\r\n## Test plan\r\n\r\n- Added integration test, see the diff in the PR.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18017","RelatedDescription":"Closed or merged PR \"Change casing of utilities with named values to kebab-case to match u…\" (#18017)"},{"Id":"3061846786","IsPullRequest":false,"CreatedAt":"2025-05-14T12:51:26","Actor":"antipoly","Number":"18003","RawContent":null,"Title":"@tailwindcss/vite Svelte: Cannot convert undefined or null to object","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\nv4.0.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\nVite 6.2.6\n\n**What version of Node.js are you using?**\nv22.15.0\n\n**What operating system are you using?**\nWindows\n\n---\n\nI created a new svelte project using `npx sv create`, selected tailwind as the only option.\nThe error in the title comes up when I run the server.\n\nAfter tracing the minified code, the error seems to be from:\n`/packages/@tailwindcss-vite/src/index.ts:275`\n```ts\nthis.scanner = Scanner({ sources })\n```\n\nScanner is an import from @tailwind/oxide\nDon't know where to go from here, thanks","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18003","RelatedDescription":"Closed issue \"@tailwindcss/vite Svelte: Cannot convert undefined or null to object\" (#18003)"},{"Id":"3062396626","IsPullRequest":false,"CreatedAt":"2025-05-14T09:40:38","Actor":"whytspace","Number":"18013","RawContent":null,"Title":"negative rotate with variables (`-rotate-(--foo)`) not working correctly","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.3.5\n\n**What version of Node.js are you using?**\n\nFor example: v20.10.0\n\n**What browser are you using?**\n\nN.A.\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/XIDXFoclli\n\n**Describe your issue**\n\nthe negative rotate does not work with the new variable syntax (`-rotate-(--myvar))`). It generated the same code as the positive variant `rotate-(--myvar))`.\n\n**Example:**\n\n- ✅ `rotate-20` generates `rotate: 20deg;`\n- ✅ `-rotate-20` generates `rotate: -20deg;`\n- ✅ `rotate-(--myvar)` generates `rotate: var(--myvar);`\n- ❌ `-rotate-(--myvar)` generates `rotate: var(--myvar);`, but should generate `rotate: calc(var(--myvar) * -1);`\n\nIs that a bug or intentional behaviour?\n\n**Side note:**\n\n`-rotate-z-(--myvar)` works as expected. I will use it as a workaround for now.\nHowever it does not use `rotate`, but `transform: rotate()` instead. Is there a reason for this difference? Just asking because `translate-*` and `translate-x-*` both use the new `translate` property instead of `transform`.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18013","RelatedDescription":"Closed issue \"negative rotate with variables (`-rotate-(--foo)`) not working correctly\" (#18013)"},{"Id":"3062427581","IsPullRequest":true,"CreatedAt":"2025-05-14T09:40:37","Actor":"philipp-spiess","Number":"18014","RawContent":null,"Title":"Fix `-rotate-*` with arbitary values","State":"closed","Body":"Fixes #18013\r\n\r\n## Test plan\r\n\r\nSee updated unit tests","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18014","RelatedDescription":"Closed or merged PR \"Fix `-rotate-*` with arbitary values\" (#18014)"},{"Id":"3062158704","IsPullRequest":false,"CreatedAt":"2025-05-14T08:06:10","Actor":"alirezagh73","Number":"18009","RawContent":null,"Title":"Tailwind Nested Styles Is not Work in Production in Nextjs(Tailwind V4.1.6 - Nextjs v15 app router)","State":"closed","Body":"\nWe're using Tailwind CSS v4 with Next.js v15 (App Router) in our project.\nWe style our components using the @apply directive in combination with nested CSS selectors, like so:\n\n### 💡 Code Example\n```\n.btn {\n  @apply inline-flex items-center cursor-pointer justify-center gap-x-1.5 rounded-lg font-medium transition-all duration-200 focus:outline-none;\n\n  &-lg {\n    @apply h-12 px-4 min-w-[108px] text-d-subtitle1;\n  }\n\n  &-contained {\n    @apply text-white;\n\n    &-primary {\n      @apply bg-primary hover:bg-primary-dark hover:shadow-primary;\n    }\n\n    &:disabled {\n      @apply cursor-not-allowed bg-disabled/20 text-disabled/80;\n    }\n  }\n}\n\n```\n\n✅ Expected Behavior\nAll nested styles (like .btn-lg, .btn-contained-primary, .btn-contained:disabled, etc.) should be included in the production CSS build.\n\n❌ Actual Behavior\nIn development mode (next dev), everything works perfectly.\n\nIn production mode (next build && next start), all nested styles (e.g., &-lg, &-contained, etc.) are missing from the final CSS output.\n\n### 📦 Project Environment\n\n```\nNext.js: 15.x (App Router)\nTailwind CSS: 4.x\nPostCSS config: using tailwind nesting\n```\n### Tailwind-related config:\n```\nconst config = {\n  plugins: {\n    \"@tailwindcss/postcss\": {},\n    \"postcss-nested\": {},\n  },\n};\nexport default config;\n```\n### 📌 Notes\nIt seems like Tailwind’s nesting support works correctly in dev mode but is not preserved in the production build process when using the native &-modifier nesting syntax.\n\nIs this a known limitation or a misconfiguration on our side?\nAny help would be appreciated 🙏\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18009","RelatedDescription":"Closed issue \"Tailwind Nested Styles Is not Work in Production in Nextjs(Tailwind V4.1.6 - Nextjs v15 app router)\" (#18009)"},{"Id":"3062176255","IsPullRequest":false,"CreatedAt":"2025-05-14T08:04:28","Actor":"Nurai1","Number":"18010","RawContent":null,"Title":"SM breakpoint is not correct like in the documentation","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\"tailwindcss\": \"^4.0.16\"\n\nFor example: v4.0.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n\"vite\": \"^6.2.3\",\n\n**What version of Node.js are you using?**\n\nv20.10.0\n\n**What browser are you using?**\n\nChrome 136.0.7103.93\n\n**What operating system are you using?**\n\nmacOS 15.4.1\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/vQxilH4Q0w\n\n**Describe your issue**\n\nSM breakpoint is not correct like in the documentation, docs says it is 640px, actually default is 680px","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18010","RelatedDescription":"Closed issue \"SM breakpoint is not correct like in the documentation\" (#18010)"},{"Id":"3061349813","IsPullRequest":false,"CreatedAt":"2025-05-13T22:13:16","Actor":"schiller-manuel","Number":"18002","RawContent":null,"Title":"v4 vite plugin is not compatible with the vite environment API","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n    \"@tailwindcss/vite\": \"^4.1.6\",\n    \"tailwindcss\": \"^4.1.6\",\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n    \"@tanstack/react-start\": \"^1.120.4-alpha.6\",\n    \"vite\": \"^6.1.0\"\n\n**What version of Node.js are you using?**\n\nv20.17.0\n\n**What browser are you using?**\n\nnot relevant\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://github.com/yjoer/basic-virtual-file-based/commit/9f291d928c0bd44906cebae69ff04d683ad2d11e\n\n**Describe your issue**\n\nvite tailwind plugin does not support the new vite environment API yet.\nThis caused the build to fail in TanStack Start which uses the vite environment:\n\n```\n[@tailwindcss/vite:generate:build] Cannot create proxy with a non-object as target or handler\nfile: /basic-virtual-file-based/src/styles.css?transform-only\n```\n\nThe reason for this build failure is that the fallback that vite uses when a plugin uses `createResolver` requires the environment to be called `'ssr'` which in TanStack Start's case was not the case.\n\n\nWe renamed the server environment in TanStack Start to `ssr` to ensure compatibliity: https://github.com/TanStack/router/pull/4167\n\nHowever, the tailwind vite plugin should eventually support the vite environment API by migrating to `createIdResolver`\nsee https://github.com/vitejs/vite/pull/20031","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18002","RelatedDescription":"Open issue \"v4 vite plugin is not compatible with the vite environment API\" (#18002)"},{"Id":"3060265044","IsPullRequest":true,"CreatedAt":"2025-05-13T15:35:12","Actor":"RobinMalfait","Number":"18000","RawContent":null,"Title":"Migrate bare values to named values","State":"closed","Body":"This PR improves the upgrade tool by also migrating bare values to named values defined in the `@theme`. It's similar to the existing migration we already had, but specialized for just bare values. This makes it a bit faster as well because we don't have to try and replace a bare value with a bare value.\r\n\r\nRecently we shipped some updates dat allowed us to migrate arbitrary values (with square brackets), but we didn't migrate bare values yet.\r\n\r\nThat means that in this example:\r\n```html\r\n<div class=\"aspect-[16/9]\"></div>\r\n<div class=\"aspect-16/9\"></div>\r\n```\r\n\r\nWe migrated this to:\r\n```html\r\n<div class=\"aspect-video\"></div>\r\n<div class=\"aspect-16/9\"></div>\r\n```\r\n\r\nWith this change, we will also try and migrate the bare value to a named value. So this example:\r\n```html\r\n<div class=\"aspect-[16/9]\"></div>\r\n<div class=\"aspect-16/9\"></div>\r\n```\r\n\r\nNow becomes:\r\n```html\r\n<div class=\"aspect-video\"></div>\r\n<div class=\"aspect-video\"></div>\r\n```\r\n\r\n## Test plan\r\n\r\n1. Added unit tests for the new functionality.\r\n2. Ran this on a local project\r\n\r\n\r\nBefore:\r\n<img width=\"432\" alt=\"image\" src=\"https://github.com/user-attachments/assets/ce1adfbd-7be1-4062-bea5-66368f748e44\" />\r\n\r\nAfter:\r\n<img width=\"382\" alt=\"image\" src=\"https://github.com/user-attachments/assets/a385c94c-4e4c-4e1c-ac73-680c56ac4081\" />\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18000","RelatedDescription":"Closed or merged PR \"Migrate bare values to named values\" (#18000)"},{"Id":"3059678138","IsPullRequest":true,"CreatedAt":"2025-05-13T12:20:41","Actor":"philipp-spiess","Number":"17996","RawContent":null,"Title":"Upgrade: Migrate `outline` class","State":"closed","Body":"This PR adds a migration from `outline` to `outline-solid` for the v3 -> v4 upgrade tool.\r\n\r\n## Test plan\r\n\r\n- Added integration test","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17996","RelatedDescription":"Closed or merged PR \"Upgrade: Migrate `outline` class\" (#17996)"},{"Id":"3059521969","IsPullRequest":false,"CreatedAt":"2025-05-13T12:19:33","Actor":"dakira","Number":"17995","RawContent":null,"Title":"[4.1.4] Introduced change that breaks modals as used by Laravel Jetstream","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nFor example: v4.1.4-4.1.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nvite v6.3.5\n\n**What version of Node.js are you using?**\n\nv22.15.0\n\n**What browser are you using?**\n\nChrome / Firefox\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/sM9n2CsDra\n\nThis is a sample modal from a fresh install of Laravel Jetstream. If you switch the Tailwind Play to v3.x, you'll see what it should look like.\n\n**Describe your issue**\n\nWhen I upgraded my Laravel 12 Jetstream project from TailwindCSS v4.1.3 to v4.1.6 I noticed that none of my modals are working anymore (using the modal component that ships with Jetstream). I narrowed it down to the problem being **introduced with tailwindcss/vite@4.1.4**.\n\nIn the Play above you can see that the inset background of the modal appears above the modal and it doesn't in 4.1.3 or earliert versions. In my packages.json I can actually set tailwindcss@4.1.6 and everything will still work, as long as tailwindcss/vite is < 4.1.4.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17995","RelatedDescription":"Closed issue \"[4.1.4] Introduced change that breaks modals as used by Laravel Jetstream\" (#17995)"},{"Id":"3058617153","IsPullRequest":false,"CreatedAt":"2025-05-13T09:21:55","Actor":"slingshotvfx","Number":"17990","RawContent":null,"Title":"variants are broken in @apply in Svelte and Tailwind v4","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.1.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nSvelte 4, Vite 5.4, @tailwindcss/vite 4.1.6\n\n**What operating system are you using?**\n\nFor example: Windows\n\n**Describe your issue**\n\nI am using @apply inside a Svelte component, referencing my app.css file as per the docs.\n\n```html\n<style>\n\t@reference \"../../app.css\";\n\t.works {\n\t\t@apply bg-red-400;\n        }\n</style>\n```\n\nThis works just fine. However, as soon as you add a variant (or anything with a colon, probably), you get an error:\n\n```html\n<style>\n\t@reference \"../../app.css\";\n\t.errors {\n\t\t@apply hover:bg-red-400;\n        }\n</style>\n```\n```\n[plugin:vite-plugin-svelte] /app/src/routes/Error.svelte: Semicolon or block is expected\n\n- Did you forget to add a lang attribute to your style tag?\n- Did you forget to add a lang attribute to your style tag?\n- Did you forget to add a lang attribute to your style tag?\n\n |    }\n |    .errors {\n |      @apply hover:bg-red-400;\n                    ^\n |    }\n\n```\n\n\nThis seems to be a postcss-related error, since the postcss plugin is part of `@tailwindcss/vite` now. Maybe Vite is throwing the error before tailwind has a chance to run?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17990","RelatedDescription":"Closed issue \"variants are broken in @apply in Svelte and Tailwind v4\" (#17990)"},{"Id":"3056564124","IsPullRequest":true,"CreatedAt":"2025-05-12T13:49:18","Actor":"philipp-spiess","Number":"17979","RawContent":null,"Title":"Upgrade lightningcss to `1.30.0`","State":"closed","Body":"- [Fixes #17556](https://lightningcss.dev/playground/index.html#%7B%22minify%22%3Afalse%2C%22customMedia%22%3Atrue%2C%22cssModules%22%3Afalse%2C%22analyzeDependencies%22%3Afalse%2C%22targets%22%3A%7B%22chrome%22%3A6225920%7D%2C%22include%22%3A0%2C%22exclude%22%3A0%2C%22source%22%3A%22.broken%20%7B%5Cn%20%20%26%3A%3Abefore%2C%20%26%3A%3Aafter%20%7B%5Cn%20%20%20%20background%3A%20blue%3B%5Cn%20%20%20%20%40media%20print%20%7B%5Cn%20%20%20%20%20%20background%3A%20orange%3B%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%7D%5Cn%5Cn.fine%20%7B%5Cn%20%20%26%3A%3Abefore%2C%20%26%3A%3Aafter%20%7B%5Cn%20%20%20%20background%3A%20blue%3B%5Cn%20%20%7D%5Cn%7D%22%2C%22visitorEnabled%22%3Afalse%2C%22visitor%22%3A%22%7B%5Cn%20%20Color(color)%20%7B%5Cn%20%20%20%20if%20(color.type%20%3D%3D%3D%20'rgb')%20%7B%5Cn%20%20%20%20%20%20color.g%20%3D%200%3B%5Cn%20%20%20%20%20%20return%20color%3B%5Cn%20%20%20%20%7D%5Cn%20%20%7D%5Cn%7D%22%2C%22unusedSymbols%22%3A%5B%5D%2C%22version%22%3A%221.30.0%22%7D)","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17979","RelatedDescription":"Closed or merged PR \"Upgrade lightningcss to `1.30.0`\" (#17979)"},{"Id":"3056629364","IsPullRequest":true,"CreatedAt":"2025-05-12T13:17:20","Actor":"philipp-spiess","Number":"17981","RawContent":null,"Title":"Upgrade bun to `1.2.13`","State":"closed","Body":"This fixes #17114 ","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17981","RelatedDescription":"Closed or merged PR \"Upgrade bun to `1.2.13`\" (#17981)"},{"Id":"3056833207","IsPullRequest":false,"CreatedAt":"2025-05-12T12:40:13","Actor":"doits","Number":"17985","RawContent":null,"Title":"@source not: Cannot ignore symlinked directory because symlink is optimized away","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\ntailwindcss v4.1.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nCli\n\n**What version of Node.js are you using?**\n\nv22.15.0\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nUbuntu\n\n**Reproduction URL**\n\nN/A\n\n**Describe your issue**\n\nWhen a directory is symlinked, e.g. a `directory_a` is symlinked from `symlink`:\n\n```\ndirectory_a/a\ndirectory_a/b\nsymlink           # symlink to ./directory_a\ntailwind.css\n```\n\n... and I have a `@source not \"./symlink\";` ...\n\n```css\n@source not \"./symlink\";\n```\n\n... it does not ignore it:\n\n```\n2025-05-12T12:35:15.744825Z  INFO tailwindcss_oxide::scanner: Provided sources:\n2025-05-12T12:35:15.744976Z  INFO tailwindcss_oxide::scanner: Source: PublicSourceEntry { base: \"/Users/abc/tmp/tailwind\", pattern: \"**/*\", negated: false }\n2025-05-12T12:35:15.745016Z  INFO tailwindcss_oxide::scanner: Source: PublicSourceEntry { base: \"/Users/abc/tmp/tailwind\", pattern: \"./symlink\", negated: true }\n2025-05-12T12:35:15.745132Z  INFO tailwindcss_oxide::scanner: Optimized sources:\n2025-05-12T12:35:15.745139Z  INFO tailwindcss_oxide::scanner: Source: Auto { base: \"/Users/abc/tmp/tailwind\" }\n2025-05-12T12:35:15.745159Z  INFO tailwindcss_oxide::scanner: Source: Ignored { base: \"/Users/abc/tmp/tailwind/directory_a\", pattern: \"**/*\" }\n2025-05-12T12:35:15.746487Z  INFO get_normalized_sources: tailwindcss_oxide::scanner: enter\n2025-05-12T12:35:15.746498Z  INFO get_normalized_sources: tailwindcss_oxide::scanner: exit\n2025-05-12T12:35:15.753492Z  INFO scan_sources: tailwindcss_oxide::scanner: enter\n2025-05-12T12:35:15.753775Z  INFO scan_sources: tailwindcss_oxide::scanner: Discovering \"/Users/abc/tmp/tailwind/symlink\"\n2025-05-12T12:35:15.753833Z  INFO scan_sources: tailwindcss_oxide::scanner: Discovering \"/Users/abc/tmp/tailwind/symlink/a\"\n2025-05-12T12:35:15.753884Z  INFO scan_sources: tailwindcss_oxide::scanner: Discovering \"/Users/abc/tmp/tailwind/symlink/b\"\n2025-05-12T12:35:15.753939Z  INFO scan_sources: tailwindcss_oxide::scanner: Discovering \"/Users/abc/tmp/tailwind/tailwind.css\"\n2025-05-12T12:35:15.753989Z  INFO scan_sources: tailwindcss_oxide::scanner: Discovering \"/Users/abc/tmp/tailwind/output.css\"\n2025-05-12T12:35:15.754033Z  INFO scan_sources: tailwindcss_oxide::scanner: exit\n```\n\nThe pattern before optimisation is correct:\n\n```\n2025-05-12T12:35:15.745016Z  INFO tailwindcss_oxide::scanner: Source: PublicSourceEntry { base: \"/Users/abc/tmp/tailwind\", pattern: \"./symlink\", negated: true }\n```\n\nBut after optimisation it ignores the directory the symlink points to (`directory_a` in this case):\n\n```\n2025-05-12T12:35:15.745159Z  INFO tailwindcss_oxide::scanner: Source: Ignored { base: \"/Users/abc/tmp/tailwind/directory_a\", pattern: \"**/*\" }\n```\n\n... and goes on scanning the symlink even though it should be ignored:\n\n```\n2025-05-12T12:35:15.753833Z  INFO scan_sources: tailwindcss_oxide::scanner: Discovering \"/Users/abc/tmp/tailwind/symlink/a\"\n2025-05-12T12:35:15.753884Z  INFO scan_sources: tailwindcss_oxide::scanner: Discovering \"/Users/abc/tmp/tailwind/symlink/b\"\n```\n\nIt should not scan `a_symlink_to/*` because it was explicitly ignored by a `@source not` statement.\n\nBecause otherwise what is at `directory_a` cannot be ignored at all:\n\n```css\n@source not \"./symlink\";\n@source not \"./directory_a\";\n```\n\nleads to:\n\n```\n2025-05-12T12:38:12.030696Z  INFO tailwindcss_oxide::scanner: Provided sources:\n2025-05-12T12:38:12.030840Z  INFO tailwindcss_oxide::scanner: Source: PublicSourceEntry { base: \"/Users/abc/tmp/tailwind\", pattern: \"**/*\", negated: false }\n2025-05-12T12:38:12.030876Z  INFO tailwindcss_oxide::scanner: Source: PublicSourceEntry { base: \"/Users/abc/tmp/tailwind\", pattern: \"./symlink\", negated: true }\n2025-05-12T12:38:12.030882Z  INFO tailwindcss_oxide::scanner: Source: PublicSourceEntry { base: \"/Users/abc/tmp/tailwind\", pattern: \"./directory_a\", negated: true }\n2025-05-12T12:38:12.031015Z  INFO tailwindcss_oxide::scanner: Optimized sources:\n2025-05-12T12:38:12.031023Z  INFO tailwindcss_oxide::scanner: Source: Auto { base: \"/Users/abc/tmp/tailwind\" }\n2025-05-12T12:38:12.031042Z  INFO tailwindcss_oxide::scanner: Source: Ignored { base: \"/Users/abc/tmp/tailwind/directory_a\", pattern: \"**/*\" }\n2025-05-12T12:38:12.031046Z  INFO tailwindcss_oxide::scanner: Source: Ignored { base: \"/Users/abc/tmp/tailwind/directory_a\", pattern: \"**/*\" }\n2025-05-12T12:38:12.032357Z  INFO get_normalized_sources: tailwindcss_oxide::scanner: enter\n2025-05-12T12:38:12.032368Z  INFO get_normalized_sources: tailwindcss_oxide::scanner: exit\n2025-05-12T12:38:12.039651Z  INFO scan_sources: tailwindcss_oxide::scanner: enter\n2025-05-12T12:38:12.039973Z  INFO scan_sources: tailwindcss_oxide::scanner: Discovering \"/Users/abc/tmp/tailwind/symlink\"\n2025-05-12T12:38:12.040023Z  INFO scan_sources: tailwindcss_oxide::scanner: Discovering \"/Users/abc/tmp/tailwind/symlink/a\"\n2025-05-12T12:38:12.040084Z  INFO scan_sources: tailwindcss_oxide::scanner: Discovering \"/Users/abc/tmp/tailwind/symlink/b\"\n2025-05-12T12:38:12.040115Z  INFO scan_sources: tailwindcss_oxide::scanner: Discovering \"/Users/abc/tmp/tailwind/tailwind.css\"\n2025-05-12T12:38:12.040152Z  INFO scan_sources: tailwindcss_oxide::scanner: Discovering \"/Users/abc/tmp/tailwind/output.css\"\n```\n\nIt has the same directory twice after optimisation:\n\n```\n2025-05-12T12:38:12.031042Z  INFO tailwindcss_oxide::scanner: Source: Ignored { base: \"/Users/abc/tmp/tailwind/directory_a\", pattern: \"**/*\" }\n2025-05-12T12:38:12.031046Z  INFO tailwindcss_oxide::scanner: Source: Ignored { base: \"/Users/abc/tmp/tailwind/directory_a\", pattern: \"**/*\" }\n```\n\n... and still scans `./symlink/*`:\n\n```\n2025-05-12T12:38:12.040023Z  INFO scan_sources: tailwindcss_oxide::scanner: Discovering \"/Users/abc/tmp/tailwind/symlink/a\"\n2025-05-12T12:38:12.040084Z  INFO scan_sources: tailwindcss_oxide::scanner: Discovering \"/Users/abc/tmp/tailwind/symlink/b\"\n```\n\nrefs https://github.com/tailwindlabs/tailwindcss/issues/15750","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17985","RelatedDescription":"Open issue \"@source not: Cannot ignore symlinked directory because symlink is optimized away\" (#17985)"},{"Id":"3056802830","IsPullRequest":false,"CreatedAt":"2025-05-12T12:33:00","Actor":"kelvinjuliusarmandoh","Number":"17983","RawContent":null,"Title":"Installation problem","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.1.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: Vite 6.3.5\n\n**What version of Node.js are you using?**\n\nFor example: v20.19.1\n\n**What browser are you using?**\n\nFor example: Chrome\n\n**What operating system are you using?**\n\nFor example:  Windows\n\n**Reproduction URL**\n\n**Describe your issue**\n\nDescribe the problem you're seeing, any important steps to reproduce and what behavior you expect instead.\n\nI already installed tailwindcss v4.1.6 by looking documentation here, then follow all instructions here: https://tailwindcss.com/docs/installation/using-vite. Then, i added some style classes from tailwindcss, but it doesnt apply the styles on my browser. But, when i try to use tailwind 3.4.17, It works normally.\n\n![Image](https://github.com/user-attachments/assets/c12953d3-39ca-4d1c-a08b-af09b07d24f6)\n\n![Image](https://github.com/user-attachments/assets/1a53e6a5-e396-4a2c-b359-40e174fd2233)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17983","RelatedDescription":"Closed issue \"Installation problem\" (#17983)"},{"Id":"3054136715","IsPullRequest":true,"CreatedAt":"2025-05-12T11:09:41","Actor":"remorses","Number":"17969","RawContent":null,"Title":"Add ignore pattern for node_modules in globby search in upgrade cli","State":"closed","Body":"When passing `gitignore: true` to globby it will start a search for all .gitignore files, this initial search includes node_modules making it hang forever for large monorepos with many files inside node_modules ","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17969","RelatedDescription":"Closed or merged PR \"Add ignore pattern for node_modules in globby search in upgrade cli\" (#17969)"},{"Id":"3055473107","IsPullRequest":true,"CreatedAt":"2025-05-12T09:02:57","Actor":"depfu[bot]","Number":"17976","RawContent":null,"Title":"Update @types/react-dom 19.1.2 → 19.1.3 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​types/react-dom (19.1.2 → 19.1.3) · [Repo](https://github.com/DefinitelyTyped/DefinitelyTyped)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17976","RelatedDescription":"Closed or merged PR \"Update @types/react-dom 19.1.2 → 19.1.3 (patch)\" (#17976)"},{"Id":"3055873349","IsPullRequest":false,"CreatedAt":"2025-05-12T07:06:26","Actor":"Multiply","Number":"17977","RawContent":null,"Title":"bg-conic not working in next.js production builds","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\nv4.1.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\nNext.js 15.3.2\n\n**What version of Node.js are you using?**\nv22.11.0\n\n**What browser are you using?**\nChrome\n\n**What operating system are you using?**\nmacOS\n\n**Reproduction URL**\nhttps://github.com/Multiply/next.js-tailwind-conic-bug\n(based on `npx create-next-app@latest` for the initial commit)\n\n**Describe your issue**\nIn next.js production builds (`npm run build` -> `npm run start`) `bg-conic`'s `background-image` does not work.\nIt works fine in development builds `npm run dev`.\n\nMy initial thoughts would be that it's a `@layer` issue, but I haven't played too much with it yet, to really debug it further.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17977","RelatedDescription":"Open issue \"bg-conic not working in next.js production builds\" (#17977)"},{"Id":"3055360984","IsPullRequest":false,"CreatedAt":"2025-05-12T00:59:14","Actor":"scheinercc","Number":"17975","RawContent":null,"Title":"@tailwindcss/upgrade - brakes valid CSS","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nUpgrading to tailwindcss v4.1.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 5.2.3\n\n**What version of Node.js are you using?**\n\nFor example: v22.14.0\n**What operating system are you using?**\n\nmacOS\n\n**Describe your issue**\n\nRunning `npx @tailwindcss/upgrade@latest` broke valid CSS in Vue and HTML files.\nExamples:\n\n<img width=\"191\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/09892168-c1f9-46ee-b2e4-cdfc64ceb308\" />\n<br>\n<img width=\"177\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/ac78032b-af49-4ce4-8ac8-181b921cf88a\" />","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17975","RelatedDescription":"Open issue \"@tailwindcss/upgrade - brakes valid CSS\" (#17975)"},{"Id":"3055356907","IsPullRequest":false,"CreatedAt":"2025-05-12T00:55:07","Actor":"scheinercc","Number":"17974","RawContent":null,"Title":"@tailwindcss/upgrade - brakes boolean operators in Vue files","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nUpgrading to tailwindcss v4.1.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 5.2.3\n\n**What version of Node.js are you using?**\n\nFor example: v22.14.0\n**What operating system are you using?**\n\nmacOS\n\n**Describe your issue**\n\nRunning `npx @tailwindcss/upgrade@latest` broke logical operators in Vue files.\nExamples:\n\n<img width=\"155\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/d25d15d1-b443-4789-8a86-1f76788f2bc2\" />\n<br>\n<img width=\"150\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/e2e33cd2-1734-4668-8169-5a6b8b2e17a6\" />\n\n---\nMaybe related to \nhttps://github.com/tailwindlabs/tailwindcss/pull/14737\nhttps://github.com/tailwindlabs/tailwindcss/pull/14774","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17974","RelatedDescription":"Open issue \"@tailwindcss/upgrade - brakes boolean operators in Vue files\" (#17974)"},{"Id":"3054559059","IsPullRequest":false,"CreatedAt":"2025-05-10T22:58:36","Actor":"thepra","Number":"17973","RawContent":null,"Title":"[upgrade to v4] Error: Cannot apply unknown utility class: lg:block","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv3.4.17\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nnpx\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n\n```\n@layer base {\n    .no-scrollbar-mobile::-webkit-scrollbar {\n    @apply hidden lg:block;\n  }\n}\n```\n\n**Describe your issue**\n\nCan't upgrade because of that issue in the title, weirdly enough, it can't interpret `lg:block` as a valid concatenated class.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17973","RelatedDescription":"Closed issue \"[upgrade to v4] Error: Cannot apply unknown utility class: lg:block\" (#17973)"},{"Id":"3053580499","IsPullRequest":true,"CreatedAt":"2025-05-10T11:21:48","Actor":"depfu[bot]","Number":"17965","RawContent":null,"Title":"Update dedent 1.5.3 → 1.6.0 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this upgrade. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ dedent (1.5.3 → 1.6.0) · [Repo](https://github.com/dmnd/dedent) · [Changelog](https://github.com/dmnd/dedent/blob/main/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/dmnd/dedent/releases/tag/v1.6.0\">1.6.0</a></h4>\n\n<blockquote><h2 dir=\"auto\">What's Changed</h2>\n<ul dir=\"auto\">\n<li>feat: add <code class=\"notranslate\">trimWhitespace</code> option by <a href=\"https://bounce.depfu.com/github.com/43081j\">@43081j</a> in <a href=\"https://bounce.depfu.com/github.com/dmnd/dedent/pull/97\">#97</a>\n</li>\n</ul>\n<h2 dir=\"auto\">New Contributors</h2>\n<ul dir=\"auto\">\n<li>\n<a href=\"https://bounce.depfu.com/github.com/43081j\">@43081j</a> made their first contribution in <a href=\"https://bounce.depfu.com/github.com/dmnd/dedent/pull/97\">#97</a>\n</li>\n</ul>\n<p dir=\"auto\"><strong>Full Changelog</strong>: <a href=\"https://bounce.depfu.com/github.com/dmnd/dedent/compare/v1.5.3...v1.6.0\"><tt>v1.5.3...v1.6.0</tt></a></p></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/dedent/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/dmnd/dedent/compare/90644fe0be6ed6c159efe8c905f491ba26c51c35...ab2ce25762a6ad0c26c563075f87c74427092d02\">See the full diff on Github</a>. The new version differs by 2 commits:</p>\n<ul>\n<li><a href=\"https://github.com/dmnd/dedent/commit/ab2ce25762a6ad0c26c563075f87c74427092d02\"><code>1.6.0 (#98)</code></a></li>\n<li><a href=\"https://github.com/dmnd/dedent/commit/86902f7c97f32e91e5a9c2c6982a73a8a4a32b67\"><code>feat: add `trimWhitespace` option (#97)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17965","RelatedDescription":"Closed or merged PR \"Update dedent 1.5.3 → 1.6.0 (minor)\" (#17965)"},{"Id":"3052965426","IsPullRequest":false,"CreatedAt":"2025-05-10T08:02:52","Actor":"RanjbarAli","Number":"17962","RawContent":null,"Title":"Issue in older iphone in v4, but fine in v3","State":"closed","Body":"\n**What version of Tailwind CSS are you using?**\nv4.1.4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n\"nuxt\": \"^3.17.1\", \"vite\" : \"latest\"\n\n**What version of Node.js are you using?**\n\nv22.13.0\n\n**What browser are you using?**\n\nIphone 7 - Safari\n\n**What operating system are you using?**\n\nIOS v15.8.4\n\nTailwindCSS version 3 was completely fine, but in version 4, the layout has serious issues on the iPhone 7.\nIt works perfectly on high-end phones and laptops.\nIt was okay in version 3, but it doesn't work well in version 4.\nPlease suggest a solution.\n\nit only gets wrong in npm run dev","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17962","RelatedDescription":"Closed issue \"Issue in older iphone in v4, but fine in v3\" (#17962)"},{"Id":"3053072774","IsPullRequest":true,"CreatedAt":"2025-05-09T20:04:49","Actor":"RobinMalfait","Number":"17963","RawContent":null,"Title":"Fix upgrade error when using `@import … source(…)`","State":"closed","Body":"This PR fixes an issue when running the upgrade tool and if any of the CSS files has an import that looks like this:\r\n\r\n```css\r\n@import \"tailwindcss\" source(\"…\");\r\n```\r\n\r\nThis was trying to resolve `tailwindcss\" source(\"…` instead of `tailwindcss`.\r\n\r\nThis PR fixes that by fixing the regex we used. Made the quantifier lazy to match as few characters as possible and thus only matching `tailwindcss` in this case.\r\n\r\n## Test plan\r\n\r\n1. Ran it locally on a project\r\n\r\nBefore:\r\n\r\n<img width=\"1158\" alt=\"image\" src=\"https://github.com/user-attachments/assets/09bf5d69-797c-4330-ade1-edc213f7ce5c\" />\r\n\r\nAfter:\r\n\r\n<img width=\"1029\" alt=\"image\" src=\"https://github.com/user-attachments/assets/d1c9e194-30e2-4564-83c5-d9a259a67e90\" />\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17963","RelatedDescription":"Closed or merged PR \"Fix upgrade error when using `@import … source(…)`\" (#17963)"},{"Id":"3052639024","IsPullRequest":true,"CreatedAt":"2025-05-09T16:29:28","Actor":"RobinMalfait","Number":"17961","RawContent":null,"Title":"Allow `_` before numbers during candidate extraction","State":"closed","Body":"This PR fixes a bug where a class like `header_1` wasn't properly extracted because we didn't allow an `_` before a number.\r\n\r\nThis PR fixes that by allowing an `_` before a number.\r\n\r\nFixes: #17960\r\n\r\n\r\n## Test plan\r\n\r\n1. Added a test to verify this works\r\n2. Existing tests work\r\n\r\nUsed the visualizer tool for this to verify that the `header_1` class is being extracted:\r\n<img width=\"1816\" alt=\"image\" src=\"https://github.com/user-attachments/assets/fdc21602-0e2b-4e4e-92a1-19c4f4f5393f\" />\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17961","RelatedDescription":"Closed or merged PR \"Allow `_` before numbers during candidate extraction\" (#17961)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-05-15T03:30:23.2809483Z","RunDurationInMilliseconds":492}