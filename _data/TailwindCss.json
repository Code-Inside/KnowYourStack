{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2856464942","IsPullRequest":false,"CreatedAt":"2025-02-17T00:59:27","Actor":"callor","Number":"16587","RawContent":null,"Title":"Spring Boot + thymeleaf + tailwindcss v4 problem","State":"open","Body":"# Spring Boot + thymeleaf + tailwindcss v4 problem\nI encountered a problem while creating a project by linking spring boot, thymeleaf, and tailwind v4, so I am reporting it here.\n\n### I structured my project as follows:\n\n```\ndependencies {\n\timplementation(\"org.springframework.boot:spring-boot-starter-web\")\n\n\timplementation(\"nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect\")\n\timplementation(\"org.springframework.boot:spring-boot-starter-thymeleaf\")\n\n\timplementation(\"io.github.wimdeblauwe:htmx-spring-boot-thymeleaf:4.0.1\")\n\n\tcompileOnly(\"org.projectlombok:lombok\")\n\tannotationProcessor(\"org.projectlombok:lombok\")\n\ttestImplementation(\"org.springframework.boot:spring-boot-starter-test\")\n\ttestRuntimeOnly(\"org.junit.platform:junit-platform-launcher\")\n}\n```\n### Created a frontend folder under the project\n```\nSpringBoot-tailwind/src/main/resources/frontend\n```\n\n### I created a nodejs project here\n\n```shell\nnpm init -y\n```\n\n### Then I created an input.css file and coded it as follows:\n\n```javascript\n@import \"tailwindcss\";\n```\n\n### Installed tailwind dependency\n```shell\nnpm install tailwindcss @tailwindcss/cli\n```\n\nThe generated package.json is as follows:\n```json\n{\n  \"name\": \"frontend\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Spring Boot Tailwind\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"type\": \"commonjs\",\n  \"dependencies\": {\n    \"@tailwindcss/cli\": \"^4.0.6\",\n    \"tailwindcss\": \"^4.0.6\"\n  }\n}\n```\n\n### I created the tailwind-202502.css file using the following command:\n```shell\nnpx @tailwindcss/cli -i ./input.css -o ../static/css/tailwind-202502.css \n```\n\n### I confirmed that the /src/static/css/tailwind-202502.css file was created.\n\n`Part of the generated file`\n\n```css\n/*! tailwindcss v4.0.6 | MIT License | https://tailwindcss.com */\n@layer theme, base, components, utilities;\n@layer theme {\n  :root, :host {\n    --font-sans: ui-sans-serif, system-ui, sans-serif, \"Apple Color Emoji\",\n      \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\";\n    --font-serif: ui-serif, Georgia, Cambria, \"Times New Roman\", Times, serif;\n    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\",\n      \"Courier New\", monospace;\n    --color-red-50: oklch(0.971 0.013 17.38);\n    --color-red-100: oklch(0.936 0.032 17.717);\n    --color-red-200: oklch(0.885 0.062 18.334);\n    --color-red-300: oklch(0.808 0.114 19.571);\n    --color-red-400: oklch(0.704 0.191 22.216);\n    --color-red-500: oklch(0.637 0.237 25.331);\n    --color-red-600: oklch(0.577 0.245 27.325);\n    --color-red-700: oklch(0.505 0.213 27.518);\n    --color-red-800: oklch(0.444 0.177 26.899);\n    --color-red-900: oklch(0.396 0.141 25.723);\n    --color-red-950: oklch(0.258 0.092 26.042);\n    --color-orange-50: oklch(0.98 0.016 73.684);\n    --color-orange-100: oklch(0.954 0.038 75.164);\n    --color-orange-200: oklch(0.901 0.076 70.697);\n```\n\n### I wrote the html as follows\n\n```html\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Title</title>\n    <link rel=\"stylesheet\" th:href=\"@{static/css/main_2025-02.css}\">\n    <link th:href=\"@{/static/css/tailwind-202502.css}\" rel=\"stylesheet\">\n    <meta charset=\"UTF-8\">\n    <title>Title</title>\n</head>\n```\n\n\n```\n<h1 class=\"text-3xl font-bold underline my-24\">Hello world!</h1>\n<h2 class=\"my-24\">TailwinCss 적용 layout</h2>\n\n<div class=\"mx-auto flex max-w-sm items-center gap-x-4 rounded-xl bg-white p-6 shadow-lg outline outline-black/5 dark:bg-slate-800 dark:shadow-none dark:-outline-offset-1 dark:outline-white/10\">\n    <div>\n        <div class=\"text-xl font-medium text-black dark:text-white\">ChitChat</div>\n        <p class=\"text-gray-500 dark:text-gray-400\">You have a new message!</p>\n    </div>\n</div>\n<h2 class=\"mx-auto my-24\"> daisyui theme 적용 버튼</h2>\n<div class=\"mx-auto flex max-w-sm items-center gap-x-4\">\n    <button class=\"inline-block cursor-pointer rounded-md bg-gray-800 px-4 py-3 text-center text-sm font-semibold uppercase text-white transition duration-200 ease-in-out hover:bg-gray-900\">\n        Button\n    </button>\n    <button class=\"btn\">Button</button>\n    <button class=\"btn btn-primary\">Button</button>\n    <button class=\"btn w-64 rounded-full\">Button</button>\n</div>\n\n```\n\n## The final result was that the tailwind class was not applied at all.\n\n\n![Image](https://github.com/user-attachments/assets/4c729f76-675b-4803-bb02-437d3167e055)\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16587","RelatedDescription":"Open issue \"Spring Boot + thymeleaf + tailwindcss v4 problem\" (#16587)"},{"Id":"2856326113","IsPullRequest":false,"CreatedAt":"2025-02-16T20:51:48","Actor":"staaky","Number":"16586","RawContent":null,"Title":"hidden in v4 no longer overrides all display classes","State":"open","Body":"Combining `hidden` with `inline-flex`, `inline-block` etc. no longer hides an element in v4.\n\nIn v3 `hidden` was the bottom display class in css, so it would override the others when combined.\n\nIn v4.0.6 the order seems alphabetical, so that breaks things.\n\n```html\n<span class=\"inline-flex hidden\">hidden in v3, visible in v4</span>\n```\n\n| v3 | v4.0.6 |\n| --- | --- |\n| ![Image](https://github.com/user-attachments/assets/fc441439-2a8a-4e22-aa68-f475f5739272) | ![Image](https://github.com/user-attachments/assets/d73b01f3-aeb1-4c66-81b6-d0ae43e67602) |","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16586","RelatedDescription":"Open issue \"hidden in v4 no longer overrides all display classes\" (#16586)"},{"Id":"2856305987","IsPullRequest":false,"CreatedAt":"2025-02-16T20:08:43","Actor":"tylersayshi","Number":"16585","RawContent":null,"Title":"Can @tailwindcss/vite scan step seems to miss classes in waku","State":"open","Body":"We're seeing not all classes be picked up by the tailwind vite plugin right now. I've attached a reproduction (thanks to one of our waku users on discord). The issue in this case is that bg-blue-400 does not make it into the tailwind style output. I am able to see the className in the html output so it does seem like a bug with the plugin for now to me.\n\nrepro: https://github.com/tylersayshi/waku-vite-tailwind-bug\n\nFrom this code it seems like this should auto-read from the html output, but it does seem to miss this case for now.\n\nhttps://github.com/tailwindlabs/tailwindcss/blob/main/packages/%40tailwindcss-vite/src/index.ts#L187-L214\n\nI'm happy to help however I can here :)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16585","RelatedDescription":"Open issue \"Can @tailwindcss/vite scan step seems to miss classes in waku\" (#16585)"},{"Id":"2856252043","IsPullRequest":false,"CreatedAt":"2025-02-16T18:14:45","Actor":"Sivasish48","Number":"16583","RawContent":null,"Title":"Add a Copy Button to Code Snippets in the \"Getting Started with Tailwind CSS\" Documentation","State":"open","Body":"Currently, the \"Getting Started with Tailwind CSS\" page in the documentation lacks a copy button for code snippets, particularly in the installation section. This feature would greatly improve the user experience by allowing developers to quickly copy installation commands or configuration snippets without manually selecting the text.\n\nProposed Solution:\nAdd a copy button next to each code snippet in the documentation. When clicked, the button should copy the code to the clipboard, providing a seamless experience for users.\n\nExample Implementation:\nMany documentation sites (e.g., Vercel, Next.js, MDN) already include this feature. A simple implementation could use a clipboard JavaScript API or a library like clipboard.js.\n\nBenefits:\n\nImproves usability and accessibility.\n\nSaves time for developers.\n\nAligns with modern documentation standards.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16583","RelatedDescription":"Open issue \"Add a Copy Button to Code Snippets in the \"Getting Started with Tailwind CSS\" Documentation\" (#16583)"},{"Id":"2856222961","IsPullRequest":false,"CreatedAt":"2025-02-16T17:16:49","Actor":"Damato","Number":"16582","RawContent":null,"Title":"Bug: vite warnings when minifying css - Empty :where() generated","State":"open","Body":"### The code in question:\n\n      body::-webkit-scrollbar {\n            @apply bg-zinc-100 dark:bg-zinc-800;\n      }\n\n### The error on bundling:\n\n      warnings when minifying css:\n      ▲ [WARNING] Unexpected \")\" [css-syntax-error]\n\n      <stdin>:14:30:\n            14 │ body::-webkit-scrollbar:where(){background-color:var(--color-zinc-...\n               ╵                               ^\n\n      ▲ [WARNING] Unexpected \")\" [css-syntax-error]\n\n      <stdin>:16:36:\n            16 │ ...:-webkit-scrollbar-thumb:where(){border-color:var(--color-zinc-...\n               ╵                                   ^\n\n---\n\n### General detail\n\nI am stumped, as I am getting weird behaviours on CSS minification. \n\nIn digging deeper it seems that it generates an empty `where()` when it should generate none. \nIt is only on build, and it is valid CSS that gets altered. Details are added below. \n\nI also found the same recently reported behaviour in the `daisyui` repo. It seems they are struggling with an empty `:is()` being generated. It is a consistent pattern, as I do not use  `daisyui`, but both our projects include Tailwind 4, and same type of issue.\n\nLink for reference.\nhttps://github.com/saadeghi/daisyui/issues/3453\n\nHappy to provide more data as needed, to make lives easier for devs and anyone else with the issue.\n\n---\n\n### What version of TailwindCSS are you using?\n\n      \"tailwindcss\": \"^4.0.4\",\n\n### Project detail\n\n      \"@sveltejs/kit\": \"^2.16.0\",\n      \"@sveltejs/vite-plugin-svelte\": \"^5.0.0\",\n      \"@tailwindcss/vite\",\n      \"vite\": \"^6.0.0\"\n\n### Command / IDE\n\n      vite build\n      VS Code\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16582","RelatedDescription":"Open issue \"Bug: vite warnings when minifying css - Empty :where() generated\" (#16582)"},{"Id":"2856138660","IsPullRequest":false,"CreatedAt":"2025-02-16T14:38:52","Actor":"duckeydev","Number":"16580","RawContent":null,"Title":"[v4] @config directive causing issues","State":"open","Body":"When i have @config directive inside my css file i get\nPS C:\\Users\\Ducky\\cloudable\\MovieHUB> npx @tailwindcss/cli -i \"./src/public/css/globals.css\" -o \"./src/public/css/tailwind.css\"        \nTypeError: i.includes is not a function","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16580","RelatedDescription":"Open issue \"[v4] @config directive causing issues\" (#16580)"},{"Id":"2856102940","IsPullRequest":true,"CreatedAt":"2025-02-16T13:28:44","Actor":"soranoo","Number":"16579","RawContent":null,"Title":"minor: better type safety and best practice to escape function","State":"open","Body":"<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n\r\nHello,\r\n\r\nThis PR aims to improve type safety and adhere to best practices for the selector escape function.\r\n- Replaces `var` with `const` or `let` for better scoping and readability.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16579","RelatedDescription":"Open PR \"minor: better type safety and best practice to escape function\" (#16579)"},{"Id":"2856047256","IsPullRequest":false,"CreatedAt":"2025-02-16T12:04:01","Actor":"tomerzcod7","Number":"16577","RawContent":null,"Title":"Tailwind classes not overriding regular CSS classes","State":"closed","Body":"After upgrading to v4, CSS classes applied to elements imported from external libraries that already has some CSS classes on them stopped working.\n\nI took a closer look and I think this is related to https://tailwindcss.com/docs/upgrade-guide#adding-custom-utilities, Tailwind not \"hijacking\" the the @layer at-rule anymore.\n\nFor example, this is what happens when I try to style ReactFlow package Handle component:\n\nv3:\n![Image](https://github.com/user-attachments/assets/a6926fc0-b913-4739-aee6-5ee07645cf84)\n\nand this is the exact same code with v4:\n![Image](https://github.com/user-attachments/assets/ca87fd3c-4a8f-45d0-93e9-e774900a5df4)\n\nYou can see that in v4, the classes are applied at the utilities cascade layer, making them less specific then the built in unlayered classes (https://developer.mozilla.org/en-US/docs/Web/CSS/@layer#description)\n\nI'm not sure if it's a bug or desired, but it seems to me like this would break a lot of code relying on classes supplied from outside having precedent over internal classes.\n\nThe issues is solved if I mark all classes that are conflicting with important:\n\n![Image](https://github.com/user-attachments/assets/47725bf2-9cdf-40f6-8b58-1237b8dfbea8)\n\nIs this the recommended way to solve it? Am I missing something here?\n\nThanks in advance","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16577","RelatedDescription":"Closed issue \"Tailwind classes not overriding regular CSS classes\" (#16577)"},{"Id":"2855726187","IsPullRequest":false,"CreatedAt":"2025-02-15T22:27:22","Actor":"nwoodr94","Number":"16572","RawContent":null,"Title":"Vite broken documentation","State":"closed","Body":"1. Follow Vite [documentation](https://vite.dev/guide/#scaffolding-your-first-vite-project)\n2. Follow tailwind [documentation](https://tailwindcss.com/docs/installation/using-vite)\n\n\n### Expected\nI expect to start coding\n\n### Actual\nStyles are not applied\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16572","RelatedDescription":"Closed issue \"Vite broken documentation\" (#16572)"},{"Id":"2855690617","IsPullRequest":false,"CreatedAt":"2025-02-15T20:04:47","Actor":"filipsobol","Number":"16571","RawContent":null,"Title":"[v4] Tailwind generates a lot of unused styles","State":"open","Body":"### Steps to reproduce\n\n1. Create a fresh Vite project.\n2. Add Tailwind following the [Installation](https://tailwindcss.com/docs/installation/using-vite) guide.\n3. Add `@import \"tailwindcss\";`.\n4. Do **not** use any Tailwind classes in the code.\n5. Run the `npm run build` command.\n\n### Expected result\n\nThe generated CSS file should contain only essential styles, such as CSS resets, with a file size of approximately **2 KB**.\n\n### Actual result\n\nThe generated CSS file includes a significant number of unused styles, with a total size of **21.8 KB**.\n\n* ~360 CSS variables,\n* `utilities` styles, \n* `@keyframes` rules,\n* `@property` rules.\n\n### Workaround\n\nPurgeCSS can remove most of the unused styles, [except for `@property` rules](https://github.com/FullHuman/purgecss/issues/1325):\n\n```js\n// postcss.config.js\n\nimport { purgeCSSPlugin } from '@fullhuman/postcss-purgecss';\n\nexport default {\n  plugins: [\n    purgeCSSPlugin( {\n      content: [\n        './index.html',\n        './src/**/*'\n      ],\n      fontFace: true,\n      keyframes: true,\n      variables: true\n    } )\n  ]\n}\n```\n\nWith this configuration, the final CSS file size is reduced to approximately **4 KB**.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16571","RelatedDescription":"Open issue \"[v4] Tailwind generates a lot of unused styles\" (#16571)"},{"Id":"2855521488","IsPullRequest":false,"CreatedAt":"2025-02-15T17:47:50","Actor":"maquejp","Number":"16569","RawContent":null,"Title":"OSX: plugin:@tailwindcss/vite:generate:serve _.waitForRequestsIdle is not a function","State":"closed","Body":"Hello,\nI am trying to integrate Tailwindcss 4 in a reactjs/vite project (**fresh starting project**)\nI have followed the step by step from the docs but I have an error when do it on my MBP.\nI do not have such issue on a Linux machine (ubuntu)\n\n`\n3:56:58 PM [vite] Internal server error: _.waitForRequestsIdle is not a function\n  Plugin: @tailwindcss/vite:generate:serve\n  File: /Users/maquejp/Developments/projects/multi-techs/guis/web/reactjs/vite/book_a_pro/src/index.css\n      at file:///Users/maquejp/Developments/projects/multi-techs/guis/web/reactjs/vite/book_a_pro/node_modules/@tailwindcss/vite/dist/index.mjs:1:3400\n      at Array.map (<anonymous>)\n      at TransformContext.transform (file:///Users/maquejp/Developments/projects/multi-techs/guis/web/reactjs/vite/book_a_pro/node_modules/@tailwindcss/vite/dist/index.mjs:1:3391)\n      at Object.transform (file:///Users/maquejp/Developments/projects/multi-techs/guis/web/reactjs/vite/book_a_pro/node_modules/vite/dist/node/chunks/dep-3936e161.js:44355:62)\n      at async loadAndTransform (file:///Users/maquejp/Developments/projects/multi-techs/guis/web/reactjs/vite/book_a_pro/node_modules/vite/dist/node/chunks/dep-3936e161.js:55029:29)\n      at async viteTransformMiddleware (file:///Users/maquejp/Developments/projects/multi-techs/guis/web/reactjs/vite/book_a_pro/node_modules/vite/dist/node/chunks/dep-3936e161.js:64617:32)\n_.waitForRequestsIdle is not a function\n`\n\nHow can I solve this...","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16569","RelatedDescription":"Closed issue \"OSX: plugin:@tailwindcss/vite:generate:serve _.waitForRequestsIdle is not a function\" (#16569)"},{"Id":"2854520748","IsPullRequest":false,"CreatedAt":"2025-02-15T15:30:16","Actor":"Borzik","Number":"16555","RawContent":null,"Title":"Linux ARM64 standalone build for v4 is just Bun","State":"closed","Body":"All standalone builds for linux arm64 (tested versions up to 4.0.6 incl. alpha and beta) are just Bun executables without tailwindcss itself.\n\nTo reproduce:\n```Dockerfile\nFROM ubuntu:24.04\nWORKDIR /app\nRUN apt-get update && apt-get install -y wget\nRUN wget https://github.com/tailwindlabs/tailwindcss/releases/download/v4.0.6/tailwindcss-linux-arm64 && chmod +x tailwindcss-linux-arm64\nCMD \"/app/tailwindcss-linux-arm64\"\n```\n\n```shell\ndocker build --platform=linux/arm64 . -t docker-tailwind && docker run --platform=linux/arm64 --rm -it docker-tailwind\n```\n\nReturn:\n```\nBun is a fast JavaScript runtime, package manager, bundler, and test runner. (1.1.43+76800b049)\n\nUsage: bun <command> [...flags] [...args]\n\nCommands:\n  run       ./my-script.ts       Execute a file with Bun\n[...]\n```\n\nIf I swap v4.0.6 for v3.4.17, it will return correct tailwindcss intro:\n```\ntailwindcss v3.4.17\n\nUsage:\n   tailwindcss [--input input.css] [--output output.css] [--watch] [options...]\n   tailwindcss init [--full] [--postcss] [options...]\n```\n\n### Alpine arm64 musl build has the same issue\n```Dockerfile\nFROM alpine:3.21.3\nWORKDIR /app\nRUN apk add wget libstdc++ libgcc\nRUN wget https://github.com/tailwindlabs/tailwindcss/releases/download/v4.0.6/tailwindcss-linux-arm64-musl && chmod +x tailwindcss-linux-arm64-musl\nCMD \"/app/tailwindcss-linux-arm64-musl\"\n```\n\n```\ndocker build --platform=linux/arm64 . -t docker-tailwind && docker run --platform=linux/arm64 --rm -it docker-tailwind\n```\n\nReturns:\n```\nBun is a fast JavaScript runtime, package manager, bundler, and test runner. (1.1.43+76800b049)\n\nUsage: bun <command> [...flags] [...args]\n```\n\n### Running x64 build on x64 platform works fine:\n```Dockerfile\nFROM ubuntu:24.04\nWORKDIR /app\nRUN apt-get update && apt-get install -y wget\nRUN wget https://github.com/tailwindlabs/tailwindcss/releases/download/v4.0.6/tailwindcss-linux-x64 && chmod +x tailwindcss-linux-arm64\nCMD \"/app/tailwindcss-linux-x64\"\n```\n\nRemoving platform args (running on macos):\n```shell\ndocker build . -t docker-tailwind && docker run --rm -it docker-tailwind\n```\n\nReturn:\n```\n≈ tailwindcss v4.0.6\n\nUsage:\n  tailwindcss [--input input.css] [--output output.css] [--watch] [options…]\n\nOptions:\n  -i, --input ··········· Input file\n  -o, --output ·········· Output file [default: `-`]\n  -w, --watch ··········· Watch for changes and rebuild as needed\n  -m, --minify ·········· Optimize and minify the output\n      --optimize ········ Optimize the output without minifying\n      --cwd ············· The current working directory [default: `.`]\n  -h, --help ············ Display usage information\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16555","RelatedDescription":"Closed issue \"Linux ARM64 standalone build for v4 is just Bun\" (#16555)"},{"Id":"2855453028","IsPullRequest":false,"CreatedAt":"2025-02-15T12:41:46","Actor":"anthony-b-dev","Number":"16568","RawContent":null,"Title":"Custom Functional Utilities not working in V4","State":"open","Body":"I have the following code:\n\n```css\n@theme {\n  --text-shadow-sm: 0 1px 2px var(--tw-shadow-color);\n  --text-shadow-md: 0 2px 4px var(--tw-shadow-color);\n  --text-shadow-lg: 0 8px 16px var(--tw-shadow-color);\n}\n\n@utility text-shadow-* {\n  text-shadow: --value(--text-shadow-*);\n}\n```\n\n\n\n\nBut I get the following error:\n\n\n\n![Image](https://github.com/user-attachments/assets/9f054ec7-4927-4618-8881-2394718bd128)\n\n![Image](https://github.com/user-attachments/assets/7a18b583-4564-4629-871e-a6f4e83f0505)\n\n\n\n\nLooking at the guide, I followed the example [here](https://tailwindcss.com/docs/adding-custom-styles#functional-utilities) but had to name it `text-shadow` instead of `text `because it was being picked up in the color namespace. \n\nMy current solution is to use `textShadow `in the theme:\n\n```css\n@theme {\n  --textShadow-sm: 0 1px 2px var(--tw-shadow-color);\n  --textShadow-md: 0 2px 4px var(--tw-shadow-color);\n  --textShadow-lg: 0 8px 16px var(--tw-shadow-color);\n}\n\n@utility text-shadow-* {\n  text-shadow: --value(--textShadow);\n}\n```\n\nThis seems to be a bug. ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16568","RelatedDescription":"Open issue \"Custom Functional Utilities not working in V4\" (#16568)"},{"Id":"2855440339","IsPullRequest":false,"CreatedAt":"2025-02-15T12:22:42","Actor":"Nefcanto","Number":"16565","RawContent":null,"Title":"Fast and repetitive global.css reload with different timestamps in Qwik","State":"closed","Body":"I'm using Qwik + Tailwind 4. Please look at this video:\n\nhttps://github.com/user-attachments/assets/9fb243dc-ee0e-4f33-bca2-707ce93c939c\n\nAs you can see from 00:11, hundreds of requests are made to the `global.css` with a timestamp.\nI have no idea what makes this happen. This makes the development process very difficult and reduces DX dramatically.\nWhat can I do to find out the problem?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16565","RelatedDescription":"Closed issue \"Fast and repetitive global.css reload with different timestamps in Qwik\" (#16565)"},{"Id":"2855398176","IsPullRequest":false,"CreatedAt":"2025-02-15T12:22:08","Actor":"MiljanStojanovic93","Number":"16563","RawContent":null,"Title":"Tailwind not tracking changes in html files","State":"closed","Body":"I am new to Tailwind 4.0 and need help setting up my project.\nI have a folder structure like this:\n\n![Image](https://github.com/user-attachments/assets/cb9485bf-663e-45cf-b88e-6475f8a15def)\n\nCan someone explain to me why this is not working? ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16563","RelatedDescription":"Closed issue \"Tailwind not tracking changes in html files\" (#16563)"},{"Id":"2855410892","IsPullRequest":true,"CreatedAt":"2025-02-15T11:11:16","Actor":"depfu[bot]","Number":"16564","RawContent":null,"Title":"Update globby 14.0.2 → 14.1.0 (minor)","State":"open","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ globby (14.0.2 → 14.1.0) · [Repo](https://github.com/sindresorhus/globby)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/sindresorhus/globby/releases/tag/v14.1.0\">14.1.0</a></h4>\n\n<blockquote><ul dir=\"auto\">\n<li>Export <code class=\"notranslate\">isIgnoredByIgnoreFiles</code> and <code class=\"notranslate\">isIgnoredByIgnoreFilesSync</code> functions (<a href=\"https://bounce.depfu.com/github.com/sindresorhus/globby/pull/269\">#269</a>)  <a href=\"https://bounce.depfu.com/github.com/sindresorhus/globby/commit/cba89414c502a32b8bbac2c4ee5a7d122489a139\"><tt>cba8941</tt></a>\n</li>\n</ul>\n<hr>\n<p dir=\"auto\"><a href=\"https://bounce.depfu.com/github.com/sindresorhus/globby/compare/v14.0.2...v14.1.0\"><tt>v14.0.2...v14.1.0</tt></a></p></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/globby/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/sindresorhus/globby/compare/c000568bd20c97d94397c71ec22df4e1c5f41d47...60d7de54476f9ba9734c1b6923fba39d6589de5f\">See the full diff on Github</a>. The new version differs by 3 commits:</p>\n<ul>\n<li><a href=\"https://github.com/sindresorhus/globby/commit/60d7de54476f9ba9734c1b6923fba39d6589de5f\"><code>14.1.0</code></a></li>\n<li><a href=\"https://github.com/sindresorhus/globby/commit/86822f257fd65a7bb7a92d8351e59f0ea92c0fb3\"><code>Meta tweaks</code></a></li>\n<li><a href=\"https://github.com/sindresorhus/globby/commit/cba89414c502a32b8bbac2c4ee5a7d122489a139\"><code>Export `isIgnoredByIgnoreFiles` and `isIgnoredByIgnoreFilesSync` functions (#269)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16564","RelatedDescription":"Open PR \"Update globby 14.0.2 → 14.1.0 (minor)\" (#16564)"},{"Id":"2855005882","IsPullRequest":false,"CreatedAt":"2025-02-15T01:19:08","Actor":"brunnobb","Number":"16559","RawContent":null,"Title":"Compiler generating invalid syntax that throws on NextJS","State":"open","Body":"What version of Tailwind CSS are you using?\n\nv4.0.6\n\nWhat build tool (or framework if it abstracts the build tool) are you using?\n\nNextJs\n\nWhat version of Node.js are you using?\n\nv22\n\nWhat browser are you using?\n\nChrome\n\nWhat operating system are you using?\n\nWindows\n\nReproduction URL\n\nhttps://github.com/brunnobb/nextjs-tailwind4-error\n\nDescribe your issue\n\n\nJust created a brand new NextJS V15 (same happens on V14) and installed tailwind.\nIf using turbopack (--turbo on npm run dev) tailwind is generating invalid syntax code\n\nError does not happen when using webpack. (turbopack check for this invalid syntax)\nYou can even test on code that is commented out due to the compiler scanning possible tokens\n\n\n![Image](https://github.com/user-attachments/assets/6334722a-0e46-4b9e-ab93-2815538799ea)\n\n\nThat throws an error \n\n\n![Image](https://github.com/user-attachments/assets/a6933ce8-8bbf-4504-862f-d869fb2b5b5f)\n\n\nOn v3.X, I was able to use brackets syntax dynamically all over the code. \nI understand that it got changed, and we should use complete class names but should this token be created in first place?\n\n\n\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16559","RelatedDescription":"Open issue \"Compiler generating invalid syntax that throws on NextJS\" (#16559)"},{"Id":"2854738569","IsPullRequest":true,"CreatedAt":"2025-02-14T21:32:34","Actor":"depfu[bot]","Number":"16558","RawContent":null,"Title":"Update postcss-selector-parser 7.0.0 → 7.1.0 (minor)","State":"open","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ postcss-selector-parser (7.0.0 → 7.1.0) · [Repo](https://github.com/postcss/postcss-selector-parser) · [Changelog](https://github.com/postcss/postcss-selector-parser/blob/master/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/postcss/postcss-selector-parser/releases/tag/v7.1.0\">7.1.0</a></h4>\n\n<blockquote><h1 dir=\"auto\">7.1.0</h1>\n<ul dir=\"auto\">\n<li>feat: insert(Before|After) support multiple new node</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/postcss-selector-parser/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/postcss/postcss-selector-parser/compare/6158750aab0aed3046a5920bd58e0e0266a4ada2...ea6cd9324b4be90a4c529c3602deefbc4a2d7a82\">See the full diff on Github</a>. The new version differs by 4 commits:</p>\n<ul>\n<li><a href=\"https://github.com/postcss/postcss-selector-parser/commit/ea6cd9324b4be90a4c529c3602deefbc4a2d7a82\"><code>chore(release): 7.1.0</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss-selector-parser/commit/3f5ecb647910d2d1408f6dd0ec45dedf695ab556\"><code>feat: insert(Before|After) support multiple new node (#302)</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss-selector-parser/commit/e254e601a51aea9df80e9302b314ff7181ece132\"><code>docs: update `replaceWith` arguments (#300)</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss-selector-parser/commit/56d7fea028855adb74c451c435e55580cd0f1679\"><code>chore: fix comments (#296)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16558","RelatedDescription":"Open PR \"Update postcss-selector-parser 7.0.0 → 7.1.0 (minor)\" (#16558)"},{"Id":"2854556455","IsPullRequest":false,"CreatedAt":"2025-02-14T19:30:03","Actor":"SisypheOvO","Number":"16557","RawContent":null,"Title":"Adding to <html>,<body> styles seems unelegant implementation for SSG","State":"open","Body":"Adding to <html>,<body> styles seems unelegant for static site generators like vitepress, Jekyll, Hugo, etc.\n\n![Image](https://github.com/user-attachments/assets/fdcc38ba-db81-4f02-af54-337376027754)\n\nThe image showed sentences in the docs but it doesn’t mention things about adding Tailwind classes to elements like <html> and <body>.\n\nThe frameworks I listed ( probably there are more... like Nextjs, Nuxtjs or something ) generate index.html as compilation results and put it in the */dist directory. To reach the element <html> and <body> I know two ways:\n\n1. Use JS to get the element\n2. Edit styles in the compiled html file ( which is obviously unelegant and away from the original intension of Tailwind )\n\nThe first one WON'T WORK I think, because Tailwind scan files not covered by the content file globs as strings, whether those files contain HTML, JavaScript or any other language.\n\nIf there is a problem with my understanding, I welcome anyone to correct me 😢  \n\nI‘m asking this to find out, if there is a elegant way we could probably reach these elements?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16557","RelatedDescription":"Open issue \"Adding to <html>,<body> styles seems unelegant implementation for SSG\" (#16557)"},{"Id":"2854246836","IsPullRequest":false,"CreatedAt":"2025-02-14T19:16:12","Actor":"octoper","Number":"16553","RawContent":null,"Title":"[v4] `after:focus-within:ring` is not working as in v3","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite v5.4.14\n\n**What version of Node.js are you using?**\n\nNodeJS v20.13.1\n\n**What browser are you using?**\n\nChrome, but also checked other browsers like Firefox and Safari\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/OAD9WcRBin\n\n**Describe your issue**\n\n`after:focus-within:ring-*` in v4 is not working as in v3 and haven't found any changes in the doc about it","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16553","RelatedDescription":"Closed issue \"[v4] `after:focus-within:ring` is not working as in v3\" (#16553)"},{"Id":"2854404893","IsPullRequest":false,"CreatedAt":"2025-02-14T19:02:37","Actor":"danwetherald","Number":"16554","RawContent":null,"Title":"v4 - Input border colors not consistent with element border colors. Input borders appear darker","State":"closed","Body":"Here is an example to show the contrast from a div border vs input border\n\n<img width=\"737\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f1767ed7-7ecb-443a-b2b8-1d5f9613bab2\" />\n\n```\n<div class=\"mt-4 border-2 rounded border-blue-600\">\n      <%= form.label :description, \"Description\", class: \"label-primary\" %>\n      <%= form.text_area :description,\n                     rows: 4,\n                     class: \"focus:border-blue-600\",\n                     placeholder: \"Product description\" %>\n</div>\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16554","RelatedDescription":"Closed issue \"v4 - Input border colors not consistent with element border colors. Input borders appear darker\" (#16554)"},{"Id":"2853554570","IsPullRequest":true,"CreatedAt":"2025-02-14T17:14:14","Actor":"philipp-spiess","Number":"16539","RawContent":null,"Title":"Fix plugins with nested rules refering to the utility name","State":"closed","Body":"Closes https://github.com/tailwindlabs/tailwindcss-typography/issues/383\r\n\r\nThis PR fixes an issue that happened when JavaScript plugins create a nested rule that references to the utility name. The previous behavior looked like this:\r\n\r\n![image](https://github.com/user-attachments/assets/93ff869d-c95b-49d0-879c-7c20a852fa09)\r\n\r\nI was able to come up with an approach that can be fixed entirely in the compat layer by leveraging the `raw` field on the candidate. \r\n\r\n## Test plan\r\n\r\n- Added unit tests\r\n- Verified with the reproduction from https://github.com/tailwindlabs/tailwindcss-typography/issues/383:\r\n      \r\n    <img width=\"1458\" alt=\"Screenshot 2025-02-14 at 13 21 22\" src=\"https://github.com/user-attachments/assets/50544abc-e98f-48cd-b78c-ad7697387dd8\" />\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16539","RelatedDescription":"Closed or merged PR \"Fix plugins with nested rules refering to the utility name\" (#16539)"},{"Id":"2854235460","IsPullRequest":false,"CreatedAt":"2025-02-14T16:43:27","Actor":"amendezm","Number":"16552","RawContent":null,"Title":"Tailwind v4: Global reset affecting main project when importing a library","State":"open","Body":"### Problem Description:\n\nSince upgrading from Tailwind v3 to v4, I've encountered an issue where the global reset rules defined by \n```css\n*:not(#\\#), \n:not(#\\#):after, \n:not(#\\#):before, \n:not(#\\#)::backdrop { \n    box-sizing: border-box; \n    border: 0 solid; \n    margin: 0; \n    padding: 0; \n} \n```\nare being applied to my entire project, including elements I do not intend to affect. This was not a problem when using Tailwind v3.\n\nThe issue arises when importing my custom library (which uses Tailwind v4) into my main project. The styles are overriding the intended layout and design in my main project, even though the reset should ideally only affect elements within the library itself.\n\n### Steps to Reproduce:\n- Create a project using Tailwind v4.\n- Import a library that uses Tailwind v4.\n- Observe the global reset being applied to the entire project, which was not the case in Tailwind v3.\n\n### Expected Behavior:\nThe *:not(#\\#) rule (or any other global reset) should only affect elements within the library and not the entire project. This behavior was present in Tailwind v3, but now it is impacting the broader scope of my project in v4.\n\n### Additional Context:\n- Tailwind v3 did not exhibit this behavior.\n- I expect the reset to be scoped more narrowly or configurable to avoid side effects in the main project.\n\n### Environment:\n- Tailwind version: v4\n- Node version: 22.13.1\n- React version: 19\n- Vite version: 2.7.3\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16552","RelatedDescription":"Open issue \"Tailwind v4: Global reset affecting main project when importing a library\" (#16552)"},{"Id":"2853884402","IsPullRequest":true,"CreatedAt":"2025-02-14T15:48:35","Actor":"sonofmagic","Number":"16542","RawContent":null,"Title":"Expose AST scope and parsing methods","State":"closed","Body":"In the current Tailwind CSS functionality, we may need to perform some static analysis on existing projects, including parsing the project's CSS, obtaining the AST, and performing transformations (similar to PostCSS's API). \r\n\r\nHowever, the currently exposed API does not provide such capabilities. Therefore, the purpose of this PR is to introduce these changes.\r\n\r\n```ts\r\nimport { CSS, parseCss, CompileOptions } from 'tailwindcss'\r\n\r\nfunction getContext(css: string, opts: CompileOptions = {}) {\r\n  return parseCss(CSS.parse(css), opts)\r\n}\r\n\r\nconst ctx = await getContext('@import \\'tailwindcss\\';')\r\n// do stuff\r\n// ...\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16542","RelatedDescription":"Closed or merged PR \"Expose AST scope and parsing methods\" (#16542)"},{"Id":"2853653586","IsPullRequest":false,"CreatedAt":"2025-02-14T14:42:37","Actor":"jan-dh","Number":"16540","RawContent":null,"Title":"[v4.0.6] @keyframes animation breaks on build ","State":"closed","Body":"Tailwind v4.0.6\n@tailwindcss/vite 4.0.6\n\nThis keyframe statement (not in a config file, just in my css file\n```\n@keyframes rotate-cover {\n\t0% {\n\t\ttransform: scale(1);\n\t\tz-index: 1;\n\t}\n\t50% {\n\t\tz-index: 10;\n\t\ttransform: scale(1.15);\n\t\tfilter: drop-shadow(0 0 0.75rem crimson);\n\t\t&:before {\n\t\t\topacity: 1;\n\t\t}\n\t}\n\t100% {\n\t\tz-index: 1;\n\t\ttransform: scale(1);\n\t}\n}\n```\nGets transformed on build to:\n```\n@keyframes rotate-cover{0%{z-index:1;transform:scale(1)}100%{z-index:1;transform:scale(1)}\n```\n\nThe 50% step is just left out. ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16540","RelatedDescription":"Closed issue \"[v4.0.6] @keyframes animation breaks on build \" (#16540)"},{"Id":"2853397964","IsPullRequest":false,"CreatedAt":"2025-02-14T11:14:32","Actor":"Leoyang0717","Number":"16537","RawContent":null,"Title":"group-visited doesn't work in Safari and mobile browsers","State":"open","Body":"## What version of Tailwind CSS are you using?\n\nv4.0.0\n\n## What browser are you using?\n\nThis bug appears on Safari and mobile but not in Chrome.\n\n## Chrome it's work\n\n<img width=\"500\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/f227220e-06d5-4a58-8d5a-6aacb352689f\" />\n\n## Safari\n\n<img width=\"500\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/dd0da4ba-4920-441b-b2b4-c7e4f7996ed6\" />\n\n## Chrome  & Safari mobile\n<img width=\"300\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/d0c0dfe4-a190-4388-a670-50e5a31a072e\" />\n<img width=\"300\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/7f8bd164-8e9c-49fc-a83c-0b61c2bcca44\" />\n\n## Reproduction URL\n\nhttps://play.tailwindcss.com/TTbwnIDE64\n\n## Describe your issue\n\nWhen upgrading from v3.4.17 to v4.0.0, I encountered an issue on Safari and mobile devices where the visited state does not change the color as expected.\n\nI suspect that `:is` or `:where` combined with `:visited` might not be compatible with Safari or mobile browsers or is it actually not recommended to use `group-visited`?\n\n```\nv4.0.0 compile result, doesn't work!\n.group-visited\\:text-red-600 {\n  &:is(:where(.group):visited *) {\n    color: var(--color-red-600) /* oklch(0.577 0.245 27.325) */;\n  }\n}\n\nv3.4.17 compile result, work!\n.group:visited .group-visited\\:text-red-600 {\n  color: rgb(220 38 38 ) /* #dc2626 */;\n}\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16537","RelatedDescription":"Open issue \"group-visited doesn't work in Safari and mobile browsers\" (#16537)"},{"Id":"2852734529","IsPullRequest":false,"CreatedAt":"2025-02-14T10:44:57","Actor":"dizdep","Number":"16529","RawContent":null,"Title":"Tailwind error with icomoon","State":"closed","Body":"Recently i decided to migrate from tailwind 3 to 4 version and got this type of error\n> src/icomoon/style.css:1:1: `@layer base` is used but no matching `@tailwind base` directive is present.\n\n//style.css\n```\n@font-face {\n  font-family: 'icomoon';\n  src:  url('fonts/icomoon.eot?txz8js');\n  src:  url('fonts/icomoon.eot?txz8js#iefix') format('embedded-opentype'),\n    url('fonts/icomoon.ttf?txz8js') format('truetype'),\n    url('fonts/icomoon.woff?txz8js') format('woff'),\n    url('fonts/icomoon.svg?txz8js#icomoon') format('svg');\n  font-weight: normal;\n  font-style: normal;\n  font-display: block;\n}\n```\n\ni used this command from upgrade guide: \n\n> npx @tailwindcss/upgrade\n\nany idea how to fix it?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16529","RelatedDescription":"Closed issue \"Tailwind error with icomoon\" (#16529)"},{"Id":"2852937098","IsPullRequest":false,"CreatedAt":"2025-02-14T10:36:18","Actor":"rozsazoltan","Number":"16532","RawContent":null,"Title":"[v4] Unused variables and classes in the output when using Vite","State":"closed","Body":"I came across a question on StackOverflow that I didn’t understand at first, as I had a similar issue up until v4.0.4 with CLI and PostCSS, but v4.0.5 fixed it, and I verified that it works in v4.0.6 as well.\n\n* [How to remove unused colors during build?](https://stackoverflow.com/a/79438630/15167500)\n\nHowever, when I create a new Vite project, for example, with Svelte or Vue, the build results include unused variables and classes, so in a simple empty project, I get a 22.53kb result instead of the expected file size, which is the Preflight (4kb?).\n\nThe `.gitignore` by default excludes the mapping of node_modules, so I assume TailwindCSS doesn't pull variables from there. There isn't a single TailwindCSS class used in the project, and still, a lot of unnecessary content is getting into `dist/css/index.css`.\n\nThe problem is, of course, resolved with PurgeCSS, but the real question is why unused variables (e.g., all colors, ...) and class names (e.g., `.shadow, .capitalize, .lowercase`) are included in the output by default.\n\n### Versions\n```json\n\"dependencies\": {\n  \"@tailwindcss/vite\": \"^4.0.6\",\n  \"tailwindcss\": \"^4.0.6\",\n  \"vue\": \"^3.5.13\"\n},\n\"devDependencies\": {\n  \"@vitejs/plugin-vue\": \"^5.2.1\",\n  \"@vue/tsconfig\": \"^0.7.0\",\n  \"typescript\": \"~5.7.3\",\n  \"vite\": \"^6.1.0\",\n  \"vue-tsc\": \"^2.2.0\"\n}\n```\n\n### Reproduction steps\n* Vite create-app\n* TailwindCSS v4 with Vite installation steps\n* `pnpm build`\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16532","RelatedDescription":"Closed issue \"[v4] Unused variables and classes in the output when using Vite\" (#16532)"},{"Id":"2852816235","IsPullRequest":false,"CreatedAt":"2025-02-14T10:21:14","Actor":"y-core","Number":"16530","RawContent":null,"Title":"v4 vite PostCSS plugin error when app root folder contains a hyphen [-]","State":"closed","Body":"It appears that using the @tailwindcss/vite plugin, when app root folder contains a hyphen [-] the following error is thrown.\n\n[postcss] It looks like you're trying to use `tailwindcss` directly as a PostCSS plugin. The PostCSS plugin has moved to a separate package, so to continue using Tailwind CSS with PostCSS you'll need to install `@tailwindcss/postcss` and update your PostCSS configuration.\n\nnode_modules/tailwindcss/dist/lib.js:33:1716 is where the final error is thrown.\n\nWhat version of Tailwind CSS are you using?\n\n4.0.6\n\nWhat build tool (or framework if it abstracts the build tool) are you using?\n\nVite 6.1.0\n\nWhat version of Node.js are you using?\n\n22\n\nWhat browser are you using?\n\nN/A\n\nWhat operating system are you using?\n\nmacOS\n\nmy use case happens to be when using react-router, but I've tracked it down to what appears to be the @tailwindcss/vite plugin.\n\nSteps to reproduce: 🔴\n\n```bash \nmkdir local-app\ncd local-app\nnpx create-react-router . \nnpm i\n```\n\nThis creates a vite.config.ts that includes:\n```javascript\nimport tailwindcss from \"@tailwindcss/vite\";\n...\nexport default defineConfig({\n  plugins: [tailwindcss(), reactRouter(), tsconfigPaths()],\n});\n```\n\n`npm run dev` - when accessing `http://localhost:5173` throws error: [postcss] It looks like you're trying to use `tailwindcss` directly as a PostCSS plugin... \n\nSteps to reproduce: 🟢\nWhen creating a directory without hyphen, it works fine\n```bash \nmkdir localapp\ncd localapp\nnpx create-react-router . \nnpm i\n```\n\n`npm run dev` - `http://localhost:5173` works perfectly  \n\ndowngrading to tailwindcss@3 and not using the v4 plugin or removing the hyphen from the root folder name both resolves the issue\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16530","RelatedDescription":"Closed issue \"v4 vite PostCSS plugin error when app root folder contains a hyphen [-]\" (#16530)"},{"Id":"2852822058","IsPullRequest":false,"CreatedAt":"2025-02-14T06:47:42","Actor":"ailon","Number":"16531","RawContent":null,"Title":"hover in v4 relies on a feature that is buggy in Chromium-based browsers","State":"open","Body":"There's a long-standing bug in Chromium that incorrectly identifies 2-in-1 Windows PCs with external keyboard and mouse attached as having no \"fine\" inputs. Looks like Tailwind CSS 4 now relies on this \"feature\" which makes hover (and possibly other things) not work on projects using v4 on these PCs.\n\nHere's the issue on the Chromium issues tracker:\nhttps://issues.chromium.org/issues/40277167\n\nI'm attaching a video demonstrating this in action.\n\nhttps://github.com/user-attachments/assets/721dc115-e706-4883-9c79-5746dfb57cd9","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16531","RelatedDescription":"Open issue \"hover in v4 relies on a feature that is buggy in Chromium-based browsers\" (#16531)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-02-17T03:30:23.2166128Z","RunDurationInMilliseconds":499}