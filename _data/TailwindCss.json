{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2822233110","IsPullRequest":true,"CreatedAt":"2025-01-31T01:32:56","Actor":"thecrypticace","Number":"16093","RawContent":null,"Title":"Discard invalid declarations when parsing CSS","State":"open","Body":"I discovered this when triaging an error someone had on Tailwind Play.\r\n\r\n1. When we see a `;` we often assume a valid declaration precedes it but that may not be the case\r\n2. When we see the name of a custom property we assume everything that follows will be a valid declaration but that is not necessarily the case\r\n3. A bare identifier inside of a rule is treated as a declaration which is not the case\r\n\r\nThis PR fixes all three of these by ignoring these invalid cases. Though some should probably be turned into errors.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16093","RelatedDescription":"Open PR \"Discard invalid declarations when parsing CSS\" (#16093)"},{"Id":"2822182586","IsPullRequest":false,"CreatedAt":"2025-01-31T00:57:01","Actor":"mattkrick","Number":"16092","RawContent":null,"Title":"v4 Regression: Keyframe animations defined in JS must be referred to using kebab case, even if defined in camelCase","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nwebpack 89.0\n\n**What version of Node.js are you using?**\n\nFor example: v20.18.1\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nProbably just a documentation issue, but can make one if helpful\n\n**Describe your issue**\n\nMy theme is defined in my config.js as follows\n\n```ts\n{\n  theme: {\n    keyframes: {\n      slideUp: {\n        from: {opacity: 0, transform: 'translate(-50%, -50%) translateY(32px) scale(0.96)'}\n      }\n    },\n    animation: {\n      slideUp: 'slideUp 200ms cubic-bezier(0, 0, 0.2, 1)',\n    }\n  }\n} \n```\n\nMy legacy code references it using the name as defined, in camelCase:\n\n```html\n<div className='animate-slideUp'></div> // worked in v3. doesn't work in v4!\n<div className='animate-slide-up'></div> // works in v4!\n```\n\nI'm OK if this is working as intended, but it was a surprise when all my animations broke.\nI suggest documenting it in the upgrade guide & maybe adding the rename codemod to the migrator so it doesn't surprise others.\n\nThank you so much for what you do ❤ ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16092","RelatedDescription":"Open issue \"v4 Regression: Keyframe animations defined in JS must be referred to using kebab case, even if defined in camelCase\" (#16092)"},{"Id":"2822180496","IsPullRequest":true,"CreatedAt":"2025-01-31T00:55:44","Actor":"depfu[bot]","Number":"16091","RawContent":null,"Title":"Update @playwright/test 1.49.1 → 1.50.0 (minor)","State":"open","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ @​playwright/test (1.49.1 → 1.50.0) · [Repo](https://github.com/Microsoft/playwright)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/microsoft/playwright/releases/tag/v1.50.0\">1.50.0</a></h4>\n\n<blockquote><h2 dir=\"auto\">Test runner</h2>\n<ul dir=\"auto\">\n<li>\n<p dir=\"auto\">New option <a href=\"https://playwright.dev/docs/api/class-test#test-step-option-timeout\"><code class=\"notranslate\">timeout</code></a> allows specifying a maximum run time for an individual test step. A timed-out step will fail the execution of the test.</p>\n<div class=\"highlight highlight-source-js\" dir=\"auto\"><pre class=\"notranslate\"><span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'some test'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> page <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">await</span> <span class=\"pl-s1\">test</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">step</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'a step'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">// This step can time out separately from the test</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">,</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">timeout</span>: <span class=\"pl-c1\">1000</span> <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n</li>\n<li>\n<p dir=\"auto\">New method <a href=\"https://playwright.dev/docs/api/class-test#test-step-skip\">test.step.skip()</a> to disable execution of a test step.</p>\n<div class=\"highlight highlight-source-js\" dir=\"auto\"><pre class=\"notranslate\"><span class=\"pl-en\">test</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'some test'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">{</span> page <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n  <span class=\"pl-k\">await</span> <span class=\"pl-s1\">test</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">step</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'before running step'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">// Normal step</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-k\">await</span> <span class=\"pl-s1\">test</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">step</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">skip</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'not yet ready'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">// This step is skipped</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n\n  <span class=\"pl-k\">await</span> <span class=\"pl-s1\">test</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">step</span><span class=\"pl-kos\">(</span><span class=\"pl-s\">'after running step'</span><span class=\"pl-kos\">,</span> <span class=\"pl-k\">async</span> <span class=\"pl-kos\">(</span><span class=\"pl-kos\">)</span> <span class=\"pl-c1\">=&gt;</span> <span class=\"pl-kos\">{</span>\n    <span class=\"pl-c\">// This step still runs even though the previous one was skipped</span>\n  <span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span>\n<span class=\"pl-kos\">}</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">;</span></pre></div>\n</li>\n<li>\n<p dir=\"auto\">Expanded <a href=\"https://playwright.dev/docs/api/class-locatorassertions#locator-assertions-to-match-aria-snapshot-2\">expect(locator).toMatchAriaSnapshot()</a> to allow storing of aria snapshots in separate YAML files.</p>\n</li>\n<li>\n<p dir=\"auto\">Added method <a href=\"https://playwright.dev/docs/api/class-locatorassertions#locator-assertions-to-have-accessible-error-message\">expect(locator).toHaveAccessibleErrorMessage()</a> to assert the Locator points to an element with a given <a href=\"https://w3c.github.io/aria/#aria-errormessage\">aria errormessage</a>.</p>\n</li>\n<li>\n<p dir=\"auto\">Option <a href=\"https://playwright.dev/docs/api/class-testconfig#test-config-update-snapshots\">testConfig.updateSnapshots</a> added the configuration enum <code class=\"notranslate\">changed</code>. <code class=\"notranslate\">changed</code> updates only the snapshots that have changed, whereas <code class=\"notranslate\">all</code> now updates all snapshots, regardless of whether there are any differences.</p>\n</li>\n<li>\n<p dir=\"auto\">New option <a href=\"https://playwright.dev/docs/api/class-testconfig#test-config-update-source-method\">testConfig.updateSourceMethod</a> defines the way source code is updated when <a href=\"https://playwright.dev/docs/api/class-testconfig#test-config-update-snapshots\">testConfig.updateSnapshots</a> is configured. Added <code class=\"notranslate\">overwrite</code> and <code class=\"notranslate\">3-way</code> modes that write the changes into source code, on top of existing <code class=\"notranslate\">patch</code> mode that creates a patch file.</p>\n<div class=\"highlight highlight-source-shell\" dir=\"auto\"><pre class=\"notranslate\">npx playwright <span class=\"pl-c1\">test</span> --update-snapshots=changed --update-source-method=3way</pre></div>\n</li>\n<li>\n<p dir=\"auto\">Option <a href=\"https://playwright.dev/docs/api/class-testconfig#test-config-web-server\">testConfig.webServer</a> added a <code class=\"notranslate\">gracefulShutdown</code> field for specifying a process kill signal other than the default <code class=\"notranslate\">SIGKILL</code>.</p>\n</li>\n<li>\n<p dir=\"auto\">Exposed <a href=\"https://playwright.dev/docs/api/class-teststep#test-step-attachments\">testStep.attachments</a> from the reporter API to allow retrieval of all attachments created by that step.</p>\n</li>\n</ul>\n<h2 dir=\"auto\">UI updates</h2>\n<ul dir=\"auto\">\n<li>Updated default HTML reporter to improve display of attachments.</li>\n<li>New button for picking elements to produce aria snapshots.</li>\n<li>Additional details (such as keys pressed) are now displayed alongside action API calls in traces.</li>\n<li>Display of <code class=\"notranslate\">canvas</code> content in traces is error-prone. Display is now disabled by default, and can be enabled via the <code class=\"notranslate\">Display canvas content</code> UI setting.</li>\n<li>\n<code class=\"notranslate\">Call</code> and <code class=\"notranslate\">Network</code> panels now display additional time information.</li>\n</ul>\n<h2 dir=\"auto\">Breaking</h2>\n<ul dir=\"auto\">\n<li>\n<a href=\"https://playwright.dev/docs/api/class-locatorassertions#locator-assertions-to-be-editable\">expect(locator).toBeEditable()</a> and <a href=\"https://playwright.dev/docs/api/class-locator#locator-is-editable\">locator.isEditable()</a> now throw if the target element is not <code class=\"notranslate\">&lt;input&gt;</code>, <code class=\"notranslate\">&lt;select&gt;</code>, or a number of other editable elements.</li>\n<li>Option <a href=\"https://playwright.dev/docs/api/class-testconfig#test-config-update-snapshots\">testConfig.updateSnapshots</a> now updates all snapshots when set to <code class=\"notranslate\">all</code>, rather than only the failed/changed snapshots. Use the new enum <code class=\"notranslate\">changed</code> to keep the old functionality of only updating the changed snapshots.</li>\n</ul>\n<h2 dir=\"auto\">Browser Versions</h2>\n<ul dir=\"auto\">\n<li>Chromium 133.0.6943.16</li>\n<li>Mozilla Firefox 134.0</li>\n<li>WebKit 18.2</li>\n</ul>\n<p dir=\"auto\">This version was also tested against the following stable channels:</p>\n<ul dir=\"auto\">\n<li>Google Chrome 132</li>\n<li>Microsoft Edge 132</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/@playwright%2Ftest/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/Microsoft/playwright/compare/88bc8afc78ea6ff13d2bbb312b99eb924962766c...9d221785334d22b0606b746bffe8a89b8f652e1c\">See the full diff on Github</a>. The new version differs by more commits than we can show here.</p>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16091","RelatedDescription":"Open PR \"Update @playwright/test 1.49.1 → 1.50.0 (minor)\" (#16091)"},{"Id":"2821947490","IsPullRequest":true,"CreatedAt":"2025-01-30T22:33:42","Actor":"lifeiscontent","Number":"16089","RawContent":null,"Title":"add user-invalid and user-valid static variants","State":"closed","Body":"Update variants.ts\r\n\r\n<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16089","RelatedDescription":"Closed or merged PR \"add user-invalid and user-valid static variants\" (#16089)"},{"Id":"2821940821","IsPullRequest":false,"CreatedAt":"2025-01-30T22:27:04","Actor":"lifeiscontent","Number":"16088","RawContent":null,"Title":"tailwind upgrade doesn't explain what failed during the migration of js to css config","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: postcss-cli 8.3.1, Next.js 10.0.9, webpack 5.28.0\n\n**What version of Node.js are you using?**\n\nFor example: v22.x\n\n**What browser are you using?**\n\nFor example: Chrome, Safari, or N/A\n\n**What operating system are you using?**\n\nFor example: macOS, Windows\n\n**Reproduction URL**\n\nhttps://gist.github.com/lifeiscontent/860943b535af0fa846967a613b668c6b\n\nA reproduction is **required** when filing an issue — any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.\n\n**Describe your issue**\n\nwhen using `npx @tailwindcss/upgrade` it fails to migrate to a css config but doesn't explain why it failed","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16088","RelatedDescription":"Open issue \"tailwind upgrade doesn't explain what failed during the migration of js to css config\" (#16088)"},{"Id":"2821677587","IsPullRequest":true,"CreatedAt":"2025-01-30T19:46:06","Actor":"depfu[bot]","Number":"16084","RawContent":null,"Title":"Update turbo 2.3.3 → 2.3.4 (patch)","State":"open","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ turbo (2.3.3 → 2.3.4) · [Repo](https://github.com/turborepo/turbo)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16084","RelatedDescription":"Open PR \"Update turbo 2.3.3 → 2.3.4 (patch)\" (#16084)"},{"Id":"2821601595","IsPullRequest":false,"CreatedAt":"2025-01-30T19:04:03","Actor":"MickL","Number":"16082","RawContent":null,"Title":"Improve treeshaking","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.0.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nvite 6.0.5\n\n**What version of Node.js are you using?**\n\nBun 1.2.1\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\nhttps://stackblitz.com/edit/vitejs-vite-qn84o4zm?file=src%2FApp.vue\n\n**Describe your issue**\n\nI just realized that an empty project, with no classes used at all, builds up a 21,9 kB css file. I see for example `.lowercase`, `.uppercase`, `.shadow`, `.filter`, `.transition` as well as tons of css variables and @property's.\n\nI was kinda expecting that Tailwind will not add classes that are not used. Also I would kindof expect the 364 css variables to be not included if they are not used.\n\n**Built css file (post-formatted):**\nhttps://pastebin.com/WNZ1C5f5","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16082","RelatedDescription":"Open issue \"Improve treeshaking\" (#16082)"},{"Id":"2821510934","IsPullRequest":false,"CreatedAt":"2025-01-30T18:53:46","Actor":"Bogatovmi","Number":"16080","RawContent":null,"Title":"[v4] bg-(<custom-property>) for backgorund-image generate background-color property","State":"closed","Body":"**bg-(--icon-caret-down) class generate background-color property for me**\n\n![Image](https://github.com/user-attachments/assets/41794e65-1d90-4272-b45f-d2d5f963943a)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16080","RelatedDescription":"Closed issue \"[v4] bg-(<custom-property>) for backgorund-image generate background-color property\" (#16080)"},{"Id":"2821456646","IsPullRequest":false,"CreatedAt":"2025-01-30T18:50:38","Actor":"arkhaiel","Number":"16079","RawContent":null,"Title":"Compatibility issues with not-so-old browsers","State":"closed","Body":"Thanks a lot for this amazing v4 release ! I use Nuxt UI which uses Tailwind v4 and it's a pleasure to use these new amazing features. Still, I spotted a problem with the `ring` class on 1-2 years old firefox, which is not so old and which may be adressed.\nCheers from France ! \n\n---\n\n**What version of Tailwind CSS are you using?**\n\nFrom the official docs, I guess it's Tailwind v4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nI don't know, it's the tool you use for your docs (but I encountered the problem with Nuxt / Nuxt UI which uses Vite)\n\n**What version of Node.js are you using?**\n\nIt's your website.\n\n**What browser are you using?**\n\nFirefox v.114\n\n**What operating system are you using?**\n\nThe problem has been spotted on Windows, and I reproduce it on macOS\n\n**Reproduction URL**\n\nhttps://tailwindcss.com/docs/box-shadow#adding-a-ring\n\n**Describe your issue**\n\nThe `ring` class has problems : rings don't show at all. I encountered the problem because I use Nuxt UI on my website, and Nuxt UI uses Tailwind v4. Users reported me they don't see the rings on my website. The version of firefox is 114.\n\nI don't know if the problem is wider or if it's just on the `ring` class.\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16079","RelatedDescription":"Closed issue \"Compatibility issues with not-so-old browsers\" (#16079)"},{"Id":"2821527350","IsPullRequest":false,"CreatedAt":"2025-01-30T18:24:56","Actor":"paulomotta-cc","Number":"16081","RawContent":null,"Title":"This part is broken on mobile, I'm just warning you because I love this tool","State":"closed","Body":"![Image](https://github.com/user-attachments/assets/c9c312cf-4600-4086-884f-ebca4d4cb78d)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16081","RelatedDescription":"Closed issue \"This part is broken on mobile, I'm just warning you because I love this tool\" (#16081)"},{"Id":"2821360883","IsPullRequest":true,"CreatedAt":"2025-01-30T17:03:42","Actor":"philipp-spiess","Number":"16078","RawContent":null,"Title":"Vite: Don't rebase urls that appear to be aliases","State":"open","Body":"Closes #16039\r\n\r\nThis PR changes our URL rebasing logic used with Vite so that it does not rebase URLs that look like common alias paths (e.g. urls starting in `~`, `@` or `#`, etc.). Unfortunately this is only an approximation and you can configure an alias for a path that starts with a regular alphabetical character (e.g. `foo` => `./my/foo`) so this isn't a perfect fix, however in practice most aliases will be prefixed with a symbol to make it clear that it's an alias anyways.\r\n\r\nOne alternative we have considered is to only rebase URLs that we know are relative (so they need to start with a `.`). This, however, will break common CSS use cases where urls are loaded like this:\r\n\r\n```css\r\nbackground: image-set(\r\n  url('image1.jpg') 1x,\r\n  url('image2.jpg') 2x\r\n);\r\n``` \r\n\r\nSo making this change felt like we only trade one GitHub issue for another one. \r\n\r\nIn a more ideal scenario we try to resolve the URL with the Vite resolver (we have to run the resolver and can't rely on the `resolve` setting alone due to packages like [`vite-tsconfig-paths`](https://www.npmjs.com/package/vite-tsconfig-paths)), however even then we can have relative paths being resolvable to different files based on wether they were rebased or not (e.g. when an image with the same filename exists in two different paths).\r\n\r\nSo ultimately we settled on extending the already existing blocklist (which we have taken from the Vite implementation) for now.\r\n\r\n## Test plan\r\n\r\n- Added unit test and it was tested with the Vite playground.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16078","RelatedDescription":"Open PR \"Vite: Don't rebase urls that appear to be aliases\" (#16078)"},{"Id":"2821239908","IsPullRequest":false,"CreatedAt":"2025-01-30T16:11:54","Actor":"kefranabg","Number":"16075","RawContent":null,"Title":"[v4] generated css for dark variant looks wrong compared to 3.4","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.1\n\n**What version of Node.js are you using?**\n\nFor example: v22.1\n\n**What browser are you using?**\n\nAll major browsers\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nBug reproduction link: https://play.tailwindcss.com/oTvhvobEoO?file=css\n\n**Describe your issue**\n\nFollowing up on https://github.com/tailwindlabs/tailwindcss/issues/16068\n\nSorry I think my last issue was not explicit enough.\nI posted a new reproduction link to demonstrate the issue: https://play.tailwindcss.com/oTvhvobEoO?file=css\n\nI think there is an issue with the generated css order:\n\n<img width=\"453\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/0f39a22e-8655-4e1f-ab8e-63852f46c427\" />\n\nBut I believe the order should be this one:\n\n```\n.text-black {\n  color: var(--color-black);\n}\n@media (prefers-color-scheme: dark) {\n  .text-black {\n    color: yellow;\n  }\n}\n.dark\\:text-blue-900 {\n  @media (prefers-color-scheme: dark) {\n    color: var(--color-blue-900);\n  }\n}\n```\n\nI compared with v3.4.17 and the order was the above, so I guess this is a regression right?\n\nJust to explain our use case: we have a large code base and we didn't want to apply the following `text-black dark:text-gray-200` everytime we were using `text-black`. So for some `text-*` or `bg-*` colors we override it at the global level by doing this:\n```\n@media (prefers-color-scheme: dark) {\n    .text-black {\n\t\t@apply text-gray-200;\n\t}\n}\n``` \n\n**But still** in some cases we'd like to have the option to override it with another color (e.g `text-black dark:text-blue`)\n\nThe options you suggested [here](https://github.com/tailwindlabs/tailwindcss/discussions/16070#discussioncomment-12008381) are not really what we expect since it will affect global colors\n\nLet me know if I can clarify more 👍 \n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16075","RelatedDescription":"Open issue \"[v4] generated css for dark variant looks wrong compared to 3.4\" (#16075)"},{"Id":"2820425144","IsPullRequest":false,"CreatedAt":"2025-01-30T15:58:22","Actor":"peterhirn","Number":"16045","RawContent":null,"Title":"@tailwindcss/vite `v4.0.1` not working `Cannot read properties of undefined (reading 'includes')`","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n@tailwindcss/vite\n\n**What version of Node.js are you using?**\n\nv23.6.1\n\n**What browser are you using?**\n\nAll\n\n**What operating system are you using?**\n\nLinux\n\n**Reproduction URL**\n\nI understand that reproduction is required, I just don't have the time right now, sorry. Since this issue is extremely obvious I hope you can do without.\n\n**Describe your issue**\n\n```\nTypeError: Cannot read properties of undefined (reading 'includes')\n    at m (file:///home/peter/Projects/phi-ag/rvt-app/node_modules/.pnpm/@tailwindcss+vite@4.0.1_vite@6.0.11_@types+node@22.12.0_jiti@2.4.2_lightningcss@1.29.1_terser@5.37.0_/node_modules/@tailwindcss/vite/dist/index.mjs:1:1599)\n    at transformIndexHtml (file:///home/peter/Projects/phi-ag/rvt-app/node_modules/.pnpm/@tailwindcss+vite@4.0.1_vite@6.0.11_@types+node@22.12.0_jiti@2.4.2_lightningcss@1.29.1_terser@5.37.0_/node_modules/@tailwindcss/vite/dist/index.mjs:1:3059)\n    at getVitePluginAssets (/home/peter/Projects/phi-ag/rvt-app/node_modules/.pnpm/vinxi@0.5.1_@types+node@22.12.0_ioredis@5.4.1_jiti@2.4.2_lightningcss@1.29.1_terser@5.37.0_typescript@5.7.3/node_modules/vinxi/lib/manifest/dev-server-manifest.js:186:39)\n    at Object.assets (/home/peter/Projects/phi-ag/rvt-app/node_modules/.pnpm/vinxi@0.5.1_@types+node@22.12.0_ioredis@5.4.1_jiti@2.4.2_lightningcss@1.29.1_terser@5.37.0_typescript@5.7.3/node_modules/vinxi/lib/manifest/dev-server-manifest.js:234:26)\n    at async createPageEvent (/home/peter/Projects/phi-ag/rvt-app/node_modules/.pnpm/@solidjs+start@1.0.11_@testing-library+jest-dom@6.6.3_solid-js@1.9.4_vinxi@0.5.1_@types+node@_fvmhuimud5ps5vjvpmm3ezrqsi/node_modules/@solidjs/start/dist/server/pageEvent.js:34:17)\n    at async eval (/home/peter/Projects/phi-ag/rvt-app/node_modules/.pnpm/@solidjs+start@1.0.11_@testing-library+jest-dom@6.6.3_solid-js@1.9.4_vinxi@0.5.1_@types+node@_fvmhuimud5ps5vjvpmm3ezrqsi/node_modules/@solidjs/start/dist/server/handler.js:37:25)\n    at async _callHandler (file:///home/peter/Projects/phi-ag/rvt-app/node_modules/.pnpm/h3@1.13.0/node_modules/h3/dist/index.mjs:1837:16)\n    at async _callHandler (file:///home/peter/Projects/phi-ag/rvt-app/node_modules/.pnpm/h3@1.13.0/node_modules/h3/dist/index.mjs:1837:16)\n    at async _callHandler (file:///home/peter/Projects/phi-ag/rvt-app/node_modules/.pnpm/h3@1.13.0/node_modules/h3/dist/index.mjs:1837:16)\n    at async file:///home/peter/Projects/phi-ag/rvt-app/node_modules/.pnpm/h3@1.13.0/node_modules/h3/dist/index.mjs:1978:19\n    at async Object.callAsync (file:///home/peter/Projects/phi-ag/rvt-app/node_modules/.pnpm/unctx@2.4.0/node_modules/unctx/dist/index.mjs:72:16)\n    at async Server.toNodeHandle (file:///home/peter/Projects/phi-ag/rvt-app/node_modules/.pnpm/h3@1.13.0/node_modules/h3/dist/index.mjs:2270:7)\n```\n\nSince there was only a single commit between 4.0 and 4.0.1 I assume the issue is this:\n\nhttps://github.com/tailwindlabs/tailwindcss/pull/16005/files#diff-00d01a2d38f5f4253651cf9811eab1182c96f0307e78c567b803416e24b98165R70","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16045","RelatedDescription":"Closed issue \"@tailwindcss/vite `v4.0.1` not working `Cannot read properties of undefined (reading 'includes')`\" (#16045)"},{"Id":"2820603786","IsPullRequest":true,"CreatedAt":"2025-01-30T15:58:20","Actor":"philipp-spiess","Number":"16052","RawContent":null,"Title":"Fix Vite issues with SolidStart","State":"closed","Body":"Fixes #16045\r\n\r\nThis PR fixes two Vite issues found with SolidStart:\r\n\r\n- SolidStart seems to emit an empty HTML chunk (where the content is literally just `/`) with _no pathname_. Since we use the path to generate an `id` for HTML chunks, this would currently cause a crash. This was reported in #16045\r\n- While testing the fix for the above, we also found that hot reloading was not working in SolidStart since `4.0.0-alpha.22`. After doing some bisecting we found that this is happening as SolidStart has the same module ID in different servers and we were invalidating the root when we shouldn't. After trying to restructure this code so that it only cleans up the root when it is _no longer part of any server_, we noticed some other compatibility issues with Nuxt and SvelteKit. It seems that the safest bet is to no longer update a root at all during rebuilds in the SSR step. This makes `invalidateAllRoots` a function that only notifiers the servers about a change which is conceptually also less confusing.\r\n\r\n## Test plan\r\n\r\n- Added an integration test for SolidStart dev mode\r\n- Manually tested the dev mode across all Vite based templates in https://github.com/philipp-spiess/tailwindcss-playgrounds: Astro, Nuxt, Remix, Solid, SvelteKit, and Vue.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16052","RelatedDescription":"Closed or merged PR \"Fix Vite issues with SolidStart\" (#16052)"},{"Id":"2821065192","IsPullRequest":true,"CreatedAt":"2025-01-30T15:46:30","Actor":"RobinMalfait","Number":"16072","RawContent":null,"Title":"Refactor gradient implementation to work around prettier/prettier#17058","State":"closed","Body":"This PR fixes an issue where tools like Prettier remove important trailing commas in CSS variables, making gradients invalid.\r\n\r\nWe encoded the `,` in the `--tw-gradient-position` to ensure that _if_ the `var(--tw-gradient-position)` is used, that the `,` was there. And if the variable was _not_ used that we didn't end up with a double `,,` rendering the gradient invalid.\r\n\r\nHowever, when running Prettier (there might be other tools that do this as well), the trailing comma in the `--tw-gradient-position` was removed which made the entire gradient invalid. E.g.:\r\n```diff\r\n  .bg-gradient-to-r {\r\n-   --tw-gradient-position: to right in oklab,;\r\n+   --tw-gradient-position: to right in oklab;\r\n    background-image: linear-gradient(var(--tw-gradient-stops));\r\n  }\r\n```\r\nNotice how the `,` is removed.\r\n\r\nThis PR fixes that, by moving the `,` to where the variable is being used. The only side effect is that we have to guarantee that the `--tw-gradient-position` is always present. In our testing (and using UI tests) this should be the case.\r\n\r\nRelated Prettier issue: https://github.com/prettier/prettier/issues/17058\r\n\r\nFixes: #16037\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16072","RelatedDescription":"Closed or merged PR \"Refactor gradient implementation to work around prettier/prettier#17058\" (#16072)"},{"Id":"2821128144","IsPullRequest":false,"CreatedAt":"2025-01-30T15:32:02","Actor":"frederikhors","Number":"16073","RawContent":null,"Title":"v4: `md:gap-y-8` and custom classes","State":"closed","Body":"With Tailwind 3 this works:\n\n```css\n.custom {\n    @apply grid gap-6;\n}\n```\n\n```html\n<div class=\"custom md:gap-y-8\">\n```\n\nWith Tailwind 4.0.1 the `md:gap-y-8` doesn't work, but it works if I use `!`, why?\n\n- app.css:\n\n```css\n@import 'tailwindcss';\n\n.custom {\n    @apply grid gap-6;\n}\n```\n\n```html\n<div class=\"custom md:gap-y-8!\">\n```\n\nI'm using vite config with this:\n\n```js\nimport tailwindcss from '@tailwindcss/vite';\n\nexport default defineConfig(({ mode }) => {\n    return {\n        plugins: [sveltekit(), tailwindcss()],\n    }\n});\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16073","RelatedDescription":"Closed issue \"v4: `md:gap-y-8` and custom classes\" (#16073)"},{"Id":"2820667108","IsPullRequest":false,"CreatedAt":"2025-01-30T15:29:10","Actor":"wongjn","Number":"16056","RawContent":null,"Title":"`@tailwindcss/postcss` does not run on some files that use Tailwind features","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.0, v4.0.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nwebpack@5.97.1, postcss-cli@11.0.0\n\n**What version of Node.js are you using?**\n\nv18.17.1, v18.18.2\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nLinux in WSL\n\n**Reproduction URL**\n\nhttps://github.com/wongjn/tailwind-postcss\n\n**Describe your issue**\n\nAn input CSS file does not get processed by Tailwind when it only has the Tailwind-specific at-rules of `@reference`, `@variant`, `@custom-variant`, `@utility` directives within it. I believe this is due to the `if` condition within the PostCSS plugin:\n\nhttps://github.com/tailwindlabs/tailwindcss/blob/ea249957497c095ff8d228a3c913f608afbb9b28/packages/%40tailwindcss-postcss/src/index.ts#L74-L91\n\nUse case is I have some separate files the don't need to compile any Tailwind utilities but should have reference to Tailwind theme tokens used elsewhere in the project.\n\nEdit: Though `@keyframes` would get injected as per https://github.com/tailwindlabs/tailwindcss/issues/15956#issuecomment-2618659665 so perhaps this type of usage is unintended?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16056","RelatedDescription":"Closed issue \"`@tailwindcss/postcss` does not run on some files that use Tailwind features\" (#16056)"},{"Id":"2820739339","IsPullRequest":true,"CreatedAt":"2025-01-30T15:29:08","Actor":"RobinMalfait","Number":"16057","RawContent":null,"Title":"Ensure we process Tailwind CSS features when using `@reference`","State":"closed","Body":"This PR fixes an issue where if you only used `@reference` that we didn't process Tailwind CSS features.\n\nWe have a 'quick bail check', in the PostCSS plugin to quickly bail if we _konw_ that we don't need to handle any Tailwind CSS features. This is useful in Next.js applications where every single CSS file will be passed to the PostCSS plugin.\n\nIf you use custom font ins Next.js, each of those fonts will have a CSS file as well.\n\nBefore we introduced `@reference`, we used `@import \"tailwindcss\" reference`, which passed the bail check because `@import` was being used. Now we have `@reference` which wasn't included in the list.\n\nThis is now solved.\n\nFixes: #16056\n\n\n### Test plan\n\nAdded a failing test that is now failing after the fix.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16057","RelatedDescription":"Closed or merged PR \"Ensure we process Tailwind CSS features when using `@reference`\" (#16057)"},{"Id":"2821000661","IsPullRequest":false,"CreatedAt":"2025-01-30T14:57:20","Actor":"kefranabg","Number":"16068","RawContent":null,"Title":"[v4] dark variant doesn't apply style properly in some cases","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.1\n\n**What version of Node.js are you using?**\n\nv22.1\n\n**What browser are you using?**\n\nAll major browsers\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nBug reproduction (v4.0.1): https://play.tailwindcss.com/qtyHMLpV36\n\nExpected (v3.4.17): https://play.tailwindcss.com/0TVYfNUrcC  \n\n**Describe your issue**\n\nPreviously in v3.4.17, we were able to force a style in dark mode with `dark:` for a tailwind class that was overloaded in base css file.\n\nYou can easily see the issue with the reproduction links (Make sure you've dark mode enabled): with the v4.0.1 play link the text appears yellow, but should be blue because of the `dark:text-blue-900` as you can seen on the v3.4.17 play link. But it's displayed in yellow because of the following in css file:\n\n```\n@media (prefers-color-scheme: dark) {\n  .text-black {\n    color: yellow;\n  }\n}\n```\n\nBoth css and html are similar in the 2 versions. ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16068","RelatedDescription":"Closed issue \"[v4] dark variant doesn't apply style properly in some cases\" (#16068)"},{"Id":"2821019609","IsPullRequest":true,"CreatedAt":"2025-01-30T14:50:37","Actor":"philipp-spiess","Number":"16069","RawContent":null,"Title":"Vite: Transform `<style>` blocks in html files","State":"open","Body":"Fixes #16036\r\n\r\nThis adds a new rule to treat `<style>` blocks found within `.html` file as Tailwind CSS targets.\r\n\r\n## Test plan\r\n\r\n- Tested using the Vite extension (dev) and a new integration test (prod)","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16069","RelatedDescription":"Open PR \"Vite: Transform `<style>` blocks in html files\" (#16069)"},{"Id":"2820929451","IsPullRequest":false,"CreatedAt":"2025-01-30T14:30:59","Actor":"nikomuse","Number":"16065","RawContent":null,"Title":"PostCSS not working anymore with Standalone CLI v4","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\nv4.0.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\nTailwind standalone CLI\n\n**What version of Node.js are you using?**\nNone\n\n**What browser are you using?**\nNo browser : CLI\n\n**What operating system are you using?**\nMac OS 14.5\n\n**Reproduction URL**\n./tailwindcss-macos-x64 -i app-v4.css -o app.built.css --postcss ./postcss.config.js\n\nWith `postcss.config.js` content : \n```\nmodule.exports = {\n  plugins: [\n    {\n      postcssPlugin: 'dummy',\n      Once (root) {\n        root.append('.dummy {}')\n      },\n    },\n  ],\n}\n```\n\n**Describe your issue**\n\nThe `.dummy {}` content should be in the app.built.css but it doesn't work. It seems that PostCSS argument is useless. I noticed that PostCSS reference was removed in [the standalone repo](https://github.com/tailwindlabs/tailwindcss/tree/main/packages/%40tailwindcss-standalone).","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16065","RelatedDescription":"Closed issue \"PostCSS not working anymore with Standalone CLI v4\" (#16065)"},{"Id":"2820906732","IsPullRequest":true,"CreatedAt":"2025-01-30T13:55:37","Actor":"philipp-spiess","Number":"16064","RawContent":null,"Title":"Ensure escaped theme variables are handled correctly","State":"open","Body":"This PR ensures that escaped theme variables are properly handled. We do this by moving the `escape`/`unescape` responsibility back into the main tailwindcss entrypoint that reads and writes from the CSS and making sure that _all internal state of the `Theme` class are unescaped classes.\r\n\r\nHowever, due to us accidentally shipping the part where a dot in the theme variable would translate to an underscore in CSS already, this logic is going to stay as-is for now.\r\n\r\nHere's an example test that visualizes the new changes:\r\n\r\n```ts\r\nexpect(\r\n  await compileCss(\r\n    css`\r\n      @theme {\r\n        --spacing-*: initial;\r\n        --spacing-1\\.5: 2.5rem;\r\n        --spacing-foo\\/bar: 3rem;\r\n      }\r\n      @tailwind utilities;\r\n    `,\r\n    ['m-1.5', 'm-foo/bar'],\r\n  ),\r\n).toMatchInlineSnapshot(`\r\n  \":root, :host {\r\n    --spacing-1\\.5: 2.5rem;\r\n    --spacing-foo\\\\/bar: 3rem;\r\n  }\r\n\r\n  .m-1\\\\.5 {\r\n    margin: var(--spacing-1\\.5);\r\n  }\r\n\r\n  .m-foo\\\\/bar {\r\n    margin: var(--spacing-foo\\\\/bar);\r\n  }\"\r\n`)\r\n```\r\n\r\n## Test plan\r\n\r\n- Added a unit test\r\n- Ensure this works end-to-end using the Vite playground:\r\n   \r\n   <img width=\"1016\" alt=\"Screenshot 2025-01-30 at 14 51 05\" src=\"https://github.com/user-attachments/assets/463c6fd5-793f-4ecc-86d2-5ad40bbb3e74\" />\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16064","RelatedDescription":"Open PR \"Ensure escaped theme variables are handled correctly\" (#16064)"},{"Id":"2820801285","IsPullRequest":false,"CreatedAt":"2025-01-30T13:49:11","Actor":"pavanpodila","Number":"16060","RawContent":null,"Title":"Parsing errors after upgrading to TW 4","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.0.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext 15.1.6\n\n**What version of Node.js are you using?**\n\n23\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Describe your issue**\n\nAfter upgrading to TW 4.0.1, I am getting parsing errors like so:\n\n```\nParsing css source code failed\n  2860 |     &::before {\n  2861 |       content: var(--tw-content);\n> 2862 |       --tw-content: &#x27;&#x27;;\n       |                                 ^\n  2863 |       content: var(--tw-content);\n  2864 |     }\n  2865 |   }\n\nUnexpected token Semicolon at [project]/app/globals.css:2861:32\n\n```\n\nI think some generation code inside TW is broken.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16060","RelatedDescription":"Closed issue \"Parsing errors after upgrading to TW 4\" (#16060)"},{"Id":"2820828333","IsPullRequest":false,"CreatedAt":"2025-01-30T13:47:33","Actor":"saurabhguptarock","Number":"16061","RawContent":null,"Title":"Tailwind V4 does not work in nextjs in turborepo using bun","State":"closed","Body":"I just upgraded to tailwind v4 and its showing error\n\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.0\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 15.1.6\n\n**What version of Node.js are you using?**\n\nv18.0.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS, Windows issue in both\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16061","RelatedDescription":"Closed issue \"Tailwind V4 does not work in nextjs in turborepo using bun\" (#16061)"},{"Id":"2820489863","IsPullRequest":false,"CreatedAt":"2025-01-30T12:28:46","Actor":"odmro","Number":"16049","RawContent":null,"Title":"@tailwindcss/vite","State":"closed","Body":"**What version of Tailwind CSS are you using?**\nv4.0.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nvite v6.0.11\n\n**What version of Node.js are you using?**\n\nFor example: v22.11.0\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nN/A\n\n**Describe your issue**\n\nWhen building with vite,\n`export default defineConfig({\n  plugins: [\n    tailwindcss(),\n  ],\n})` this should parse all html templates inside \"./dist\" for example; Why am is issuing an issue? Because in some environments you might have a \"./src/blocks/\" directory that may be parsed by `vite-plugin-handlebars` - so the final css should be constructed based on the final html's ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16049","RelatedDescription":"Closed issue \"@tailwindcss/vite\" (#16049)"},{"Id":"2820628224","IsPullRequest":false,"CreatedAt":"2025-01-30T12:22:32","Actor":"Nostrus","Number":"16055","RawContent":null,"Title":"Upgrading to version 4 doesn't work with Angular and NX","State":"closed","Body":"\n### Discussed in https://github.com/tailwindlabs/tailwindcss/discussions/15969\n\n<div type='discussions-op-text'>\n\n<sup>Originally posted by **Nostrus** January 28, 2025</sup>\nI tried following the required steps in the documentation, but had no luck upgrading to version 4 from 3.3.2.\r\n\r\nAfter running `npx @tailwindcss/upgrade@next` I get:\r\n\r\n```\r\n│ Searching for CSS files in the current directory and its subdirectories…\r\n\r\n│ ↳ Cannot find any CSS files that reference Tailwind CSS.\r\n│   Before your project can be upgraded you need to create a CSS file that imports Tailwind CSS or uses `@tailwind`.\r\n\r\n│ Migrating stylesheets…\r\n\r\n│ ↳ No PostCSS config found, skipping migration.\r\n```\r\n\r\nI guess it ignores `.scss` files completely? So I updated the `@import` manually. Also, even though it can't find any PostCSS config, when I try to serve my project now, I get:\r\n\r\n```\r\n NX   It looks like you're trying to use `tailwindcss` directly as a PostCSS plugin. The PostCSS plugin has moved to a separate package, so to continue using Tailwind CSS with PostCSS you'll need to install `@tailwindcss/postcss` and update your PostCSS configuration.\r\n```\r\n\r\nNot sure how NX uses PostCSS exactly. Next I installed `@tailwindcss/postcss`. We had no PostCSS config before, so I added it with the following content just in case:\r\n\r\n```\r\n{\r\n  \"plugins\": {\r\n    \"@tailwindcss/postcss\": {}\r\n  }\r\n}\r\n```\r\n\r\nBut it didn't help, either,. I receive the same error message.</div>","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16055","RelatedDescription":"Closed issue \"Upgrading to version 4 doesn't work with Angular and NX\" (#16055)"},{"Id":"2820610880","IsPullRequest":false,"CreatedAt":"2025-01-30T12:00:44","Actor":"jaschaio","Number":"16053","RawContent":null,"Title":"[v4] custom variant media query generates wrong css","State":"closed","Body":"\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n@tailwindcss/postcss@4.0.1 and @tailwindcss/vite@4.0.1 (happens on both)\n\n**What version of Node.js are you using?**\n\nFor example: v18.0.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/QLxBB0wrMM\n\n**Describe your issue**\n\nThe [example from the docs](https://tailwindcss.com/docs/hover-focus-and-other-states#registering-a-custom-variant):\n\n```css\n@custom-variant pointer-coarse {\n  @media (pointer: coarse) {\n    @slot;\n  }\n}\n```\n\nGenerates this CSS:\n\n```css\n.pointer-coarse\\:text-black {\n  @media (pointer: coarse) {\n    color: var(--color-black);\n  }\n}\n```\n\nBut it should be the other way around:\n\n```diff\n-.pointer-coarse\\:text-black {\n-  @media (pointer: coarse) {\n+@media (pointer: coarse) {\n+  .pointer-coarse\\:text-black {\n    color: var(--color-black);\n  }\n}\n```\n\nI am trying to replicate the raw screens config from `tailwind@v3`:\n\n```\nscreens: {\n    og: {\n        raw: '(min-aspect-ratio: 16/9)',\n    },\n    square: {\n        raw: '(aspect-ratio: 1/1)',\n    },\n},\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16053","RelatedDescription":"Closed issue \"[v4] custom variant media query generates wrong css\" (#16053)"},{"Id":"2820553537","IsPullRequest":false,"CreatedAt":"2025-01-30T11:42:05","Actor":"alelucrod","Number":"16051","RawContent":null,"Title":"v4.0 :hover not working on edge","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.0  and 4.0.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\npostcss-cli 8.5.1\n\n**What version of Node.js are you using?**\n\nNode 23:alpine\n\n**What browser are you using?**\n\nEdge\n\n**What operating system are you using?**\n\nWindows\n\n\n**Describe your issue**\n\nI'm fancing problems while using :hover property on Edge browser. Seems that Firefox and Chrome works.  The  issue can be checked at official website inside \"Docs\" section -> \"[Hover, focus, and other states](https://tailwindcss.com/docs/hover-focus-and-other-states)\"","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16051","RelatedDescription":"Closed issue \"v4.0 :hover not working on edge\" (#16051)"},{"Id":"2820518550","IsPullRequest":false,"CreatedAt":"2025-01-30T11:01:22","Actor":"Vectrex","Number":"16050","RawContent":null,"Title":"Tailwind CSS 4 ignores .vitepress directory and files","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.0.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nvite\n\n**What version of Node.js are you using?**\n\n22.13.1\n\n**What browser are you using?**\n\nFirefox\n\n**What operating system are you using?**\n\nUbuntu 24.04.1\n\n\n**Describe your issue**\n\nWith Tailwind 3.4.x I can incorporate Tailwind classes in my Vitepress markdown files. My tailwind.config.js looks like this\n\n```js\nexport default {\n    content: [\n        './src/**/*.{vue,js,html}',\n        './docs/**/*.md',\n        './index.html'\n    ],\n    theme: { ... }\n```\nOne of the markdown files contains a\n\n```\n<div class=\"bg-amber-900\">\n``` \nand Vite delivers a stylesheet containing\n\n```css\n.bg-amber-900 {\n  --tw-bg-opacity: 1;\n  background-color: rgb(120 53 15 / var(--tw-bg-opacity, 1));\n}\n```\n\nWhen switching to Tailwind 4 the config file is gone.\nSince the .vitepress directory and all its contents is not in a .gitignore all the markdown files should be parsed.\n\nThe CSS now looks like this\n```css\n@import 'tailwindcss';\n@theme { ... }\n```\nbut the resulting CSS provided by Vite does not contain a `.bg-amber-900` class.\n\nAdding\n```\n@source './docs/**/*.md';\n```\ndoesn't change anything - the resulting CSS provided by Vite does not contain a `.bg-amber-900` class.\n\n`package.json`\n\n```json\n\"dependencies\": {\n    \"tailwindcss\": \"^4.0.1\",\n    \"vite\": \"^6.0.11\",\n    \"@tailwindcss/vite\": \"^4.0.1\",\n    \"vitepress\": \"^1.6.3\"\n    ...\n  },\n\n```\n`vite.config.js`\n\n```js\nimport { defineConfig } from 'vite'\nimport tailwindcss from '@tailwindcss/vite'\n\nexport default defineConfig({\n ...\n  plugins: [\n      tailwindcss(),\n  ],\n})\n```\nExpected behavior:\n\nTailwind 4.0 should also generate stylesheets containing classes used in Vitepress markdown files.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16050","RelatedDescription":"Open issue \"Tailwind CSS 4 ignores .vitepress directory and files\" (#16050)"},{"Id":"2820470657","IsPullRequest":false,"CreatedAt":"2025-01-30T10:44:04","Actor":"lid0a","Number":"16047","RawContent":null,"Title":"Tailwind uses incorrect css variable for `max-w-*` utilities","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.1\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/1GwByGuLR3?file=css\n\n**Describe your issue**\n\nI have custom theme variables in my project, such as `--spacing-sm`, `--spacing-md`, etc.\n\nWhen using the utility `max-w-sm`, I expect tailwind to generate the following CSS:  \n\n```css\nmax-width: var(--container-sm);\n```  \n\nHowever, it instead generates:  \n\n```css\nmax-width: var(--spacing-sm);\n```  \n\nIt seems like tailwind is resolving `sm` to the `--spacing-sm` variable instead of `--container-sm` which leads to unexpected behavior.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16047","RelatedDescription":"Closed issue \"Tailwind uses incorrect css variable for `max-w-*` utilities\" (#16047)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-01-31T03:30:23.4160416Z","RunDurationInMilliseconds":421}