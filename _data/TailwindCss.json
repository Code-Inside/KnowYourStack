{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2962100583","IsPullRequest":false,"CreatedAt":"2025-04-01T03:12:06","Actor":"fengshancui","Number":"17472","RawContent":null,"Title":" version 4.0, when configuring @theme colors, the names may be invalid if they are capitalized.","State":"open","Body":"\nFor example, --color-5A45E0: #5A45E0; needs to be converted to --color-5a45e0: #5A45E0; to be displayed normally.\n\n@import \"tailwindcss\";\n@custom-variant dark (&:where([data-theme=dark], [data-theme=dark] *));\n@theme {\n  --color-5a45e0: #5A45E0;\n}\n\n\n<div className=\"className=\"p-4.5 text-3xl text-5a45e0 bg-DFDBFE rounded-xl\"\"></div>","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17472","RelatedDescription":"Open issue \" version 4.0, when configuring @theme colors, the names may be invalid if they are capitalized.\" (#17472)"},{"Id":"2961877345","IsPullRequest":true,"CreatedAt":"2025-04-01T00:41:52","Actor":"depfu[bot]","Number":"17471","RawContent":null,"Title":"Update all of nextjs 15.2.3 → 15.2.4 (patch)","State":"open","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ eslint-config-next (15.2.3 → 15.2.4)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n#### ✳️ next (15.2.3 → 15.2.4) · [Repo](https://github.com/vercel/next.js)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/vercel/next.js/releases/tag/v15.2.4\">15.2.4</a></h4>\n\n<blockquote><div class=\"markdown-alert markdown-alert-note\" dir=\"auto\">\n<p class=\"markdown-alert-title\" dir=\"auto\"><svg class=\"octicon octicon-info mr-2\" viewbox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z\"></path></svg>Note</p>\n<p dir=\"auto\">This release is backporting bug fixes. It does <strong>not</strong> include all pending features/changes on canary.</p>\n</div>\n<h3 dir=\"auto\">Core Changes</h3>\n<ul dir=\"auto\">\n<li>Match subrequest handling for edge and node (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/77474\">#77474</a>)</li>\n<li>exclude images and static media from dev origin check (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/77417\">#77417</a>)</li>\n<li>ensure /__next middleware URLs are included in the origin check (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/77416\">#77416</a>)</li>\n<li>remove direct ip/port bypass in dev origin check (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/77414\">#77414</a>)</li>\n<li>switch development origin verification to be opt-in rather than opt-out (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/77395\">#77395</a>)</li>\n</ul>\n<h3 dir=\"auto\">Credits</h3>\n<p dir=\"auto\">Huge thanks to <a href=\"https://bounce.depfu.com/github.com/ijjk\">@ijjk</a> and <a href=\"https://bounce.depfu.com/github.com/ztanner\">@ztanner</a> for helping!</p></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/next/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/vercel/next.js/compare/535e26d3c69de49df8bd17618a424cbe65ec897b...804aa35c71cc65cf3ddc29cdadcd29f06b368285\">See the full diff on Github</a>. The new version differs by 6 commits:</p>\n<ul>\n<li><a href=\"https://github.com/vercel/next.js/commit/804aa35c71cc65cf3ddc29cdadcd29f06b368285\"><code>v15.2.4</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/ecb72ee9ead86aaa1e3992b427bfb43b046aa08d\"><code>Match subrequest handling for edge and node (#77474)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/25f810b596cdb6875d1f068ae8d203f1a5df7a46\"><code>exclude images and static media from dev origin check (#77417)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/d9bcb833dd2a8dd5c13f30775d688f7015cd75b1\"><code>ensure /__next middleware URLs are included in the origin check (#77416)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/cfeaa86fa718f1fecce9fb5f5fad3c310117fc53\"><code>remove direct ip/port bypass in dev origin check (#77414)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/f84730266087817b39c9b87c42ccf1c3bb7de0c5\"><code>switch development origin verification to be opt-in rather than opt-out (#77395)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17471","RelatedDescription":"Open PR \"Update all of nextjs 15.2.3 → 15.2.4 (patch)\" (#17471)"},{"Id":"2961028836","IsPullRequest":true,"CreatedAt":"2025-03-31T17:21:51","Actor":"RobinMalfait","Number":"17470","RawContent":null,"Title":"Ensure `webpack` executable is found in CI","State":"closed","Body":"This PR will fix CI on the main branch where `webpack` could not be found on macOS (but it worked on Linux).\n\nGoing to run [ci-all] to verify the changes.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17470","RelatedDescription":"Closed or merged PR \"Ensure `webpack` executable is found in CI\" (#17470)"},{"Id":"2960762734","IsPullRequest":true,"CreatedAt":"2025-03-31T16:44:06","Actor":"RobinMalfait","Number":"17467","RawContent":null,"Title":"Watch CSS module files for changes","State":"closed","Body":"This PR is a follow-up PR for: https://github.com/tailwindlabs/tailwindcss/pull/17433\r\n\r\nIn the other PR we allow scanning CSS files for extracting usages of CSS variables. This is important for `.module.css` files that reference these variables but aren't in the same big AST of the main CSS file.\r\n\r\nThis PR also makes sure to watch for changes in those registered CSS files and re-extract the variables when they change.\r\n\r\nThis PR took a bit longer than expected because I was trying to make sure that writing to `./dist/out.css` works without infinite-looping (e.g.: we had issues with this in Tailwind CSS v3 with webpack).\r\n\r\nBut I couldn't reproduce the issue at all. I did had some code that tried to detect if the CSS file contained license headers and skip in (because then it's very likely an output CSS file) but even without it the tests were fine.\r\n\r\nI setup integration tests with `@tailwindcss/cli` itself, and with tools that use webpack. Added a test for Next.js, and a dedicated webpack test as well.\r\n\r\nEven without tests, locally, I couldn't reproduce an infinite loop due to changes in an output CSS file...\r\n\r\nEventually dropped the code that tries to detect output CSS files.\r\n\r\nOne thing to keep in mind is that if you change any of your \"main\" CSS files, then we will trigger a full rebuild anyway, so this change is only required for unrelated CSS files (like CSS module files) that use CSS variables.\r\n\r\n## Test plan\r\n\r\n1. Added integration tests for the CLI and Next.js\r\n2. Added new dedicated test for webpack\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17467","RelatedDescription":"Closed or merged PR \"Watch CSS module files for changes\" (#17467)"},{"Id":"2960544128","IsPullRequest":false,"CreatedAt":"2025-03-31T16:35:58","Actor":"jamesmogambi","Number":"17466","RawContent":null,"Title":"[v4] hover property not working in tailwind v4","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNextJS 15\n\n**What version of Node.js are you using?**\n\nv22.0.0\n\n**What browser are you using?**\n\n Chrome, Microsoft Edge\n\n**What operating system are you using?**\n\nWindows 11\n\n\n**Describe your issue**\n\nHover does not work in Tailwind v4. Keeps breaking.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17466","RelatedDescription":"Closed issue \"[v4] hover property not working in tailwind v4\" (#17466)"},{"Id":"2960984269","IsPullRequest":false,"CreatedAt":"2025-03-31T16:34:46","Actor":"skstuder","Number":"17469","RawContent":null,"Title":"Oxide module not found for Cloud Build CI run","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.17\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite v6.0.3\n\n**What version of Node.js are you using?**\n\nFor example: v20.15.0\n\n**What browser are you using?**\n\nNot relevant\n\n**What operating system are you using?**\n\nGoogle Cloud Build -> X64\n\n**Reproduction URL**\n\nNot relevant\n\n**Describe your issue**\n\nThe new oxide engine failed to find the proper module in our CI/CD run. We use GCP Cloud Build, and the default architecture, which is X64. \n\n![Image](https://github.com/user-attachments/assets/15b51f37-402b-43d1-b200-90de61e3d226)\n\n**I have a workaround**. Manually installing 'lightningcss-linux-x64-gnu' and '@tailwindcss/oxide-linux-x64-gnu' in my `cloudbuild.yaml` file before building the application allows build to succeed. \n\nBut shouldn't Tailwind (via npm) be able to install the correct native sub-dependency automatically? \n\nReproduction: \nYou'd have to make a dummy repo and set up a Cloud Build CI/CD for it. ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17469","RelatedDescription":"Closed issue \"Oxide module not found for Cloud Build CI run\" (#17469)"},{"Id":"2960790379","IsPullRequest":false,"CreatedAt":"2025-03-31T15:18:02","Actor":"sarabEriced","Number":"17468","RawContent":null,"Title":"line-clamp doesn't work correctly","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n    \"@tailwindcss/vite\": \"^4.0.17\",\n    \"tailwindcss\": \"^4.0.17\"\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n    \"vite\": \"^6.2.4\"\n\n**What version of Node.js are you using?**\n\n    Node interpreter: 18.20.4\n\n**What browser are you using?**\n\n    Chrome & Firefox\n\n**What operating system are you using?**\n\n    Windows 10\n\n**Describe your issue**\n\n    Line-clamp-*n* \"truncates\"/\"clamps\" the second to last line, not the *n*th line (the last one)\n\n[package.json](https://github.com/user-attachments/files/19537325/package.json)\n\n![Image](https://github.com/user-attachments/assets/501588c9-41f8-48fb-bd63-549c2b979d2e)\n\n![Image](https://github.com/user-attachments/assets/58ad95e5-2f9b-464a-94ca-4da7f0fe0f91)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17468","RelatedDescription":"Closed issue \"line-clamp doesn't work correctly\" (#17468)"},{"Id":"2960430210","IsPullRequest":true,"CreatedAt":"2025-03-31T13:26:02","Actor":"philipp-spiess","Number":"17465","RawContent":null,"Title":"Fix slow unit test","State":"closed","Body":"This PR reworks a unit test that created a file in the project root and then proceeded by scanning everything in the git root for candidates. The issue specifically is that with the `.debug/` folder, our project root can grow quite a bit which makes this test slower the more you work on other tests...\r\n\r\nTo fix this we now simply create a tmp folder with only that one test file. 🚀 ","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17465","RelatedDescription":"Closed or merged PR \"Fix slow unit test\" (#17465)"},{"Id":"2959920262","IsPullRequest":true,"CreatedAt":"2025-03-31T11:06:28","Actor":"philipp-spiess","Number":"17458","RawContent":null,"Title":"Fix `--theme(…)` function when legacy JS plugins are used","State":"closed","Body":"Closes #17346\r\n\r\nThis PR fixes an issue that caused the `--theme(…)` function to behave differently after a legacy JS plugin or config was configured. The issue was that the compatibility layer would patch the theme value resolver to always inline the value. This, however, is only expected to happen if the path does not look like a CSS variable in which case this legacy code path should not be run.\r\n\r\nTo fix this, I'm now keeping a reference to the regular theme resolution function and call into it if the path starts with `--`.\r\n\r\n## Test plan\r\n\r\n- Tested with the repro in #17346 by adding pnpm overrides and confirmed that this fixes the issue\r\n- Added a unit test to the `--theme(…)` resolution tests","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17458","RelatedDescription":"Closed or merged PR \"Fix `--theme(…)` function when legacy JS plugins are used\" (#17458)"},{"Id":"2960096092","IsPullRequest":true,"CreatedAt":"2025-03-31T10:24:10","Actor":"RobinMalfait","Number":"17464","RawContent":null,"Title":"Show warning when using unsupported bare value data type","State":"open","Body":"This PR will show a warning if you are using a bare value data type that is not supported.\r\n\r\nLet's say you want to create a new utility that allows `color` to be a bare value data type like this:\r\n```css\r\n@utility paint-* {\r\n  paint: --value([color], color);\r\n}\r\n```\r\n\r\nThis means that this would enable new syntax that we don't support yet. E.g.: `paint-#0088cc`.\r\n\r\nThe only supported data types for bare values are:\r\n\r\n- `number` — `2.5`\r\n- `integer` — `2`\r\n- `ratio` — `1/2`\r\n- `percentage` — `50%`\r\n\r\nAll other data types are not supported in this position. This PR will now show a warning:\r\n~~~\r\nUnsupported bare value data type: \"color\".\r\nOnly valid data types are: \"number\", \"integer\", \"ratio\", \"percentage\"\r\n\r\n```css\r\n--value([color],color)\r\n                ^^^^^\r\n```\r\n~~~\r\nOnce we have better sourcemap / location tracking support, this warning will point to the exact spot, but for now, only a re-print of the AST can be used.\r\n\r\n\r\nIf you _do_ want to use other data types, then you will have to use arbitrary value syntax with `[…]` instead.\r\n\r\n\r\n```css\r\n@utility paint-* {\r\n  paint: --value([color]);\r\n}\r\n```\r\n\r\nThis will allow for `paint-[#0088cc]` for example.\r\n\r\nNote: this is not a behavioral change, we already didn't support other data types, but we silently ignored them. This means that we have to do more parsing at runtime when evaluating the utility. \r\n\r\nWith this change, a warning is shown when registering the `@utility`, not when using it.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17464","RelatedDescription":"Open PR \"Show warning when using unsupported bare value data type\" (#17464)"},{"Id":"2959953577","IsPullRequest":false,"CreatedAt":"2025-03-31T09:51:43","Actor":"philnind","Number":"17459","RawContent":null,"Title":"Tailwind Ignoring some classes but adding others in the same div","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.17\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\npostcss-cli 11.0.0\n\n**What version of Node.js are you using?**\n\nFor example: v20.0.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Describe your issue**\n\nRunning on a Flask app with Tailwnd CLI.\n\nTailwind is not adding classes for some styles even when they are being used.\n\n<body class=\"bg-[#121212] text-white text-center\">\n</body>\n\nIn the block above it is adding a class for text-center but it is not for text-white\n\nThis is happening across the app for colors, text sizes, padding but things like flex and flex col is working","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17459","RelatedDescription":"Closed issue \"Tailwind Ignoring some classes but adding others in the same div\" (#17459)"},{"Id":"2958210772","IsPullRequest":false,"CreatedAt":"2025-03-31T09:39:21","Actor":"babakfp","Number":"17446","RawContent":null,"Title":"`--value` is not recognized when using in complex scenarios","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.17\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/vZxRkZNOa2?file=css\n\n**Describe your issue**\n\n```\n@utility thing-* {\n  background-image: url(\" --value(--color-*) \");\n}\n```\n\nUsing `--value(--color-*)` doesn't work because it's wrapped in quotes.\n\nIt should also work if it's used in a complex place, like if you use it inside this:\n\n```\nbackground-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32'%3E%3Cpath d='M0 0h32v32H0z'/%3E%3C/svg%3E\");\n```\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17446","RelatedDescription":"Closed issue \"`--value` is not recognized when using in complex scenarios\" (#17446)"},{"Id":"2958223549","IsPullRequest":false,"CreatedAt":"2025-03-31T09:37:47","Actor":"babakfp","Number":"17447","RawContent":null,"Title":"Allow getting the raw value of a CSS variable when creating custom utilities","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.17\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/zRMgL8AdRl?file=css\n\n**Describe your issue**\n\nThese two plugins that worked for Tailwind CSS 3, they no longer work for in version 4 of Tailwind CSS. Because it seems like CSS variables don't work inside `url(\"\")`.\n\nhttps://www.npmjs.com/package/tailwind-heropatterns\nhttps://www.npmjs.com/package/tailwindcss-hero-patterns\n\nThere may be other scenarios like this that I'm not aware of.\n\nSo, without this issue being resolved, creating custom plugins like mentioned above, won't be possible in Tailwind CSS 4.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17447","RelatedDescription":"Closed issue \"Allow getting the raw value of a CSS variable when creating custom utilities\" (#17447)"},{"Id":"2959225609","IsPullRequest":true,"CreatedAt":"2025-03-31T00:51:05","Actor":"ehsan7672","Number":"17455","RawContent":null,"Title":"Create npm-gulp.ymlesiom","State":"closed","Body":"<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17455","RelatedDescription":"Closed or merged PR \"Create npm-gulp.ymlesiom\" (#17455)"},{"Id":"2959138751","IsPullRequest":true,"CreatedAt":"2025-03-30T22:32:02","Actor":"aUsABuisnessman","Number":"17454","RawContent":null,"Title":"Help project #35","State":"closed","Body":"<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17454","RelatedDescription":"Closed or merged PR \"Help project #35\" (#17454)"},{"Id":"2958960246","IsPullRequest":false,"CreatedAt":"2025-03-30T22:27:03","Actor":"ebharathi","Number":"17450","RawContent":null,"Title":"Tailwindcss v4 not working in nextjs shadcn","State":"closed","Body":"\n\nI use shadcn, the shadcn components are rendered correctly using tailwindv4 but if i try to use it in my own code, it is not.\n\nEdit:\nbg-destructive is working but not text-destructive. flex is working everywhere but grid is not working anywhere\nThen if i add new color,its not working\n--color-success ,its not even shown/updated in browser's inspect\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17450","RelatedDescription":"Closed issue \"Tailwindcss v4 not working in nextjs shadcn\" (#17450)"},{"Id":"2959129366","IsPullRequest":false,"CreatedAt":"2025-03-30T22:10:54","Actor":"vtamara","Number":"17452","RawContent":null,"Title":"On OpenBSD/adJ 7.6 tailwindcss 4 produces \"Unsupported OS: openbsd, architecture: x64\"","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.17\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nvite 6.2.0\n\n**What version of Node.js are you using?**\n\nv20.18.2\n\n**What browser are you using?**\n\nChromium 128.0.6613.137\n\n**What operating system are you using?**\n\nOpenBSD/adJ 7.6\n\n**Reproduction URL**\n\nhttps://github.com/vtamara/minvt4\n\nCloning and running \n```sh\n% npm install\n% npm run dev\n```\nwill present the problem on OpenBSD/adJ 7.6.\n\n**Describe your issue**\n\nThe steps to reproduce the problem from scratch on an OpenBSD/adJ 7.6 are:\n\n```sh\n% npm create vite@latest minvt4 -- --template react\n% cd minvt4\n```\nEditing `package.json` to add:\n```json\n  \"overrides\": {\n    \"rollup\": \"npm:@rollup/wasm-node\"\n  }\n```\nThen starting the development server with\n```sh\n% npm install\n% npm run dev\n```\nAnd opening in a browser <http://localhost:5173/> will work:\n\n![image](https://github.com/user-attachments/assets/5df1d746-3b1e-4db7-9e67-4fcbcc1ca165)\n\nAfter we stop the server and add `tailwindcss` by following the instructions of <https://tailwindcss.com/docs/installation/using-vite>\n\n```sh\n% npm install tailwindcss @tailwindcss/vite\n```\n\nThen we edit `vite.config.js` to make it:\n```js\nimport { defineConfig } from 'vite'                                                                                                                             \nimport react from '@vitejs/plugin-react'                                                                                                                        \nimport tailwindcss from '@tailwindcss/vite'                                                                                                                     \n                                                                                                                                                                \nexport default defineConfig({                                                                                                                                   \n  plugins: [                                                                                                                                                    \n    react(),                                                                                                                                                    \n    tailwindcss(),                                                                                                                                              \n  ],                                                                                                                                                            \n})       \n```\n\nThen we add at the beginning  of `src/index.css`:\n\n```css\n@import \"tailwindcss\";\n```\n\nAnd finally running with `` and trying to open http://localhost:\n```sh\n% npm run dev\n```\n\nwill produce the error:\n```\nfailed to load config from /home/vtamara/comp/tailwindcss/minv/vite.config.js\nerror when starting dev server:\nError: Unsupported OS: openbsd, architecture: x64\n    at Object.<anonymous> (/home/vtamara/comp/tailwindcss/minv/node_modules/@tailwindcss/oxide/index.js:303:11)\n    at Module._compile (node:internal/modules/cjs/loader:1469:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1548:10)\n...\n```\n\nWe experienced the same problem with tailwindcss v4 in a new project with next.js, we wrote the steps to reproduce it at https://github.com/vtamara/tailwindcss/wiki/Problem-with-tailwind-4-on-adJ-OpenBSD\n\nThere we also described a workaround by downgrading to tailwindcss v3.\n\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17452","RelatedDescription":"Open issue \"On OpenBSD/adJ 7.6 tailwindcss 4 produces \"Unsupported OS: openbsd, architecture: x64\"\" (#17452)"},{"Id":"2958066343","IsPullRequest":false,"CreatedAt":"2025-03-30T22:09:42","Actor":"R4Ajeti","Number":"17445","RawContent":null,"Title":"Disabling Preflight on Tailwind v4 on NEXTJS is not working!","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.17\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n```\n{\n\"@tailwindcss/postcss\": \"^4.0.17\",\n\"next\": \"^14.2.25\",\n\"tailwind-merge\": \"^3.0.2\",\n\"tw-animate-css\": \"^1.2.4\"\n\n// devDep\n\"postcss\": \"^8.5.3\",\n\"tailwindcss\": \"^4.0.17\"\n}\n```\n\n**What version of Node.js are you using?**\n\nnode --version\nv23.2.0\n\n**What browser are you using?**\n\nChrome and Brave\n\n**What operating system are you using?**\n\nmacOS 15.3.1\n\n**Describe your issue**\n\nDisabling Preflight on Tailwind v4 is not working!\nI have a project in nextjs + typescript + tailwind CSS.\n\nI need h1-h6 tag to be the same as always been, not like this:\n\n```\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  font-size: inherit;\n  font-weight: inherit;\n}\n```\n\n\nWhat I tried\n1# this is my \"tailwind.config.js\" after adding corePlugins['preflight'] = false:\n\n```\nmodule.exports = {\n    content: [\n        \"./src/**/*.{js,ts,jsx,tsx}\"\n    ],\n    theme: {\n      extend: {\n        fontSize: {\n          '2em': '2em',\n        },\n        animation: {\n          marquee: 'marquee 15s linear infinite',\n        },\n        keyframes: {\n          marquee: {\n            '0%': { transform: 'translateX(0)' },\n            '100%': { transform: 'translateX(-50%)' },\n          },\n        },\n      },\n    },\n    plugins: [],\n    corePlugins: {\n      preflight: false,\n    },\n}\n```\nresult; \"didn't work\"\n\n2# This is my \"globals.css\" after reading this doc -> https://tailwindcss.com/docs/preflight#disabling-preflight and some issues on github:\n\n```\n@layer theme, base, components, utilities;\n@import \"tailwindcss/theme.css\" layer(theme);\n@layer base {\n  h1 {\n    font-size: var(--text-2xl);\n  }\n  h2 {\n    font-size: var(--text-xl);\n  }\n  h3 {\n    font-size: var(--text-lg);\n  }\n  a {\n    color: var(--color-blue-600);\n    text-decoration-line: underline;\n  }\n}\n/* @import \"tailwindcss/preflight.css\" layer(base); */\n@import \"tailwindcss/utilities.css\" layer(utilities);\n```\n\nresult; \"didn't work\"\n\n3# I also tried adding this `<h1 className=\"text-8xl font-bold my-4\">{name}</h1>` on my tsx, but still I am not able to make h1 get font-size: 2em; instead I get value inherit.\nresult; \"didn't work\"\n\nNOTE: Not sure what I am doing wrong or if someone else has the same issue, but I am completely new to Tailwind\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17445","RelatedDescription":"Closed issue \"Disabling Preflight on Tailwind v4 on NEXTJS is not working!\" (#17445)"},{"Id":"2959062812","IsPullRequest":false,"CreatedAt":"2025-03-30T19:45:49","Actor":"niconisoria","Number":"17451","RawContent":null,"Title":"[4.0.17] Any command hanging forever on macOS with chip M1","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.17\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nhttps://github.com/rails/tailwindcss-rails\n\n**What operating system are you using?**\n\nmacOS Ventura - Chip M1\n\n**Reproduction URL**\n\nCreation of a new Rails app that includes TailwindCSS.\n\n`rails new test --css=tailwind`\n\nExecution of the watch command.\n\n`rails tailwindcss:watch`\n\n**Describe your issue**\n\nThe terminal hangs after executing the watch command. Same application worked well after downgrading it back to v3.\n\nI believe this is related to the hardware since I saw another user with M1 reporting the same issue here https://github.com/rails/tailwindcss-rails/issues/509#issuecomment-2754490380.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17451","RelatedDescription":"Open issue \"[4.0.17] Any command hanging forever on macOS with chip M1\" (#17451)"},{"Id":"2958517410","IsPullRequest":false,"CreatedAt":"2025-03-29T22:09:47","Actor":"WouterDeGeringel","Number":"17448","RawContent":null,"Title":"[v4] Breaking change: When using the important flag, @apply now also make all of the declarations !important","State":"open","Body":"Hi there,\n\nI am trying to upgrade a project from tailwind v3 to v4.\n\nI found that in v4 when [using the important flag](https://tailwindcss.com/docs/styling-with-utility-classes#using-the-important-flag) and then use @apply to inline any existing utility classes into my own custom CSS, these lines get \"!important\" added to them. \n\nIn v3 this was not the so. \n\nI am not sure if this is a bug or an change. If it is intentional, then maybe the upgrade guide should be mention this.\n\nIf there is a way to prevent @apply to add the \"!mportant\" rule, I would love to know.\n\nRegards","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17448","RelatedDescription":"Open issue \"[v4] Breaking change: When using the important flag, @apply now also make all of the declarations !important\" (#17448)"},{"Id":"2957371619","IsPullRequest":false,"CreatedAt":"2025-03-28T22:14:12","Actor":"Mfauzan1","Number":"17439","RawContent":null,"Title":"Group and group-hover Not working at responsive screen  in tailwind-V4","State":"open","Body":"Dear team .\n\nGroup and group-hover Not working at responsive screen  in tailwind-V4\n\nhttps://github.com/user-attachments/assets/b3f9e004-77c8-4692-b19a-896cf3e1290d\n\nBr//\nMuhammad Fauzan","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17439","RelatedDescription":"Open issue \"Group and group-hover Not working at responsive screen  in tailwind-V4\" (#17439)"},{"Id":"2957146481","IsPullRequest":false,"CreatedAt":"2025-03-28T21:31:49","Actor":"michaelcozzolino","Number":"17438","RawContent":null,"Title":"Styles do not get generated completely when working with scoped slotted/deep styles in vuejs","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.17\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\npostcss, vite\n\n**What version of Node.js are you using?**\n\nv20.10.0\n\n**What browser are you using?**\n\nBrave\n\n**What operating system are you using?**\n\nubuntu 24\n\n**Reproduction URL**\n\nhttps://github.com/michaelcozzolino/tailwind4-vue-slotted-bug\n\nto run:\nyarn install && yarn dev\n\n**Describe your issue**\n\n I have two components: `Parent.vue` and `Child.vue`\nthe parent contains a div with a slot, the child contains a div with a  `custom-class`. I'm trying to style all the slotted elements of `Parent` containing `custom-class`:\n\nParent.vue\n```\n<template>\n    <div class=\"test-class \">\n        <slot />\n    </div>\n</template>\n\n<style lang=\"postcss\" scoped>\n@reference \"tailwindcss\"\n\n.test-class {\n    @apply text-yellow-500;\n}\n\n:slotted(.custom-class) {\n    @apply bg-blue-500;\n}\n</style>\n```\n\nChild.vue\n```\n<template>\n    <div class=\"custom-class\">child</div>\n</template>\n```\n\nApp.vue\n```\n<script setup lang=\"ts\">\nimport Parent from \"@/components/Parent.vue\";\nimport Child  from \"@/components/Child.vue\";\n</script>\n\n<template>\n  <Parent>\n      <Child />\n  </Parent>\n</template>\n\n```\ncase 1:\n`test-class` added in Parent -> the slotted is styled correctly, but not the element where the `test-class` is used\n\n```\n<style lang=\"postcss\" scoped>\n@reference \"tailwindcss\"\n\n.test-class {\n    @apply text-yellow-500;\n}\n\n:slotted(.custom-class) {\n    @apply bg-blue-500;\n}\n</style>\n```\n\ncase 2:\n`test-class` removed from the style of Parent -> the slotted is not styled\n\n```\n<style lang=\"postcss\" scoped>\n@reference \"tailwindcss\"\n\n:slotted(.custom-class) {\n    @apply bg-blue-500;\n}\n</style>\n```\n\ncase 3:\n`test-class` below the slotted -> the parent div containing the `test-class` is styled, but the slotted are not\n\n```\n<style lang=\"postcss\" scoped>\n@reference \"tailwindcss\"\n    \n:slotted(.custom-class) {\n    @apply bg-blue-500;\n}\n\n.test-class {\n    @apply text-yellow-500;\n}\n</style>\n```\n\nIt seems it happens also with deep, but i did not investigate more.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17438","RelatedDescription":"Closed issue \"Styles do not get generated completely when working with scoped slotted/deep styles in vuejs\" (#17438)"},{"Id":"2957049913","IsPullRequest":true,"CreatedAt":"2025-03-28T19:58:17","Actor":"thecrypticace","Number":"17437","RawContent":null,"Title":"Add `object-{top,bottom}-{left,right}` utilities","State":"closed","Body":"These match the new `mask-*` and updated `bg-*` utilities.\r\n\r\nThis is the same as #17378 but for `object-position`.\r\n\r\n| Deprecated utility    | New utility           |\r\n| --------------------- | --------------------- |\r\n| `object-left-top`     | `object-top-left`     |\r\n| `object-right-top`    | `object-top-right`    |\r\n| `object-left-bottom`  | `object-bottom-left`  |\r\n| `object-right-bottom` | `object-bottom-right` |\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17437","RelatedDescription":"Closed or merged PR \"Add `object-{top,bottom}-{left,right}` utilities\" (#17437)"},{"Id":"2956802206","IsPullRequest":true,"CreatedAt":"2025-03-28T17:47:09","Actor":"scottbedard","Number":"17436","RawContent":null,"Title":"Add test coverage for property-specific colors","State":"open","Body":"There are several property-specific color variables available to maintain compatibility with v3. [My team and I would like to use them](https://github.com/tailwindlabs/tailwindcss/discussions/17400), but would feel more comfortable if they were formally supported by v4. This PR adds test coverage for those features.\r\n\r\n@RobinMalfait has confirmed that these features are not intended to be removed, [see conversation here &rarr;](https://discord.com/channels/486935104384532500/546706299010678784/1355213322995110171)\r\n\r\n@crswll Has opened a PR here for the related documentation\r\n- https://github.com/tailwindlabs/tailwindcss.com/pull/2178\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17436","RelatedDescription":"Open PR \"Add test coverage for property-specific colors\" (#17436)"},{"Id":"2956572750","IsPullRequest":true,"CreatedAt":"2025-03-28T16:53:16","Actor":"RobinMalfait","Number":"17433","RawContent":null,"Title":"Extract used CSS variables from `.css` files","State":"closed","Body":"This PR fixes an issue where CSS variables could be used in CSS modules, but where never emitted in your final CSS.\r\n\r\nSome backstory, when Tailwind CSS v4 came out, we _always_ emitted all CSS variables whether they were used or not.\r\n\r\nLater, we added an optimization where we only emit the CSS variables that were actually used. The definition of \"used\" in this case is:\r\n\r\n1. Used in your CSS  file(s) — (we check the final CSS AST for this)\r\n2. Used _somewhere_ in any of your source files (e.g.: a JavaScript file accessing a variable)\r\n\r\nThe issue this PR tries to solve is with the very first point. If you are using CSS modules, then every CSS file is processed separately. This is not a choice Tailwind CSS made, but how other build tooling works (like Vite for example).\r\n\r\nTo prevent emitting all of Tailwind's Preflight reset and all utilities per CSS file, you can use the `@reference` directive instead of repeating `@import \"tailwindcss\";`. This is explained here: https://tailwindcss.com/docs/compatibility#explicit-context-sharing \r\n\r\nBut now we are just _referencing_ them, not emitting them. And since the CSS module is not connected in any way to the main `index.css` file that contains the `@import \"tailwindcss\";` directive, we don't even see the CSS variables while processing the `index.css` file. (or wherever your main CSS file is)\r\n\r\nThis is where point 2 from above comes in. This is a situation where we rely on the extractor to find the used CSS variables so we can internally mark them as used.\r\n\r\nTo finally get to the point of this PR, the extractor only scans `.html`, `.js`, ... files but not `.css` files. So all the CSS variables used inside of CSS modules will not be generated.\r\n\r\nThis PR changes that behavior to also scan `.css` files. But _only_ for CSS variables (not any other type of class candidate). This is important, otherwise all your custom `@utility foo {}` definitions would always mark `foo` as a used class and include it in the CSS which is not always the case.\r\n\r\nOn top extracting CSS variables, we will also make sure that the CSS variables we find are in usage positions (e.g.: `var(--color-red-500)`) and not in definition positions (e.g.: `--color-red-500: #ff0000;`). This is important because we only want to emit the variables that are actually used in the final CSS output.\r\n\r\nOne future improvement not implemented here, is that technically we will also extract CSS variables that might not be used if defined in a `@utility`.\r\n\r\n```css\r\n@utility never-used {\r\n  color: var(--color-red-500); /* --color-red-500 will be emitted, even if it might not be used */\r\n}\r\n```\r\n\r\nFixes: #16904\r\nFixes: #17429\r\n\r\n# Test plan\r\n\r\n1. Added a test where CSS variables are defined in `.css` files (and ignored)\r\n2. Added a test where CSS variables are used in `.css` files (and included)\r\n\r\nTesting on the reproduction defined in #16904, the `.module.css` file contains a reference to `var(--color-hot-pink)`, but generating a build shows that the variable definition is not available:\r\n\r\n<img width=\"1630\" alt=\"image\" src=\"https://github.com/user-attachments/assets/a0d5c37e-6813-4cd5-a677-6c356b5a73d4\" />\r\n\r\nWhen you run the build again with the changes from this PR, then we _do_ see the definition of the `--color-hot-pink` in the root CSS file:\r\n<img width=\"2876\" alt=\"image\" src=\"https://github.com/user-attachments/assets/beab7c11-a31b-4ea4-8235-4849a8e92859\" />\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17433","RelatedDescription":"Closed or merged PR \"Extract used CSS variables from `.css` files\" (#17433)"},{"Id":"2956659850","IsPullRequest":true,"CreatedAt":"2025-03-28T16:43:05","Actor":"philipp-spiess","Number":"17435","RawContent":null,"Title":"Improve compatibility with Safari 15","State":"open","Body":"This PR improves the compatibility with Tailwind CSS v4 with unsupported browsers with the goal to greatly improve compatibility with Safari 15. \r\n\r\nTo make this work, this PR makes the following changes to all code\r\n\r\n- Change `oklab(…)` default theme values to use a percentage in the first place (so instead of `--color-red-500: oklch(0.637 0.237 25.331);` we now define it as `--color-red-500: oklch(63.7% 0.237 25.331);` since this syntax has much broader support on Safari).\r\n- Polyfill `@property` with a `@supports` query targeting older versions of Safari and Firefox *\r\n- Create fallbacks for the `color-mix(…)` function that use _inlined color values from your theme_ so that they can be computed a compile time by `lightningcss`. These fallbacks will convert to srgb to increase compatibility.\r\n- Create fallbacks for the _relative color_ feature used in the new shadow utilities and using `color-mix(…)` in case _relative color_ is applied on `currentcolor` (due to limited browser support)\r\n- Create fallbacks for gradient interpolation methods (e.g. to support `bg-linear-to-r/oklab`)\r\n- Polyfill `@media` queries range syntax.\r\n\r\n## A simplified example\r\n\r\nGiven this example CSS input:\r\n\r\n```css\r\n@import 'tailwindcss';\r\n@source inline('from-cyan-500/50 bg-linear-45');\r\n```\r\n\r\nHere's the updated output CSS including the newly added polyfills and updated `oklab` values:\r\n\r\n```css\r\n.bg-linear-45 {\r\n  --tw-gradient-position: 45deg;\r\n  background-image: linear-gradient(var(--tw-gradient-stops));\r\n}\r\n\r\n@supports (background-image: linear-gradient(in lab, red, red)) {\r\n  .bg-linear-45 {\r\n    --tw-gradient-position: 45deg in oklab;\r\n  }\r\n}\r\n\r\n.from-cyan-500\\\\/50 {\r\n  --tw-gradient-from: oklab(71.5% -.11682 -.08247 / .5);\r\n  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));\r\n}\r\n\r\n@supports (color: color-mix(in lab, red, red)) {\r\n  .from-cyan-500\\\\/50 {\r\n    --tw-gradient-from: color-mix(in oklab, var(--color-cyan-500) 50%, transparent);\r\n  }\r\n}\r\n\r\n:root, :host {\r\n  --color-cyan-500: oklch(71.5% .143 215.221);\r\n}\r\n\r\n@supports (((-webkit-hyphens: none)) and (not (margin-trim: 1lh))) or ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {\r\n  @layer base {\r\n    *, :before, :after, ::backdrop {\r\n      --tw-gradient-position: initial;\r\n      --tw-gradient-from: #0000;\r\n      --tw-gradient-via: #0000;\r\n      --tw-gradient-to: #0000;\r\n      --tw-gradient-stops: initial;\r\n      --tw-gradient-via-stops: initial;\r\n      --tw-gradient-from-position: 0%;\r\n      --tw-gradient-via-position: 50%;\r\n      --tw-gradient-to-position: 100%;\r\n    }\r\n  }\r\n}\r\n\r\n@property --tw-gradient-position {\r\n  syntax: \"*\";\r\n  inherits: false\r\n}\r\n\r\n@property --tw-gradient-from {\r\n  syntax: \"<color>\";\r\n  inherits: false;\r\n  initial-value: #0000;\r\n}\r\n\r\n@property --tw-gradient-via {\r\n  syntax: \"<color>\";\r\n  inherits: false;\r\n  initial-value: #0000;\r\n}\r\n\r\n@property --tw-gradient-to {\r\n  syntax: \"<color>\";\r\n  inherits: false;\r\n  initial-value: #0000;\r\n}\r\n\r\n@property --tw-gradient-stops {\r\n  syntax: \"*\";\r\n  inherits: false\r\n}\r\n\r\n@property --tw-gradient-via-stops {\r\n  syntax: \"*\";\r\n  inherits: false\r\n}\r\n\r\n@property --tw-gradient-from-position {\r\n  syntax: \"<length-percentage>\";\r\n  inherits: false;\r\n  initial-value: 0%;\r\n}\r\n\r\n@property --tw-gradient-via-position {\r\n  syntax: \"<length-percentage>\";\r\n  inherits: false;\r\n  initial-value: 50%;\r\n}\r\n\r\n@property --tw-gradient-to-position {\r\n  syntax: \"<length-percentage>\";\r\n  inherits: false;\r\n  initial-value: 100%;\r\n}\r\n```\r\n\r\n## \\* A note on `@property` polyfills and CSS modules\r\n\r\nOn Next.js, CSS module files are required to be _pure_, meaning that all selectors must either be scoped to a class or an ID. Fortunatnyl for us, this does not apply to `@property` rules which we've been using before to initialize CSS variables.\r\n\r\nHowever, since we're now bringing back the `@property` polyfills, that would cause unexpected rules to be exported from the CSS file as this:\r\n\r\n```css\r\n@reference \"tailwindcss\";\r\n\r\n.skew {\r\n  @apply skew-7;\r\n}\r\n```\r\n\r\nWould turn to the following file:\r\n\r\n```css\r\n.skew {\r\n  /* … */\r\n}\r\n@supports (/*…*/) {\r\n  @layer base {\r\n    *, :before, :after, ::backdrop {\r\n      --tw-gradient-position: initial;\r\n    }\r\n  }\r\n}\r\n@property /* … */ \r\n```\r\n\r\nNotice that this adds a `*` selector which is not considered pure.\r\n\r\nUnfortunately there is no way for us to silence this warning or work around it, as the dependency causing this errors ([`postcss-modules-local-by-default`](https://github.com/css-modules/postcss-modules-local-by-default)) is bundled into Next.js. To work around crashes, these polyfills will not apply to CSS modules processed by the PostCSS extension for now.\r\n\r\n## Testing on tailwindcss.com\r\n\r\nTo see the changes in effect, take a look at this screencast that compares tailwindcss.com on iOS 15.5 with a version that has the patches of this PR applied:\r\n\r\nhttps://github.com/user-attachments/assets/1279d6f5-3c63-4f30-839c-198a789f4292\r\n\r\n## Open questions\r\n\r\n- [x] Should we make the `@property` polyfill not require an `@layer base` and instead place the generated CSS on the top of the file?\r\n- [x] Add fallbacks for newly introduced usages of the relative color syntax.\r\n- [x] Decide if we're ok with how we actually implement the `@media` range query workaround\r\n\r\n## Test plan\r\n\r\n- [x] Tested on tailwindcss.com via a preview build: https://tailwindcss-com-git-legacy-browsers-tailwindlabs.vercel.app/\r\n- [x] Updated tests\r\n- [x] Ensure we also test on Chrome 111, Safari 16.4, Firefox 128 to make sure we have no regressions. Also tested on Safari 16.4, 15.5, 18.0\r\n\r\n ","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17435","RelatedDescription":"Open PR \"Improve compatibility with Safari 15\" (#17435)"},{"Id":"2956567458","IsPullRequest":true,"CreatedAt":"2025-03-28T16:40:57","Actor":"thecrypticace","Number":"17432","RawContent":null,"Title":"Add `bg-{position,size}-*` utilities","State":"closed","Body":"This PR adds `bg-{position,size}-*` utilities that support arbitrary values. This exist as the new preferred version of something like this:\r\n\r\n```\r\nbg-[120px_120px]\r\n```\r\n\r\nIs it size or position (hint: it's the 2nd one).\r\n\r\nTo override it you'd have to provide a data type:\r\n```\r\nbg-[size:120px_120px]\r\n```\r\n\r\n\r\nNow you can be more explicit and have better intellisense by writing these:\r\n```\r\nbg-position-[120px_120px]\r\nbg-size-[120px_120px]\r\n```\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17432","RelatedDescription":"Closed or merged PR \"Add `bg-{position,size}-*` utilities\" (#17432)"},{"Id":"2956645022","IsPullRequest":true,"CreatedAt":"2025-03-28T16:36:28","Actor":"thecrypticace","Number":"17434","RawContent":null,"Title":"Add `drop-shadow-*` color support","State":"open","Body":"This PR adds support for two things:\r\n\r\n- New `drop-shadow-{color}` utilities which can be used to control the filder drop shadow color\r\n- New `drop-shadow-*/{alpha}` utilities which can be used to control the intensity of the drop shadow \r\n\r\nNote that drop-shadow-* utilities without a modifier use variables from your theme.\r\n\r\nIf you opt into using drop shadow colors or drop-shadow \"intensity\" utilities we will inline these values into your CSS when using a drop shadow color or drop shadow intensity utility and as such can't be changed by changing the theme variables on a per-element/tree basis.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17434","RelatedDescription":"Open PR \"Add `drop-shadow-*` color support\" (#17434)"},{"Id":"2956471074","IsPullRequest":true,"CreatedAt":"2025-03-28T16:28:20","Actor":"thecrypticace","Number":"17431","RawContent":null,"Title":"Rework scripting variants","State":"closed","Body":"This replaces the `scripting`, `scripting-none`, and `scripting-initial` variants with one `noscript` variant that matches the name of the HTML `<noscript>` element. The previous `scripting` can then be represented as `not-noscript` e.g. `not-noscript:flex`.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17431","RelatedDescription":"Closed or merged PR \"Rework scripting variants\" (#17431)"},{"Id":"2956368131","IsPullRequest":false,"CreatedAt":"2025-03-28T14:40:14","Actor":"asionesjia","Number":"17430","RawContent":null,"Title":"appearance-none doesn't work on ::-webkit-search-cancel-button in Apple devices (WebKit browsers)","State":"open","Body":"Description: The `appearance-none` utility in Tailwind CSS doesn't seem to work as expected on the `::-webkit-search-cancel-button` pseudo-element in WebKit-based browsers (such as Safari) on Apple devices. This causes the search cancel button to still appear in search input fields.\n\nSteps to Reproduce:\n\nUse Tailwind CSS's appearance-none on an `input[type=\"search\"]` element.\n\nObserve the behavior in WebKit-based browsers (Safari, Chrome on iOS, etc.).\n\nThe cancel button (::-webkit-search-cancel-button) still appears, even though appearance-none is applied.\n\nExpected Behavior: appearance-none should hide the search cancel button, or at least prevent it from being styled by the default WebKit appearance.\n\nActual Behavior: The cancel button is still displayed in WebKit browsers.\n\nProposed Solution: Manually applying the following CSS fixes the issue:\n\n```css\ninput[type=\"search\"]::-webkit-search-cancel-button {\n  -webkit-appearance: none;\n}\n```\nIt would be great if Tailwind CSS could account for this issue and provide a built-in solution, or if a workaround could be documented in the official documentation.\n\nEnvironment:\n\nTailwind CSS version: 4.0.9\n\nBrowser: Safari, Chrome on Mac and IOS, other WebKit-based browsers\n\nDevice: Apple devices (iPhone, iPad)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17430","RelatedDescription":"Open issue \"appearance-none doesn't work on ::-webkit-search-cancel-button in Apple devices (WebKit browsers)\" (#17430)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-04-01T03:30:22.9847432Z","RunDurationInMilliseconds":463}