{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2864948725","IsPullRequest":false,"CreatedAt":"2025-02-20T03:06:47","Actor":"XinYiBuFang","Number":"16680","RawContent":null,"Title":"grid-cols-3  invalid ，but other is available，such as  grid-cols-4/grid-cols-5","State":"open","Body":"grid-cols-3  invalid ，but other is available，such as  grid-cols-4/grid-cols-5\nI can write it into the style and it can take effect\n\n`<div class=\"w-full h-full grid grid-cols-3 grid-rows-2 gap-3 p-2\">`","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16680","RelatedDescription":"Open issue \"grid-cols-3  invalid ，but other is available，such as  grid-cols-4/grid-cols-5\" (#16680)"},{"Id":"2864814798","IsPullRequest":false,"CreatedAt":"2025-02-20T01:42:04","Actor":"allenwyma","Number":"16679","RawContent":null,"Title":"Peer with peer-checked isn't working","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\n4.0.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\ntailwind cli\n\n**What version of Node.js are you using?**\n\nn/a\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/BUXpdYopId\n\n**Describe your issue**\n\nusing peer with peer-checked: doesn't seem to trigger classes being used\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16679","RelatedDescription":"Open issue \"Peer with peer-checked isn't working\" (#16679)"},{"Id":"2864751937","IsPullRequest":true,"CreatedAt":"2025-02-20T01:06:04","Actor":"depfu[bot]","Number":"16678","RawContent":null,"Title":"Update bun 1.1.43 → 1.2.2 (minor)","State":"open","Body":"\n\n\n\n\nHere is everything you need to know about this upgrade. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ bun (1.1.43 → 1.2.2) · [Repo](https://github.com/oven-sh/bun)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16678","RelatedDescription":"Open PR \"Update bun 1.1.43 → 1.2.2 (minor)\" (#16678)"},{"Id":"2864480667","IsPullRequest":true,"CreatedAt":"2025-02-19T21:54:20","Actor":"philipp-spiess","Number":"16676","RawContent":null,"Title":"Re-enable: Only expose used CSS variables ","State":"open","Body":"This PR re-enables the changes necessary to remove unused theme variables and keyframes form your CSS.\r\n\r\nThis change was initially landed as #16211 and then later reverted in #16403 because we found some unexpected interactions with using `@apply` and CSS variables in multi-root setups like CSS modules or Vue inline `<style>` blocks that were no longer seeing their required variables defined.\r\n\r\nThis issue is fixed by now ensuring that theme variables that are defined within an `@reference \"…\"` boundary will still be emitted in the generated CSS when used (as this would otherwise not generate a valid stylesheet). \r\n\r\nSo given the following input CSS:\r\n\r\n```css\r\n@reference \"tailwindcss\";\r\n.text-red {\r\n  @apply text-red-500;\r\n}\r\n```\r\n\r\nWe will now compile this to:\r\n\r\n```css\r\n@layer theme {\r\n  :root, :host {\r\n    --text-red-500: oklch(0.637 0.237 25.331);\r\n  }\r\n}\r\n.text-red {\r\n  color: var(--text-red-500);\r\n}\r\n```\r\n\r\nThis PR also improves the initial implementation to not mark theme variables as used if they are only used to define other theme variables. For example:\r\n\r\n```css\r\n@theme {\r\n  --font-sans:\r\n    ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',\r\n    'Noto Color Emoji';\r\n  --font-mono:\r\n    ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, 'Liberation Mono', 'Courier New',\r\n    monospace;\r\n\r\n  --default-font-family: var(--font-sans);\r\n  --default-mono-font-family: var(--font-mono);\r\n}\r\n\r\n.default-font-family {\r\n  font-family: var(--default-font-family);\r\n}\r\n```\r\n\r\nThis would be reduced to the following now as `--font-mono` is only used to define another variable and never used outside the theme block:\r\n\r\n```css\r\n:root, :host {\r\n  --font-sans:\r\n    ui-sans-serif, system-ui, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol',\r\n    'Noto Color Emoji';\r\n  --default-font-family: var(--font-sans);\r\n}\r\n\r\n.default-font-family {\r\n  font-family: var(--default-font-family);\r\n}\r\n```\r\n\r\n## Test plan\r\n\r\n- See updated unit and integration tests","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16676","RelatedDescription":"Open PR \"Re-enable: Only expose used CSS variables \" (#16676)"},{"Id":"2864155654","IsPullRequest":false,"CreatedAt":"2025-02-19T19:19:03","Actor":"SamBallantyne","Number":"16672","RawContent":null,"Title":"[v4] @apply doesn't work with variants","State":"closed","Body":"\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.7 (seems to be a regression from 3.4.4, which we're using in prod)\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/Cxw1WvQpQj\n\nExpected: all three rows are orange. ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16672","RelatedDescription":"Closed issue \"[v4] @apply doesn't work with variants\" (#16672)"},{"Id":"2864115808","IsPullRequest":false,"CreatedAt":"2025-02-19T18:32:47","Actor":"alexmkio","Number":"16671","RawContent":null,"Title":"Upgrade codemod (v4.0.6) does not cover deprecated utilities for opacity","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v3.4.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: Next.js 15.1.7\n\n**What version of Node.js are you using?**\n\nFor example: v22.14.0\n\n**What browser are you using?**\n\nFor example: Chrome\n\n**What operating system are you using?**\n\nFor example: macOS\n\n**Reproduction URL**\n[https://github.com/alexmkio/v3-tailwind/commit/c4988230e0b9c826a8f097bd75a12221384219e9#diff-73d7a23e5015801b9bcc9db601d6ec9594d3eb34e5bb23154e0ae4b0c30f1a3bR6](https://github.com/alexmkio/v3-tailwind/commit/c4988230e0b9c826a8f097bd75a12221384219e9#diff-73d7a23e5015801b9bcc9db601d6ec9594d3eb34e5bb23154e0ae4b0c30f1a3bR6)\nSee line 6 of /src/app/page.tsx\n\n**Describe your issue**\n\nUsing the latest upgrade codemod (v4.0.6) when upgrading from version 3 (3.4.1) to version 4 the utilities for bg-opacity-, text-opacity-, border-opacity-, divide-opacity-, ring-opacity-, placeholder-opacity- are not updated or ported to [their v4 counterparts](https://tailwindcss.com/docs/upgrade-guide#removed-deprecated-utilities). For example, I'd expect that if I have a string of classes which contains \"bg-indigo-600 bg-opacity-75\" that it would become \"bg-indigo-600/75\".","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16671","RelatedDescription":"Open issue \"Upgrade codemod (v4.0.6) does not cover deprecated utilities for opacity\" (#16671)"},{"Id":"2863993596","IsPullRequest":false,"CreatedAt":"2025-02-19T17:35:21","Actor":"adambirds","Number":"16669","RawContent":null,"Title":"@source doesn't work if dist/ is in the gitignore.","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNextJS 15.1.7\n\n**What version of Node.js are you using?**\n\nNode 23\n\n**What browser are you using?**\n\nAny browser\n\n**What operating system are you using?**\n\nMacOS (Linux with Docker)\n\n**Reproduction URL**\n\nhttps://github.com/adambirds/tailwind-issue-reproduction\n\nThe reproduction may not use those exact versions as was put together quickly, and my main app is dockerised.\n\n**Describe your issue**\n\nIf `dist/` is in your `.gitignore` file, it causes the `@source` directive to have issues when trying to tell tailwind to look for source files in a package in `node_modules`. Using my reproduction repo, you can edit `globals.css` to cause the issue to appear.\n\nIf set to the below it doesn't work even though it should.\n\n```css\n@import 'tailwindcss';\n@source '../../node_modules/tablewind';\n```\n\nIf set to the below it does, but this isn't desired to have to append the `/dist`:\n\n```css\n@import 'tailwindcss';\n@source '../../node_modules/tablewind/dist';\n```\n\nThe table in the repro app won't actually work as it requires a complex setup, but you can if the styling works as it will either look like this:\n\nWorking:\n![Image](https://github.com/user-attachments/assets/8bf43c4e-3ef1-48d9-ae67-26090a726235)\n\nNot Working:\n![Image](https://github.com/user-attachments/assets/43076fce-63b4-450a-b03c-cf32da5b8ae8)\n\nIf you remove `dist/` from the .gitignore it works, but it should be possible to have this in there.\n\nIt was discussed with @adamwathan here: https://discord.com/channels/486935104384532500/1341775942846255145","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16669","RelatedDescription":"Open issue \"@source doesn't work if dist/ is in the gitignore.\" (#16669)"},{"Id":"2863792013","IsPullRequest":false,"CreatedAt":"2025-02-19T17:20:11","Actor":"winchesHe","Number":"16664","RawContent":null,"Title":"Important modifier with transition utilities like `ease-out!` got error","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv3.4.1\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNextjs 14.3.0\n\n**What version of Node.js are you using?**\n\nv20.0.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nHere's a minimal reproduction on Tailwind Play:\n[https://play.tailwindcss.com/pMH7Qk3QdS](https://play.tailwindcss.com/pMH7Qk3QdS)\n\n**Describe your issue**\n\nWhen using the important modifier with transition utilities like `ease-out!`, it generates invalid CSS:\n\n```css\n.ease-out\\! {\n    --tw-ease: var(--ease-out) !important;\n    transition-timing-function: var(--ease-out) !important;\n}\n```\n\n![Image](https://github.com/user-attachments/assets/e9be6714-4a02-4920-9204-a4e98bd9bdfd)\n\nThe issue is that `--tw-ease: var(--ease-out) !important;` is an invalid CSS rule because CSS custom properties (variables) cannot have `!important` modifiers. This makes the utility class unusable.\n\nExpected behavior:\nThe `!important` modifier should only be applied to the actual CSS property (`transition-timing-function`) and not to the CSS custom property declaration.\n\nThe correct output should be:\n\n```css\n.ease-out\\! {\n    --tw-ease: var(--ease-out);\n    transition-timing-function: var(--ease-out) !important;\n}\n```\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16664","RelatedDescription":"Closed issue \"Important modifier with transition utilities like `ease-out!` got error\" (#16664)"},{"Id":"2863951214","IsPullRequest":true,"CreatedAt":"2025-02-19T17:20:09","Actor":"RobinMalfait","Number":"16668","RawContent":null,"Title":"Fix remove `!important` on CSS variable declarations","State":"closed","Body":"This PR fixes an issue where `!important` is added to declarations that define CSS variables. The `!important` should only be added to the other declarations.\r\n\r\nBefore:\r\n```css\r\n.ease-out\\! {\r\n  --tw-ease: var(--ease-out) !important;\r\n  transition-timing-function: var(--ease-out) !important;\r\n}\r\n```\r\n\r\nAfter:\r\n```css\r\n.ease-out\\! {\r\n  --tw-ease: var(--ease-out);\r\n  transition-timing-function: var(--ease-out) !important;\r\n}\r\n```\r\n\r\nFixes: https://github.com/tailwindlabs/tailwindcss/issues/16664\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16668","RelatedDescription":"Closed or merged PR \"Fix remove `!important` on CSS variable declarations\" (#16668)"},{"Id":"2863598073","IsPullRequest":false,"CreatedAt":"2025-02-19T15:44:49","Actor":"Morvs","Number":"16663","RawContent":null,"Title":"CSS @import not placed on top of file resulting in warning (effectively error)","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nAngular 19.1.6\n\n**What version of Node.js are you using?**\n\nv22.13.0\n\n**What browser are you using?**\n\nEdge 133.0.3065.69\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n\nhttps://github.com/Morvs/tailwind-bug-report\n\n**Describe your issue**\n\nI upgraded Tailwind from version v3.4.17 to v4.0.7 in an Angular project. In the process I also updated Angular from version 19.0.0 to 19.1.6 (through ng update).\n\nI stayed with PostCSS, added \"@tailwindcss/postcss\" dependency and increased PostCSS version from 8.5.1 to 8.5.2.\n\nAfter that the import of another CSS file does not work anymore because the warning\n\n`▲ [WARNING] All \"@import\" rules must come first [invalid-@import] src/styles.css:653:0: 653 │ @import url('css/tooltip.css'); ╵ ~~~~~~~ This rule cannot come before an \"@import\" rule src/styles.css:3:0: 3 │ @layer theme { ╵ ^`\n\nis given.\n\nTailwind puts another \"@ import\", added after the initial \"@ import 'tailwindcss';\" (space after @ only to not link to user...), not at top of the resulting single CSS file causing a warning which results in an effective error as the CSS is now broken. \n\nLooking into the resulting styles.css file in the browser developer tools I can see the import on line 708.\n\nIn the example repo the text \"I should be red\" should be red. If the content of custom.css is put into styles.css and the additional import is removed the warning is gone and the text is red.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16663","RelatedDescription":"Closed issue \"CSS @import not placed on top of file resulting in warning (effectively error)\" (#16663)"},{"Id":"2863342264","IsPullRequest":false,"CreatedAt":"2025-02-19T13:49:15","Actor":"nezaboravi","Number":"16657","RawContent":null,"Title":"[v4]Can't resolve 'tailwindcss' in...","State":"closed","Body":"v4.0.6\nVite 6.1.0\nNode: v20.0.0\nSafari\n macOS\n\nFollowed 1:1 installation process from Tailwind official documentation.(https://tailwindcss.com/docs/installation/framework-guides/laravel/vite)\n\nresults in error: [plugin:@tailwindcss/vite:generate:serve] \nCan't resolve 'tailwindcss' in '/Users/codingwisely/Code/deals/resources/css'\n/Users/codingwisely/Code/deals/resources/css/app.css\n\n\nI cant upload video here looks so, as I recorded from start of new laravel application till the error. I have uploaded it to Dropbox for clarity. \nI tried new project 4 times, and always end up with same error. feeling pretty stupid. \n[Here is a dropbox video.](https://www.dropbox.com/scl/fi/b5goyyraxr4fbhws1pggt/Screen-Recording-2025-02-19-at-13.58.35.mov?rlkey=vmoix6gmyf0n7vmau0dwmlfwm&st=v8c9hlq9&dl=0)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16657","RelatedDescription":"Closed issue \"[v4]Can't resolve 'tailwindcss' in...\" (#16657)"},{"Id":"2863392892","IsPullRequest":false,"CreatedAt":"2025-02-19T13:42:36","Actor":"coderrshyam","Number":"16660","RawContent":null,"Title":"Tailwind CSS v4 Selector Parsing Issue with Empty String Attribute","State":"open","Body":"## Tailwind CSS v4 Selector Parsing Issue with Empty String Attribute\n\n### Environment\n\n- **Tailwind CSS Version:** 4.0.7\n- **Framework:** Next.js 15.1.7\n- **Node.js Version:** 22.14.0\n- **Browser:** Chrome\n- **Operating System:** Windows\n\n### Reproduction\n\n**Repository:** [https://github.com/coderrshyam/next.js-hook-webpack-error](https://github.com/coderrshyam/next.js-hook-webpack-error)\n\n**Steps to Reproduce:**\n\n1. Clone the repository:\n```bash\ngit clone https://github.com/coderrshyam/next.js-hook-webpack-error.git\ncd next.js-hook-webpack-error\n```\n\n2. Install dependencies:\n```bash\npnpm install\n```\n\n3. Attempt to build the project:\n```bash\npnpm build\n```\n\n#### Issue Description:\n\nWhen attempting to build a Next.js project with Tailwind CSS v4, an issue occurs with CSS selector parsing, specifically for selectors containing attribute selectors with empty string values.\n\nThe problematic selector: `.prose code[data-theme*=\" \"]`\n\n#### Behavior in Tailwind CSS v3 (Working Correctly)\n\nIn Tailwind CSS v3, the selector is parsed correctly:\n\n```js\nParser {\n  rule: '.prose code[data-theme*=\" \"]',\n  options: { lossy: false, safe: false },\n  position: 8,\n  css: '.prose code[data-theme*=\" \"]',\n  // ... other properties\n}\n```\n#### Behavior in Tailwind CSS v4 (Incorrect)\n\nIn Tailwind CSS v4, the selector is not parsed correctly:\n\n```js\nParser {\n  rule: '.prose code[data-theme*=\\\\]',\n  options: { lossy: false, safe: false },\n  position: 8,\n  css: '.prose code[data-theme*=\\\\]', \n  // ... other properties\n}\n```\n### Expected Behavior\n\nThe parser in Tailwind CSS v4 should correctly handle the empty string in the attribute selector, similar to how it was handled in v3.\n\n### Actual Behavior\n\nThe parser in Tailwind CSS v4 seems to be escaping or misinterpreting the empty string in the attribute selector, leading to an incorrect parsing of the CSS rule.\n\n### Additional Notes\n\n- This issue specifically occurs during the build process of a Next.js project.\n- The problem appears to be isolated to cases where an attribute selector contains an empty string value.\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16660","RelatedDescription":"Open issue \"Tailwind CSS v4 Selector Parsing Issue with Empty String Attribute\" (#16660)"},{"Id":"2863078930","IsPullRequest":true,"CreatedAt":"2025-02-19T12:16:11","Actor":"depfu[bot]","Number":"16654","RawContent":null,"Title":"Update all of nextjs 15.1.6 → 15.1.7 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ eslint-config-next (15.1.6 → 15.1.7)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n#### ✳️ next (15.1.6 → 15.1.7) · [Repo](https://github.com/vercel/next.js)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/vercel/next.js/releases/tag/v15.1.7\">15.1.7</a></h4>\n\n<blockquote><div class=\"markdown-alert markdown-alert-note\" dir=\"auto\">\n<p class=\"markdown-alert-title\" dir=\"auto\"><svg class=\"octicon octicon-info mr-2\" viewbox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z\"></path></svg>Note</p>\n<p dir=\"auto\">This release is backporting bug fixes. It does <strong>not</strong> include all pending features/changes on canary.</p>\n</div>\n<h3 dir=\"auto\">Core Changes</h3>\n<ul dir=\"auto\">\n<li>fix: work around setTimeout memory leak, improve wrappers (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/75727\">#75727</a>)</li>\n<li>add additional x-middleware-set-cookie filtering (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/75869\">#75869</a>)</li>\n<li>fix: ensure lint worker errors aren't silenced (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/75766\">#75766</a>)</li>\n</ul>\n<h3 dir=\"auto\">Credits</h3>\n<p dir=\"auto\">Huge thanks to <a href=\"https://bounce.depfu.com/github.com/lubieowoce\">@lubieowoce</a> and <a href=\"https://bounce.depfu.com/github.com/ztanner\">@ztanner</a> for helping!</p></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/next/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/vercel/next.js/compare/38a6d0177eced9b56dfcc58f83662a659195af15...eb883cdcfb22517e4babec6f38d3fe86961e2811\">See the full diff on Github</a>. The new version differs by 7 commits:</p>\n<ul>\n<li><a href=\"https://github.com/vercel/next.js/commit/eb883cdcfb22517e4babec6f38d3fe86961e2811\"><code>v15.1.7</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/c536898329494e8f927b2387d65a8e81ec2a2808\"><code>fix: work around setTimeout memory leak, improve wrappers (#75727)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/c25fa950af61e210249dae39fbbaa91e8548d293\"><code>Fix corepack keys (#75600)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/22ce8eae677bb9d5d426f36c0d30386bfa4a3371\"><code>Update CI config for Windows runner (#74850)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/2bd658845011b77bfc468bbf933dff0d534e9a60\"><code>add additional x-middleware-set-cookie filtering (#75869)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/0d9f6059547c3906255c58436c9431b619e9a661\"><code>fix: ensure lint worker errors aren&#39;t silenced (#75766) (#75778)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/b01011206e262632a416c5015f12e7decb0fc7cf\"><code>test: fix eslint plugin test (#75687)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16654","RelatedDescription":"Closed or merged PR \"Update all of nextjs 15.1.6 → 15.1.7 (patch)\" (#16654)"},{"Id":"2861923348","IsPullRequest":false,"CreatedAt":"2025-02-19T10:01:03","Actor":"mohdalihpk","Number":"16647","RawContent":null,"Title":"Plugin problem in tailwindcss 4.0.6","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n\n**What version of Tailwind CSS are you using?**\n4.0.6\n\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\nnpx using tailwindcss-cli\n\n**What version of Node.js are you using?**\nv22.14.0\n\n**What browser are you using?**\nchrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\nNA\n\n**Describe your issue**\nI have added the tailwindcss-motion in plugins but it has an error  \n\nError [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './lib/util/flattenColorPalette.js' is not defined by \"exports\" in my_paroject_path/node_modules/tailwindcss/package.json\n\nI am using tailwind-cli. I believe that the ./lib/util/flattenColorPalette must have .js extension.\n\nWhen I chang the package.json value from flattenColorPalette to flattenColorPalette.js, it is gone.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16647","RelatedDescription":"Closed issue \"Plugin problem in tailwindcss 4.0.6\" (#16647)"},{"Id":"2862518105","IsPullRequest":false,"CreatedAt":"2025-02-19T08:29:03","Actor":"pony5580","Number":"16652","RawContent":null,"Title":"[v4] font-family Theme CSS Variables incorrectly applied to font-weight","State":"closed","Body":"**What version of Tailwind CSS are you using?**  \nv4.0.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**  \nNext.js 15.1.6 \n\n**What version of Node.js are you using?**  \nv22.13.1\n\n**What browser are you using?**  \nChrome\n\n**What operating system are you using?**  \nmacOS\n\n**Reproduction URL**  \nhttps://play.tailwindcss.com/b3Kv8UrT0Z\n\n**Describe your issue**  \n\nIt seems that defining a custom font family using a CSS variable does not work as expected in Tailwind CSS v4.  \n\nAccording to the documentation, it should be possible to define a font family like this:  \n\n```html\n<div class=\"font-[--font-anton]\">Text</div>\n```\n\nHowever, when using this syntax, Tailwind generates the following CSS:  \n\n```css\n.font-\\(--font-anton\\) {\n    --tw-font-weight: var(--font-anton);\n    font-weight: var(--font-anton);\n}\n```\n\nThis incorrectly assigns the value to `font-weight` instead of `font-family`, which prevents the custom font from being applied.  \n\nOn the other hand, specifying a font directly (e.g., `font-[Open_Sans]`) works correctly:  \n\n```css\n.font-\\[Open_Sans\\] {\n    font-family: Open Sans;\n}\n```\n\nExpected behavior:  \nThe generated CSS should correctly apply the `font-family` property when using a CSS variable, similar to how it works with direct font names.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16652","RelatedDescription":"Closed issue \"[v4] font-family Theme CSS Variables incorrectly applied to font-weight\" (#16652)"},{"Id":"2861879730","IsPullRequest":false,"CreatedAt":"2025-02-18T23:41:13","Actor":"DarthGigi","Number":"16646","RawContent":null,"Title":"[v4] Tailwind CSS does not include SvelteKit's src/app.html file when building","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nSvelteKit 2.17.2\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://github.com/DarthGigi/tailwind-v4-app-html-mvce\n\n**Describe your issue**\n\nWhen building, Tailwind CSS v4 does not detect SvelteKit's `src/app.html` file:\n<details>\n  <summary>app.html</summary>\n\n```html\n<!doctype html>\n<html lang=\"en\" class=\"bg-black\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <link rel=\"icon\" href=\"%sveltekit.assets%/favicon.png\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    %sveltekit.head%\n  </head>\n  <body data-sveltekit-preload-data=\"hover\" class=\"bg-red-500\">\n    <div style=\"display: contents\">%sveltekit.body%</div>\n  </body>\n</html>\n``` \n</details>\n<details>\n  <summary>Dev server</summary>\n\n  ![ScreenShot 2025-02-09 at 12 43 AM](https://github.com/user-attachments/assets/94c3511b-2043-48ef-a0f7-2b27ebeb233a)\n</details>\n<details>\n  <summary>After build</summary>\n\n  ![ScreenShot 2025-02-09 at 12 44 AM](https://github.com/user-attachments/assets/c315d69d-291d-40ca-af69-c22fb370df65)\n</details>\n\nWhile this is easily fixable by adding `@source \"app.html\";` to your css file where tailwind is being loaded (in this case, `src/app.css`), I feel like tailwind should automatically include it when building like it does in the dev server.\n\nI've also made a minimal repro: https://github.com/DarthGigi/tailwind-v4-app-html-mvce\n\n_Originally posted by @DarthGigi in https://github.com/tailwindlabs/tailwindcss/discussions/16339#discussioncomment-12105934_\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16646","RelatedDescription":"Open issue \"[v4] Tailwind CSS does not include SvelteKit's src/app.html file when building\" (#16646)"},{"Id":"2861382624","IsPullRequest":false,"CreatedAt":"2025-02-18T19:05:40","Actor":"mshimokura","Number":"16639","RawContent":null,"Title":"[v4] transition-property Theme CSS Variables","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js: 15.1.3\n\n**What version of Node.js are you using?**\n\nv20.18.1\n\n**What browser are you using?**\n\nSafari\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/pNcjYumxXW\n\n**Describe your issue**\n\n***Overview***\n\nI am trying to migrate a project to v4, which has custom transition properties defined in the config.\n\nPreviously:\n```jsx\n// tailwind.config.ts\ntheme: { extend: { transitionProperty: { ring: 'box-shadow' } } }\n\n// component.tsx\n<input className=\"transition-[theme(transitionProperty.colors),theme(transitionProperty.ring)]\" />\n```\n\nExpected migration:\n```jsx\n// globals.css\n@theme {\n  --transition-property-ring: box-shadow;\n}\n\n// component.tsx\n<input className=\"transition-[theme(--transition-property-colors),theme(transition-property-ring)]\" />\n```\n\n***Specifics***\n\nThe included transition properties are not included as css variables (i.e. `theme(--transition-property-colors)` does not work), but it does work with the old syntax, i.e. `theme(transitionProperty.colors)`.\n\nSimilar to the previous report in #14479, using the default transition properties (i.e. transition-colors) does not output css variables.\n\nAlso, for example, `--transition-property-ring: box-shadow` does work in the `@theme` declaration but it is not documented (afaict). If you would like this raised as a separate documentation issue I can do that, but I think that it may change based on how the default transition properties are implemented (i.e. should they also be css variables in the documentation?)\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16639","RelatedDescription":"Open issue \"[v4] transition-property Theme CSS Variables\" (#16639)"},{"Id":"2861051824","IsPullRequest":false,"CreatedAt":"2025-02-18T16:57:04","Actor":"benmccann","Number":"16637","RawContent":null,"Title":"Migration tool does not migrate theme in Svelte files","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite\n\n**What version of Node.js are you using?**\n\n22.11.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nLinux\n\n**Reproduction URL**\n\nCreate a new Svelte + Tailwind 3 project with `npx sv@0.6.18 create` and choose tailwind when setting up the project\n\n**Describe your issue**\n\nWhen you run the migration tool, it does not add `@reference \"tailwindcss/theme\";` to your `.svelte` files. It took me awhile to figure out why my site wasn't working after running the migration tool and this turned out to be the main issue","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16637","RelatedDescription":"Open issue \"Migration tool does not migrate theme in Svelte files\" (#16637)"},{"Id":"2860998781","IsPullRequest":false,"CreatedAt":"2025-02-18T16:34:13","Actor":"janko","Number":"16636","RawContent":null,"Title":"@tailwindcss/postcss fails to resolve font URLs in external packages with Vite","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.1.0\n\n**What version of Node.js are you using?**\n\nv22.12.0\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction**\n\nhttps://github.com/janko/tailwind-postcss-bug\n\n**Describe your issue**\n\nThe CSS entrypoint imports `@fortawesome/fontawesome-free` package CSS. When you run `npm run build`, you'll see errors indicating that font URLs within that CSS have failed to resolve:\n\n```\n../webfonts/fa-brands-400.woff2 referenced in ../webfonts/fa-brands-400.woff2 didn't resolve at build time, it will remain unchanged to be resolved at runtime\n\n../webfonts/fa-regular-400.woff2 referenced in ../webfonts/fa-regular-400.woff2 didn't resolve at build time, it will remain unchanged to be resolved at runtime\n\n../webfonts/fa-solid-900.woff2 referenced in ../webfonts/fa-solid-900.woff2 didn't resolve at build time, it will remain unchanged to be resolved at runtime\n\n../webfonts/fa-v4compatibility.woff2 referenced in ../webfonts/fa-v4compatibility.woff2 didn't resolve at build time, it will remain unchanged to be resolved at runtime\n\n../webfonts/fa-brands-400.ttf referenced in ../webfonts/fa-brands-400.ttf didn't resolve at build time, it will remain unchanged to be resolved at runtime\n\n../webfonts/fa-regular-400.ttf referenced in ../webfonts/fa-regular-400.ttf didn't resolve at build time, it will remain unchanged to be resolved at runtime\n\n../webfonts/fa-solid-900.ttf referenced in ../webfonts/fa-solid-900.ttf didn't resolve at build time, it will remain unchanged to be resolved at runtime\n\n../webfonts/fa-v4compatibility.ttf referenced in ../webfonts/fa-v4compatibility.ttf didn't resolve at build time, it will remain unchanged to be resolved at runtime\n```\n\nThis exact same setup works **without issues** on Tailwind v3, so it seems like a regression in v4.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16636","RelatedDescription":"Open issue \"@tailwindcss/postcss fails to resolve font URLs in external packages with Vite\" (#16636)"},{"Id":"2860411630","IsPullRequest":true,"CreatedAt":"2025-02-18T15:51:21","Actor":"philipp-spiess","Number":"16629","RawContent":null,"Title":"Prepare v4.0.7 release","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16629","RelatedDescription":"Closed or merged PR \"Prepare v4.0.7 release\" (#16629)"},{"Id":"2860493093","IsPullRequest":false,"CreatedAt":"2025-02-18T13:45:33","Actor":"rhysmatthew","Number":"16632","RawContent":null,"Title":"One odd utility not generating, is 'heading' a reserved word in V4?","State":"closed","Body":"Tailwind version V4\n\nNode: 22\n\nI have my utilities from previous versions of Tailwind, and after upgrading I've noticed the word 'heading' doesn't generate or work properly. \n\nI.e. I have several utils like so:\n\n```\n@utility subtitle {\n\t@apply font-secondary text-3xl md:text-4xl font-var-bold;\n}\n\n@utility heading {\n\t@apply font-secondary text-2xl md:text-3xl font-var-bold;\n}\n\n@utility subheading {\n\t@apply font-secondary text-xl md:text-2xl font-var-bold;\n}\n```\n\nHowever when using in my templates heading does not generate correctly i.e. `<p class=\"heading\">` doesn't get any styles applied. Another oddity is that if I introduce a breakpoint it does generate i.e. `<p class=\"md:heading\">`. Whereas subtitle and subheading work fine, along with the others I have set up. \n\nAny help on what could be happening would be much appreciated. I don't want to simply rename as this was working fine before and would require a pattern change throughout dev and design. ","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16632","RelatedDescription":"Closed issue \"One odd utility not generating, is 'heading' a reserved word in V4?\" (#16632)"},{"Id":"2860489305","IsPullRequest":true,"CreatedAt":"2025-02-18T13:38:06","Actor":"philipp-spiess","Number":"16631","RawContent":null,"Title":"Vite: Remove module-graph scanner","State":"open","Body":"Alternative to #16425\r\n\r\nFixes #16585\r\nFixes #16389\r\nFixes #16252\r\nFixes #15794\r\nFixes #16133\r\nFixes #16646\r\nFixes #16358\r\n\r\nThis PR changes the Vite plugin to use the file-system to discover potential class names instead of relying on the module-graph. This comes after a lot of testing and various issue reports where builds that span different Vite instances were missing class names. \r\n\r\nBecause we now scan for candidates using the file-system, we can also remove a lot of the bookkeeping necessary to make production builds and development builds work as we no longer have to change the resulting stylesheet based on the `transform` callbacks of other files that might happen later.\r\n\r\nThis change comes at a small performance penalty that is noticeable especially on very large projects with many files to scan. However, we offset that change by fixing an issue that I found in the current Vite integration that did a needless rebuild of the whole Tailwind root whenever any source file changed. Because of how impactful this change is, I expect many normal to medium sized projects to actually see a performance improvement after these changes. Furthermore we do plan to continue to use the module-graph to further improve the performance in dev mode.\r\n\r\n## Test plan\r\n\r\n- I added new integration tests with cases found across the issues above.\r\n- I did a lot of manual tests by adding a local version of the Vite plugin to repos from the issue list above and the [tailwindcss playgrounds](https://github.com/philipp-spiess/tailwindcss-playgrounds).","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16631","RelatedDescription":"Open PR \"Vite: Remove module-graph scanner\" (#16631)"},{"Id":"2858131851","IsPullRequest":true,"CreatedAt":"2025-02-18T12:45:05","Actor":"philipp-spiess","Number":"16602","RawContent":null,"Title":"Statically link Visual Studio redistributables on Windows builds","State":"closed","Body":"This PR statically links the C runtime on Windows builds so we no longer require installing Visual Studio redistributables.\r\n\r\n## Test plan\r\n\r\nRelying on CI here to not break anything for Windows. ","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16602","RelatedDescription":"Closed or merged PR \"Statically link Visual Studio redistributables on Windows builds\" (#16602)"},{"Id":"2859639130","IsPullRequest":false,"CreatedAt":"2025-02-18T11:26:23","Actor":"mr-wildcard","Number":"16616","RawContent":null,"Title":"[v4] Used CSS variable removed from bundle","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nAstro v5.3.0\n\n**What version of Node.js are you using?**\n\nv22.13.1\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nProduction build: https://tailwind4.team-ux-com.pages.dev/\nRepository: (branch `tailwind4`) https://github.com/mr-wildcard/team-ux.com/pull/57\n\n**Describe your issue**\n\nThe background color of an element is missing when hovering it.\n\n![Image](https://github.com/user-attachments/assets/31a15bfc-ada3-4954-becc-b15b4d2bb9cf)\n\n- CSS variable `--color-surface4` is set [here](https://github.com/mr-wildcard/team-ux.com/blob/7370298185c5c7010a3f22fa0c88a74dbeb4b703/src/styles/base.css#L36)\n- CSS variable `--color-surface4` is used [here](https://github.com/mr-wildcard/team-ux.com/blob/20d0b05e53b8acc0a79cf981fff8c1d8a66a73bf/src/components/Header/NavItemContact.astro#L12) as a background color.\n\nBut the variable is not included in the `theme` layer 👀 \n\n![Image](https://github.com/user-attachments/assets/e0304bc9-1e6e-4005-8b72-7ccbff1e266c)\n\n---\n\n![Image](https://github.com/user-attachments/assets/35e9a8ab-1016-463f-b2be-c2827dc76149)\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16616","RelatedDescription":"Closed issue \"[v4] Used CSS variable removed from bundle\" (#16616)"},{"Id":"2859989944","IsPullRequest":true,"CreatedAt":"2025-02-18T10:57:51","Actor":"philipp-spiess","Number":"16620","RawContent":null,"Title":"Upgrade: Use latest tag for packages","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16620","RelatedDescription":"Closed or merged PR \"Upgrade: Use latest tag for packages\" (#16620)"},{"Id":"2858884274","IsPullRequest":true,"CreatedAt":"2025-02-18T10:57:18","Actor":"depfu[bot]","Number":"16611","RawContent":null,"Title":"Update postcss 8.5.1 → 8.5.2 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this upgrade. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ✳️ postcss (8.5.1 → 8.5.2) · [Repo](https://github.com/postcss/postcss) · [Changelog](https://github.com/postcss/postcss/blob/main/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/postcss/postcss/releases/tag/8.5.2\">8.5.2</a></h4>\n\n<blockquote><ul dir=\"auto\">\n<li>Fixed end position of rules with semicolon (by <a href=\"https://bounce.depfu.com/github.com/romainmenke\">@romainmenke</a>).</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/postcss/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/postcss/postcss/compare/7b02c75e5f093b3fdf8d46eeb17c21a52434d827...692fcde123dbf51c7b1a178370d3e8c6fe7feeee\">See the full diff on Github</a>. The new version differs by 3 commits:</p>\n<ul>\n<li><a href=\"https://github.com/postcss/postcss/commit/692fcde123dbf51c7b1a178370d3e8c6fe7feeee\"><code>Release 8.5.2 version</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/b70e98f624537063d3094644b04f41bd2863bb65\"><code>Update dependencies</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/ba587e32fd51004d334421013f311017f00e5420\"><code>Fix end position of rules with `ownSemicon` (#2012)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16611","RelatedDescription":"Closed or merged PR \"Update postcss 8.5.1 → 8.5.2 (patch)\" (#16611)"},{"Id":"2860005924","IsPullRequest":true,"CreatedAt":"2025-02-18T10:44:12","Actor":"RobinMalfait","Number":"16623","RawContent":null,"Title":"Pin exact versions of `tailwindcss` and `@tailwindcss/*`","State":"closed","Body":"This PR fixes an issue where installing a specific version of `@tailwindcss/postcss` and `tailwindcss` could still result in a version mismatch. This is because we were relying on `^4.0.6` for example instead of `4.0.6`.\r\n\r\nThis PR now pins all these versions to prevent this:\r\n```\r\n❯ pnpm why tailwindcss\r\ndevDependencies:\r\n@tailwindcss/postcss 4.0.5\r\n├─┬ @tailwindcss/node 4.0.6\r\n│ └── tailwindcss 4.0.6\r\n└── tailwindcss 4.0.5\r\n```\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/16623","RelatedDescription":"Closed or merged PR \"Pin exact versions of `tailwindcss` and `@tailwindcss/*`\" (#16623)"},{"Id":"2859060116","IsPullRequest":false,"CreatedAt":"2025-02-18T10:15:31","Actor":"CasJam","Number":"16613","RawContent":null,"Title":"v4 breakpoint prefix not working with @layer components classes","State":"closed","Body":"This was working in v3.  Did I miss some docs about this changing in v4?\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nSeeing this issue in Tailwind Play and all of my tests in various projects.\n\n**What version of Node.js are you using?**\n\nWhatever Tailwind Play uses.\n\n**What browser are you using?**\n\nI checked Chrome and Safari.\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/CGuICpduPQ\n\n**Describe your issue**\n\nDefine a custom class inside of a layer directive, like this:\n\n```\n@layer components {\n  .custom-button {\n    @apply py-2 px-4 bg-blue-400 rounded inline-block text-white;\n  }\n}\n```\n\n**Works:** The custom works when a breakpoint prefix is not present:\n```\n<div class=\"custom-button\">Example</div>\n```\n\n**Doesn't work:** But does not work once any breakpoint prefix is applied:\n```\n<div class=\"sm:custom-button\">Example</div>\n```\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16613","RelatedDescription":"Closed issue \"v4 breakpoint prefix not working with @layer components classes\" (#16613)"},{"Id":"2858473569","IsPullRequest":false,"CreatedAt":"2025-02-17T18:01:12","Actor":"veffev","Number":"16604","RawContent":null,"Title":"Generated break-points not working","State":"closed","Body":"I used upgrade tools command line : $ npx @tailwindcss/upgrade\n\nThe command generated this breakpoint:\n\n`@theme {\n  --breakpoint-mobile: max 500px;\n  --breakpoint-tablet: 501px 640px;\n  --breakpoint-medium: 641px 800px;\n  --breakpoint-large: 801px 1023px;\n  --breakpoint-largeXL: 1024px 1279px;\n  --breakpoint-underLaptop: max 1023px;\n  --breakpoint-courseContent: max 1080px;\n\n  --breakpoint-m: 640px;\n  --breakpoint-mXL: 800px;\n  --breakpoint-laptop: 1024px;\n  --breakpoint-desktop: 1280px;\n  --breakpoint-desktopXL: 1680px;\n  --breakpoint-desktopXXL: 2024px;\n  --breakpoint-tableMin: 1320px;\n  --breakpoint-tableDemoMin: 1150px;\n}`\n\n\nsome breakpoint don't work, like:\n\n`  --breakpoint-tablet: 501px 640px;\n  --breakpoint-medium: 641px 800px;\n  --breakpoint-large: 801px 1023px;\n  --breakpoint-largeXL: 1024px 1279px;`\n\nI'm using:\nTailwind version: v4.0.6\nNextJS: 14.1.4\n\n\nWhat's the solution ?\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16604","RelatedDescription":"Closed issue \"Generated break-points not working\" (#16604)"},{"Id":"2858006905","IsPullRequest":false,"CreatedAt":"2025-02-17T14:38:28","Actor":"ivenuss","Number":"16600","RawContent":null,"Title":"[V4] Custom defined utility classes aren't sorted correctly via `prettier-plugin-tailwindcss`","State":"closed","Body":"Custom declared utility classes aren't sorted properly via auto sort plugin `prettier-plugin-tailwindcss` using CLI command `prettier --write .`.\n\nFor example custom color `bg-mint-500` always ends up as the first option even though it should be next to `text-orange-500`.\n\nThis behaviour applies on CLI command and TW VSCode extension as well.\n\nWhen I try to reproduce this same behaviour in TW playground, it gets sorted correctly -> `<div class=\"border bg-mint-500 text-xl text-orange-500\"></div>\n`\n\n![Image](https://github.com/user-attachments/assets/70995d8c-9d68-4a33-94e1-f2a9133ac302)\n(^ color is linked properly and is registred by TW extension)\n\n### Reproduction\n1. Define custom color\n2. Create element with this custom color\n3. Run prettier format `prettier --write .`\n\n```css\n/* app.css */\n@import 'tailwindcss';\n\n@theme {\n\t--color-mint-500: oklch(0.72 0.11 178);\n}\n```\n\n```html\n<div class=\"bg-mint-500 border text-xl text-orange-500\"></div>\n```\n\n### Package versions\n```json\n\"prettier\": \"^3.5.1\",\n\"prettier-plugin-svelte\": \"^3.3.3\",\n\"prettier-plugin-tailwindcss\": \"^0.6.11\",\n\"tailwindcss\": \"^4.0.6\",\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/16600","RelatedDescription":"Closed issue \"[V4] Custom defined utility classes aren't sorted correctly via `prettier-plugin-tailwindcss`\" (#16600)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-02-20T03:30:22.0335844Z","RunDurationInMilliseconds":563}