{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"1663329343","IsPullRequest":true,"CreatedAt":"2023-04-11T22:56:12","Actor":"RobinMalfait","Number":"10988","RawContent":null,"Title":"Replace `__OXIDE__` at build time to prevent `@tailwindcss/oxide` leaks in the stable engine","State":"open","Body":"This PR will replace `env.OXIDE` with `__OXIDE__` which in turn will be replaced at build time.\n\nOnce it is replaced at build time, then the SWC optimizer will also remove the dead code. This process will ensure that `@tailwindcss/oxide` doesn't leak in the current stable engine.\n\n\nThe Oxide engine is behind a flag:\n```js\nif (env.OXIDE) {\n  require('@tailwindcss/oxide').doSomethingOxideSpecific()\n}\n```\n\nBut some build tools that use the commonjs plugin will hoist that `require` part out of the guard... this typically results in a static import instead. But since the stable engine doesn't have any idea what `@tailwindcss/oxide` even is, it crashes.\n\n<!--\n\nüëã Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/10988","RelatedDescription":"Open PR \"Replace `__OXIDE__` at build time to prevent `@tailwindcss/oxide` leaks in the stable engine\" (#10988)"},{"Id":"1662455758","IsPullRequest":true,"CreatedAt":"2023-04-11T14:15:42","Actor":"depfu[bot]","Number":"10984","RawContent":null,"Title":"Upgrade postcss-loader: 4.3.0 ‚Üí 7.2.4 (major)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this upgrade. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ‚ú≥Ô∏è postcss-loader (4.3.0 ‚Üí 7.2.4) ¬∑ [Repo](https://github.com/webpack-contrib/postcss-loader) ¬∑ [Changelog](https://github.com/webpack-contrib/postcss-loader/blob/master/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<p><em>Too many releases to show here. View the <a href=\"https://github.com/webpack-contrib/postcss-loader/blob/master/CHANGELOG.md\">full release notes</a>.</em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/webpack-contrib/postcss-loader/compare/aa37278872329bd3435fea5dd07de631d75b9801...ef332db57381ed1d8aaa4a9a20eec0e0b21fdb7c\">See the full diff on Github</a>. The new version differs by more commits than we can show here.</p>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@‚Äãdepfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@‚Äãdepfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@‚Äãdepfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@‚Äãdepfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@‚Äãdepfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@‚Äãdepfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@‚Äãdepfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@‚Äãdepfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/10984","RelatedDescription":"Closed or merged PR \"Upgrade postcss-loader: 4.3.0 ‚Üí 7.2.4 (major)\" (#10984)"},{"Id":"1662218241","IsPullRequest":true,"CreatedAt":"2023-04-11T10:41:43","Actor":"brandonmcconnell","Number":"10982","RawContent":null,"Title":"Add First-Class 3D Transform Utility Support","State":"open","Body":"Adds first-class support for 3d transformations using the existing TailwindCSS architecture.\r\n\r\nThis PR also sees GPU acceleration activated by default, but this can be easily switched to using CPU by default. It may also be useful to trigger some sort of warning if a user uses the `transform-cpu` utility but then also attempts to use one of the 3d transform utilities, which would naturally disable 3d transformations.\r\n\r\nThe new utilities added in this effort are:\r\n\r\n| Utility | CSS Property/Transform Function | CSS Value |\r\n|--------|--------|--------|\r\n| `rotate-x` | `rotateX()` | same as `rotate` value(s) |\r\n| `rotate-y` | `rotateY()` | same as `rotate` value(s) |\r\n| `rotate-z` | `rotateZ()` | alias of `rotate` value(s) |\r\n| `scale-z` | `scaleZ()` | same as `scale` value(s) |\r\n| `perspective-self` | `perspective()` | incremental t-shirt sizing |\r\n| `perspective` | `perspective` | incremental t-shirt sizing, same as `perspective-self` |\r\n| `perspective-origin` | `perspective-origin` | same as `origin` (`transform-origin`) |\r\n| `transform-flat` | `transform-style` | `flat` |\r\n| `transform-3d` | `transform-style` | `preserve-3d` |\r\n| `transform-content` | `transform-box` | `content-box` |\r\n| `transform-border` | `transform-box` | `border-box` |\r\n| `transform-fill` | `transform-box` | `fill-box` |\r\n| `transform-stroke` | `transform-box` | `stroke-box` |\r\n| `transform-view` | `transform-box` | `view-box` |\r\n| `backface-visible` | `backface-visibility` | `visible` |\r\n| `backface-hidden` | `backface-visibility` | `hidden` |","Url":"https://github.com/tailwindlabs/tailwindcss/pull/10982","RelatedDescription":"Open PR \"Add First-Class 3D Transform Utility Support\" (#10982)"},{"Id":"1660094700","IsPullRequest":false,"CreatedAt":"2023-04-10T12:57:56","Actor":"J-env","Number":"10973","RawContent":null,"Title":"The same content cannot be compressed and merged, only a small part is compressed and merged","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.2.7+\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\n[Astro](https://astro.build/)\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv16.18.0\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\n[tailwindcss](https://github.com/tailwindlabs/tailwindcss.com) tailwindcss has the same problem \r\n\r\n**Describe your issue**\r\n\r\nUse cssnano or csso to merge, only a small part is merged:\r\n[link](https://github.com/tailwindlabs/tailwindcss/discussions/10820#discussion-4981939)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/10973","RelatedDescription":"Closed issue \"The same content cannot be compressed and merged, only a small part is compressed and merged\" (#10973)"},{"Id":"1659654562","IsPullRequest":false,"CreatedAt":"2023-04-08T21:46:23","Actor":"Wolfgrammatikalazeredr","Number":"10971","RawContent":null,"Title":"Baklava sings ","State":"closed","Body":"https://open.spotify.com/track/1eyzqe2QqGZUmfcPZtrIyt?si=y0ZG5LN9QSiPhQTe_Kxylg&context=spotify%3Aplaylist%3A37i9dQZF1DX8hY56Fq3fM0","Url":"https://github.com/tailwindlabs/tailwindcss/issues/10971","RelatedDescription":"Closed issue \"Baklava sings \" (#10971)"},{"Id":"1659594155","IsPullRequest":false,"CreatedAt":"2023-04-08T18:21:42","Actor":"frederikhors","Number":"10969","RawContent":null,"Title":"This expression is not callable. Type 'PluginUtils' has no call signatures.ts (2349)","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv3.3.1 with a typescript config file.\r\n\r\n**Describe your issue**\r\n\r\n![image](https://user-images.githubusercontent.com/41120635/230735582-8be389c7-db0b-46e3-a84d-895aeb95d2e6.png)\r\n\r\nWhy is this error present?\r\n\r\nThe code is:\r\n\r\n```ts\r\nimport type { Config } from \"tailwindcss\";\r\n\r\nexport default {\r\n  content: [],\r\n  theme: {\r\n    extend: {\r\n      borderColor: (theme) => ({\r\n        DEFAULT: theme(\"colors.red.500\", \"currentColor\"),\r\n      }),\r\n    },\r\n  },\r\n  plugins: [],\r\n} satisfies Config;\r\n```\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/10969","RelatedDescription":"Closed issue \"This expression is not callable. Type 'PluginUtils' has no call signatures.ts (2349)\" (#10969)"},{"Id":"1659589420","IsPullRequest":false,"CreatedAt":"2023-04-08T17:36:23","Actor":"frederikhors","Number":"10968","RawContent":null,"Title":"`[postcss] Cannot read properties of undefined (reading 'config')` with the new Tailwind typescript config file","State":"closed","Body":"Using the new (from 3.3) `tailwind.config.ts` typescript file doesn't work with postcss given the below `postcss.config.cjs` file:\r\n\r\n```cjs\r\nmodule.exports = {\r\n  plugins: [\r\n    require(\"tailwindcss\"),\r\n\r\n    require(\"autoprefixer\"),\r\n\r\n    require(\"cssnano\")({ preset: \"default\" }),\r\n  ],\r\n};\r\n```\r\n\r\nThe error:\r\n\r\n```\r\n[vite] Internal server error: [postcss] Cannot read properties of undefined (reading 'config')\r\n  Plugin: vite:css\r\n      at getTailwindConfig (C:\\project\\node_modules\\tailwindcss\\lib\\lib\\setupTrackingContext.js:84:63)\r\n      at C:\\project\\node_modules\\tailwindcss\\lib\\lib\\setupTrackingContext.js:96:92\r\n      at C:\\project\\node_modules\\tailwindcss\\lib\\processTailwindFeatures.js:46:11\r\n      at plugins (C:\\project\\node_modules\\tailwindcss\\lib\\index.js:38:63)\r\n      at LazyResult.runOnRoot (C:\\project\\node_modules\\postcss\\lib\\lazy-result.js:339:16)\r\n      at LazyResult.runAsync (C:\\project\\node_modules\\postcss\\lib\\lazy-result.js:393:26)\r\n      at async compileCSS (file:///C:/project/node_modules/vite/dist/node/chunks/dep-79892de8.js:38354:25)\r\n      at async TransformContext.transform (file:///C:/project/node_modules/vite/dist/node/chunks/dep-79892de8.js:37810:56)\r\n      at async Object.transform (file:///C:/project/node_modules/vite/dist/node/chunks/dep-79892de8.js:43387:30)\r\n      at async loadAndTransform (file:///C:/project/node_modules/vite/dist/node/chunks/dep-79892de8.js:41105:29) (x2)\r\n```\r\n\r\nI opened https://github.com/postcss/postcss/issues/1829 but as you can see they told me to open it here.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/10968","RelatedDescription":"Closed issue \"`[postcss] Cannot read properties of undefined (reading 'config')` with the new Tailwind typescript config file\" (#10968)"},{"Id":"1659574659","IsPullRequest":true,"CreatedAt":"2023-04-08T16:33:55","Actor":"ivoilic","Number":"10967","RawContent":null,"Title":"Add support for functions in flattenColorPalette","State":"open","Body":"Currently flattenColorPalette does not handle values that are functions. This change allows for functions to be be flattened optionally, so it should not break existing setups. This could potentially be further enhanced by then also checking if the function's returned value is an object and flattening that as a well. I also added a simple test for this new functionality.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/10967","RelatedDescription":"Open PR \"Add support for functions in flattenColorPalette\" (#10967)"},{"Id":"1659500211","IsPullRequest":true,"CreatedAt":"2023-04-08T11:54:59","Actor":"rik","Number":"10966","RawContent":null,"Title":"Add aria-busy variant","State":"open","Body":"This is useful to show a spinner or dim a region that is updating.\r\n\r\nVery useful in conjunction with [Turbo](https://turbo.hotwired.dev/reference/attributes#automatically-added-attributes)\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/10966","RelatedDescription":"Open PR \"Add aria-busy variant\" (#10966)"},{"Id":"1657109281","IsPullRequest":false,"CreatedAt":"2023-04-07T15:04:21","Actor":"codepic","Number":"10960","RawContent":null,"Title":"3.3.1 not handling pseudo-elements properly","State":"closed","Body":"\r\n**What version of Tailwind CSS are you using?**\r\n\r\n`3.3.1`\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\ntailwindcss\r\n\r\n**What version of Node.js are you using?**\r\n\r\n`v18.14.0`\r\n\r\n#### Steps to Repro\r\n\r\n```bash\r\nmkdir repro\r\ncd repro\r\nyarn global add tailwindcss@3.3.1\r\ntailwindcss init\r\n```\r\n\r\nCreate `repro.css` with the following content:\r\n\r\n```css\r\n@config 'tailwind.config.js';\r\n::deep [a] {\r\n    @apply bg-white;\r\n}\r\n```\r\n\r\nRun `tailwindcss --input .\\repro.css --output .\\result.css`\r\n\r\n```css \r\n/* result.css / Incorrect */\r\n[a]::deep {\r\n  --tw-bg-opacity: 1;\r\n  background-color: rgb(255 255 255 / var(--tw-bg-opacity))\r\n}\r\n```\r\n\r\nYou can fix this by downgrading tailwindcss to 3.3.0:\r\n\r\n```bash\r\nyarn global add tailwindcss@3.3.0\r\ntailwindcss --input .\\repro.css --output .\\result.css\r\n```` \r\n\r\nAnd the CORRECT output\r\n\r\n```css\r\n/* Correct! */\r\n::deep [a] {\r\n  --tw-bg-opacity: 1;\r\n  background-color: rgb(255 255 255 / var(--tw-bg-opacity))\r\n}\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/10960","RelatedDescription":"Closed issue \"3.3.1 not handling pseudo-elements properly\" (#10960)"},{"Id":"1657341590","IsPullRequest":true,"CreatedAt":"2023-04-07T14:45:47","Actor":"thecrypticace","Number":"10962","RawContent":null,"Title":"Don‚Äôt move unknown pseudo-elements to the end of selectors","State":"closed","Body":"Fixes #10960\r\n\r\nThe `::deep` Shadow DOM piercing selector uses invalid selector syntax but needs to still work for now. Here we've add it as an exception to ensure it is not moved to the end of the selector (which is the only place that pseudo elements can normally be placed).","Url":"https://github.com/tailwindlabs/tailwindcss/pull/10962","RelatedDescription":"Closed or merged PR \"Don‚Äôt move unknown pseudo-elements to the end of selectors\" (#10962)"},{"Id":"1653497068","IsPullRequest":false,"CreatedAt":"2023-04-07T04:00:30","Actor":"Jonathan-Jacob","Number":"10939","RawContent":null,"Title":"truncate: change overflow: hidden to overflow-x: clip","State":"closed","Body":"### Discussed in https://github.com/tailwindlabs/tailwindcss/discussions/10938\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **Jonathan-Jacob** April  4, 2023</sup>\r\nThere are certain fonts (Metropolis is an example: https://github.com/dw5/Metropolis) where there exist special characters (e.g., √Ñ√ñ√ú) that take up space above or below the line height. These parts of the typeface might not be displayed in a `div` with `overflow: hidden`. However, `overflow-x: clip` will do the trick here. Therefore I suggest changing the property of the `truncate` class from\r\n\r\n`overflow: hidden;`\r\n`text-overflow: ellipsis;`\r\n`white-space: nowrap;`\r\n\r\nto\r\n\r\n`overflow-x: clip;`\r\n`text-overflow: ellipsis;`\r\n`white-space: nowrap;`\r\n</div>","Url":"https://github.com/tailwindlabs/tailwindcss/issues/10939","RelatedDescription":"Closed issue \"truncate: change overflow: hidden to overflow-x: clip\" (#10939)"},{"Id":"1656077011","IsPullRequest":false,"CreatedAt":"2023-04-05T18:17:26","Actor":"ollebergkvist","Number":"10958","RawContent":null,"Title":"Lineclamp bug on mobile devices (Chrome, Firefox)","State":"closed","Body":"System:\r\n    OS: macOS 12.6.3\r\n    CPU: (6) x64 Intel(R) Core(TM) i5-8500B CPU @ 3.00GHz\r\n    Memory: 286.20 MB / 32.00 GB\r\n    Shell: 5.8.1 - /bin/zsh\r\n  Binaries:\r\n    Node: 16.17.0 - ~/.asdf/installs/nodejs/16.17.0/bin/node\r\n    Yarn: 1.22.19 - ~/Documents/dev/projects/godsent.gg/node_modules/.bin/yarn\r\n    npm: 8.15.0 - ~/.asdf/plugins/nodejs/shims/npm\r\n  npmPackages:\r\n    @tailwindcss/aspect-ratio: ^0.4.2 => 0.4.2 \r\n    @tailwindcss/forms: ^0.5.3 => 0.5.3 \r\n    @tailwindcss/line-clamp: ^0.4.4 => 0.4.4 \r\n    @tailwindcss/typography: ^0.5.9 => 0.5.9 \r\n    next: ^13.2.4 => 13.2.4 \r\n    react: ^18.2.0 => 18.2.0 \r\n    tailwindcss: 3.2.7 => 3.2.7 \r\n\r\n\r\n**Reproduction URL**\r\n\r\n[[[A Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\r\n\r\nA reproduction is **required** when filing an issue ‚Äî any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.](https://www.godsent.gg/news)](https://www.godsent.gg/news)](https://www.godsent.gg/news)\r\n\r\n**Describe your issue**\r\n\r\nLineclamp gives a really weird behaviour on mobile devices.\r\nWorks on desktop and devtools (mobile).\r\n\r\nI have tried to downgrade to 3.2.7 to manually use the line clamp plugin but that gives the same error as the latest Tailwind version where the plug is included.\r\n\r\n![Screenshot 2023-04-05 at 11 11 34](https://user-images.githubusercontent.com/50720954/230167741-099855d1-e0a2-4631-b6f2-15466e0e572a.png)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/10958","RelatedDescription":"Closed issue \"Lineclamp bug on mobile devices (Chrome, Firefox)\" (#10958)"},{"Id":"1655080162","IsPullRequest":false,"CreatedAt":"2023-04-05T10:53:32","Actor":"ugurc4n","Number":"10952","RawContent":null,"Title":"RTL support ","State":"closed","Body":"In version 3.3, if I want to give different values for ltr and rtl, which prop should I use? ltr and rtl do not work in 3.3","Url":"https://github.com/tailwindlabs/tailwindcss/issues/10952","RelatedDescription":"Closed issue \"RTL support \" (#10952)"},{"Id":"1654794763","IsPullRequest":true,"CreatedAt":"2023-04-05T01:52:39","Actor":"bkjohnson","Number":"10950","RawContent":null,"Title":"Simplify rotate core plugin to a single transform","State":"closed","Body":"<!--\r\n\r\nüëã Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n\r\nThe [docs on rotate](https://github.com/tailwindlabs/tailwindcss.com/blob/6f58d2ed6c7f2e0a220c94a2c6597f6374e8d665/src/pages/docs/rotate.mdx?plain=1#L17) show that the only property used in the declaration is `rotate()`:\r\n\r\n![Screenshot of the tailwind docs for rotate. In the table with \"Class\" and \"Properties\" columns you can see that for the `rotate-0` class, the only property is `transform: rotate(0deg);`](https://user-images.githubusercontent.com/2008881/229958399-e4dd3386-dcef-400c-9c00-fa9743ece527.png)\r\n\r\nHowever, the property that was actually declared was a combination of `translate`, `rotate`, `skew`, and `scale`, all of which used CSS variables. Because of this a tailwind user would have to include `@tailwind base` just to get those variables defined, but that inclusion would add a lot of extra baggage that wasn't necessary for utility classes.\r\n\r\nWith this PR a user can only have the `utilities` layer, leading to less output, and the `rotate` utility can only be concerned with rotation.\r\n\r\n---\r\n\r\nThis didn't feel like a significant feature so I didn't open an issue for it, but let me know if more discussion is desired.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/10950","RelatedDescription":"Closed or merged PR \"Simplify rotate core plugin to a single transform\" (#10950)"},{"Id":"1654793328","IsPullRequest":false,"CreatedAt":"2023-04-05T01:49:56","Actor":"garmistry","Number":"10949","RawContent":null,"Title":"Gap attribute is not working","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nFor example: v3.3.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\n\"next\": \"13.2.4\",\r\n\r\n\r\n**What browser are you using?**\r\n\r\nChrome,\r\n\r\n**What operating system are you using?**\r\n\r\nMacOS\r\n\r\n\r\n**Describe your issue**\r\n\r\nI was attempting to use the 'gap' flag with TailwindCSS 3.3.1 and I could not see the elements inherit the attribute when creating Card objects. \r\n\r\nAfter I downgraded to 2.2.19, the gap feature work and applied the items correctly. Might be a singular issue but maybe someone can test? \r\n\r\nI was following the multi-card examples from the Tremor Dashboard Setups. \r\n\r\nhttps://www.tremor.so/docs/getting-started/demo-dashboard","Url":"https://github.com/tailwindlabs/tailwindcss/issues/10949","RelatedDescription":"Closed issue \"Gap attribute is not working\" (#10949)"},{"Id":"1654566472","IsPullRequest":true,"CreatedAt":"2023-04-04T20:57:07","Actor":"depfu[bot]","Number":"10948","RawContent":null,"Title":"Upgrade mini-css-extract-plugin: 1.6.2 ‚Üí 2.7.5 (major)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this upgrade. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ‚ú≥Ô∏è mini-css-extract-plugin (1.6.2 ‚Üí 2.7.5) ¬∑ [Repo](https://github.com/webpack-contrib/mini-css-extract-plugin) ¬∑ [Changelog](https://github.com/webpack-contrib/mini-css-extract-plugin/blob/master/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<p><em>Too many releases to show here. View the <a href=\"https://github.com/webpack-contrib/mini-css-extract-plugin/blob/master/CHANGELOG.md\">full release notes</a>.</em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/webpack-contrib/mini-css-extract-plugin/compare/684ad366d2fc34e58746e687bb6d33a797c71be2...ab1d8500f071b581f6e87ee74e2bfd358c88db97\">See the full diff on Github</a>. The new version differs by more commits than we can show here.</p>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@‚Äãdepfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@‚Äãdepfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@‚Äãdepfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@‚Äãdepfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@‚Äãdepfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@‚Äãdepfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@‚Äãdepfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@‚Äãdepfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/10948","RelatedDescription":"Closed or merged PR \"Upgrade mini-css-extract-plugin: 1.6.2 ‚Üí 2.7.5 (major)\" (#10948)"},{"Id":"1654536672","IsPullRequest":true,"CreatedAt":"2023-04-04T20:30:01","Actor":"thecrypticace","Number":"10947","RawContent":null,"Title":"Order utilities clockwise where applicable","State":"open","Body":"Fixes https://github.com/tailwindlabs/prettier-plugin-tailwindcss/issues/147\r\n\r\nWe're gonna change things so the appropriate `inset`, `padding`, `margin`, etc‚Ä¶ utilities are in a clockwise sort order.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/10947","RelatedDescription":"Open PR \"Order utilities clockwise where applicable\" (#10947)"},{"Id":"1653454849","IsPullRequest":false,"CreatedAt":"2023-04-04T16:48:25","Actor":"scarqin","Number":"10937","RawContent":null,"Title":"@apply method is invalid after upgrade to 3.3.1","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.3.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nwebpack 5.77.0\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv16.16.0\r\n\r\n**What browser are you using?**\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\nhttps://github.com/Postcatlab/postcat/blob/3411792892633e5c53d4e86466a0fd52f4599f4a/src/browser/src/app/pages/workspace/overview/project-list/project-list.component.scss\r\n\r\n**Describe your issue**\r\nMy previous version was 3.2.4 After upgrading to the latest version of 3.3.1, @apply is invalid.\r\n* Angular 15.2.5\r\n\r\n```scss\r\n:host {\r\n  .operate-btn-list {\r\n    display: none;\r\n  }\r\n\r\n  .ant-card {\r\n    @include hover-item;\r\n  }\r\n\r\n  ::ng-deep {\r\n    .ant-list-items {\r\n      .ant-list-item {\r\n        @apply px-[10px] rounded-[3px];\r\n        @include hover-item;\r\n\r\n        border: 1px solid transparent;\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\nprevious display\r\n\r\n![image](https://user-images.githubusercontent.com/15225835/229733712-d9d19b15-8461-4113-b2a5-7298d8cb71c4.png)\r\n\r\ncurrent display\r\n\r\n![](https://user-images.githubusercontent.com/15225835/229733180-e01260c1-4772-45dd-848c-32ceb7696db1.png)\r\n\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/10937","RelatedDescription":"Closed issue \"@apply method is invalid after upgrade to 3.3.1\" (#10937)"},{"Id":"1654204794","IsPullRequest":true,"CreatedAt":"2023-04-04T16:46:21","Actor":"thecrypticace","Number":"10943","RawContent":null,"Title":"Don‚Äôt move `::ng-deep` pseudo element to end of selector when using `@apply`","State":"closed","Body":"Fixes #10937\r\n\r\nThe Angular `::ng-deep` Shadow DOM piercing selector uses invalid syntax *but* needs to still work for now. Here we've add it as an exception to ensure it is not moved to the end of the selector (which is the only place that pseudo elements can normally be placed).","Url":"https://github.com/tailwindlabs/tailwindcss/pull/10943","RelatedDescription":"Closed or merged PR \"Don‚Äôt move `::ng-deep` pseudo element to end of selector when using `@apply`\" (#10943)"},{"Id":"1653586194","IsPullRequest":true,"CreatedAt":"2023-04-04T10:11:22","Actor":"dcastil","Number":"10940","RawContent":null,"Title":"Make font settings propagate into buttons, inputs, etc.","State":"open","Body":"In Tailwind CSS v3.3 a feature was introduced to add font-feature-settings and font-variant-settings to the font-family config: https://tailwindcss.com/blog/tailwindcss-v3-3#configure-font-variation-settings-for-custom-font-families\r\n\r\nThese values are overriden by the user agent stylesheet for buttons, inputs, etc.\r\n\r\nSince Tailwind CSS overrides the default behavior for the font-family value, I think it makes sense to add the same change for font-feature-settings and font-variant-settings.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/10940","RelatedDescription":"Open PR \"Make font settings propagate into buttons, inputs, etc.\" (#10940)"},{"Id":"1648700158","IsPullRequest":true,"CreatedAt":"2023-04-03T13:13:10","Actor":"brandonmcconnell","Number":"10923","RawContent":null,"Title":"Add support for paint-order CSS property","State":"closed","Body":"## Summary\r\n\r\nThis PR aims to add support for the `paint-order` CSS property in Tailwind CSS. The `paint-order` property is used to control the order in which an SVG element's stroke, fill, and markers are painted. By providing a utility for this property, Tailwind CSS users can easily control the painting order of their SVG elements directly within their markup, offering greater flexibility and efficiency.\r\n\r\n## Background\r\n\r\nThe `paint-order` property is essential when working with SVG elements, as it allows designers and developers to control the order in which the various parts of an SVG element are rendered. This can be especially useful when creating complex illustrations, icons, or charts, where the painting order of strokes, fills, and markers can have a significant impact on the visual appearance.\r\n\r\nThe property accepts three keywords: `fill`, `stroke`, and `markers`. The default order is `fill`, `stroke`, `markers`, but by specifying a different order, users can achieve different visual effects. For example, reversing the order to `markers`, `stroke`, `fill` will cause the fill to be painted on top of the stroke and markers.\r\n\r\n## Examples\r\n\r\nThe below example can also be seen live in Tailwind Play here: https://play.tailwindcss.com/JcWQ4jlPKh\r\n\r\nWith the new `paint-order` utility, users can easily change the painting order of their SVG elements:\r\n\r\n```html\r\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"400\" height=\"200\">\r\n  <text x=\"10\" y=\"75\">stroke in front</text>\r\n  <text x=\"10\" y=\"150\" class=\"paint-order-stroke-fill\">stroke behind</text>\r\n</svg>\r\n```\r\n\r\n<img width=\"399\" alt=\"example of paint-order CSS property\" src=\"https://user-images.githubusercontent.com/5913254/229029723-6fde4e2e-8b1c-4cff-8b43-fdb8c007c32c.png\">\r\n\r\n[_This example is originally sourced from MDN_](https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order#examples)\r\n\r\n## Resources & support\r\n\r\n[`paint-order` documentation (MDN)](https://developer.mozilla.org/en-US/docs/Web/CSS/paint-order)\r\n\r\n<details><summary>supporting tweets (each linked to source tweet) ‚Äî (expand / collapse)</summary><br />\r\n\r\n<a href=\"https://twitter.com/hamiltonulmer/status/1641498438083944449\"><img width=\"595\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5913254/229030483-be3fead7-ff8a-4f24-a367-200a5d91d7d6.png\"></a>\r\n\r\n<a href=\"https://twitter.com/hamiltonulmer/status/1641575986654502912\"><img width=\"595\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5913254/229030498-deb82d00-aee4-450a-9d85-2052724b317b.png\"></a>\r\n\r\n<a href=\"https://twitter.com/stefanjudis/status/1179038205686865925\"><img width=\"595\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5913254/229030507-f2c3229f-efc9-46eb-b4aa-ddd12d0ef08e.png\"></a>\r\n\r\n<a href=\"https://twitter.com/stefanjudis/status/1449839589095579650\"><img width=\"596\" alt=\"image\" src=\"https://user-images.githubusercontent.com/5913254/229030520-0f8515d0-37b6-4aed-bfcf-fad946c95ce9.png\"></a>\r\n\r\n</details>","Url":"https://github.com/tailwindlabs/tailwindcss/pull/10923","RelatedDescription":"Closed or merged PR \"Add support for paint-order CSS property\" (#10923)"},{"Id":"1650849843","IsPullRequest":false,"CreatedAt":"2023-04-02T13:59:49","Actor":"SylvainGarrigues","Number":"10931","RawContent":null,"Title":"Outdated installation documentation (SvelteKit)","State":"closed","Body":"As per the following domumentation on [Install Tailwind CSS with SvelteKit](https://tailwindcss.com/docs/guides/sveltekit), one should run:\r\n```npx tailwindcss init tailwind.config.cjs -p```\r\n\r\nThis creates an ESM Tailwind config file but the `.cjs`extension is for CommonJS module format.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/10931","RelatedDescription":"Closed issue \"Outdated installation documentation (SvelteKit)\" (#10931)"},{"Id":"1650281994","IsPullRequest":false,"CreatedAt":"2023-04-01T14:18:03","Actor":"AeroWang","Number":"10929","RawContent":null,"Title":"Does not match any directories of the form [dirName], Missing tips","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n v3.2.7\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nNext.js 13.2.4\r\n\r\nJetBrains IDE: WebStorm 2023.1\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv16.17.0\r\n\r\n**What browser are you using?**\r\n\r\nN/A\r\n\r\n**What operating system are you using?**\r\n\r\nWindows\r\n\r\n**Reproduction URL**\r\n\r\nhttps://github.com/AeroWang/nextjs-13-tailwind\r\n\r\n**Describe your issue**\r\n\r\nDoes not match any directories of the form `[dirName]`, even when configured with `'. /app/**/*.{js,ts,jsx,tsx}'`, Missing tips\r\n\r\nRelevant NextJS documentation:\r\n\r\nhttps://beta.nextjs.org/docs/routing/defining-routes#dynamic-segments\r\n\r\nSince Next 13 supports global CSS imports anywhere as well as route grouping using parentheses in folder names, this should be a supported feature.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/10929","RelatedDescription":"Closed issue \"Does not match any directories of the form [dirName], Missing tips\" (#10929)"},{"Id":"1649866236","IsPullRequest":false,"CreatedAt":"2023-03-31T20:16:20","Actor":"emilmuller","Number":"10926","RawContent":null,"Title":"Have to restart Webpack (watch mode) if there's an error in tailwind.config.js","State":"closed","Body":"I'm not sure if this is an issue with tailwind, or postcss, or webpack.\r\n\r\nWhen running webpack in watch mode, and if you (while webpack is running) edit tailwind.config.js to have an error in it (e.g. syntax error), things will crash. Even if you fix the error in tailwind.config.js, you will have to restart webpack to make it work again.\r\n\r\nThis can be somewhat frustrating if you have auto save enabled in vscode. As you are typing, you'll obviously end up with syntax errors until you have finished typing.\r\n\r\nKind regards, Emil","Url":"https://github.com/tailwindlabs/tailwindcss/issues/10926","RelatedDescription":"Closed issue \"Have to restart Webpack (watch mode) if there's an error in tailwind.config.js\" (#10926)"},{"Id":"1648060970","IsPullRequest":false,"CreatedAt":"2023-03-30T19:56:49","Actor":"sgarcia-dev","Number":"10918","RawContent":null,"Title":"\"Uncaught ReferenceError: process is not defined\" when importing \"tailwindcss/resolveConfig\" with Webpack 5 (v3.3.0)","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.3.0\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nWebpack 5.77.0\r\n\r\n**What version of Node.js are you using?**\r\n\r\nFor example: v14.18.1\r\n\r\n**What browser are you using?**\r\n\r\nFor example: Chrome\r\n\r\n**What operating system are you using?**\r\n\r\nFor example: macOS (intel=\r\n\r\n**Describe your issue**\r\n\r\nAfter upgrading to tailwind v3.3.0 from v3.2.7 we got this warning at runtime, causing the app to fail from running\r\n```\r\nsharedState.js:30 Uncaught ReferenceError: process is not defined\r\n    at ./node_modules/tailwindcss/lib/lib/sharedState.js (sharedState.js:30:1)\r\n    at __webpack_require__ (bootstrap:19:1)\r\n    at ./node_modules/tailwindcss/lib/featureFlags.js (featureFlags.js:18:22)\r\n    at __webpack_require__ (bootstrap:19:1)\r\n    at ./node_modules/tailwindcss/lib/util/normalizeConfig.js (normalizeConfig.js:9:23)\r\n    at __webpack_require__ (bootstrap:19:1)\r\n    at ./node_modules/tailwindcss/lib/util/resolveConfig.js (resolveConfig.js:15:26)\r\n    at __webpack_require__ (bootstrap:19:1)\r\n    at ./node_modules/tailwindcss/lib/public/resolve-config.js (resolve-config.js:9:61)\r\n    at __webpack_require__ (bootstrap:19:1)\r\n```\r\n\r\n![Screenshot_2023 03 30_11 53 AM](https://user-images.githubusercontent.com/7468219/228922481-06602456-81f6-403f-9bdf-69171db93b9b.png)\r\n\r\nThis was caused by one of our components import of `import resolveConfig from 'tailwindcss/resolveConfig'` with Webpack 5. Which causes the following `process.env` check to throw a runtime error.\r\nhttps://github.com/tailwindlabs/tailwindcss/blob/b1f4da70d1f5aa4b5c34e82c7dd04996d9d947a9/src/lib/sharedState.js#L6\r\n\r\nApparently it's caused by Webpack 5's [removal of polyfills](https://webpack.js.org/migrate/5/#run-a-single-build-and-follow-advice). \r\n\r\n> webpack 5 does no longer include a polyfill for this Node.js variable. Avoid using it in the frontend code.\r\n\r\nThere are workarounds for this such as including a `process` polyfill with `webpack.DefinePlugin`, but I think this should probably not be necessary.\r\n\r\nI wonder if this could be fixed by just adding a `typeof process !== 'undefined' &&` before it? We also got this issue as well on upgrading, so maybe they are related? Downgrading for now\r\nhttps://github.com/tailwindlabs/tailwindcss/issues/10894\r\n\r\nIn case its relevant, we're mixing ESM modules with CommonJS, which is also similar in the bug above.\r\n\r\nI'm sorry I don't have a runnable example, but I hope this information proves useful to fixing this.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/10918","RelatedDescription":"Closed issue \"\"Uncaught ReferenceError: process is not defined\" when importing \"tailwindcss/resolveConfig\" with Webpack 5 (v3.3.0)\" (#10918)"},{"Id":"1648106074","IsPullRequest":true,"CreatedAt":"2023-03-30T19:06:17","Actor":"thecrypticace","Number":"10919","RawContent":null,"Title":"Fix `@tailwindcss/line-clamp` warning","State":"closed","Body":"Previously the check was in the `resolveConfig` path which is importable externally by users because it's public API. However, due to build tools statically hoisting conditional imports (*cough* Rollup) we had to back that out.\r\n\r\nMoving this to `validateConfig` gives us the same flexibility we had previously but now happens at build-time only. It is not public API and therefore can use dynamic requires.\r\n\r\nWhile working on this we also encountered an issue with the `process` variable being accessed in the browser when using `resolveConfig` and have fixed this as well.\r\n\r\nFixes #10894\r\nFixes #10918","Url":"https://github.com/tailwindlabs/tailwindcss/pull/10919","RelatedDescription":"Closed or merged PR \"Fix `@tailwindcss/line-clamp` warning\" (#10919)"},{"Id":"1647873761","IsPullRequest":false,"CreatedAt":"2023-03-30T17:08:09","Actor":"skyqrose","Number":"10914","RawContent":null,"Title":"Typescript config: allow disabling darkMode","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\nTL;DR: In the config types, allow `darkMode: false`.\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nFor example: v3.3.0\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\npostcss 8.4.21\r\n\r\n**What version of Node.js are you using?**\r\n\r\nnode 18.15.0, typescript 5.0.2\r\n\r\n**What browser are you using?**\r\n\r\nN/A\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\ndescribed below\r\n\r\n**Describe your issue**\r\n\r\nWe disable tailwind's dark mode and have our own plugin to control the `dark:` modifier, so we can specify `dark:` and `light:` modifiers symmetrically as `class=\"light:bg-white dark:bg-black\"` instead of `class=\"bg-white dark:bg-black\"`.\r\n\r\n```ts\r\n// myapp/tailwind.config.ts\r\nimport { Config } from \"tailwindcss\";\r\nimport plugin from \"tailwindcss/plugin\";\r\n\r\nconst lightModePlugin = plugin(({ addVariant }) => {\r\n  addVariant(\"light\", \":where(html.light) &\");\r\n  addVariant(\"dark\", [\r\n    \":where(html.dark) &\",\r\n    \":where(html:not(.light):not(.dark)) &\",\r\n  ]);\r\n});\r\n\r\nmodule.exports = {\r\n  // ...\r\n  // setting to neither valid value disables built-in dark mode entirely\r\n  darkMode: null as unknown as \"media\" | \"class\",\r\n  plugins: [lightModePlugin],\r\n} satisfies Config;\r\n```\r\n\r\nAccording to the [getting started docs](https://tailwindcss.com/docs/upgrade-guide#remove-dark-mode-configuration), you can set `darkMode: false` to disable it. However, the published types for the `darkMode` option don't allow that. (See the excerpt from the `.d.ts` file below.)\r\n\r\nSo we had to do the typescript `as unknown as DarkModeConfig` in order to work around the omission.\r\n\r\nRelatedly, the main [dark mode docs](https://tailwindcss.com/docs/dark-mode) don't mention this `darkMode: false` feature, and they probably should.\r\n\r\n```ts\r\n// tailwindcss/types/config.d.ts\r\n// DarkMode related config\r\ntype DarkModeConfig =\r\n  // Use the `media` query strategy.\r\n  | 'media'\r\n  // Use the `class` strategy, which requires a `.dark` class on the `html`.\r\n  | 'class'\r\n  // Use the `class` strategy with a custom class instead of `.dark`.\r\n  | ['class', string]\r\n\r\ninterface RequiredConfig {\r\n  // ...\r\n}\r\n\r\ninterface OptionalConfig {\r\n  // ...\r\n  darkMode: Partial<DarkModeConfig>\r\n  // ...\r\n  plugins: Partial<PluginsConfig>\r\n  // Custom\r\n  [key: string]: any\r\n}\r\n\r\nexport type Config = RequiredConfig & Partial<OptionalConfig>\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/10914","RelatedDescription":"Closed issue \"Typescript config: allow disabling darkMode\" (#10914)"},{"Id":"1647896385","IsPullRequest":true,"CreatedAt":"2023-03-30T16:42:38","Actor":"RobinMalfait","Number":"10915","RawContent":null,"Title":"Drop `@tailwindcss/line-clamp` warning","State":"closed","Body":"This PR fixes an issue where applications could break when using the new Tailwind CSS v3.3.0 version.\r\n\r\nThis happens because we're trying to detect whether or not the `@tailwindcss/line-clamp` plugin is being used by conditionally requiring it. This is done because the line-clamp plugin is now part of Tailwind CSS itself, and so the plugin is no longer required.\r\n\r\nUnfortunately some build tools hoist conditional `require` calls as static imports, even if they are inside of a `try/catch` block, causing build failures when the `@tailwindcss/line-clamp` package is not installed.\r\n\r\nTo solve this we removed this warning from Tailwind CSS and are instead including it in the latest patch version of the `@tailwindcss/line-clamp` plugin (https://github.com/tailwindlabs/tailwindcss-line-clamp/pull/26).\r\n\r\nUnfortunately this means that, unless the user updates to the latest version of the `@tailwindcss/line-clamp` plugin, we can no longer automatically disable the line-clamp plugin ‚Äî which could result in having duplicated CSS entries for the line-clamp utilities. The good news is that this doesn't actually break your UI, it just results in a bit of extra CSS in the final output.\r\n\r\nFixes: #10894","Url":"https://github.com/tailwindlabs/tailwindcss/pull/10915","RelatedDescription":"Closed or merged PR \"Drop `@tailwindcss/line-clamp` warning\" (#10915)"},{"Id":"1647362227","IsPullRequest":true,"CreatedAt":"2023-03-30T11:22:30","Actor":"RobinMalfait","Number":"10911","RawContent":null,"Title":"Improve `boxShadow` TypeScript types","State":"closed","Body":"This PR improves the `boxShadow` types and makes it consistent with the `dropShadow` type.\n\nThis will also allow you to type the `boxShadow` as a string or as an array of strings.\n\nImplementation wise this already worked, it's just that the types were out of sync.\n\nFixes: #10910\n\n<!--\n\nüëã Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/10911","RelatedDescription":"Closed or merged PR \"Improve `boxShadow` TypeScript types\" (#10911)"}],"ResultType":"GitHubIssue"}},"RunOn":"2023-04-12T03:30:27.1298866Z","RunDurationInMilliseconds":590}