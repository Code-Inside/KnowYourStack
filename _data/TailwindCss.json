{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2264250819","IsPullRequest":false,"CreatedAt":"2024-04-25T18:49:49","Actor":"neilthawani","Number":"13581","RawContent":null,"Title":"tailwindcss@3.4.3 build time significantly exceeds previous versions for monorepo","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.4.3\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nWe're using `ember-source@^4.11.0` with related `ember-cli-build` and related build tools for an 11-subrepo monorepo. Here's our base subrepo `package.json`:\r\n\r\n```\r\n{\r\n  \"dependencies\": {\r\n    \"@ember/jquery\": \"^2.0.0\",\r\n    \"@exlinc/cr-zystudio-sdk\": \"file:../cr-zystudio-sdk\",\r\n    \"@newrelic/publish-sourcemap\": \"^5.1.0\",\r\n    \"@zip.js/zip.js\": \"git://github.com/gildas-lormeau/zip.js.git#3c346898dbcb9f344e8d5a99a65f8cf91b31f560\",\r\n    \"ace-builds\": \"^1.5.0\",\r\n    \"base64-arraybuffer\": \"^1.0.2\",\r\n    \"basiclightbox\": \"^5.0.4\",\r\n    \"blueimp-md5\": \"^2.19.0\",\r\n    \"broccoli-filter\": \"^1.3.0\",\r\n    \"broccoli-funnel\": \"^3.0.8\",\r\n    \"broccoli-merge-trees\": \"^4.2.0\",\r\n    \"core-object\": \"^3.1.5\",\r\n    \"d3\": \"^3.5.17\",\r\n    \"data-forge\": \"^1.10.1\",\r\n    \"ember-auto-import\": \"^2.7.2\",\r\n    \"ember-cli-babel\": \"^8.2.0\",\r\n    \"ember-cli-deploy-plugin\": \"^0.2.9\",\r\n    \"ember-cli-deprecation-workflow\": \"^2.2.0\",\r\n    \"ember-cli-htmlbars\": \"^6.3.0\",\r\n    \"ember-concurrency\": \"^4.0.0\",\r\n    \"ember-cp-validations\": \"^6.0.0\",\r\n    \"ember-fetch\": \"^8.1.2\",\r\n    \"ember-inflector\": \"^4.0.2\",\r\n    \"ember-in-viewport\": \"^4.1.0\",\r\n    \"ember-flatpickr\": \"^7.1.0\",\r\n    \"ember-lifeline\": \"^7.0.0\",\r\n    \"ember-modifier\": \"^4.1.0\",\r\n    \"ember-overridable-computed\": \"^1.0.0\",\r\n    \"ember-test-selectors\": \"^6.0.0\",\r\n    \"ember-websockets\": \"^10.2.1\",\r\n    \"eventsource\": \"^2.0.2\",\r\n    \"highlight.js\": \"^11.9.0\",\r\n    \"iframe-resizer\": \"^4.3.9\",\r\n    \"jq-console\": \"^2.13.2\",\r\n    \"jquery-resizable\": \"^1.0.6\",\r\n    \"long\": \"^5.2.3\",\r\n    \"lz-string\": \"^1.5.0\",\r\n    \"pako\": \"^2.1.0\",\r\n    \"penpal\": \"6.2.2\",\r\n    \"plotly.js-dist-min\": \"^2.31.1\",\r\n    \"regenerator-runtime\": \"^0.14.1\",\r\n    \"rsvp\": \"^4.8.5\",\r\n    \"shlex\": \"^2.1.2\",\r\n    \"tailwindcss\": \"^3.4.3\",\r\n    \"tracked-built-ins\": \"^3.3.0\",\r\n    \"underscore\": \"^1.13.6\",\r\n    \"url-join\": \"^1.1.0\",\r\n    \"vscode-diff\": \"^2.1.1\",\r\n    \"xterm\": \"^5.3.0\",\r\n    \"xterm-addon-fit\": \"^0.8.0\",\r\n    \"xterm-addon-unicode11\": \"^0.6.0\",\r\n    \"xterm-addon-web-links\": \"^0.9.0\"\r\n  },\r\n  \"devDependencies\": {\r\n    \"@babel/eslint-parser\": \"^7.23.10\",\r\n    \"@babel/plugin-proposal-decorators\": \"^7.24.0\",\r\n    \"@ember/optional-features\": \"^2.1.0\",\r\n    \"@ember/render-modifiers\": \"^2.1.0\",\r\n    \"@ember/string\": \"^3.1.1\",\r\n    \"@ember/test-helpers\": \"^3.3.0\",\r\n    \"@embroider/macros\": \"^1.16.0\",\r\n    \"@glimmer/component\": \"^1.1.2\",\r\n    \"@glimmer/tracking\": \"^1.1.2\",\r\n    \"autoprefixer\": \"^10.4.19\",\r\n    \"broccoli-asset-rev\": \"^3.0.0\",\r\n    \"ember-ajax\": \"^5.0.0\",\r\n    \"ember-cli\": \"^5.8.0\",\r\n    \"ember-cli-code-coverage\": \"^3.0.0\",\r\n    \"ember-cli-dependency-checker\": \"^3.3.2\",\r\n    \"ember-cli-deploy\": \"^2.0.0\",\r\n    \"ember-cli-deploy-build\": \"^3.0.0\",\r\n    \"ember-cli-deploy-display-revisions\": \"^3.0.0\",\r\n    \"ember-cli-deploy-gzip\": \"^3.0.0\",\r\n    \"ember-cli-deploy-revision-data\": \"^3.0.0\",\r\n    \"ember-cli-deploy-s3\": \"^4.0.1\",\r\n    \"ember-cli-deploy-s3-index\": \"^3.0.0\",\r\n    \"ember-cli-dotenv\": \"^4.0.0\",\r\n    \"ember-cli-inject-live-reload\": \"^2.1.0\",\r\n    \"ember-cli-postcss\": \"^8.2.0\",\r\n    \"ember-cli-sass\": \"^11.0.1\",\r\n    \"ember-cli-showdown\": \"^9.0.0\",\r\n    \"ember-cli-sri\": \"^2.1.1\",\r\n    \"ember-cli-string-helpers\": \"^6.1.0\",\r\n    \"ember-cli-terser\": \"^4.0.2\",\r\n    \"ember-click-outside\": \"^6.1.0\",\r\n    \"ember-code-snippet\": \"^3.0.0\",\r\n    \"ember-composable-helpers\": \"^5.0.0\",\r\n    \"ember-drag-drop\": \"^0.9.0-beta.0\",\r\n    \"ember-event-helpers\": \"^0.1.1\",\r\n    \"ember-file-upload\": \"^9.0.0\",\r\n    \"ember-froala-editor\": \"^4.2.0\",\r\n    \"ember-fullscreen\": \"^1.0.5\",\r\n    \"ember-get-config\": \"^2.1.1\",\r\n    \"ember-load-initializers\": \"^2.1.2\",\r\n    \"ember-math-helpers\": \"^4.0.0\",\r\n    \"ember-moment\": \"^10.0.0\",\r\n    \"ember-power-select\": \"^7.2.0\",\r\n    \"ember-prism\": \"^0.13.0\",\r\n    \"ember-promise-helpers\": \"^2.0.0\",\r\n    \"ember-qunit\": \"^8.0.2\",\r\n    \"ember-resolver\": \"^11.0.1\",\r\n    \"ember-set-helper\": \"^3.0.1\",\r\n    \"ember-simple-auth\": \"^4.2.2\",\r\n    \"ember-source\": \"^4.11.0\",\r\n    \"ember-template-lint\": \"^6.0.0\",\r\n    \"ember-tooltips\": \"^3.6.0\",\r\n    \"ember-truth-helpers\": \"^4.0.3\",\r\n    \"ember-validators\": \"^4.1.2\",\r\n    \"eslint\": \"^8.57.0\",\r\n    \"eslint-plugin-ember\": \"^12.0.2\",\r\n    \"eslint-plugin-qunit\": \"^8.1.1\",\r\n    \"flatpickr\": \"^4.6.13\",\r\n    \"js-file-download\": \"^0.4.12\",\r\n    \"loader.js\": \"^4.7.0\",\r\n    \"moment-timezone\": \"^0.5.45\",\r\n    \"node-sass\": \"^9.0.0\",\r\n    \"normalize.css\": \"^8.0.1\",\r\n    \"pretender\": \"^3.4.7\",\r\n    \"qunit\": \"^2.20.1\",\r\n    \"stylelint\": \"^14.3.0\",\r\n    \"stylelint-config-standard\": \"^24.0.0\",\r\n    \"stylelint-config-standard-scss\": \"^3.0.0\",\r\n    \"stylelint-order\": \"^5.0.0\",\r\n    \"stylelint-scss\": \"^4.1.0\",\r\n    \"webpack\": \"^5.91.0\"\r\n  },\r\n  \"peerDependencies\": {\r\n    \"js-file-download\": \"^0.4.12\",\r\n    \"moment-timezone\": \"^0.5.34\"\r\n  },\r\n  \"engines\": {\r\n    \"node\": \">=20.0.0\",\r\n    \"npm\": \">=10.2.4\"\r\n  },\r\n  \"ember\": {\r\n    \"edition\": \"octane\"\r\n  },\r\n  \"ember-addon\": {\r\n    \"configPath\": \"tests/dummy/config\"\r\n  }\r\n}\r\n```\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv20.0.0\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nI think this issue may be reproducible if I share a trimmed-down version of our monorepos. Please hold.\r\n\r\n**Describe your issue**\r\n\r\nWe previously didn't update this package for this single subrepo  because it was taking a *very* long time to reload the app on `localhost`. With this update from 3.0.24 to 3.4.3, \r\n\r\n```\r\nBuild successful (102503ms) – Serving on http://localhost:4200/\r\n\r\nSlowest Nodes (totalTime >= 5%)                                                 | Total (avg)        \r\n--------------------------------------------------------------------------------+--------------------\r\n (1)                                                                            | 38575ms            \r\nember-auto-import-webpack (1)                                                   | 21048ms            \r\nBabel: zybooks-web (4)                                                          | 7274ms (1818 ms)   \r\n```\r\n\r\nContrast this to commenting out `@tailwind base`, `@tailwind components`, and `@tailwind utilities` with `tailwindcss@3.4.3`:\r\n\r\n```\r\nBuild successful (11419ms) – Serving on http://localhost:4200/\r\n\r\nSlowest Nodes (totalTime >= 5%)                                                 | Total (avg)        \r\n--------------------------------------------------------------------------------+--------------------\r\nSassCompiler (1)                                                                | 2737ms             \r\nAssetRewrite (2)                                                                | 2390ms (1195 ms)   \r\n (1)                                                                            | 2214ms             \r\nember-auto-import-webpack (1)                                                   | 1282ms          \r\n```\r\n\r\nAnd contrast to using `tailwind@~3.0.24`:\r\n\r\n```\r\nBuild successful (57385ms) – Serving on http://localhost:4200/\r\n\r\nSlowest Nodes (totalTime >= 5%)                                                 | Total (avg)        \r\n--------------------------------------------------------------------------------+--------------------\r\nember-auto-import-webpack (1)                                                   | 19639ms            \r\nBabel: zybooks-web (4)                                                          | 6476ms (1619 ms)   \r\n (1)                                                                            | 5567ms             \r\nBabel: @ember/test-helpers (2)                                                  | 4545ms (2272 ms)   \r\n```\r\n\r\nI am unable to figure out why the build time just about doubles when updating this package version.\r\n\r\nOur `tailwind.config.js` file looks like this:\r\n\r\n```\r\nmodule.exports = {\r\n    content: [\r\n        './{addon,app}/**/*.{hbs,html,js}',\r\n        './node_modules/{content-tools,zycommon-internal-web,zycommon-web,zylabs}/addon/**/*.{hbs,html,js}',\r\n    ],\r\n    safelist: [\r\n        {\r\n            pattern: /^(.*?)/u,\r\n        },\r\n    ],\r\n   theme: ...,\r\n    plugins: [],\r\n    corePlugins: {\r\n        preflight: false,\r\n    },\r\n};\r\n```\r\n\r\nThe contents of `content` sped up our build time by about 20 seconds.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13581","RelatedDescription":"Closed issue \"tailwindcss@3.4.3 build time significantly exceeds previous versions for monorepo\" (#13581)"},{"Id":"2263416784","IsPullRequest":false,"CreatedAt":"2024-04-25T12:05:21","Actor":"tpoisseau","Number":"13580","RawContent":null,"Title":"[Prettier Plugin] support placeholder (generic class attribute) for tailwindAttributes","State":"open","Body":"Hello,\r\n\r\nFollowing the Contributing guide I firstly opened a discussion in June 2023 (and purpose to implement it myself).  \r\nhttps://github.com/tailwindlabs/tailwindcss/discussions/11410\r\n\r\nBut I didn't receive any response from staff and some users seems to wait for this feature, so I'm taking the liberty of opening an issue.\r\n\r\nBest regards,","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13580","RelatedDescription":"Open issue \"[Prettier Plugin] support placeholder (generic class attribute) for tailwindAttributes\" (#13580)"},{"Id":"2262572672","IsPullRequest":true,"CreatedAt":"2024-04-25T10:37:46","Actor":"martinsione","Number":"13578","RawContent":null,"Title":"Delete unnecessary file (playgrounds/vite/src/tailwind.css).","State":"closed","Body":"This PR deletes an unnecessary file in the vite playground to avoid confusion. ","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13578","RelatedDescription":"Closed or merged PR \"Delete unnecessary file (playgrounds/vite/src/tailwind.css).\" (#13578)"},{"Id":"2262423396","IsPullRequest":false,"CreatedAt":"2024-04-25T09:31:55","Actor":"coolemur","Number":"13577","RawContent":null,"Title":"[v4] Pseudo selector scale doesn't work on Firefox","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv4.0.0-alpha.14\r\n\r\n**What browser are you using?**\r\n\r\nFor example: Firefox\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/9oZbag3cwc\r\n\r\n**Describe your issue**\r\n\r\nPseudo element scale doesn't work in Firefox browser, while it works in other browsers \r\n\r\nTo reproduce, check hover effect and compare it in Chrome vs Firefox","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13577","RelatedDescription":"Closed issue \"[v4] Pseudo selector scale doesn't work on Firefox\" (#13577)"},{"Id":"2262728445","IsPullRequest":false,"CreatedAt":"2024-04-25T05:52:46","Actor":"jcbbb","Number":"13579","RawContent":null,"Title":"Cannot read properties of null (reading '__isOptionsFunction')","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.4.3\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nNuxt 3.11.2, @nuxtjs/tailwindcss 6.12.0, @shuriken-ui/next 3.1.5, @shuriken-ui/tailwind\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv20.12.2\r\n\r\n**What browser are you using?**\r\n\r\nChromium, Firefox\r\n\r\n**What operating system are you using?**\r\n\r\nUbuntu, MacOS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://github.com/jcbbb/tw-repro\r\n\r\n**Describe your issue**\r\n\r\nFor some reason, resolveConfig.js is throwing `Cannot read properties of null (reading '__isOptionsFunction')` error, and I am not really sure if it's tailwindcss error or the libraries that I added. The screenshot below shows where the error is coming from. For some reason, plugins array contains null values. I tried to patch it myself by filtering out null values, but then classes are not being generated :(\r\n\r\n![image](https://github.com/tailwindlabs/tailwindcss/assets/51436844/4e311ea7-ada6-4275-a154-8ced4e5dc91b)\r\n\r\nLet me know if I should provide more info","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13579","RelatedDescription":"Open issue \"Cannot read properties of null (reading '__isOptionsFunction')\" (#13579)"},{"Id":"2260650737","IsPullRequest":false,"CreatedAt":"2024-04-24T08:05:48","Actor":"Paillat-dev","Number":"13573","RawContent":null,"Title":"Whatever","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nFor example: v3.4.3\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nwebpack 5.91.0\r\n\r\n**What version of Node.js are you using?**\r\n\r\nFor example: v21.7.1\r\n\r\n**What browser are you using?**\r\n\r\nFirefox & Arc\r\n\r\n**What operating system are you using?**\r\n\r\nWindows\r\n\r\n**Reproduction URL**\r\n\r\nSure, here it is: https://play.tailwindcss.com/NoxxBvwFQ8\r\n![image](https://github.com/tailwindlabs/tailwindcss/assets/75439456/2f9f1249-d1b8-4a72-b7a0-68332ec96e5b)\r\n\r\n**Describe your issue**\r\n\r\nThe `aaaaaa` color is not being applied. I have no idea why. It might be a stupid syntax error I made and didn't find.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13573","RelatedDescription":"Closed issue \"Whatever\" (#13573)"},{"Id":"2259323898","IsPullRequest":false,"CreatedAt":"2024-04-23T17:01:04","Actor":"violetbee","Number":"13569","RawContent":null,"Title":"Tailwind CSS or CSS classes does not working properly while creating elements using vanilla js","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv3.4.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\npostcss-cli 8.4.35, vite 5.1.4, vanilla js\r\n\r\n**What version of Node.js are you using?**\r\n\r\n v18.12.0\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nWindows\r\n\r\n**Reproduction URL**\r\nhttps://github.com/violetbee/tw-vite-issue\r\n\r\n**Describe your issue**\r\n\r\nI have created two different classes, one is based on tw and the other one is classic css. I added these classes to element while creating but it didnt work. \r\n\r\n![image](https://github.com/tailwindlabs/tailwindcss/assets/61601796/857782c9-4f91-496e-8978-0b31b87ef0d0)\r\n![image](https://github.com/tailwindlabs/tailwindcss/assets/61601796/570eb9ed-2ef6-407f-95eb-a801af39503c)\r\n![image](https://github.com/tailwindlabs/tailwindcss/assets/61601796/7a455af7-90f9-4ccc-a4cc-d0de36ba8a11)\r\n![image](https://github.com/tailwindlabs/tailwindcss/assets/61601796/69238710-bef2-4f1f-a9e0-f4d60fa35f84)\r\n\r\nI can only assign tailwind CSS classes to the elements that I have created with Javascript. Why?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13569","RelatedDescription":"Closed issue \"Tailwind CSS or CSS classes does not working properly while creating elements using vanilla js\" (#13569)"},{"Id":"2257408029","IsPullRequest":false,"CreatedAt":"2024-04-22T21:08:16","Actor":"Lueton","Number":"13566","RawContent":null,"Title":"Grid and divide utility not working","State":"closed","Body":"There is already an issue (#3579) but since it is closed and there is no activity by devs im going to open a new one.  \r\nBasically same issue. The `divide-x` and `divide-y` utility is not working when using together with grid.  \r\n\r\nBehavior can be reproduced [here](https://play.tailwindcss.com/2CV7uQxgyv).\r\n\r\n```html\r\n<div class=\"p-6\">\r\n  divide-y\r\n  <div class=\"grid grid-cols-3 divide-y divide-gray-500\">\r\n    <div>1</div>\r\n    <div>2</div>\r\n    <div>3</div>\r\n    <div>4</div>\r\n    <div>5</div>\r\n    <div>6</div>\r\n  </div>\r\n</div>\r\n<div class=\"p-6\">\r\n  divide-x\r\n  <div class=\"grid grid-cols-3 divide-x divide-gray-500\">\r\n    <div>1</div>\r\n    <div>2</div>\r\n    <div>3</div>\r\n    <div>4</div>\r\n    <div>5</div>\r\n    <div>6</div>\r\n  </div>\r\n</div>\r\n<div class=\"p-6\">\r\n  divide-y divide-x\r\n  <div class=\"grid grid-cols-3 divide-x divide-y divide-gray-500\">\r\n    <div>1</div>\r\n    <div>2</div>\r\n    <div>3</div>\r\n    <div>4</div>\r\n    <div>5</div>\r\n    <div>6</div>\r\n  </div>\r\n</div>\r\n\r\n```\r\n![image](https://github.com/tailwindlabs/tailwindcss/assets/42818194/ad0d3f44-2442-40d4-b229-4a79b09447b0)\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.4.1\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13566","RelatedDescription":"Closed issue \"Grid and divide utility not working\" (#13566)"},{"Id":"2256004569","IsPullRequest":false,"CreatedAt":"2024-04-22T11:10:08","Actor":"kr1ke","Number":"13564","RawContent":null,"Title":"How add Tailwind in Vue js SFC playground","State":"closed","Body":"### Discussed in https://github.com/tailwindlabs/tailwindcss/discussions/13563\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **kr1ke** April 22, 2024</sup>\r\nHow i can add Tailwind in Vue js Sandbox? - https://play.vuejs.org/\r\n\r\nI know exactly how to connect other libraries, for example ElementPlus (https://element-plus.run/) or Vuetify (https://element-plus.run/), but I can't guess how to connect tailwind</div>","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13564","RelatedDescription":"Closed issue \"How add Tailwind in Vue js SFC playground\" (#13564)"},{"Id":"2254394544","IsPullRequest":false,"CreatedAt":"2024-04-20T10:41:14","Actor":"Ameenafsar","Number":"13555","RawContent":null,"Title":"Tailwind Css Grid Image Sizing","State":"closed","Body":"### Discussed in https://github.com/tailwindlabs/tailwindcss/discussions/13554\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **Ameenafsar** April 20, 2024</sup>\r\n{% set products_to_loop = section.settings.collection.p_products | p_paginate({per_page: 100}) %}\r\n\r\n<script type=\"text/javascript\">\r\n  window.pdcProducts = {{ products_to_loop | json_encode | raw }};\r\n  const products = window.pdcProducts;\r\n  console.log(products);\r\n</script>\r\n<div class=\"bg-white\">\r\n  <div class=\"mx-auto max-w-2xl px-4 py-16 sm:px-6 sm:py-24 lg:max-w-7xl lg:px-8\">\r\n    <h2 class=\"text-2xl font-bold tracking-tight text-gray-900 mb-6\">Customers also purchased</h2>\r\n\r\n    <div class=\"grid grid-cols-1 gap-x-4 gap-y-10 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 xl:gap-x-8 bg-white\">\r\n      {% for product in products_to_loop.data %}\r\n        <a href=\"#\" class=\"group flex aspect-w-1 aspect-h-1\">\r\n          <div class=\"object-fit cover overflow-hidden rounded-lg bg-white-200 aspect-ratio-square\">\r\n            <img src=\"{{ product.featured_image.src }}\" alt=\"{{ product.title }}\" class=\"w-full object-fit cover object-center\">\r\n          </div>\r\n          <h3 class=\"mt-4 text-sm text-gray-700\">{{ product.title }}</h3>\r\n          <p class=\"mt-1 text-lg font-medium text-gray-900\">{{ product.price }}</p>\r\n        </a>\r\n      {% endfor %}\r\n\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\nsome of the images are making the grid smaller and higher. please help</div>","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13555","RelatedDescription":"Closed issue \"Tailwind Css Grid Image Sizing\" (#13555)"},{"Id":"2252070632","IsPullRequest":true,"CreatedAt":"2024-04-19T04:41:03","Actor":"ashkan-shahpiri","Number":"13551","RawContent":null,"Title":"Update README.md","State":"closed","Body":"Update README.md file","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13551","RelatedDescription":"Closed or merged PR \"Update README.md\" (#13551)"},{"Id":"2248147369","IsPullRequest":true,"CreatedAt":"2024-04-18T22:40:52","Actor":"RobinMalfait","Number":"13537","RawContent":null,"Title":"Remove automatic `var(…)` injection","State":"closed","Body":"This PR removes automatic `var(…)` injection for arbitrary properties, values and modifiers.\n\nThere are a few properties that use \"dashed-ident\" values, this means\nthat you can use `--my-thing` as-is without the `var(…)` around it.\n\nE.g.:\n\n```css\n.foo {\n  /* Notice that these don't have `var(…)` */\n  view-timeline-name: --timeline-name; \n  anchor-name: --sidebar;\n}\n```\n\nThis causes issues because we are now injecting a `var(…)` where it's not needed.\n\nOne potential solution is to create a list of properties where dashed idents can be used. However, they can _also_ use CSS custom properties that point to another dashed ident.\n\nE.g.:\n\n```css\n.foo {\n  --target: --sidebar;\n  anchor-name: var(--target);\n}\n```\n\nA workaround that some people used is adding a `_` in front of the variable: `mt-[_--my-thing]` this way we don't automatically inject the `var(…)` around it. This is a workaround and gross.\n\nWhile the idea of automatic var injection is neat, this causes more trouble than it's worth. Adding `var(…)` explicitly is better.\n\nA side effect of this is that we can simplify the internals for the `candidate` data structure because we don't need to track `dashedIdent` separately anymore.\n\n\n<!--\n\n👋 Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13537","RelatedDescription":"Closed or merged PR \"Remove automatic `var(…)` injection\" (#13537)"},{"Id":"2251358867","IsPullRequest":false,"CreatedAt":"2024-04-18T20:34:38","Actor":"kralion","Number":"13549","RawContent":null,"Title":"Tailwindcss can't be able to capitalize UPERCASE default text","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nFor example: v3.2.7\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nFor example:  Next.js 13.5\r\n\r\n**What version of Node.js are you using?**\r\n\r\nFor example: v20.10\r\n\r\n**What browser are you using?**\r\n\r\nFor example: Chrome\r\n\r\n**What operating system are you using?**\r\n\r\nFor example:  Windows\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/tX6nnIZbP2\r\n\r\n**Describe your issue**\r\n\r\nI expect that UPPERCASE default **text** should be transformed to `capitalize` but it doesn't work","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13549","RelatedDescription":"Closed issue \"Tailwindcss can't be able to capitalize UPERCASE default text\" (#13549)"},{"Id":"2251235823","IsPullRequest":false,"CreatedAt":"2024-04-18T17:44:57","Actor":"sxdav","Number":"13548","RawContent":null,"Title":"Tailwind generates inappropriate class names for custom colors","State":"open","Body":"### Discussed in https://github.com/tailwindlabs/tailwindcss/discussions/13547\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **sxdav** April 18, 2024</sup>\r\nI'm trying to add css vars aliases to the config like that:\r\n\r\n`const config: Config = {\r\n  theme: {\r\n    colors: {\r\n      '-bg-primary': 'var(--bg-primary)'\r\n    }\r\n  }\r\n}`\r\n\r\nIdea is to use them as `bg--bg-primary`, similar to css vars syntax. But tailwind generates a `-bg-bg-primary` class which contains `background-color: var(--bg-primary);`, instead of `bg--bg-primary` which does not seems like an expected behavior.</div>","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13548","RelatedDescription":"Open issue \"Tailwind generates inappropriate class names for custom colors\" (#13548)"},{"Id":"2250361851","IsPullRequest":true,"CreatedAt":"2024-04-18T14:12:54","Actor":"RobinMalfait","Number":"13543","RawContent":null,"Title":"Move `css-parser.bench.ts` into the `src` folder","State":"closed","Body":"This PR is a minor cleanup thing, but it will move the `css-parser.bench.ts` file into the `src` folder next to the `css-parser.ts` and `css-parser.test.ts` files.\n<!--\n\n👋 Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13543","RelatedDescription":"Closed or merged PR \"Move `css-parser.bench.ts` into the `src` folder\" (#13543)"},{"Id":"2248528280","IsPullRequest":true,"CreatedAt":"2024-04-17T15:06:28","Actor":"RobinMalfait","Number":"13538","RawContent":null,"Title":"Keep underscores in dashed-idents","State":"open","Body":"While working on the removal of automatic var injection (#13537), I noticed that underscores in variables are converted to spaces.\r\n\r\nBefore the automatic var injection removal, the following code would work:\r\n\r\n```\r\np-[--spacing-0_5] p-[var(--spacing-0_5)]\r\n```\r\n\r\nHowever, the generated CSS looked like this:\r\n\r\n```css\r\n.p-\\[--spacing-0_5\\] {\r\n  padding: var(--spacing-0_5);\r\n}\r\n.p-\\[var\\(--spacing-0_5\\)\\] {\r\n  padding: var(--spacing-0 5);\r\n  /*                      ^    Notice this space here */\r\n}\r\n```\r\n\r\nOne way to solve this is by escaping the underscore, but then you would have to use the variable like this:\r\n\r\n```\r\np-[var(--spacing-0\\_5)]\r\n```\r\n\r\nIf you are in a JavaScript context, this could even look like this:\r\n\r\n```js\r\nlet className = 'p-[var(--spacing-0\\\\_5)]';\r\n```\r\n\r\nWhich looks a bit weird.\r\n\r\nSo this PR improves the code for handling the `_` conversion to ` ` by ensuring that dashed-idents width underscores are not converted to spaces.\r\n\r\nOne caveat: there are properties, such as `anchor-name`, that accept multiple dashed-idents but luckily for us they are separated by commas instead of spaces. E.g.:\r\n```css\r\n.foo {\r\n  anchor-name: --foo, --bar;\r\n}\r\n```\r\n\r\nIf they were separated by a space, then `[anchor-name:--foo_--bar]` would be a problem because it could both mean:\r\n- `--foo --bar`\r\n- `--foo_--bar`\r\n\r\n... because `_` values are valid in dashed idents.\r\n\r\nIf this ever becomes a problem, then we could special case `_--` to equal ` --` (notice the space). But that in turn would convert legitimate values that look like `--foo_--bar`. Not sure if this is a real problem, because properties such as `anchor-name` are comma-separated right now.\r\n\r\n<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13538","RelatedDescription":"Open PR \"Keep underscores in dashed-idents\" (#13538)"},{"Id":"2247645914","IsPullRequest":false,"CreatedAt":"2024-04-17T08:01:03","Actor":"nahtnam","Number":"13533","RawContent":null,"Title":"Tailwind HMR does not work with Next.js with symlinks","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n3.4.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nNext.js 14.2.1 with tailwind 3.4.1\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv20.9.0\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://github.com/nahtnam/tailwind-symlink-bug\r\n\r\n**Describe your issue**\r\n\r\n1. Clone the above repo\r\n2. Start the server\r\n3. Go to the prose and add `prose-sm`, `prose-lg`, or `prose-xl`. It will not generate the class name. If you restart the server it does. You can also do something like `py-[100px]`\r\n4. Remove the folder `src/app/(symlink)` (which contains a symlink)\r\n5. Now add or change the prose sizing and it works fine","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13533","RelatedDescription":"Open issue \"Tailwind HMR does not work with Next.js with symlinks\" (#13533)"},{"Id":"2246413061","IsPullRequest":true,"CreatedAt":"2024-04-16T16:12:42","Actor":"RobinMalfait","Number":"13532","RawContent":null,"Title":"Further improve natural sorting of classes","State":"closed","Body":"This PR is a small continuation of #13507 where @rvanvelzen pointed out that we are checking a character that we already compared.\r\n\r\nAdditionally, this PR also prevents re-computing the `charCode` twice.\r\n\r\nPerformance wise, this is very minimal, running this on the tailwindcss.com codebase I get these results:\r\n\r\nBefore:\r\n```\r\n[3.19ms] Sort\r\n[3.06ms] Sort\r\n[3.13ms] Sort\r\n[3.38ms] Sort\r\n[3.11ms] Sort\r\n[3.05ms] Sort\r\n[3.03ms] Sort\r\n[3.02ms] Sort\r\n[2.96ms] Sort\r\n[3.18ms] Sort\r\n-------------\r\n[3.171ms] avg\r\n```\r\nAfter:\r\n```\r\n[3.24ms] Sort\r\n[3.02ms] Sort\r\n[3.14ms] Sort\r\n[3.05ms] Sort\r\n[3.17ms] Sort\r\n[3.09ms] Sort\r\n[3.02ms] Sort\r\n[3.12ms] Sort\r\n[2.94ms] Sort\r\n[2.97ms] Sort\r\n-------------\r\n[3.076ms] avg\r\n```\r\n\r\n<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13532","RelatedDescription":"Closed or merged PR \"Further improve natural sorting of classes\" (#13532)"},{"Id":"2245074037","IsPullRequest":true,"CreatedAt":"2024-04-16T09:16:46","Actor":"bae-sh","Number":"13529","RawContent":null,"Title":"fix: doesn't work spaces inside calc","State":"closed","Body":"This PR fix a uncomfortable thing that spaces inside calc doesn't work.\r\n\r\nWhen i use arbitrary calc values with spaces `<div class=\"w-[calc(100px + 200px)]></div>`, tailwind extract separate words.\r\nFinally, It doesn't work.\r\n\r\nSo I've added a function that remove spaces inside calc. It can remove spaces inside calc before using extractor.\r\n\r\n#### before\r\n\r\n`w-[calc(100px + 200px)]` -> `w-[calc(100px` , `+` , `200px)]`\r\n\r\n#### after\r\n\r\n`w-[calc(100px + 200px)]` -> `w-[calc(100px+200px)]`","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13529","RelatedDescription":"Closed or merged PR \"fix: doesn't work spaces inside calc\" (#13529)"},{"Id":"2244064038","IsPullRequest":false,"CreatedAt":"2024-04-15T17:18:42","Actor":"jakubmazanec","Number":"13527","RawContent":null,"Title":"Missing `exports` field in the package.json file","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n3.4.3\r\n\r\n**Reproduction URL**\r\n\r\nhttps://github.com/jakubmazanec/tailwind-exports-bug\r\n\r\nSteps:\r\n\r\n```\r\nnpm install\r\nnpm run typecheck\r\n```\r\n\r\n**Describe your issue**\r\n\r\nIn some configurations, TypeScript needs `exports` field in the package.json file of the `tailwindcss` package. Otherwise code like this:\r\n\r\n```TypeScript\r\nimport {type Config} from 'tailwindcss';\r\nimport plugin from 'tailwindcss/plugin';\r\n\r\nexport type CreateTailwindConfigOptions = {\r\n  content: string[];\r\n};\r\n\r\nexport function createTailwindConfig({content}: CreateTailwindConfigOptions): Config {\r\n  return {\r\n    content,\r\n    plugins: [\r\n      plugin(({addVariant}) => {\r\n        addVariant('ui-icon', [`&[data-icon]`, `:where([data-icon]) &`]);\r\n      }),\r\n    ],\r\n  };\r\n}\r\n```\r\n\r\nleads to an error:\r\n\r\n```\r\nsource/main.ts:2:20 - error TS2307: Cannot find module 'tailwindcss/plugin' or its corresponding type declarations.\r\n\r\nimport plugin from 'tailwindcss/plugin';\r\n                   ~~~~~~~~~~~~~~~~~~~~\r\n```\r\n\r\nIf I add `exports` for this particular use case, error goes away:\r\n\r\n```json5\r\n{\r\n  \"name\": \"tailwindcss\",\r\n  \"version\": \"3.4.3\",\r\n  // ...\r\n  \"exports\": {\r\n    \".\": {\r\n      \"types\": \"./types/index.d.ts\",\r\n      \"require\": \"./lib/index.js\",\r\n      \"import\": \"./lib/index.js\"\r\n    },\r\n    \"./plugin\": {\r\n      \"types\": \"./plugin.d.ts\",\r\n      \"require\": \"./plugin.js\",\r\n      \"import\": \"./plugin.js\"\r\n    }\r\n  },\r\n  // ...\r\n}\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13527","RelatedDescription":"Closed issue \"Missing `exports` field in the package.json file\" (#13527)"},{"Id":"2238726240","IsPullRequest":true,"CreatedAt":"2024-04-15T15:56:30","Actor":"RobinMalfait","Number":"13507","RawContent":null,"Title":"Improve sorting candidates containing numbers","State":"closed","Body":"This PR adds a custom `compare` function that compares two strings. However, once a number is reached the numbers are compared as actual numbers instead of their string representation.\r\n\r\nBefore this change, `p-1 p-2 p-10 p-20` would be sorted as `p-1 p-10 p-2 p-20`. After this change, the order is `p-1 p-2 p-10 p-20`.\r\n\r\nThis makes the suggestions in the vscode extension more logical.\r\n\r\nThe implementation compares two strings, and as long as the strings don't contain any numbers, it compares them as strings. This way we don't pay a performance penalty for comparing strings that don't contain numbers.\r\n\r\nTesting this change on the `tailwindcss.com` codebase where we have to store `~3200` unique classes the time spend on sorting the classes went from `~2.35ms` to ~~`~3.29ms`~~`~3.10ms`. This means that there is about a ~~`~1ms`~~`~0.75ms` performance penalty for sorting this.\r\n\r\nAnother thing we could have done is to compare using the `localeCompare` method:\r\n\r\n```ts\r\nfunction compare(a, b) {\r\n  return a.localeCompare(b, undefined, { numeric: true });\r\n}\r\n```\r\n\r\nHowever, this is an order of magnitude slower than the current implementation, and sorting takes around `~30ms` instead.\r\n\r\n---\r\n\r\nOutstanding questions:\r\n\r\n1. ~~We could _only_ do this for the VS Code extension and Prettier plugin because then we wouldn't have to pay the performance penalty of ~~`~1ms`~~`~0.75ms`. This however means that the order in the extension or the Prettier plugin would be different compared to the order in the generated CSS. Should we only do it there or everywhere and pay the ~~`~1ms`~~`~0.75ms` penalty in favor of nicer consistency?~~ The performance is below ~1ms so good to include everywhere 👍 \r\n\r\n\r\n<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13507","RelatedDescription":"Closed or merged PR \"Improve sorting candidates containing numbers\" (#13507)"},{"Id":"2242264705","IsPullRequest":false,"CreatedAt":"2024-04-14T17:14:34","Actor":"rohmann","Number":"13524","RawContent":null,"Title":"[V4] @tailwindcss-vite: Cannot read properties of undefined (reading 'send')","State":"closed","Body":"Using `tailwind` `4.0.0-alpha.14` and `@tailwindcss-vite` `4.0.0-alpha.14` with Storybook and Vite I'm getting this error:\r\n\r\n```\r\n[vite] Internal server error: Cannot read properties of undefined (reading 'send')\r\n```\r\n\r\nThe error is coming from this line: https://github.com/tailwindlabs/tailwindcss/blob/b07cc4d3bd039de1874472a0036bc97a7f5b3c85/packages/%40tailwindcss-vite/src/index.ts#L53\r\n\r\nI was able to get it working by updating the first line to ensure the `hot` property is available first.\r\n\r\nhttps://github.com/tailwindlabs/tailwindcss/blob/b07cc4d3bd039de1874472a0036bc97a7f5b3c85/packages/%40tailwindcss-vite/src/index.ts#L26\r\n\r\n```ts\r\nfunction updateCssModules(isSSR: boolean) {\r\n    // If we're building then we don't need to update anything\r\n    if (!server?.hot) return\r\n```\r\n\r\nRegretfully, I don't have a repro. I'm using Bun + Storybook + Vite + Tailwind and this only happens when Storybook is running Vite.   I'm not sure of a more isolated way to reproduce it, but it seems like in some edge cases it's possible for `updateCssModules` to be triggered before the server is ready for sending `hot` updates.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13524","RelatedDescription":"Closed issue \"[V4] @tailwindcss-vite: Cannot read properties of undefined (reading 'send')\" (#13524)"},{"Id":"2242172568","IsPullRequest":false,"CreatedAt":"2024-04-14T14:40:18","Actor":"johtso","Number":"13523","RawContent":null,"Title":"Arbitrary variant nesting selector doesn't work with data attribute selector","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.4.3\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nN/A\r\n\r\n**What version of Node.js are you using?**\r\n\r\nN/A\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/0ypNCIcob4\r\n\r\n**Describe your issue**\r\n\r\nArbitrary variants allow you to only apply a class if it is the child of an element matching a selector.\r\n\r\nThis can be done like so: `[.parentclass_&]:text-blue-600`\r\n\r\nYou can also match based on data attributes like so: `data-[parentdata='true']:text-blue-600`\r\n\r\nFor some reason combining the two does not seem to work:\r\n`data-[parentdata='true'_&]:text-blue-600`\r\nor\r\n`data-[parentdata='true']_&:text-blue-600`\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13523","RelatedDescription":"Closed issue \"Arbitrary variant nesting selector doesn't work with data attribute selector\" (#13523)"},{"Id":"2241207089","IsPullRequest":false,"CreatedAt":"2024-04-13T09:56:16","Actor":"Tiedye","Number":"13520","RawContent":null,"Title":"`contain-layout` does not seem to work v4","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nFor example: v4.0.0-alpha.14\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nFor example: vite 5.2.8\r\n\r\n**What version of Node.js are you using?**\r\n\r\nFor example: v20.11.1\r\n\r\n**What browser are you using?**\r\n\r\nFor example: Edge, Firefox\r\n\r\n**What operating system are you using?**\r\n\r\nFor example: Windows\r\n\r\n**Reproduction URL**\r\nStackblitz was being problematic when I tried to setup a tailwind 4 project, its a simple issue so hopefully I can skip this.\r\n\r\n**Describe your issue**\r\n\r\nThe `contain-layout` class does not seem to work:\r\n![image](https://github.com/tailwindlabs/tailwindcss/assets/6187173/9532efa4-a61f-4810-b84b-b75600c748e6)\r\n![image](https://github.com/tailwindlabs/tailwindcss/assets/6187173/c60765e7-1b21-4d9c-a3c2-3ee1df7bc0ae)\r\nRemoving the inactive variables causes the style to be applied correctly:\r\n![image](https://github.com/tailwindlabs/tailwindcss/assets/6187173/54d1af21-db31-49c3-a53c-ef6ebc32e7ea)\r\n![image](https://github.com/tailwindlabs/tailwindcss/assets/6187173/95df16b0-2987-47de-81f4-3e5c5d9cb9e4)\r\n\r\nBehaves the same in both Edge and Firefox.\r\n\r\nIf I may, why are these classes not implemented like they were in https://github.com/tailwindlabs/tailwindcss/pull/12747 ?  I don't understand what the additional complexity achieves.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13520","RelatedDescription":"Closed issue \"`contain-layout` does not seem to work v4\" (#13520)"},{"Id":"2241411091","IsPullRequest":true,"CreatedAt":"2024-04-13T09:56:15","Actor":"wongjn","Number":"13521","RawContent":null,"Title":"Fix contain-* utilities","State":"closed","Body":"Fixes #13520 by ensuring the CSS variables in the values have empty default values, like how the `filter`, `touch-*`, background-gradient, etc. utilities work.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13521","RelatedDescription":"Closed or merged PR \"Fix contain-* utilities\" (#13521)"},{"Id":"2240388979","IsPullRequest":false,"CreatedAt":"2024-04-12T15:35:56","Actor":"qdm12","Number":"13517","RawContent":null,"Title":"Configuration file `content` relative paths are not relative to the configuration file location","State":"closed","Body":"**What version of Tailwind CSS are you using?** v3.4.3\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?** using standalone tailwindcss binary.\r\n\r\n**What version of Node.js are you using?** N/A\r\n\r\n**What browser are you using?** Irrelevant\r\n\r\n**What operating system are you using?** Alpine Linux x86_64\r\n\r\n**Reproduction URL** Dockerfile to re-produce the environment and error:\r\n\r\n1. Copy the following to a `Dockerfile` file\r\n\r\n    ```sh\r\n    FROM alpine:3.19\r\n    RUN wget -qO /usr/local/bin/tailwindcss https://github.com/tailwindlabs/tailwindcss/releases/download/v3.4.3/tailwindcss-linux-x64 && \\\r\n      chmod +x /usr/local/bin/tailwindcss\r\n    WORKDIR /workdir\r\n    # Create an input.css with an import to the base components\r\n    RUN echo '@tailwind utilities;' > input.css\r\n    # Create a tailwind.config.js file with *.html as its content\r\n    RUN printf \"/** @type {import('tailwindcss').Config} */\\nmodule.exports = {\\ncontent: [\\\"*.html\\\"]\\n}\\n\" > tailwind.config.js\r\n    # Create a simple HTML file using a Tailwind class\r\n    RUN echo '<div class=\"text-2xl\">Test</div>' > index.html\r\n    \r\n    # FAILURE: try to generate an output.css file from a directory where the tailwind config is NOT located.\r\n    # /workdir/index.html is NOT detected and output.css is empty.\r\n    WORKDIR /workdir/subdirectory\r\n    RUN tailwindcss -c /workdir/tailwind.config.js -i /workdir/input.css -o /workdir/output.css\r\n    RUN cat /workdir/output.css\r\n    # Empty line\r\n    \r\n    # SUCCESS: generate an output.css file from the directory where the tailwind config is located.\r\n    WORKDIR /workdir\r\n    RUN tailwindcss -c /workdir/tailwind.config.js -i /workdir/input.css -o /workdir/output.css\r\n    RUN cat /workdir/output.css\r\n    # .text-2xl {\r\n    #   font-size: 1.5rem;\r\n    #   line-height: 2rem\r\n    # }\r\n    ```\r\n\r\n2. Build it with `docker build .` and check results from `RUN cat /workdir/output.css` instructions\r\n\r\n**Describe your issue**: Relative paths in the `content` array of the configuration file `tailwind.config.js` are relative to your CURRENT PATH and not to where the configuration file `tailwind.config.js` is located. The change needed is to make relative paths from the configuration file to be relative to the configuration file and NOT from the current path where `tailwindcss` is invoked. Note the `--content` flag should stay as it is, and have relative paths relative to the current directory, so be careful not to break this behavior.\r\n\r\nFor a more detailed context, I need this fixed in order to call `tailwindcss` from subdirectories, from Go `//go:generate tailwindcss ...` commands.\r\n\r\nThanks!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13517","RelatedDescription":"Closed issue \"Configuration file `content` relative paths are not relative to the configuration file location\" (#13517)"},{"Id":"2238764988","IsPullRequest":false,"CreatedAt":"2024-04-11T23:50:23","Actor":"traderift","Number":"13508","RawContent":null,"Title":"Talwind 4 alpha firefox space-x issues","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n^4.0.0-alpha.13\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nsveltekit5 \r\n\r\n**What version of Node.js are you using?**\r\n\r\nFor example: v18\r\n\r\n**What browser are you using?**\r\n\r\nFirefox\r\n\r\n**What operating system are you using?**\r\n\r\nmacOs\r\n\r\n**Reproduction URL**\r\n\r\nWhen you add space-x-any or space--y whatever between elements it doesn't give spacing in firefox\r\n\r\n**Describe your issue**\r\n\r\nDescribe the problem you're seeing, any important steps to reproduce and what behavior you expect instead.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13508","RelatedDescription":"Closed issue \"Talwind 4 alpha firefox space-x issues\" (#13508)"},{"Id":"2237421510","IsPullRequest":true,"CreatedAt":"2024-04-11T10:44:44","Actor":"adamwathan","Number":"13500","RawContent":null,"Title":"Declare character code constants per file","State":"closed","Body":"This PR effectively reverts https://github.com/tailwindlabs/tailwindcss/pull/13497 but preserves the naming improvements that makes the name of each constant consistent between files.\r\n\r\nI noticed when benchmarking `segment` that objects access like `Token.OPEN_CURLY` made the function 25x slower (!) so we should at a minimum import all of the character codes directly instead of using `import * as Token from ...`.\r\n\r\nI feel like since these aren't application-specific constants there's no harm in just redeclaring them in each file anyways — `BACKSLASH` is going to be `0x5c` until the end of time, there's no risk that we have to update that value and now have to update it in more than one place. This also reduces the number of dependencies between files which is nice if we ever wanted to publish anything here as a separate package for any reason.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13500","RelatedDescription":"Closed or merged PR \"Declare character code constants per file\" (#13500)"},{"Id":"2236524161","IsPullRequest":true,"CreatedAt":"2024-04-10T22:29:55","Actor":"RobinMalfait","Number":"13497","RawContent":null,"Title":"Colocate charcode tokens","State":"closed","Body":"This PR moves all `charCode` constants in a shared tokens file. This allows us to remove hardcoded magic numbers (and their associated comments) from the code.\r\n\r\nThis is some cleanup as a continuation from 2 separate PRs that used constant tokens in their own files.\r\n\r\nNote: when running a build, all the constants are inlined, so there is not performance penalty for this change.\r\n\r\n<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13497","RelatedDescription":"Closed or merged PR \"Colocate charcode tokens\" (#13497)"},{"Id":"2236489547","IsPullRequest":true,"CreatedAt":"2024-04-10T22:17:11","Actor":"RobinMalfait","Number":"13496","RawContent":null,"Title":"Fix typo \"envionment\" -> \"environment\"","State":"closed","Body":"Very small PR, but this fixes a typo from \"envionment\" to \"environment\".\n<!--\n\n👋 Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13496","RelatedDescription":"Closed or merged PR \"Fix typo \"envionment\" -> \"environment\"\" (#13496)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-04-26T03:30:20.405219Z","RunDurationInMilliseconds":392}