{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"3078310825","IsPullRequest":true,"CreatedAt":"2025-05-20T21:49:59","Actor":"mondeja","Number":"18093","RawContent":null,"Title":"Support Leptos `class:` attributes","State":"open","Body":"<!--\r\n\r\nüëã Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create a discussion to first discuss any significant new features.\r\n\r\nFor more info, check out the contributing guide:\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/main/.github/CONTRIBUTING.md\r\n\r\n-->\r\n\r\nFixes #18092\r\n\r\n## Summary\r\n\r\nUsing the Svelte preprocessor for Rust files we can support Leptos `class:` attributes syntax.\r\n\r\n## Test plan\r\n\r\n```\r\npnpm t\r\n```\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18093","RelatedDescription":"Open PR \"Support Leptos `class:` attributes\" (#18093)"},{"Id":"3078267008","IsPullRequest":false,"CreatedAt":"2025-05-20T21:22:24","Actor":"mondeja","Number":"18092","RawContent":null,"Title":"Tailwind not seeing classes in Leptos `class:` attributes","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n`@tailwindcss/cli`\n\n**What version of Node.js are you using?**\n\nv22.9.0\n\n**What browser are you using?**\n\nNone\n\n**What operating system are you using?**\n\nLinux\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/86oxfAOKhi\n\n**Describe your issue**\n\nThe rustacean framework [Leptos](https://leptos.dev) has a [`view!` macro](https://docs.rs/leptos/latest/leptos/macro.view.html) that parses HTML-like code to generate components. It accepts the following syntax:\n\n```rust\nview! { <div class:px-0=true>Whatever</div> }\n```\n\nIn Tailwind v3, you can add the next `content.transform` configuration in *tailwind.config.js* file to be able to support this syntax:\n\n```js\nmodule.exports = {\n  content: {\n    files: [\"*.html\", \"./src/**/*.rs\"],\n    transform: {\n      rs: (content) => content.replace(/(?:^|\\s)class:/g, ' '),\n    },\n  },\n}\n```\n\nBut Tailwind v4 does not support custom transformers.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18092","RelatedDescription":"Open issue \"Tailwind not seeing classes in Leptos `class:` attributes\" (#18092)"},{"Id":"3068860979","IsPullRequest":false,"CreatedAt":"2025-05-20T19:48:17","Actor":"andreww2012","Number":"18058","RawContent":null,"Title":"`@apply` directive not transformed inside sass/scss code","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nvite v6.3.5\n\n**What version of Node.js are you using?**\n\nNot relevant\n\n**What browser are you using?**\n\nNot relevant\n\n**What operating system are you using?**\n\nNot relevant\n\n**Reproduction URL**\n\nhttps://stackblitz.com/edit/vitejs-vite-rsanjkjj\n\n**Describe your issue**\n\nIf you set a custom tailwind prefix like `@import 'tailwindcss' prefix(tw)`, `@apply` directives at least inside Vue's `<style>` blocks will be left as-is (unprocessed) if `lang=\"scss\"` is used.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18058","RelatedDescription":"Closed issue \"`@apply` directive not transformed inside sass/scss code\" (#18058)"},{"Id":"3071036349","IsPullRequest":false,"CreatedAt":"2025-05-20T08:57:53","Actor":"hookenz","Number":"18076","RawContent":null,"Title":"AVX error on older CPUs","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.1.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nhttps://github.com/hookenz/gotailwind\n\n**What version of Node.js are you using?**\n\nN/A\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nMac Amd64\n\n**Reproduction URL**\n\nRequires old hardware\n\n**Describe your issue**\n\nI'm the author of gotailwind.  A go wrapper around tailwindcss which makes it possible to run tailwindcss in go projects with `go tool gotailwind`.  \nSee: https://github.com/hookenz/gotailwind\n\nI have a friend who ran it on his Mac and got this output.\n\n```\ngo tool gotailwind\n\nwarn: CPU lacks AVX support, strange crashes may occur.  \nReinstall Bun or use *-baseline build: https://github.com/oven-sh/bun/releases/download/bun-v1.2.13/bun-darlin-x64-baseline.zip\n\n...\n```\n\nA bit of googling and it seems it would might produce this warning on a CPU lacking AVX2 support actually?  not certain.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18076","RelatedDescription":"Closed issue \"AVX error on older CPUs\" (#18076)"},{"Id":"3074877189","IsPullRequest":true,"CreatedAt":"2025-05-19T20:07:59","Actor":"depfu[bot]","Number":"18085","RawContent":null,"Title":"Update @types/react 19.1.2 ‚Üí 19.1.4 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ‚ú≥Ô∏è @‚Äãtypes/react (19.1.2 ‚Üí 19.1.4) ¬∑ [Repo](https://github.com/DefinitelyTyped/DefinitelyTyped)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@‚Äãdepfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@‚Äãdepfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@‚Äãdepfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@‚Äãdepfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@‚Äãdepfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@‚Äãdepfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@‚Äãdepfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@‚Äãdepfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@‚Äãdepfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18085","RelatedDescription":"Closed or merged PR \"Update @types/react 19.1.2 ‚Üí 19.1.4 (patch)\" (#18085)"},{"Id":"3074550260","IsPullRequest":true,"CreatedAt":"2025-05-19T19:19:43","Actor":"depfu[bot]","Number":"18084","RawContent":null,"Title":"Update semver 7.7.1 ‚Üí 7.7.2 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ‚ú≥Ô∏è semver (7.7.1 ‚Üí 7.7.2) ¬∑ [Repo](https://github.com/npm/node-semver) ¬∑ [Changelog](https://github.com/npm/node-semver/blob/main/CHANGELOG.md)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/npm/node-semver/releases/tag/v7.7.2\">7.7.2</a></h4>\n\n<blockquote><h2 dir=\"auto\">\n<a href=\"https://bounce.depfu.com/github.com/npm/node-semver/compare/v7.7.1...v7.7.2\">7.7.2</a> (2025-05-12)</h2>\n<h3 dir=\"auto\">Bug Fixes</h3>\n<ul dir=\"auto\">\n<li>\n<a href=\"https://bounce.depfu.com/github.com/npm/node-semver/commit/fcafb61ed566ff8ccf24818dd94b76738f037aa4\"><code class=\"notranslate\">fcafb61</code></a> <a href=\"https://bounce.depfu.com/github.com/npm/node-semver/pull/780\">#780</a> add missing <code class=\"notranslate\">'use strict'</code> directives (<a href=\"https://bounce.depfu.com/github.com/npm/node-semver/pull/780\">#780</a>) (<a href=\"https://bounce.depfu.com/github.com/Fdawgs\">@Fdawgs</a>)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/npm/node-semver/commit/c99f336fa3bdff465652f9041eab2127d2f52eb2\"><code class=\"notranslate\">c99f336</code></a> <a href=\"https://bounce.depfu.com/github.com/npm/node-semver/pull/781\">#781</a> prerelease identifier starting with digits (<a href=\"https://bounce.depfu.com/github.com/npm/node-semver/pull/781\">#781</a>) (<a href=\"https://bounce.depfu.com/github.com/mbtools\">@mbtools</a>)</li>\n</ul>\n<h3 dir=\"auto\">Chores</h3>\n<ul dir=\"auto\">\n<li>\n<a href=\"https://bounce.depfu.com/github.com/npm/node-semver/commit/c760403b935d3ad35f83e9bbe5ebe1badef2fc71\"><code class=\"notranslate\">c760403</code></a> <a href=\"https://bounce.depfu.com/github.com/npm/node-semver/pull/784\">#784</a> template-oss-apply for workflow permissions (<a href=\"https://bounce.depfu.com/github.com/npm/node-semver/pull/784\">#784</a>) (<a href=\"https://bounce.depfu.com/github.com/wraithgar\">@wraithgar</a>)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/npm/node-semver/commit/2677f2a88334b0e728dbfe9ad9f5f57458437c87\"><code class=\"notranslate\">2677f2a</code></a> <a href=\"https://bounce.depfu.com/github.com/npm/node-semver/pull/778\">#778</a> bump @npmcli/template-oss from 4.23.6 to 4.24.3 (<a href=\"https://bounce.depfu.com/github.com/npm/node-semver/pull/778\">#778</a>) (<a href=\"https://bounce.depfu.com/github.com/dependabot\">@dependabot</a>[bot], <a href=\"https://bounce.depfu.com/github.com/npm-cli-bot\">@npm-cli-bot</a>)</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/semver/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/npm/node-semver/compare/30c438bb46c74f319aa8783f96d233ebf5f4a90d...281055e7716ef0415a8826972471331989ede58c\">See the full diff on Github</a>. The new version differs by 6 commits:</p>\n<ul>\n<li><a href=\"https://github.com/npm/node-semver/commit/281055e7716ef0415a8826972471331989ede58c\"><code>chore: release 7.7.2 (#783)</code></a></li>\n<li><a href=\"https://github.com/npm/node-semver/commit/fcafb61ed566ff8ccf24818dd94b76738f037aa4\"><code>fix: add missing `&#39;use strict&#39;` directives (#780)</code></a></li>\n<li><a href=\"https://github.com/npm/node-semver/commit/c760403b935d3ad35f83e9bbe5ebe1badef2fc71\"><code>chore: template-oss-apply for workflow permissions (#784)</code></a></li>\n<li><a href=\"https://github.com/npm/node-semver/commit/c99f336fa3bdff465652f9041eab2127d2f52eb2\"><code>fix: prerelease identifier starting with digits (#781)</code></a></li>\n<li><a href=\"https://github.com/npm/node-semver/commit/2677f2a88334b0e728dbfe9ad9f5f57458437c87\"><code>chore: bump @npmcli/template-oss from 4.23.6 to 4.24.3 (#778)</code></a></li>\n<li><a href=\"https://github.com/npm/node-semver/commit/0b98655dbc1a9eb79370ed80f557be98d1c06587\"><code>chore: bump @npmcli/template-oss from 4.23.4 to 4.23.6 (#760)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@‚Äãdepfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@‚Äãdepfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@‚Äãdepfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@‚Äãdepfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@‚Äãdepfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@‚Äãdepfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@‚Äãdepfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@‚Äãdepfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@‚Äãdepfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18084","RelatedDescription":"Closed or merged PR \"Update semver 7.7.1 ‚Üí 7.7.2 (patch)\" (#18084)"},{"Id":"3073813847","IsPullRequest":false,"CreatedAt":"2025-05-19T15:28:10","Actor":"vincent7128","Number":"18082","RawContent":null,"Title":"@tailwindcss/postcss 4.1.6 with @parcel/transformer-postcss: Cannot read properties of undefined (reading 'input')","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\ntailwindcss: 4.1.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nparcel 2.15.1\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What browser are you using?**\n\nSafari\n\n**What operating system are you using?**\n\nmacOS\n\n**Describe your issue**\n\n```\n{\n  \"name\": \"test\",\n  \"version\": \"0.0.0\",\n  \"source\": \"src/index.html\",\n  \"scripts\": {\n    \"start\": \"parcel\",\n    \"build\": \"parcel build\"\n  },\n  \"staticFiles\": {\n    \"staticPath\": \"src/img\",\n    \"distDir\": \"dist/img\"\n  },\n  \"devDependencies\": {\n    \"@tailwindcss/postcss\": \"4.1.6\",\n    \"parcel\": \"^2.15.1\",\n    \"parcel-reporter-static-files-copy\": \"^1.5.3\",\n    \"tailwindcss\": \"^4.1.7\"\n  }\n}\n```\n\nWhen use over @tailwindcss/postcss 4.1.5, run npm start I got follow message:\n\n```\nüö® Build failed.\n\n@parcel/transformer-postcss: Cannot read properties of undefined (reading 'input')\n\n  TypeError: Cannot read properties of undefined (reading 'input')\n      at Comment.toJSON (/package/node_modules/postcss/lib/node.js:387:40)\n      at /package/node_modules/postcss/lib/node.js:379:22\n      at Array.map (<anonymous>)\n      at Root.toJSON (/package/node_modules/postcss/lib/node.js:377:29)\n      at Object.transform (/package/node_modules/@parcel/transformer-postcss/lib/PostCSSTransformer.js:244:21)\n      at async Transformation.runTransformer (/package/node_modules/@parcel/core/lib/Transformation.js:486:5)\n      at async Transformation.runPipeline (/package/node_modules/@parcel/core/lib/Transformation.js:303:36)\n      at async Transformation.runPipelines (/package/node_modules/@parcel/core/lib/Transformation.js:215:16)\n      at async Transformation.runPipelines (/package/node_modules/@parcel/core/lib/Transformation.js:245:34)\n      at async Transformation.run (/package/node_modules/@parcel/core/lib/Transformation.js:143:21)\n```\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18082","RelatedDescription":"Closed issue \"@tailwindcss/postcss 4.1.6 with @parcel/transformer-postcss: Cannot read properties of undefined (reading 'input')\" (#18082)"},{"Id":"3074032574","IsPullRequest":true,"CreatedAt":"2025-05-19T15:28:09","Actor":"thecrypticace","Number":"18083","RawContent":null,"Title":"Fix PostCSS crash when using toJSON()","State":"closed","Body":"When I added source maps to PostCSS I mistakenly assumed that `.source` on a node could be `undefined`. The comment above the property in PostCSS says that `source` can be `undefined` but this is a commentary on the value upon **access** not its expected value on **write**:\r\n\r\n```ts\r\ndeclare abstract class Node_ {\r\n  /**\r\n   * ‚Ä¶\r\n   *\r\n   * The nodes that are created manually using the public APIs\r\n   * provided by PostCSS will have `source` undefined and\r\n   * will be absent in the source map.\r\n   *\r\n   * ‚Ä¶\r\n   */\r\n  source?: Node.Source\r\n}\r\n```\r\n\r\nRather, what these types mean is that *if the property exists* it must be defined. But otherwise the property can be missing if a node has no source location metadata. This generally wasn't a problem with the string-returning APIs but the `toJSON()` API in PostCSS expects that `source` is defined if present. This caused a crash because our license comment doesn't have a source location.\r\n\r\nI've addressed this by deleting the `source` property from the node if source location data is not available.\r\n\r\nFixes #18082\r\n\r\nref https://github.com/parcel-bundler/parcel/issues/10161","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18083","RelatedDescription":"Closed or merged PR \"Fix PostCSS crash when using toJSON()\" (#18083)"},{"Id":"3069959429","IsPullRequest":false,"CreatedAt":"2025-05-19T15:09:32","Actor":"Aurailus","Number":"18067","RawContent":null,"Title":"[V4] Regression in ability to order custom variants with built-in ones?","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.1.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nWebpack 5.96.1 + PostCSS 8.4.48\n\n**What version of Node.js are you using?**\n\nv20.18.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nArch Linux\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/UBrKdpd6MD?file=css\n\n**Describe your issue**\n\nIn Tailwind V3, it was possible to re-declare built-in variants (e.g. active:) so that they take priority over custom variants that should have lower precedence. In Tailwind V4, this doesn't seem to be possible, which severely messes with the ability to make custom \"shorthand\" variants for focus and hover states (hocus:) without losing the ability to also have active: or disabled: or any of the builtin variants take precedence. I posted about this in this [discussion](https://github.com/tailwindlabs/tailwindcss/discussions/17860) but I didn't get any response. Is there a way to work around this in V4, or is this just a regression?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18067","RelatedDescription":"Closed issue \"[V4] Regression in ability to order custom variants with built-in ones?\" (#18067)"},{"Id":"3070244175","IsPullRequest":true,"CreatedAt":"2025-05-19T15:09:01","Actor":"Aurailus","Number":"18070","RawContent":null,"Title":"Allow `@custom-variant` to redefine built-in variants with proper `order`.","State":"closed","Body":"## Summary\r\n\r\nAdds an \"override\" property to the object bag passed to `Variants.static` which forces a variant to get a new `order` even if it has already been defined. This property is set in `index.ts:399` for the `@custom-variant` rule to allow custom variants to redefine existing variants like `active:` and have them be properly ordered relative to other custom variants, a.l.a tailwind v3. See #18067 for the motivating regression.\r\n\r\n## Test plan\r\n\r\nTested using the playground directory. This is a very insignificant (~17 LOC) change which I don't expect to cause many new issues. I can add more robust testing if necessary, just let me know.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18070","RelatedDescription":"Closed or merged PR \"Allow `@custom-variant` to redefine built-in variants with proper `order`.\" (#18070)"},{"Id":"3070040350","IsPullRequest":true,"CreatedAt":"2025-05-19T14:41:41","Actor":"RobinMalfait","Number":"18068","RawContent":null,"Title":"Improve performance of upgrade tool","State":"closed","Body":"This PR improves the performance of the upgrade tool due to a regression introduced by https://github.com/tailwindlabs/tailwindcss/pull/18057\n\nEssentially, we had to make sure that we are not in `<style>‚Ä¶</style>` tags because we don't want to migrate declarations in there such as `flex-shrink: 0;`\n\nThe issue with this approach is that we checked _before_ the candidate if a `<style` cold be found and if we found an `</style>` tag after the candidate.\n\nWe would basically do this check for every candidate that matches.\n\nRunning this on our Tailwind UI codebase, this resulted in a bit of a slowdown:\n\n```diff\n- Before: ~13s\n+  After: ~5m 39s\n```\n\n... quite the difference.\n\nThis is because we have a snapshot file that contains ~650k lines of code. Looking for `<style>` and `</style>` tags in a file that large is expensive, especially if we do it a lot.\n\nI ran some numbers and that file contains ~1.8 million candidates.\n\nAnyway, this PR fixes that by doing a few things:\n\n1. We will compute the `<style>` and `</style>` tag positions only once per file and cache it. This allows us to re-use this work for every candidate that needs it.\n2. We track the positions, which means that we can simply check if a candidate's location is within any of 2 start and end tags. If so, we skip it.\n\nRunning the numbers now gets us to:\n\n```diff\n- Before: ~5m 39s\n+  After: ~9s\n```\n\nMuch better!\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18068","RelatedDescription":"Closed or merged PR \"Improve performance of upgrade tool\" (#18068)"},{"Id":"3073558567","IsPullRequest":false,"CreatedAt":"2025-05-19T11:58:00","Actor":"entrenadorhispano","Number":"18081","RawContent":null,"Title":"Tailwind 4.1 oklch colors don't work on old safary if decimal is provided instead of percentage.","State":"closed","Body":"**Subtle bug using safari 15.8**\nTailwind 4.1 oklch colors don't work on old safary if decimal is provided instead of percentage.\n\noklch(70% 0.15 162) This will work ‚úÖ\noklch(0.70 0.15 162) This won't ‚ùå\n\n**System**\nUsing Vite (svelte) + Tailwind 4.1.7 + node 22.14\n\n**Reproduction sample:**\nhttps://play.tailwindcss.com/fPW5BsNPNT\n\n**Note**\nUsing decimal for lightness oklch(0.70 0.15 162) works on safari 15.8 plain css... So its seems to be a tailwind bug.\n\nThanks fort the support!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18081","RelatedDescription":"Closed issue \"Tailwind 4.1 oklch colors don't work on old safary if decimal is provided instead of percentage.\" (#18081)"},{"Id":"3069777041","IsPullRequest":true,"CreatedAt":"2025-05-19T10:47:09","Actor":"RobinMalfait","Number":"18065","RawContent":null,"Title":"Improve `@tailwindcss/upgrade` and `pnpm` workspaces support","State":"closed","Body":"This PR fixes an issue where an error such as:\r\n\r\n<img width=\"1702\" alt=\"image\" src=\"https://github.com/user-attachments/assets/4e6f75c7-3182-4497-939e-96cff08c55ae\" />\r\n\r\nWill be thrown during the upgrade process. This can happen when you are using `pnpm` and your CSS file includes a `@import \"tailwindcss\";`. In this scenario, `tailwindcss` will be loaded from a shared `.pnpm` folder outside of the current working directory.\r\n\r\nIn this case, we are also not interested in migrating _that_ file, but we also don't want the upgrade process to just crash.\r\n\r\nI didn't see an option to ignore errors like this, so wrapped it in a try/catch instead.\r\n\r\nIt also fixes another issue where if you are using a pnpm workspace and run the upgrade tool from the root, then it throws you an error that you cannot add dependencies to the workspace root unless `-w` or `--workspace-root` flags are passed.\r\n\r\nFor this, we disable the check entirely using the `--ignore-workspace-root-check` flag. If we always used the `--workspace-root` flag, then the dependencies would always be added to the root, regardless of where you are running the script from which is not what we want. \r\n\r\n## Test plan\r\n\r\nBefore:\r\n\r\n<img width=\"1816\" alt=\"image\" src=\"https://github.com/user-attachments/assets/78246876-3eb6-4539-a557-d3d366f1b3a3\" />\r\n\r\nAfter:\r\n\r\n<img width=\"1816\" alt=\"image\" src=\"https://github.com/user-attachments/assets/a65e4421-d7c5-4d83-b35d-934708543e25\" />\r\n\r\nBefore:\r\n \r\n<img width=\"1816\" alt=\"image\" src=\"https://github.com/user-attachments/assets/53772661-2c4a-4212-84d9-a556a0ad320f\" />\r\n\r\nAfter:\r\n\r\n<img width=\"1816\" alt=\"image\" src=\"https://github.com/user-attachments/assets/5bfaf20e-34b8-44fd-9b59-e72d36738879\" />\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18065","RelatedDescription":"Closed or merged PR \"Improve `@tailwindcss/upgrade` and `pnpm` workspaces support\" (#18065)"},{"Id":"3071840941","IsPullRequest":false,"CreatedAt":"2025-05-18T14:52:23","Actor":"marcospgp","Number":"18079","RawContent":null,"Title":"sizing utilities using --spacing variables instead of --container","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n`\"^4.1.7\",`\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nbun 1.2.13+64ed68c9e\n\n**What version of Node.js are you using?**\n\nbun 1.2.13+64ed68c9e\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nwindows\n\n**Reproduction URL**\n\nn/a\n\n**Describe your issue**\n\nusing utilities like `size-xl` or `max-w-md` should rely on sizing variables with the `--container` prefix as per docs (such as `--container-xl`), but they instead use `--spacing` variables\n\n![Image](https://github.com/user-attachments/assets/063f8312-aa7b-4766-9dd4-0d491d318ccb)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18079","RelatedDescription":"Closed issue \"sizing utilities using --spacing variables instead of --container\" (#18079)"},{"Id":"3068569156","IsPullRequest":false,"CreatedAt":"2025-05-17T12:24:07","Actor":"ppo","Number":"18055","RawContent":null,"Title":"Astro site failing after upgrading Tailwind v3 to v4 ‚Äì Tailwind not loaded/initialized?","State":"closed","Body":"- Tailwind CSS: v4.1.7\n- Node: v22.15.0\n- OS: macOS 15.4.1\n- **dependencies:**\n    - astro 5.7.13\n    - @tailwindcss/vite 4.1.7\n- **devDependencies:**\n    - @tailwindcss/postcss 4.1.7\n    - @tailwindcss/typography 0.5.16\n\n**Describe your issue**\n\nI had an Astro site (v5.0.9) that was working fine using Tailwind v3.4.16 (and @astrojs/tailwind v5.1.3), with this in `tailwind.config.mjs`: \n```js\n  theme: {\n    extend: {\n      colors: {\n        background: '#fafafa',\n        text: '#333',\n        primary: '#1e88e5',\n        accent: '#7cb342',\n      },\n```\n\nI upgraded the project with `pnpm up --latest` and modifying the code according to [Astro's Upgrade from Tailwind 3](https://docs.astro.build/en/guides/styling/#upgrade-from-tailwind-3). Basically:\nIn `astro.config.mjs`:\n```js\nimport tailwind from '@tailwindcss/vite';\nexport default defineConfig({\n‚Ä¶\n  vite: {\n    plugins: [tailwind()],\n  },\n‚Ä¶\n```\n\nIn `global.css`:\n```css\n@import \"tailwindcss\";\n```\n\nAstro shows this error `Cannot apply unknown utility class: XXX` where XXX was things like `text-text`, `text-primary`, etc. I removed all these one after the other and then had that error with `px-4`, so it's deeper than just my theme configuration.  \nI reverted these changes and tried your upgrade tool but it's crashing for apparently the same reason‚Ä¶\n\n```shell\nnpx @tailwindcss/upgrade\n‚âà tailwindcss v4.1.7\n\n‚îÇ Searching for CSS files in the current directory and its subdirectories‚Ä¶\n\n‚îÇ Migrating stylesheets‚Ä¶\n\n‚îÇ ‚Ü≥ Cannot apply unknown utility class: bg-background in `./src/styles/global.css`\n\n‚îÇ ‚Ü≥ Migrated stylesheet: `./src/styles/global.css`\n\n‚îÇ Updating dependencies‚Ä¶\n\n‚îÇ ‚Ü≥ Updated package: `tailwindcss`\n\n‚îÇ ‚Ü≥ Updated package: `@tailwindcss/postcss`\n\n‚îÇ ‚Ü≥ Updated package: `@tailwindcss/vite`\n\n‚îÇ Migrating templates‚Ä¶\n\nError: Cannot apply unknown utility class: bg-background\n    at onInvalidCandidate (file:///Users/xxx/.npm/_npx/234afcd4ab2f5775/node_modules/tailwindcss/dist/chunk-U7LQKMN6.mjs:18:410)\n    at de (file:///Users/xxx/.npm/_npx/234afcd4ab2f5775/node_modules/tailwindcss/dist/chunk-U7LQKMN6.mjs:13:29803)\n    at file:///Users/xxx/.npm/_npx/234afcd4ab2f5775/node_modules/tailwindcss/dist/chunk-U7LQKMN6.mjs:18:373\n    at D (file:///Users/xxx/.npm/_npx/234afcd4ab2f5775/node_modules/tailwindcss/dist/chunk-U7LQKMN6.mjs:3:1655)\n    at Oe (file:///Users/xxx/.npm/_npx/234afcd4ab2f5775/node_modules/tailwindcss/dist/chunk-U7LQKMN6.mjs:18:172)\n    at Qr (file:///Users/xxx/.npm/_npx/234afcd4ab2f5775/node_modules/tailwindcss/dist/chunk-U7LQKMN6.mjs:35:828)\n    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at async pn (file:///Users/xxx/.npm/_npx/234afcd4ab2f5775/node_modules/tailwindcss/dist/chunk-U7LQKMN6.mjs:35:1123)\n    at async Ca (file:///Users/xxx/.npm/_npx/234afcd4ab2f5775/node_modules/@tailwindcss/node/dist/index.mjs:10:3358)\n    at async xs (file:///Users/xxx/.npm/_npx/234afcd4ab2f5775/node_modules/@tailwindcss/upgrade/dist/index.mjs:249:12967)\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18055","RelatedDescription":"Closed issue \"Astro site failing after upgrading Tailwind v3 to v4 ‚Äì Tailwind not loaded/initialized?\" (#18055)"},{"Id":"3070576704","IsPullRequest":false,"CreatedAt":"2025-05-17T09:48:14","Actor":"PhotonQuantum","Number":"18072","RawContent":null,"Title":"Custom font doesn't work with css var","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.1.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nN.A\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What browser are you using?**\n\nFirefox\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/Wqb57TyO7w\n\n**Describe your issue**\n\nAs you can see in the example, only `--font-mono` is correctly set as the provided CSS variable, while `--default-mono-font-family` is not.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18072","RelatedDescription":"Closed issue \"Custom font doesn't work with css var\" (#18072)"},{"Id":"3070557574","IsPullRequest":false,"CreatedAt":"2025-05-17T08:24:37","Actor":"PhotonQuantum","Number":"18071","RawContent":null,"Title":"Markdown class directive syntax not supported","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nN/A\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://github.com/PhotonQuantum/tailwind-mdx-repro\n\n```shell\npnpx @tailwindcss/cli -i global.css -o output.css\n```\n\n**Describe your issue**\n\nClass names in [markdown generic directives](https://talk.commonmark.org/t/generic-directives-plugins-syntax/444) (e.g. `:span[Some Text]{.text-gray-500}`) are not extracted. This proposal is adopted by plugins like https://github.com/remarkjs/remark-directive.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18071","RelatedDescription":"Open issue \"Markdown class directive syntax not supported\" (#18071)"},{"Id":"3069455002","IsPullRequest":false,"CreatedAt":"2025-05-16T16:45:10","Actor":"spiess-demos","Number":"18062","RawContent":null,"Title":"@source glob wildcard ** does not discover files with same child folder name as parent folder","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.1.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nDoes not matter, occurs with Webpack/postcss-loader as well as Vite.\n\n**What version of Node.js are you using?**\n\nv20.19.1\n\n**What browser are you using?**\n\nChrome 134.0.6998.165\n\n**What operating system are you using?**\n\nDebian GNU/Linux trixie/sid Kernel 6.12.12-amd64\n\n**Reproduction URL**\n\nhttps://stackblitz.com/edit/vitejs-vite-xzdvwn3v?file=src%2Fstyle.css\nThe stackblitz seems to work in a recent Google Chrome, however Firefox throsw lots of errors (not related to my things, i suppose).\n\n**Describe your issue**\n\nIn a rather large monorepo, we have recently migrated to Tailwind 4 and came across an issue with how `@source` resolves certain globs. We disable auto detection with `source(none)`, to speed things up, and then add certain folders to discover markup using grep syntax. However if a folder happens to contain a folder with the same name, the `**` wildcard cannot be used to target the source files.\n\nThe style.css file:\n\n```\n@import 'tailwindcss' source(none);\n\n/*\n  This does not work - .bg-black-500 can not be found in the final css file.\n  Issue seems to occur when the ** glob wildcard is used in a situation \n  where a child folder is named the same as a parent folder within the glob string.\n*/\n@source 'addon/path/addon/**/*.html';\n\n/*\n  This works - .bg-green-500 can be found in the final css file.\n  Issue seems to occur only with similar folder names.\n*/\n@source 'addon/path/otherAddon/**/*.html';\n\n/* \n  This works - .bg-cyan-500 can be found in the final css file.\n  Specifying a path without the ** wildcard seems to work even with\n  child folders with the same name as a parant folder.\n*/\n@source 'addon/path/addon/component/*.html';\n```\n\nFolder structure:\n```\nsrc\n  /addon\n    /path\n      /addon\n        /component\n        /otherComponent\n      /otherAddon\n        /component\n```\n\nWith the above `@source` configuration, markup in addon should be discovered as well as in otherAddon. However this is not the case, content in addon (which repeats the name of the outermost addon folder) is only discovered if no `**` wildcard is used to target it.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18062","RelatedDescription":"Closed issue \"@source glob wildcard ** does not discover files with same child folder name as parent folder\" (#18062)"},{"Id":"3069143791","IsPullRequest":false,"CreatedAt":"2025-05-16T14:37:37","Actor":"AiSirachcha21","Number":"18060","RawContent":null,"Title":"`--sizing-*` is not allowed to be used when generating functional utilities","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.1.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNo build tool, using distributed CSS file directly.\n\n**What version of Node.js are you using?**\n\nv22.12.0\n\n**What browser are you using?**\n\nFirefox 138.0.3\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\nhttps://play.tailwindcss.com/fAp6k8fj6E?file=css\n\n**Describe your issue**\nI am attempting to create a utility similar to `size-{--spacing-*}` (ex: `size-4`, `size-8` etc.) but with `min-width` and `min-height` named `min-size-xx` (xx being the value)\n \nI have created multiple functional utilities with v4.1.7 before but for some reason the `--spacing-*` utility is not allowed to be added into the `--value()` function.\n\nIt works when I use `--text-*`, `--leading-*` etc etc.\n\nWhen attempting to use this and build it via the `tailwindcss` script it errors out saying\n\n```bash\nError: Cannot apply unknown utility class: min-size-4\n```\n\nThe script I'm executing via `yarn` is\n\n```bash\ntailwindcss -i ./path/to/file.css -o ./path/to/file.dist.css\n```\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18060","RelatedDescription":"Closed issue \"`--sizing-*` is not allowed to be used when generating functional utilities\" (#18060)"},{"Id":"3068907869","IsPullRequest":true,"CreatedAt":"2025-05-16T12:43:55","Actor":"RobinMalfait","Number":"18059","RawContent":null,"Title":"Improve error messages when `@apply` fails","State":"open","Body":"This PR improves error messages when `@apply` fails. Right now it gives you a generic error message that you cannot apply a certain utility.\r\n\r\n```css\r\n.foo {\r\n  @apply bg-red-500;\r\n}\r\n```\r\n\r\nWould result in:\r\n```\r\nCannot apply unknown utility class: bg-red-500\r\n```\r\n\r\nHowever, there are some situations where we can give you more context about what's happening.\r\n\r\n### Missing `@import \"tailwindcss\"` or `@reference`\r\n\r\nIf you are in a Vue file for example, and you have the following code:\r\n```vue\r\n<template>\r\n  <div class=\"foo\"></div>\r\n</template>\r\n\r\n<style>\r\n.foo {\r\n  @apply bg-red-500;\r\n}\r\n</style>\r\n```\r\n\r\nThen this will now result in:\r\n```\r\nCannot apply unknown utility class: `bg-red-500`.\r\nIt looks like you are missing a `@reference \"app.css\"` or `@import \"tailwindcss\";`\r\n```\r\n\r\nWe do this by checking if we found a `@tailwind utilities` or `@reference`. If not, we throw this more specific error.\r\n\r\n### Explicitly excluded classes via `@source not inline('‚Ä¶')`\r\n\r\nOr via the legacy `blocklist` from a JS config.\r\n\r\nIf you then have the following file:\r\n```css\r\n@import \"tailwindcss\";\r\n\r\n@source not inline('bg-white');\r\n\r\n.foo {\r\n  @apply bg-white;\r\n}\r\n```\r\n\r\nThen this will now result in:\r\n```\r\nCannot apply `bg-white`, it seems like the utility was explicitly excluded and cannot be applied.\r\n\r\nMore info: https://tailwindcss.com/docs/detecting-classes-in-source-files#explicitly-excluding-classes\r\n```\r\n\r\nWe do this by checking if the class was marked as invalid.\r\n\r\n### Applying unprefixed class in prefix mode\r\n\r\nIf you have the prefix option configured, but you are applying a non-prefixed class, then we will show the following error:\r\n\r\nGiven this input:\r\n```css\r\n@import \"tailwindcss\" prefix(tw);\r\n\r\n.foo {\r\n  @apply underline;\r\n}\r\n```\r\n\r\n\r\nThe following error is thrown:\r\n```\r\nCannot apply unprefixed utility class: `underline`, did you mean `tw:underline`?\r\n```\r\n\r\n## Test plan\r\n\r\n1. Everything behaves the same, but the error messages give more details.\r\n2. Updated tests with new error messages\r\n3. Added new unit tests to verify the various scenarios\r\n4. Added a Vue specific integration test with a `<style>‚Ä¶</style>` block using `@apply`","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18059","RelatedDescription":"Open PR \"Improve error messages when `@apply` fails\" (#18059)"},{"Id":"3068617299","IsPullRequest":true,"CreatedAt":"2025-05-16T10:53:35","Actor":"RobinMalfait","Number":"18057","RawContent":null,"Title":"Do not migrate declarations in `<style>` blocks","State":"closed","Body":"This PR improves the upgrade tool by making sure that we don't migrate CSS declarations in `<style>‚Ä¶</style>` blocks.\n\nWe do this by making sure that:\n\n1. We detect a declaration, the current heuristic is that the candidate is:\n   - Preceded by whitespace\n   - Followed by a colon and whitespace\n\n   ```html\n   <style>\n   .foo {\n       flex-shrink: 0;\n      ^           ^^\n   }\n   </style>\n   ```\n\n2. We are in a `<style>‚Ä¶</style>` block\n\n   ```html\n   <style>\n   ^^^^^^\n   .foo {\n       flex-shrink: 0;\n   }\n   </style>\n   ^^^^^^^^\n   ```\n\nThe reason we have these 2 checks is because just relying on the first heuristic alone, also means that we will not be migrating keys in JS objects, because they typically follow the same structure:\n\n```js\nlet classes = {\n flex: 0,\n^    ^^\n}\n```\n\nAnother important thing to note is that we can't just ignore anything in between `<style>‚Ä¶</style>` blocks, because you could still be using `@apply` that we _do_ want to migrate.\n\nLast but not least, the first heuristics is not perfect either. If you are writing minified CSS then this will likely fail if there is no whitespace around the candidate.\n\nBut my current assumption is that nobody should be writing minified CSS, and minified CSS will very likely be generated and gitignored. In either situation, replacements in minified CSS will not be any worse than it is today.\n\nI'm open to suggestions for better heuristics.\n\n## Test plan\n\n1. Added an integration test that verifies that we do migrate `@apply` and don't migrate the `flex-shrink: 0;` declaration.\n\n\nFixes: #17975\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18057","RelatedDescription":"Closed or merged PR \"Do not migrate declarations in `<style>` blocks\" (#18057)"},{"Id":"3068601158","IsPullRequest":true,"CreatedAt":"2025-05-16T10:21:37","Actor":"philipp-spiess","Number":"18056","RawContent":null,"Title":"Proposal: Allow overwriting static utilities that have a namespace","State":"open","Body":"This PR attempts to move static utilities that are overwriteable by a theme value to be a fallback rather than a conflicting implementation. The idea is to allow a theme value to take presedence over that static utility _and cause it not to generate_.\r\n\r\nFor example, when overwriting the `--radius-full` variant, it should ensure that the default `rounded-full` no longer emits the `calc(infinity * 1px)` declaration:\r\n\r\n```ts\r\nexpect(\r\n  await compileCss(\r\n    css`\r\n      @theme {\r\n        --radius-full: 99999px;\r\n      }\r\n      @tailwind utilities;\r\n    `,\r\n    ['rounded-full'],\r\n  ),\r\n).toMatchInlineSnapshot(`\r\n  \":root, :host {\r\n    --radius-full: 99999px;\r\n  }\r\n\r\n  .rounded-full {\r\n    border-radius: var(--radius-full);\r\n  }\"\r\n`)\r\n```\r\n\r\nThis allows anyone who wants `--radius-full` to be a CSS variable to simply define it in their theme:\r\n\r\n```css\r\n@theme {\r\n  /* Make `--radius-full` a CSS variable without the utility generating two CSS classes */\r\n  --radius-full: calc(infinity * 1px);\r\n}\r\n```\r\n\r\nThe idea is to extend this pattern across all functional utilities that also have static utilities that can collide with the namespace. This gives users more control over what they want as CSS variables when the defaults don't work for them, allowing them to resolve #16639 and #15115 in user space.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18056","RelatedDescription":"Open PR \"Proposal: Allow overwriting static utilities that have a namespace\" (#18056)"},{"Id":"3068454237","IsPullRequest":false,"CreatedAt":"2025-05-16T09:22:21","Actor":"alexkiro","Number":"18053","RawContent":null,"Title":"Upgrade to v4 doesn't work: Cannot apply unknown utility class: bg-opacity-50","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv3.4.10 -> v4.1.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n- postcss 8.5.3\n- vite 6.3.5\n\n**What version of Node.js are you using?**\n\nv22.11.0\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nLinux\n\n**Describe your issue**\n\nProject cannot be migrated \n\n```\n$ npx @tailwindcss/upgrade --force\n\n‚âà tailwindcss v4.1.7\n\n‚îÇ Searching for CSS files in the current directory and its subdirectories‚Ä¶ \n\n‚îÇ ‚Ü≥ Linked `./tailwind.config.js` to `./src/styles/main.css` \n\n‚îÇ Migrating JavaScript configuration files‚Ä¶ \n\n‚îÇ ‚Ü≥ The configuration file at `./tailwind.config.js` could not be automatically migrated to the new CSS configuration format, so your CSS has been updated to load your existing \n‚îÇ   configuration file. \n\n‚îÇ Migrating stylesheets‚Ä¶ \n\n‚îÇ ‚Ü≥ Migrated stylesheet: `./src/styles/main.css` \n\n‚îÇ Updating dependencies‚Ä¶ \n\n‚îÇ ‚Ü≥ Updated package: `tailwindcss` \n\n‚îÇ Migrating templates‚Ä¶ \n\nError: Cannot apply unknown utility class: bg-opacity-50\n    at onInvalidCandidate (file:///home/kiro/.npm/_npx/234afcd4ab2f5775/node_modules/tailwindcss/dist/chunk-U7LQKMN6.mjs:18:410)\n    at de (file:///home/kiro/.npm/_npx/234afcd4ab2f5775/node_modules/tailwindcss/dist/chunk-U7LQKMN6.mjs:13:29803)\n    at file:///home/kiro/.npm/_npx/234afcd4ab2f5775/node_modules/tailwindcss/dist/chunk-U7LQKMN6.mjs:18:373\n    at D (file:///home/kiro/.npm/_npx/234afcd4ab2f5775/node_modules/tailwindcss/dist/chunk-U7LQKMN6.mjs:3:1655)\n    at Oe (file:///home/kiro/.npm/_npx/234afcd4ab2f5775/node_modules/tailwindcss/dist/chunk-U7LQKMN6.mjs:18:172)\n    at Qr (file:///home/kiro/.npm/_npx/234afcd4ab2f5775/node_modules/tailwindcss/dist/chunk-U7LQKMN6.mjs:35:828)\n    at async pn (file:///home/kiro/.npm/_npx/234afcd4ab2f5775/node_modules/tailwindcss/dist/chunk-U7LQKMN6.mjs:35:1123)\n    at async Ca (file:///home/kiro/.npm/_npx/234afcd4ab2f5775/node_modules/@tailwindcss/node/dist/index.mjs:10:3358)\n    at async xs (file:///home/kiro/.npm/_npx/234afcd4ab2f5775/node_modules/@tailwindcss/upgrade/dist/index.mjs:249:12967)\n```\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18053","RelatedDescription":"Closed issue \"Upgrade to v4 doesn't work: Cannot apply unknown utility class: bg-opacity-50\" (#18053)"},{"Id":"3068091055","IsPullRequest":false,"CreatedAt":"2025-05-16T06:54:48","Actor":"skttl","Number":"18050","RawContent":null,"Title":"`in-open` doesn't work in nested scenarios","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\n4.1.7\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nTailwind Play\n\n**What version of Node.js are you using?**\n\nwhatever Tailwind Play does\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/Z9z8fdBjse\n\n**Describe your issue**\n\nWhen nesting details elements, the `is-open` variant is not useful, as it matches with the outer details element. See the play link, where I have some text that displays whether or not the details element is open. When opening the outer one, the inner displays as open too.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18050","RelatedDescription":"Closed issue \"`in-open` doesn't work in nested scenarios\" (#18050)"},{"Id":"3067064029","IsPullRequest":false,"CreatedAt":"2025-05-15T18:22:04","Actor":"KonstantinVlasov","Number":"18047","RawContent":null,"Title":"Responsive modifiers for components not working in tailwind 4","State":"closed","Body":"**What version of Tailwind CSS are you using?**\nv4.1.7\n\n**Describe your issue**\nHi! Thank you for your big work with tailwind 4.\n\nWe have a problem with responsive modifiers for our components using tailwind 4.\nExample usage: `<div class=\"button is-small sm:is-big\">example</div>`\n\nWith tailwind 3 it's very easy to implement:\n\n```\n@layer components {\n    .button {\n        @apply h-10;\n        &.is-small { @apply h-8; }\n        &.is-big { @apply h-12; }\n    }\n}\n```\n\nHow we can achive this using tailwind 4? `@utility` don't working as expected\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18047","RelatedDescription":"Closed issue \"Responsive modifiers for components not working in tailwind 4\" (#18047)"},{"Id":"3066733380","IsPullRequest":true,"CreatedAt":"2025-05-15T16:12:52","Actor":"depfu[bot]","Number":"18046","RawContent":null,"Title":"Update all of nextjs 15.3.1 ‚Üí 15.3.2 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n\n\n\n#### ‚ú≥Ô∏è eslint-config-next (15.3.1 ‚Üí 15.3.2)\n\n\n\n\n\nSorry, we couldn't find anything useful about this release.\n\n\n\n#### ‚ú≥Ô∏è next (15.3.1 ‚Üí 15.3.2) ¬∑ [Repo](https://github.com/vercel/next.js)\n\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/vercel/next.js/releases/tag/v15.3.2\">15.3.2</a></h4>\n\n<blockquote><div class=\"markdown-alert markdown-alert-note\" dir=\"auto\">\n<p class=\"markdown-alert-title\" dir=\"auto\"><svg class=\"octicon octicon-info mr-2\" viewbox=\"0 0 16 16\" version=\"1.1\" width=\"16\" height=\"16\" aria-hidden=\"true\"><path d=\"M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8Zm8-6.5a6.5 6.5 0 1 0 0 13 6.5 6.5 0 0 0 0-13ZM6.5 7.75A.75.75 0 0 1 7.25 7h1a.75.75 0 0 1 .75.75v2.75h.25a.75.75 0 0 1 0 1.5h-2a.75.75 0 0 1 0-1.5h.25v-2h-.25a.75.75 0 0 1-.75-.75ZM8 6a1 1 0 1 1 0-2 1 1 0 0 1 0 2Z\"></path></svg>Note</p>\n<p dir=\"auto\">This release is backporting bug fixes. It does <strong>not</strong> include all pending features/changes on canary.</p>\n</div>\n<h3 dir=\"auto\">Core Changes</h3>\n<ul dir=\"auto\">\n<li>backport: fix(turbopack): Store persistence of wrapped task on RawVc::LocalOutput (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/78488\">#78488</a>) (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/78883\">#78883</a>)</li>\n<li>@next/mdx: Use stable turbopack config options (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/78880\">#78880</a>)</li>\n<li>Fix react-compiler: Fix detection of interest (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/78879\">#78879</a>)</li>\n<li>Fix turbopack: Backport sourcemap bugfix (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/78881\">#78881</a>)</li>\n<li>[next-server] preserve rsc query for rsc redirects (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/78876\">#78876</a>)</li>\n<li>Update middleware public/static matching (<a href=\"https://bounce.depfu.com/github.com/vercel/next.js/pull/78875\">#78875</a>)</li>\n</ul>\n<h3 dir=\"auto\">Credits</h3>\n<p dir=\"auto\">Huge thanks to <a href=\"https://bounce.depfu.com/github.com/ijjk\">@ijjk</a>, <a href=\"https://bounce.depfu.com/github.com/huozhi\">@huozhi</a>, <a href=\"https://bounce.depfu.com/github.com/kdy1\">@kdy1</a>, <a href=\"https://bounce.depfu.com/github.com/wbinnssmith\">@wbinnssmith</a>, and <a href=\"https://bounce.depfu.com/github.com/bgw\">@bgw</a> for helping!</p></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/next/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/vercel/next.js/compare/fa536cf2c94475cecb7585680c5d96e35e00ba7b...d9ec4a4b573994c492a25497fdca4364e5fd5ee8\">See the full diff on Github</a>. The new version differs by 7 commits:</p>\n<ul>\n<li><a href=\"https://github.com/vercel/next.js/commit/d9ec4a4b573994c492a25497fdca4364e5fd5ee8\"><code>v15.3.2</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/3def5ff92b2d2b1d428c0a6ca7d390fa6c00f9d3\"><code>backport: fix(turbopack): Store persistence of wrapped task on RawVc::LocalOutput (#78488) (#78883)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/d0b2f8a8b875c36ab77b92aeffb78012a295d38f\"><code>@next/mdx: Use stable turbopack config options (#78880)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/04176decbefde629e2490751b984bdc48c19b96f\"><code>fix(react-compiler): Fix detection of interest (#78879)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/b40778b3d0936ec0de74cbff66848ddd20d30dce\"><code>fix(turbopack): Backport sourcemap bugfix (#78881)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/20f31203ce1e478a605a45bfcc1ea3ee3994878a\"><code>[next-server] preserve rsc query for rsc redirects (#78876)</code></a></li>\n<li><a href=\"https://github.com/vercel/next.js/commit/b464d1855eaa37bfcbf1988d575809650d5e3f7f\"><code>Update middleware public/static matching (#78875)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@‚Äãdepfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@‚Äãdepfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@‚Äãdepfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@‚Äãdepfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@‚Äãdepfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@‚Äãdepfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@‚Äãdepfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@‚Äãdepfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@‚Äãdepfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18046","RelatedDescription":"Closed or merged PR \"Update all of nextjs 15.3.1 ‚Üí 15.3.2 (patch)\" (#18046)"},{"Id":"3066258274","IsPullRequest":false,"CreatedAt":"2025-05-15T14:02:11","Actor":"marcospgp","Number":"18042","RawContent":null,"Title":"max width uses spacing variables instead of container","State":"closed","Body":"`    \"tailwindcss\": \"^4.1.6\",`\n\njust ran into the issue described in this discussion thread: https://github.com/tailwindlabs/tailwindcss/discussions/17777\n\nit seems that when I define custom `spacing` variables in my theme, these get used with max width instead of the container ones, which is not in accordance with the docs","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18042","RelatedDescription":"Closed issue \"max width uses spacing variables instead of container\" (#18042)"},{"Id":"3066160747","IsPullRequest":true,"CreatedAt":"2025-05-15T13:31:18","Actor":"philipp-spiess","Number":"18040","RawContent":null,"Title":"Prepare v4.1.7 release","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18040","RelatedDescription":"Closed or merged PR \"Prepare v4.1.7 release\" (#18040)"},{"Id":"3066020546","IsPullRequest":true,"CreatedAt":"2025-05-15T12:50:04","Actor":"RobinMalfait","Number":"18038","RawContent":null,"Title":"Fix missing extracted classes containing `.` in Clojure","State":"closed","Body":"This PR fixes an issue in the Clojure pre-processor where candidates including `.` characters were not extracted correctly.\r\n\r\nThe solution here is to only replace the `.` with a ` ` when the `.` is not surrounded by numbers. This means that:\r\n\r\n\r\n```\r\n:.foo.bar\r\n```\r\nBecomes\r\n```\r\n: foo bar\r\n```\r\n\r\nBut\r\n```\r\n:.gap-1.5.flex\r\n```\r\n\r\nBecomes\r\n```\r\n: gap-1.5 flex\r\n```\r\n\r\nThis way the `gap-1.5` is correctly extracted.\r\n\r\n## Test plan\r\n\r\n1. Added a test for this case\r\n2. Tested this in the extractor tool as well. Notice how the `gap-1.5` is correctly extracted here.\r\n\r\n<img width=\"1247\" alt=\"image\" src=\"https://github.com/user-attachments/assets/f5dd2600-5c5e-4ad8-88af-4e5be44340f5\" />\r\n\r\n\r\nFixes: #17760\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18038","RelatedDescription":"Closed or merged PR \"Fix missing extracted classes containing `.` in Clojure\" (#18038)"},{"Id":"3065851880","IsPullRequest":true,"CreatedAt":"2025-05-15T11:16:03","Actor":"philipp-spiess","Number":"18037","RawContent":null,"Title":"Upgrade lightningcss to `1.30.1`","State":"closed","Body":"Changelog: https://github.com/parcel-bundler/lightningcss/releases/tag/v1.30.1","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18037","RelatedDescription":"Closed or merged PR \"Upgrade lightningcss to `1.30.1`\" (#18037)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-05-21T03:30:23.0099672Z","RunDurationInMilliseconds":488}