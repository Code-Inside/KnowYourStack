{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2190086353","IsPullRequest":false,"CreatedAt":"2024-03-16T15:12:20","Actor":"ryanylee","Number":"13263","RawContent":null,"Title":"[v4] Doesn't detect Svelte class directives ","State":"open","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv4.0.0-alpha.9\r\n\r\nIn Svelte, I have a div as follows\r\n```\r\n<script>\r\n   let show = true;\r\n</script>\r\n\r\n<div class:opacity-10={show}>hi!</div>\r\n```\r\n\r\nCurrently `.opacity-10` is not generated","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13263","RelatedDescription":"Open issue \"[v4] Doesn't detect Svelte class directives \" (#13263)"},{"Id":"2189161107","IsPullRequest":true,"CreatedAt":"2024-03-15T18:31:36","Actor":"RobinMalfait","Number":"13258","RawContent":null,"Title":"Add `inherit` as a universal color","State":"closed","Body":"This PR adds `inherit` as a universal color.\n\nThis means that utilities such as `from-inherit` or `to-inherit` should work again. This was a regression from v3.\n\nFixes: #13192\n\n<!--\n\nðŸ‘‹ Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13258","RelatedDescription":"Closed or merged PR \"Add `inherit` as a universal color\" (#13258)"},{"Id":"2189111481","IsPullRequest":true,"CreatedAt":"2024-03-15T17:13:03","Actor":"RobinMalfait","Number":"13257","RawContent":null,"Title":"Fix typos","State":"closed","Body":"This PR fixes a bunch of typos, but since one of the typos lives in the property order list, it means that we need to update some tests as well.\n<!--\n\nðŸ‘‹ Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13257","RelatedDescription":"Closed or merged PR \"Fix typos\" (#13257)"},{"Id":"2186205156","IsPullRequest":true,"CreatedAt":"2024-03-15T14:08:27","Actor":"RobinMalfait","Number":"13245","RawContent":null,"Title":"Validate bare values","State":"closed","Body":"This PR validates incoming bare values to ensure we generate CSS that makes sense.\n\nBefore this PR, we would generate values such as:\n\n```css\n.z-index {\n  z-index: index;\n}\n\n.flex-foo {\n  flex: foo;\n}\n```\n\nWhich is invalid, after this PR, these vaues would not be generated at all.\n\n<!--\n\nðŸ‘‹ Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13245","RelatedDescription":"Closed or merged PR \"Validate bare values\" (#13245)"},{"Id":"2186760874","IsPullRequest":true,"CreatedAt":"2024-03-14T16:14:48","Actor":"KrisBraun","Number":"13248","RawContent":null,"Title":"3D transform utilities","State":"open","Body":"Based on #10982 by @brandonmcconnell.\r\n\r\nAdd 3D transform utilities. All are applied to specific CSS properties rather than as `transform` functions.\r\n\r\n| Utility | CSS Property | CSS Value |\r\n|--------|--------|--------|\r\n| `rotate` | `rotate` | angle (e.g. `rotate-45`), vector (e.g. `rotate-[1_2_3]`) used alongside an angle, or a fully arbitrary value (e.g. `rotate_[1_2_3_45deg]`) |\r\n| `rotate-x` | `rotate` | number in the `x` position of the axis vector alongside the angle from `rotate` |\r\n| `rotate-y` | `rotate` | number in the `y` position of the axis vector alongside the angle from `rotate` |\r\n| `rotate-z` | `rotate` | number in the `z` position of the axis vector alongside the angle from `rotate` |\r\n| `scale-z` | `scale` | same as `scale`, applied only to the `z` dimension |\r\n| `scale-3d` | `scale` | same as `scale`, applied to the `x`, `y`, and `z` dimensions |\r\n| `perspective` |  `perspective` |  `dramatic` (`100px`), `near` (`300px`), `normal` (`500px`), `midrange` (`800px`), `distant` (`1200px`), or arbitrary (e.g. `perspective-[42px]`) |\r\n| `perspective-origin` | `perspective-origin` | same as `origin` (`transform-origin`) |\r\n| `transform-flat` | `transform-style` | `flat` |\r\n| `transform-3d` | `transform-style` | `preserve-3d` |\r\n| `transform-content` | `transform-box` | `content-box` |\r\n| `transform-border` | `transform-box` | `border-box` |\r\n| `transform-fill` | `transform-box` | `fill-box` |\r\n| `transform-stroke` | `transform-box` | `stroke-box` |\r\n| `transform-view` | `transform-box` | `view-box` |\r\n| `backface-visible` | `backface-visibility` | `visible` |\r\n| `backface-hidden` | `backface-visibility` | `hidden` |\r\n\r\nNote that `rotate-x`, `rotate-y`, and `rotate-z` contribute to the vector defining the axis of rotation, rather than specifying separate angles of rotation. This means they should be used in combination with `rotate` (e.g. `rotate-45` `rotate-x`). There are several reasons for this approach:\r\n\r\n1. When specified as separate angles, the order matters. There's no good way to specify that using Tailwind utilities, so we'd just have to set a fixed order.\r\n2. The `rotate` property doesn't support separate angles, which would require either complex math or using the `transform` property.\r\n\r\nCare has been taken to only apply transformations in the z-dimension when the relevant utilities are used. This should avoid triggering GPU rendering except when needed.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13248","RelatedDescription":"Open PR \"3D transform utilities\" (#13248)"},{"Id":"2185517503","IsPullRequest":false,"CreatedAt":"2024-03-14T12:34:21","Actor":"Simon-He95","Number":"13241","RawContent":null,"Title":"Bug: Use multiple cssvars together","State":"closed","Body":"![image](https://github.com/tailwindlabs/tailwindcss/assets/57086651/90dc3275-5bd0-4b2d-833d-8275849c7b0e)\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13241","RelatedDescription":"Closed issue \"Bug: Use multiple cssvars together\" (#13241)"},{"Id":"2186088180","IsPullRequest":false,"CreatedAt":"2024-03-14T11:16:02","Actor":"davidmatter","Number":"13244","RawContent":null,"Title":"[v4] @theme directive is not evaluated in Vue SFC <style> sections","State":"open","Body":"**What version of Tailwind CSS are you using?**\r\n\r\n4.0.0-alpha9\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nvite: 5.1.6\r\n\r\n**What version of Node.js are you using?**\r\n\r\n21.6.1\r\n\r\n**What browser are you using?**\r\n\r\nFor example: Chrome, Safari, or N/A\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\nhttps://github.com/davidmatter/tw4-showcase/blob/main/src/App.vue\r\n\r\n**Describe your issue**\r\n`@theme` definitions should be evaluated in Vue SFC files. I've tried with both the vite plugin aswell as the postcss integration. It works if I import `tailwind` in `App.vue` directly but not if I import it in styles.css.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13244","RelatedDescription":"Open issue \"[v4] @theme directive is not evaluated in Vue SFC <style> sections\" (#13244)"},{"Id":"2185077557","IsPullRequest":false,"CreatedAt":"2024-03-14T01:00:02","Actor":"YumaInaura","Number":"13237","RawContent":null,"Title":"Tailwind CSS v3.4.1 Bug : w-18 is 18 px.  Strange pixel","State":"closed","Body":"\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.4.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nNuxt 3.10.3\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv20.11.1\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS,\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/Hru9KzeIsg\r\n\r\n\r\n\r\n**Describe your issue**\r\n\r\n`w-18` has strange px\r\n`w-18` is wider than `w-20`\r\n\r\n```\r\n  <div class=\"m-1 w-14 bg-yellow-200\">w-14</div>\r\n  <div class=\"m-1 w-16 bg-yellow-200\">w-16</div>\r\n  <div class=\"m-1 w-18 bg-yellow-200\">w-18</div>\r\n  <div class=\"m-1 w-20 bg-yellow-200\">w-20</div>\r\n```\r\n\r\n<img width=\"1512\" alt=\"image\" src=\"https://github.com/tailwindlabs/tailwindcss/assets/13635059/56c476de-1f6f-4667-aca0-299889571d21\">\r\n\r\n```\r\n.w-16 {\r\n    width: 4rem/* 64px */;\r\n}\r\n\r\n.w-18 {\r\n    width: 18px;\r\n}\r\n\r\n.w-20 {\r\n    width: 5rem/* 80px */;\r\n}\r\n```\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13237","RelatedDescription":"Closed issue \"Tailwind CSS v3.4.1 Bug : w-18 is 18 px.  Strange pixel\" (#13237)"},{"Id":"2184557739","IsPullRequest":true,"CreatedAt":"2024-03-13T21:26:10","Actor":"RobinMalfait","Number":"13233","RawContent":null,"Title":"Inline `@import` rules in `tailwindcss/index.css` at publish time for better performance","State":"closed","Body":"This way none of the tools using `@import \"tailwindcss\";` have to resolve imports at \"runtime\" because it will already be inlined when it's published.\n\nThis does increase the bundle size of the `tailwindcss` package, but it's still going to be a very small package.\n\n<!--\n\nðŸ‘‹ Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13233","RelatedDescription":"Closed or merged PR \"Inline `@import` rules in `tailwindcss/index.css` at publish time for better performance\" (#13233)"},{"Id":"2184431097","IsPullRequest":true,"CreatedAt":"2024-03-13T17:11:06","Actor":"RobinMalfait","Number":"13231","RawContent":null,"Title":"Prepare `4.0.0-alpha.9` release","State":"closed","Body":"This PR prepares for a `4.0.0-alpha.9` release.\n<!--\n\nðŸ‘‹ Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13231","RelatedDescription":"Closed or merged PR \"Prepare `4.0.0-alpha.9` release\" (#13231)"},{"Id":"2184459682","IsPullRequest":false,"CreatedAt":"2024-03-13T16:59:04","Actor":"Facug03","Number":"13232","RawContent":null,"Title":"[v4] Inputs, textareas and selects now brings a border by default","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\ntailwindcss: 4.0.0-alpha.8\r\n@tailwindcss/vite: 4.0.0-alpha.8\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nvite: 5.1.6\r\nreact: 18.2.0\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv18.17.1\r\n\r\n**What browser are you using?**\r\n\r\nEdge\r\n\r\n**What operating system are you using?**\r\n\r\nWindows\r\n\r\n**Reproduction URL**\r\n\r\n![imagen](https://github.com/tailwindlabs/tailwindcss/assets/107658697/f0ba0263-90d8-40e2-86bb-9a97f67475d1)\r\n\r\n**Describe your issue**\r\n\r\nNow when you use an input, textarea or select by default has a border and in the previous version wasn't like that","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13232","RelatedDescription":"Closed issue \"[v4] Inputs, textareas and selects now brings a border by default\" (#13232)"},{"Id":"2184031798","IsPullRequest":true,"CreatedAt":"2024-03-13T16:25:16","Actor":"RobinMalfait","Number":"13230","RawContent":null,"Title":"Move `optimizeCss` to the packages where it's used","State":"closed","Body":"Right now `optimizeCss` lives in `tailwindcss`, but it is not used within the `tailwindcss` package itself (apart from tests).\r\n\r\nIt's currently only used in our packages that users interact with directly:\r\n\r\n- `@tailwindcss/cli`\r\n- `@tailwindcss/postcss`\r\n- `@tailwindcss/vite`\r\n\r\nThis PR moves `optimizeCss` to the packages listed above, the `lightningcss` dependency is also moved to those packages.\r\n\r\nThis means that `tailwindcss` itself is now dependency free.\r\n<!--\r\n\r\nðŸ‘‹ Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13230","RelatedDescription":"Closed or merged PR \"Move `optimizeCss` to the packages where it's used\" (#13230)"},{"Id":"2182028906","IsPullRequest":false,"CreatedAt":"2024-03-13T16:15:20","Actor":"Steffan153","Number":"13215","RawContent":null,"Title":"[v4] When using a `reference` theme, `--default` variables don't work","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv4.0.0-alpha.8\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nAstro 4.5.2, Vite 5.1.6\r\n\r\n**What version of Node.js are you using?**\r\n\r\nBun 1.0.30\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nTailwind Play doesn't have v4 yet? But here's a link with the code (doesn't work) https://play.tailwindcss.com/NhYGudCbaL\r\n\r\n**Describe your issue**\r\n\r\nIf I import the theme as a reference (`@import 'tailwindcss/theme' reference;`), many properties such as `transition` still look for `--default` variables:\r\n\r\n```css\r\n.transition-all {\r\n    transition-property: all;\r\n    transition-timing-function: var(--default-transition-timing-function);\r\n    transition-duration: var(--default-transition-duration);\r\n}\r\n```\r\n\r\nBut those variables aren't set, so it doesn't work.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13215","RelatedDescription":"Closed issue \"[v4] When using a `reference` theme, `--default` variables don't work\" (#13215)"},{"Id":"2182139863","IsPullRequest":true,"CreatedAt":"2024-03-13T16:14:05","Actor":"adamwathan","Number":"13219","RawContent":null,"Title":"Don't rely on existence of --default-transition-* variables in transition utilities","State":"closed","Body":"This PR fixes an issue where using `@theme reference { ... }` would cause the `transition-*` to stop working properly because they were relying on theme variables being present in the generated CSS.\r\n\r\nRight now this also inlines the values of those variables rather than emitting a `var(...)` call. This is fine because we generally inline values of all variables currently, but if we decide to use `var(...)` for everything we'll want to update this.\r\n\r\nFixes #13215.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13219","RelatedDescription":"Closed or merged PR \"Don't rely on existence of --default-transition-* variables in transition utilities\" (#13219)"},{"Id":"2183301370","IsPullRequest":false,"CreatedAt":"2024-03-13T09:50:20","Actor":"amtee","Number":"13226","RawContent":null,"Title":"Peer not compiled when using prefix","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\n3.4.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nnpx tailwind -w -m -o Resources/Public/Dist/tailwind.css\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv16.20.2\r\n\r\n**What browser are you using?**\r\n\r\nirrelevant\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\n\r\n\r\n[NOT WORKING: Tailwind play with prefix `tw-` and peer](https://play.tailwindcss.com/0BjxzGQr1l) \r\n\r\n[WORKING: Tailwind play without prefix ` and peer](https://play.tailwindcss.com/x20u8TAw5R)\r\n\r\n**Describe your issue**\r\n\r\nWhen setting a prefix the peer classes will not be added to the target css file.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13226","RelatedDescription":"Closed issue \"Peer not compiled when using prefix\" (#13226)"},{"Id":"2182118079","IsPullRequest":false,"CreatedAt":"2024-03-12T22:04:40","Actor":"hmbanan666","Number":"13217","RawContent":null,"Title":"[v4] line-clamp overflow typo bug","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\n4.0.0-alpha.8\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nnext 14.1.3, @tailwindcss/postcss 4.0.0-alpha.8\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv20.11.1\r\n\r\n**What browser are you using?**\r\n\r\nArc\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Describe your issue**\r\n\r\nline-clamp on output is broken:\r\n\r\n```\r\n.line-clamp-1 {\r\n    overlow: hidden; /* Problem */\r\n    display: -webkit-box;\r\n    -webkit-box-orient: vertical;\r\n    -webkit-line-clamp: 1;\r\n  }\r\n  .line-clamp-2 {\r\n    overlow: hidden;\r\n    display: -webkit-box;\r\n    -webkit-box-orient: vertical;\r\n    -webkit-line-clamp: 2;\r\n  }\r\n  .line-clamp-5 {\r\n    overlow: hidden;\r\n    display: -webkit-box;\r\n    -webkit-box-orient: vertical;\r\n    -webkit-line-clamp: 5;\r\n  }\r\n```\r\n\r\nSome fix needed on \"overflow: hidden;\", not \"overlow: hidden;\"\r\n\r\nThanks! v4 is awesome!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13217","RelatedDescription":"Closed issue \"[v4] line-clamp overflow typo bug\" (#13217)"},{"Id":"2182203319","IsPullRequest":true,"CreatedAt":"2024-03-12T22:02:59","Actor":"hmbanan666","Number":"13220","RawContent":null,"Title":"Fix incorrect properties in line-clamp utilities","State":"closed","Body":"Hi! I found bug and fixed it.\r\n\r\nFixes: #13217","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13220","RelatedDescription":"Closed or merged PR \"Fix incorrect properties in line-clamp utilities\" (#13220)"},{"Id":"2182252863","IsPullRequest":true,"CreatedAt":"2024-03-12T18:07:01","Actor":"adamwathan","Number":"13222","RawContent":null,"Title":"Support `@theme reference` without `@import`","State":"closed","Body":"This PR adds support for using `@theme reference { â€¦ }` as a way to define theme values that you don't want emitted in the final CSS but do want to be used as a source of truth for utility values.\r\n\r\nThis fleshes out what we already loosely supported with `@import \"./my-theme.css\" reference`, while fixing some bugs we actually had in that implementation surrounding multiple `@theme` definitions.\r\n\r\nThe main motivating use case for this is to support having access to your theme in CSS module scopes like Vue's `<style>` blocks, where you may want to use `@apply`:\r\n\r\n```html\r\n<template>\r\n  <h1>Hello world!</h1>\r\n</template>\r\n\r\n<style>\r\n@import \"tailwindcss/theme\" reference;\r\n\r\nh1 {\r\n  @apply text-4xl text-indigo-500 py-6;\r\n}\r\n</style>\r\n```\r\n\r\nFor `@apply` to work here it's necessary for your theme values to be \"in scope\" from Tailwind's perspective, and since all of these `<style>` blocks are processed completely independently, Tailwind has no idea what theme values you're using in your global CSS file when this block is processed.\r\n\r\nThis also makes it possible for people to suppress the output of all of the CSS variables if that's something they want to do, but this isn't a use case I personally think makes sense to advertise â€” I think we should be opinionated about pushing people to want to output these variables so they can access their theme values with `var(â€¦)` in arbitrary values or in JS contexts.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13222","RelatedDescription":"Closed or merged PR \"Support `@theme reference` without `@import`\" (#13222)"},{"Id":"2182123798","IsPullRequest":true,"CreatedAt":"2024-03-12T16:27:09","Actor":"KrisBraun","Number":"13218","RawContent":null,"Title":"Process Tailwind output with other Vite plugins","State":"open","Body":"Transform Tailwind-generated CSS with other Vite plugins. `vite:css`, in particular, does useful things like transforming `url()` paths and inlining images.\r\n\r\nSeveral plugins are explicitly skipped because they were failing.`vite:css-post` translates CSS into a JS module for the dev server, but fails to reload the Tailwind CSS, perhaps because it's happening too late in the pipeline. \r\n\r\nThis PR also removes the timeout used to detect the end of the initial scan. Now that full builds wait until the bundle stage, dev builds can simply run immediately. This might build Tailwind CSS twice, generating a FOUC (since the first build hasn't seen all candidates), but is much faster than waiting for the timeout. A [proposed Vite change](https://github.com/vitejs/vite/pull/16135) could address the FOUC and extra build.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13218","RelatedDescription":"Open PR \"Process Tailwind output with other Vite plugins\" (#13218)"},{"Id":"2182112344","IsPullRequest":false,"CreatedAt":"2024-03-12T16:23:46","Actor":"blackcater","Number":"13216","RawContent":null,"Title":"[v4] `package.json` in `@tailwindcss/vite` is not standard.","State":"open","Body":"When I use `@tailwindcss/vite`@4 with `storybook`. It reported an error as bellow:\r\n\r\n```\r\nSB_CORE-SERVER_0007 (MainFileEvaluationError): Storybook couldn't evaluate your .storybook/main.ts file.\r\n\r\nError [ERR_PACKAGE_PATH_NOT_EXPORTED]: No \"exports\" main defined in /.../node_modules/@tailwindcss/vite/package.json\r\n    at exportsNotFound (node:internal/modules/esm/resolve:303:10)\r\n    at packageExportsResolve (node:internal/modules/esm/resolve:593:13)\r\n    at resolveExports (node:internal/modules/cjs/loader:591:36)\r\n    at Module._findPath (node:internal/modules/cjs/loader:668:31)\r\n    at Module._resolveFilename (node:internal/modules/cjs/loader:1130:27)\r\n    at Module._resolveFilename (/Users/blackcater/Workspace/Codes/proj/staple/node_modules/esbuild-register/dist/node.js:4799:36)\r\n    at Module._load (node:internal/modules/cjs/loader:985:27)\r\n    at Module.require (node:internal/modules/cjs/loader:1235:19)\r\n    at require (node:internal/modules/helpers:176:18)\r\n    at Object.<anonymous> (/.storybook/main.ts:6:25)\r\n\r\nWARN Broken build, fix the error above.\r\nWARN You may need to refresh the browser.\r\n\r\nerror: script \"dev\" exited with code 1\r\n```\r\n\r\nIt seems like `esbuild` can't find `main` field in `package.json` from `@tailwindcss/vite` package.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13216","RelatedDescription":"Open issue \"[v4] `package.json` in `@tailwindcss/vite` is not standard.\" (#13216)"},{"Id":"2181438854","IsPullRequest":false,"CreatedAt":"2024-03-12T15:12:55","Actor":"raaaahman","Number":"13214","RawContent":null,"Title":"Consider transform fallback for translate property","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\n4.0.0-alpha.6\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\n@postcss/tailwindcss 4.0.0-alpha.6 with Next.js 14.1.0\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv20.10.6\r\n\r\n**What browser are you using?**\r\n\r\nFirefox 123.0.1 (Mozilla Firefox Snap for Ubuntu)\r\n\r\n**What operating system are you using?**\r\n\r\nUbuntu 22.04.4 LTS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://github.com/raaaahman/tailwind-4-translate\r\n\r\n**Describe your issue**\r\n\r\nTailwind 4 is now using the `translate` property instead of the `transtorm: translate()` one. Although it seems this property is well supported for modern browsers, I still have issues with it in the latest version of Firefox for Linux.\r\n\r\n![Using the `translate`css property in Mozilla Firfefox Snap for Ubuntu](https://github.com/tailwindlabs/tailwindcss/assets/16425382/6dc60530-37eb-49db-afd0-3ea553cea4f5)\r\n\r\nWhereas it works fine in  Chromium:\r\n\r\n![Using the `translate` css property in Chromium](https://github.com/tailwindlabs/tailwindcss/assets/16425382/bf34fac1-1d02-4f77-b87f-5cc9988ed9bb)\r\n\r\nCould we have a fallback to the old `transform: translate()` property, or a way to configure this? \r\n\r\nThank you.\r\n\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13214","RelatedDescription":"Closed issue \"Consider transform fallback for translate property\" (#13214)"},{"Id":"2180509973","IsPullRequest":false,"CreatedAt":"2024-03-12T00:51:37","Actor":"fernandortec","Number":"13210","RawContent":null,"Title":"Add example for shadcn-ui","State":"closed","Body":"If you wish to migrate to the newest version of Tailwind v4.0.0-alpha, for most people it will be a bit harsh to do so if they're using shadcn-ui.\r\n\r\nAdding tailwind v4 and Postcss is fine, but the layout won't look like it was on the previous version, because all of the variables that shadcn set automatically on tailwind.config.ts, will need to be rewritten using a regular CSS file.\r\nI've just migrated a project from tailwind v3.4.1 to v4.0.0-alpha successfully, and I'd like to share my .css file with the theme already configurated for shadcn-ui, so other people that are also migrating can get their variables re-defined in a simple copy and paste.\r\n\r\nIt would be great if that could be available in [this](https://tailwindcss.com/blog/tailwindcss-v4-alpha) post you guys did. \r\n\r\n```\r\n@import \"tailwindcss\";\r\n\r\n\r\n /* For some reason, all buttons don't have cursor pointer anymore, I couldn't find a reason why in the tailwind config.ts */\r\nbutton {\r\n  cursor: pointer;\r\n}\r\n\r\n@layer base {\r\n  :root {\r\n    --background: 0 0% 100%;\r\n    --foreground: 222.2 84% 4.9%;\r\n\r\n    --card: 0 0% 100%;\r\n    --card-foreground: 222.2 84% 4.9%;\r\n\r\n    --popover: 0 0% 100%;\r\n    --popover-foreground: 222.2 84% 4.9%;\r\n\r\n    --primary: 222.2 47.4% 11.2%;\r\n    --primary-foreground: 210 40% 98%;\r\n\r\n    --secondary: 210 40% 96.1%;\r\n    --secondary-foreground: 222.2 47.4% 11.2%;\r\n\r\n    --muted: 210 40% 96.1%;\r\n    --muted-foreground: 215.4 16.3% 46.9%;\r\n\r\n    --accent: 210 40% 96.1%;\r\n    --accent-foreground: 222.2 47.4% 11.2%;\r\n\r\n    --destructive: 0 84.2% 60.2%;\r\n    --destructive-foreground: 210 40% 98%;\r\n\r\n    --border: 214.3 31.8% 91.4%;\r\n    --input: 214.3 31.8% 91.4%;\r\n    --ring: 222.2 84% 4.9%;\r\n\r\n    --radius: 0.5rem;\r\n  }\r\n\r\n  .dark {\r\n    --background: 222.2 84% 4.9%;\r\n    --foreground: 210 40% 98%;\r\n\r\n    --card: 222.2 84% 4.9%;\r\n    --card-foreground: 210 40% 98%;\r\n\r\n    --popover: 222.2 84% 4.9%;\r\n    --popover-foreground: 210 40% 98%;\r\n\r\n    --primary: 210 40% 98%;\r\n    --primary-foreground: 222.2 47.4% 11.2%;\r\n\r\n    --secondary: 217.2 32.6% 17.5%;\r\n    --secondary-foreground: 210 40% 98%;\r\n\r\n    --muted: 217.2 32.6% 17.5%;\r\n    --muted-foreground: 215 20.2% 65.1%;\r\n\r\n    --accent: 217.2 32.6% 17.5%;\r\n    --accent-foreground: 210 40% 98%;\r\n\r\n    --destructive: 0 62.8% 30.6%;\r\n    --destructive-foreground: 210 40% 98%;\r\n\r\n    --border: 217.2 32.6% 17.5%;\r\n    --input: 217.2 32.6% 17.5%;\r\n    --ring: 212.7 26.8% 83.9%;\r\n  }\r\n}\r\n\r\n@theme {\r\n  --color-border: hsl(var(--border));\r\n  --color-input: hsl(var(--input));\r\n  --color-ring: hsl(var(--ring));\r\n  --color-background: hsl(var(--background));\r\n  --color-foreground: hsl(var(--foreground));\r\n\r\n  --color-primary: hsl(var(--primary));\r\n  --color-primary-foreground: hsl(var(--primary-foreground));\r\n\r\n  --color-secondary: hsl(var(--secondary));\r\n  --color-secondary-foreground: hsl(var(--secondary-foreground));\r\n\r\n  --color-destructive: hsl(var(--destructive));\r\n  --color-destructive-foreground: hsl(var(--destructive-foreground));\r\n\r\n  --color-muted: hsl(var(--muted));\r\n  --color-muted-foreground: hsl(var(--muted-foreground));\r\n\r\n  --color-accent: hsl(var(--accent));\r\n  --color-accent-foreground: hsl(var(--accent-foreground));\r\n\r\n  --color-popover: hsl(var(--popover));\r\n  --color-popover-foreground: hsl(var(--popover-foreground));\r\n\r\n  --color-card: hsl(var(--card));\r\n  --color-card-foreground: hsl(var(--card-foreground));\r\n\r\n  --radius-sm: calc(var(--radius) - 4px);\r\n  --radius-md: calc(var(--radius) - 2px);\r\n  --radius-lg: var(--radius);\r\n\r\n  --font-family-poppins: var(--font-poppins);\r\n  --font-family-inter: var(--font-inter);\r\n\r\n  --animate-accordion-down: accordion-down 0.2s ease-out;\r\n  --animate-accordion-up: accordion-up 0.2s ease-out;\r\n\r\n\r\n  @keyframes accordion-down {\r\n    from {\r\n      height: 0;\r\n    }\r\n\r\n    to {\r\n      height: var(--radix-accordion-content-height);\r\n    }\r\n  }\r\n\r\n  @keyframes accordion-up {\r\n    from {\r\n      height: var(--radix-accordion-content-height);\r\n    }\r\n\r\n    to {\r\n      height: \"0\";\r\n    }\r\n  }\r\n}\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13210","RelatedDescription":"Closed issue \"Add example for shadcn-ui\" (#13210)"},{"Id":"2180178298","IsPullRequest":false,"CreatedAt":"2024-03-11T21:43:38","Actor":"Facug03","Number":"13206","RawContent":null,"Title":"[V4] Border property is not working","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\n@tailwindcss/postcss: 4.0.0-alpha.8\r\n  tailwindcss: 4.0.0-alpha.8\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nnext: 14.1.3\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv18.17.1\r\n\r\n**What browser are you using?**\r\n\r\nFirefox\r\n\r\n**What operating system are you using?**\r\n\r\nWindows\r\n\r\n**Reproduction URL**\r\n\r\n![imagen](https://github.com/tailwindlabs/tailwindcss/assets/107658697/bcd3521b-bc48-4e95-8bbf-6510420afb62)\r\n\r\n**Describe your issue**\r\n\r\nWhen using the border property it doesn't show in the ui","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13206","RelatedDescription":"Closed issue \"[V4] Border property is not working\" (#13206)"},{"Id":"2180252372","IsPullRequest":false,"CreatedAt":"2024-03-11T21:16:13","Actor":"kirbysayshi","Number":"13208","RawContent":null,"Title":"animation property using `var()` has the wrong name, keyframes are excluded and animation is broken","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv2.2.19 and v3.4.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nvite 5.1.1\r\npostcss 8.4.35\r\n@remix-run/react 2.8.1\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv20.10.0\r\n\r\n**What browser are you using?**\r\n\r\nNA\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/AE5DqIZeTW\r\n\r\nBoth of these divs should be animating, but only the second is: the difference is that the animation-name is specified first, instead of last.\r\n\r\n**Describe your issue**\r\nHello! We recently upgraded to v2.2 from v2.1 (yes, we're very behind... ðŸ˜…) and encountered this issue that is also present in the latest release.\r\n\r\nAt least in v2.2.19 and v3.4.1 the `animation-name` property is being incorrectly parsed, resulting in the matching `keyframes` being excluded from the CSS output.\r\n\r\nThe problem seems to be parseAnimationValue, which is confusing a `var(...)` for the animation name. Then the JIT presumably excludes the \"unused\" keyframes.\r\n\r\nIt's straightforward to verify that that the output is incorrect (this is v2.2, but the same is true for v3):\r\n\r\n```\r\nnode -p \"require('tailwindcss/lib/util/parseAnimationValue').default('slide-x var(--slide-duration) linear 0s 1 forwards')\"\r\n```\r\n\r\n<img width=\"1052\" alt=\"image\" src=\"https://github.com/tailwindlabs/tailwindcss/assets/90831/d8eeff41-e366-46a8-8407-0eaf7be0123e\">\r\n\r\n(`name` is incorrect)\r\n\r\nNote that a real browser / CSS parser has no trouble discerning which of the values is actually the name, as shown by this JSFiddle! https://jsfiddle.net/kirbysayshi/6nkpe8yw/\r\n\r\nThe workaround is to put the animation name last, but this goes against the guidelines from MDN (which I'm sure everyone's aware of, given some comments I see in parseAnimationValue tests!):\r\n\r\n> If a value in the animation shorthand can be parsed as a value for an animation property other than animation-name, then the value will be applied to that property first and not to animation-name. For this reason, the recommended practice is to specify a value for animation-name as _the last value in a list of values_ when using the animation shorthand; \r\n\r\n(emphasis mine) from : https://developer.mozilla.org/en-US/docs/Web/CSS/animation#description\r\n\r\nRelated:\r\n- https://github.com/tailwindlabs/tailwindcss/issues/4737\r\n- https://github.com/tailwindlabs/tailwindcss/pull/5602\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13208","RelatedDescription":"Open issue \"animation property using `var()` has the wrong name, keyframes are excluded and animation is broken\" (#13208)"},{"Id":"2179808148","IsPullRequest":false,"CreatedAt":"2024-03-11T19:31:47","Actor":"antonijo01","Number":"13202","RawContent":null,"Title":"Unknown at rule @theme in style.css","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv4-alpha\r\n\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\n\r\nVSCode\r\n\r\n**What version of Node.js are you using?**\r\n\r\nNode v21.0.0.\r\n\r\n**What browser are you using?**\r\n\r\nChrome\r\n\r\n**What operating system are you using?**\r\n\r\nWindows\r\n\r\n**Reproduction URL**\r\n\r\nlocalhost\r\n\r\n**Describe your issue**\r\n\r\nAfter installing via CLI, I tried to add @theme to style.css and got an error.\r\n\r\n![image](https://github.com/tailwindlabs/tailwindcss/assets/107608985/f9cbc3d4-b14d-4a6e-8f85-3da5163d9de0)\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13202","RelatedDescription":"Closed issue \"Unknown at rule @theme in style.css\" (#13202)"},{"Id":"2179997243","IsPullRequest":true,"CreatedAt":"2024-03-11T19:10:22","Actor":"adamwathan","Number":"13203","RawContent":null,"Title":"Prepare alpha.8 release","State":"closed","Body":"Updates versions and changelog for alpha.8 release.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13203","RelatedDescription":"Closed or merged PR \"Prepare alpha.8 release\" (#13203)"},{"Id":"2179726593","IsPullRequest":true,"CreatedAt":"2024-03-11T17:29:21","Actor":"RobinMalfait","Number":"13201","RawContent":null,"Title":"[v4] Ensure `{ optimize: true }` also minifies CSS in the `@tailwindcss/postcss` plugin","State":"closed","Body":"This PR fixes an issue where passing `{ optimize: true }` to the `@tailwindcss/postcss` plugin would only optimize the CSS but not minify the CSS.\n\nThe default should be to optimize _and_ minify the CSS. \n\nIf you don't want this behaviour, and you only want to optimize, then you can use:\n\n```\n{\n  optimize: {\n    minify: false\n  }\n}\n```\n\n\n<!--\n\nðŸ‘‹ Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13201","RelatedDescription":"Closed or merged PR \"[v4] Ensure `{ optimize: true }` also minifies CSS in the `@tailwindcss/postcss` plugin\" (#13201)"},{"Id":"2179331225","IsPullRequest":true,"CreatedAt":"2024-03-11T17:24:01","Actor":"KrisBraun","Number":"13197","RawContent":null,"Title":"Vite plugin: stop checking CSS files that no longer exist","State":"closed","Body":"Fix a potential memory leak in the Vite plugin. If CSS files are created that include `@tailwind` and later deleted, remove them from the list of files checked. This could theoretically happen if some process created CSS files with `@tailwind` with different names on each build. \r\n\r\nThanks to @timneutkens for highlighting this issue.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/13197","RelatedDescription":"Closed or merged PR \"Vite plugin: stop checking CSS files that no longer exist\" (#13197)"},{"Id":"2179485120","IsPullRequest":false,"CreatedAt":"2024-03-11T16:34:01","Actor":"n0ah01","Number":"13198","RawContent":null,"Title":"[v4] Gradients not working in Firefox","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\ntailwindcss v4.0.0-alpha.7\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\n@tailwindcss/cli@4.0.0-alpha.7\r\n\r\n**What version of Node.js are you using?**\r\n\r\nnode v21.6.2\r\nnpm 10.2.4\r\n\r\n**What browser are you using?**\r\n\r\nFirefox: 123.0.1\r\n\r\n**What operating system are you using?**\r\n\r\nUbuntu 22.04.4 LTS\r\n\r\n**Reproduction URL**\r\n\r\n[https://play.tailwindcss.com/1E6nLOSBdR](https://play.tailwindcss.com/1E6nLOSBdR)\r\n\r\n```\r\n<div class=\"grid gap-2\">\r\n\t<div class=\"rounded h-16 border-solid border-slate-500 border bg-gradient-to-r from-cyan-500 to-blue-500\"></div>\r\n\t<div class=\"rounded h-16 border-solid border-slate-500 border bg-gradient-to-r [--tw-gradient-stops:#f00,#0f0]\"></div>\r\n</div>\r\n```\r\n\r\n**Describe your issue**\r\n\r\nCreating a normal gradient with default Tailwind classes like `bg-gradient-to-r from-cyan-500 to-blue-500` does not produce working CSS for Firefox, works normali in Brave/Chrome. The problem seems to be in the `--tw-gradient-stops` variable of the `.to-XXX` class with the value `var(--tw-gradient-via-stops,var(--tw-gradient-from)var(--tw-gradient-from-position),var(--tw-gradient-to)var(--tw-gradient-to-position))`.\r\nIf I edit the variable value to `var(--tw-gradient-via-stops, var(--tw-gradient-from), var(--tw-gradient-to))` it works as expected.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13198","RelatedDescription":"Closed issue \"[v4] Gradients not working in Firefox\" (#13198)"},{"Id":"2179326792","IsPullRequest":false,"CreatedAt":"2024-03-11T16:22:28","Actor":"mrleblanc101","Number":"13196","RawContent":null,"Title":"`leading-normal` should have apply `line-height: normal` and not `line-height: 1.5`","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n3.4.1\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nvite 5\r\n\r\n**What version of Node.js are you using?**\r\n\r\n20\r\n\r\n**What browser are you using?**\r\n\r\nChrome \r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nA Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\r\n\r\nA reproduction is **required** when filing an issue â€” any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.\r\n\r\n**Describe your issue**\r\n\r\nConfusingly, `leading-normal` apply `line-height: 1.5` instead of `line-height: normal`.\r\nThere is no way to opt into the font file default line-height.\r\nYou can always use `leading-[normal]`, but that seems weird.\r\nI think `line-height: 1.5` should be rename `leading-regular` or something similar ?","Url":"https://github.com/tailwindlabs/tailwindcss/issues/13196","RelatedDescription":"Closed issue \"`leading-normal` should have apply `line-height: normal` and not `line-height: 1.5`\" (#13196)"}],"ResultType":"GitHubIssue"}},"RunOn":"2024-03-17T03:30:18.9336992Z","RunDurationInMilliseconds":385}