{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"2957371619","IsPullRequest":false,"CreatedAt":"2025-03-28T22:14:12","Actor":"Mfauzan1","Number":"17439","RawContent":null,"Title":"Group and group-hover Not working at responsive screen  in tailwind-V4","State":"open","Body":"Dear team .\n\nGroup and group-hover Not working at responsive screen  in tailwind-V4\n\nhttps://github.com/user-attachments/assets/b3f9e004-77c8-4692-b19a-896cf3e1290d\n\nBr//\nMuhammad Fauzan","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17439","RelatedDescription":"Open issue \"Group and group-hover Not working at responsive screen  in tailwind-V4\" (#17439)"},{"Id":"2957146481","IsPullRequest":false,"CreatedAt":"2025-03-28T21:31:49","Actor":"michaelcozzolino","Number":"17438","RawContent":null,"Title":"Styles do not get generated completely when working with scoped slotted/deep styles in vuejs","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.17\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\npostcss, vite\n\n**What version of Node.js are you using?**\n\nv20.10.0\n\n**What browser are you using?**\n\nBrave\n\n**What operating system are you using?**\n\nubuntu 24\n\n**Reproduction URL**\n\nhttps://github.com/michaelcozzolino/tailwind4-vue-slotted-bug\n\nto run:\nyarn install && yarn dev\n\n**Describe your issue**\n\n I have two components: `Parent.vue` and `Child.vue`\nthe parent contains a div with a slot, the child contains a div with a  `custom-class`. I'm trying to style all the slotted elements of `Parent` containing `custom-class`:\n\nParent.vue\n```\n<template>\n    <div class=\"test-class \">\n        <slot />\n    </div>\n</template>\n\n<style lang=\"postcss\" scoped>\n@reference \"tailwindcss\"\n\n.test-class {\n    @apply text-yellow-500;\n}\n\n:slotted(.custom-class) {\n    @apply bg-blue-500;\n}\n</style>\n```\n\nChild.vue\n```\n<template>\n    <div class=\"custom-class\">child</div>\n</template>\n```\n\nApp.vue\n```\n<script setup lang=\"ts\">\nimport Parent from \"@/components/Parent.vue\";\nimport Child  from \"@/components/Child.vue\";\n</script>\n\n<template>\n  <Parent>\n      <Child />\n  </Parent>\n</template>\n\n```\ncase 1:\n`test-class` added in Parent -> the slotted is styled correctly, but not the element where the `test-class` is used\n\n```\n<style lang=\"postcss\" scoped>\n@reference \"tailwindcss\"\n\n.test-class {\n    @apply text-yellow-500;\n}\n\n:slotted(.custom-class) {\n    @apply bg-blue-500;\n}\n</style>\n```\n\ncase 2:\n`test-class` removed from the style of Parent -> the slotted is not styled\n\n```\n<style lang=\"postcss\" scoped>\n@reference \"tailwindcss\"\n\n:slotted(.custom-class) {\n    @apply bg-blue-500;\n}\n</style>\n```\n\ncase 3:\n`test-class` below the slotted -> the parent div containing the `test-class` is styled, but the slotted are not\n\n```\n<style lang=\"postcss\" scoped>\n@reference \"tailwindcss\"\n    \n:slotted(.custom-class) {\n    @apply bg-blue-500;\n}\n\n.test-class {\n    @apply text-yellow-500;\n}\n</style>\n```\n\nIt seems it happens also with deep, but i did not investigate more.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17438","RelatedDescription":"Closed issue \"Styles do not get generated completely when working with scoped slotted/deep styles in vuejs\" (#17438)"},{"Id":"2957049913","IsPullRequest":true,"CreatedAt":"2025-03-28T19:58:17","Actor":"thecrypticace","Number":"17437","RawContent":null,"Title":"Add `object-{top,bottom}-{left,right}` utilities","State":"closed","Body":"These match the new `mask-*` and updated `bg-*` utilities.\r\n\r\nThis is the same as #17378 but for `object-position`.\r\n\r\n| Deprecated utility    | New utility           |\r\n| --------------------- | --------------------- |\r\n| `object-left-top`     | `object-top-left`     |\r\n| `object-right-top`    | `object-top-right`    |\r\n| `object-left-bottom`  | `object-bottom-left`  |\r\n| `object-right-bottom` | `object-bottom-right` |\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17437","RelatedDescription":"Closed or merged PR \"Add `object-{top,bottom}-{left,right}` utilities\" (#17437)"},{"Id":"2956802206","IsPullRequest":true,"CreatedAt":"2025-03-28T17:47:09","Actor":"scottbedard","Number":"17436","RawContent":null,"Title":"Add test coverage for property-specific colors","State":"open","Body":"There are several property-specific color variables available to maintain compatibility with v3. [My team and I would like to use them](https://github.com/tailwindlabs/tailwindcss/discussions/17400), but would feel more comfortable if they were formally supported by v4. This PR adds test coverage for those features.\r\n\r\n@RobinMalfait has confirmed that these features are not intended to be removed, [see conversation here &rarr;](https://discord.com/channels/486935104384532500/546706299010678784/1355213322995110171)\r\n\r\n@crswll Has opened a PR here for the related documentation\r\n- https://github.com/tailwindlabs/tailwindcss.com/pull/2178\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17436","RelatedDescription":"Open PR \"Add test coverage for property-specific colors\" (#17436)"},{"Id":"2950583094","IsPullRequest":true,"CreatedAt":"2025-03-28T17:16:00","Actor":"thecrypticace","Number":"17398","RawContent":null,"Title":"Add support for “intensity” modifiers on box and text shadows","State":"closed","Body":"This PR adds support for utilities like:\r\n- `text-shadow-lg/25`\r\n\r\nIt uses relative color syntax to replace the alpha value of the shadow from your theme.\r\n\r\nWhen combined with a colors:\r\n- `text-shadow-lg/25 text-shadow-red-500`\r\n- `text-shadow-lg/25 text-shadow-red-500/75`\r\n\r\nThe alpha values are **multiplied** resulting in a shadow with the color specified in `--color-red-500` and alpha values of 25% and 18.75% respectively.\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17398","RelatedDescription":"Closed or merged PR \"Add support for “intensity” modifiers on box and text shadows\" (#17398)"},{"Id":"2949132422","IsPullRequest":true,"CreatedAt":"2025-03-28T17:06:56","Actor":"philipp-spiess","Number":"17389","RawContent":null,"Title":"Add `text-shadow-*` utilities","State":"closed","Body":"This PR adds new `text-shadow-*` utilities and default values courtesy of @danhollick's.\r\n\r\nUsage is similar to the normal `shadow-*` utilities, for example:\r\n\r\n```html\r\n<h1 class=\"text-center text-7xl tracking-tight text-white text-shadow-xl\">\r\n  Some fancy <br />\r\n  headline\r\n</h1>\r\n```\r\n\r\nSince this PR also adds first-class support for the `--text-shadow` theme namespace, it also means it resolves #17047.\r\n\r\n## Test plan\r\n\r\n- Copied @danhollick's [demo playground](https://play.tailwindcss.com/lbA3Y6VY8u) to the `vite` setup and ran a production build to ensure it looks correct: https://tailwind-text-shadows-preview-2kdnjb32b.vercel.app/","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17389","RelatedDescription":"Closed or merged PR \"Add `text-shadow-*` utilities\" (#17389)"},{"Id":"2956572750","IsPullRequest":true,"CreatedAt":"2025-03-28T16:53:16","Actor":"RobinMalfait","Number":"17433","RawContent":null,"Title":"Extract used CSS variables from `.css` files","State":"closed","Body":"This PR fixes an issue where CSS variables could be used in CSS modules, but where never emitted in your final CSS.\r\n\r\nSome backstory, when Tailwind CSS v4 came out, we _always_ emitted all CSS variables whether they were used or not.\r\n\r\nLater, we added an optimization where we only emit the CSS variables that were actually used. The definition of \"used\" in this case is:\r\n\r\n1. Used in your CSS  file(s) — (we check the final CSS AST for this)\r\n2. Used _somewhere_ in any of your source files (e.g.: a JavaScript file accessing a variable)\r\n\r\nThe issue this PR tries to solve is with the very first point. If you are using CSS modules, then every CSS file is processed separately. This is not a choice Tailwind CSS made, but how other build tooling works (like Vite for example).\r\n\r\nTo prevent emitting all of Tailwind's Preflight reset and all utilities per CSS file, you can use the `@reference` directive instead of repeating `@import \"tailwindcss\";`. This is explained here: https://tailwindcss.com/docs/compatibility#explicit-context-sharing \r\n\r\nBut now we are just _referencing_ them, not emitting them. And since the CSS module is not connected in any way to the main `index.css` file that contains the `@import \"tailwindcss\";` directive, we don't even see the CSS variables while processing the `index.css` file. (or wherever your main CSS file is)\r\n\r\nThis is where point 2 from above comes in. This is a situation where we rely on the extractor to find the used CSS variables so we can internally mark them as used.\r\n\r\nTo finally get to the point of this PR, the extractor only scans `.html`, `.js`, ... files but not `.css` files. So all the CSS variables used inside of CSS modules will not be generated.\r\n\r\nThis PR changes that behavior to also scan `.css` files. But _only_ for CSS variables (not any other type of class candidate). This is important, otherwise all your custom `@utility foo {}` definitions would always mark `foo` as a used class and include it in the CSS which is not always the case.\r\n\r\nOn top extracting CSS variables, we will also make sure that the CSS variables we find are in usage positions (e.g.: `var(--color-red-500)`) and not in definition positions (e.g.: `--color-red-500: #ff0000;`). This is important because we only want to emit the variables that are actually used in the final CSS output.\r\n\r\nOne future improvement not implemented here, is that technically we will also extract CSS variables that might not be used if defined in a `@utility`.\r\n\r\n```css\r\n@utility never-used {\r\n  color: var(--color-red-500); /* --color-red-500 will be emitted, even if it might not be used */\r\n}\r\n```\r\n\r\nFixes: #16904\r\nFixes: #17429\r\n\r\n# Test plan\r\n\r\n1. Added a test where CSS variables are defined in `.css` files (and ignored)\r\n2. Added a test where CSS variables are used in `.css` files (and included)\r\n\r\nTesting on the reproduction defined in #16904, the `.module.css` file contains a reference to `var(--color-hot-pink)`, but generating a build shows that the variable definition is not available:\r\n\r\n<img width=\"1630\" alt=\"image\" src=\"https://github.com/user-attachments/assets/a0d5c37e-6813-4cd5-a677-6c356b5a73d4\" />\r\n\r\nWhen you run the build again with the changes from this PR, then we _do_ see the definition of the `--color-hot-pink` in the root CSS file:\r\n<img width=\"2876\" alt=\"image\" src=\"https://github.com/user-attachments/assets/beab7c11-a31b-4ea4-8235-4849a8e92859\" />\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17433","RelatedDescription":"Closed or merged PR \"Extract used CSS variables from `.css` files\" (#17433)"},{"Id":"2956659850","IsPullRequest":true,"CreatedAt":"2025-03-28T16:43:05","Actor":"philipp-spiess","Number":"17435","RawContent":null,"Title":"Improve compatibility with Safari 15","State":"open","Body":"This PR improves the compatibility with Tailwind CSS v4 with unsupported browsers with the goal to greatly improve compatibility with Safari 15. \r\n\r\nTo make this work, this PR makes the following changes to all code\r\n\r\n- Change `oklab(…)` default theme values to use a percentage in the first place (this was supported in Safari before 16.2, lol)\r\n- Bring back the @property polyfil *\r\n- Create fallbacks of the `color-mix(…)` function that use inlined color values so that they can be computed a compile time\r\n- Create fallbacks for gradient interpolation methods\r\n- Polyfill @media queries range syntax.\r\n\r\n## A simplified example\r\n\r\nGiven this example CSS input:\r\n\r\n```css\r\n@import 'tailwindcss';\r\n@source inline('from-cyan-500/50 bg-linear-45');\r\n```\r\n\r\nHere's the updated output CSS including the newly added polyfills and updated `oklab` values:\r\n\r\n```css\r\n.bg-linear-45 {\r\n  --tw-gradient-position: 45deg;\r\n  background-image: linear-gradient(var(--tw-gradient-stops));\r\n}\r\n\r\n@supports (background-image: linear-gradient(in lab, red, red)) {\r\n  .bg-linear-45 {\r\n    --tw-gradient-position: 45deg in oklab;\r\n  }\r\n}\r\n\r\n.from-cyan-500\\\\/50 {\r\n  --tw-gradient-from: oklab(71.5% -.11682 -.08247 / .5);\r\n  --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));\r\n}\r\n\r\n@supports (color: color-mix(in lab, red, red)) {\r\n  .from-cyan-500\\\\/50 {\r\n    --tw-gradient-from: color-mix(in oklab, var(--color-cyan-500) 50%, transparent);\r\n  }\r\n}\r\n\r\n:root, :host {\r\n  --color-cyan-500: oklch(71.5% .143 215.221);\r\n}\r\n\r\n@supports (((-webkit-hyphens: none)) and (not (margin-trim: 1lh))) or ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {\r\n  @layer base {\r\n    *, :before, :after, ::backdrop {\r\n      --tw-gradient-position: initial;\r\n      --tw-gradient-from: #0000;\r\n      --tw-gradient-via: #0000;\r\n      --tw-gradient-to: #0000;\r\n      --tw-gradient-stops: initial;\r\n      --tw-gradient-via-stops: initial;\r\n      --tw-gradient-from-position: 0%;\r\n      --tw-gradient-via-position: 50%;\r\n      --tw-gradient-to-position: 100%;\r\n    }\r\n  }\r\n}\r\n\r\n@property --tw-gradient-position {\r\n  syntax: \"*\";\r\n  inherits: false\r\n}\r\n\r\n@property --tw-gradient-from {\r\n  syntax: \"<color>\";\r\n  inherits: false;\r\n  initial-value: #0000;\r\n}\r\n\r\n@property --tw-gradient-via {\r\n  syntax: \"<color>\";\r\n  inherits: false;\r\n  initial-value: #0000;\r\n}\r\n\r\n@property --tw-gradient-to {\r\n  syntax: \"<color>\";\r\n  inherits: false;\r\n  initial-value: #0000;\r\n}\r\n\r\n@property --tw-gradient-stops {\r\n  syntax: \"*\";\r\n  inherits: false\r\n}\r\n\r\n@property --tw-gradient-via-stops {\r\n  syntax: \"*\";\r\n  inherits: false\r\n}\r\n\r\n@property --tw-gradient-from-position {\r\n  syntax: \"<length-percentage>\";\r\n  inherits: false;\r\n  initial-value: 0%;\r\n}\r\n\r\n@property --tw-gradient-via-position {\r\n  syntax: \"<length-percentage>\";\r\n  inherits: false;\r\n  initial-value: 50%;\r\n}\r\n\r\n@property --tw-gradient-to-position {\r\n  syntax: \"<length-percentage>\";\r\n  inherits: false;\r\n  initial-value: 100%;\r\n}\r\n```\r\n\r\n## \\* A note on `@property` polyfills and CSS modules\r\n\r\nOn Next.js, CSS module files are required to be _pure_, meaning that all selectors must either be scoped to a class or an ID. Fortunatnyl for us, this does not apply to `@property` rules which we've been using before to initialize CSS variables.\r\n\r\nHowever, since we're now bringing back the `@property` polyfills, that would cause unexpected rules to be exported from the CSS file as this:\r\n\r\n```css\r\n@reference \"tailwindcss\";\r\n\r\n.skew {\r\n  @apply skew-7;\r\n}\r\n```\r\n\r\nWould turn to the following file:\r\n\r\n```css\r\n.skew {\r\n  /* … */\r\n}\r\n@supports (/*…*/) {\r\n  @layer base {\r\n    *, :before, :after, ::backdrop {\r\n      --tw-gradient-position: initial;\r\n    }\r\n  }\r\n}\r\n@property /* … */ \r\n```\r\n\r\nNotice that this adds a `*` selector which is not considered pure.\r\n\r\nUnfortunately there is no way for us to silence this warning or work around it, as the dependency causing this errors ([`postcss-modules-local-by-default`](https://github.com/css-modules/postcss-modules-local-by-default)) is bundled into Next.js. To work around crashes, these polyfills will not apply to CSS modules processed by the PostCSS extension for now.\r\n\r\n## Testing on tailwindcss.com\r\n\r\nTo see the changes in effect, take a look at this screencast that compares tailwindcss.com on iOS 15.5 with a version that has the patches of this PR applied:\r\n\r\nhttps://github.com/user-attachments/assets/1279d6f5-3c63-4f30-839c-198a789f4292\r\n\r\n## Open questions\r\n\r\n- [ ] Should we make the `@property` polyfill not require an `@layer base` and instead place the generated CSS on the top of the file?\r\n- [ ] Add fallbacks for newly introduced usages of the relative color syntax.\r\n- [ ] Figure out how we actually implement the `@media` range query workarounds\r\n\r\n## Test plan\r\n\r\n- [x] Tested on tailwindcss.com via a preview build: https://tailwindcss-com-git-legacy-browsers-tailwindlabs.vercel.app/\r\n- [x] Updated tests\r\n- [ ] Ensure we test on Chrome 111, Safari 16.4, Firefox 128 to make sure we have no regressions\r\n\r\n ","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17435","RelatedDescription":"Open PR \"Improve compatibility with Safari 15\" (#17435)"},{"Id":"2956567458","IsPullRequest":true,"CreatedAt":"2025-03-28T16:40:57","Actor":"thecrypticace","Number":"17432","RawContent":null,"Title":"Add `bg-{position,size}-*` utilities","State":"closed","Body":"This PR adds `bg-{position,size}-*` utilities that support arbitrary values. This exist as the new preferred version of something like this:\r\n\r\n```\r\nbg-[120px_120px]\r\n```\r\n\r\nIs it size or position (hint: it's the 2nd one).\r\n\r\nTo override it you'd have to provide a data type:\r\n```\r\nbg-[size:120px_120px]\r\n```\r\n\r\n\r\nNow you can be more explicit and have better intellisense by writing these:\r\n```\r\nbg-position-[120px_120px]\r\nbg-size-[120px_120px]\r\n```\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17432","RelatedDescription":"Closed or merged PR \"Add `bg-{position,size}-*` utilities\" (#17432)"},{"Id":"2956191450","IsPullRequest":false,"CreatedAt":"2025-03-28T16:40:50","Actor":"mirorauhala","Number":"17429","RawContent":null,"Title":"Custom colors not working in CSS","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.17\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.2.0\n\n**What version of Node.js are you using?**\n\nv22.13.1\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nmacOS\n\nhttps://github.com/mirorauhala/tw-custom-properties\n\n**Issue**\n\nReferencing colors as `--color-*` properties from a CSS module file does not work unless the color utility is mentioned elsewhere. \n\nFor example, if you define a color such as `--color-red-custom-1: red` and use it from a CSS module file, like this:\n```css \n.red { background: var(--color-red-custom-1); }\n```\n\nThe final build will not contain the custom property defined and the color won't show correctly unless `bg-red-custom-1` is used elsewhere, which will cause the property to be included in the build.\n\n**Expected**\n\nThe colors to work. The docs outline the following:\n\n> Colors are exposed as CSS variables in the --color-* namespace, so you can reference them in CSS with variables like --color-blue-500 and --color-pink-700:\n\nhttps://tailwindcss.com/docs/colors#referencing-in-css\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17429","RelatedDescription":"Closed issue \"Custom colors not working in CSS\" (#17429)"},{"Id":"2956645022","IsPullRequest":true,"CreatedAt":"2025-03-28T16:36:28","Actor":"thecrypticace","Number":"17434","RawContent":null,"Title":"Add `drop-shadow-*` color support","State":"open","Body":"This PR adds support for two things:\r\n\r\n- New `drop-shadow-{color}` utilities which can be used to control the filder drop shadow color\r\n- New `drop-shadow-*/{alpha}` utilities which can be used to control the intensity of the drop shadow \r\n\r\nNote that drop-shadow-* utilities without a modifier use variables from your theme.\r\n\r\nIf you opt into using drop shadow colors or drop-shadow \"intensity\" utilities we will inline these values into your CSS when using a drop shadow color or drop shadow intensity utility and as such can't be changed by changing the theme variables on a per-element/tree basis.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17434","RelatedDescription":"Open PR \"Add `drop-shadow-*` color support\" (#17434)"},{"Id":"2956471074","IsPullRequest":true,"CreatedAt":"2025-03-28T16:28:20","Actor":"thecrypticace","Number":"17431","RawContent":null,"Title":"Rework scripting variants","State":"closed","Body":"This replaces the `scripting`, `scripting-none`, and `scripting-initial` variants with one `noscript` variant that matches the name of the HTML `<noscript>` element. The previous `scripting` can then be represented as `not-noscript` e.g. `not-noscript:flex`.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17431","RelatedDescription":"Closed or merged PR \"Rework scripting variants\" (#17431)"},{"Id":"2956368131","IsPullRequest":false,"CreatedAt":"2025-03-28T14:40:14","Actor":"asionesjia","Number":"17430","RawContent":null,"Title":"appearance-none doesn't work on ::-webkit-search-cancel-button in Apple devices (WebKit browsers)","State":"open","Body":"Description: The `appearance-none` utility in Tailwind CSS doesn't seem to work as expected on the `::-webkit-search-cancel-button` pseudo-element in WebKit-based browsers (such as Safari) on Apple devices. This causes the search cancel button to still appear in search input fields.\n\nSteps to Reproduce:\n\nUse Tailwind CSS's appearance-none on an `input[type=\"search\"]` element.\n\nObserve the behavior in WebKit-based browsers (Safari, Chrome on iOS, etc.).\n\nThe cancel button (::-webkit-search-cancel-button) still appears, even though appearance-none is applied.\n\nExpected Behavior: appearance-none should hide the search cancel button, or at least prevent it from being styled by the default WebKit appearance.\n\nActual Behavior: The cancel button is still displayed in WebKit browsers.\n\nProposed Solution: Manually applying the following CSS fixes the issue:\n\n```css\ninput[type=\"search\"]::-webkit-search-cancel-button {\n  -webkit-appearance: none;\n}\n```\nIt would be great if Tailwind CSS could account for this issue and provide a built-in solution, or if a workaround could be documented in the official documentation.\n\nEnvironment:\n\nTailwind CSS version: 4.0.9\n\nBrowser: Safari, Chrome on Mac and IOS, other WebKit-based browsers\n\nDevice: Apple devices (iPhone, iPad)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17430","RelatedDescription":"Open issue \"appearance-none doesn't work on ::-webkit-search-cancel-button in Apple devices (WebKit browsers)\" (#17430)"},{"Id":"2955270593","IsPullRequest":false,"CreatedAt":"2025-03-28T13:37:56","Actor":"senneclaeskens","Number":"17424","RawContent":null,"Title":"Razor pre-processing issue with @@","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.17\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nTailwind CLI\n\n**What version of Node.js are you using?**\n\nv22.12.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n\nhttps://github.com/senneclaeskens/tailwind4-repro\n\nTailwind play: https://play.tailwindcss.com/alK9PzyzWY\n\n**Describe your issue**\n\nAs explained here: https://github.com/tailwindlabs/tailwindcss/issues/17022#issuecomment-2757918726\n\nThe first element should also have a red background.\n\n![Image](https://github.com/user-attachments/assets/54634ad0-e71f-4a9a-9752-02e6a45903bc)\n\nGenerated html by razor:\n\n![Image](https://github.com/user-attachments/assets/680a3c3a-ff88-460b-a8c3-88a52e48aaaf)\n\nSource code:\n\n![Image](https://github.com/user-attachments/assets/a268fe39-e427-4b85-bd6a-14ef04dce244)\n\nI'm not saying this is a tailwind issue, but in v3 we could use a content transformer in combination with this syntax in razor: `@(\"@\")`. This would always render one `@`, which would make the CSS work correctly.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17424","RelatedDescription":"Closed issue \"Razor pre-processing issue with @@\" (#17424)"},{"Id":"2955861811","IsPullRequest":true,"CreatedAt":"2025-03-28T13:37:54","Actor":"RobinMalfait","Number":"17427","RawContent":null,"Title":"Extract special `@(\"@\")md:…` syntax in Razor files","State":"closed","Body":"This PR fixes an extraction issue in Razor files where `@@md:bg-red-500` can't always be extracted properly. We already convert `@@md:bg-red-500` to ` @md:bg-red-500` but in certain situations Razor will emit the double `@@` to the DOM.\r\n\r\nA workaround in Razor land would be to write `@(\"@\")md:bg-red-500` instead. See: https://github.com/dotnet/aspnetcore/issues/38595 But then we don't extract the `@md:bg-red-500` properly anymore.\r\n\r\nThis is where this PR comes in, essentially we will pre process the Razor contents and apply the following replacement internally:\r\n\r\n```diff\r\n- @(\"@\")md:bg-red-500\r\n+      @md:bg-red-500\r\n```\r\nNotice that the `)` looks like it's replaced with `@`. This will have a small side effect later when we get to the testing part.\r\n\r\nBut this way we properly see the `@md:bg-red-500` class during class extraction.\r\n\r\n> [!WARNING]\r\n> There is technically a bug here because of the replacement with `@`, because if you now run the `npx @tailwindcss/upgrade@latest` tool, then we would replace `)md:bg-red-500` if changes are required, not the `@(\"@\")md:bg-red-500` part. We can try to fix that in this PR but it seems unlikely that we will actually run into this issue realistically speaking. I think fixing the actual extraction here is much more important than the upgrade tooling that could fail _if_ we ever have to migrate `@md:…` to something else.\r\n\r\nFixes: #17424\r\n\r\n## Test plan\r\n\r\n1. Added a test to verify the fix\r\n2. Existing tests pass\r\n3. Verified this in the extractor tool, but it looks a tiny bit funky.\r\n\r\n   Typically we remove characters by replacing it with a space ` `. But this time, we replace it with some spaces _and_ an `@` character that didn't exist at that specific position. If you look at the diff above, you will notice that `)` was replaced with `@`.\r\n\r\n   That's why in the extractor tool it is highlighted that it could extract it, but it's just funny looking because it highlights `)md:bg-red-500`\r\n\r\n<img width=\"1816\" alt=\"image\" src=\"https://github.com/user-attachments/assets/57e6a3ac-bfd5-4cad-a1ce-0039b4d7d9b5\" />\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17427","RelatedDescription":"Closed or merged PR \"Extract special `@(\"@\")md:…` syntax in Razor files\" (#17427)"},{"Id":"2955478792","IsPullRequest":false,"CreatedAt":"2025-03-28T09:42:59","Actor":"askomarov","Number":"17425","RawContent":null,"Title":"autofill: not working in both version","State":"closed","Body":"\n**What version of Tailwind CSS are you using?**\n\nv4.0.6  / v3.4.17\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nTailwind play\n\n**What browser are you using?**\n\nFor example: Chrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/p6EOb1iUig\nhttps://play.tailwindcss.com/Vnh4x1p8L4\n\n**Describe your issue**\n\nautocomplete styling not working","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17425","RelatedDescription":"Closed issue \"autofill: not working in both version\" (#17425)"},{"Id":"2954804199","IsPullRequest":false,"CreatedAt":"2025-03-28T01:51:25","Actor":"Pmacdon15","Number":"17421","RawContent":null,"Title":"Super obscure issue - hover on Tailwind V4 not working in extreme edge case","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\n  \"@tailwindcss/postcss\": \"^4\",\n  \"tailwindcss\": \"^4\",\nor the version this site is on: [tailwind docs](https://tailwindcss.com/docs/hover-focus-and-other-states#hover-focus-and-active)\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n \"@eslint/eslintrc\": \"^3\",\n    \"@tailwindcss/postcss\": \"^4\",\n    \"@types/node\": \"^20\",\n    \"@types/react\": \"^19\",\n    \"@types/react-dom\": \"^19\",\n    \"eslint\": \"^9\",\n    \"eslint-config-next\": \"15.2.3\",\n    \"tailwindcss\": \"^4\",\n    \"typescript\": \"^5\"\n\n**What version of Node.js are you using?**\n\nv22.8.0\n\n**What browser are you using?**\n\nChrome, Edge\n\n**What operating system are you using?**\n\nWindows\nHP Spectre 360 \n\n**Reproduction URL**\n[https://github.com/Pmacdon15/hover-issue.git](https://github.com/Pmacdon15/hover-issue.git)\n[tailwindcss.com/docs/hover-focus-and-other-states#hover-focus-and-active](https://tailwindcss.com/docs/hover-focus-and-other-states#hover-focus-and-active)\n\n**Describe your issue**\n\nSo as I said this is a very obscure issue so if you close it I would understand but here is the issue. In Tailwind V4 on my windows laptop after the latest update when my laptop is folded over in tablet mode while using a mouse the on hover effect does not work on buttons. Normally I would chalk this up to a weird Windows configuration especially being that I just did an update but most other buttons on the Internet seem to work fine, even the ones from the old [tailwind docs.](https://v2.tailwindcss.com/docs/hover-focus-and-other-statesl) work fine . This issue happens in both the recreation repo I made for you and on the official docs of the current version [https://tailwindcss.com/docs/hover-focus-and-other-states#hover-focus-and-active](https://tailwindcss.com/docs/hover-focus-and-other-states#hover-focus-and-active). I am using an HP Spectre 360 and this happens both on Edge and Chrome only while in tablet mode.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17421","RelatedDescription":"Open issue \"Super obscure issue - hover on Tailwind V4 not working in extreme edge case\" (#17421)"},{"Id":"2953460258","IsPullRequest":false,"CreatedAt":"2025-03-27T17:03:50","Actor":"schillerenrico","Number":"17411","RawContent":null,"Title":"text-[0] is not generating font-size: 0","State":"closed","Body":"text-[value] is used for \"color\" and \"font-size\".\nSo the problem with text-[0] is its generating color: 0 instead of font-size: 0\n\nWith checking for the first value char as a number it should be solved","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17411","RelatedDescription":"Closed issue \"text-[0] is not generating font-size: 0\" (#17411)"},{"Id":"2953716374","IsPullRequest":false,"CreatedAt":"2025-03-27T16:55:08","Actor":"coderrshyam","Number":"17417","RawContent":null,"Title":"Border style CSS variables incorrectly compiled as border-color","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.0.17\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 15.2.5\n\n**What version of Node.js are you using?**\n\n22.14.0\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction**\n\n1. Define a CSS variable: `--ripple-border-style: dashed;`\n2. Use it in a class: `border-(--ripple-border-style)`\n\nExpected behavior:\nThe compiled CSS should be: `border-style: var(--ripple-border-style);`\n\nActual behavior:\nThe compiled CSS is: `border-color: var(--ripple-border-style);`\n\n**Describe your issue**\n\nThis makes it difficult to dynamically change border styles using CSS variables. The workaround is to use static border styles like `border-dashed`, but this doesn't allow for dynamic style changes via CSS variables.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17417","RelatedDescription":"Closed issue \"Border style CSS variables incorrectly compiled as border-color\" (#17417)"},{"Id":"2953470332","IsPullRequest":false,"CreatedAt":"2025-03-27T15:34:24","Actor":"Bagmaz","Number":"17412","RawContent":null,"Title":"[v4.0.17] Infinite rebuild loop with `vite build --watch`, fixed in v4.0.6","State":"open","Body":"### What version of Tailwind CSS are you using?\nv4.0.17 (bug appears)  \nv4.0.6 (works correctly)\n\n### What build tool (or framework if it abstracts the build tool) are you using?\nVite 6.2.3\n\n### What version of Node.js are you using?\nv23.10.0\n\n### What version of npm are you using?\n10.9.2\n\n### What browser are you using?\nChrome\n\n### What operating system are you using?\nmacOS\n\n---\n\n### Describe the bug\n\nAfter upgrading to Tailwind CSS v4.0.17, running the following command causes an infinite rebuild loop:\n\n```bash\nvite build --watch\n```\n\nReproduction steps\n\n1. Install tailwindcss@4.0.17 and @tailwindcss/vite@4.0.17\n2. Run vite build --watch\n3. Notice the build restarts over and over\n4. Downgrade Tailwind CSS to v4.0.6\n5. The issue disappears — builds only trigger on file changes as expected\n\n`vite.config.js`\n\n```\nimport {defineConfig} from \"vite\";\nimport tailwindcss from '@tailwindcss/vite';\n\nexport default defineConfig({\n    plugins: [\n        tailwindcss()\n    ],\n    build: {\n        outDir: \"./assets\",\n        emptyOutDir: false,\n        minify: false,\n        rollupOptions: {\n            input: {\n                app: \"./resources/js/app.js\",\n                styles: \"./resources/css/app.css\",\n            },\n            output: {\n                dir: \"./assets\",\n                entryFileNames: \"[name].js\",\n                chunkFileNames: \"[name].js\",\n                assetFileNames: \"[name].css\",\n            },\n        },\n    },\n});\n```\n\n`package.json`\n\n```\n{\n  \"name\": \"vite-tailwind-alpine\",\n  \"version\": \"1.0.0\",\n  \"description\": \"A custom Shopify theme built with Dawn\",\n  \"type\": \"module\",\n  \"scripts\": {\n    \"dev\": \"run-p -sr shopify:dev watch\",\n    \"shopify:dev\": \"shopify theme dev -s my-project\",\n    \"build\": \"vite build --minify\",\n    \"watch\": \"vite build --watch\"\n  },\n  \"devDependencies\": {\n    \"@tailwindcss/vite\": \"^4.0.6\",\n    \"tailwindcss\": \"^4.0.6\",\n    \"vite\": \"^6.2.3\",\n    \"npm-run-all\": \"^4.1.5\"\n  },\n  \"dependencies\": {\n    \"alpinejs\": \"^3.14.9\",\n    \"gsap\": \"^3.12.7\"\n  }\n}\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17412","RelatedDescription":"Open issue \"[v4.0.17] Infinite rebuild loop with `vite build --watch`, fixed in v4.0.6\" (#17412)"},{"Id":"2950613286","IsPullRequest":false,"CreatedAt":"2025-03-27T15:17:32","Actor":"sunshmo","Number":"17399","RawContent":null,"Title":"Error evaluating Node.js code","State":"closed","Body":"When you rename the `globals.css` in the `app` directory to `globals.css`, the following error message will appear on the screen. Undo the file name change and there will be no error message.\n\n\n```\nBuild Error\n\n\nError evaluating Node.js code\n\n./packages/shared-models/app/globals.scss\n\nError evaluating Node.js code\nError: Expected expression.\n```\n\n\n\n**How to reproduce the bug.**\n\n1. The project was created using `npx create-next-app@latest`\n2. `pnpm dlx shadcn@latest init`\n3. `pnpm dlx shadcn@latest add button`\n\nHere are some dependency configurations for the project.\n\n```json\n{\n  \"dependencies\": {\n    \"@radix-ui/react-slot\": \"^1.1.2\",\n    \"class-variance-authority\": \"^0.7.1\",\n    \"clsx\": \"^2.1.1\",\n    \"lucide-react\": \"^0.483.0\",\n    \"next\": \"^15.2.4\",\n    \"react\": \"^19.0.0\",\n    \"react-dom\": \"^19.0.0\",\n    \"tailwind-merge\": \"^3.0.2\",\n    \"tw-animate-css\": \"^1.2.4\"\n  },\n  \"devDependencies\": {\n    \"@tailwindcss/postcss\": \"^4\",\n    \"@types/node\": \"^20\",\n    \"@types/react\": \"^19\",\n    \"@types/react-dom\": \"^19\",\n    \"sass-embedded\": \"^1.86.0\",\n    \"tailwindcss\": \"^4\",\n    \"typescript\": \"^5\"\n  }\n}\n```\n\n**next.config.ts**\n```ts\nimport type { NextConfig } from \"next\";\n\nconst nextConfig: NextConfig = {\n  /* config options here */\n  sassOptions: {\n    implementation: 'sass-embedded'\n  }\n};\n\nexport default nextConfig;\n```\n\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17399","RelatedDescription":"Closed issue \"Error evaluating Node.js code\" (#17399)"},{"Id":"2952443474","IsPullRequest":false,"CreatedAt":"2025-03-27T15:16:34","Actor":"WouterDeGeringel","Number":"17408","RawContent":null,"Title":"[v4] Errors on build when using other post-css plugins (works fine in dev)","State":"closed","Body":"### The issue\nWhen using other postcss plugins (in this case postcss-mixin and postcss-nested) everything works fine with vite's dev server. But when building the order of the plugins is not respected, causing issues and even a build error in the case of postcss-mixin. I get the same then not using the Vite config but a postcss config file. I would expect the dev and build would produce the same results and since Tailwind 4 is just a postcss plugin it would respect the plugin order.\n\n### Env\n```\nSystem:\n    OS: macOS 15.3\n    CPU: (12) arm64 Apple M2 Max\n    Memory: 141.72 MB / 32.00 GB\n    Shell: 5.9 - /bin/zsh\n  Binaries:\n    Node: 23.10.0 - /opt/homebrew/bin/node\n    npm: 10.9.2 - /opt/homebrew/bin/npm\n  Browsers:\n    Chrome: 134.0.6998.89\n    Safari: 18.3\n  npmPackages:\n    @tailwindcss/postcss:  4.0.17\n    postcss-mixins: 11.0.3\n    postcss-nested\": 7.0.2\n    vite: 6.2.3\n```\n\n### Issue project repo\n[https://github.com/WouterDeGeringel/tailwind4-postcss-plugins-issue-on-build](https://github.com/WouterDeGeringel/tailwind4-postcss-plugins-issue-on-build)\n\n### Reproduction steps\n- run: npm install\n- run: npm run dev\n- Everthing works fine (hover on \"X\" will turn it red\n- run: npm run build\n- You'll see an error (error during build: ... Undefined mixin icon\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17408","RelatedDescription":"Closed issue \"[v4] Errors on build when using other post-css plugins (works fine in dev)\" (#17408)"},{"Id":"2953130294","IsPullRequest":false,"CreatedAt":"2025-03-27T14:35:29","Actor":"TwickE","Number":"17409","RawContent":null,"Title":"rounded classes not working as expected when combined","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n4.0.12\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\nNext.js 15.2.1\n\n**What version of Node.js are you using?**\nv22.11.0\n\n**What browser are you using?**\nChrome\n\n**What operating system are you using?**\nWindows 11\n\n**Reproduction URL**\nTailwind Play: https://play.tailwindcss.com/izhDR42ZQH\n\n**Describe your issue**\nWhen using `rounded-s-full` or `rounded-e-full` combined with `rounded-e-md` or `rounded-s-md` only the class with the `full` will be applied the other is ignored. See the example bellow or the Tailwind Play url.\n\nIn the following example only the `rounded-s-full` is beeing applied in the first `<div>` and `rounded-e-full` in the second `<div>`.\n![Image](https://github.com/user-attachments/assets/d017ef37-ac8a-469f-8037-d909fe9edf9e)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17409","RelatedDescription":"Closed issue \"rounded classes not working as expected when combined\" (#17409)"},{"Id":"2950773611","IsPullRequest":false,"CreatedAt":"2025-03-26T20:57:25","Actor":"coscura","Number":"17402","RawContent":null,"Title":"Invalid CSS causes entire page to crash with STATUS_BREAKPOINT","State":"open","Body":"**What version of Tailwind CSS are you using?**\n\nv4.0.17\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\npostcss 8.5.3, React 18.3.1, Vite 6.0.3\n\n**What version of Node.js are you using?**\n\nv22.0.0\n\n**What browser are you using?**\n\nChrome, Vivaldi, WebView2 (Tauri app)\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/Et6k9kAgbw\n\n**Describe your issue**\n\nI'm working with Tauri, Vite, React, and tailwindcss (with postcss transformer defined in vite.config.js). One specific class with 3 modifiers (`file:disabled:dark:bg-green-500`) generates some invalid CSS which in turn crashes the entire page with `STATUS_BREAKPOINT`, this happened to me on both Chrome and WebView2 on Windows. I have `@custom-variant dark (&:is(.dark *));` in my css file, I copied a similar variant from [tailwind docs](https://tailwindcss.com/docs/dark-mode#toggling-dark-mode-manually:~:text=%40custom%2Dvariant%20dark%20(%26%3Awhere(.dark%2C%20.dark%20*))%3B) and used it in the playground with the same error occurring. Removing the custom variant generates `@media` modifiers instead and fixes the issue.\n\n![Image](https://github.com/user-attachments/assets/25a5fb70-abef-4488-8692-f44e943c8ce8)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17402","RelatedDescription":"Open issue \"Invalid CSS causes entire page to crash with STATUS_BREAKPOINT\" (#17402)"},{"Id":"2949987244","IsPullRequest":true,"CreatedAt":"2025-03-26T16:08:53","Actor":"RobinMalfait","Number":"17394","RawContent":null,"Title":"A bit of internal cleanup","State":"closed","Body":"Was working on another issue and noticed that I wanted these but they aren't related to any of the issues. So opening a separate PR to do some internal cleanup.\r\n\r\nEssentially what happens here is:\r\n\r\n1. Run `cargo --clippy` and `cargo fmt` to format everything nicely.\r\n2. Added `pretty_assertions` to get better diffs when working on Rust tests if `assert_eq!(…)` fails.\r\n\r\nThis is just some internal cleanup, nothing changes for end users so no changelog entry was added.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17394","RelatedDescription":"Closed or merged PR \"A bit of internal cleanup\" (#17394)"},{"Id":"2949310879","IsPullRequest":true,"CreatedAt":"2025-03-26T12:11:56","Actor":"RobinMalfait","Number":"17391","RawContent":null,"Title":"Fix symlink issues when resolving `@source` directives","State":"closed","Body":"This PR fixes some issues related to symlinks when using them in the `@source` directive.\n\nFixes: #16765\nFixes: #16038\n\n## Test plan\n\n1. Added tests to prove this works\n   - Added a recursive symlink test as well to make sure we don't hang\n2. Existing tests still pass\n\n\n[ci-all]\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17391","RelatedDescription":"Closed or merged PR \"Fix symlink issues when resolving `@source` directives\" (#17391)"},{"Id":"2947289644","IsPullRequest":false,"CreatedAt":"2025-03-26T10:00:12","Actor":"neontuna","Number":"17379","RawContent":null,"Title":"cli hangs on version 4.0.16","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.16\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\ntailwind-cli\n\n**What version of Node.js are you using?**\n\n21.7.3\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nmacOS\n\n**Describe your issue**\n\nJust noticed this on a deploy to Heroku, our normal build step for Tailwind is hanging.  No issues locally until I force it to install 4.0.16 and then it just hangs.  No errors.  I don't see a debug or verbose output option for the cli so I'm not sure what to do to further troubleshoot.    Adding `\"@tailwindcss/cli\": \"4.0.15\"` to package.json, to force a downgrade to 15, and all is well again.\n\n```\nnpx @tailwindcss/cli -i ./app/assets/stylesheets/application.tailwind.css -o ./app/assets/builds/application.css --minify\nNeed to install the following packages:\n@tailwindcss/cli@4.0.16\nOk to proceed? (y)\n*hangs* here, no output\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17379","RelatedDescription":"Closed issue \"cli hangs on version 4.0.16\" (#17379)"},{"Id":"2947791842","IsPullRequest":true,"CreatedAt":"2025-03-26T10:00:10","Actor":"thecrypticace","Number":"17383","RawContent":null,"Title":"Fix Ruby files causing the CLI to hang","State":"closed","Body":"Fixes #17379\r\n\r\nThe preprocessor we added to detect embedded languages uses a back reference and given a long enough file with certain byte / character patterns it'll cause what appears to be an indefinite hang (might just be catastrophically exponential backtracking but not sure)\r\n\r\nThis replaces the one regex w/ back references with two, anchored, multi-line regexes\r\n\r\nNow we search for all the starting & ending delimiters in the file. We then loop over all the starting delimiters, find the paired ending one, and preprocess the content inside","Url":"https://github.com/tailwindlabs/tailwindcss/pull/17383","RelatedDescription":"Closed or merged PR \"Fix Ruby files causing the CLI to hang\" (#17383)"},{"Id":"2948162801","IsPullRequest":false,"CreatedAt":"2025-03-26T06:21:07","Actor":"benjaminv","Number":"17385","RawContent":null,"Title":"Media query is not working for all browsers not just Safari","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nexample: v4.0.16\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 6.2.0\n\n**What version of Node.js are you using?**\n\nv20.0.0\n\n**What browser are you using?**\n\nChrome, Safari, and Firefox\n\n**What operating system are you using?**\n\nmacOS, iOS\n\n\n\n**Describe your issue**\n\nThis applies to both Dev and final build. \nThe css is translated to\n```\n@layer utilities {\n.lg\\:bg-blue-300 {\n    @media (width >= '990px') {\n      background-color: var(--color-blue-300);\n    }\n  }\n}\n```\nWhere it should be\n```\n@layer utilities {\n.lg\\:bg-blue-300 {\n    @media (width >=  900px) { /* should not have quote in size */\n      background-color: var(--color-blue-300);\n    }\n  }\n}\n```\nor more conveniently,\n```\n@layer utilities {\n.lg\\:bg-blue-300 {\n    @media (min-width:900px) {\n      background-color: var(--color-blue-300);\n    }\n  }\n}\n```\n\nthe difference is currently @media (width >= '990px') with `''` on size is not working, otherwise @media (width >= 900px) works.\n\nAccording to [MWD reference](https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_media_queries/Using_media_queries) the size value should not have quote. \n\n\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17385","RelatedDescription":"Closed issue \"Media query is not working for all browsers not just Safari\" (#17385)"},{"Id":"2947347044","IsPullRequest":false,"CreatedAt":"2025-03-25T17:59:31","Actor":"kmccrory-grx","Number":"17381","RawContent":null,"Title":"\"@source not \"...\" gives an error Error: `@source` paths must be quoted.","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.0.16\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nnext 14.2\n\n**What version of Node.js are you using?**\n\n20.14\n\n**What browser are you using?**\n\nFor example: Chrome, Safari, or N/A\n\n**What operating system are you using?**\n\nmac\n\n**Reproduction URL**\n\nn/a\n\n**Describe your issue**\nIM trying to use the new `@source not \"...\"` directive.  whatever i add into the not line, our build will fail saying \n`Error: '@source' paths must be quoted.`\n\nerror dissapears when i remove the `not`","Url":"https://github.com/tailwindlabs/tailwindcss/issues/17381","RelatedDescription":"Closed issue \"\"@source not \"...\" gives an error Error: `@source` paths must be quoted.\" (#17381)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-03-29T03:30:24.4307559Z","RunDurationInMilliseconds":400}