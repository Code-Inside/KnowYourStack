{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"1468967216","IsPullRequest":false,"CreatedAt":"2022-11-30T02:46:44","Actor":"shengslogar","Number":"9968","RawContent":null,"Title":"Combining `darkMode: 'class'` and `important` configs doesn't work as expected","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.2.4\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nN/A (Laravel Mix)\r\n\r\n**What version of Node.js are you using?**\r\n\r\nN/A (v19.1.0)\r\n\r\n**What browser are you using?**\r\n\r\nN/A (Chrome)\r\n\r\n**What operating system are you using?**\r\n\r\nN/A (macOS Monterey)\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/qtdsow5nGH?file=config\r\n\r\n**Describe your issue**\r\n\r\nGiven the following Tailwind config:\r\n\r\n```\r\nmodule.exports = {\r\n  darkMode: 'class',\r\n  important: '#app',\r\n};\r\n```\r\n\r\nAnd the following HTML:\r\n```\r\n<div id=\"app\">\r\n  <div class=\"w-10 h-10 bg-red-500 dark:bg-blue-500\"></div>\r\n</div>\r\n```\r\n\r\nThe following CSS is generated:\r\n\r\n```\r\n#app .dark .dark\\:bg-blue-500 {\r\n  --tw-bg-opacity: 1;\r\n  background-color: rgb(59 130 246 / var(--tw-bg-opacity))\r\n}\r\n```\r\n\r\nI would expect either `#app.dark` or `.dark #app` to be outputted instead. [Docs](https://tailwindcss.com/docs/dark-mode#toggling-dark-mode-manually) suggest only the HTML tag is ever intended to have the `.dark` class applied, so `.dark #app` is likely the correct output here.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/9968","RelatedDescription":"Open issue \"Combining `darkMode: 'class'` and `important` configs doesn't work as expected\" (#9968)"},{"Id":"1468218844","IsPullRequest":true,"CreatedAt":"2022-11-29T21:06:59","Actor":"adamwathan","Number":"9962","RawContent":null,"Title":"Support variable shorthand for arbitrary modifiers","State":"closed","Body":"This PR adds support for syntax like `bg-red-500/[--opacity]` to be consistent with our recent support for things like `leading-[--my-leading]`.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/9962","RelatedDescription":"Closed or merged PR \"Support variable shorthand for arbitrary modifiers\" (#9962)"},{"Id":"1454868971","IsPullRequest":false,"CreatedAt":"2022-11-29T19:57:08","Actor":"stfnx","Number":"9870","RawContent":null,"Title":"--watch doesn't work in background","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv3.2.4\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nTailwindCSS standalone binary\r\n\r\n**What operating system are you using?**\r\n\r\nHappens on both Linux and Windows\r\n\r\n**Describe your issue**\r\n\r\nI have a shell script to start my development server:\r\n```\r\n#!/bin/env bash\r\n\r\n# Get absolute path to project's root direcotry\r\nPROJECT_ROOT=$(realpath \"$0\")\r\nPROJECT_ROOT=$(dirname \"$PROJECT_ROOT\")\r\n\r\n# Run tailwind watcher in background\r\n${PROJECT_ROOT}/tailwind/tailwind_bin_v3.2.4 \\\r\n--watch \\\r\n--config ${PROJECT_ROOT}/tailwind/config.js \\\r\n--input ${PROJECT_ROOT}/tailwind/main.css \\\r\n--output ${PROJECT_ROOT}/app/static/css/tailwind.css &\r\n\r\n# Run flask dev server in debug mode\r\nflask --debug run\r\n```\r\n\r\nThis worked perfectly fine with TailwindCSS v3.1.8 but now I upgraded to v3.2.4 and it doens't work anymore.\r\n\r\nDowngrading to v3.1.8 makes it work again.\r\n\r\n# Expected behaviour\r\n\r\nWhen running the script, the Tailwind watcher should run as a background process and I should see its output (Rebuilding...Done in 267ms) in stdout.\r\n\r\n# Actual behaviour\r\n\r\nThe Tailwind watcher doesn't run and I can't see any output in stdout.\r\n\r\n# Note\r\n\r\nWhen running the command in foreground (without `&` at the end) it works as expected. So as a workaround I run flask in background and tailwind in foreground.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/9870","RelatedDescription":"Closed issue \"--watch doesn't work in background\" (#9870)"},{"Id":"1468608677","IsPullRequest":true,"CreatedAt":"2022-11-29T19:57:07","Actor":"thecrypticace","Number":"9966","RawContent":null,"Title":"Add `--watch=always` option to prevent exit when stdin closes","State":"closed","Body":"Fixes #9870\r\n\r\nWe were trying our best to not need an option for this but there are too many scenarios where one behavior works for a tool and the other one does not.\r\n\r\nIn general, exiting when stdin closes is still the only reliable way to guarantee a process actually exits appropriately when orphaned because the OS / kernel itself will close the file handle associated with stdin. But, in certain scenarios, stdin isn't wired up in the first place. For instance:\r\n- Turborepo does this (or did at one point — not sure if it has been changed yet)\r\n- Bash does this when running commands in the background ONLY when not in an interactive shell","Url":"https://github.com/tailwindlabs/tailwindcss/pull/9966","RelatedDescription":"Closed or merged PR \"Add `--watch=always` option to prevent exit when stdin closes\" (#9966)"},{"Id":"1465890537","IsPullRequest":true,"CreatedAt":"2022-11-29T10:17:39","Actor":"NakajimaTakuya","Number":"9944","RawContent":null,"Title":"Support renaming of output files by `PostCSS` plugin.","State":"closed","Body":"If you use tailwindcss as a cli and set the postcss option, the output file will ignore changes to result.opts by the postcss plugin and respect the output option passed to the cli.\r\n\r\nHowever, some postcss plugins, such as the cache buster plugins, work by rewriting [result.opts](https://postcss.org/api/#resultoptions).\r\nLike this one, for example.\r\nhttps://github.com/keithamus/postcss-hash/blob/v2.0.0/index.js#L55-L57\r\n\r\nThis change is to honor the end product, `result.opts.to`, as the output file during postcss adaptation.\r\n\r\nExample of reproducing the current problem.\r\n```\r\n// commands.\r\ntailwindcss -i /path/to/input.css -o /path/to/output.css --postcss postcss.config.js\r\n\r\n\r\n// postcss.config.js\r\nmodule.exports = {\r\n  plugins: [\r\n    require('postcss-hash')({manifest: './manifest.json'})\r\n  ]\r\n}\r\n\r\n// expected: outputfile: /path/to/output.a1b2c3d4e5.css\r\n// actual: outputfile: /path/to/output.css\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/pull/9944","RelatedDescription":"Closed or merged PR \"Support renaming of output files by `PostCSS` plugin.\" (#9944)"},{"Id":"1467118007","IsPullRequest":false,"CreatedAt":"2022-11-28T21:30:26","Actor":"atur94","Number":"9954","RawContent":null,"Title":"Hot module replacement is not picking css changes after editing tailwind class in components","State":"open","Body":"**What version of Tailwind CSS are you using?**\r\n\r\nv3.2.4\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\n\"next\": \"13.0.5\",\r\n\"autoprefixer\": \"^10.4.13\",\r\n\"postcss\": \"^8.4.19\",\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv18.4.0\r\n\r\n**What browser are you using?**\r\n\r\nFirefox, Chrome, Edge\r\n\r\n**What operating system are you using?**\r\n\r\nWindows 10\r\n\r\n**Reproduction URL**\r\n\r\nMinimal reproduction repo based on steps included in: https://tailwindcss.com/docs/guides/nextjs#app-directory\r\nhttps://github.com/atur94/nextjs-tailwind-issue-reproduce-sample\r\n\r\nRepo is all set and ready to use. I noted each step in README that was used to create that project and was needed to reproduced that issue\r\n\r\n**Describe your issue**\r\n\r\nChanging tailwind class names in `*.tsx` components does not trigger browser to reload the style file. After changing class names in `tsx` components, html updates but the styling is gone because initially loaded css does not include definition of newly added class. After manual reload style is loading fine.\r\n\r\nI observed that, after each change(for example changing from `bg-red-500` to `bg-blue-500` in component, new class is appended to: ` ./next/static/css/app_globals_css.css` so that means that tailwind is working as supposed to. It seems that there is something with Hot Module Replacement.\r\n\r\nDescribed behaviour exists when env variable is set to TAILWIND_MODE=watch\r\n\r\nI am beginner in javascript, typescript, next and tailwind but I am sure that it shouldn't behave liek that\r\n\r\nSteps to reproduce issue \r\n\r\n1. Add color class to `app/page.tsx` for example `bg-red-500`\r\n2. Run app with `npm run dev`\r\n3. Enter `localhost:3000`\r\n4. Change background color class to something different(ex. `bg-red-600`) and save file\r\n5. File `.next/static/css/app_globals_css.css` has updated and added class exists at the end of file\r\n6. Background color on the page disappears because `css` file is not reloaded and new class does not exist in currently loaded file\r\n7. Reload page manually - change should be now visible\r\n8. Change background class again\r\n9. Add anything to `app/globals.css` and save it, still css is not refreshed\r\n\r\nAfter each step in the developer console message `[Fast Refresh] rebuilding` is printed. In the terminal, log below is printed\r\n\r\n```\r\nwait  - compiling...\r\nevent - compiled client and server successfully in 178 ms (332 modules)\r\n```\r\n\r\n## Workaround for chrome\r\n\r\n1. Open developer console\r\n2. Go to settings -> workspace\r\n3. Add folder `~/.next/static/css`\r\n4. After that step, all the css changes should be visible immidiately after fast refresh\r\n\r\nVideo that shows following issue\r\n\r\n![reproducing-issue](https://user-images.githubusercontent.com/20795446/204384286-0ca448b1-75cd-4a92-80bf-c8e97e48bbfc.gif)\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/9954","RelatedDescription":"Open issue \"Hot module replacement is not picking css changes after editing tailwind class in components\" (#9954)"},{"Id":"1467098944","IsPullRequest":true,"CreatedAt":"2022-11-28T21:10:55","Actor":"chuntington","Number":"9953","RawContent":null,"Title":"Alphabetize several theme properties","State":"open","Body":"This corrects the alphabetical position of several properties. (https://tailwindcss.com/docs/theme#configuration-reference)\r\n\r\nHere is a full list of properties that were moved around:\r\n- accentColor\r\n- brightness\r\n- caretColor\r\n- columns\r\n- contrast\r\n- grayscale\r\n- gridRowEnd/Start\r\n- hueRotate\r\n- invert\r\n- textIndent/Opacity\r\n- supports","Url":"https://github.com/tailwindlabs/tailwindcss/pull/9953","RelatedDescription":"Open PR \"Alphabetize several theme properties\" (#9953)"},{"Id":"1465915678","IsPullRequest":false,"CreatedAt":"2022-11-28T15:40:43","Actor":"PhilippLeh","Number":"9946","RawContent":null,"Title":"Wrong order of custome breakpoints","State":"closed","Body":"**What versions are you using?**\r\n\r\nlatest version of tailwind with Next.js\r\n\r\n**Describe your issue**\r\n\r\nIf you add new breakpoints, they will be added in the css file after the original ones. With the mobile first approach, this leads to undesirable behavior as smaller breakpoints are now prioritized higher. This bug only occurs on a production build. \r\n\r\nCustome Breakpoints:\r\n![Bildschirmfoto 2022-11-28 um 07 50 56](https://user-images.githubusercontent.com/61593457/204212408-0e7c8381-35ee-4741-94f2-a90886491319.png)\r\n\r\nUndesirable behavior (lb is used and not xl, because of the wrong order in the css file):\r\n![Bildschirmfoto 2022-11-28 um 07 56 02](https://user-images.githubusercontent.com/61593457/204213234-a9025293-dd2d-4d6c-8e39-96ac372a1967.png)\r\n\r\n![Bildschirmfoto 2022-11-28 um 07 59 20](https://user-images.githubusercontent.com/61593457/204214213-efb542e7-066a-407a-92d4-8348067f1626.png)\r\n\r\n![Bildschirmfoto 2022-11-28 um 08 00 12](https://user-images.githubusercontent.com/61593457/204214232-6745f757-4436-4444-868a-a9c8c25d642a.png)\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/9946","RelatedDescription":"Closed issue \"Wrong order of custome breakpoints\" (#9946)"},{"Id":"1465531647","IsPullRequest":true,"CreatedAt":"2022-11-28T12:19:37","Actor":"depfu[bot]","Number":"9943","RawContent":null,"Title":"Update postcss-selector-parser: 6.0.10 → 6.0.11 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n#### ✳️ postcss-selector-parser (6.0.10 → 6.0.11) · [Repo](https://github.com/postcss/postcss-selector-parser) · [Changelog](https://github.com/postcss/postcss-selector-parser/blob/master/CHANGELOG.md)\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/postcss/postcss-selector-parser/releases/tag/v6.0.11\">6.0.11</a></h4>\n\n<blockquote><h1 dir=\"auto\">6.0.11</h1>\n<ul dir=\"auto\">\n<li>Fixed: parse attribute case insensitivity flag</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/postcss-selector-parser/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/postcss/postcss-selector-parser/compare/91a0147812f219b9a64cd2d6a595e0a4b85c161b...e6b4029387572dce965345f6de00b5e3bf666bc9\">See the full diff on Github</a>. The new version differs by 3 commits:</p>\n<ul>\n<li><a href=\"https://github.com/postcss/postcss-selector-parser/commit/e6b4029387572dce965345f6de00b5e3bf666bc9\"><code>chore(release): 6.0.11</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss-selector-parser/commit/fd5f0bfbddf036eb3e788e1dcd90341af292e07f\"><code>fix: attribute case insensitivity parsing</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss-selector-parser/commit/c3db2ff377c33d8ee1a95466edf3120a9d2511e6\"><code>docs: fix `container.atPosition()` API (#264)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/9943","RelatedDescription":"Closed or merged PR \"Update postcss-selector-parser: 6.0.10 → 6.0.11 (patch)\" (#9943)"},{"Id":"1462529206","IsPullRequest":false,"CreatedAt":"2022-11-25T21:51:05","Actor":"williamd5","Number":"9913","RawContent":null,"Title":"Prose blockquote includes the `<cite>` part in the quotes","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.2.4\r\n\r\n**Reproduction URL**\r\nhttps://play.tailwindcss.com/KXYTkNccoM\r\n\r\n**Describe your issue**\r\n\r\nThe prose plugin adds opening and closing quotes to the contents of `<blockquote>`. However, the `<cite>` is also included in these quotes, which does not look quite correct.\r\n\r\n![image](https://user-images.githubusercontent.com/66572326/203661152-4746200e-4a66-42a3-a97e-37612896341f.png)\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/9913","RelatedDescription":"Closed issue \"Prose blockquote includes the `<cite>` part in the quotes\" (#9913)"},{"Id":"1462254273","IsPullRequest":false,"CreatedAt":"2022-11-25T21:12:41","Actor":"jemhuntr","Number":"9908","RawContent":null,"Title":"@screen on dynamic (min-*, max-*) breakpoints","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n3.2.4\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\npostcss-cli 10.0.0 with postcss-import and tailwindcss/nesting\r\n\r\n**What version of Node.js are you using?**\r\n\r\n16.16\r\n\r\n**What browser are you using?**\r\n\r\nN/A\r\n\r\n**What operating system are you using?**\r\n\r\nWindows\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/HvPuPtAlc5?file=css\r\n\r\n**Describe your issue**\r\n\r\nHi! Is there any way to get the min/max dynamic breakpoints to work with the `@screen` directive or the `screen()` function? Both of these currently don't work on 3.2 as far as I can see:\r\n\r\n```css\r\n@screen max-lg {\r\n  ...\r\n}\r\n\r\n@media screen(max-lg) {\r\n...\r\n}\r\n```\r\n\r\nThe dynamic breakpoint variants work great on classes & @apply rules directly; only the screen functions seem to be non-functional. It'd be great if this can be included so I can apply bigger chunks of mobile-only styles!\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/9908","RelatedDescription":"Closed issue \"@screen on dynamic (min-*, max-*) breakpoints\" (#9908)"},{"Id":"1462075663","IsPullRequest":true,"CreatedAt":"2022-11-25T13:03:50","Actor":"RobinMalfait","Number":"9906","RawContent":null,"Title":"Some small improvements","State":"closed","Body":"<!--\r\n\r\n👋 Hey, thanks for your interest in contributing to Tailwind!\r\n\r\n**Please ask first before starting work on any significant new features.**\r\n\r\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\r\n\r\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\r\n\r\n-->\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/9906","RelatedDescription":"Closed or merged PR \"Some small improvements\" (#9906)"},{"Id":"1464249218","IsPullRequest":false,"CreatedAt":"2022-11-25T10:48:17","Actor":"ribelo","Number":"9934","RawContent":null,"Title":"Prefix don't work in PlayCDN","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nCDN. Newest. Probably 3.2.4\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nNot applicable.\r\n\r\n**What version of Node.js are you using?**\r\n\r\nNot applicable.\r\n\r\n**What browser are you using?**\r\n\r\nEvery.\r\n\r\n**What operating system are you using?**\r\n\r\nBtw, I use Arch.\r\n\r\n**Reproduction URL**\r\n\r\nNot applicable.\r\n\r\n**Describe your issue**\r\n\r\nAs in the title. In playCDN the prefix setting does not work.\r\n![2022-11-25-101544_grim](https://user-images.githubusercontent.com/1815898/203944445-d1bf1b4e-2cf7-4381-911c-5400f8a752aa.png)\r\n![2022-11-25-101527_grim](https://user-images.githubusercontent.com/1815898/203944451-4d6255dc-4fb0-46c2-ae51-1451b1a29615.png)\r\n![2022-11-25-101458_grim](https://user-images.githubusercontent.com/1815898/203944455-5174bcd5-2579-4fa1-be68-322a5f9d2b68.png)\r\n\r\nPost Scriptum.\r\n\r\nYes, I know, the rest of the settings are not needed in playCDN, but we only want to use playCDN in developer mode due to the problem of using tailwindcss/postcss in large projects written in clojurescript. Topic for another thread.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/9934","RelatedDescription":"Closed issue \"Prefix don't work in PlayCDN\" (#9934)"},{"Id":"1463860755","IsPullRequest":false,"CreatedAt":"2022-11-24T22:27:25","Actor":"OpenSnack","Number":"9929","RawContent":null,"Title":"resolveConfig returns wrong TypeScript type for theme keys","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\n3.2.4\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nVite 3.2.4\r\n\r\n**What version of Node.js are you using?**\r\n\r\n16.18.1\r\n\r\n**What browser are you using?**\r\n\r\nN/A\r\n\r\n**What operating system are you using?**\r\n\r\nLinux\r\n\r\n**Reproduction URL**\r\n\r\n[Repro on CodeSandbox](https://codesandbox.io/s/wizardly-chandrasekhar-sk6ln7?file=/src/App.vue) (may take a second or click in the editor for the IDE to pick up the type issue)\r\n\r\n**Describe your issue**\r\n\r\nUsing the [recently exposed resolveConfig types](https://github.com/tailwindlabs/tailwindcss/pull/8924), many config keys (such as `theme.colors`) throw TS errors:\r\n\r\n![Unresolved config key type](https://user-images.githubusercontent.com/7517162/203868884-e289f0da-8685-4896-865b-8e3a48772ca3.png)\r\n\r\n`ResolvableTo<T>` is an internal type that equals `T | ((utils: PluginUtils) => T)` - presumably a type that gets resolved during `resolveConfig`. The expected colour key (gray, in this case) doesn't exist on the function type, causing the issue. I suspect the resolved config should return the expected `RecursiveKeyValuePair` type with `ResolvableTo` removed.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/9929","RelatedDescription":"Open issue \"resolveConfig returns wrong TypeScript type for theme keys\" (#9929)"},{"Id":"1463726870","IsPullRequest":true,"CreatedAt":"2022-11-24T19:13:29","Actor":"depfu[bot]","Number":"9928","RawContent":null,"Title":"Update esbuild: 0.15.12 → 0.15.15 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n#### ✳️ esbuild (0.15.12 → 0.15.15) · [Repo](https://github.com/evanw/esbuild) · [Changelog](https://github.com/evanw/esbuild/blob/master/CHANGELOG.md)\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/evanw/esbuild/releases/tag/v0.15.15\">0.15.15</a></h4>\n\n<blockquote><ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Remove duplicate CSS rules across files (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/2688\">#2688</a>)</p>\n<p dir=\"auto\">When two or more CSS rules are exactly the same (even if they are not adjacent), all but the last one can safely be removed:</p>\n<div class=\"highlight highlight-source-css\" dir=\"auto\"><pre><span class=\"pl-c\">/* Before */</span>\n<span class=\"pl-ent\">a</span> { <span class=\"pl-c1\">color</span><span class=\"pl-kos\">:</span> red; }\n<span class=\"pl-ent\">span</span> { <span class=\"pl-c1\">font-weight</span><span class=\"pl-kos\">:</span> bold; }\n<span class=\"pl-ent\">a</span> { <span class=\"pl-c1\">color</span><span class=\"pl-kos\">:</span> red; }\n\n<span class=\"pl-c\">/* After */</span>\n<span class=\"pl-ent\">span</span> { <span class=\"pl-c1\">font-weight</span><span class=\"pl-kos\">:</span> bold; }\n<span class=\"pl-ent\">a</span> { <span class=\"pl-c1\">color</span><span class=\"pl-kos\">:</span> red; }</pre></div>\n<p dir=\"auto\">Previously esbuild only did this transformation within a single source file. But with this release, esbuild will now do this transformation across source files, which may lead to smaller CSS output if the same rules are repeated across multiple CSS source files in the same bundle. This transformation is only enabled when minifying (specifically when syntax minification is enabled).</p>\n</li>\n<li>\n<p dir=\"auto\">Add <code class=\"notranslate\">deno</code> as a valid value for <code class=\"notranslate\">target</code> (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/2686\">#2686</a>)</p>\n<p dir=\"auto\">The <code class=\"notranslate\">target</code> setting in esbuild allows you to enable or disable JavaScript syntax features for a given version of a set of target JavaScript VMs. Previously <a href=\"https://deno.land/\">Deno</a> was not one of the JavaScript VMs that esbuild supported with <code class=\"notranslate\">target</code>, but it will now be supported starting from this release. For example, versions of Deno older than v1.2 don't support the new <code class=\"notranslate\">||=</code> operator, so adding e.g. <code class=\"notranslate\">--target=deno1.0</code> to esbuild now lets you tell esbuild to transpile <code class=\"notranslate\">||=</code> to older JavaScript.</p>\n</li>\n<li>\n<p dir=\"auto\">Fix the <code class=\"notranslate\">esbuild-wasm</code> package in Node v19 (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/2683\">#2683</a>)</p>\n<p dir=\"auto\">A recent change to Node v19 added a non-writable <code class=\"notranslate\">crypto</code> property to the global object: <a href=\"https://bounce.depfu.com/github.com/nodejs/node/pull/44897\">nodejs/node#44897</a>. This conflicts with Go's WebAssembly shim code, which overwrites the global <code class=\"notranslate\">crypto</code> property. As a result, all Go-based WebAssembly code that uses the built-in shim (including esbuild) is now broken on Node v19. This release of esbuild fixes the issue by reconfiguring the global <code class=\"notranslate\">crypto</code> property to be writable before invoking Go's WebAssembly shim code.</p>\n</li>\n<li>\n<p dir=\"auto\">Fix CSS dimension printing exponent confusion edge case (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/2677\">#2677</a>)</p>\n<p dir=\"auto\">In CSS, a dimension token has a numeric \"value\" part and an identifier \"unit\" part. For example, the dimension token <code class=\"notranslate\">32px</code> has a value of <code class=\"notranslate\">32</code> and a unit of <code class=\"notranslate\">px</code>. The unit can be any valid CSS identifier. The value can be any number in floating-point format including an optional exponent (e.g. <code class=\"notranslate\">-3.14e-0</code> has an exponent of <code class=\"notranslate\">e-0</code>). The full details of this syntax are here: <a href=\"https://www.w3.org/TR/css-syntax-3/\">https://www.w3.org/TR/css-syntax-3/</a>.</p>\n<p dir=\"auto\">To maintain the integrity of the dimension token through the printing process, esbuild must handle the edge case where the unit looks like an exponent. One such case is the dimension <code class=\"notranslate\">1e\\32</code> which has the value <code class=\"notranslate\">1</code> and the unit <code class=\"notranslate\">e2</code>. It would be bad if this dimension token was printed such that a CSS parser would parse it as a number token with the value <code class=\"notranslate\">1e2</code> instead of a dimension token. The way esbuild currently does this is to escape the leading <code class=\"notranslate\">e</code> in the dimension unit, so esbuild would parse <code class=\"notranslate\">1e\\32</code> but print <code class=\"notranslate\">1\\65 2</code> (both <code class=\"notranslate\">1e\\32</code> and <code class=\"notranslate\">1\\65 2</code> represent a dimension token with a value of <code class=\"notranslate\">1</code> and a unit of <code class=\"notranslate\">e2</code>).</p>\n<p dir=\"auto\">However, there is an even narrower edge case regarding this edge case. If the value part of the dimension token itself has an <code class=\"notranslate\">e</code>, then it's not necessary to escape the <code class=\"notranslate\">e</code> in the dimension unit because a CSS parser won't confuse the unit with the exponent even though it looks like one (since a number can only have at most one exponent). This came up because the grammar for the CSS <code class=\"notranslate\">unicode-range</code> property uses a hack that lets you specify a hexadecimal range without quotes even though CSS has no token for a hexadecimal range. The hack is to allow the hexadecimal range to be parsed as a dimension token and optionally also a number token. Here is the grammar for <code class=\"notranslate\">unicode-range</code>:</p>\n<pre class=\"notranslate\"><code class=\"notranslate\">unicode-range =\n  &lt;urange&gt;#\n\n&lt;urange&gt; =\n  u '+' &lt;ident-token&gt; '?'*            |\n  u &lt;dimension-token&gt; '?'*            |\n  u &lt;number-token&gt; '?'*               |\n  u &lt;number-token&gt; &lt;dimension-token&gt;  |\n  u &lt;number-token&gt; &lt;number-token&gt;     |\n  u '+' '?'+\n</code></pre>\n<p dir=\"auto\">and here is an example <code class=\"notranslate\">unicode-range</code> declaration that was problematic for esbuild:</p>\n<div class=\"highlight highlight-source-css\" dir=\"auto\"><pre><span class=\"pl-k\">@font-face</span> {\n  <span class=\"pl-c1\">unicode-range</span><span class=\"pl-kos\">:</span> U+0e2e-0e2f;\n}</pre></div>\n<p dir=\"auto\">This is parsed as a dimension with a value of <code class=\"notranslate\">+0e2</code> and a unit of <code class=\"notranslate\">e-0e2f</code>. This was problematic for esbuild because the unit starts with <code class=\"notranslate\">e-0</code> which could be confused with an exponent when appended after a number, so esbuild was escaping the <code class=\"notranslate\">e</code> character in the unit. However, this escaping is unnecessary because in this case the dimension value already has an exponent in it. With this release, esbuild will no longer unnecessarily escape the <code class=\"notranslate\">e</code> in the dimension unit in these cases, which should fix the printing of <code class=\"notranslate\">unicode-range</code> declarations.</p>\n<p dir=\"auto\">An aside: You may be wondering why esbuild is trying to escape the <code class=\"notranslate\">e</code> at all and why it doesn't just pass through the original source code unmodified. The reason why esbuild does this is that, for robustness, esbuild's AST generally tries to omit semantically-unrelated information and esbuild's code printers always try to preserve the semantics of the underlying AST. That way the rest of esbuild's internals can just deal with semantics instead of presentation. They don't have to think about how the AST will be printed when changing the AST. This is the same reason that esbuild's JavaScript AST doesn't have a \"parentheses\" node (e.g. <code class=\"notranslate\">a * (b + c)</code> is represented by the AST <code class=\"notranslate\">multiply(a, add(b, c))</code> instead of <code class=\"notranslate\">multiply(a, parentheses(add(b, c)))</code>). Instead, the printer automatically inserts parentheses as necessary to maintain the semantics of the AST, which means all of the optimizations that run over the AST don't have to worry about keeping the parentheses up to date. Similarly, the CSS AST for the dimension token stores the actual unit and the printer makes sure the unit is properly escaped depending on what value it's placed after. All of the other code operating on CSS ASTs doesn't have to worry about parsing escapes to compare units or about keeping escapes up to date when the AST is modified. Hopefully that makes sense.</p>\n</li>\n<li>\n<p dir=\"auto\">Attempt to avoid creating the <code class=\"notranslate\">node_modules/.cache</code> directory for people that use Yarn 2+ in Plug'n'Play mode (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/2685\">#2685</a>)</p>\n<p dir=\"auto\">When Yarn's PnP mode is enabled, packages installed by Yarn may or may not be put inside <code class=\"notranslate\">.zip</code> files. The specific heuristics for when this happens change over time in between Yarn versions. This is problematic for esbuild because esbuild's JavaScript package needs to execute a binary file inside the package. Yarn makes extensive modifications to Node's file system APIs at run time to pretend that <code class=\"notranslate\">.zip</code> files are normal directories and to make it hard to tell whether a file is real or not (since in theory it doesn't matter). But they haven't modified Node's <code class=\"notranslate\">child_process.execFileSync</code> API so attempting to execute a file inside a zip file fails. To get around this, esbuild previously used Node's file system APIs to copy the binary executable to another location before invoking <code class=\"notranslate\">execFileSync</code>. Under the hood this caused Yarn to extract the file from the zip file into a real file that can then be run.</p>\n<p dir=\"auto\">However, esbuild copied its executable into <code class=\"notranslate\">node_modules/.cache/esbuild</code>. This is the <a href=\"https://yarnpkg.com/advanced/rulebook/#packages-should-never-write-inside-their-own-folder-outside-of-postinstall\">official recommendation from the Yarn team</a> for where packages are supposed to put these types of files when Yarn PnP is being used. However, users of Yarn PnP with esbuild find this really annoying because they don't like looking at the <code class=\"notranslate\">node_modules</code> directory. With this release, esbuild now sets <code class=\"notranslate\">\"preferUnplugged\": true</code> in its <code class=\"notranslate\">package.json</code> files, which tells newer versions of Yarn to not put esbuild's packages in a zip file. There may exist older versions of Yarn that don't support <code class=\"notranslate\">preferUnplugged</code>. In that case esbuild should still copy the executable to a cache directory, so it should still run (hopefully, since I haven't tested this myself). Note that esbuild setting <code class=\"notranslate\">\"preferUnplugged\": true</code> may have the side effect of esbuild taking up more space on the file system in the event that multiple platforms are installed simultaneously, or that you're using an older version of Yarn that always installs packages for all platforms. In that case you may want to update to a newer version of Yarn since Yarn has recently changed to only install packages for the current platform.</p>\n</li>\n</ul></blockquote>\n<h4><a href=\"https://github.com/evanw/esbuild/releases/tag/v0.15.14\">0.15.14</a></h4>\n\n<blockquote><ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Fix parsing of TypeScript <code class=\"notranslate\">infer</code> inside a conditional <code class=\"notranslate\">extends</code> (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/2675\">#2675</a>)</p>\n<p dir=\"auto\">Unlike JavaScript, parsing TypeScript sometimes requires backtracking. The <code class=\"notranslate\">infer A</code> type operator can take an optional constraint of the form <code class=\"notranslate\">infer A extends B</code>. However, this syntax conflicts with the similar conditional type operator <code class=\"notranslate\">A extends B ? C : D</code> in cases where the syntax is combined, such as <code class=\"notranslate\">infer A extends B ? C : D</code>. This is supposed to be parsed as <code class=\"notranslate\">(infer A) extends B ? C : D</code>. Previously esbuild incorrectly parsed this as <code class=\"notranslate\">(infer A extends B) ? C : D</code> instead, which is a parse error since the <code class=\"notranslate\">?:</code> conditional operator requires the <code class=\"notranslate\">extends</code> keyword as part of the conditional type. TypeScript disambiguates by speculatively parsing the <code class=\"notranslate\">extends</code> after the <code class=\"notranslate\">infer</code>, but backtracking if a <code class=\"notranslate\">?</code> token is encountered afterward. With this release, esbuild should now do the same thing, so esbuild should now correctly parse these types. Here's a real-world example of such a type:</p>\n<div class=\"highlight highlight-source-ts\" dir=\"auto\"><pre><span class=\"pl-k\">type</span> <span class=\"pl-smi\">Normalized</span><span class=\"pl-c1\">&lt;</span><span class=\"pl-smi\">T</span><span class=\"pl-c1\">&gt;</span> <span class=\"pl-c1\">=</span> <span class=\"pl-smi\">T</span> <span class=\"pl-k\">extends</span> <span class=\"pl-smi\">Array</span><span class=\"pl-kos\">&lt;</span>infer <span class=\"pl-smi\">A</span> <span class=\"pl-k\">extends</span> <span class=\"pl-smi\">object</span> ? infer <span class=\"pl-smi\">A</span> : <span class=\"pl-smi\">never</span><span class=\"pl-kos\">&gt;</span>\n  ? <span class=\"pl-smi\">Dictionary</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">Normalized</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">A</span><span class=\"pl-kos\">&gt;</span><span class=\"pl-kos\">&gt;</span>\n  : <span class=\"pl-kos\">{</span>\n      <span class=\"pl-kos\">[</span><span class=\"pl-smi\">P</span> <span class=\"pl-k\">in</span> <span class=\"pl-k\">keyof</span> <span class=\"pl-smi\">T</span><span class=\"pl-kos\">]</span>: <span class=\"pl-smi\">T</span><span class=\"pl-kos\">[</span><span class=\"pl-smi\">P</span><span class=\"pl-kos\">]</span> <span class=\"pl-k\">extends</span> <span class=\"pl-smi\">Array</span><span class=\"pl-kos\">&lt;</span>infer <span class=\"pl-smi\">A</span> <span class=\"pl-k\">extends</span> <span class=\"pl-smi\">object</span> ? infer <span class=\"pl-smi\">A</span> : <span class=\"pl-smi\">never</span><span class=\"pl-kos\">&gt;</span>\n        ? <span class=\"pl-smi\">Dictionary</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">Normalized</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">A</span><span class=\"pl-kos\">&gt;</span><span class=\"pl-kos\">&gt;</span>\n        : <span class=\"pl-smi\">Normalized</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">T</span><span class=\"pl-kos\">[</span><span class=\"pl-smi\">P</span><span class=\"pl-kos\">]</span><span class=\"pl-kos\">&gt;</span>\n    <span class=\"pl-kos\">}</span></pre></div>\n</li>\n<li>\n<p dir=\"auto\">Avoid unnecessary watch mode rebuilds when debug logging is enabled (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/2661\">#2661</a>)</p>\n<p dir=\"auto\">When debug-level logs are enabled (such as with <code class=\"notranslate\">--log-level=debug</code>), esbuild's path resolution subsystem generates debug log messages that say something like \"Read 20 entries for directory /home/user\" to help you debug what esbuild's path resolution is doing. This caused esbuild's watch mode subsystem to add a dependency on the full list of entries in that directory since if that changes, the generated log message would also have to be updated. However, meant that on systems where a parent directory undergoes constant directory entry churn, esbuild's watch mode would continue to rebuild if <code class=\"notranslate\">--log-level=debug</code> was passed.</p>\n<p dir=\"auto\">With this release, these debug log messages are now generated by \"peeking\" at the file system state while bypassing esbuild's watch mode dependency tracking. So now watch mode doesn't consider the count of directory entries in these debug log messages to be a part of the build that needs to be kept up to date when the file system state changes.</p>\n</li>\n</ul></blockquote>\n<h4><a href=\"https://github.com/evanw/esbuild/releases/tag/v0.15.13\">0.15.13</a></h4>\n\n<blockquote><ul dir=\"auto\">\n<li>\n<p dir=\"auto\">Add support for the TypeScript 4.9 <code class=\"notranslate\">satisfies</code> operator (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/pull/2509\">#2509</a>)</p>\n<p dir=\"auto\">TypeScript 4.9 introduces a new operator called <code class=\"notranslate\">satisfies</code> that lets you check that a given value satisfies a less specific type without casting it to that less specific type and without generating any additional code at run-time. It looks like this:</p>\n<div class=\"highlight highlight-source-ts\" dir=\"auto\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-s1\">value</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">foo</span>: <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">bar</span>: <span class=\"pl-c1\">false</span> <span class=\"pl-kos\">}</span> <span class=\"pl-s1\">satisfies</span> <span class=\"pl-smi\">Record</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">string</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">number</span> <span class=\"pl-c1\">|</span> <span class=\"pl-smi\">boolean</span><span class=\"pl-kos\">&gt;</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">value</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">foo</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toFixed</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// TypeScript knows that \"foo\" is a number here</span></pre></div>\n<p dir=\"auto\">Before this existed, you could use a cast with <code class=\"notranslate\">as</code> to check that a value satisfies a less specific type, but that removes any additional knowledge that TypeScript has about that specific value:</p>\n<div class=\"highlight highlight-source-ts\" dir=\"auto\"><pre><span class=\"pl-k\">const</span> <span class=\"pl-s1\">value</span> <span class=\"pl-c1\">=</span> <span class=\"pl-kos\">{</span> <span class=\"pl-c1\">foo</span>: <span class=\"pl-c1\">1</span><span class=\"pl-kos\">,</span> <span class=\"pl-c1\">bar</span>: <span class=\"pl-c1\">false</span> <span class=\"pl-kos\">}</span> <span class=\"pl-k\">as</span> <span class=\"pl-smi\">Record</span><span class=\"pl-kos\">&lt;</span><span class=\"pl-smi\">string</span><span class=\"pl-kos\">,</span> <span class=\"pl-smi\">number</span> <span class=\"pl-c1\">|</span> <span class=\"pl-smi\">boolean</span><span class=\"pl-kos\">&gt;</span>\n<span class=\"pl-smi\">console</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">log</span><span class=\"pl-kos\">(</span><span class=\"pl-s1\">value</span><span class=\"pl-kos\">.</span><span class=\"pl-c1\">foo</span><span class=\"pl-kos\">.</span><span class=\"pl-en\">toFixed</span><span class=\"pl-kos\">(</span><span class=\"pl-c1\">1</span><span class=\"pl-kos\">)</span><span class=\"pl-kos\">)</span> <span class=\"pl-c\">// TypeScript no longer knows that \"foo\" is a number</span></pre></div>\n<p dir=\"auto\">You can read more about this feature in <a href=\"https://devblogs.microsoft.com/typescript/announcing-typescript-4-9-rc/#the-satisfies-operator\">TypeScript's blog post for 4.9</a> as well as <a href=\"https://bounce.depfu.com/github.com/microsoft/TypeScript/issues/47920\">the associated TypeScript issue for this feature</a>.</p>\n<p dir=\"auto\">This feature was implemented in esbuild by <a href=\"https://bounce.depfu.com/github.com/magic-akari\">@magic-akari</a>.</p>\n</li>\n<li>\n<p dir=\"auto\">Fix watch mode constantly rebuilding if the parent directory is inaccessible (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/2640\">#2640</a>)</p>\n<p dir=\"auto\">Android is unusual in that it has an inaccessible directory in the path to the root, which esbuild was not originally built to handle. To handle cases like this, the path resolution layer in esbuild has a hack where it treats inaccessible directories as empty. However, esbuild's watch implementation currently triggers a rebuild if a directory previously encountered an error but the directory now exists. The assumption is that the previous error was caused by the directory not existing. Although that's usually the case, it's not the case for this particular parent directory on Android. Instead the error is that the directory previously existed but was inaccessible.</p>\n<p dir=\"auto\">This discrepancy between esbuild's path resolution layer and its watch mode was causing watch mode to rebuild continuously on Android. With this release, esbuild's watch mode instead checks for an error status change in the <code class=\"notranslate\">readdir</code> file system call, so watch mode should no longer rebuild continuously on Android.</p>\n</li>\n<li>\n<p dir=\"auto\">Apply a fix for a rare deadlock with the JavaScript API (<a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/1842\">#1842</a>, <a href=\"https://bounce.depfu.com/github.com/evanw/esbuild/issues/2485\">#2485</a>)</p>\n<p dir=\"auto\">There have been reports of esbuild sometimes exiting with an \"all goroutines are asleep\" deadlock message from the Go language runtime. This issue hasn't made much progress until recently, where a possible cause was discovered (thanks to <a href=\"https://bounce.depfu.com/github.com/jfirebaugh\">@jfirebaugh</a> for the investigation). This release contains a possible fix for that possible cause, so this deadlock may have been fixed. The fix cannot be easily verified because the deadlock is non-deterministic and rare. If this was indeed the cause, then this issue only affected the JavaScript API in situations where esbuild was already in the process of exiting.</p>\n<p dir=\"auto\">In detail: The underlying cause is that Go's <a href=\"https://pkg.go.dev/sync#WaitGroup\"><code class=\"notranslate\">sync.WaitGroup</code></a> API for waiting for a set of goroutines to finish is not fully thread-safe. Specifically it's not safe to call <code class=\"notranslate\">Add()</code> concurrently with <code class=\"notranslate\">Wait()</code> when the wait group counter is zero due to a data race. This situation could come up with esbuild's JavaScript API when the host JavaScript process closes the child process's stdin and the child process (with no active tasks) calls <code class=\"notranslate\">Wait()</code> to check that there are no active tasks, at the same time as esbuild's watchdog timer calls <code class=\"notranslate\">Add()</code> to add an active task (that pings the host to see if it's still there). The fix in this release is to avoid calling <code class=\"notranslate\">Add()</code> once we learn that stdin has been closed but before we call <code class=\"notranslate\">Wait()</code>.</p>\n</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/esbuild/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/evanw/esbuild/compare/223e6eaa90c699d052737bd574c25dab7adca212...478062d5310b27f1a6a259602a79bf84e233cc1d\">See the full diff on Github</a>. The new version differs by 21 commits:</p>\n<ul>\n<li><a href=\"https://github.com/evanw/esbuild/commit/478062d5310b27f1a6a259602a79bf84e233cc1d\"><code>publish 0.15.15 to npm</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/e7ad5fbef7737674fe706a44d29876e87dc12654\"><code>remove duplicate css rules across files (#2688)</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/66641726009aa52b357be3d811b958b39057d247\"><code>test duplicate rule merging after bundling</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/a73c4e91d99ee3ba00bda46f7ab257e7a8912191\"><code>css: merge adjacent selectors forward not backward</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/4b1200f707799fb84c945996884491c5f334c507\"><code>fix #2685: `preferUnplugged: true` in all packages</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/ec9c3cf41d2bf758feb0fdd3cc54f285ea9feb0b\"><code>fix #2686: make `deno` a valid value for `target`</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/38c9c1ff916ffd23dc4c5863121aa9bf66f6e46a\"><code>rewrite browser tests to work without runner</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/d0fd2686a3d4ba35b53492c0224fbe15551dcfe1\"><code>upgrade puppeteer 5.5.0 =&gt; 19.2.2</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/daccf02ac13399de6378838801e683e7cce365e6\"><code>fix #2683: `esbuild-wasm` broken in node v19</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/ecc9eeb5ec13cf32e0690e92aa2e933d1267beb4\"><code>fix #2677: token unit escaping and `unicode-range`</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/d0f6b7f9ced548d530e91f20e4d7a206cb1582f7\"><code>publish 0.15.14 to npm</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/5ecf7469efaeabef576f1c243c71e3001b9c89c9\"><code>GitHub Workflows security hardening (#2654)</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/9dee65c35e24d45d79bcf51c86cbdb5e32c24048\"><code>fix #2675: parsing of `infer` inside `extends`</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/c6e880adf148e5d00eddc655038bf9e53b20015c\"><code>fix #2661: avoid extra rebuilds with debug logging</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/ba4771032805f950982ab81cc099783bc6cd90c7\"><code>publish 0.15.13 to npm</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/679548fc2073108b0206231ec74896610d88f880\"><code>small code simplification</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/78d61944fb443e2fb987f4fa9c8fc6cf5f790fe1\"><code>attempted fix for #2485: `Add` and `Wait` safety</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/4f9694b2396f4a070f7b5b4348169d8d7789ad79\"><code>fix a typo</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/8d0c2b9ff5b49d4e012f9d9906235162470e0a9c\"><code>update go 1.19.2 =&gt; 1.19.3</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/8c2fdc2966fb3987394c25398a43494ec650d455\"><code>support TypeScript `satisfies` (#2509)</code></a></li>\n<li><a href=\"https://github.com/evanw/esbuild/commit/97d6dbaff48210589f339dd80c2c372896dadf92\"><code>fix #2640: watch mode checks `readdir`, not `stat`</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/9928","RelatedDescription":"Closed or merged PR \"Update esbuild: 0.15.12 → 0.15.15 (minor)\" (#9928)"},{"Id":"1463021904","IsPullRequest":false,"CreatedAt":"2022-11-24T17:31:45","Actor":"superchangme","Number":"9920","RawContent":null,"Title":"duplicated tailwind  rules in producion css file","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nFor example: v3.2.4\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nFor example: postcss-cli 8.3.1, vite 3.2,vue 3.4\r\n\r\n**What version of Node.js are you using?**\r\n\r\nFor example: v14.19.1\r\n\r\n**What browser are you using?**\r\n\r\nFor example: Chrome\r\n\r\n**What operating system are you using?**\r\n\r\nFor example: Windows\r\n\r\n**Reproduction URL**\r\n\r\nA Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways. Unfortunately we can't provide support without a reproduction, and your issue will be closed with no comment if this is not provided.\r\n\r\n**Describe your issue**\r\n\r\n1. i found my build output css file has duplicated tailwind  rules, file contents like below\r\n\r\n```css\r\n#root .flex-1{\r\nflex:1 1 0%\r\n}\r\n#root .flex-1{\r\nflex:1 1 0%\r\n}\r\n```\r\nmy use way like this\r\n\r\n``` css\r\n// @/assets/base.css\r\n\r\n@import \"tailwindcss/base\";\r\n@import \"tailwindcss/components\";\r\n@import \"tailwindcss/utilities\"; \r\n\r\n```\r\n\r\n``` ts\r\n// src/main.ts\r\nimport \"@/assets/base.css\";\r\n\r\n```\r\n\r\n------------------------------------------------\r\n\r\n2. i look official documents and github, try many ways this day,at last i found one way to avoid build duplicate tailwind rules.\r\ndelete tailwind import define in css and use import in javascript.\r\n\r\n``` ts\r\n// src/main.ts\r\nimport \"tailwindcss/tailwind.css\"\r\n```\r\n\r\n------------------------------------------------\r\n3.  why the used way like 1. generate  duplicated  codes, but the way 2. will not. i found the code in `tailwindcss/tailwind.css` is same with my base.css.\r\n\r\nCan you  solve this puzzle for me?\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/9920","RelatedDescription":"Closed issue \"duplicated tailwind  rules in producion css file\" (#9920)"},{"Id":"1462662521","IsPullRequest":false,"CreatedAt":"2022-11-24T02:33:13","Actor":"mathurinfarms","Number":"9914","RawContent":null,"Title":"Scrollbar styling support","State":"closed","Body":"# This is not an issue - more of a recommendation\r\n\r\nBy default, TailwindCSS doesn't allow for custom scrollbars / styling.\r\n\r\nThere's currently a plugin on npm called [tailwind-scrollbar](https://www.npmjs.com/package/tailwind-scrollbar)\r\n\r\nEven Tailwind's website has custom scrollbars in the documentation - it would be great to add scrollbar styling natively instead of having to use plugins or adding custom CSS.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/9914","RelatedDescription":"Closed issue \"Scrollbar styling support\" (#9914)"},{"Id":"1462438510","IsPullRequest":false,"CreatedAt":"2022-11-23T21:40:26","Actor":"developius","Number":"9911","RawContent":null,"Title":"Arbitrary values aren't recognised in Ruby percent arrays","State":"open","Body":"Thank you for an awesome tool! I've been using it in all my projects recently and the productivity gains have been immense.\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nTailwind v3.2.4\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\npostcss: 8.4.19, postcss-cli 10.0.0\r\n\r\n**What version of Node.js are you using?**\r\n\r\nNode v16.18.1\r\n\r\n**What browser are you using?**\r\n\r\nFirefox\r\n\r\n**What operating system are you using?**\r\n\r\nmacOS\r\n\r\n**Reproduction URL**\r\n\r\nI have added a test case that fails, showing the incorrect behaviour. This is the first time I've popped the hood on Tailwind, so forgive me if the regexes I've linked are the incorrect ones.\r\n\r\nhttps://github.com/developius/tailwindcss/commit/5fb86ab84603949212d8146b09d242b420c7df85\r\n\r\n**Describe your issue**\r\n\r\nWe're using Ruby on Rails with Tailwind and use the Ruby percent string syntax to generate arrays.\r\nSomething like `%w[text-[#bada55]]` becomes `[\"text-[#bada55]\"]` in Ruby.\r\n\r\nThe following ERB code doesn't correctly generate the arbitrary value Tailwind class:\r\n\r\n```erb\r\n<%= content_tag(:div, class: %w[text-[#bada55]]) {} %>\r\n```\r\n\r\nHowever, this does work:\r\n\r\n```erb\r\n<%= content_tag(:div, class: [\"text-[#a55bad]\"]) {} %>\r\n```\r\n\r\nAs noted in my commit above, I think this is due to the extra closing square bracket tripping up the regex here[^1] but my knowledge of Tailwind's internals is very vague.\r\n\r\nI'm not sure if there's a way to fix this or not, as I appreciate that handling extremely specific scenarios like this is a direction the project might not want to head in. But maybe there's a quick fix? Thanks for checking this issue out, anyway 😄 \r\n\r\n[^1]: https://github.com/tailwindlabs/tailwindcss/blob/master/src/lib/defaultExtractor.js#L65","Url":"https://github.com/tailwindlabs/tailwindcss/issues/9911","RelatedDescription":"Open issue \"Arbitrary values aren't recognised in Ruby percent arrays\" (#9911)"},{"Id":"1461717951","IsPullRequest":false,"CreatedAt":"2022-11-23T21:18:18","Actor":"Abdulateef-Muhammad","Number":"9904","RawContent":null,"Title":"Unwanted movement to some children elements when using translate class.","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\r\n\r\n**What version of Tailwind CSS are you using?**\r\n\r\nv3.1.8\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\nwebpack 5.74.0\r\n\r\n**What version of Node.js are you using?**\r\n\r\nv16.16.0\r\n\r\n**What browser are you using?**\r\n\r\nChrome 107.0.5304.107 (Official Build) (64-bit)\r\n\r\n**What operating system are you using?**\r\n\r\nWindows 11\r\n\r\n**Reproduction URL**\r\n[Link to the repo](https://github.com/Abdulateef-Muhammad/unwated-children-elements-movements-issue)\r\n\r\n**Describe your issue**\r\nI'm using -translate-y classes when hover, but on hovering on the my card I got a bit unwanted movement to some children of this card, just like elements shaking a little bit.\r\nI investigated this issue and found the problem is when tailwind generating a transform selector with all its properties values [scale, rotate, translate, ...].\r\n```\r\ntransform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));\r\n```\r\n\r\nso I used a custom inline style with one property value of transform and the problem solvoed \r\nto be like this \r\n```\r\ntransform: translateY(-5px);\r\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/9904","RelatedDescription":"Closed issue \"Unwanted movement to some children elements when using translate class.\" (#9904)"},{"Id":"1456562687","IsPullRequest":true,"CreatedAt":"2022-11-22T15:24:39","Actor":"adamwathan","Number":"9880","RawContent":null,"Title":"Support using variables as arbitrary values without var()","State":"closed","Body":"This PR makes it possible to use CSS variables as arbitrary values without having to wrap them in `var(...)` for terser code. Since any arbitrary value starting with `--` is unambiguously a CSS variable, we can know with certainty that the user isn't trying to do anything else so I can't find any reason that this isn't safe to do.\r\n\r\n```html\r\n<!-- Before -->\r\n<div class=\"w-[var(--width-var)] bg-[var(--color-var)] text-[length:var(--size-var)]\">\r\n\r\n<!-- After -->\r\n<div class=\"w-[--width-var] bg-[--color-var] text-[length:--size-var]\">\r\n```\r\n\r\nAs you can see in the example above, this works with type-hints as well for when you need to tell Tailwind which utility you are trying to invoke explicitly.\r\n\r\nNeed to prepare documentation before merging.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/9880","RelatedDescription":"Closed or merged PR \"Support using variables as arbitrary values without var()\" (#9880)"},{"Id":"1455708069","IsPullRequest":true,"CreatedAt":"2022-11-22T14:37:08","Actor":"adamwathan","Number":"9875","RawContent":null,"Title":"Add line-height modifier for font-size utilities","State":"closed","Body":"This PR makes use of generalized modifier support added in v3.2 to add a new line-height modifier to the existing font-size utilities.\r\n\r\nThis makes it possible to define your font-size and line-height together in a single class for terser code, like you can when using the opacity modifier with color utilities.\r\n\r\n```html\r\n<!-- Before -->\r\n<div class=\"text-lg leading-8\">\r\n\r\n<!-- Now -->\r\n<div class=\"text-lg/8\">\r\n````\r\n\r\nThe potential modifier values are pulled from your `lineHeight` configuration. You can also use arbitrary values like this:\r\n\r\n```html\r\n<!-- Arbitrary line-height modifier -->\r\n<div class=\"text-xl/[30px]\">\r\n\r\n<!-- Arbitrary font-size with configured line-height modifier -->\r\n<div class=\"text-[19px]/7\">\r\n\r\n<!-- Arbitrary font-size with arbitrary line-height modifier -->\r\n<div class=\"text-[19px]/[27px]\">\r\n```\r\n\r\nThe `leading-*` classes of course aren't going anywhere and are still both useful and supported.\r\n\r\nNeed to prepare documentation before merging.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/9875","RelatedDescription":"Closed or merged PR \"Add line-height modifier for font-size utilities\" (#9875)"},{"Id":"1458547399","IsPullRequest":true,"CreatedAt":"2022-11-21T23:16:27","Actor":"depfu[bot]","Number":"9893","RawContent":null,"Title":"Upgrade all of jest: 28.1.3 → 29.3.1 (major)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this upgrade. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n#### ✳️ jest (28.1.3 → 29.3.1) · [Repo](https://github.com/facebook/jest) · [Changelog](https://github.com/facebook/jest/blob/main/CHANGELOG.md)\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/facebook/jest/releases/tag/v29.3.1\">29.3.1</a></h4>\n\n<blockquote><em>More info than we can show here.</em></blockquote>\n<h4><a href=\"https://github.com/facebook/jest/releases/tag/v29.3.0\">29.3.0</a></h4>\n\n<blockquote><em>More info than we can show here.</em></blockquote>\n<h4><a href=\"https://github.com/facebook/jest/releases/tag/v29.2.2\">29.2.2</a></h4>\n\n<blockquote><em>More info than we can show here.</em></blockquote>\n<h4><a href=\"https://github.com/facebook/jest/releases/tag/v29.2.1\">29.2.1</a></h4>\n\n<blockquote><em>More info than we can show here.</em></blockquote>\n<h4><a href=\"https://github.com/facebook/jest/releases/tag/v29.2.0\">29.2.0</a></h4>\n\n<blockquote><em>More info than we can show here.</em></blockquote>\n<h4><a href=\"https://github.com/facebook/jest/releases/tag/v29.1.2\">29.1.2</a></h4>\n\n<blockquote><em>More info than we can show here.</em></blockquote>\n<h4><a href=\"https://github.com/facebook/jest/releases/tag/v29.1.1\">29.1.1</a></h4>\n\n<blockquote><em>More info than we can show here.</em></blockquote>\n<h4><a href=\"https://github.com/facebook/jest/releases/tag/v29.1.0\">29.1.0</a></h4>\n\n<blockquote><em>More info than we can show here.</em></blockquote>\n<h4><a href=\"https://github.com/facebook/jest/releases/tag/v29.0.3\">29.0.3</a></h4>\n\n<blockquote><em>More info than we can show here.</em></blockquote>\n<h4><a href=\"https://github.com/facebook/jest/releases/tag/v29.0.2\">29.0.2</a></h4>\n\n<blockquote><em>More info than we can show here.</em></blockquote>\n<h4><a href=\"https://github.com/facebook/jest/releases/tag/v29.0.1\">29.0.1</a></h4>\n\n<blockquote><em>More info than we can show here.</em></blockquote>\n<h4><a href=\"https://github.com/facebook/jest/releases/tag/v29.0.0\">29.0.0</a></h4>\n\n<blockquote><em>More info than we can show here.</em></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/jest/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/facebook/jest/compare/2cce069800dab3fc8ca7c469b32d2e2b2f7e2bb1...05deb8393c4ad71e19be2567b704dfd3a2ab5fc9\">See the full diff on Github</a>. The new version differs by more commits than we can show here.</p>\n</details>\n\n\n\n#### ✳️ jest-diff (28.1.3 → 29.3.1) · [Repo](https://github.com/facebook/jest) · [Changelog](https://github.com/facebook/jest/blob/main/CHANGELOG.md)\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/facebook/jest/releases/tag/v29.3.1\">29.3.1</a></h4>\n\n<blockquote><em>More info than we can show here.</em></blockquote>\n<h4><a href=\"https://github.com/facebook/jest/releases/tag/v29.2.1\">29.2.1</a></h4>\n\n<blockquote><em>More info than we can show here.</em></blockquote>\n<h4><a href=\"https://github.com/facebook/jest/releases/tag/v29.2.0\">29.2.0</a></h4>\n\n<blockquote><em>More info than we can show here.</em></blockquote>\n<h4><a href=\"https://github.com/facebook/jest/releases/tag/v29.1.2\">29.1.2</a></h4>\n\n<blockquote><em>More info than we can show here.</em></blockquote>\n<h4><a href=\"https://github.com/facebook/jest/releases/tag/v29.1.0\">29.1.0</a></h4>\n\n<blockquote><em>More info than we can show here.</em></blockquote>\n<h4><a href=\"https://github.com/facebook/jest/releases/tag/v29.0.3\">29.0.3</a></h4>\n\n<blockquote><em>More info than we can show here.</em></blockquote>\n<h4><a href=\"https://github.com/facebook/jest/releases/tag/v29.0.2\">29.0.2</a></h4>\n\n<blockquote><em>More info than we can show here.</em></blockquote>\n<h4><a href=\"https://github.com/facebook/jest/releases/tag/v29.0.1\">29.0.1</a></h4>\n\n<blockquote><em>More info than we can show here.</em></blockquote>\n<h4><a href=\"https://github.com/facebook/jest/releases/tag/v29.0.0\">29.0.0</a></h4>\n\n<blockquote><em>More info than we can show here.</em></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/jest-diff/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/facebook/jest/compare/2cce069800dab3fc8ca7c469b32d2e2b2f7e2bb1...05deb8393c4ad71e19be2567b704dfd3a2ab5fc9\">See the full diff on Github</a>. The new version differs by more commits than we can show here.</p>\n</details>\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/9893","RelatedDescription":"Closed or merged PR \"Upgrade all of jest: 28.1.3 → 29.3.1 (major)\" (#9893)"},{"Id":"1458509432","IsPullRequest":false,"CreatedAt":"2022-11-21T22:52:01","Actor":"tecxx","Number":"9892","RawContent":null,"Title":"@container-queries don't seem to work in blazor","State":"closed","Body":"**What version of Tailwind CSS are you using?**\r\n3.2.4 (latest?)\r\n\r\n\r\n**What build tool (or framework if it abstracts the build tool) are you using?**\r\n\r\ntried tailwindcli (doesn't find container-queries plugin), and npx (works, but with problem described below)\r\n\r\n**What version of Node.js are you using?**\r\n\r\n18.12.1x64\r\n\r\n**What browser are you using?**\r\n\r\nchrome\r\n\r\n**What operating system are you using?**\r\n\r\nwin10\r\n\r\n**Reproduction URL**\r\n\r\nhttps://play.tailwindcss.com/Szq6nq48mD\r\nthis one works fine.\r\n\r\n**Describe your issue**\r\n\r\ni want to test the container-queries plugin in blazor. while the code on playground works (see above), it does not in blazor (do note that @ has to be escaped because it is a key symbol in razor markup)\r\n\r\n            <div class=\"flex flex-wrap justify-start basis-full @@container\">\r\n\r\n              <div class=\"bg-blue-300 relative h-60 basis-full @@lg:basis-1/2 \">Item1</div>\r\n              <div class=\"bg-emerald-300 relative basis-full @@lg:basis-1/2\">Item2</div>\r\n              <div class=\"h-0 basis-full\"></div>\r\n              <div class=\"bg-red-300 relative basis-full\">Item3</div>  \r\n              <div class=\"bg-red-300 relative basis-full\">Item4</div> \r\n            </div>  \r\n\r\nthe resulting stylesheet does not contain any @container class.\r\nif i copy the one that was generated in the playground:\r\n\r\n    .\\@container {\r\n        container-type: inline-size;\r\n    }\r\n    @container (min-width: 32rem) {\r\n        .\\@lg\\:basis-1\\/2 {\r\n            flex-basis: 50%;\r\n        }\r\n    }\r\n\r\ninto my apps stylesheet manually, all is fine.\r\n\r\ni suspect that because we have to escape the @ symbol by doubling it @@ the parser doesn't generate the css correctly? just a guess?\r\n\r\nedit: i am a total noob to CSS so please excuse me if i got something wrong here :)\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/9892","RelatedDescription":"Closed issue \"@container-queries don't seem to work in blazor\" (#9892)"},{"Id":"1457396043","IsPullRequest":false,"CreatedAt":"2022-11-21T12:43:43","Actor":"GuichiZhao","Number":"9888","RawContent":null,"Title":"The project is broken after upgrade to antd 5","State":"closed","Body":"In `@tailwind base`, there is something like  `background-color:transparent` which break the button style in antd 5. When I choose to turn it off using `preflight: false`, everything else is broken, I am in a serious trouble now\r\n\r\nSomething like, never use other library when choosing tailwindcss should be highlighted in the doc please","Url":"https://github.com/tailwindlabs/tailwindcss/issues/9888","RelatedDescription":"Closed issue \"The project is broken after upgrade to antd 5\" (#9888)"},{"Id":"1457400619","IsPullRequest":false,"CreatedAt":"2022-11-21T12:07:36","Actor":"sifat0666","Number":"9889","RawContent":null,"Title":"does not reproduce classes for template literals in js","State":"closed","Body":"i am using tailwind with next js and i have to call the classes individually first or else the classes are not recognized by tailwind. i am using a map to display different colors\r\n\r\n```              \r\n           <div className=\"flex gap-x-2\">\r\n              {labelsClasses.map((label, i) => (\r\n                <span\r\n                  key={i}\r\n                  className={`bg-${label}-500 w-6 h-6 rounded-full flex items-center justify-center cursor-pointer`}\r\n                ></span>\r\n              ))}\r\n            </div>\r\n ```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/9889","RelatedDescription":"Closed issue \"does not reproduce classes for template literals in js\" (#9889)"},{"Id":"1456735653","IsPullRequest":true,"CreatedAt":"2022-11-20T02:07:24","Actor":"adamwathan","Number":"9884","RawContent":null,"Title":"[WIP] New `size-*` utilities for setting width/height at the same time","State":"open","Body":"WIP!","Url":"https://github.com/tailwindlabs/tailwindcss/pull/9884","RelatedDescription":"Open PR \"[WIP] New `size-*` utilities for setting width/height at the same time\" (#9884)"},{"Id":"1455831643","IsPullRequest":true,"CreatedAt":"2022-11-18T21:29:42","Actor":"depfu[bot]","Number":"9876","RawContent":null,"Title":"Update eslint: 8.26.0 → 8.27.0 (minor)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n#### ✳️ eslint (8.26.0 → 8.27.0) · [Repo](https://github.com/eslint/eslint) · [Changelog](https://github.com/eslint/eslint/blob/main/CHANGELOG.md)\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/eslint/eslint/releases/tag/v8.27.0\">8.27.0</a></h4>\n\n<blockquote><h2 dir=\"auto\">Features</h2>\n<ul dir=\"auto\">\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/f14587c42bb0fe6ec89529aede045a488083d6ee\"><code class=\"notranslate\">f14587c</code></a> feat: new <code class=\"notranslate\">no-new-native-nonconstructor</code> rule (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16368\">#16368</a>) (Sosuke Suzuki)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/978799bd5c76fecf4ce8f17d89ad6c9f436c3228\"><code class=\"notranslate\">978799b</code></a> feat: add new rule <code class=\"notranslate\">no-empty-static-block</code> (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16325\">#16325</a>) (Sosuke Suzuki)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/69216ee69c7172e847b64e0e934b5121a34d0ea3\"><code class=\"notranslate\">69216ee</code></a> feat: no-empty suggest to add comment in empty BlockStatement (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16470\">#16470</a>) (Nitin Kumar)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/319f0a5491598825bbd528c6d1fc12771056a74c\"><code class=\"notranslate\">319f0a5</code></a> feat: use <code class=\"notranslate\">context.languageOptions.ecmaVersion</code> in core rules (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16458\">#16458</a>) (Milos Djermanovic)</li>\n</ul>\n<h2 dir=\"auto\">Bug Fixes</h2>\n<ul dir=\"auto\">\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/c3ce5212f672d95dde3465d7d3c4bf99ff665f8b\"><code class=\"notranslate\">c3ce521</code></a> fix: Ensure unmatched glob patterns throw an error (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16462\">#16462</a>) (Nicholas C. Zakas)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/886a0386897f96d2da95eba8c52bd893fcbf7e86\"><code class=\"notranslate\">886a038</code></a> fix: handle files with unspecified path in <code class=\"notranslate\">getRulesMetaForResults</code> (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16437\">#16437</a>) (Francesco Trotta)</li>\n</ul>\n<h2 dir=\"auto\">Documentation</h2>\n<ul dir=\"auto\">\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/ce93b429bf917640473dd7e26b49bba993c68ce4\"><code class=\"notranslate\">ce93b42</code></a> docs: Stylelint property-no-unknown (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16497\">#16497</a>) (Nick Schonning)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/d2cecb4ad2a6d33444cf0288a863c43acb3b468a\"><code class=\"notranslate\">d2cecb4</code></a> docs: Stylelint declaration-block-no-shorthand-property-overrides (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16498\">#16498</a>) (Nick Schonning)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/0a92805d7713118866e519b0ff2a61c5d6238ad9\"><code class=\"notranslate\">0a92805</code></a> docs: stylelint color-hex-case (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16496\">#16496</a>) (Nick Schonning)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/74a5af487ac7296a46a8078e585f00df72b63d83\"><code class=\"notranslate\">74a5af4</code></a> docs: fix stylelint error (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16491\">#16491</a>) (Milos Djermanovic)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/324db1a11e43ba9d954dc522763faea19129ce6a\"><code class=\"notranslate\">324db1a</code></a> docs: explicit stylelint color related rules (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16465\">#16465</a>) (Nick Schonning)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/94dc4f19ba49fe2358f8bcc2fc3555d222766755\"><code class=\"notranslate\">94dc4f1</code></a> docs: use Stylelint for HTML files (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16468\">#16468</a>) (Nick Schonning)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/cc6128db4f489c3ab80fff2f9dbeea313e72208d\"><code class=\"notranslate\">cc6128d</code></a> docs: enable stylelint declaration-block-no-duplicate-properties (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16466\">#16466</a>) (Nick Schonning)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/d03a8bf8978bd330aeb951f18cc92bf1ad24eeec\"><code class=\"notranslate\">d03a8bf</code></a> docs: Add heading to justification explanation (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16430\">#16430</a>) (Maritaria)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/8a159686f9d497262d573dd601855ce28362199b\"><code class=\"notranslate\">8a15968</code></a> docs: add Stylelint configuration and cleanup (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16379\">#16379</a>) (Nick Schonning)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/9b0a469d1e4650c1d9da26239357e715b11b2d97\"><code class=\"notranslate\">9b0a469</code></a> docs: note commit messages don't support scope (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16435\">#16435</a>) (Andy Edwards)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/15814057fd69319b3744bdea5db2455f85d2e74f\"><code class=\"notranslate\">1581405</code></a> docs: improve context.getScope() docs (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16417\">#16417</a>) (Ben Perlmutter)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/b7971496e9b44add405ca0360294f5c3be85b540\"><code class=\"notranslate\">b797149</code></a> docs: update formatters template (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16454\">#16454</a>) (Milos Djermanovic)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/5ac4de911f712cb3a5a16eb7a4063eee09dfc97c\"><code class=\"notranslate\">5ac4de9</code></a> docs: fix link to formatters on the Core Concepts page (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16455\">#16455</a>) (Vladislav)</li>\n<li>\n<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/commit/33313ef56258a6a96b00a3e70025b94bd2f2fe9f\"><code class=\"notranslate\">33313ef</code></a> docs: core-concepts: fix link to semi rule (<a href=\"https://bounce.depfu.com/github.com/eslint/eslint/pull/16453\">#16453</a>) (coderaiser)</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/eslint/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/eslint/eslint/compare/823b018b1c4e3e7979c06d7628d769ed9efc926a...e9509642f6e6c2692565d2a42ecd98c7c41e48b1\">See the full diff on Github</a>. The new version differs by 22 commits:</p>\n<ul>\n<li><a href=\"https://github.com/eslint/eslint/commit/e9509642f6e6c2692565d2a42ecd98c7c41e48b1\"><code>8.27.0</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/631c91fdf7ee94cece89aa4797333b3ea3050b26\"><code>Build: changelog update for 8.27.0</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/f14587c42bb0fe6ec89529aede045a488083d6ee\"><code>feat: new `no-new-native-nonconstructor` rule (#16368)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/978799bd5c76fecf4ce8f17d89ad6c9f436c3228\"><code>feat: add new rule `no-empty-static-block` (#16325)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/ce93b429bf917640473dd7e26b49bba993c68ce4\"><code>docs: Stylelint property-no-unknown (#16497)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/d2cecb4ad2a6d33444cf0288a863c43acb3b468a\"><code>docs: Stylelint declaration-block-no-shorthand-property-overrides (#16498)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/0a92805d7713118866e519b0ff2a61c5d6238ad9\"><code>docs: stylelint color-hex-case (#16496)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/c3ce5212f672d95dde3465d7d3c4bf99ff665f8b\"><code>fix: Ensure unmatched glob patterns throw an error (#16462)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/74a5af487ac7296a46a8078e585f00df72b63d83\"><code>docs: fix stylelint error (#16491)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/69216ee69c7172e847b64e0e934b5121a34d0ea3\"><code>feat: no-empty suggest to add comment in empty BlockStatement (#16470)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/324db1a11e43ba9d954dc522763faea19129ce6a\"><code>docs: explicit stylelint color related rules (#16465)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/94dc4f19ba49fe2358f8bcc2fc3555d222766755\"><code>docs: use Stylelint for HTML files (#16468)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/cc6128db4f489c3ab80fff2f9dbeea313e72208d\"><code>docs: enable stylelint declaration-block-no-duplicate-properties (#16466)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/d03a8bf8978bd330aeb951f18cc92bf1ad24eeec\"><code>docs: Add heading to justification explanation (#16430)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/886a0386897f96d2da95eba8c52bd893fcbf7e86\"><code>fix: handle files with unspecified path in `getRulesMetaForResults` (#16437)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/319f0a5491598825bbd528c6d1fc12771056a74c\"><code>feat: use `context.languageOptions.ecmaVersion` in core rules (#16458)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/8a159686f9d497262d573dd601855ce28362199b\"><code>docs: add Stylelint configuration and cleanup (#16379)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/9b0a469d1e4650c1d9da26239357e715b11b2d97\"><code>docs: note commit messages don&#39;t support scope (#16435)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/15814057fd69319b3744bdea5db2455f85d2e74f\"><code>docs: improve context.getScope() docs (#16417)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/b7971496e9b44add405ca0360294f5c3be85b540\"><code>docs: update formatters template (#16454)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/5ac4de911f712cb3a5a16eb7a4063eee09dfc97c\"><code>docs: fix link to formatters on the Core Concepts page (#16455)</code></a></li>\n<li><a href=\"https://github.com/eslint/eslint/commit/33313ef56258a6a96b00a3e70025b94bd2f2fe9f\"><code>docs: core-concepts: fix link to semi rule (#16453)</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/9876","RelatedDescription":"Closed or merged PR \"Update eslint: 8.26.0 → 8.27.0 (minor)\" (#9876)"},{"Id":"1454141603","IsPullRequest":true,"CreatedAt":"2022-11-17T23:13:35","Actor":"depfu[bot]","Number":"9868","RawContent":null,"Title":"Update postcss: 8.4.18 → 8.4.19 (patch)","State":"closed","Body":"\n\n\n\n\nHere is everything you need to know about this update. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n#### ✳️ postcss (8.4.18 → 8.4.19) · [Repo](https://github.com/postcss/postcss) · [Changelog](https://github.com/postcss/postcss/blob/main/CHANGELOG.md)\n\n\n<details>\n<summary>Release Notes</summary>\n<h4><a href=\"https://github.com/postcss/postcss/releases/tag/8.4.19\">8.4.19</a></h4>\n\n<blockquote><ul dir=\"auto\">\n<li>Fixed whitespace preserving after AST transformations (by <a href=\"https://bounce.depfu.com/github.com/romainmenke\">@romainmenke</a>).</li>\n</ul></blockquote>\n<p><em>Does any of this look wrong? <a href=\"https://depfu.com/packages/npm/postcss/feedback\">Please let us know.</a></em></p>\n</details>\n\n<details>\n<summary>Commits</summary>\n<p><a href=\"https://github.com/postcss/postcss/compare/d33f2725eb36f442feb52c91457d7b7510bdf02f...c26baf34a7e09787a5f115f3c416583afee6f5e2\">See the full diff on Github</a>. The new version differs by 8 commits:</p>\n<ul>\n<li><a href=\"https://github.com/postcss/postcss/commit/c26baf34a7e09787a5f115f3c416583afee6f5e2\"><code>Release 8.4.19 version</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/ed5103d3a37adf77cef557055a34d64fe4ae3cca\"><code>Update dependencies</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/8086ea3f043af5779752b024a80b3cd460b27248\"><code>Merge pull request #1790 from romainmenke/fix-whitespace-bug--passionate-african-bush-elephant-9ae98c1a5a</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/4b388450ea7786838d53dbc7c4bc0ceb7ecbb597\"><code>fix whitespace bug</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/cf9425aeaea23c290ad4893ecd02b9741e14c281\"><code>Merge pull request #1789 from eduardopilati/patch-1</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/ca04e0abed8118e2d4617a2c6c9b3a07e63bf0e6\"><code>Update plugins.md</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/fe637681100bc59fa009d72b0ef3a013f19c0f2b\"><code>Update dependencies</code></a></li>\n<li><a href=\"https://github.com/postcss/postcss/commit/3b6ba56d3a7f6e7345803555fa16f1584d9b0ab2\"><code>Add Node.js 19</code></a></li>\n</ul>\n</details>\n\n\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will automatically keep this PR conflict-free, as long as you don't add any commits to this branch yourself. You can also trigger a rebase manually by commenting with `@depfu rebase`.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu rebase</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n<dt>@​depfu pause</dt><dd>Ignores all future updates for this dependency and closes this PR</dd>\n<dt>@​depfu pause [minor|major]</dt><dd>Ignores all future minor/major updates for this dependency and closes this PR</dd>\n<dt>@​depfu resume</dt><dd>Future versions of this dependency will create PRs again (leaves this PR as is)</dd>\n</dl></blockquote>\n</details>\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/9868","RelatedDescription":"Closed or merged PR \"Update postcss: 8.4.18 → 8.4.19 (patch)\" (#9868)"},{"Id":"1453664884","IsPullRequest":true,"CreatedAt":"2022-11-17T16:53:12","Actor":"RobinMalfait","Number":"9866","RawContent":null,"Title":"Fix `foo-[abc]/[def]` not being handled correctly","State":"closed","Body":"This commit does a bit of cleanup, it also ensures that we lookup `[abc]/[def]` in the `values` first, and if it doesn't exist, then we start parsing all the values out.\n\nWe also ensure that `abc` and `def` are parsed out correctly for the correct type instead of dropping the rule altogether because we happen to end up with an `any` rule.\n\n<!--\n\n👋 Hey, thanks for your interest in contributing to Tailwind!\n\n**Please ask first before starting work on any significant new features.**\n\nIt's never a fun experience to have your pull request declined after investing a lot of time and effort into a new feature. To avoid this from happening, we request that contributors create an issue to first discuss any significant new features. This includes things like adding new utilities, creating new at-rules, or adding new component examples to the documentation.\n\nhttps://github.com/tailwindcss/tailwindcss/blob/master/.github/CONTRIBUTING.md\n\n-->\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/9866","RelatedDescription":"Closed or merged PR \"Fix `foo-[abc]/[def]` not being handled correctly\" (#9866)"},{"Id":"1453510027","IsPullRequest":true,"CreatedAt":"2022-11-17T15:18:27","Actor":"reinink","Number":"9865","RawContent":null,"Title":"Add container queries plugin to standalone CLI","State":"closed","Body":"This PR adds the new [container queries plugin](https://github.com/tailwindlabs/tailwindcss-container-queries) to the standalone CLI.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/9865","RelatedDescription":"Closed or merged PR \"Add container queries plugin to standalone CLI\" (#9865)"}],"ResultType":"GitHubIssue"}},"RunOn":"2022-11-30T03:30:29.0568768Z","RunDurationInMilliseconds":664}