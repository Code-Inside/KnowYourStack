{"Data":{"TailwindCss-Issues":{"Issues":[{"Id":"3400317108","IsPullRequest":false,"CreatedAt":"2025-09-10T01:56:27","Actor":"stevengrimaldo","Number":"18911","RawContent":null,"Title":"LVH arbitrary values not generating classes in Safari","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\nv4.1.12\n\nFor example: v4.0.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\nNext.js 15.5.2\n\n**What version of Node.js are you using?**\nv24.4.0\n\n**What browser are you using?**\nSafari 18.6\n\n**What operating system are you using?**\nmacOS Sequoia 15.6.1\n\n**Reproduction URL**\n\ni have validated that the classes generate properly in chrome but not safari except for the 1 class at all \"h-lvl\"\n\n**Describe your issue**\nThe following css is being written and not rendered as classes in safari\n\n- lg:-mt-[100lvh]\n- h-[60lvh]\n- mt-[50lvh]\n\nand so on, the only class that does ever render is h-lvh, but arbitrary values with lvh do not, so far i've only been able to get dvh to render with arbitrary values but i dont want to use dvh and should be able to use svh or lvh as stated in the docs (here)[https://tailwindcss.com/blog/tailwindcss-v3-4#dynamic-viewport-units]\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18911","RelatedDescription":"Closed issue \"LVH arbitrary values not generating classes in Safari\" (#18911)"},{"Id":"3399990653","IsPullRequest":false,"CreatedAt":"2025-09-09T21:19:10","Actor":"SteffenDE","Number":"18908","RawContent":null,"Title":"Watcher does not properly rebuild on Windows if drive letter in process working directory is lowercase","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.1.13\n\n**What version of Node.js are you using?**\n\nFor example: Standalone CLI\n\n**What operating system are you using?**\n\nWindows\n\n**Describe your issue**\n\nSo this is a weird issue. We've got an [upstream bug report](https://github.com/phoenixframework/tailwind/issues/129#issuecomment-3272275554) that the app.css output does not change when editing the input app.css in a Phoenix project on Windows. I've tracked it down to the following:\n\nWhen spawning the Tailwind CLI from Elixir using this command\n\n```\nSystem.cmd(\"C:/path/to/tailwind-windows-x64.exe\", [\"--input=assets/css/app.css\", \"--output=priv/static/assets/css/app.css\", \"--watch\"], into: IO.stream(:stdio, :line))\n```\n\neverything is good. But when passing a working directory to execute the command under\n\n```\nSystem.cmd(\"C:/path/to/tailwind-windows-x64.exe\", [\"--input=assets/css/app.css\", \"--output=priv/static/assets/css/app.css\", \"--watch\"], cd: File.cwd!(), into: IO.stream(:stdio, :line))\n```\n\nthe output app.css does indeed not update. Looking at the working directories in those cases, the difference is that when Elixir passes the working directory, it is passed with a lowercase drive letter:\n\n```\niex(1)> System.cmd(\"node\", [\"-e\", \"console.log(process.cwd())\"])\n{\"C:\\\\Users\\\\Steffen\\\\example_app\\n\", 0}\niex(2)> System.cmd(\"node\", [\"-e\", \"console.log(process.cwd())\"], cd: File.cwd!())\n{\"c:\\\\Users\\\\Steffen\\\\example_app\\n\", 0}\n```\n\nI'm not familiar with your watcher, so this may also be an upstream bug somewhere else, but I figured you'll be able to triage this better than me. I guess there's code somewhere that compares paths case sensitively when it should not (?)","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18908","RelatedDescription":"Open issue \"Watcher does not properly rebuild on Windows if drive letter in process working directory is lowercase\" (#18908)"},{"Id":"3399330164","IsPullRequest":true,"CreatedAt":"2025-09-09T17:28:21","Actor":"RobinMalfait","Number":"18907","RawContent":null,"Title":"Do not generate `grid-column` when configuring `grid-column-start` or `grid-column-end`","State":"open","Body":"This PR fixes an issue where configuring a custom `--grid-column-start` or `--grid-column-end` also generated a `grid-column` utility due to the overlapping namespace.\r\n\r\n```css\r\n@theme {\r\n  --grid-column-start-custom: custom-start;\r\n  --grid-column-end-custom: custom-end;\r\n}\r\n```\r\n\r\nWould then generate:\r\n```css\r\n.col-end-custom {\r\n  grid-column: var(--grid-column-end-custom);\r\n}\r\n.col-start-custom {\r\n  grid-column: var(--grid-column-start-custom);\r\n}\r\n.col-start-custom {\r\n  grid-column-start: var(--grid-column-start-custom);\r\n}\r\n.col-end-custom {\r\n  grid-column-end: var(--grid-column-end-custom);\r\n}\r\n```\r\n\r\nInstead of the expected:\r\n```css\r\n.col-start-custom {\r\n  grid-column-start: var(--grid-column-start-custom);\r\n}\r\n.col-end-custom {\r\n  grid-column-end: var(--grid-column-end-custom);\r\n}\r\n```\r\n\r\nFixes: #18906\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18907","RelatedDescription":"Open PR \"Do not generate `grid-column` when configuring `grid-column-start` or `grid-column-end`\" (#18907)"},{"Id":"3399155320","IsPullRequest":false,"CreatedAt":"2025-09-09T16:34:34","Actor":"aihowes","Number":"18906","RawContent":null,"Title":"Grid column start and end generating `grid-column:` css properties","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n4.1.13\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\nvite: 7.1.5\n@tailwindcss/vite: 4.1.13\n\n**What version of Node.js are you using?**\n22\n\n**What browser are you using?**\n\nArc \nVersion 1.110.0 (67696)\nChromium Engine Version 139.0.7258.156\n\n**What operating system are you using?**\n\nMacOS 15.6.1\n\n**Reproduction URL**\n\nTailwind v3: https://play.tailwindcss.com/GIiEGJMv62?file=config\n\nTailwind v4: https://play.tailwindcss.com/nMNvsPlHa2?file=css\n\n**Describe your issue**\n\nWe use a custom grid template columns with named grid lines for example\n```\n--grid-template-columns-content: [container-start content-start]\n    repeat(12, [column-start] minmax(0, 100px) [column-end]) [content-end\n    container-end];\n```\n\nWe then setup utility classes for each named grid line so was can specifically say `col-start-col-4 col-end-col-8`\n\nIn V4 creating a `--grid-column-end-col-8` variable seems to be generating the `grid-column` AND the `grid-column-end` css property, whilst V3 as we use `gridColumnEnd` JS property just creates the `grid-column-end` css property.\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18906","RelatedDescription":"Open issue \"Grid column start and end generating `grid-column:` css properties\" (#18906)"},{"Id":"3398774158","IsPullRequest":true,"CreatedAt":"2025-09-09T15:14:09","Actor":"philipp-spiess","Number":"18905","RawContent":null,"Title":"Fix CLI watcher cleanup race","State":"closed","Body":"This PR supersets #18559 and fixes the same issue reported by @Gazler.\r\n\r\nUpon testing, we noticed that it's possible that two parallel invocations of file system change events could cause some cleanup functions to get swallowed.\r\n\r\nThis happens because we only remember one global cleanup function but it is possible timing wise that two calls to `createWatcher()` are created before the old watchers are cleaned and thus only one of the new cleanup functions get retained.\r\n\r\nTo fix this, this PR changes `cleanupWatchers` to an array and ensures that all functions are retained.\r\n\r\nIn some local testing, I was able to trigger this, based on the reproduction by @Gazler in https://github.com/tailwindlabs/tailwindcss/pull/18559, to often call a cleanup with more than one cleanup function in the array.\r\n\r\nI'm going to paste the amazing reproduction from #18559 here as well:\r\n\r\n\r\n# Requirements\r\n\r\nWe need a way to stress the CPU to slow down tailwind compilation, for example stress-ng.\r\n\r\n```\r\nstress-ng --cpu 16 --timeout 10\r\n```\r\n\r\nIt can be install with apt, homebrew or similar.\r\n\r\n# Installation\r\n\r\nThere is a one-liner at the bottom to perform the required setup and run the tailwindcli.\r\n\r\nCreate a new directory:\r\n\r\n```shell\r\nmkdir twtest && cd twtest\r\n```\r\n\r\nCreate a package.json with the correct deps.\r\n\r\n```shell\r\ncat << 'EOF' > package.json\r\n{\r\n  \"dependencies\": {\r\n    \"@tailwindcss/cli\": \"^4.1.11\",\r\n    \"daisyui\": \"^5.0.46\",\r\n    \"tailwindcss\": \"^4.1.11\"\r\n  }\r\n}\r\nEOF\r\n```\r\n\r\nCreate the input css:\r\n\r\n```shell\r\nmkdir src\r\ncat << 'EOF' > src/.input.css\r\n@import \"tailwindcss\" source(none);\r\n@plugin \"daisyui\";\r\n@source \"../core_components.ex\";\r\n@source \"../home.html.heex\";\r\n@source \"./input.css\";\r\n\r\nEOF\r\n```\r\n\r\nInstall tailwind, daisyui, and some HTML to make tailwind do some work:\r\n\r\n```\r\nnpm install\r\nwget https://raw.githubusercontent.com/phoenixframework/phoenix/refs/heads/main/installer/templates/phx_web/components/core_components.ex\r\nwget https://github.com/phoenixframework/phoenix/blob/main/installer/templates/phx_web/controllers/page_html/home.html.heex\r\n```\r\n\r\n# Usage\r\n\r\nThis is easiest with 3 terminal windows:\r\n\r\nStart a tailwindcli watcher in one terminal:\r\n\r\n```shell\r\nnpx @tailwindcss/cli -i src/input.css -o src/output.css --watch\r\n```\r\n\r\nStart a stress test in another:\r\n\r\n```shell\r\nstress-ng --cpu 16 --timeout 30\r\n```\r\n\r\nForce repeated compilation in another:\r\n\r\n```shell\r\nfor i in $(seq 1 50); do touch src/input.css; sleep 0.1; done\r\n```\r\n\r\n# Result\r\n\r\nOnce the stress test has completed, you can run:\r\n\r\n```shell\r\ntouch src/input.css\r\n```\r\n\r\nYou should see that there is repeated output, and the duration is in the multiple seconds.\r\n\r\nIf this setup doesn't cause the issue, you can also add the `-p` flag which causes the\r\nCSS to be printed, slowing things down further:\r\n\r\n```shell\r\nnpx @tailwindcss/cli -i src/input.css -p --watch\r\n```\r\n\r\n## One-liner\r\n\r\n```shell\r\nmkdir twtest && cd twtest\r\ncat << 'EOF' > package.json\r\n{\r\n  \"dependencies\": {\r\n    \"@tailwindcss/cli\": \"^4.1.11\",\r\n    \"daisyui\": \"^5.0.46\",\r\n    \"tailwindcss\": \"^4.1.11\"\r\n  }\r\n}\r\nEOF\r\n\r\nmkdir src\r\ncat << 'EOF' > src/input.css\r\n@import \"tailwindcss\" source(none);\r\n@plugin \"daisyui\";\r\n@source \"../core_components.ex\";\r\n@source \"../home.html.heex\";\r\n@source \"./input.css\";\r\n\r\nEOF\r\n\r\nnpm install\r\nwget https://raw.githubusercontent.com/phoenixframework/phoenix/refs/heads/main/installer/templates/phx_web/components/core_components.ex\r\nwget https://github.com/phoenixframework/phoenix/blob/main/installer/templates/phx_web/controllers/page_html/home.html.heex\r\nnpx @tailwindcss/cli -i src/input.css -o src/output.css --watch\r\n```\r\n\r\n## Test plan\r\n\r\n- Not able to reproduce this with a local build of the CLI after the patch is applied but was able to reproduce it again once the patch was reverted.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18905","RelatedDescription":"Closed or merged PR \"Fix CLI watcher cleanup race\" (#18905)"},{"Id":"3393772754","IsPullRequest":true,"CreatedAt":"2025-09-09T12:20:05","Actor":"RobinMalfait","Number":"18901","RawContent":null,"Title":"Add `@container-size` utility","State":"closed","Body":"This PR adds a new `@container-size` utility instead of `@container-[size]`.\n\nThe main reason we didn't do this before is because we only have container width related container queries, and not block based ones so we never needed `size` and `inline-size` was enough.\n\nHowever, `@container-size` is still useful if you are using container query related units such as `cqb` which are using the block size of the container not the inline size.\n\nI also added a little helper such that `@container-size` is only available in `insiders` and `4.2.0` (and later) so `4.1.x` releases won't have this utility yet. This will require some CHANGELOG changes such that we don't include this when releasing the next minor release.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18901","RelatedDescription":"Closed or merged PR \"Add `@container-size` utility\" (#18901)"},{"Id":"3395100484","IsPullRequest":false,"CreatedAt":"2025-09-09T11:03:39","Actor":"browner12","Number":"18903","RawContent":null,"Title":"sub-dependencies `color-name` and `color-convert` critical security alert","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n3.4.17\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite 7.1.4\n\n**What version of Node.js are you using?**\n\nBun 1.2.21\n\n**What browser are you using?**\n\nN/A\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://github.com/advisories/GHSA-m99c-cfww-cxqx\nhttps://github.com/advisories/GHSA-ch7m-m9rf-8gvv\n\n**Describe your issue**\n\nWhen running an audit via `bun audit` we are getting critical security issues due to a sub-dependency of Tailwind.\n\n```bash\nbun audit v1.2.21 (7c45ed97)\ncolor-name  >=0\n  tailwindcss › sucrase › glob › jackspeak › @isaacs/cliui › wrap-ansi › ansi-styles › color-convert › color-name\n  critical: Malware in color-name - https://github.com/advisories/GHSA-m99c-cfww-cxqx\n\ncolor-convert  >=0\n  tailwindcss › sucrase › glob › jackspeak › @isaacs/cliui › wrap-ansi › ansi-styles › color-convert\n  critical: Malware in color-convert - https://github.com/advisories/GHSA-ch7m-m9rf-8gvv\n\n2 vulnerabilities (2 critical)\n```\n\nHere is the dependency tree from `bun why color-name`:\n\n```bash\ncolor-name@1.1.4\n  └─ color-convert@2.0.1 (requires ~1.1.4)\n     └─ ansi-styles@4.3.0 (requires ^2.0.1)\n        └─ wrap-ansi@7.0.0 (requires ^4.0.0)\n           └─ @isaacs/cliui@8.0.2 (requires npm:wrap-ansi@^7.0.0)\n              └─ jackspeak@3.4.3 (requires ^8.0.2)\n                 └─ glob@10.4.5 (requires ^3.1.2)\n                    └─ sucrase@3.35.0 (requires ^10.3.10)\n                       └─ tailwindcss@3.4.17 (requires ^3.35.0)\n                          ├─ peer @tailwindcss/container-queries@0.1.1 (requires >=3.2.0)\n                          └─ peer @tailwindcss/forms@0.5.10 (requires >=3.0.0 || >= 3.0.0-alpha.1 || >= 4.0.0-alpha.20 || >= 4.0.0-beta.1)\n```","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18903","RelatedDescription":"Closed issue \"sub-dependencies `color-name` and `color-convert` critical security alert\" (#18903)"},{"Id":"3393514890","IsPullRequest":true,"CreatedAt":"2025-09-08T10:18:31","Actor":"RobinMalfait","Number":"18900","RawContent":null,"Title":"Merge suggestions when using `@utility`","State":"closed","Body":"This PR fixes a bug where custom `@utility` implementations with a name that match an existing utility would override the existing suggestions even though we generate both utilities.\r\n\r\nWith this, we want to make sure that both the custom and the built-in utilities are suggested. We also want to make sure that we don't get duplicate suggestions.\r\n\r\nE.g.:\r\n\r\n- `font-` would suggest:\r\n  - 'font-black'\r\n  - 'font-bold'\r\n  - 'font-extrabold'\r\n  - 'font-extralight'\r\n  - 'font-light'\r\n  - 'font-medium'\r\n  - 'font-mono'\r\n  - 'font-normal'\r\n  - 'font-sans'\r\n  - 'font-semibold'\r\n  - 'font-serif'\r\n  - 'font-thin'\r\n\r\nBut if you introduce this little custom utility:\r\n\r\n```css\r\n@theme {\r\n  --custom-font-weights-foo: 123;\r\n}\r\n\r\n@utility font-* {\r\n  --my-weight: --value(--custom-font-weights- *);\r\n}\r\n```\r\n\r\n- `font-` would suggest:\r\n  - 'font-foo'\r\n\r\nWith this fix, we would suggest:\r\n\r\n- `font-` would suggest:\r\n  - 'font-black'\r\n  - 'font-bold'\r\n  - 'font-extrabold'\r\n  - 'font-extralight'\r\n  - 'font-foo'          // This is now added\r\n  - 'font-light'\r\n  - 'font-medium'\r\n  - 'font-mono'\r\n  - 'font-normal'\r\n  - 'font-sans'\r\n  - 'font-semibold'\r\n  - 'font-serif'\r\n  - 'font-thin'\r\n\r\nWe also make sure that they are unique, so if you have a custom utility that happens to match another existing utility (e.g. `font-bold`), you won't see `font-bold` twice in the suggestions.\r\n\r\n```css\r\n@theme {\r\n  --custom-font-weights-bold: bold;\r\n  --custom-font-weights-normal: normal;\r\n  --custom-font-weights-foo: 1234;\r\n}\r\n\r\n@utility font-* {\r\n  --my-weight: --value(--custom-font-weights-*);\r\n}\r\n```\r\n\r\n- `font-` would suggest:\r\n  - 'font-black'\r\n  - 'font-bold'          // Overlaps with existing utility\r\n  - 'font-extrabold'\r\n  - 'font-extralight'\r\n  - 'font-foo'           // This is now added\r\n  - 'font-light'\r\n  - 'font-medium'\r\n  - 'font-mono'\r\n  - 'font-normal'        // Overlaps with existing utility\r\n  - 'font-sans'\r\n  - 'font-semibold'\r\n  - 'font-serif'\r\n  - 'font-thin'\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18900","RelatedDescription":"Closed or merged PR \"Merge suggestions when using `@utility`\" (#18900)"},{"Id":"3390006454","IsPullRequest":false,"CreatedAt":"2025-09-08T08:55:38","Actor":"sharkfin777","Number":"18894","RawContent":null,"Title":"Bug Tailwind shadow customization on v4","State":"closed","Body":"Hello this is a bug that is there \n\nWhen i theme a tailwind shadow extending it \n\n`@theme {\n  --shadow-myshadow: 2px 2px 0 0 #000000;\n}`\n\nI am not able to apply color to it like shadow-indigo-500 it just wont work idk why.\n\nMay be one of the devs can check it out. I am not sure if i am doing it correctly in v4 but i think its a bug.\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18894","RelatedDescription":"Closed issue \"Bug Tailwind shadow customization on v4\" (#18894)"},{"Id":"3392322593","IsPullRequest":false,"CreatedAt":"2025-09-08T08:54:28","Actor":"DONCHUY846","Number":"18897","RawContent":null,"Title":"Margin and Padding doesn't work in v4","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n v4.0.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n \"@eslint/eslintrc\": \"^3\",\n    \"@tailwindcss/postcss\": \"^4\",\n    \"eslint\": \"^9\",\n    \"eslint-config-next\": \"15.4.6\",\n    \"tailwindcss\": \"^4\"\n\n**What version of Node.js are you using?**\n\n v22.17.1\n\n**What browser are you using?**\n\nChrome and Brave\n\n**What operating system are you using?**\n\nUbuntu\n\n**Reproduction URL**\n\n\n**Describe your issue**\n\nI'm trying to put margin and padding properties but don't work. \n\n\n<img width=\"561\" height=\"165\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/5dd1749b-cd8e-479b-9d0d-6eb39a7ee6b7\" />\n\n<img width=\"1920\" height=\"83\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/717391b5-4a8a-4ee0-b25e-e085855f507a\" />\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18897","RelatedDescription":"Closed issue \"Margin and Padding doesn't work in v4\" (#18897)"},{"Id":"3387672198","IsPullRequest":false,"CreatedAt":"2025-09-05T14:21:02","Actor":"kangwuyi","Number":"18891","RawContent":null,"Title":"about generate CSS by Monorepo mode","State":"closed","Body":"This is a problem that needs to be reopened!!!\n\nI found that Tailwind did not generate CSS styles correctly in Monorepo mode\nFinally, it was found that there was a related issue at https://github.com/tailwindlabs/tailwindcss/issues/13136#issuecomment-2624010237 and the matter was resolved in the same way as others.\n\nBut in the end, I discovered a new issue where in monorepo mode, if a subfolders are ignored by **. gitignore**, it can cause the CSS inside the folder to not be generated correctly!","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18891","RelatedDescription":"Closed issue \"about generate CSS by Monorepo mode\" (#18891)"},{"Id":"3387621863","IsPullRequest":false,"CreatedAt":"2025-09-05T13:53:55","Actor":"vadimwe","Number":"18889","RawContent":null,"Title":"Ionic 8/Angular 20 - Not all classes handled by tailwind in angular dev mode (ionic serve)","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n4.1.12\n\nFor example: v4.0.6\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nIonic 8 / Angular 20 (with SCSS mode) / postcss 8.5.6\n\n**What version of Node.js are you using?**\n\nv22.14.0\n\n**What browser are you using?**\n\nChrome, Safari (mobile & desktop)\n\n**What operating system are you using?**\n\nmacOS\n\n**Describe your issue**\n\nTailwind handle classes in src/app/tabs folder but don't for src/app/pages/auth/auth-login.\nIf you stop dev server and remove angular cache, tailwind will fetch new classes on next server start but not in runtime\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18889","RelatedDescription":"Closed issue \"Ionic 8/Angular 20 - Not all classes handled by tailwind in angular dev mode (ionic serve)\" (#18889)"},{"Id":"3385607796","IsPullRequest":true,"CreatedAt":"2025-09-05T12:24:12","Actor":"RobinMalfait","Number":"18885","RawContent":null,"Title":"Handle `@variant` inside `@custom-variant`","State":"closed","Body":"This PR fixes an issue where you cannot use `@variant` inside a `@custom-variant`. While you can use `@variant` in normal CSS, you cannot inside of `@custom-variant`. Today this silently fails and emits invalid CSS.\r\n```css\r\n@custom-variant dark {\r\n  @variant data-dark {\r\n    @slot;\r\n  }\r\n}\r\n```\r\n```html\r\n<div class=\"dark:flex\"></div>\r\n```\r\n\r\nWould result in:\r\n```css\r\n.dark\\:flex {\r\n  @variant data-dark {\r\n    display: flex;\r\n  }\r\n}\r\n```\r\n\r\nTo solve it we have 3 potential solutions:\r\n\r\n1. Consider it user error — but since it generates CSS and you don't really get an error you could be shipping broken CSS unknowingly.\r\n1. We could try and detect this and not generate CSS for this and potentially show a warning.\r\n1. We could make it work as expected — which is what this PR does.\r\n\r\nSome important notes:\r\n\r\n1. The evaluation of the `@custom-variant` only happens when you actually need it. That means that `@variant` inside `@custom-variant` will always have the implementation of the last definition of that variant.\r\n\r\n   In other words, if you use `@variant hover` inside a `@custom-variant`, and later you override the `hover` variant, the `@custom-variant` will use the new implementation.\r\n1. If you happen to introduce a circular dependency, then an error will be thrown during the build step.\r\n\r\nYou can consider it a bug fix or a new feature it's a bit of a gray area. But\r\none thing that is cool about this is that you can ship a plugin that looks like\r\nthis:\r\n```css\r\n@custom-variant hocus {\r\n  @variant hover {\r\n    @slot;\r\n  }\r\n\r\n  @variant focus {\r\n    @slot;\r\n  }\r\n}\r\n```\r\n\r\nAnd it will use the implementation of `hover` and `focus` that the user has defined. So if they have a custom `hover` or `focus` variant it will just work.\r\n\r\nBy default `hocus:underline` would generate:\r\n```css\r\n@media (hover: hover) {\r\n  .hocus\\:underline:hover {\r\n    text-decoration-line: underline;\r\n  }\r\n}\r\n\r\n.hocus\\:underline:focus {\r\n  text-decoration-line: underline;\r\n}\r\n```\r\n\r\nBut if you have a custom `hover` variant like:\r\n```css\r\n@custom-variant hover (&:hover);\r\n```\r\n\r\nThen `hocus:underline` would generate:\r\n```css\r\n.hocus\\:underline:hover, .hocus\\:underline:focus {\r\n  text-decoration-line: underline;\r\n}\r\n```\r\n\r\n### Test plan\r\n\r\n1. Existing tests pass\r\n2. Added tests with this new functionality handled\r\n3. Made sure to add a test for circular dependencies + error message\r\n4. Made sure that if you \"fix\" the circular dependency (by overriding a variant) that everything is generated as expected.\r\n\r\nFixes: https://github.com/tailwindlabs/tailwindcss/issues/18524","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18885","RelatedDescription":"Closed or merged PR \"Handle `@variant` inside `@custom-variant`\" (#18885)"},{"Id":"3384607927","IsPullRequest":false,"CreatedAt":"2025-09-05T12:17:08","Actor":"RobinMalfait","Number":"18882","RawContent":null,"Title":"Regression in extracting classes from symbol list in Clojure","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v4.1.12\n\n**Reproduction URL**\n\nhttps://github.com/tailwindlabs/tailwindcss/pull/18345#issuecomment-3248030836\n\n**Describe your issue**\n\nWe introduced a regression while fixing another Clojure issue in the Oxide candidate extractor that was released in v4.1.12. Extracting classes from a symbol list doesn't work as expected anymore.\n\n```clj\n[:div {:class '[class-1 class-2\n                class-3 class-4]}]\n```\n\nSee:\n\n- https://github.com/tailwindlabs/tailwindcss/pull/18345#issuecomment-3248030836\n- https://github.com/tailwindlabs/tailwindcss/pull/18345#issuecomment-3253403847","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18882","RelatedDescription":"Closed issue \"Regression in extracting classes from symbol list in Clojure\" (#18882)"},{"Id":"3387040149","IsPullRequest":true,"CreatedAt":"2025-09-05T12:17:07","Actor":"RobinMalfait","Number":"18888","RawContent":null,"Title":"Handle `'` syntax in ClojureScript when extracting classes","State":"closed","Body":"This PR fixes an issue where the `'` syntax in ClojureScript was not handled properly, resulting in missing extracted classes.\r\n\r\nThis PR now supports the following ClojureScript syntaxes:\r\n\r\n```cljs\r\n; Keyword\r\n(print 'text-red-500)\r\n\r\n; List\r\n(print '(flex flex-col underline))\r\n\r\n; Vector\r\n(print '[flex flex-col underline])\r\n```\r\n\r\n### Test plan\r\n\r\n1. Added regression tests\r\n2. Verified that we extract classes correctly now in various scenarios:\r\n\r\nTop is before, bottom is with this PR:\r\n\r\n<img width=\"1335\" height=\"1862\" alt=\"image\" src=\"https://github.com/user-attachments/assets/746aa073-25f8-41f8-b71c-ba83a33065aa\" />\r\n\r\n\r\nFixes: #18882 \r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18888","RelatedDescription":"Closed or merged PR \"Handle `'` syntax in ClojureScript when extracting classes\" (#18888)"},{"Id":"3386393775","IsPullRequest":true,"CreatedAt":"2025-09-05T10:42:24","Actor":"depfu[bot]","Number":"18886","RawContent":null,"Title":"Update all pnpm dependencies (2025-09-05)","State":"closed","Body":"This is your weekly update of **all** pnpm dependencies. Please take a good look at what changed and the test results before merging this pull request.\n\n### What changed?\n\n✳️ @emnapi/core (1.4.5 → 1.5.0, minor) · [Repo](https://github.com/toyobayashi/emnapi) · [Release](https://github.com/toyobayashi/emnapi/releases/tag/v1.5.0) · [Diff](https://github.com/toyobayashi/emnapi/compare/4afb0e72e28486a073e55d8fa2e00c9ea916d0f5...61628bd5e27679955f13cbff8f6573d66a5fc00c)\n\n✳️ @emnapi/runtime (1.4.5 → 1.5.0, minor) · [Repo](https://github.com/toyobayashi/emnapi) · [Release](https://github.com/toyobayashi/emnapi/releases/tag/v1.5.0) · [Diff](https://github.com/toyobayashi/emnapi/compare/4afb0e72e28486a073e55d8fa2e00c9ea916d0f5...61628bd5e27679955f13cbff8f6573d66a5fc00c)\n\n✳️ @emnapi/wasi-threads (1.0.4 → 1.1.0, minor) · [Repo](https://github.com/toyobayashi/emnapi) · [Release](https://github.com/toyobayashi/emnapi/releases/tag/v1.1.0) · [Diff](https://github.com/toyobayashi/emnapi/compare/14e3f418fda80d3eff5dd00d8310f3b662f4c09b...571f577dba78867d5403a18bec11fae9da651b04)\n\n✳️ @napi-rs/cli (3.0.0-alpha.78 → 3.1.5, minor) · [Repo](https://github.com/napi-rs/napi-rs)\n\n✳️ eslint-config-next (15.4.7 → 15.5.2, minor)\n\n✳️ @types/react-dom (19.1.7 → 19.1.9, patch) · [Repo](https://github.com/DefinitelyTyped/DefinitelyTyped)\n\n✳️ @vitejs/plugin-react (5.0.0 → 5.0.2, patch) · [Repo](https://github.com/vitejs/vite-plugin-react) · [Changelog](https://github.com/vitejs/vite-plugin-react/blob/main/packages/plugin-react/CHANGELOG.md)\n\n✳️ tslib (2.8.0 → 2.8.1, patch) · [Repo](https://github.com/Microsoft/tslib) · [Release](https://github.com/microsoft/tslib/releases/tag/v2.8.1) · [Diff](https://github.com/Microsoft/tslib/compare/ca5f7fb791f85ebf17c0102cdc632e9577b3e483...d72d6f70b36286bc3f94a3dda1e64dcb568b1370)\n\n✳️ turbo (2.5.4 → 2.5.6, patch) · [Repo](https://github.com/turborepo/turbo)\n\n\n\n\n---\n![Depfu Status](https://depfu.com/badges/edd6acd35d74c8d41cbb540c30442adf/stats.svg)\n\n[Depfu](https://depfu.com) will only send you the next scheduled PR once you merge or close this one.\n\n<details><summary>All Depfu comment commands</summary>\n<blockquote><dl>\n<dt>@​depfu refresh</dt><dd>Rebases against your default branch and redoes this update</dd>\n<dt>@​depfu recreate</dt><dd>Recreates this PR, overwriting any edits that you've made to it</dd>\n<dt>@​depfu merge</dt><dd>Merges this PR once your tests are passing and conflicts are resolved</dd>\n<dt>@​depfu cancel merge</dt><dd>Cancels automatic merging of this PR</dd>\n<dt>@​depfu close</dt><dd>Closes this PR and deletes the branch</dd>\n<dt>@​depfu reopen</dt><dd>Restores the branch and reopens this PR (if it's closed)</dd>\n</dl></blockquote>\n</details>\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18886","RelatedDescription":"Closed or merged PR \"Update all pnpm dependencies (2025-09-05)\" (#18886)"},{"Id":"3385488273","IsPullRequest":false,"CreatedAt":"2025-09-04T21:42:26","Actor":"nmihaica","Number":"18883","RawContent":null,"Title":"Monorepo issues","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nFor example: v3.4.17\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nFor example: webpack 5\n\n**What version of Node.js are you using?**\n\nFor example: v22\n\n**What browser are you using?**\n\nFor example: Chrome\n\n**What operating system are you using?**\n\nFor example: Fedora\n\n**Reproduction URL**\n\n[[A Tailwind Play link or public GitHub repo that includes a minimal reproduction of the bug. **Please do not link to your actual project**, what we need instead is a _minimal_ reproduction in a fresh project without any unnecessary code. This means it doesn't matter if your real project is private/confidential, since we want a link to a separate, isolated reproduction anyways.\n\nA reproduction is **required** when filing an issue — any issue opened without a reproduction will be closed and you'll be asked to create a new issue that includes a reproduction. We're a small team and we can't keep up with the volume of issues we receive if we need to reproduce each issue from scratch ourselves.]\n\nhttps://github.com/nmihaica/preact-shell)\n\n**Describe your issue**\n\nTailwind does warns Content is empty when building via webpack in Monorepo setting","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18883","RelatedDescription":"Closed issue \"Monorepo issues\" (#18883)"},{"Id":"3379879185","IsPullRequest":true,"CreatedAt":"2025-09-04T17:18:26","Actor":"thecrypticace","Number":"18868","RawContent":null,"Title":"Prepare v4.1.13 release","State":"closed","Body":"","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18868","RelatedDescription":"Closed or merged PR \"Prepare v4.1.13 release\" (#18868)"},{"Id":"3383189624","IsPullRequest":false,"CreatedAt":"2025-09-04T10:53:49","Actor":"nasrelasri","Number":"18879","RawContent":null,"Title":"[v4.1.12] Content scanning fails to detect utility classes in HTML files","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.1.12\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\n@tailwindcss/cli 4.1.12\n\n**What version of Node.js are you using?**\n\nv20.18.0\n\n**What browser are you using?**\n\nN/A (CSS generation issue)\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://github.com/nasrelasri/tailwind-v4-bug-reproduction\n\n**Describe your issue**\n\nTailwind CSS v4.1.12 fails to generate utility classes for colors (bg-blue-*) and padding (p-4) while grid-related classes are generated correctly. \n\nSteps to reproduce:\n1. Install Tailwind CSS v4.1.12\n2. Create HTML with mixed utility classes: grid grid-cols-3 gap-4 bg-blue-200 p-4\n3. Run: npx @tailwindcss/cli -i input.css -o output.css\n4. Check output.css\n\nExpected behavior:\nAll utility classes should be generated in the output CSS.\n\nActual behavior:\nOnly grid classes (.grid, .grid-cols-3) are generated. Missing classes: .bg-blue-200, .bg-blue-300, .bg-blue-400, .p-4, .gap-4.\n\nWorkaround:\nDowngrading to Tailwind CSS v3.4.17 generates all classes correctly with the same configuration.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18879","RelatedDescription":"Closed issue \"[v4.1.12] Content scanning fails to detect utility classes in HTML files\" (#18879)"},{"Id":"3381981998","IsPullRequest":false,"CreatedAt":"2025-09-04T09:25:12","Actor":"igdswzcd","Number":"18875","RawContent":null,"Title":"Is default border style changeable?","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nBoth 3.x and 4.x\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNo matter\n\n**What version of Node.js are you using?**\n\nNo matter\n\n**What browser are you using?**\n\nChrome\n\n**What operating system are you using?**\n\nWindows\n\n**Describe your issue**\n\n[Pull Request #116](https://github.com/tailwindlabs/tailwindcss/pull/116)\n`border-style: solid;` may introduce unintended side effects in certain contexts. For instance, when users copy content from a webpage into Microsoft Word, they may encounter unexpected visible lines—these stem from borders defined in the HTML. Specifically, some HTML-to-DOC conversion tools do not interpret a `border` with zero width and `solid` style (e.g., `border: 0 solid;`) as visually absent; instead, they render it as a visible border. While setting `border-style: none` can prevent this rendering artifact, it disrupts components relying on utility-first frameworks like Tailwind CSS, where border visibility is controlled exclusively via `border-width` utilities (which implicitly assume a default `border-style: solid`). This creates a conflict between document interoperability and component integrity. Are there established strategies or workarounds to resolve this issue?\n\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18875","RelatedDescription":"Closed issue \"Is default border style changeable?\" (#18875)"},{"Id":"3382280250","IsPullRequest":false,"CreatedAt":"2025-09-04T07:04:15","Actor":"human-coder-mj","Number":"18876","RawContent":null,"Title":"MUI Chip comopnent does not support proper tailwind CSS styling","State":"closed","Body":"- Tailwind version : `v4.1.12`\n\n- Build Tool version : `@tailwindcss/postcss@4.1.11 ; postcss@8.5.6`\n\n- Node.js version : `v22.0.0`\n\n- Browser : `Chrome`\n\n- operating system : `macOS` , `Windows`\n\n**Issue description:-**\n\nWhile using Tailwind css to provide color to the text inside the [Chip Componet](https://mui.com/material-ui/react-chip/), below mentioned are the issues that occurs.\n\n1. First Chip component is not initially accepting the tailwind css `text-[color]` property, to get it accepted we have to mark it as important eg:- `!text-yellow`\n\n2. Second while using the important notation, there is a priority issue. When using text color for light and dark mode simulataneously and marking both the text colors for light and dark mode as important, eg :-  `className='!text-fuchsia-400  dark:!text-yellow-300'` , the priority is given to color for dark mode which lets the color in dark mode to also appear in light mode.\n\n- Dark Mode\n<img width=\"428\" height=\"59\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/549559c5-0d5b-4e38-8406-a810b977d190\" />\n\n- Light Mode\n\n<img width=\"1032\" height=\"63\" alt=\"Image\" src=\"https://github.com/user-attachments/assets/05b9555f-9f0a-42c2-8241-e6bc70cc4334\" />\n\n- Code.\n```JavaScript\nimport Chip from '@mui/material/Chip';\nimport LocalOfferIcon from '@mui/icons-material/LocalOffer';\n<Chip \nlabel=\"React\"\nicon={<LocalOfferIcon/>}\nsize='small'\nvariant='outlined'\nclassName='!rounded-full !bg-transparent !text-fuchsia-400 dark:!text-yellow-300'\n/>\n```\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18876","RelatedDescription":"Closed issue \"MUI Chip comopnent does not support proper tailwind CSS styling\" (#18876)"},{"Id":"3380287264","IsPullRequest":true,"CreatedAt":"2025-09-03T15:30:55","Actor":"RobinMalfait","Number":"18872","RawContent":null,"Title":"Do not allow variants to end with `-` or `_`","State":"closed","Body":"This PR is a followup of #18867, but this time we won't allow `@custom-variant` to end with `-` or `_`.\n\nThe same reasoning applies here where Oxide doesn't pick this up but Intellisense and Tailwind CSS' core does.\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18872","RelatedDescription":"Closed or merged PR \"Do not allow variants to end with `-` or `_`\" (#18872)"},{"Id":"3380181979","IsPullRequest":false,"CreatedAt":"2025-09-03T14:52:02","Actor":"SanderFlooris","Number":"18870","RawContent":null,"Title":"Include glob path fails when path is also gitignored","State":"open","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\n`v4.1.12`\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nVite (`6.2.1`)\n\n**What version of Node.js are you using?**\n\n`v22.19.0`\n\n**What browser are you using?**\n\n`Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:142.0) Gecko/20100101 Firefox/142.0`\n\n**What operating system are you using?**\n\n`macOS Sequoia 15.6.1`\n\n**Reproduction URL**\n\nhttps://github.com/SanderFlooris/tailwind-4-gitignore-testcase\n\nInstructions on how to configure the repository and how to trigger the bug has been provided in the README.\n\n> [!NOTE]\n> This example repository uses Express.js as the back-end for simplicity, the actual project we are working on is based on Laravel. \n\n**Describe your issue**\n\nIn a project we are working on we prerender some parts of the page as static HTML files, these HTML files will then dynamically be loaded in our templates to cache sections of the webpage, without caching everything.\n\nHowever we discovered that Tailwind doesn't seem to pick up the classes properly inside of our `cms_content` directory that contains the prerendered sections, even though we manually specify in our Tailwind configuration that that directory should be scanned.\n\nAfter some digging around we figured out it was caused by the directory being gitignored, and we are unable to overwrite this. The compiler just skips over the directory entirely when we checked with `DEBUG=* yarn dev`.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18870","RelatedDescription":"Open issue \"Include glob path fails when path is also gitignored\" (#18870)"},{"Id":"3378084996","IsPullRequest":false,"CreatedAt":"2025-09-03T14:32:19","Actor":"benface","Number":"18863","RawContent":null,"Title":"`-` works as a custom variant, but `--` doesn't","State":"closed","Body":"**What version of Tailwind CSS are you using?**\n\nv4.1.12\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nTailwind Play, Vite, etc.\n\n**What version of Node.js are you using?**\n\nv24\n\n**What browser are you using?**\n\nFirefox, Safari, Chrome\n\n**What operating system are you using?**\n\nmacOS\n\n**Reproduction URL**\n\nhttps://play.tailwindcss.com/dYzm7i79CK\n\n**Describe your issue**\n\nLike the title says. Interestingly, IntelliSense seems to say that the following CSS will be generated:\n\n```css\n.--\\:bg-amber-500 {\n  @layer x-unimportant {\n    background-color: var(--color-amber-500) /* oklch(76.9% 0.188 70.08) */;\n  }\n}\n```\n\nHowever, it's not.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18863","RelatedDescription":"Closed issue \"`-` works as a custom variant, but `--` doesn't\" (#18863)"},{"Id":"3379878512","IsPullRequest":true,"CreatedAt":"2025-09-03T14:32:18","Actor":"RobinMalfait","Number":"18867","RawContent":null,"Title":"Do not allow variants to start with `-` or `_`","State":"closed","Body":"This PR fixes an issue where custom variants with just `-` in the name were allowed but weren't actually picked up by Oxide so you couldn't use them anyway.\r\n\r\nThe reason we allow `-` is for `kebab-style-variants`, which is very common, but you shouldn't use `-`, `--` or more in a variant name.\r\n\r\nIt doesn't really solve the issue (#18863), but it fixes the inconsistencies in that exist today.\r\n\r\nInconsistencies:\r\n| &nbsp; | `-:flex` | `--:flex` |\r\n| --: | :--: | :--: |\r\n| Oxide | ❌ | ❌ |\r\n| Tailwind Play | ✅ | ❌ |\r\n| Intellisense | ✅ | ✅ |\r\n\r\n- Oxide already had the correct rules setup, so this is expected\r\n- Tailwind Play uses Tailwind's core compile step, but it considers candidates that start with `--` as a CSS variable instead of a utility. This means that the `--:flex` was considered a CSS variable and skipped during compilation.\r\n- Intellisense uses the same APIs than Tailwind's core, but it didn't have the CSS variable check which resulted in the `--:flex` being \"correct\".\r\n\r\nWith this PR, the matrix looks like this now:\r\n| &nbsp; | `-:flex` | `--:flex` |\r\n| --: | :--: | :--: |\r\n| Oxide | ❌ | ❌ |\r\n| Tailwind Play | ❌ | ❌ |\r\n| Intellisense | ❌ | ❌ |\r\n\r\n\r\nThis should not be considered a breaking change because Oxide didn't pick up candidates with variants that start with a `-`. CSS for these candidates was never generated before.\r\n\r\nCloses: #18863\r\n\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18867","RelatedDescription":"Closed or merged PR \"Do not allow variants to start with `-` or `_`\" (#18867)"},{"Id":"3379978133","IsPullRequest":true,"CreatedAt":"2025-09-03T14:07:32","Actor":"RobinMalfait","Number":"18869","RawContent":null,"Title":"Consider variants starting with `@-` to be invalid (e.g. `@-2xl:flex`)","State":"closed","Body":"This PR fixes a small parsing issue where variants such as `@-2xl:flex` would parse, but were handled as-if they were `@2xl:flex` instead.\r\n\r\nNoticed this while working on: #18867 \r\n\r\nThis is because when we parse normal variants like `data-foo` then we want to have a `data` root and a `foo` value, not a `-foo` value.\r\n\r\nIf you are now using `@-2xl:flex`, then no CSS will be generated for this anymore. If you were relying on this for some reason, you should use `@2xl:flex` instead.\r\n\r\n## Test plan\r\n\r\nBefore:\r\n\r\n<img width=\"862\" height=\"586\" alt=\"image\" src=\"https://github.com/user-attachments/assets/b5993ca6-f907-49af-b5bd-b7206c8300e1\" />\r\n\r\nAfter:\r\n\r\n<img width=\"862\" height=\"586\" alt=\"image\" src=\"https://github.com/user-attachments/assets/351f45e4-4cd3-451c-ae2a-c52c3e770629\" />\r\n","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18869","RelatedDescription":"Closed or merged PR \"Consider variants starting with `@-` to be invalid (e.g. `@-2xl:flex`)\" (#18869)"},{"Id":"3378747375","IsPullRequest":false,"CreatedAt":"2025-09-03T08:47:40","Actor":"cosbgn","Number":"18866","RawContent":null,"Title":"Tailwind-vite removes CSS styles (preflight) when on shadowDOM","State":"closed","Body":"You can reproduce the bug using this repo: https://github.com/cosbgn/tailwind-shadow\n\n1. Run `npm run dev` to build the script\n2. Run `npm run serve` to preview the bug on port :3000\n\nIf you set `useShadow` in `sdk.js` to either `true` or `false` some of the styles get missing, things like shadows, border, etc. It's a big issue because my widget relies on the shadowdom and I never know what style will work and which won't.","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18866","RelatedDescription":"Closed issue \"Tailwind-vite removes CSS styles (preflight) when on shadowDOM\" (#18866)"},{"Id":"3375805399","IsPullRequest":false,"CreatedAt":"2025-09-02T12:50:02","Actor":"spatulatom","Number":"18858","RawContent":null,"Title":"tailwindcss.com homepage fails WCAG for color contrasts","State":"closed","Body":"<!-- Please provide all of the information requested below. We're a small team and without all of this information it's not possible for us to help and your bug report will be closed. -->\n\n**What version of Tailwind CSS are you using?**\n\nv4.0.6 (the version used on the Tailwind CSS documentation site)\n\n**What build tool (or framework if it abstracts the build tool) are you using?**\n\nNext.js 15.3.4 (as indicated in the terminal output when running the site locally)\n\n**What version of Node.js are you using?**\n\nv20.0.0\n\n**What browser are you using?**\n\nChrome with Axe DevTools extension for accessibility testing\n\n**What operating system are you using?**\n\nWindows\n\n**Reproduction URL**\n\nhttps://tailwindcss.com/ (The issue appears on the official documentation site itself)\n\n**Describe your issue**\n\nThe Tailwind CSS documentation site has multiple color contrast issues that fail WCAG 2.1 accessibility standards as detected by the Axe DevTools browser extension. Specifically:\n\n1. The utility class indicators throughout the homepage (elements with `aria-hidden=\"true\"` showing Tailwind class names) have insufficient color contrast:\n   - In light mode: Using `text-black/20` (black at 20% opacity) which has a contrast ratio of approximately 2:1\n   - In dark mode: Using `dark:text-white/25` (white at 25% opacity) which has a contrast ratio of approximately 3:1\n\nBoth fail the WCAG AA standard requiring a minimum contrast ratio of 4.5:1 for normal text (or 3:1 for large text).\n\nWhile these elements are correctly marked with `aria-hidden=\"true\"` to hide them from screen readers, they are still visible to users with low vision or color vision deficiencies who aren't using screen readers. Therefore, they should still meet contrast requirements.\n\nIn total, Axe reports 26 failing contrast elements in dark mode and 30 in light mode, mostly related to these utility class indicators.\n\n**Example from `hero.tsx`:**\n```tsx\n<div\n  aria-hidden=\"true\"\n  className=\"flex h-16 items-end px-2 font-mono text-xs/6 whitespace-pre text-black/20 max-sm:px-4 sm:h-24 dark:text-white/25\"\n>\n  <span className=\"hidden max-sm:inline\">text-4xl </span>\n  <span className=\"hidden sm:max-md:inline\">text-5xl </span>\n  <span className=\"hidden lg:max-xl:inline\">text-6xl </span>\n  <span className=\"hidden xl:inline\">text-8xl </span>\n  <span className=\"inline dark:hidden\">text-gray-950 </span>\n  <span className=\"hidden dark:inline\">text-white </span>tracking-tighter{\" \"}\n  <span className=\"max-sm:hidden\">text-balance</span>\n</div>\n\nSuggested fix: Increase the opacity of these indicator elements to meet WCAG AA standards:\n\nFor light mode: Change text-black/20 to text-black/55 (contrast ratio ~4.5:1)\nFor dark mode: Change dark:text-white/25 to dark:text-white/50 (contrast ratio ~5.3:1)\nThis would ensure the site is accessible to users with visual impairments while still maintaining the subtle, secondary visual nature of these indicators.\n\nNote: The fact that these elements have aria-hidden=\"true\" only addresses screen reader accessibility but doesn't exempt them from visual accessibility requirements like color contrast.\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18858","RelatedDescription":"Closed issue \"tailwindcss.com homepage fails WCAG for color contrasts\" (#18858)"},{"Id":"3374701393","IsPullRequest":false,"CreatedAt":"2025-09-02T09:29:50","Actor":"Faraz1995","Number":"18854","RawContent":null,"Title":"Tailwind CSS v4 styles not applied in Android 10/11","State":"closed","Body":"hi\ni am using tailwind 4 , vite, tanstack router, i am making a webview loading a url, url looks fine on chrome, but on android device with version 10/11 , the whole style did not load, but when i roll back to tailwind 3, everything is fine!\n\nExpected behavior:\nTailwind v4 should be able to generate compatible CSS when targeting older browsers (e.g., Android 10/11 WebView) using Browserslist.\n\nstyles.css\n`\n@supports not (color: rgb(0 0 0 / 0.5)) {\n  body {\n    background: black !important;\n  }\n}\n\n@import 'tailwindcss';\n\n`\n\npackage.json\n\n`\n{\n  \"dependencies\": {\n    \"tailwindcss\": \"^4.0.6\",\n    \"@tailwindcss/vite\": \"^4.0.6\",\n    \"@tailwindcss/postcss\": \"^4.1.12\",\n    \"vite\": \"^6.1.0\"\n  },\n  \"browserslist\": [\n    \"defaults\",\n    \"Android >= 5\",\n    \"iOS >= 12\"\n  ]\n}\n`\n\nvite.config.js\n\n`import tailwindcss from '@tailwindcss/vite'\nimport viteReact from '@vitejs/plugin-react'\nimport { defineConfig } from 'vite'\nimport autoprefixer from 'autoprefixer'\nimport postcssPresetEnv from 'postcss-preset-env'\nimport tanstackRouter from '@tanstack/router-plugin/vite'\n\nexport default defineConfig({\n  css: {\n    postcss: {\n      plugins: [\n        autoprefixer(),\n        postcssPresetEnv({\n          stage: 2,\n          browsers: ['Android >= 8'],\n          features: {\n            'custom-properties': true,\n          },\n        }),\n      ],\n    },\n  },\n  plugins: [\n    tanstackRouter({ target: 'react', autoCodeSplitting: true }),\n    viteReact(),\n    tailwindcss(),\n  ],\n})\n`\n\nand .broswerslistrc\n\n`defaults\nAndroid >= 5\niOS >= 12\n`\n\npostcss.config.mjs\n`export default {\n  plugins: {\n    '@tailwindcss/postcss': {},\n  },\n}\n`\n\nany idea or solution except rolling back to v3?\n","Url":"https://github.com/tailwindlabs/tailwindcss/issues/18854","RelatedDescription":"Closed issue \"Tailwind CSS v4 styles not applied in Android 10/11\" (#18854)"},{"Id":"3374738143","IsPullRequest":true,"CreatedAt":"2025-09-02T09:26:06","Actor":"mischnic","Number":"18855","RawContent":null,"Title":"Add '.vercel' to ignored content directories","State":"closed","Body":"Just like `.next` is ignored, ignore `.vercel` as well.","Url":"https://github.com/tailwindlabs/tailwindcss/pull/18855","RelatedDescription":"Closed or merged PR \"Add '.vercel' to ignored content directories\" (#18855)"}],"ResultType":"GitHubIssue"}},"RunOn":"2025-09-10T03:30:26.3965479Z","RunDurationInMilliseconds":566}